00:00 - hello guys welcome back to the new video
00:02 - wherein we are learning the data
00:05 - structures and algorithms in Java so in
00:08 - today's topic we are learning arrays in
00:10 - Java so let's get started so normally
00:13 - arrays is a collection of the similar
00:16 - types of element which has a contiguous
00:18 - memory locations so what do you mean by
00:21 - contagious memory locations so it's
00:24 - nothing but all the elements are located
00:26 - next to each other in the same memory
00:28 - space that is the consecutive blocks of
00:31 - the memory as allocated to the user for
00:34 - the processes uh so there are many types
00:37 - of memory location memory storage types
00:41 - such as hip memories are also there so
00:44 - array uses the contagious memory
00:46 - location
00:47 - so next point is array uses array which
00:51 - is the zero based indexing means at the
00:54 - element that is that stores at the first
00:57 - in the array
00:59 - is is stored at the
01:02 - zeroth index and the next element will
01:04 - store at the one then second
01:06 - and this series will go I go on till end
01:10 - n is the number of number of elements
01:12 - that you declare that the array will
01:15 - store
01:16 - okay
01:17 - so unlike C C plus plus we can get the
01:20 - length of the array using the length
01:22 - member so in C plus plus we use the size
01:26 - of operator which which gives our
01:28 - returns us the length of the array means
01:31 - then how many number of the integers
01:34 - store in that array like that in similar
01:37 - way there is a length member in Java
01:39 - which Returns the same the length of the
01:41 - array which we are using so typically
01:44 - there are two types of arrays in Java so
01:47 - first one is user defined and second one
01:49 - is using built-in class
01:51 - so in this video typically we are going
01:54 - to see the user defined one and the
01:57 - built-in building class we can see in in
01:59 - the next upcoming videos wherein there
02:02 - is not too much work that we we are
02:05 - going to do we just uh import the class
02:08 - from the Lang type Java package blank
02:11 - package which is uh predefined in the
02:14 - Java Java and we just make an object of
02:17 - that class and we can use the predefined
02:19 - methods of that class
02:21 - okay moving Aid Java provides the
02:25 - feature of anonymous array which is not
02:27 - available there in C plus plus so we
02:30 - will see what is an anonymous arrays so
02:34 - Java supports the feature of anonymous
02:35 - arrays so so as you you don't need to
02:38 - declare the array while passing an added
02:41 - to the method so think of a situation
02:43 - where where you have created one method
02:46 - and the method method requires an array
02:49 - as a parameter so where where when you
02:52 - when you are calling that
02:54 - method in the main method so instead of
02:57 - calling instead of declaring the new
03:00 - array and passing the value to that
03:02 - array you can just create create a new
03:05 - int and just pass the values that you
03:08 - want to pass through the array that is
03:10 - known as the anonymous array which c
03:12 - plus c c plus plus language is like that
03:14 - don't provide these features
03:16 - okay so moving on next we have the types
03:19 - of array so there are technical two
03:22 - types of arrays single dimensional and
03:24 - multi-dimensional okay so let's see uh
03:28 - each of them one one by one
03:30 - so single dimensional array the syntax
03:34 - is very similar to our other other
03:38 - programming languages so wherein we have
03:41 - first declare data type like integer and
03:45 - then two square brackets and array or we
03:49 - can declare it this in three different
03:51 - ways as you can see here so
03:54 - first of all let's write some basic code
03:58 - of that single dimensional array so I'm
04:02 - here and let's declare one public class
04:07 - Main
04:09 - okay and I will write the main method
04:13 - that is public
04:16 - static
04:18 - void Main
04:22 - string
04:24 - Alex
04:27 - okay so first of all let's
04:31 - declare and initiate initialize one
04:34 - array so for that we have we can we can
04:37 - do this int
04:39 - that is that that means the direct array
04:42 - is going to hold the integer types of
04:44 - values let's name our array as a
04:48 - okay equals to
04:51 - new
04:52 - integer
04:56 - and this is the
04:58 - five
04:59 - so this five is nothing but the size of
05:02 - the uh how many integer types of values
05:04 - that added is going to hold okay so here
05:08 - I written five that means the array is
05:10 - going to hold the five values in it okay
05:13 - so let me just go and
05:16 - quickly
05:20 - okay array at index one
05:23 - it's gonna hold twenty like this
05:27 - area index to
05:31 - hold 30
05:34 - and then index three
05:37 - is going to hold for t
05:40 - likewise array at index code
05:45 - foreign
05:47 - sorry 50. okay so here you can see uh my
05:52 - array length is 5 and I have declared
05:54 - the five elements in it so
05:58 - let me just print it on the console so
06:00 - for the printing of an print
06:02 - of an array on the console we just use a
06:05 - for Loop
06:06 - wherein our for Loop will start from int
06:10 - I is equal to zero and it will go until
06:14 - I less than a DOT length
06:18 - foreign
06:21 - and each time I am incrementing the
06:24 - value of the I
06:25 - so this dot length function you can
06:30 - see here I have told you
06:34 - the there's one
06:36 - method named as length of the length
06:39 - member which will return the length of
06:42 - the array so here we are using that same
06:44 - method
06:46 - so quickly just I will system
06:52 - start out Dot
06:55 - print Ln
06:58 - is
07:02 - Okay so
07:05 - quickly just revise it we have declared
07:07 - one array and initialize and we are
07:10 - given the all the values that the
07:14 - oregano store at that index and then we
07:17 - have used the for Loop where we are
07:20 - traversing the array and printing the
07:22 - elements that are stored at the 0 to 5th
07:26 - fourth element fourth index of that
07:28 - array okay so I'm gonna run this
07:32 - let's see so here you can see 10 20 30
07:36 - 40 and 50s got printed on the console
07:39 - because at the first at first is value
07:42 - is 0 and array at eyes I stored 10 so
07:46 - that's got printed here and each time
07:48 - the for Loops runs in Elder the I got
07:51 - incremented I write one added to error
07:53 - three I added four got printed
07:55 - so this is the basics basic program of
07:59 - array
08:00 - so this so moving next we have
08:05 - multi-dimensional array so here you can
08:08 - see the multi-dimensional array
08:12 - how we can declare that array okay so
08:15 - without wasting the time let's
08:18 - code it out
08:20 - Okay so
08:22 - I'm gonna come here and I will comment
08:25 - it out this code
08:27 - at next I will again declare one array
08:31 - but this time I am declaring the
08:33 - multi-dimensional array that means I
08:35 - have to use two pair of square brackets
08:39 - equals to
08:42 - let me just pass the value
09:01 - okay so here I have declared one array
09:04 - how much which is multi-dimensional
09:06 - array and I pass values to that
09:08 - okay so let us check how we can print
09:12 - the multi-dimension array like we have
09:15 - printed here the single Dimension array
09:16 - okay so for that we require two
09:19 - uh for Loops first one
09:22 - is run from I is equals to 0 to I less
09:28 - than
09:29 - 3
09:30 - and each time it will it rate I plus
09:33 - plus okay so inside this we have we are
09:37 - going to use another for Loop which is
09:40 - going to learn from i j is equal to 0
09:43 - J is less than three
09:47 - and each time we are incrementing the
09:49 - value of the J
09:50 - okay
09:51 - so in this we are going to print system
09:56 - dot out
09:58 - Dot println
10:01 - array add index I
10:05 - and index J
10:09 - plus one space
10:12 - after
10:13 - each number got printed on the console
10:16 - and after this I will just write
10:20 - system dot out Dot
10:24 - print Ln
10:28 - okay
10:30 - so if I run this now
10:34 - we'll see what happens
10:37 - so here you can see one two three two
10:40 - four five four five four four five is
10:42 - got printed so let's check how it got me
10:45 - how is it's printing actually so when we
10:48 - come for the first for Loop the value of
10:50 - the I is 0 and it when it render for the
10:53 - second for Loop the value of J is 0 and
10:55 - here when we enter and we pass the uh
10:58 - array array as array of zero zero zero
11:03 - so what is present at array 0 0 this is
11:06 - the element which is present so this
11:08 - this got printed and when when we go uh
11:11 - again here in inner for Loop where JJs
11:15 - value is now 1 okay and eyes value is
11:18 - zero so again we are passing wherein G
11:21 - is value is zero and but this time JS
11:23 - value is one so what it becomes array of
11:26 - 0 1 so at position error of 0 1 2 is
11:31 - present so 2 is got printed similarly
11:33 - this for Loop will run uh one time again
11:36 - when J is 3 this for Loop gets
11:39 - terminated in a for Loop and it go
11:41 - outside for Loop where I plus plus is
11:43 - done and is value is now 1 again it
11:46 - enters the for Loop whereas in change
11:48 - value is 0 and this time we are going to
11:51 - get those values as I array of 1 0
11:55 - wherein we get this values
11:58 - similarly we are printing all those
12:00 - values
12:01 - so this is the this is how we can
12:04 - implement the multi-dimensional arrays
12:06 - in Java so
12:07 - there are many ways many practical uses
12:12 - of this using arrays in Java let's
12:15 - suppose think think about a scenario
12:17 - where you have 100 students in class and
12:21 - you have to store all the data of the
12:24 - student uh let's suppose marks the
12:27 - students got obtained the marks in
12:29 - mathematics
12:30 - so you can't just declare a one one
12:34 - variable one variable for each student
12:37 - so in this scenario we we can use an
12:40 - array wherein we we just declare one
12:43 - array of mathematics marks and we will
12:45 - just pass those values according to the
12:48 - students roll number and which got
12:50 - printed and stored and whenever we want
12:53 - we can retrieve those information or the
12:56 - values let's suppose I want to know the
12:59 - marks or marks obtained by the students
13:01 - whose roll number is 8 in mathematics so
13:04 - I can pass the array name and pass the
13:07 - parameter as a 8 7 sorry because the
13:10 - array index in short form 0 and I will
13:12 - get the marks which is of 10 by the
13:14 - student whose role number is 8. so these
13:17 - are some real life scenarios where
13:18 - wherein we are using arrays in Java so
13:22 - you can go to the websites like Geeks
13:25 - for gigs where they have the practice
13:27 - portal wherein you can just sort those
13:31 - uh field you can apply the filter of
13:34 - arrays and you can set the difficulty
13:36 - level and do the do the practice for the
13:38 - coding I will be sharing on all the
13:41 - required resources and the references
13:43 - you will require to learn arrays in Java
13:46 - in the description box of the video
13:48 - so thank you so much guys I will see you
13:51 - in the next week next lecture