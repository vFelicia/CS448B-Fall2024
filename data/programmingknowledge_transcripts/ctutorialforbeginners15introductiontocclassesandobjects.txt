00:01 - hello guys welcome once again in this
00:03 - video I will teach you what is a class
00:07 - and how you can declare classes and how
00:10 - you can use classes in C so first of all
00:14 - what is a Class A Class is a collection
00:18 - of related data and method which
00:21 - performs some task for example you can
00:25 - create a class of book and you can
00:29 - perform
00:30 - uh the task like print book or you can
00:34 - have the variable in that class like
00:37 - book ID book author or book name and
00:44 - other example can be you can create a
00:47 - class
00:49 - to know the volume of a box you can uh
00:54 - declare length breadth and width of the
00:58 - box and you can uh uh
01:00 - calculate the volume of the Box using a
01:03 - class so a class contains a function of
01:09 - related data right so when you use this
01:13 - classes it helps you to visualize the
01:16 - complex problem efficiently and
01:21 - effectively so let's see how we can
01:24 - declare classes in cop and how we can
01:28 - use them so so for example we have been
01:32 - seeing this uh code from the starting
01:36 - and this is also a class class which has
01:41 - the keyword class and we have the class
01:45 - name example one and we have the main
01:48 - method inside a class which is a public
01:50 - method okay so for creating a class you
01:55 - can
01:57 - just give the name
02:00 - class which is a class keyword which
02:03 - recognizes that it's a class and then
02:05 - you give the name of the class so name
02:08 - of the class generally just take it as a
02:12 - convention start with uh capital letter
02:16 - so for example I have a class called
02:19 - box and then class
02:24 - will start with and end with these curly
02:28 - braces okay
02:30 - and whatever you write inside these
02:33 - classes is the member functions or
02:37 - member methods or and member variables
02:40 - of this box class
02:43 - okay so let's declare the member
02:46 - variables in class so member variable
02:50 - you can declare with exess specifier
02:54 - access specifier can be of three types
02:57 - public private and protect
03:00 - for now we are using public and public
03:03 - means you can use the members of the
03:06 - class in other classes also okay so
03:09 - let's declare a public variable I will
03:12 - write
03:15 - public
03:16 - [Music]
03:17 - double
03:19 - height comma length comma width okay so
03:26 - I have declared three variables which
03:28 - are public
03:30 - this is called the excess specifier and
03:33 - we have made this public exess
03:36 - specifier and we have three variables
03:40 - length height and width or we can say
03:46 - length length breadth and
03:51 - height okay and these are the three
03:56 - variables we we have declared and
03:58 - suppose we want to calculate the volume
04:01 - of this box so we can declare a member
04:05 - method of the class like this you can
04:08 - start the member method like uh method
04:12 - declaration we have uh discussed earlier
04:14 - in the previous videos you have xess
04:17 - specifier which is
04:19 - public and then you have the return type
04:22 - for example this is uh returning
04:28 - double okay and
04:31 - then you have the name of the method
04:36 - which
04:36 - is volume okay and then you have these
04:41 - curly bres where you can write the code
04:45 - right and let's say this uh method takes
04:48 - three
04:50 - parameter
04:52 - double length
04:56 - comma
04:58 - double
05:02 - double
05:04 - bread
05:06 - and double height okay
05:12 - so
05:15 - now we can calculate Len uh volume of
05:18 - this box
05:21 - by
05:22 - returning length or in bracket we can
05:27 - write length multip by bre multiplied
05:34 - by multiplied by height
05:37 - okay so this will give you the volume of
05:40 - this box okay now this these are the
05:45 - member variables and these are the
05:47 - member functions now how can you use
05:52 - this class in your main method which is
05:55 - in other class which is the main class
05:59 - which we are using and here we have the
06:02 - main function and we want to call this
06:05 - class inside our main function how we
06:07 - can do it this also you know I think you
06:11 - just need to give the name of the glass
06:14 - which is
06:15 - box and then you give the instance or
06:19 - object of the class instance and object
06:21 - are used interchangeably so they are the
06:25 - same thing okay so I have for example I
06:28 - declare box one is equal to
06:33 - new
06:35 - box
06:38 - okay so this I have created the instance
06:41 - of the
06:42 - class and how we can use it you can just
06:46 - copy this box variable and you can
06:49 - assign for example you want to assign
06:52 - the value of length breadth and height
06:54 - what you can do is you just use box one
06:58 - dot length is equal to 45 for
07:03 - example in the same
07:06 - way
07:07 - box 1 dot bread is equal to
07:13 - 10
07:15 - and box one
07:20 - dot height is equal to 20 okay this is
07:26 - how you can initialize values in the
07:31 - box classes so this L B and H belongs to
07:35 - this box class right and when whenever
07:38 - you give this dot by intelligence you
07:41 - can see all the members of the class
07:44 - breadth height and length and you can
07:47 - also see this volume function you have
07:50 - created here right now you want to
07:54 - calculate the volume right so what we
07:57 - can do is we can write
08:03 - console
08:06 - sorry console dot right
08:10 - line and you can
08:16 - say volume of box
08:21 - one is and in the placeholder you can
08:25 - write zero and you can call this
08:28 - function which is which you need to
08:31 - First Take the instance of this class
08:35 - right so just take box one dot
08:41 - volume and it recognizes this
08:44 - automatically okay so this volume is
08:48 - this volume and we are calling this
08:51 - function from this box instance we have
08:54 - created now we can pass
08:58 - length
09:00 - comma
09:06 - breadth
09:07 - comma
09:10 - height okay and this will return the
09:14 - volume of the box one I will run this
09:19 - program and it says this has error
09:22 - because I haven't given the semicolon
09:26 - here so I will give the semicolon and
09:29 - and now I will run the
09:31 - program and you can see the volume of
09:34 - the box is this right
09:38 - but generally it's
09:41 - uh for example whenever you assign you
09:45 - already assigned these values to your
09:49 - length breadth and height so you don't
09:51 - even need these
09:53 - parameters right what you can do is you
09:57 - can use these parameters to calculate
10:00 - the volume of your box right so how you
10:05 - can do
10:06 - it we have the same par variable length
10:10 - breadth and height and we are calling
10:13 - the same variable Here length bread and
10:15 - height so you don't even need to give
10:17 - the parameter here and to recognize that
10:23 - this is let's
10:25 - say I was taking these parameter so to
10:30 - recognize that this L is this l
10:35 - or this L is this L we need to use a
10:41 - keyword called this okay so
10:46 - otherwise this will not you will not be
10:48 - able to recognize it it
10:51 - it is little bit confusing that what
10:55 - this L is this L is this one or this l
10:59 - is this one right so whenever you use
11:02 - this
11:03 - keyword this dot your
11:07 - length this indicates that this is a
11:12 - member of the class this is indirectly
11:16 - pointing to the class and now you can
11:19 - definitely say that this DOL is the
11:23 - member variable of the class and not
11:26 - this one okay so just just always try to
11:30 - use this keyword whenever you use member
11:34 - variables in your member method this dot
11:38 - breadth and this dot height okay and now
11:42 - you don't even need to give the
11:45 - parameters your volume will be
11:48 - calculated using these parameters okay
11:51 - because you have initialized these
11:53 - parameter like this and once again when
11:55 - you run the program it will give you the
11:57 - same result
12:00 - now you can create multiple instance of
12:03 - the class so this is the one instance of
12:07 - a class now suppose you want to
12:09 - calculate the volume of the box two what
12:12 - you can do is just copy it this code and
12:16 - paste it down
12:19 - so and you need to give the different
12:22 - name this will be
12:27 - box
12:31 - two and I will just change this instance
12:34 - of box one by box two okay so now you
12:39 - have the box two instance and here you
12:42 - can provide some other length breadth
12:47 - and height so it's not that you can only
12:52 - create one instance of a class you can
12:54 - create multiple instance of a class and
12:57 - each
12:59 - instance of a class will have its own
13:03 - member variable and its own member
13:06 - function so this have this all this
13:09 - instance Al also have its own length
13:12 - breadth and height and this instance box
13:14 - two also have this length breadth and
13:17 - height and volume okay and now when you
13:20 - run the program it will give you the
13:22 - result for both
13:24 - boxes box one and box two here should be
13:28 - box two
13:29 - so it will give you a clear picture so
13:33 - it will give you the volume of box one
13:36 - and box two so you can create the
13:39 - instance of class to calculate different
13:43 - uh a different volumes of the boxes
13:48 - right so this is one example how you can
13:51 - declare a class what is this access
13:54 - modifier and how you can use classes in
13:58 - your main method right I hope you have
14:01 - understood the main basic concept of
14:04 - classes in the next video also I will
14:07 - continue with classes and I will tell
14:09 - you something more about classes so stay
14:13 - tuned and please wait comment and
14:14 - subscribe and bye for now