00:00 - hello guys welcome to the next video on
00:02 - MongoDB database tutorial for beginners
00:04 - in this video we will see how and why we
00:07 - use indexing in MongoDB so first of all
00:11 - what are indexes indexes are the special
00:15 - data structure that stores a small
00:18 - portion of data set in the easy to pass
00:22 - me now why we use indexes now indexes
00:27 - supports the efficient resolution of
00:30 - queries without indexes if you are
00:33 - MongoDB database is really large for
00:36 - example it has ten million documents and
00:39 - you need to find one of the documents
00:42 - it's really inefficient to find one
00:45 - document out of 10 million or you know
00:48 - millions and millions of data now
00:51 - indexes make it easy to you know parse
00:56 - this data if you want to use large
01:00 - database now how to use indexes let's
01:05 - see so first of all what I have done is
01:08 - if you can see here I have created a
01:12 - temporary database called temp and using
01:15 - this for loop I have inserted 10 million
01:19 - document in this database now to make
01:24 - this database it will take some time to
01:26 - insert these 10 million you know
01:29 - documents that's why I have already you
01:31 - know issued this command which already
01:34 - created 10 million data for us now for
01:38 - this video I'm going to use the normal
01:41 - windows command prompt to see our result
01:44 - better so I have opened the empty
01:47 - command prompt and I'm going to just
01:49 - give long go here and we are switched to
01:53 - this shell and then we will switch to
01:58 - our temp database so just right you
02:00 - stamp then press ENTER switch to temp
02:04 - and then let's print out the documents
02:08 - first how these document looks so just
02:12 - give DB dot
02:14 - posts posts is the collection name in my
02:17 - case you can see here right so this is
02:20 - the post collection dot find and then
02:25 - these brackets and press enter and what
02:28 - it does is it's going to print the top
02:31 - result for example to top 20 results and
02:35 - it tell you to type I T for printing so
02:40 - it's not going to print all the
02:42 - 10-million result using this command
02:44 - line that's why I'm using this otherwise
02:47 - if I give this command here it will be
02:50 - really slow and the chef will try to
02:54 - fetch all the 10 million documents which
02:57 - we don't want right now right so now we
03:02 - have 10 million documents so let's try
03:06 - to find something and let's see how much
03:09 - time it takes so I'm going to give the
03:12 - same command and this time I'm going to
03:15 - give some criteria here so for example
03:19 - student I T we want to search for for
03:22 - example student ID thousand okay and
03:25 - let's see how much time it takes so I'm
03:28 - going to press ENTER and you see it
03:32 - takes time time and still searching and
03:35 - it has searched with this result which
03:38 - is thousand but it takes some time about
03:41 - two seconds or as few seconds right
03:44 - that's why we need indexing so whenever
03:47 - we you know create indexing for some
03:51 - elements of a document then it's going
03:54 - to search for this document faster what
03:58 - way of searching is is you can see if
04:01 - you give find one command here so
04:04 - instead of fine you just give find one
04:06 - note this part like this find one and
04:09 - press Enter
04:10 - it finds it immediately because what
04:14 - happens in fine one case is is going to
04:17 - search for the student whose ID is
04:20 - thousand and at the time it's search or
04:23 - it finds this ID it immediately exits
04:27 - but in the case of find it's going to
04:29 - find all the document in all the
04:31 - document which is matching student ID
04:34 - are you know ten thousand so it's going
04:36 - to see in all the ten million result for
04:41 - this student ID thousand so let's create
04:46 - by indexing and let's see how fast this
04:49 - result becomes so to create an index for
04:52 - a document what you can do is you can
04:55 - just give the command DB and then the
04:59 - collection name which is pose and then
05:02 - you give insure index command so just
05:06 - write dot en s you ar e insure index
05:12 - okay and then in round brackets you just
05:15 - give the key value pair so just give
05:18 - these curly brackets and in the double
05:21 - quotes for example you give a student ID
05:24 - as your key so just give student ID here
05:29 - and then just give coolin what okay so
05:33 - it's going to do the indexing for this
05:36 - element in all the documents and now we
05:40 - are going to execute it so press enter
05:41 - and you see it takes some time to create
05:45 - the indexing of this and after this
05:48 - indexing is created it will become
05:50 - really fast when you want to search for
05:53 - the same data again okay so if you do
05:58 - this kind of indexing it will be really
06:01 - fast and efficient to find your data
06:04 - that's why we use indexing so now
06:07 - indexing of our documents are done and
06:11 - let's find this student ID once again so
06:15 - I'm going to give this command DB post
06:17 - dot find for the student by the thousand
06:20 - let's give this time ten thousand or a
06:24 - hundred thousand for example and let's
06:26 - search for it so I'm going to press
06:29 - Enter and immediately finds this
06:32 - document so in case of this after
06:37 - creating the indexing it becomes really
06:40 - fast
06:41 - search your document based upon the
06:43 - index you have defined but be careful
06:46 - while you're defining the index you
06:48 - don't want to create the index for every
06:50 - field you may want to create the index
06:53 - where your IDs are unique for examples
06:57 - for example in my case the student ID is
07:00 - unique in this case so I have provided
07:03 - this index so you may want to restrict
07:07 - yourself while creating the indexes so
07:11 - in this way you can create the index now
07:14 - in order to remove our index how you can
07:16 - remove my index so in order to remove an
07:18 - index what you can do is you can give
07:21 - the same command and instead of ensure
07:24 - index you can just say drop index so
07:27 - just write drop index okay and it's
07:30 - going to drop your index so I'm going to
07:33 - press ENTER and it says okay and once
07:36 - again I'm going to find this student and
07:40 - press ENTER now you see it takes time
07:43 - few seconds and after searching for a
07:45 - few seconds it will give the result so
07:48 - in this way you can use indexes in
07:50 - MongoDB I hope you enjoyed this video
07:52 - please rate and subscribe and