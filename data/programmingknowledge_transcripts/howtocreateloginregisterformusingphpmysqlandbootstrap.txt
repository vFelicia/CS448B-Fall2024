00:00 - hey guys what's going on welcome to
00:02 - programming knowledge and into this
00:04 - lecture we're going to talk about how to
00:06 - create user registration for using your
00:09 - PHP and in this course we learn how to
00:15 - create this particular registration so
00:18 - we have the first name last name email
00:19 - address and phone number and of course
00:22 - the last one password so the
00:25 - technologies that we're going to use are
00:27 - the following PHP MySQL we're gonna use
00:32 - the bootstrap for the front end of our
00:35 - user registration form and of course
00:39 - we're gonna use the jQuery so let's go
00:42 - ahead and create our new project let us
00:46 - navigate to our localhost directory and
00:55 - create a new directory that will hold
00:58 - all the files necessary for our project
01:00 - so new folder and let's name it user
01:04 - accounts and then inside this particular
01:11 - folder we're going to define few files
01:15 - for our project so let's define the
01:19 - index dot PHP okay change extension yes
01:27 - and also let's define config dot PHP and
01:36 - also another one for our registration
01:39 - form so registration that PHP so these
01:45 - files will be vital for our project
01:48 - config is for the configuration for our
01:51 - database connection the index dot PHP
01:55 - will be displaying all the users
01:58 - registered and of course again the
02:02 - registration that PHP where in which our
02:04 - form or user registration form will be
02:07 - displayed or located so now that we have
02:10 - the basic structure of our project let's
02:13 - go ahead and
02:14 - registration at PHP to create our user
02:18 - registration form okay so now open up
02:23 - the registration net PHP and we have an
02:26 - empty file so all we have to do is
02:28 - define the HTML structure for this one
02:31 - so HTML and if you're using sublime text
02:37 - you can just type in HTML and press tab
02:40 - in your keyboard okay so the title for
02:44 - this one is user registration in PHP so
02:53 - for now let's define our user
02:55 - registration form so we're just going to
02:58 - define a very basic very basic user
03:02 - registration form and later on we'll
03:05 - improve the front-end by using the
03:09 - bootstrap library so let's start with a
03:14 - div and inside this div let's define the
03:17 - form and of course inside this form we
03:21 - can define a dip for our container and
03:26 - let's not forget to set the action for
03:28 - our form which is action and for now
03:33 - let's use the registration that page and
03:37 - method let's use post method so under
03:42 - the container div let's define h1 and it
03:48 - should say registration okay and a
03:55 - paragraph that says fill up fill up the
04:00 - form with correct values think after
04:06 - that one let's define an input with the
04:10 - input a keyword with the type tax and
04:15 - for the name let's make it or let's name
04:20 - it as first name
04:23 - and of course let's define the label for
04:32 - this one so label label for first thing
04:42 - so it should be hold with the keyword
04:47 - first name of course this first name
04:55 - should be required after that we could
04:59 - just copy and paste this line so label
05:03 - for first name and input text with a
05:06 - type or with the name first name
05:08 - so let's paste one for our last name for
05:13 - our email address for our phone number
05:16 - and for our password okay
05:20 - so let's change this into last name this
05:25 - to last name and of course the name
05:29 - should be last name also this one is for
05:37 - email address so email and email pretty
05:47 - name or for the name of the input and
05:52 - phone number phone number and also the
06:02 - label for the phone number lastly is the
06:08 - password so password and password for
06:16 - the name and label for a password so
06:21 - let's change this input type into of
06:24 - course we're using the password and of
06:26 - course we're using email for this field
06:31 - for email address so if we're done with
06:35 - that
06:36 - let's check our registration that PHP
06:39 - file in our browser so go on with our
06:42 - browser and type in localhost and user
06:49 - account which is or our project name so
06:56 - user accounts and registration dot PHP
07:01 - so we have here a very basic form or
07:05 - user registration form and we can see
07:08 - that we're missing a button for our
07:10 - submit so let's define it in our
07:13 - registration that PHP file so input and
07:23 - then type submit and for the name s say
07:28 - for example parade okay so the value for
07:33 - this one is sign up so save your file
07:42 - and let's go back to our browser and
07:45 - refresh our registration that PHP page
07:50 - so as you can see we have now design a
07:53 - button and the next step for this one is
07:56 - to actually implement page P for this
08:00 - user creation or user Association form
08:03 - so let's go back to our code and above
08:09 - this day let's create a new Dib and
08:15 - let's open up our PHP tag inside this
08:20 - particular div and of course the first
08:24 - thing we're gonna need is to check if
08:28 - the users submitted the form all we have
08:32 - to do is type in the keyword Estep and
08:38 - with the keyword post and of course
08:43 - we're gonna need the name of the name of
08:46 - our submit button which is
08:49 - scrape and open curly-brace
08:54 - and closed curly brace so for now let's
08:59 - just check if the submit button is
09:04 - working let's ankle let's type in echo
09:09 - user submitted for us to check if the
09:15 - submit button is working so let's go
09:19 - back to our browser and refresh our page
09:22 - let us see if the signup button is
09:27 - working okay we forgot that we defined
09:33 - the first name was required also with
09:35 - this one also with this one and so on so
09:38 - for now let's define values for this
09:43 - first name last name sample values and
09:47 - password and for email address of course
09:51 - we need to set a valid email address and
09:56 - click on the signup button so as you can
10:00 - see user submitted is displayed meaning
10:03 - our signup button or signup submit
10:05 - button is working so we have already
10:08 - implemented the form or the basic form
10:13 - of our user Association so as promised
10:16 - in the first video we will continue
10:19 - working on with the implementation of
10:21 - the PHP code behind user registration so
10:25 - before doing that we need to step back
10:28 - and reflect on our design of the user
10:32 - registration page so as you can see we
10:35 - have the the very basic looks of our
10:40 - user Association page and we want to
10:43 - improve this so in order for us to
10:46 - improve the looks of this registration
10:49 - page we need the powers of the bootstrap
10:53 - library so all we have to do now is
10:56 - download the components or the CSS files
10:58 - or the J's files included in the
11:01 - bootstrap so
11:03 - let's go ahead and type in Google and
11:07 - bootstrap so we have you the first link
11:13 - to bootstrap site so let's just click on
11:17 - this and click on this download button
11:26 - so we have a few options here we could
11:29 - just include the compiled CSS and GS
11:34 - into our files we could download the
11:36 - source files we could actually use the
11:39 - CDN of our bootstrap but with the
11:43 - purpose of this tutorial we'll be using
11:47 - or will be downloading the files
11:49 - directly or this compiled CSS and jes so
11:54 - download and then save force okay so
12:05 - once the file has been downloaded we
12:08 - just need to locate the files in our
12:09 - system and includes or include the
12:13 - necessary files such as the CSS and to
12:15 - J's files into our project so I have
12:18 - here the downloaded file which is
12:20 - bootstrap in my case this is version 4.3
12:23 - point 1 so all we need is to extract the
12:28 - file and copy the CSS and J's file or GS
12:35 - files inside this bootstrap based folder
12:38 - and paste the CSS and J's files into the
12:43 - project that we have created earlier and
12:45 - make sure it is located side by side
12:49 - with our defined files which is the
12:51 - config index that PHP and registration
12:53 - death PHP okay so once we have that we
12:57 - just need to open up our registration
13:00 - that PHP to actually include the CSS
13:03 - files from bootstrap so open up
13:07 - registration that PHP and inside the
13:09 - head tag of our HTML let's include the
13:13 - CSS coming from the CSS folder here
13:17 - in our project okay so linked with a
13:22 - type of star text or CSS and then for
13:27 - the reference we need to type in CSS
13:31 - slash and we're going to use the MIDI
13:36 - file version of the bootstrap CSS so
13:39 - let's just use this bootstrap that mean
13:42 - that CSS so bootstrap that means that
13:50 - CSS okay and let's try the or let's try
13:56 - to reload our page before that make sure
14:01 - that you have saved the registration
14:03 - that PHP and let's go to our browser and
14:06 - refresh our page so as you can see we
14:10 - know that the CSS is working because the
14:13 - layout of our page change which
14:17 - corresponds to the styles that have been
14:19 - set in the CSS file so we just need to
14:25 - add few classes to the mark-up for this
14:29 - input so the inputs for first name last
14:32 - name and also we want to change the or
14:35 - we want to add some classes to the
14:38 - signup button so it would look like a
14:40 - professional button so all we have to do
14:43 - now is go back to our PHP or
14:45 - registration that PHP code and inside
14:49 - this div with the class container let's
14:52 - define a new div which has a class of
14:56 - row so div then row and make sure that
15:01 - we close this div to this point okay
15:05 - next let's create a new column which
15:10 - also uses the mark-up div and make sure
15:15 - that we close this live right here
15:19 - so let's indent our code so it would be
15:23 - readable
15:26 - so let's add a glass to this division
15:29 - which is glass call sm-3 so this glass
15:35 - is specific for bootstrap so if you want
15:38 - to know more about bootstrap you can
15:40 - browse their documentation and study the
15:44 - different columns configuration or the
15:46 - grid configuration of bootstrap so let
15:51 - us continue let's add a class to this
15:55 - input which is form control and let us
16:03 - just copy this one so paste this to add
16:06 - their inputs last name email a phone
16:13 - number and also with the password and
16:17 - save the registration dot PHP and try to
16:21 - preview our page open up the browser and
16:23 - reload the page or registration page so
16:27 - as you can see the layout and the looks
16:30 - of our registration form is much better
16:33 - than what we have previously but we're
16:37 - not done yet with our styling perhaps we
16:41 - need to add a space here between the
16:44 - first name and the Phillip form with the
16:47 - correct values and also with our button
16:49 - in the last input for password and of
16:53 - course we want to add the class for our
16:57 - button so let's go back to our
17:01 - registration that PHP so after the
17:05 - paragraph fill up the form with correct
17:08 - VAR values let's add a horizontal rule
17:12 - for this and with a class MB - 3 ok and
17:19 - let's just copy this one for this space
17:23 - between password and the button save the
17:28 - file and open up the browser refresh so
17:33 - we have here the spaces between
17:36 - first-name and fill up and of course the
17:39 - password
17:40 - sign up and last but not the least is
17:43 - for the sign up button so go back to our
17:46 - registration that page P again
17:48 - and add class to this button which is
17:52 - class BTN and let's set this BTN into
17:57 - primary save registration that PHP and
18:02 - go back to browser and refresh there you
18:07 - have it it's not a word class form per
18:10 - se but it is much much better than what
18:13 - we have before so I think that's it for
18:17 - our styling and let's go back to our
18:20 - page P code and implement the logic for
18:22 - our user registration okay so previously
18:28 - we have started the logic which is to
18:34 - check if the post create is set and echo
18:40 - that the user has submitted the form so
18:44 - now let's get the values coming from
18:47 - this form which is so for example the
18:51 - first name and using the post variable
18:56 - and supply the first name which is the
19:02 - name of our input field and of course
19:06 - you want to use this to implement other
19:10 - fields which is this one for our last
19:12 - name and email phone number
19:31 - and also the password okay let's make
19:38 - our code readable by indenting it in one
19:45 - line okay so we have all the necessary
19:53 - fields or the fields coming from our
19:55 - form so now let's try to display all the
19:59 - values once the user has submitted the
20:02 - form so I'll go first name and then the
20:10 - last name let's just copy the the first
20:17 - one email phone number and password so
20:26 - last name or email and then phone number
20:31 - and password okay
20:35 - and of course semicolon at the end of
20:39 - the line save our registration dot PHP
20:43 - and go back to our browser refresh and
20:46 - let's try to put some values here for
20:52 - our email to test at test com phone
20:57 - number doesn't matter for now and
20:58 - password and click on sign up okay so we
21:05 - have here the values and it has
21:09 - successfully displayed the values coming
21:12 - from this form so in the previous
21:14 - tutorial we have styled our user
21:16 - registration form so as you can see we
21:19 - have improved the looks of our form and
21:22 - we also modified our PHP code to capture
21:26 - the values if the user submitted the
21:29 - form so in this lecture we're going to
21:33 - implement the database connection and we
21:37 - will create a new database that will
21:39 - hold all the information of the user
21:42 - accounts
21:43 - so let's go ahead and open up our
21:45 - browser let's try to use the local host
21:48 - PHP myadmin okay click on the new link
22:00 - and for the database name type in user
22:06 - accounts and click on create let's
22:12 - create a new table with the name users
22:16 - and for the number of columns we have I
22:20 - think six one problem for the ID which
22:25 - is auto increment the first name the
22:28 - last name the email the phone number and
22:32 - the last is the password so six and
22:38 - click on go so for this one the first
22:45 - column is ID and type in with Auto
22:48 - increment option should be enabled the
22:52 - second one is first name with a type of
22:57 - bar chart and the land let's say 100 and
23:04 - next one is last name type bar char and
23:09 - 100 and I think it's email and let's set
23:16 - it also to for char and the next one is
23:23 - the phone number should be virtual also
23:27 - with the length of 50 and the password
23:33 - [Music]
23:35 - for char I think 32 will be enough but
23:41 - let's just put it 250 or set it to 50
23:46 - and click on save
23:51 - so now we have our database which is the
23:54 - user accounts and read the table users
23:58 - with six fields which is ID first name
24:02 - last name email phone number and
24:04 - password I think it's high time for us
24:08 - to define or create our config dot PHP
24:13 - so let's open up our config that PHP
24:16 - file and connect our database to our PHP
24:20 - code so here inside our config that page
24:23 - p5 we need to open our PHP tag and
24:28 - define three variables which is for our
24:32 - DB user which is root and DB password
24:43 - ready be passed in my case it's empty
24:47 - and the B name equals or see user
24:54 - accounts okay so based on these
24:58 - variables we need to define a new object
25:02 - of the video class open closed
25:06 - parenthesis so inside here we need to
25:10 - type in MySQL and Colin and then host
25:19 - equals localhost and semicolon after
25:28 - that DB name equals we need to append
25:33 - the DB name variable that we have
25:37 - defined above and append another string
25:43 - which is for a Corrupter set of our
25:48 - database which is utf-8
25:54 - and after that we need to pass in the DB
26:00 - user horrible and also the DB password
26:06 - variable or the DB pass variable and let
26:12 - us set an attribute to this DB object
26:15 - below so DB set attribute and open close
26:25 - parenthesis and video attr ever rotor
26:36 - yeah air mode and video error mode
26:45 - should be exception so this will give us
26:51 - more information if we encounter
26:53 - problems when we're using the DB object
26:58 - later on so with that we're now ready to
27:00 - use this DB object into our registration
27:04 - dot PHP so open up the registration that
27:08 - PHP file and let's include the config
27:14 - dot PHP into this file so require once
27:21 - the config HB okay and make sure that
27:28 - you save the config dot PHP file
27:32 - so inside this if statement we can now
27:35 - use the DB object that we define in
27:38 - config data HP so all we have to do now
27:42 - is type in the SQL of course our first
27:48 - SQL will be insert into users and we
27:55 - just need to list the fields which are
28:01 - first name last name email the phone
28:07 - number and of course the password with
28:11 - values by close and question mark
28:18 - question mark question mark question
28:20 - mark one two three four I think it's
28:25 - five right five and statement for our
28:32 - insert st empty insert equals a debate
28:38 - object that we have defined in config
28:40 - dot PHP and prepare force supply the SQL
28:47 - statement and let's just delete this
28:50 - line so after this is the empty insert
28:54 - let's define result and st empty insert
29:00 - and i've been executed and of course we
29:07 - need to supply the array of the fields
29:11 - or the values coming from the form which
29:14 - is the first name which is the first
29:18 - name last name email and phone number
29:25 - and password so if result is true open
29:33 - closed curly braces echo successfully
29:38 - say hey else
29:43 - let go there were errors while saving
29:51 - the data save your file and open up the
29:58 - browser refresh the page and let's try
30:03 - to input some names here example Jane
30:11 - last name Joe and email address will be
30:15 - Jane Doe at gmail.com phone number plus
30:21 - six two three nine eight five six just
30:27 - random numbers okay and password Jane go
30:34 - and click on the sign up button cool
30:41 - now it says successfully save but let's
30:46 - check our database or the page with my
30:48 - admin to see if the data has gone
30:52 - through
30:55 - okay so browse let's just click on this
31:00 - browse and you can see we now have the
31:03 - first record which is the Jane the first
31:08 - name Jane last name though email address
31:10 - Jane Doe at gmail.com phone number and
31:13 - of course the password which is Jane Doe
31:16 - okay so I think our insert method or
31:22 - insert logic is good but there's a lot
31:27 - of room for improvement so for example
31:30 - we want the form not to reload every
31:33 - time we submit the information and also
31:36 - the feedback if successful or not yes I
31:42 - think it's not that good or not that
31:46 - good looking so we will implement the
31:49 - sweet alert library to replace this
31:53 - boring feedback that we have here so
31:56 - the previous tutorial we have learned
31:58 - how to implement or insert values coming
32:03 - from this form into database and in this
32:07 - tutorial we're going to learn how to
32:10 - implement jQuery and the suite alert to
32:14 - replace our traditional feedback so as
32:19 - you can see if you try to implement or
32:21 - if we try to click on or type in
32:25 - different values here to email add task
32:29 - comm phone number password and then
32:33 - click on sign up so we have the
32:36 - traditional feedback here successfully
32:40 - saved which is I think not that
32:43 - intuitive so we're going to implement
32:47 - the suite alert to replace this
32:49 - traditional feedback and instead of
32:53 - inserting the values to the database
32:55 - using PHP we're going to use the power
32:58 - of jQuery to help us insert values to
33:03 - the database without reloading the page
33:07 - okay so first thing we're gonna need is
33:09 - a search for the jQuery library okay so
33:18 - we could click on or either on this
33:22 - links but let's try this the first link
33:26 - jQuery and click on the download ok so
33:36 - here we could actually see all the
33:41 - options that we have for jQuery or for
33:45 - including to Jacob or project so
33:48 - accordingly we can just use the CDN for
33:53 - our jQuery but there are also option
33:57 - here to just use the CDN or our the CDN
34:00 - is coming from some reputable companies
34:03 - such as Google and Microsoft or they're
34:08 - hosting also be
34:09 - Jake hurry so for now let's use this
34:12 - Google CDN so open this by clicking on
34:16 - this link okay so we could just copy
34:21 - this snippet for three point X or for
34:27 - jQuery version 3 point something so just
34:30 - copy the script and let's go back to our
34:33 - registration data HP and before the
34:36 - closing of the body tag let's paste the
34:39 - script and below this line let's test
34:43 - our jQuery if it's working or not so
34:48 - dollar sign and then function and close
34:54 - parenthesis and open close curly braces
34:57 - semicolon at the end and first let's
35:00 - just alert something for the document
35:05 - ready event so hello say registration
35:11 - that PHP and go back to our browser and
35:14 - let's go to our user accounts in
35:21 - registration than PHP so we have the
35:28 - basic alert or JavaScript alert that
35:33 - says hello so I think the jQuery library
35:37 - is working so the next step will be to
35:40 - include another library which is the
35:43 - sweet alert so sweet alert will replace
35:46 - this JavaScript alert pop-up so let's
35:56 - search for sweet alert okay
36:06 - so sweet alert actually there are two
36:09 - versions with a sweet alert in then the
36:12 - sweet alert too which is new
36:16 - versioned in the in the first one so
36:21 - sweet alert - is a beautiful responsive
36:24 - customizable accessible replacement for
36:28 - javascript pop-up boxes so they have
36:31 - here comparison between the normal alert
36:33 - and sweet pallor it - so first let's
36:37 - shout the normal alert by clicking on
36:40 - this button this is the native pop
36:45 - coming from the JavaScript and the
36:48 - second one shallow success message
36:51 - message so this is the suite under - so
36:58 - as you can see this is much much more
37:01 - better than the javascript native pop-up
37:05 - alert so let's go ahead and integrate
37:08 - this suite under - tor project so go to
37:14 - insulation shine and we just have to
37:17 - grab the CDN coming from the J's deliver
37:25 - so all we have to do is copy this script
37:27 - or snippet and we just have to paste it
37:31 - below the jQuery library that we have
37:34 - integrated earlier okay and now instead
37:38 - of this alert we need to all on the
37:43 - sweet alert - and then fire and of
37:48 - course we need to few our define few
37:52 - things here which are the title a title
37:57 - would be hello world and text will be
38:04 - [Music]
38:08 - this is from suite 32 and the time will
38:20 - be success
38:23 - [Music]
38:26 - so let's try this
38:28 - go ahead save our file and go back to
38:31 - our browser and refresh our user
38:34 - registration or registration dot PHP
38:37 - okay so as you can see we have here a
38:40 - better and much cleaner pop-up which is
38:45 - coming from the sweet alert to from the
38:48 - world this is from sweet alert to
38:51 - library okay now the next step is to
38:55 - include or to actually work on the
39:00 - jQuery so it would help us to insert
39:04 - values coming from coming from our form
39:07 - and insert it into the database let's go
39:13 - ahead and make some changes to our
39:14 - registration that PHP so in our form we
39:18 - have the submit button which is designer
39:23 - right so instead let's define an ID for
39:28 - this one or let us say register and
39:34 - inside here let us type in lady register
39:42 - if it's click OK
39:48 - this should be function close here and
40:02 - inside this let's try the sweet alert if
40:07 - it's working or not so let's just check
40:10 - is sweet alert or once we click top walk
40:15 - on the submit button the sweetener
40:18 - should appear okay so for now save your
40:23 - file and go back to our browser and
40:27 - refresh our page and let's try to click
40:32 - on this signup button okay
40:37 - so we have here these you'll alert so it
40:40 - means that the script that we're working
40:41 - on is working okay so before that let's
40:50 - set this aside for now because our
40:55 - primary concern is the value is coming
40:58 - from this form okay so let's add some
41:06 - ideas to this film so first name let's
41:14 - just copy this first name last name
41:18 - email phone number and password so this
41:26 - will be last name of course email and
41:32 - phone number and this one is for
41:36 - password so inside here at the function
41:41 - we need to declare a variable for our
41:44 - first name okay and then let's get the
41:52 - value by using the Val method and
41:57 - specify our IEP for first name so copy
42:03 - and paste last name email address phone
42:07 - number password one two three four five
42:12 - so this will be for nesting and this is
42:19 - for email third one the fourth one is
42:24 - for phone number and of course for the
42:28 - password okay
42:32 - let's indent this so it should be
42:36 - readable okay
42:47 - so at this point we could actually
42:52 - perform a validation to these values
42:55 - right so first name last name email
42:57 - phone number password in so on but as
43:02 - you can remember as you can probably
43:03 - remember that we defined a required
43:06 - attribute or fields so so we can be
43:11 - assured that the values are not empty
43:13 - but we could also check for validity of
43:16 - our values so bar is valid equals this
43:24 - that for the check validity okay so
43:34 - we're just gonna check if the valid
43:37 - variable is true if it's true let's try
43:42 - to alert true and else false and we need
43:53 - to supply a parameter here and inside
43:59 - the valid is true condition we should
44:04 - prevent the foreground submitting
44:12 - because we want to use the jQuery submit
44:16 - instead of the traditional submit of the
44:20 - form so in the previous tutorial we have
44:22 - already implemented the jQuery and sweet
44:25 - alert to our project so this time we
44:29 - will continue working on with the jQuery
44:32 - so that it will post our data to the
44:34 - database or to a file and then the file
44:38 - will be processing our information
44:41 - processing the form data and insert it
44:43 - to the database so we have here the
44:49 - preventdefault
44:51 - that we have in the previous tutorial so
44:54 - after this line we need to define the
44:57 - age
44:57 - request okay so Ajax requests and curly
45:06 - braces inside and semicolon at the end
45:09 - of this line
45:12 - the next step is to define few things
45:15 - here so the first one is type so the
45:20 - type of this request is post and for the
45:27 - URL we need to define process the PHP so
45:32 - we'll be creating this file later on
45:34 - process the PHP and then data so the
45:39 - data should be all the information or
45:41 - all the variables that we have defined
45:45 - here so or better yet we could change
45:58 - this or import or place this inside the
46:04 - condition valid and then the data should
46:08 - be this dead as follows first name then
46:12 - supply the first name and let's just
46:15 - copy and paste this line 2 3 4 and 5
46:19 - plus comma and last name and email email
46:28 - email and phone number phone number and
46:35 - of course the password and let's define
46:40 - another option which is the success so
46:49 - this success is a function that has the
46:55 - data parameter okay and let's just copy
46:59 - this one for something if we encounter
47:07 - errors
47:10 - later on create the same thing function
47:14 - in it has theta parameter so we need to
47:22 - copy or sweet alert pop-up to display
47:29 - something here so title should be
47:34 - successful successful and the text here
47:42 - sir
47:45 - register or successfully registered
47:54 - right and we could copy and paste this
47:58 - one or our error function so Ivers and
48:05 - there were errors while saving in
48:11 - stating D and type should be our of
48:17 - course okay so we have the first name
48:21 - last name email phone number password in
48:27 - the password volume okay let's just
48:33 - remove this and this line okay so the
48:40 - next step is to create the process that
48:42 - page P fine so let's define a new file
48:47 - process the PHP and inside this process
48:51 - that PHP let's just echo something for
48:55 - now hello hello from process
49:03 - so we'll know if the process that page P
49:07 - is working or the the Ajax requests that
49:10 - were working on is working so save your
49:13 - file or process that PHP file go back to
49:17 - our browser and refresh our page and
49:21 - let's try to input something here okay
49:27 - first name last name email address phone
49:29 - number and then sign up successfully
49:34 - registered it says successfully
49:36 - registered okay let's change the text
49:41 - instead of successfully registered it
49:44 - should be the data coming from the
49:46 - process that PHP save your file
49:49 - registration dot PHP and go back to the
49:53 - registration that page create a page
49:56 - registration that PHP page and refresh
50:02 - input random email a phone number
50:10 - password and then sign up hello hello
50:14 - from process as you can see so we can
50:18 - say that the process that PHP and the
50:21 - jQuery AJAX request is working okay so
50:25 - the next step is to fully modify our
50:30 - process that PHP so let's just copy the
50:34 - code that we have here earlier
50:37 - okay and paste that into this process at
50:46 - PHP and instead of checking if the
50:53 - post-trade is set what we need is just
50:58 - to check if the post is set I mean the
51:07 - post variable is set so that is set then
51:11 - we could get all the values
51:15 - from the request so first name of course
51:19 - last name email for email phone number
51:22 - in password okay and of course if
51:27 - there's no request let's just echo no
51:38 - data and then we have here the insert
51:44 - for our database right but we don't have
51:49 - the connection for our database so it's
51:53 - just copy be config require once line in
51:59 - paste it here in our process that PHP
52:02 - file so we now have the country all the
52:05 - configurations defined in config that
52:07 - PHP will be included here in our process
52:10 - at HP five so we have here all the
52:13 - values first name last name email phone
52:15 - number in the password so for the
52:19 - password let's make it a little secure
52:22 - by using the sha-1 encryption so to
52:30 - encrypt our password instead of a plain
52:34 - text password the password will be saved
52:38 - us some random characters so it will be
52:42 - less readable if someone got the access
52:46 - to our database so let's save the
52:49 - process that PHP file and of course also
52:53 - this registration dot PHP and go back to
52:56 - your browser and refresh our page
52:59 - okay let's try our let's try first to
53:04 - sign up or click design a button without
53:08 - filling in before okay so as you can see
53:12 - the request will not be processed
53:15 - because there's a validation and if we
53:20 - try to type in values here say for
53:22 - example Chando chendo and
53:26 - email s John Doe at gmail.com number any
53:36 - random number or no and password around
53:40 - ambassador I did click on the signup
53:42 - button and it says successfully saved
53:47 - then let's check our PHP myadmin
53:51 - if the information that we have
53:54 - submitted yes save into our database so
53:58 - took at Holmes Indian page you may add
54:02 - me enter your password or username and
54:05 - password go and then user accounts
54:16 - browse seeing user accounts we can see
54:22 - all the informations that we have
54:23 - submitted so first name last name email
54:26 - and of course the password that is
54:30 - hushed by sha-1 encryption okay so I
54:37 - think that's all there is to it and how
54:39 - to create user registration form in PHP
54:42 - I hope you learned something in this
54:44 - tutorial
54:45 - hey what's up guys welcome back to
54:47 - programming knowledge and this is a
54:49 - video on how to create user login in PHP
54:53 - and this is related to the previous
54:55 - video series and how to create user
54:58 - registration form so in that tutorial we
55:01 - have discussed and learn how to create
55:05 - user registration form and we define its
55:10 - database so we're gonna be using the
55:14 - same database so the database name is
55:17 - user accounts and it has a table name
55:21 - users and the users has ID first name
55:27 - last name email phone number and
55:30 - password so the ID is auto increment and
55:35 - it has
55:36 - it has the size of the leaven the first
55:39 - name is varchar' of our cart with 100 as
55:43 - the len last name the same length and
55:48 - the same type email the same also phone
55:51 - number we have the bar started work are
55:53 - 50 us Lent and password the same 50s
55:58 - then so as I've said we're gonna be
56:01 - using the same database so you can go
56:04 - ahead and create your own database with
56:07 - user accounts and then user is stable
56:10 - right and then all this attributes ID
56:13 - first name last name email phone number
56:15 - in password so we'll be learning how to
56:18 - create this particular login page and
56:23 - we're gonna be using the email and
56:27 - password for our login credentials and I
56:32 - will be showing you all the steps so
56:35 - that we could get up and running with
56:38 - this login page so for now let's create
56:43 - our new project so go to your local host
56:49 - directory and create a new folder and
56:53 - let's name it user login okay
56:58 - so we'll be defining few things or if
57:02 - you files here so we have the first file
57:05 - will be blank in the page B then the
57:15 - second one will be config dot PHP and we
57:20 - also have the index dot PHP and also one
57:29 - for lock out that page okay and we'll be
57:38 - placing our images in IMG folder in CSS
57:44 - into CSS
57:47 - folder so open up plug in that PHP and
57:51 - let's define date HTML structure for
57:54 - this one so we have a basic structure of
58:00 - our beginning at page P and for the
58:04 - title let's say programming knowledge
58:06 - [Music]
58:15 - right we need to include bootstrap
58:21 - jQuery and font awesome in our project
58:25 - because we're going to be using all
58:27 - those libraries to beautify our HTML
58:31 - structure because for an hour to try to
58:33 - visit our page it's it's empty so let's
58:39 - go back to our browser and search for
58:42 - the booster CDN also jQuery CDN and also
58:52 - front also ok click on this first link
59:00 - for bootstrap CDN so you have different
59:04 - files that we have where we have
59:06 - different files that can be included in
59:08 - our project so we have the complete CSS
59:12 - so click the copy and let's go back to
59:17 - our login dot PHP so link and of course
59:24 - paste the link that we have copied from
59:27 - the bootstrap CDN page ok and go back to
59:34 - your browser again we need to include
59:36 - the bootstrap minified that CSS get a
59:40 - copy and go back to can - or login dot
59:44 - PHP we need to make sure to include this
59:47 - at the bottom or before the closing body
59:51 - tag and then for the SSRC paste the code
59:59 - that we have
60:00 - from the bootstraps idiot page again
60:04 - let's go back to our browser and let's
60:10 - click on this jQuery CDN and for now
60:16 - let's use this trick or a three point
60:19 - three point something version and click
60:23 - on this much minified and club b or copy
60:27 - this to be bored and go back to our code
60:31 - and then paste it about the bootstrap
60:38 - that mean that javascript okay so let's
60:45 - just make sure to properly format our
60:48 - code and the next one will be the font
60:52 - awesome
60:53 - okay click on the font awesome link
60:57 - first one and then start using free so
61:04 - we have here the link that we can't
61:07 - include in our page so just click on
61:11 - this button
61:12 - hey and go back to our code and make
61:17 - sure to include this below the bootstrap
61:22 - clean that CSS okay and we need to
61:27 - define a container here so div with a
61:31 - glass container and of course another
61:37 - class or its height as 100% it's a
61:42 - specific for silence and another div
61:52 - with the class t flex with another clip
62:01 - justify content thunder and of course
62:06 - again the H 100 and another day
62:13 - with the class of user underscore card
62:20 - and another div D flex again with
62:28 - justify content center class deep clicks
62:41 - and justify content centered and inside
62:46 - here will be the logo for our login page
62:52 - as you can see in our sample page here
62:58 - so we have here the logo so we will
63:03 - define the logo inside this div so that
63:08 - will be inside another dip switches with
63:13 - a class of brand underscore logo
63:19 - complainer
63:20 - and we will define our teammate here for
63:25 - the logo and let's add a class for our
63:32 - logo which is brand logo and I'll text
63:37 - will be programming knowledge logo Hey
63:46 - and for our logo I have created a very
63:52 - artistic
63:54 - I have some on my my creative abilities
63:57 - to create this very awesome logo for our
64:02 - login page so you can create your own
64:06 - logo just make sure to make it circle so
64:11 - it will fit in our login form so go
64:15 - ahead
64:16 - so go ahead copy and paste your logo
64:18 - into our IMG folder in our project okay
64:23 - so make sure to
64:26 - paste this logo or your logo inside this
64:32 - IMG folder and for the source of our
64:36 - image let's type in IMG and of course
64:41 - the file name or known over just for my
64:44 - case IMG / logo dot PNG and so let's
64:50 - create a new CSS file so that we could
64:53 - target this class and also this class
64:56 - and we will define styles for this so
65:01 - link and for our reference it will be
65:07 - CSS and styles that CSS okay so we have
65:13 - to create this style that CSS inside our
65:16 - CSS folder so I'll create my new CSS
65:20 - file and save it inside the CSS folder
65:26 - this will be styles that CSS and let's
65:32 - start get the body in HTML so this will
65:40 - be margin:0 padding:0 hi hydrant height
65:52 - will be 100% in background color it will
66:00 - be 63 ABC and it should be tagged as
66:09 - important okay and another for a user
66:16 - card and also the brand logo container
66:23 - and another one for the local ok to save
66:31 - as from time and just paste in the the
66:36 - rules that applies to this
66:39 - classes and you can pause the video and
66:42 - copy all the classes that order loose it
66:45 - I'll be pasting in here
66:49 - so we have defined the height for our
66:54 - user card as 400 do it will be 250
66:57 - pixels margin top auto margin bottom
67:01 - auto background will be f3 Knight seat
67:05 - rail position relative display flex
67:09 - justify content center flash flex
67:13 - Direction column and so on all you have
67:16 - to do is post a video if you want to
67:18 - copy all this Styles applied to this
67:22 - user card class and for the brand
67:29 - underscore logo container we have the
67:31 - position as absolute high it will be
67:34 - hundred 170 px and also the will up will
67:40 - be negative 225 px border a just 50%
67:43 - background will be 68 3 BC and padding
67:47 - will be 10 pixels text-align:center and
67:49 - for our logo will be 150px pixels and
67:55 - with a hundred fifty pixels also very
67:58 - border a just as 50 percent and border
68:01 - will be 2 pixels so solid and white so
68:06 - we'll try to save and preview our page
68:10 - save our style that CSS and make sure
68:14 - also to save your login that PHP and go
68:17 - back to our server browser and reload so
68:22 - I think the CSS rules are working so in
68:28 - this tutorial we'll continue working on
68:30 - with this login form and we will be
68:33 - adding different inputs so input for our
68:37 - username and input for our password so
68:42 - let's go ahead and open up our login
68:45 - that page become so let's pick up where
68:50 - we left off
68:52 - so this is where we ended last time we
68:55 - added our own logo for our sign-in form
68:59 - and let's go ahead another tip for this
69:03 - the class defects and let's add another
69:10 - class which is justify content center
69:13 - we'll be adding another one which is for
69:16 - container and we will add also styles
69:20 - for this for container later on ok so
69:23 - inside this day blitz the pointer for
69:26 - and of course inside this form let's
69:29 - define all the inputs so first let's
69:34 - create a div with input group a pen and
69:43 - we disap attend class of input root X
69:50 - [Music]
69:51 - inside this we'll be adding an icon
69:53 - which we will be using font awesome so I
70:01 - and then it class every s and then F a
70:09 - user and right after this Dave let's on
70:16 - our input with the type text' name will
70:22 - be is rain and the ID will be or surname
70:28 - and also add class to this which has
70:33 - poor control in the juicer and this will
70:41 - be a required film and before we forget
70:46 - let's rip this one into another div so
70:52 - to input input work
70:59 - [Music]
71:02 - okay enclose this live here odd cluster
71:07 - this is in v3 this is mainly related to
71:13 - food sir this in v3 this is for the
71:20 - spacing of our division or depth okay so
71:27 - we'll just Kapiti this input curve for
71:32 - our password also so input group this
71:37 - will be for the password our user so the
71:44 - name will be password the ID password
71:47 - and also instead of input user it it
71:56 - should be input pass and let's just
72:03 - change this into two and let's add
72:08 - another formula also do is the class
72:12 - form group okay and then another live
72:20 - this will hold the Remember Me button if
72:26 - you're familiar with that custom
72:30 - checkbox okay one sec custom check CS so
72:43 - inside here let's type in the input type
72:49 - which is the checkbox course and/or the
72:54 - name it will be or let's not add a link
73:00 - to this but because anyway let's just
73:04 - add name so remember me and the class
73:09 - will be custom
73:13 - control input and with the ID custom
73:22 - control custom control in line and let's
73:30 - just add ladle so with the class cost on
73:37 - show me them and inside here let's just
73:46 - I remember and of course this will be
73:52 - for our custom from custom control in
74:00 - line which is this input checkbox so
74:05 - let's now add the button for our signee
74:08 - so after this dip which is with the
74:13 - class for container let's add another
74:16 - one which is with the class D flex and
74:23 - let's add another class for this justify
74:26 - content contain content center in NP - 3
74:31 - and it's just a class or custom class
74:34 - for this like entertainer and let's add
74:40 - another in a way which is the button
74:44 - itself so with a type button and with
74:52 - the name the name will be 1 and ID is
75:02 - again let's I've as to this which is VD
75:07 - n and then custom class like in ep N and
75:16 - the value or the displayed text will be
75:20 - lovely
75:21 - okay so the next step is
75:26 - add the sign up button also or link
75:32 - again this is optional but for now let's
75:37 - just add this to our for MD - 450 - yes
75:50 - for and inside this tip let's define
75:55 - another day with class defects justify
76:01 - content center and another custom custom
76:07 - class which is links and inside this div
76:14 - let's just say don't have an account so
76:26 - class no.2 and X would be sign up so as
76:37 - I said this is only optional if you want
76:39 - to implement this signup you could put
76:45 - in the links and for example the link
76:48 - will be for example registration that
76:51 - page so you could put the link here and
76:56 - another day for forgot password defects
77:09 - in justify content center inside this
77:13 - then let's just define a link to reset
77:20 - the password so forgot your password
77:24 - click that so now that we have added all
77:27 - the elements to our forum let's try to
77:31 - preview our page in and see if it looks
77:35 - good in our browser so save our file
77:39 - login dot PHP and go back to your
77:42 - browser navigate to localhost and of
77:46 - course yes sir
77:48 - blankie and the page that were concerned
77:52 - with is the line in that PHP so we have
77:57 - here the newly added elements we have
78:01 - the input remembering me option and we
78:05 - have the links for sign up and forgot
78:07 - password so as we can see they're not
78:11 - sent yet or they're not looking good yet
78:14 - so we need to customize the CSS for our
78:20 - elements so let's go back to our file ok
78:25 - so one thing that I know this earlier is
78:29 - the they have the same icon which is the
78:32 - user font awesome user so instead of
78:35 - user for our password let's just type in
78:39 - the key so let's try that save our file
78:44 - and go back to our browser and refresh
78:46 - so instead of these or icon this will be
78:49 - the newly added icon which is the key
78:53 - that signifies our password ok so let's
78:58 - just change this into type password
79:02 - instead of text let's say password ok
79:08 - now let's go to our Styles that CSS we
79:12 - have defined different or few classes
79:15 - here that we need to target in our CSS
79:19 - to make sure that our Meagan form looks
79:23 - again you can pause the video and try to
79:26 - copy all the CSS styles that we're going
79:29 - to define here so number one will be for
79:33 - container with margin top hundred px or
79:40 - higher pixels e that e login ATM will be
79:47 - with 100%
79:50 - background will be C 0 3 9 2 B and tack
79:58 - this as important color will be white
80:03 - and this will be important so another
80:09 - one will be love II media focus box
80:17 - shadow will be done and tab this is
80:23 - important as well and the outline will
80:26 - be 0px in content as well
80:33 - the login container we have padding:0 to
80:44 - REM and input vertex so background is
81:03 - [Music]
81:04 - zc0 390 B or tan color would be light
81:14 - and water will be 0 this will be or
81:22 - telephone or radius ticker point little
81:29 - hi Arielle zero zero zero point one two
81:37 - five REM and this will be important as
81:41 - well and then input user in the pass
81:48 - this is for our input in our login form
81:54 - or username and password so focus
82:00 - box-shadow will be men and this will be
82:06 - important as well and outline will be
82:13 - 0px and the last one will be custom
82:18 - checkbox wait custom input or control
82:24 - input input and check then custom
82:33 - control then label before this will be
82:41 - background color background color will
82:46 - be also the C's 0:39
82:51 - to be fact it's as important as well so
82:54 - save our style that CSS and go back to
82:57 - your browser and refresh the page so as
83:03 - you can see we now have a nice-looking
83:08 - laggy for so in the previous tutorial we
83:11 - have added the elements and also added
83:14 - these styles of this login form so now
83:18 - let's do the quick fix for this login
83:21 - button
83:21 - extending way beyond the user and
83:24 - password elements so let's go back to
83:27 - our login dot PHP code ok so here in our
83:33 - code I think we have mistyped the class
83:38 - for lock in container so instead of -
83:41 - let's make it an underscore so it would
83:45 - reflect or it will be the same with the
83:48 - flag and container that we have defined
83:50 - in our styles that CSS so I'll go ahead
83:53 - save your file
83:55 - back in that PHP and go back to our
83:57 - browser and refresh so as you can see
84:00 - the login button is now aligned with the
84:03 - two elements or the username and
84:06 - password elements at the top so let's
84:10 - continue working on with this plugin
84:12 - form and
84:13 - work with our actual logic to allow the
84:17 - user to log in in this particular login
84:19 - form
84:20 - so before going any further let's try to
84:24 - move this form or the end form tag so we
84:29 - would include the login button so at the
84:34 - end of our code just before right before
84:36 - the end body tag let's add another
84:39 - script to work with our login logic so
84:46 - inside here let's define the unload
84:50 - function of the jQuery right let's try
84:56 - it first if it's working or not
84:59 - so alert so say more file logging that
85:03 - PHP and go back to our browser refresh
85:06 - the page and we have the alert that's
85:10 - saying alert so next let's try to select
85:14 - our button so our button has the class
85:19 - okay so if this button is good we will
85:26 - do some logic inside this function so
85:35 - let's try this first and let's try to
85:39 - see if this is working or not so log in
85:42 - that PHP save and go back to our browser
85:45 - refresh and let's try let's try to click
85:49 - on this login button so it's working
85:56 - okay
85:57 - so let's remove this and let's define a
86:01 - new variable here which is valid let's
86:05 - just check if the validity of our forms
86:09 - is true so if the form is valid let's
86:18 - get the value of our username
86:24 - okay so target our username which is
86:28 - with the ID username and in value same
86:34 - thing with our password so the same with
86:39 - password ID so the name of this variable
86:43 - would also be password and let's prevent
86:47 - the submission of this form because
86:51 - we're going to be doing the submission
86:54 - by using the Ajax call to a GS Lang in
86:59 - that page p5 so this part right here
87:02 - let's define the Ajax call okay so the
87:09 - type will be post hey and the URL will
87:17 - be GS GS log in that PHP and the data
87:26 - force will be our username and password
87:30 - okay so username and as in the value
87:37 - username and password and the value
87:41 - password so if this is successful let's
87:50 - display alert first success and if it's
88:00 - not a success of course let's define
88:07 - also our display alert this will be ours
88:12 - or there were errors while I was doing
88:21 - the operation let's just change this
88:24 - later okay same verify and go to jes
88:29 - login that PHP and let's just try to
88:33 - echo something here so and
88:36 - from GS learn in that HP we save J is
88:44 - lagging at page P and go back to our
88:46 - browser refresh and click on this login
88:51 - button
88:52 - so I think we have an error so let's try
88:56 - to turtle ship so accordingly type our
88:59 - e.preventdefault is not a function let's
89:03 - try to troubleshoot the problem so
89:07 - accordingly if prevent that default is
89:12 - not a function because we miss the t
89:15 - letter it there so same logging that PHP
89:20 - and go back to our browser again refresh
89:22 - and click on the login button so
89:26 - accordingly accordingly it was a success
89:29 - the next step is we're going to work
89:31 - with our config dot PHP to actually
89:35 - connect our code to database or MySQL
89:38 - database so config dot PHP let's open
89:43 - the page return here and define your
89:45 - variables so that we could connect to
89:48 - our database so the user for my case is
89:51 - root the password is empty and the
89:58 - database name as we have defined earlier
90:01 - is the user accounts ok let us connect
90:08 - to our database with video so inside
90:14 - here let's type in MySQL house it was
90:18 - localhost and our giving name will be it
90:26 - was that TP named variable that we have
90:30 - defined at data semicolon and the
90:35 - character set for this will be utf-8 and
90:41 - of course we need to pass in the user
90:46 - and the password
90:51 - password yes and let's just set a single
90:58 - attribute for this video object set
91:01 - attribute will be for video attribute
91:11 - run mode and first video on column and
91:18 - error mode will be returned exception
91:23 - whenever there's an error okay so once
91:29 - we have that we could include this to
91:32 - our genius login dot PHP so here we
91:37 - could
91:37 - I've been required once the config that
91:42 - PHP and let's try to the Stratus our
91:51 - video object so select all from users
91:57 - for now and and define a statement cmp
92:06 - select of course using the video object
92:12 - prepared and course the SQL so the
92:20 - result will be username and then execute
92:27 - let's just pass in an empty array and if
92:32 - result a result result yes
92:43 - echo success okay else there were errors
92:55 - there were errors while connecting
93:02 - Judy today hey so see me comment and
93:08 - let's go back to our login at HP so
93:10 - instead of success let's alert the data
93:14 - coming from the GS lag in that HP so
93:17 - lucky in that PHP save and go back to
93:19 - our browser refresh and type in
93:23 - something and click on click in so we
93:27 - have an error there accordingly and if
93:30 - I'd class consent ever mode because we
93:34 - have mistyped this error mode exception
93:41 - so instead of error mode with all the
93:48 - all the letters type in so let's just
93:51 - make it e our arm mode so save the
93:56 - config that page we find in refresh our
94:00 - page and click on the login button so
94:04 - hello from GS login that PHP so horribly
94:09 - it was a success
94:11 - so in our genius lagging at PHP file
94:14 - instead of success so let's define a new
94:19 - variable that we hold all the data
94:21 - coming from the database so fetch and
94:27 - then video fetch associative array and
94:33 - then let's just bar them the user
94:37 - variable for now and save the file go
94:41 - back to our browser refresh the page and
94:45 - type in some values and click on lucky
94:49 - so we have the record with the first
94:52 - name Jane and the last name doe with
94:56 - Jane Doe gmail.com as the email and
94:59 - phone number s they're also password it
95:04 - is Jane Doe so it's working okay so
95:08 - instead of selecting all users
95:11 - we need to filter out with the
95:15 - user name and password but we're going
95:18 - to use the email to ask the user name
95:21 - for now and the password password equals
95:28 - a make one so user name
95:34 - this will be the values coming from our
95:37 - login form o which is username and this
95:44 - name with our password is just passing
95:46 - in the password a password so instead of
95:55 - passing an M theory
95:58 - let's pass in the username and the
96:02 - password and define an if statement
96:08 - statement or SD NP select row count is
96:14 - greater than zero meaning we have a
96:18 - success we found the user in our
96:23 - database else there's no user or that
96:34 - combo or something combo enclose our
96:38 - statement instead of success let's just
96:43 - echo a value one and we'll check here in
96:48 - alerting that PHP if the value is one if
96:53 - the response is with the value one so
97:01 - you need to trim the data coming from
97:03 - our GS login dot PHP and let's check a
97:08 - if it is equal to 1 and let's redirect
97:14 - our user said I am out
97:23 - we know that location feature equals the
97:33 - index with topical index dot PHP and set
97:40 - the delay for about two seconds okay
97:45 - save or lag in that PHP and let's go
97:49 - back to our genius lagging at HP so we
97:52 - have here line number four echo hello
97:56 - from J as Lockheed a pitch up HP we need
98:00 - to remove this so say J is lagging at
98:07 - PHP and go back to our browser refresh
98:13 - so for example you have Jane Doe at
98:16 - gmail.com in your database and you just
98:20 - need to type in the password and then
98:24 - click on this login button so we have
98:27 - the value coming from OJ's login dot PHP
98:30 - us number one it signifies that we found
98:35 - a user in our database with really
98:39 - combination that we entered in the field
98:43 - username and the password so ok and wait
98:48 - for a few seconds so it's redirected to
98:51 - our index at PHP but for now if we try
98:55 - to click on this button we could see
99:00 - again the login that page before which
99:03 - means that we need to set the session so
99:06 - that every time we try to log in with
99:08 - our username and password if we are
99:12 - authenticated then we can stay for it
99:15 - for that particular page or we can stay
99:17 - in that index that page being set of
99:20 - login that page where every time soil or
99:24 - Jes login dot PHP we need to set the
99:27 - session or start the session so session
99:33 - and then start and inside the statement
99:37 - we need to set our session variable and
99:40 - let's pass in our index which will be
99:45 - user login and then that's pass in the
99:53 - user values which is the era coming from
99:57 - our database or the associative array we
100:02 - got from our database so save this and
100:07 - inside the login dot PHP we need to
100:10 - check at the dot so let's open up the
100:16 - page here it goes and let's check if the
100:23 - session with session user login is set
100:34 - and I enter the location index dot PHP
100:48 - same and let's copy and paste this one
100:55 - so in our index dot PHP we could also
100:57 - check if the session user login is not
101:03 - set redirect to login dot PHP so we will
101:09 - just add a element here welcome to index
101:18 - save index dot PHP and go back to your
101:21 - browser refresh and type in your
101:27 - username and password click on login so
101:33 - the user is found people okay
101:42 - so we're not redirected to index that
101:45 - page P that's because we need to add one
101:49 - line to our files
101:51 - so inside login dot PHP we need also to
101:54 - set the session or start the session
101:58 - because we're using the session variable
102:00 - below and make sure to copy and paste
102:04 - these also to index that PHP because
102:07 - again we're using session variable here
102:10 - so index at PHP save and lag in that
102:14 - page B save so refresh our page we are
102:21 - automatically redirected to our index
102:24 - dot PHP we won't be able to go to our
102:28 - plug-in PHP file because the session is
102:32 - set so it's checking if the session is
102:36 - set then stay in index dot PHP otherwise
102:41 - go to login dot PHP there is one more
102:45 - thing that we need here we need a link
102:47 - for us to log out in index dot PHP so
102:51 - let's go back to index dot PHP so we're
102:56 - just going to add the link here and this
103:01 - should be indexed at PHP and drag out
103:05 - equals to true and type in black out
103:12 - okay save in here we need to check if
103:17 - the lock out variable is set so if is
103:22 - said get the log out so we need to
103:33 - destroy the session so session destroy
103:40 - and unset the session
103:51 - redirect to our login that page screen
104:01 - hey save our file index dot PHP and
104:04 - let's go back to our browser and refresh
104:06 - so we have VD log out link so let's
104:10 - click on this we have successfully log
104:13 - out from index dot PHP so we'll try to
104:16 - log in again in index.php by typing in
104:21 - or username the password using an
104:24 - evening so ask for it and then plug in
104:29 - one so we are now at the index dot PHP
104:35 - okay so I think that's all there is to
104:38 - it in this tutorial thanks
104:48 - you