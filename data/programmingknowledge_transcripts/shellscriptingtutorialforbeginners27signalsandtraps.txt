00:00 - hey guys welcome to the next video and
00:02 - shell scripting tutorial for beginners
00:04 - in this video we will see how to use
00:06 - trap statement in shell scripting now
00:10 - the trap statement is relatively tough
00:14 - to explain so I'm going to take an
00:16 - example and then I will show you how we
00:19 - can use trap and why we should use stop
00:22 - okay so I have an example script here
00:26 - and the first line of this script is to
00:31 - print the PID of the script itself
00:35 - okay so dollar dollar symbol you can use
00:40 - to print the PID of the script itself
00:43 - right now the other code here is a while
00:47 - loop and basically what it's doing is
00:49 - it's just looping around and I have
00:54 - provided the 10-second delay in every
00:57 - loop so that you know after every 10
01:02 - second it's going to loop around and
01:04 - print the value of count here until and
01:06 - unless the value is less than 10 and if
01:10 - the script is run successfully after for
01:14 - example 100 seconds we will just exit
01:19 - out of the script with the exit signal 0
01:23 - right so let me run the script and let's
01:27 - see what happens so I am going to run
01:29 - the script and you can see the PID of
01:32 - this script is printed here right and
01:36 - then this script goes into this loop and
01:39 - after every 10 second is going to print
01:42 - the value of count which is for example
01:45 - one and then two and three and then four
01:47 - and five right now while running your
01:51 - script some scenarios can happen so
01:56 - while running your script user may press
01:59 - for example ctrl C keys in order to you
02:04 - know come out of the script so when you
02:07 - press control C to terminate the script
02:10 - is going to be terminated and our script
02:13 - is in the middle of doing something but
02:17 - we have provided this control-c signal
02:20 - and then the script is ended
02:23 - right now this control-c signal is
02:27 - called the interrupt signal and in
02:31 - signal terms it's called sig IND okay so
02:35 - we have sent the sig int command to the
02:40 - script and then the script is terminated
02:43 - right once again I am going to run the
02:45 - script and we can use some other command
02:49 - soon right now the different PID is
02:53 - provided to this script while it's
02:55 - running right before it was this PID and
02:59 - now this script is running with this PID
03:02 - right and we can press control read also
03:06 - so control Z and it's also going to stop
03:09 - the script and this control Z signal is
03:14 - called suspend signal okay and it's in
03:20 - signal terms it's called sig t s T P
03:23 - okay so you can see when I press control
03:28 - Z the script is stopped and now we are
03:32 - out of the script but this is also a
03:36 - interrupt signal so we have interrupted
03:38 - our script because our script was in the
03:42 - middle of doing something and we have
03:45 - given some signal to stop it right now
03:49 - now once again I'm going to run the
03:52 - script for example so this time the PID
03:54 - is this one and once again it's running
03:58 - and I can kill this process by a kill
04:03 - command also so I know the PID of this
04:06 - process for this script so I can just
04:10 - use another terminal so this is the
04:14 - different terminals than this right so I
04:16 - can use the another terminal and I can
04:19 - just give a kill and then minus 9 and
04:23 - this minus 9 is also a signal and
04:27 - it's called cig kill signal right so
04:32 - this is a cig this is a kill come on
04:35 - and this nine stand for six kill signal
04:38 - and then I can give the name of the PID
04:41 - which is three seven eight four in this
04:45 - case you can see this is the PID right
04:48 - now right and when I give this kill
04:53 - command press Enter you can see our
04:56 - script is killed once again it was in
05:00 - the middle of doing something but we
05:02 - have given a signal to it in this case
05:06 - we have given a sig kill signal and then
05:10 - the script is stormed right so there are
05:13 - some scenarios in which signal as our
05:17 - script is interrupted in the middle of
05:20 - doing something and it's not yet
05:24 - finished but some signal can come or
05:26 - some unexpected behavior can come which
05:31 - can interrupt the execution of our
05:34 - script and that's why we use trap
05:37 - command now trap command provides the
05:41 - script to capture and interrupt and then
05:45 - clean it up within the script okay
05:47 - so now when we use the trout come on our
05:52 - tab command in the script will be able
05:55 - to you know catch this kind of for
06:00 - example kill command or control C or
06:03 - control said so it's going to trap or
06:06 - catch this kind of signals and then we
06:11 - will be able to do some kind of stuff
06:14 - before exiting out right so that's why
06:17 - we use the trap command now we will take
06:21 - an example for the trap but let me show
06:24 - you something so I'm going to just open
06:26 - the different terminal for example and
06:29 - this is a big terminal and here I'm
06:32 - going to write man seven and then signal
06:36 - write signal and then press Enter
06:41 - and when I see the main page of the
06:43 - signal then I will be able to see more
06:47 - you know explanation about these signals
06:50 - right now when I scroll a little bit
06:53 - down I will be able to see this kind of
06:56 - table I was talking about right so
07:00 - control see signal I have given in my
07:04 - case right so control see signal was
07:07 - this one interrupt from keyboard I have
07:10 - given interrupt from keyboard which is
07:13 - control C and this is the signal for
07:16 - that which is sig IND
07:18 - and every signal has its value so SIGINT
07:22 - has value to right and then we have
07:26 - provided control Z also right which was
07:31 - sig T STP you can see this one was the
07:36 - signal right and this stands for stop
07:40 - tied at comma at terminal right it has
07:44 - the value 18 20 and 24 okay and then we
07:48 - have provided this fig kill command and
07:51 - it has the value 9 so we have used kill
07:54 - minus 9 so this was the value of this
07:58 - signal we have we could have used sig
08:00 - kill also and the value of this is 9
08:04 - right so we have given kill 9 so it was
08:07 - killed
08:07 - okay and these are some of the signals
08:10 - you can use to terminate your you know
08:15 - process right so if you want to read
08:18 - more about baby signals then just do man
08:22 - 7 and signal okay man 7 and the key
08:27 - words signal I'm going to just close
08:30 - this terminal and let's take an example
08:33 - now okay so now what I want to do is I
08:39 - want to remove everything here and then
08:44 - what I need to do is I will just use a
08:48 - trap come on just write crap
08:52 - and then I will echo something so for
08:55 - example I can just take oh that some
09:03 - exit command is detected right so I can
09:06 - just write a great fund is detected okay
09:12 - and then I am expecting the signal zero
09:17 - from it
09:18 - okay so exact zero is a success
09:22 - signal okay so you have shown you the
09:26 - signals have their value and they are
09:29 - always greater than zero right so if the
09:33 - signal sent here is zero then it's a
09:36 - success right so now what I am going to
09:40 - is I will just echo for example hello
09:44 - world okay and I just want to exit out
09:49 - of the script side I can just do exit
09:51 - zero exits zero is a success signal
09:55 - right so zero is a success signal and
09:59 - let me clear the terminal here also
10:03 - clear and let me run the script once
10:07 - again and when I screw on the script I
10:09 - can see here that the script is starting
10:15 - so what what is the execution sequence
10:17 - here the script started it has seen that
10:21 - there is a trap for some signal and trap
10:25 - means whenever we receive a signal 0
10:29 - then we need to execute this kind of
10:34 - command whatever command is here it will
10:38 - be executed whatever come on you right
10:41 - after the trap signal ok so the command
10:46 - is echo exit command is detected so this
10:49 - this is the command command echo is used
10:52 - and then this is printed when this
10:55 - signal is cached which is on exit 0 you
11:01 - know command right now
11:05 - here once again I'm going to just cut
11:10 - this code and I'm going to go back to
11:13 - our previous code so for example we had
11:16 - this code right and then we can write
11:20 - trap here so crap and then we can once
11:26 - again echo something so this time for
11:28 - example we are expecting some other
11:32 - signals so for example we want to detect
11:36 - that it's a fig in signal we can just
11:40 - write sig int here or we can even write
11:43 - its value to okay to is the value of sig
11:47 - in signal and this second signal is for
11:51 - you know delay it's for interrupt the
11:55 - thing is interrupting the sequence right
11:58 - which is control C so when I run the
12:02 - script once again the script with it
12:05 - will start with some PID and then I will
12:08 - just press control C and then see what
12:11 - happens so it's going to print this
12:13 - value so whenever the signal is received
12:17 - is going to execute whatever command we
12:21 - right after the trap command so I'm
12:23 - going to just press control C and you
12:27 - can see you it's printed a great signal
12:31 - is detected
12:32 - once again control C and it says exit
12:36 - signal is detected right and you can see
12:42 - right now it's not you know coming out
12:46 - of the terminal and giving this control
12:49 - C command so many times and it has
12:53 - completed its execution and you know
12:57 - every time when I press control C it's
13:00 - prints exit signal is detected right let
13:04 - me clear the terminal once again and now
13:07 - this time I want to catch the sig kill
13:11 - come on so you can either write sig kill
13:14 - here or either write 9 the value of sig
13:17 - kill okay
13:18 - so cigs kill come on and then I will
13:21 - just run the script and I know the PID
13:25 - of it so I can just use the skin command
13:28 - with -9 signal and then the PID of it
13:34 - which is four to nine six four two nine
13:37 - six right and then press ENTER and you
13:41 - can see this process is killed and this
13:44 - time we don't you know see this exit
13:49 - message you can see it's killed but I
13:52 - told you that we can trap any command
13:56 - any signal and we can execute any
13:59 - command when this signal is received and
14:02 - I have send the signal and nothing is
14:04 - printed right so there is some
14:07 - exceptions to the trap
14:10 - okay so trap cannot trap or catch sig
14:15 - kill command and sig stop command okay
14:19 - so these two you know signals it cannot
14:23 - catch so whenever you write sig kill or
14:28 - sig stop then trap is not going to catch
14:32 - them it's unable to catch them okay so
14:36 - these are the two exceptions okay so
14:40 - don't use a sig kill or don't catch say
14:44 - kill or sig stop from your trap command
14:50 - now let's take one more example and
14:53 - let's understand how it works okay so
14:57 - what I'm going to do is I'm going to
15:00 - just going to my desktop or directory
15:04 - and I will do LS there okay so there is
15:07 - only one script file there which is my X
15:10 - script itself right so I'm going to
15:12 - create one more file which is while dot
15:16 - txt and this file is created I'm not
15:19 - going to insert any data inside it I
15:22 - will just LS once again and now we can
15:25 - see that this file is there okay now I
15:28 - will do PWD to know in which directory
15:31 - we are in
15:32 - right and for example this time what we
15:36 - want to do is whenever we receive any
15:38 - signal we want to delete this file
15:41 - somehow okay so how can we do it so I'm
15:45 - going to declare a variable file for
15:48 - example and then I'm going to give some
15:51 - value to this file so I will just take
15:55 - the complete path of this directory
15:59 - desktop directory and the name of the
16:02 - file right so just copy this and paste
16:05 - it here okay and this time instead of
16:08 - echoing something I will just do RM
16:12 - minus F to force the deletion and then
16:17 - the file variable name which is file
16:21 - itself okay
16:22 - and you can after removing you can exit
16:26 - out of the script so you can just give
16:28 - the semicolon and exit command to exit
16:32 - out of the script right so this
16:35 - semicolon is used to combine two
16:38 - commands if you know how they works
16:41 - right now I want to catch some signals
16:46 - so for example I want to catch the
16:48 - sacrifice signal which is zero and then
16:51 - for example I want to catch the
16:53 - control-c signal which is two second and
16:56 - then for example I want to catch the
17:00 - signal 15 which is sig term signal which
17:05 - is termination signal or even you can do
17:09 - nine also for example for sig kill or
17:12 - any other signal right but nine will not
17:16 - work here because sig kill is an
17:19 - exception right so I want to just remove
17:23 - this file whenever I send either of
17:26 - these signals I can do this right so I'm
17:30 - going to run the script and script is
17:34 - running and now I will just press
17:37 - control C for example or let me just
17:41 - give this 15 which is a fig term so
17:46 - I know the PID so I can just give kill
17:49 - minus 15 and the PID which is 1 which is
17:55 - 5 6 3 3 right and then plus enter this
17:58 - signal is received in this script and
18:01 - then we are exited out of the script and
18:05 - let's do LS once again and you can see
18:09 - that this file is removed ok
18:14 - so you can do that also so if you want
18:18 - to remove a file or you want to do any
18:20 - cleanup you can do with the command and
18:24 - then you can just catch that signal and
18:28 - then do the cleanup right and you could
18:32 - have done something like this so if the
18:35 - file is removed successfully you could
18:38 - have used for example and here and then
18:42 - you could have echoed the for example
18:44 - while deleted right so you can just
18:47 - write file deleted something like this
18:53 - also you can do ok to know that this
18:56 - trap is executed ok so once again I am
19:00 - going to touch this file and I will do
19:04 - LS now once again this while a exists
19:08 - and once again I am going to run the
19:10 - script and script is running and this
19:13 - time the PID is 5 6 6 7 so just 2 5 6 so
19:19 - 6 7 and press enter and you can see here
19:23 - this signal is received here it says
19:27 - file deleted ok so the signal is trapped
19:31 - here and then let's see if the file is
19:34 - deleted or not
19:35 - yes file is also deleted ok so you can
19:39 - execute any command using trap when some
19:43 - signal is received
19:44 - ok now let's run the script once again
19:48 - and let me show you one more thing
19:50 - so script is running and then I just to
19:54 - trap here and then press enter and I can
19:58 - see here
20:00 - that there are some traps or there is a
20:04 - list of some traps right so this is the
20:08 - list from these three traps are from
20:14 - this script and this these three traps
20:18 - are from some other trap command I have
20:22 - given in the terminal right so
20:25 - previously I have given a trap command
20:27 - to test this trap and this is from the
20:31 - crack command in the terminal previously
20:34 - I have given and these three values are
20:37 - coming from this script okay now the
20:40 - question is how we can remove traps okay
20:45 - because we have set some trap and
20:49 - whenever we use trap c'mon they are
20:52 - listed right so somehow we want to
20:54 - remove these traps also so how do we
20:58 - remove it so we can just remove the trap
21:01 - by using - and name of the signal so I
21:06 - want to remove for example these three
21:09 - traps then I can just do trap - and then
21:15 - these three signals whatever trap I want
21:17 - to remove so I do this and once again
21:20 - trap and then I only see these traps now
21:25 - okay so these three traps I have removed
21:28 - right so this is how also you can remove
21:33 - traps
21:34 - so this - is for removing okay so this
21:38 - is how you can use traps in shell
21:41 - scripting I hope you enjoyed this video
21:42 - please rate comment subscribe and bye
21:44 - for now