00:06 - hey everyone in this tutorial we would
00:08 - be talking about the button widget so i
00:11 - will just explain as i write the code
00:13 - for creating one such button i will just
00:15 - follow the four steps we discussed in
00:17 - the introduction video so i'll import
00:19 - inktober i'll write import
00:22 - tinker
00:24 - then i'll declare the window
00:27 - that was the second step i'll write win
00:29 - equals
00:31 - tinker
00:32 - dot tk
00:35 - and then i'll given the title i'll write
00:37 - win.title
00:39 - and let the title be
00:41 - button
00:45 - now i'll declare my widget that was the
00:47 - third step adding any number of widgets
00:50 - to the
00:51 - main screen
00:52 - so i'll write button that's my variable
00:55 - equals thinker
00:58 - dot button
01:02 - and i'll given these brackets and you
01:04 - can see that there are these numerous
01:07 - parameters that i can specify to
01:10 - size my button or to decorate it so
01:15 - first i'll given
01:16 - this master
01:18 - which is about the parent window so i'll
01:21 - write when
01:22 - then i'll mention the text so
01:26 - it's the text that i want on my button
01:29 - so i'll write
01:30 - quit
01:33 - because the command that i'd be
01:34 - specifying so command tells you what the
01:38 - button would be doing
01:39 - so that would be
01:41 - win.destroy
01:43 - so destroy is an universal widget you
01:46 - can not only use it with the window
01:48 - container but also to destroy other
01:50 - widgets like the button itself
01:52 - okay and
01:54 - i can even specify the height and width
01:57 - of the button so i'll write width
02:00 - equals let it be seven
02:02 - and height
02:03 - let it be
02:04 - four
02:06 - okay then i can have the active
02:08 - background
02:09 - parameter so i'll write active
02:11 - background
02:12 - let it be pink so active background is
02:15 - basically the color of the button when
02:17 - you have clicked on it
02:19 - and active foreground let it be purple
02:23 - so that's the color of the text when you
02:25 - have clicked on the button
02:26 - then you can also specify the background
02:28 - color and foreground color let us
02:30 - specify that so i'll write pg
02:34 - equals sky blue
02:36 - you can also take in the rgb colors but
02:39 - i'll take the normal ones for right now
02:41 - then you have foreground let it be white
02:46 - and then you can even specify the font
02:48 - let it be georgia you can give in any
02:50 - font aerial or calibri
02:54 - then i'll have relief let it be equal to
02:56 - rich
02:58 - so relief is the type of border you want
03:01 - it can be flat groove raised rich solid
03:04 - or sunken
03:06 - okay that's all that i'd be specifying
03:08 - all the parameters that i'd be uh giving
03:11 - in for
03:12 - my button
03:14 - but there are more
03:15 - in place of text you can even given an
03:17 - image that would be working as a button
03:21 - okay
03:22 - or you even have this
03:25 - justify parameter
03:27 - so how you want to show the multiple
03:29 - lines
03:30 - if you have a text
03:32 - then how you want to show those multiple
03:34 - lines
03:35 - a lot long left side or right side or
03:38 - you want it to be in center so it's
03:40 - basically the alignment of the text but
03:43 - for that you would need to specify that
03:44 - slash n in the text otherwise it won't
03:47 - be treated as multiple lines
03:49 - you can even have part x or path y so
03:52 - pad x is for additional padding along
03:55 - the y axis left or right of the text
03:58 - and pad y is for the additional padding
04:01 - above or below the text
04:04 - then you can even have the state
04:05 - parameter to disable the button
04:07 - then you have underline so the
04:09 - corresponding number text would be
04:11 - underlined
04:12 - then you can have wrap length if it is
04:15 - positive then the next lines will be
04:17 - wrapped to fit within this length
04:21 - and then
04:23 - i'll get to the pack i'll pack this
04:25 - widget i'll write pattern.pack so this
04:28 - is a geometry manager that organizes the
04:30 - widgets in blocks
04:32 - we will talk about this very
04:34 - descriptively in some upcoming videos
04:37 - but for right now
04:39 - just know that it's for organizing this
04:42 - widget
04:43 - there are options to this you can give
04:45 - in an argument we have expand fill and
04:48 - side expand lets the widget take up any
04:50 - space on the master window
04:52 - fill is for taking up extra space so you
04:55 - can specify along y or x axis or both
04:58 - then you have side it is for top left
05:02 - bottom right alignment where you want
05:04 - your button
05:05 - and then i'll call in the main loop cool
05:08 - i'll write when dot main
05:11 - let's run this and let's check if our
05:14 - button has the parameters that we
05:15 - specified
05:18 - so i have my screen and i can see this
05:21 - sky blue and white combination that we
05:24 - specified for
05:25 - background and foreground and when i
05:28 - click on it i can see this pink and
05:30 - purple
05:31 - active foreground and background
05:34 - you can even see this rich border
05:36 - and you can notice the border width the
05:40 - width and height of the button
05:43 - and yeah okay you can even see the text
05:46 - and when i click on the button the
05:48 - window goes away as in the window is
05:51 - destroyed okay
05:53 - so everything worked as we wanted it to
05:55 - we could see the parameters working
05:58 - button parameters working and the widget
06:00 - working quite fine
06:02 - you can even get an image in place of
06:04 - this text so please try doing that
06:07 - it's very easy
06:09 - so that's it for this program thank you