00:00 - hello guys in this video I'm going to
00:03 - show you how you can use arrays in C++
00:07 - so let me show you how you can declare
00:09 - array in C++ but first of all this is a
00:13 - good question what is an array an array
00:16 - is a variable which can contain more
00:20 - than one values or as the name suggest
00:23 - it can contain an array of values now
00:28 - let's see how we can declare array
00:31 - the Declaration is same as the variable
00:33 - declaration for example
00:35 - int
00:37 - my array the name of the array and then
00:41 - you need to give how much or how many
00:45 - elements the array will contain so this
00:49 - square bracket this square bracket in
00:52 - this square bracket you need to Define
00:54 - how many element this array will contain
00:57 - so for example I will Define three here
01:01 - then C++ code will know that yeah I have
01:05 - assigned the or I have place or I have
01:09 - reserved the three element array in the
01:12 - memory so it will assign three spaces in
01:16 - the memory to your array right now in
01:20 - order to initialize array or in order to
01:24 - initialize array with the values what
01:26 - you can do is uh you you can initialize
01:30 - arrays in different forms but the most
01:32 - basic form is called array initializer
01:37 - list okay so I will show you how you can
01:41 - initialize array with array initializer
01:43 - list just give equal to and then these
01:46 - curly braces and in this curly braces
01:49 - you can give the values of the array
01:52 - element by
01:53 - element now for example I will give the
01:56 - values 36 45
02:01 - 64 and we close it so this means that my
02:07 - array contains three values and the
02:10 - elements of the array or values of the
02:12 - arrays are 36 45 and 64 so these three
02:18 - values are called elements of the array
02:21 - and there is something called index of
02:23 - the array which is the position of
02:26 - element in Array and the position of
02:29 - element mement in Array starts from zero
02:32 - not from one so index of this array is
02:36 - or index of this element is zero index
02:39 - of this element is one and index of this
02:41 - element is two now in order to print
02:45 - array what you can simply do is see out
02:49 - or in order to access the value of the
02:51 - array you just copy the name of the
02:53 - array give the square bracket and give
02:56 - the index of the value you want to print
02:59 - print right so now this
03:04 - means we have given here the element
03:07 - zero we want to access the element zero
03:09 - from the array and from here we can we
03:12 - know that zero element or element with
03:16 - index zero is 36 so this should print 36
03:21 - ideally let's build the program and
03:24 - let's see what happens I'll run the
03:26 - program and it gives me 36 that's true
03:30 - now for example I want to print 64 here
03:33 - the index of 64 is 2 right so I will
03:37 - write two here build the program and run
03:41 - it and you can
03:42 - see 64 is printed here now in order to
03:47 - assign values to array in a different
03:51 - manner what you can do
03:55 - is you can just assign values like this
03:59 - so you can just copy the name of the
04:02 - array just give the square bracket give
04:06 - zero and you can provide the value of an
04:10 - ARR for example 34 in this way also you
04:13 - can initialize the element of array so
04:18 - this means that assign on the index zero
04:22 - the value 34 okay so you can do a copy
04:26 - and paste it three times and on the
04:29 - index one and on the index two we will
04:31 - assign some different
04:33 - value 45 64 and now for example I will
04:39 - run the program it will works as same as
04:42 - before you can see 64 is printed right
04:47 - now now if your array will
04:52 - contain more elements for example 10
04:56 - elements and 20 elements then you cannot
05:00 - assign your array like this and you can
05:03 - also it will be tedious for you to
05:06 - initialize your array with array
05:09 - initializer list so what you can do is
05:11 - you can initialize your array with loops
05:14 - also so how you can do it just give a
05:19 - for loop as I have shown you how to use
05:21 - for Loop and just
05:24 - declare variable int is equal
05:27 - to0 and the limit of the array for
05:30 - example my array will contain 15
05:34 - elements okay so I will initialize
05:38 - my uh I from zero because index of array
05:43 - starts from zero right and then I will
05:46 - say if I is less than or equal
05:52 - to
05:54 - 14 because this is 15 and our index
05:58 - start from
06:00 - 14 then the value will go up to 14 okay
06:03 - including 15 we have including 0 we have
06:08 - 15 values right that's why I have
06:10 - written 14 here one less than this
06:13 - because we are starting from zero and
06:16 - then I will say I ++ and then I will
06:20 - give these curly braces and in here I
06:24 - will say
06:27 - assign value of of X so I will say X not
06:32 - X but I is equal to some
06:36 - value so what you can assign for example
06:42 - 67 and in order to print this value you
06:45 - can just write C
06:52 - out
06:54 - I and then you can just give some
07:00 - string and you can just
07:03 - give you can print the I element of the
07:09 - array like this and now when I run the
07:12 - program build it and run it you see here
07:17 - it's it has assigned some values I have
07:20 - I forgot to add
07:23 - endl and line so now it will be more
07:28 - clear so when I run the
07:31 - program now you can see
07:33 - here we have assigned 67 to each and
07:37 - every value in an in the array so in
07:41 - this way also you can assign value to
07:44 - the array so I hope you have understood
07:47 - the basic concept of array how you can
07:50 - initialize array and how you can assign
07:52 - values in the array so that's it for now
07:57 - please recomended subscribe and bye for
07:59 - now