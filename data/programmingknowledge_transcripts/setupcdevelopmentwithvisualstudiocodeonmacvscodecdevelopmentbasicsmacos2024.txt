00:00 - hey guys in this video I'm going to show
00:02 - you how you can set up the C++
00:04 - development environment with Visual
00:07 - Studio code on your Mac operating system
00:10 - so let's get started and let's see how
00:11 - we can do it so first of all before
00:14 - starting with the development of our C
00:17 - program we need to have the C++ compiler
00:23 - in order to compile our C++ code so that
00:26 - you need to download first and then you
00:30 - can compile your C++ program with your
00:33 - Visual Studio code so for that the
00:36 - simple check whether the compiler is
00:40 - already there or not on your Mac
00:43 - operating system you just need to open
00:44 - the terminal to open the terminal click
00:47 - on Spotlight search and search for
00:50 - terminal here and once the terminal
00:53 - opens you just need to type this command
00:56 - which is C Lang space hyphen Hy py
01:01 - version and then press enter and if this
01:04 - gives you some kind of output which says
01:07 - Apple cang version something then the
01:11 - compiler for C++ is installed on your
01:16 - Mac operating system now if this gives
01:19 - you some kind of uh message which says
01:23 - cang is not recognized or this command
01:26 - fails then you need to install the
01:29 - compiler
01:30 - you can install the cang compiler in two
01:34 - different ways both will lead to the
01:37 - installation of cang and both these ways
01:40 - involves the installation of xcode
01:42 - development tools so if you want to
01:44 - install the full package of xcode which
01:48 - comes with separate IDE and several
01:52 - different uh sdks to develop various
01:55 - different languages then you can go to
01:58 - the Apple App Store and and install the
02:00 - xcode development tools from there I
02:02 - have already created a video about it
02:05 - how you can install that if you are only
02:07 - interested in development of C++ with
02:10 - Visual Studio code then I will recommend
02:13 - you to install the xcode tools using
02:17 - this command which is xcode hyphen
02:21 - select space hyphen hyphen install this
02:24 - is going to only install the essential
02:27 - xcode tools and that also involves the
02:31 - cang so if the cang uh command fails
02:35 - then just run this command when I run uh
02:39 - this command it's going to uh show me
02:42 - this uh error because I have already uh
02:46 - installed xcode separately on my Mac
02:49 - operating system so it says command line
02:52 - tool is already installed use software
02:55 - update in the system setting to install
02:57 - the updates right so in my case I have
02:59 - already have this installed in your case
03:02 - you might want to run this command once
03:04 - you run this command just check the
03:07 - version of cang once again with this
03:09 - command and if it gives you this kind of
03:11 - output then the C++ compiler will work
03:15 - once the compiler is there let's start
03:18 - with the C++ development with Visual
03:21 - Studio code so now open the visual
03:23 - studio code and here first of all we are
03:26 - going to open any folder in which you
03:29 - want to
03:30 - create your C++ program so I'm going to
03:33 - click on open folder and then I will go
03:35 - to the documents folder and here I have
03:38 - this hello world folder which is empty
03:40 - right now so I'm going to open this
03:42 - folder now here I can create a C++ file
03:46 - by clicking on this uh new file icon or
03:49 - I can click on the file and then click
03:52 - on new file icon so I'm going to click
03:55 - on new file icon and then I'm going to
03:58 - name my file as main do CPP here once I
04:03 - uh press enter Visual Studio code is
04:06 - going to recognize that I want to
04:08 - develop a C++ code and how it recognizes
04:12 - because I have named my file as main do
04:15 - CPP do CPP is an extension for C++ so so
04:19 - you can see it gives us the
04:20 - recommendation to install the C and C++
04:23 - extension pack which is from Microsoft
04:26 - itself so you can click on install from
04:30 - here if you don't want to do that then
04:32 - you can also go to the extensions
04:36 - section and here search for C++ which is
04:39 - also going to show you the same kind of
04:42 - result here you can see the first result
04:44 - which is for C and C++ and you can see
04:48 - it's and you can see it has been
04:50 - downloaded around 57 million times and
04:54 - it's from Microsoft so it's the official
04:56 - CN C++ extension pack
05:00 - for the C++ development so click on
05:03 - install here which is going to start the
05:06 - installation of this extension pack and
05:09 - once the C and C++ extension is
05:11 - installed you will see the disable and
05:13 - uninstall button so in future you can
05:15 - disable or uninstall it one more uh
05:18 - extension I will recommend here will be
05:21 - uh code Runner so just search for code
05:24 - Runner here and this is the extension
05:27 - which will help you to run your code in
05:29 - a easy way so I'm going to click on code
05:32 - Runner and then click on install which
05:34 - is going to install this extension also
05:36 - so we have installed CN C++ extension
05:39 - and we have installed the code Runner
05:42 - extension now I'm going to go to the
05:44 - Explorer and then here type a very
05:46 - simple C++ program so this is the C++
05:50 - program and what this C++ program does
05:52 - is it declares three variables num 1 num
05:55 - two and sum we assign num is equal to 5
05:59 - num 2 is equal to 10 and uh then we are
06:02 - going to add these two numbers and show
06:05 - the output here so nothing complicated
06:07 - about this uh C++ program you can find
06:11 - these kind of programs anywhere on
06:12 - internet right so now how can we run
06:17 - this program so to run this program you
06:20 - have this icon here you can see uh this
06:24 - debug C and C++ file you also have this
06:28 - Arrow here
06:30 - from here you can either debug your C
06:32 - your C++ file you have the option to run
06:34 - your C++ code or you have the option to
06:37 - run a specific C++ file using this
06:41 - option I also have the option to run my
06:44 - C++ code using this run button and then
06:47 - I can start the debugging or I can run
06:49 - the program without
06:51 - debugging so let's start with this uh
06:54 - Arrow key and here I'm going to click on
06:57 - this option which says run run code
07:00 - which is going to open the terminal and
07:02 - it's going to show me the output as soon
07:05 - as I click on the Run button you can see
07:08 - it creates this binary file so first of
07:11 - all in the background this run code is
07:14 - going to compile my C++ program and
07:18 - create this uh executable binary file
07:21 - you can see this main file is created
07:25 - and this is the command it has ran and
07:28 - then after that it's going to run this
07:31 - command and you will see the output in
07:33 - the output section right you can also go
07:37 - to the terminal and if you are a fan of
07:41 - command line you can also compile your
07:43 - code from here so let me just remove uh
07:46 - this binary and compile the code once
07:49 - again so I'm going to move this binary
07:51 - file which is the executable file we
07:53 - have created once the C++ code builds so
07:57 - I'm going to move it to the thrash and
07:59 - let's build it once again and I can uh
08:02 - just write C Lang command here so just
08:05 - write C Lang when you type uh first
08:07 - three or four letters of C length you
08:10 - can uh see what are the C length uh uh
08:14 - command which are available for us in
08:16 - our case we are going to use the
08:18 - C++ so I'm going to just write C Lang
08:23 - plus plus and then the name of the file
08:25 - which I want to compile which is main do
08:28 - CPP in my my case then hyphen o which is
08:32 - the flag we can use to name our
08:34 - executable file I'm going to name my
08:37 - executable file as main you can name it
08:39 - anything so you can uh name it out for
08:42 - example let's name it out and this is
08:46 - the command to compile your C++ code
08:49 - using the terminal right so you can run
08:51 - this command on any terminal it doesn't
08:53 - need to be in the visual studio code I'm
08:55 - going to press enter which is going to
08:58 - uh compile my C++ code you can see it
09:00 - has generated this out binary which we
09:03 - can run by
09:05 - using slout and then press enter and
09:08 - it's going to give us the same kind of
09:10 - result so you can also open the terminal
09:13 - and then run this command if the
09:15 - terminal is closed from here you can go
09:18 - to the terminal and then click on the
09:20 - new terminal and it's going to open the
09:22 - terminal for you right now we have uh
09:27 - compiled our code and ran our code now
09:30 - let's say you want to debug your code so
09:32 - you also have the option to debug your
09:34 - code using visual studio code so here
09:38 - you will be able to see uh the option to
09:41 - run your code in the debug mode so you
09:43 - can see debug C or C++ file and as I
09:46 - mentioned you also have the option here
09:48 - start debugging but before starting the
09:51 - debugging you need to set the breakpoint
09:53 - so here you can go to the run and debug
09:57 - section and right now it's not doing
10:00 - anything but when I set the break point
10:03 - so I can just uh click here and then set
10:06 - the break point on line number five line
10:09 - number six line number N9 and let's say
10:12 - line number 12 so you might have
10:15 - observed when I have uh created the
10:18 - breakpoint on these lines you will be
10:20 - able to see uh these kind of list of
10:23 - break points here in the debug section
10:27 - you will also see the line num so 5 6 9
10:30 - and 12 you can also toggle these break
10:33 - points by clicking on this button which
10:35 - is going to disable all the breakpoints
10:37 - you can enable it once again or you can
10:41 - close all the break points from here so
10:43 - you can remove all the breako by
10:45 - clicking on this remove all break points
10:49 - uh button and you will also see some
10:52 - more um options once you run the
10:56 - debugger so let's run the code in the
10:59 - the debug mode by clicking on run and
11:00 - then start debugging and then it's going
11:03 - to ask us which kind of debugger we want
11:06 - to use you can see you have CN C++ cang
11:09 - build and debug active file you have uh
11:13 - CN C++ cang build and debug active file
11:16 - so we are going to use the second option
11:18 - because we are compiling or debugging
11:21 - the C++ file if you have the g++
11:25 - compiler you will also see the option
11:27 - for uh GDB or g++ uh compiler I'm going
11:33 - to choose the second option we start
11:35 - with G cang Plus+ click on second option
11:39 - here and it's going to start the
11:42 - debugger and first of all it's going to
11:45 - give you this kind of warning which says
11:47 - developer tool access need to take
11:49 - control of another process so I'm going
11:52 - to just give my macbook's password here
11:55 - which I used to log to my MacBook and
11:58 - click on continue
12:00 - and then click on okay and then my
12:03 - debugging starts once the debugging
12:06 - start you will see these button on top
12:08 - the first button is for continue so when
12:10 - you press on this your program execution
12:13 - stops at the next break point you can
12:16 - also use this step over step into step
12:19 - out and you have the option to restart
12:22 - the debugging and stop the debugging
12:24 - using this button let's step over to the
12:27 - next line so I'm going to to click on
12:29 - step over button and as soon as I do
12:32 - that you can see num one variable is
12:36 - printed here and here the num one the
12:39 - value which is assigned to num one here
12:41 - is five you will also see num two and
12:44 - num three variables but because we
12:47 - haven't executed the code on the line
12:49 - number six or line number 12 we haven't
12:52 - assigned the value to num two and the
12:54 - sum variables so here you will be able
12:57 - to see some random value use assigned to
12:59 - num two and some variables 1 and let's
13:03 - say 1 25 72 these are some of the random
13:06 - values because our program execution is
13:09 - stopped at this point we haven't
13:11 - completed this line of code so when we
13:14 - step over to the next line you will
13:16 - observe that now num two has the value
13:20 - of 10 once again we have stopped at this
13:24 - point so some has random values so let's
13:26 - step over once again and now St some
13:30 - have 15 values so this is how you can
13:33 - debug your code once again when you
13:35 - click on the continue button your
13:37 - program will run successfully and it's
13:39 - going to show you the output here so
13:43 - this is how you can debug your C++ code
13:47 - if you want to create a launch. Json
13:50 - file in the debug section so when you
13:52 - click on debug and you have the option
13:54 - to create the launch. Json file so let
13:57 - me click on this file and it's going to
13:59 - create this launch. Json file for you so
14:03 - once it creates a launch. Json file you
14:06 - you will see that this vs code folder
14:09 - will will be created in your project
14:11 - directory and you will see these two
14:14 - files which are created which is launch.
14:17 - Json which have the configuration
14:19 - related to your uh debugger also you
14:23 - have the task. Json file have the
14:26 - configuration related to your your
14:29 - compiler right so you can see this task
14:33 - we have added this task here which is
14:35 - generated uh automatically for you when
14:38 - you ran this code using this button
14:41 - right so this kind of uh vs code and
14:46 - launch. Json and task. Json uh are
14:49 - important when you want to share your
14:51 - code with other colleagues so when you
14:53 - are using Version Control let's say when
14:56 - you click on Source control and when you
14:58 - add this this uh code into some kind of
15:01 - Git Version Control then you will be
15:03 - able to see your changes here and when
15:05 - you push your code to GitHub some other
15:08 - developer is going to pull that code and
15:10 - he will be able to use the same
15:12 - configuration that's why it's useful to
15:15 - create this kind of uh launch or task.
15:18 - Json
15:20 - files so that's it for this video this
15:23 - is how you can set up the c or C++
15:25 - development environment on your Visual
15:27 - Studio code editor
15:29 - on your Mac operating system I hope you
15:32 - enjoyed this video and I will see you in
15:34 - the next video