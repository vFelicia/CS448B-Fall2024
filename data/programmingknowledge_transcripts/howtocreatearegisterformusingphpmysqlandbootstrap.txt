00:00 - hey guys what's going on welcome to
00:01 - programming knowledge and into this
00:04 - lecture we're going to talk about how to
00:06 - create user registration for using your
00:09 - PHP and in this course we learn how to
00:15 - create this particular registration so
00:18 - we have the first name last name email
00:19 - address and phone number and of course
00:22 - the last one password so the
00:25 - technologies that we're going to use are
00:27 - the following PHP MySQL we're gonna use
00:32 - the bootstrap for the front end of our
00:35 - user registration form and of course
00:39 - we're gonna use the jQuery so let's go
00:42 - ahead and create our new project let us
00:46 - navigate to our localhost directory and
00:55 - create a new directory that will hold
00:58 - all the files necessary for our project
01:00 - so new folder and let's name it user
01:04 - accounts and then inside this particular
01:11 - folder we're going to define few files
01:15 - for our project so let's define the
01:19 - index dot PHP okay change extension yes
01:27 - and also let's define config dot PHP and
01:36 - also another one for our registration
01:39 - form so registration that PHP so these
01:45 - files will be vital for our project
01:48 - config is for the configuration for our
01:51 - database connection the index dot PHP
01:55 - will be displaying all the users
01:58 - registered and of course again the
02:02 - registration that PHP where in which our
02:04 - form or user registration form will be
02:07 - displayed or located
02:09 - so now that we have the basic structure
02:11 - of our project let's go ahead and edit
02:14 - registration at PHP to create our user
02:18 - registration form okay so now open up
02:23 - the registration net PHP and we have an
02:26 - empty file so all we have to do is
02:28 - define the HTML structure for this one
02:31 - so HTML and if you're using sublime text
02:37 - you can just type in HTML and press tab
02:40 - in your keyboard okay so the title for
02:44 - this one is user registration in PHP so
02:53 - for now let's define our user
02:55 - registration form so we're just gonna
02:58 - define a very basic very basic user
03:02 - registration form and later on we'll
03:05 - improve the front-end by using the
03:09 - bootstrap library so let's start with a
03:14 - div and inside this div let's define the
03:17 - form and of course inside this form we
03:21 - can define a dip for our container and
03:26 - let's not forget to set the action for
03:28 - our form which is action and for now
03:33 - let's use the registration that page and
03:37 - method let's use post method so under
03:42 - the container div let's define h1 and it
03:48 - should say registration okay
03:52 - and a paragraph that says fill up fill
03:59 - up the form with correct values think
04:05 - after that one let's define an input
04:09 - with the input a keyword with the type
04:13 - tax and for the name let's make it or
04:20 - let's name it as
04:22 - first name and of course let's define
04:29 - the label for this one so label label
04:37 - for first name so it should be hold with
04:46 - the keyword first name of course this
04:54 - first name should be required after that
04:58 - we could just copy and paste this line
05:02 - so label for first name and input tax
05:05 - with a type or with the name first name
05:08 - so let's paste one for our last name for
05:13 - our email address for our phone number
05:16 - and for our password okay
05:20 - so let's change this into last name this
05:25 - to last name and of course the name
05:29 - should be last name also this one is for
05:37 - email address so email and email for the
05:47 - name or for the name of the input and
05:52 - phone number phone number and also the
06:01 - label for the phone number lastly is the
06:08 - password so password and password
06:15 - pretty name and label for the password
06:20 - so let's change this input type into of
06:24 - course we're using the password and of
06:26 - course we're using email for this
06:30 - feel for email address so if we're done
06:35 - with that let's check our registration
06:38 - that PHP file in our browser so go on
06:42 - with our browser and type in localhost
06:45 - and user account which is for our
06:53 - project name so user accounts and
06:58 - registration that PHP so we have here a
07:03 - very basic form or user registration
07:06 - form and we can see that we're missing a
07:09 - button for our submit so let's define it
07:13 - in our registration that PHP file so
07:17 - input and then pipe submit and for the
07:26 - name is suffer sample trait okay so the
07:33 - value for this one is sign up so save
07:42 - your file and let's go back to our
07:44 - browser and refresh our registration dot
07:49 - PHP page so as you can see we have now
07:53 - design a button and the next step for
07:56 - this one is to actually implement PHP
07:59 - for this user creation or a user
08:02 - Association form so let's go back to our
08:04 - code and above this div let's create a
08:12 - new div and let's open up our PHP tag
08:19 - inside this particular div and of course
08:23 - the first thing we're gonna need is to
08:26 - check if the users submitted the form
08:32 - all you have to do is type in the
08:34 - keyword Estep and with the keyword post
08:41 - and of course we're gonna need the name
08:45 - of the name of our submit button which
08:48 - is scrape and open curly brace and
08:55 - closed curly brace so for now let's just
09:01 - check if the submit button is working
09:04 - let's ankle let's type in echo user
09:10 - submitted for us to check if the submit
09:16 - button is working so let's go back to
09:20 - our browser and refresh our page let us
09:23 - see if the signup button is working okay
09:31 - we forgot that we defined the first name
09:34 - was required also with this one also
09:36 - with this one and so on so for now let's
09:41 - define values for this first name last
09:44 - name sample values and password and for
09:49 - email address of course we need to set a
09:54 - valid email address and click on the sub
09:57 - consent of button so you can see user
10:01 - submitted is displayed meaning our
10:03 - signup button or signup submit button is
10:06 - working so we have already implemented
10:09 - the form or the basic form of our user
10:13 - Association so as promised in the first
10:17 - video we will continue working on with
10:19 - the implementation of the PHP code
10:22 - behind user registration so before doing
10:25 - that we need to step back and reflect on
10:29 - our design of the user registration page
10:34 - so as you can see we have the very basic
10:38 - looks of our user Association page and
10:42 - we want to improve this so in order for
10:46 - us to improve the looks of this
10:48 - registration page we need the powers of
10:51 - the bootstrap library
10:54 - so all we have to do now is download the
10:56 - components or the CSS files or the J's
10:59 - files included in the bootstrap so let's
11:03 - go ahead and type in Google and
11:07 - bootstrap so we have you the first link
11:13 - to bootstrap site so let's just click on
11:17 - this and click on this download button
11:26 - so we have few options here we could
11:29 - just include the compiled CSS and GS
11:34 - into our files we could download the
11:36 - source files we could actually use the
11:39 - CDN of our bootstrap but with the
11:43 - purpose of this tutorial we'll be using
11:47 - or will be downloading the files
11:49 - directly or this compiled CSS and jes so
11:54 - download and then save force okay so
12:05 - once the file has been downloaded we
12:08 - just need to locate the files in our
12:09 - system and includes or include the
12:13 - necessary files such as the CSS and J's
12:15 - files into our project so I have here
12:19 - the downloaded file which is bootstrap
12:21 - in my case this is version 4.3 point 1
12:24 - so all we need is to extract the file
12:29 - and copy the CSS and J's file or GS
12:35 - files inside this bootstrap taste folder
12:38 - and paste the CSS and J's files into the
12:43 - project that we have created earlier and
12:45 - make sure it is located side by side
12:49 - with our defined files which is the
12:51 - config index that PHP and registration
12:53 - that PHP okay so once we have that we
12:57 - just need to open up our registration
13:00 - that PHP to actually include the CSS
13:03 - files from bootstrap
13:05 - so open up registration that PHP and
13:08 - inside the head tag of our HTML let's
13:11 - include the CSS coming from the CSS
13:16 - folder here in our project okay
13:19 - so link with a type of start X or CSS
13:25 - and then for the reference we need to
13:29 - type in CSS slash and we're going to use
13:35 - the minified version of the bootstrap
13:38 - CSS so let's just use this bootstrap
13:42 - that mean that CSS so bootstrap that
13:48 - means that CSS okay and let's try the or
13:56 - let's try to reload our page before that
14:00 - make sure that you have saved the
14:02 - registration that PHP and let's go to
14:05 - our browser and refresh our page so as
14:09 - you can see we know that the CSS is
14:11 - working because the layout of our page
14:14 - change which corresponds to the styles
14:19 - that have been set in the CSS file so we
14:25 - just need to add few classes to the
14:28 - mark-up for this input so the inputs for
14:32 - first name last name and also we want to
14:34 - change the or we want to add some
14:36 - classes to the signup button so it would
14:39 - look like a professional button so all
14:42 - we have to do now is go back to our PHP
14:44 - or registration that PHP code and inside
14:49 - this div with the class container let's
14:52 - define a new div which has a class of
14:56 - row so div then row and make sure that
15:01 - we close this div to this point okay
15:05 - next let's create a new column which
15:10 - also uses the mark-up div and make sure
15:15 - that we close this div
15:19 - right here so let's indent our code so
15:23 - it would be readable okay so let's add a
15:28 - class to this division which is class
15:31 - call sm3 so this class is specific for
15:36 - bootstrap so if you want to know more
15:39 - about bootstrap you can browse their
15:41 - documentation and study the different
15:45 - columns configuration or degreed
15:47 - configuration of bootstrap so let us
15:51 - continue let's add a class to this input
15:56 - which is form control and let us just
16:03 - copy this one so paste this to add their
16:07 - inputs last name email a phone number
16:14 - and also with the password and save the
16:19 - registration dot PHP and try to preview
16:21 - our page open up the browser and reload
16:24 - the page or registration page so as you
16:27 - can see the layout and the looks of our
16:30 - registration form is much better than
16:34 - what we have previously but we're not
16:37 - done yet with our styling perhaps we
16:41 - need to add a space here between the
16:44 - first name and the Phillip form with the
16:47 - correct values and also with our button
16:49 - in the last input for password and of
16:53 - course we want to add the class for our
16:57 - button so let's go back to our
17:01 - registration that PHP so after the
17:05 - paragraph fill up the form with correct
17:08 - bar values let's add a horizontal rule
17:12 - for this and with a class MB - 3 okay
17:18 - and let's just copy this one for this
17:22 - space between password and the button
17:27 - save the file and open up the browser
17:30 - refresh
17:32 - so we have here the spaces between first
17:37 - name and fill up and of course the
17:39 - password and sign up and last but not
17:42 - the least is for the sign up button so
17:45 - go back to our registration that page P
17:48 - again and add class to this button which
17:51 - is class BTN and let's set this BTN into
17:57 - primary save registration that PHP and
18:02 - go back to browser and refresh there you
18:07 - have it it's not a word class form per
18:10 - se but it is much much better than what
18:13 - we have before so I think that's it for
18:17 - our styling and let's go back to our
18:20 - page P code and implement the logic for
18:22 - our user registration okay
18:27 - so previously we have started the logic
18:33 - which is to check if the post create is
18:37 - set and echo that the user has submitted
18:42 - the form so now let's get the values
18:46 - coming from this form which is so for
18:50 - example the first name and using the
18:54 - post variable and supply the first name
19:01 - which is the name of our input field and
19:05 - of course you want to use this to
19:09 - implement other fields which is this one
19:11 - for our last name and email phone number
19:31 - and also the password okay let's make
19:38 - our code readable by indenting it in one
19:45 - line okay so we have all the necessary
19:53 - fields or the fields coming from our
19:55 - form so now let's try to display all the
19:59 - values once the user has submitted the
20:02 - form so echo first name and then the
20:10 - last name let's just copy the the first
20:17 - one email phone number and password so
20:26 - last name or email and then phone number
20:31 - and password okay
20:35 - and of course semicolon at the end of
20:39 - the line save our registration dot PHP
20:43 - and go back to our browser refresh and
20:46 - let's try to put some values here for
20:53 - our email to test at test com phone
20:57 - number doesn't matter for now and
20:59 - password and click on sign up okay so we
21:05 - have here the values and it has
21:09 - successfully displayed the values coming
21:12 - from this form so in the previous
21:14 - tutorial we have styled our user
21:16 - registration form so as you can see we
21:19 - have improved the looks of our form and
21:22 - we also modified our PHP code to capture
21:26 - the values if the user submitted the
21:29 - form so in this lecture we're going to
21:34 - implement the database connection and we
21:37 - will create a new database that will
21:39 - hold all the information of the user
21:42 - accounts
21:43 - so let's go ahead and open up our
21:45 - browser let's try to use the local host
21:48 - PHP myadmin okay click on the new link
22:00 - and for the database name type in user
22:06 - accounts and click on create let's
22:12 - create a new table with the name users
22:16 - and for the number of columns we have I
22:20 - think six one problem for the ID which
22:25 - is auto increment the first name the
22:28 - last name the email the phone number and
22:32 - the last is the password so 6 and click
22:39 - on go
22:41 - so for this one the first column is ID
22:45 - and type in with Auto increment option
22:49 - should be enabled the second one is
22:54 - first name with a type of bar chart and
22:59 - the land let's say 100 and next one is
23:05 - last name type bar char and 100 and I
23:12 - think it's email and let's set it also
23:17 - to for char and the next one is the
23:23 - phone number should be virtual also with
23:28 - the length of 50 and the password for
23:36 - char I think 32 will be enough but let's
23:41 - just put it 250 or set it to 50 and
23:46 - click on save
23:51 - so now we have our database which is the
23:54 - user accounts and read the table users
23:58 - with six fields which is ID first name
24:02 - last name email phone number and
24:04 - password I think it's high time for us
24:08 - to define or create our config dot PHP
24:13 - so let's open up our config that PHP
24:16 - file and connect our database to our PHP
24:20 - code so here inside our config that page
24:23 - p5 we need to open our PHP tag and
24:28 - define three variables which is for our
24:32 - DB user which is root and DB password
24:43 - ready be passed in my case it's empty
24:47 - and DB name equals or C user accounts
24:55 - okay so based on these variables we need
24:59 - to define a new object of the video
25:04 - class open closed parenthesis so inside
25:09 - here we need to type in MySQL and column
25:17 - and then host equals localhost and
25:24 - semicolon after that DB name equals we
25:33 - need to append the DB name variable that
25:37 - we have defined above and append another
25:42 - string which is for a Corrupter set of
25:47 - our database which is utf-8 and after
25:56 - that we need to pass in the DB user
26:01 - variable
26:03 - and also the DB password variable or the
26:08 - DB pass variable and let us set an
26:13 - attribute to this DB object below so DB
26:20 - set attribute and open close parenthesis
26:26 - and video attr emmer motor ya air mode
26:38 - and video error mode should be exception
26:49 - so this will give us more information if
26:52 - we encounter problems when we're using
26:55 - the DB object later on so with that
27:00 - we're now ready to use this DB object
27:02 - into our registration dot PHP so open up
27:07 - the registration that PHP file and let's
27:11 - include the config dot PHP into this
27:16 - file so require once the config HB okay
27:26 - and make sure that you save the config
27:30 - that PHP file
27:32 - so inside this if statement we can now
27:35 - use the DB object that we define in
27:38 - config data HP so all we have to do now
27:42 - is type in the SQL of course our first
27:48 - SQL will be insert into users and we
27:55 - just need to list the fields which are
28:01 - first name last name email the phone
28:07 - number and of course the password with
28:11 - values by close and question mark
28:18 - question mark question mark question
28:20 - mark one two three four
28:23 - I think it's five right five and
28:31 - statement for our insert st empty insert
28:35 - it was a debate object that we have
28:39 - defined in config dot PHP and prepare
28:43 - force supply the SQL statement and let's
28:50 - just delete this line so after this is
28:53 - the empty insert let's define result and
28:57 - st empty insert and i'm intoxicated and
29:06 - of course we need to supply the array of
29:09 - the fields are the values coming from
29:13 - the form which is the first name which
29:18 - is the first name last name email and
29:23 - phone number and password
29:28 - so if result is true open closed curly
29:33 - braces echo successfully say hey else
29:43 - let go there were errors while saving
29:51 - the data save your file and open up the
29:58 - browser refresh the page and let's try
30:03 - to input some names here example Jane
30:11 - the last name though and email address
30:15 - will be Jane Doe at gmail.com phone
30:19 - number plus six two three nine eight
30:25 - five six just random numbers okay and
30:30 - password Jane go and click on the sign
30:37 - up button cool now
30:42 - it says successfully save but let's
30:46 - check our database or the PHP myadmin to
30:49 - see if the data has gone through
30:55 - okay so browse let's just click on this
31:00 - browse and you can see we now have the
31:04 - first record which is the Jane the first
31:08 - name Jane last name tho email address
31:10 - Jane Doe at gmail.com phone number and
31:13 - of course the password which is Jane Doe
31:16 - okay so I think our insert method or
31:22 - insert logic is good but there's a lot
31:27 - of room for improvement so for example
31:30 - we want the form not to reload every
31:33 - time we submit the information and also
31:37 - the feedback if successful or not yes I
31:43 - think it's not that good
31:45 - or not that good looking so we will
31:48 - implement the sweet alert library to
31:52 - replace this boring feedback that we
31:55 - have here so
31:56 - the previous tutorial we have learned
31:58 - how to implement or insert values coming
32:03 - from this form into database and in this
32:07 - tutorial we're going to learn how to
32:10 - implement jQuery and the suite alert to
32:14 - replace our traditional feedback so as
32:19 - you can see if you try to implement or
32:21 - if we try to click on or type in
32:25 - different values here to email add task
32:29 - comm phone number password and then
32:33 - click on sign up so we have the
32:36 - traditional feedback here successfully
32:40 - saved which is I think not that
32:43 - intuitive so we're going to implement
32:47 - the suite alert to replace this
32:49 - traditional feedback and instead of
32:53 - inserting the values to the database
32:55 - using PHP we're going to use the power
32:58 - of jQuery to help us insert values to
33:03 - the database without reloading the page
33:07 - okay so first thing we're gonna need is
33:09 - a search for the jQuery library okay so
33:18 - we could click on or either on this
33:22 - links but let's try this the first link
33:26 - jQuery and click on the download okay
33:35 - so here we could actually see all the
33:41 - options that we have for jQuery or for
33:45 - including 2j crystals or project so
33:48 - accordingly we can just use the CDN for
33:53 - our jQuery but there are also option
33:57 - here to just use the CDN or are the CDN
34:00 - is coming from some reputable companies
34:03 - such as Google and Microsoft or they're
34:08 - hosting also be
34:09 - jQuery so for now let's use this Google
34:13 - CDN so open this by clicking on this
34:17 - link okay so we could just copy this
34:21 - snippet for three point X or for jQuery
34:27 - version 3 point something so just copy
34:30 - the script and let's go back to our
34:33 - registration data HP and before the
34:36 - closing of the body tag let's paste the
34:39 - script and below this line let's test
34:43 - our jQuery if it's working or not so
34:48 - dollar sign and then function and close
34:54 - parentheses and open closed curly braces
34:57 - semicolon at the end and first let's
35:00 - just alert something for the team
35:05 - already event so hello say registration
35:11 - that PHP and go back to your browser and
35:14 - let's go to our user accounts in
35:21 - registration than PHP so we have the
35:28 - basic alert or JavaScript alert that
35:33 - says hello so I think the jQuery library
35:37 - is working so the next step will be to
35:40 - include another library which is the
35:43 - sweet alert so sweet alert will replace
35:46 - this JavaScript alert pop-up so let's
35:56 - search for sweet alert okay
36:06 - so sweet alert actually there are two
36:09 - versions with a sweet memory and then
36:12 - the sweet alert 2 which is
36:16 - a newer version in the D in the first
36:19 - one so sweet alert - is a beautiful
36:23 - responsive customizable accessible
36:27 - replacement for JavaScript pop-up boxes
36:29 - so they have here embarrassin between
36:32 - the normal alert and suite polar it - so
36:36 - first let's show the normal alert by
36:40 - clicking on this button this is the
36:43 - native coming from the JavaScript and
36:47 - the second one shallow success message
36:51 - message so this is the suite under - so
36:58 - as you can see this is much much more
37:01 - better than the javascript native pop-up
37:05 - alert so let's go ahead and integrate
37:08 - this suite under - to our project so go
37:14 - to insulation and we just have to grab
37:18 - the CDN coming from the J's deliver so
37:26 - all we have to do is copy this script or
37:28 - snippet and we just have to paste it
37:31 - below the jQuery library that we have
37:34 - integrated earlier okay and now instead
37:38 - of this alert we need to all on the
37:43 - sweet alert - and then fire and of
37:48 - course we need to view or define a few
37:52 - things here which are the title hey
37:57 - title would be hello world and text will
38:03 - be this is from suite 32 and the time
38:19 - will be success
38:23 - [Music]
38:26 - so let's try this
38:28 - go ahead save our file and go back to
38:31 - our browser and refresh our user
38:34 - registration or registration dot PHP
38:37 - okay so as you can see we have here a
38:40 - better and much cleaner pop-up which is
38:45 - coming from the street alert - so hello
38:48 - world this is from street alert to
38:51 - library okay now the next step is to
38:55 - include or to actually work on the
39:00 - jQuery so it would help us to insert
39:04 - values coming from coming from our form
39:07 - and insert it into the database let's go
39:13 - ahead and make some changes to our
39:14 - registration that PHP so in our form we
39:18 - have the submit button which is designer
39:23 - right so instead let's define an ID for
39:28 - this one or let us say register and
39:34 - inside here let us type in lady register
39:42 - if it's click ok this should be function
39:57 - close here and inside this let's try the
40:05 - sweet alert a bit working or not so
40:09 - let's just check T sweet alert or once
40:14 - we click top bottom the submit button
40:16 - the sweetener should appear okay so for
40:22 - now save your file and go back to our
40:26 - browser and refresh our page and let's
40:32 - try to click on this signup button okay
40:37 - so we have here the issue an alert so it
40:40 - means that the script that we're working
40:41 - on is working okay so before that let's
40:50 - set this aside for now because our
40:55 - primary concern is the value is coming
40:58 - from this form okay so let's add some
41:06 - IDs to this film so first name let's
41:14 - just copy this first name last name
41:18 - email phone number and password so this
41:26 - will be last name of course email and
41:32 - phone number and this one is for
41:36 - password so inside here at the function
41:41 - we need to declare a variable for our
41:44 - first name okay and then let's get the
41:52 - value by using the Wow method and
41:57 - specify our IEP for first name so copy
42:03 - and paste last name email address phone
42:07 - number password one two three four five
42:12 - so this will be for nesting and this is
42:19 - for email third one the fourth one is
42:24 - for phone number and of course for the
42:28 - password okay
42:32 - let's indent this so it should be
42:36 - readable okay
42:47 - so at this point we could actually
42:52 - perform a validation to this values
42:55 - right so first name last name email
42:57 - phone number password in so on but as
43:02 - you can remember as you can probably
43:03 - remember that we defined a required
43:06 - attribute or fields so so we can be
43:11 - assured that the values are not empty
43:13 - but we could also check for validity of
43:16 - our values so bar is valid equals this
43:24 - for the check validity pink so we're
43:34 - just going to check if the valid
43:37 - variable is true if it's true let's try
43:42 - to alert true and else false and we need
43:53 - to supply a parameter here and inside
43:59 - the valid is true condition we should
44:04 - prevent the poor from submitting because
44:13 - we want to use the jQuery submit instead
44:17 - of the traditional submit of d4 so in
44:21 - the previous tutorial we have already
44:23 - implemented the jQuery and sweet alert
44:25 - to our project so this time we will
44:29 - continue working on with the jQuery so
44:32 - that it will post our data to the
44:34 - database or to a file and then the file
44:38 - will be processing our information
44:41 - processing the form data and insert it
44:43 - to the database so we have here the
44:49 - prevent default that we have in the
44:52 - previous tutorial so after this line we
44:56 - need to define the age
44:57 - request okay so Ajax requests and curly
45:06 - braces inside and semicolon at the end
45:09 - of this line
45:12 - the next step is to define few things
45:15 - here so the first one is type so the
45:20 - type of this request is post and for the
45:27 - URL we need to define process the page P
45:31 - so we'll be creating this file later on
45:34 - process the page P and then data so the
45:39 - data should be all the information or
45:41 - all the variables that we have defined
45:44 - here so or better yet we could change
45:58 - this or import or place this inside the
46:04 - condition daleon and then the data
46:07 - should be this dead as follows first
46:11 - name then supply the first name and
46:14 - let's just copy and paste this line
46:16 - three four and five plus comma and last
46:22 - name then email email email and phone
46:30 - number phone number and of course the
46:37 - password and let's define another option
46:42 - which is the success so this success is
46:51 - a function that has to eat a parameter
46:56 - okay and let's just copy this one for
47:03 - something if we encounter errors
47:10 - later on create the same thing function
47:14 - in it has the parameter so we need to
47:22 - copy or sweet alert pop-up to display
47:29 - something here so title should be
47:34 - successful successful and the text here
47:42 - sir
47:45 - register for successfully registered
47:54 - right and we could copy and paste this
47:58 - one or our error function so averse and
48:05 - there were errors while saving saving
48:12 - date and type should be error of course
48:17 - okay so we have the first name last name
48:21 - email phone number password in the
48:28 - password volume okay let's just remove
48:33 - this and this line okay so the next step
48:40 - is to create the process that page we
48:42 - find so let's define a new file process
48:48 - that PHP and inside this process that HP
48:52 - let's just echo something for now hello
48:56 - hello from process
49:03 - so we'll know if the process that page P
49:07 - is working or the the Ajax requests that
49:10 - were working on is working so save your
49:13 - file or process that PHP file go back to
49:17 - our browser and refresh our page and
49:21 - let's try to input something here okay
49:27 - first name last name email address phone
49:29 - number and then sign up successfully
49:34 - registered it says successfully
49:36 - registered okay let's change the text
49:41 - instead of successfully registered it
49:44 - should be the data coming from the
49:46 - process that PHP save your file
49:49 - registration dot PHP and go back to the
49:53 - registration that page create a page
49:56 - registration that PHP page and refresh
50:02 - input random email a phone number
50:10 - password and then sign up hello hello
50:14 - from process as you can see so we can
50:18 - say that the process that PHP and the
50:21 - jQuery AJAX request is working okay so
50:25 - the next step is to fully modify our
50:30 - process that PHP so let's just copy the
50:34 - code that we have here early Earth okay
50:42 - and paste that into this process at PHP
50:47 - and instead of checking if the post
50:53 - create is set what we need is just to
51:01 - check if the post is set I mean the post
51:07 - variable is set so that is set then we
51:11 - could get all the values on
51:15 - from the request so first name of course
51:19 - last name email for email phone number
51:22 - in password okay and of course if
51:27 - there's no request let's just echo no
51:38 - data and then we have here the insert
51:44 - for our database right but we don't have
51:49 - the connection for our database so it's
51:53 - just copy be config require once line
51:58 - and paste it here in our process that
52:01 - PHP file so we now have the country all
52:05 - the configurations defined in config
52:07 - that PHP will be included here in our
52:10 - process at HP v so we have here all the
52:13 - values first name last name email phone
52:15 - number in the password so for the
52:19 - password let's make it a little secure
52:22 - by using the sha-1 encryption so to
52:30 - encrypt our password instead of a plain
52:34 - text password the password will be saved
52:38 - us some random characters so it will be
52:42 - less readable if someone got the access
52:46 - to our database so let's save the
52:49 - process that PHP file and of course also
52:53 - this registration dot PHP and go back to
52:56 - your browser and refresh our page
52:59 - okay let's try our let's try first to
53:04 - sign up or click design a button without
53:08 - filling in before okay so as you can see
53:12 - the request will not be processed
53:15 - because there's a validation and if we
53:20 - try to type in values here say for
53:22 - example Chando channel and
53:26 - email is John Doe at gmail.com number
53:35 - any random number or no and password
53:39 - around ambassador I did click on the
53:42 - signup button and it says successfully
53:46 - saved then let's check our PHP myadmin
53:50 - if the information that we have
53:54 - submitted yes save into our database so
53:58 - took at Holmes Indian page we may add me
54:03 - enter your password or username and
54:05 - password go and then user accounts
54:16 - browse seeing user accounts we can see
54:22 - all the informations that we have
54:23 - submitted so first name last name email
54:26 - and of course the password that is
54:30 - hushed by sha-1 encryption okay so I
54:37 - think that's all there is to rate on how
54:39 - to create user registration form in PHP
54:42 - I hope you learned something in this
54:44 - tutorial thanks
54:54 - you