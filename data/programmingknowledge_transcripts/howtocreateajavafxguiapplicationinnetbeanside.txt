00:00 - hello guys in this video I'm going to
00:02 - show you how you can create your first
00:04 - Java FX project in NetBeans IDE so
00:08 - hopefully you have downloaded and
00:10 - installed NetBeans IDE so to create a
00:14 - Java FX project in NetBeans IDE you just
00:17 - need to go to the file and then click
00:22 - the new project here and in here you
00:25 - will be able to find some categories and
00:28 - in the categories you will be able to
00:30 - find this Java FX category also okay so
00:34 - just choose this Java FX category and
00:36 - the project type we want is the Java FX
00:40 - application so just choose the Java FX
00:42 - application here and then click Next and
00:45 - then it's going to activate jar FX for
00:49 - you ok so just wait until the Java FX is
00:54 - activated and once jar FX is X debated
00:57 - on your NetBeans is going to give you
01:00 - this kind of interface which will ask
01:02 - you for the name of your application
01:06 - right for example I just want to name my
01:10 - Java FX application as Java FX
01:12 - application itself ok so just give the
01:16 - name here this will be the location
01:17 - where your Java FX project will be you
01:21 - know created and then you have the
01:25 - project folder ok and it's going to use
01:28 - jdk 1.8 which is installed on my system
01:33 - and you have this option which says
01:37 - create application class so just leave
01:41 - it as default and then click finish so
01:46 - what it's going to do is it's going to
01:48 - create our Java FX project for you and
01:51 - it's going to create a main class for
01:56 - you also so you see this is the you know
02:01 - default project we just created by Java
02:04 - fix for you and when you compile and run
02:07 - it it's going to show you let's see what
02:10 - it shows so just
02:12 - click this Run button here is going to
02:16 - build your project first and it's going
02:18 - to run it so let's wait for the building
02:23 - process and once it's compiled
02:26 - successfully it's going to run our
02:28 - application so you can see our
02:30 - application is running and it says say
02:33 - hello world and once you press this
02:35 - button the hello world is printed here
02:38 - ok so that's all fine but what this code
02:44 - and what this code is doing here so we
02:48 - will see this code one by one and what
02:52 - we will do is we will just for example
02:55 - delete everything from here so that we
03:00 - can write our code once again same as
03:03 - this one and we will see what is this
03:08 - code doing step by step so I'm going to
03:10 - just delete whatever is in the start
03:14 - method okay so this is the barebone you
03:19 - know class so first of all you create a
03:22 - class for JavaFX as we have named our
03:26 - project as JavaFX application so it has
03:29 - created the JavaFX application class for
03:32 - us so first thing you need here is to
03:34 - extend your class with this application
03:37 - class ok and when you amply extend your
03:42 - class with this application class this
03:45 - method has to be overwritten which is
03:49 - start ok and this mastered is inside the
03:54 - application class which is launched and
03:56 - this method has to be called inside your
04:00 - main method ok so this is our main
04:03 - method and this launch method should be
04:06 - called inside your main method and this
04:08 - is responsible for launching your you
04:12 - know app right so just call launched in
04:17 - your main method with this argument ok
04:20 - now we need to override this start
04:25 - and you can see this start method has
04:28 - the argument which is stage argument
04:34 - right so this is a class and we are
04:37 - using the stage class to you know
04:40 - provide the argument from start and this
04:43 - is the stage which is responsible for
04:47 - your java effects for example window so
04:50 - stage is the very basic you know part of
04:54 - your Java FX applications once you have
04:58 - the stage you can just copy this primary
05:01 - stage and when you just paste it inside
05:04 - your start method and call a method
05:08 - called show what it's going to do is
05:11 - let's save it and let's run it once
05:13 - again and what it's going to do is it's
05:16 - going to give you this kind of empty
05:19 - window so this is the stage for you now
05:23 - inside the stage
05:24 - you need to have scenes and inside the
05:28 - scene you will be able to you know have
05:31 - your layouts and inside layout you will
05:33 - be able to have your widgets like
05:35 - buttons and labels and other things
05:38 - right so what we are going to do next is
05:43 - for creating the scenes and for the
05:48 - layout first of all we need to have a
05:51 - widget so for example we will need to
05:53 - add a button to our you know layout so
05:58 - just right button and I will name my
06:03 - button object as BT and is equal to new
06:08 - button and this button takes one
06:13 - argument which is the text which is
06:16 - shown on the buttons for example I will
06:19 - just pass one argument which is a string
06:22 - and I will just say click me ok so this
06:26 - will be the text which is shown on the
06:29 - button now in order to you know show
06:35 - this button on some layout we need to
06:37 - create a layer
06:39 - okay so JavaFX has different layouts for
06:43 - example horizontal box or vertical box
06:47 - or stack pane we are going to use a
06:50 - layout called stack pane so just write
06:53 - stack pane here and we are going to name
06:58 - this layout as root for example okay is
07:03 - equal to new stack pane and then what we
07:08 - are going to do is we are going to take
07:10 - this root object
07:12 - and then we are going to get the
07:15 - children so just right get children and
07:20 - then we will just call a method called
07:23 - add okay and we will add this button
07:27 - object here in the add arguments okay
07:31 - and after this so we have the layout and
07:35 - inside layout we have added the button
07:37 - now we need to create a scene so just
07:40 - write the scene and create a scene
07:43 - object and we can name our scene as seen
07:46 - itself is equal to new scene and once
07:53 - you have the scene object what you can
07:56 - do is you can just pass this root object
07:59 - here okay so you created a scene and you
08:04 - pass your layout inside your scene right
08:07 - now once you have layout and scene you
08:10 - just need to just call this primary
08:12 - stage and then just call a method called
08:14 - set scene and then pass your scene
08:18 - object here which is this one here okay
08:21 - so this is your basic you know layout
08:26 - for your JavaFX scene and stage right so
08:31 - we will save our project and run it
08:33 - again and now it's going to give us this
08:38 - kind of you know button inside the scene
08:42 - which is inside the stage okay but you
08:47 - can see when I
08:49 - run this it's going to give us the
08:51 - minimum width and height according to
08:54 - the button so to set some width and
08:56 - height to our scene you go to this
08:58 - object once again which is seen and then
09:02 - it takes two argument one is the width
09:04 - and second is the height so for example
09:07 - I am going to give 500 by 300 here and
09:11 - then save my program and run it once
09:14 - again then my scene would be 500 by 300
09:18 - okay so now it has a width and height
09:22 - here okay now for example I want to give
09:27 - some action to my button so when I want
09:29 - to press a button and I want to print
09:31 - hello world so how can I do this so what
09:35 - I'm going to do is I'm going to take my
09:37 - button object here and in here just
09:40 - below the Declaration of button object
09:42 - I'm going to set an action to my buttons
09:45 - just right dot call our method called
09:48 - set on action here and it's going to
09:52 - take one argument which is event handler
09:56 - for your button so just write new event
09:59 - handler so new event handler and just
10:03 - press this intelligence which says event
10:06 - handler here and now it's going to
10:09 - automatically create this override
10:13 - method for us which is for this event
10:17 - handler okay so right now it says inside
10:22 - the handle method we are throwing some
10:25 - you know error so instead of this you
10:30 - can just print something so for example
10:34 - I want to print some message for example
10:37 - hello world inside this handle so for
10:41 - example when the button is clicked I
10:43 - want to print hello world so inside the
10:45 - handle method you just need to just
10:48 - write system dot out dot print line
10:52 - hello world this here so this is going
10:56 - to print some message on the console
10:58 - okay so this is how this button press
11:02 - event will work so just save your code
11:04 - and once again run your code by clicking
11:08 - this button and now it's going to run
11:12 - this code and now when I click this
11:14 - button click me it's going to print this
11:17 - message hello world here so I can just
11:20 - click this multiple times and every time
11:22 - when I click this button it prints hello
11:25 - world here ok so this is how the basic
11:29 - Java FX program works inside your
11:33 - NetBeans IDE I hope you have enjoyed
11:35 - this video please rate comment subscribe
11:36 - and bye for now