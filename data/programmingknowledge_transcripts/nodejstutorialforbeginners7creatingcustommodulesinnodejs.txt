00:00 - hello guys welcome to the next video on
00:02 - nodejs tutorial for beginners in this
00:04 - video we will learn how we can create
00:07 - custom modules in node.js now in the
00:10 - previous videos we have already seen how
00:13 - we can use built-in modules in nodejs
00:17 - and the example of that was uh using the
00:21 - module called
00:23 - HTTP so in the previous videos we have
00:25 - used a built-in module which was already
00:30 - built in a nodejs which was called HTTP
00:34 - and the way we have used it is like this
00:37 - so we have used uh this require keyword
00:40 - and then uh use the name of the uh
00:43 - module which we wanted to use right and
00:46 - we have assigned this uh module to our
00:51 - variable so that it has created an
00:55 - instance of this module and using this
00:59 - variable we can call any method inside
01:03 - this uh module which it contains right
01:07 - in a similar way in nodejs we can also
01:11 - Define our own custom module now for
01:15 - example we want to uh Define a module
01:19 - which says hello in different language
01:22 - so we can Define our custom module now
01:26 - for that what we can do is we just need
01:29 - to create create a new file for every
01:32 - module we want to create so let me go to
01:36 - the command line and let's see what are
01:39 - the files which are there in uh inside
01:42 - my project right now so as I can see I
01:46 - have right now only app.js which is my
01:49 - main uh file you can see here also the
01:52 - same right and now I'm going to create a
01:55 - new file for example I'm going to say a
01:59 - the that it's a
02:01 - hello.js for example and in this new
02:05 - file you want to uh create a function
02:08 - for example I will create a function and
02:13 - first of all let me create a variable
02:15 - which has the name
02:18 - save hello in English for example right
02:24 - and to this variable I will assign a
02:26 - value which is returned by a Anonymous
02:30 - function so we can define an anonymous
02:33 - function like this we have already seen
02:35 - in the previous video and then this
02:38 - function returns for
02:39 - [Music]
02:41 - example let's see what it returns so it
02:45 - returns hello in
02:47 - English something like this right and
02:52 - the way we can use this uh function in
02:56 - our main app.js is we just need to use a
03:01 - keyword called exports right so here we
03:06 - have defined uh this variable and if you
03:09 - use instead of this
03:11 - VAR if you use
03:15 - exports something like this then you can
03:19 - use all the content of uh this file in
03:25 - the other file for example right now how
03:28 - you can use
03:30 - use this file content into the main file
03:36 - for example we use the same uh construct
03:39 - we just use VAR and let's say uh our
03:43 - variable name we want to give here is
03:46 - hello right is equal to
03:50 - require just use require and as we have
03:54 - done in the built-in module we have just
03:58 - called the name of of the module for
04:00 - example we were using HTTP we have
04:02 - called the name of the module so the
04:05 - rule in uh nodejs is when ever you are
04:08 - using a built-in module which is not
04:12 - created by uh you then you can use
04:17 - something like name of the module only
04:20 - otherwise if you want to use a custom
04:23 - module you can just write something like
04:26 - this so you can just write Dot and then
04:29 - forward slash and then for example the
04:33 - name of the file so
04:35 - hello.js something like this okay and
04:39 - now using uh this uh variable you can
04:43 - call a function so I will just use
04:45 - semicolon here and then for example I
04:48 - will just uh console log
04:52 - the value which is returned by that
04:55 - function right and then what I want to
04:58 - do I will just use this variable and
05:01 - then call a method which I have defined
05:04 - here which is this one so whenever you
05:09 - uh you know require any file for example
05:12 - all the method inside that file are
05:15 - available in this uh file which in which
05:18 - you have required this file right so I
05:21 - can just write something like this and
05:24 - then don't forget these brackets because
05:27 - this function have these brackets right
05:30 - without any argument right and then save
05:34 - your code and then go to the command
05:36 - line and then just run your app so just
05:40 - write node
05:43 - app.js and it gives me error so let's
05:46 - see what what the error is the spelling
05:49 - of export is wrong so just write
05:53 - exp o RTS right so just write
05:57 - exports do say hello
06:00 - right and then once again run your code
06:03 - and now it prints hello okay so in order
06:07 - to uh you know use the content of one
06:11 - file into other you need to use this
06:15 - keyword before your UH function name for
06:18 - example right now if you uh want to use
06:23 - multiple uh functions you can just write
06:28 - something like this so for example first
06:31 - function is say hello in uh English then
06:35 - the second function is say hello
06:39 - in Spanish for example and it
06:44 - says hola something like this right now
06:49 - this uh method is also available so both
06:53 - the methods are available now in the uh
06:57 - app.js file so instead of uh using say
07:00 - hello in English we can just say say
07:02 - hello in Spanish and then we can run our
07:06 - code once
07:07 - again and it prints hola right so this
07:12 - is one way of uh you know uh using a
07:16 - module custom uh module right the other
07:19 - way
07:20 - is you can just use something like this
07:24 - so what you can do here is you define
07:28 - your
07:30 - functions uh these variables remove the
07:34 - export from here something like this and
07:37 - then you
07:39 - just use uh these colons here and then
07:45 - here you just write
07:47 - uh module
07:51 - dot exports and in the curly braces just
07:55 - enclose both the
07:58 - functions something like this okay and
08:03 - just use comma here and also don't
08:07 - forget to assign this value here okay so
08:11 - just write module. export and then you
08:15 - have uh these object inside the these
08:19 - curly braces for example say hello in
08:22 - English and say hello in Spanish and
08:26 - this is also uh this kind of uh you know
08:29 - export can also be used so let's see
08:32 - what's the result now I hope it will be
08:36 - same it's the same result right so this
08:40 - is the second way of uh exporting your
08:44 - uh you know methods right the Third Way
08:48 - of uh using modules is for example you
08:53 - have uh these uh object and elements
08:56 - here right and then you can uh assign
09:01 - this to some uh new object for
09:05 - example
09:08 - War hello right and then you can uh just
09:13 - use module. export and then assign the
09:18 - value of hello here right and we are not
09:22 - doing anything special here you see we
09:26 - were using this modules. export here
09:29 - right and what we have done is instead
09:32 - of using this we have assigned the value
09:36 - of this object to a variable for example
09:40 - VAR
09:43 - hello and then we have just assigned the
09:47 - value of hello and we have exported this
09:50 - uh module right so essentially the same
09:54 - but this is more readable so this says
09:58 - that this is a our hello module and it
10:00 - have two functions inside it right and
10:05 - it's also going to give the same results
10:08 - so once again run the code says the same
10:12 - let's use both the function so say hello
10:16 - in Spanish and say hello in English and
10:20 - then we can just run our code and it
10:24 - prints hello and hello hola right so in
10:29 - this way you can define a custom module
10:31 - in nodejs I hope you have enjoyed this
10:33 - video please rate comment subscribe and
10:35 - bye for now