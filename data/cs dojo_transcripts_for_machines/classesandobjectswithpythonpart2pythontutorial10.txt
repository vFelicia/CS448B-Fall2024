hey guys this is part two of my introduction to classes and objects with Python and in this video I'm going to talk about how multiple classes and objects can interact with each other in Python now if you're new to these concepts I'd recommend my introduction to classes and objects videos first and in this video I'm gonna use the same example as part two of those two videos so if you already watch that one you can just skip over to this time in this video to check out my Python code okay first of all here are the class on objects we created in the last video we have the robot class with three attributes named color and weight and one function introduce self and then out of this class we created these two objects or 1 and r2 containing these attributes for example r1 had Tom as the name red as the color and 30 as the weight and on top of that we're gonna create this class called person representing a person of course and it's gonna have these attributes name which is going to be a string personality which is also going to be a string and is sitting which is going to be either true or false and then if this is true that means that this particular object this person is sitting and if it's false that means that this person is not sitting and then out of this class we're gonna create these two objects the first object will have the name Ali's personality aggressive and is sitting will be false and the second object will be Becky for the name and her personality will be talkative and is sitting will be true so this person will be sitting now just a quick side note in case you're not familiar with these values false and true they belong to a special data type called boolean so if you have numbers like these there are 4 1 13 and so on there are integers and they refer to as int in Python and if you have collections of characters like these enclosed in double quotes or single quotes there are strings of course worst STR in Python and if you have true or false they are boolean or the spool in Python okay back to my main point we're gonna put this person object in a variable called p1 and we're gonna put this other person object emp2 and the person class will have two methods as well the first one is gonna be called sit down when you run sit down for example on p1 the is sitting attribute will be turn true because this person will be sitting after running this function and then the standup method is exactly the opposite so for example if you run p2 that stand up the is sitting value of p2 will be false because this person will not be sitting after standing up and here how can we show the relationships between these two sets of objects for example what if we wanted to show that p1 this person owns this robot r2 we can do that by adding an extra attribute to the person class let's call it robot owned and then if you want to show that p1 owns r2 we can set the robot own attribute of p1 2 or 2 and then if you want to show that p2 owns or 1 this robot named Tom you can set the robot own attribute of p2 to r1 now let's see how we can do that in Python here we have the class that we defined in the last video called robot he had a constructor in it plus a function called introduce self and then we also learned how we can create objects out of that class just like that for example R 1 equals robot Tom red 30 and then the same thing for our two and now let's create a new class here this is gonna be called person of course and then it's gonna have a constructor for that you can just write def to underscores in it two underscores again self and then let's have it take three additional arguments on top of self and pi/4 name personality and is sitting and then you can set this new object's name to n by writing self dot name equals n and then you can do the same thing for personality and is sitting and then this class will have two additional methods on top of the constructor like we saw earlier the first one is sit down this is not going to take any arguments except for self and to implement this you can just write self dot is sitting equals true and note here that true here is capitalized and then you can do the opposite for stand up stand up self and then itself that is sitting equals false again the word false is capitalized here and that's just how it works in Python let's run this cell to load this class once this class is loaded or once this block of the code is run you'll be able to create a new object out of this class you can do that by writing P 1 equals person note here that the word person is capitalized double quotes Alice comma double quotes aggressive comma false so this new object will have Alice as a name aggressive as the personality and false as is sitting that's the same thing for p2 by writing p2 equals person Becky comma talkative comma true let's execute this block of code and these two objects have been created now like I said earlier let's say we want to show that p1 owns the first person owns the second robot r2 to show that all you need to do is like I said earlier set the robot owned attribute of P 1 to R 2 you could do it in a couple different ways one way to do that would be to change the constructor and then have it take maybe an additional argument let's call it R and then here you can just say self dot robot own equals R that's one way to do it but you could just write here P 1 dot robot own equals R 2 as well and that defines a new attribute in P 1 called robot own and sets it to R 2 let's just do that let's just do the same thing for P 2 as well let's say P 2 owns R 1 so we're gonna write P 2 the robot own equals R 1 let's execute this piece of code and you'll be able to access this robot owned attribute and say P 1 just like you can use any other attributes so here if you write P 1 dot robot owned that will give us R 2 and then further if you right dot introduce self this is the same thing as saying R to the introduce self so this should print out my name is jeri because that's the name of our two let's see if that works by running this block of code and it does we see my name is Jerry right here ok you'll be able to find a link to my sample code in the description below both as a plain Python file and as a jupiter notebook file and actually i'm not sure how many Python videos I'll be able to make in the future because right now I'm really focused on my data structure series if you want to learn more Python though I personally recommend two of my online courses which you should be able to take for free the first one is called get ready for your coding interview and its own lynda.com this course is basically for practicing your problemsolving skills with Python and the second course I recommend is called introduction to data visualization with Python and this one is on this website called flora site and this one should be good if you're interested in things like their analysis data science or machine learning both of these courses are taught by me and you should be able to take them for free by signing up for their free trials for seven days or 30 days I'm gonna put links to those courses in the description below in case you're interested or you can just go to CS dojo dot IO to find those courses okay as usual thanks so much for watching my videos and I will see you in the next one