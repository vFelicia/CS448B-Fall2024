the other day I had the awesome opportunity to interview Ian youu who's the creator of VJs as well as V and we covered a lot in this conversation including why he moved to Singapore how he started V in the first place as well as a little bit of view versus react discussion so let's just get right into it I was originally born in China I lived worked and lived in the United States for 15 16 years before I moved to Singapore two years ago so uh yeah so it's been a bit over two years in Singapore and I'm loving it here so everything is great thank you uh so the first question I had was why did you move to Singapore um yeah I do get asked that a lot um yeah so I um I I think for me it's uh a lot of it is just personal family preferences uh so I I've lived and worked in the US for 15 16 years years as I said um but I started doing fulltime open source in 2016 so um during that time and I started working remote in around like 2014 so I've been like working fully remote fully at home for 10 years now um and when when you get used to that you realize I realize like I no longer am really like geologically confined to any one place right as long as I have a legal status in the place I can just go there and work there it doesn't really matter where I stay anymore so um and but but I I'm say in the US still for many years mostly because it's it's quite stable my wife still worked there uh but later on after we had kids and then there's covid and during covid I was uh I think covid was kind of like the trigger moment for me I was uh a bit felt feeling like um once I got cut off completely cut off and and just I have to stay in my home all the way and I realized like there's nothing too much in the US that makes me that happy right outside of um and in a way I always because I grew up in in cities in in China and I always liked City environments but again like moving back to China seems you know a bit risky in in certain aspects so I wanted to find a place where there is a good healthy mix of Western and Eastern culture you know still International uh still give allow me to get exposed to a very diverse group of people uh and also a bit closer to to family in China so yeah so Singapore actually uh jing jong here uh told me about the uh the tech Pass Program the Singapore open like two years ago so I was like oh this looks like just like it's like designed for me so then I went came here yeah you said Tech pass yeah it's a special Visa program for like Tech entrepreneurs yeah interesting so coming from an Asian background myself I curious if you feel more comfortable in a more Asian environment I would say you know I still consider myself a foreigner here right like uh Singapore has its own very you know local culture and everything I don't I won't pretend that I'm like I know everything about Singapore at this point but of course like a lot of like people coming from mland China people from United States so I feel very comfortable here I would say like everybody I talk to like I know there's something that con connect us in common uh I mean in the US I wouldn't say I'm not uncomfortable but like I just uh I would say I never really had the strong urge to like americanize myself you know yeah right that makes sense to me um so continuing on the Singapore topic a little bit more what was your impression after you moved here you know was it just like you expected um in a lot of ways I think workwise it didn't change too much because most of the work we do is online actually it made certain things a bit easier because we have a lot of team members based in Asia time zones so that actually made some meetings easier that made other meetings more difficult because now every every time I have a meeting with people in the US it's like either like 8 in the morning or like 10 in in the evening but um other than that uh LifeWise everything is pretty great uh I would say everything is great except it's getting more and more expensive um um kids education is actually good uh because um I think one of the reasons is for for the kids education uh I feel like I want them to grow up in an environment where they get exposed to both Western culture and Eastern culture I don't want them to be sort of like narrowminded into a monoculture environment and I think Singapore is a great place for you to you know get just uh see there are different people all living here in this tiny City but you see people from everywhere basically so um and what else uh I think I actually got to uh got a bit more new friends in Social wise like a lot of kids parents who also work in the tech industry uh happen to know a lot of people from China also like uh you know I met some unexpected connections here I would say that those are pleasant surprises yeah nice um so something I learned about VI after I came here you know a few days ago is that it's been used by some of the bigger Chinese companies which I find interesting uh I guess you know I don't know if I should say this but the the the big elephant in the room is react right it is the most popular framework at the moment in North America at least but I know that view is popular in certain regions maybe certain industries I'm not sure like in certain places in Europe as I said for certain Asian companies uh do you have any like thoughts comments on that uh so I think one thing about react is it's uh it's popular I think one big reason is it has a very strong Co kind of uh I don't know how to describe it in English but it's like starting from Facebook and all those people who previously worked at Facebook went out and started uh startups and then you have all these other fellow companies in Silicon Valley where they're like oh like Facebook is doing this it must be good right Netflix was like one of the earliest adopters of react and really helped push it so this kind of network effect in US silicon Val Valley Bay Area you know tech companies this kind of network effect is super strong and Vue has always played this kind of Underdog path where we're independent we have no big company backing everything is community based Word of Mouth um but I think there's a big misconception around View's popularity in terms like oh it's like only popular in China or oh it's only popular in certain industries I think it's pretty widespread uh and surprisingly I think so so there are there are a lot of different kind of cases some of those are public facing some some of those are internal facing right so a lot of companies use view for like internal dashboard they don't even talk about publicly this is very very prevailing in China but in fact I think it's actually focusing the medium to small business group sectors a lot of these large companies in China are like mostly react nowadays I think for big companies it's very natural for them to make make decisions to just like you don't want to get fired for choosing a Tex stack so it's like the the old days people choose IBM just so it's like a safe bat react is that safe bat for a lot of people if they really don't know what to choose they they just choose react with safety right they don't want to take the responsibility because they can just point fingers and say like everybody else is using react so if there's a problem it's these Engineers problem not because of me choosing a wrong stack that may their lives harder um I think that's uh that's just the way it is but um outside that I think uh V is actually doing surprisingly well in certain sectors like uh it's weird but a lot of these luxury Brands and watch brands like their front ends are like it's there are a lot of am using view like Louis Vuitton and like all these like maybe 10 out of five out of 10 favorite was brands are using view for them for their front ends uh and then um there are public companies like gitlab which is completely built their front end around view um and there are also I mean in China it is indeed popular say like uh pan group or Huawei they do use view very very extensively um and in North America I would agree like it's react is definitely much much more popular there but uh we found that view is a I guess outside of us like in Europe we know like Mayes which is like the largest uh logistics company in the world they're all view uh Wikipedia is all view um so there are large organizations that's outside of the North America that's very heavily ried on a view as their whole like infrastructure and their companies um and in a way we don't talk about this a lot because these are you find a lot of these companies are not like the kind of like trendy Silicon Valley Tech companies that would send Devils out to the world tell them about like hey look we are using VI like we're proud of that like but it's like it was a trendy thing to do for a company to send their Engineers out to Tech conferences and say we migrated our stack over to react uh it's great you know like you don't see that about view that much maybe because just like the industry sector that is has a uh saturated in people usually don't do that and I think that has to do with a barrier of entry with you because um in a lot of ways you don't really need to be a JS expert or a view expert to actually work with it efficiently that's the strength of it right that makes it easier for these non te focused Enterprise to adopt view but at the same time these companies don't really go out of their way to promote what tech stack they're using uh you know like the other day I I I visit SI China website and they didn't even changed the fav con so I see oh now I know s China is using view so because they using the view view favon and S is actually one of the most famous investment uh company in the world yeah yeah uh some anecdotes because we recently uh ended support for v2 right so um we do have a program where people can reach out to say like we still using V2 we want to you know have expended support for it so a lot of these comp companies we never knew they were using view until they reached out like uh like in Singapore even like NT I think it's either n and us like they actually reached out to us like saying we have some programs that's built using View and what do we do about it I was like I didn't know you guys are using it yeah I hope the government will reduce some of your tax you know uses view okay we know about the reasons why Evan came to Singapore how about you Wy like how do you feel for the few days you stay here about Singapore right so I I am pretty new here you know like you said only for a few days but it's I I I to if I could summarize my experience here in one phrase it would be too hot outside to cold inside which is true yeah and uh so as of that you know my experience here has been pretty positive you know the food has been pretty good I've been enjoying it uh I guess the nature of it the citycape I enjoy it too I I I heard that it's really safe here and I I feel safe and that's something I enjoy too okay okay uh I you posted a a lot of videos about passing and algorism uh and you ask about uh Evan about VJs and rejs and then what's your view about VJs and rejs from the backend view yeah right so generally my advice uh for people who want to get a job in I would say North America in particular is to you know first consider react because it it is the dominant framework at the moment in North America I should emphasize but it is a personal choice right you know I think um in general when choosing a framework or a piece of tech it's more about what you do with it you know the problem you solve and less about the tech itself so you know I think the short answer would be just find what works for you okay so we encourage people to use vgs when you when you go back Vancouver uh I think what I what I've generally said in the past you know not so much recently but is and you know you could correct me if you disagree with me but is that uh if you want something that's easier to get into then something like you know view or spout uh would be a you know better choice than react because react can be kind of you know it's a lot of stuff to get into okay okay I heard about like Evan have some questions want to ask W as well so uh what do you want to ask then uh I just want to add a few things about like telling people what to use right I don't think like we should tell people what to use I think you know uh realistically if like it depends on your goals right if you're looking for a job makes sense like you go with the most popular option because like there are just more opportunities out there but I think at the same time I would always encourage people to not lock themselves into a sort of a single framework kind of developer I don't think that's going to be healthy for their longterm career path uh because the industry changes really fast right like uh and in a lot of ways there are a lot of very specific things about Frameworks that you might need to learn to use that specific framework efficiently but maybe it doesn't really apply anywhere else right so you're investing a lot of time for these uh specific things but at the same time if you explore multiple different options doesn't have to be view right like solid spell other things or even like HTM X like right you try these different paradigms you you try to generalize and see the connections between them I think that helps them a lot more than just the be forever deep into a single stack like as a developer like it gives you a more architecture level sort of perspective on the front end rather than just being an implementer of very specific tasks I think it's better for their longterm growth in a way nice nice thank you and you have some questions you want to ask W as well uh yeah if you have anything to add yeah so totally agree with it what I wanted to ask or add on the you know view versus react conversation from earlier is you know what's what I find pretty strong about react is the whole ecosystem you know versel with nextjs and uh there's obviously beat now too uh and uh there's react native and I know V has some of that too so I'm I'm curious what you think about that yeah so uh a lot of people say that I think in reality um there are very mixed miscon there are misconceptions mixed with just unfamiliarity I think uh framework ecosystem has sort of a threshold you cross once you crush that thr threshold the marginal gain of a bigger ecosystem actually starts to decrease and to a certain point I would say too many options isn't necessarily a good thing for especially for beginners uh you just you're it's like I was recently researching home coffee setups I'm just completely overwhelmed because there are so many different CH things to choose from uh in view I think for some of the most critical pieces we always have mostly have one blessed uh solution that is very wellmaintained and it's like very aligned with the core philosophy of you and then outside of that uh we did have some setbacks during the V2 to V3 transition because a lot of the old library supporting V2 were kind of just unfortunately kind of got deprecated along the way but with the V3 ecosystem M uh maturing we are seeing basically everything you can think of in the ecosystem we have a pretty close equivalent um ASO like even for like 3D stuff we have trust JS which is the 3js reper for view we have like people have ported Stan radics to to view as well so um I think in a lot of cases the ecosystem is large enough to pretty much have a solution for everything you want uh I think usually you you feel the paino when you re uh run into very very neich things like drag and drop I think that's something we still need to improve on but uh it really depends on like how niche of problem domains you delve into think I definitely react ecosystem stroke has advantage in that case but I think this kind of a difference is often exaggerated uh because a lot of rabs simply don't know there are equivalent Solutions in in the view ecosystem right um so I think and that's your question you know based on that is if a company is trying to decide what framework to use you know they might have used different Frameworks before they might be a luxury watch company or government Tech whatever that might be how would you advise them to choose a framework I would say um so there are I think for a lot of these companies really like the choice comes down to the hiring part like people would think they are more devs no react so it's easier to hire react deps but I would argue that react is harder to master so like given a thousand react developers I would say only maybe a hundred of them actually knows react that well but you know it's it's so difficult these days I think like like if in an interview if ask re to explain me why use effect has to run twice like I don't know honestly like uh but but I think like one advantage of VI is that uh you can really just find a competent JavaScript developer and they can pick it up and learn it and not having to spend too much time about the framework specific ocres because uh uh in a lot of ways react is the only one that tries to go against the grains of the host language it is implemented in like uh if you look at like uh all the other Frameworks right uh pretty much everyone has converged on signos and I think that's because signals is just much more in alignment with the mutable nature imperative nature of JavaScript and when you learn the language first and you then move one level up to a signal based reactivity system like the one View signal uses that the one that spelled is also kind of convergent into I think this aligns much better with the the default path you're on in react you basically have to like kind of turn your head around and say this is now the react way of doing things everything you learned previously about JavaScript like some of them still apply some of them like you you not need to realize this function actually runs multiple times instead of just one time I'm I'm going off track here but like uh I think there's just a um if you take the cost of actually hiring someone who's good at their job and then getting them up to speed with the framework Choice here I think uh view could be a more like economical choice especially if you don't have a wide funnel of these like ready react ready developers here right that's super interesting to hear um and you know I've heard I think your story of starting view in the first place so I'm not going to ask do that here but I haven't heard your story of starting beats if you could get into that that' be great sure uh so for V it started as um my frustration with the the tool chain that we were using for view we had a solution called vli uh which was webpack based so I think personally for me it was my over engineering moment where we just did too much in the CLI because we felt like some people like that but but I always felt uh the CLI did too much we tried to abstract too much on top of webpack which is already complex the bill performance was getting frustrating um and everything so um the initial idea was to just do a simple Dev server that would transform a view component on the fly as the HTTP request comes in and then just send the JavaScript back um and that started as a prototype that worked out really well and I realized halfway point that it doesn't have to be view specific it could be just a general Dev server that uses this approach with Native esm es module Imports um there are were a few other Solutions exploring the same Approach at that time so there were snow pack there was es Dev server and v um but V was the first one to actually Implement hot module replacement with this uh with this paradigm um because that was kind of the cable Stakes for vli uh and the web hack based solution so we I felt like this is the thing to crack if we want to make this whole Paradigm actually work and once we had that I think V really just kind of um exploded as after we decided to make a framework agnostic because because people realized um there's we also intentionally made the configuration as minimal as possible because that's just the all these work we did over the years with whack we realized like a lot of these even different Frameworks like react views well we have all converged on the same set of lower level configurations that you nowadays devs just take for granted uh if that's the case why do you still want them to configure it by themselves why don't we just make it work out of the box so V kind of became the out of the box outof the Box replacement for vcli for create react app um and then we see other Frameworks adopting it because they realize hey we don't want to reinvent the wheels why do we have to why why does everyone have to ship their own web Haack conf configurations when you can just use vad so I think that convergence just happened uh so we see spelt solid and then slowly we see new Frameworks starting to build on top of it uh Astro was actually made by the same team that made snow pack and they just ended up deciding to switch over to V because they don't want to spend time on a bundler uh and then we have a quick uh and remix just recently moved over to V as well um so overall I think it's just this it's just again like similar to view I just was scratching my own itch and uh turns out it's something that people needed nice um I think I want to ask you the same question about this topic that as the one I asked earlier about be uh when it comes to you know these build systems and things like that how would you advise a company to choose one um I think at this point um there are so when you comes to developer experience I would say the only legit choices now are really V and maybe some Rust based bundlers like rsac and if you have a really heavy weback configuration that's Legacy and you want to just get faster builds rsac would be the easier adoption path but if you're more have Greenfield projects you're want to just have a leaner setup or you're already planning to adopt a framework that's feed based then there's really not much debate there uh our goal is to obviously make try to make V the ideal solution for all cases so I would I would admit that uh in some extreme cases like where you have like 10,000 modules unbundled uh in a Dev server feed can be a bit challenging in certain cases uh but we are working on things to improve that so in the long run we do hope that V will become the universal solution to reduce the friction for the entire FR end space nice um I feel like I've asked you know most of stuff I wanted to ask I'm curious if the audience has any questions or if we have questions from an we'll see yeah because I want uh Evan said he has some questions for you so I want to take some Secrets like you know I I'll ask the question YouTuber as like 1.92 million followers yeah that's my future yeah so how um so when you have that many subscribers on YouTube like how do you manage the community like how do you like split your attention like how do you get like user feedback and all that right so it is a challenge and I should say I I was you know kind of slow on YouTube for a while but I I still kept posting a lot on you know other platforms like Twitter LinkedIn things like that and the way I see you can't respond to everyone that's that's not possible and you know other people try but I don't even try um but what I do do is you know I read comments I read I I listen to people I sometimes talk to people directly on like live audio events or on things like this and then try to basically listen understand people and to me that that's all you know what it comes down to so and you know you you were asking about like how do you grow your YouTube channel and ultimately it's all about listening and it might sound kind of funny because you're talking on YouTube you're not like listening to people other people necessarily when you record but you do need to listen to the feedback you know the comments and things like that the market where the market is going and then once you have that understanding um you know choosing what topic to make a video for is going to be easier or blog post or whatever whatever you do you know people might think oh you know you got to have like good equipment you can have good mic these things are true in a way but the more important thing is again listening understanding the market and you know basically talking about the right topics right so speaking of topics so uh did you start uh your YouTube content like so have you have like did pivot in terms of topic since you started right I I I you could say I've pivoted you know multiple times because I've covered a lot I started with coding interviews getting into fangs stuff like that and then people started to ask me for you know more beginner oriented tutorials so I did python tutorials uh I did ja a few JavaScript ones and people started to ask me think things like what's the difference between software engineering and computer science degrees I didn't know so I did some research made a video about that you know just stuff like that see so uh in term on the on the business side is uh YouTube your main source of income or do you have a more you know diverse sort of business model right so at the moment it's it's not my you know fulltime job okay I I have a separate fulltime job at the moment but I I did YouTube fulltime for a while and people have asked me about this too and I'll try to answer sort of you know most frequently asked questions so I don't have to rep my answers in the future uh basically you know about half of my Revenue was coming from YouTube directly ad Wars AdSense whatever it's called Uh basically you know people would I think bid um a certain amount of money for you know like like a certain amount of views on my videos or on videos in general on YouTube that's how I got paid and then part of it was also affiliate marketing which means you send people to a product and you get paid like a commission part of it was you know creating courses so the different you know sources of income uh but mostly from YouTube and then people ask me like oh why did you slow you know slow down on your YouTube like why did you stop posting a couple reasons one was I I wanted to get more inspiration you know I felt like uh I I already shared a lot about what I already knew so I wanted to you know learn more basically uh have more ideas for future videos and then another one was working on your own you know as an entrepreneur you might be familiar with this it it gets kind of hard if you have a team that's better and it is getting sort of better for me not having a team per se but having a community to support me so both of these things are getting better you know that's I think that's one of the reasons why I started to make more videos recently why I'm hopefully you know making this video as well I see yeah I was about to ask like whether you were doing it all alone or with a team so so you were doing it all alone yes I see and how much time do is does it take to like start from conception to upload like for a a video like on average right so when I was doing it fulltime it it was basically about a week and I think that that that was pretty fast on YouTube like Tech YouTube standard but what I would do is I would you know think about the content do scripting and research for a couple days and then I would record edit uh editing process would take about a day or two I think recording that might be a day so that that's like basically a whole week you know five days or so I see and you have to like keep it up like on a very consistent Pace I I would imagine that would be a very like like personally for me like a lot of people have asked me to make video courses but like whenever I think about like the whole whole process I'm just like no it's not for me yeah so yeah I really admire people who have this sort of I guess it's important like you have the passion for it right because people I think for me it's just impossible to keep this kind of pace of making videos coming up with new ideas every week uh but on the other hand maybe it's uh I somehow managed to keep you know closing issues every day for like couple years so uh I think it it really you you got to have this kind of passion for it and I can totally understand like you sometimes you want you're like I'm I want to have a change of pace slow it down and just Refresh on the inspiration part like yeah a lot of uh I think there's a lot of things in common when when we are just uh doing it for the long term and you know especially when in a lot of cases if you we working remote you do need to uh have this sort of uh I don't know like manage your own sort sort of avoid burnout and uh making sure you have the motivation to keep it going right yeah definitely so I was sort of thinking prior to this conversation we have some things in common uh we you know like like we talked about earlier we both have Asian backgrounds obviously we both worked at Google for a while um but I think the difference you know you can correct me if I'm wrong but is that one one of the differences is that I I'm more of an extrovert I think you're more of an introvert and depending on your nature depending on like what you're good at where you're attracted to you're just naturally attracted to different things you're naturally good at different things so kind of doing something that aligns with the you know that strength of yours is important in general definitely yeah I think um for me it's I I really kind of just felt onto this path because I tried try to stay in my comfort zone as much as possible so in a way I think uh it's right people always say you need to like try things out of your comfort zone but I at the same time I think if you want to do it consistently for a very long time you still need to find that right border of comfort zone so that you don't actually put yourself into a territory where you just won't be able to do it like consistently I got a real good question from the audience and I think both you two can answer uh like because you got like uh 140k uh followers on Twitter right and you got like 300K plus uh if I count the Chinese account as well it's like much more than 300K and people want to know do you get annoyed by the people from Twitter I can take this one the answer is no okay and that that's that's because I've developed really thick skin okay yeah and how about Evan I sometimes still do you know because it's it's um I you know I I've uh I don't know why but like occasionally like especially in the in the Chinese Community there are some people who really like to make snarky comments about technology um and I've also developed a really thick skin like a lot of in a lot of cases I'm like whatever like just use whatever you want right uh but then sometimes you know some people would really just kind of nasty comments uh sometimes so I just try to like I would I would admit like you really wouldn't want to do anything with those people but sometimes like just seeing that it can kind really ruin your day in some cases you know but uh but again like uh usually it doesn't really last longer than a day now now not a days yeah right uh so I'll talk about my Approach hopefully it's going to be helpful for some people here uh one is the mute button is your friend not not the block button and one of one of the reason is because I still want people to be able to read my stuff but I I don't want people to necessarily be able to attack me so the mute button you know I find that it's a good middle ground generally speaking unless it's like a real spam or stuff like that or scam and then another one is meditation helps uh just being able to you know kind of uh breathe uh and calm down and think about other things basically haven't found that button yet I muted a lot of people already yeah but sometimes it's like you know there are some friends who will be like dude look at this Twee like someone is saying nasty things again like don't s this to me yeah yeah sometimes they do that so I'm like don't send this to me okay I I do get a question from the audience hey Evan have you memorize like what copy to order what copy that's the question I collect this yeah unfortunately no uh cuz I uh I mostly work at home so I'm like just too lazy to go out to get coffee so I'm like no actually I'm I'm like deep in the finding the right espresso machine kind of stage right now yeah yeah um do H come talk with Evan later because he has this hobby about coffee machines if you like this you have something I don't think I need more suggestions at this point I'm like completely overwhelmed okay wait wait wait so I I I saw this tweet yeah you basically said you were trying to choose a coffee machine so many options it's harder than choosing a JavaScript framework right it is it is it is because uh I think like for Frameworks is like you're more or less all solving the same kind of problems right but for coffee machines it's like are you just like trying to get a quick B for the buck do you want to go higher level or do you want to like get a dual boiler do you want to go to like picking specific birst for your Grinder like it's like just infinite levels of like different levels of dedication and I'm like constantly like hovering between like I just want a quick cup of coffee but uh maybe I should get a better one you know it's like that kind of things make it really hard okay thank you thank you for the uh Co coffee topic like oh I I got some questions uh for Wy like how long did you spend to get your like 10K followers the first 10K right so the first 7K I I remember pretty you know vividly because I did it while I worked at Google as a parttime thing I only posted a few videos and I got 7K subscribers I don't think that's possible nowadays but you know at that moment not a lot of people were doing what I was doing so I was able to do that and then you know to kind of answer a question that didn't quite get asked is you know to get to 100K I think it took me I don't remember exactly but it was if I remember was less than one year of doing it fulltime wow wow impressive yeah people love you so do you have any suggestion for a beginner to run their own channel right so uh so first of all I'll address you know that quick comment about people love me people don't love me people love people love the content I created and I think there's a huge difference there and you know that love might like kind of spill over to me sometimes but it's more about basically solving people's problems people have problems people have their own desires and things like that when you solve their problems when you solve um their desires help them get jobs and stuff like that then that's sort of when the magic happens in my opinion okay and for beginners uh I I would say start start small you know YouTube is probably not the right platform to start right away you know if you make a video if only like couple people watch the video or like if you get zero views you might get discouraged so a better way to start in my opinion is you know through either blog you know by writing blog posts on different platforms so you get some views there or on Twitter LinkedIn or on live streaming platforms so whatever you feel comfortable or I guess Tik Tok nowadays you know whatever you feel comfortable with start there and then kind of go from there do you think there is a learning curve about becoming a you YouTuber like what do you think the learning curve for you or for others right so there there obviously there is a learning curve and again you know I want to emphasize this point about being a good listener that that that might seem like a simple thing but it is a really hard thing to learn uh you can learn it by basically talking to people you know individually so again there there's the mechanics of like you know having the right equipment having good mics things like that knowing how to edit but all of that kind of comes from a more fundamental skill or a fundamental set of skills one of them is listening another one is just knowing what good content is you know watching a lot of YouTube videos is actually helpful for that and kind of thinking about what makes good content Okay Okay evan want to ask him something about this part um I'm not making YouTube videos so yeah but I I do sometimes wish we had some people like create some content for like you uh we found I think this is this has a lot to do with the natural Talent or just being comfortable with like thinking in in this as in this direction so we found some active community members who are just happy to do this kind of work so we're trying to so for me it's really trying to find this kind of people and encourage them to do that kind of thing but uh maybe they can learn some tips from you yeah let me know if you want to you know if you need help finding those people I might know one or two people nice so I got some questions I may answer before but I still want to uh it is funny like I am using re for development can you persuade me to switch yeah have you run into effect running twice okay um okay uh thank you so will will there be an international mobile application development in the future similar to react native F view um so the closest thing is native script plus V3 okay yeah um uh here's another question I I am afraid of the idea of having a strong online uh pres and but at the same time I want to be more connected with the community uh do you have any advice for this audience both of you so the question I would ask this person is why are you afraid you know are you afraid of something specific but based on just this question alone what I would say is you could have an anonymous account that's the thing people do like even on YouTube there there are some really big YouTubers that never show their face they they they just show like you know certain parts of their body but never their face uh they're like be vtubers too you know there are different ways of going about it but on top of that once you feel comfortable with it you know really think about like what are the risks uh what are the ways to kind of mitigate those risks if you're worried about your physical saf you know if you're worried about your mental safety I mean I I would I want to say get over it but I understand it's it can be kind of part uh if you're worried about physical safety then think about you know how to kind of mitigate those risks how about you Evan do you have any otherwise yeah I would I think YK mostly said the SAR things my suggestion is maybe use an Anime Avatar you'll be fine okay that's a really good one so uh here's another thing for Evan and Marcos uh WEP assembly developer there's a proverb whatever whoever are writing in web assembly will be in web assembly so will vs be writing in web assembly uh unlikely because um so I think the problem with this assumption that uh you'd want your front end framework to be in web assembly is largely misplaced because uh in reality if you look at the compile whatever language for example rust to web assembly kind of Frameworks um you see their performance is the B real bottleneck is in the Dom because they can't really bypass the do right so it only makes certain parts of your application logic faster but at what cost you'd have a completely opaque binary at one time that you don't really get to look at the stack Trace when something goes wrong and that actually makes debugging deploying and everything much much more difficult okay so what's your thoughts on where views St in the framework landscpe uh with regard to to we performance we performance in performance um I think view is in general in a pretty decent place um I would say it it's already good enough for most of use cases you laun uh in fact most mainstream Frameworks probably are good except for one um like you know like it's a I was gauge it based on the Poss the the possibility or the like for things to go wrong in the hands of beginners right I think that's a very different metric compared to benchmarks and I think uh in my honest and opinion view is in a pretty good good place uh in in that ranking um we're also trying to improve the performance in certain more demanding cases for example if you have like a table of 10,000 items right so um use current rendering model that requires a virtual Dom does still have some overhead head so we're like working on the side we have a project called Vapor mode which is more or less solid J as inspired that takes the template and comp out it into something that's more directly dealing with a Dom without an abstraction layer uh and I think that should get us as close to be Dawn performance as possible um so yeah I think we're in a pretty good place uh but there are still room to improve thank you thank you uh questions oh okay yeah I think before we go into the next question I want to ask this question that I asked in this kind of thing pretty much every time uh which is you know we can address more questions but just for YouTube I guess uh do you have any final thoughts based on our conversation so far final thoughts um I think there are a lot of uh things in common in like as we are sort of like independent creators of things that requires longterm dedication so I uh I definitely drew a lot of inspiration from this conversation and um I've always been fascinated about different career paths especially the more unconventional ones I mean nowadays there are a lot of YouTubers but uh it's still I think it's still very different from what most people would imagine for it to be uh someone who just uh sort of you're now in charge of whatever you do and trying to cover a pathway yourself like even within the YouTuber you have different right content lanes that you need to focus on and there are competition so um yeah I think there there are a lot of things I I learned from this conversation and uh yeah I would love to you know just uh keep in touch and pick your brains for a few other things in the future yeah yeah I'd be happy to I'll try to answer you know this question myself too and I one thing I I noticed you know online but here as well about you in particular is your humility you know I feel like uh even though you've had like this big success a lot of people are using you know tools that that you've created both of them right View and V but you still you know you still have this like really grounded approach uh you care a lot about your family and you know your kids educations things like that uh that might sound kind of silly but to me that that's you know that's something I can learn from and that's something I think a lot of people can learn from as well because I think than uh because I think when you're when you're humble when you stay grounded then honestly you you're less likely to make mistakes you know when you get you know arrogant when you feel like you're doing everything right then you're you might become less careful you might uh start to treat people in a not an ideal way so I guess one take away from this conversation from from from even for me is to stay humble thank you thank you thank you very much and that concludes part one of this discussion in part two of this discussion where we talked for about 50 more minutes about many different topics including how to stay competitive in the current market how to contribute to open source some advice by even there how important is Le code really as well as thriving in the age of lm's chbt Co all of these things so if you want to check that part feel free to become a member of this channel because I just uploaded it for Members Only