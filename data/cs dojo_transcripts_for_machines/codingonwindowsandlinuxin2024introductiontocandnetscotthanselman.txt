in this podcast style interview we recorded the other day we dove into a live coding session where we covered some of the intricacies of programming of Windows as well as how to get started with it and an introduction to C and.net this is really useful for anyone who's interested in any of these topics so let's just get right into it could you first of all introduce yourself for everyone sure uh my name is Scott Hanselman right now I'm a VP at Microsoft and developer Community uh but the more interesting thing about me is I've been coding for over 32 years I started on a Commodore 64 in the middle 80s uh I've worked in C C++ C I helped open source.net at Microsoft uh before Microsoft I work in large Banks and large Cloud systems before the cloud was a thing and then I worked in the Bay area for a while with some early stage startups in the 90s nice and how did you end up in Microsoft um after my bank I was a Chief Architect at a large uh retail online banking company and we were doing a lot of Open Source in net in the early 2000s but net itself wasn't open sourced so actually came down and I met Tim O'Reilly at a thing called Fu Camp friends of O'Reilly remember O'Reilly media they had all the books with the animals on the front uh he had a get together and I met Scott Guthrie who's now the head of of Microsoft Azure and he was interested in doing a Ruby on Rails type thing forn net which ended up being asp.net MVC and we've since open sourced all of.net in C and it runs cross platform on Linux and mac and Raspberry Pi and even microcontrollers cool uh so I guess we can just dive right into it yeah so I I want to call you out on something though because I was setting up my machine before we started recording and I I'm really interested to see what you do with the footage of this whole thing because I know you're like what are we doing and I was opening up my terminal and I went directly into aun and you were like what yes so are you you're not a Windows person uh I I a Mac person I have used windows before wrong with being a Mac person see I'm non denominational I love all people doesn't matter if you're Mac Linux or whatever but this is my Windows machine that we're looking at right here it's Windows 11 but everybody who's watching can do this on Windows 10 as well and I was just setting this up to show you some things so I opened up Windows terminal uh which is right here and if I bring down this up in the corner you can see I've got the command prompt that we would call Doss in the old days Powershell I an SSH into Azure I've got some developer prompts that my environment variable setups for different things my main prompt is the Powershell which is open source and runs on net but I've also got Ubuntu listed right there which is like his face so I can click on auntu and that's going to open up another Tab and this is really Ubuntu it's not a fake Ubuntu or an emulator and I can actually go LSB relase Dasa and show you that it's actually 2204 and if you want we can run you know htop and we can see that I've got you know 20 processors and I've got it's a full lightweight VM but I want to point out how quickly it started up right it didn't I didn't like start the VM and then you edited the startup and then we wait for like parallels to fire up or whatever right it's it's a lightweight utility VM and I can actually open multiple ones or we could even install like right now live another another uh Linux distribution so I can go WSL which is Windows subsystem for Linux you can see the kernel version of Linux and stuff like that and if I say w cell I think it's w cell install it says okay what do you want to do we'll say w cell install help and it's asking me how do I want to go install a particular version of of uh of Linux let's go and do this we'll say w cell install online and I'm going to get a list of the ones I can't remember what the command line was I think it was D online but I want to make sure I'm going to install a drro w cell D install D list okay let's try that WSL D install dlist uh Dash online there we go o am I doing it wrong Das l o I never remember the dash thing you know Linux Mac or whatever it doesn't really matter but I always get confused about which um about command line stuff so maybe you can edit out me being an idiot at the command line W cell install options so now I feel like a dummy you are going to edit this I assume notice how he didn't say I'm going to edit this he's thinking about it that's fine oh it's dlist Dash online let's clear that try it again sorry now I feel like a schmuck I was going to hoping to do this whole thing as like a um one take but now you're going to there it is okay so check this out so w list online are other linuxes that I could potentially install like live so we could grab kie Linux right so now I could go WL D install DD collie it's a little hard also to turn awkwardly like this okay so that's installing that now while that's happening I'm going to click up here and I'm going to hold down Alt with one thumb and then I'm going to open up a split screen it's kind of like to or screen and then I'll say WSL dlist which will show me the local linuxes right now I have auntu as my default and I've also got Docker but it's grabbing collie at the same time and then in a moment kie Linux is going to pop in here as another Linux so I can have as many linuxes as I want all running uh side by side and I can open them in as many panes or panels as I as I want to do and then one of the things that's interesting about that that if we let's go ahead and close some of these panels while collie's loading over there I'm going to come back over to here close a few of these I'm going to do a PWD and I'm going to point out that we're in slome Scott okay this is interesting because it doesn't say C drive right if we do like a DF or something you can see our file system our Linux file system but I want to call out these guys right here we're not actually on the C drive or on the Linux file system but what if I tried to run like a Windows executable from Linux that's weird why would you want to do that but I can do that I can run notepad and notepad actually starts up because we are integrated with Windows such that when the Linux kernel sees the exe it goes oh I can't do anything about that and then it gives Windows a chance to then go and do that which means then I could potentially say explorer.exe dot where dot is the current folder and Explorer is Windows Explorer and now look that's my home screen in my in my bash RC directly here and you can actually see Linux in the corner there's this PC and then there's Linux which is own tux right there and then when collie Linux shows up in a minute look it appears as its own drro within my Linux which means that it's finished over here now I'll go and do a setup cuz it's installing collie for the first time and what it did is it brought a tar file down this is really collie and it there boom there you go message from collie and there it is that's the name of this machine and that's my username on that machine and I've got a full colie Linux right now and then if I come here you can see it hasn't been detected yet by Windows terminal I'll close terminal I'll open it again and then when I come back got Ubuntu here collie there it can have its own colors its own style or whatever it's totally integrated and if I come back and say Ubuntu where I was before and do the PWD and point of course that I'm in this Scott folder um we could potentially you know go and bring some code over here and like clone some code but I want to show the interaction model the interaction between Linux and and and windows so I'm in Linux let's switch over to um my work account and I'll log in to GitHub because I want to get a private repo so here's a repository I'm logged in as me and you know this is all I'm making all this up as we go along so maybe maybe it'll work maybe it won't work right so here I'm going to use the GitHub CLI to go and do the cloning of that repo but I want to do that inside of of Linux over here I don't even know if I have the GitHub repost stuff installed okay so it says that it doesn't have that installed so I could go and snap it or do whatever but we'll go and say GitHub CLI sorry I'm doing it with my arms a little bit awkward like Turned like this GH CLI install Linux so we'll go and grab the CLI and it says download for Windows because of course is detecting that I'm in a Windows browser so I'm going to say view installation instructions and we can do it in Homebrew there's actually Homebrew for WSL now but we're on Linux so we're going to go and just get it the regular way but it's in different repositories so I can go and grab one of these repositories here and say let's go and grab it on Ubuntu so I'm just taking the straight Linux instructions right there bringing it back over here dropping it in because it's Linux do the update it's going to bring down GitHub CLI I know I'm vibing right now but interrupt me because it's your show and then we can say GitHub off login it's going to say do you want to log into GitHub or not I'm going to say yes now when it says login with a web browser it's going to do a process start but it's Linux so what's going to happen well we go like that going to actually launch a browser but it's trying to do it like this see it's trying to launch an executable cuz I don't have a browser installed here right but I can click directly on that thing in Windows terminal launch here and I'm going to grab this off code and just paste it in authenticate against GitHub trust the CLI it's going to go and add my SSH key now I have to grab my aie cuz I got got to do two Factor off here so hide my offy I guess grab this boom boom boom boom boom okay come back over here logged in right now we'll do that clone again brought that down okay so I've got my code my net code or whatever from here how would I edit it how would I code this would I do would I run like VI or something I suppose I could that's really VI but a cooler thing to do would be to run VSS code but I'm on Windows but I'm on Linux if I was just running it in a VM I'd install VSS code in the VM but then I'm not really running Windows I'm running Linux and a VM I'm running a square inside of another square but what's cool about WSL and this style of of interaction is you're watching me seamlessly jump back and forth between Windows and Linux because they're the same thing if I type code Dot watch it's actually installing vs code server what is vs code server it's split VSS code in half the server side is going to be all of the language the language um uh LSPs the language service providers and it's going to be under WSL but I'm running the UI of vs code in Windows itself so when I say control you know when I say like file open that's the Linux file system not the Windows File system this terminal down here or I can say of course show local and then the windows one pops up so this means that I'm now doing the editing of my C application directly here on Linux but this is a Windows application so I can move seamlessly between WSL Linux kie Ubuntu vs code.net and I'm not nothing's slowing me down at any point and even right there you saw me install from a snap or from App get by updating uh install vs code server authenticating against GitHub clone my.net code and boom and it's running in I don't know like 2 minutes I know that was like one big runon sentence I'm just really excited about it so I apologize for not giving you a chance to talk but did you know any of that was possible I didn't that's that's pretty cool so that that's awesome cuz sometimes people know this stuff and I like oh shoot you had no idea no I didn't know it's all free nothing I showed you cost anybody money if you have Windows you have this you can just type WSL D install and it'll put all the stuff in your machine vs code we know is free Net's free um the only thing I have here that uh I guess you're supposed to pay them is Docker desktop but I'm using the Community Edition for my community work um and then uh in this case here I'm not actually running in Docker but if I ran Docker I could do the exact same thing and I could open up a uh a local container what's called a Dev container uh another thing that I did that you don't often see on Windows if you notice here I've blinged out my um my prompt a lot so if I go over here to my my D drive and I want to point out two things notice that we've got my prompt here with the current folder that's actually my blood sugar I'm diabetic oh and I have an implant in my arm right here and I have an insulin pump right here and I have an open source artificial pancreas and my blood sugar goes Bluetooth to my phone from my phone to the cloud where I have a rest API so that's my blood sugar that I can monitor in real time and that's important to me because the most important things in my life right now are my blood sugar so I don't die my current git branch and then the version ofet that I'm running in the current folder so as I'm moving around from place to place you can see my prompt is pretty fancy I'm able to see those things differ and then also this right here notice that little rocket ship if I go to the C drive the rocket ship is gone if I go to the D drive the rocket ship is there that's called a developer drive a lot of people complain that Windows is slower for developers but if you go over into uh settings into developer mode use developer features on Windows 11 down here at the bottom we have optimized developer drives that are not using NTFS which is the file system that you're used to right on Linux you use like ext4 or butter FX as we call it you know butter FX brt FS um this is actually using a new one that's called re RFS the reliable file system that's only usually available on Windows server but what's cool about it is that a is a new file system optimized for developers it's free it's built into windows and then we also change all of the anti virus stuff to be asynchronous so we're not like scanning the code that you're compiling for viruses because you just compiled it and that slows down things so you can get between 10 and 30% performance benefits with a Dev Drive even if you're on the exact same SSD so in this case here I've got one 2 tbte Drive I've made 150 gigs one file system and then I partition the rest this way so if I go down into dis management here and show you my actual partition table like this this is like running DF on Linux bit Locker encrypted Corporate Drive NTFS RFS data partition and then a little recovery one at the end there so I've made my prompt light up when I'm on the faster drive so I can know what's going on so if I switch back over to my my code and then compile my website this is for my own personal website with net build uh right now we're going to I think I'm using a preview version of net so this should be a clean Build 8 seconds and that's my full my full website on this machine here and of of course I've also blinged it out with cool colors and and icons as well because who doesn't like a pretty prompt that's not it's not like the windows you're used to I assume that the windows you're used to probably looks like that yeah and it's very sad yeah it's uh things have changed my friend how do you do the colors okay so there's a lot going on here so this bottom part here the prompt is called om my Posh right kind of an homage to om my zsh and these are individual ments and those are configured with Json files and om my Posh can be run on Linux as well or on Mac so if you like that look oh myh dodev you can go up here get that prompt engine and what's great about this prompt engine is it works on any shell it's shell nonspecific I'm using poers shell you might be using zsh it doesn't matter use which one makes you happy go into Mac OS and install it it's in home brew and you can just grab it with Brew install these individual segments are written in go so we wrote that one to call my rest API that's a git segment that's a net and visual studio specific segment but you could have the weather you could have the version of node or whatever you're doing this right here is Powershell and I've added coloring and icons so if we go into vs code and look at my profile which is like your bash profile except for Powershell I've installed modules like terminal icons that give me those icons I put in read line which gives you have more linuxlike experience at your command line and then this one here called Z is a replacement for CD you know you see that I'm not CD around I'm typing Z and that lets me have a nice history of everywhere I'm going and I can switch to those things really quickly which is cool is that fun yeah so it's cool partly because in my previous interview I was talking to someone from charm charm CLI oh cool and it it sounds like it it's a a little bit similar to that yeah yeah well let's look at charm CLI right so all these different CLI was it was it charm you said yeah charm. CLI charm. sh I think charm. sh yeah yeah yeah yeah so all of these different kinds of command line things that glamorize a command line I feel like Windows users have been left out of that story for a long time you know you you're Windows user and you you you go to a website for some open source and then their prompt doesn't look like that and you're like oh well I guess my prompt isn't fun anymore and I can't go and run that cool tool well now you can and I can run them side by side so if I go here and say I want to open up Ubuntu and I want to start running charm or I want to run Homebrew there's no Home Brew for for us right well I'm running WSL I can say home brew WSL home brew on Linux is literally the home brew package manager that runs on Linux but also on windows so now I'm a part of the Home Brew family so I don't feel left out anymore as a Windows user I can do whatever I want to do with any of these different kinds of things and if I go back actually let me show you this this will surprise you let's go back over here for a second and's see if I have net in my Linux machine I'm going to make this larger for you we'll go into my podcast I'm just going to see if I can run this but I don't I don't actually know if I have net installed so we could go and install all.net like this which is nice again to be able to go and do these different snaps and app kind of things okay so they're telling me that they don't want to use that one um I won't be able to do that from here right now for the purposes of this demo but I want to show you that I could start up a actually let's try this I don't know how long are your videos man is this already the weirdest one you've ever done no it's it's not it's it's really cool I think is it cool you're not you're not you're not sad cuz I was nervous if I was sad I would stop you would stop it and you'd be like dude this is not what I wanted right okay cool so what I'm doing is I'm just going over here and I'm going to go and say installnet on auntu I want to grab supported versions and I'm going to grab the uh the copy paste go and do an update real quick grab. net so the reason I'm showing you this is not just to show you how I'm easily I'm able to move Windows to Linux but I want to point out again that this is Windows Visual Studio code I'm using the windows browser but if you had a VM you have to think about networking and how these things all fit together let's go and see if net started up so if I'm going to go and run something like net from the command line here we go let's go and say net run there you go so I've got I just installed Net 7 live on a Linux machine that I just clone that code live because I don't do fake fake demos um and it's thinking let's go do this actually while I'm wondering what it's thinking we might be talking to the network right now so what you can do yeah you can see the network is actually shared uh here we go what is it saying to me now oh this is a this is a net ISM so they're saying uh net version 6 and we found version 7 so they're asking me how I want to fix this problem this is actually more of a net thing what kind of Dev are what kind of code do you write if you're not AET person uh python mostly python so we have a version issue here like you got a python 2 app and suddenly you got to turn it into a python um you know Python 3 app I probably those those days are probably over for you guys but um I'm just checking my versions ofn net real quick because um it's saying I've got a wrong version give me one second here I want to open up that CS project file this is what happens when you do live demos I'm very fascinated to see how you end up editing this or you just throw the whole thing out there grabbing an extension real quick so what I'm trying to solve is this app right here wants to run version six and I just installed version 7 so I thought I'll just go and take a moment and I will um update my application to uh to to this version but because I'm awkwardly turning my head this direction I'm having trouble figuring out where my file is I want to open up this project file C CSR there it is there you go see where it says net 6 I'm going to just change that to seven real quick see if this will I'm going to save us a little time otherwise I got to mess around in Linux and go and install multiple versions of net side by side so I was going to point out when I came here you can see that it's talking to the network this is like you know using top using task manager you expect to see these things at the same time here we go look project is not compatible net 6 that's fine the um there's three projects in this um family of projects in this solution so I'm just building one of them right now it's complaining that one of them doesn't want to build because it's a uh a test application and it's going out to the network and updating the packages those packages are like pip packages we call them new get packages just like using a pip install we're doing a pip install except we're using conference WiFi right here so we'll see um how long that's going to take there it is it's done so two of them failed and one of them succeeded but I only needed the one to succeed because for the purposes of this demo so what I want to do is say do net run get this one thing to run again trying to save me some time there we go that's what I wanted to show you so we're on Linux on Windows and we just opened up Local Host 5000 so in your mind what you know which is now 15 minutes of Windows and Linux what is Local Host in this context it's for the VM right it's not on the Windows right and that's that's weird now I have to think about is this nated behind something like is this a nested dolls where I've got my Windows machine and got my my Linux machine so what we can do is I can run an application called TCP view which is a utility from CIS internals that will allow me to basically see all my ports and you know the Linux commands for these kind of things I'm going to just drop in uh a sort and we're going to go and look for Port 5000 and I'm going to point out WSL relay on Port 5000 is automatically exposing that so it's kind of like tail scale but it's just exposing anything on the internal VM that it noticed within user space at a reasonable like 8080 or 8,000 or anything like node or python or Django would start up it's exposing that outward so I want to be able to then just click on Local Host 5000 and have Local Host 5000 be local so that's now the local version of my podcast from Windows I said Local Host 5000 in the windows context which hits WL relay which then bounces down but I didn't have to do anything and then if you're familiar with tail scale which is wire shark networking I could then have my my Linux machine have tail scale my Windows machine have tail scale and my iPhone have tail scale and then put them all on the same mesh Network and even though we're not on the same WiFi I could then hit the name of this computer the name of this tail scale node and test my podcast site on Linux running under Linux which is exactly where it's going to run when I put it in the cloud except I can test it from my phone and then see the mobile version of that so Local Host 5000 in this context works exactly as you would expect it to work is that hot and then look there's the back end that's really weird but Isn't that cool though but it's like it's the way it should work that's what you would expect so then the weird part would be then if I opened up collie which we just installed live and I opened up a five 5000 it might work in collie but it would fail on the on the exposing I wouldn't be able to open it up all the way out because someone's already in that space because that TC CP space right here is going to get shut down so I'm going to close this by hitting contrl C and then you can see it just died so that red 5,000 just closed on that machine and then collie would be able to use it you can set the networking up any way that you want but it's really really powerful but from a pure developers Comfort perspective I sat down here on a fresh machine that I haven't looked at in a while I didn't even realize I hadn't installed GitHub off GitHub command line I installed it live off live cloned live didn't have.net installed that live ran it and opened it up in Local Host 5000 without actually being prepared for this podcast I'm sorry I should have been more prepared no it's it's it's cool to see the installation process and everything well I just because I like showing real stuff because people come with like canned demos and that's stupid and I don't like to do that so yeah you're pretty quiet for a podcast host I feel like I've overwhelmed you I I'm just listening you're very kind I appreciate that so do you have any questions about any of the stack because I've showed you Dev drives om myh Windows terminal WSL code Dev containers there's a lot there right uh so you know a quick comment I have is one of the reasons why I switched out of Windows was because you know I wanted to code on Linux like environment like a Unix like environment and what I ended up doing was I end up doing you know dual boot and that's kind of a problem because on Linux you don't get a lot of of you know Windows software so I thought you know Mac would have both but it seems like with this you really have you know the best of the Both Worlds yeah you really do and I'll even show you something else that'll freak you out a little bit so like here I've got my you know my browser and then I've got BS code right here I'm going to have a fourfinger swipe which is known on Mac people right fourfinger swipe this is a Surface right here and I've got my terminal full screen by hitting Alt Enter and you can see that I opened up a a virtual desktop down there so that virtual desktop could then be named you know call that like the dev desktop and I can switch between Dev and whatever just like on a on a Mac but I can also do something else that might be interesting I think there was the what's that thing Photoshop for um for Linux the install the on Ubuntu install BTU pseudo app install Dy so that should be just a straight install so let's go back over to Ubuntu for a second and let's drop in here and let's so pseudo appt install so this will just take a second so the though is an X Windows application and then that starts getting really squishy because in the past if you were running something in a VM traditionally whether it be VMware or you know even parallels you have to start thinking about how do I want to get it out into Mac space you can run an X server you can forward your x uh display outwards that can be uh possible but it's also somewhat of a hassle WSL G windows subsystem for Linux Graphics Edition not only sets that up for you and makes it easier but also it uses whand instead of x windows so it's a much more accelerated uh technique which means I can actually compile and run even games and run them under like um a a 3D accelerated world or I could even do machine learning or use my this actually has an Nvidia uh 40 4060 I think this laptop does so I could use the dedicated GPU from that VM because it's not really a VM it's kind of a lightweight utility VM is it a container it's not a container it's not a container so there's there's hyperv which is the base part of the Windows like how VMS run on Windows and then there's the hyperv client that runs when you do things in a square and you're like hey this is like parallels or VMware this is a a lighter weight custom hyperv layer that actually works by the way on Windows home which is important because hyperv only runs on Windows Pro but a lot of students use home so if you have home at home you can do everything I'm showing you you don't require a fancy version and that that VM memory uh instead of just allocating a big chunk and then firing up the entire VM it starts up in about 2 or 3 seconds as you saw and the memory squishes and um comes and goes and then when we run containers in Docker the containers run in that utility VM as little containers so it's a um a compartmentalized tiny utility lightweight VM that then the containers run within so when you run Docker containers on Windows you're running them on Linux on windows so here I just ran the and what's interesting though is that look here in the Windows start menu here okay kie Linux recently added just a few minutes ago the suddenly showed up the icon for auntu application just showed up in Windows start menu with a little tux next to it so if we run that that's now a Linux application and I want to zoom in here and I want to make really really clear that's look at the cursor that's the windows cursor and then you see how smooth that is that's now the Linux cursor when I go open that is the Linux file system but then if I want to get into the Windows File system right we can go to the C drive and now that's my Windows File system so I'm seamlessly moving between them and in this case running a graphical application that I like running and you saw me install live right this I'm familiar with cuz it's it seems like traditional WSL this this was added this WSL didn't ship with WSL G it was added years later okay but I'm glad that you've seen it right and the fact that you can both move seamlessly as you see me doing both in textual apps container based apps or or graphical apps is cool so I'm glad yeah I mean to me the weirdest part is what you showed me on with vs code yeah you like that it's a vs code app on Windows that has access to Linux file system that's yeah and what's cool about that that is that if you look down here in the corner where it says WSL we have an extension added into vs code for connecting to WL or with specific dros so I might want to say open up a new window come down here and say Connect using a specific drro and then switch to klie now Ki Linux doesn't have any of that stuff because you watched me install it live so down here you can actually watch that it's probing the shell environment it's downloading node and all of the things that it needs and it's installing basically a language server so that we might now attach to coli Linux so the same that same visual studio we had here we've got one doing Ubuntu and then we've got one over here doing kie and you can see down in the corner did you say the Lang that one's on colie that one's and the language server is the intellisense right so like like like if you were going to install Python and you want to get like pylance to do your linting where should that run in what context should that run it should run in the Linux context because that's the context by which you're running your python right so for example let's let's let's let's do this let's go back over and let's do file uh open folder and we'll just open up a main folder here and if I go out here let's see if I actually have any python on this machine do I even have python this is inside of Linux okay so we don't have python installed so I'd have to go and install python but what I want to show you is the the syntax highlighting the coloring like when you do that is done by a language server it's not vs code that's doing that it's like pylance is going to lint it and put the squiggles and stuff so VSS code the UI runs here but then the extensions some are installed locally like my Beyonce theme it's called beonce and some are installed inside of Ubuntu so these this csharp extension is installed here so that means that I could run my python app on a Windows machine that doesn't have python installed python would be installed in the WSL context and then you would have different extensions based on what you were going to use so instead of just having 50 installed local extensions I might just have three installed inside of here and then if I go and pick another one let's go and say let's get a python extension or pylance actually might be good right see there's a drop down now if I say install it's it should ask me where it wants to install this or I guess in this context it might just install it directly inside I was expecting it to pop up a thing that would say installing windows are install in in um oh interesting so this is new feature they used to pop up a thing that said hey you want to be in Windows you want to be in Ubuntu but what it's doing is it actually installed pylance in Ubuntu so it looks like the UI people changed it because it's like more intuitive I'm in Linux I guess it would assume I wanted that inside of Linux but the reason that that's interesting is if we go back over here and look at our extensions list and we go back to just the ones that are installed I don't have py lengths installed locally it is only installed as a part of Ubuntu is that cool that's really cool so then the intellisense for python comes from python running over there and we can prove it we can prove it check this out by going into Ubuntu and doing running htop and you can see the sockets that are opened and we can go and search for there it is vs code server right there you can see node is actually started there's multiple node processes so it's almost as if it's a um a little rest API it's not really rest it uses a thing called language server protocol but a manage manage manage imagine that you're typing something and you go object Dot and then it drops down the pup you know the intellisense that's the moment when it calls out to the server across processes which you've already seen as easily to do and then now you have location transparency for your extensions they can run on Windows they can run in both places or they can run in this case inside of Linux that code server is running over there inside of Linux providing that context so then when we go back over to vs grab some code let me just grab what am I at here um I'm just going to try to open up some file here so I think uh we probably get the idea of you know this whole set up yeah it's cool I like it and I think it's cool because it gives you a lot of options you know you can write code on Windows or on Linux what do you usually use I'm on Windows 11 all the time uh when I am coding new stuff that I know is going to go in the cloud because I run everything in containers in the cloud I start in WSL so my blog my podcast Azure Friday all of my 11 or so websites are running in Linux containers in Azure so so I code with whatever I'm going to deploy to right so if you know that it's going to be in that Linux container you start coding on Linux yep and then you basically just uh like I guess push the container code to Azure and then it runs there yeah exactly and in that context I do it in two different ways I have in this case I've got uh those repositories that I just showed you for example my blood sugar meter or some of these other things all have uh GitHub actions and and then for some of them I'll use Azure devops to go and put that container up into the cloud so if I log into Azure devops I push from Linux on Windows up into GitHub that calls a web hook that either tells an action to start or in this case tells uh these guys to run grabs a Docker container and then sends it up one other thing I can do though that I haven't shown you is I can run Docker on windows so I'm bringing up now I'm going to go ahead and minimize a bunch of stuff cuz it's getting a little crazy so here's Docker spinning up and then I I write my scripts in Powershell just like you would probably write yours in like bash so if I switch over here for example and I'll show you a script I write them in Powershell because Powershell can run on both windows and on um and on Linux so here's an example script see all these here Docker build Docker run they're all ps1's and if we open up one of those you can see it's got a shebang using Powershell on Linux or it has an extension which uses Powershell on windows so the same script runs on both places and even though this is a simple script that just says Docker build tag I could have more sophisticated ones where I'm running tests using playwright you ever used playright yep right so then I've got headless tests and headed tests to spin up and those tests were run on Windows on Linux or headless inside of Docker which then means if we return back over to as an example um Azure devops I go into one of my build pipelines for the podcast site just grab one from a couple of days ago I can go into one of those running jobs and I can see where we actually ran the playright tests headless inside of that environment so I know that everything runs everywhere I'm developing on Linux but I also want to reserve the right to not run in a container to run on Windows to run in kubernetes like I just want flexibility so then I run a matrix of tests that ensures that it runs on every browser and on every operating system both server side and client side and then these scripts run in both places so okay all although this is really cool but I feel like for you know people who are just getting started they might feel overwhelmed you know they might be uh used to coding on let's say oh you're right I feel bad and now I've spent an hour talking about stuff that's more 300 level no it's it's cool but how how would you recommend that people get started you know do you recommend uh first of all windows Mac does it matter so I recommend that you learn how to code and I apologize I should have done that at the beginning of the thing I should have been more lowlevel and I apologize you should use whatever machine you have if you have a Mac and that's what you have available to you you're going to be great it's going to be fine if you have a Linux machine or a Windows machine it's going to be fine as well the reason that I show this stuff on Windows is I want people to know that windows can do things for them for free without them having to buy a new computer you might have Mom or Dad's old windows 10 machine you can go into the store the Windows store and you can get for free the windows terminal which you might already have on your machine and that's a great way to learn the command line so I just go right into the Windows store and I grab the windows ter teral that gets me into the command line then from the terminal I can just start up whichever one they give me by default which will probably look like this and you can type WSL install that'll get you Linux so in two steps anyone on any machine can get into a Windows command line and learn or a Linux command line and learn so that's cool because then you're uh you know you're going to free code camp or you're learning and you go and see a prompt that looks like like that at your favorite Learning Resource or your website or your your YouTube and you don't feel left out because you're like oh that dollar sign means that I can type LS to get my directory while this dollar sign you know this this prompt means I type Di and then you can learn both Linux and windows in an environment that you already own right and do you think it's easier than dual boots yes 100% so I think that that's funny because I felt I feel a little bad that I got to advance too fast for the for for your audience but you're making a really great point to even learn that dual boots a thing is is a is a gate to jump over it's a challenge for someone to understand because now you're thinking about partitioning discs and whether you're booting into a vhd or whether you're booting onto another partition I think disc partitioning is challenging for anyone to learn but this requires no disc partitioning it doesn't change your hard drive in any way it's free and easy and if I switch over to Linux cuz I do a dual boot how do I get my code to the other partition yeah I put it on a USB or I don't have good connectivity or I have you know unreliable internet at the house do I push it to GitHub and then bring it back down this is very clean where I can go explorer.exe and I can grab my code and just copy paste it from Linux to Windows I can copy paste so your examples can be copy pasted from from the browser directly into the command line or direct into vs code dual booting is just wasting time I think dual booting is how we would have done it maybe 10 years ago but not now right I I remember that that's how I did 10 years ago I did no longer because it's no fun it's one more thing you could mess up let's go into actually C on net okay yeah so let's let's go let's start with the basics what is net what is C okay you've been very patient and I thank you for that okay okay so Microsoft is not really good at naming things I think that's a fair statement and when net came out the idea was you'd have multiple languages and they would all run on the net runtime however Java runs on Java and that was really easy C runs onnet so the Java runtime and the net runtime Java runs on Java C runs on net there's other languages in C like f and visual and Visual Basic but C is kind of the first among equals just like you've got Java and Scala and groov on Grails and all other Java things in the Java ecosystem but Java is like the first among equals c is a cbased language a curly brace language that feels Java e it feels like C it feels like C++ um so if you are familiar with any language that has curly braces you're going to go up okay I kind of I kind of get that you can go to theet website which is actually do. that's our website dot.net and I've got a whole series of videos to walk you through step by step but you can even get started by trying it directly in the browser so you don't have to install anything so I just went there I said learn and I went to this in browser tutorial right so I'll change that to Hello friends and I'll hit run code and it compiles in the cloud and I can immediately start playing I've installed nothing you can do this on a Chromebook so anybody they who wants to do this can just go up here and go to the Learning Center to the in browser tutorial and then the next step is learning about strings and running those strings and then going to the next one all in the browser and from a higher level perspective what can you do with net and c and should I should I even say them together.net add C okay so that's a great point so we're not good at naming things C is the language net is the community let's call it that way um C runs anywhere so you can make web apps you can make mobile apps iPhone apps these are native iPhone apps native Android apps you can write is it zarine yeah zamaron or now it's called Maui the multiapplication UI microservices you can also run it on a Raspberry Pi so if you have a raspberry piie lying around we have a whole iot section where you can talk to sensors on your Raspberry Pi uh you can run them on run it on anything okay Unity right Unity is a great one so if I want to go to game development you've got lots of game engines Unity is just one of them right you've got monogame and gdau and stride these are cry engine all of these different languages so if you're playing games today chances are they were all written using C right yeah even if you don't see it right so I know Unity is a popular one I think they do show Unity usually when the game start starts up yep uh so I it pops up and says Unity that's definitely it yeah gdau is another great one you can do all kinds of uh games whether they be on Xbox on Windows on Mac on Linux or on any of the devices so yeah there's steam deck games that are running C today if it pops up and says Unity it's definitely doing that so there really isn't anywhere you can't run right that and it's popular for certain Enterprise applications too right yeah so C about 20 years ago really got started in big Enterprises so you'll find a lot of Legacy code that's like 15 20 years old about about 10 years ago when we went open source we kind of split and we had net and then we had net core and that word core kind of stuck because it was a a smaller version of net but now it's just net so if you go and say download we're on net version 8 actually version by the time this video comes out version 8 will have come out we release a new version every November and we alternate between a longterm support and a shortterm support just like uh Ubuntu right so like 2004 is a longterm support 20204 is a longterm support net 8 will be a longterm support which means you can write the code and it'll be supported fully for like three years plus and it's all free BS code is free the C developers kit is free so if you wanted to get started I would go and say download . net on whatever L Linux Mac or Windows I would then get download visual studio code and then from Visual Studio code you go to extensions and you search for C and you're going to want to grab the C dev kit and that'll give you everything you need to be writing C and doing hello world and then if you go to dot.net at the video site we've got a brand new uh video series 18 videos basic basic basic it's actually we finished it last week so we're at GitHub Universe right now and I don't know when this is going to come out but in the next week or so you'll be able to find those on the net website cool and they're brand new brand new videos that are going to teach you how to do this directly from so you know obviously uh C is just one of many languages when should people learn C you know people think too hard about what language that they want to pick they they they worry about it too much like I grew up speaking English right what did you grow up speaking Japanese Japanese right so did you ever like feel bad about your first language no no it's your first language and then you learn two and then you learn three um my son is 15 and he's learning Japanese and he's learning Spanish and we were in Finland you ever been to Finland uh no there's about 5 million people in Finland and they were speaking Finnish which is a very strange language and he said why are they bothering why are they bothering learn finish it's not going to win that and I said that's a wrong way to think about it they like their language it makes them happy they write poetry in their language right that would be it would be ridiculous for me to say why are you bothering with Japanese why don't you just learn English that is like saying why am I bothering with erlang or go or rust or whatever pick the language that makes you happy because it makes you happy and then learn another one because it will make you happy as well and poetry and Japanese feels different than poetry in like they call it haiku for a reason right that's just one kind of Japanese poetry you can write C you can write Java you can write Python and you'll say wow this feels like a native wrote it and then you'll become a native and then you'll share it with other people so don't worry about your first language pick one have fun and pick two yeah sounds good uh so what's so special about car I like CP because every time I find a new platform that I want to write for I go oh gosh I'm going to have to learn another language to do that platform and then I find C runs on it so like I raspberry pies came out and everybody was on Raspberry pies doing Python and I was like okay I guess I'll Learn Python and that's cool I know some python but I really know C so then when C starts running on a Raspberry Pi I'm like ah I'm very welcome right like if you meet someone out in the world and they speak a language you speak you're like Ah that's cool and it makes you feel good about your language you're excited when someone learned your language so I use C because I can run it anywhere when kubernetes came out I'm like oh I got to learn go now I don't C runs in kubernetes it runs in containers so it makes yeah it worked great makes me feel comfortable it it sounds you make it sound a little bit like JavaScript because you know yeah that's a great example there's there's uh react native and there is a you know a platform for desktop apps with JavaScript so net is kind of the same thing like mobile desktop web so this is a great example right let's think about all the languages that run everywhere go python rust JavaScript C we're in a situation where we're not competing with everyone all the time now it's Coop petition we're cooperating and we're competing and yeah parts of kubernetes are written in go I can run my C there and I can have my microservice call your python microservice call her JavaScript microservice and that's okay it's it's a universal translator now and the internet is the important part so beginners should learn the internet and understand HTTP and understand how to call websites and make websites and the language underneath whether it be JavaScript or python or C will work itself out nice um like you don't just drive only like a Honda right you can drive a Toyota you can drive a Ford people need to be able to do that as well okay uh yeah I think just uh since we need to wrap up they're kicking us out one quick question if you're okay with it um so mobile you know I think that's straightforward Zary or whatever it's called now uh web and and uh you know Unity too it runs on mobile yeah yeah uh web and mo web and desktop how does it work with net so net can use different Frameworks so the net family or C language can work on any different uh framework so just like with python there's different ways to write goys graphical user interfaces you can use avalonia you can use WPF you can use win forms you can write applications using these different libraries on the website we use asp.net right so like python uses Django C uses asp.net and you can write websites and then we have razor and Blazer and those are different Frameworks for writing applications so this page that we're looking at here is actually an asp.net razor page right yeah not the front end right the front end is in JavaScript the front end is in is is in JavaScript but the JavaScript would have been generated by C which is a longer conversation we can generate what's called Web assembly now so you write the code in C and you don't have to write JavaScript at all if you don't want to that's so strange that's another show yeah cool I think I I learned a lot hopefully the listeners will too yeah I'm happy to meet again and we can talk more detail and and and more more focused yes that that would be great maybe online orline what it works all right thank so much me