you're given an array of items and they could be of any type they could be numbers strings or anything else for that matter and the problem here is writing a function that takes this array and reorders it in a random way so in this example one will go from here to here zero will go here and nine will be here and you're given two functions to solve this problem the first one is called Rand for random which gives us a random value between zero and one the second function is called floor and it gives us the largest integer value that's less than the given value so for example floor of 2.88 would return two now when you're trying to solve this problem you might come up with a biger and log and solution initially but try coming up with a biger of end solution and try solving it in place as well which means you don't have to create a new array to solve this problem now to practice pause the video right here and try solving this problem within 10 minutes here's one potential solution to this problem we're going to use the Run function to generate a random value for each item that we have in the array so for example we're going to generate 0.92 randomly for the value one and 0.10 for the item zero after that using those randomly generated values as keys we're going to sort this array let's say in an ascending order so for example in this particular example the value zero will will come to the top of the array because the corresponding random value is the smallest among all the random values that we generated so after that our array will look like this now to sort this array with these random Keys we could use any sorting algorithm if we use the big of nlog n sorting algorithm such as quick sort this whole solution would take big of nlog n in time and another thing to note here is that we need some extra space to store these randomly generated values to be more specific we need big of n in extra space so is there a better solution than this yes there is and here's my Big O end solution the first thing we're going to ask ourselves in this solution is what should the value be at the last index where two is currently we're going to determine that by picking a random value out of this array out of all the values of this array and we might pick randomly for example the number three and in that case we'll swap the number three with the number two so that the number three will go to the last index after that this array will look like this and then we'll sort of repeat the process with the second last index we're going to ask ourselves what should the value be at the second last index and we'll determine that by picking a random value out of these four values now because the number three is already fixed at the last index and we might pick for example the number zero for the second last IND index and in that case we'll swap Z and 9 and the array will look like this after that the same thing we'll ask ourselves what should the value be at the index two of this array and we'll pick a random value out of these three values and we might happen to pick the same value that's already in that index and in that case we don't have to do anything so the array will look the same at the end of this algorithm we'll ask ourselves the same question what should the value be at the next one and we might pick this value one we'll swap those two values and the array will look like this and we're done this solution will only take big of any time because we only go through this array once and it'll only take big old one in extra space for swapping values so I kept saying something like just select a random value out of these four values but how can we actually do that with the two given functions ran and floor the key here is that we want to be able to select an index 0 1 2 or three randomly with the same probability or 25% probability each and if you recall the return value of Rand is always larger than or equal to zero and it's less than one and let's just say for Simplicity ran is uniformly distributed over this section and if we multiply Rand by four four times Rand will range from from 0 through 4 instead and let's just zoom into this line and we'll see that we have again a value that's 0 through 4 and we'll be able to divide this line into four equivalent sections 0 through 1 1 through 2 2 through three and 3 through 4 and notice that the value of four times Rand the probability that that value will fall into each of these sections is equivalent to each other so the probability that four times Rand will be larger than or equal to two and less than three will be 25% just like the probability that it falls under any other section and so we can assign each of these sections into each of the indices that we have right here so if we get for example 2.5 as the value of four times run we can assign that to two and if we get 1.1 we can assign that to one and we can do that with floor of four times Rand and again this goes to 0 1 2 or three with the same probability or 25% probability and that way we can choose a random value out of four values if we want to instead choose a random value out of three values we can replace this four right here with three and we can just write floor of three * Rand and we'll be able to choose a value from 0 1 or two instead with that in mind let's see what my solution might look like in code we're going to write a function called reorder which takes the given array R and reorders it in place so we're not going to return any value out of this function the first thing we're going to do in this function is we're going to initialize a variable called n to the length of the array and that's just for convenience after that we're going to run a for Loop for I starting at the index n minus one which is the last index of the array down to one which is of course the second index of the array let's say as an example in the full loop we're currently examining the second last index so I is equal to three currently and then we'll need to ask ourselves what should be the value that goes into that index and we'll do that by picking a random value out of these four values and we might pick for example this value Val zero and let's call that index pick we'll be able to decide what the value should be for pick with floor of I + 1 time Rand so if I is equal to three we're saying pick should be four of four times Rand because we're picking a value out of four values and after that we'll swap the value at the index pick with the current value that's in the current index that we're examining we'll do that with a temporary valuable called temp so we're going to store the current value in the index I this value into temp and then we're going to move the value at the index pick into the current index and then we're going to put the temporary stored value into pick so that's my solution and this algorithm is also called fure yet Shuffle or KN Shuffle that's it for my video and thanks so much for watching