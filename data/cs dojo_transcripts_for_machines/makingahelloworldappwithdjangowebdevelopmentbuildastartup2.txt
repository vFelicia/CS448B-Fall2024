hi everyone this is the second video of my build a startup series and if you're new to the series you can find a link to the playlist for this series right here and also in the description below in this video I'm gonna show you how I set up a hollow word project with Django so let's get started okay so first of all let me just quickly recap what we've done so far in the last video we first installed Python 3 p.m. and Django and then we set up a new jungle project in this folder called edit dojo within desktop and this folder is called edit dojo because that's the name of our project and if you're following this yourself you can make sure that the jungle project is set up quickly in this folder by first opening up terminal or shell on your computer and then go to that folder by typing in CD tilde slash desktop / edit dojo and then go into the virtual environment that you set up by tapping in pip M shell and then start up your server with python managed PI server or a run server and after that just copy this URL paste it in your browser and you should be able to see this window like this okay so to explain what we're gonna create in this video let me show you my website first it's at CH dojo da IO and of course this website has this URL CSTO da IO and that's the home page but you can also go to a specific URL within this site to go to a specific page so you can for example type CS know that IO /faq to open the frequently asked questions page so that's sort of what we want to do in our project too but in a much more simplified way so right now we have this local URL at one twenty seven point zero point zero point 1 8000 well we want to make our website so that when a user types in you know this URL slash let's say say hello it's gonna show text that says hello world but right now if you try going to that URL it's gonna give us this error it says page not found for four and that's because jungle doesn't know what to do with this particular URL so let's fix that okay so the first thing you need to do to do that is you need to create a new app within this project so what's an app in Django there are the concepts of projects and apps a single jungle project basically usually powers a single website and that's what we've created so far and a single project can contain multiple apps each of those apps then focuses on a particular aspect of that website for example you know if you have an ecommerce website for example you might have you know one app for user authentication you know logging in and signing up and another app for just handling payments and maybe another app for listing items and right now you know this concept of projects and apps might be a little bit fuzzy but I'm gonna explain more about it later in the series and since we already have our project set up let's create a new app within our project to do that let's stop this server for now just by pressing ctrl + C and here personally what I like to do here is press ctrl L to clear the terminal just to make it you know easier to see after that use this command Python managed up I start up hello this says we're gonna use you know the manage the PI script to create a new app and that app is gonna be called hello and after that if you type in LS you should see this new directory hello and that's where the hello app is gonna be contained now at this point this new app called Hello exists within this jungle project but this jungle project doesn't know about it yet so you need to basically let the jungle project know about it and to do that I'm gonna use Visual Studio code here but you can use any other code you want to use so in your code editor first open the edit dojo folder within desktop and then within edit dojo you should have any dozer project and in that folder you should have this file setting stop PI so just open that and then go down to find this thing that says installed apps this is basically a list of apps that we want to use in this project so at the end of this list just add hello in single quotes come up so this way you know we just added this app to our project okay now that your Hello app is set up the next step is create what's called a view for the target URL the target URL was of course the home URL slash hello or say hello and a view is basically what's shown to the user when the user opens a certain URL and you know each app has a set of views and then this app the hello apps views are configured in this file view stop PI within the hello directory so to create a new view for the target URL we're gonna edit that file vizla PI but before doing that I need to explain just a little bit about web development so when you go to a specific page for example you know CS da da da I of /faq what happens is your browser sends what's called an HTTP request to the server that's running this website CS da da da IO and then that server responds back with what's called an HTTP response with the content you know of that page and once your browser receives the HTTP response then the browser you know looks at what's inside and then renders it for the user and that's what you see in your browser okay so that's basically what we're gonna make our jungle server do to so we're gonna set everything so that when the jungle server receives an HTTP request with this particular URL slash say hello it's gonna respond back with the text hello world so go back to your code editor open views the PI within hello and then at the top of this file first right from Django dot HTTP import HTTP response this says of course import the HTTP response function from the HTTP module of the jungle package and then after that we're going to create a view now one way to create a view in jungle is to define a view as a function so we're going to do that by writing diff or define my view parentheses requests colon return HTTP response parentheses double quotes or single quotes hello world actually to make everything consistent let's use single quotes here but double quotes were okay so this function says when this function called my view receives an HTTP request actually to be precise this is going to be a Python object representing an HTTP request so when this function receives that return a response or an HTTP response that says hello world okay so once you write that this view has been created so save this file and then go back to terminal and start up your server again with Python manage the PI run server and then go to your browser and go to you know the home URL slash say hello what you see here is this error again page not found why is that well it's basically because even though Django has a view that says hello world it doesn't know that it's connected to this particular URL so when the jungle server receives an HTTP requests with this particular URL it doesn't really know what to do so let's fix that okay there are a few different ways of fixing it but here's a simple way go back to your code editor and then find this file URLs the PI within the Edit dosier project folder and in this file you should be able to find this portion that says your our patterns this is basically a list that manages information about what jungle should do for each URL so here add this thing path parentheses and then say hello / and after that my view so here what we're trying to do is we're trying to you know tell Django that when jungle receives an HTTP request with this particular URL say hello use this function to respond my view but actually if you only add this this is not gonna work because you get this error undefined variable my view and the reason why this variable might be or this function my view is not defined is because you know the file that we editor earlier views the PI within hello is not connected to this file that we're editing now URL stop PI so basically this file URL stop PI doesn't have any visibility into the file that we were editing earlier being stopped PI we can fix that by writing from hello dot views import my view and once you write that that error that we were seeing earlier should be resolved so this line says import the my view function from view stop PI within the hollow directory so once you have that you're basically telling jungle and that when jungle receives a request with this particular URL I should handle it with this particular function so once you have that save this file with command S or control s and then go back to your browser go to the URL that we saw earlier the home page slash say hello and refresh this page and now you should see this thing that's the s hello world ok so let's do a quick recap of what we did in this we edited URL stop I within the editorial project folder so that you know when the jungle server receives say hello this URL it's gonna respond with this function my view and then this function my view is of course in view stop I within the hollow directory and it's a function that simply responds with this text hello world and once you understand all of that you can start playing around with you know different variables here so for example instead of saying hello world you know if you change this to hello world ah and then go back to the browser refresh the browser you should see this text instead hello world ah you can play around with the you know URL stop PI file to instead of saying say hello if you say say slash and then you know save this file go back to the browser and refresh this page slash say hello you should get this error again page not found but if you go to slash say instead then you should see this one again hello world ah okay so that's pretty much it for this video if you had any trouble with any of the steps I showed you in this video just go to CS dojo da io / edit and then join our slack group to you know ask questions there and also to you know make this series of videos I'm roughly following this book jungle for beginners it's actually a really good book so if you want sort of a companion book to the series or if you want to you know jump ahead and learn more on your own I highly recommend it you can find it at CSO java io / DJ you can also check out you know the free chapters of this book by going to jungle for beginners calm also you know a bunch of people asked me if they could contribute to this project in the comment section of the last video and my answer is of course you can so to do that join our slack group and find the source code of this project at CH da da da yo / and it again and you know right now we don't have a lot of issues on this project but you know hopefully a few weeks we're gonna have more issues for you to work on so I would suggest that you know you either story or watch it and then just you know follow along with this project okay thank you so much for watching this video and I'll see you guys in the next one