00:10 - Have you used variable or list 
blocks in a Scratch project?
00:13 - They can be a powerful tool
00:15 - when you're creating
customized programs.
00:17 - Perhaps you’ve used a variable
00:18 - to store a game score, but
did you know a variable can hold
00:22 - numbers or text, 
known as a “string”?
00:25 - And if you are storing
a lot of custom information,
00:28 - using a list
may be more efficient
00:30 - than creating
multiple variables.
00:32 - Let's explore
what variables and lists are
00:34 - and see a number of ways
they can be used.
00:47 - You can think of a variable
like a container
00:49 - that stores an assigned
value, data, or information.
00:53 - Variables can only contain one
piece of information at a time.
00:56 - So as new information
is placed inside the variable,
01:00 - the old information is replaced.
01:03 - A list, on the other hand, 
can store
01:04 - multiple pieces of information,
all ordered as separate items.
01:08 - A list is also called an “array”
in other programing languages.
01:12 - The benefit of storing
information in either a variable
01:15 - or a list is it can be recalled
later in your program.
01:19 - For example,
01:20 - you can ask the program to check
the current score of the game
01:23 - and use that to determine
if a player has won or lost.
01:26 - You can record a series
of answers provided to questions
01:29 - and restate the information
gathered later
01:32 - in the form of a sentence
to customize a story.
01:35 - You could let the user control
the speed of a character’s spin,
01:40 - or whether music is on or off
01:43 - as they engage
with your program.
01:46 - These are just a few examples.
01:48 - The information stored
can change
01:49 - the direction of a game
or story,
01:51 - turn on and off actions, signal
special messages, and more.
02:01 - Variables and lists
02:02 - hold information
you can use in your program.
02:04 - But Scratch comes with some
reporter blocks built in
02:07 - that also store information.
02:09 - Let's first explore
some reporter blocks.
02:11 - Say you use the “ask” block
to pose a question to your user.
02:15 - When the user types
an answer into the dialog box,
02:18 - it's stored in a reporter block
called “answer.”
02:21 - In this program, a user is
responding to a math question.
02:24 - The value stored in “answer”
02:25 - has been placed in an equals
operator block inside
02:28 - a conditional 
“if then” statement.
02:31 - So if their answer is correct,
they are shown one response.
02:34 - If the answer is incorrect,
they're shown another response.
02:38 - Another reporter
block is “volume.”
02:41 - It stores the number
02:42 - representing the current volume
of the sprite, clone, or stage.
02:46 - Here, the program is checking
the volume
02:48 - when the user clicks a sprite.
02:51 - Then, it is setting the 
volume to 0 or 100,
02:54 - depending on what
that current number is.
02:58 - Look through the various block
categories in the block palette
03:01 - and see if you can find other
reporter blocks
03:03 - that store pieces of information
you can use.
03:06 - Unlike a stack block,
03:08 - which can be placed directly
above or below another block,
03:11 - reporter blocks
go inside another block
03:13 - to serve as an input, 
hence their oval shape.
03:16 - You can click on a reporter
block in the block palette
03:19 - or in the script area
03:20 - to see the piece of data
it currently holds.
03:23 - You can also check a box next
to many of these reporter blocks
03:26 - to display them on the stage 
via a stage monitor.
03:30 - But what if there isn't a 
built in reporter block 
03:32 - to store the information
you need?
03:34 - In that case, you
can create your own variable.
03:42 - Select the Variables
category from the block palette.
03:45 - A generic variable
is already provided.
03:48 - You could rename it or delete it
by right-clicking on it, or
03:52 - click the “Make a Variable” box
to create a new one.
03:55 - When the new variable 
textbox appears,
03:57 - type the name of the information
03:59 - you want to store in the textbox
for the name. You can 
04:02 - then choose if all sprites
will have access to the variable
04:05 - or only the current one
you've selected.
04:07 - Many times,
you'll probably choose
04:09 - to leave it as the 
default “for all sprites”
04:11 - so any sprite in your program
can change the variable, 
04:14 - reset the variable, 
04:16 - or check the data
the variable currently holds.
04:19 - For instance,
an overall game score.
04:21 - However, there may be times
when the variable only applies
04:24 - to one sprite.
04:26 - For example, different sprites
04:27 - might have their own health
meters in a game.
04:29 - For now,
04:30 - we won't get into
cloud variables,
04:32 - but they are stored in the cloud
or on Scratch’s servers,
04:35 - so the values are preserved
when projects are reloaded.
04:40 - Notice the different 
types of blocks 
04:41 - available in the 
Variables category.
04:44 - There are blocks to set 
or change the variable,
04:46 - for instance.
04:47 - And even a variable reporter
block (that oval block)
04:51 - that can be used inside
another block.
04:54 - In our next video, we'll explore
some examples 
04:56 - of creating and using
custom variables and lists.