00:09 - Have you ever wanted
to create a Scratch program
00:11 - that is interactive 
00:13 - [Ya] 
00:13 - or offers multiple outcomes?
00:15 - [Big Boing] 
00:16 - Some Scratch
programs are static.
00:19 - The outcome is fixed, and the
same thing happens each time.
00:23 - Some are dynamic.
00:24 - They're capable of action or
change each time they are run.
00:29 - In order to create 
dynamic programs,
00:32 - the programmer can use
conditional statement blocks
00:35 - to give instructions on 
how the program 
00:37 - should respond in 
different circumstances.
00:40 - For example, here
I have a program
00:42 - where a fish can be 
controlled by my mouse.
00:45 - What if I wanted a 
unique action to take place 
00:48 - if the fish touches another
sprite, like the pufferfish?
00:52 - Under the Control category
in Scratch,
00:54 - I'll find a number of 
conditional statement blocks
00:57 - that allow me 
to adjust the program 
00:59 - based on 
specific conditions: 
01:01 - “until something is 
true or false”
01:03 - or “if something is true
or false, then.” 
01:07 - For this fish game, 
I'm going to 
01:09 - try using a 
“wait until” block.
01:11 - Under the Sensing category,
01:13 - I'll grab the “touching
mouse-pointer” block
01:16 - and use the dropdown menu
to select my pufferfish sprite.
01:20 - Conditional statements
can be true or false.
01:23 - If the sprites 
aren't touching,
01:25 - then this block will 
report “false.” 
01:27 - If the sprites are touching,
01:29 - then this block will 
report “true.”
01:32 - There are a wide variety 
of conditions in Scratch
01:35 - that you can choose from
01:36 - in order to complete
a conditional statement.
01:39 - Blocks that report 
“true” or “false” values 
01:41 - are known as 
Boolean blocks.
01:43 - And you can 
identify them 
01:45 - by their elongated 
hexagonal shape.
01:48 - So I can see 
the difference 
01:49 - between the “wait until” 
and “repeat until” 
01:52 - conditional statement 
blocks,
01:53 - I'm going to have it
play a sound.
01:56 - Let's run the code 
and see what happens.
01:59 - [Bite]
02:00 - With “wait until,”
it waited until my fish
02:02 - was touching the pufferfish,
and then the sound played.
02:07 - Now, let's try the 
“repeat until” block
02:09 - and see what 
the difference is.
02:12 - [Bite] [Bite] [Bite] 
[Bite] [Bite] [Bite]
02:15 - Notice that the opposite 
effect happened.
02:17 - It repeated the sound
until the condition was true,
02:20 - until the fish was 
touching the pufferfish.
02:23 - I'm going to wait until the fish
is touching the pufferfish,
02:26 - and then show one costume to
start and another if they touch.
02:30 - I'll also have the fish
think “Ouch” when they touch.
02:33 - Let's try this code.
02:41 - Did you notice that, once
the fish touched the pufferfish,
02:44 - if they touched again,
you don't see “Ouch” again?
02:47 - That's because
02:47 - the program is only checking
if this condition is true once.
02:52 - If I put this code
stack inside of 
02:54 - a “forever” loop, 
let's see the difference.
02:58 - Now, each time
the fish 
02:59 - touches the pufferfish, 
you'll see “Ouch!” 
03:02 - Because it's continually 
checking to see 
03:04 - if the condition
(touching pufferfish) is true.
03:08 - What if I want the
sprite to switch back
03:10 - to the initial costume
03:11 - when it isn't
touching the pufferfish?
03:14 - Notice the difference 
when I have the block 
03:16 - to switch back to 
the initial fish costume 
03:18 - inside the loop versus 
outside the loop.
03:21 - When inside the loop,
03:23 - the program is 
constantly switching
03:25 - to the original costume, 
but then 
03:27 - immediately checking
to see if they are touching.
03:29 - And if so, showing
the “Ouch” costume.
03:32 - It is checking so quickly
our eyes don't see the switch.
03:36 - But if I add a small
wait just before the check,
03:39 - you can see what I mean.
03:45 - And there are often 
multiple solutions
03:47 - to accomplish 
the same goal.
03:49 - For instance,
03:50 - I could use an “if then” or 
“if then else” statement
03:53 - instead of a “wait until”
conditional statement here.
03:56 - If I make a small adjustment
to the “think” block 
03:59 - in this “if then else” 
statement
04:00 - to remove the time
04:05 - notice if I move my 
mouse away quickly, 
04:07 - I can get the costume 
to switch immediately 
04:10 - after they stop touching.
04:12 - What else could you try or add?
04:14 - Tinker and experiment.
04:16 - In our next video, 
04:17 - we'll add some code to 
the pufferfish, too, 
04:19 - and practice debugging 
conditional statements
04:22 - and making 
more complex scripts
04:23 - by nesting
conditional statements.