With timestamps:

00:00 - [Music]
00:02 - hello fellow scratchers welcome back to
00:05 - part two of our particle simulation
00:07 - tutorial and just in time for the new
00:09 - year right so we can expect some epic
00:12 - New Year firework shows I bet yeah last
00:14 - episode we put together some absolutely
00:16 - beautiful particle effects using clones
00:19 - and pen there's a link to the video in
00:21 - the top right corner of the screen now
00:22 - if you need to catch up today's episode
00:24 - is all about collisions how particles
00:26 - Collide and bounce off their
00:28 - surroundings and how to add some sound
00:30 - too boom Oh yes this is going to look
00:34 - and sound so good guys I'm super excited
00:38 - to get going so load up your projects
00:40 - from where we left off in the last
00:41 - episode and let's get scratching
00:45 - we'll Begin by creating a quick scene
00:47 - for our particles to bounce around in
00:49 - don't do this though in the backdrop
00:51 - instead create a new Sprite naming it
00:54 - level we do this because touching Sprite
00:57 - sensing blocks are way faster than the
00:59 - touching color blocks oh yeah make sure
01:01 - not to fill the background of this level
01:03 - Sprite with any color yes leave it
01:05 - transparent any actual backdrop artwork
01:08 - can remain in the actual backdrop
01:10 - costume behind everything else
01:12 - okay position the level Sprite at zero
01:15 - zero to ensure it's correctly centered
01:17 - on the stage and then Marvel at our
01:20 - project's Beauty pretty good you'll note
01:23 - the particles are disappearing behind
01:25 - the level Sprite Sprites always are
01:28 - drawn in front of the pen for generic
01:31 - fireworks this might actually be what
01:33 - you want but when included in games we
01:35 - are much more likely to want the
01:37 - particles to bounce around when they
01:39 - collide with the scenery
01:41 - so click into the particle Sprite and
01:44 - find the when I start as clone script
01:47 - this contains each particle's movement
01:50 - in a forever Loop and right at the
01:52 - bottom we already delete each particle
01:54 - that touches the edge of the screen well
01:57 - then we can duplicate that touching
01:59 - check
02:00 - and then also check for touching level
02:04 - give that a test and well there's not
02:08 - much to see as the particles were
02:10 - already hidden behind this level so we
02:13 - can't tell if that really worked so
02:15 - instead of deleting the particles at
02:17 - this point let's bounce them back
02:19 - upwards into the air
02:20 - first we must remember our particle is
02:23 - currently colliding with the level so we
02:25 - need to move it back out of the level
02:27 - first we'll simply reverse the last
02:30 - movement in the Y Direction Change y by
02:34 - with a subtract
02:36 - and we're subtracting the speed y
02:39 - variable
02:40 - and then we want to take the speed Y and
02:43 - reverse it to bounce back upwards and
02:47 - also reduce the speed a little so each
02:49 - bound is smaller than the last to do
02:51 - that we set speed y to speed y itself
02:54 - multiplied by negative
02:58 - 0.4 you can play around with that number
03:01 - to experiment with the bounciness of the
03:03 - particles perfect shall we give this a
03:06 - test smash that green flag
03:08 - oh yeah I'm loving this each particle is
03:12 - bouncing back and then settling on the
03:14 - ground wow that was easy the only
03:17 - problem is that after our 300 particles
03:20 - are spawned we run out of clones and the
03:22 - fun stops until we reset the project of
03:24 - course what we are going to need to do
03:27 - is despawn a particle when it stops
03:30 - bouncing and settles on the ground that
03:32 - is when the bound speed becomes really
03:34 - small we delete the Clone
03:36 - so after we have detected a collision we
03:39 - pop in a second if checking if the ABS
03:42 - the absolute value of speed y That's the
03:45 - speed after the bounce is now less than
03:48 - two
03:49 - the apps ensures we are looking for a
03:52 - speed y value between negative 2 and 2.
03:55 - and yes we then delete the Clone
03:58 - nice let's test this baby out dropping
04:01 - some particles and wow yes we still get
04:04 - the nice bounce and then the Clones are
04:07 - quickly deleted and so we are free to
04:09 - keep dropping more particles and more
04:11 - particles and the fun continues
04:13 - brilliant that does look really sweet
04:16 - okay so this may look like it would be
04:19 - enough for most situations but there is
04:22 - a small problem have you noticed it
04:24 - our particles Collide nicely with the
04:27 - ground but watch when they hit a
04:29 - vertical wall
04:30 - they just disappear we don't have any
04:33 - horizontal wall bouncing implemented
04:36 - well usually when I code collisions like
04:39 - this I will move the Sprite in the X
04:41 - Direction test for collisions and then
04:43 - resolve them right away if they do
04:45 - before then moving on checking in the y
04:48 - direction
04:49 - but because we need to move in the X and
04:52 - Y together to draw our particle Trails
04:54 - this method of collision detection was
04:56 - not possible so instead we are going to
04:58 - do this a bit in Reverse yes we've
05:02 - already moved in the X and Y directions
05:03 - and detected a collision here but we
05:06 - don't know whether this Collision was
05:08 - caused by the X movement or the Y
05:10 - movement let's see if we can work out
05:12 - which one it was
05:13 - start by separating off the set speed Y
05:16 - and the following scripts then after
05:18 - we've moved our particle backwards to
05:20 - the previous y position
05:22 - we use an if else block and check again
05:24 - to see if we are still colliding with
05:27 - the level
05:28 - now if we are not colliding that's the
05:32 - else Branch below then we know it must
05:35 - have been the Y movement that caused the
05:37 - Collision since we're now out of it so
05:39 - we drop the old vertical bounding script
05:41 - back into there
05:43 - but if we are still colliding then for
05:47 - sure we have bounced in the X Direction
05:49 - instead we'd better put the Y movement
05:51 - back to what it was change y position by
05:54 - speed y again and then we undo the X
05:58 - movement instead change X by and we
06:01 - subtract the speed X
06:05 - and then we can set our horizontal
06:07 - bounds by setting speed X to speed X
06:11 - multiplied by and this time I'll use
06:14 - negative 0.7 as I want the bounds to be
06:17 - more bouncy for the left and right
06:18 - bounces
06:20 - right so this script will of course be
06:23 - going back in here but hold on there we
06:26 - have one more Collision case we have not
06:28 - counted for what if both the X and Y
06:32 - movements cause a collision this is the
06:35 - corner case literally yeah we need one
06:39 - more if check are we still colliding
06:41 - after moving in the X Direction
06:43 - if we are then crazily we have to
06:47 - re-undo our y movement change y by
06:50 - negative speed y
06:51 - and then copy our original vertical
06:54 - bouncing code again from down here to
06:57 - right under the change y this way we are
06:59 - now bouncing in both directions after a
07:02 - corner Collision
07:03 - finally we can pop this finished script
07:06 - into the awaiting if then
07:09 - wow I hope you are able to follow that
07:12 - it was all getting a bit scripty for my
07:14 - liking and it's prime time though to
07:17 - smash the green flag and test them out
07:20 - oh yes looking good do you see those
07:23 - cool horizontal wall bounces that sure
07:26 - is nice and I do enjoy dropping these
07:28 - particles from different heights
07:30 - watching how they interact with the
07:32 - walls and the floor
07:33 - but silent explosions that will never
07:37 - catch on to make this truly awesome
07:39 - we'll need to add some sound effects
07:42 - what can we find in the default scratch
07:45 - Sound Library a boom
07:48 - nope that's no good explosion no nothing
07:52 - there hop or squash pot perhaps oh gosh
07:56 - really oh go on then let's do this we
08:00 - should start the sound at the same time
08:01 - we create the Clones in the create
08:04 - particle script
08:05 - drop in a start sound right at the top
08:08 - make sure not to use the play sound and
08:12 - weight because otherwise the particles
08:14 - won't be cloned until the sound finishes
08:16 - playing
08:17 - here we go
08:19 - oh my this really oh no no this isn't
08:23 - good don't hold down the mouse button
08:25 - otherwise we get a hideous machine gun
08:27 - style raspberry sound and that's because
08:29 - we are starting the sound of fresh every
08:32 - screen refresh that's 30 times a second
08:34 - and when you start the same sound
08:37 - scratch always stops the previous sound
08:40 - first and this leads to that machine gun
08:42 - effect until you release the mouse and
08:44 - the sound is allowed to complete
08:47 - what we'll do to stop this is under the
08:50 - when flag clicked duplicate the wait
08:53 - until
08:55 - and have the first weight wait for the
08:57 - mouse to not be down instead this means
09:01 - we only trigger the explosion when the
09:03 - mouse changes from being not pressed to
09:06 - being pressed it's not going to repeat
09:08 - all the time that it's held down
09:10 - and to balance things out we'll now up
09:12 - the number of particles in each
09:13 - explosion from 10 up to 100 cool pound
09:18 - on that green flag and let it rip oh man
09:22 - though what have we created I think I
09:25 - love it but I'm not quite sure it
09:28 - certainly looks cool just a shame
09:30 - scratch doesn't have some better
09:31 - fireworks sounds
09:33 - but not All Is Lost the internet is a
09:36 - wonderful resource and we are bound to
09:37 - be able to find some more appropriate
09:39 - sounds there for example I quite like
09:42 - the website mixkit dot Co you can search
09:46 - for various sound categories like
09:47 - fireworks and then we get a few paid
09:50 - premium sounds that we really can't use
09:52 - but under these are some cool free
09:54 - samples too if you can't access this
09:57 - site don't worry I've created an asset
09:59 - project on my tutor account containing
10:01 - sounds and there's a link to that in the
10:04 - description under this video what I'm
10:06 - looking for is a clean sound a bang that
10:09 - Fades out uninterrupted by other sounds
10:12 - of course we can always cut off the
10:14 - start of a sample so it's often the last
10:17 - part of the sound that we'll keep ah
10:19 - this one I really like the sharp snap
10:22 - explosion at the end let's download fast
10:25 - whistle firework you can just ignore
10:27 - that pop-up the sound will download
10:30 - great so back into scratch
10:34 - then in the sounds tab of the particle
10:36 - Sprite import a new sound and select the
10:40 - fast whistle MP3 file
10:42 - if you've used my asset project then you
10:44 - can just use the backpack to drop the
10:46 - sound effects Sprite into the project
10:47 - and drag each sound into the projectile
10:50 - Sprite one at a time
10:52 - before we can use the imported sound we
10:54 - need to edit it to be just the part of
10:56 - the sound we need
10:57 - play the sound first and you can see
11:00 - that the actual snap bang sound is
11:02 - represented by the second large peak in
11:04 - the wave sample so click and drag to
11:07 - select everything from before that Peak
11:09 - and then click delete
11:12 - test that out to make sure it's what we
11:13 - wanted
11:14 - yeah nice and then give it a better name
11:18 - bang or snap
11:20 - right then clean up
11:22 - and then we can go back to coding switch
11:25 - the start sound to use the new bang
11:27 - sample
11:31 - okay guys now that is what I'm talking
11:34 - about how cool is that it makes such a
11:37 - difference having the right sound for
11:38 - the job and it's surprisingly addictive
11:41 - clicking around the screen and hearing
11:43 - that beautiful crisp snap of an
11:44 - explosion
11:46 - now this may be asking a bit much but do
11:49 - you think we could add some kind of
11:50 - tinkling as the Sparks bounce off the
11:52 - ground I searched around for a potential
11:55 - sound and the best I could find is
11:57 - surprisingly in the sparkle category
11:59 - within a sound named laser gun impact
12:03 - destruction listen to this
12:06 - um
12:09 - there that little last spark sound I
12:12 - love it
12:13 - download that sample
12:16 - and now back in scratch upload the sound
12:19 - unless you brought them in for my asset
12:21 - project of course
12:22 - and then delete everything except that
12:25 - last spark of the sample
12:28 - you may need to cut a little more off
12:30 - than you think we want to have the sound
12:32 - begin as quickly as possible so any
12:34 - delay left before the actual sound
12:36 - begins must be trimmed off you can
12:39 - always undo if you cut too much
12:41 - finally rename the sound Sparkle
12:45 - so this sound wants to be heard whenever
12:48 - a spark collides with the level that
12:50 - would be within the when I started clone
12:52 - for everloop
12:54 - under the first if touching level start
12:57 - sound Sparkle
13:01 - okay let's go are you ready
13:05 - boom and
13:07 - yeah it's not just you that really
13:10 - didn't sound good at all we just get
13:12 - this annoying uniform machine gun of
13:15 - tinkle sounds and it's not at all
13:16 - convincing perhaps we need to just play
13:19 - the sound less often we could limit the
13:21 - sound to just floor bounces by moving
13:24 - the start sound block down to just under
13:26 - the delete clone block here
13:32 - yeah no that's really no different in
13:35 - which case we could try limiting the
13:37 - sound to only the larger bounces
13:39 - surround the start sound with an if and
13:42 - use a greater than operator and then
13:44 - check if the ABS of speed Y is greater
13:47 - than oh I don't know um try 10.
13:53 - okay I don't hear anything now that was
13:56 - obviously too much try three
14:00 - right the sound is back and yep we have
14:03 - less impacts I think but the sound is
14:06 - still too uniformly repetitive
14:10 - I think the real issue then is that we
14:13 - need a mixture of sounds and the sounds
14:15 - should be allowed to overlap a little
14:16 - not just restarting like that machine
14:18 - gun the issue the way we do this is
14:22 - within the sound editor add a wand the
14:25 - end of the sparkle sample's name and
14:27 - then before doing anything more make the
14:29 - sound a lot quieter perhaps five clicks
14:31 - of the soft button
14:33 - next we duplicate the sound
14:36 - it'll automatically be renamed Sparkle 2
14:39 - which is nice and then we'll change this
14:41 - second Sound by clicking the faster
14:43 - button duplicated gain and make that
14:46 - even faster again
14:48 - and then duplicate but this time we'll
14:50 - make it a bit softer and then perhaps
14:52 - one more slower and softer great that
14:56 - should do back into the code
14:58 - so where we are starting the sparkle
15:00 - sound we'll need a join block
15:03 - on the left we write Sparkle that should
15:07 - match the sentence case of our sample
15:09 - exactly all lowercase for me
15:11 - and then on the right we join this with
15:13 - a random number between one and five
15:15 - that matches our five possible sounds
15:19 - so we can click that and see the
15:21 - different names being listed cool right
15:24 - so drop that into the start sound block
15:27 - here goes nothing
15:29 - oh yes fantastic that is much improved
15:32 - the variant in sound is what carries it
15:34 - I think just a note though this sound on
15:37 - this screen grab that I'm showing you
15:39 - here is not actually as good as the
15:41 - actual sounds you'll hear in scratch
15:42 - some reason the audio conversion and
15:44 - compression has really rather messed up
15:46 - the high frequency Tinkles
15:48 - anyway what I will do is just make each
15:51 - of these Sparkle samples a little softer
15:53 - overall
16:04 - oh gosh well that is really as much as I
16:07 - was intending to show you today but as
16:09 - an added thought have you noticed how
16:12 - often explosive light affects glitter as
16:14 - they fall we can simulate that too with
16:16 - a small tweak but it's up to you whether
16:18 - you include this see what you think just
16:20 - surround our pen down block with an if
16:26 - and check if random number from 1 to 10
16:28 - is greater than 3.
16:32 - that will cause us to only paint a
16:34 - random six of every ten particles to the
16:37 - screen
16:37 - that gives the whole thing a random
16:40 - glittery shimmery effect
16:42 - there what do you think
16:45 - another tweak that is cool is to make
16:47 - our explosions have a small upwards
16:49 - momentum as they begin under the create
16:52 - particle script after setting the
16:54 - particle speed
16:55 - change speed y by an extra six upwards
17:00 - this then Powers our explosion upwards
17:02 - as we click how about that I really like
17:05 - that little upwards thrust
17:07 - well then as I wrap up today I just
17:09 - wanted to give you a quick overview of
17:11 - the changes I made to create this scene
17:14 - [Applause]
17:16 - obviously I added a simple gradient to
17:18 - the background and I filled the level in
17:21 - Black
17:23 - then in the scripts I split the main
17:26 - green flag script into four one just
17:29 - sets the default variables but the next
17:32 - three they are almost identical each one
17:34 - creating a forever Loop and waiting for
17:37 - a random amount of time before launching
17:39 - an explosion now the reason this is cool
17:41 - is that it creates a kind of firework
17:43 - show that feels more authentically timed
17:46 - with gas and then rushes of explosions
17:48 - that all add to the fun
17:50 - you'll note I have this find Space
17:52 - custom block this is important it avoids
17:55 - creating explosions that overlap the
17:57 - level giving them all a bit of space
17:59 - around them I've added a medium-sized
18:02 - Circle costume this is called spacer to
18:04 - ensure there is room around the
18:06 - explosion to make it look good
18:08 - the find Space block switches to this
18:10 - costume and repeatedly moves the costume
18:12 - around until it's not touching either
18:15 - the level or the edge of the screen
18:18 - only then does it hide again and then
18:20 - continue
18:21 - and that's pretty much it the particles
18:23 - are then created at the XY position we
18:25 - have just found
18:27 - I added a third input to this block only
18:29 - to allow each explosion to use a
18:31 - different sample so that they could
18:33 - overlap nicely so we get the overlapping
18:35 - sample sounds
18:36 - I also used a random if to create one of
18:40 - three different types of explosion from
18:42 - small to large and that special circular
18:44 - explosion too for fun
18:46 - so I hope that just shows you some of
18:49 - the fun you could have while playing
18:50 - around with this please do submit your
18:52 - projects to the scratch Studio Linked In
18:54 - the description I really cannot wait to
18:56 - see them and be as creative as you can
18:58 - what could you use these particles for
19:01 - if you enjoyed watching this tutorial
19:03 - then please do smash the like button I'd
19:05 - really appreciate that and subscribe to
19:07 - the channel so as not to miss the next
19:09 - exciting episode but that's the end of
19:12 - this tutorial I look forward to seeing
19:14 - you again soon thanks for watching have
19:16 - a great week ahead and scratch on guys
19:21 - [Music]
19:31 - foreign
19:34 - [Music]

Cleaned transcript:

hello fellow scratchers welcome back to part two of our particle simulation tutorial and just in time for the new year right so we can expect some epic New Year firework shows I bet yeah last episode we put together some absolutely beautiful particle effects using clones and pen there's a link to the video in the top right corner of the screen now if you need to catch up today's episode is all about collisions how particles Collide and bounce off their surroundings and how to add some sound too boom Oh yes this is going to look and sound so good guys I'm super excited to get going so load up your projects from where we left off in the last episode and let's get scratching we'll Begin by creating a quick scene for our particles to bounce around in don't do this though in the backdrop instead create a new Sprite naming it level we do this because touching Sprite sensing blocks are way faster than the touching color blocks oh yeah make sure not to fill the background of this level Sprite with any color yes leave it transparent any actual backdrop artwork can remain in the actual backdrop costume behind everything else okay position the level Sprite at zero zero to ensure it's correctly centered on the stage and then Marvel at our project's Beauty pretty good you'll note the particles are disappearing behind the level Sprite Sprites always are drawn in front of the pen for generic fireworks this might actually be what you want but when included in games we are much more likely to want the particles to bounce around when they collide with the scenery so click into the particle Sprite and find the when I start as clone script this contains each particle's movement in a forever Loop and right at the bottom we already delete each particle that touches the edge of the screen well then we can duplicate that touching check and then also check for touching level give that a test and well there's not much to see as the particles were already hidden behind this level so we can't tell if that really worked so instead of deleting the particles at this point let's bounce them back upwards into the air first we must remember our particle is currently colliding with the level so we need to move it back out of the level first we'll simply reverse the last movement in the Y Direction Change y by with a subtract and we're subtracting the speed y variable and then we want to take the speed Y and reverse it to bounce back upwards and also reduce the speed a little so each bound is smaller than the last to do that we set speed y to speed y itself multiplied by negative 0.4 you can play around with that number to experiment with the bounciness of the particles perfect shall we give this a test smash that green flag oh yeah I'm loving this each particle is bouncing back and then settling on the ground wow that was easy the only problem is that after our 300 particles are spawned we run out of clones and the fun stops until we reset the project of course what we are going to need to do is despawn a particle when it stops bouncing and settles on the ground that is when the bound speed becomes really small we delete the Clone so after we have detected a collision we pop in a second if checking if the ABS the absolute value of speed y That's the speed after the bounce is now less than two the apps ensures we are looking for a speed y value between negative 2 and 2. and yes we then delete the Clone nice let's test this baby out dropping some particles and wow yes we still get the nice bounce and then the Clones are quickly deleted and so we are free to keep dropping more particles and more particles and the fun continues brilliant that does look really sweet okay so this may look like it would be enough for most situations but there is a small problem have you noticed it our particles Collide nicely with the ground but watch when they hit a vertical wall they just disappear we don't have any horizontal wall bouncing implemented well usually when I code collisions like this I will move the Sprite in the X Direction test for collisions and then resolve them right away if they do before then moving on checking in the y direction but because we need to move in the X and Y together to draw our particle Trails this method of collision detection was not possible so instead we are going to do this a bit in Reverse yes we've already moved in the X and Y directions and detected a collision here but we don't know whether this Collision was caused by the X movement or the Y movement let's see if we can work out which one it was start by separating off the set speed Y and the following scripts then after we've moved our particle backwards to the previous y position we use an if else block and check again to see if we are still colliding with the level now if we are not colliding that's the else Branch below then we know it must have been the Y movement that caused the Collision since we're now out of it so we drop the old vertical bounding script back into there but if we are still colliding then for sure we have bounced in the X Direction instead we'd better put the Y movement back to what it was change y position by speed y again and then we undo the X movement instead change X by and we subtract the speed X and then we can set our horizontal bounds by setting speed X to speed X multiplied by and this time I'll use negative 0.7 as I want the bounds to be more bouncy for the left and right bounces right so this script will of course be going back in here but hold on there we have one more Collision case we have not counted for what if both the X and Y movements cause a collision this is the corner case literally yeah we need one more if check are we still colliding after moving in the X Direction if we are then crazily we have to reundo our y movement change y by negative speed y and then copy our original vertical bouncing code again from down here to right under the change y this way we are now bouncing in both directions after a corner Collision finally we can pop this finished script into the awaiting if then wow I hope you are able to follow that it was all getting a bit scripty for my liking and it's prime time though to smash the green flag and test them out oh yes looking good do you see those cool horizontal wall bounces that sure is nice and I do enjoy dropping these particles from different heights watching how they interact with the walls and the floor but silent explosions that will never catch on to make this truly awesome we'll need to add some sound effects what can we find in the default scratch Sound Library a boom nope that's no good explosion no nothing there hop or squash pot perhaps oh gosh really oh go on then let's do this we should start the sound at the same time we create the Clones in the create particle script drop in a start sound right at the top make sure not to use the play sound and weight because otherwise the particles won't be cloned until the sound finishes playing here we go oh my this really oh no no this isn't good don't hold down the mouse button otherwise we get a hideous machine gun style raspberry sound and that's because we are starting the sound of fresh every screen refresh that's 30 times a second and when you start the same sound scratch always stops the previous sound first and this leads to that machine gun effect until you release the mouse and the sound is allowed to complete what we'll do to stop this is under the when flag clicked duplicate the wait until and have the first weight wait for the mouse to not be down instead this means we only trigger the explosion when the mouse changes from being not pressed to being pressed it's not going to repeat all the time that it's held down and to balance things out we'll now up the number of particles in each explosion from 10 up to 100 cool pound on that green flag and let it rip oh man though what have we created I think I love it but I'm not quite sure it certainly looks cool just a shame scratch doesn't have some better fireworks sounds but not All Is Lost the internet is a wonderful resource and we are bound to be able to find some more appropriate sounds there for example I quite like the website mixkit dot Co you can search for various sound categories like fireworks and then we get a few paid premium sounds that we really can't use but under these are some cool free samples too if you can't access this site don't worry I've created an asset project on my tutor account containing sounds and there's a link to that in the description under this video what I'm looking for is a clean sound a bang that Fades out uninterrupted by other sounds of course we can always cut off the start of a sample so it's often the last part of the sound that we'll keep ah this one I really like the sharp snap explosion at the end let's download fast whistle firework you can just ignore that popup the sound will download great so back into scratch then in the sounds tab of the particle Sprite import a new sound and select the fast whistle MP3 file if you've used my asset project then you can just use the backpack to drop the sound effects Sprite into the project and drag each sound into the projectile Sprite one at a time before we can use the imported sound we need to edit it to be just the part of the sound we need play the sound first and you can see that the actual snap bang sound is represented by the second large peak in the wave sample so click and drag to select everything from before that Peak and then click delete test that out to make sure it's what we wanted yeah nice and then give it a better name bang or snap right then clean up and then we can go back to coding switch the start sound to use the new bang sample okay guys now that is what I'm talking about how cool is that it makes such a difference having the right sound for the job and it's surprisingly addictive clicking around the screen and hearing that beautiful crisp snap of an explosion now this may be asking a bit much but do you think we could add some kind of tinkling as the Sparks bounce off the ground I searched around for a potential sound and the best I could find is surprisingly in the sparkle category within a sound named laser gun impact destruction listen to this um there that little last spark sound I love it download that sample and now back in scratch upload the sound unless you brought them in for my asset project of course and then delete everything except that last spark of the sample you may need to cut a little more off than you think we want to have the sound begin as quickly as possible so any delay left before the actual sound begins must be trimmed off you can always undo if you cut too much finally rename the sound Sparkle so this sound wants to be heard whenever a spark collides with the level that would be within the when I started clone for everloop under the first if touching level start sound Sparkle okay let's go are you ready boom and yeah it's not just you that really didn't sound good at all we just get this annoying uniform machine gun of tinkle sounds and it's not at all convincing perhaps we need to just play the sound less often we could limit the sound to just floor bounces by moving the start sound block down to just under the delete clone block here yeah no that's really no different in which case we could try limiting the sound to only the larger bounces surround the start sound with an if and use a greater than operator and then check if the ABS of speed Y is greater than oh I don't know um try 10. okay I don't hear anything now that was obviously too much try three right the sound is back and yep we have less impacts I think but the sound is still too uniformly repetitive I think the real issue then is that we need a mixture of sounds and the sounds should be allowed to overlap a little not just restarting like that machine gun the issue the way we do this is within the sound editor add a wand the end of the sparkle sample's name and then before doing anything more make the sound a lot quieter perhaps five clicks of the soft button next we duplicate the sound it'll automatically be renamed Sparkle 2 which is nice and then we'll change this second Sound by clicking the faster button duplicated gain and make that even faster again and then duplicate but this time we'll make it a bit softer and then perhaps one more slower and softer great that should do back into the code so where we are starting the sparkle sound we'll need a join block on the left we write Sparkle that should match the sentence case of our sample exactly all lowercase for me and then on the right we join this with a random number between one and five that matches our five possible sounds so we can click that and see the different names being listed cool right so drop that into the start sound block here goes nothing oh yes fantastic that is much improved the variant in sound is what carries it I think just a note though this sound on this screen grab that I'm showing you here is not actually as good as the actual sounds you'll hear in scratch some reason the audio conversion and compression has really rather messed up the high frequency Tinkles anyway what I will do is just make each of these Sparkle samples a little softer overall oh gosh well that is really as much as I was intending to show you today but as an added thought have you noticed how often explosive light affects glitter as they fall we can simulate that too with a small tweak but it's up to you whether you include this see what you think just surround our pen down block with an if and check if random number from 1 to 10 is greater than 3. that will cause us to only paint a random six of every ten particles to the screen that gives the whole thing a random glittery shimmery effect there what do you think another tweak that is cool is to make our explosions have a small upwards momentum as they begin under the create particle script after setting the particle speed change speed y by an extra six upwards this then Powers our explosion upwards as we click how about that I really like that little upwards thrust well then as I wrap up today I just wanted to give you a quick overview of the changes I made to create this scene obviously I added a simple gradient to the background and I filled the level in Black then in the scripts I split the main green flag script into four one just sets the default variables but the next three they are almost identical each one creating a forever Loop and waiting for a random amount of time before launching an explosion now the reason this is cool is that it creates a kind of firework show that feels more authentically timed with gas and then rushes of explosions that all add to the fun you'll note I have this find Space custom block this is important it avoids creating explosions that overlap the level giving them all a bit of space around them I've added a mediumsized Circle costume this is called spacer to ensure there is room around the explosion to make it look good the find Space block switches to this costume and repeatedly moves the costume around until it's not touching either the level or the edge of the screen only then does it hide again and then continue and that's pretty much it the particles are then created at the XY position we have just found I added a third input to this block only to allow each explosion to use a different sample so that they could overlap nicely so we get the overlapping sample sounds I also used a random if to create one of three different types of explosion from small to large and that special circular explosion too for fun so I hope that just shows you some of the fun you could have while playing around with this please do submit your projects to the scratch Studio Linked In the description I really cannot wait to see them and be as creative as you can what could you use these particles for if you enjoyed watching this tutorial then please do smash the like button I'd really appreciate that and subscribe to the channel so as not to miss the next exciting episode but that's the end of this tutorial I look forward to seeing you again soon thanks for watching have a great week ahead and scratch on guys foreign
