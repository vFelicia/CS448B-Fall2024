With timestamps:

00:02 - hello fellow scratchers
00:04 - welcome back to part four in our series
00:06 - creating a tile scrolling platformer in
00:09 - scratch
00:10 - in this episode we will bring mario
00:11 - fully to life fleshing out his
00:13 - platforming scripts
00:14 - and giving him some awesome animations
00:16 - to boot just look at him go
00:18 - this is really great and to wrap up the
00:20 - episode we will improve mario's
00:22 - collision box
00:23 - and sneak in a simple particle system to
00:25 - add to the skid effect
00:27 - wow all this in one episode amazing
00:31 - when i began creating this tutorial
00:33 - series i didn't include the required
00:35 - mario costumes that we are going to use
00:37 - in my starter project
00:39 - that's no longer the case but if you
00:41 - need them
00:42 - then you'll find a link under this
00:44 - project to the updated scratch resource
00:46 - and i'll quickly talk you through how to
00:48 - get them into your existing project too
00:51 - so you can either click the scratch
00:53 - project link under my video
00:55 - or visit my griff patch tutor page
00:57 - directly and find the mario resource
00:59 - project there
01:00 - click look inside and oh nice look at
01:02 - all these lovely animated frames that
01:04 - i've lovingly cut out
01:06 - positioned ready to animate all for you
01:08 - you lucky people
01:10 - click your backpack bar to open it and
01:12 - drag the entire mario sprite
01:14 - onto it next we'll also backpack
01:18 - this cute little particle sprite for
01:20 - later and lastly
01:21 - click on the stage backdrop we might as
01:23 - well bag the single blue backdrop
01:25 - costume 2.
01:27 - ok now load up your tile scrolling
01:30 - platform of object
01:31 - from where we left off in episode 3.
01:34 - if you open your backpack once again and
01:37 - drag the entire mario sprite
01:39 - out dropping it safely in the sprites
01:41 - panel to the right
01:42 - do the same with the particle sprite and
01:45 - then carefully drop the blue
01:47 - backdrop costume onto the stage backdrop
01:49 - panel
01:50 - like this now we have two mario sprites
01:54 - so click into the mario 2 sprite that's
01:57 - the one we just dropped from our
01:58 - backpack
01:59 - and switch to the costumes tab we will
02:02 - carefully drag
02:03 - each costume one by one from here to our
02:06 - main mario sprite
02:08 - like this i like to count them off as i
02:10 - do it one by one to keep track of which
02:12 - costume i'm up to
02:14 - you should find nine of them lastly
02:17 - click into your first mario sprite and
02:20 - delete the costume
02:21 - mario one if you have the dot costume
02:24 - like me
02:25 - then delete that too if all has gone
02:28 - well then we should end up with nine
02:29 - mario costumes all ready to go
02:32 - you are then free to delete this mario 2
02:34 - sprite if you like
02:35 - i left mine in but only because i was
02:37 - too excited to move on
02:39 - and so in the words of mario himself
02:41 - here we go
02:43 - okay the first thing we're going to do
02:45 - is add some excellent mario style
02:47 - jumping code
02:49 - currently in our project we're able to
02:51 - jump to any height
02:52 - and engage the jump at any time perfect
02:55 - for a jetpack game but
02:57 - plain rubbish for a platformer we need
02:59 - to set some rules that mario is only
03:01 - allowed to begin
03:02 - a jump when his feet have recently
03:04 - touched the ground
03:06 - to do this we'll make a new variable
03:08 - named falling
03:09 - for this sprite only locate the x and y
03:12 - movement scripts here
03:14 - under the when i receive move player
03:16 - event we're going to split these
03:18 - out into their own custom blocks so make
03:20 - with me
03:21 - a move sprite x block one without screen
03:23 - refresh
03:24 - and a move sprite y block again without
03:28 - screen refresh
03:29 - now move the change y and its fixed
03:31 - collision block
03:32 - into the moves y custom block and do the
03:35 - same for the move sprite x
03:37 - we'll then place the new move sprite x
03:40 - and y blocks in place
03:41 - of where we switched out their scripts
03:44 - you can test this if you like to ensure
03:46 - it works just as before
03:48 - i want to make some space for these new
03:50 - blocks
03:52 - if you have my scratch dev tools browser
03:54 - extension installed
03:55 - there's a link under the video then
03:57 - using the cleanup blocks plus feature
03:59 - will helpfully move these other scripts
04:01 - over to the right
04:02 - but otherwise you're best off moving
04:04 - them by hand i'm afraid
04:06 - that scratch's built-in cleanup feature
04:08 - is rather brutal
04:10 - add a change falling by one after the
04:13 - change y by speed
04:14 - this way the falling variable will be
04:16 - continually counting upwards
04:18 - but what if the player isn't falling
04:21 - well we should then
04:22 - be setting this back to zero when we
04:24 - touch the ground
04:25 - we detect ground collisions here within
04:27 - the fixed collisions in direction
04:30 - at the bottom of this script now let's
04:32 - move the if
04:33 - solid is greater than zero block out of
04:35 - here
04:36 - back to the new define move sprite x and
04:39 - y blocks
04:40 - we can duplicate it so that is in both
04:44 - now we can simplify this because the
04:46 - move sprite x
04:48 - only ever wants to set speed x to zero
04:51 - and vice versa in the move sprite y good
04:54 - that makes things cleaner okay
04:58 - so before setting speed y to zero we can
05:01 - now check if speed y is less than zero
05:05 - this will happen only when the player
05:07 - has fallen down
05:08 - such that their feet have touched the
05:10 - ground and then
05:11 - we can set the falling variable to zero
05:15 - let's give that a quick test what we see
05:18 - is that the falling variable is always
05:20 - zero while i'm standing on the ground
05:22 - but as soon as i leave the ground the
05:24 - number begins to increase
05:26 - now let's look at the define handle keys
05:29 - jump script
05:31 - i'm going to move the change speed y and
05:33 - the scripts following it
05:34 - up to the top of this custom block as it
05:36 - will make things a little easier going
05:38 - forward
05:39 - within the key press condition by adding
05:42 - an if
05:42 - falling is less than 2 around the set
05:44 - speed y we are able to limit mario to
05:47 - only jump
05:48 - when they last touched the ground in the
05:49 - last two frames of the game
05:52 - let's test this well that surely stopped
05:55 - him from getting very high
05:57 - so why did we use falling less than two
05:59 - rather than falling equals zero
06:02 - the reason is that you want to give the
06:03 - player a little room for error
06:05 - like when they are jumping from the edge
06:07 - of a platform and also to allow them to
06:09 - jump when skipping down surfaces
06:12 - that mean that they are not always
06:13 - touching it consistently
06:15 - now we want to allow the player to jump
06:17 - higher when they hold down the up key
06:20 - make a new variable named jumping for
06:23 - this sprite only
06:27 - and we'll change jumping by one here to
06:30 - keep account of how
06:31 - long he's been jumping this time
06:34 - the end of a jump is when the player
06:36 - releases the jump key
06:37 - so we need to switch the if on the key
06:39 - press block
06:40 - for an if else block now we can put
06:43 - the set jumping to zero here signifying
06:46 - the jump is over
06:49 - now back to the main jump script add in
06:51 - an or
06:52 - and the check for jumping being greater
06:55 - than zero
06:56 - this is saying we can jump when we are
06:58 - touching the ground
07:00 - or we have already started a jump
07:03 - but we don't want to be able to jump
07:05 - forever again
07:07 - so we add an if around the set speed y
07:10 - and ensure that jumping is less than 11.
07:13 - okay great just change the set speed y
07:16 - to be 13 instead of 14. this is a nice
07:19 - size for a mario jump
07:22 - time to test this baby out it may look a
07:24 - little odd now without any animation to
07:26 - back up mario's huge
07:28 - jump height but this is working really
07:31 - well
07:31 - we are able to do little jumps and our
07:34 - big jumps are consistent
07:36 - with the official mario jump height of
07:38 - five blocks high
07:40 - wonderful now there's one problem that i
07:43 - can see here
07:44 - and that is that mario is tending to
07:46 - stick to the ceiling
07:47 - just a little bit when the player is
07:49 - holding the up key
07:51 - but i know exactly where to fix this
07:53 - locate the define
07:54 - move sprite y script and switch the if
07:58 - speed y to be an if else block
08:01 - the if is now for feat collisions
08:04 - the else for head collisions so set
08:07 - jumping to 99 in there so that when we
08:11 - hit our head
08:12 - the jumping code is told that we've been
08:13 - jumping for long enough
08:15 - quick test and yep that did the job
08:18 - perfectly
08:19 - my head is no longer a tall sticky
08:21 - feeling
08:23 - okay it's good practice to ensure we
08:25 - reset
08:26 - these new variables in the reset script
08:28 - add a set jumped to 99 and a set falling
08:31 - to 99 too
08:34 - alrighty then it's about time we did a
08:36 - little sprite animation don't you think
08:39 - locate the when i receive move player
08:42 - hat block
08:43 - and where we are positioning the player
08:44 - sprite you won't be surprised when i
08:47 - tell you to make a new custom block
08:49 - and we'll name paint sprite
08:52 - run without screen refresh and the go to
08:54 - block can be moved in there
08:57 - don't forget to add the paint sprite
08:58 - block back under the move camera block
09:00 - so that it gets run
09:03 - i'll just move it down here so we have
09:05 - some more space to work
09:07 - we can check for when falling is greater
09:09 - than one
09:10 - this indicates the player is not
09:11 - touching the ground so we'll switch
09:14 - costumes to the mario jump costume
09:17 - and then add a stop this script i like
09:20 - to use these stop script blocks when we
09:22 - intend to have lots of if conditions
09:24 - this prevents long build up of nested if
09:26 - else's
09:27 - you know what i mean now under this if
09:30 - switch the costume back to mario walk
09:32 - one
09:33 - and let's give it a test
09:36 - wow doesn't a bit of animation just
09:38 - bring things to life
09:39 - i'm loving it already now to be true to
09:42 - mario he should not actually keep his
09:44 - hand
09:44 - up once he begins to fall back to the
09:46 - ground
09:47 - we can code this too simply by
09:49 - introducing an if else block around the
09:51 - switch costume to mario jump
09:53 - and checking for speed y being greater
09:55 - than zero
09:57 - this is true when the player is
09:58 - travelling upwards otherwise
10:00 - set the costume to mario walk 3. that
10:03 - costume has mario in the same pose as
10:05 - the jump
10:06 - but his hand is down a quick run of the
10:08 - project and that's exactly what we
10:10 - wanted
10:11 - so with jumping sorted let's hide the
10:13 - falling and jumping variable reporters
10:15 - to clean up our stage and we'll move on
10:18 - next up we'll take another look at our
10:20 - player walking scripts
10:22 - that we created in the define handle
10:24 - keys left right custom block
10:26 - i'll move the scripts into a clean space
10:28 - so we have room to work on the scripts
10:30 - further
10:32 - now firstly let's get mario turning to
10:34 - face the left or right
10:36 - just add an if else block with a check
10:38 - for keywalk
10:39 - equaling zero so if the player does
10:42 - press a key
10:43 - then it will be the else part of this if
10:46 - that triggers
10:47 - so in the else drop in a point in
10:49 - direction block
10:50 - and we'll set it to be 90 multiplied by
10:54 - key walk which will result in either
10:56 - minus 90 for left
10:58 - or 90 for right we can give it a quick
11:01 - test to confirm that works
11:03 - oh wow finally a breath of fresh air to
11:05 - see him
11:06 - finally facing left now let's revisit
11:10 - the define handle keys left right script
11:13 - this simple code for walking smoothly
11:15 - left and right is the same method i use
11:17 - in most of my games
11:18 - however mario games tend to work a
11:21 - little differently
11:22 - we need a slower and more steady build
11:25 - up and change of speed
11:27 - we'll start by splitting up the
11:28 - acceleration from the deceleration so we
11:30 - can handle them differently
11:32 - just duplicate the set speed script into
11:35 - each side
11:35 - of the if else like this we'll begin
11:38 - by getting the acceleration script right
11:41 - first
11:42 - we'll cap mario's top speed bring in and
11:44 - if
11:45 - key walk multiplied by speed x is less
11:48 - than 10
11:50 - that will be the top speed and within
11:52 - this
11:53 - if we change speed x
11:57 - by key walk multiplied by 0.4
12:02 - okay so remember key walk is -1 when
12:05 - we're holding left
12:06 - and one when we're holding right so this
12:09 - change of speed will accelerate us in
12:11 - the correct direction
12:13 - the if above also uses this variable to
12:16 - negate
12:17 - our speed check to also check for
12:20 - negative speeds
12:22 - a bit of a clever mathematical hack
12:24 - let's run the project
12:25 - and make sure that it is behaving okay
12:28 - i'll just find some free space
12:30 - to check my acceleration is feeling good
12:33 - yep
12:34 - that's much better it now takes a bit
12:36 - more time to get to full speed
12:39 - okay now let's address mario slowing
12:42 - down
12:44 - i'll just code this logically so add
12:46 - with me
12:47 - and if else block checking for speed x
12:49 - being greater than
12:50 - 0.4 if so then we change it by
12:54 - minus 0.4 otherwise
12:58 - duplicate the if and swap the greater
13:00 - than for a less than
13:02 - now we can check for a speed x being
13:04 - less than negative 0.4
13:07 - make sure to remember that negative sign
13:08 - there if so
13:10 - we change speed x by positive 0.4
13:15 - and if neither of these conditions are
13:16 - true then well we simply need to set
13:19 - speed x
13:20 - to zero because we are coming to a
13:21 - complete stop
13:24 - it's testing time again getting into
13:26 - some free space
13:27 - oh yes mario's certainly now taking his
13:30 - time to slow down
13:31 - great ah but here's another mario trait
13:36 - when you are actively changing direction
13:38 - mario then
13:39 - slides less so
13:42 - back down to the acceleration script and
13:45 - add in an if else around the change
13:47 - speed x
13:48 - we can duplicate the condition above
13:50 - into the if
13:52 - but we'll change the value we are
13:53 - comparing to to zero
13:56 - now duplicate the change speed x2 into
14:00 - the else
14:01 - so this check for speed being less than
14:03 - zero is true
14:04 - when the player is currently traveling
14:06 - in the opposite direction to the way the
14:08 - player is pressing
14:10 - that is a slide so in this case we can
14:13 - change up his acceleration to 0.8
14:16 - making him turn around much faster
14:19 - let's have a quick test to confirm yeah
14:22 - cool
14:22 - it no longer feels like i'm slipping
14:24 - around all over the place and i have
14:25 - much more control again
14:28 - okay before we add in the walking
14:30 - animations
14:31 - there's one more platforming dynamic
14:33 - that mario has that i often miss in my
14:35 - own games
14:37 - when you aren't pressing left or right
14:39 - mario slows down
14:41 - but only when he's touching the floor
14:44 - when he's jumping or just in the air he
14:46 - doesn't naturally slow down at all
14:49 - this is easy for us to code we just
14:51 - place an if around the whole of the
14:53 - deceleration script
14:57 - and as always checking falling being
15:00 - less than two
15:01 - so that the slowing down code is not
15:03 - even run
15:04 - unless we are touching the ground now
15:07 - that
15:08 - feels awesome i think i added too many
15:11 - of those gold blocks though
15:12 - they're getting in the way of my testing
15:15 - but mario is now traveling through the
15:16 - air
15:17 - without me pressing left or right to
15:19 - keep him going
15:20 - just as he should so with all mario's
15:24 - controls working correctly
15:26 - we can finally add in his animations too
15:29 - make a new variable player frame for
15:32 - this sprite only
15:33 - this will be our animation frame for the
15:35 - walk cycle
15:36 - and make a second variable we'll call
15:39 - temp for this sprite only
15:42 - set player frame to zero after we set
15:44 - speed x to zero
15:46 - that is when the player comes to a stop
15:49 - and now we'll add in scripts to increase
15:51 - the frame
15:51 - to show a nice animation we want the
15:54 - animation to get
15:55 - faster and slower depending on mario's
15:58 - walk speed
15:59 - set temp to the absolute value of speed
16:02 - x
16:03 - all divided by 19.
16:06 - this means temp will always be positive
16:10 - when we are walking left or right now we
16:13 - want to make sure
16:14 - that the animation is never played too
16:16 - slowly
16:17 - that it looks weird so check for temp
16:20 - being less than 0.2 and if it is
16:24 - then set it back to 0.2
16:29 - finally we now change our player frame
16:32 - by temp
16:38 - now locate the define paint sprite
16:40 - custom block
16:41 - and place an add operator into the final
16:43 - switch costume block
16:45 - we'll start the costume at costume one
16:48 - if
16:48 - we check our players costumes then you
16:51 - can see the walk cycle goes from frame
16:53 - one two three and four before we hit the
16:56 - player turning costume
16:58 - so four costumes for this we use a mod
17:02 - operator on the left side we use
17:05 - the floor of player frame
17:08 - this is to round the frame down to the
17:10 - nearest whole number and then mod it by
17:12 - four to ensure it loops around and
17:14 - around the four
17:16 - costumes only and oh yes
17:19 - look at this beautiful thing it's like
17:22 - we flicked a switch and suddenly mario's
17:24 - movements make
17:25 - sense notice that as he slows down now
17:27 - his walk cycle
17:28 - also slows with him this means he no
17:31 - longer looks like
17:32 - he's sliding to a stop but instead that
17:34 - he is naturally slowing down his walk
17:37 - it makes all the difference is there
17:39 - anything we could add to make this any
17:40 - better
17:42 - well actually yes remember that player
17:44 - turning costume
17:46 - we can use this to give mario an awesome
17:48 - turning animation
17:50 - for this we need a new variable player
17:52 - action
17:53 - for this sprite only this will keep
17:55 - track of the special actions the player
17:57 - is currently performing
17:59 - still in the paint sprite script we'll
18:02 - check
18:02 - if player action equals turn
18:06 - and if it does we'll switch costumes to
18:09 - mario turn
18:10 - and then stop this script the best place
18:13 - for this
18:14 - is just before the walking animation
18:16 - script
18:17 - okay nice and simple we just need to set
18:20 - this variable to the value
18:21 - turn and this will activate the
18:22 - animation
18:24 - so locate the handle keys left and right
18:27 - custom block
18:28 - and we'll set player action to walk at
18:30 - the top here for now
18:32 - then scroll down to the turn around code
18:35 - here
18:36 - and we can simply set player action to
18:39 - turn
18:39 - just like we said i'll run the project
18:42 - and we can check out his new turning
18:44 - animation
18:45 - ah it works loving it
18:50 - this is getting so beautiful we really
18:52 - must fix mario's width
18:54 - he's still able to get far too close to
18:56 - blocks and falls off ledges
18:58 - that he should be able to stand on
19:02 - locate the reset player script
19:06 - add a new variable named width for this
19:09 - sprite
19:10 - only set it to 8
19:13 - and place it next to the set height now
19:16 - i'm going to also
19:17 - fix another potential bug here that
19:20 - might crop up later
19:21 - by making another variable named minus
19:25 - tiny that is hyphen tiny make it for all
19:28 - sprites
19:29 - this time all sprites and set it to
19:32 - now do this carefully negative
19:36 - zero point zero zero
19:39 - zero zero zero one did you get that
19:43 - negative zero point and then five
19:47 - zeros and finally a one yep that
19:50 - really is a very small negative number
19:53 - now let me show you what this is for
19:55 - find with me the define
19:57 - fix collision at point script now see
20:00 - those
20:00 - negative 0.01 numbers
20:03 - so these were my previous negative tiny
20:06 - numbers
20:06 - but it just so happens that they are not
20:09 - really tiny enough
20:10 - once we start adding in slopes and the
20:12 - like later on
20:14 - so i'm fixing that now replace both the
20:16 - negative 0.01 values
20:18 - with the new negative tiny variable
20:21 - okay to give mario some width scroll
20:25 - up to the define fix collision in
20:27 - direction script
20:28 - and we'll duplicate the three collision
20:30 - checks
20:31 - at present we are just looking for three
20:33 - central points it is feet
20:35 - head and middle now we'll widen the
20:38 - checks by first checking at to mario's
20:40 - left
20:40 - by subtracting width from x
20:49 - and then on the right by adding to x
20:55 - width and minus tiny
21:05 - okay so put that all back together and
21:08 - we can see if that worked as expected
21:12 - my gosh i hope you've got this far in
21:15 - your scripts too because
21:16 - this is just too fun mario suddenly
21:19 - feels a lot more solid
21:20 - i can edge nicely over the edge of
21:22 - platforms without dropping off too early
21:24 - and i can no longer get up too close to
21:27 - walls
21:28 - very nice very nice indeed
21:31 - let's hide all these available reporters
21:33 - since it's all working so well
21:36 - now as a special treat in the closing
21:38 - few minutes of this episode
21:40 - i just wanted to try to sneak in some
21:42 - smoke particles for when mario changes
21:44 - direction
21:45 - they will really finish off the whole
21:46 - mario look
21:48 - hopefully you've brought in the particle
21:50 - sprite for my resource project
21:52 - so click into that sprite now so
21:55 - working quickly with me let's add a when
21:58 - flag clicked
21:59 - we need a frame variable for this sprite
22:02 - only
22:02 - that will set to the blank value we'll
22:05 - use this to identify that the sprite
22:07 - is not a clone in a moment as always
22:10 - with this pixel art tile set
22:12 - we'll size to 200 percent and then hide
22:16 - now bring in a when i start as clone
22:19 - and then set frame to one
22:23 - that will distinguish the clone make two
22:26 - new variables named
22:27 - x for this sprite only and y for this
22:30 - sprite only
22:31 - these hold the position of the dust
22:33 - cloud clone now when this cloud particle
22:35 - is created
22:36 - we want its position to be the same as
22:38 - the player's position
22:39 - so bring in a set x2 block however
22:43 - the x variable of the player sprite was
22:45 - defined as for this sprite only
22:48 - so to access it we need to use the thing
22:50 - of thing block
22:51 - in the sensing category and change the
22:54 - of
22:55 - to mario and then we can change the left
22:57 - hand side
22:58 - to the x variable be careful not to
23:01 - select the x position
23:02 - as that would be the wrong one we need
23:04 - to do the same now
23:06 - for the y variable now we need to use
23:08 - the x
23:09 - y to position the sprite clone on the
23:11 - screen using a when i receive position
23:13 - tiles hat block
23:19 - the go to x y follows our usual pattern
23:22 - of x
23:22 - minus camera x
23:26 - and y minus camera y and then we make
23:29 - sure
23:29 - to show the sprite and before we forget
23:32 - we need to ensure this position tiles
23:34 - event does not run
23:36 - for the original sprite that was not a
23:38 - clone by adding in an
23:39 - if frame equals empty value
23:43 - then stop this script right
23:46 - so all this code but nothing is creating
23:48 - the smoke particle clones
23:50 - click on the mario player sprite and
23:52 - locate the define
23:53 - handle keys left right script
23:58 - find where we are setting the player
24:00 - action to turn
24:02 - and this is where we want to generate
24:03 - our smoke
24:05 - we'll make a new custom block for this
24:07 - named make
24:08 - skid smoke run without screen refresh
24:14 - and we'll call it right here after
24:16 - setting player action to turn
24:18 - now in the make skid smoke simply create
24:21 - clone of particles
24:26 - let's run the project and see what it
24:28 - does
24:30 - well that's weird but it's also correct
24:33 - we are creating smoke sprites at our
24:35 - location
24:36 - every time we turn quickly now back in
24:39 - the particle sprite
24:40 - we'll move the particles down to be
24:42 - under mario's feet
24:44 - by subtracting 20. that's a little
24:46 - better
24:47 - if you look inside the smoke particle
24:49 - costumes you can see that there are two
24:52 - sizes for us to animate over
24:55 - we'll use a frame variable to handle
24:58 - this as we did for the player's walk
24:59 - cycle
25:00 - bring in a change frame by 0.4
25:05 - the animation is only 2 frames long so
25:08 - if
25:08 - frame is no longer less than 3
25:14 - we can delete this clone and to handle
25:17 - the change in costume
25:19 - we switch costume to the floor
25:24 - of frame testing the project
25:28 - now has this looking a lot better and
25:30 - smoke is well positioned
25:32 - and only lasts for a short time the only
25:34 - problem i can see
25:36 - is that there is simply too much of it
25:39 - switch back to the mario player sprite
25:41 - and we'll limit the amount of clones
25:42 - that get created
25:44 - firstly change player frame by one
25:49 - and then add an if around the crate
25:51 - clone that checks
25:53 - for the player frame mod 3
25:56 - being less than one that will only
25:59 - happen one
25:59 - in every three frames testing that now
26:02 - and i hope you'll agree that that makes
26:04 - the smoke cloud look
26:05 - far more convincing oh no wait look
26:09 - when mario jumps he's leaving smoke
26:11 - trails in the sky how did we miss that
26:14 - scroll up to the call to make skid smoke
26:18 - oh man did i call it make skip smoke
26:21 - that was a typo sorry anyhow
26:25 - bring out an if block and surround the
26:27 - whole set player turn
26:28 - and make smoke blocks the condition to
26:32 - add
26:33 - is a check for falling being less than
26:35 - two
26:36 - yet again so no turning animation
26:39 - when we are in the air yes that did it
26:42 - wonderful and i think my friends we are
26:45 - there although
26:46 - i may have overdone it with the number
26:48 - of golden blocks in my way
26:50 - i'm just going to go to the generate
26:51 - sprite and change the pick random to be
26:54 - 1 in 25 rather than 1 in 10.
26:59 - wow what an epic scripting journey that
27:02 - has been
27:03 - i was thinking this would be a quick
27:05 - tutorial so that we could move on to
27:07 - other more exciting things like
27:08 - off-screen enemies
27:09 - the level designer or sloping tiles but
27:12 - i'm really pleased we spent the time to
27:14 - get the platforming scripts right
27:16 - plus the added player animation makes a
27:18 - huge difference
27:19 - in how the game feels when you play it
27:21 - if you have managed to keep up and
27:23 - everything is working
27:24 - then i think you're going to be pretty
27:26 - pleased with yourselves and rightly so
27:28 - this level of player animation is not
27:30 - often seen in a scratch project
27:32 - so your projects are going to look
27:33 - pretty special
27:35 - why not leave me a comment under the
27:36 - video to let me know how you got on
27:39 - if you enjoyed this tutorial then please
27:42 - smash that like button
27:43 - don't forget subscribe to the channel to
27:45 - avoid missing my next exciting video
27:48 - we are really making progress on this
27:50 - project i can't wait
27:51 - to continue the journey with you and i'm
27:53 - pretty sure we will be looking at
27:54 - creating a level designer next
27:56 - but until then scratch on guys
28:06 - you

Cleaned transcript:

hello fellow scratchers welcome back to part four in our series creating a tile scrolling platformer in scratch in this episode we will bring mario fully to life fleshing out his platforming scripts and giving him some awesome animations to boot just look at him go this is really great and to wrap up the episode we will improve mario's collision box and sneak in a simple particle system to add to the skid effect wow all this in one episode amazing when i began creating this tutorial series i didn't include the required mario costumes that we are going to use in my starter project that's no longer the case but if you need them then you'll find a link under this project to the updated scratch resource and i'll quickly talk you through how to get them into your existing project too so you can either click the scratch project link under my video or visit my griff patch tutor page directly and find the mario resource project there click look inside and oh nice look at all these lovely animated frames that i've lovingly cut out positioned ready to animate all for you you lucky people click your backpack bar to open it and drag the entire mario sprite onto it next we'll also backpack this cute little particle sprite for later and lastly click on the stage backdrop we might as well bag the single blue backdrop costume 2. ok now load up your tile scrolling platform of object from where we left off in episode 3. if you open your backpack once again and drag the entire mario sprite out dropping it safely in the sprites panel to the right do the same with the particle sprite and then carefully drop the blue backdrop costume onto the stage backdrop panel like this now we have two mario sprites so click into the mario 2 sprite that's the one we just dropped from our backpack and switch to the costumes tab we will carefully drag each costume one by one from here to our main mario sprite like this i like to count them off as i do it one by one to keep track of which costume i'm up to you should find nine of them lastly click into your first mario sprite and delete the costume mario one if you have the dot costume like me then delete that too if all has gone well then we should end up with nine mario costumes all ready to go you are then free to delete this mario 2 sprite if you like i left mine in but only because i was too excited to move on and so in the words of mario himself here we go okay the first thing we're going to do is add some excellent mario style jumping code currently in our project we're able to jump to any height and engage the jump at any time perfect for a jetpack game but plain rubbish for a platformer we need to set some rules that mario is only allowed to begin a jump when his feet have recently touched the ground to do this we'll make a new variable named falling for this sprite only locate the x and y movement scripts here under the when i receive move player event we're going to split these out into their own custom blocks so make with me a move sprite x block one without screen refresh and a move sprite y block again without screen refresh now move the change y and its fixed collision block into the moves y custom block and do the same for the move sprite x we'll then place the new move sprite x and y blocks in place of where we switched out their scripts you can test this if you like to ensure it works just as before i want to make some space for these new blocks if you have my scratch dev tools browser extension installed there's a link under the video then using the cleanup blocks plus feature will helpfully move these other scripts over to the right but otherwise you're best off moving them by hand i'm afraid that scratch's builtin cleanup feature is rather brutal add a change falling by one after the change y by speed this way the falling variable will be continually counting upwards but what if the player isn't falling well we should then be setting this back to zero when we touch the ground we detect ground collisions here within the fixed collisions in direction at the bottom of this script now let's move the if solid is greater than zero block out of here back to the new define move sprite x and y blocks we can duplicate it so that is in both now we can simplify this because the move sprite x only ever wants to set speed x to zero and vice versa in the move sprite y good that makes things cleaner okay so before setting speed y to zero we can now check if speed y is less than zero this will happen only when the player has fallen down such that their feet have touched the ground and then we can set the falling variable to zero let's give that a quick test what we see is that the falling variable is always zero while i'm standing on the ground but as soon as i leave the ground the number begins to increase now let's look at the define handle keys jump script i'm going to move the change speed y and the scripts following it up to the top of this custom block as it will make things a little easier going forward within the key press condition by adding an if falling is less than 2 around the set speed y we are able to limit mario to only jump when they last touched the ground in the last two frames of the game let's test this well that surely stopped him from getting very high so why did we use falling less than two rather than falling equals zero the reason is that you want to give the player a little room for error like when they are jumping from the edge of a platform and also to allow them to jump when skipping down surfaces that mean that they are not always touching it consistently now we want to allow the player to jump higher when they hold down the up key make a new variable named jumping for this sprite only and we'll change jumping by one here to keep account of how long he's been jumping this time the end of a jump is when the player releases the jump key so we need to switch the if on the key press block for an if else block now we can put the set jumping to zero here signifying the jump is over now back to the main jump script add in an or and the check for jumping being greater than zero this is saying we can jump when we are touching the ground or we have already started a jump but we don't want to be able to jump forever again so we add an if around the set speed y and ensure that jumping is less than 11. okay great just change the set speed y to be 13 instead of 14. this is a nice size for a mario jump time to test this baby out it may look a little odd now without any animation to back up mario's huge jump height but this is working really well we are able to do little jumps and our big jumps are consistent with the official mario jump height of five blocks high wonderful now there's one problem that i can see here and that is that mario is tending to stick to the ceiling just a little bit when the player is holding the up key but i know exactly where to fix this locate the define move sprite y script and switch the if speed y to be an if else block the if is now for feat collisions the else for head collisions so set jumping to 99 in there so that when we hit our head the jumping code is told that we've been jumping for long enough quick test and yep that did the job perfectly my head is no longer a tall sticky feeling okay it's good practice to ensure we reset these new variables in the reset script add a set jumped to 99 and a set falling to 99 too alrighty then it's about time we did a little sprite animation don't you think locate the when i receive move player hat block and where we are positioning the player sprite you won't be surprised when i tell you to make a new custom block and we'll name paint sprite run without screen refresh and the go to block can be moved in there don't forget to add the paint sprite block back under the move camera block so that it gets run i'll just move it down here so we have some more space to work we can check for when falling is greater than one this indicates the player is not touching the ground so we'll switch costumes to the mario jump costume and then add a stop this script i like to use these stop script blocks when we intend to have lots of if conditions this prevents long build up of nested if else's you know what i mean now under this if switch the costume back to mario walk one and let's give it a test wow doesn't a bit of animation just bring things to life i'm loving it already now to be true to mario he should not actually keep his hand up once he begins to fall back to the ground we can code this too simply by introducing an if else block around the switch costume to mario jump and checking for speed y being greater than zero this is true when the player is travelling upwards otherwise set the costume to mario walk 3. that costume has mario in the same pose as the jump but his hand is down a quick run of the project and that's exactly what we wanted so with jumping sorted let's hide the falling and jumping variable reporters to clean up our stage and we'll move on next up we'll take another look at our player walking scripts that we created in the define handle keys left right custom block i'll move the scripts into a clean space so we have room to work on the scripts further now firstly let's get mario turning to face the left or right just add an if else block with a check for keywalk equaling zero so if the player does press a key then it will be the else part of this if that triggers so in the else drop in a point in direction block and we'll set it to be 90 multiplied by key walk which will result in either minus 90 for left or 90 for right we can give it a quick test to confirm that works oh wow finally a breath of fresh air to see him finally facing left now let's revisit the define handle keys left right script this simple code for walking smoothly left and right is the same method i use in most of my games however mario games tend to work a little differently we need a slower and more steady build up and change of speed we'll start by splitting up the acceleration from the deceleration so we can handle them differently just duplicate the set speed script into each side of the if else like this we'll begin by getting the acceleration script right first we'll cap mario's top speed bring in and if key walk multiplied by speed x is less than 10 that will be the top speed and within this if we change speed x by key walk multiplied by 0.4 okay so remember key walk is 1 when we're holding left and one when we're holding right so this change of speed will accelerate us in the correct direction the if above also uses this variable to negate our speed check to also check for negative speeds a bit of a clever mathematical hack let's run the project and make sure that it is behaving okay i'll just find some free space to check my acceleration is feeling good yep that's much better it now takes a bit more time to get to full speed okay now let's address mario slowing down i'll just code this logically so add with me and if else block checking for speed x being greater than 0.4 if so then we change it by minus 0.4 otherwise duplicate the if and swap the greater than for a less than now we can check for a speed x being less than negative 0.4 make sure to remember that negative sign there if so we change speed x by positive 0.4 and if neither of these conditions are true then well we simply need to set speed x to zero because we are coming to a complete stop it's testing time again getting into some free space oh yes mario's certainly now taking his time to slow down great ah but here's another mario trait when you are actively changing direction mario then slides less so back down to the acceleration script and add in an if else around the change speed x we can duplicate the condition above into the if but we'll change the value we are comparing to to zero now duplicate the change speed x2 into the else so this check for speed being less than zero is true when the player is currently traveling in the opposite direction to the way the player is pressing that is a slide so in this case we can change up his acceleration to 0.8 making him turn around much faster let's have a quick test to confirm yeah cool it no longer feels like i'm slipping around all over the place and i have much more control again okay before we add in the walking animations there's one more platforming dynamic that mario has that i often miss in my own games when you aren't pressing left or right mario slows down but only when he's touching the floor when he's jumping or just in the air he doesn't naturally slow down at all this is easy for us to code we just place an if around the whole of the deceleration script and as always checking falling being less than two so that the slowing down code is not even run unless we are touching the ground now that feels awesome i think i added too many of those gold blocks though they're getting in the way of my testing but mario is now traveling through the air without me pressing left or right to keep him going just as he should so with all mario's controls working correctly we can finally add in his animations too make a new variable player frame for this sprite only this will be our animation frame for the walk cycle and make a second variable we'll call temp for this sprite only set player frame to zero after we set speed x to zero that is when the player comes to a stop and now we'll add in scripts to increase the frame to show a nice animation we want the animation to get faster and slower depending on mario's walk speed set temp to the absolute value of speed x all divided by 19. this means temp will always be positive when we are walking left or right now we want to make sure that the animation is never played too slowly that it looks weird so check for temp being less than 0.2 and if it is then set it back to 0.2 finally we now change our player frame by temp now locate the define paint sprite custom block and place an add operator into the final switch costume block we'll start the costume at costume one if we check our players costumes then you can see the walk cycle goes from frame one two three and four before we hit the player turning costume so four costumes for this we use a mod operator on the left side we use the floor of player frame this is to round the frame down to the nearest whole number and then mod it by four to ensure it loops around and around the four costumes only and oh yes look at this beautiful thing it's like we flicked a switch and suddenly mario's movements make sense notice that as he slows down now his walk cycle also slows with him this means he no longer looks like he's sliding to a stop but instead that he is naturally slowing down his walk it makes all the difference is there anything we could add to make this any better well actually yes remember that player turning costume we can use this to give mario an awesome turning animation for this we need a new variable player action for this sprite only this will keep track of the special actions the player is currently performing still in the paint sprite script we'll check if player action equals turn and if it does we'll switch costumes to mario turn and then stop this script the best place for this is just before the walking animation script okay nice and simple we just need to set this variable to the value turn and this will activate the animation so locate the handle keys left and right custom block and we'll set player action to walk at the top here for now then scroll down to the turn around code here and we can simply set player action to turn just like we said i'll run the project and we can check out his new turning animation ah it works loving it this is getting so beautiful we really must fix mario's width he's still able to get far too close to blocks and falls off ledges that he should be able to stand on locate the reset player script add a new variable named width for this sprite only set it to 8 and place it next to the set height now i'm going to also fix another potential bug here that might crop up later by making another variable named minus tiny that is hyphen tiny make it for all sprites this time all sprites and set it to now do this carefully negative zero point zero zero zero zero zero one did you get that negative zero point and then five zeros and finally a one yep that really is a very small negative number now let me show you what this is for find with me the define fix collision at point script now see those negative 0.01 numbers so these were my previous negative tiny numbers but it just so happens that they are not really tiny enough once we start adding in slopes and the like later on so i'm fixing that now replace both the negative 0.01 values with the new negative tiny variable okay to give mario some width scroll up to the define fix collision in direction script and we'll duplicate the three collision checks at present we are just looking for three central points it is feet head and middle now we'll widen the checks by first checking at to mario's left by subtracting width from x and then on the right by adding to x width and minus tiny okay so put that all back together and we can see if that worked as expected my gosh i hope you've got this far in your scripts too because this is just too fun mario suddenly feels a lot more solid i can edge nicely over the edge of platforms without dropping off too early and i can no longer get up too close to walls very nice very nice indeed let's hide all these available reporters since it's all working so well now as a special treat in the closing few minutes of this episode i just wanted to try to sneak in some smoke particles for when mario changes direction they will really finish off the whole mario look hopefully you've brought in the particle sprite for my resource project so click into that sprite now so working quickly with me let's add a when flag clicked we need a frame variable for this sprite only that will set to the blank value we'll use this to identify that the sprite is not a clone in a moment as always with this pixel art tile set we'll size to 200 percent and then hide now bring in a when i start as clone and then set frame to one that will distinguish the clone make two new variables named x for this sprite only and y for this sprite only these hold the position of the dust cloud clone now when this cloud particle is created we want its position to be the same as the player's position so bring in a set x2 block however the x variable of the player sprite was defined as for this sprite only so to access it we need to use the thing of thing block in the sensing category and change the of to mario and then we can change the left hand side to the x variable be careful not to select the x position as that would be the wrong one we need to do the same now for the y variable now we need to use the x y to position the sprite clone on the screen using a when i receive position tiles hat block the go to x y follows our usual pattern of x minus camera x and y minus camera y and then we make sure to show the sprite and before we forget we need to ensure this position tiles event does not run for the original sprite that was not a clone by adding in an if frame equals empty value then stop this script right so all this code but nothing is creating the smoke particle clones click on the mario player sprite and locate the define handle keys left right script find where we are setting the player action to turn and this is where we want to generate our smoke we'll make a new custom block for this named make skid smoke run without screen refresh and we'll call it right here after setting player action to turn now in the make skid smoke simply create clone of particles let's run the project and see what it does well that's weird but it's also correct we are creating smoke sprites at our location every time we turn quickly now back in the particle sprite we'll move the particles down to be under mario's feet by subtracting 20. that's a little better if you look inside the smoke particle costumes you can see that there are two sizes for us to animate over we'll use a frame variable to handle this as we did for the player's walk cycle bring in a change frame by 0.4 the animation is only 2 frames long so if frame is no longer less than 3 we can delete this clone and to handle the change in costume we switch costume to the floor of frame testing the project now has this looking a lot better and smoke is well positioned and only lasts for a short time the only problem i can see is that there is simply too much of it switch back to the mario player sprite and we'll limit the amount of clones that get created firstly change player frame by one and then add an if around the crate clone that checks for the player frame mod 3 being less than one that will only happen one in every three frames testing that now and i hope you'll agree that that makes the smoke cloud look far more convincing oh no wait look when mario jumps he's leaving smoke trails in the sky how did we miss that scroll up to the call to make skid smoke oh man did i call it make skip smoke that was a typo sorry anyhow bring out an if block and surround the whole set player turn and make smoke blocks the condition to add is a check for falling being less than two yet again so no turning animation when we are in the air yes that did it wonderful and i think my friends we are there although i may have overdone it with the number of golden blocks in my way i'm just going to go to the generate sprite and change the pick random to be 1 in 25 rather than 1 in 10. wow what an epic scripting journey that has been i was thinking this would be a quick tutorial so that we could move on to other more exciting things like offscreen enemies the level designer or sloping tiles but i'm really pleased we spent the time to get the platforming scripts right plus the added player animation makes a huge difference in how the game feels when you play it if you have managed to keep up and everything is working then i think you're going to be pretty pleased with yourselves and rightly so this level of player animation is not often seen in a scratch project so your projects are going to look pretty special why not leave me a comment under the video to let me know how you got on if you enjoyed this tutorial then please smash that like button don't forget subscribe to the channel to avoid missing my next exciting video we are really making progress on this project i can't wait to continue the journey with you and i'm pretty sure we will be looking at creating a level designer next but until then scratch on guys you
