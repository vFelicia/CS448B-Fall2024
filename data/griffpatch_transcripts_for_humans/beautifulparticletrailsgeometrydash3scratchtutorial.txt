With timestamps:

00:00 - [Music]
00:02 - hello fellow scratchers welcome back to
00:05 - this most exciting episode 3 of
00:07 - recreating Geometry Dash in scratch and
00:10 - yes finally we'll be adding those most
00:12 - desirable particle effects the classic
00:14 - geometry dash player rotation and not to
00:17 - mention better Spike hitboxes yeah but
00:20 - man I try to make my tutorials as robust
00:23 - as possible but there are times when a
00:25 - fellow scratcher comments it doesn't
00:27 - work I know it sounds implausible but
00:31 - sometimes the smallest thing like the
00:33 - size of a costume the thickness of a
00:35 - line the position or rotation of a
00:37 - Sprite can lead to unpredictable results
00:39 - therefore before we get into adding the
00:42 - cool new stuff let's go over some of
00:45 - these possible problems and make sure
00:47 - they won't be happening again and
00:49 - hopefully as we do this you might learn
00:51 - a few things too so open our projects
00:54 - from episode 2 and as we begin pop into
00:57 - the file menu and save the project as a
01:00 - fresh new copy for this is episode three
01:03 - guys let's get bug squashing the first
01:08 - bug we're going to cover is the dreaded
01:10 - instant death most often due to the
01:14 - player being positioned too low down
01:16 - when the game begins and the initial
01:18 - floor Collision results in an instant
01:20 - game over now sure we could fix this by
01:23 - adjusting the initial go to XY to raise
01:27 - the player up out of the ground but
01:29 - stick with me because there's actually
01:31 - something a little more Sinister at play
01:33 - here
01:34 - in the level Sprite when the green flag
01:37 - is clicked you'll remember we created
01:39 - our two level Sprite clones and you
01:42 - might assume that these two clones will
01:43 - appear on the screen right away
01:46 - well actually no they won't make an
01:50 - appearance until all the other green
01:52 - flag scripts in our project have had a
01:54 - chance to run and here in the player
01:56 - Sprite we have two such scripts so this
02:00 - means for the first frame of our game
02:02 - the level clones are not visible to the
02:05 - player Sprite ha well without a solid
02:08 - white floor to hold the player up they
02:10 - will surely fall down due to gravity and
02:13 - then the level appears but as you can
02:16 - see the player is now even more embedded
02:18 - in the floor than before and boom
02:20 - instant death bug all over again
02:24 - the solution is to do what we should
02:26 - have done from the start and make sure
02:28 - that the level clones are created before
02:30 - the main game Loop begins broadcast from
02:34 - the level Sprite a new message game on
02:38 - but only after the clones have been
02:40 - created then back in our player Sprite
02:44 - we swap out the two when green flag
02:46 - click blocks
02:48 - and we replace them with when I receive
02:51 - game on event receivers excellent order
02:55 - has been restored let's see if that made
02:57 - a difference
02:59 - and what do you know that did it for me
03:01 - even with a small initial overlap
03:03 - however if you want to be absolutely
03:06 - sure that the positioning is good stop
03:08 - the project make the level Sprite
03:10 - visible on the stage and then drag the
03:13 - player until they are just level with
03:15 - the floor
03:16 - finally copy the current y position into
03:19 - the initial go to XY block like so
03:23 - final test then smash that green flag
03:26 - and double check that all is good
03:29 - bug squashed
03:31 - now this is interesting by forcing the
03:34 - Clones to execute their scripts before
03:36 - our main game Loop we have changed how
03:39 - our collisions play out once again
03:41 - previously after a collision the player
03:43 - was left overlapping the level like this
03:46 - but now we end up getting pushed back
03:49 - out of the war after a collision and
03:51 - this is actually a requested feature oh
03:53 - you're welcome but I'm not quite sure
03:55 - it's so desirable that it also occurs
03:58 - for spikes
03:59 - now it's happening because the game over
04:02 - change X occurs right after the
04:04 - Collision so in effect Scrolls them
04:07 - right back out of the Collision again if
04:09 - we want to fix this just for the spikes
04:11 - then before we broadcast game over here
04:14 - slot in a change X position by
04:18 - but for the opposite direction to the
04:21 - scroll that's zero subtract scroll speed
04:25 - and in theory that should do the trick
04:27 - and a quick test just to confirm it yep
04:31 - Spike collisions are back to normal
04:33 - and our wall collisions are still great
04:36 - well okay the next bug the player might
04:39 - experience is the falling through the
04:42 - floor nasty our player to floor
04:45 - Collision detection strategy is based on
04:47 - collisions not with a whole solid level
04:49 - but with a relatively thin white line
04:52 - and if it's too thin or the wrong color
04:55 - then the player can just drop right
04:56 - through
04:57 - not only that but if the player is
04:59 - falling fast enough
05:01 - it's possible for them to skip right
05:03 - over that thin line missing the
05:05 - Collision altogether don't right then
05:08 - first thing to check is that your white
05:10 - lines are nice and thick if they're just
05:13 - one pixel then I'm afraid they often
05:15 - will not register as being white enough
05:16 - to trigger a collision and that's not
05:18 - great so try to ensure all your lines
05:21 - are at least four pixels wide
05:24 - what's more to ensure they are even
05:26 - solid when they are behind spikes bring
05:29 - the line to the front that will give
05:32 - your player the best chance to always
05:34 - detect a collision
05:36 - next up we'll address the possibility of
05:38 - line skipping now notice that our player
05:41 - is 34 pixels tall that means to skip
05:44 - over a line we'll need a speed y of like
05:46 - negative 34 or more so if we limit this
05:50 - speed then the problem should go away
05:54 - find the player movement script and just
05:56 - after we change speed y by 4 pop in an
06:00 - if block
06:01 - and check if speed Y is less than
06:06 - and let's say negative 28.
06:10 - and if it is then we set speed y back to
06:13 - negative 28 once more that's now a hard
06:17 - limit on the speed hopefully if you had
06:20 - any issues with falling through the
06:22 - floor then this will finally have sorted
06:24 - that out another bug squished
06:28 - hey since we are sorting out all these
06:30 - little quirks you may notice my player
06:32 - is appearing in front of the level
06:34 - but had I dragged the level Sprite last
06:37 - then now the level Sprite would appear
06:40 - in front of the player no we don't want
06:43 - this indeterministic Behavior so in the
06:45 - player Sprite drop in a go to front
06:48 - layer right here at the top
06:50 - sweet
06:52 - anything else worth fixing up
06:54 - the ceiling death bug so okay this is
06:58 - not so much a bug as a mistake on my
07:01 - part I was so into fixing up collisions
07:03 - that I forgot that touching their
07:05 - ceiling in Geometry Dash is actually
07:06 - considered a game over event
07:09 - so if you want that same functionality
07:12 - in your game not to worry it's dead easy
07:14 - in our player movement script after a
07:18 - collision the first check is for the
07:20 - downward collisions of speed y less than
07:22 - zero but otherwise this is a ceiling
07:24 - Collision so rather than just moving out
07:27 - of the Collision replace that custom
07:29 - block with a broadcast to game over it's
07:33 - as simple as that and I wouldn't be in
07:36 - the least bit surprised if you were way
07:37 - ahead of me and had already done just
07:39 - that let me know in the comments if you
07:41 - did
07:42 - right now then we are finally going to
07:46 - add in that player rotation that we've
07:48 - all been so eager to implement Begin by
07:51 - checking the top layer Sprite is set to
07:53 - the all-around rotation mode now that's
07:56 - the first option here
07:57 - then we'll initialize the player in the
08:00 - game on script to start the right way up
08:03 - point in Direction leaving it set to 90
08:06 - degrees perfect
08:09 - next to make them rotate we'll do this
08:12 - in the player movement script
08:14 - drop in a turn clockwise block as the
08:18 - first block in the script
08:19 - and as for how much I find 14 degrees
08:23 - works well for me
08:25 - and now if you smash that green flag one
08:28 - of two things will happen either you'll
08:31 - be greeted by an oh so sweet rotating
08:33 - player where they bob up and down as
08:35 - they rotate following every Contour of
08:37 - the level
08:38 - or
08:40 - hmm yes sad like me now I'm getting that
08:45 - instant death again well to be honest
08:48 - it's probably a good thing that I did
08:50 - otherwise we wouldn't have this
08:52 - opportunity to see why I am
08:54 - the added rotation on top of me lowering
08:57 - down the player has again caused the
08:59 - Sprite to enter instant death territory
09:02 - well the robust solution is to switch
09:04 - back to non-rotated costumes when
09:06 - looking for level collisions
09:09 - find the game Loop under the game on
09:11 - script
09:12 - and from the motion category find the
09:15 - set rotation style block
09:17 - before calling the player movement
09:19 - script set rotation style to don't
09:21 - rotate yeah I left mine on left and
09:24 - right that will work too but don't
09:27 - rotate is probably better this will keep
09:29 - the Sprite upright for the Collision
09:31 - checks we just need to remember to
09:33 - restore the style afterwards set
09:35 - rotation style to all around so that
09:38 - once again the player will appear to be
09:40 - rotated as requested
09:42 - and this is interesting running the
09:44 - project you'll find we no longer have
09:46 - instant death but we have lost that in
09:49 - doing bobbing up and down effect
09:51 - now we are gliding smoothly across the
09:54 - floor once more oh well not to worry
09:56 - because at the end of the day we should
09:58 - only be rotating when the player is off
10:00 - the ground anyhow right when touching
10:03 - the ground we need to level them off to
10:05 - the nearest flat surface this is round
10:08 - their direction to the nearest 90
10:10 - degrees
10:12 - so scroll over to the player movement
10:14 - script again the floor collisions are
10:17 - detected here
10:19 - set Direction 2.
10:22 - and we need the current direction
10:25 - to snap this to the nearest 90 degrees
10:27 - we first divide by 90.
10:33 - then drop it into a round block
10:38 - finally we multiply that back up by 90
10:40 - again
10:44 - to find the nearest multiple of 90.
10:50 - awesome I am so excited to see this in
10:52 - action smash that green flag
10:55 - oh my gosh guys look at that what can I
10:59 - say it's just so fun I especially love
11:01 - how they tumble off platform edges and
11:04 - do a small quarter turn very authentic
11:06 - but hitting these spikes calls to mind
11:09 - another comment that gets raised again
11:11 - and again that the spikes in our
11:14 - Geometry Dash are just too unforgiving
11:16 - in the original game Spikes have a small
11:18 - hitbox at the center and that is the
11:21 - only part that's dangerous to touch that
11:23 - explains my difficulty in jumping over
11:25 - the triple spikes now we could emulate
11:28 - this effect by drawing a little colored
11:30 - box in the middle of each Spike and
11:32 - watching out for the collisions with
11:34 - that instead but I have an alternative
11:37 - instead of reducing the hitbox of each
11:40 - spike in our game we can get the same
11:42 - effect by reducing the hitbox of the
11:44 - player instead do you see
11:48 - let's try that shall we open the player
11:50 - costume Tab and oh gosh we should have
11:53 - given the player costume a proper name
11:55 - player
11:56 - then create a new second costume
12:00 - and using the rectangle tool with a
12:02 - solid fill and no outline draw out a
12:05 - square five grid squares wide and tall
12:08 - holding shift to keep it square
12:10 - it should be 20 by 20 pixels
12:13 - now snap the shape to the center of the
12:15 - canvas
12:16 - cool you can see this hitbox is quite a
12:19 - bit smaller than the player
12:21 - give the costume a name hitbox and even
12:24 - Spike so that we know what it's for
12:27 - okay so where in our code are we looking
12:30 - for a spike Collision
12:32 - in the main game Loop of the player
12:34 - Sprite here it is
12:36 - ah but we have a slight problem to use
12:40 - the hitbox costume with the touching
12:42 - color check here we need to switch
12:44 - costumes before doing the check but
12:47 - that's not possible when the touching
12:49 - block is part of a repeat until like
12:51 - this so we'll have to do the loop check
12:54 - another way pull it out and place it in
12:57 - a fresh new if block instead and if we
13:01 - are touching the spike color then it is
13:04 - game over so move the game over scripts
13:06 - inside the new if block
13:09 - one more thing we also want to stop this
13:13 - script at the end to say that this is
13:15 - now the end of the loop
13:17 - finally drop that all in after the
13:20 - player movement is complete but still
13:22 - within that Loop good
13:24 - Hmm this repeat until with an empty
13:27 - condition will actually just end up
13:29 - repeating forever so I guess we might as
13:31 - well make it official and switch it for
13:33 - a simpler forever Loop that's better now
13:37 - just before we give it a test we need to
13:39 - switch to the player's costume right up
13:41 - here before the game begins
13:43 - if all is well this should run just like
13:46 - it did before we've only rearranged the
13:48 - Collision check after all
13:50 - but now we can look at switching to the
13:53 - hitbox costume to make our collisions
13:55 - more lenient immediately before the
13:57 - color check switch costume 2. the hitbox
14:01 - costume and then right afterwards switch
14:04 - back to the player costume again
14:07 - you see the pattern
14:08 - we just need to be careful to also
14:10 - switch costumes back when we die so
14:13 - switch costume again to player
14:18 - now what do you think looks about right
14:19 - to me
14:21 - hit the green flag it's testing time
14:24 - oh my gosh I got it first time was that
14:27 - a fluke
14:30 - nope I got it again yeah it's so much
14:33 - easier now I really must check that yeah
14:36 - spikes do still work well that's cool I
14:40 - know a lot of you will be very pleased
14:41 - we got this feature in here today but
14:44 - there's still more to come yes last but
14:47 - not least we're going to add movement
14:49 - particles now these transparent blocks
14:52 - fan out behind the player giving the
14:54 - impression of speed and firm contact
14:57 - with the level but they also stop being
14:59 - emitted as soon as the player leaves the
15:01 - ground okay no problem let's begin by
15:04 - making a new Sprite naming it particles
15:08 - and then Zoom right into the costume
15:11 - canvas
15:12 - and we're going to draw a science square
15:18 - with no outline
15:20 - the rectangle is two grid cells wide
15:22 - that's eight by eight pixels
15:25 - snap it to the center and we are ready
15:27 - to code
15:29 - when green flag clicked
15:32 - we go to the front layer
15:40 - and then this is going to be a clone
15:43 - Factory so hide the original Sprite
15:46 - the Clone should be created by the
15:48 - player Sprite so click in there now
15:50 - finding that same old player movement
15:53 - script
15:55 - when we are touching the level and more
15:58 - specifically when we are moving down
16:00 - into a collision here this is where the
16:02 - particles should get emitted so drop in
16:04 - a create clone of block and switch to
16:07 - create a clone of the particle Sprite
16:11 - place it right after we move out of the
16:13 - level
16:15 - great so back into the particle Sprite
16:18 - when I start as a clone every new
16:22 - particle will Begin by running this
16:24 - script individually
16:25 - firstly the particles want to emit from
16:28 - the player so go to player we'll move
16:31 - them into place
16:32 - and then we must make sure the particle
16:34 - is visible
16:35 - show this clone
16:38 - next we need a bit of time to animate
16:41 - the particle so repeat for 10 times
16:45 - and to scroll this particle left we
16:47 - change X by
16:49 - the variable scroll speed of course as
16:52 - always
16:53 - finally once the 10 frames are up we
16:55 - delete this clone to remove it from the
16:58 - screen hey shall we see this in action
17:00 - hit the green flag
17:02 - and there we are a very simplified Scion
17:06 - trail that comes right out of the
17:07 - player's Center good news too the trail
17:10 - stops when we jump in the air
17:13 - hey let's make some improvements from
17:15 - the looks category we want the change
17:17 - effect by block we can fade out the
17:20 - particles over time with the change
17:22 - ghost effect
17:24 - and choose a value of around eight
17:30 - yep that's great how about we move the
17:33 - trail down to begin at the player's feet
17:37 - after the initial go-to block change X
17:39 - by and move left with a change X by
17:43 - negative 10 and we move down two using a
17:46 - change y by negative 16.
17:50 - and here we go that's even better the
17:54 - Finishing Touch is to spice it up with a
17:56 - little Randomness to make the particles
17:58 - spray around more for this we need some
18:00 - variables make a new variable speed X
18:04 - and make sure to switch it to for this
18:07 - Sprite only now this actually applies to
18:10 - clones too so each clone will have its
18:13 - own speed X otherwise all the particles
18:15 - will move at the same speed and it won't
18:17 - look any good
18:19 - now make another variable speed y again
18:22 - for this Sprite only
18:25 - we'll initialize the speed variables up
18:28 - here
18:29 - set speed X and a set speed y
18:33 - now these values can be randomized using
18:35 - a pick random block with a value between
18:38 - 0.0 and 4.0
18:42 - and the speed y can be between 0 and 3.0
18:46 - hey if you don't know why I added that
18:49 - point zero on the end here then I'd
18:52 - encourage you to try out the block
18:53 - yourself and see what difference it
18:55 - makes comment under the video once
18:57 - you've figured it out
18:58 - okay lastly we apply these variables to
19:02 - the actual movement scripts we add speed
19:05 - x to the existing scroll speed here
19:10 - and bring in a brand new change y by
19:15 - for the speed y variable
19:19 - test that
19:21 - yes Blended this is much improved and is
19:24 - almost there all that's missing is a
19:27 - little variance in the sizes of the
19:29 - particles no problem
19:31 - set size 2
19:35 - and again use a pick random block
19:37 - good values are between 50 that's half
19:40 - size and 100 that's full size
19:43 - smash that green flag and we are done
19:48 - the particle Trails the rotation the
19:50 - improved hitboxes solid collisions and a
19:53 - whole bunch of other bug fixes wow this
19:56 - is really coming together big time I
19:58 - really can't wait to see how your
20:00 - projects look so drop me a comment and
20:02 - let me know how you are getting along
20:04 - and better still Share the Fun by
20:06 - submitting them to my official scratch
20:08 - Studio linked under the video guys if
20:11 - you're enjoying these videos I'd
20:12 - encourage you to click the like button
20:14 - to show your appreciation and so is not
20:16 - to miss my next exciting video subscribe
20:19 - to the channel now checking that Bell
20:21 - icon to ensure you are the first to know
20:23 - when a new video drops but that is it
20:26 - for today so thank you for watching have
20:28 - a great week ahead and scratch on guys

Cleaned transcript:

hello fellow scratchers welcome back to this most exciting episode 3 of recreating Geometry Dash in scratch and yes finally we'll be adding those most desirable particle effects the classic geometry dash player rotation and not to mention better Spike hitboxes yeah but man I try to make my tutorials as robust as possible but there are times when a fellow scratcher comments it doesn't work I know it sounds implausible but sometimes the smallest thing like the size of a costume the thickness of a line the position or rotation of a Sprite can lead to unpredictable results therefore before we get into adding the cool new stuff let's go over some of these possible problems and make sure they won't be happening again and hopefully as we do this you might learn a few things too so open our projects from episode 2 and as we begin pop into the file menu and save the project as a fresh new copy for this is episode three guys let's get bug squashing the first bug we're going to cover is the dreaded instant death most often due to the player being positioned too low down when the game begins and the initial floor Collision results in an instant game over now sure we could fix this by adjusting the initial go to XY to raise the player up out of the ground but stick with me because there's actually something a little more Sinister at play here in the level Sprite when the green flag is clicked you'll remember we created our two level Sprite clones and you might assume that these two clones will appear on the screen right away well actually no they won't make an appearance until all the other green flag scripts in our project have had a chance to run and here in the player Sprite we have two such scripts so this means for the first frame of our game the level clones are not visible to the player Sprite ha well without a solid white floor to hold the player up they will surely fall down due to gravity and then the level appears but as you can see the player is now even more embedded in the floor than before and boom instant death bug all over again the solution is to do what we should have done from the start and make sure that the level clones are created before the main game Loop begins broadcast from the level Sprite a new message game on but only after the clones have been created then back in our player Sprite we swap out the two when green flag click blocks and we replace them with when I receive game on event receivers excellent order has been restored let's see if that made a difference and what do you know that did it for me even with a small initial overlap however if you want to be absolutely sure that the positioning is good stop the project make the level Sprite visible on the stage and then drag the player until they are just level with the floor finally copy the current y position into the initial go to XY block like so final test then smash that green flag and double check that all is good bug squashed now this is interesting by forcing the Clones to execute their scripts before our main game Loop we have changed how our collisions play out once again previously after a collision the player was left overlapping the level like this but now we end up getting pushed back out of the war after a collision and this is actually a requested feature oh you're welcome but I'm not quite sure it's so desirable that it also occurs for spikes now it's happening because the game over change X occurs right after the Collision so in effect Scrolls them right back out of the Collision again if we want to fix this just for the spikes then before we broadcast game over here slot in a change X position by but for the opposite direction to the scroll that's zero subtract scroll speed and in theory that should do the trick and a quick test just to confirm it yep Spike collisions are back to normal and our wall collisions are still great well okay the next bug the player might experience is the falling through the floor nasty our player to floor Collision detection strategy is based on collisions not with a whole solid level but with a relatively thin white line and if it's too thin or the wrong color then the player can just drop right through not only that but if the player is falling fast enough it's possible for them to skip right over that thin line missing the Collision altogether don't right then first thing to check is that your white lines are nice and thick if they're just one pixel then I'm afraid they often will not register as being white enough to trigger a collision and that's not great so try to ensure all your lines are at least four pixels wide what's more to ensure they are even solid when they are behind spikes bring the line to the front that will give your player the best chance to always detect a collision next up we'll address the possibility of line skipping now notice that our player is 34 pixels tall that means to skip over a line we'll need a speed y of like negative 34 or more so if we limit this speed then the problem should go away find the player movement script and just after we change speed y by 4 pop in an if block and check if speed Y is less than and let's say negative 28. and if it is then we set speed y back to negative 28 once more that's now a hard limit on the speed hopefully if you had any issues with falling through the floor then this will finally have sorted that out another bug squished hey since we are sorting out all these little quirks you may notice my player is appearing in front of the level but had I dragged the level Sprite last then now the level Sprite would appear in front of the player no we don't want this indeterministic Behavior so in the player Sprite drop in a go to front layer right here at the top sweet anything else worth fixing up the ceiling death bug so okay this is not so much a bug as a mistake on my part I was so into fixing up collisions that I forgot that touching their ceiling in Geometry Dash is actually considered a game over event so if you want that same functionality in your game not to worry it's dead easy in our player movement script after a collision the first check is for the downward collisions of speed y less than zero but otherwise this is a ceiling Collision so rather than just moving out of the Collision replace that custom block with a broadcast to game over it's as simple as that and I wouldn't be in the least bit surprised if you were way ahead of me and had already done just that let me know in the comments if you did right now then we are finally going to add in that player rotation that we've all been so eager to implement Begin by checking the top layer Sprite is set to the allaround rotation mode now that's the first option here then we'll initialize the player in the game on script to start the right way up point in Direction leaving it set to 90 degrees perfect next to make them rotate we'll do this in the player movement script drop in a turn clockwise block as the first block in the script and as for how much I find 14 degrees works well for me and now if you smash that green flag one of two things will happen either you'll be greeted by an oh so sweet rotating player where they bob up and down as they rotate following every Contour of the level or hmm yes sad like me now I'm getting that instant death again well to be honest it's probably a good thing that I did otherwise we wouldn't have this opportunity to see why I am the added rotation on top of me lowering down the player has again caused the Sprite to enter instant death territory well the robust solution is to switch back to nonrotated costumes when looking for level collisions find the game Loop under the game on script and from the motion category find the set rotation style block before calling the player movement script set rotation style to don't rotate yeah I left mine on left and right that will work too but don't rotate is probably better this will keep the Sprite upright for the Collision checks we just need to remember to restore the style afterwards set rotation style to all around so that once again the player will appear to be rotated as requested and this is interesting running the project you'll find we no longer have instant death but we have lost that in doing bobbing up and down effect now we are gliding smoothly across the floor once more oh well not to worry because at the end of the day we should only be rotating when the player is off the ground anyhow right when touching the ground we need to level them off to the nearest flat surface this is round their direction to the nearest 90 degrees so scroll over to the player movement script again the floor collisions are detected here set Direction 2. and we need the current direction to snap this to the nearest 90 degrees we first divide by 90. then drop it into a round block finally we multiply that back up by 90 again to find the nearest multiple of 90. awesome I am so excited to see this in action smash that green flag oh my gosh guys look at that what can I say it's just so fun I especially love how they tumble off platform edges and do a small quarter turn very authentic but hitting these spikes calls to mind another comment that gets raised again and again that the spikes in our Geometry Dash are just too unforgiving in the original game Spikes have a small hitbox at the center and that is the only part that's dangerous to touch that explains my difficulty in jumping over the triple spikes now we could emulate this effect by drawing a little colored box in the middle of each Spike and watching out for the collisions with that instead but I have an alternative instead of reducing the hitbox of each spike in our game we can get the same effect by reducing the hitbox of the player instead do you see let's try that shall we open the player costume Tab and oh gosh we should have given the player costume a proper name player then create a new second costume and using the rectangle tool with a solid fill and no outline draw out a square five grid squares wide and tall holding shift to keep it square it should be 20 by 20 pixels now snap the shape to the center of the canvas cool you can see this hitbox is quite a bit smaller than the player give the costume a name hitbox and even Spike so that we know what it's for okay so where in our code are we looking for a spike Collision in the main game Loop of the player Sprite here it is ah but we have a slight problem to use the hitbox costume with the touching color check here we need to switch costumes before doing the check but that's not possible when the touching block is part of a repeat until like this so we'll have to do the loop check another way pull it out and place it in a fresh new if block instead and if we are touching the spike color then it is game over so move the game over scripts inside the new if block one more thing we also want to stop this script at the end to say that this is now the end of the loop finally drop that all in after the player movement is complete but still within that Loop good Hmm this repeat until with an empty condition will actually just end up repeating forever so I guess we might as well make it official and switch it for a simpler forever Loop that's better now just before we give it a test we need to switch to the player's costume right up here before the game begins if all is well this should run just like it did before we've only rearranged the Collision check after all but now we can look at switching to the hitbox costume to make our collisions more lenient immediately before the color check switch costume 2. the hitbox costume and then right afterwards switch back to the player costume again you see the pattern we just need to be careful to also switch costumes back when we die so switch costume again to player now what do you think looks about right to me hit the green flag it's testing time oh my gosh I got it first time was that a fluke nope I got it again yeah it's so much easier now I really must check that yeah spikes do still work well that's cool I know a lot of you will be very pleased we got this feature in here today but there's still more to come yes last but not least we're going to add movement particles now these transparent blocks fan out behind the player giving the impression of speed and firm contact with the level but they also stop being emitted as soon as the player leaves the ground okay no problem let's begin by making a new Sprite naming it particles and then Zoom right into the costume canvas and we're going to draw a science square with no outline the rectangle is two grid cells wide that's eight by eight pixels snap it to the center and we are ready to code when green flag clicked we go to the front layer and then this is going to be a clone Factory so hide the original Sprite the Clone should be created by the player Sprite so click in there now finding that same old player movement script when we are touching the level and more specifically when we are moving down into a collision here this is where the particles should get emitted so drop in a create clone of block and switch to create a clone of the particle Sprite place it right after we move out of the level great so back into the particle Sprite when I start as a clone every new particle will Begin by running this script individually firstly the particles want to emit from the player so go to player we'll move them into place and then we must make sure the particle is visible show this clone next we need a bit of time to animate the particle so repeat for 10 times and to scroll this particle left we change X by the variable scroll speed of course as always finally once the 10 frames are up we delete this clone to remove it from the screen hey shall we see this in action hit the green flag and there we are a very simplified Scion trail that comes right out of the player's Center good news too the trail stops when we jump in the air hey let's make some improvements from the looks category we want the change effect by block we can fade out the particles over time with the change ghost effect and choose a value of around eight yep that's great how about we move the trail down to begin at the player's feet after the initial goto block change X by and move left with a change X by negative 10 and we move down two using a change y by negative 16. and here we go that's even better the Finishing Touch is to spice it up with a little Randomness to make the particles spray around more for this we need some variables make a new variable speed X and make sure to switch it to for this Sprite only now this actually applies to clones too so each clone will have its own speed X otherwise all the particles will move at the same speed and it won't look any good now make another variable speed y again for this Sprite only we'll initialize the speed variables up here set speed X and a set speed y now these values can be randomized using a pick random block with a value between 0.0 and 4.0 and the speed y can be between 0 and 3.0 hey if you don't know why I added that point zero on the end here then I'd encourage you to try out the block yourself and see what difference it makes comment under the video once you've figured it out okay lastly we apply these variables to the actual movement scripts we add speed x to the existing scroll speed here and bring in a brand new change y by for the speed y variable test that yes Blended this is much improved and is almost there all that's missing is a little variance in the sizes of the particles no problem set size 2 and again use a pick random block good values are between 50 that's half size and 100 that's full size smash that green flag and we are done the particle Trails the rotation the improved hitboxes solid collisions and a whole bunch of other bug fixes wow this is really coming together big time I really can't wait to see how your projects look so drop me a comment and let me know how you are getting along and better still Share the Fun by submitting them to my official scratch Studio linked under the video guys if you're enjoying these videos I'd encourage you to click the like button to show your appreciation and so is not to miss my next exciting video subscribe to the channel now checking that Bell icon to ensure you are the first to know when a new video drops but that is it for today so thank you for watching have a great week ahead and scratch on guys
