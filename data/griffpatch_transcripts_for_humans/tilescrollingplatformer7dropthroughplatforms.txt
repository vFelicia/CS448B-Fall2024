With timestamps:

00:02 - hello fellow scratchers
00:04 - collectible coins awesome jump through
00:06 - platforms and per level spawn points
00:09 - i'm griff batch and welcome back to our
00:11 - series creating a tile scrolling
00:12 - platformer in scratch
00:14 - wow are we at part 7 already but there's
00:17 - so many other exciting game features yet
00:19 - to cover
00:20 - we've got some really good content today
00:22 - though all centering around the concept
00:24 - of non-solid tiles let me show you why
00:26 - this is so
00:27 - important if we quickly lay down some
00:30 - coins here on my level
00:31 - then as you are probably more than aware
00:33 - of we can currently jump up and stand on
00:35 - top of them
00:37 - why is this well it's because every tile
00:40 - in our level is treated as fully
00:42 - solid well except of course for the
00:44 - background tile costume 2.
00:46 - now if i run over here to the right i
00:48 - have these blue tiles
00:50 - these are supposed to be semi-solid
00:52 - platforms that i can
00:53 - not only run and jump through but here's
00:57 - the fun part
00:58 - they are still solid to stand on but for
01:01 - starters
01:01 - let's get mario collecting coins so
01:04 - digging into our scripts hold on folks
01:08 - something's different oh my gosh look at
01:10 - these
01:11 - cute scratch blocks oh man what is going
01:14 - on
01:14 - and you can tweak their ears oh yes i
01:17 - happen to record this episode during the
01:19 - scratch april fool's day update of
01:21 - course
01:22 - i'm so sorry if you don't see these
01:23 - beauties on your project
01:25 - the event only lasts for a few days a
01:27 - year
01:28 - so we'll start by making a new list
01:31 - named
01:32 - tile shape for all sprites this will
01:35 - work a bit like the tile keymap list we
01:37 - made for the editor sprite
01:39 - we'll be adding one row for each costume
01:42 - in our tile list
01:44 - we'll click then into the tile sprite so
01:46 - that we can see our tile costumes
01:48 - and their numbers i'm going to invent a
01:51 - code to represent the shape and
01:52 - solidness of a tile
01:54 - these first two costumes are easy they
01:57 - are empty tiles
01:58 - so i'll simply leave the first two rows
02:00 - empty
02:01 - for costume three this is a fully solid
02:04 - tile so
02:04 - i will use the hash symbol to represent
02:07 - it
02:08 - i can see that costume 4 to 8 are
02:10 - equally solid
02:12 - so those two can be hashes and scrolling
02:14 - down the costumes
02:15 - i can see 9 and 10 are also solid
02:18 - now here we are getting a bit more
02:20 - interesting these first blue platform
02:22 - tiles are completely
02:24 - non-solid so i'll enter no value into
02:27 - rows 11
02:28 - through 16. but scrolling down further
02:31 - i can see costumes 17 18 and 19
02:34 - are the top costumes for the blue
02:36 - platforms
02:37 - these are only solid when being walked
02:40 - upon
02:40 - so i'll represent them with an equal
02:43 - symbol
02:44 - and then costumes 20 to 23 are again
02:47 - solid blocks so put in a hash for these
02:50 - the final four costumes are coins and
02:53 - these are again to be
02:54 - non-solid so i'll make sure they are
02:56 - empty rows
02:57 - in the tile shape list excellent that's
03:00 - all set up
03:02 - let's make it do something click into
03:04 - the mario sprite
03:05 - and the code tab we'll need a new
03:08 - variable
03:08 - name it tile shape for this sprite only
03:12 - find our define key tile at x y block
03:15 - this is where we get all the information
03:17 - about a tile at a given point on the
03:18 - level
03:19 - at the end of the script the variable
03:22 - tile will be set to the tile costume
03:24 - that was found at x and y
03:26 - we'll add to this the shape of the tile
03:28 - so
03:29 - set tile shape
03:32 - to item tile of tile shape
03:38 - next find define fix point collision at
03:42 - x y
03:43 - here is where we are using the get tile
03:45 - at xy block
03:46 - we'll split off the scripts below
03:50 - and add in an if tile shape equals
03:54 - the empty tile that is we've touched a
03:56 - completely non-solid tile
03:59 - then we stop this script
04:02 - this makes the following check for a
04:04 - tile being greater than 2 completely
04:06 - redundant now
04:07 - so let's get rid of that the rest of the
04:10 - scripts can be brought back
04:11 - in under the new if let's give this a
04:14 - quick test
04:16 - okay good the floor is solid i can walk
04:19 - on it
04:19 - and nice i am able to walk through the
04:21 - coins that's a great improvement
04:24 - hold on a sec some of you may find your
04:26 - mario sprite is sitting behind the coins
04:28 - at this point
04:29 - if so then come out of full screen mode
04:32 - and simply drag the mario sprite with
04:34 - your mouse
04:34 - and when you release it it will be
04:36 - restored to the front once more
04:39 - now come over to the blue platforms so
04:42 - great
04:42 - i can already walk in front of the
04:44 - platforms but as of yet
04:46 - we can't jump up through them the top
04:48 - rows are solid tiles though which is a
04:50 - start
04:51 - but we're getting ahead of ourselves now
04:54 - let's go back and revisit these coins
04:56 - and make them collectible scroll in the
04:58 - scripts to the define
05:00 - check around player block this script is
05:02 - used to check
05:03 - what's going on around a player at
05:06 - present it is just looking for us
05:07 - falling off the screen
05:09 - we'll add in a check for collectibles so
05:12 - let's
05:12 - get tile at x y and then check
05:15 - if tile equals
05:18 - now which costume was the coin ah 24
05:22 - so if we are touching a coin 24
05:26 - then we'll replace item tile index
05:30 - of tile grid with two that will replace
05:33 - the coin with an empty tile
05:35 - we can give this a test
05:38 - now this is promising the bottom coins
05:41 - are collected
05:42 - but our reach is not quite high enough
05:44 - to get those upper coins
05:46 - now check that pressing the green flag
05:48 - causes the coins to all
05:50 - reappear you see it was important to
05:52 - wait until we had added level saving and
05:54 - loading before collecting coins
05:56 - had we collected a coin before saving
05:58 - the level the coin would have been
06:00 - permanently deleted when collected and
06:03 - would not have returned
06:05 - okay let's extend mario's reach to
06:08 - include the coins
06:09 - above two make a new custom block named
06:12 - check around player at x colon with an
06:15 - input of x
06:16 - a label of y colon and another input of
06:19 - y
06:20 - we can now substitute this new block for
06:22 - the get tile x y
06:24 - and its following if check move the x
06:27 - and y variables into the new block
06:29 - and then plug in the x and y input
06:31 - variables from the define block
06:33 - into the get tile x y now we can change
06:36 - the y variable to be y
06:38 - minus eight to check just below mario's
06:40 - center
06:41 - and duplicate the whole check block and
06:44 - change the
06:44 - minus eight for a plus eight to also
06:48 - check above center two to be honest
06:51 - you may consider changing these values
06:52 - to be quite a bit bigger like
06:54 - plus and minus sixteen anyhow let's give
06:57 - it a quick test
06:58 - yep that solves that but like i say you
07:01 - may want to experiment with slightly
07:02 - larger values
07:03 - so that you can collect things higher
07:05 - and lower down
07:07 - how about we add a quick coin counter to
07:09 - keep track of how many coins we've
07:10 - collected
07:12 - make a new variable coins for all
07:14 - sprites
07:16 - then we'll change coins by one after
07:18 - removing the coin from the level
07:20 - if you want to add a sound then this
07:22 - would be the place to do it
07:25 - all we need to do now is set coins to
07:28 - zero at the beginning of the define game
07:30 - loop to ensure
07:31 - the count is reset when the level first
07:33 - begins
07:35 - giving this a test
07:38 - and that works great the coin count
07:40 - shows how many coins we've collected
07:42 - now for something much more exciting
07:45 - these jump through
07:46 - platforms here's mario jumping up
07:48 - through a platform
07:50 - he never collides with these while
07:51 - traveling upwards
07:53 - but when he falls back down his feet can
07:56 - not pass
07:56 - down through the top of a platform tile
07:59 - we can detect this type of collision by
08:01 - starting with the variable mod y
08:04 - that gives us the distance from the
08:05 - bottom of the tile to the collision
08:07 - point
08:08 - and then subtract fixed dy which tells
08:10 - us the distance mario
08:12 - last moved to get to where they are now
08:15 - if the combined value is above the tile
08:18 - bounds
08:19 - then we must have moved down across the
08:21 - line to get to where we are now
08:23 - and a collision should occur so
08:26 - first we are going to edit the fix
08:28 - collision at point block
08:33 - adding a new label of part colon meaning
08:36 - which part of mary's body we are
08:38 - checking
08:38 - and an input also named part
08:42 - for the two usages of the fixed
08:44 - collision at point blocks
08:45 - where we are checking for y minus height
08:48 - enter the word
08:49 - feet as the part now scroll down into
08:52 - the define fixed collisions at point
08:54 - block itself
08:56 - we need to move the set solid to 10
08:58 - below the set mod x
08:59 - and y blocks bring in an if before we
09:02 - set
09:03 - solid to 10 and check whether the tile
09:05 - shape equals an
09:07 - equal symbol that is whether we've
09:09 - collided with a jump through
09:11 - platform now we know in here
09:14 - that we're colliding with a platform at
09:16 - this point but we only want it to be
09:18 - solid
09:19 - when we are passing down through the top
09:21 - of it
09:22 - start by adding another if and add an
09:25 - ore block
09:26 - then not part equals feet
09:31 - this will be true for any collision that
09:34 - is not
09:34 - our feet allowing us to quickly rule out
09:37 - non-feet collisions now we also check
09:41 - for
09:42 - mod y subtract fixed d
09:45 - y is less than 32
09:48 - if this case is true then we did not
09:51 - pass through
09:52 - the top of the platform either so we
09:55 - stop this script
09:56 - which means that any collision that was
09:58 - our feet
09:59 - and originated from above the tile will
10:02 - count
10:03 - as a collision so i can't wait to run
10:06 - this project and give this a go
10:09 - legging it now over to the blue
10:10 - platforms and jumping up i pass straight
10:12 - through the platform and land
10:14 - solidly on the top wonderful and now i'm
10:17 - just testing that i can land on each
10:19 - platform
10:20 - and also jump within a platform without
10:22 - any strange collisions
10:23 - nope i'm really happy about this it is
10:26 - working great
10:28 - now many platformers give you the
10:30 - ability to drop back
10:31 - down through a platform by holding the
10:33 - down key
10:34 - in my observations this may not be a
10:36 - general mario dynamic
10:37 - but i will still show you how to do this
10:40 - in case you want it in your game
10:42 - all we need to do is add another if
10:45 - checking whether
10:46 - down of controls is greater than zero
10:50 - that is the down key is pressed then
10:53 - stop this script
10:55 - so no platform collisions are reported
10:57 - when the down key is pressed
10:59 - too simple right let's just test that
11:01 - little tweak
11:02 - i can still jump onto the platforms and
11:05 - pressing the down key woohoo
11:06 - straight down through the platform
11:08 - that's really fun
11:10 - okay our last task for this episode is
11:13 - to invent a way to define
11:15 - a spawn point for each level that is the
11:18 - position
11:18 - where our player will appear when the
11:20 - level begins
11:22 - to start with we need a way of placing
11:24 - the spawn point from within the level
11:26 - editor
11:27 - for this to be possible we need to add a
11:29 - mario costume to the tile costumes
11:31 - so that it becomes placeable i'll just
11:34 - drag the first mario costume
11:36 - into the tile sprite like this
11:39 - now moving into the tile sprite here is
11:42 - its costume number 28.
11:44 - we'll have to remember that number for
11:46 - later 28.
11:48 - i also need to reposition the mario
11:50 - sprite because it's currently centered
11:52 - but i want it to be positioned standing
11:54 - on the floor of a single
11:56 - tile square i press ctrl a to select the
11:59 - costume
12:00 - and then drag to reveal the center point
12:02 - of the costume editor
12:04 - i want mario's feet to be positioned
12:06 - eight pixels and one more for the
12:08 - outline
12:09 - below also by holding
12:12 - shift whilst dragging the costume snaps
12:14 - to the horizontal or vertical position
12:16 - keeping things aligned nice
12:19 - next we need to map an editor key to the
12:21 - mario spawn costume tile
12:24 - click into the editor sprite and we'll
12:26 - make the tile
12:27 - key map list visible mario is costume 28
12:31 - so at row item 28 of the list we'll
12:34 - enter a key mapping of four
12:36 - remember to click out to another row to
12:38 - make sure it saves that change
12:41 - and it's testing time i'll enter the
12:43 - level editor and press
12:44 - 4 until i see mario appear cool
12:47 - then i can place him where i want the
12:49 - player to spawn
12:52 - okay so i can see one potential issue i
12:55 - can place
12:56 - more than one mario this will cause us
12:58 - problems so
12:59 - let's stop that from being possible so
13:02 - still in the editor sprite
13:04 - find the when i receive move player
13:06 - script and scroll down to the bottom
13:08 - before we replace the tile on the screen
13:11 - add an if check
13:12 - whether brush equals 28 that's the mario
13:14 - costume remember
13:16 - make a new variable named found index
13:20 - for this sprite only then set it to item
13:23 - hash
13:24 - of brush in tile grid if another tile
13:28 - exists in our level
13:29 - of the same type as brush which in this
13:32 - case is the mario costume
13:34 - then this will find it lastly we replace
13:38 - item
13:38 - found index of tile grid with two
13:42 - the empty tile you should rightly ask
13:44 - here what happens if there isn't another
13:46 - mario on the level well
13:48 - in that case found index will be set to
13:51 - zero
13:52 - and happily replacing item zero of a
13:53 - list does nothing at all
13:55 - so we are safe to leave the script like
13:57 - it is without having to worry
14:00 - should we test again now when i place a
14:03 - new mario
14:05 - the previous one disappears that's neat
14:08 - and so all that's left is to actually
14:10 - get mario to spawn at this location
14:14 - switch back to the mario sprite here in
14:17 - the when green flag clicked script
14:20 - when the game starts we do the initial
14:22 - setup which loads the level
14:24 - and then we reset the player this is the
14:26 - first player spawn
14:28 - create a new broadcast and wait event
14:30 - named level
14:32 - hyphen start game loop hyphen
14:36 - respawn that's a long one we can then
14:40 - bring in an event receiver for this
14:41 - event and move the reset player and game
14:43 - loop blocks down into there
14:46 - okay we'll make use of this more in a
14:49 - moment
14:49 - in the meantime bring in a when i
14:51 - receive block
14:53 - and we'll make use of the existing level
14:55 - done loading event
14:57 - this is called just after the level is
14:59 - loaded and before the game loop starts
15:02 - so is a great place to process the spawn
15:05 - point
15:06 - we'll need a new variable named spawn
15:08 - index
15:09 - for this sprite only
15:12 - and set it to item hash of
15:15 - 28 in tile grid that is the index of the
15:19 - mario spawn point in the tile grid
15:22 - okay so now that we've found the spawn
15:24 - point if editor is less than one
15:27 - that is if not in editor mode then we
15:30 - replace
15:30 - item spawn index of tile grid with two
15:34 - to ensure the spawn point is no longer
15:36 - shown in the game
15:38 - we can give this a quick test notice
15:40 - right away that the spawn index has been
15:42 - set
15:43 - so the spawn point has been identified
15:46 - also note that mario's tile
15:48 - at spawn point is only visible when we
15:50 - are in the level editor
15:53 - so now to get the spawn point to work
15:56 - find the define
15:57 - reset player script and we'll check with
16:00 - an if else
16:01 - whether the spawn point is greater than
16:03 - zero
16:05 - a value greater than zero indicates that
16:07 - there is indeed a spawn point
16:09 - i'm going to duplicate the set x and y
16:12 - blocks into each side of the if
16:14 - and also below the f2 that's right three
16:17 - pairs
16:18 - so this top pair is the most interesting
16:21 - we want to change the spawn tile index
16:23 - into an x and y position on the level we
16:26 - haven't done this translation before
16:29 - having only gone from the xy position to
16:31 - an index
16:33 - luckily it's not too complex start
16:36 - by setting x to the floor of
16:39 - and then drop in a divide block on the
16:42 - left side of the divide
16:43 - we have spawn index subtract 1
16:47 - and on the right we divide by grid
16:50 - height
16:50 - this will leave x set to the grid column
16:53 - of the spawn index
16:55 - to find the grid row set y to spawn
16:58 - index
16:59 - subtract 1 all modded by grid height
17:03 - okay so because we are now working in
17:05 - grid tile positions
17:07 - we can change the else condition below
17:09 - to default to spawn at tile
17:11 - 3 by 3 rather than pixel 100 by 100.
17:15 - this only happens
17:16 - when there's no spawn point set and then
17:19 - finally under the if else
17:21 - we convert back from grid location to
17:23 - world location by multiplying each of x
17:26 - and y by 32
17:28 - and then adding an offset the x is
17:30 - offset by half a tile to the center of
17:32 - mario
17:34 - the y is offset by height so that he is
17:37 - standing
17:37 - firmly on the floor now while we are
17:41 - here in the reset player script
17:42 - let's just tidy up a few things we'll
17:45 - make sure to reset the camera back to
17:47 - the player's spawn point by setting
17:48 - camera x
17:49 - to x and camera y to y and also we'll
17:53 - importantly remember to set speed x and
17:55 - speed y
17:56 - to zero we should have done that from
17:58 - the beginning
17:59 - lastly pop in a point in direction 90
18:02 - so that we are facing the right way and
18:05 - we'll place it just before the move
18:06 - camera block
18:08 - cool we can test this ah spawn is
18:12 - working well i certainly appear to have
18:14 - spawned in the right place
18:16 - and if i move away and click the green
18:17 - flag then i spawn straight back
18:19 - up here yay so how about if i enter the
18:23 - level editor and place the spawn point
18:25 - over here instead
18:29 - press the green flag i am now spawning
18:32 - in the new location
18:34 - okay so is there anything left for us to
18:36 - do well
18:38 - just one thing when we use the level
18:40 - editor to switch levels
18:42 - we are not taken to the spawn point the
18:45 - same applies to creating new levels
18:48 - luckily this is quite easy to add as we
18:50 - already have everything we need
18:52 - click on the level editor sprite and
18:54 - find the when l key press script
18:57 - at the bottom here we just switch the
18:59 - broadcast to use the new
19:01 - level start game loop respawn event
19:04 - remember i said we'd make use of this
19:06 - again we do the same in the when r key
19:08 - pressed
19:09 - script below this too changing to
19:11 - broadcast and respawn event
19:15 - there's just one more script to update
19:18 - if you can find
19:19 - the when zero key pressed we need to add
19:21 - a broadcast and weight to level
19:23 - done loading just before starting the
19:25 - game loop
19:27 - this ensures we pick up the spawn point
19:29 - when exiting the level editor
19:31 - and that is it we are done running the
19:33 - project and i can test
19:35 - entering the level editor and pressing
19:37 - the l to switch levels
19:38 - if i say i want to switch level 1 yes
19:41 - that's the one i'm on right now
19:43 - then the level reloads and look i am
19:45 - scrolled over to the spawn location as
19:47 - intended
19:48 - cool now to level 2. no spawn point was
19:52 - set yet so
19:53 - i appear at tile three by three let me
19:56 - set a new spawn point on this level too
19:59 - now exiting the level editor keeps me at
20:02 - the same position
20:03 - but using the level switching key for
20:06 - level two
20:07 - spawns me up here at the spawn point yay
20:10 - and back to level one yep that is
20:13 - amazing
20:14 - i'm really pleased that we're finally
20:16 - getting these much requested features
20:18 - into our game
20:20 - i've been honored to see quite a few
20:21 - projects being built by scratchers
20:23 - following along with this tutorial
20:24 - series
20:25 - and they are looking so good i hope
20:28 - perhaps
20:29 - we might be able to see some of them
20:30 - together later on when they get shared
20:33 - that would be so cool now what should we
20:35 - look at next episode
20:37 - feel free as always to drop me your
20:39 - suggestions under the video
20:41 - but i've already been asked a lot for
20:43 - either off screen enemies
20:45 - power ups sloping tiles or moving
20:47 - platforms
20:48 - of course i can probably only fit one of
20:50 - these in at a time
20:52 - so yeah let me know what you think in
20:54 - the comments below
20:55 - if you've enjoyed this tutorial then
20:57 - please smash the like button
20:59 - and don't forget to subscribe to this
21:00 - channel to avoid missing my next
21:02 - exciting video
21:03 - until then thanks for watching and
21:05 - scratch on guys

Cleaned transcript:

hello fellow scratchers collectible coins awesome jump through platforms and per level spawn points i'm griff batch and welcome back to our series creating a tile scrolling platformer in scratch wow are we at part 7 already but there's so many other exciting game features yet to cover we've got some really good content today though all centering around the concept of nonsolid tiles let me show you why this is so important if we quickly lay down some coins here on my level then as you are probably more than aware of we can currently jump up and stand on top of them why is this well it's because every tile in our level is treated as fully solid well except of course for the background tile costume 2. now if i run over here to the right i have these blue tiles these are supposed to be semisolid platforms that i can not only run and jump through but here's the fun part they are still solid to stand on but for starters let's get mario collecting coins so digging into our scripts hold on folks something's different oh my gosh look at these cute scratch blocks oh man what is going on and you can tweak their ears oh yes i happen to record this episode during the scratch april fool's day update of course i'm so sorry if you don't see these beauties on your project the event only lasts for a few days a year so we'll start by making a new list named tile shape for all sprites this will work a bit like the tile keymap list we made for the editor sprite we'll be adding one row for each costume in our tile list we'll click then into the tile sprite so that we can see our tile costumes and their numbers i'm going to invent a code to represent the shape and solidness of a tile these first two costumes are easy they are empty tiles so i'll simply leave the first two rows empty for costume three this is a fully solid tile so i will use the hash symbol to represent it i can see that costume 4 to 8 are equally solid so those two can be hashes and scrolling down the costumes i can see 9 and 10 are also solid now here we are getting a bit more interesting these first blue platform tiles are completely nonsolid so i'll enter no value into rows 11 through 16. but scrolling down further i can see costumes 17 18 and 19 are the top costumes for the blue platforms these are only solid when being walked upon so i'll represent them with an equal symbol and then costumes 20 to 23 are again solid blocks so put in a hash for these the final four costumes are coins and these are again to be nonsolid so i'll make sure they are empty rows in the tile shape list excellent that's all set up let's make it do something click into the mario sprite and the code tab we'll need a new variable name it tile shape for this sprite only find our define key tile at x y block this is where we get all the information about a tile at a given point on the level at the end of the script the variable tile will be set to the tile costume that was found at x and y we'll add to this the shape of the tile so set tile shape to item tile of tile shape next find define fix point collision at x y here is where we are using the get tile at xy block we'll split off the scripts below and add in an if tile shape equals the empty tile that is we've touched a completely nonsolid tile then we stop this script this makes the following check for a tile being greater than 2 completely redundant now so let's get rid of that the rest of the scripts can be brought back in under the new if let's give this a quick test okay good the floor is solid i can walk on it and nice i am able to walk through the coins that's a great improvement hold on a sec some of you may find your mario sprite is sitting behind the coins at this point if so then come out of full screen mode and simply drag the mario sprite with your mouse and when you release it it will be restored to the front once more now come over to the blue platforms so great i can already walk in front of the platforms but as of yet we can't jump up through them the top rows are solid tiles though which is a start but we're getting ahead of ourselves now let's go back and revisit these coins and make them collectible scroll in the scripts to the define check around player block this script is used to check what's going on around a player at present it is just looking for us falling off the screen we'll add in a check for collectibles so let's get tile at x y and then check if tile equals now which costume was the coin ah 24 so if we are touching a coin 24 then we'll replace item tile index of tile grid with two that will replace the coin with an empty tile we can give this a test now this is promising the bottom coins are collected but our reach is not quite high enough to get those upper coins now check that pressing the green flag causes the coins to all reappear you see it was important to wait until we had added level saving and loading before collecting coins had we collected a coin before saving the level the coin would have been permanently deleted when collected and would not have returned okay let's extend mario's reach to include the coins above two make a new custom block named check around player at x colon with an input of x a label of y colon and another input of y we can now substitute this new block for the get tile x y and its following if check move the x and y variables into the new block and then plug in the x and y input variables from the define block into the get tile x y now we can change the y variable to be y minus eight to check just below mario's center and duplicate the whole check block and change the minus eight for a plus eight to also check above center two to be honest you may consider changing these values to be quite a bit bigger like plus and minus sixteen anyhow let's give it a quick test yep that solves that but like i say you may want to experiment with slightly larger values so that you can collect things higher and lower down how about we add a quick coin counter to keep track of how many coins we've collected make a new variable coins for all sprites then we'll change coins by one after removing the coin from the level if you want to add a sound then this would be the place to do it all we need to do now is set coins to zero at the beginning of the define game loop to ensure the count is reset when the level first begins giving this a test and that works great the coin count shows how many coins we've collected now for something much more exciting these jump through platforms here's mario jumping up through a platform he never collides with these while traveling upwards but when he falls back down his feet can not pass down through the top of a platform tile we can detect this type of collision by starting with the variable mod y that gives us the distance from the bottom of the tile to the collision point and then subtract fixed dy which tells us the distance mario last moved to get to where they are now if the combined value is above the tile bounds then we must have moved down across the line to get to where we are now and a collision should occur so first we are going to edit the fix collision at point block adding a new label of part colon meaning which part of mary's body we are checking and an input also named part for the two usages of the fixed collision at point blocks where we are checking for y minus height enter the word feet as the part now scroll down into the define fixed collisions at point block itself we need to move the set solid to 10 below the set mod x and y blocks bring in an if before we set solid to 10 and check whether the tile shape equals an equal symbol that is whether we've collided with a jump through platform now we know in here that we're colliding with a platform at this point but we only want it to be solid when we are passing down through the top of it start by adding another if and add an ore block then not part equals feet this will be true for any collision that is not our feet allowing us to quickly rule out nonfeet collisions now we also check for mod y subtract fixed d y is less than 32 if this case is true then we did not pass through the top of the platform either so we stop this script which means that any collision that was our feet and originated from above the tile will count as a collision so i can't wait to run this project and give this a go legging it now over to the blue platforms and jumping up i pass straight through the platform and land solidly on the top wonderful and now i'm just testing that i can land on each platform and also jump within a platform without any strange collisions nope i'm really happy about this it is working great now many platformers give you the ability to drop back down through a platform by holding the down key in my observations this may not be a general mario dynamic but i will still show you how to do this in case you want it in your game all we need to do is add another if checking whether down of controls is greater than zero that is the down key is pressed then stop this script so no platform collisions are reported when the down key is pressed too simple right let's just test that little tweak i can still jump onto the platforms and pressing the down key woohoo straight down through the platform that's really fun okay our last task for this episode is to invent a way to define a spawn point for each level that is the position where our player will appear when the level begins to start with we need a way of placing the spawn point from within the level editor for this to be possible we need to add a mario costume to the tile costumes so that it becomes placeable i'll just drag the first mario costume into the tile sprite like this now moving into the tile sprite here is its costume number 28. we'll have to remember that number for later 28. i also need to reposition the mario sprite because it's currently centered but i want it to be positioned standing on the floor of a single tile square i press ctrl a to select the costume and then drag to reveal the center point of the costume editor i want mario's feet to be positioned eight pixels and one more for the outline below also by holding shift whilst dragging the costume snaps to the horizontal or vertical position keeping things aligned nice next we need to map an editor key to the mario spawn costume tile click into the editor sprite and we'll make the tile key map list visible mario is costume 28 so at row item 28 of the list we'll enter a key mapping of four remember to click out to another row to make sure it saves that change and it's testing time i'll enter the level editor and press 4 until i see mario appear cool then i can place him where i want the player to spawn okay so i can see one potential issue i can place more than one mario this will cause us problems so let's stop that from being possible so still in the editor sprite find the when i receive move player script and scroll down to the bottom before we replace the tile on the screen add an if check whether brush equals 28 that's the mario costume remember make a new variable named found index for this sprite only then set it to item hash of brush in tile grid if another tile exists in our level of the same type as brush which in this case is the mario costume then this will find it lastly we replace item found index of tile grid with two the empty tile you should rightly ask here what happens if there isn't another mario on the level well in that case found index will be set to zero and happily replacing item zero of a list does nothing at all so we are safe to leave the script like it is without having to worry should we test again now when i place a new mario the previous one disappears that's neat and so all that's left is to actually get mario to spawn at this location switch back to the mario sprite here in the when green flag clicked script when the game starts we do the initial setup which loads the level and then we reset the player this is the first player spawn create a new broadcast and wait event named level hyphen start game loop hyphen respawn that's a long one we can then bring in an event receiver for this event and move the reset player and game loop blocks down into there okay we'll make use of this more in a moment in the meantime bring in a when i receive block and we'll make use of the existing level done loading event this is called just after the level is loaded and before the game loop starts so is a great place to process the spawn point we'll need a new variable named spawn index for this sprite only and set it to item hash of 28 in tile grid that is the index of the mario spawn point in the tile grid okay so now that we've found the spawn point if editor is less than one that is if not in editor mode then we replace item spawn index of tile grid with two to ensure the spawn point is no longer shown in the game we can give this a quick test notice right away that the spawn index has been set so the spawn point has been identified also note that mario's tile at spawn point is only visible when we are in the level editor so now to get the spawn point to work find the define reset player script and we'll check with an if else whether the spawn point is greater than zero a value greater than zero indicates that there is indeed a spawn point i'm going to duplicate the set x and y blocks into each side of the if and also below the f2 that's right three pairs so this top pair is the most interesting we want to change the spawn tile index into an x and y position on the level we haven't done this translation before having only gone from the xy position to an index luckily it's not too complex start by setting x to the floor of and then drop in a divide block on the left side of the divide we have spawn index subtract 1 and on the right we divide by grid height this will leave x set to the grid column of the spawn index to find the grid row set y to spawn index subtract 1 all modded by grid height okay so because we are now working in grid tile positions we can change the else condition below to default to spawn at tile 3 by 3 rather than pixel 100 by 100. this only happens when there's no spawn point set and then finally under the if else we convert back from grid location to world location by multiplying each of x and y by 32 and then adding an offset the x is offset by half a tile to the center of mario the y is offset by height so that he is standing firmly on the floor now while we are here in the reset player script let's just tidy up a few things we'll make sure to reset the camera back to the player's spawn point by setting camera x to x and camera y to y and also we'll importantly remember to set speed x and speed y to zero we should have done that from the beginning lastly pop in a point in direction 90 so that we are facing the right way and we'll place it just before the move camera block cool we can test this ah spawn is working well i certainly appear to have spawned in the right place and if i move away and click the green flag then i spawn straight back up here yay so how about if i enter the level editor and place the spawn point over here instead press the green flag i am now spawning in the new location okay so is there anything left for us to do well just one thing when we use the level editor to switch levels we are not taken to the spawn point the same applies to creating new levels luckily this is quite easy to add as we already have everything we need click on the level editor sprite and find the when l key press script at the bottom here we just switch the broadcast to use the new level start game loop respawn event remember i said we'd make use of this again we do the same in the when r key pressed script below this too changing to broadcast and respawn event there's just one more script to update if you can find the when zero key pressed we need to add a broadcast and weight to level done loading just before starting the game loop this ensures we pick up the spawn point when exiting the level editor and that is it we are done running the project and i can test entering the level editor and pressing the l to switch levels if i say i want to switch level 1 yes that's the one i'm on right now then the level reloads and look i am scrolled over to the spawn location as intended cool now to level 2. no spawn point was set yet so i appear at tile three by three let me set a new spawn point on this level too now exiting the level editor keeps me at the same position but using the level switching key for level two spawns me up here at the spawn point yay and back to level one yep that is amazing i'm really pleased that we're finally getting these much requested features into our game i've been honored to see quite a few projects being built by scratchers following along with this tutorial series and they are looking so good i hope perhaps we might be able to see some of them together later on when they get shared that would be so cool now what should we look at next episode feel free as always to drop me your suggestions under the video but i've already been asked a lot for either off screen enemies power ups sloping tiles or moving platforms of course i can probably only fit one of these in at a time so yeah let me know what you think in the comments below if you've enjoyed this tutorial then please smash the like button and don't forget to subscribe to this channel to avoid missing my next exciting video until then thanks for watching and scratch on guys
