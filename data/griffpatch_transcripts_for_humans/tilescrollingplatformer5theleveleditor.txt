With timestamps:

00:01 - hello fellow scratchers
00:03 - i'm griff batch and welcome back to part
00:05 - five of our series
00:06 - creating a tiled scrolling platformer in
00:08 - scratch
00:09 - we've been working really hard building
00:11 - up our game engine and now i'm dead
00:13 - excited to have reached a point with you
00:15 - where we can finally begin to build up
00:17 - an in-game level editor
00:19 - you will have noticed me showing off a
00:21 - little creative demo of what's in store
00:23 - today
00:24 - but oh man enough of me talking let's
00:26 - begin coding
00:28 - okay my preference is that we will
00:30 - repurpose the generate script for
00:31 - scripting the level editor
00:33 - so click on it and give it the new name
00:36 - editor
00:37 - now the original level size was far too
00:39 - small to contain our upcoming levels of
00:41 - epicness
00:42 - so we'll set grid width to 100 and grid
00:45 - height
00:45 - to 40. you should also remove the
00:48 - spattering of beautiful golden blocks
00:50 - by removing the if else and keeping just
00:53 - the add 2 to tile grid
00:55 - lastly switch the floor tiles from
00:57 - costume 10
00:58 - to costume 7. this is the official floor
01:01 - costume from the tile set
01:03 - now let's run the project and check out
01:05 - the new basic level we have generated
01:08 - yeah i like the floor and wow it is
01:11 - surprising how big the level feels now
01:13 - it's 100 tiles long
01:15 - still going so this is a good start
01:20 - next we'll define a new variable named
01:23 - editor
01:23 - for all sprites and we'll set it to 1
01:28 - in the when i receive generate level
01:30 - script
01:31 - a value larger than 0 will mean that our
01:33 - game is in level editor mode
01:34 - surround the generate level usage with
01:37 - an if
01:38 - length of the tile grid equals zero
01:42 - this will now only run if we've deleted
01:44 - our level
01:46 - i'm just moving all these scripts down
01:47 - here out of the way
01:49 - right level editing we need an event
01:52 - from our game loop to hang the editor
01:54 - scripts off
01:55 - so bring in a when event receiver and
01:57 - we'll borrow the move player event
01:59 - as it is the first one that gets called
02:02 - straight away
02:03 - checking whether the editor variable is
02:05 - less than one
02:06 - if it is then we stop the script right
02:08 - here as the editor is not enabled
02:11 - okay now this bit is fun
02:14 - click into our player sprite and find
02:17 - the define
02:18 - get tile at x y custom block this is a
02:21 - super useful block
02:22 - and it would be a very nice if we could
02:25 - just use it again in our level editor
02:27 - and luckily we can grab the whole custom
02:30 - block
02:31 - and drop it on to the editor sprite now
02:34 - hold on there remember for a moment that
02:36 - this block is using variables like tile
02:38 - and
02:39 - tile grid x and y these were created
02:42 - for this sprite only the mario sprite
02:46 - so how will they work in a different
02:48 - sprite like the editor sprite
02:51 - well let's take a look click back into
02:54 - our editor sprite and we'll find a copy
02:56 - of the get tile x y custom block waiting
02:58 - for us
02:59 - be it smooched right over my other
03:01 - scripts i'll just move it into a better
03:04 - position
03:05 - now look at this all the variables that
03:08 - were used by this custom block have been
03:10 - magically recreated for us in this
03:11 - sprite
03:12 - if we make the tile variable visible we
03:14 - can also confirm that it has been
03:16 - recreated for this
03:17 - sprite only now for the editor sprite
03:20 - not
03:20 - mario that's nice thank you scratch
03:24 - we'll quickly make use of this block
03:26 - getting the tile at
03:28 - mouse x plus camera x by mouse y
03:31 - plus camera y we must remember to add
03:34 - the camera position to our mouse's
03:36 - position so that it caters for the
03:37 - scrolling screen
03:39 - okay and test what we should see is that
03:42 - the tile variable is now updating to
03:44 - show the tile costume
03:46 - under the mouse cursor value of 7 for
03:48 - the bottom tiles
03:49 - 2 for the background and 10 for the
03:51 - wooden tiles
03:52 - awesome so we want to allow the player
03:56 - to click the mouse
03:57 - and to set a tile to the new costume
04:00 - we'll start by adding an
04:02 - if not mouse down then stop this script
04:05 - okay so the next scripts will only run
04:08 - if the mouse is pressed down
04:10 - this next bit is so easy you won't
04:12 - believe it use a replace
04:14 - item tile index of tile grid
04:17 - with 10. i'm going to test this right
04:21 - away
04:21 - i can just click and draw out a little
04:23 - wooden platform like this
04:25 - run and jump and then draw some more no
04:27 - way how is this possible right
04:30 - i just love that so much don't you but
04:33 - i want more what if i want to remove
04:36 - a tile again okay so in all my level
04:40 - editors
04:40 - i have this feature that if you draw
04:42 - over an existing tile
04:44 - then it clears it so let's do that
04:47 - make a new variable named brush for this
04:50 - sprite only
04:52 - and we'll set it to zero in the when i
04:55 - receive
04:56 - generate level script we'll also set it
04:59 - to zero when the mouse is not pressed
05:01 - a brush of zero therefore means that we
05:03 - are not
05:04 - painting so we'll check for this
05:06 - condition before doing the actual
05:08 - painting here
05:09 - that is for brush equals zero within
05:12 - there
05:13 - we now add an if else block and we'll
05:16 - check where the tile
05:17 - equals ten now remember we just got the
05:20 - tile under the mouse
05:21 - using the get tile at block above so if
05:24 - the tile we are about to paint over is
05:26 - already a 10
05:28 - then we will instead paint with a brush
05:30 - of two
05:32 - that is the blank tile otherwise we do
05:35 - indeed want to paint with costume 10.
05:38 - lastly replace the 10 here with the
05:40 - variable brush
05:42 - hooray my favorite time yup it's testing
05:44 - time
05:45 - yes this is very good i can click and
05:48 - drag to paint
05:49 - but if i click again on an already
05:51 - painted tile then i can clear those
05:53 - blocks away
05:54 - loving it i think we can now safely hide
05:57 - these variable reporters
05:59 - now i know what you're thinking you're
06:01 - missing that gorgeous golden block right
06:04 - create a new variable named chosen brush
06:07 - for this sprite only
06:08 - and set it to 10 in the when i receive
06:11 - generate level script
06:13 - this variable indicates the brush that
06:15 - we are intending to paint with
06:17 - come back to the paint script we should
06:19 - then replace both usages of the value
06:22 - 10 with this new chosen brush variable
06:25 - choosing the brush can be super easy for
06:27 - now drag in a when
06:29 - key press tap block and trigger it off
06:32 - the 1 key and simply set
06:34 - chosen brush to 9. the lovely golden
06:38 - block
06:39 - nice and we can duplicate that up
06:42 - and have the 2 key setting chosen brush
06:45 - to 10.
06:47 - let's run the project and see if the one
06:48 - and two keys do indeed let us paint with
06:51 - a different costume
06:53 - and yes they do the one key has me
06:55 - fashioning handsome golden platforms all
06:58 - over
06:58 - and the two key lets me go back to using
07:01 - wooden blocks
07:03 - also the delete feature is working just
07:05 - the same
07:06 - very very good so how could we make this
07:09 - even better well at present
07:12 - we can't see what the brush is that
07:14 - we're about to paint with
07:16 - so how about we add that click into the
07:19 - tile sprite
07:20 - and look at the define setup script now
07:23 - can you remember way back in episode 1
07:26 - why we added this hide block at the
07:28 - bottom of the setup script
07:30 - well it was because we always had one
07:32 - tile left over after creating all the
07:34 - clones
07:35 - so we simply hid it okay well then
07:39 - how about we actually make use of it now
07:41 - to show the current editor brush well
07:44 - that would be efficient wouldn't it
07:46 - first we need to have a way of
07:47 - identifying this sprite from all the
07:49 - others
07:50 - so after we hide it set tile index to
07:52 - the empty value
07:53 - so that every other clone will have an
07:55 - index but this one will not
07:58 - next under the define position tile
08:00 - script
08:01 - let's separate out the first two ifs
08:03 - that deal with looping around
08:04 - off-screen tiles and bring in a new if
08:07 - else block
08:08 - the looping tile if scripts can move
08:11 - into the else
08:12 - and the lower scripts just need tacking
08:14 - on the end
08:15 - the condition for this if should be a
08:18 - check for tile index
08:19 - equals the empty value just capturing
08:22 - this single leftover sprite
08:25 - let's define a new custom block for the
08:26 - editor brush scripts
08:28 - naming it editor brush run without
08:31 - screen refresh
08:33 - and we'll make use of it right here
08:35 - specifically for that one hidden tile
08:36 - with a blank tile index
08:41 - okay so if editor is less than one
08:48 - or if the mouse is pressed and we don't
08:50 - want to show the brush
08:52 - and we stop this script now we want to
08:55 - position this little tile on the screen
08:58 - at the position referred to by the
08:59 - editor sprite
09:01 - so set tile x to are you ready for this
09:04 - 32 multiplied by and now we'll use the
09:08 - off block from the sensing category
09:10 - setting it to the editor sprite
09:13 - and now we can choose the tile grid x
09:15 - variable
09:16 - that will have been set by the last call
09:18 - to the get tile at
09:20 - in the editor now all we need to do is
09:23 - add 16 pixels to this
09:24 - to account for the centering of the
09:26 - costume we'll do the same for the y
09:28 - position
09:29 - with the sceptile y and the tile grid y
09:32 - and the tile costume itself well that's
09:35 - set on the editor sprite too
09:36 - so set tile to chosen brush of editor
09:40 - to make it beautiful we can set ghost
09:43 - effect to 50
09:44 - so we can see through it and lastly
09:46 - don't forget to show this hidden sprite
09:50 - ah now two more changes before we can
09:52 - try it out we need to remember to hide
09:54 - the tile when the editor is disabled
09:56 - and also scroll over to when i receive
09:59 - position tile script
10:00 - and we also need to move the set tile
10:03 - block into the if else block
10:05 - above so that our brush tile doesn't get
10:08 - messed up
10:10 - oh yay as promised it's testing time run
10:13 - your projects
10:14 - and confirm we can now see a ghosted
10:16 - brush at our mouse cursor
10:18 - pressing the one and two keys also
10:20 - switches the brush visually now which is
10:22 - really nice
10:24 - so i've talked about us hiding the brush
10:26 - when the editor is turned off
10:28 - well how do we turn it off click into
10:31 - the editor sprite and we'll add
10:33 - a when zero key pressed to toggle the
10:35 - level editor
10:36 - for now bring in an if else
10:40 - and check for editor being greater than
10:44 - zero
10:47 - if it is then we set it back to zero
10:51 - otherwise we set it to one easy
10:55 - we won't need to start the level in the
10:56 - editor mode anymore
10:58 - so it's a good time to go back over and
11:00 - set editor to zero in the generate
11:02 - script
11:03 - run the project now you can see that
11:06 - when the project begins
11:07 - i have no ghosted brush and i can
11:09 - confirm clicking on the screen does not
11:11 - paint any blocks
11:12 - so i press the zero key and woo yeah i
11:16 - can lay down some sweet tiles
11:17 - pressing zero again and i'm back into
11:19 - play mode i love it when things all come
11:22 - together so nicely
11:25 - now have you guys heard of god mode
11:28 - not only does it give us the ability to
11:30 - edit the level but also
11:31 - lets us quickly fly around and clip
11:33 - through solid walls
11:35 - it would be really useful to add this to
11:37 - our editor however before we can add
11:39 - more keyboard controlled scripts it
11:42 - would be wise to first revisit our
11:44 - primary control scheme
11:46 - at present we are limited to just using
11:49 - the arrow keys
11:50 - but many scratchers far prefer the wazed
11:52 - or
11:53 - looking forward even mobile controls to
11:56 - cater for this
11:57 - i'm going to suggest we create a new
11:59 - sprite
12:00 - naming it controls
12:05 - we'll add a when i receive block and
12:07 - make a new event named
12:08 - check controls we can use variables to
12:11 - represent the different control inputs
12:13 - we are concerned about
12:15 - so we'll add four new ones all of them
12:17 - for this sprite
12:18 - only we need a left right
12:24 - down up
12:27 - variable set left
12:32 - to key left arrow pressed
12:36 - or key a pressed
12:40 - we do the same for right down and up
12:43 - filling out the letters d s and w
12:52 - next we'll create two new variables
12:53 - named x-axis
12:55 - and y-axis again for this sprite only
12:58 - and use that cool trick of setting
13:01 - x-axis to
13:02 - right subtract left and the y axis
13:06 - to up subtract down
13:09 - great that's all we need in here so
13:12 - click back into our mario sprite
13:14 - so that we can hook it all up look for
13:16 - the define
13:17 - game loop custom block at the top of the
13:20 - forever loop
13:21 - add a broadcast to check controls that
13:24 - will ensure all the control variables
13:26 - are set
13:26 - before the move player and position tile
13:28 - scripts run each frame
13:31 - next find the define handle keys left
13:33 - right script
13:34 - and change the set walk to
13:37 - we need the of block again from here
13:39 - from the sensing category
13:40 - and choose our control sprite and now
13:43 - we'll select the axis
13:44 - x variable the other place that the
13:48 - controls are used
13:49 - is in the handled keys jump custom block
13:52 - here we switch the up
13:53 - key pressed for an up of controls is
13:56 - greater than zero
14:01 - we can run this now and confirm that our
14:03 - controls all still work
14:05 - all available reporters for left right
14:07 - up and down should be triggering
14:08 - and then we can also test for our wazzed
14:10 - keys too
14:11 - as they are also hooked up to the same
14:13 - variables in this control sprite
14:16 - excellent so with new control mechanisms
14:19 - defined
14:20 - let's add the god mode movement scripts
14:23 - find some free space in the mario sprite
14:26 - and make with me a new custom block
14:28 - named
14:28 - handle god mode run without screen
14:31 - refresh
14:32 - now this works just like our original
14:35 - movement scripts before we added gravity
14:38 - first we handle the change in speed from
14:40 - key presses
14:41 - by changing speed x by 6 multiplied by
14:44 - axis x
14:49 - and the same for speed y and axis y
14:53 - next we account for friction to slow us
14:55 - down by setting
14:57 - speed x to 0.7 multiplied by
15:00 - speed x do the same for speed y
15:04 - lastly we actually move the player by
15:06 - changing x by speed x
15:08 - and y by speed y
15:11 - super we just need to make use of the
15:13 - god mode script
15:15 - so scroll up to the when i receive move
15:17 - player script
15:19 - add an if else condition and we'll look
15:21 - for when the level editor is enabled
15:23 - that is
15:23 - editor is greater than zero if it is
15:26 - we trigger the handle god mode block
15:29 - now we always want to move the camera
15:31 - and paint the sprite
15:32 - so these go underneath here leaving the
15:35 - handle keys and move sprite blocks to be
15:37 - run
15:37 - when not in editor mode like this
15:41 - there that's nice and clean and makes
15:43 - sense so
15:44 - let's give it a test to begin with
15:47 - i'm in play mode and can move around as
15:49 - normal
15:50 - let me press the zero key okay now
15:53 - things have changed and as i press the
15:55 - arrow keys or wast
15:57 - i am able to quickly fly around and i'm
15:59 - no longer stopped by the blocks
16:01 - instead i just clip through them that's
16:04 - really good
16:05 - and i can toggle back to normal movement
16:07 - so easily
16:08 - just by pressing the zero key again it's
16:11 - so much easier now to create a level
16:12 - structures without worrying about my
16:14 - player's movement
16:15 - okay i have an announcement to make here
16:18 - if you see my control sprite disappear
16:20 - after this part of the tutorial then
16:22 - please don't panic
16:23 - it's just that i had to go back and
16:25 - re-record that part of the tutorial to
16:27 - improve the design
16:28 - we most certainly want to keep this new
16:30 - sprite so don't go deleting it
16:32 - thank you so next up
16:35 - if i click on the editor sprite see
16:38 - where we are selecting tile costumes
16:40 - under the number keys one and two
16:42 - well only having two sprites to draw
16:44 - this is never gonna cut it
16:46 - we need heaps more than that right
16:49 - problem is
16:50 - we don't have enough keys on the
16:51 - keyboard to map to all the tile costumes
16:54 - we are going to need
16:55 - so we need a better solution if you've
16:58 - used any of the level editors in my
17:00 - scratch games
17:01 - then you probably have seen how i like
17:03 - to categorize the different tile types
17:06 - and assign each category to a key
17:08 - instead
17:09 - then you simply press the key over and
17:11 - over to cycle through the different
17:13 - brushes
17:14 - so let's do that make a new custom block
17:17 - naming it next brush with a text input
17:20 - of
17:21 - key and run without screen refresh
17:24 - we'll replace both the when one and two
17:26 - key pressed hat block scripts with calls
17:28 - to the next brush block
17:30 - and set the input variable to the same
17:32 - number that has been pressed
17:34 - one for key one and two for key two then
17:37 - we'll add
17:37 - two more when key pressed hats for the
17:40 - three and four keys
17:42 - i think four categories will do for
17:43 - starters but we can always add more
17:46 - i think you get the pattern this system
17:48 - to work we need some way of mapping the
17:50 - different level tile costumes to these
17:52 - key numbers
17:53 - the easiest solution is to make a new
17:55 - list named
17:57 - tile key map for this sprite only we
18:00 - will leave the new list visible for now
18:02 - and click into the tile sprite so that
18:04 - we can see the costumes in its costumes
18:06 - tab
18:08 - we are going to add a row in this tile
18:10 - keymap list
18:11 - for each costume in tile sprite and the
18:14 - number we enter will be the key number
18:16 - that we want to assign to it to select
18:18 - it
18:19 - now costume 1 and 2 can't be chosen so
18:21 - we leave two blank rows in the list for
18:23 - them
18:24 - okay costume 3 is a ground tile so we'll
18:27 - assign it a key press of one
18:29 - and looking down the costumes the
18:31 - following costumes are also ground tiles
18:34 - until we reach costume nine so we enter
18:37 - key one all the way down to costume
18:39 - eight
18:41 - costume 9 though is a single block tile
18:43 - so let's assign that to key
18:45 - 2 and the same for costume 10. then
18:48 - looking at costume 11
18:49 - we have yet another tile type this will
18:52 - be a special jump through platform when
18:53 - we add this ability
18:55 - so all the blue tiles can be assigned to
18:57 - key 3
18:58 - all the way down to costume 19. quick
19:01 - tip
19:02 - just ensure to click out of the last row
19:04 - you enter
19:05 - in the list otherwise it can sometimes
19:07 - fail to save the last change you made
19:10 - cool the mappings are all there now in
19:13 - the list so we can click back into the
19:15 - editor sprite
19:17 - so when we press a certain key we want
19:19 - to find the next brush in this list
19:21 - after the currently chosen one that
19:23 - matches the key pressed
19:25 - we only want to look through this list
19:27 - once so add a repeat for length of tile
19:30 - keymap
19:31 - add an if else and we'll check whether
19:34 - the currently selected brush
19:35 - is less than the length of the mapping
19:37 - list
19:38 - if it is then we will add one to it to
19:41 - go on to the next brush in the list
19:43 - otherwise we set it back to the first
19:45 - costume to cycle round again
19:48 - now with an if we check the number
19:50 - entered in the keymap list for the
19:52 - current brush
19:53 - and compare it to the number of the key
19:55 - being pressed
19:56 - if it matches then we found our next
19:58 - brush so simply stop the scripts here
20:01 - otherwise the repeat loop continues
20:03 - around again and the next costume is
20:05 - checked for a match
20:06 - that's it let's test it i click 0 to
20:10 - enter the level editor
20:11 - and now i'm tapping the 1 key over and
20:13 - over this is cycling happily through the
20:15 - floor tiles just as hoped
20:17 - if i tap the 2 key then we should see
20:19 - those two single block tiles
20:22 - and then the 3 key cycles through the
20:23 - blue platform tiles
20:25 - this is awesome loving how it works and
20:28 - so now i can actually begin to choose
20:30 - and create
20:31 - far more interesting levels using the
20:32 - other available blocks
20:34 - you know one more useful editor feature
20:37 - we should add is the eyedropper tool
20:39 - that is where pressing e for eyedropper
20:42 - lets us use the tile
20:43 - under the cursor as the current brush so
20:46 - when e key pressed simply set the chosen
20:49 - brush
20:50 - to tile remember that tile will have
20:52 - been set in this sprite by the previous
20:54 - call to the get tile at xy
20:56 - so that makes it super easy give the
20:59 - project a run and enter the editor
21:01 - now hovering over a beautiful gold block
21:03 - and pressing e changes my current brush
21:05 - into the gold tile
21:06 - nice and pressing e over the corner of
21:09 - this floor tile
21:10 - yep this editor is coming along just
21:12 - great
21:14 - now thank you guys for all the comments
21:15 - you leave me under the videos they are
21:17 - super helpful for directing where this
21:18 - tutorial goes
21:20 - i've been asked a number of times how we
21:22 - can have holes in the floor that the
21:23 - player can actually fall down
21:25 - as you can see that doesn't happen right
21:27 - now and a comment from zukana asked
21:29 - whether
21:30 - we could remove the walls and ceiling
21:32 - too so let's try and address
21:34 - all that now so why don't we fall off
21:37 - the bottom of the level
21:38 - keeping the game running click on the
21:40 - mario sprite and find the define
21:42 - move camera script watch what happens
21:45 - when we temporarily take out the set
21:47 - camera y to 180 block
21:49 - do you remember how our level is
21:51 - actually wrapping around from bottom to
21:53 - top and top to bottom
21:54 - so since the level has a roof we are
21:57 - actually standing on that
21:59 - so i'll put back the block and move to
22:01 - the define get tile at xy script
22:04 - we can wrap the set tile in an if else
22:06 - block
22:07 - checking for a grid y of less than zero
22:10 - then if the tile is below the bottom of
22:12 - the level
22:12 - simply set tile to the empty value
22:15 - otherwise we set it as normal
22:18 - running the project now lets us actually
22:20 - fall into the hole
22:22 - well almost we just need to script what
22:25 - should happen
22:26 - next to mario move into some space and
22:28 - make a new custom block named
22:30 - check around player run without screen
22:33 - refresh
22:36 - and check if y is less than zero
22:41 - if it is then we have fallen off the
22:43 - level and let's just call the reset
22:45 - player script for the time being
22:47 - now we'll use this block in the when i
22:50 - receive
22:50 - move player script dropping in the check
22:53 - around player block
22:55 - just after the move sprite y we can test
22:58 - this quickly
23:00 - yay that's a little better now mario
23:02 - rushes back to his spawn point when he
23:04 - dies
23:05 - that will do just fine for the time
23:07 - being so how do we handle these walls
23:10 - that surround us
23:11 - the truth is we don't actually want the
23:13 - player to be able to walk off the side
23:15 - of the level at all
23:16 - so keeping a wall here to block him is
23:18 - quite useful
23:20 - so how about we do a little trick and
23:22 - just stop the camera from scrolling that
23:24 - far so that the wall
23:25 - is not shown on screen locate the define
23:29 - move camera script create with me a new
23:32 - custom block named
23:34 - limit camera edge x colon
23:37 - adding an input named edge x
23:40 - then a label of edge y colon
23:44 - and another input named edge y
23:47 - run without screen refresh we can move
23:50 - the entirety of the camera fencing
23:52 - scripts
23:53 - that is all four if conditions into the
23:55 - new define block
23:57 - and then we'll call it from where we
23:59 - took them
24:00 - with the values 240 and 180
24:04 - this lets us replace all the 240 180
24:08 - values from the limit camera edge script
24:10 - below with the edgex and edge y input
24:13 - variables
24:14 - like so it's probably a good idea to
24:17 - just test that the camera fencing is
24:19 - still working as before
24:21 - i'll whiz around the entire level and
24:23 - check that it's nicely fenced in on all
24:25 - sides
24:26 - yep still beautiful so this is cool
24:29 - because now we can tweak the fencing
24:31 - based on whether we are editing the
24:33 - level
24:33 - or not use an if else and we'll check
24:36 - for editor being greater than zero
24:40 - duplicate the limit camera edge block
24:43 - into both sides
24:44 - the top one stays the same for when we
24:46 - are editing the level
24:48 - but the bottom one will change the edgex
24:50 - to be 272.
24:53 - that's one block of 32 more than before
24:57 - run the project and right away we'll see
24:59 - that we are missing the left edge of
25:00 - tiles
25:01 - but try walking or jumping that way and
25:03 - we're still prevented from walking off
25:05 - screen
25:06 - that's good now click the zero key to
25:08 - enter the level editor
25:10 - and bing we could see the wall as before
25:13 - now we are in a pretty good place to
25:15 - start playing with designing some levels
25:18 - i really am this fast at laying down a
25:20 - level
25:21 - but you know what before we bring this
25:24 - episode to a close
25:25 - i'd really like just a few more tile
25:27 - types to decorate our level
25:29 - if you began this tutorial more recently
25:32 - then you probably already have lots more
25:33 - tiles in your tile sprite than you've
25:35 - been seeing in this video
25:37 - if so then just bear with me as i show
25:39 - all these amazing scratches at the
25:41 - cutting edge of production
25:43 - how to get the new tiles too so if you
25:45 - only have the 19 tile costumes
25:48 - look under my video again for the link
25:50 - to the resource project
25:51 - or find it on mywithpatch2 account and
25:54 - look inside
25:55 - click on the tile sprite and check out
25:57 - all these new costumes
25:59 - we must have these open up your backpack
26:02 - by clicking on the backpack bar and drag
26:03 - the entire tile sprite in there
26:06 - it'll be faster than dragging the
26:07 - costumes one at a time
26:09 - now go back to your work in progress
26:11 - tile scrolling project
26:12 - and open the backpack the tile sprite
26:14 - should be there
26:15 - so drag it out and drop it into the
26:17 - sprites panel
26:19 - now in the costumes tab scroll down
26:21 - until you can see costume
26:22 - 20. we will now drag each new costume
26:25 - one at a time down into the tiles sprite
26:28 - you may find counting them off as you go
26:29 - helpful 20 21
26:31 - 22 to help you keep track of where
26:34 - you're up to
26:35 - and then feel free to delete this tiles
26:37 - 2 sprite as we're done with it
26:40 - click back into the tile sprite and we
26:42 - can see costumes 20 to 27
26:44 - are all accounted for before we can use
26:47 - these costumes
26:48 - we need to map them to an editor key so
26:51 - click into the editor
26:52 - sprite and make the tiles key map of the
26:54 - list visible
26:55 - then we can revisit the tile sprite
26:57 - costumes for reference
26:59 - now costume 20 is a single tile block so
27:02 - we'll assign it to key
27:03 - two but the following three costumes are
27:05 - actually just animation frames of the
27:08 - previous tile
27:09 - so let's not have those selectable add
27:11 - blank rows for these in the key map
27:14 - the coin at costume 24 is the next
27:16 - interesting tile
27:18 - we'll give that a key binding of four as
27:19 - it's something new a collectible
27:22 - and once more enter blank values for the
27:25 - following three costumes
27:29 - so i'll just nip into the editor sprite
27:31 - to hide the tile keymap list
27:33 - so we can give this a test i enter the
27:35 - level editor
27:36 - and press the 2 key oh yeah that's nice
27:40 - a new block always looks fresh when
27:42 - you've been seeing the same thing for a
27:44 - while
27:44 - now how about pressing 4 yeah cool
27:48 - a nice coin i'll press 0 to test the
27:51 - level
27:56 - you know what that's some clever
27:57 - balancing act sorry to say we are not
27:59 - going to cover collecting coins in this
28:01 - episode
28:02 - however to wrap things up let's at least
28:05 - make these animating tiles
28:07 - animate right click back into the tiles
28:10 - sprite and scroll to the bottom
28:11 - of the when i receive position tile
28:14 - script
28:15 - we'll change the if tile is less than 2
28:17 - to an if else condition
28:21 - and then in the else check for a tile of
28:24 - 20
28:24 - or 24
28:30 - these are the two animating tiles to
28:33 - make them cycle
28:34 - around their four costumes we change
28:36 - tile
28:37 - using the mod 4 operator and in the left
28:41 - we use
28:42 - timer multiplied by 8 which sets the
28:44 - speed of the animation
28:46 - and wrap that in a floor operator to
28:48 - avoid any rounding issues
28:51 - and here comes our final test for this
28:53 - episode i hope it looks good
28:55 - and yes it does the magic of a little
28:57 - animation to bring the level to life
29:00 - and now let your imagination run wild i
29:03 - wonder what level creations you will
29:05 - begin to shape from this episode of the
29:07 - tile scrolling tutorial
29:09 - of course there's still so much more we
29:11 - need to cover
29:12 - the next episode will focus on the level
29:14 - saving and loading scripts
29:16 - we need this before we can add in the
29:18 - collectable scripts because
29:20 - otherwise the very act of collecting
29:21 - coins would be destructively changing
29:23 - our level
29:24 - and then from there perhaps we will move
29:26 - on to adding enemies and player lives
29:28 - oh and so much more i'm really looking
29:31 - forward to reading how you were getting
29:33 - on
29:33 - in the comments let me know if you
29:35 - managed to get your level editors
29:36 - working
29:37 - as always if you're enjoying this
29:39 - tutorial please smash the like button
29:41 - and don't forget to subscribe to the
29:42 - channel to avoid missing my next
29:44 - exciting video
29:45 - but until then thanks for watching and
29:47 - scratch on guys

Cleaned transcript:

hello fellow scratchers i'm griff batch and welcome back to part five of our series creating a tiled scrolling platformer in scratch we've been working really hard building up our game engine and now i'm dead excited to have reached a point with you where we can finally begin to build up an ingame level editor you will have noticed me showing off a little creative demo of what's in store today but oh man enough of me talking let's begin coding okay my preference is that we will repurpose the generate script for scripting the level editor so click on it and give it the new name editor now the original level size was far too small to contain our upcoming levels of epicness so we'll set grid width to 100 and grid height to 40. you should also remove the spattering of beautiful golden blocks by removing the if else and keeping just the add 2 to tile grid lastly switch the floor tiles from costume 10 to costume 7. this is the official floor costume from the tile set now let's run the project and check out the new basic level we have generated yeah i like the floor and wow it is surprising how big the level feels now it's 100 tiles long still going so this is a good start next we'll define a new variable named editor for all sprites and we'll set it to 1 in the when i receive generate level script a value larger than 0 will mean that our game is in level editor mode surround the generate level usage with an if length of the tile grid equals zero this will now only run if we've deleted our level i'm just moving all these scripts down here out of the way right level editing we need an event from our game loop to hang the editor scripts off so bring in a when event receiver and we'll borrow the move player event as it is the first one that gets called straight away checking whether the editor variable is less than one if it is then we stop the script right here as the editor is not enabled okay now this bit is fun click into our player sprite and find the define get tile at x y custom block this is a super useful block and it would be a very nice if we could just use it again in our level editor and luckily we can grab the whole custom block and drop it on to the editor sprite now hold on there remember for a moment that this block is using variables like tile and tile grid x and y these were created for this sprite only the mario sprite so how will they work in a different sprite like the editor sprite well let's take a look click back into our editor sprite and we'll find a copy of the get tile x y custom block waiting for us be it smooched right over my other scripts i'll just move it into a better position now look at this all the variables that were used by this custom block have been magically recreated for us in this sprite if we make the tile variable visible we can also confirm that it has been recreated for this sprite only now for the editor sprite not mario that's nice thank you scratch we'll quickly make use of this block getting the tile at mouse x plus camera x by mouse y plus camera y we must remember to add the camera position to our mouse's position so that it caters for the scrolling screen okay and test what we should see is that the tile variable is now updating to show the tile costume under the mouse cursor value of 7 for the bottom tiles 2 for the background and 10 for the wooden tiles awesome so we want to allow the player to click the mouse and to set a tile to the new costume we'll start by adding an if not mouse down then stop this script okay so the next scripts will only run if the mouse is pressed down this next bit is so easy you won't believe it use a replace item tile index of tile grid with 10. i'm going to test this right away i can just click and draw out a little wooden platform like this run and jump and then draw some more no way how is this possible right i just love that so much don't you but i want more what if i want to remove a tile again okay so in all my level editors i have this feature that if you draw over an existing tile then it clears it so let's do that make a new variable named brush for this sprite only and we'll set it to zero in the when i receive generate level script we'll also set it to zero when the mouse is not pressed a brush of zero therefore means that we are not painting so we'll check for this condition before doing the actual painting here that is for brush equals zero within there we now add an if else block and we'll check where the tile equals ten now remember we just got the tile under the mouse using the get tile at block above so if the tile we are about to paint over is already a 10 then we will instead paint with a brush of two that is the blank tile otherwise we do indeed want to paint with costume 10. lastly replace the 10 here with the variable brush hooray my favorite time yup it's testing time yes this is very good i can click and drag to paint but if i click again on an already painted tile then i can clear those blocks away loving it i think we can now safely hide these variable reporters now i know what you're thinking you're missing that gorgeous golden block right create a new variable named chosen brush for this sprite only and set it to 10 in the when i receive generate level script this variable indicates the brush that we are intending to paint with come back to the paint script we should then replace both usages of the value 10 with this new chosen brush variable choosing the brush can be super easy for now drag in a when key press tap block and trigger it off the 1 key and simply set chosen brush to 9. the lovely golden block nice and we can duplicate that up and have the 2 key setting chosen brush to 10. let's run the project and see if the one and two keys do indeed let us paint with a different costume and yes they do the one key has me fashioning handsome golden platforms all over and the two key lets me go back to using wooden blocks also the delete feature is working just the same very very good so how could we make this even better well at present we can't see what the brush is that we're about to paint with so how about we add that click into the tile sprite and look at the define setup script now can you remember way back in episode 1 why we added this hide block at the bottom of the setup script well it was because we always had one tile left over after creating all the clones so we simply hid it okay well then how about we actually make use of it now to show the current editor brush well that would be efficient wouldn't it first we need to have a way of identifying this sprite from all the others so after we hide it set tile index to the empty value so that every other clone will have an index but this one will not next under the define position tile script let's separate out the first two ifs that deal with looping around offscreen tiles and bring in a new if else block the looping tile if scripts can move into the else and the lower scripts just need tacking on the end the condition for this if should be a check for tile index equals the empty value just capturing this single leftover sprite let's define a new custom block for the editor brush scripts naming it editor brush run without screen refresh and we'll make use of it right here specifically for that one hidden tile with a blank tile index okay so if editor is less than one or if the mouse is pressed and we don't want to show the brush and we stop this script now we want to position this little tile on the screen at the position referred to by the editor sprite so set tile x to are you ready for this 32 multiplied by and now we'll use the off block from the sensing category setting it to the editor sprite and now we can choose the tile grid x variable that will have been set by the last call to the get tile at in the editor now all we need to do is add 16 pixels to this to account for the centering of the costume we'll do the same for the y position with the sceptile y and the tile grid y and the tile costume itself well that's set on the editor sprite too so set tile to chosen brush of editor to make it beautiful we can set ghost effect to 50 so we can see through it and lastly don't forget to show this hidden sprite ah now two more changes before we can try it out we need to remember to hide the tile when the editor is disabled and also scroll over to when i receive position tile script and we also need to move the set tile block into the if else block above so that our brush tile doesn't get messed up oh yay as promised it's testing time run your projects and confirm we can now see a ghosted brush at our mouse cursor pressing the one and two keys also switches the brush visually now which is really nice so i've talked about us hiding the brush when the editor is turned off well how do we turn it off click into the editor sprite and we'll add a when zero key pressed to toggle the level editor for now bring in an if else and check for editor being greater than zero if it is then we set it back to zero otherwise we set it to one easy we won't need to start the level in the editor mode anymore so it's a good time to go back over and set editor to zero in the generate script run the project now you can see that when the project begins i have no ghosted brush and i can confirm clicking on the screen does not paint any blocks so i press the zero key and woo yeah i can lay down some sweet tiles pressing zero again and i'm back into play mode i love it when things all come together so nicely now have you guys heard of god mode not only does it give us the ability to edit the level but also lets us quickly fly around and clip through solid walls it would be really useful to add this to our editor however before we can add more keyboard controlled scripts it would be wise to first revisit our primary control scheme at present we are limited to just using the arrow keys but many scratchers far prefer the wazed or looking forward even mobile controls to cater for this i'm going to suggest we create a new sprite naming it controls we'll add a when i receive block and make a new event named check controls we can use variables to represent the different control inputs we are concerned about so we'll add four new ones all of them for this sprite only we need a left right down up variable set left to key left arrow pressed or key a pressed we do the same for right down and up filling out the letters d s and w next we'll create two new variables named xaxis and yaxis again for this sprite only and use that cool trick of setting xaxis to right subtract left and the y axis to up subtract down great that's all we need in here so click back into our mario sprite so that we can hook it all up look for the define game loop custom block at the top of the forever loop add a broadcast to check controls that will ensure all the control variables are set before the move player and position tile scripts run each frame next find the define handle keys left right script and change the set walk to we need the of block again from here from the sensing category and choose our control sprite and now we'll select the axis x variable the other place that the controls are used is in the handled keys jump custom block here we switch the up key pressed for an up of controls is greater than zero we can run this now and confirm that our controls all still work all available reporters for left right up and down should be triggering and then we can also test for our wazzed keys too as they are also hooked up to the same variables in this control sprite excellent so with new control mechanisms defined let's add the god mode movement scripts find some free space in the mario sprite and make with me a new custom block named handle god mode run without screen refresh now this works just like our original movement scripts before we added gravity first we handle the change in speed from key presses by changing speed x by 6 multiplied by axis x and the same for speed y and axis y next we account for friction to slow us down by setting speed x to 0.7 multiplied by speed x do the same for speed y lastly we actually move the player by changing x by speed x and y by speed y super we just need to make use of the god mode script so scroll up to the when i receive move player script add an if else condition and we'll look for when the level editor is enabled that is editor is greater than zero if it is we trigger the handle god mode block now we always want to move the camera and paint the sprite so these go underneath here leaving the handle keys and move sprite blocks to be run when not in editor mode like this there that's nice and clean and makes sense so let's give it a test to begin with i'm in play mode and can move around as normal let me press the zero key okay now things have changed and as i press the arrow keys or wast i am able to quickly fly around and i'm no longer stopped by the blocks instead i just clip through them that's really good and i can toggle back to normal movement so easily just by pressing the zero key again it's so much easier now to create a level structures without worrying about my player's movement okay i have an announcement to make here if you see my control sprite disappear after this part of the tutorial then please don't panic it's just that i had to go back and rerecord that part of the tutorial to improve the design we most certainly want to keep this new sprite so don't go deleting it thank you so next up if i click on the editor sprite see where we are selecting tile costumes under the number keys one and two well only having two sprites to draw this is never gonna cut it we need heaps more than that right problem is we don't have enough keys on the keyboard to map to all the tile costumes we are going to need so we need a better solution if you've used any of the level editors in my scratch games then you probably have seen how i like to categorize the different tile types and assign each category to a key instead then you simply press the key over and over to cycle through the different brushes so let's do that make a new custom block naming it next brush with a text input of key and run without screen refresh we'll replace both the when one and two key pressed hat block scripts with calls to the next brush block and set the input variable to the same number that has been pressed one for key one and two for key two then we'll add two more when key pressed hats for the three and four keys i think four categories will do for starters but we can always add more i think you get the pattern this system to work we need some way of mapping the different level tile costumes to these key numbers the easiest solution is to make a new list named tile key map for this sprite only we will leave the new list visible for now and click into the tile sprite so that we can see the costumes in its costumes tab we are going to add a row in this tile keymap list for each costume in tile sprite and the number we enter will be the key number that we want to assign to it to select it now costume 1 and 2 can't be chosen so we leave two blank rows in the list for them okay costume 3 is a ground tile so we'll assign it a key press of one and looking down the costumes the following costumes are also ground tiles until we reach costume nine so we enter key one all the way down to costume eight costume 9 though is a single block tile so let's assign that to key 2 and the same for costume 10. then looking at costume 11 we have yet another tile type this will be a special jump through platform when we add this ability so all the blue tiles can be assigned to key 3 all the way down to costume 19. quick tip just ensure to click out of the last row you enter in the list otherwise it can sometimes fail to save the last change you made cool the mappings are all there now in the list so we can click back into the editor sprite so when we press a certain key we want to find the next brush in this list after the currently chosen one that matches the key pressed we only want to look through this list once so add a repeat for length of tile keymap add an if else and we'll check whether the currently selected brush is less than the length of the mapping list if it is then we will add one to it to go on to the next brush in the list otherwise we set it back to the first costume to cycle round again now with an if we check the number entered in the keymap list for the current brush and compare it to the number of the key being pressed if it matches then we found our next brush so simply stop the scripts here otherwise the repeat loop continues around again and the next costume is checked for a match that's it let's test it i click 0 to enter the level editor and now i'm tapping the 1 key over and over this is cycling happily through the floor tiles just as hoped if i tap the 2 key then we should see those two single block tiles and then the 3 key cycles through the blue platform tiles this is awesome loving how it works and so now i can actually begin to choose and create far more interesting levels using the other available blocks you know one more useful editor feature we should add is the eyedropper tool that is where pressing e for eyedropper lets us use the tile under the cursor as the current brush so when e key pressed simply set the chosen brush to tile remember that tile will have been set in this sprite by the previous call to the get tile at xy so that makes it super easy give the project a run and enter the editor now hovering over a beautiful gold block and pressing e changes my current brush into the gold tile nice and pressing e over the corner of this floor tile yep this editor is coming along just great now thank you guys for all the comments you leave me under the videos they are super helpful for directing where this tutorial goes i've been asked a number of times how we can have holes in the floor that the player can actually fall down as you can see that doesn't happen right now and a comment from zukana asked whether we could remove the walls and ceiling too so let's try and address all that now so why don't we fall off the bottom of the level keeping the game running click on the mario sprite and find the define move camera script watch what happens when we temporarily take out the set camera y to 180 block do you remember how our level is actually wrapping around from bottom to top and top to bottom so since the level has a roof we are actually standing on that so i'll put back the block and move to the define get tile at xy script we can wrap the set tile in an if else block checking for a grid y of less than zero then if the tile is below the bottom of the level simply set tile to the empty value otherwise we set it as normal running the project now lets us actually fall into the hole well almost we just need to script what should happen next to mario move into some space and make a new custom block named check around player run without screen refresh and check if y is less than zero if it is then we have fallen off the level and let's just call the reset player script for the time being now we'll use this block in the when i receive move player script dropping in the check around player block just after the move sprite y we can test this quickly yay that's a little better now mario rushes back to his spawn point when he dies that will do just fine for the time being so how do we handle these walls that surround us the truth is we don't actually want the player to be able to walk off the side of the level at all so keeping a wall here to block him is quite useful so how about we do a little trick and just stop the camera from scrolling that far so that the wall is not shown on screen locate the define move camera script create with me a new custom block named limit camera edge x colon adding an input named edge x then a label of edge y colon and another input named edge y run without screen refresh we can move the entirety of the camera fencing scripts that is all four if conditions into the new define block and then we'll call it from where we took them with the values 240 and 180 this lets us replace all the 240 180 values from the limit camera edge script below with the edgex and edge y input variables like so it's probably a good idea to just test that the camera fencing is still working as before i'll whiz around the entire level and check that it's nicely fenced in on all sides yep still beautiful so this is cool because now we can tweak the fencing based on whether we are editing the level or not use an if else and we'll check for editor being greater than zero duplicate the limit camera edge block into both sides the top one stays the same for when we are editing the level but the bottom one will change the edgex to be 272. that's one block of 32 more than before run the project and right away we'll see that we are missing the left edge of tiles but try walking or jumping that way and we're still prevented from walking off screen that's good now click the zero key to enter the level editor and bing we could see the wall as before now we are in a pretty good place to start playing with designing some levels i really am this fast at laying down a level but you know what before we bring this episode to a close i'd really like just a few more tile types to decorate our level if you began this tutorial more recently then you probably already have lots more tiles in your tile sprite than you've been seeing in this video if so then just bear with me as i show all these amazing scratches at the cutting edge of production how to get the new tiles too so if you only have the 19 tile costumes look under my video again for the link to the resource project or find it on mywithpatch2 account and look inside click on the tile sprite and check out all these new costumes we must have these open up your backpack by clicking on the backpack bar and drag the entire tile sprite in there it'll be faster than dragging the costumes one at a time now go back to your work in progress tile scrolling project and open the backpack the tile sprite should be there so drag it out and drop it into the sprites panel now in the costumes tab scroll down until you can see costume 20. we will now drag each new costume one at a time down into the tiles sprite you may find counting them off as you go helpful 20 21 22 to help you keep track of where you're up to and then feel free to delete this tiles 2 sprite as we're done with it click back into the tile sprite and we can see costumes 20 to 27 are all accounted for before we can use these costumes we need to map them to an editor key so click into the editor sprite and make the tiles key map of the list visible then we can revisit the tile sprite costumes for reference now costume 20 is a single tile block so we'll assign it to key two but the following three costumes are actually just animation frames of the previous tile so let's not have those selectable add blank rows for these in the key map the coin at costume 24 is the next interesting tile we'll give that a key binding of four as it's something new a collectible and once more enter blank values for the following three costumes so i'll just nip into the editor sprite to hide the tile keymap list so we can give this a test i enter the level editor and press the 2 key oh yeah that's nice a new block always looks fresh when you've been seeing the same thing for a while now how about pressing 4 yeah cool a nice coin i'll press 0 to test the level you know what that's some clever balancing act sorry to say we are not going to cover collecting coins in this episode however to wrap things up let's at least make these animating tiles animate right click back into the tiles sprite and scroll to the bottom of the when i receive position tile script we'll change the if tile is less than 2 to an if else condition and then in the else check for a tile of 20 or 24 these are the two animating tiles to make them cycle around their four costumes we change tile using the mod 4 operator and in the left we use timer multiplied by 8 which sets the speed of the animation and wrap that in a floor operator to avoid any rounding issues and here comes our final test for this episode i hope it looks good and yes it does the magic of a little animation to bring the level to life and now let your imagination run wild i wonder what level creations you will begin to shape from this episode of the tile scrolling tutorial of course there's still so much more we need to cover the next episode will focus on the level saving and loading scripts we need this before we can add in the collectable scripts because otherwise the very act of collecting coins would be destructively changing our level and then from there perhaps we will move on to adding enemies and player lives oh and so much more i'm really looking forward to reading how you were getting on in the comments let me know if you managed to get your level editors working as always if you're enjoying this tutorial please smash the like button and don't forget to subscribe to the channel to avoid missing my next exciting video but until then thanks for watching and scratch on guys
