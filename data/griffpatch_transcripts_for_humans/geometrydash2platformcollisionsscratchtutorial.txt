With timestamps:

00:00 - [Music]
00:02 - hello fellow scratchers I'm griffpatch
00:06 - welcome back to part two of our how to
00:08 - recreate John 2 Dash in scratch series
00:10 - whereas episode 1 focused on creating
00:13 - that scrolling level this episode is
00:15 - where it gets really fun as we introduce
00:18 - multi-level platforming me working the
00:21 - players jumping mechanic support for
00:23 - Gravity find out how we handle
00:25 - collisions with the floor ceiling and
00:27 - walls and how to avoid those unexpected
00:30 - scratch glitches oops no problem we will
00:34 - fix that too yes I've got oodles to
00:37 - teach you today so I hope you are ready
00:39 - for some serious fun guys let's get
00:43 - scratching
00:45 - start by loading up our completed
00:47 - projects from episode 1. but before we
00:50 - add anything new it's worth going to the
00:52 - file menu and saving this project as a
00:55 - new copy now I'll rename the new copy as
00:58 - episode 2. we do this before every new
01:01 - episode so that if we make a mistake we
01:04 - always have a backup of our work from
01:05 - episode one to go back to excellent and
01:08 - here we go let's begin by adding some
01:11 - platforms to our level these want to
01:14 - look something like this
01:15 - a grid of black squares now how I create
01:18 - these is to click into the level Sprite
01:21 - making the Sprite visible on the stage
01:24 - and then in the costume tab make a brand
01:27 - new costume this means we can see the
01:29 - exact size of the costume that we draw
01:32 - set the fill color to Black
01:34 - and the outline color to Pure White now
01:37 - that's important as white will be our
01:39 - solid Collision color
01:41 - now keep the width set to 4.
01:43 - then we use the rectangle tool to drag
01:46 - out a square while holding the shift key
01:48 - that is nine by nine grid squares so
01:51 - size
01:52 - then adjust the result until it reads 38
01:55 - by 38 pixels
01:58 - perfect let's place it into our level
02:00 - click copy
02:03 - next duplicate the first level costume
02:07 - and we click paste and there it is we
02:10 - can bring it down to sit on the ground
02:12 - by dragging or nudging it with the arrow
02:15 - keys on our keyboard
02:16 - to change this into a grid of black
02:19 - tiles make sure we click on the
02:21 - selection tool
02:22 - and then hold down alt and shift before
02:25 - dragging the platform to make a
02:27 - perfectly aligned copy
02:29 - refining the position afterwards using
02:30 - the up and down arrow keys now what's
02:33 - really cool is that if we select both of
02:35 - these shapes together by dragging around
02:37 - them then the alt shift trick still
02:40 - works and duplicates both at once aha
02:43 - this trick can be repeated on a bigger
02:46 - and bigger scale allowing us to build up
02:48 - very large platforms really quickly cool
02:51 - right
02:51 - okay so that should do for now let's
02:54 - delete that last costume and let's see
02:57 - how this platform looks in the game
02:59 - smash that green flag
03:01 - here it comes ah well of course what did
03:04 - you think would happen our jumping code
03:06 - from episode 1 has no concept of a
03:08 - platform or what to do with it should we
03:11 - Collide so the game continues as if it
03:13 - didn't exist not a problem stop the
03:16 - project then make sure to make the level
03:19 - Sprite visible on the stage because
03:21 - we're now going to talk about jumping
03:23 - and gravity our previous jumping scripts
03:27 - can be found in the player Sprite over
03:29 - here and this really was the most basic
03:32 - jumping script ever we can press space
03:34 - right now and see the player move up and
03:36 - then down on the project stage but
03:39 - everyone knows that when we jump the
03:40 - motion the player is expected to follow
03:42 - is an arc the colliding with a platform
03:46 - should then break the fall well okay
03:49 - then delete that old jumping code there
03:52 - to allow us to simulate gravity we need
03:55 - to keep track of how fast our player is
03:57 - falling so make a new variable name it
04:01 - speed Y and declare it for this Sprite
04:05 - only that is the player Sprite
04:08 - okay let's have some fun and simulate a
04:11 - jump bring in a set variable block
04:13 - setting the new speed y variable to 28.
04:17 - now that should represent quite a fast
04:20 - upwards movement
04:21 - but over time they should be pulled down
04:24 - by gravity so separately we change speed
04:28 - y by and let's try a value of negative
04:32 - four as the gravity in Geometry Dash is
04:35 - really quite strong
04:37 - finally we actually move the Sprite
04:39 - using a change y by block and drop in
04:42 - that updated speed y variable great now
04:46 - we can test this by clicking the second
04:48 - change y script to run it oh wait okay
04:51 - so that didn't jump and that was my
04:54 - fault as we should have clicked the set
04:56 - speed y script first to actually set
04:58 - speed y to 28 to initiate that jump
05:01 - whoops and then clicking the update
05:04 - script launches the player upwards so
05:07 - keep clicking the update script and we
05:09 - can watch there go up slow and return to
05:12 - the ground in a smooth Arc very exciting
05:15 - all we need to do now is prevent them
05:17 - from passing through the level when they
05:19 - touch it
05:20 - first off we need to detect if a
05:22 - collision has occurred
05:25 - if we are touching a color
05:28 - and the color that we chose for solid
05:30 - collisions is pure white
05:33 - then great we have collided we don't
05:36 - want to stay this way so we should lift
05:39 - the player Sprite up until they are no
05:41 - longer colliding with the level we can
05:43 - do this with a repeat until block
05:46 - repeating until we are not
05:48 - that is we are no longer touching the
05:51 - color white and all we do is move the
05:54 - player upwards a little at a time using
05:56 - a change y by one pixel this will repeat
05:59 - over and over until we are no longer
06:02 - touching white it's the perfect time
06:03 - then for a quick test so hit that change
06:06 - y script again click and there you go do
06:09 - you see the player drifting slowly
06:11 - upwards until they are no longer in
06:12 - contact with the floor yeah of course
06:15 - after a collision we really want to
06:17 - reset the player's speed y to zero since
06:20 - the down with velocity has been stopped
06:22 - by a collision
06:25 - well not a couple of times and you'll
06:27 - see the speed wise now more under
06:28 - control great
06:30 - well we can try a small jump set speed y
06:33 - to 28 and here we go up and down
06:39 - oh dear I clicked the script again while
06:41 - it was still running and doing that
06:43 - actually stops the script rather than
06:45 - starting a new one let me try that again
06:47 - up and down and good the Collision is
06:52 - fixed but this is still a little ugly I
06:56 - mean who wants to see the player dipping
06:58 - below the ground like this actually in
07:00 - the game not me it would be much nicer
07:03 - if all this fixing up of collisions
07:04 - could be done without the player of the
07:06 - game seeing it happen at all
07:09 - the problem is that whenever we loop
07:11 - around like this scratch assumes we are
07:14 - creating an animation and it refreshes
07:16 - the screen here each and every time we
07:19 - loop around
07:21 - what we want to do is tell scratch that
07:22 - this bit of code is to be run without
07:25 - refreshing the screen and it just so
07:29 - happens under the my blocks category if
07:32 - we make a new block let's call it move
07:35 - out of level
07:37 - we have the option to run without screen
07:40 - refresh well how about that so click OK
07:44 - and then we can attach this new defined
07:47 - block to the top of the code we don't
07:49 - want to animate then having defined
07:52 - these scripts as move out of level we
07:55 - can simply drop the new block inside
07:57 - that if here to have it run whenever we
08:00 - detect a collision
08:02 - let's see how that looks just click once
08:04 - to set speed wide 28 for a new Jump and
08:07 - then start tapping the change speed y
08:08 - script up and down and boom we no longer
08:12 - see any overlap or the dreaded rising up
08:15 - of the player it all happens in a single
08:17 - screen refresh so in effect it's instant
08:20 - now that is cool
08:23 - we can also try it elsewhere on the
08:24 - screen and yeah it just works as long as
08:28 - we are touching the color white
08:30 - okay then let's see if we can get this
08:33 - gravity into our game
08:35 - if we look at this when flag clicked
08:38 - script we currently have a wait until
08:40 - touching color block now this is waiting
08:43 - for the player to hit Spike what we want
08:45 - now is to run some scripts while we are
08:48 - waiting so we'll split the script here
08:51 - and first we'll make sure to reset the
08:54 - player's speed y not 28 but to zero this
08:57 - ensures we don't begin the game jumping
08:59 - or falling and then we'll make our game
09:03 - Loop repeat until
09:05 - and again we repeat until we are
09:07 - touching the spikes color that isn't
09:10 - white it's the off-white yellowish color
09:12 - if you recall
09:14 - that means we no longer need that wait
09:16 - until block and then we can reattach
09:18 - those end of game scripts below the
09:20 - repeat cool right these gravity scripts
09:23 - now we could bring them directly into
09:26 - this Loop here but for clarity I'm going
09:28 - to make another custom block to keep our
09:31 - code nice and readable we'll name it
09:33 - player movement and we might as well
09:37 - tick the run without screen refresh as
09:39 - this all wants to run in a single
09:41 - animation frame
09:42 - so these scripts are the player movement
09:45 - scripts and we can make use of that
09:47 - block in our game Loop here perfect it's
09:51 - testing time then so hit the green flag
09:53 - and off we go
09:54 - [Music]
09:56 - okay wow let's play that again
10:00 - so this is good the player is sitting on
10:03 - the floor and he's not falling through
10:04 - it
10:05 - but when we smash into a wall boom we
10:08 - are teleported up onto the top now
10:11 - that's actually expected as we coded all
10:13 - our collisions to be fixed by raising
10:15 - the player up until it was no longer
10:18 - colliding what's really sweet though is
10:20 - how the player neatly falls off the
10:21 - platform at the end that looks awesome
10:23 - and yeah spikes still work too great now
10:28 - did I mention we can't jump anymore yeah
10:31 - we did delete the old jump script after
10:33 - all right first question when should the
10:37 - player be able to jump obviously not
10:39 - while they're in the air yep it's when
10:42 - they touch the ground or we could say
10:44 - just after we detect a floor collision
10:47 - and that code is here so after moving
10:50 - back out of the level drop in an if
10:52 - check and we'll look for when the space
10:55 - key is pressed I've had a lot of people
10:57 - asking how to make this project mobile
10:59 - friendly so let's also bring in a mouse
11:02 - down check that's true when the mouse
11:05 - button is clicked or this screen is
11:07 - tapped on a mobile device
11:09 - we'll need an or block as we don't mind
11:11 - which of these is pressed either will
11:13 - make us jump and then set speed y
11:18 - to 28 just like we did before when
11:22 - testing gravity
11:23 - Let's test it squish that green flag
11:28 - and woohoo we are able to bounce off the
11:31 - floor and off platforms to ha can't say
11:34 - I've got any better at avoiding those
11:36 - bikes actually with the new Gravity and
11:39 - jumping mechanic it's way more of a
11:40 - challenge jumping the triple spikes I'm
11:43 - not even sure it's possible ah challenge
11:45 - accepted oh my gosh much too early yeah
11:49 - too late early again come on oh man I've
11:54 - got to nail this one
11:55 - yes yes I knew it I am the master or
11:59 - perhaps I'm just too easily pleased okay
12:02 - though enough of that we've sorted floor
12:05 - collisions but what about ceiling
12:07 - collisions now if I click into the level
12:09 - costumes and just temporarily move our
12:11 - platforms higher up watch what happens
12:13 - if we jump into them from Below
12:16 - yeah rather than bumping our head you
12:19 - fly up through the platform instead and
12:21 - we can't be having that now obviously
12:24 - it's the same problem again that every
12:27 - Collision is fixed by moving the player
12:29 - upwards until they no longer are
12:31 - colliding the solution then would be to
12:33 - switch things around when we are
12:35 - traveling up into a collision and that
12:37 - is when the player speed y Sy is greater
12:41 - than zero and then instead we move out
12:44 - of the Collision downwards sounds simple
12:46 - enough okay so this existing code is
12:50 - handling a downwards Collision we can
12:53 - surround them with an if else block like
12:56 - so
12:57 - and the condition is that speed Y is
13:00 - less than if speed Y is less than zero a
13:03 - downward Collision therefore we can move
13:06 - out of the level upwards as before but
13:09 - if we are not moving down then we must
13:11 - have been moving up into the Collision
13:13 - now rather than rewriting lots of
13:16 - similar code we'll reuse the same move
13:19 - out of level block again but we won't
13:21 - include the jumping code on the end
13:23 - since we don't want to allow jumping
13:25 - after colliding with the ceiling not in
13:27 - this game mode anyhow we just need a way
13:29 - to tell the move out of level block
13:31 - which way we want it to move out of the
13:34 - level upwards or downwards right click
13:37 - on the Define block or long press it if
13:39 - you're using mobile
13:41 - and then choose edit then we can add a
13:44 - numeric input and give it the name d y
13:47 - That's the amount to move in the y
13:49 - direction
13:50 - and so rather than changing y by one we
13:54 - can now replace that with the new Dy
13:56 - input variable
13:57 - then looking back at where we use this
14:00 - move outer level block
14:01 - the first one can be told to move
14:03 - upwards out of a collision by setting
14:05 - the input value to 1. and the second one
14:08 - when we bump our heads can move
14:10 - downwards with a value of negative one
14:13 - does that make sense pretty neat right
14:15 - so watch this ground collisions are
14:19 - working and bumper guy head no longer
14:21 - bounces us through but sends us smashing
14:23 - right back to the ground excellent that
14:26 - is a relief you know I feel like we are
14:29 - making really good progress here the
14:32 - collisions are almost done so where do
14:34 - we still have a problem
14:36 - yep it's with face on collisions in this
14:41 - scenario we don't want to try to pop
14:43 - them up or down out of the level no this
14:46 - should be game over right there but
14:49 - telling the difference between wall
14:50 - ceiling and floor collisions is not
14:53 - actually so straightforward for example
14:55 - this Collision is it a floor Collision
14:57 - or a wall Collision I guess it all
15:00 - depends on how we got here and usefully
15:04 - our speed y variable can tell us just
15:06 - that so in this example if we are able
15:09 - to move the player out of a collision
15:11 - within the previous speed y range then
15:15 - all is good it's a platform Collision
15:18 - but if we can't move them out within
15:21 - that Speedway range then we can assume
15:24 - this was a wall collision and it's game
15:27 - over dude now before we fly into trying
15:30 - to code this up there's one more gotcha
15:32 - that I have to mention sometimes we'll
15:34 - find that our hand drawn levels can be
15:36 - how should I say it a little wonky oh
15:39 - God forbid scratch itself rasterizes our
15:42 - perfect platforms misaligned yes that
15:44 - does happen too well this kind of
15:47 - collision also ends in here game over
15:51 - not cool weird do well then to widen the
15:54 - allowed safe Zone just a tad Say by 4
15:58 - pixels above and below and this extra
16:00 - leg room will allow us to safely skip
16:02 - over these small problems and make our
16:04 - games far less frustrating for the
16:06 - player nice let's do this
16:10 - okay find the Define move out of level
16:13 - Block it's going to be easier if we
16:15 - start over
16:16 - first allow for that 4 pixel safe Zone
16:19 - by moving into the collision by 4 pixels
16:21 - that's a change y by
16:24 - and then we multiply change y by
16:27 - negative 4 multiplied by d y
16:31 - then we begin our Loop this time with a
16:34 - repeat block
16:36 - we need an addition
16:38 - and the speed y now that's the distance
16:41 - we need to cover the safe Zone except
16:43 - hold on this can be a positive or
16:45 - negative value depending on if we're
16:47 - moving up or down luckily though we have
16:50 - the ABS block for this situation this
16:52 - stands for absolute and it happily flips
16:55 - any negative values back to positive
16:57 - ones negative eight becomes eight and
17:00 - positive 4 stays as four very useful
17:02 - indeed so drop the speed Y into that and
17:05 - in turn that goes into the addition
17:07 - now we just need to extend this y
17:10 - Distance by the four above and four
17:12 - below that's totals to eight pixels
17:15 - great within the loop we continue to
17:18 - change y by d y as we did before but
17:21 - need a new if to check for when we are
17:24 - no longer touching the color white
17:27 - simply we use the not touching color on
17:30 - the previous script
17:31 - well now if this is true we must be out
17:35 - of the Collision hurray so set speed y
17:37 - to zero and we are done so conclude here
17:41 - with a stop block choosing to stop this
17:45 - script
17:45 - that will break out of this repeat Loop
17:47 - and end the entire custom block
17:50 - however if we don't find a point of no
17:53 - Collision within this repeat well then
17:55 - that is our game over now I don't want
17:58 - us ending the game sunk slightly into
18:00 - the floor so we can tidy this up just a
18:03 - little by duplicating the change y
18:05 - script from the top of this and dropping
18:07 - it down here at the bottom negative four
18:10 - multiplied by d y there and lastly
18:14 - broadcast
18:16 - a new message
18:19 - game over
18:21 - nice I'll just discard what's left of
18:24 - the previous script as this one is done
18:27 - almost ready to test we just need to
18:30 - handle the game over event so scroll
18:33 - over to our main game Loop here it is
18:35 - the script below the repeat are the
18:38 - existing game over scripts to run these
18:40 - from two places Spike collisions and
18:42 - wall collisions we can separate them off
18:45 - and then reattach them under a when I
18:47 - receive hap lock
18:49 - for the game over event
18:52 - finally drop another broadcast to game
18:54 - over after the main game Loop ends here
18:57 - and we are done this is super exciting
19:01 - guys smash that green flag
19:04 - here we go straight into a wall and oh
19:07 - boy yes that was most certainly game
19:09 - over and that too brilliant floor and
19:13 - platform collisions are still working
19:14 - fine and jumping down into walls is
19:16 - detected correctly oh but hold on do you
19:19 - see that on game over the player should
19:22 - stop in their tracks as the level
19:23 - scrolling slows but now that seems to be
19:27 - a little off as the player Glides out of
19:30 - sync with the level nasty now this has
19:33 - been caused by us moving the game over
19:35 - scripts from the main green flag script
19:37 - into a separate broadcast receiver I
19:40 - shan't go into the details now exactly
19:42 - why this is but to fix it all we need to
19:45 - do is move the change Y block up above
19:48 - the change scroll speed block within
19:51 - this repeat Loop and the problem should
19:53 - magically go away and yes that's it much
19:57 - better no more sliding around on death
19:59 - hey if there's any of you scratches out
20:01 - there who would like a stab at
20:02 - explaining why this fix work then I'd
20:05 - love to see your answers so drop your
20:07 - comment under the video script execution
20:09 - order is probably one of the hardest
20:11 - things to grasp in scratch and once
20:13 - mastered really frees you up to finally
20:15 - take control of your scratch games
20:18 - oh my I even managed that triple jump
20:20 - again woohoo
20:22 - well I'm sad to say we are drawing to a
20:24 - close on this episode we've reached a
20:26 - point where given a bit of time and
20:28 - effort we could actually start to build
20:30 - some pretty neat Geometry Dash levels
20:31 - but why we might even try to recreate
20:34 - the beginning of the famous stereo
20:35 - Madness but wait with patch I hear you
20:38 - say there's still so much left to do yes
20:40 - I know we need to add those beautiful
20:43 - traveling particle effects get the
20:45 - player rotating how could we have not
20:47 - covered that yet not to mention creating
20:49 - a start screen and a method of
20:51 - restarting the game when we die he has
20:54 - much to do but wow haven't we come a
20:57 - long way in just two short episodes guys
21:00 - if you enjoyed this video please would
21:02 - you carefully and respectfully feed that
21:05 - mini thumb-shaped creature lurking under
21:07 - my video it's incredibly hungry and a
21:10 - simple clip will do them the world of
21:11 - good also so as not to miss my next
21:14 - exciting episode please consider
21:16 - subscribing to this Channel and checking
21:18 - that cheeky Bell icon to ensure you are
21:20 - the first to know when a new video drops
21:23 - let me know how you're getting on in the
21:25 - comments under the video and be sure to
21:27 - have the project added to the official
21:28 - scratch studio also linked under this
21:30 - video that just leaves me to say thanks
21:33 - for watching have a great week ahead and
21:36 - scratch on guys
21:38 - [Music]

Cleaned transcript:

hello fellow scratchers I'm griffpatch welcome back to part two of our how to recreate John 2 Dash in scratch series whereas episode 1 focused on creating that scrolling level this episode is where it gets really fun as we introduce multilevel platforming me working the players jumping mechanic support for Gravity find out how we handle collisions with the floor ceiling and walls and how to avoid those unexpected scratch glitches oops no problem we will fix that too yes I've got oodles to teach you today so I hope you are ready for some serious fun guys let's get scratching start by loading up our completed projects from episode 1. but before we add anything new it's worth going to the file menu and saving this project as a new copy now I'll rename the new copy as episode 2. we do this before every new episode so that if we make a mistake we always have a backup of our work from episode one to go back to excellent and here we go let's begin by adding some platforms to our level these want to look something like this a grid of black squares now how I create these is to click into the level Sprite making the Sprite visible on the stage and then in the costume tab make a brand new costume this means we can see the exact size of the costume that we draw set the fill color to Black and the outline color to Pure White now that's important as white will be our solid Collision color now keep the width set to 4. then we use the rectangle tool to drag out a square while holding the shift key that is nine by nine grid squares so size then adjust the result until it reads 38 by 38 pixels perfect let's place it into our level click copy next duplicate the first level costume and we click paste and there it is we can bring it down to sit on the ground by dragging or nudging it with the arrow keys on our keyboard to change this into a grid of black tiles make sure we click on the selection tool and then hold down alt and shift before dragging the platform to make a perfectly aligned copy refining the position afterwards using the up and down arrow keys now what's really cool is that if we select both of these shapes together by dragging around them then the alt shift trick still works and duplicates both at once aha this trick can be repeated on a bigger and bigger scale allowing us to build up very large platforms really quickly cool right okay so that should do for now let's delete that last costume and let's see how this platform looks in the game smash that green flag here it comes ah well of course what did you think would happen our jumping code from episode 1 has no concept of a platform or what to do with it should we Collide so the game continues as if it didn't exist not a problem stop the project then make sure to make the level Sprite visible on the stage because we're now going to talk about jumping and gravity our previous jumping scripts can be found in the player Sprite over here and this really was the most basic jumping script ever we can press space right now and see the player move up and then down on the project stage but everyone knows that when we jump the motion the player is expected to follow is an arc the colliding with a platform should then break the fall well okay then delete that old jumping code there to allow us to simulate gravity we need to keep track of how fast our player is falling so make a new variable name it speed Y and declare it for this Sprite only that is the player Sprite okay let's have some fun and simulate a jump bring in a set variable block setting the new speed y variable to 28. now that should represent quite a fast upwards movement but over time they should be pulled down by gravity so separately we change speed y by and let's try a value of negative four as the gravity in Geometry Dash is really quite strong finally we actually move the Sprite using a change y by block and drop in that updated speed y variable great now we can test this by clicking the second change y script to run it oh wait okay so that didn't jump and that was my fault as we should have clicked the set speed y script first to actually set speed y to 28 to initiate that jump whoops and then clicking the update script launches the player upwards so keep clicking the update script and we can watch there go up slow and return to the ground in a smooth Arc very exciting all we need to do now is prevent them from passing through the level when they touch it first off we need to detect if a collision has occurred if we are touching a color and the color that we chose for solid collisions is pure white then great we have collided we don't want to stay this way so we should lift the player Sprite up until they are no longer colliding with the level we can do this with a repeat until block repeating until we are not that is we are no longer touching the color white and all we do is move the player upwards a little at a time using a change y by one pixel this will repeat over and over until we are no longer touching white it's the perfect time then for a quick test so hit that change y script again click and there you go do you see the player drifting slowly upwards until they are no longer in contact with the floor yeah of course after a collision we really want to reset the player's speed y to zero since the down with velocity has been stopped by a collision well not a couple of times and you'll see the speed wise now more under control great well we can try a small jump set speed y to 28 and here we go up and down oh dear I clicked the script again while it was still running and doing that actually stops the script rather than starting a new one let me try that again up and down and good the Collision is fixed but this is still a little ugly I mean who wants to see the player dipping below the ground like this actually in the game not me it would be much nicer if all this fixing up of collisions could be done without the player of the game seeing it happen at all the problem is that whenever we loop around like this scratch assumes we are creating an animation and it refreshes the screen here each and every time we loop around what we want to do is tell scratch that this bit of code is to be run without refreshing the screen and it just so happens under the my blocks category if we make a new block let's call it move out of level we have the option to run without screen refresh well how about that so click OK and then we can attach this new defined block to the top of the code we don't want to animate then having defined these scripts as move out of level we can simply drop the new block inside that if here to have it run whenever we detect a collision let's see how that looks just click once to set speed wide 28 for a new Jump and then start tapping the change speed y script up and down and boom we no longer see any overlap or the dreaded rising up of the player it all happens in a single screen refresh so in effect it's instant now that is cool we can also try it elsewhere on the screen and yeah it just works as long as we are touching the color white okay then let's see if we can get this gravity into our game if we look at this when flag clicked script we currently have a wait until touching color block now this is waiting for the player to hit Spike what we want now is to run some scripts while we are waiting so we'll split the script here and first we'll make sure to reset the player's speed y not 28 but to zero this ensures we don't begin the game jumping or falling and then we'll make our game Loop repeat until and again we repeat until we are touching the spikes color that isn't white it's the offwhite yellowish color if you recall that means we no longer need that wait until block and then we can reattach those end of game scripts below the repeat cool right these gravity scripts now we could bring them directly into this Loop here but for clarity I'm going to make another custom block to keep our code nice and readable we'll name it player movement and we might as well tick the run without screen refresh as this all wants to run in a single animation frame so these scripts are the player movement scripts and we can make use of that block in our game Loop here perfect it's testing time then so hit the green flag and off we go okay wow let's play that again so this is good the player is sitting on the floor and he's not falling through it but when we smash into a wall boom we are teleported up onto the top now that's actually expected as we coded all our collisions to be fixed by raising the player up until it was no longer colliding what's really sweet though is how the player neatly falls off the platform at the end that looks awesome and yeah spikes still work too great now did I mention we can't jump anymore yeah we did delete the old jump script after all right first question when should the player be able to jump obviously not while they're in the air yep it's when they touch the ground or we could say just after we detect a floor collision and that code is here so after moving back out of the level drop in an if check and we'll look for when the space key is pressed I've had a lot of people asking how to make this project mobile friendly so let's also bring in a mouse down check that's true when the mouse button is clicked or this screen is tapped on a mobile device we'll need an or block as we don't mind which of these is pressed either will make us jump and then set speed y to 28 just like we did before when testing gravity Let's test it squish that green flag and woohoo we are able to bounce off the floor and off platforms to ha can't say I've got any better at avoiding those bikes actually with the new Gravity and jumping mechanic it's way more of a challenge jumping the triple spikes I'm not even sure it's possible ah challenge accepted oh my gosh much too early yeah too late early again come on oh man I've got to nail this one yes yes I knew it I am the master or perhaps I'm just too easily pleased okay though enough of that we've sorted floor collisions but what about ceiling collisions now if I click into the level costumes and just temporarily move our platforms higher up watch what happens if we jump into them from Below yeah rather than bumping our head you fly up through the platform instead and we can't be having that now obviously it's the same problem again that every Collision is fixed by moving the player upwards until they no longer are colliding the solution then would be to switch things around when we are traveling up into a collision and that is when the player speed y Sy is greater than zero and then instead we move out of the Collision downwards sounds simple enough okay so this existing code is handling a downwards Collision we can surround them with an if else block like so and the condition is that speed Y is less than if speed Y is less than zero a downward Collision therefore we can move out of the level upwards as before but if we are not moving down then we must have been moving up into the Collision now rather than rewriting lots of similar code we'll reuse the same move out of level block again but we won't include the jumping code on the end since we don't want to allow jumping after colliding with the ceiling not in this game mode anyhow we just need a way to tell the move out of level block which way we want it to move out of the level upwards or downwards right click on the Define block or long press it if you're using mobile and then choose edit then we can add a numeric input and give it the name d y That's the amount to move in the y direction and so rather than changing y by one we can now replace that with the new Dy input variable then looking back at where we use this move outer level block the first one can be told to move upwards out of a collision by setting the input value to 1. and the second one when we bump our heads can move downwards with a value of negative one does that make sense pretty neat right so watch this ground collisions are working and bumper guy head no longer bounces us through but sends us smashing right back to the ground excellent that is a relief you know I feel like we are making really good progress here the collisions are almost done so where do we still have a problem yep it's with face on collisions in this scenario we don't want to try to pop them up or down out of the level no this should be game over right there but telling the difference between wall ceiling and floor collisions is not actually so straightforward for example this Collision is it a floor Collision or a wall Collision I guess it all depends on how we got here and usefully our speed y variable can tell us just that so in this example if we are able to move the player out of a collision within the previous speed y range then all is good it's a platform Collision but if we can't move them out within that Speedway range then we can assume this was a wall collision and it's game over dude now before we fly into trying to code this up there's one more gotcha that I have to mention sometimes we'll find that our hand drawn levels can be how should I say it a little wonky oh God forbid scratch itself rasterizes our perfect platforms misaligned yes that does happen too well this kind of collision also ends in here game over not cool weird do well then to widen the allowed safe Zone just a tad Say by 4 pixels above and below and this extra leg room will allow us to safely skip over these small problems and make our games far less frustrating for the player nice let's do this okay find the Define move out of level Block it's going to be easier if we start over first allow for that 4 pixel safe Zone by moving into the collision by 4 pixels that's a change y by and then we multiply change y by negative 4 multiplied by d y then we begin our Loop this time with a repeat block we need an addition and the speed y now that's the distance we need to cover the safe Zone except hold on this can be a positive or negative value depending on if we're moving up or down luckily though we have the ABS block for this situation this stands for absolute and it happily flips any negative values back to positive ones negative eight becomes eight and positive 4 stays as four very useful indeed so drop the speed Y into that and in turn that goes into the addition now we just need to extend this y Distance by the four above and four below that's totals to eight pixels great within the loop we continue to change y by d y as we did before but need a new if to check for when we are no longer touching the color white simply we use the not touching color on the previous script well now if this is true we must be out of the Collision hurray so set speed y to zero and we are done so conclude here with a stop block choosing to stop this script that will break out of this repeat Loop and end the entire custom block however if we don't find a point of no Collision within this repeat well then that is our game over now I don't want us ending the game sunk slightly into the floor so we can tidy this up just a little by duplicating the change y script from the top of this and dropping it down here at the bottom negative four multiplied by d y there and lastly broadcast a new message game over nice I'll just discard what's left of the previous script as this one is done almost ready to test we just need to handle the game over event so scroll over to our main game Loop here it is the script below the repeat are the existing game over scripts to run these from two places Spike collisions and wall collisions we can separate them off and then reattach them under a when I receive hap lock for the game over event finally drop another broadcast to game over after the main game Loop ends here and we are done this is super exciting guys smash that green flag here we go straight into a wall and oh boy yes that was most certainly game over and that too brilliant floor and platform collisions are still working fine and jumping down into walls is detected correctly oh but hold on do you see that on game over the player should stop in their tracks as the level scrolling slows but now that seems to be a little off as the player Glides out of sync with the level nasty now this has been caused by us moving the game over scripts from the main green flag script into a separate broadcast receiver I shan't go into the details now exactly why this is but to fix it all we need to do is move the change Y block up above the change scroll speed block within this repeat Loop and the problem should magically go away and yes that's it much better no more sliding around on death hey if there's any of you scratches out there who would like a stab at explaining why this fix work then I'd love to see your answers so drop your comment under the video script execution order is probably one of the hardest things to grasp in scratch and once mastered really frees you up to finally take control of your scratch games oh my I even managed that triple jump again woohoo well I'm sad to say we are drawing to a close on this episode we've reached a point where given a bit of time and effort we could actually start to build some pretty neat Geometry Dash levels but why we might even try to recreate the beginning of the famous stereo Madness but wait with patch I hear you say there's still so much left to do yes I know we need to add those beautiful traveling particle effects get the player rotating how could we have not covered that yet not to mention creating a start screen and a method of restarting the game when we die he has much to do but wow haven't we come a long way in just two short episodes guys if you enjoyed this video please would you carefully and respectfully feed that mini thumbshaped creature lurking under my video it's incredibly hungry and a simple clip will do them the world of good also so as not to miss my next exciting episode please consider subscribing to this Channel and checking that cheeky Bell icon to ensure you are the first to know when a new video drops let me know how you're getting on in the comments under the video and be sure to have the project added to the official scratch studio also linked under this video that just leaves me to say thanks for watching have a great week ahead and scratch on guys
