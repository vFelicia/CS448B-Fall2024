With timestamps:

00:01 - hello fellow scratchers text is a huge
00:05 - part of games and apps and if we've got
00:07 - something to say we might as well do so
00:09 - in style check out these cool text
00:12 - effects yeah so which do you prefer
00:15 - these babies or scratches built-in
00:17 - speech bubbles and variable reporters
00:20 - yeah it's no contest what you need is a
00:23 - scratch text engine and what exactly is
00:26 - that well basically it's a scratch
00:29 - sprite absolutely chock-full of costumes
00:31 - wow so many throw in a few clever
00:34 - scratch scripts and boom super cool text
00:38 - but tex engines are well known for being
00:40 - time consuming and tricky to get right
00:43 - well then you've come to the right place
00:46 - because i've spent literally days on
00:47 - your behalf trying to make the best
00:49 - tutorial i could so stay tuned to find
00:52 - out how we're going to import your dream
00:55 - font the fastest approach to splitting
00:57 - costumes clever tricks to measure
00:59 - costume sizes and of course the awesome
01:01 - text engine itself there'll be no
01:04 - stopping us then just look what i've
01:06 - been building with it yeah
01:08 - are you excited i certainly am so what
01:11 - are we waiting for let's get scratching
01:15 - so where do we get these awesome fonts
01:18 - from well there's plenty of options and
01:20 - i'll present you with my top four
01:22 - you probably know that scratch has six
01:24 - fonts built into its costume editor
01:27 - option 1 then is to use one of these as
01:29 - the basis for your font engine and it
01:31 - sure is the quickest and easiest font to
01:34 - import
01:35 - for option 2 we must go searching for
01:37 - font sprite sheets these are
01:39 - downloadable pictures showing a complete
01:42 - set of font letters really great if you
01:44 - are after a retro pixel art style
01:47 - option three is to import a google font
01:50 - but wow there are so many to choose from
01:53 - simply thousands of amazing fonts it's
01:55 - just that we need to jump through a few
01:57 - more hoops before we can get these into
01:59 - scratch which leads me to option four
02:02 - remix a font project from my scratch
02:05 - font studio after all the more of us
02:07 - that spend the time preparing these
02:08 - fonts the more that will be available
02:11 - you'll find a link to the studio in the
02:12 - description under this video
02:15 - of course there's nothing like having a
02:17 - go yourself so without further ado let
02:19 - me take you through each option as
02:21 - quickly as i can
02:23 - starting with the easiest option the
02:25 - native scratch fonts then
02:27 - make sure to create a new sprite naming
02:30 - it font so we have these six typefaces
02:32 - to choose from and i'm going to choose
02:34 - the sans-serif font the top one hey did
02:37 - you know that a serif refers to the
02:39 - little lines found on the edges of
02:41 - letters
02:41 - and sans means without so sans-serif
02:44 - means without serifs these little lines
02:48 - now before we start splitting up the
02:50 - letters we should make sure we have
02:52 - decided on the color and the size our
02:55 - font is going to be changing your mind
02:57 - later will mean a lot of hard work if
03:00 - you weren't sure at this point then you
03:01 - could always just stick with the default
03:03 - size check out how it looks on full
03:05 - screen too
03:06 - and off we go change the text to be a
03:10 - single uppercase letter a
03:12 - then without resizing it drag the a
03:15 - carefully to the center of the drawing
03:17 - canvas marked here by a small crosshair
03:21 - and if we zoom right in
03:24 - really close so we can be super accurate
03:27 - in our positioning drag the a so that
03:29 - the bottom left corner of the letter
03:31 - ends on the central crosshair
03:34 - you'll note the bounding box of the a
03:36 - actually goes below this point
03:39 - ignore that for now it's the baseline of
03:41 - the letter a that we are concerned about
03:44 - cool
03:45 - so with the a positioned we can change
03:47 - its name to be a capital a2
03:50 - perfect that one's done
03:52 - so on to the next
03:55 - duplicate the costume and with the text
03:57 - tool change the a into a b
04:00 - and consequently rename the costume to
04:03 - also be called b
04:05 - right are you getting the picture
04:07 - duplicate the costume change the letter
04:10 - change the costume name to match and
04:12 - repeat
04:13 - over
04:14 - and over
04:15 - and over
04:17 - finally we reach zed and we can pause
04:20 - for breath before beginning work on the
04:23 - lowercase letters starting again at
04:25 - lowercase a
04:27 - and this is an interesting fact that
04:29 - scratch costume names are one of the few
04:31 - places that are case sensitive so we can
04:34 - have one costume named lowercase a and
04:37 - another costume named uppercase a lucky
04:40 - that because otherwise this text engine
04:42 - wouldn't work
04:43 - right that's all 26 x 2 52 letters out
04:48 - of the way we can start on the numbers
04:52 - only ten of those from zero to nine name
04:56 - them after the numbers of course
04:58 - and then phew this really is a marathon
05:01 - you can decide what other punctuation
05:04 - and symbols to include you know full
05:07 - stops commas quotes underscores i'm just
05:10 - going to do them all starting at the top
05:12 - left of my british keyboard and working
05:14 - my way across it it always surprises me
05:17 - just how many symbols there are
05:21 - 91 costumes wowzers okay so do let me
05:26 - just say this all takes quite a bit of
05:28 - time so you may want to add just a few
05:31 - letters to begin with and then get on
05:33 - with the rest of the tutorial the great
05:35 - thing about this engine is that you can
05:37 - go back and add more letters at any
05:39 - point even the order you add them is
05:42 - completely unimportant
05:44 - this way you can test whether you like
05:46 - the look of the font well before you've
05:48 - added more than a dozen letters
05:50 - worth remembering
05:52 - okay cool we have completed adding a
05:55 - built-in scratch font good job and yes
05:59 - that was the easy one
06:02 - are you ready for option two using a
06:05 - font sprite sheet image
06:08 - this is the approach i tend to use if i
06:09 - want a cool retro looking font i googled
06:13 - font sprite sheet and there are plenty
06:16 - of possibilities this one looks nice see
06:18 - how all the letters are laid out in a
06:20 - grid the actual image size is really
06:22 - small but don't worry it's good news for
06:25 - us as that will make it easy to import
06:27 - into scratch
06:28 - just save any prospective images to your
06:30 - computer ready to bring into scratch i
06:33 - note this font doesn't have any
06:34 - lowercase letters though another
06:36 - resource i found is kaviras.net it's
06:39 - packed with a whole bunch of super retro
06:42 - fonts based on classic games i clicked
06:44 - through a few and rather fancied the
06:46 - look of this reactor 7 font i'm going to
06:49 - download this image of the typeface
06:51 - saving it to my computer
06:53 - but checking in file explorer i'm afraid
06:56 - we are going to have a problem importing
06:58 - this image into scratch because it's
07:00 - wider than 480 pixels which is the width
07:04 - of the scratch stage oh man so there's
07:07 - loads of workarounds to this the upshot
07:10 - is that we need to edit the image to
07:11 - make it smaller one option would be to
07:14 - hop on over to the easygif ez gift.com
07:17 - site and make use of their handy crop
07:19 - tool we can upload the picture we just
07:22 - downloaded and then set the crop size to
07:24 - be exactly 480 by 360. don't forget to
07:29 - click set
07:30 - and then make sure the crop is left
07:32 - aligned
07:34 - then scroll down and click crop image
07:37 - okay so here's the result
07:39 - we're just lucky that there are no
07:41 - important letters on the right hand
07:42 - region of this image that we cropped off
07:44 - otherwise we'd have to make a second
07:46 - crop to get those into scratch too
07:49 - so hit save and i'll make sure to add
07:52 - the words cropped to the file name
07:55 - splendid
07:56 - and now we return home to scratch i'm
07:59 - starting over here with a blank font
08:01 - sprite to show you how this is done
08:04 - in the costume editor click to upload a
08:06 - new costume and first i'll show you that
08:08 - fun bubble font
08:10 - nice that would work super well i think
08:12 - it's a mono space font too anyhow i'm
08:15 - not going to use that one right now let
08:17 - me show you what happens if we try to
08:19 - load the font image that was too big for
08:22 - scratch
08:23 - so to begin with scratch load it at
08:26 - double resolution so it appears super
08:28 - tiny this wouldn't be a problem at all
08:30 - if scratch didn't also decide to chop
08:33 - off the top of our image man that is
08:36 - annoying oh well that's why i had us
08:39 - make the cropped version
08:41 - load that up instead
08:43 - and ah that's much better the size is
08:47 - retained and so is the top line yeah
08:52 - so this font is a little small at this
08:54 - size but once we cut out the individual
08:57 - characters we can set the sprite size to
08:59 - 200 and it will look just great
09:02 - but
09:03 - what we need to cut out each and every
09:06 - character by hand
09:08 - yes i'm sorry that is the bad news but
09:12 - don't rage quit right yet there's also
09:14 - some good news this particular sprite
09:16 - sheet is very bloated and we only need
09:19 - to use these first two rows that is good
09:22 - news but also i have done a lot of
09:26 - sprite sheet cutting and i have a rather
09:28 - sick workflow that you might like to
09:31 - follow
09:32 - are you ready for this fasten your seat
09:34 - belts and off we go
09:37 - start by making a duplicate of the
09:40 - entire font sheet just in case something
09:42 - goes wrong
09:44 - click back up into the original sheet
09:47 - next name the sheet a to z
09:50 - then using the rectangular selection
09:52 - tool i next i'm going to select and
09:55 - delete everything but the first line of
09:58 - this image
09:59 - i'll just double check i didn't
10:00 - accidentally remove too much or too
10:02 - little don't forget that we can always
10:04 - click undo if we make a mistake
10:07 - great so next i'll select all by
10:11 - pressing ctrl and the a key
10:14 - and drag the image to snap it to the
10:16 - center of the canvas
10:19 - you know how to snap it there right
10:21 - if we zoom right in on the center point
10:23 - now still with the whole costume
10:26 - selected if it's not then just press
10:28 - ctrl a again
10:29 - we can carefully drag the costume
10:31 - upwards until it sits with the baseline
10:34 - of the font on the midpoint of the
10:37 - canvas
10:38 - i find it helpful to hold the shift key
10:40 - down while dragging to stop it from
10:42 - moving left or right
10:43 - just make sure it's perfectly aligned
10:46 - before you click off the selection
10:48 - one more tweak though before we really
10:50 - begin cutting them up see how this
10:52 - letter to the right of the bass line is
10:54 - not aligned to the background grid
10:57 - that will result in a blurry font so
11:00 - select all again with ctrl a and while
11:02 - holding shift
11:04 - drag it all half a pixel to the left
11:07 - perfecto
11:09 - and now we get to the really laborious
11:12 - and crazily repetitive part of this
11:14 - video separating letters into individual
11:18 - costumes come on scroll over to the far
11:21 - right and find the last letter in the
11:24 - row mine is the lowercase z but yours
11:27 - could be any letter depending on your
11:29 - chosen sprite sheet
11:30 - before we start it's a good plan to
11:32 - duplicate the a to z costume
11:35 - guys soon you'll know these nine steps
11:37 - so well that you'll be babbling them in
11:39 - your sleep step 1 select the original
11:43 - ada zed costume step 2 with the
11:46 - rectangle selection tool drag around the
11:48 - last letter to select it and only it
11:52 - nothing else
11:53 - step 3 click copy step four click delete
11:58 - yeah basically we just cut out the zed
12:00 - from the costume and it's now safely in
12:02 - the computer's clipboard ready for
12:04 - pasting
12:05 - step five duplicate the costume staying
12:08 - with the duplicate step six click delete
12:12 - this is the fastest way to get a new
12:14 - costume right where we are in the list
12:16 - of costumes
12:17 - step seven and now we click paste aha
12:21 - there is our letter nice one
12:24 - step eight so name the costume lowercase
12:27 - zed to match
12:29 - and step nine
12:30 - careful this is the easiest step to miss
12:33 - and i frequently did click on the
12:35 - costume canvas once why if you don't
12:39 - then scratch doesn't save the new
12:41 - costume that we pasted and we lose that
12:43 - pasted letter is that a bug
12:45 - yes it is and it only happens in bitmap
12:48 - mode but hold the phone isn't it a
12:51 - problem that our letter is left
12:53 - positioned way over here to the right of
12:55 - the costume canvas
12:56 - ah well there's a thing we have a choice
13:00 - here under normal circumstances another
13:02 - step in this process would be to
13:04 - carefully move the costume back
13:06 - and align it perfectly to the center of
13:08 - the costume
13:10 - however this step adds more time to our
13:12 - processing than all the other actions
13:14 - combined and it just so happens i have a
13:17 - little bit of grip patch magic that is
13:19 - going to allow us to ignore this step
13:21 - completely
13:22 - wow i wonder what it could be
13:26 - right though back to step one select the
13:29 - original a to z costume two drag around
13:33 - the last letter
13:34 - three copy four delete five duplicate
13:38 - the costume six delete
13:41 - seven paste eight name the costume
13:44 - lowercase y nine and click the canvas
13:49 - again select a to z drag around the
13:52 - letter copy delete duplicate the costume
13:55 - delete paste name the costume and click
13:58 - on the canvas
14:00 - of course by the time you've done this a
14:02 - few hundred times like me you two might
14:05 - be driven slightly around the bend but
14:07 - at least you'll be a master of cutting
14:09 - out costumes oh my there's nothing like
14:13 - having the end in sight and phew we made
14:16 - it the last letter in the road doesn't
14:18 - need copying or deleting we just name it
14:20 - a and it's done
14:23 - oh after finishing a row we can just
14:26 - check down to ensure everything looks
14:28 - good oh no what where is our capital r
14:33 - oh you see i told you we all make
14:34 - mistakes i mustn't have clicked on the
14:37 - costume after renaming it well no
14:39 - problem as long as we made that
14:42 - duplicate of the z costume it's down at
14:44 - the bottom here all i need to do is find
14:46 - the letter r
14:48 - select and copy it and then scroll back
14:50 - up to find the r costume and we just tap
14:54 - paste and few wee that saved our bacon
14:58 - and all the other letters are accounted
15:00 - for
15:01 - nice
15:03 - so are we done come back to the original
15:06 - font sheet
15:07 - ah no we still have the numbers and
15:10 - punctuation symbols to split up in times
15:12 - like this you just gotta pretend you're
15:14 - a robot and go into autopilot right okay
15:17 - select and delete the top row they at
15:19 - least are all done and then carefully
15:21 - remove everything below the second line
15:24 - if you make a mistake you can always
15:25 - click undo or re-import the original
15:27 - picture and then trim off any characters
15:30 - you really don't need that cuts it down
15:32 - a tad
15:33 - so do you remember what we need to do
15:35 - next
15:36 - yeah we align the baseline of the
15:38 - letters to the middle of the canvas
15:40 - position the costume with its baseline
15:42 - just sitting on the central line
15:44 - and lastly before we start splitting
15:46 - again oh joy we need to just nudge the
15:50 - entire line over so that the pixels
15:52 - align with the editor grid
15:54 - there that's perfect and we are ready to
15:57 - roll wish me godspeed the nine steps to
16:00 - costume happiness more like the nine
16:03 - steps to griff patch madness
16:06 - and we are done yes yes i'm so psyched
16:10 - oh man wow what a ride seriously who
16:13 - would do this we must be so dedicated to
16:17 - scratch
16:18 - now i'm obviously a glutton for
16:19 - punishment because there's a third
16:21 - source of fonts i'm going to let you in
16:23 - on the good news is that the splitting
16:25 - process is all but identical to the
16:28 - bitmap one so we can skip over that a
16:31 - lot
16:32 - the third source is google fonts found
16:35 - by visiting fonts.google.com
16:37 - and wow there are so many just amazing
16:41 - fonts on there thank you google for this
16:43 - outstanding resource but how do we get
16:46 - them into scratch so let's choose
16:48 - google's very own roboto font now
16:50 - there's many ways that you might get
16:52 - this into scratch but let me show you my
16:54 - current favorite
16:56 - if i search up the page google font to
16:59 - svg path
17:01 - then that will bring us to a website of
17:03 - the same name a link is of course in the
17:05 - description under the video this site is
17:07 - able to take a font and convert it into
17:10 - an svg a vector image so simply find
17:14 - roboto in the list of fonts so we don't
17:17 - need to upload anything set the font
17:19 - weight regular will do now the default
17:22 - size is rather large let's go with a
17:24 - size of 20
17:26 - next click on separate characters that
17:29 - will help us split up the font later on
17:31 - we must remember to set the stroke width
17:33 - to zero otherwise the font will have an
17:36 - extra outline finally we write in the
17:38 - text box the letters we want to convert
17:41 - start with all the uppercase letters
17:43 - from a to z
17:45 - and then click download svg the file
17:48 - will save with the name abc etcetera and
17:51 - that's fine with me
17:54 - next up we write the lower um the
17:57 - lowercase letters silly caps lock
18:00 - again we download the svg but just be
18:03 - careful not to save over the previous
18:05 - file lastly we want the numbers and any
18:08 - punctuation and characters full stops
18:10 - commas underscores brackets all those
18:12 - when you download this one you'll
18:13 - probably need to change the file name to
18:15 - get it to save successfully
18:18 - great we can spin up scratch with a once
18:21 - more empty font sprite and upload the
18:24 - first svg font image
18:26 - nice at size 100 it looks pretty sweet
18:30 - and now the process of splitting this up
18:32 - is going to be all but identical to the
18:34 - nine step system we use for splitting up
18:36 - the bitmap font we begin by zooming in
18:39 - because we need to adjust the text
18:41 - baseline
18:42 - now all these letters are separate from
18:44 - each other that's going to be useful
18:46 - later but right now select all using
18:48 - control a and then drag carefully
18:50 - upwards onto the midpoint line
18:53 - trying to line letters up horizontally
18:56 - is actually rather pointless in vector
18:57 - mode so you might as well skip this
18:59 - action
19:00 - anyhow with that done all we need to do
19:03 - is follow the same nine step routine
19:05 - from the bitmap font so we start by
19:07 - duplicating the costume just for
19:09 - safety's sake and off we go just this
19:12 - one time i promise select the original
19:15 - costume two click on the last letter
19:19 - three copy four delete five duplicate
19:22 - the costume six delete seven paste eight
19:26 - name the costume uppercase zed and nine
19:30 - actually in vector mode you don't even
19:32 - need to click on the canvas so i guess
19:34 - it's only an eight step process nice
19:37 - and that is it repeat repeat repeat do
19:40 - you have any idea how long i spent
19:42 - recording this episode for you if you
19:44 - want to take a stab in the comments
19:45 - under this video then have a laugh yeah
19:48 - the things i do for you guys once you've
19:51 - done all the uppercase letters we then
19:53 - upload the lowercase work through them
19:56 - and then the numbers and punctuation
19:58 - there sure is a lot of them but in the
20:01 - end we are done if you made it this far
20:04 - then fantastic because this next bit is
20:07 - quite fun because we finally get to do
20:09 - some coding yay although we have our
20:12 - font costumes all separated out we don't
20:15 - yet know how wide each costume is and we
20:18 - will need that before we can actually
20:20 - place letters next to each other now
20:22 - it's common practice to create a list
20:24 - for these widths and manually go through
20:26 - each costume recording these widths into
20:28 - that yes we could do that but what if we
20:32 - could calculate the widths automatically
20:34 - that would sure save time any idea how
20:37 - we might do that
20:38 - if you don't know already then see if
20:40 - you can guess before i finish explaining
20:42 - this clever scratch trick
20:45 - we start with the bitmap font sprite i'm
20:48 - only sizing it to 800 so that you could
20:50 - see it in this video but ah where is
20:53 - that sprite when we need it ah there it
20:55 - is scratch has fenced it into view
20:58 - ensuring it never goes fully off-screen
21:01 - this is a real pain for making scrolling
21:04 - games but right now i guess we can see
21:06 - the logic in it but this fencing does
21:09 - have another use watch this
21:12 - bring in a set x block hey what such a
21:15 - tiny block ah hold on yeah set this
21:18 - sprite x's position to
21:20 - negative nine nine nine nine
21:24 - and of course rather than going way off
21:26 - screen to the left the sprite is fenced
21:28 - in and is just visible on the left
21:31 - margin so next up we'll repeat until we
21:35 - are not touching the edge of the screen
21:38 - while slowly moving it back to the right
21:40 - with a change x by
21:42 - one
21:44 - run that and the letter slides
21:47 - expectantly into view
21:49 - cool because if we can align a costume
21:52 - to the left edge of the screen then
21:54 - moving the costume half a screen width
21:56 - to the right change x by 240 that will
21:59 - end with sprite aligned from the
22:02 - midpoint of the canvas
22:04 - haha that doesn't tell us how wide the
22:06 - costume is but it does do something else
22:09 - remember how when splitting up these
22:11 - costumes we skipped the step where we
22:13 - brought them back to the center well
22:15 - look now we've managed to adjust the
22:17 - position in code to achieve this same
22:19 - result we can check it out for the
22:21 - letter w which is far off to the right
22:23 - instead
22:27 - and yep it still finds its way to the
22:29 - middle of the screen super
22:32 - we should make a record of this position
22:34 - then make a new variable naming it uh xx
22:38 - for this sprite only then set x x
22:41 - to the current x position
22:44 - recorded so what happens if we duplicate
22:47 - that topic of code
22:50 - strip off those final two lines but
22:52 - instead we move to the far right
22:55 - positive 9999
22:57 - and of course remembering to switch the
22:59 - change x by to negative one this will
23:02 - move us back in to the left
23:04 - running that
23:05 - and yes as expected the w ends up
23:08 - nestled against the right hand edge of
23:10 - the screen
23:12 - but wait
23:13 - this is really interesting why
23:16 - okay take a look at this we originally
23:19 - managed to position the w sprite aligned
23:21 - to the left of the screen
23:24 - then we added 240 to position it offset
23:27 - from the middle recording this position
23:29 - in the variable x x
23:32 - can you imagine where this letter would
23:33 - be if we added a further half screen
23:36 - width to it
23:37 - well in theory that would take it all
23:39 - the way to just off the right hand edge
23:41 - of the screen
23:42 - and this is exciting because if we
23:45 - compare that position to where we just
23:47 - ended up
23:49 - can you tell me what the relative
23:51 - distance between these two letters is
23:54 - yes it's exactly
23:56 - one full width of the w costume that
24:00 - means we can now calculate the width
24:02 - simply by taking the left position away
24:05 - from the right that is xx plus 240
24:11 - subtract
24:15 - the new x position and apparently this w
24:18 - has a width of 64.
24:21 - wow cool
24:23 - let's try a thinner letter how about a j
24:28 - run the measuring script
24:32 - and 24 yes that sounds right and so we
24:36 - found a way to successfully measure the
24:38 - width of our costumes
24:40 - our next job then is to automate the
24:42 - measuring of all the costumes in the
24:44 - font sprite let's begin with some
24:47 - initialization when green flag clicked
24:51 - switch costume to a
24:56 - and then set size to 200. that's a good
24:59 - size for this pixel font
25:02 - now to ensure this all runs nice and
25:03 - fast make a new custom block
25:06 - calculate letter sizes and of course
25:09 - tick to run without screen refresh
25:12 - we're going to need to use lists to
25:14 - store our font data the first is named
25:18 - underscore width
25:20 - i use underscore to mean it's a special
25:22 - list of data that is not going to change
25:24 - once set
25:25 - then ensure it starts empty with a
25:27 - delete all of underscore width
25:31 - the next list is named underscore offset
25:35 - x
25:36 - again for this sprite only and again we
25:38 - delete all from this list 2. so we need
25:42 - to loop through all our costumes
25:45 - but how do we tell scratch how many
25:47 - costumes that is
25:48 - another trick then switch costume 2
25:52 - and now the first costume number is
25:54 - costume 1. to ensure scratch knows this
25:57 - is a number and not a name i'll use the
26:00 - maths round block here
26:02 - but rather than setting it to 1 put a 0
26:05 - in there instead
26:07 - what yeah this is cool if i run that
26:10 - check out which costume it actually
26:12 - selected the costume before the first
26:15 - costume is the last costume it wrapped
26:18 - around cool costume 94. so now we know
26:22 - how many costumes we have 94.
26:25 - therefore we repeat for costume number
26:29 - that's 94 times one for each costume
26:32 - perfect now not forgetting we are still
26:35 - set to the last costume place a next
26:37 - costume block as the first block within
26:39 - this loop now as we go around we'll
26:41 - progress on through all the costumes
26:44 - set y to zero we must be far away from
26:47 - the top and the bottom edges of the
26:48 - screen for this to work
26:50 - next up with an if else block drop in an
26:54 - equals
26:55 - what is the length of
26:58 - now not the costume number but the
27:00 - costume name of this sprite
27:04 - okay it's one why do we want to check if
27:07 - the length is one
27:09 - well all letter costumes have to have a
27:11 - single letter as their name to work a b
27:14 - c so any costume with a name longer than
27:16 - one letter can be ignored
27:19 - cool now we get to drop in our costume
27:22 - measuring script from earlier put it in
27:24 - the then branch of this if
27:26 - next we need to ensure we record our
27:28 - costume size and offset data in the
27:31 - lists
27:32 - so add the variable xx to the offset x
27:35 - list
27:36 - this is the offset to bring the letter
27:38 - into the center of the screen
27:40 - next we're going to add to the width
27:42 - list and that's this little beauty here
27:45 - the xx plus 240. subtract
27:48 - the x position giving us the calculated
27:51 - width of the costume splendid we are
27:54 - nearly there guys what about the else
27:56 - branch this is here for any costume that
27:59 - is not a letter in that case we just
28:02 - can't ignore them as the list needs to
28:04 - account for every costume so that the
28:06 - list item numbers match with the costume
28:08 - numbers so we just need to duplicate the
28:11 - two ads but change them to just add
28:13 - blank values to our list that will do
28:17 - just fine
28:18 - wow this script has got quite long
28:20 - really i hope you got it all it's about
28:23 - time we gave this a run just scroll over
28:25 - to the when flag clicked hat block and
28:27 - drop in a call to calculate letter sizes
28:31 - awesome here we go then as you can see
28:34 - we have these two empty lists ready to
28:36 - be filled with values so click the green
28:39 - flag oh yes this is looking really good
28:44 - both lists have 94 items added to them
28:46 - and the figures are looking well from
28:48 - what i can tell in the right ballpark
28:51 - you'll note that costume 1 was not a
28:53 - real letter so that's why it's been set
28:55 - to blank and we do have the full 94
28:57 - costumes
28:59 - so oh yes finally it's time to begin
29:02 - building the actual text engine woohoo
29:06 - now we are going to need to be able to
29:08 - switch costumes to a letter i'll just
29:11 - pick any letter and then look up its
29:13 - width and offset well here's the offset
29:16 - x list but how do we go from costume to
29:20 - list item
29:21 - costume h is costume number 9 so looking
29:24 - in the list item nine gives us the
29:26 - offset for that letter
29:28 - in that case we can just use the costume
29:31 - number yep that's nine and squidge it
29:34 - into the item block here item nine of
29:37 - offset x is indeed 263 as shown in that
29:41 - list great
29:42 - and the width of the h letter
29:46 - that would be 10
29:48 - perfect nothing can stop us now let's
29:51 - make a variable txt text for this sprite
29:54 - only we'll use this to hold the text we
29:57 - want to display set it to
29:59 - hello world i know it's so cliche
30:02 - next we can reuse the xx variable to
30:05 - hold the position of our text on the
30:07 - screen
30:08 - set it to zero the y position we can
30:11 - just use the set sprite y2 yeah zero as
30:15 - well
30:16 - so we need to loop through the letters
30:18 - one at a time we'll need another
30:20 - variable to keep track of our progress
30:22 - name it simply i for index for this
30:26 - sprout only
30:27 - did i say sprout
30:29 - we're going to set i to zero before
30:32 - entering a repeat loop and we repeat for
30:35 - the number of letters in our text
30:37 - variable
30:38 - length of the text variable right away
30:41 - we can change i by one so i changes from
30:44 - zero to one ready to process our first
30:47 - letter
30:48 - we need to switch to the letters costume
30:51 - and we can get the name of that costume
30:53 - using the letter of block on the right
30:55 - drop in the text variable the text we're
30:57 - trying to display
30:59 - and we want the letter at position i
31:02 - now this is funky if we run that script
31:06 - you can see it rushing through the
31:07 - letters of hello world but the letters
31:09 - are all over the place but not to worry
31:12 - that's what the offset list is there to
31:14 - fix
31:15 - set the sprite's x position 2
31:17 - and then we need an addition block
31:19 - and the position we want to display the
31:21 - letter is at x x which at the moment is
31:24 - 0 the middle of the screen but to
31:26 - account for any misalignment we now need
31:28 - to add in the costumes offset x
31:31 - hold on we have that just up here item
31:33 - costume number of offset x
31:36 - if we run the script again
31:38 - now we can see that all the letters are
31:40 - nicely appearing in one location well
31:43 - that is much better can you sense
31:45 - victory it's coming i can almost taste
31:48 - it
31:48 - at this point we have a decision to make
31:51 - once we switch to the required letter
31:53 - and have it positioned we need to leave
31:55 - it behind before moving on to the next
31:58 - letter
31:58 - to do this we have two options to create
32:01 - a clone or to use the pen extension to
32:04 - stamp it onto the pen canvas
32:06 - for now we'll use a clone the benefits
32:09 - of clones are that they look much nicer
32:11 - for vector fonts but also they are
32:13 - easier to have appear in front of
32:15 - everything else in your project
32:17 - the downside is that they use up lots of
32:19 - our valuable clones so this can be a
32:22 - real humdinger of a decision to make
32:24 - right the first letter sprite is cloned
32:28 - but we need to move xx to the right by
32:31 - the width of the current letter
32:34 - easy change xx by
32:36 - the item costume number of width list
32:40 - okay are we there smash that um script
32:46 - right this is looking a bit messy
32:49 - shouldn't there be a little bit of space
32:51 - between letters i guess we forgot to
32:53 - account for that no problem come back
32:56 - over to our calculate letter sizes
32:58 - script
32:59 - down here where we record the width of
33:01 - each costume we'll add a small amount
33:03 - extra to account for the spacing between
33:05 - letters use an addition block to add an
33:08 - extra two pixels
33:14 - click the green flag to recalculate the
33:15 - font sizes and then
33:18 - try running our display script again
33:21 - oh man
33:23 - still not quite the perfect text engine
33:25 - we were anticipating i spent a lot of
33:28 - time looking into what the problem was
33:29 - and the answer turned out to be another
33:32 - scratch bug or at least a quirk as we
33:34 - increase costume sizes to 200 and above
33:37 - the touching blocks start to misreport
33:39 - their collisions leading to our clever
33:41 - sprite size measurements being less
33:44 - accurate as such we will have to try
33:46 - adding four to the width instead to
33:49 - mitigate this issue
33:51 - run the project
33:53 - and click our display script
33:56 - there and that is much more like it
34:00 - perfect spacing yes hey what's up with
34:04 - this o in the middle of my hello world
34:07 - that should have been a space right it's
34:10 - showing as an o because that was the
34:13 - last letter before the space and the
34:15 - costume didn't change and why not
34:18 - because letter six is a space character
34:21 - and we don't have no space character boy
34:24 - what i suggest is that we make one i'll
34:27 - just repurpose this first costume one
34:29 - and rename it as a single space
34:32 - there yep scratch is fine with that too
34:35 - if you don't have a costume one free
34:37 - like me then just make a new costume and
34:40 - name it space doesn't have to be costume
34:42 - number one for this to work however
34:43 - there is another problem how wide is an
34:46 - empty space character hmm
34:49 - if the costume doesn't have a width then
34:51 - we aren't going to get much of a space
34:53 - between our words so just how wide
34:56 - should a space be
34:58 - i seem to remember someone telling me
34:59 - that it should be the width of the
35:00 - letter o well in that case let me copy
35:03 - the costume of letter o and paste it up
35:06 - here in the space character sprite run
35:08 - the project and click that display
35:10 - script again
35:15 - yeah okay it's hard to tell if any of
35:17 - that worked since it was already showing
35:19 - an o in the place of the space before
35:22 - let me just paint it red yeah there now
35:25 - we can see the difference good
35:27 - of course we don't want this red o to
35:29 - remain visible and in fact why are we
35:31 - wasting a clone on this anyhow so to
35:33 - kill two birds with one stone let's skip
35:36 - doing that drop in an if block right
35:38 - after switching costumes but carefully
35:41 - move the change xx to outside this if we
35:44 - still want to have a gap even if we
35:46 - don't want to display the space
35:49 - the condition is
35:51 - not
35:52 - equal
35:53 - comparing the costume name to a space
35:55 - character
35:56 - if the costume name is not a space then
35:59 - set the x position and clone perfect
36:03 - we don't need to recalculate the font
36:05 - sizes so just hit the stop button to
36:07 - remove all the clones and then click the
36:10 - display script again and yeah baby hello
36:14 - world not bad at all
36:17 - if you want less space between the words
36:19 - just reduce the width of that red o and
36:22 - we can write any text we want even
36:24 - include the current scratch username
36:26 - that will be handy
36:28 - now you may have noticed that the
36:29 - letters are appearing a little slow on
36:31 - the screen well this is something you
36:33 - may like or you may need it to be super
36:35 - quick either way let's make a new custom
36:38 - block to wrap this all up in
36:40 - name it write
36:42 - with an input text
36:44 - another label
36:46 - at x
36:47 - an input
36:49 - x
36:49 - and one more label
36:51 - y
36:52 - and another input also named
36:55 - y
36:56 - cool i'm going to try running without
36:58 - screen refresh
37:00 - we can attach that define block to the
37:02 - top of our script and now we just need
37:04 - to plug in all these inputs together
37:07 - we'll set txt text to the text input
37:10 - and we'll set xx to the x input and
37:14 - finally set the y position to the y
37:16 - input
37:18 - shall we test this baby out drop some
37:20 - text into the left hand input of the new
37:23 - right block and position it at 0 0 for
37:26 - now
37:27 - finally before we test this we should
37:29 - deal with how to clear away the previous
37:31 - text clones otherwise we'll keep writing
37:34 - one on top of the other and in the end
37:35 - run out of clones
37:36 - we'll use a when i receive block with a
37:39 - new message named clear font letters and
37:43 - all we do in here is delete this sprite
37:46 - simple
37:47 - then before we write out our new text we
37:50 - broadcast clear font letters
37:54 - let me just move this over to the left
37:56 - setting x to negative 100
37:59 - and now to see it work click the
38:01 - broadcast and write script boom
38:05 - that was lightning fast just what i
38:07 - hoped a little more text then lower down
38:09 - the page
38:12 - no problem at all
38:15 - well that's awesome and i still have
38:17 - loads more to share with you but this
38:20 - video is getting super long so i'm going
38:23 - to have to split it into two
38:25 - if you want to try different font sizes
38:27 - then no problem just remember you may
38:30 - need to play around with how much you
38:31 - add to the width to get the letter
38:33 - spacing right
38:34 - also if you fancy switching out the
38:36 - create clone block for a pen stamp block
38:39 - then that will also work fine too you
38:41 - just need to remember to erase all
38:44 - instead of deleting clones to clear the
38:45 - screen
38:46 - anyhow i'm rushing to the end now i do
38:49 - hope you've had fun watching me spend
38:50 - countless hours cutting out letters but
38:52 - the end results are going to be so worth
38:55 - it i can't wait to see what you guys
38:57 - have made with this don't forget to
38:59 - submit your projects to the studio
39:00 - linked in the description under the
39:02 - video the next episode will stretch what
39:04 - we've done here to amazing new heights
39:06 - with word wrapping dialogues for my rpg
39:09 - and more so if you haven't already
39:11 - subscribe to this channel so as not to
39:14 - miss my next exciting episode oh yeah
39:16 - and please smash the like button too so
39:18 - that more people get to enjoy the video
39:21 - that's how it works in youtube land and
39:22 - i appreciate it so thanks for watching
39:25 - have a great week ahead and scratch on
39:29 - guys
39:37 - [Music]
39:44 - you

Cleaned transcript:

hello fellow scratchers text is a huge part of games and apps and if we've got something to say we might as well do so in style check out these cool text effects yeah so which do you prefer these babies or scratches builtin speech bubbles and variable reporters yeah it's no contest what you need is a scratch text engine and what exactly is that well basically it's a scratch sprite absolutely chockfull of costumes wow so many throw in a few clever scratch scripts and boom super cool text but tex engines are well known for being time consuming and tricky to get right well then you've come to the right place because i've spent literally days on your behalf trying to make the best tutorial i could so stay tuned to find out how we're going to import your dream font the fastest approach to splitting costumes clever tricks to measure costume sizes and of course the awesome text engine itself there'll be no stopping us then just look what i've been building with it yeah are you excited i certainly am so what are we waiting for let's get scratching so where do we get these awesome fonts from well there's plenty of options and i'll present you with my top four you probably know that scratch has six fonts built into its costume editor option 1 then is to use one of these as the basis for your font engine and it sure is the quickest and easiest font to import for option 2 we must go searching for font sprite sheets these are downloadable pictures showing a complete set of font letters really great if you are after a retro pixel art style option three is to import a google font but wow there are so many to choose from simply thousands of amazing fonts it's just that we need to jump through a few more hoops before we can get these into scratch which leads me to option four remix a font project from my scratch font studio after all the more of us that spend the time preparing these fonts the more that will be available you'll find a link to the studio in the description under this video of course there's nothing like having a go yourself so without further ado let me take you through each option as quickly as i can starting with the easiest option the native scratch fonts then make sure to create a new sprite naming it font so we have these six typefaces to choose from and i'm going to choose the sansserif font the top one hey did you know that a serif refers to the little lines found on the edges of letters and sans means without so sansserif means without serifs these little lines now before we start splitting up the letters we should make sure we have decided on the color and the size our font is going to be changing your mind later will mean a lot of hard work if you weren't sure at this point then you could always just stick with the default size check out how it looks on full screen too and off we go change the text to be a single uppercase letter a then without resizing it drag the a carefully to the center of the drawing canvas marked here by a small crosshair and if we zoom right in really close so we can be super accurate in our positioning drag the a so that the bottom left corner of the letter ends on the central crosshair you'll note the bounding box of the a actually goes below this point ignore that for now it's the baseline of the letter a that we are concerned about cool so with the a positioned we can change its name to be a capital a2 perfect that one's done so on to the next duplicate the costume and with the text tool change the a into a b and consequently rename the costume to also be called b right are you getting the picture duplicate the costume change the letter change the costume name to match and repeat over and over and over finally we reach zed and we can pause for breath before beginning work on the lowercase letters starting again at lowercase a and this is an interesting fact that scratch costume names are one of the few places that are case sensitive so we can have one costume named lowercase a and another costume named uppercase a lucky that because otherwise this text engine wouldn't work right that's all 26 x 2 52 letters out of the way we can start on the numbers only ten of those from zero to nine name them after the numbers of course and then phew this really is a marathon you can decide what other punctuation and symbols to include you know full stops commas quotes underscores i'm just going to do them all starting at the top left of my british keyboard and working my way across it it always surprises me just how many symbols there are 91 costumes wowzers okay so do let me just say this all takes quite a bit of time so you may want to add just a few letters to begin with and then get on with the rest of the tutorial the great thing about this engine is that you can go back and add more letters at any point even the order you add them is completely unimportant this way you can test whether you like the look of the font well before you've added more than a dozen letters worth remembering okay cool we have completed adding a builtin scratch font good job and yes that was the easy one are you ready for option two using a font sprite sheet image this is the approach i tend to use if i want a cool retro looking font i googled font sprite sheet and there are plenty of possibilities this one looks nice see how all the letters are laid out in a grid the actual image size is really small but don't worry it's good news for us as that will make it easy to import into scratch just save any prospective images to your computer ready to bring into scratch i note this font doesn't have any lowercase letters though another resource i found is kaviras.net it's packed with a whole bunch of super retro fonts based on classic games i clicked through a few and rather fancied the look of this reactor 7 font i'm going to download this image of the typeface saving it to my computer but checking in file explorer i'm afraid we are going to have a problem importing this image into scratch because it's wider than 480 pixels which is the width of the scratch stage oh man so there's loads of workarounds to this the upshot is that we need to edit the image to make it smaller one option would be to hop on over to the easygif ez gift.com site and make use of their handy crop tool we can upload the picture we just downloaded and then set the crop size to be exactly 480 by 360. don't forget to click set and then make sure the crop is left aligned then scroll down and click crop image okay so here's the result we're just lucky that there are no important letters on the right hand region of this image that we cropped off otherwise we'd have to make a second crop to get those into scratch too so hit save and i'll make sure to add the words cropped to the file name splendid and now we return home to scratch i'm starting over here with a blank font sprite to show you how this is done in the costume editor click to upload a new costume and first i'll show you that fun bubble font nice that would work super well i think it's a mono space font too anyhow i'm not going to use that one right now let me show you what happens if we try to load the font image that was too big for scratch so to begin with scratch load it at double resolution so it appears super tiny this wouldn't be a problem at all if scratch didn't also decide to chop off the top of our image man that is annoying oh well that's why i had us make the cropped version load that up instead and ah that's much better the size is retained and so is the top line yeah so this font is a little small at this size but once we cut out the individual characters we can set the sprite size to 200 and it will look just great but what we need to cut out each and every character by hand yes i'm sorry that is the bad news but don't rage quit right yet there's also some good news this particular sprite sheet is very bloated and we only need to use these first two rows that is good news but also i have done a lot of sprite sheet cutting and i have a rather sick workflow that you might like to follow are you ready for this fasten your seat belts and off we go start by making a duplicate of the entire font sheet just in case something goes wrong click back up into the original sheet next name the sheet a to z then using the rectangular selection tool i next i'm going to select and delete everything but the first line of this image i'll just double check i didn't accidentally remove too much or too little don't forget that we can always click undo if we make a mistake great so next i'll select all by pressing ctrl and the a key and drag the image to snap it to the center of the canvas you know how to snap it there right if we zoom right in on the center point now still with the whole costume selected if it's not then just press ctrl a again we can carefully drag the costume upwards until it sits with the baseline of the font on the midpoint of the canvas i find it helpful to hold the shift key down while dragging to stop it from moving left or right just make sure it's perfectly aligned before you click off the selection one more tweak though before we really begin cutting them up see how this letter to the right of the bass line is not aligned to the background grid that will result in a blurry font so select all again with ctrl a and while holding shift drag it all half a pixel to the left perfecto and now we get to the really laborious and crazily repetitive part of this video separating letters into individual costumes come on scroll over to the far right and find the last letter in the row mine is the lowercase z but yours could be any letter depending on your chosen sprite sheet before we start it's a good plan to duplicate the a to z costume guys soon you'll know these nine steps so well that you'll be babbling them in your sleep step 1 select the original ada zed costume step 2 with the rectangle selection tool drag around the last letter to select it and only it nothing else step 3 click copy step four click delete yeah basically we just cut out the zed from the costume and it's now safely in the computer's clipboard ready for pasting step five duplicate the costume staying with the duplicate step six click delete this is the fastest way to get a new costume right where we are in the list of costumes step seven and now we click paste aha there is our letter nice one step eight so name the costume lowercase zed to match and step nine careful this is the easiest step to miss and i frequently did click on the costume canvas once why if you don't then scratch doesn't save the new costume that we pasted and we lose that pasted letter is that a bug yes it is and it only happens in bitmap mode but hold the phone isn't it a problem that our letter is left positioned way over here to the right of the costume canvas ah well there's a thing we have a choice here under normal circumstances another step in this process would be to carefully move the costume back and align it perfectly to the center of the costume however this step adds more time to our processing than all the other actions combined and it just so happens i have a little bit of grip patch magic that is going to allow us to ignore this step completely wow i wonder what it could be right though back to step one select the original a to z costume two drag around the last letter three copy four delete five duplicate the costume six delete seven paste eight name the costume lowercase y nine and click the canvas again select a to z drag around the letter copy delete duplicate the costume delete paste name the costume and click on the canvas of course by the time you've done this a few hundred times like me you two might be driven slightly around the bend but at least you'll be a master of cutting out costumes oh my there's nothing like having the end in sight and phew we made it the last letter in the road doesn't need copying or deleting we just name it a and it's done oh after finishing a row we can just check down to ensure everything looks good oh no what where is our capital r oh you see i told you we all make mistakes i mustn't have clicked on the costume after renaming it well no problem as long as we made that duplicate of the z costume it's down at the bottom here all i need to do is find the letter r select and copy it and then scroll back up to find the r costume and we just tap paste and few wee that saved our bacon and all the other letters are accounted for nice so are we done come back to the original font sheet ah no we still have the numbers and punctuation symbols to split up in times like this you just gotta pretend you're a robot and go into autopilot right okay select and delete the top row they at least are all done and then carefully remove everything below the second line if you make a mistake you can always click undo or reimport the original picture and then trim off any characters you really don't need that cuts it down a tad so do you remember what we need to do next yeah we align the baseline of the letters to the middle of the canvas position the costume with its baseline just sitting on the central line and lastly before we start splitting again oh joy we need to just nudge the entire line over so that the pixels align with the editor grid there that's perfect and we are ready to roll wish me godspeed the nine steps to costume happiness more like the nine steps to griff patch madness and we are done yes yes i'm so psyched oh man wow what a ride seriously who would do this we must be so dedicated to scratch now i'm obviously a glutton for punishment because there's a third source of fonts i'm going to let you in on the good news is that the splitting process is all but identical to the bitmap one so we can skip over that a lot the third source is google fonts found by visiting fonts.google.com and wow there are so many just amazing fonts on there thank you google for this outstanding resource but how do we get them into scratch so let's choose google's very own roboto font now there's many ways that you might get this into scratch but let me show you my current favorite if i search up the page google font to svg path then that will bring us to a website of the same name a link is of course in the description under the video this site is able to take a font and convert it into an svg a vector image so simply find roboto in the list of fonts so we don't need to upload anything set the font weight regular will do now the default size is rather large let's go with a size of 20 next click on separate characters that will help us split up the font later on we must remember to set the stroke width to zero otherwise the font will have an extra outline finally we write in the text box the letters we want to convert start with all the uppercase letters from a to z and then click download svg the file will save with the name abc etcetera and that's fine with me next up we write the lower um the lowercase letters silly caps lock again we download the svg but just be careful not to save over the previous file lastly we want the numbers and any punctuation and characters full stops commas underscores brackets all those when you download this one you'll probably need to change the file name to get it to save successfully great we can spin up scratch with a once more empty font sprite and upload the first svg font image nice at size 100 it looks pretty sweet and now the process of splitting this up is going to be all but identical to the nine step system we use for splitting up the bitmap font we begin by zooming in because we need to adjust the text baseline now all these letters are separate from each other that's going to be useful later but right now select all using control a and then drag carefully upwards onto the midpoint line trying to line letters up horizontally is actually rather pointless in vector mode so you might as well skip this action anyhow with that done all we need to do is follow the same nine step routine from the bitmap font so we start by duplicating the costume just for safety's sake and off we go just this one time i promise select the original costume two click on the last letter three copy four delete five duplicate the costume six delete seven paste eight name the costume uppercase zed and nine actually in vector mode you don't even need to click on the canvas so i guess it's only an eight step process nice and that is it repeat repeat repeat do you have any idea how long i spent recording this episode for you if you want to take a stab in the comments under this video then have a laugh yeah the things i do for you guys once you've done all the uppercase letters we then upload the lowercase work through them and then the numbers and punctuation there sure is a lot of them but in the end we are done if you made it this far then fantastic because this next bit is quite fun because we finally get to do some coding yay although we have our font costumes all separated out we don't yet know how wide each costume is and we will need that before we can actually place letters next to each other now it's common practice to create a list for these widths and manually go through each costume recording these widths into that yes we could do that but what if we could calculate the widths automatically that would sure save time any idea how we might do that if you don't know already then see if you can guess before i finish explaining this clever scratch trick we start with the bitmap font sprite i'm only sizing it to 800 so that you could see it in this video but ah where is that sprite when we need it ah there it is scratch has fenced it into view ensuring it never goes fully offscreen this is a real pain for making scrolling games but right now i guess we can see the logic in it but this fencing does have another use watch this bring in a set x block hey what such a tiny block ah hold on yeah set this sprite x's position to negative nine nine nine nine and of course rather than going way off screen to the left the sprite is fenced in and is just visible on the left margin so next up we'll repeat until we are not touching the edge of the screen while slowly moving it back to the right with a change x by one run that and the letter slides expectantly into view cool because if we can align a costume to the left edge of the screen then moving the costume half a screen width to the right change x by 240 that will end with sprite aligned from the midpoint of the canvas haha that doesn't tell us how wide the costume is but it does do something else remember how when splitting up these costumes we skipped the step where we brought them back to the center well look now we've managed to adjust the position in code to achieve this same result we can check it out for the letter w which is far off to the right instead and yep it still finds its way to the middle of the screen super we should make a record of this position then make a new variable naming it uh xx for this sprite only then set x x to the current x position recorded so what happens if we duplicate that topic of code strip off those final two lines but instead we move to the far right positive 9999 and of course remembering to switch the change x by to negative one this will move us back in to the left running that and yes as expected the w ends up nestled against the right hand edge of the screen but wait this is really interesting why okay take a look at this we originally managed to position the w sprite aligned to the left of the screen then we added 240 to position it offset from the middle recording this position in the variable x x can you imagine where this letter would be if we added a further half screen width to it well in theory that would take it all the way to just off the right hand edge of the screen and this is exciting because if we compare that position to where we just ended up can you tell me what the relative distance between these two letters is yes it's exactly one full width of the w costume that means we can now calculate the width simply by taking the left position away from the right that is xx plus 240 subtract the new x position and apparently this w has a width of 64. wow cool let's try a thinner letter how about a j run the measuring script and 24 yes that sounds right and so we found a way to successfully measure the width of our costumes our next job then is to automate the measuring of all the costumes in the font sprite let's begin with some initialization when green flag clicked switch costume to a and then set size to 200. that's a good size for this pixel font now to ensure this all runs nice and fast make a new custom block calculate letter sizes and of course tick to run without screen refresh we're going to need to use lists to store our font data the first is named underscore width i use underscore to mean it's a special list of data that is not going to change once set then ensure it starts empty with a delete all of underscore width the next list is named underscore offset x again for this sprite only and again we delete all from this list 2. so we need to loop through all our costumes but how do we tell scratch how many costumes that is another trick then switch costume 2 and now the first costume number is costume 1. to ensure scratch knows this is a number and not a name i'll use the maths round block here but rather than setting it to 1 put a 0 in there instead what yeah this is cool if i run that check out which costume it actually selected the costume before the first costume is the last costume it wrapped around cool costume 94. so now we know how many costumes we have 94. therefore we repeat for costume number that's 94 times one for each costume perfect now not forgetting we are still set to the last costume place a next costume block as the first block within this loop now as we go around we'll progress on through all the costumes set y to zero we must be far away from the top and the bottom edges of the screen for this to work next up with an if else block drop in an equals what is the length of now not the costume number but the costume name of this sprite okay it's one why do we want to check if the length is one well all letter costumes have to have a single letter as their name to work a b c so any costume with a name longer than one letter can be ignored cool now we get to drop in our costume measuring script from earlier put it in the then branch of this if next we need to ensure we record our costume size and offset data in the lists so add the variable xx to the offset x list this is the offset to bring the letter into the center of the screen next we're going to add to the width list and that's this little beauty here the xx plus 240. subtract the x position giving us the calculated width of the costume splendid we are nearly there guys what about the else branch this is here for any costume that is not a letter in that case we just can't ignore them as the list needs to account for every costume so that the list item numbers match with the costume numbers so we just need to duplicate the two ads but change them to just add blank values to our list that will do just fine wow this script has got quite long really i hope you got it all it's about time we gave this a run just scroll over to the when flag clicked hat block and drop in a call to calculate letter sizes awesome here we go then as you can see we have these two empty lists ready to be filled with values so click the green flag oh yes this is looking really good both lists have 94 items added to them and the figures are looking well from what i can tell in the right ballpark you'll note that costume 1 was not a real letter so that's why it's been set to blank and we do have the full 94 costumes so oh yes finally it's time to begin building the actual text engine woohoo now we are going to need to be able to switch costumes to a letter i'll just pick any letter and then look up its width and offset well here's the offset x list but how do we go from costume to list item costume h is costume number 9 so looking in the list item nine gives us the offset for that letter in that case we can just use the costume number yep that's nine and squidge it into the item block here item nine of offset x is indeed 263 as shown in that list great and the width of the h letter that would be 10 perfect nothing can stop us now let's make a variable txt text for this sprite only we'll use this to hold the text we want to display set it to hello world i know it's so cliche next we can reuse the xx variable to hold the position of our text on the screen set it to zero the y position we can just use the set sprite y2 yeah zero as well so we need to loop through the letters one at a time we'll need another variable to keep track of our progress name it simply i for index for this sprout only did i say sprout we're going to set i to zero before entering a repeat loop and we repeat for the number of letters in our text variable length of the text variable right away we can change i by one so i changes from zero to one ready to process our first letter we need to switch to the letters costume and we can get the name of that costume using the letter of block on the right drop in the text variable the text we're trying to display and we want the letter at position i now this is funky if we run that script you can see it rushing through the letters of hello world but the letters are all over the place but not to worry that's what the offset list is there to fix set the sprite's x position 2 and then we need an addition block and the position we want to display the letter is at x x which at the moment is 0 the middle of the screen but to account for any misalignment we now need to add in the costumes offset x hold on we have that just up here item costume number of offset x if we run the script again now we can see that all the letters are nicely appearing in one location well that is much better can you sense victory it's coming i can almost taste it at this point we have a decision to make once we switch to the required letter and have it positioned we need to leave it behind before moving on to the next letter to do this we have two options to create a clone or to use the pen extension to stamp it onto the pen canvas for now we'll use a clone the benefits of clones are that they look much nicer for vector fonts but also they are easier to have appear in front of everything else in your project the downside is that they use up lots of our valuable clones so this can be a real humdinger of a decision to make right the first letter sprite is cloned but we need to move xx to the right by the width of the current letter easy change xx by the item costume number of width list okay are we there smash that um script right this is looking a bit messy shouldn't there be a little bit of space between letters i guess we forgot to account for that no problem come back over to our calculate letter sizes script down here where we record the width of each costume we'll add a small amount extra to account for the spacing between letters use an addition block to add an extra two pixels click the green flag to recalculate the font sizes and then try running our display script again oh man still not quite the perfect text engine we were anticipating i spent a lot of time looking into what the problem was and the answer turned out to be another scratch bug or at least a quirk as we increase costume sizes to 200 and above the touching blocks start to misreport their collisions leading to our clever sprite size measurements being less accurate as such we will have to try adding four to the width instead to mitigate this issue run the project and click our display script there and that is much more like it perfect spacing yes hey what's up with this o in the middle of my hello world that should have been a space right it's showing as an o because that was the last letter before the space and the costume didn't change and why not because letter six is a space character and we don't have no space character boy what i suggest is that we make one i'll just repurpose this first costume one and rename it as a single space there yep scratch is fine with that too if you don't have a costume one free like me then just make a new costume and name it space doesn't have to be costume number one for this to work however there is another problem how wide is an empty space character hmm if the costume doesn't have a width then we aren't going to get much of a space between our words so just how wide should a space be i seem to remember someone telling me that it should be the width of the letter o well in that case let me copy the costume of letter o and paste it up here in the space character sprite run the project and click that display script again yeah okay it's hard to tell if any of that worked since it was already showing an o in the place of the space before let me just paint it red yeah there now we can see the difference good of course we don't want this red o to remain visible and in fact why are we wasting a clone on this anyhow so to kill two birds with one stone let's skip doing that drop in an if block right after switching costumes but carefully move the change xx to outside this if we still want to have a gap even if we don't want to display the space the condition is not equal comparing the costume name to a space character if the costume name is not a space then set the x position and clone perfect we don't need to recalculate the font sizes so just hit the stop button to remove all the clones and then click the display script again and yeah baby hello world not bad at all if you want less space between the words just reduce the width of that red o and we can write any text we want even include the current scratch username that will be handy now you may have noticed that the letters are appearing a little slow on the screen well this is something you may like or you may need it to be super quick either way let's make a new custom block to wrap this all up in name it write with an input text another label at x an input x and one more label y and another input also named y cool i'm going to try running without screen refresh we can attach that define block to the top of our script and now we just need to plug in all these inputs together we'll set txt text to the text input and we'll set xx to the x input and finally set the y position to the y input shall we test this baby out drop some text into the left hand input of the new right block and position it at 0 0 for now finally before we test this we should deal with how to clear away the previous text clones otherwise we'll keep writing one on top of the other and in the end run out of clones we'll use a when i receive block with a new message named clear font letters and all we do in here is delete this sprite simple then before we write out our new text we broadcast clear font letters let me just move this over to the left setting x to negative 100 and now to see it work click the broadcast and write script boom that was lightning fast just what i hoped a little more text then lower down the page no problem at all well that's awesome and i still have loads more to share with you but this video is getting super long so i'm going to have to split it into two if you want to try different font sizes then no problem just remember you may need to play around with how much you add to the width to get the letter spacing right also if you fancy switching out the create clone block for a pen stamp block then that will also work fine too you just need to remember to erase all instead of deleting clones to clear the screen anyhow i'm rushing to the end now i do hope you've had fun watching me spend countless hours cutting out letters but the end results are going to be so worth it i can't wait to see what you guys have made with this don't forget to submit your projects to the studio linked in the description under the video the next episode will stretch what we've done here to amazing new heights with word wrapping dialogues for my rpg and more so if you haven't already subscribe to this channel so as not to miss my next exciting episode oh yeah and please smash the like button too so that more people get to enjoy the video that's how it works in youtube land and i appreciate it so thanks for watching have a great week ahead and scratch on guys you
