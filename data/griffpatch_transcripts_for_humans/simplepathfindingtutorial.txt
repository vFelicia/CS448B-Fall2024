With timestamps:

00:02 - hello fellow scratchers
00:03 - ever wondered how that enemy ai manages
00:06 - to move through a level
00:07 - navigating around corners skipping dead
00:09 - ends and finding that shortest route to
00:11 - the player
00:12 - i'm griff patch and today we will be
00:14 - delving into the world of enemy ai
00:16 - pathfinding
00:18 - you may be interested to know that the
00:20 - same pathfinding scripts that we're
00:21 - about to learn about
00:22 - are also used for calculating things
00:24 - like light flow in paper minecraft
00:27 - i wonder after you've watched this video
00:29 - whether you'll be able to tell me how
00:30 - they are linked
00:32 - drop me a comment if you know the answer
00:34 - i really love this project
00:35 - it looks so complex so how on earth do
00:38 - we go about
00:39 - creating it we'll begin with a blank new
00:42 - project
00:42 - and we're going to keep scratch cat this
00:44 - time they will be pleased
00:46 - we need him much smaller though so enter
00:49 - the value 30 into their size box
00:52 - and we'll also change the sprite name to
00:55 - cat
00:57 - next add a new sprite from the library
00:59 - i'll go for an apple
01:01 - and this will be our goal since
01:02 - scratchcat loves them so much
01:05 - set its size to 60 now
01:08 - the next step requires a little more
01:10 - creativity create a new sprite
01:13 - naming it maze and now we need to draw
01:17 - make sure your pen color is set to pure
01:19 - black for any walls
01:20 - and set the pen width to nice and chunky
01:23 - perhaps a width of
01:25 - now start by drawing a large rectangle
01:27 - around the border of the costume
01:30 - next draw a chunky maze leaving plenty
01:33 - of space around for the cat to navigate
01:36 - keeping the lines pure black now a
01:39 - device for starters making the maze
01:40 - similar size to the one i'm drawing here
01:43 - while we are working on our scripts the
01:45 - more complex maze i showed earlier will
01:47 - have to wait
01:48 - so with your simple maze drawn click
01:51 - into the code tab
01:52 - and add a when green flag clicked go to
01:55 - x y of zero by zero
01:57 - to center the maze on the stage so we
02:00 - want to find the shortest route between
02:02 - scratch cat
02:03 - and the apple we could start trundling
02:05 - off around the maze handling wall
02:07 - collisions and taking a stab at the best
02:09 - direction to turn at each point
02:11 - but bearing in mind that there are
02:12 - potential dead ends and worse
02:14 - looping corridors it would be best to
02:17 - plan our desired route
02:18 - in advance so create a new sprite
02:22 - and we'll name it path we are going to
02:25 - split the maze up into small
02:27 - square regions draw a 30 by 30 pixel
02:31 - tile just less than 8 large grid squares
02:34 - in width and height
02:35 - we can use the selection tool to drag it
02:37 - so it snaps to the center
02:39 - i've colored it a light pastel red with
02:42 - a saturation of around 10.
02:45 - next we draw an arrow pointing to the
02:47 - right
02:48 - make sure this is also pure black in
02:50 - color
02:52 - we're going to use this sprite to make a
02:54 - visual route
02:55 - or pathway through the maze
02:58 - in the code tab when green flag clicked
03:02 - show the arrow tile so have you ever
03:05 - noticed how it can be so much
03:07 - easier to solve a maze by starting at
03:09 - the end and working backwards
03:11 - this is exactly what we are going to do
03:13 - now
03:14 - so we start by going to apple point in
03:18 - direction
03:18 - zero which is up and go to back layer
03:23 - i'll just make sure scratch cat and the
03:25 - apple sprites are in good positions
03:27 - and then we'll run the project the tile
03:30 - should appear behind apple a good start
03:33 - to begin drawing a path we want to try
03:36 - and place a tile
03:37 - above the existing one so move forward
03:40 - by 32 steps
03:42 - that's one whole tile now we create a
03:44 - clone of ourselves and then quickly
03:46 - leaving the clone where it is we move
03:48 - ourselves back
03:49 - by minus 32 steps to where we started
03:53 - if i click that script we can see the
03:55 - new clone has appeared
03:57 - we want to do the same for all four
03:59 - possible directions around us
04:01 - the simplest way to do this is to add a
04:03 - turn clockwise by 90 degrees
04:05 - turn right and then run the same move
04:08 - script
04:08 - four times in a row this leaves us
04:11 - facing upwards
04:12 - once more having traveled full circle
04:15 - and has left a rather attractive diamond
04:17 - pattern
04:17 - around the apple with the arrows all
04:19 - pointing outwards in the direction of
04:21 - travel
04:23 - so let's wrap the moving script in a
04:25 - repeat for loop
04:29 - and we'll make a new custom block named
04:31 - try moving in all directions
04:33 - so mouthful and run without screen
04:35 - refresh that will contain this loop
04:37 - script to ensure
04:38 - all four clones get created together
04:41 - i'll drop a call to this custom block at
04:43 - the end of the green flag script
04:45 - so it runs when the project runs just
04:47 - test that to confirm it's still making
04:49 - the same pattern
04:50 - what we want to do now is continue these
04:52 - arrows outwards from the apple until
04:54 - they reach
04:55 - scratch cat over here but
04:58 - what about the maze walls if i place the
05:00 - apple next to a wall and run the script
05:02 - see how this arrow has appeared right
05:04 - over the wall well that's not right
05:07 - our paths should never cross a wall we
05:10 - can stop this
05:11 - by placing an if around the crate clone
05:13 - block here
05:16 - and ensure we are not touching black and
05:19 - only then create clone of myself running
05:24 - the project again confirms
05:25 - that this has worked as the offending
05:27 - arrow has been removed
05:29 - super okay now it's magic time
05:33 - i just know you're going to love this
05:34 - bit we've successfully coded a script
05:37 - that moves outwards
05:38 - checking for collisions so what if each
05:41 - new clone
05:42 - were to continue to do the same thing
05:44 - and each
05:45 - tried to spread out to their surrounding
05:47 - tiles
05:48 - and then those spread out again like the
05:51 - ripples on water
05:52 - moving outwards from the apple well
05:55 - let's find out drop a when i start as a
05:59 - clone block
06:00 - this will trigger for all four of the
06:01 - new tiles we just created
06:03 - so for now add in a wait one second
06:07 - this is just so that we can watch things
06:09 - happen you may actually want to use a
06:11 - smaller value than this
06:12 - and then simply add a try moving in
06:16 - all directions block to finish it off
06:18 - now look at this it's
06:19 - important can you see how running this
06:21 - script will create a clone
06:23 - and creating a clone will again run this
06:26 - script
06:27 - what we have created here is a recursive
06:29 - loop without anything to stop them
06:31 - recursive loops can run forever and they
06:34 - will really lag out your project
06:36 - but we'll come back to this in a second
06:38 - i've held off long enough i'm dying to
06:40 - run the project and see what we have
06:41 - created
06:43 - oh yes this is exactly what we wanted
06:46 - the tiles are now cloning themselves and
06:48 - spreading
06:49 - all around the maze flowing outwards
06:52 - from apple
06:52 - and even navigating around corners at
06:55 - some point
06:56 - they will certainly find scratch cat and
06:58 - just like solving a maze backwards
07:00 - we can then reverse the root and find
07:02 - our way back to the apple
07:05 - in fact i have an idea come into the
07:07 - costume editor and flip this arrow
07:09 - around to point
07:10 - left i can hold down shift as i rotate
07:13 - it to ensure it snaps to 45 degree
07:15 - increments there look with the arrows
07:18 - reversed
07:19 - the map suddenly reveals its true
07:20 - purpose if i want to take scratch cat
07:22 - from any place on this map to the apple
07:25 - the arrows show me the way to go
07:28 - let me move the apple and run the
07:30 - project again
07:32 - each time the map is generated it shows
07:34 - me the shortest route to get to the
07:36 - apple
07:36 - from any point on the map this is really
07:39 - useful
07:40 - it allows all the enemies on a level to
07:42 - seek you out
07:43 - using the same map
07:46 - okay i'm getting carried away i had a
07:48 - word of warning about this recursive
07:50 - loop
07:51 - so this script creates clones and the
07:53 - new clones in return run this script
07:55 - this could run forever and then wow
07:58 - super lag
07:59 - but we have two protections against this
08:02 - one
08:02 - scratch will not create more than 300
08:05 - clones before it refuses to create any
08:06 - more
08:08 - and two we specifically don't create a
08:10 - clone if we are touching
08:12 - black which brings me to another really
08:14 - important point in our design
08:16 - remember how the arrows on our path
08:18 - tiles are also coloured black
08:20 - this was purposeful because it means
08:23 - that not only do we stop the tiles being
08:25 - placed on a maze wall
08:27 - but also a tile will not be placed down
08:30 - when another tile
08:31 - is already there otherwise they would
08:34 - just be stacking on top of each other
08:36 - and the script wouldn't get very far but
08:39 - the black color
08:40 - stops them black walls
08:43 - black arrows okay
08:46 - there's another little problem we need
08:47 - to solve here where the tiles are
08:49 - getting misaligned at the borders of the
08:51 - screen
08:52 - this is just down to scratch's sprite
08:54 - fencing
08:55 - we can fix it by setting the size to 300
08:58 - before we move
08:59 - and then setting it back to 100
09:00 - afterwards this allows them to go off
09:02 - screen and come back on again
09:04 - in exactly the same place i'll just
09:06 - confirm that that worked
09:08 - yes that's much better while we're
09:11 - addressing potential issues
09:13 - let's also add in an if around the
09:15 - initial try move script
09:16 - under the green flag here and make sure
09:18 - we are also
09:19 - not touching black we don't want to
09:22 - begin tracing roots if the apple starts
09:24 - in a bad
09:24 - place finally we should remove this
09:28 - weight one
09:30 - how fast do you think this map will
09:32 - generate without it here
09:34 - wow really fast is all i can say in fact
09:37 - it's pretty instantaneous exciting stuff
09:41 - however this is all nice and good but
09:44 - how do we get
09:45 - scratch cat to follow these arrows hmm
09:48 - well the simplest way that i could think
09:50 - of is to color code
09:52 - our arrows go into the costume tab and
09:55 - rename the first costume to
09:57 - up i'm happy to keep this one's color
10:00 - the same
10:01 - now duplicate the costume naming it
10:04 - right
10:04 - and change the color to be green a color
10:06 - value of 35 will do
10:08 - then do the same for down with a color
10:11 - of blue around 55
10:13 - and left with a color of purple around
10:16 - 80.
10:16 - you can choose whatever colors you want
10:18 - of course
10:21 - now back in the scripts switch costume
10:23 - to up after we point in direction zero
10:26 - and then use a next costume after
10:28 - turning 90 degrees to the right
10:30 - this will cycle through the costumes as
10:32 - we rotate by 90 degrees
10:35 - run the project now and we are greeted
10:37 - by a lovely display of coloured tiles
10:39 - quite beautiful really i like it and
10:42 - what's more
10:43 - i just know scratchcat will love it too
10:45 - let's teach him to read it
10:48 - click into the scratchcat sprite in the
10:51 - costume editor
10:52 - create a new costume named mask and draw
10:55 - a filled square
10:56 - perfectly centered in the painting area
10:58 - mine is around 48 by 48 pixels
11:01 - the size of 12 by 12 grid squares
11:04 - now remember also we shrunk scratch cap
11:07 - by 30 percent
11:08 - so this square will also be shrunk down
11:11 - if you are using a different size sprite
11:12 - you'll need to size the square
11:14 - accordingly
11:16 - now back in the scripts we want to be
11:18 - able to track what color is under this
11:19 - little square mask
11:20 - and turn scratch cat accordingly so
11:23 - create a new custom block named
11:25 - get next direction
11:31 - and switch right away to the mask
11:33 - costume
11:36 - now check if with an if else it is
11:39 - touching color
11:41 - with the project running we can click
11:42 - the color swatch
11:44 - and pick the color from any tile
11:46 - pointing upwards
11:48 - now we could use a point in direction
11:50 - block here but instead
11:51 - let's make a new variable named next du
11:55 - for this sprite only and set that to
11:57 - direction zero instead
11:59 - that's up duplicate the if else block
12:02 - three more times and we'll check for the
12:04 - right color
12:06 - with a direction of 90.
12:10 - down
12:13 - with 180 and left
12:19 - with minus 90. all four of these colors
12:22 - must match the up
12:24 - right down and left colors if we take
12:26 - this new block
12:27 - add it to a point in direction of
12:30 - nextdir
12:31 - and then a switch costume back to
12:33 - costume 1
12:34 - then we can click the script to run it
12:36 - and we should find that our cat ends up
12:38 - pointing in the same direction as
12:39 - whatever arrow tile is behind them
12:42 - super i'll just do this a few more times
12:44 - to check
12:46 - cool let's get scratch cat moving
12:51 - make another block named follow path
12:54 - leave the run without screen refresh
12:55 - clear as this script
12:57 - will keep running while the cat is
12:58 - moving around
13:00 - so to start our cat's journey in a
13:03 - forever loop
13:04 - move forward by two steps and then after
13:07 - that
13:07 - place the get next direction point in
13:10 - direction and switch costume scripts we
13:12 - just created
13:13 - underneath lastly
13:16 - we want a when green flag clicked to
13:18 - kick off the follow path script
13:21 - great let's run the project and see what
13:24 - we have
13:24 - made and off trundle scratch cat
13:28 - this is working surprisingly well
13:31 - ha things go a little wrong once he
13:33 - reaches the apple oops
13:34 - more on that later let's add a key to
13:38 - reposition scratch cat
13:39 - add in a when space key pressed go to
13:42 - mouse pointer
13:45 - now i can just tap the spacebar and have
13:48 - them appear at my mouse
13:50 - and he immediately sets off in the
13:51 - direction of the apple once more
13:53 - that's neat where this project has room
13:56 - for improvement
13:58 - is in our cat's turning you see at
14:00 - present
14:01 - how he turns so quickly that he often
14:03 - walks down the edge of a tile
14:06 - and this can lead to him looking like
14:07 - he's overlapping the walls too
14:10 - how about we kill two birds with one
14:12 - stone and smooth
14:13 - out his turning i've scripted many ways
14:16 - of allowing sprites to turn smoothly in
14:18 - my years on scratch
14:19 - but while working on this tutorial i
14:21 - stumbled upon a clever trick
14:23 - that does it really simply in just a
14:25 - couple of blocks
14:27 - we start with a sprite pointing in
14:29 - direction a
14:30 - say 90 degrees in my example and b is
14:33 - the direction we want to face
14:35 - minus 160 degrees but we want a
14:39 - the cat to turn towards b smoothly and
14:42 - the problem is we don't want to end up
14:43 - rotating the long way round
14:46 - a clever trick is to rotate the entire
14:49 - problem so that b
14:50 - is pointing upwards we can do this by
14:53 - turning
14:53 - left by the value of b minus 160.
14:57 - this leaves us with a much simpler
14:59 - problem to solve
15:00 - the cat is now facing in the direction
15:02 - minus 110
15:04 - and we can see that we want to turn to
15:06 - face upwards
15:07 - well that's easy we just need to turn
15:10 - right
15:10 - by 110 that's just the inverse of the
15:13 - new value a
15:14 - which is the current direction of
15:16 - scratch cat to turn smoothly in that
15:18 - direction we just divide this number up
15:20 - into smaller chunks
15:22 - let's see if we can implement that start
15:25 - by creating a new custom block named
15:26 - turn towards
15:29 - with a numeric input of direction a
15:32 - label
15:32 - with smoothing followed by another input
15:35 - named
15:38 - smooth
15:41 - we turn left by the input direction we
15:43 - want to point in
15:44 - that's the red one then we must turn
15:48 - back right by the same input direction
15:50 - again
15:51 - so that we are pointing back towards a
15:54 - after all this is where we are turning
15:55 - from
15:57 - and then we subtract the current sprites
16:00 - direction reporter
16:02 - that's the blue one but divide it by
16:04 - smooth
16:05 - so that we only move a fraction towards
16:07 - the goal direction
16:09 - and that my friend is it what a neat
16:10 - little solution i really like that
16:13 - just be careful to use the right
16:14 - direction variables here let's use this
16:17 - script
16:18 - simply replace the point in direction
16:20 - with our new
16:21 - turn towards block and use a smoothing
16:23 - value of
16:24 - six run the project now
16:28 - and bask in the beauty of that smooth
16:30 - rotation
16:32 - how very clever all this
16:35 - pressing space makes me think it would
16:37 - be better if each press
16:39 - created its own scratchcat clone we
16:42 - should be able to do that pretty easily
16:44 - click into the stage sprite and add a
16:46 - when space key pressed
16:48 - create clone of cat triggering from the
16:51 - stage avoids accidentally creating
16:53 - clones from other clones
16:55 - now back into our cat sprite we bring in
16:58 - a when i start as clone and move the go
17:00 - to mouse pointer block
17:02 - into there instead we can delete the old
17:04 - when space key pressed from here now
17:07 - then lastly we make use of the follow
17:09 - path block once more for this clone
17:12 - run the project and now with each press
17:14 - of the space key a fresh new cat spawns
17:17 - happily trundling off towards the apple
17:19 - yeah
17:20 - lucky that that apple is so large
17:22 - there's plenty to go round
17:24 - i have to say that these cats are rather
17:26 - building up around the apple now
17:28 - i'd like to do something about that
17:29 - perhaps we can just fade them out once
17:31 - they reach their goal
17:33 - add a hide block to the when green flag
17:36 - clicked
17:36 - and delete the follow path block we'll
17:39 - only use the clones from now on to
17:40 - represent the moving cats
17:42 - now come down to the when i start as
17:44 - clone receiver and we'll duplicate this
17:46 - so that we have two events triggering
17:48 - off the start of each clone
17:51 - remove the follow path from the first
17:53 - receiver
17:54 - and replace with a show block then we'll
17:57 - wait
17:57 - until either we are touching apple or
18:00 - touching the edge of the screen the
18:03 - touching edge
18:04 - is just a sanity check in case we lose a
18:06 - cat off the beaten track
18:09 - then once it's reached the end of the
18:11 - goal we repeat
18:12 - 10 and change ghost effect by 10
18:16 - to fade the cat away finally delete this
18:19 - clone
18:20 - for the second when i start as clone
18:23 - just remove the go to mouse pointer
18:25 - we only want to keep the follow path
18:27 - script nothing else
18:30 - by having these scripts separate we can
18:33 - keep the cat moving
18:35 - while we'll simultaneously fade them out
18:38 - let's give it a test smack the space key
18:40 - and watch the cats gracefully fading
18:42 - away when they reach their target
18:44 - excellent work
18:48 - now just because it's extra fun let me
18:50 - show you how we can trigger a change of
18:52 - goal
18:52 - when the apple is moved click into the
18:55 - apple's sprite
18:56 - add a when green flag clicked and set
18:58 - drag mode
18:59 - to draggable that's in the sensing
19:01 - category
19:03 - we'll then loop forever but right away
19:06 - we want to wait until
19:07 - the mouse is down
19:12 - then we broadcast a new message reset
19:15 - path
19:19 - followed by another broadcast to find
19:22 - path
19:25 - let's hook up those events click into
19:26 - the cat sprite
19:28 - little note try to ignore those apple x
19:30 - and y variables that have appeared on
19:32 - the stage
19:33 - i was trying something else and decided
19:35 - against it you won't need them
19:38 - we are going to add a when i receive
19:40 - reset path
19:41 - and then simply delete this clone this
19:44 - keeps things running smoothly in the
19:45 - demo by cleaning up
19:46 - the old cats now click into the path
19:50 - sprite
19:51 - again we add a when i receive reset path
19:55 - and simply delete this clone to take
19:57 - away the previous pathways
19:59 - next add a when i receive find path
20:03 - make a new custom block named find path
20:06 - run without screen refresh
20:07 - and move all the scripts from when the
20:09 - green flag was clicked hat block into
20:11 - there
20:13 - ensuring to add the find path script
20:15 - back under the when
20:16 - green flag clicked and also under the
20:19 - new
20:20 - when i receive find path receiver
20:23 - now then this is a really fun test
20:25 - you're going to love this
20:26 - now run the project in full screen mode
20:29 - and grab the apple
20:30 - and drag it around the maze how awesome
20:34 - is this the pathfinding is calculating
20:36 - in real time
20:37 - and all the arrows are updating
20:38 - dynamically to show the best route
20:41 - oh my gosh that is so cool
20:44 - then i can still press the space bar and
20:46 - drop some cats
20:47 - wow what an awesome little project this
20:50 - is turning out to be
20:52 - now you may ask how could i use this in
20:54 - a game
20:56 - okay so i created this project the way
20:58 - it is
20:59 - to avoid the technicalities of working
21:01 - with lists and 2d grid systems but
21:03 - in practice lists and grids would be the
21:05 - way to go to support
21:07 - larger or more detailed mazes and
21:09 - off-screen enemies too
21:11 - it would also run even faster than it
21:13 - does now
21:14 - importantly it would also mean that
21:16 - these arrow tiles would not have to be
21:18 - visible
21:19 - that would be nice however we can't do
21:22 - that this time
21:23 - but i do have one trick up my sleeve
21:25 - that will at least allow us to hide the
21:26 - arrows
21:28 - so if you want to try it then go into
21:30 - the path sprite
21:32 - and add a when i receive
21:36 - hide path
21:40 - and hide the sprite then under the when
21:43 - i start as a clone
21:45 - add a forever loop
21:48 - and show this gets in really quickly
21:52 - before most other scripts run in a game
21:54 - frame
21:55 - lastly click into the stage bright and
21:58 - add
21:58 - when green flag clicked or ever
22:01 - broadcast
22:02 - hide path that's it
22:06 - run the project and voila the pathway
22:09 - has gone and yet
22:10 - you can see the cats are still behaving
22:13 - as if the colored pathway is still there
22:15 - that's because to them it is still there
22:18 - we are showing the pathway
22:19 - at the start of the frame and then
22:21 - hiding it again
22:22 - using a broadcast from the stage this
22:25 - will trigger after the cats have moved
22:27 - but before the screen is updated for us
22:29 - to see
22:30 - a neat trick that at least gets us to
22:32 - where we might want to be
22:35 - and this is where i leave you if you
22:38 - fancy seeing how far you can go with
22:40 - upgrading your maze
22:41 - then you can try to draw one lined up
22:43 - with the grid which lets you create
22:45 - something as cool as
22:46 - this note i have also set the cat script
22:51 - to point in the right direction as soon
22:53 - as they clone
22:55 - to do this just add a weight zero to the
22:58 - beginning of both
22:59 - the when i start as clones in the cat
23:01 - sprite
23:02 - and then check next direction and point
23:05 - in direction
23:06 - next door before beginning to wait until
23:09 - touching here
23:10 - and that's it well i hope you've enjoyed
23:14 - this tutorial
23:16 - if you have then please do smash the
23:17 - like button and leave a comment
23:19 - don't forget to subscribe to the channel
23:21 - to avoid missing my next exciting video
23:23 - but until that time thanks for watching
23:25 - and scratch on guys

Cleaned transcript:

hello fellow scratchers ever wondered how that enemy ai manages to move through a level navigating around corners skipping dead ends and finding that shortest route to the player i'm griff patch and today we will be delving into the world of enemy ai pathfinding you may be interested to know that the same pathfinding scripts that we're about to learn about are also used for calculating things like light flow in paper minecraft i wonder after you've watched this video whether you'll be able to tell me how they are linked drop me a comment if you know the answer i really love this project it looks so complex so how on earth do we go about creating it we'll begin with a blank new project and we're going to keep scratch cat this time they will be pleased we need him much smaller though so enter the value 30 into their size box and we'll also change the sprite name to cat next add a new sprite from the library i'll go for an apple and this will be our goal since scratchcat loves them so much set its size to 60 now the next step requires a little more creativity create a new sprite naming it maze and now we need to draw make sure your pen color is set to pure black for any walls and set the pen width to nice and chunky perhaps a width of now start by drawing a large rectangle around the border of the costume next draw a chunky maze leaving plenty of space around for the cat to navigate keeping the lines pure black now a device for starters making the maze similar size to the one i'm drawing here while we are working on our scripts the more complex maze i showed earlier will have to wait so with your simple maze drawn click into the code tab and add a when green flag clicked go to x y of zero by zero to center the maze on the stage so we want to find the shortest route between scratch cat and the apple we could start trundling off around the maze handling wall collisions and taking a stab at the best direction to turn at each point but bearing in mind that there are potential dead ends and worse looping corridors it would be best to plan our desired route in advance so create a new sprite and we'll name it path we are going to split the maze up into small square regions draw a 30 by 30 pixel tile just less than 8 large grid squares in width and height we can use the selection tool to drag it so it snaps to the center i've colored it a light pastel red with a saturation of around 10. next we draw an arrow pointing to the right make sure this is also pure black in color we're going to use this sprite to make a visual route or pathway through the maze in the code tab when green flag clicked show the arrow tile so have you ever noticed how it can be so much easier to solve a maze by starting at the end and working backwards this is exactly what we are going to do now so we start by going to apple point in direction zero which is up and go to back layer i'll just make sure scratch cat and the apple sprites are in good positions and then we'll run the project the tile should appear behind apple a good start to begin drawing a path we want to try and place a tile above the existing one so move forward by 32 steps that's one whole tile now we create a clone of ourselves and then quickly leaving the clone where it is we move ourselves back by minus 32 steps to where we started if i click that script we can see the new clone has appeared we want to do the same for all four possible directions around us the simplest way to do this is to add a turn clockwise by 90 degrees turn right and then run the same move script four times in a row this leaves us facing upwards once more having traveled full circle and has left a rather attractive diamond pattern around the apple with the arrows all pointing outwards in the direction of travel so let's wrap the moving script in a repeat for loop and we'll make a new custom block named try moving in all directions so mouthful and run without screen refresh that will contain this loop script to ensure all four clones get created together i'll drop a call to this custom block at the end of the green flag script so it runs when the project runs just test that to confirm it's still making the same pattern what we want to do now is continue these arrows outwards from the apple until they reach scratch cat over here but what about the maze walls if i place the apple next to a wall and run the script see how this arrow has appeared right over the wall well that's not right our paths should never cross a wall we can stop this by placing an if around the crate clone block here and ensure we are not touching black and only then create clone of myself running the project again confirms that this has worked as the offending arrow has been removed super okay now it's magic time i just know you're going to love this bit we've successfully coded a script that moves outwards checking for collisions so what if each new clone were to continue to do the same thing and each tried to spread out to their surrounding tiles and then those spread out again like the ripples on water moving outwards from the apple well let's find out drop a when i start as a clone block this will trigger for all four of the new tiles we just created so for now add in a wait one second this is just so that we can watch things happen you may actually want to use a smaller value than this and then simply add a try moving in all directions block to finish it off now look at this it's important can you see how running this script will create a clone and creating a clone will again run this script what we have created here is a recursive loop without anything to stop them recursive loops can run forever and they will really lag out your project but we'll come back to this in a second i've held off long enough i'm dying to run the project and see what we have created oh yes this is exactly what we wanted the tiles are now cloning themselves and spreading all around the maze flowing outwards from apple and even navigating around corners at some point they will certainly find scratch cat and just like solving a maze backwards we can then reverse the root and find our way back to the apple in fact i have an idea come into the costume editor and flip this arrow around to point left i can hold down shift as i rotate it to ensure it snaps to 45 degree increments there look with the arrows reversed the map suddenly reveals its true purpose if i want to take scratch cat from any place on this map to the apple the arrows show me the way to go let me move the apple and run the project again each time the map is generated it shows me the shortest route to get to the apple from any point on the map this is really useful it allows all the enemies on a level to seek you out using the same map okay i'm getting carried away i had a word of warning about this recursive loop so this script creates clones and the new clones in return run this script this could run forever and then wow super lag but we have two protections against this one scratch will not create more than 300 clones before it refuses to create any more and two we specifically don't create a clone if we are touching black which brings me to another really important point in our design remember how the arrows on our path tiles are also coloured black this was purposeful because it means that not only do we stop the tiles being placed on a maze wall but also a tile will not be placed down when another tile is already there otherwise they would just be stacking on top of each other and the script wouldn't get very far but the black color stops them black walls black arrows okay there's another little problem we need to solve here where the tiles are getting misaligned at the borders of the screen this is just down to scratch's sprite fencing we can fix it by setting the size to 300 before we move and then setting it back to 100 afterwards this allows them to go off screen and come back on again in exactly the same place i'll just confirm that that worked yes that's much better while we're addressing potential issues let's also add in an if around the initial try move script under the green flag here and make sure we are also not touching black we don't want to begin tracing roots if the apple starts in a bad place finally we should remove this weight one how fast do you think this map will generate without it here wow really fast is all i can say in fact it's pretty instantaneous exciting stuff however this is all nice and good but how do we get scratch cat to follow these arrows hmm well the simplest way that i could think of is to color code our arrows go into the costume tab and rename the first costume to up i'm happy to keep this one's color the same now duplicate the costume naming it right and change the color to be green a color value of 35 will do then do the same for down with a color of blue around 55 and left with a color of purple around 80. you can choose whatever colors you want of course now back in the scripts switch costume to up after we point in direction zero and then use a next costume after turning 90 degrees to the right this will cycle through the costumes as we rotate by 90 degrees run the project now and we are greeted by a lovely display of coloured tiles quite beautiful really i like it and what's more i just know scratchcat will love it too let's teach him to read it click into the scratchcat sprite in the costume editor create a new costume named mask and draw a filled square perfectly centered in the painting area mine is around 48 by 48 pixels the size of 12 by 12 grid squares now remember also we shrunk scratch cap by 30 percent so this square will also be shrunk down if you are using a different size sprite you'll need to size the square accordingly now back in the scripts we want to be able to track what color is under this little square mask and turn scratch cat accordingly so create a new custom block named get next direction and switch right away to the mask costume now check if with an if else it is touching color with the project running we can click the color swatch and pick the color from any tile pointing upwards now we could use a point in direction block here but instead let's make a new variable named next du for this sprite only and set that to direction zero instead that's up duplicate the if else block three more times and we'll check for the right color with a direction of 90. down with 180 and left with minus 90. all four of these colors must match the up right down and left colors if we take this new block add it to a point in direction of nextdir and then a switch costume back to costume 1 then we can click the script to run it and we should find that our cat ends up pointing in the same direction as whatever arrow tile is behind them super i'll just do this a few more times to check cool let's get scratch cat moving make another block named follow path leave the run without screen refresh clear as this script will keep running while the cat is moving around so to start our cat's journey in a forever loop move forward by two steps and then after that place the get next direction point in direction and switch costume scripts we just created underneath lastly we want a when green flag clicked to kick off the follow path script great let's run the project and see what we have made and off trundle scratch cat this is working surprisingly well ha things go a little wrong once he reaches the apple oops more on that later let's add a key to reposition scratch cat add in a when space key pressed go to mouse pointer now i can just tap the spacebar and have them appear at my mouse and he immediately sets off in the direction of the apple once more that's neat where this project has room for improvement is in our cat's turning you see at present how he turns so quickly that he often walks down the edge of a tile and this can lead to him looking like he's overlapping the walls too how about we kill two birds with one stone and smooth out his turning i've scripted many ways of allowing sprites to turn smoothly in my years on scratch but while working on this tutorial i stumbled upon a clever trick that does it really simply in just a couple of blocks we start with a sprite pointing in direction a say 90 degrees in my example and b is the direction we want to face minus 160 degrees but we want a the cat to turn towards b smoothly and the problem is we don't want to end up rotating the long way round a clever trick is to rotate the entire problem so that b is pointing upwards we can do this by turning left by the value of b minus 160. this leaves us with a much simpler problem to solve the cat is now facing in the direction minus 110 and we can see that we want to turn to face upwards well that's easy we just need to turn right by 110 that's just the inverse of the new value a which is the current direction of scratch cat to turn smoothly in that direction we just divide this number up into smaller chunks let's see if we can implement that start by creating a new custom block named turn towards with a numeric input of direction a label with smoothing followed by another input named smooth we turn left by the input direction we want to point in that's the red one then we must turn back right by the same input direction again so that we are pointing back towards a after all this is where we are turning from and then we subtract the current sprites direction reporter that's the blue one but divide it by smooth so that we only move a fraction towards the goal direction and that my friend is it what a neat little solution i really like that just be careful to use the right direction variables here let's use this script simply replace the point in direction with our new turn towards block and use a smoothing value of six run the project now and bask in the beauty of that smooth rotation how very clever all this pressing space makes me think it would be better if each press created its own scratchcat clone we should be able to do that pretty easily click into the stage sprite and add a when space key pressed create clone of cat triggering from the stage avoids accidentally creating clones from other clones now back into our cat sprite we bring in a when i start as clone and move the go to mouse pointer block into there instead we can delete the old when space key pressed from here now then lastly we make use of the follow path block once more for this clone run the project and now with each press of the space key a fresh new cat spawns happily trundling off towards the apple yeah lucky that that apple is so large there's plenty to go round i have to say that these cats are rather building up around the apple now i'd like to do something about that perhaps we can just fade them out once they reach their goal add a hide block to the when green flag clicked and delete the follow path block we'll only use the clones from now on to represent the moving cats now come down to the when i start as clone receiver and we'll duplicate this so that we have two events triggering off the start of each clone remove the follow path from the first receiver and replace with a show block then we'll wait until either we are touching apple or touching the edge of the screen the touching edge is just a sanity check in case we lose a cat off the beaten track then once it's reached the end of the goal we repeat 10 and change ghost effect by 10 to fade the cat away finally delete this clone for the second when i start as clone just remove the go to mouse pointer we only want to keep the follow path script nothing else by having these scripts separate we can keep the cat moving while we'll simultaneously fade them out let's give it a test smack the space key and watch the cats gracefully fading away when they reach their target excellent work now just because it's extra fun let me show you how we can trigger a change of goal when the apple is moved click into the apple's sprite add a when green flag clicked and set drag mode to draggable that's in the sensing category we'll then loop forever but right away we want to wait until the mouse is down then we broadcast a new message reset path followed by another broadcast to find path let's hook up those events click into the cat sprite little note try to ignore those apple x and y variables that have appeared on the stage i was trying something else and decided against it you won't need them we are going to add a when i receive reset path and then simply delete this clone this keeps things running smoothly in the demo by cleaning up the old cats now click into the path sprite again we add a when i receive reset path and simply delete this clone to take away the previous pathways next add a when i receive find path make a new custom block named find path run without screen refresh and move all the scripts from when the green flag was clicked hat block into there ensuring to add the find path script back under the when green flag clicked and also under the new when i receive find path receiver now then this is a really fun test you're going to love this now run the project in full screen mode and grab the apple and drag it around the maze how awesome is this the pathfinding is calculating in real time and all the arrows are updating dynamically to show the best route oh my gosh that is so cool then i can still press the space bar and drop some cats wow what an awesome little project this is turning out to be now you may ask how could i use this in a game okay so i created this project the way it is to avoid the technicalities of working with lists and 2d grid systems but in practice lists and grids would be the way to go to support larger or more detailed mazes and offscreen enemies too it would also run even faster than it does now importantly it would also mean that these arrow tiles would not have to be visible that would be nice however we can't do that this time but i do have one trick up my sleeve that will at least allow us to hide the arrows so if you want to try it then go into the path sprite and add a when i receive hide path and hide the sprite then under the when i start as a clone add a forever loop and show this gets in really quickly before most other scripts run in a game frame lastly click into the stage bright and add when green flag clicked or ever broadcast hide path that's it run the project and voila the pathway has gone and yet you can see the cats are still behaving as if the colored pathway is still there that's because to them it is still there we are showing the pathway at the start of the frame and then hiding it again using a broadcast from the stage this will trigger after the cats have moved but before the screen is updated for us to see a neat trick that at least gets us to where we might want to be and this is where i leave you if you fancy seeing how far you can go with upgrading your maze then you can try to draw one lined up with the grid which lets you create something as cool as this note i have also set the cat script to point in the right direction as soon as they clone to do this just add a weight zero to the beginning of both the when i start as clones in the cat sprite and then check next direction and point in direction next door before beginning to wait until touching here and that's it well i hope you've enjoyed this tutorial if you have then please do smash the like button and leave a comment don't forget to subscribe to the channel to avoid missing my next exciting video but until that time thanks for watching and scratch on guys
