With timestamps:

00:02 - hello fellow scratchers and have i got
00:05 - another epic scratch tutorial for you
00:07 - today you requested it and here it is
00:10 - health bars featured in practically all
00:12 - of our favorite games health bars are
00:15 - perfect for conveying health damage
00:17 - giving the player a sense of how they
00:18 - are doing and where to concentrate their
00:20 - focus to win their battle
00:22 - our game lemonoids is a great case in
00:24 - point these large lemons take a lot of
00:26 - damage but you can't tell how much or
00:29 - little health they have until that is
00:32 - they explode so the aim of this tutorial
00:34 - will be to create a reusable
00:36 - backpackable sprite that can be dropped
00:39 - into any scratch project to let us
00:41 - quickly add health bars to any given
00:43 - sprite or clone oh yeah challenge
00:46 - accepted let's get scratching
00:49 - to help us develop our health bars let's
00:52 - start a new project and throw together
00:54 - the most basic of games scratchy you
00:57 - have a role to play you will stay we'll
00:59 - just rename you as cat
01:01 - i want three cat clones to wander around
01:04 - the stage so when flag clicked we hide
01:07 - yes this is one of those clone factories
01:09 - i've talked about before where the
01:11 - original sprite stays hidden away
01:14 - now repeat three and create a clone of
01:16 - myself
01:17 - these three cat clones will be created
01:19 - so we need to do something with them
01:22 - when i start as a clone we'll begin by
01:25 - using a go to random position block each
01:28 - clone will then appear in a different
01:29 - location
01:30 - then point in direction
01:33 - to get a random direction we use a pick
01:35 - random with the values minus 180 to 180
01:40 - great finally we have to remember the
01:43 - sprite was originally hidden so pop in a
01:46 - show block
01:47 - cool
01:48 - let's just give that a test
01:50 - oh sweet each click of the green flag
01:52 - has our three cats randomly scattered
01:54 - around the screen pointing in all sorts
01:56 - of directions but just to make this a
01:59 - good test we might as well add some
02:01 - motion too
02:02 - after the show block drop in there
02:04 - forever loop
02:06 - then we move in steps
02:09 - perhaps three steps will do
02:11 - and just to save time we'll use an if on
02:14 - edge bounce block
02:16 - simple
02:17 - and yet that does the trick this will
02:20 - make a great test bed for our health
02:23 - bars
02:26 - okay we want the health bars to be
02:29 - backpackable right
02:30 - so click the paint a new sprite button
02:33 - and we'll name this sprite
02:35 - health bar
02:37 - we need some kind of health bar costume
02:39 - to get us started i'm going for a green
02:42 - fill
02:43 - with no outline
02:46 - i'm going to draw a rectangle but first
02:48 - zoom right in like so
02:50 - you want to be quite accurate here so
02:53 - we'll use these grid squares as our
02:55 - guide
02:56 - starting at the center of the canvas
02:58 - count five squares to the left and one
03:01 - square up
03:02 - so we will begin drawing from here click
03:05 - and drag a rectangle
03:07 - 10 squares across and one square high
03:12 - once drawn your costume should read 40
03:15 - by 4 pixels
03:17 - now using the selection tool we can drag
03:19 - the rectangle so that it snaps perfectly
03:22 - to the center of the canvas
03:24 - there we go
03:26 - and now with the shape still selected
03:29 - up the outline width to 4
03:32 - but i'm going to change the color to
03:34 - gray
03:36 - next step is to copy the shape by
03:38 - clicking the copy button
03:39 - and then right afterwards click paste
03:43 - now we have two copies of the same shape
03:45 - great set the second rectangle's outline
03:48 - back to transparent and then drag it
03:50 - back till it snaps again to the center
03:53 - of the canvas over the first rectangle
03:56 - whoa that may have seemed like a bit of
03:58 - overkill to get us to where we are but
04:00 - i'm just trying to ensure that we can
04:02 - all get this looking beautiful and
04:04 - aligned for the final project
04:06 - this looks fine we'll come back to these
04:08 - costumes again later but this is enough
04:10 - to get us started
04:12 - so now for the initial coding okay
04:14 - navigate to the coding tab
04:16 - first we set up this sprite
04:18 - when flag clicked and this is another
04:21 - cloning factory so hide this sprite
04:24 - now let's assume that each cat sprite
04:26 - will clone its own health bar
04:28 - in which case we can drag in a when i
04:30 - starters clone to trigger for each new
04:33 - health bar we display
04:34 - first thing we'll need to do then is
04:36 - position the new health bar on top of
04:38 - the cat that's cloning it
04:42 - go to
04:43 - cat
04:44 - yeah right no this isn't going to work
04:47 - we have three cat sprites and scratch
04:50 - doesn't let us select which of these
04:51 - three we are trying to go to
04:54 - this is a problem we will have to find
04:56 - another way of getting the position of
04:58 - the cat sprite that cloned us inevitably
05:00 - this almost always entails using a
05:03 - scratched list in some way or other as
05:05 - we will need to support passing a number
05:07 - of bits of information between sprites
05:10 - like the x and y position of each cat
05:12 - for example
05:13 - so let's make this new list naming it
05:17 - healths
05:18 - and this is important make sure it's
05:20 - created for all sprites we need this
05:24 - list to be shared between all sprites so
05:26 - that the health bar can see the values
05:28 - put in the list by another sprite
05:31 - now before we move away from this sprite
05:33 - it's good practice to always initialize
05:35 - your variables and lists when your
05:37 - project starts pop a delete all of
05:40 - healths here under the green flag script
05:44 - if you don't do this you may find you
05:46 - get unintended and hard to explain bugs
05:48 - down the line ever seen those projects
05:50 - that say press this green flag twice to
05:52 - play yeah not initializing variables at
05:55 - startup is often the cause
05:58 - great click back into our cat sprite
06:02 - we're going to begin by creating those
06:04 - health bar clones so find some free
06:06 - space and drop in a create clone of
06:09 - block
06:10 - but rather than cloning ourselves now we
06:13 - will clone a new health bar sprite
06:17 - but we want to somehow tell this clone
06:19 - where the cat is on the screen this
06:22 - information we will simply add to our
06:24 - new list starting with the x position of
06:26 - this cat
06:29 - and then we do the same for the y
06:31 - position
06:34 - there do you see what we are doing if we
06:36 - click these ad blocks to run them you'll
06:38 - see the x and y positions get added to
06:40 - this empty list like so
06:42 - and this happens before we then create
06:45 - the new health bar clone that means that
06:48 - the new clone will be able to pick up
06:50 - these values when it gets created and if
06:53 - we happen to have more than one health
06:55 - bar cloned at once click the add block
06:57 - again then we get another set of x and y
07:00 - positions added to the list that's
07:02 - perfect
07:03 - let's not leave these scripts hanging
07:05 - around we'll wrap them in a custom block
07:08 - make a new block and name it show health
07:12 - or show health bar if you don't mind it
07:14 - being more verbose i don't like long
07:16 - lines of code in scratch so i'll keep
07:18 - mine shorter run without screen refresh
07:21 - and okay and we simply attach the define
07:24 - block to our new health bar spawning
07:26 - script down here yeah this is going to
07:29 - work great our next decision is where in
07:32 - the cat sprite scripts should we use
07:34 - this new show health block
07:37 - well since it's cloning a new health bar
07:40 - we might assume it should do so before
07:42 - the main movement forever loop begins
07:44 - here
07:45 - yeah we'll run with that idea now each
07:47 - of the three cloned cats will spawn its
07:50 - own health bar but if we click back into
07:52 - the health bar sprite we now need to use
07:55 - the x and y positions in the health's
07:57 - list to position each clone
08:00 - right so throw away the old go to cat
08:03 - meh
08:04 - and we'll replace it with a set x2
08:10 - and a set y2 block
08:13 - the x position is the first item in the
08:16 - health's list
08:21 - and the y position the second item
08:24 - set y to item
08:26 - two of healths
08:29 - okay that's fine but if a second health
08:31 - bar sprite is cloned
08:33 - it will need to read positions three and
08:35 - four right
08:37 - well it would except after reading in
08:39 - these two items we are now going to
08:41 - delete them from the list to tidy up
08:44 - delete one of health's
08:46 - that is delete item one of health
08:48 - and with that item gone all the other
08:51 - items shift up
08:52 - so to delete what was item 2 we actually
08:56 - just delete item 1 again job done
08:59 - so with the new health bar positioned we
09:01 - should make sure it is shown
09:03 - start with a go to front layer to ensure
09:06 - it's displayed in front of everything
09:08 - else
09:08 - and then show
09:11 - wonderful because that means we are in a
09:13 - good place to give this project a test
09:15 - punch that green flag and let's see what
09:18 - we have made
09:20 - okay first for the positives we are
09:22 - successfully cloning one health bar per
09:24 - cat and what's more the health bars do
09:27 - initially appear where each cat spawns
09:30 - clicking the green flag over and over
09:31 - shows this to be true
09:33 - but the problem we face is that the
09:35 - health bars stay where they are and the
09:37 - cats move off we need to somehow tie
09:40 - these sprites positions together
09:43 - let's jump back into the cat sprite
09:45 - so we initially show and thus clone our
09:48 - health bars here this is after the cat
09:50 - sprite itself is cloned but before it
09:53 - starts to move around and therein lies
09:55 - the problem to keep the health bar
09:57 - tracking around with the cat we'd need
09:59 - to somehow keep feeding the healths list
10:02 - with the up-to-date positions of each
10:04 - cat
10:05 - it's a problem because that generally
10:06 - would mean quite a lot of coding to
10:08 - manage creation linkage updates and
10:11 - deletion of the list data and their
10:13 - respective clones but this is supposed
10:16 - to be a simple tutorial so i have a most
10:19 - interesting alternative
10:22 - simply move the health bar block from
10:24 - above the forever loop to be the last
10:26 - block inside the forever loop instead
10:30 - now before you scream but that will
10:31 - clone loads of health bars
10:34 - don't panic run the project
10:36 - that will create loads of health bars
10:39 - wow funky
10:41 - the good news here is that the health
10:43 - bars are following the cats it's just
10:45 - that doing so is at the cost of creating
10:47 - a new clone each time and well
10:50 - all these clones left behind
10:53 - as soon as a new clone is created the
10:55 - old one is superfluous and it needs to
10:57 - be deleted
10:59 - well to do that we need to return to the
11:01 - health bar sprite
11:03 - so what we are saying is right after the
11:05 - health bar is cloned
11:07 - we want to delete it again
11:09 - well that's not quite right because if
11:11 - we run that you'll see that the clones
11:13 - are deleted so quickly that we never
11:15 - even get to see them on the screen no
11:16 - that is too soon
11:18 - what we need is to wait until scratch
11:21 - has displayed the clone and then delete
11:24 - it
11:25 - this trick you've probably seen before
11:27 - we just drop in a weight block but wait
11:29 - for a very suspicious zero seconds
11:33 - how will that help well no matter how
11:35 - long you wait for in scratch using a
11:37 - weight will always pause long enough for
11:39 - the screen to refresh
11:41 - thus our health bar will appear
11:44 - before right away being deleted ready
11:46 - for the next frame
11:48 - run the project
11:50 - oh yeah baby now we are rocking you
11:53 - would never know that these health bars
11:55 - were in fact not moving but that we are
11:57 - continually cloning new ones the timing
11:59 - is such that it appears as a perfect
12:01 - single tracking animation i just love it
12:04 - we can hide the health list now no need
12:07 - to keep that in view
12:09 - so with the health bars moving around
12:11 - correctly we can focus on getting them
12:13 - to function like real health bars
12:15 - showing different health levels
12:16 - depending on the current health of each
12:18 - sprite
12:20 - but just before we do that i just want
12:22 - to add in one more tweak it doesn't
12:24 - really apply to this three cat test game
12:26 - but sometimes the sprites with health
12:28 - bars might move off the screen if that
12:31 - happens we don't want to be displaying
12:33 - this health bar any longer so
12:35 - if
12:37 - not
12:38 - touching edge
12:44 - if not touching the edge we are on
12:46 - screen
12:47 - this is the good case
12:48 - then we can do the go to front show and
12:50 - wait but if not then we will drop
12:53 - through and just delete the health bar
12:55 - right away
12:58 - just test that it still looks okay
13:00 - yep just the same great
13:03 - so let's check out the health bar
13:05 - costume
13:07 - at present we have only one costume and
13:10 - it represents a full health
13:12 - but as the sprite gets damaged we will
13:14 - need to show this health bar depleting
13:17 - okay
13:18 - let me step you through how i would draw
13:20 - these costumes
13:22 - we'll begin by preparing this initial
13:24 - costume select the inner green rectangle
13:27 - and then click the copy button
13:30 - then right away hit paste and we end up
13:32 - with two rectangles there
13:34 - we can select the first one again and
13:36 - change its fill color to black
13:39 - that's the depleted health color
13:41 - now grab that nice green rectangle and
13:43 - snap it back to the center of the
13:45 - drawing canvas it should then fit
13:47 - perfectly over the black one
13:50 - right the first costume is going to
13:52 - represent minimal health
13:54 - drag the right hand edge of the green
13:57 - bar to the left until it covers just one
14:00 - grid square that looks good but it would
14:03 - be even better if we colored it red
14:06 - oh yes that's more like it so on we go
14:10 - duplicate the costume and we'll expand
14:12 - the red rectangle by another grid square
14:16 - not only that but we'll also shift the
14:19 - color to the right just a bit
14:22 - the idea is that we'll slowly bring it
14:24 - back across to the green color when
14:26 - health is full
14:28 - and we repeat this process duplicating
14:30 - the costume stretching across by another
14:33 - grid square and shifting the color over
14:35 - and over keep doing this until we
14:37 - approach a full health bar and the color
14:40 - should reach fully green you should find
14:43 - this happens at costume number 10
14:46 - splendid but don't stop there we
14:49 - actually need one more costume
14:52 - the costume 11 will be for our fully
14:55 - empty health bar so just select the
14:58 - green bar and delete it all together
15:01 - so why did we add the empty costume to
15:03 - the bottom here wouldn't it make more
15:05 - sense to have it at the top so that all
15:07 - the costumes were in order from empty to
15:09 - full
15:10 - yeah we could do that but one little
15:13 - scratch quirk can make this order work
15:15 - better we all know that sprite costumes
15:18 - begin at costume number one well an
15:21 - empty health bar surely would make more
15:23 - sense at costume zero don't you think
15:26 - well
15:27 - watch this
15:28 - if we switch costumes and i'll just pop
15:30 - in an edition block so that i can use
15:32 - numbers in here
15:34 - we switch to costume number one
15:36 - there we go the first costume appears
15:39 - but it just so happens that when you
15:40 - switch costumes to costumes less than
15:43 - one scratch wraps around and start
15:46 - cycling back from the last costume again
15:49 - well that means costume zero is actually
15:52 - the last costume in our list of costumes
15:54 - so ta-da by having the empty costume as
15:58 - the last costume we literally have also
16:00 - got it as costume02 and that will make
16:03 - scripting really nice and easy clever
16:06 - trick right
16:07 - okay return that back to the normal size
16:10 - and we'll add the switch costume block
16:12 - to the right after we position the
16:14 - health bar here
16:17 - we are going to tell this sprite how
16:19 - much health the cat sprite has
16:21 - and we'll do this in the same way we
16:23 - tell it the position using the health's
16:25 - list
16:27 - this will be item 3 of health's yeah
16:30 - another item means we need a third
16:32 - delete block still only deleting item 1
16:35 - though but before we make use of this we
16:38 - should consider how health bars work
16:41 - here is a little weedy enemy he's got
16:43 - full health that's fine but look here
16:46 - comes a boss and boy they have oh so
16:50 - much more health so do we draw his
16:52 - health like this
16:54 - no of course not we draw the health bar
16:57 - just the same for both enemies it's just
17:00 - that the weedy enemies bar will go down
17:01 - a lot faster so health bars are really
17:05 - health percentage bars at 100 they are
17:08 - full and at zero well they are empty we
17:11 - can represent empty as zero and full as
17:14 - one
17:16 - so what does this mean for our change of
17:18 - costume here
17:19 - it means a health of one should display
17:22 - costume number ten
17:23 - and that's the full health costume so we
17:26 - just need to multiply item three by
17:29 - ten
17:30 - of course if you want to use more or
17:32 - less costume levels for your health
17:33 - sprite then just adjust this number
17:35 - accordingly
17:36 - great quickly now click back into the
17:39 - cat sprite i am dead excited to get this
17:42 - health working
17:43 - okay the define show health script
17:46 - we need to add the third item this will
17:49 - be the cat's health but we don't yet
17:51 - have a health to set
17:53 - well let's think ahead right click on
17:56 - the define block and choose edit
17:59 - we want to show the health at a given
18:01 - level so add a new input named
18:04 - health
18:05 - but rather than have each cat pass this
18:07 - in as a percentage we'll simplify this
18:09 - by adding the label of
18:11 - and another input for max that is max or
18:15 - total health
18:17 - and while we are here let's also add in
18:20 - some more features
18:22 - the label offset y
18:26 - and an input of y
18:28 - this will be used to bring the health
18:30 - bar above or below the cat sprite rather
18:32 - than being splatted right in the middle
18:34 - yeah that was never looking good so
18:36 - first off let's sort out the health
18:39 - we need a divide block to calculate the
18:41 - sprite's health as a percentage we
18:43 - simply divide the input health
18:46 - by max health
18:48 - and that will always give us one for
18:50 - full health and zero for no health and
18:52 - this y-offset input we're going to just
18:54 - add this to the y position of the sprite
18:57 - like so
18:59 - of course we now need to fill in the
19:01 - show health block over here with some
19:03 - input values
19:04 - for starters we'll assign each cat 10
19:07 - out of 10 for health and try an offset
19:10 - upwards of 40 pixels
19:13 - right this is it pummel that green flag
19:16 - oh yes so right off we can see that the
19:19 - health bars have moved up above each cat
19:21 - that's cool but of course if you want
19:23 - the bar below then you might just switch
19:25 - to use an offset of say -40 instead
19:29 - there yay
19:30 - just play around with that until the bar
19:32 - is positioned where you want it
19:34 - next let's try reducing the health by
19:36 - half to five out of ten
19:40 - oh yeah so cool oh zero out of ten it's
19:44 - game over for these cats this is
19:46 - wonderful we can stuff in any health
19:48 - values here and a health bar's update to
19:50 - reflect the cat's health levels
19:53 - so we are almost there let me just show
19:55 - you how we can use this in a game
19:58 - to begin with we need a health variable
20:02 - make a new variable health and it must
20:05 - be for this sprite only so that each cat
20:07 - has its own health level
20:09 - then when the cat is cloned we set
20:12 - health to let's say three
20:14 - so a cat can take three hits max
20:17 - then we pass the health variable in as
20:19 - the first input to the show health block
20:21 - like so and make sure to change the of
20:24 - to reflect the fact that the max health
20:27 - is now three
20:28 - so they start with three out of three
20:30 - health
20:31 - to represent the cats getting damaged
20:33 - when this sprite's clicked
20:35 - just change health by minus one
20:40 - shall we give that a test oh you're in
20:42 - for it now cats click you and again
20:46 - and again
20:47 - now that worked just as planned three
20:49 - clicks and they are all out of health
20:51 - i guess it would make sense at this
20:53 - point to delete the clone yeah why not
20:55 - if health is less than one
21:00 - delete this clone
21:04 - click click click
21:06 - click click click
21:07 - click click click i win yay
21:10 - well you get the idea right so we have a
21:14 - really cool working health bar system
21:16 - going on here and the aim was to make
21:18 - this a really easy to backpack sprite so
21:21 - that it could be brought into any game
21:23 - well we're almost there the only issue
21:25 - is that this show health script is not
21:28 - in the health bar sprite so if we were
21:31 - to backpack it now we would be missing
21:33 - an important part of the scripts
21:35 - well no problem drag a copy of the
21:38 - define block into the health bar sprite
21:42 - now if you look at the finished health
21:43 - bar sprite everything is contained and
21:46 - ready for backpacking and although this
21:48 - show health bar script is not used in
21:50 - this sprite really it is now easy to
21:52 - drag it out into whichever sprite we
21:54 - need to use it in
21:56 - to demonstrate what i mean let's take
21:58 - the health bar drag it into our backpack
22:01 - and we'll add the health bars to
22:03 - lemonoids
22:04 - brilliant we are ready to go load up
22:07 - your lemonoids project and if you
22:09 - haven't followed that tutorial yet then
22:11 - no worries it's only three episodes so
22:13 - you could catch up otherwise just strap
22:15 - in and enjoy the ride take it all in and
22:17 - try adding these to your own games in a
22:19 - similar fashion so at present the player
22:22 - doesn't have health a bit of an
22:23 - oversight perhaps we'll have to come
22:25 - back and remedy that in another episode
22:28 - however these unfortunate lemons they do
22:30 - have health so we'll start there and add
22:32 - health bars to the lemons
22:34 - our first job is to open up our
22:36 - backpacks and drag the health bar sprite
22:39 - into the game
22:42 - next we need to take the define show
22:44 - health block and drop it into the lemon
22:48 - sprite
22:50 - cool
22:51 - now you can drop this script into as
22:53 - many sprites as need health bars it
22:56 - doesn't have to be just one
22:58 - let's click into the lemon sprite
23:01 - just need to tie that up a bit
23:03 - there that's better now we need to
23:05 - locate the main lemon movement scripts
23:08 - find with me the when i start as clone
23:10 - script
23:11 - here it is a forever loop containing all
23:13 - the movement blocks so if we scroll down
23:16 - to the bottom the best place to bring in
23:18 - our show health block would be right
23:20 - here after all the movement is complete
23:23 - the health bar is straightforward as we
23:25 - already have the health variable for
23:27 - this purpose
23:29 - the max health is a little bit more
23:30 - tricky we don't have one yet and what's
23:33 - more different size lemons have
23:36 - different amounts of health so to get
23:38 - around that we'll make a new variable
23:40 - named
23:41 - max health
23:43 - and of course it's for this sprite only
23:47 - we can drop it in on the right of the of
23:50 - health of max health that's right we
23:53 - just need to be careful to actually set
23:55 - max health don't we just before we do
23:58 - though let's also set the offset y to
24:01 - negative 30 so the health bar appears
24:03 - below the lemon
24:05 - okay so scroll up to the define new
24:08 - enemy script
24:10 - this is where the lemon clones are being
24:12 - created we also set the health to 15
24:15 - right here
24:16 - so right after that set max health to
24:18 - match it 15. or better still just use
24:22 - the health verbal
24:24 - wow that wasn't so hard shall we give it
24:26 - a test
24:27 - yeah hey
24:28 - look at that the lemon is looking very
24:31 - tough and with its own health bar and
24:33 - shooting it reduces its health nicely
24:36 - let's destroy it
24:38 - and now this is something do you see a
24:40 - problem each small lemon is showing us
24:42 - having very minimal health right away
24:45 - now you may like this but my intention
24:48 - is that their health bars reset back to
24:50 - full
24:51 - the reason they are showing low is that
24:53 - even the smaller lemons currently have a
24:54 - max health of 15.
24:57 - so where do we split these lemons
24:59 - find the define enemy hit script
25:02 - scroll right down until you see the
25:03 - delete this clone
25:05 - this is the point where the lemon splits
25:07 - into smaller lemons health has already
25:09 - been set to the reduced amount just
25:11 - above so we can just set max health to
25:16 - the newly assigned health value
25:20 - testing again
25:21 - and now after they split each lemon's
25:23 - health resets and we have a better
25:25 - representation of lemon health
25:27 - ah but perhaps having the health bar on
25:30 - every lemon is a little ott
25:32 - some games like to hide the health bar
25:34 - when the enemy is on full health or we
25:36 - could do that but i quite like seeing
25:38 - the health bar on all the powerful
25:40 - enemies so instead find the when i start
25:43 - as a clone script
25:45 - and wrap our show health block in an if
25:47 - block
25:50 - and will only show the health bar on
25:51 - enemies with a max health greater than
25:54 - 1. that is lemons that need more than
25:56 - one hit to be destroyed
25:59 - play testing again here we go
26:04 - and now this this is a nice compromise
26:08 - the larger lemons have health bars and
26:09 - the smaller lemons don't
26:11 - brilliant all that's missing now is to
26:14 - add a health bar under the player 2. do
26:17 - you think you know how to add that
26:20 - well if not don't worry because i'll be
26:22 - making the official episode 4 soon
26:23 - enough and that will surely be a feature
26:26 - but i do hope you don't stop here i want
26:28 - to see these health bars in all sorts of
26:30 - other projects it's just too easy now
26:33 - for you to include them you'll find a
26:35 - link to the scratch studio for this
26:36 - tutorial in the video description so you
26:39 - simply must submit your game so that i
26:41 - can check them out that would be amazing
26:44 - let me know in the comments how you get
26:45 - along whether the cunning clone spamming
26:47 - approach is working for you or if you
26:49 - have any problems because there's so
26:51 - many ways to go about these things and
26:53 - i'm quite up to explaining other
26:54 - approaches in the future
26:56 - but for today that's all we've got time
26:59 - for if you've enjoyed the video smash
27:01 - the like button and don't forget
27:03 - subscribe to the channel so as not to
27:04 - miss my next exciting video thank you
27:07 - for watching have a fantastic week ahead
27:09 - and scratch on guys
27:16 - [Music]

Cleaned transcript:

hello fellow scratchers and have i got another epic scratch tutorial for you today you requested it and here it is health bars featured in practically all of our favorite games health bars are perfect for conveying health damage giving the player a sense of how they are doing and where to concentrate their focus to win their battle our game lemonoids is a great case in point these large lemons take a lot of damage but you can't tell how much or little health they have until that is they explode so the aim of this tutorial will be to create a reusable backpackable sprite that can be dropped into any scratch project to let us quickly add health bars to any given sprite or clone oh yeah challenge accepted let's get scratching to help us develop our health bars let's start a new project and throw together the most basic of games scratchy you have a role to play you will stay we'll just rename you as cat i want three cat clones to wander around the stage so when flag clicked we hide yes this is one of those clone factories i've talked about before where the original sprite stays hidden away now repeat three and create a clone of myself these three cat clones will be created so we need to do something with them when i start as a clone we'll begin by using a go to random position block each clone will then appear in a different location then point in direction to get a random direction we use a pick random with the values minus 180 to 180 great finally we have to remember the sprite was originally hidden so pop in a show block cool let's just give that a test oh sweet each click of the green flag has our three cats randomly scattered around the screen pointing in all sorts of directions but just to make this a good test we might as well add some motion too after the show block drop in there forever loop then we move in steps perhaps three steps will do and just to save time we'll use an if on edge bounce block simple and yet that does the trick this will make a great test bed for our health bars okay we want the health bars to be backpackable right so click the paint a new sprite button and we'll name this sprite health bar we need some kind of health bar costume to get us started i'm going for a green fill with no outline i'm going to draw a rectangle but first zoom right in like so you want to be quite accurate here so we'll use these grid squares as our guide starting at the center of the canvas count five squares to the left and one square up so we will begin drawing from here click and drag a rectangle 10 squares across and one square high once drawn your costume should read 40 by 4 pixels now using the selection tool we can drag the rectangle so that it snaps perfectly to the center of the canvas there we go and now with the shape still selected up the outline width to 4 but i'm going to change the color to gray next step is to copy the shape by clicking the copy button and then right afterwards click paste now we have two copies of the same shape great set the second rectangle's outline back to transparent and then drag it back till it snaps again to the center of the canvas over the first rectangle whoa that may have seemed like a bit of overkill to get us to where we are but i'm just trying to ensure that we can all get this looking beautiful and aligned for the final project this looks fine we'll come back to these costumes again later but this is enough to get us started so now for the initial coding okay navigate to the coding tab first we set up this sprite when flag clicked and this is another cloning factory so hide this sprite now let's assume that each cat sprite will clone its own health bar in which case we can drag in a when i starters clone to trigger for each new health bar we display first thing we'll need to do then is position the new health bar on top of the cat that's cloning it go to cat yeah right no this isn't going to work we have three cat sprites and scratch doesn't let us select which of these three we are trying to go to this is a problem we will have to find another way of getting the position of the cat sprite that cloned us inevitably this almost always entails using a scratched list in some way or other as we will need to support passing a number of bits of information between sprites like the x and y position of each cat for example so let's make this new list naming it healths and this is important make sure it's created for all sprites we need this list to be shared between all sprites so that the health bar can see the values put in the list by another sprite now before we move away from this sprite it's good practice to always initialize your variables and lists when your project starts pop a delete all of healths here under the green flag script if you don't do this you may find you get unintended and hard to explain bugs down the line ever seen those projects that say press this green flag twice to play yeah not initializing variables at startup is often the cause great click back into our cat sprite we're going to begin by creating those health bar clones so find some free space and drop in a create clone of block but rather than cloning ourselves now we will clone a new health bar sprite but we want to somehow tell this clone where the cat is on the screen this information we will simply add to our new list starting with the x position of this cat and then we do the same for the y position there do you see what we are doing if we click these ad blocks to run them you'll see the x and y positions get added to this empty list like so and this happens before we then create the new health bar clone that means that the new clone will be able to pick up these values when it gets created and if we happen to have more than one health bar cloned at once click the add block again then we get another set of x and y positions added to the list that's perfect let's not leave these scripts hanging around we'll wrap them in a custom block make a new block and name it show health or show health bar if you don't mind it being more verbose i don't like long lines of code in scratch so i'll keep mine shorter run without screen refresh and okay and we simply attach the define block to our new health bar spawning script down here yeah this is going to work great our next decision is where in the cat sprite scripts should we use this new show health block well since it's cloning a new health bar we might assume it should do so before the main movement forever loop begins here yeah we'll run with that idea now each of the three cloned cats will spawn its own health bar but if we click back into the health bar sprite we now need to use the x and y positions in the health's list to position each clone right so throw away the old go to cat meh and we'll replace it with a set x2 and a set y2 block the x position is the first item in the health's list and the y position the second item set y to item two of healths okay that's fine but if a second health bar sprite is cloned it will need to read positions three and four right well it would except after reading in these two items we are now going to delete them from the list to tidy up delete one of health's that is delete item one of health and with that item gone all the other items shift up so to delete what was item 2 we actually just delete item 1 again job done so with the new health bar positioned we should make sure it is shown start with a go to front layer to ensure it's displayed in front of everything else and then show wonderful because that means we are in a good place to give this project a test punch that green flag and let's see what we have made okay first for the positives we are successfully cloning one health bar per cat and what's more the health bars do initially appear where each cat spawns clicking the green flag over and over shows this to be true but the problem we face is that the health bars stay where they are and the cats move off we need to somehow tie these sprites positions together let's jump back into the cat sprite so we initially show and thus clone our health bars here this is after the cat sprite itself is cloned but before it starts to move around and therein lies the problem to keep the health bar tracking around with the cat we'd need to somehow keep feeding the healths list with the uptodate positions of each cat it's a problem because that generally would mean quite a lot of coding to manage creation linkage updates and deletion of the list data and their respective clones but this is supposed to be a simple tutorial so i have a most interesting alternative simply move the health bar block from above the forever loop to be the last block inside the forever loop instead now before you scream but that will clone loads of health bars don't panic run the project that will create loads of health bars wow funky the good news here is that the health bars are following the cats it's just that doing so is at the cost of creating a new clone each time and well all these clones left behind as soon as a new clone is created the old one is superfluous and it needs to be deleted well to do that we need to return to the health bar sprite so what we are saying is right after the health bar is cloned we want to delete it again well that's not quite right because if we run that you'll see that the clones are deleted so quickly that we never even get to see them on the screen no that is too soon what we need is to wait until scratch has displayed the clone and then delete it this trick you've probably seen before we just drop in a weight block but wait for a very suspicious zero seconds how will that help well no matter how long you wait for in scratch using a weight will always pause long enough for the screen to refresh thus our health bar will appear before right away being deleted ready for the next frame run the project oh yeah baby now we are rocking you would never know that these health bars were in fact not moving but that we are continually cloning new ones the timing is such that it appears as a perfect single tracking animation i just love it we can hide the health list now no need to keep that in view so with the health bars moving around correctly we can focus on getting them to function like real health bars showing different health levels depending on the current health of each sprite but just before we do that i just want to add in one more tweak it doesn't really apply to this three cat test game but sometimes the sprites with health bars might move off the screen if that happens we don't want to be displaying this health bar any longer so if not touching edge if not touching the edge we are on screen this is the good case then we can do the go to front show and wait but if not then we will drop through and just delete the health bar right away just test that it still looks okay yep just the same great so let's check out the health bar costume at present we have only one costume and it represents a full health but as the sprite gets damaged we will need to show this health bar depleting okay let me step you through how i would draw these costumes we'll begin by preparing this initial costume select the inner green rectangle and then click the copy button then right away hit paste and we end up with two rectangles there we can select the first one again and change its fill color to black that's the depleted health color now grab that nice green rectangle and snap it back to the center of the drawing canvas it should then fit perfectly over the black one right the first costume is going to represent minimal health drag the right hand edge of the green bar to the left until it covers just one grid square that looks good but it would be even better if we colored it red oh yes that's more like it so on we go duplicate the costume and we'll expand the red rectangle by another grid square not only that but we'll also shift the color to the right just a bit the idea is that we'll slowly bring it back across to the green color when health is full and we repeat this process duplicating the costume stretching across by another grid square and shifting the color over and over keep doing this until we approach a full health bar and the color should reach fully green you should find this happens at costume number 10 splendid but don't stop there we actually need one more costume the costume 11 will be for our fully empty health bar so just select the green bar and delete it all together so why did we add the empty costume to the bottom here wouldn't it make more sense to have it at the top so that all the costumes were in order from empty to full yeah we could do that but one little scratch quirk can make this order work better we all know that sprite costumes begin at costume number one well an empty health bar surely would make more sense at costume zero don't you think well watch this if we switch costumes and i'll just pop in an edition block so that i can use numbers in here we switch to costume number one there we go the first costume appears but it just so happens that when you switch costumes to costumes less than one scratch wraps around and start cycling back from the last costume again well that means costume zero is actually the last costume in our list of costumes so tada by having the empty costume as the last costume we literally have also got it as costume02 and that will make scripting really nice and easy clever trick right okay return that back to the normal size and we'll add the switch costume block to the right after we position the health bar here we are going to tell this sprite how much health the cat sprite has and we'll do this in the same way we tell it the position using the health's list this will be item 3 of health's yeah another item means we need a third delete block still only deleting item 1 though but before we make use of this we should consider how health bars work here is a little weedy enemy he's got full health that's fine but look here comes a boss and boy they have oh so much more health so do we draw his health like this no of course not we draw the health bar just the same for both enemies it's just that the weedy enemies bar will go down a lot faster so health bars are really health percentage bars at 100 they are full and at zero well they are empty we can represent empty as zero and full as one so what does this mean for our change of costume here it means a health of one should display costume number ten and that's the full health costume so we just need to multiply item three by ten of course if you want to use more or less costume levels for your health sprite then just adjust this number accordingly great quickly now click back into the cat sprite i am dead excited to get this health working okay the define show health script we need to add the third item this will be the cat's health but we don't yet have a health to set well let's think ahead right click on the define block and choose edit we want to show the health at a given level so add a new input named health but rather than have each cat pass this in as a percentage we'll simplify this by adding the label of and another input for max that is max or total health and while we are here let's also add in some more features the label offset y and an input of y this will be used to bring the health bar above or below the cat sprite rather than being splatted right in the middle yeah that was never looking good so first off let's sort out the health we need a divide block to calculate the sprite's health as a percentage we simply divide the input health by max health and that will always give us one for full health and zero for no health and this yoffset input we're going to just add this to the y position of the sprite like so of course we now need to fill in the show health block over here with some input values for starters we'll assign each cat 10 out of 10 for health and try an offset upwards of 40 pixels right this is it pummel that green flag oh yes so right off we can see that the health bars have moved up above each cat that's cool but of course if you want the bar below then you might just switch to use an offset of say 40 instead there yay just play around with that until the bar is positioned where you want it next let's try reducing the health by half to five out of ten oh yeah so cool oh zero out of ten it's game over for these cats this is wonderful we can stuff in any health values here and a health bar's update to reflect the cat's health levels so we are almost there let me just show you how we can use this in a game to begin with we need a health variable make a new variable health and it must be for this sprite only so that each cat has its own health level then when the cat is cloned we set health to let's say three so a cat can take three hits max then we pass the health variable in as the first input to the show health block like so and make sure to change the of to reflect the fact that the max health is now three so they start with three out of three health to represent the cats getting damaged when this sprite's clicked just change health by minus one shall we give that a test oh you're in for it now cats click you and again and again now that worked just as planned three clicks and they are all out of health i guess it would make sense at this point to delete the clone yeah why not if health is less than one delete this clone click click click click click click click click click i win yay well you get the idea right so we have a really cool working health bar system going on here and the aim was to make this a really easy to backpack sprite so that it could be brought into any game well we're almost there the only issue is that this show health script is not in the health bar sprite so if we were to backpack it now we would be missing an important part of the scripts well no problem drag a copy of the define block into the health bar sprite now if you look at the finished health bar sprite everything is contained and ready for backpacking and although this show health bar script is not used in this sprite really it is now easy to drag it out into whichever sprite we need to use it in to demonstrate what i mean let's take the health bar drag it into our backpack and we'll add the health bars to lemonoids brilliant we are ready to go load up your lemonoids project and if you haven't followed that tutorial yet then no worries it's only three episodes so you could catch up otherwise just strap in and enjoy the ride take it all in and try adding these to your own games in a similar fashion so at present the player doesn't have health a bit of an oversight perhaps we'll have to come back and remedy that in another episode however these unfortunate lemons they do have health so we'll start there and add health bars to the lemons our first job is to open up our backpacks and drag the health bar sprite into the game next we need to take the define show health block and drop it into the lemon sprite cool now you can drop this script into as many sprites as need health bars it doesn't have to be just one let's click into the lemon sprite just need to tie that up a bit there that's better now we need to locate the main lemon movement scripts find with me the when i start as clone script here it is a forever loop containing all the movement blocks so if we scroll down to the bottom the best place to bring in our show health block would be right here after all the movement is complete the health bar is straightforward as we already have the health variable for this purpose the max health is a little bit more tricky we don't have one yet and what's more different size lemons have different amounts of health so to get around that we'll make a new variable named max health and of course it's for this sprite only we can drop it in on the right of the of health of max health that's right we just need to be careful to actually set max health don't we just before we do though let's also set the offset y to negative 30 so the health bar appears below the lemon okay so scroll up to the define new enemy script this is where the lemon clones are being created we also set the health to 15 right here so right after that set max health to match it 15. or better still just use the health verbal wow that wasn't so hard shall we give it a test yeah hey look at that the lemon is looking very tough and with its own health bar and shooting it reduces its health nicely let's destroy it and now this is something do you see a problem each small lemon is showing us having very minimal health right away now you may like this but my intention is that their health bars reset back to full the reason they are showing low is that even the smaller lemons currently have a max health of 15. so where do we split these lemons find the define enemy hit script scroll right down until you see the delete this clone this is the point where the lemon splits into smaller lemons health has already been set to the reduced amount just above so we can just set max health to the newly assigned health value testing again and now after they split each lemon's health resets and we have a better representation of lemon health ah but perhaps having the health bar on every lemon is a little ott some games like to hide the health bar when the enemy is on full health or we could do that but i quite like seeing the health bar on all the powerful enemies so instead find the when i start as a clone script and wrap our show health block in an if block and will only show the health bar on enemies with a max health greater than 1. that is lemons that need more than one hit to be destroyed play testing again here we go and now this this is a nice compromise the larger lemons have health bars and the smaller lemons don't brilliant all that's missing now is to add a health bar under the player 2. do you think you know how to add that well if not don't worry because i'll be making the official episode 4 soon enough and that will surely be a feature but i do hope you don't stop here i want to see these health bars in all sorts of other projects it's just too easy now for you to include them you'll find a link to the scratch studio for this tutorial in the video description so you simply must submit your game so that i can check them out that would be amazing let me know in the comments how you get along whether the cunning clone spamming approach is working for you or if you have any problems because there's so many ways to go about these things and i'm quite up to explaining other approaches in the future but for today that's all we've got time for if you've enjoyed the video smash the like button and don't forget subscribe to the channel so as not to miss my next exciting video thank you for watching have a fantastic week ahead and scratch on guys
