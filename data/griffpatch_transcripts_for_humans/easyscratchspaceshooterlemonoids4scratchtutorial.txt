With timestamps:

00:02 - hello fellow lemon scratchers it's been
00:06 - ages since our space shooter project
00:07 - luminoids had an update and i know many
00:10 - of you have since taken it upon
00:12 - yourselves to extend and upgrade this
00:13 - project in very exciting ways wow man
00:16 - that is so awesome i love it like this
00:19 - exciting project potatoed by coolcats80
00:22 - the power-ups work especially well what
00:25 - we are going to focus on in this
00:27 - tutorial will be adding an opening title
00:29 - menu a play button with smooth scene
00:31 - transitions will polish up the sprite
00:33 - layering taking the pain out of keeping
00:35 - everything in the intended layer order
00:37 - our player can finally take damage too
00:40 - ouch and so they'll need their own
00:42 - health bar and then it's game over dude
00:45 - this is all super cool and really helps
00:48 - to polish off the whole game experience
00:50 - so awesome are you ready to take
00:52 - lemonoids to the next level oh boy yes
00:56 - so our last official episode was episode
00:59 - three but since then there have been two
01:03 - tutorials posted on this channel that we
01:05 - will be making use of today amazing
01:07 - health bars and awesome number counters
01:10 - so before you will be able to follow
01:12 - along further do make sure you have
01:14 - completed both of these episodes there's
01:17 - a link to them both in the description
01:18 - under this video
01:20 - now amazing health bars it was a bonus
01:22 - episode of lemonoids so hopefully you'll
01:24 - already have this in your game but i
01:27 - didn't officially add awesome number
01:28 - counters to lemonoids although i know a
01:31 - lot of you already did good job guys you
01:33 - know who you are anyhow today i will
01:36 - show you exactly how to add it in so
01:38 - when you have the completed number
01:39 - counters project make sure to open up
01:42 - your backpack and drop the score sprite
01:44 - right in there all ready to go oh yeah
01:48 - this is going to be great okay guys it's
01:51 - time to open up our part three lemonoid
01:53 - projects with the bonus health bars
01:55 - already in place i hope and before we go
01:57 - any further go to the file menu and make
02:00 - sure to save this as a new copy
02:02 - this is episode four guys let's get
02:07 - scratching
02:08 - so we are going to begin by officially
02:11 - adding the player score
02:13 - with the number counter sprite safely in
02:15 - our backpack this is going to be super
02:17 - easy drag the sprite into the lemonoid
02:20 - project like so and right away if we run
02:23 - the project by clicking the green flag
02:25 - our score pops right up like this
02:28 - brilliant we'll just be wanting to make
02:30 - the score increase when we shoot the
02:31 - lemons but just before that click into
02:34 - the player sprite because it's always
02:36 - important to reset our variables when
02:38 - the game begins if you look in our
02:40 - variables a new variable has appeared
02:42 - named score this is a for all sprites
02:45 - variable that came as part of the number
02:47 - counter sprite we're going to want to
02:49 - set score to zero and just drop it in
02:52 - before the feather game loop begins
02:54 - great our score will start at zero
02:57 - now we can work on our lemon sprite
03:00 - find the define enemy hit script
03:03 - so obviously this gets triggered when an
03:05 - enemy is hit by our laser
03:08 - so we can simply change score
03:12 - by one
03:14 - do that right at the top of this script
03:16 - so every successful hit will give us a
03:18 - point
03:19 - and we can run the project
03:23 - and wow i love how easy that was to get
03:27 - working this drop in number counter is
03:29 - indeed awesome loving it of course we
03:32 - can extend this further for example why
03:34 - not give the player an extra big reward
03:37 - for destroying a big lemon
03:39 - we can do that by duplicating the change
03:41 - score
03:42 - and dropping it in here within the if
03:44 - size is greater than 250
03:46 - this is where the large lemon gets
03:48 - destroyed so change score by not one but
03:51 - yeah 10.
03:53 - just checking that out
03:55 - yep no problem
03:57 - now perhaps you might find this score a
04:00 - little bit big on the screen it is
04:02 - rather in your face right if you wanted
04:04 - to shrink it down just a touch then
04:07 - click into the score sprite and this 100
04:10 - number is the size we need to change
04:13 - we can make it any size we like whoa oh
04:16 - let's go for 65.
04:19 - now the only problem with this is that
04:22 - having changed the size of the score the
04:24 - score animation is now rather over
04:26 - exaggerated no problem this too can be
04:29 - easily fixed that's controlled by the
04:32 - number here in the define change costume
04:34 - 2 block so drop that back to something
04:37 - like 90
04:39 - that is much better yeah i like that
04:42 - score achieved
04:43 - and that brings us nicely on to our next
04:46 - topic
04:47 - gui layering and that's gui or gui it
04:51 - stands for graphical user interface and
04:53 - this includes anything like buttons and
04:56 - text on our screen in this case i'm
04:58 - talking about the score and how it's not
05:00 - floating in front of the player or the
05:03 - lemon health bars and that looks plain
05:05 - wrong all gui elements should be brought
05:08 - right to the front so starting with the
05:10 - score sprite itself when the game starts
05:13 - we create six new clones to represent
05:15 - each digit of our score
05:17 - all these want to come to the front so
05:20 - under the when i starters clone hat
05:21 - block it would make sense to drop in a
05:24 - fresh go-to front block and that will
05:26 - ensure each one is brought in front of
05:28 - all the other games sprites seems
05:30 - logical so run the project and take a
05:33 - look
05:34 - yeah the player is now nicely behind the
05:37 - score
05:38 - but hold on did you see that we have not
05:41 - been so lucky with the health bars
05:44 - now the problem here is that health bars
05:45 - themselves are considered gooey elements
05:48 - and as such are also competing to be at
05:51 - the front look click into the health bar
05:53 - sprite and as you might have expected
05:55 - here under their when start as clone
05:58 - blocks they too have a go to front and
06:01 - since these health bars are actually
06:02 - cloning all the time over and over
06:05 - that's the way they work then they are
06:07 - always jumping to the front no matter
06:09 - what
06:10 - problem
06:12 - to solve this puzzle we just have to
06:14 - remember that the only thing we want in
06:17 - front of these health bars are those six
06:19 - score clones so after this health bar
06:22 - clone jumps to the front if we were to
06:24 - immediately shuffle it back by six
06:26 - layers with a go back layers block then
06:30 - that would naturally restore it to
06:31 - behind the scoreclones nice plan
06:35 - but rather than using the number 6 we
06:38 - would be wise to make a new variable to
06:40 - store this number in name it gui layers
06:44 - and make it for all sprites
06:46 - then if we do need more user interface
06:49 - sprites in front we have the power to
06:51 - change this while the game is running
06:54 - so drop the new variable into the go
06:56 - backwards block like so
06:58 - cool we're going to front and then
07:00 - shuffling back behind the gui elements
07:03 - great now to set the number of elements
07:05 - click into the player sprite and under
07:08 - the green flag script we'll set gui
07:11 - layers to just zero as no score sprite
07:15 - has yet to be cloned
07:16 - drop it in right at the top after going
07:19 - to the front
07:21 - okay to ensure our score sprite gets
07:23 - cloned in the right order to update this
07:25 - variable we'll bring in a broadcast
07:27 - block right after setting it to zero and
07:30 - broadcast the new message set up score
07:33 - clones
07:37 - now to hook this up click into the score
07:39 - sprite and we'll replace the when flag
07:42 - clicked with the new when i receive
07:44 - setup score clones event receiver
07:47 - cool that means these won't begin
07:49 - cloning until we are ready for them
07:52 - now to add up the required number of gui
07:55 - clones
07:56 - this is super easy when i start as a
07:58 - clone
07:59 - and move to the front then right away
08:02 - change gui layers by one this will
08:05 - happen once for each score clone and
08:08 - should then add up to six
08:10 - if we run the project now
08:11 - yeah there we go gooey layers is indeed
08:14 - equal to six
08:15 - so the proof will be in the pudding if i
08:17 - can just get a health bar to move over
08:19 - the score
08:23 - yes there we go the health bars are
08:25 - moving back by six layers behind the
08:28 - score clones beautiful and clean
08:31 - managing sprite and clone orderings in
08:33 - scratch is never an easy task but this
08:36 - does the job for us here but if your
08:38 - project needs further help with crazy
08:40 - sprite ordering then make sure to check
08:42 - out my tutorial on sprite layering as
08:44 - that has the most amazing solution for
08:46 - this ever anyhow back to lemonoids our
08:51 - next goal will be to add player health
08:53 - and this is well overdue because what
08:56 - sort of space shooter game is this
08:57 - without it since we already have the
09:00 - health bar sprite we can use this again
09:02 - for our player the health bar sprite has
09:04 - this handy custom block named show
09:07 - health that we can drag out into any
09:09 - sprite we want to endow with a health
09:11 - bar
09:12 - so drag it now to our player sprite
09:15 - then click back into the player sprite
09:17 - and there it is splat it on top of all
09:19 - my other scripts just move it into some
09:21 - free space
09:23 - okay that's safely in place come back to
09:25 - the green flag script because before we
09:28 - can use this show health block we need
09:30 - to define how much health this player
09:32 - actually has
09:34 - we'll need some new variables name the
09:36 - first one max health for this sprite
09:39 - only and click ok
09:42 - now my player will start with a health
09:44 - of 50. so set max health
09:47 - to
09:48 - 50. then to store the current health
09:52 - make another variable named
09:54 - health
09:55 - again for this sprite only
09:58 - of course health must begin fully
10:00 - charged so set health to max health and
10:04 - then move the two blocks to be grouped
10:06 - with the lower set of game initializing
10:08 - setblocks
10:09 - perfect health will now be starting at
10:12 - 50.
10:13 - now to manage collisions and the
10:16 - player's health
10:17 - scroll down to our main game loop this
10:20 - forever loop here you can see we have
10:22 - custom blocks for the different actions
10:23 - we need to take and we now need a new
10:26 - one for checking for the player's
10:27 - collisions and managing the player's
10:29 - health
10:30 - make a new custom block named check
10:33 - player collisions
10:35 - tick to run without screen refresh
10:38 - we can drop this new block into the
10:40 - bottom of our forever loop
10:42 - and that frees up to work on the define
10:45 - block itself
10:46 - nice and simple
10:48 - if this player sprite is touching a
10:50 - lemon sprite
10:56 - then boom we are in trouble change
10:58 - health by
11:00 - and not positive one but
11:02 - negative one this is bad news for us
11:06 - and here we go now we can drag in our
11:08 - very handy show health block but make
11:11 - sure to place it below the if as this
11:13 - wants to be displayed whether we are
11:15 - colliding or not
11:17 - and all we do is fill in the current
11:19 - health
11:20 - and the max health
11:22 - and then in the offset pick a number
11:24 - like negative 30 to show the bar below
11:27 - this sprite
11:28 - oh cool i am excited to see this in
11:31 - action there's not so many backpackable
11:33 - sprites that can be just thrown into a
11:35 - project and be up and running so easily
11:37 - but the score and the health bar sprites
11:40 - they are the real deal yeah this player
11:42 - health bar is working great
11:44 - draining fast while i'm in contact with
11:46 - a lemon but
11:48 - it is a little underwhelming don't you
11:51 - think there's not enough visual feedback
11:52 - that i'm actually getting damaged here
11:55 - we can first go with changing the player
11:57 - to be a white silhouette like we do when
11:59 - the lemons get hurt so set brightness to
12:02 - 100 as soon as the player is touching
12:04 - the lemon
12:06 - then to ensure we don't stay bright
12:07 - forever duplicate the set brightness to
12:10 - before the if check and set it to a
12:13 - brightness of zero
12:14 - if we run that and collide with a lemon
12:17 - then yes we now appear white that's cool
12:21 - but still it's not so inspiring look at
12:24 - the cool effects we get when shooting
12:26 - lemons there's all that nice particle
12:29 - pops how about we make use of these
12:31 - again
12:33 - if you click into the lemon sprite under
12:35 - the enemy hit script you'll find that to
12:37 - spawn a new explosion particle we are
12:39 - adding three numbers to the bang list
12:42 - the first is the type of particle this
12:44 - can be a one or two at present i believe
12:46 - and then we add the x position and y
12:49 - position that the particle should be
12:50 - spawned at nice
12:52 - let's use this in the player sprite
12:58 - so when we have collided with a lemon
13:00 - and after we change health by negative
13:02 - one drop in the three new add to boom
13:05 - blocks keeping them just the same type
13:08 - one and positioned at the sprites x and
13:11 - y positions
13:13 - run the project and let's see how that
13:16 - mixes things up
13:17 - okay now that's better it just needs to
13:20 - be a little more turbulent perhaps
13:23 - we'll mix up the positions of the
13:24 - particles with an addition block
13:27 - and on the right a pick random number
13:30 - between minus 10 and 10.
13:33 - this will shift the position erratically
13:36 - we need two of these one for the
13:37 - exposition pop that back into the
13:39 - adblock and one for the y position
13:43 - let's give it a spin i'm expecting this
13:45 - to look way more cool and yes i'm not
13:48 - disappointed what do you think
13:50 - the icing on the cake will be to get
13:52 - some sound in here now hopefully you
13:55 - still have the all sound sprite
13:57 - if not then the sounds were also used in
13:59 - the lemon sprite
14:01 - the ones i'm after are called explosion
14:03 - 2
14:04 - and explosion 18.
14:07 - if you'd be so kind as to drag them into
14:09 - the player sprite then we can continue
14:14 - start sound explosion 2
14:17 - and we drop it in to start playing as
14:19 - soon as we know we have made a collision
14:23 - here we go
14:25 - yeah sweet and now i know we are losing
14:29 - health for sure good job
14:32 - so wow we have lost a lot of health our
14:36 - health variable is showing negative 233
14:39 - that sure is a good indicator that we
14:41 - should have exploded a long time ago and
14:44 - that poses an interesting new problem
14:46 - here
14:46 - scrolling up to our main game loop you
14:49 - can see that this is coded to continue
14:51 - forever
14:52 - well no longer bring in a repeat until
14:56 - block this game loop will stop as soon
14:58 - as the player's health drops below 1.
15:01 - health is less than 1.
15:04 - now swap the script from the forever
15:06 - loop into the new repeat loop and
15:08 - goodbye forever hello repeat
15:12 - great so now when our health is low
15:14 - enough the game loop will end and we'll
15:16 - arrive down here
15:18 - and we are going to want to do something
15:20 - quite dramatic a really cool end of game
15:22 - player explosion right so we begin by
15:25 - hiding the player sprite
15:28 - next up we're going to animate a number
15:30 - of explosions so use a repeat loop
15:32 - repeating perhaps seven times over
15:35 - then we'll start playing the explosion
15:38 - 18 sound that's the big one
15:40 - and while this happens let's spawn some
15:42 - new explosion particles
15:45 - okay find those add to bang list blocks
15:48 - here we go duplicate these up here under
15:51 - the start sound but switch the initial
15:54 - add 1
15:55 - 4 and add 2 as we want the larger god
15:59 - ray explosions this time around oh yeah
16:02 - perhaps we shouldn't be adding this
16:03 - random turbulence to the position this
16:05 - time round either switch back to just
16:07 - the x and y positions as they were
16:10 - and one final effect the camera shake to
16:13 - get this all we need to do is broadcast
16:16 - shake
16:17 - love it
16:18 - then to give us time to appreciate all
16:20 - the work we've done plop in a weight
16:23 - block at the last block in the repeat
16:25 - for 0.1 seconds that's one tenth of a
16:28 - second
16:29 - do you want to see this in action i sure
16:31 - do so let's get our health down
16:34 - and
16:36 - boom boom boom this is seriously more
16:39 - like it those lemons seriously kick butt
16:42 - and we are a goner to continue we need
16:45 - to press the green flag and everything
16:47 - starts off again now this is a
16:49 - legitimate way to restart a scratch
16:51 - project i've seen it done a million
16:53 - times but it would be way cooler if we
16:55 - have a proper ending and a way to
16:57 - restart the game without restarting the
16:59 - entire project
17:01 - so how about once the game is ended we
17:03 - start by fading the gameplay to black
17:06 - this can be triggered after the repeat
17:08 - loop has ended but first a little pause
17:11 - using a wait one second
17:14 - and then broadcast the new message
17:19 - splash screen
17:22 - this will fade us to black and then
17:23 - bring up the splash screen that is the
17:25 - title screen
17:27 - to fade to black we need to make a fresh
17:29 - new sprite
17:31 - name it curtain
17:33 - this is often the name we give to a
17:35 - layer that will cover the entire screen
17:37 - like the curtain of a theater we need a
17:39 - fully black rectangle so switch to
17:41 - bitmap mode and use the fill tool to
17:44 - blacken out the entire canvas just so
17:47 - the coding of this is quite
17:48 - straightforward
17:50 - when flag clicked
17:52 - hide the curtain
17:53 - but when we receive the splash screen
17:56 - event
18:00 - we want to fade the black curtain in in
18:02 - front of all the other sprites
18:05 - begin by making sure it is covering the
18:07 - entire stage using a go to x0 and y0
18:11 - next ensure it begins fully transparent
18:14 - by setting its ghost effect to 100
18:17 - fully ghosted out
18:19 - of course the curtain must be in front
18:22 - of all the other sprites and clones so
18:24 - go to front layer
18:27 - but what about all those gooey layers
18:30 - sprites huh does the curtain want to be
18:32 - in front of the score
18:34 - no it does not we want to continue to
18:37 - see our score after the game has ended
18:40 - that's important as the player will want
18:42 - to know how well they did
18:44 - so go backwards by gooey layers as
18:47 - before
18:48 - but we don't quite stop there this black
18:51 - curtain itself needs to be counted as a
18:54 - gooey element so that the health bars
18:56 - don't get moved in front of it too
18:58 - so right after moving the sprite to the
19:01 - correct layer we then change gui layers
19:03 - by one to include this curtain sprite
19:06 - too
19:07 - finally make sure to show the curtain
19:11 - but the curtain is still fully ghosted
19:13 - we need to fade it gradually into view
19:17 - drag in a repeat block and i find a
19:19 - repeat of 20 is a good amount of time
19:22 - for these kinds of transitional
19:23 - animations
19:24 - changing ghost effect by
19:27 - and now to fade our black curtain all
19:29 - the way to solid black we'd want to
19:31 - change ghost by negative 5 however
19:34 - instead i'm going to opt to change it
19:36 - only by negative two this will have the
19:39 - effect of only partially darkening the
19:42 - screen instead
19:43 - testing that quickly now and here comes
19:45 - the darkening
19:46 - [Music]
19:47 - yes did you see that lemons and their
19:50 - health bars are both darkened as they
19:52 - are safely behind our dark curtain
19:55 - thanks to our gooey layers variable but
19:57 - importantly the score is still perfectly
19:59 - bright in the foreground
20:01 - nice work
20:04 - right i hope you are feeling artistic
20:06 - next up we need to get creative to
20:08 - design our awesome title screens for our
20:11 - games it's going to look amazing on this
20:13 - darkened background i'm sure we can
20:15 - start by duplicating the curtain sprite
20:17 - as that has the same basic structure and
20:20 - name it logo
20:22 - jump right into the costume editor and
20:24 - make a fresh costume for our cool design
20:27 - the old costume can be deleted
20:30 - the basis for our logo will of course be
20:32 - the words lemonoids but i leave to you
20:35 - the fun job of designing your logo just
20:37 - the way you want it
20:39 - and there i have my logo i can't wait to
20:42 - see yours too i love scrolling down the
20:44 - project studio and checking out all the
20:46 - title screens the creativity of you guys
20:48 - just blows me away it's so exciting
20:51 - okay back to the code
20:54 - so this splash screen event will occur
20:57 - at the same time as our black curtain
20:59 - fade but i really want the logo to fade
21:01 - in just a little bit later so perhaps
21:04 - wait half a second 0.5 before doing
21:07 - anything at all
21:09 - next up look here yes we want to bring
21:12 - the logo to the front but unlike the
21:14 - curtain it should stay in front so chuck
21:17 - away the move back block
21:19 - but do keep the change gui layers by one
21:22 - as this logo is kept in front of the
21:24 - health bars
21:26 - i'm just going to push the logo a tiny
21:28 - bit higher on the screen to make way for
21:30 - the play game button below
21:33 - and lastly the fading in repeat loop at
21:36 - the bottom needs a tweak we want to
21:38 - fully fade our logo in so we must change
21:41 - the ghost effect by negative five
21:45 - five twenties is a hundred a full fade
21:48 - yes yes yes it's time to see our work in
21:50 - its full glory smash the green flag
21:53 - and proceed to lose all our health
21:56 - boom here comes the fade
21:58 - and in comes the logo oh man that looks
22:02 - great and see how having the black
22:04 - outline on our text makes it show up
22:06 - super cool against the faded lemons i
22:09 - love that so much
22:10 - and of course our score is still
22:12 - prominent which is perfect when you want
22:15 - to check out how well you did
22:17 - and then
22:18 - then we'll want to let the player click
22:20 - to play again
22:22 - but for this we will need a new way to
22:24 - begin our game other than just
22:25 - triggering off the green flag
22:27 - let's take a look at the player sprite
22:29 - and find the when green flag clicked
22:31 - script
22:33 - yeah this is where it all begins but now
22:36 - rather than launching straight into our
22:38 - game we might as well trigger the splash
22:40 - screen
22:41 - that would be way cooler
22:43 - okay so we need to identify what should
22:45 - run at startup
22:47 - and what runs later once the play button
22:50 - is clicked
22:51 - keep these top blocks to set up the
22:53 - score clones but everything below can be
22:56 - separated off for later
22:58 - we don't want the player visible on the
23:00 - title screen so make sure to hide them
23:02 - here
23:03 - then to trigger the title screen all we
23:06 - need is the broadcast
23:08 - splash screen just like we do when the
23:10 - game ends
23:12 - hey that basically should do the job
23:14 - smash the green flag and see how the
23:17 - game starts up
23:18 - of course we begin with no lemons so we
23:20 - don't see the fade effect but it's all
23:22 - nice and clean looking and what's also
23:25 - cool is that the lemon scripts do
23:27 - actually kick off as if we were playing
23:28 - in the background and that means the
23:30 - lemons start to drift into view i really
23:33 - like that it makes the title screen feel
23:35 - more dynamic and gives you a feel for
23:37 - the game
23:39 - well great all we need now is the start
23:43 - game button the main game loop scripts
23:46 - are still floating around without a hat
23:48 - block here let's attach a new when i
23:50 - receive event hat to that stack
23:53 - and give it a new event name of new game
23:57 - super we'll use this later because that
23:59 - sets us up perfectly to add a cool start
24:02 - game or play button whatever you want to
24:05 - call yours
24:06 - so again we'll duplicate the last sprite
24:09 - we made the logo sprite and name it play
24:13 - now this button will be positioned lower
24:15 - down like around here i think
24:17 - so in the costume editor start a new
24:19 - costume
24:21 - i want to have the button use the same
24:23 - color as my lemonoids spaceship so
24:26 - select the part of the costume of that
24:27 - color and then come back to our new
24:30 - sprite and the color swatches retain the
24:32 - same colors useful
24:34 - so i'll draw a nice rectangle for the
24:36 - button sizing and snapping it to the
24:38 - center of the canvas
24:39 - add the text label play
24:42 - thickening it up and adding a nice
24:43 - shadow effect and lastly i'll give the
24:45 - button a border and then use the shape
24:47 - tool to add straight line points to each
24:49 - side
24:51 - great with that made let's check out the
24:54 - code
24:55 - as with the logo let's delay this play
24:58 - button even longer perhaps a full second
25:01 - after the splash screen event
25:03 - the position is about right on screen so
25:06 - update the go to with a negative 100 for
25:09 - the y
25:10 - all the other scripts will work okay so
25:13 - let's run that to see how it looks so
25:15 - far
25:16 - yeah so the title comes first and then
25:18 - the play button quickly follows and that
25:20 - looks good
25:22 - but we can make it better still by
25:24 - animating it to entice clicks so start
25:27 - by switching this repeat loop for a
25:29 - forever loop
25:32 - so we want the button to gradually grow
25:34 - and shrink in size so bring in a set
25:37 - size block
25:39 - the start size will be a hundred percent
25:41 - so we use an addition block with a
25:43 - hundred on the left
25:45 - then on the right add a multiply block
25:48 - we'll pulsate bigger and smaller by
25:50 - three percent so enter that in here but
25:53 - the actual pulsating is given by the
25:55 - sign-off operator
25:57 - in the right of the sign we need a timer
26:00 - but scratch's timer is too slow by
26:02 - default so multiply timer by 180 within
26:07 - the sign block
26:09 - that's it
26:10 - drop it into the size block remember we
26:13 - have the original size 100 the throb
26:16 - size 3 and the throb speed 180
26:20 - simple enough and a very useful little
26:22 - scratch script let's see that in action
26:25 - shall we
26:26 - yeah can you see the throb it's a good
26:29 - speed it's a little bit too subtle we
26:31 - can play around with the throb's size
26:33 - until we're happy
26:35 - and yes i'm liking 10 much better
26:38 - finally how about a little hover
26:40 - feedback when the mouse is over the
26:42 - button we can do that with an if-else
26:44 - block in the same forever loop checking
26:47 - if the button is touching the mouse
26:49 - pointer
26:51 - if it is touching then the mouse is over
26:53 - the button so set the button's
26:55 - brightness to 15.
27:00 - otherwise we want to make sure it's set
27:02 - back to the default brightness of zero
27:05 - testing again and there you go a very
27:08 - simple mouse over effect nice so all
27:11 - that remains is to make it clickable
27:13 - in some free space drag in a when this
27:16 - sprite clicked block
27:18 - you could drop in a cool sound here if
27:20 - you liked but i don't have one to hand
27:21 - so i'm just going to make it flash
27:23 - set brightness effect to 100
27:26 - pow white out see now i'd like to fade
27:29 - this back out again but we have to be
27:31 - careful because this other forever loop
27:34 - in the same sprite is still running
27:36 - after we click and that will undo the
27:38 - brightness effect right away so to make
27:40 - sure this new click script runs
27:43 - uninterrupted we can use a stop other
27:46 - scripts in sprite
27:48 - that will stop this forever loop script
27:50 - but leave the sprite clicked event
27:52 - running
27:53 - so drop in a repeat 10 block and change
27:57 - brightness effect by negative 10.
28:03 - to bring it back down quickly to zero
28:06 - if i click the block stack you can see
28:08 - that in action and that gives the button
28:10 - a nice quick flash effect perfect
28:15 - next as the game begins we'll need to
28:17 - fade out the title screen elements so
28:19 - another repeat loop this time for a
28:21 - count of 20 and instead of changing the
28:23 - brightness we change ghost by five to
28:26 - fade the whole thing out
28:28 - i can click it now to show you that
28:30 - working but once faded out i need to run
28:33 - the project see it come back again
28:36 - cool this is nice
28:38 - next up we need to reset our game ready
28:41 - to play once more but we don't want to
28:44 - just delete all the on-screen lemons
28:46 - that wouldn't look so great so instead
28:49 - let's take our black curtain and use it
28:51 - to smoothly fade the lemons away to
28:53 - nothing then at that point we'll be free
28:55 - to delete them and reset the game
28:58 - we'll trigger the reset using a
29:00 - broadcast block just after the when
29:03 - sprite clicked event is triggered
29:06 - and we'll name it reset game
29:11 - now click back into the curtain sprite
29:12 - and we'll need a matching when i receive
29:15 - reset game event receiver
29:18 - we're going to now fade to fully black
29:21 - so copy the repeat loop that previously
29:23 - faded us partway and this time we change
29:26 - the amount to negative 5 for a full fade
29:29 - to black
29:30 - great run the project we are looking for
29:33 - the lemons to now fully fade to black so
29:35 - here goes
29:37 - wow yeah they certainly did and really
29:39 - quite fast you might like to make that
29:41 - slower
29:42 - but before we cast judgement let's also
29:45 - get the logo fading out too
29:47 - click into the logo sprite
29:50 - when i receive reset game
29:53 - let's just wait a moment
29:54 - 0.2 seconds perhaps
29:56 - and then as a safeguard drop in a stop
29:59 - other scripts in sprite just in case the
30:01 - other repeat loop was still running
30:04 - now we'll have our normal repeat 20.
30:08 - with a change ghost effect by 5 positive
30:11 - 5
30:14 - because we are now ghosting this logo
30:16 - out rather than fading a black in
30:19 - here let me click the script so that you
30:21 - can see it fading away
30:23 - yeah there you go cool
30:25 - so once the logo has faded away there's
30:27 - no point keeping it in front of all the
30:30 - other layers so how about we go to the
30:32 - back layer and equally then change gooey
30:35 - layers by
30:36 - negative one yep one less gui element to
30:40 - worry about we have to do this because
30:42 - otherwise when the splash screen event
30:44 - runs later on we'd be adding to the gui
30:46 - layers again and that would not balance
30:48 - out but it will now
30:52 - while we are at this then let's do the
30:53 - same with the play button sprite
30:56 - back in the when sprite clicked script
30:58 - after it's faded out send it to the back
31:01 - go to back layer
31:02 - and then change gui layers by negative
31:05 - one
31:07 - but here's something new we then want to
31:10 - trigger our game to finally begin once
31:12 - more and luckily we already added an
31:14 - event receiver for this so broadcast yes
31:17 - that was it new game woohoo
31:21 - we are nearly there at this point the
31:24 - main game loop will begin
31:26 - but the black curtain is still hiding
31:29 - the entire game behind its eternal
31:31 - darkness and our lemon clones are still
31:33 - hanging around and need resetting
31:36 - let's sort that first
31:38 - in the lemon sprite drop in a when i
31:40 - receive new game
31:44 - this triggers after the curtain is fully
31:46 - black and the lemons are hidden the
31:48 - perfect time to just delete all those
31:51 - lemon clones and since all the clones
31:53 - receive this event all the clones will
31:55 - delete themselves all except the
31:57 - original lemon sprite which is the
32:00 - hidden lemon cloning factory sprite that
32:03 - one continues to spawn new lemons and
32:05 - the new game continues splendid
32:09 - but the black curtain it's still
32:11 - obscuring everything click into the
32:13 - curtain sprite and we'll fade the
32:15 - curtain away to reveal our player's ship
32:18 - as the game starts up
32:20 - when i receive new game
32:23 - repeat 20
32:24 - and change ghost by not negative 5 but
32:27 - positive five that's right we are making
32:30 - the black curtain more transparent until
32:32 - it's completely faded away
32:35 - ah so this curtain was one of the gooey
32:38 - layers so now it's gone we'll go to back
32:43 - and change gui layers by minus one
32:48 - ah you know i think that is everything i
32:52 - can hardly believe it it's time to give
32:54 - it a whirl smash the green flag and
32:56 - let's check out that play button in
32:59 - action so once a lemon shows up i'll
33:01 - click the play button and we'll watch
33:03 - for the fade out and the fade back in to
33:06 - a new game perfect and that worked
33:08 - exactly as we wanted the next thing we
33:11 - need to test is that once we die the
33:13 - score and layers all continue to work
33:15 - consistently
33:17 - gotta say this is looking great what do
33:19 - you think
33:20 - let's play another game
33:22 - the fades are looking sweet the score
33:25 - resets and yeah very good
33:28 - again it looks like our clones are fully
33:31 - under control as reported by scratch
33:33 - add-ons at the top here always resetting
33:35 - to seven or eight clones as the game
33:37 - begins
33:38 - cool
33:40 - now did you notice that as the game
33:41 - starts up we show the score of zero
33:44 - we could perhaps retain a high score
33:46 - using cloud data or if you prefer to
33:49 - just hide the initial score then in the
33:51 - player sprite
33:53 - set score to the empty value
33:59 - before setting up the score clones
34:02 - and there the score is hidden so it all
34:04 - just depends on what you prefer doesn't
34:06 - it
34:07 - and that is it our lemonade is actually
34:11 - looking like a real game so as i talk
34:13 - you out you can finally enjoy watching
34:16 - me take on lemonoids for real and see
34:18 - how good a score i can get
34:21 - this is really the first time i've ever
34:23 - played it for real so it will be
34:25 - interesting i do feel i'm pretty good at
34:27 - dodging these lemons by now well i hope
34:30 - you enjoyed this video if you did then
34:32 - please smash that like button and if you
34:34 - haven't already then do subscribe to the
34:36 - channel and click the notify me button
34:38 - so as not to miss my next exciting
34:41 - episode
34:42 - as always there's a link to the scratch
34:44 - studio in the description under the
34:45 - video so get scratching and submit those
34:48 - projects so we can all see what you've
34:50 - achieved i can't wait there's so much
34:52 - potential to take this game in awesome
34:54 - directions with power-ups timers bosses
34:57 - other types of enemies wow come on guys
34:59 - let's see what you can do
35:01 - so thank you for watching have a most
35:04 - awesome week ahead and scratch on guys
35:14 - [Music]
35:21 - [Music]
35:32 - [Music]
35:43 - you

Cleaned transcript:

hello fellow lemon scratchers it's been ages since our space shooter project luminoids had an update and i know many of you have since taken it upon yourselves to extend and upgrade this project in very exciting ways wow man that is so awesome i love it like this exciting project potatoed by coolcats80 the powerups work especially well what we are going to focus on in this tutorial will be adding an opening title menu a play button with smooth scene transitions will polish up the sprite layering taking the pain out of keeping everything in the intended layer order our player can finally take damage too ouch and so they'll need their own health bar and then it's game over dude this is all super cool and really helps to polish off the whole game experience so awesome are you ready to take lemonoids to the next level oh boy yes so our last official episode was episode three but since then there have been two tutorials posted on this channel that we will be making use of today amazing health bars and awesome number counters so before you will be able to follow along further do make sure you have completed both of these episodes there's a link to them both in the description under this video now amazing health bars it was a bonus episode of lemonoids so hopefully you'll already have this in your game but i didn't officially add awesome number counters to lemonoids although i know a lot of you already did good job guys you know who you are anyhow today i will show you exactly how to add it in so when you have the completed number counters project make sure to open up your backpack and drop the score sprite right in there all ready to go oh yeah this is going to be great okay guys it's time to open up our part three lemonoid projects with the bonus health bars already in place i hope and before we go any further go to the file menu and make sure to save this as a new copy this is episode four guys let's get scratching so we are going to begin by officially adding the player score with the number counter sprite safely in our backpack this is going to be super easy drag the sprite into the lemonoid project like so and right away if we run the project by clicking the green flag our score pops right up like this brilliant we'll just be wanting to make the score increase when we shoot the lemons but just before that click into the player sprite because it's always important to reset our variables when the game begins if you look in our variables a new variable has appeared named score this is a for all sprites variable that came as part of the number counter sprite we're going to want to set score to zero and just drop it in before the feather game loop begins great our score will start at zero now we can work on our lemon sprite find the define enemy hit script so obviously this gets triggered when an enemy is hit by our laser so we can simply change score by one do that right at the top of this script so every successful hit will give us a point and we can run the project and wow i love how easy that was to get working this drop in number counter is indeed awesome loving it of course we can extend this further for example why not give the player an extra big reward for destroying a big lemon we can do that by duplicating the change score and dropping it in here within the if size is greater than 250 this is where the large lemon gets destroyed so change score by not one but yeah 10. just checking that out yep no problem now perhaps you might find this score a little bit big on the screen it is rather in your face right if you wanted to shrink it down just a touch then click into the score sprite and this 100 number is the size we need to change we can make it any size we like whoa oh let's go for 65. now the only problem with this is that having changed the size of the score the score animation is now rather over exaggerated no problem this too can be easily fixed that's controlled by the number here in the define change costume 2 block so drop that back to something like 90 that is much better yeah i like that score achieved and that brings us nicely on to our next topic gui layering and that's gui or gui it stands for graphical user interface and this includes anything like buttons and text on our screen in this case i'm talking about the score and how it's not floating in front of the player or the lemon health bars and that looks plain wrong all gui elements should be brought right to the front so starting with the score sprite itself when the game starts we create six new clones to represent each digit of our score all these want to come to the front so under the when i starters clone hat block it would make sense to drop in a fresh goto front block and that will ensure each one is brought in front of all the other games sprites seems logical so run the project and take a look yeah the player is now nicely behind the score but hold on did you see that we have not been so lucky with the health bars now the problem here is that health bars themselves are considered gooey elements and as such are also competing to be at the front look click into the health bar sprite and as you might have expected here under their when start as clone blocks they too have a go to front and since these health bars are actually cloning all the time over and over that's the way they work then they are always jumping to the front no matter what problem to solve this puzzle we just have to remember that the only thing we want in front of these health bars are those six score clones so after this health bar clone jumps to the front if we were to immediately shuffle it back by six layers with a go back layers block then that would naturally restore it to behind the scoreclones nice plan but rather than using the number 6 we would be wise to make a new variable to store this number in name it gui layers and make it for all sprites then if we do need more user interface sprites in front we have the power to change this while the game is running so drop the new variable into the go backwards block like so cool we're going to front and then shuffling back behind the gui elements great now to set the number of elements click into the player sprite and under the green flag script we'll set gui layers to just zero as no score sprite has yet to be cloned drop it in right at the top after going to the front okay to ensure our score sprite gets cloned in the right order to update this variable we'll bring in a broadcast block right after setting it to zero and broadcast the new message set up score clones now to hook this up click into the score sprite and we'll replace the when flag clicked with the new when i receive setup score clones event receiver cool that means these won't begin cloning until we are ready for them now to add up the required number of gui clones this is super easy when i start as a clone and move to the front then right away change gui layers by one this will happen once for each score clone and should then add up to six if we run the project now yeah there we go gooey layers is indeed equal to six so the proof will be in the pudding if i can just get a health bar to move over the score yes there we go the health bars are moving back by six layers behind the score clones beautiful and clean managing sprite and clone orderings in scratch is never an easy task but this does the job for us here but if your project needs further help with crazy sprite ordering then make sure to check out my tutorial on sprite layering as that has the most amazing solution for this ever anyhow back to lemonoids our next goal will be to add player health and this is well overdue because what sort of space shooter game is this without it since we already have the health bar sprite we can use this again for our player the health bar sprite has this handy custom block named show health that we can drag out into any sprite we want to endow with a health bar so drag it now to our player sprite then click back into the player sprite and there it is splat it on top of all my other scripts just move it into some free space okay that's safely in place come back to the green flag script because before we can use this show health block we need to define how much health this player actually has we'll need some new variables name the first one max health for this sprite only and click ok now my player will start with a health of 50. so set max health to 50. then to store the current health make another variable named health again for this sprite only of course health must begin fully charged so set health to max health and then move the two blocks to be grouped with the lower set of game initializing setblocks perfect health will now be starting at 50. now to manage collisions and the player's health scroll down to our main game loop this forever loop here you can see we have custom blocks for the different actions we need to take and we now need a new one for checking for the player's collisions and managing the player's health make a new custom block named check player collisions tick to run without screen refresh we can drop this new block into the bottom of our forever loop and that frees up to work on the define block itself nice and simple if this player sprite is touching a lemon sprite then boom we are in trouble change health by and not positive one but negative one this is bad news for us and here we go now we can drag in our very handy show health block but make sure to place it below the if as this wants to be displayed whether we are colliding or not and all we do is fill in the current health and the max health and then in the offset pick a number like negative 30 to show the bar below this sprite oh cool i am excited to see this in action there's not so many backpackable sprites that can be just thrown into a project and be up and running so easily but the score and the health bar sprites they are the real deal yeah this player health bar is working great draining fast while i'm in contact with a lemon but it is a little underwhelming don't you think there's not enough visual feedback that i'm actually getting damaged here we can first go with changing the player to be a white silhouette like we do when the lemons get hurt so set brightness to 100 as soon as the player is touching the lemon then to ensure we don't stay bright forever duplicate the set brightness to before the if check and set it to a brightness of zero if we run that and collide with a lemon then yes we now appear white that's cool but still it's not so inspiring look at the cool effects we get when shooting lemons there's all that nice particle pops how about we make use of these again if you click into the lemon sprite under the enemy hit script you'll find that to spawn a new explosion particle we are adding three numbers to the bang list the first is the type of particle this can be a one or two at present i believe and then we add the x position and y position that the particle should be spawned at nice let's use this in the player sprite so when we have collided with a lemon and after we change health by negative one drop in the three new add to boom blocks keeping them just the same type one and positioned at the sprites x and y positions run the project and let's see how that mixes things up okay now that's better it just needs to be a little more turbulent perhaps we'll mix up the positions of the particles with an addition block and on the right a pick random number between minus 10 and 10. this will shift the position erratically we need two of these one for the exposition pop that back into the adblock and one for the y position let's give it a spin i'm expecting this to look way more cool and yes i'm not disappointed what do you think the icing on the cake will be to get some sound in here now hopefully you still have the all sound sprite if not then the sounds were also used in the lemon sprite the ones i'm after are called explosion 2 and explosion 18. if you'd be so kind as to drag them into the player sprite then we can continue start sound explosion 2 and we drop it in to start playing as soon as we know we have made a collision here we go yeah sweet and now i know we are losing health for sure good job so wow we have lost a lot of health our health variable is showing negative 233 that sure is a good indicator that we should have exploded a long time ago and that poses an interesting new problem here scrolling up to our main game loop you can see that this is coded to continue forever well no longer bring in a repeat until block this game loop will stop as soon as the player's health drops below 1. health is less than 1. now swap the script from the forever loop into the new repeat loop and goodbye forever hello repeat great so now when our health is low enough the game loop will end and we'll arrive down here and we are going to want to do something quite dramatic a really cool end of game player explosion right so we begin by hiding the player sprite next up we're going to animate a number of explosions so use a repeat loop repeating perhaps seven times over then we'll start playing the explosion 18 sound that's the big one and while this happens let's spawn some new explosion particles okay find those add to bang list blocks here we go duplicate these up here under the start sound but switch the initial add 1 4 and add 2 as we want the larger god ray explosions this time around oh yeah perhaps we shouldn't be adding this random turbulence to the position this time round either switch back to just the x and y positions as they were and one final effect the camera shake to get this all we need to do is broadcast shake love it then to give us time to appreciate all the work we've done plop in a weight block at the last block in the repeat for 0.1 seconds that's one tenth of a second do you want to see this in action i sure do so let's get our health down and boom boom boom this is seriously more like it those lemons seriously kick butt and we are a goner to continue we need to press the green flag and everything starts off again now this is a legitimate way to restart a scratch project i've seen it done a million times but it would be way cooler if we have a proper ending and a way to restart the game without restarting the entire project so how about once the game is ended we start by fading the gameplay to black this can be triggered after the repeat loop has ended but first a little pause using a wait one second and then broadcast the new message splash screen this will fade us to black and then bring up the splash screen that is the title screen to fade to black we need to make a fresh new sprite name it curtain this is often the name we give to a layer that will cover the entire screen like the curtain of a theater we need a fully black rectangle so switch to bitmap mode and use the fill tool to blacken out the entire canvas just so the coding of this is quite straightforward when flag clicked hide the curtain but when we receive the splash screen event we want to fade the black curtain in in front of all the other sprites begin by making sure it is covering the entire stage using a go to x0 and y0 next ensure it begins fully transparent by setting its ghost effect to 100 fully ghosted out of course the curtain must be in front of all the other sprites and clones so go to front layer but what about all those gooey layers sprites huh does the curtain want to be in front of the score no it does not we want to continue to see our score after the game has ended that's important as the player will want to know how well they did so go backwards by gooey layers as before but we don't quite stop there this black curtain itself needs to be counted as a gooey element so that the health bars don't get moved in front of it too so right after moving the sprite to the correct layer we then change gui layers by one to include this curtain sprite too finally make sure to show the curtain but the curtain is still fully ghosted we need to fade it gradually into view drag in a repeat block and i find a repeat of 20 is a good amount of time for these kinds of transitional animations changing ghost effect by and now to fade our black curtain all the way to solid black we'd want to change ghost by negative 5 however instead i'm going to opt to change it only by negative two this will have the effect of only partially darkening the screen instead testing that quickly now and here comes the darkening yes did you see that lemons and their health bars are both darkened as they are safely behind our dark curtain thanks to our gooey layers variable but importantly the score is still perfectly bright in the foreground nice work right i hope you are feeling artistic next up we need to get creative to design our awesome title screens for our games it's going to look amazing on this darkened background i'm sure we can start by duplicating the curtain sprite as that has the same basic structure and name it logo jump right into the costume editor and make a fresh costume for our cool design the old costume can be deleted the basis for our logo will of course be the words lemonoids but i leave to you the fun job of designing your logo just the way you want it and there i have my logo i can't wait to see yours too i love scrolling down the project studio and checking out all the title screens the creativity of you guys just blows me away it's so exciting okay back to the code so this splash screen event will occur at the same time as our black curtain fade but i really want the logo to fade in just a little bit later so perhaps wait half a second 0.5 before doing anything at all next up look here yes we want to bring the logo to the front but unlike the curtain it should stay in front so chuck away the move back block but do keep the change gui layers by one as this logo is kept in front of the health bars i'm just going to push the logo a tiny bit higher on the screen to make way for the play game button below and lastly the fading in repeat loop at the bottom needs a tweak we want to fully fade our logo in so we must change the ghost effect by negative five five twenties is a hundred a full fade yes yes yes it's time to see our work in its full glory smash the green flag and proceed to lose all our health boom here comes the fade and in comes the logo oh man that looks great and see how having the black outline on our text makes it show up super cool against the faded lemons i love that so much and of course our score is still prominent which is perfect when you want to check out how well you did and then then we'll want to let the player click to play again but for this we will need a new way to begin our game other than just triggering off the green flag let's take a look at the player sprite and find the when green flag clicked script yeah this is where it all begins but now rather than launching straight into our game we might as well trigger the splash screen that would be way cooler okay so we need to identify what should run at startup and what runs later once the play button is clicked keep these top blocks to set up the score clones but everything below can be separated off for later we don't want the player visible on the title screen so make sure to hide them here then to trigger the title screen all we need is the broadcast splash screen just like we do when the game ends hey that basically should do the job smash the green flag and see how the game starts up of course we begin with no lemons so we don't see the fade effect but it's all nice and clean looking and what's also cool is that the lemon scripts do actually kick off as if we were playing in the background and that means the lemons start to drift into view i really like that it makes the title screen feel more dynamic and gives you a feel for the game well great all we need now is the start game button the main game loop scripts are still floating around without a hat block here let's attach a new when i receive event hat to that stack and give it a new event name of new game super we'll use this later because that sets us up perfectly to add a cool start game or play button whatever you want to call yours so again we'll duplicate the last sprite we made the logo sprite and name it play now this button will be positioned lower down like around here i think so in the costume editor start a new costume i want to have the button use the same color as my lemonoids spaceship so select the part of the costume of that color and then come back to our new sprite and the color swatches retain the same colors useful so i'll draw a nice rectangle for the button sizing and snapping it to the center of the canvas add the text label play thickening it up and adding a nice shadow effect and lastly i'll give the button a border and then use the shape tool to add straight line points to each side great with that made let's check out the code as with the logo let's delay this play button even longer perhaps a full second after the splash screen event the position is about right on screen so update the go to with a negative 100 for the y all the other scripts will work okay so let's run that to see how it looks so far yeah so the title comes first and then the play button quickly follows and that looks good but we can make it better still by animating it to entice clicks so start by switching this repeat loop for a forever loop so we want the button to gradually grow and shrink in size so bring in a set size block the start size will be a hundred percent so we use an addition block with a hundred on the left then on the right add a multiply block we'll pulsate bigger and smaller by three percent so enter that in here but the actual pulsating is given by the signoff operator in the right of the sign we need a timer but scratch's timer is too slow by default so multiply timer by 180 within the sign block that's it drop it into the size block remember we have the original size 100 the throb size 3 and the throb speed 180 simple enough and a very useful little scratch script let's see that in action shall we yeah can you see the throb it's a good speed it's a little bit too subtle we can play around with the throb's size until we're happy and yes i'm liking 10 much better finally how about a little hover feedback when the mouse is over the button we can do that with an ifelse block in the same forever loop checking if the button is touching the mouse pointer if it is touching then the mouse is over the button so set the button's brightness to 15. otherwise we want to make sure it's set back to the default brightness of zero testing again and there you go a very simple mouse over effect nice so all that remains is to make it clickable in some free space drag in a when this sprite clicked block you could drop in a cool sound here if you liked but i don't have one to hand so i'm just going to make it flash set brightness effect to 100 pow white out see now i'd like to fade this back out again but we have to be careful because this other forever loop in the same sprite is still running after we click and that will undo the brightness effect right away so to make sure this new click script runs uninterrupted we can use a stop other scripts in sprite that will stop this forever loop script but leave the sprite clicked event running so drop in a repeat 10 block and change brightness effect by negative 10. to bring it back down quickly to zero if i click the block stack you can see that in action and that gives the button a nice quick flash effect perfect next as the game begins we'll need to fade out the title screen elements so another repeat loop this time for a count of 20 and instead of changing the brightness we change ghost by five to fade the whole thing out i can click it now to show you that working but once faded out i need to run the project see it come back again cool this is nice next up we need to reset our game ready to play once more but we don't want to just delete all the onscreen lemons that wouldn't look so great so instead let's take our black curtain and use it to smoothly fade the lemons away to nothing then at that point we'll be free to delete them and reset the game we'll trigger the reset using a broadcast block just after the when sprite clicked event is triggered and we'll name it reset game now click back into the curtain sprite and we'll need a matching when i receive reset game event receiver we're going to now fade to fully black so copy the repeat loop that previously faded us partway and this time we change the amount to negative 5 for a full fade to black great run the project we are looking for the lemons to now fully fade to black so here goes wow yeah they certainly did and really quite fast you might like to make that slower but before we cast judgement let's also get the logo fading out too click into the logo sprite when i receive reset game let's just wait a moment 0.2 seconds perhaps and then as a safeguard drop in a stop other scripts in sprite just in case the other repeat loop was still running now we'll have our normal repeat 20. with a change ghost effect by 5 positive 5 because we are now ghosting this logo out rather than fading a black in here let me click the script so that you can see it fading away yeah there you go cool so once the logo has faded away there's no point keeping it in front of all the other layers so how about we go to the back layer and equally then change gooey layers by negative one yep one less gui element to worry about we have to do this because otherwise when the splash screen event runs later on we'd be adding to the gui layers again and that would not balance out but it will now while we are at this then let's do the same with the play button sprite back in the when sprite clicked script after it's faded out send it to the back go to back layer and then change gui layers by negative one but here's something new we then want to trigger our game to finally begin once more and luckily we already added an event receiver for this so broadcast yes that was it new game woohoo we are nearly there at this point the main game loop will begin but the black curtain is still hiding the entire game behind its eternal darkness and our lemon clones are still hanging around and need resetting let's sort that first in the lemon sprite drop in a when i receive new game this triggers after the curtain is fully black and the lemons are hidden the perfect time to just delete all those lemon clones and since all the clones receive this event all the clones will delete themselves all except the original lemon sprite which is the hidden lemon cloning factory sprite that one continues to spawn new lemons and the new game continues splendid but the black curtain it's still obscuring everything click into the curtain sprite and we'll fade the curtain away to reveal our player's ship as the game starts up when i receive new game repeat 20 and change ghost by not negative 5 but positive five that's right we are making the black curtain more transparent until it's completely faded away ah so this curtain was one of the gooey layers so now it's gone we'll go to back and change gui layers by minus one ah you know i think that is everything i can hardly believe it it's time to give it a whirl smash the green flag and let's check out that play button in action so once a lemon shows up i'll click the play button and we'll watch for the fade out and the fade back in to a new game perfect and that worked exactly as we wanted the next thing we need to test is that once we die the score and layers all continue to work consistently gotta say this is looking great what do you think let's play another game the fades are looking sweet the score resets and yeah very good again it looks like our clones are fully under control as reported by scratch addons at the top here always resetting to seven or eight clones as the game begins cool now did you notice that as the game starts up we show the score of zero we could perhaps retain a high score using cloud data or if you prefer to just hide the initial score then in the player sprite set score to the empty value before setting up the score clones and there the score is hidden so it all just depends on what you prefer doesn't it and that is it our lemonade is actually looking like a real game so as i talk you out you can finally enjoy watching me take on lemonoids for real and see how good a score i can get this is really the first time i've ever played it for real so it will be interesting i do feel i'm pretty good at dodging these lemons by now well i hope you enjoyed this video if you did then please smash that like button and if you haven't already then do subscribe to the channel and click the notify me button so as not to miss my next exciting episode as always there's a link to the scratch studio in the description under the video so get scratching and submit those projects so we can all see what you've achieved i can't wait there's so much potential to take this game in awesome directions with powerups timers bosses other types of enemies wow come on guys let's see what you can do so thank you for watching have a most awesome week ahead and scratch on guys you
