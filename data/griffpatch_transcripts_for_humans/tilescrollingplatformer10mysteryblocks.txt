With timestamps:

00:00 - [Music]
00:02 - hello fellow scratchers
00:04 - i'm griff patch and welcome back to a
00:06 - very exciting part 10 of our series
00:08 - creating a tile scrolling platformer in
00:10 - scratch
00:11 - today we'll focus on the much requested
00:13 - mystery blocks
00:15 - these are really interesting because of
00:16 - how interactive they are
00:18 - you can walk on them head bump them for
00:20 - coins or possibly for other
00:22 - special lucky items and yet they also
00:25 - have this other use
00:26 - for dispatching unlucky gumbas who are
00:28 - innocently walking above
00:29 - them so i can safely say we have quite a
00:32 - lot to cover
00:33 - but i just know you're going to enjoy
00:36 - this one because well
00:37 - it's just so satisfying but before we
00:40 - dive in
00:40 - we have a quick bug fix from episode 9.
00:43 - it was pointed out
00:44 - that when you reset a level in the level
00:46 - editor by pressing the r key
00:48 - there's a bug where the enemies are not
00:51 - cleared
00:51 - see oh man well this is an easy one to
00:55 - fix
00:55 - click on the editor sprite and find the
00:57 - when i receive generate level
01:00 - see here we are already deleting all of
01:03 - tile grid
01:04 - so we need to delete all from object
01:07 - index
01:08 - and from object type lists this will
01:10 - prevent our enemies accidentally being
01:12 - left behind
01:13 - after each level is cleared and yeah
01:15 - there we go great
01:17 - so back to mystery blocks
01:20 - so here i am bumping my head on a
01:22 - mystery block
01:23 - so quite a lot of things are going to
01:25 - need to trigger off this action
01:27 - what we'll do first is make a record of
01:29 - the tile that was head bumped
01:32 - click into the mario sprite and find the
01:34 - when i receive move player script
01:37 - create a new variable named bump index
01:41 - for all sprites we'll store which tile
01:43 - was head bumped in this
01:45 - but first we'll make sure to reset it to
01:48 - the empty value
01:49 - before we begin moving our player each
01:51 - game tick
01:53 - vertical collisions occur in the move
01:54 - sprite y block here
01:56 - and when we bump our head we currently
01:58 - set jumping to 99.
02:00 - let's make a new custom block named bump
02:03 - head
02:05 - and drop it in to the same place
02:08 - this is going to be relatively simple we
02:11 - want to check
02:11 - what tile is directly above us we can
02:14 - use
02:14 - get tile at xy with an x of mario's x
02:18 - variable
02:19 - and a y of y plus height
02:23 - to get the top of mary's head but then
02:25 - we'll also add 8 to it
02:27 - i just picked this number here so if the
02:30 - tile above mario's head
02:32 - is costume 20 it's a mystery block then
02:36 - we set bump index to tile index
02:40 - yes that records which tile we head
02:43 - bumped
02:45 - we can test that this works as i jump
02:48 - and head bump the mystery block
02:50 - you can see bump index flashes a value
02:53 - great that's all we need now to trigger
02:56 - all the animations
02:57 - and actions from this block the first
03:01 - thing we'll do is make the mystery tile
03:03 - react to being bumped
03:06 - switch to the tile sprite code and find
03:09 - the when i receive position
03:10 - tiles script look down towards the
03:13 - bottom
03:14 - and see where we are handling animating
03:16 - blocks here
03:17 - this includes mystery blocks that is
03:19 - costume 20.
03:21 - so for starters we can check whether
03:23 - this tile has been bumped by comparing
03:25 - the new
03:26 - bump index with the tiles tile index
03:30 - variable
03:31 - if it matches then it has just been
03:33 - bumped
03:34 - so we can replace the bumped tile in
03:37 - tile grid
03:38 - with a simple gold block that would be
03:40 - costume 9.
03:42 - run the project and i can now head bump
03:44 - these tiles
03:45 - to change them to simple gold blocks
03:48 - that's good
03:49 - but to be really good we need the tile
03:51 - to jump up and down too in response to
03:53 - being bumped
03:54 - we'll use a little math trick for this
03:56 - effect
03:57 - make a new variable named bumped for
04:00 - this sprite only
04:01 - and set it to 180 when bumped
04:04 - 180 degrees is half a circle we are
04:07 - going to trace the curve of a half
04:09 - circle
04:10 - up and down to simulate the jump of the
04:12 - tile
04:13 - so before switching costume add in an if
04:16 - checking whether bumped is greater than
04:18 - zero
04:19 - immediately subtract 30 degrees
04:22 - and then change the y position of the
04:26 - sprite
04:26 - by 24 multiplied by the sine
04:30 - of bumped this
04:33 - offsets it up from its real position
04:35 - while bumped
04:36 - is still greater than zero
04:40 - and we test the project again now when i
04:43 - bumped my head
04:44 - the block gives a satisfying little jump
04:47 - very nice
04:49 - next up we shall add the default jumping
04:52 - coins animation
04:53 - this occurs on any mystery block that
04:55 - does not contain any special object
04:58 - when a block is head bumped a coin
05:01 - should bounce up into the air from the
05:02 - block
05:03 - come down and vanish the player does not
05:06 - need to collect it
05:07 - so it's really just there to look nice
05:10 - giving the player some great feedback
05:12 - because of this i would classify the
05:14 - coin as a particle effect
05:17 - click into the particles sprite at
05:19 - present these only support
05:21 - dust smoke particles that are cloned at
05:24 - mario's feet
05:25 - this is going to need an upgrade to
05:27 - support more particle types
05:30 - okay click back into the mario sprite
05:33 - finding the
05:34 - make skid smoke
05:37 - oh man this typo is still there i'll
05:39 - just rename it correctly
05:42 - there make skid smoke right
05:46 - we are no longer going to create a clone
05:48 - here this is too limiting
05:51 - without a way of saying what type of
05:52 - particle we are generating
05:55 - instead make a new list naming it
05:57 - particles
05:59 - for all sprites this acts like an
06:02 - instruction
06:03 - list of the particles we want to
06:05 - generate
06:06 - we first add the type of particle smoke
06:10 - then the x position and finally the y
06:14 - position that will be y minus 20
06:17 - to position it at mario's feet as before
06:23 - now back to the particle sprite
06:26 - start by deleting all the particles
06:28 - under the green flag
06:32 - the when i receive position tiles
06:34 - scripts are all about
06:36 - animating smoke particles at present
06:38 - we'll need to diversify this
06:40 - so make a new custom block named tick
06:43 - smoke
06:44 - and move the smoke handling scripts into
06:46 - there
06:47 - that's everything after the first if
06:49 - statement
06:51 - we can then pop the tick smoke block in
06:53 - their place
06:55 - now what about this new particles list
06:58 - we want to loop
06:59 - through it to create the new particles
07:01 - start by making another custom block
07:03 - naming it spawn particles make sure to
07:07 - tick the run without screen refresh
07:10 - and we'll use it here when frame equals
07:13 - the empty value
07:15 - only cloned sprites have the frame set
07:18 - so this ensures this is only run on the
07:21 - original sprite
07:22 - not a clone so we repeat until the
07:26 - length of particles list
07:27 - equals zero
07:31 - we'll be removing the items as we go so
07:33 - once it's empty we'll have finished
07:35 - processing them
07:36 - we can begin by setting the type x and y
07:39 - variables from the particles list
07:42 - just as we'd put them in a moment ago
07:44 - from the item one
07:45 - two and three
07:52 - next just create clone of myself to
07:54 - spawn the particle
07:56 - with these variables finally delete
07:59 - those first three rows from the list
08:01 - and then allow the repeat loop to
08:03 - continue in case there are more
08:05 - particles to be spawned
08:07 - almost there just come back to the when
08:10 - i start as clone
08:11 - and remove the old set x and set y
08:13 - blocks from here
08:14 - as these are now set before we clone the
08:17 - sprite
08:18 - and we are good to test we should
08:20 - hopefully see the clouds of dust
08:22 - still appearing at mario's feet but now
08:25 - we have a much better system of for
08:27 - particles that we can extend to support
08:29 - other types so let's add a coin particle
08:34 - click into the tile sprite and we are
08:36 - still editing the when i receive
08:38 - position tile script
08:40 - right here after setting bump to 180 we
08:43 - want to also spawn
08:44 - a coin particle we do this by adding to
08:48 - the particle list
08:49 - first the particle type of coin then the
08:53 - x position
08:54 - tile x and the y position tile y
08:57 - but to ensure the coin spawns above the
09:00 - block
09:01 - we add 32 to it
09:04 - now click into the tiles costumes and
09:07 - we'll copy
09:08 - in order the four coin costumes across
09:11 - to the particle sprite
09:13 - dropping them like so we'll also copy
09:16 - the big costume costume one while we're
09:19 - at it
09:21 - switch back to the particle sprite and
09:23 - it's time to code the coin
09:25 - particle type in the when i start as
09:28 - clone
09:29 - check for a type of coin you want to
09:32 - give this particle some vertical
09:34 - velocity to jump it into the air
09:36 - so make a new variable speed y for this
09:39 - sprite only
09:41 - and set it to 12. that will give it a
09:44 - nice
09:44 - big vertical bounce next to handle its
09:47 - actual movement
09:49 - under the when i receive position tiles
09:51 - check for a type
09:52 - of coin
09:55 - and then make a new custom block naming
09:59 - it
09:59 - tick coin we'll run this
10:03 - for the coin particle not forgetting to
10:05 - stop this script
10:06 - to prevent it continuing to run the
10:08 - smoke script below
10:13 - now this will be a pretty standard
10:15 - movement script for the coin
10:17 - we change speed y by -1 for gravity then
10:20 - and this is a little different we check
10:22 - whether the speed y
10:24 - is less than minus 12. since we began
10:27 - the coin with a speed of 12
10:29 - once it has reached a speed of -12 it
10:32 - will have gone up
10:33 - and come all the way back down again so
10:35 - we can delete this clone
10:38 - now change the y of the particle by
10:40 - speed y
10:41 - next we need to position the particle on
10:43 - the screen and set its costume
10:45 - so we are doing this already for the
10:48 - smoke particle above
10:50 - perhaps we can rationalize this with yet
10:52 - another of my favorite custom blocks
10:54 - make a new block naming it position with
10:57 - costume
10:58 - with an input of costume
11:03 - and we can move the go to xy switch
11:05 - costume and show
11:06 - script from the smoke script into here
11:10 - leave behind the change frame and bring
11:12 - in a new position with costume
11:14 - here now this floor of frame
11:17 - is specific to the dust particle so move
11:20 - it back
11:20 - to the costume input here and replace
11:23 - with the costume input variable
11:25 - from the define block now it would be
11:28 - good idea
11:29 - to add a switch costume to big at the
11:32 - top
11:32 - to allow these particles to move off
11:34 - screen this is more likely to occur for
11:37 - coins than it did for dust particles
11:39 - as coins are jumping up high
11:42 - so now we can use this script again for
11:44 - our coin particle
11:46 - duplicate the position with costume and
11:48 - the change frame and bring it down
11:50 - here but we'll switch the 0.4 to a 0.5
11:55 - for a slightly faster coin rotation
11:58 - now the coins costume run from costume 3
12:02 - through to 6. we can allow the looping
12:04 - through
12:05 - using the frame below with the math
12:08 - 3 the first coin costume plus
12:11 - mod four as there are four costumes
12:15 - and the floor of frame on the left of
12:17 - the mod
12:19 - that should do it cool are you ready
12:22 - for a quick test run the project and
12:24 - jump into a mystery block
12:26 - yeah that's what i'm talking about the
12:29 - coins ping up
12:30 - nice and high spinning and return back
12:32 - down before despawning
12:34 - that looks good don't you think what's
12:36 - great is that we are also
12:38 - all set to add even more particle
12:40 - effects going forward
12:42 - right then spawning coins from mystery
12:44 - blocks is cool
12:45 - but well they wouldn't be mystery boxes
12:47 - if they didn't sometimes contain more
12:49 - interesting objects for our consumption
12:52 - our next task therefore
12:53 - is to be able to place a power-up of our
12:55 - choosing inside
12:57 - a mystery block click into the enemy
12:59 - sprite and look at the costume tab
13:02 - right at the bottom you'll find a
13:03 - mushroom named life
13:06 - it may seem off to count this as an
13:09 - enemy
13:10 - but except for the fact that it won't
13:12 - kill you the live sprite will share a
13:14 - lot of the same game code as a goomba
13:17 - and we have already added the ability to
13:19 - place these sprites
13:20 - over other tiles in the level editor
13:23 - this is super useful
13:24 - for what we're about to do start then by
13:27 - copying the live costume
13:29 - to the tile sprite i'll just check in
13:32 - the tiles
13:33 - and there it is costume number 30. we
13:36 - should map
13:36 - this to a key in the level editor so
13:39 - click into the editor sprite
13:41 - and make the tile key map visible
13:44 - add a new item for costume 30.
13:47 - and we'll map it to key 9. that's the
13:51 - enemy category do you remember
13:53 - this is special for placing enemies over
13:55 - other tiles
13:57 - make sure to click off the item to save
13:59 - it in the list
14:01 - if i run the project and enter the level
14:03 - editor
14:04 - i can press the 9 key twice to select
14:07 - the mushroom tile
14:09 - i want to be able to drop this on a
14:11 - mystery tile
14:14 - although i can click it nothing appears
14:17 - that's okay though we should have
14:18 - expected this this tile will have been
14:21 - recorded in the object lists
14:23 - but we have yet to write any code to
14:25 - spawn this type of enemy in the enemy
14:27 - sprite
14:28 - so let's do that click into the enemy
14:30 - sprite
14:31 - and find the define spawn type script
14:34 - this script is responsible for spawning
14:36 - enemies which at present
14:38 - is solely gumbers we need to extend this
14:41 - to cater for more enemy types
14:44 - specifically a life mushroom at this
14:46 - time
14:48 - we are going to make a custom block
14:50 - again for the scripts that are shared
14:52 - for all spawning
14:54 - naming it set type with an input
14:57 - type then a label and an input both
15:00 - named costume
15:01 - a label input width and a label and
15:04 - input for
15:05 - height
15:09 - start by moving the set type to goomba
15:11 - and everything below
15:13 - into the new define script then replace
15:16 - it
15:16 - with the new set type custom block the
15:20 - type costume
15:21 - width and height inputs must be filled
15:23 - out the same as they were for the gumba
15:26 - so i'm just copying and pasting the
15:28 - values from the set variable blocks
15:30 - that then allows us to link the input
15:32 - variables up to their matching set
15:34 - variables
15:35 - as a quick way to set all four of them
15:37 - in future
15:39 - next we'll take the top four set x and y
15:42 - scripts
15:43 - and move these into the define set type
15:45 - script too
15:46 - i'll pop them just under the set height
15:49 - block
15:50 - i just noticed we can safely remove the
15:53 - set type and hide block
15:54 - from there as this was left over from
15:57 - when we spawned goombas with the g
15:59 - key the enemy spawning loop already
16:02 - takes care of this at the end
16:04 - right so now we can more easily add a
16:06 - new type of enemy sprite
16:08 - to be spawned type 29 was a goomba
16:11 - so duplicate the if and instead look for
16:13 - a tile type
16:14 - of 30 our mushroom lifestyle
16:18 - we can fill out the set type block with
16:20 - the input values of life
16:22 - for the type and also as it happens the
16:25 - costume name too
16:27 - and both a width and height of 16
16:30 - pixels now where the life differs from
16:33 - goomba
16:34 - is that it doesn't want to be activated
16:36 - when it moves onto the screen
16:38 - we did this by setting frame to the
16:40 - empty value
16:42 - so instead let's set frame to -1
16:46 - before the set type block this will be
16:49 - our new way of indicating that an enemy
16:51 - sprite is hidden
16:52 - until we say otherwise
16:56 - to make this work come to the bottom of
16:58 - the define set type custom block
17:01 - and surround the show with an if block
17:04 - put in an or then on the left we always
17:08 - show the sprite if we are in the level
17:10 - editor
17:11 - that is editor is greater than zero
17:15 - the other condition where we show right
17:17 - away is when frame
17:18 - is equal to the empty value that way
17:22 - when the frame is -1 like we just set it
17:25 - it will stay hidden except of course
17:28 - when in the level editor
17:30 - which is just how we want it let's run
17:33 - the project
17:34 - so no mushroom is visible yet did i
17:36 - manage to place one
17:38 - i'll enter the level editor ah great
17:40 - there is the mushroom i placed earlier
17:43 - it did work so that special frame of -1
17:46 - is working
17:47 - but i can still headbutt this mystery
17:50 - block
17:51 - containing the mushroom and get a coin
17:54 - that isn't right
17:55 - we need to turn off the coin particle
17:57 - for the tiles containing
17:59 - objects click into the tile sprite
18:03 - we are still in the when i receive
18:04 - position tile script
18:06 - now add in an if around three add
18:09 - particle blocks
18:11 - to check whether a tile has an object in
18:13 - it we just need to refer to the objects
18:16 - lists
18:17 - use the item hash of object idx
18:21 - and look for tile index to see if we can
18:23 - find that index
18:25 - in the list if there is no object at the
18:28 - location
18:28 - then the result is zero so we then allow
18:32 - it to spawn
18:32 - the coin as normal we should test that
18:35 - again just to confirm that the last
18:37 - mystery block is no longer spawning a
18:39 - coin
18:39 - particle yep perfect but now
18:43 - for the more complex job of triggering
18:45 - the mushroom sprite to appear
18:46 - instead click into the enemy sprite
18:50 - and find the when i receive move enemy
18:53 - script
18:54 - now scroll down the script to where we
18:57 - check for frame being less than zero
19:00 - if you remember this is triggered for
19:02 - idle enemies
19:03 - that is looking for them when they're
19:04 - about to come on screen
19:07 - well now this is also going to be
19:09 - triggering for our hidden enemies too
19:11 - we need to handle these hidden ones
19:13 - specifically
19:15 - so add in a new if as the first block
19:17 - within that if
19:19 - checking for a frame of minus 1.
19:23 - these tiles should be activated not when
19:26 - they come
19:26 - on screen but when they are bumped so
19:30 - if bump index equals the enemy sprite's
19:33 - spawn index
19:34 - that's where the enemy sprite spawned on
19:36 - the level
19:38 - then we show the sprite make sure to add
19:41 - or stop this script
19:42 - under the if so that hidden sprites
19:45 - don't process
19:46 - any further now let's give this a test
19:50 - ok this is a good start the mushroom is
19:53 - indeed
19:53 - showing when we head bump the tile
19:57 - but this isn't quite the desired
19:59 - behavior
20:00 - we need the mushroom to emerge from
20:02 - behind the mystery block
20:05 - so remove the show block and instead we
20:07 - will set frame to zero
20:09 - this means the enemy sprite is no longer
20:12 - inactive
20:13 - we'll also point in direction although
20:15 - this isn't really used yet
20:17 - setting it to the same direction as the
20:19 - mario sprite
20:21 - lastly and i have to say i was in two
20:23 - minds about how to go about this
20:26 - to get the sprite to appear behind the
20:28 - mystery block
20:29 - we will tell the sprite to go to the
20:31 - back layer
20:32 - handling sprite ordering in scratch is a
20:35 - pain
20:35 - and deserves a tutorial video all of its
20:38 - own so watch out for that
20:40 - okay we'll also add a go forward block
20:44 - add a new variable named layers
20:46 - background
20:48 - and we'll use this in the go forward
20:51 - this is here
20:51 - ready for when we add in a scrolling
20:53 - background
20:54 - as we will then be able to set this
20:56 - variable to the number of background
20:58 - sprites
20:59 - that we should stay in front of now
21:02 - scroll down to the bottom of the script
21:04 - where we are handling the processing of
21:06 - goomba
21:06 - with a gumba tick block let's duplicate
21:09 - it
21:10 - changing the if to look for a type of
21:13 - life remove the tick number and we'll
21:16 - make a new custom block named
21:18 - tick life run without screen refresh
21:23 - and pop it back within the new if
21:25 - followed by
21:26 - the stop this script i'll move this
21:30 - into some space okay well pop the show
21:33 - block back in here so that we can see
21:35 - what's going on
21:36 - and run the project now head bump that
21:39 - block
21:40 - did you see that the mushroom block
21:42 - appeared behind the block now
21:45 - but you can only just see it before the
21:47 - mystery block returns and covers it up
21:49 - again
21:51 - to avoid it being seen we'll need to
21:53 - delay it appearing for a few frames
21:55 - after the bump occurs and only then show
21:58 - it
21:58 - before allowing it to rise up out of the
22:00 - block below
22:02 - to change frame by one and then check if
22:05 - it is less than 16.
22:07 - if it is then stop this script that will
22:11 - prevent the mushroom
22:12 - appearing for around half a second next
22:15 - bring in an if else block checking for
22:18 - frame
22:18 - being less than 48 then we show the
22:22 - sprite
22:22 - and slowly move it upwards by changing y
22:25 - by 1.
22:27 - now how did we get the value 48 here
22:30 - we need to slowly move the mushroom up
22:32 - by 32 pixels
22:34 - that's a full tile but frame is already
22:37 - at 16 before we start moving so 32
22:41 - plus 16 is yep 48
22:46 - cool let's give it a test going straight
22:49 - for the mushroom block
22:51 - and oh yeah that is looking really
22:54 - exciting
22:55 - excellent work you've all been waiting
22:57 - patiently a long time to see this
22:59 - mechanic working
23:00 - now although we are not going to
23:02 - implement any actual power-ups in this
23:04 - episode
23:05 - we might as well allow the player to
23:06 - pick it up so after the mushroom is
23:08 - finished
23:09 - rising up in the else here check whether
23:12 - it is touching mario
23:14 - and then we'll simply delete this clone
23:16 - for now
23:17 - this is also where we'll be able to
23:18 - trigger any special powers
23:20 - future and let's see
23:25 - yeah that works for me so how much time
23:28 - do we have left
23:30 - can we fit in goomba flipping from above
23:32 - a bump block
23:33 - i don't feel the episode would be
23:34 - complete without it yeah
23:36 - let's go for it in the enemy sprite make
23:39 - a new custom block naming it
23:41 - check flip
23:48 - if bump index is less than one
23:51 - then no tile has been bumped and we can
23:54 - just stop this script
23:55 - there's simply nothing more to do so
23:58 - if a block has been bumped is it one of
24:01 - the tiles
24:02 - under the sprite's feet let's check the
24:05 - tile under gumba's left foot first
24:07 - using a get tile at x y with an
24:10 - x minus width for the y position we'll
24:14 - use
24:15 - y minus height but then also subtract
24:18 - 8 pixels more to ensure we are looking
24:20 - at the block
24:21 - below now if the tile index of this tile
24:25 - we are checking
24:26 - is in fact not equal to bump index
24:29 - then we know the left foot was not
24:31 - bumped
24:32 - so we might as well check the right one
24:34 - instead
24:35 - duplicate the get tile and if block and
24:38 - replace the x minus width
24:40 - with an x plus width if the tile index
24:44 - is again
24:45 - not a match for a bumped tile then this
24:47 - gumbo is safe
24:48 - and we stop this script but
24:52 - if we got past these two if checks then
24:54 - gumba must have one foot on a bump
24:56 - tile either left or right so set their
24:59 - speed y
25:00 - to 14 to bounce them up into the air and
25:03 - then set
25:04 - speed x to the direction of mario
25:06 - divided by 45
25:08 - that should be a good speed although
25:11 - i'm wondering in retrospect whether we
25:13 - should not have set the speed x at all
25:16 - and just left it as it was feel free to
25:18 - check for yourself
25:19 - which looks best okay almost ready to
25:23 - test
25:23 - but we haven't yet used this new check
25:26 - flip block
25:27 - find the define tick goomba script and
25:29 - pop it right at the end
25:33 - like this
25:36 - now run the project i'm quite excited
25:39 - about this already
25:40 - and take that gumba oh yeah let's do it
25:43 - again
25:45 - oh man this is too much fun to make it
25:48 - authentic
25:49 - we just need to flip the sprite upside
25:51 - down and let them fall off screen
25:53 - scroll back to the end of the define
25:55 - check flip script
25:56 - and set type to flip this will work
26:00 - like our squish type we made in a
26:02 - previous episode
26:04 - we want to make the sprite appear upside
26:06 - down so set the rotation style
26:08 - to all around and finally point in
26:11 - direction
26:12 - minus 90 negative 90.
26:16 - now find the when i receive move enemy
26:18 - script
26:19 - and add a new if type equals flip just
26:22 - above the type equals squish check
26:26 - we just want a simple gravity motion
26:28 - here so
26:29 - change x by speed x
26:34 - change speed y by -1
26:38 - change y by speed y
26:43 - lastly we'll find out when they fall off
26:46 - the bottom of the screen
26:47 - with an if y is less than camera y
26:52 - subtract two hundred
26:55 - and then we delete this clone we should
26:58 - just drop in and stop the script to
27:00 - conclude the flip sprite script
27:02 - and that's it job done episode complete
27:06 - smash that green flag and watch
27:09 - that gumba fly wonderful
27:13 - look at how he flips upside down and
27:14 - falls off screen it just works
27:16 - so well and it's so satisfying that we
27:19 - have got
27:20 - this far we have certainly covered a lot
27:22 - of ground today
27:23 - and having the mystery blocks
27:25 - functioning really livens up the game a
27:27 - lot
27:28 - so pleased it wouldn't take much to add
27:31 - all sorts of different items to pop up
27:32 - from these blocks now
27:34 - so do feel free to mess around and add
27:36 - your own
27:37 - also why not try adding some powers to
27:40 - mario
27:40 - or a life counter there's still so many
27:43 - directions we could take things
27:45 - and although i am basing the tutorial
27:47 - heavily around mario mechanics
27:49 - that's only because mario does them so
27:50 - well you can of course make any
27:53 - platformer you wish from the same game
27:55 - engine
27:56 - just let your imaginations run wild
27:59 - well i do hope you've been able to
28:01 - follow along and that your projects are
28:02 - looking amazing
28:04 - in the next episode i'm expecting that
28:06 - we'll look at the player losing a life
28:08 - and perhaps adding some other
28:09 - visual eye candy like the scrolling
28:12 - backgrounds
28:13 - but we'll have to see as i know there
28:15 - are many other highly sought after
28:17 - features yet to be covered
28:19 - if you've enjoyed this tutorial then
28:21 - smash the like button
28:23 - and don't forget to subscribe to the
28:24 - channel to avoid missing my next
28:26 - exciting video so thank you for watching
28:29 - and scratch on guys

Cleaned transcript:

hello fellow scratchers i'm griff patch and welcome back to a very exciting part 10 of our series creating a tile scrolling platformer in scratch today we'll focus on the much requested mystery blocks these are really interesting because of how interactive they are you can walk on them head bump them for coins or possibly for other special lucky items and yet they also have this other use for dispatching unlucky gumbas who are innocently walking above them so i can safely say we have quite a lot to cover but i just know you're going to enjoy this one because well it's just so satisfying but before we dive in we have a quick bug fix from episode 9. it was pointed out that when you reset a level in the level editor by pressing the r key there's a bug where the enemies are not cleared see oh man well this is an easy one to fix click on the editor sprite and find the when i receive generate level see here we are already deleting all of tile grid so we need to delete all from object index and from object type lists this will prevent our enemies accidentally being left behind after each level is cleared and yeah there we go great so back to mystery blocks so here i am bumping my head on a mystery block so quite a lot of things are going to need to trigger off this action what we'll do first is make a record of the tile that was head bumped click into the mario sprite and find the when i receive move player script create a new variable named bump index for all sprites we'll store which tile was head bumped in this but first we'll make sure to reset it to the empty value before we begin moving our player each game tick vertical collisions occur in the move sprite y block here and when we bump our head we currently set jumping to 99. let's make a new custom block named bump head and drop it in to the same place this is going to be relatively simple we want to check what tile is directly above us we can use get tile at xy with an x of mario's x variable and a y of y plus height to get the top of mary's head but then we'll also add 8 to it i just picked this number here so if the tile above mario's head is costume 20 it's a mystery block then we set bump index to tile index yes that records which tile we head bumped we can test that this works as i jump and head bump the mystery block you can see bump index flashes a value great that's all we need now to trigger all the animations and actions from this block the first thing we'll do is make the mystery tile react to being bumped switch to the tile sprite code and find the when i receive position tiles script look down towards the bottom and see where we are handling animating blocks here this includes mystery blocks that is costume 20. so for starters we can check whether this tile has been bumped by comparing the new bump index with the tiles tile index variable if it matches then it has just been bumped so we can replace the bumped tile in tile grid with a simple gold block that would be costume 9. run the project and i can now head bump these tiles to change them to simple gold blocks that's good but to be really good we need the tile to jump up and down too in response to being bumped we'll use a little math trick for this effect make a new variable named bumped for this sprite only and set it to 180 when bumped 180 degrees is half a circle we are going to trace the curve of a half circle up and down to simulate the jump of the tile so before switching costume add in an if checking whether bumped is greater than zero immediately subtract 30 degrees and then change the y position of the sprite by 24 multiplied by the sine of bumped this offsets it up from its real position while bumped is still greater than zero and we test the project again now when i bumped my head the block gives a satisfying little jump very nice next up we shall add the default jumping coins animation this occurs on any mystery block that does not contain any special object when a block is head bumped a coin should bounce up into the air from the block come down and vanish the player does not need to collect it so it's really just there to look nice giving the player some great feedback because of this i would classify the coin as a particle effect click into the particles sprite at present these only support dust smoke particles that are cloned at mario's feet this is going to need an upgrade to support more particle types okay click back into the mario sprite finding the make skid smoke oh man this typo is still there i'll just rename it correctly there make skid smoke right we are no longer going to create a clone here this is too limiting without a way of saying what type of particle we are generating instead make a new list naming it particles for all sprites this acts like an instruction list of the particles we want to generate we first add the type of particle smoke then the x position and finally the y position that will be y minus 20 to position it at mario's feet as before now back to the particle sprite start by deleting all the particles under the green flag the when i receive position tiles scripts are all about animating smoke particles at present we'll need to diversify this so make a new custom block named tick smoke and move the smoke handling scripts into there that's everything after the first if statement we can then pop the tick smoke block in their place now what about this new particles list we want to loop through it to create the new particles start by making another custom block naming it spawn particles make sure to tick the run without screen refresh and we'll use it here when frame equals the empty value only cloned sprites have the frame set so this ensures this is only run on the original sprite not a clone so we repeat until the length of particles list equals zero we'll be removing the items as we go so once it's empty we'll have finished processing them we can begin by setting the type x and y variables from the particles list just as we'd put them in a moment ago from the item one two and three next just create clone of myself to spawn the particle with these variables finally delete those first three rows from the list and then allow the repeat loop to continue in case there are more particles to be spawned almost there just come back to the when i start as clone and remove the old set x and set y blocks from here as these are now set before we clone the sprite and we are good to test we should hopefully see the clouds of dust still appearing at mario's feet but now we have a much better system of for particles that we can extend to support other types so let's add a coin particle click into the tile sprite and we are still editing the when i receive position tile script right here after setting bump to 180 we want to also spawn a coin particle we do this by adding to the particle list first the particle type of coin then the x position tile x and the y position tile y but to ensure the coin spawns above the block we add 32 to it now click into the tiles costumes and we'll copy in order the four coin costumes across to the particle sprite dropping them like so we'll also copy the big costume costume one while we're at it switch back to the particle sprite and it's time to code the coin particle type in the when i start as clone check for a type of coin you want to give this particle some vertical velocity to jump it into the air so make a new variable speed y for this sprite only and set it to 12. that will give it a nice big vertical bounce next to handle its actual movement under the when i receive position tiles check for a type of coin and then make a new custom block naming it tick coin we'll run this for the coin particle not forgetting to stop this script to prevent it continuing to run the smoke script below now this will be a pretty standard movement script for the coin we change speed y by 1 for gravity then and this is a little different we check whether the speed y is less than minus 12. since we began the coin with a speed of 12 once it has reached a speed of 12 it will have gone up and come all the way back down again so we can delete this clone now change the y of the particle by speed y next we need to position the particle on the screen and set its costume so we are doing this already for the smoke particle above perhaps we can rationalize this with yet another of my favorite custom blocks make a new block naming it position with costume with an input of costume and we can move the go to xy switch costume and show script from the smoke script into here leave behind the change frame and bring in a new position with costume here now this floor of frame is specific to the dust particle so move it back to the costume input here and replace with the costume input variable from the define block now it would be good idea to add a switch costume to big at the top to allow these particles to move off screen this is more likely to occur for coins than it did for dust particles as coins are jumping up high so now we can use this script again for our coin particle duplicate the position with costume and the change frame and bring it down here but we'll switch the 0.4 to a 0.5 for a slightly faster coin rotation now the coins costume run from costume 3 through to 6. we can allow the looping through using the frame below with the math 3 the first coin costume plus mod four as there are four costumes and the floor of frame on the left of the mod that should do it cool are you ready for a quick test run the project and jump into a mystery block yeah that's what i'm talking about the coins ping up nice and high spinning and return back down before despawning that looks good don't you think what's great is that we are also all set to add even more particle effects going forward right then spawning coins from mystery blocks is cool but well they wouldn't be mystery boxes if they didn't sometimes contain more interesting objects for our consumption our next task therefore is to be able to place a powerup of our choosing inside a mystery block click into the enemy sprite and look at the costume tab right at the bottom you'll find a mushroom named life it may seem off to count this as an enemy but except for the fact that it won't kill you the live sprite will share a lot of the same game code as a goomba and we have already added the ability to place these sprites over other tiles in the level editor this is super useful for what we're about to do start then by copying the live costume to the tile sprite i'll just check in the tiles and there it is costume number 30. we should map this to a key in the level editor so click into the editor sprite and make the tile key map visible add a new item for costume 30. and we'll map it to key 9. that's the enemy category do you remember this is special for placing enemies over other tiles make sure to click off the item to save it in the list if i run the project and enter the level editor i can press the 9 key twice to select the mushroom tile i want to be able to drop this on a mystery tile although i can click it nothing appears that's okay though we should have expected this this tile will have been recorded in the object lists but we have yet to write any code to spawn this type of enemy in the enemy sprite so let's do that click into the enemy sprite and find the define spawn type script this script is responsible for spawning enemies which at present is solely gumbers we need to extend this to cater for more enemy types specifically a life mushroom at this time we are going to make a custom block again for the scripts that are shared for all spawning naming it set type with an input type then a label and an input both named costume a label input width and a label and input for height start by moving the set type to goomba and everything below into the new define script then replace it with the new set type custom block the type costume width and height inputs must be filled out the same as they were for the gumba so i'm just copying and pasting the values from the set variable blocks that then allows us to link the input variables up to their matching set variables as a quick way to set all four of them in future next we'll take the top four set x and y scripts and move these into the define set type script too i'll pop them just under the set height block i just noticed we can safely remove the set type and hide block from there as this was left over from when we spawned goombas with the g key the enemy spawning loop already takes care of this at the end right so now we can more easily add a new type of enemy sprite to be spawned type 29 was a goomba so duplicate the if and instead look for a tile type of 30 our mushroom lifestyle we can fill out the set type block with the input values of life for the type and also as it happens the costume name too and both a width and height of 16 pixels now where the life differs from goomba is that it doesn't want to be activated when it moves onto the screen we did this by setting frame to the empty value so instead let's set frame to 1 before the set type block this will be our new way of indicating that an enemy sprite is hidden until we say otherwise to make this work come to the bottom of the define set type custom block and surround the show with an if block put in an or then on the left we always show the sprite if we are in the level editor that is editor is greater than zero the other condition where we show right away is when frame is equal to the empty value that way when the frame is 1 like we just set it it will stay hidden except of course when in the level editor which is just how we want it let's run the project so no mushroom is visible yet did i manage to place one i'll enter the level editor ah great there is the mushroom i placed earlier it did work so that special frame of 1 is working but i can still headbutt this mystery block containing the mushroom and get a coin that isn't right we need to turn off the coin particle for the tiles containing objects click into the tile sprite we are still in the when i receive position tile script now add in an if around three add particle blocks to check whether a tile has an object in it we just need to refer to the objects lists use the item hash of object idx and look for tile index to see if we can find that index in the list if there is no object at the location then the result is zero so we then allow it to spawn the coin as normal we should test that again just to confirm that the last mystery block is no longer spawning a coin particle yep perfect but now for the more complex job of triggering the mushroom sprite to appear instead click into the enemy sprite and find the when i receive move enemy script now scroll down the script to where we check for frame being less than zero if you remember this is triggered for idle enemies that is looking for them when they're about to come on screen well now this is also going to be triggering for our hidden enemies too we need to handle these hidden ones specifically so add in a new if as the first block within that if checking for a frame of minus 1. these tiles should be activated not when they come on screen but when they are bumped so if bump index equals the enemy sprite's spawn index that's where the enemy sprite spawned on the level then we show the sprite make sure to add or stop this script under the if so that hidden sprites don't process any further now let's give this a test ok this is a good start the mushroom is indeed showing when we head bump the tile but this isn't quite the desired behavior we need the mushroom to emerge from behind the mystery block so remove the show block and instead we will set frame to zero this means the enemy sprite is no longer inactive we'll also point in direction although this isn't really used yet setting it to the same direction as the mario sprite lastly and i have to say i was in two minds about how to go about this to get the sprite to appear behind the mystery block we will tell the sprite to go to the back layer handling sprite ordering in scratch is a pain and deserves a tutorial video all of its own so watch out for that okay we'll also add a go forward block add a new variable named layers background and we'll use this in the go forward this is here ready for when we add in a scrolling background as we will then be able to set this variable to the number of background sprites that we should stay in front of now scroll down to the bottom of the script where we are handling the processing of goomba with a gumba tick block let's duplicate it changing the if to look for a type of life remove the tick number and we'll make a new custom block named tick life run without screen refresh and pop it back within the new if followed by the stop this script i'll move this into some space okay well pop the show block back in here so that we can see what's going on and run the project now head bump that block did you see that the mushroom block appeared behind the block now but you can only just see it before the mystery block returns and covers it up again to avoid it being seen we'll need to delay it appearing for a few frames after the bump occurs and only then show it before allowing it to rise up out of the block below to change frame by one and then check if it is less than 16. if it is then stop this script that will prevent the mushroom appearing for around half a second next bring in an if else block checking for frame being less than 48 then we show the sprite and slowly move it upwards by changing y by 1. now how did we get the value 48 here we need to slowly move the mushroom up by 32 pixels that's a full tile but frame is already at 16 before we start moving so 32 plus 16 is yep 48 cool let's give it a test going straight for the mushroom block and oh yeah that is looking really exciting excellent work you've all been waiting patiently a long time to see this mechanic working now although we are not going to implement any actual powerups in this episode we might as well allow the player to pick it up so after the mushroom is finished rising up in the else here check whether it is touching mario and then we'll simply delete this clone for now this is also where we'll be able to trigger any special powers future and let's see yeah that works for me so how much time do we have left can we fit in goomba flipping from above a bump block i don't feel the episode would be complete without it yeah let's go for it in the enemy sprite make a new custom block naming it check flip if bump index is less than one then no tile has been bumped and we can just stop this script there's simply nothing more to do so if a block has been bumped is it one of the tiles under the sprite's feet let's check the tile under gumba's left foot first using a get tile at x y with an x minus width for the y position we'll use y minus height but then also subtract 8 pixels more to ensure we are looking at the block below now if the tile index of this tile we are checking is in fact not equal to bump index then we know the left foot was not bumped so we might as well check the right one instead duplicate the get tile and if block and replace the x minus width with an x plus width if the tile index is again not a match for a bumped tile then this gumbo is safe and we stop this script but if we got past these two if checks then gumba must have one foot on a bump tile either left or right so set their speed y to 14 to bounce them up into the air and then set speed x to the direction of mario divided by 45 that should be a good speed although i'm wondering in retrospect whether we should not have set the speed x at all and just left it as it was feel free to check for yourself which looks best okay almost ready to test but we haven't yet used this new check flip block find the define tick goomba script and pop it right at the end like this now run the project i'm quite excited about this already and take that gumba oh yeah let's do it again oh man this is too much fun to make it authentic we just need to flip the sprite upside down and let them fall off screen scroll back to the end of the define check flip script and set type to flip this will work like our squish type we made in a previous episode we want to make the sprite appear upside down so set the rotation style to all around and finally point in direction minus 90 negative 90. now find the when i receive move enemy script and add a new if type equals flip just above the type equals squish check we just want a simple gravity motion here so change x by speed x change speed y by 1 change y by speed y lastly we'll find out when they fall off the bottom of the screen with an if y is less than camera y subtract two hundred and then we delete this clone we should just drop in and stop the script to conclude the flip sprite script and that's it job done episode complete smash that green flag and watch that gumba fly wonderful look at how he flips upside down and falls off screen it just works so well and it's so satisfying that we have got this far we have certainly covered a lot of ground today and having the mystery blocks functioning really livens up the game a lot so pleased it wouldn't take much to add all sorts of different items to pop up from these blocks now so do feel free to mess around and add your own also why not try adding some powers to mario or a life counter there's still so many directions we could take things and although i am basing the tutorial heavily around mario mechanics that's only because mario does them so well you can of course make any platformer you wish from the same game engine just let your imaginations run wild well i do hope you've been able to follow along and that your projects are looking amazing in the next episode i'm expecting that we'll look at the player losing a life and perhaps adding some other visual eye candy like the scrolling backgrounds but we'll have to see as i know there are many other highly sought after features yet to be covered if you've enjoyed this tutorial then smash the like button and don't forget to subscribe to the channel to avoid missing my next exciting video so thank you for watching and scratch on guys
