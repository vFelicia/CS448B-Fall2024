With timestamps:

00:00 - hello everybody welcome back to another
00:02 - video
00:04 - here we share beginner-friendly coding
00:06 - tutorials on scratch
00:08 - roblox minecraft web programming and
00:10 - many more
00:11 - today we're going to make a tic-tac-toe
00:13 - game using python
00:15 - in this project i'll teach you how to
00:17 - make a tic-tac-toe game using python
00:20 - and yeah let's get started
00:27 - so let's begin by starting a new project
00:29 - in python item
00:31 - from here the first thing we're going to
00:33 - do is import tk enter
00:35 - so on the first line we should write
00:37 - from write dk
00:39 - enter and we'll say import and here we
00:42 - import everything that we have so we
00:43 - will put a star
00:45 - next we also want to import the message
00:47 - box from tk enter
00:49 - so here again from tk enter import
00:52 - message box next
00:55 - let's create our tdk enter here we can
00:58 - declare our own variable called pk
01:00 - and we'll make it based on the capital t
01:03 - lowercase
01:04 - k and a little and close up the bracket
01:09 - this is python way of making our own tk
01:11 - enter object
01:13 - and now we can set our new title for the
01:15 - game so we can go into our variable tk
01:17 - and do the dot title and here we can set
01:21 - it to
01:22 - new title
01:27 - now let's change the name for the tk
01:29 - enter that we have created for ourselves
01:31 - so let's go into tk and we'll access the
01:34 - title
01:35 - method and here we set the game to tick
01:39 - tac toe
01:45 - next let's add in our squares for a
01:47 - tic-tac-toe game we have 9 squares in
01:49 - total
01:50 - for a 3x3 box for each square we use
01:53 - a button to represent the square so that
01:56 - when we uh click on the
01:57 - square we know that the button has been
01:59 - clicked and then we can kind of see
02:01 - if that square has been taken so here
02:04 - we'll declare
02:05 - buttons and we'll start it equals the
02:08 - string
02:08 - var this will allow us to detect if
02:11 - there's any changes
02:13 - next let's start our first button which
02:15 - will be our top left button
02:17 - we'll name this button one and button
02:20 - one is going to be declares a button
02:23 - here we're going to put it in our tk
02:25 - object
02:27 - next we can set the text to an empty
02:30 - string
02:30 - so i'll just put a spacebar this is how
02:33 - we know
02:34 - that we haven't touched it yet now i can
02:37 - give it a font
02:38 - here i'm going to give it a font called
02:40 - um
02:41 - times new roman fonts 20 and bold
02:47 - and then i can set the background color
02:49 - which i would say is
02:50 - gray and then i can set
02:53 - another front round color and i'll set
02:56 - this to black
02:58 - next for the font size i will use
03:00 - heights of 10
03:02 - and the weft of 20
03:06 - and we'll assign the button a command
03:10 - the command will take in lambda
03:13 - sorry recommend we're taking lambda
03:16 - and we'll call the function called
03:19 - button
03:20 - click button click would take in an
03:22 - input which
03:23 - will uh pass in the button that we have
03:26 - and we can declare uh this button like
03:30 - this
03:31 - and now let's set the button grid so we
03:33 - can do that by doing
03:35 - button one dot grid
03:40 - here we want to put in the location
03:41 - where we want this button
03:43 - for the first button we want to put it
03:45 - in row equals one
03:47 - and columns equal zero this will be the
03:50 - top left position
03:51 - so be the first row and the first column
03:55 - and here we write sticky equals s
03:58 - plus m plus e plus w
04:01 - and this will allow us to fill this uh
04:04 - the whole board
04:05 - with our squares and here s
04:08 - n e w stands for south north east and
04:11 - west
04:12 - and this just means that this will
04:13 - expand as far as it can
04:16 - so now let's go ahead and finish our
04:17 - other nine buttons
04:20 - and now let's go ahead and finish our
04:21 - other eight buttons the declaration will
04:24 - be the same
04:24 - so we can go ahead and copy and paste
04:26 - this and the only thing with the change
04:28 - is the name
04:29 - for the button the parameter uh
04:33 - in the function call and then with the
04:36 - change
04:37 - uh the button one to button two of
04:38 - course and update the position
04:40 - so let's do that real quick so we change
04:42 - this to button 2
04:44 - the font size text everything else could
04:47 - stay the same
04:48 - and here where it says button click we
04:50 - want to pass in the parameter
04:52 - button 2 instead of button 1 and now
04:55 - let's change button two dot grid
04:57 - here will be in the same row but the
04:59 - column would now be one
05:03 - and let's do button three so again i
05:06 - have copy and paste
05:07 - the code i broke for button one i'm
05:09 - going to change this
05:10 - button three and then go change this
05:13 - argument to button three
05:16 - and now i'm changing button three dot
05:17 - grid and again it will be in row one
05:20 - but you'll be at the last column so here
05:22 - we'll put column equals two
05:25 - and again we can copy this uh
05:29 - basic layout for all of the other
05:31 - buttons so here i'm gonna quickly make
05:33 - all the buttons
05:34 - so i'm gonna make button four custom
05:37 - button four
05:38 - set button four dot grid and here since
05:42 - um tic tac toe can only have three by
05:43 - three so uh
05:45 - we have actually fill up the first row
05:47 - so here i'm gonna say row equals two
05:49 - and column school one this would be the
05:51 - middle most left
05:52 - square now for button five
05:57 - it will again be in the second row but
06:00 - it will be in the middle column so here
06:02 - for button five dot
06:04 - grid our row should be two and column
06:07 - should be one
06:10 - and button six again is going to be in
06:12 - row two
06:13 - and uh we should put the column to b2 as
06:16 - well
06:18 - and again don't forget to change the
06:21 - arguments that we have
06:22 - put in inside of our buffing click
06:27 - and now for button seven we're once
06:29 - again going back
06:31 - down to the third row now so here button
06:34 - seven dot grid
06:35 - should have row number three and column
06:37 - number of zero
06:40 - and now button eight here we change
06:43 - button age
06:44 - button dot click and button a dot grid
06:47 - will be in row three
06:49 - column one and finally our last button
06:52 - which is our bottom right
06:54 - button nine here we're going to change
06:57 - the arguments to button nine and button
07:01 - on dot grid will be at row three
07:03 - and column two now let's save this
07:10 - so now let's define the function that we
07:13 - made called button click so let's go
07:15 - ahead and go underneath our title
07:17 - and we can write defined button click
07:21 - and here we know that it pass in the
07:23 - button so we can say
07:24 - buttons and we can use the semicolon
07:28 - to see to say that we're defining this
07:30 - button here
07:32 - so in button.click we want to see
07:34 - whether the user is
07:36 - on circle or on an x and to do this
07:39 - we'll actually set a new variable and
07:41 - this variable is going to be global
07:43 - and we'll call it and we call it b
07:46 - click and b click will tell us
07:50 - rather to put a circle or an x so over
07:53 - here
07:53 - on b click let's just define it as true
07:56 - in the beginning and now let's check
07:59 - if the square has already been clipped
08:01 - on and um
08:02 - if it hasn't we can see which one to put
08:06 - in
08:06 - rather circle or an x so the first thing
08:08 - we should check
08:09 - is if the buttons and we'll check the
08:12 - text property
08:16 - and we'll check the text property by
08:18 - putting in
08:19 - text here we're trying to check if this
08:23 - equals equals to
08:24 - a space which we have originally defined
08:27 - it as
08:28 - and if it is now we can check if b click
08:30 - is true or false
08:32 - so now we can say and b click
08:35 - is equals equals to true in this case
08:39 - um since we have set b click to true um
08:42 - this would be the first
08:43 - player so i usually play circle first so
08:46 - here i can say
08:48 - buttons and we can change the text now
08:51 - and we can set it equal to the string x
08:57 - we can change the string circle since we
08:59 - are starting circle first
09:02 - next we should flip b click so next time
09:04 - we call this
09:05 - b click will be false and then we can
09:07 - put in an x
09:08 - so here we can set b click and we set it
09:11 - equals to false
09:14 - now we should have an else if statements
09:16 - so we can put el
09:18 - if this is an else if now we can check
09:21 - if the buttons
09:23 - um click is still empty but
09:26 - b click is false so here let's check the
09:29 - text
09:30 - here and we make sure that it is equal
09:32 - to an empty string
09:34 - and now if b click is equal equals to
09:38 - false
09:40 - now we will instead put in an x so here
09:43 - we will change
09:44 - the buttons at text and we set it equal
09:48 - to x and now again we have to flip
09:51 - b click so at the end we should say
09:54 - b click equals true
09:58 - and after each time we click a button we
10:00 - also want to make sure that user
10:02 - have not won the game yet or we should
10:05 - check
10:06 - if the user has won the game so here
10:07 - we're going to have a function called
10:09 - winner
10:10 - and when you're taking buttons and it
10:12 - would tell us if we have won the game
10:25 - so to win in the game of tic-tac-toe we
10:27 - need three in a row
10:29 - or three in a column or three in the
10:30 - diagonal so in this case we should check
10:32 - for all three cases
10:34 - so here let's define our winner function
10:37 - and we know that it would take in
10:38 - buttons
10:43 - here let's check if the user using the o
10:46 - has won the game
10:47 - so here we say if and let's check the
10:50 - first row
10:51 - and see if they have completed the first
10:53 - row so here we can say
10:55 - button one which is our top left button
10:58 - and we accept the text again and we see
11:01 - if it's equal to circle
11:03 - and then we can say equals equals
11:06 - o
11:10 - and the button 2 also has to equal
11:14 - o and button three also has equal o in
11:17 - order for
11:17 - the user using o to have one using the
11:19 - first row
11:20 - so here we can say button one dot text
11:23 - is equal to equal to o
11:25 - and button two and we access the text
11:28 - property and we'll check if it's also
11:31 - equal to o
11:32 - and lastly we also check button 3 and we
11:35 - see the text
11:36 - and if he is equal to o again
11:39 - that means that the user has one
11:43 - another way they can win is using the
11:45 - second row or the third row so let's do
11:47 - that as well
11:48 - in this case we'll use or since the user
11:51 - doesn't necessarily have to use
11:52 - all of three of these three and only one
11:55 - condition will win them again
11:57 - so here let's check for the second rule
12:00 - so the second row consists of button
12:01 - four
12:02 - five and six so here we check button
12:04 - four
12:07 - and button five and again we're just
12:10 - looking at the text
12:11 - and see if this equals two o
12:15 - and now we can check button six
12:18 - and change text and see if it equals o
12:23 - and then another way they can win this
12:24 - if they have three in a row on the third
12:26 - row
12:27 - so here we have another or and now we'll
12:29 - check for the bottom row
12:31 - here we will have button seven
12:35 - button eight and button nine
12:40 - so here i have button seven equals zero
12:43 - zero
12:43 - button eight and let's check if it's
12:47 - equal to o
12:48 - and lastly button nine
12:54 - so basically the or statement allows us
12:56 - to check
12:57 - for any of these winning conditions and
12:59 - if either
13:00 - or any one of these conditions are true
13:03 - that means the user is one
13:06 - another way the user can win is by
13:07 - having three in the column
13:09 - so let's try to do that as well for
13:12 - columns we know that
13:13 - one four and seven two five eight and
13:15 - three
13:16 - six and nine will be um
13:21 - will all be the same if the user is one
13:24 - so here let's go and check button one
13:28 - four and seven
13:30 - so let's see if button one is equals
13:32 - equals to o
13:35 - and button four
13:38 - is equals equals to o and
13:41 - button seven and again we're always
13:45 - going to be checking the text
13:47 - anyways equals o or
13:50 - here we check the second column which
13:52 - consists of two five and eight
13:54 - so we see button two and we checked if
13:58 - is equal to o
13:59 - and now we check this button five
14:03 - and see if the text is equals equals to
14:05 - o
14:07 - and lastly we'll check button eight
14:11 - and see if the text is equals equals to
14:14 - l
14:16 - and now let's check for the last column
14:18 - which will consist of
14:19 - button three button six and button nine
14:22 - so here button three
14:24 - will check if the text is equals equals
14:28 - to o and if
14:31 - button 6
14:34 - see if the text is equals equals to 0
14:38 - and button 9 check the text
14:42 - and see if it's equals equals zero and
14:45 - finally there are two other ways to win
14:47 - that would be the diagonal so the
14:49 - diagonal you can do two ways
14:51 - either you can go one five and nine
14:54 - which is
14:55 - from top left to the bottom right or you
14:57 - can go from the top right
15:00 - to the bottom left and here um
15:04 - let's do the first top left to the
15:05 - bottom right so the top left will be
15:08 - button one so here we'll check if button
15:10 - one
15:11 - is equals equals to o and then we can
15:13 - check with button five
15:14 - which was our middle button this also
15:17 - equals to o
15:21 - and then we can check the bottom right
15:23 - which is our button nine
15:25 - we'll check if it's equals equals to 0
15:29 - and lastly let's check the last diagonal
15:32 - which is
15:32 - top right to bottom left in this case
15:35 - it'll be button 3 button 5 and button 7.
15:39 - so here we check button three save this
15:42 - equals equals to o
15:44 - and plus five
15:47 - and see if this equals equals to o
15:50 - and lastly button seven
15:54 - and see if the equals two o
15:58 - and now we close off our if statements
16:00 - so the n make sure that all three
16:02 - conditions has to be true
16:03 - in order for it to be true while the
16:06 - order allows any of these
16:08 - conditions to be true if you allow the
16:10 - whole thing to be true
16:14 - so let's type here
16:18 - so after this if statements we will
16:19 - follow up in a semicolon to define
16:21 - this following line is going to be
16:23 - inside of this if
16:25 - and when the user is 1 that means we've
16:28 - entered this if loop
16:29 - and now we should display the message
16:32 - and we'll do that using the message box
16:34 - that we have imported so we can type
16:36 - message box
16:38 - and we can say dot show info
16:41 - and now here we can write player
16:44 - o wins just like that
16:51 - [Music]
16:52 - now we can do an elsif statement
16:57 - and this alphys house if statements will
17:00 - consist
17:01 - the same thing as everything in here
17:05 - so what we can actually do is just copy
17:07 - and paste this
17:09 - and instead of o's we'll be checking for
17:11 - x's so here i'm going to change
17:14 - all of these o's into x because the
17:16 - pattern is going to be the same
17:18 - we're going to be checking for the first
17:19 - row and then we'll check for the second
17:21 - row
17:23 - and then the third
17:26 - and then we'll move on to the columns so
17:28 - we can check
17:30 - first column here and again the only
17:33 - difference is we're checking for x's
17:35 - instead of o's and then we check the
17:38 - second column
17:43 - and now the third column
17:50 - and then we can check the top left
17:52 - bottom right diagonal
17:55 - and then finally we can check the top
17:57 - right
17:58 - to bottom left diagonal
18:02 - and here again we can use the message
18:05 - box to display the result
18:07 - so we can do message box dot show info
18:10 - and here we can say player x wins
18:16 - and that will define that would be the
18:18 - all
18:20 - for our winner function
18:25 - so the last thing we should do is
18:26 - actually make this on the loop
18:28 - so at the very bottom here after all of
18:30 - our declarations
18:32 - and our grids and button
18:35 - decorations we're going to write tk
18:37 - which is our
18:39 - dk inter object and we say
18:43 - dot name loop and we'll pass an empty
18:46 - parameters and this will start running
18:49 - the game
18:50 - so now uh this will actually be our tic
18:54 - tac
18:55 - and this will actually be our tic tac
18:57 - toe game
19:02 - so that's all for today i hope you guys
19:03 - enjoyed don't forget to subscribe and
19:06 - like our videos
19:07 - also check out our other two videos here
19:09 - while you wait for our next video
19:11 - thank you and bye bye

Cleaned transcript:

hello everybody welcome back to another video here we share beginnerfriendly coding tutorials on scratch roblox minecraft web programming and many more today we're going to make a tictactoe game using python in this project i'll teach you how to make a tictactoe game using python and yeah let's get started so let's begin by starting a new project in python item from here the first thing we're going to do is import tk enter so on the first line we should write from write dk enter and we'll say import and here we import everything that we have so we will put a star next we also want to import the message box from tk enter so here again from tk enter import message box next let's create our tdk enter here we can declare our own variable called pk and we'll make it based on the capital t lowercase k and a little and close up the bracket this is python way of making our own tk enter object and now we can set our new title for the game so we can go into our variable tk and do the dot title and here we can set it to new title now let's change the name for the tk enter that we have created for ourselves so let's go into tk and we'll access the title method and here we set the game to tick tac toe next let's add in our squares for a tictactoe game we have 9 squares in total for a 3x3 box for each square we use a button to represent the square so that when we uh click on the square we know that the button has been clicked and then we can kind of see if that square has been taken so here we'll declare buttons and we'll start it equals the string var this will allow us to detect if there's any changes next let's start our first button which will be our top left button we'll name this button one and button one is going to be declares a button here we're going to put it in our tk object next we can set the text to an empty string so i'll just put a spacebar this is how we know that we haven't touched it yet now i can give it a font here i'm going to give it a font called um times new roman fonts 20 and bold and then i can set the background color which i would say is gray and then i can set another front round color and i'll set this to black next for the font size i will use heights of 10 and the weft of 20 and we'll assign the button a command the command will take in lambda sorry recommend we're taking lambda and we'll call the function called button click button click would take in an input which will uh pass in the button that we have and we can declare uh this button like this and now let's set the button grid so we can do that by doing button one dot grid here we want to put in the location where we want this button for the first button we want to put it in row equals one and columns equal zero this will be the top left position so be the first row and the first column and here we write sticky equals s plus m plus e plus w and this will allow us to fill this uh the whole board with our squares and here s n e w stands for south north east and west and this just means that this will expand as far as it can so now let's go ahead and finish our other nine buttons and now let's go ahead and finish our other eight buttons the declaration will be the same so we can go ahead and copy and paste this and the only thing with the change is the name for the button the parameter uh in the function call and then with the change uh the button one to button two of course and update the position so let's do that real quick so we change this to button 2 the font size text everything else could stay the same and here where it says button click we want to pass in the parameter button 2 instead of button 1 and now let's change button two dot grid here will be in the same row but the column would now be one and let's do button three so again i have copy and paste the code i broke for button one i'm going to change this button three and then go change this argument to button three and now i'm changing button three dot grid and again it will be in row one but you'll be at the last column so here we'll put column equals two and again we can copy this uh basic layout for all of the other buttons so here i'm gonna quickly make all the buttons so i'm gonna make button four custom button four set button four dot grid and here since um tic tac toe can only have three by three so uh we have actually fill up the first row so here i'm gonna say row equals two and column school one this would be the middle most left square now for button five it will again be in the second row but it will be in the middle column so here for button five dot grid our row should be two and column should be one and button six again is going to be in row two and uh we should put the column to b2 as well and again don't forget to change the arguments that we have put in inside of our buffing click and now for button seven we're once again going back down to the third row now so here button seven dot grid should have row number three and column number of zero and now button eight here we change button age button dot click and button a dot grid will be in row three column one and finally our last button which is our bottom right button nine here we're going to change the arguments to button nine and button on dot grid will be at row three and column two now let's save this so now let's define the function that we made called button click so let's go ahead and go underneath our title and we can write defined button click and here we know that it pass in the button so we can say buttons and we can use the semicolon to see to say that we're defining this button here so in button.click we want to see whether the user is on circle or on an x and to do this we'll actually set a new variable and this variable is going to be global and we'll call it and we call it b click and b click will tell us rather to put a circle or an x so over here on b click let's just define it as true in the beginning and now let's check if the square has already been clipped on and um if it hasn't we can see which one to put in rather circle or an x so the first thing we should check is if the buttons and we'll check the text property and we'll check the text property by putting in text here we're trying to check if this equals equals to a space which we have originally defined it as and if it is now we can check if b click is true or false so now we can say and b click is equals equals to true in this case um since we have set b click to true um this would be the first player so i usually play circle first so here i can say buttons and we can change the text now and we can set it equal to the string x we can change the string circle since we are starting circle first next we should flip b click so next time we call this b click will be false and then we can put in an x so here we can set b click and we set it equals to false now we should have an else if statements so we can put el if this is an else if now we can check if the buttons um click is still empty but b click is false so here let's check the text here and we make sure that it is equal to an empty string and now if b click is equal equals to false now we will instead put in an x so here we will change the buttons at text and we set it equal to x and now again we have to flip b click so at the end we should say b click equals true and after each time we click a button we also want to make sure that user have not won the game yet or we should check if the user has won the game so here we're going to have a function called winner and when you're taking buttons and it would tell us if we have won the game so to win in the game of tictactoe we need three in a row or three in a column or three in the diagonal so in this case we should check for all three cases so here let's define our winner function and we know that it would take in buttons here let's check if the user using the o has won the game so here we say if and let's check the first row and see if they have completed the first row so here we can say button one which is our top left button and we accept the text again and we see if it's equal to circle and then we can say equals equals o and the button 2 also has to equal o and button three also has equal o in order for the user using o to have one using the first row so here we can say button one dot text is equal to equal to o and button two and we access the text property and we'll check if it's also equal to o and lastly we also check button 3 and we see the text and if he is equal to o again that means that the user has one another way they can win is using the second row or the third row so let's do that as well in this case we'll use or since the user doesn't necessarily have to use all of three of these three and only one condition will win them again so here let's check for the second rule so the second row consists of button four five and six so here we check button four and button five and again we're just looking at the text and see if this equals two o and now we can check button six and change text and see if it equals o and then another way they can win this if they have three in a row on the third row so here we have another or and now we'll check for the bottom row here we will have button seven button eight and button nine so here i have button seven equals zero zero button eight and let's check if it's equal to o and lastly button nine so basically the or statement allows us to check for any of these winning conditions and if either or any one of these conditions are true that means the user is one another way the user can win is by having three in the column so let's try to do that as well for columns we know that one four and seven two five eight and three six and nine will be um will all be the same if the user is one so here let's go and check button one four and seven so let's see if button one is equals equals to o and button four is equals equals to o and button seven and again we're always going to be checking the text anyways equals o or here we check the second column which consists of two five and eight so we see button two and we checked if is equal to o and now we check this button five and see if the text is equals equals to o and lastly we'll check button eight and see if the text is equals equals to l and now let's check for the last column which will consist of button three button six and button nine so here button three will check if the text is equals equals to o and if button 6 see if the text is equals equals to 0 and button 9 check the text and see if it's equals equals zero and finally there are two other ways to win that would be the diagonal so the diagonal you can do two ways either you can go one five and nine which is from top left to the bottom right or you can go from the top right to the bottom left and here um let's do the first top left to the bottom right so the top left will be button one so here we'll check if button one is equals equals to o and then we can check with button five which was our middle button this also equals to o and then we can check the bottom right which is our button nine we'll check if it's equals equals to 0 and lastly let's check the last diagonal which is top right to bottom left in this case it'll be button 3 button 5 and button 7. so here we check button three save this equals equals to o and plus five and see if this equals equals to o and lastly button seven and see if the equals two o and now we close off our if statements so the n make sure that all three conditions has to be true in order for it to be true while the order allows any of these conditions to be true if you allow the whole thing to be true so let's type here so after this if statements we will follow up in a semicolon to define this following line is going to be inside of this if and when the user is 1 that means we've entered this if loop and now we should display the message and we'll do that using the message box that we have imported so we can type message box and we can say dot show info and now here we can write player o wins just like that now we can do an elsif statement and this alphys house if statements will consist the same thing as everything in here so what we can actually do is just copy and paste this and instead of o's we'll be checking for x's so here i'm going to change all of these o's into x because the pattern is going to be the same we're going to be checking for the first row and then we'll check for the second row and then the third and then we'll move on to the columns so we can check first column here and again the only difference is we're checking for x's instead of o's and then we check the second column and now the third column and then we can check the top left bottom right diagonal and then finally we can check the top right to bottom left diagonal and here again we can use the message box to display the result so we can do message box dot show info and here we can say player x wins and that will define that would be the all for our winner function so the last thing we should do is actually make this on the loop so at the very bottom here after all of our declarations and our grids and button decorations we're going to write tk which is our dk inter object and we say dot name loop and we'll pass an empty parameters and this will start running the game so now uh this will actually be our tic tac and this will actually be our tic tac toe game so that's all for today i hope you guys enjoyed don't forget to subscribe and like our videos also check out our other two videos here while you wait for our next video thank you and bye bye
