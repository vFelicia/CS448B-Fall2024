With timestamps:

00:00 - hello everyone welcome back to our
00:02 - channel here we share beginner-friendly
00:04 - coding tutorials on scratch roblox
00:07 - minecraft with programming and many more
00:10 - so today we are going to create a roblox
00:13 - project called cross the bridge
00:19 - in this video we will use roblox studio
00:22 - to code the project using lua language
00:25 - we will code two scripts
00:27 - where the first one is the kill script
00:29 - which applied to the bombs and the
00:32 - poisonous water
00:34 - and the next script would be to change
00:36 - the direction of the player's camera
00:38 - into a top-down v
00:41 - alright
00:42 - so let's get started
00:45 - now we will type the code required to
00:47 - make sure that the player dies every
00:49 - time he or she touches the water on the
00:52 - bomb
00:53 - so if you hover over the bomb
00:56 - okay over here in the explorer part you
00:59 - will see a plus sign button
01:01 - and on clicking that
01:03 - you will search for script
01:06 - so this will allow us to type in the
01:09 - code now you're in the script already
01:12 - how about let's delete the template
01:14 - first
01:14 - let's delete it
01:16 - and in the first line we're going to
01:18 - create a function
01:21 - with the name kill
01:24 - and the parameter hit
01:27 - so this hit so it will only kill the
01:29 - object that was being hit on the second
01:31 - line let's create a variable with the
01:34 - name player
01:37 - we're going to write local player
01:41 - equals
01:42 - hit
01:44 - parent
01:46 - and then column
01:47 - find
01:49 - first
01:51 - child
01:53 - and open a parenthesis also quotation
01:55 - mark
01:57 - humanoid
01:59 - so here the hit target of this function
02:02 - is the first object
02:04 - that has a humanoid part which means a
02:06 - human or a player itself now we're going
02:09 - to create the line number three
02:11 - with the conditional if the player
02:15 - okay and then at the sign
02:17 - equals
02:19 - nil
02:20 - then
02:22 - so this means that
02:24 - the if the player is not absent in the
02:26 - game
02:27 - then we will drop the player's health
02:29 - into zero
02:31 - then here
02:33 - let's add player
02:35 - dot health
02:38 - equals zero and now in line seven
02:42 - let's type this script
02:45 - dot parent
02:47 - dot
02:48 - touch
02:49 - and then colon
02:51 - connect
02:53 - parenthesis kill
02:55 - so what this line does is that the
02:57 - player will only get killed when
02:59 - touching the object which contains this
03:02 - script
03:03 - which means the bomb
03:05 - now we finish the script how about let's
03:07 - copy the script
03:09 - copy it
03:11 - and then paste it into the other bomb
03:13 - objects
03:15 - paste
03:16 - into okay paste in paste into
03:21 - copy and then paste into
03:24 - again paste in two
03:27 - if you want to make it faster again you
03:29 - can always use the shift
03:31 - don't forget that we're going to add
03:33 - this
03:34 - script into the turret which is the
03:36 - water the last part of this project is
03:39 - to change the direction of the player's
03:41 - camera into a top down view
03:44 - alright now let's go to the starter
03:46 - player in the explorer right go down
03:49 - starter player should be here
03:52 - hover over the starter player
03:55 - and let's see the starter player script
03:57 - do you see the plus sign over here click
03:59 - the plus button
04:01 - and let's look for local script
04:03 - all right
04:05 - and then we're going to rename this
04:08 - into
04:09 - this able
04:12 - camera
04:14 - movement
04:18 - and then we're going to delete the
04:20 - template script over here
04:22 - on the first line
04:23 - we will wait for one second
04:25 - wait parenthesis 1
04:28 - to make sure
04:29 - the player is font before we change the
04:33 - then we will disable the camera movement
04:36 - by using script
04:39 - dot parent
04:41 - dot
04:42 - disable camera movement
04:45 - all right it's that one disable camera
04:47 - movement
04:48 - equals true
04:50 - this will restrict players to looking
04:53 - in a certain direction
04:55 - now let's hover again over the starter
04:57 - pair scripts
04:59 - and then we're going to create another
05:01 - new local script
05:03 - all right we're going to name this local
05:05 - script
05:06 - as new
05:08 - direction
05:15 - now let's delete the template script
05:18 - on line number one
05:20 - let's define the position of our camera
05:22 - now we're going to give a local variable
05:25 - with the name
05:26 - offset
05:31 - so this will store the position the
05:33 - camera is facing depending on the
05:35 - direction you are facing you might need
05:37 - to adjust the position later on so that
05:39 - you can create a top down view
05:41 - now let's write
05:43 - vector 3
05:45 - dot mu
05:47 - and then open a parenthesis
05:50 - all right and then how about let's
05:52 - change it into 0
05:53 - 100
05:55 - and 50.
05:57 - you can always change this anytime you
05:59 - want but let's do this first let's do
06:01 - the 0 150 first
06:04 - now on line number two let's create a
06:07 - variable called player
06:09 - local
06:10 - player so in this player it will store
06:13 - the players in this game
06:16 - now we're going to use grip
06:19 - parent
06:20 - dot parent
06:24 - to refer to the starter player level so
06:27 - this will ensure that the new camera
06:30 - setting will be applied to all the
06:31 - players even when you publish your game
06:35 - on line number three let's create a
06:37 - variable called camera
06:40 - local camera
06:42 - equals
06:43 - game dot workspace
06:47 - dot current camera
06:49 - so this variable will refer to the
06:52 - camera in the workspace
06:55 - on line number four let's create a
06:57 - variable called run service
06:59 - local
07:01 - run service
07:04 - so this run service will get the service
07:06 - of run service
07:08 - we will further clarify this as we code
07:11 - so here
07:12 - in the roblox
07:14 - the run service component
07:16 - contains method which manage the context
07:19 - of which the game is running
07:21 - now we're going to have
07:23 - game
07:25 - column
07:27 - get service
07:30 - run service
07:37 - on line 5 we will change the camera's
07:40 - field of view to 90.
07:43 - now let's type camera
07:44 - dot
07:46 - field of view
07:49 - and then
07:50 - equals 90
07:53 - so the field of view is the range of the
07:56 - game world that can be shown on the
07:58 - screen changing it to 90 will show us
08:00 - the bigger portion of the game
08:03 - now on the sixth line let's create a
08:06 - function
08:08 - with the name
08:10 - function with the name on
08:13 - render
08:15 - step
08:20 - and let's enter to the line number seven
08:23 - so here we're going to create a variable
08:26 - with the name player
08:29 - position
08:31 - so this player position will store the
08:34 - position of the humanoid root part of
08:36 - the player
08:37 - actually the humanoid root part is the
08:40 - core of a player and it can be used to
08:42 - locate a player
08:44 - now
08:45 - let's have equal over here and then
08:47 - let's have player dot
08:49 - character
08:50 - dot
08:52 - humanoid root
08:56 - part
09:00 - dot
09:01 - position
09:02 - on line eight let's create a camera
09:05 - position variable
09:06 - local camera
09:09 - position
09:13 - equals
09:14 - player position
09:17 - plus
09:18 - offset
09:21 - so here the camera position variable
09:24 - will store the adjuster's position
09:26 - of the camera
09:28 - the adjusted position is the player's
09:30 - position plus the offset
09:34 - on line number nine let's reset the c
09:37 - frame or the coordinate frame of the
09:39 - camera now we have camera
09:42 - dot
09:44 - coordinate frame
09:49 - equals c frame
09:53 - dot new
09:56 - and then
09:58 - we're gonna have parenthesis
10:00 - camera
10:02 - position
10:04 - comma
10:06 - layer
10:08 - position
10:12 - now to carry out the top down view
10:14 - adjustment we'll run on line 11
10:18 - the bind to renders that function
10:21 - so we're going to have
10:24 - run service
10:27 - and then column
10:29 - bind
10:30 - to render steps
10:32 - yep
10:33 - so there are three main arguments in the
10:36 - bind to render step function
10:38 - first we have the name second is the
10:40 - priority and the third is what function
10:42 - to call okay so for our program it will
10:46 - be
10:48 - camera remember the apostrophe
10:51 - and then
10:52 - enum
10:54 - dot render
10:55 - priority
10:58 - render priority
11:00 - dot camera
11:02 - dot value
11:04 - and then we're going to have on
11:07 - render step
11:09 - after typing out the script
11:11 - go to file and then save your project
11:14 - then go to home and then play to test it
11:17 - out
11:19 - now i'm testing the game right now here
11:22 - i cannot adjust my camera movement
11:25 - and then when i go here you need to
11:28 - really really be careful
11:30 - and then let's see if the bomb works
11:31 - okay the bomb works properly over here
11:36 - then what will happen
11:38 - if we accidentally fall down okay
11:41 - so we'll die
11:45 - so that's all for the game design of
11:47 - this project hope you like this video
11:49 - don't forget to subscribe and like our
11:51 - videos also check out these two other
11:53 - videos here while you're waiting for the
11:55 - next video thank you and see you in the
11:57 - next video goodbye

Cleaned transcript:

hello everyone welcome back to our channel here we share beginnerfriendly coding tutorials on scratch roblox minecraft with programming and many more so today we are going to create a roblox project called cross the bridge in this video we will use roblox studio to code the project using lua language we will code two scripts where the first one is the kill script which applied to the bombs and the poisonous water and the next script would be to change the direction of the player's camera into a topdown v alright so let's get started now we will type the code required to make sure that the player dies every time he or she touches the water on the bomb so if you hover over the bomb okay over here in the explorer part you will see a plus sign button and on clicking that you will search for script so this will allow us to type in the code now you're in the script already how about let's delete the template first let's delete it and in the first line we're going to create a function with the name kill and the parameter hit so this hit so it will only kill the object that was being hit on the second line let's create a variable with the name player we're going to write local player equals hit parent and then column find first child and open a parenthesis also quotation mark humanoid so here the hit target of this function is the first object that has a humanoid part which means a human or a player itself now we're going to create the line number three with the conditional if the player okay and then at the sign equals nil then so this means that the if the player is not absent in the game then we will drop the player's health into zero then here let's add player dot health equals zero and now in line seven let's type this script dot parent dot touch and then colon connect parenthesis kill so what this line does is that the player will only get killed when touching the object which contains this script which means the bomb now we finish the script how about let's copy the script copy it and then paste it into the other bomb objects paste into okay paste in paste into copy and then paste into again paste in two if you want to make it faster again you can always use the shift don't forget that we're going to add this script into the turret which is the water the last part of this project is to change the direction of the player's camera into a top down view alright now let's go to the starter player in the explorer right go down starter player should be here hover over the starter player and let's see the starter player script do you see the plus sign over here click the plus button and let's look for local script all right and then we're going to rename this into this able camera movement and then we're going to delete the template script over here on the first line we will wait for one second wait parenthesis 1 to make sure the player is font before we change the then we will disable the camera movement by using script dot parent dot disable camera movement all right it's that one disable camera movement equals true this will restrict players to looking in a certain direction now let's hover again over the starter pair scripts and then we're going to create another new local script all right we're going to name this local script as new direction now let's delete the template script on line number one let's define the position of our camera now we're going to give a local variable with the name offset so this will store the position the camera is facing depending on the direction you are facing you might need to adjust the position later on so that you can create a top down view now let's write vector 3 dot mu and then open a parenthesis all right and then how about let's change it into 0 100 and 50. you can always change this anytime you want but let's do this first let's do the 0 150 first now on line number two let's create a variable called player local player so in this player it will store the players in this game now we're going to use grip parent dot parent to refer to the starter player level so this will ensure that the new camera setting will be applied to all the players even when you publish your game on line number three let's create a variable called camera local camera equals game dot workspace dot current camera so this variable will refer to the camera in the workspace on line number four let's create a variable called run service local run service so this run service will get the service of run service we will further clarify this as we code so here in the roblox the run service component contains method which manage the context of which the game is running now we're going to have game column get service run service on line 5 we will change the camera's field of view to 90. now let's type camera dot field of view and then equals 90 so the field of view is the range of the game world that can be shown on the screen changing it to 90 will show us the bigger portion of the game now on the sixth line let's create a function with the name function with the name on render step and let's enter to the line number seven so here we're going to create a variable with the name player position so this player position will store the position of the humanoid root part of the player actually the humanoid root part is the core of a player and it can be used to locate a player now let's have equal over here and then let's have player dot character dot humanoid root part dot position on line eight let's create a camera position variable local camera position equals player position plus offset so here the camera position variable will store the adjuster's position of the camera the adjusted position is the player's position plus the offset on line number nine let's reset the c frame or the coordinate frame of the camera now we have camera dot coordinate frame equals c frame dot new and then we're gonna have parenthesis camera position comma layer position now to carry out the top down view adjustment we'll run on line 11 the bind to renders that function so we're going to have run service and then column bind to render steps yep so there are three main arguments in the bind to render step function first we have the name second is the priority and the third is what function to call okay so for our program it will be camera remember the apostrophe and then enum dot render priority render priority dot camera dot value and then we're going to have on render step after typing out the script go to file and then save your project then go to home and then play to test it out now i'm testing the game right now here i cannot adjust my camera movement and then when i go here you need to really really be careful and then let's see if the bomb works okay the bomb works properly over here then what will happen if we accidentally fall down okay so we'll die so that's all for the game design of this project hope you like this video don't forget to subscribe and like our videos also check out these two other videos here while you're waiting for the next video thank you and see you in the next video goodbye
