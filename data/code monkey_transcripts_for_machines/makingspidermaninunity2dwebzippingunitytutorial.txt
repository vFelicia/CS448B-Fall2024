hello and welcome I'm your code monkey min de series of creating spiderman in unity 2d in this video we're going to add the ability to web zip so we can move around the map quickly let's begin okay so far we have this scene in here there's spiderman and some enemies I can move around the enemies follow me and I can also attack them and after three hits they get killed and they fly alright now one thing that is pre essential to spiderman is webswinging since we were making this in topdown 2d we have to get creative with how we're going to make web based movement so we're going to add web zipping where we can place the mouse at a certain position and spiderman will fire a web towards that position and pull himself towards there alright so that's the plan let's get to it so first of all here on the game handler let's comment out this code in here that is spawning the enemies so we can implement our website and test without being bothered by the enemies so right now there's only Spider Man here okay great now in order to implement web serving I added some extra functions into our Spider Man base class so here I have a function to play the web zip shoot animation webs if flying animation and the sliding animation I also have two functions to get the left hand position and the right hand position so the goal is to first play the web zip animation at the same time fire the web visual from the hands towards the target position then when the web lands play the flying animation while she is flying towards the target position and as soon as he gets there play the sliding animation so he slides for a short while alright so that's a plan let's get to it we're first going to make everything work mechanically and then won't worry about adding the visuals so let's begin by getting the target position on the update let's add a function called handle web zip start let's make this function down here private and what does it start okay we're going to do a webs if towards the mouse position when we press space so in here do an if input dot get key down of key code space okay so when we press space let's first grab the target position so vector three for the web zip target which will be the mouse position so you don't wanna get emails wrong position let's go only to a vector3 for deer to target position which will be our webs if target position our get position and our noise so now let's make a simple slide towards that direction now in order to slide let's go up here and add a new state and we're going to have the state called webbed zipping and in here and let's also store some member variables for the web saving direction and the target so make a private vector3 for the web zip deer and a private vector3 for the web zip target position okay so this is enough information for our first implementation so we can go down here and instead of creating these variables well let's use the member variables and then we set the states to being staked out web zipping all right now we go here onto our update and add another case for the new states state web zipping do something okay same here let's create a function called handle web zipping private draw in handle web zipping and in here let's move towards our target so we're going to move the transform dot position we're going to move it using the web zip dear x times a delta time and also x a certain web zip speed so it's defining here a float for the web zip speed and let's say a 250 m and after we move let's do a simple check to see if we have reached the target so do an if in vector 3 dot distance between our position and the web zip target position if distance is under 5 F then let's say we have reached need target so in here on let's set the state back to normal set state not okay okay so this is a very simple sliding movement so again up here we got the normal state whilst in the normal state we are running this function test if we should start web zipping so in this function we only test for the spacebar if we hit the spacebar we store the mouse room position which is the target we come like the direction to that target and we switch the state to web zipping then on the web site being state we have this function and this function defines a basic speed and moves the transform towards the web zip direction using that speed once it gets within five units of the web zip target its Emily goes back to normal right so let's see if all that is correct okay here's spiderman and if I put my mouse in here and I press space yep there you go he flew to that position so the flying doesn't look free correct but it looks a bit bad how he stops exactly at the target so if I points my mouse examining there can I hit it he stops instantly so let's add a bit of sliding to the end back in our code and let's go up here and make another state this will be the web zipping sliding again on the update and now the case state dot web zipping sliding right now the function handle web zipping sliding so now this function will slowly stop him before turning the state back to normal now we can do that very simply by reducing the speed that he's moving so instead of defining the website speed and here let's define it up here so a private mode for the web zip speed and we're going to set the speed before we change the state to the web zipping and we know we're gonna need this in here okay so before we start we set it to 250 and then here we use that speed and now in here while sliding let's reduce that speed so do a web suppt speed equals the web zip speed multiplied by time dot the time multiplied by a certain number so let's say 8 F so essentially every frame we are reducing the web's if speed so after we reduce the speed let's actually move him and then let's do a simple if the web sip speed if it is too low so let's say then he stops moving so get the state back to normal and on the handle web zipping let's increase the distance on which he starts sliding so he starts sliding before he actually reaches the target so in here for about 20 and in here instead of going to the state normal what's that he stayed to be state dot web zipping sledding all right so when we are web zipping we move the same as previously then we test for a larger distance if we do get within 20 units of our target then we set the state to web serving sliding which runs this function and here we reduce the speed every frame we move him forward just the same and we check if the speed is too low if it is then he goes back to normal so now instead of having an abrupt stop we should be able to see spiderman slowly stopping okay here we are and now if I move in there and I hit space if there are you you can see a nice smooth slide at the end so if I try to webs if in there you can see right before he gets there he started sliding and slowly stops okay good so mechanically everything is working now let's handle the various animations and effects so in our code on the handle web start let's play the flying animation just as we switch the state so there's final man base don't play the webs if flying animation and play towards the web zip dear okay so we start playing the flying animation then we switches state to web zipping so whilst we are in here we are flying once we stop flying and start sliding let's choose the other animation so do the spiderman base play the sliding animation and again towards the web zip dear keep that animation while sliding and then goes back to normal and the normal he goes back to I don't okay so let's see that okay here I am and if I click there yep you can see that he is flying and then slowly stops alright so the movement and animations are correct now the main thing we are missing is obviously the shooting the web part over here on the textures folder I have a web texture it is a pre simple texture that repeats itself so as you can see just like that you can see the import options we are simply pivoting on the right side and everything else is pretty normal so with this sprite renderer we can change the draw mode from simple into tiled and this way we can easily modify the width and as you can see it increases and the way the texture is set up you can see that it repeats seamlessly I want to extend to the right instead of to the left so let's simply flip it on the xaxis and this way here we are so we essentially place this on the hand and then increase the width so let's make this into a prefab so create a new prefab this will be the PF spiderman web let's drag it on there okay now we're going to need a reference in order to spawn it so let's simply add it to our game assets script in case you don't know this script assembly so we can have an object in the scene where we can drag references and access those references through code so in here I'm going to simply add a public transform for the PF spiderman web and back in the editor I simply drag the prefab okay so now let's go back into the spiderman code and first let's just test out spawning the web so into the webs if start let's comment out the code to actually start whipping living in this state okay so in here let's try spawning the web so I'm going to do a transform for the spiderman web and I'm going to instantiate I'm going to go into the game assets that instance and grab the spiderman web prefab I'm going to instantiate it on the hand position so let's go into the spiderman base and get the hand left position okay and quaternion dot identity so let's calculate the direction from this hand so a vector three for the web deer which will be the web sip target position mine is this hand position instead of the spiderman position and then normalize the whole thing then let's set the rotation to the spiderman web not the owner angles new vector3 return zero zero and then calculate the angle so go into the utils class get the angle from float and give it the web there all right and finally we need to set the correct size so in the spiderman web get the component of type sprite renderer and set the size to be a new vector to right now we wanted to show the complete distance so let's do a vector three dot distance between the hand position so spiderman base get hand left position towards the web zip target position so when the X we're going to have the full distance between the hand and the target and for the Y and let's leave it at the same y so use the size all right so very simply we are in Senshi ating the spiderman web prefab we calculate the direction towards the target from the hand position then we simply rotate the web using that direction and we set the size to be the complete size by calculating the distance from the hand towards the target and using the same y so let's test and see if we have a web going from the hand to the target position so in here if I press space yep there's the web because I'm only going from the hand towards the target okay we're now before we animate the web we actually have to use the base animation of the spiderman actually firing the web so we have to go up here and essentially create a state so we don't go back to idle by the handle movement so let's go up here and make a state web zipping story and in here case webs have been starting and we're simply going to do nothing this meant beach is a time between the firing the web and until the web reaches its target so in here let's at the state and now in here do spiderman base and play the animation of web zip shoot and we're going to shoot towards the web zip deal okay so now if I press space yep there you go he switched the animation and spondee well okay now it's finally animate the web so in here I'm going to do the simplest animation possible but later on we're going to refactor the code to make things more clean but for now let's do it in the most obvious way so let's use the function of theta which again part of the code monkey utilities that you can grab for free from in T code monkey calm and I'm going to create and essentially the function of theta allows me to trigger an action every update so this is perfect for easily animating our web and I'm here let's begin by capturing a reference to the sprite renderer so sprite renderer for the spiderman web sprite renderer and let's actually grab the reference outside of the update okay well it's also calculate a new vector2 for the web zip start and this will be new vector2 and again this is the start so we start off at zero and then use the same size dot line and then for the web zip end will be the distance between the left hand and the target position okay so this is a start in the end let's set the sprite renderer dot size to be on the web's if start and up here we can remove this all right and the last thing we need is a float for the time to reach target which we're going to start at zero so using all that we can simply do a alert so do the spiderman web sprite renderer dot size equals a vector $2 we're going to mark it from the web sip start to the web zip end and using time to reach the target and before we do that let's increase the time to reach target by time.deltatime multiplied by a certain value say about eight okay and finally let's simply do if time to reach target if it is bigger than 1f then he has reached the target so in here let's do a return true which won't automatically destroy the function updater and if not let's return a false and keep updating okay so now we should see the web flying towards the target okay so here i am i put my mouse in here and I hit space yep there you go the web went and it stopped as soon as it reached the target so goes an example like that alright good so now all we need is to start website and while fine we're going to modify the size of the web so first things first when it actually reaches the target that's when we want to start web setting so this codon here that's what we want to use up here so in here start flying so let's see if spiderman starts flying once the web reaches the target okay here I am I press there and yep as you can see he starts flying as soon as the web reaches start so first he fires the web web gets there start flying and keep flying alright good so now that we are flying we need to deal with the size of the web one sectionally flying so first we need to store the insensate prefab as a member variable so we can modify it so let's go up here make a private transform for the spiderman web and that's what we're going to use in here instead of a local variable okay and now while flying which is in this function right here after we move our transform let's update our web so the first thing is that the spiderman web dot position and we want to reposition it again to be on top of the hand so the position will be the spiderman base not get the hand left position so we have reposition it and now we're going to need to make sure the rotation is correct so there you go rotate it from this position towards the website are you all right and finally we need to set these signs so here I grab a reference to the sprite renderer on the web and we calculate the size to be the exact distance between the hand left position and the web zip target so on every frame the web won't have the exact size and when we actually reach a target when we start sliding and let's actually destroy our web so do this drawing on the spiderman web that game object alright so let's see if the web now correctly stays link between the hand and the turret okay here I am put my mouse in here press space if there are yo as you can see he fires once he gets there he starts falling and he goes and just like that I can now zip around and web does look pretty correct okay so the only thing we are missing is to actually add a web to both hands so let's go up here and rename the spiderman web to be spiderman web left and add another 140 right here we are set up web left then we're going to do a set up web right instead of using that we use the right and so on when we get there and let's destroy both of them the left and the right okay and on start instantiate the left and made it and let's copypaste and do the same thing for the right all right so here I am and now if I put the mouse in here now press space yep there you go he fired two webs then he pulled himself towards there any far and now I can slide it around and move around as many times as I want and once I get there I can still move normally so move normally then web zip move web zip and so on so there you have it we added web zipping to our Spiderman so we can move around fast throughout the map as always you can download the project files in utilities from unity code monkey comm if you have any questions post them in the comments and I'll do my best to answer them subscribe for more videos and I'll see you next time