hello and welcome I'm your code monkey I've been making videos on this channel for over four years now I've covered tons and tons of topics in over 600 videos one thing that I made sure to always do since the very beginning is read through all the comments every single day and answer as many questions as I can I've probably answered thousands of questions usually I reply directly to the person but if at least one person has a question then chances are there's more people wondering the same thing so here let's see some interesting questions that I answered that maybe you'd also like to know the answer to I've already done a bunch of these videos check out the entire policy see some more questions hopefully you'll learn quite a lot by seeing what others are asking okay so starting off with a question posted on my last QA video here is does meffin who asks basically is the code in the tutorials performance and alternatively do I recommend focusing on performance or not so the answer to this is that tutorials are mainly just starting points they teach you how to learn one thing and how to do that thing so for the most part any tutorial you find is not going to be perfect production ready cone but a more important question is does that matter so should you focus on improving performance or not and the answer to that question is usually probably not there's a fun saying which goes premature optimization is root of all evil because you can easily get sucked trying to improve performance of some kind of system when really you should be spending that time just building your game just think is it a very use of your time to add some enemies and maybe some building mechanics to your game or should you use that time to improve your inventory code to go from something like 0.5 milliseconds to 0.1 technically that would be a 5x performance Improvement but it's not really worth it most times the answer is no that is not worth it most of the times tutorial code is performed enough for your needs however with that said at the same time that does not mean that you should intentionally write hormone code you might be aware of the concept of technical debt which is what you get when you try to do things quick and dirty which you will then have to clean up sometime in the future the ideal goal is you keep improving your programming skills and specifically your clean code skills so that the first skill you write while it might not be the absolute most performed code possible it is also not completely horrible it is good enough to do the job and not cause problems to any other system so specifically with regards to watching and following tutorials usually a tutorial is focused on achieving a certain goal or building a certain mechanic it is intended to teach you how to do that but is usually not intended to be super high performance production ready code perhaps this your own code is more than fast enough for your use case or perhaps it might require extra work to fit your performance budget so in general don't worry too much about performance unless it is bad enough that it hurts your development process and then randomly at various points in development use the profiler to check out hotspots in your game make sure you measure the actual performance and use that to decide if it's worth your time trying to improve performance or instead spend that time working on other mechanics in Polish next up here is a really extremely interesting comment it is posted on the video where I made a really nice topdown shooter in seven days the video was quite a long time ago but I'm still happy with how the game looks the game involved tons of systems working together with one another there was quite a nice amount of complexity which means writing good clean code was definitely a priority and this one is not so much a question but rather comment it comes from Klaus who talks about how as beginner watching my tutorials was complicated and annoying it looks like the code that I write is needlessly complex which can definitely look quite a bit daunting to a beginner but Cloud says that after coming back with some more knowledge now the code and tutorials makes a lot more sense this one is a really tricky topic with regards to teaching one easy example is variable access I even made a dedicated video on this topic for a beginner the obvious simple way is just make the variable public that's it just one line of code super simple very easy to understand whereas if a beginner watches one of my videos and they see that I'm using some weird syntax with some square brackets for something called a serialized field and then making it private with some functions to expose it for a beginner that might all seem unnecessarily convoluted and complex like why on Earth wouldn't I just make it public same thing for pretty much every clean code Concept in my videos when I want to update some UI I normally do it through some kind of event again a beginner might ask why on Earth are you doing these weird things called events instead of just calling a function directly or updating the UI object directly from the logic code writing good clean code is one of those things that is absolutely essential but extremely difficult to communicate the importance to a beginner no matter how much I try to explain for most people they really have to suffer through the consequences before they understand the importance and the benefits of writing good clean code again this song part of the regular learning process I myself am no different I also used to just make everything publicly calm functions from everywhere use strings all over the place and as complexity of my games went up so did the difficulty of actually building them I soon realized the problems with having systems be tightly coupled with one another I have lots and lots of Errors because of using strings for States many times I wasted lots of energy trying to fix bugs before realizing it was just a string with an extra invisible space so my advice to you if you are a beginner is if you're watching a tutorial and the instructor is doing things the way you think is wrong consider that perhaps it's not wrong perhaps it's your lack of experience making you blind to some potential issues that the instructor already went through but like I said it's really hard for a beginner to learn that even if I tell it directly so if you do end up doing what everyone does and ignore this advice until it pulls up in your face when that happens don't be too harsh on yourself remember that everyone myself often every instructor included everyone goes through the same thing so just keep at it keep on learning and do what you can to minimize the painful experiences you have to go through in your Learning Journey the next question was posted on my hex grid system tutorial video here Luca asks how it's possible to dive into new topics and get to know everything in such a short amount of time why is it that I can learn something super quickly well for a lot of people it would take them hours or even days diving into documentation to fully understand how something works my answer to that is there's really no secret the only secret there's really just experience that's pretty much it I know that might sound like a overly simple answer but it really is the truth there is no special secret the more code you write the more systems you build the more games you make the easier it becomes to build something new or in this case to learn something new after you have created dozens of Unique Systems and a handful of unique games then you've probably already experienced a ton of unique scenarios so when you go to learn something new it probably isn't on you it's a mix of things you've done previously and a tiny amount of new things for example for this video making a hex grid I already knew how to make grid system so all I really needed was some math to convert it from a square root system onto a hex grid even though I'm not very good at math I have done enough things in the past that I can figure it out I've already gone through the painful process of learning the basics of kind of like vectors rotations that product and so on so I didn't have to learn all of that right now for the very first time so building this hex grid system really wasn't something that was completely 100 new many things are similar to things that I have done in the past same thing for more different topics like for example the net good for game objects video it's a completely new tool set that I had not touched before but I have made multiplayer games in the past so even though I did not know the Syntax for net good for game objects I was already familiar with the Core Concepts behind multiplayer games things like what is a packet what is a connection what is bandwidth where are potential issues with nap and firewalls all those Concepts were already stored in my brain when I went to read the net code for game object's documentation my brain simply remembered all those things so even though the tone set and the syntax were completely new there was a lot of familiarity which allowed me to learn how to make that and build that one hour video in pretty much just a handful of days so I wish this was something that I could actually teach I wish I could teach you how to learn new things quickly because it is a very useful skill set to have but really the only way is experience so my advice to you is keep building things keep making prototypes keep writing code every line of code you write makes the next one easier and of course explore lots of Topics in terms of gaining knowledge and experience it really helps to build say 10 games in 10 different genres rather than 10 games that all have pretty much the same Mechanics for me something that really helped is when I covered in my Game Dev Journey video how I got started making Flash games and flash games were all about making something interesting and make it super quickly back then no one was working years on flash games most devs would work maybe weeks or at the most extreme maybe months and the final game was not not supposed to have dozens of hours of content just a few minutes of good gameplay was more than enough so thanks to that in the five years that I was making Flash games I built something like 40 games I did everything from top down Shooters to management games RPGs racing strategy and so on I really think that massively helped me Kickstart My Own knowledge base in quite a big way and if you want to know specifically How I Learned things like I said there's no secret for example I recently made a really detailed video on ENT dots I managed to learn the new version and make the video in about three days first thing I do is look in the documentation so I open up the entities package and read through most of it then in this case there is a really useful dots guide which I found the forums so again right through the whole thing then I also read a bunch of posts in the forums specifically the pin posts as you can guess from the fact that I have a video tutorial Channel I also like to learn by watching video tutorials so I searched YouTube and found an excellent really detailed guide by turbomix games as well as some very useful videos from win games I watched everything that I could by the way a quick tip for learning things quickly learn how to listen and understand on a faster speed personally for me I watch every YouTube video on either 2X or 3xp so for example on Johnny's dots tutorial it's two and a half hours long I watched it at mostly 2.5 speed so I managed to watch and understand the whole thing in just about an hour and then of course after consuming all that content the next very important step is to try it out for yourself so I opened up a Unity project and started writing some code tried making a component a system I explore the differences between the system based and I system I spent a bunch of time experimenting with making my own aspect learning about all the things you can and cannot do within them and in my case another excellent thing that really helps my learning process is this very Channel if you ever want to try and learn something try to teach it to someone when you try to teach it it forces you to really learn the content so for me making video tutorials is an excellent way to help my own learning process if you want maybe try doing that yourself maybe make a tutorial video on some topic or perhaps just try to present something and teach your friends alright so those are a bunch more of your questions and my answers to them I hope you'll learn something new check out the entire playlist to see some more interesting questions I've already answered thousands of questions so stay tuned for more videos like this so you can learn from what others have asked alright hope that's useful check out these videos to learn some more thanks to these awesome patreon supporters for making these videos possible thank you for watching and I'll see you next time