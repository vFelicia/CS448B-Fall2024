hello and welcome I'm your code monkey and in this video we're continuing to create a graph in unity we're going to dynamically modify the horizontal scale of our graph based on our list of values let's get Sir so we previously made the yaxes in here dynamically scale based on the valleys received we set up the code to make it identify the highest value and increase a bit from there I didn't find the lowest and decrease a bit from there now we set up the code to support going under zero based on the lowest value but in this case it looks better if we just start off at zero so the code supports going under but for now let's start off at zero so there are many ways to scale our x axis depending on what we want we can have for example a maximum amount and ignore the older values or we can show them all regardless of how many we have and position them correctly within the width of our graph let's start off by making a maximum number of values visible so here I am in my code in my show graph function and in here I'm going to create a variable for the maximum amount of values we can show sin here let's make an end for the max visible value amount which won't be 5 let's say so we only want to display the last five values and down here when we're cycling through our value list array we only want to show a certain amount of values so instead of starting at 0 we're going to start at value list count minus our max visible value amount so if the maximum value amount is set to 5 this will start displaying from valent list minus 5 so it won't display the last 5 values now that we're no longer storing the index at 0 we can't use the index to calculate our exposition so let's make a variable to store our X index regardless of the actual index that we're checking on our list so in here let's make an X index and start off at 0 and when we go through the end of our cycle let's increase our X index and here instead of using eye we're going to use the X in X so regardless of what value I has the X index will start from 0 so what sets it out and we should see only the last five values yep there you go our graph this is displaying the last 5 elements you can even see the days are correct and 11th $13 $5 okay great now in here the one issue that we can see is that our Y scaling is some being dependent on the entire value list since one of those values was at 98 we still go up to 117 but in the ones that we are showing here that you don't go up too high so let's make sure that when we calculate our highest and lowest values we are doing so only based on these values the ones that are actually visible so up here instead of doing a fourinch through the whole list let's do for each only of the values that we want make an end value which is the value list of pot okay so now everything should be working if there it is our bottom is at zero since we set that specifically and the highest point has a 20% buffer okay great so now one thing let's go into our code and up here when I'm setting my list let is send an actual different thing let me send just one Valley so can you guess what won't happen well let's see and there you have it we have an error in our console argument out of range so essentially we are trying to access a negative index so down here when we're going through the values we have to make sure that we never start off at a negative value in order to do that let's go into mathematics and pick the highest value between this and zero we're grabbing the highest value between these two if we have less than five values then this first argument in here won't be negative and the function will return this zero otherwise don't return the value in here let's apply the same thing down here okay let's test again and it should display only one value if they're your we are displaying just one value and there are no longer in the errors now again our scaling has an issue here since if we only have one value then our code in here when we're doing this difference it will always be zero so we're we can't add 20% of zero because well not zero so one way to fix that we can go up here and make a fold for the why difference which will be Y maximum minus the Y minimum and we're simply going to test if it is under a certain amount so in here if the Y difference if it is less than zero then let's just set it to a simple minimum so let's say 5f apparently in here really depends on what vowels it will receive but as long as it's a positive number it won't increase by a certain amount so in here instead of using that we're going to use the difference okay so let's test it again and now the number should no longer be hugging the top yep there you go we got a nice little buffer in here okay all right so we now have the graph displaying a maximum amount of values let's write the code for displaying all values regardless of the size so first of all we want to have both behaviors available so we're going to add a new parameter to our function to indicate how many values we want to show so I'm going to grab the max visible value amount and add it as a parameter in here so remove the local one and let's set the default to minus one now we're going to make sure this value is always valid so in here if it is less than or equal to zero then let's just display the whole thing so let's display the value list dot count now in here when I call if I want to display the whole thing let's send it a minus one so I'm sending a minus 1 in here which is under zero so it won't set this to the volume list count which is all of the items so we're going to use the previous value list on with these and we're going to send minus one so we should be able to see all of these values yep there you go we can see all the values that we are sending to our graph now there's still an issue with our code so back in here let's add a bunch more values so random stuff in there now let's test and as you can see the values aren't leaving our graph this is happening because we have set a fixed value to our X size so the width of each of our nodes we need to define our excise based on the max visible value amount so back in here in my show graph when I'm calculating the excise it will no longer be a fixed value let's simply do our graph width divided by the max visit value amount so up here when I'm ground where I fight let's also grab the graph width which is a size Delta X and in here divide the graph width by the max visible value amount so let's test it out and okay all of our valleys are currently being displayed in here now our last value in here is hugging the right side of the graph let's give it some distance so in here on our exercise calculations let's just increase the max visible amount by one and that should be enough to give us a little buffer on the right side yep there you go all of our values are being correctly displayed regardless of how many we have so there you have it we have successfully added horizonte on scaling to our graph in the next video we're going to display it as a bar graph instead of a line graph as always you can download the project files in utilities from unity code monkey comm if you have any questions post them in the comments and I'll do my best to answer them ok see you next time