hello and welcome I'm your code monkey and in this video we're continuing to create modular spreadsheets as used in Baron round tycoon we're going to compose the head sprite from various beards and hair styles let's begin so here's what we've built so far here is the spreadsheet which you can see that it is composed of the base fried sheet plus the body sprite sheet and a head spread sheet those are all mixandmatch together to create this final spreadsheet which is used by the animation system now to get even more randomization we're going to randomize the head with various beards and hair styles the game is up now on Steam so check it out to see what I'm teaching here apply to a real game so over here I have a spreadsheet with a bunch of beards a bunch of hairstyles and the base head so let's go to the code and here the first thing we need is serialize fields to grab the textures and again remember that on your textures you need to go into the settings and enable read and write we need this to be able to grab the pixel data from our code so previously we were grabbing this head spreadsheet which was already composed now we just want the base so here is where we were grabbing all of our heads so for now instead of grabbing from the head texture let's grab it from the base head texture and the base head is only one so we can remove the head index and simply grab it from 0 0 with a height of 128 128 okay so let's do a quick test and see if our spreadsheet is being created with the base head and yep there it is it is now using the base head with no hair and no beard ok so now let's do the same thing to grab the first hairstyle so in here grab the hair pixels we're going to grab it from the hair texture and for now let's just grab the first one so on 0 0 128 by 128 however in here we don't want to do set pixels because if we do this then we won't completely overwrite our head so we need a function to overlay the hair pixels on top of the head pixels so let's make a function to do that a private void merge color array we need a color array for our base array and another corner array for the overlay that we wish to add on top of the base array so the way we do this is sigh come through our base arraign and first we check if we actually have something on the overlay so if the overlay on the same index dot alpha if the Alpha is bigger than zero then we have something visible on the overlay so in here overlay has color then we check if the overlay of this index dot alpha if it is one then we want to completely replace the base array with whatever is on the overlay so we set the base array on index I to be the overlay on the next time if it is not one however then it is somewhere between zero and one so in here we want to interpolate all the colors so first let's spread the Alpha for the overloading and now we're going to modify the base array pixel on the next eye first let's modify the red pixel and increase it by the difference between both of them and multiply it by the alpha value so in here we are essentially interpolating between the base array value and the overlay value so if the alpha is 0.5 then the final value won't be the halfway point between the base array and the overlay so let's apply this to all the other colors and finally we increase the base array alpha by the same as our overlay alpha okay so that's our function for correctly overlaying a group of pixels on top of another one so using this function we can now go up here first we grab the head pixels then the hair pixels and now before we set all these we first take our merge color erase we grab the head pixels and we add the overlay of our hair pixels and the result won't be placed on the head pixels so we grab the head grab the hair merge it to and put the result into our texture so let's run the code and see if we have our base head with our first hairstyle and yep there it is there's the base head with the first hairstyle on top so you can see in here we have the base head which is down and the first hairstyle which is that one alright so now let's do the same thing to add the beard so in here we're going to copy this in order to grab the beard pixels grab it from the beard texture and do the same thing then we add the beard pickles on top of the head pixels which again already contain the hair pixels and finally set it all on the texture and if there is the final head composed of a base head some hair and some beer so now that we can do this we can easily grab one at random so let's see so here let's first define end for the hair index and the same thing we're doing previously do a simple random Dow range between 0 & 4 and here the spreadsheet is placed on a 128 grid so we do that multiply it by the hair index and then do the same thing for the beard and one more thing we can also do is make him bald or cleanshaven so we just define a ball for has hair and we define it grab a number between 0 and 100 and say there's a 70% chance that he has hair so if he has here then we do all this and do the same thing for defining if he has a beard okay so we are selecting a random from our for possible hair and beard indexes and we are also giving it a 70% chance that he has hair or a beard so let's see the final result and yep there's the hair you can see some of them have no hair some of them have no beard and they're all very random izybelle so as you can see just like this we now have an almost infinite number of possibilities with just four hairstyles and for beer times the game is out now on Steam so check it out to see what I'm teaching here apply to a real game so there you have it we took our previous sprite sheet and went one step further by adding randomization to the beard and hairstyle in the next video we're going to tint our spreadsheets to get multiple hair colors as always ignore the project files in utilities from unity code monkey comm if you have any questions post them in the comments and I'll do my best answer them subscribe for more videos and I'll see you next time