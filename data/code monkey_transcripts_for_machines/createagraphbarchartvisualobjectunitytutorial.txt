hello and welcome I'm your code monkey in this video we're continuing to create a graph in unity we're going to create the graph visual object interface so we can later update our graph in real time let's begin so our graph is already very capable of displaying anything we give it we can display any list of values and even change how those values are displayed I have a bar chart and a line graph we created those using an interface so it would be relatively simple to add even more different this points so let's check out the code and down here we have the interface the i graph visual which is a definition for showing a visual for a data point inside we simply have a add graph digital function which takes in certain parameters and returns a list of game objects now this works as we've seen but it is not the best approach for example right now there is no way to update our graph since this function returns a list of game objects we have no idea of knowing what each of them represents so without knowing that we don't know how to modify them so we need to create another interface to handle a single graph visual object so let's begin by making a private interface and let's call it eye graph visual object now this represents a single visual object in the graph so in the bar chart every single bar will be a visual object so in here to start off simple let's make a function to set the graph visual object info so a void set graph visual object info and inside we're going to receive what we are sending in here the same thing just like that so this function will set up the object in the graph so now let's implement this on our bar chart so down here on let's make a subclass for the bar chart visual object which won't implement our interface so a public class let's talk bar chart the visual object and we're going to implement the i graph visual object interface so in order to do that we need to implement this method in here so in order to be able to do this let's make eight constructors so a public bar chart there's no object on the constructor and let's receive a game object for the bar game object and also a float for the bar with multiplier let's store them both as member variables and on the sacrificial object info we want to modify the game object to fit these values so up here we can see how we are creating the bar so we're going to need to update the anchored position and the size Delta everything else is responsible for just it's wrapped in the bar so it's copy these we need to grab the rect transform which is a time for a transform and we get it from the bar game object if component rect transform and then instead of the bar width we have a graph position width and just like that all right so that's the object setup for now we're going to deal with the total player so up here on the bar chart we're at visual when we add a graph visual let's create a bar game object and then actual instantiate a bar chart visual object which we're going to instantiate using the bar game object and give it the bar with multiplier then let's call the function sacrificial object info and we're going to pass the same thing so that the graph position with and the insulted text okay okay so now let's test and we should be able to see everything exactly the same as previously and yep there it is the bars working is only the same I can still modify everything some work still tips everything okay good so everything is still working as previously but now we have a new object that is responsible for handling each specific data point which in this case means each bar so with that we now have the function to easily update it now let's modify the graph visual interface and first of all let's rename this instead of being at graphical let's make it create graph the visual since that's what this will be doing instead of returning a list of game objects and let's return a I graph visual object so as you can see we have a bunch of errors in our code so let's deal with that on the create perhaps visual object let's change the return type to be an eye graph visual object and we're going to return the visual object that we've created in here so return this okay down here for the line graph we're going to refactor the in line graph later so for now just return null and all the way up here when we are actually creating instead of adding it to the game object list let's go up here and make a new list instead of a list of game objects and let's make a private list of I grant visual object so the graph the visual object list let's instantiate it in here and go down here now here instead of adding to this list let's head to the graph visual object list so now we are creating a graphical object from this function and adding it to a list so we have changed the return type and how this function works but everything should still be working exactly the same so let's see and yep everything seems to be working now if I hit on Zoom and yep as you can see everything is a bit messed up essentially what is happening here is all the bars are overlapping each other since none of them are being destroyed we need to destroy the old ones whenever we create new ones now previously we were doing that by destroying everything in game object list but since we made a graphical object we are no longer to destroy it so let's see on with the cleanup down here on the graph visual object interface let's make another function and this will be void cleanup this will be responsible for cleaning up whatever game objects this visual object actually has so then down here on the bar chart original object let's make a public void cleanup in order to clean up this bar chart visual object all we need to do is destroy this bar game object so we said we do a destroy on the bar game object okay so this visual object now knows how to destroy itself so now we can up here when we have our list of graph visual objects and up here when we are destroying the game objects let's also cycle through each i graph visual object breath visual objects in the graph visual object list and we're simply going to call the function dot cleanup and afterwards we're going to clear the list as we did with the game objects not clear okay so in here we are self cleaning up the game object list which contains as you can see down here all the dashes and labels and then we are cleaning up all the graphical objects and clearing out the list so let's test and we should now be able to see the old objects being cleaned up and the graph works again and yep here's my graph everything works fine I can zoom out and zoom in and everything works exactly as it should so we now have an object responsible for handling each specific data point which in this case the bar and the only thing missing is to update the filter so let's deal with that so in here when we create the bar let's also set up the bar button UI so down here on the bar let's add the same thing for the game object at the button UI which we're going to use for the tooltip now using that jeweltone tip on mouseover and onmouseout instead of doing it in here we're going to do it on the side graph visual object info let's grab the button UI bar button UI which is on the game object I'd get component of type 'button UI and do the same thing sort of adding let's just set equals to that much okay so now if we change the tooltip text it should actually change it so let's see and yep everything looks exactly the same so right now it might seem odd why we did all of this work if everything still works is only the same but it won't be clear when we actually implement realtime updating using the graphical object that we have created you can probably guess how we're going to update this in real time so there you have it we've created an interface to handle each specific graph object in the next video we're going to create the in line graph visual object and after that we won't work on updating the graph in real time as always you can download the project files in a Tony's from Unity code monkey comm if you have any questions post them in the comments and I'll do my best to answer them subscribe for more videos and I'll see you next time