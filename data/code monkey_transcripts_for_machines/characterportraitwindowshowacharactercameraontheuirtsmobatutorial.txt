hello and welcome I'm your code monkey and in this video we're going to make a character portrait that will display a view of our character in a small window in our UI let's get started so here's my scene and I have a character in here moving between waypoints we want to create a UI window that won't display a view of this character as it's moving around so much sir off by creating the UI window let's go into the canvas and create an empty game object and name it window character portrait let's make another game object inside call it background then let's resize the character window let's give the background image okay here's my window with a background now let's make another game object and this let's name it raw image because inside we're going to add a component raw image the difference between a raw image and the normal image component is that the wrong image supports displaying a texture 2d instead of just a sprite this is what we're going to use to display our camera texture so let's put it about that and like that all right now let's create our camera this is the camera that won't follow the character making you empty game object give it a camera component make it a 2d camera so orthographic give it a 10 for the size and let's name it camera okay so instead of drawing this camera to the screen we're going to draw it into a texture nor do that let's go into our project bounce and create a new rendered texture named it character portrait render texture okay make it 512 by 512 now this size off is only going to depend on how big you expect define on window to be and let's apply this render texture to our camera so the view of this camera won't be rendered into this rendered texture and we're going to display this rendered texture in our image so as you can see right now it shows black but if we move our camera like that we can now see in the camera preview and in our raw image where we see the camera view okay great ingame you can view the camera in here and the cameras position in here and there you go the removes and you see it correctly okay so now that our window is set up let's write the code make a new script csharp script and name its window character portrait now inside on our private voice awake let's grab a reference to our camera transform so make a private transform camera transform and we're going to grab that in here can we transform Nichols transform dot find the camera we're going to have a public void show this is the function that will be called to show our window inside let's receive a transform for our follow transform and we're going to store it as a member variable so and let's set this game object that's set active to true so that it's visible and on our public void behind we're going to do the opposite so we're going to set the active to false and on awake let's hi so this window starts off hidden okay so now let's make the update make a private void update and inside we're going to place our camera on top of the font transform so we're going to take our camera transform dot position and we're going to place it on a new vector3 of the follow transform position X so our transform position down why the Zed is going to depend on how you set up your main camera so in this case I'm just going to put it on the camera dot main transform position dot Z so it's at exactly the same height as my main camera okay so this should correctly be placing the camera on top of the follow transform so now on our game Hamelin I have my camera follow script in here it is simply moving the camera with the wsad keys let's make another serialized feel but for our window character portraits window character portrait and let's make a transform for our character transform okay so now on our private voice starts let's go into the window character portrait and show and give the key character transform so first the character portrait sets up on the things on awake and then game hemler start execute and it's going to show the character portrait using the character transform all right let's see if the window shows let's add our references all right there you as you can see how uiwindow is in here and it is displaying a view of the camera and the camera is being placed on top of the character which is moving around so now let's set the ability to show and hide our window on the editor let's add a button to close our window I'm going to add the button UI component which is part of the code monkey utilities which is always you can wear app for free from unity code monkey comm this is just a simple script that allows me to easily set up UI clicks so in our code on the window for the character portrait let's set up the click so going to transform find my clothes button get the components of type button UI which is part of the using code monkey dot utils and on the button UI I have a click phone which is an action that is triggered when the player clicks on the button so this action will do essentially just the hide function so when I click the close button it's going to execute the hide function which is going to hide our window okay there's my window there's my close button when I click the window hides great now let's have a button to click on our character and show the window so here's my character game object I'm going to add a box Collider 2d and size it to just about occupy the size of the character so just like that and I'm going to add a button sprite which is also part of the code monkey utilities and then the game hammer using the character transform I'm to go into the character transfer get the component of type 'button sprites and I'm going to set the click func to trigger this action and inside I'm going to trigger the show function alright let's see if I can click on the character to show and then click the close button to hide the window ok the window is not visible there's my character and if I click on it and there you go the window shows up and it has a close button I can close it again alright there you go I can open and close and looks great awesome so there you have it we have created a UI window that you can use to show a view of a character or building in your game in the next video we're going to add support for multiple windows as always you can download the project files in utilities from Unity code monkey comm if you have any questions post them in the comments and I'll do my best to answer them subscribe for more videos and I'll see you next time