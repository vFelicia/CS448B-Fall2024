in this video we're going to set up a nice custom cursor icon it will be animated and won't change depending on what object were hovering over this is an excellent way to provide more context to your player let's begin hello and welcome I'm your code monkey and this channel is all about helping you will learn how to make your own games with enough tutorials made by a professional indie game developer so if you find the video helpful consider subscribing check out the code monkey app on Steam interactive tutorials complete games and more click knowing the description and add it to your wish list all right so here's our gone over here is a simple character just idling around now you can look at my cursor right now and see that it's a simple arrow but it's different from the default one and now if I mouse over the character if there you go you can see the mouse changed to indicate that I can interact with this unit now I can click on it and there you go the unit is now selected and over here I have some basic RTS controls and we made in a previous video and with the character selected you can see that the mouse is now different the cursor is animated and it's essentially indicating that I can move my character around now over here on the left side there's a nice object and again as I mouse over yep there we go we have a nice scrubbing animation so I can right click my character goes there and picks up the item then down here we have some more enemies and again as soon as the mouse passes over there you go the mouse is converting into a nice attack cursor so it's nicely animated telling me that I can click on this unit in order to interact and attack it I can also deselect and without the unit's selected there you go it goes back into the normal arrow icon so here you can see a whole bunch of uses for a custom animated cursor which really enhances the play experience and gives the player some more information now you can easily add tons more animations to fit whatever actions your game actually has now if you haven't played it yet then go check out my game survivor squad gauntlets which is included in the game bundle and uses animated cursors extensively in order to provide more information to the player this video is made possible thanks to these awesome supporters go to patreon.com/scishow to code monkey to get some perks and help keep the videos free for everyone alright so this our goal let's get to it ok so here we are in our starring scene all we have is a simple character here just standing around I have some simple RTS mouse controls that we built in a previous video so I can click to select my character and then click anywhere to move it there's an atom in here so I can click he moves towards it and grabs the atom and there's a bunch of enemies here so I can click to and as you can see right now there are no cursor icons so every action is using the same basic default mouse cursor this would definitely look a lot better if we had a nice custom cursor depending on what's underneath our mouse so let's do just that here in our project files let's create a new C sharp script let's call this our cursor manager let's make a game object and drag the script on to it okay now in here this will be our manager script so this script will be responsible for setting the active cursor and playing off the animations so let's start off by just seeing how we can change the starting cursor so let's make a basic voice start and then here in order to change the cursor we use cursor dot set cursor now this as you can see requires a texture so let's set a film for it okay and let's set it in the editor so here let's drag our texture and in the project files I have a whole bunch of textures for the various cursive types that we're going to use and over here on the import settings you can see that they are all being important of texture type cursor so let's select and use our basic default arrow all right there's our texture now back in our script let's use the cursor texture in here and then we have the hotspot so this is the offset from the top left side of the texture so for here is the error icon open up on Photoshop and as you can see over here the edge of the arrow is right there on 1010 so that's what we use in here for our hotspot we pass in new vector2 of 10 10 and then we have the cursor mode so this word we define either a software or hardware cursor so difference being that the software cursor gets updated whenever the screen updates so if your game is now running at a very high frame rate and software cursor will look slightly off and the hardware cursor is directly modifying the actual cursor for the operating system so it looks perfect even if the game is running at a low frame rate so in any case the one we choose is simply automatic so it's always hardware if possible and we'll go down to software if not all right so just like this should be and we should be able to see our cursor using our custom cursor texture let's test and yep as soon as the game runs we now have our own custom cursor awesome alright so now that the basics are working let's add some animations so the way we're going to do that is instead of a single texture we're going to play textures over time so in our film instead of having just one texture let's have an array of texture then we define an int for our current frame then also a float for our frame timer and another int for the frame count and another float for the frame rate so all these films won't allow us to easily animate our textures so for the current frame that's the current frame on the entire array then the frame timer that's going to be the time elapsed on the current frame the frame count will be the total size of our array and the frame rate won't be how fast we shared between frames so we're going to have our cursor texture array and let's also expose these two so we expose the frame count and the frame rate so now here back in the editor let's set our fields let's use the nice move animated cursor so we're going to have two textures let's put this one and this one so in the frame count that's eternal amount so in this case it's two and then the frame rate let's try playing them at let's say 10 frames per second so point one okay so back in the code here let's make a simple update and on update and let's countdown our timer alright so here it is we simply count down the frame timer by time.deltatime when it's under zero then we increment by the frame rate we also increment the current frame by one and we use the remainder in order to move back to zero and we simply call our set cursor function so there it is very simple let's test here we are in yep there we have our very nice and made it custom cursor awesome ok so now that we have our animated cursor next let's say the ability to have several different ones so back in the code here what first start off by creating a new for our cursor types so let's make a public in own called our cursor type and for now let's make the arrow Andy grab cursors now we're going to need all the frames for each cursor type so let's make a simple class to home of that data so down here let's create a public class let's call this our cursor animation and inside let's store a film for our cursor type then I'm going to have the things that we need from up here so we need a texture to the array then we're also going to need a float for the framerate and finally we also need a vector to for the cursor offset all right so that's all that we need and now up here let's make a list of our class and we're going to set this in the editor so let's make this a serialized film and now in art for a custom class you show up in the editor we also need to go down here and add the attribute system dot serializable if you don't add this then this custom class will not show up in the editor okay so this should be working let's go back into the editor and yet we have our cursor animation list and now let's add our two types so here we have our two elements first one for the arrow of the second one for the grab and let's film this up alright so there it is about various textures and one with the frame rate and the offset now in here we're using just a simple class to fill in our data but if you'd like you can easily convert all this to work with script of all objects instead so if you wanted to implement the system in a more let's say designer friendly way then that would be one way you could do it but for now then this simple approach won't work just fine so back in the code here let's make a function to set our active cursor type and let's start in a field so on an update we're going to use this one instead so appearin let's get rid of the one on the textures all right so just like that so we call this function in order to set our cursor and mission and then this is the one that we use on our update so logic is working exactly the same now just for testing let's add some inputs so here on update so when I press the T let's load up the cursor animation on index 0 and on Y the one okay so let's test okay so for sirs here we have our normal arrow cursor so this one just has a single frame so no animation now press the button and there you go now we have our second type of cursor and I'll press another button and back to the first one so first second and so on all right so we can now swap our active animated cursor awesome now let's work on making it activate automatically depending on what the mouse is hovering so here in the scene I have once you have objects and one in here is the item now this item already has a simple Collider so that's what we're going to use in order to detect when the mouse is hover so for that let's make a very simple script so in you see sharp script call this our cursor object and let's drag it on to our item okay now in this script all we're going to do is add the functions for the mouse so we're going to have on Mouse enter and also on Mouse exit so these are centered functions by model behavior so they get called whenever the mouse is over the collider and whenever it exits now let's set a fuel for our cursor type so cursor manager that cursor tight and now back in the editor over here for our item let's select the grab cursor so now we need this to have a function in order to modify the cursor so let's go back into the cursor manager in here and let's expose that function now we need to know the cursor and mission that matches this time all right so there it is very simple we just cycle through our cursor animation list and return the one that matches the type that we're looking for so we can now go up here and simply call this function down here the set active cursor animation and we get the cursor animation of this cursor type alright so we need this to call this function in order to modify our cursor and actually up here instead of accessing the list on start well let's call this function and passing the arrow so by default we have the arrow down here and let's get rid of our testing and I only need over here on our cursor object is to call that function so that means we also need a reference to this script so we can do it by making a simple singleton so here we have a static instance of our cursor manager so back in the cursor object we access the manager access the instance in order to count functions to set the active cursor type and pass in this cursive type all right that's pretty much it and when we exit let's use the arrow okay let's do it let's test so here we have the normal arrow cursor and as I go over the item if there you go now there's a grab move out and there's the arrow arrow grab and so on all right awesome so just like this our cursor is correctly selected depending on what object it is hovering now all we need is just to expand upon all of this so first let's have the other cursor types so we just need to add them over here on our home so there select attack and move now we need to fill up the rest of the fields in the editor all right so here's all the data again instead of doing it this way you could use the script on my object but in here it works now we need this to add our script on to these various objects for example over here on the unit let's add the cursor object and this one let's select the Select cursor and over here on the enemies drag the cursor object and this one is the attacker sir okay that should do it let's test okay so here we are and we start off with the arrow cursor okay so far so good now let's mouse over the unit and if there you go it changes into the unit selection now if I move away yep there you go back into the area now go into the item yep there's the grab with the animation and I move away yep back into the arrow and finally over here the enemy and I mouse over and there you go there's a nice attack animation all right so everything is working correctly we have all of our cursors correctly working so everything is working I can select the character over there is the item there's a nice cursor so I move it I grab it over here I click on top of the enemy any of there you go it all looks great all right now just one more thing let's what about the arrow for a move cursor once again it is actually selected now in order to do that there are many approaches we can take so we could for example make the RTS script be responsible for deciding what cursors should be used so that would be one approach another valid approach that might be easier is simply to use an event so let's go without so we're here on the cursor manager let's go all the way up and now let's create an event so we have a on cursor changed event now it's the weight custom event args all right here it is now I also cover the events in detail in another video so check that out to learn more so we have our event and down here whenever we modify our active cursor type and let's fire off that event all right just like this we have our nice event and now over here we have the game RTS controller so this one was made in the previous video and now in here we can listen to that event so we make a start go into the cursor manager instance we subscribe to that event and then in here we're going to check if the cursor has changed into the air one and if so then we test if we have unit selected and if so then we use the move cursor instead all right just like that and finally also down here when we deselect our units if we have none selected then we also go into normal error all right that should do it let's test okay here we are and so far so good we have the arrow and all the other cursors are working so the attack the selection unit and the item yep all of them working now if I select the unit if there you go now the cursor has changed into the move cursor so I can now move it around I can attack and so on and now if I deselect if there you go back into normal arrow cursor so there it is we have some external logic in order to make our cursors more responsive so here you can see how we can very easily add some nice animated cursors which help the game look better and much more responsive so go ahead and draw some nice cursors for whatever actions you have in your game now if you haven't played it yet then go check out my game survivor squad complex which is included in the game bundle and uses animated cursors extensively in order to provide more information to the player check out the code monkey app on Steam interactive tutorials complete games and more click knowing the description and add it to your wish list this video is made possible thanks to these awesome supporters go to patreon.com/scishow to code monkey to get some perks and help keep the videos free for everyone as always you can download the project files in a tony's from unity karma comm subscribe the channel for more in details post any question haven't comes and I'll see you next time