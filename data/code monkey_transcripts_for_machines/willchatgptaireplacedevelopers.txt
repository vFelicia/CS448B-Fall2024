hello and welcome I'm your kudmaki and lately YouTube and Twitter feeds are full of Chachi PT if you haven't heard about it this is the latest tool developed by openai so these are the same people that built dally a while ago as well as gpt3 this latest one chat GPT is basically an AI where you can chat with it and it's extremely good in generating a great response you can just chat with it you can ask a bunch of questions and the thing that has a lot of people both hyped and scared is that you can even ask it to write code and it does the code that it generates is valid most the time and not only is it valid but it comes with some nice comments and also some mini documentation it even works on various languages you can write python csharp JavaScript and a bunch more so all in all it's really impressive although of course with such an impressive tool there's a bunch of people questioning so does this mean that programmers are on about to lose their jobs and since this AI works for generating valid Unity csharp code should you use this code directly in your games the results are truly amazing there's an excellent Channel called Nick chat it's a great Channel if you want to follow csharp outside of game development he made a video pretty much gushing about the power of Chachi PT and I definitely do share his amazement it's really impressive what this AI can do journals also try that out and post on Twitter how he was so impressed with it you can see how it works for generating valid Unity scripts however when it comes to the question is this AI going to take all of our jobs for that I would confidently say the answer is no programming isn't really about writing code it's all about problem solving the AI only produces a good output if you know the right questions to ask it's just like beginners to game development do think I want to make a huge MMORPG where do I start even if the AI were capable of building a full MMORPG you would still need to ask it the right questions and knowing exactly what questions to ask is exactly what a good program is all about a great example is on that same video that I mentioned in there Nick is very good at asking the exact right questions and he's also very good at reading the code that it produces and identifying the potential flaws which you can then help the AI solve by asking some followup questions so because he is very knowledgeable he is capable of using the AI to get work results a complete beginner with no concept of programming would not be able to get good results because they would not know exactly what to ask and how to structure the question so based on this based on the fact that programming is not really about writing code but rather about problem solving based on that I would say no the AI is not going to take all of our jobs now to answer the second question since this AI is so good and capable of generating validity C sharp code should you use it directly in your games and to that the answer is also no at least not directly like I said it does work it's really impressive and one of the great things is how it works based on knowledge that you told it previously so for my very first prompt I can just ask what is unity and if there go it doesn't understand exactly what I was asking about so now I can ask followup questions and I don't even have to input that it's csharp or Unity it knows that by default so I can ask it for example to make a simple movement script so make a simple movement script and yep there you go the AI is indeed writing a bunch of valid code and look at that this is a great output so it's got a movement script and on update it gets the input and it modifies the transform position it's got some nice comments telling you exactly what the code is doing and down here A bunch of mini documentation although you can also see how it got a bit confused at a point down here it says correctly that the script runs on the update and it works by moving the transform position directly so if you want to move the object with physics you've got to use a different approach but up here it also says that the object needs to have a rigid body component so it's kind of contradicting itself but the code is valid so let's copy this code and over here let's just make easy sharp script now just paste the whole thing there it is let's make a new game object let's put it on zero zero attach the script just add a nice visual and okay let's test and yep look at that it does work so I can move with the keys and I can indeed move my player so here we do have a valid movement script so This truly is very impressive let's see an even more advanced example so let's only to make a system to interact with NPCs let's see what it does all right it's writing a bunch of code it's getting an interaction distance it's testing for a button input then it's doing an overlap sphere to find the con letters then it tests the tag gets an NPC component and does some kind of interact method then for documentation and yeah potential script to an object in your scene with the NPC tags it uses a sphere overlap and calls the interact method on the NPC script component so yeah this would be a valid approach so as you can see this is all insanely impressive so if it is so impressive now why do I say that you shouldn't use this code directly well that's because the AI actually has one pretty big flow it's all based on how it actually works so this is all based on machine learning meaning they fetted a ton of data to generate the model so the an learned from a ton of public sources and it turns out that most of the published tutorials are beginner tutorials those are the ones I get the most likes so that's the kind of content that exists the most and most beginner tutorials don't necessarily teach good practices my personal pet peeve that you probably already know about is how every beginner tutorial teaches you how to make every single film public I made an entire video on that topic and why you should not make everything public now I understand why they do it on beginner tutorials it's so that beginners don't get frustrated with too much complexity by having to learn about access modifiers or what is a serialized field another example which is a hormone practice are tags that's another thing that you probably should not use in a proper game but lots of beginner tutorials teach it because it is easy to teach and you can see how the code that the ad generates has all of those bad practices you can see how it made the interaction distance public you can see how the void update doesn't have the private access modifier you can see how down here it's using tags and it's using a string to identify the NPC you can see that it uses nonlayer mask and so on you can go watch my video tutorial on making an NPC interaction system and compare my code with this one generated by the AI you don't see how the AI code does work but it's also very quick and dirty and not really a proper good implementation of a proper interact system now what I do find funny is that over here if you're trying to ask it should you make everything public and look at that it does give you the correct no you should not make everything public making variables public allows other scripts to access and modify them which can lead to unexpected behavior and difficult to debug issues yep that is indeed correct instead you should only make variables and methods public if they need to be accessed or Modified by other script in most cases you should be using the private access modifier instead so it is funny that the AI does generate code but then also kind of answers in an opposite manner one thing that I've seen other people say is how the AI is very confident in its answers so that can mean that it is confidently correct or also confidently incorrect let's see what it does if I ask it should you use tags and look at that like I said it does give you a very confident answer but one that I would say is definitely incorrect it says yes you should use tags tags can be used to quickly identify and group objects based on their purpose or other characteristics technically that is true they can be used for that but they are horrible tool to be used for that it even says using tags can make your code more efficient text searching actually goes through every single game object so it is the exact opposite of efficient so if you ask it questions it won't be very confident in the answer but that answer might or might not be correct now with all that said one I would not recommend that you just blindly copy paste code directly into your game this is still an excellent tool for asking questions and possibly getting you on the right track for example instead of asking a question on stack Overflow or Unity answers you can ask this Ai and it might point you in the right direction especially when it comes to topics that are really beginner level for those it can be really useful for example how to test if a character is grounded and look at that it gives you the answer it tells you to use a physics raycast pointing downward from the character's feet if it hits the ground that means the character is standing on the ground and therefore is grounded and here's an example script so yep you can see this is indeed a valid thing now personally instead of a raycast I would use either a boxcast or a capsule cast then instead of making these films public I would probably make them serialize film private so I wouldn't necessarily call this production Ray code but it is definitely useful if you were a beginner and you asked this question this would definitely point you in the right direction and also the way that it outputs some nice comments and down here some mini documentation this makes it really helpful for learning so all in all this is an excellent tool definitely go ahead and give it a try but don't just blindly copy paste some code and also don't really worry about it taking over your job as long as you focus on leveling up your own software engineering and problem solving skills as long as you do that you will now be replaced by AI if you think different then go ahead post it in comment I'd love to hear what you all think about this genuinely very impressive technology alright hope that's useful check out these videos to learn some more thanks to these awesome patreon supporters for making these videos possible thank you for watching and I'll see you next time