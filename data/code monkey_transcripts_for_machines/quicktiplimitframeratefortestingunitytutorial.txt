hi there this is a quick tip for how to limit the frame rate for testing in making a game you have to make sure it works on many different types of hardware one of the things that can cause serious issues is the framerate for example if you're moving a transform and multiplying the movement vector by Delta time everything could work perfectly fine when playing at a high frame rate since out the time will be tiny but it could break everything when running at a low frame rate since now at the time won't be massive to show that problem in action here is seen I have a unit and I want to move it to this position so let's run the code and see how it goes there's the transform and as he saw he moved from there to there perfectly fine he got there and he stopped works perfectly fine so if you had this type of movement in your game you would assume everything was working fine here is the code for moving that unit we simply have an is moving bullion that simply moves while that one is true we got a target position we come later move direction and a movement speed and remove towards that direction by a movement amount which is movement speed multiplied by time down to time so very simple movement and after moving he does a quick distance check and checks if it is close enough if so he stops moving so a very simple transform movement and as he saw it works perfectly fine when running normally however in order to test we can limit the framerate by using application that target framerate so in this case let's limit it to 10 frames to see how this code would run on a computer with low specs okay there's the unit and yep as you go the unit move from there to there and that's the target position but he's not stopping there as he was previously he's jumping back and forth between two positions the issue that is happening here is directly related to the framerate as you can see we are running at 10 frames per second so that means in the coding here our term downtime won't be a very large number so essentially transferring our position won't be on the left of the target then it moves by a very large amount and all of a sudden on the right and on the left and so on and so forth so he never actually stops so the fix in here is very simple we just clamp our move amount to never go past the target position so we simply do so the clamp function takes a value and returns that value between a certain minimum maxximum so here it is perfect for validating our move amount so if the move amount is larger than the actual distance remaining then it will be capped to that distance so now let's see the code there's a unit and yep as you saw it went to the target position and it stopped right there so now our code works both at a high frame rate and at a low framework so again of this ishow that you need to test your game in various frame rates because you never know in what type of hardware the game won't be run on so for that you can use the target frame rate to limit the frame rate in order to test what do you want to stop testing you can simply set the target frame rate to minus 1 which equals unlimited and that's it hope you found this tip useful alright see you next time