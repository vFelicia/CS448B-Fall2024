hello and welcome I'm your code monkey and in this video we're continuing to make a tool tip in unity we're going to add the ability to update our tool tip tanks dynamically let's begin so this is our scene and this is our taunted now sometimes you might want to display some dynamic text inside your taunted like for example to display some sort of cooldown or a cost of doing inaction so in those cases it's very useful to have a tooltip that updates in real time rather than just a simple string so for testing we're going to add a sort of cool down on our attack and we want to display it inside our assaultive so let's go to the window code and here is some basic call down code as you can see it's a simple float when we click on the button it increases the flow to five seconds and it goes down by top the time on every update so we want to display this attack come down after the attack here in this tooltip so for that what's going to the tooltip class and in here down on the show top function we're going to make another private void show tooltip however instead of receiving just a basic string we're going to receive a func which returns a string so let's call this get total tip strength pump a func is just a delegate which returns a certain object type so in this case a string so let's store this as a member variable so go up here and since we have two shows on tips let's expand this code into its own function so a private void set text and here we're going to set the text and actually set the background size and we call it from here and also from here now the total string is the returning results from this Punk and in order to keep our code simple let's make it so that this function also goes through this one so just like that we still have this version of our function which takes a simple string and then calls this function by sending it a simple func which just returns this static string so this isn't necessarily the best way in terms of performance but since we normally only have one tooltip that is usually not a problem and this way our code is easier to follow so now on our update in here we set the tags using our set text function and now for the total strain we're going to use the get tooltip string func we call that function so on every update we're going to set the text based on whatever this function returns so our code should be working for updating our tooltip now we can go back to the window code and in here when we show it on tip instead of sending just a basic string let's send a func which will return a string so it won't say attack and then the attack called out all right so let's test okay so here is the window on the other stonework and if I go over the attack you can see a tag with a cooldown zero and now if I click on it yep you can see that the attack has been set they come down to five seconds and it is updating on every frame and all the others again still work as normal static tooltips so again click and everything works okay great so now that we have our tooltip updating which is very useful let's also add some more functions to make our code easier to use so here are some helper functions so a public static void call it add tulta and we're going to add on tip to a transform so here we simply do the same thing that we were doing in here but instead of having all this code in our window we're simply going to have a helper function in there so we can actually copy this and on the button UI class I have a separate action which are normally used just for the tooltips so the mouse over one stone tip and mouse out one stone tip this way I don't ruin whatever behavior the button has on the normal Mouse over so again these are humper functions for how I set up my buttons using this button UI class but if you are using something else just modify it in here also as another helper function we can also create an extension method so in here we have two nice humper functions depending on what pattern you prefer to use so now we can go back to the window and clean up all of this code and simply do the transform dot at tooltip and this is one way we can use this is using the extension method and here we are using the static method so using whatever pattern you prefer you can see that our tooltip class is now very easy to use so it's going to test to make sure that it works and yep there it is all the tooltips are working this one is working and yep there's the cool down and this one is working which has the other method and just like that everything is working for it so there you have it we took our tool tip and add an option to update it on tip during runtime we also added the humper functions to make our class very easy to use in the next video we're going to make a tooltip warning as always you can download the project found the newton√≠s from unity code monkey calm if you have any questions post them in the comments and I'll do my best answer them subscribe for more videos and I'll see you next time