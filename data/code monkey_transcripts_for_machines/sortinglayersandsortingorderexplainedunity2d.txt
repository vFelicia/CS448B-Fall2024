in this video we're going to learn everything about sorting layers and sorting order in unity this is how you define the order in which 2d sprites are rendered and what shows up on top let's begin okay so this is a very simple very quick video just explaining how sorting layers and sorting order works now over here i have a bunch of sprites i have a background then a building and a health bar and on each sprite render component over here you can see two films one for the sorting layer and one for the order in layer now in a 3d game the position of the objects is what defines which object is on top of which so an object closer to the camera shows up in front of another object that is further away however in a 2d game we don't really have any depth so how we define which objects are in front and which are behind is with soaring layers so as an example i have some assets from my builder defender course so the background there's a building and there's also a simple health bar now we always want the background to be behind the buildings and we always want the health bar to be on top now right now we can't even see the health bar even though it isn't there that is because right now everything is on the exact same sorting layer and also on the same sorting order so with this what we have is nondeterministic behavior meaning that sometimes for example the health bar won't be on top and sometimes the background will be on top now we want our game to always work the same so let's fix this and organize everything now if we click over here on the sorting layer we have this button to add new sorting layer and if we click yeah there you go we go into this window showing our tags and layers and right away we can see that we have the default layer and we can click on this button in order to add a bunch more so let's add one for the background and another one for the top and now in here we can also drag in order to modify the order and now this order in here represents the rendering order so first the one on top gets rendered then the one underneath gets rendered on top of the first one and so on so for example the background is meant to be behind everything so here we put it on top of the list meaning that the background will be rendered first then the default gets rendered and then the top gets rendered so the top will be on top of everything alright so that's how you add sorting layers now go into the sprite and here let's change the background from sorting layer from default and put it on the background and as soon as we do we see that lights go out so the object is still there but it's completely black now this is related to the fact that in this demo scene i'm using the 2d renderer so over here on the project files i'm using this universal render pipeline asset and it's using a 2d render so here it is and then over here on the scene i'm using a global light 2d so the reason why everything went black is because this light by default only targets the default sorting layer so all of the other layers are not being affected by this light so as we move the background to a different layer the light node gets applied to it so over here just select instead of just hitting the default let's hit all of our layers and if there you go now the light is correctly being applied to all objects alright so that's a background sorting then over here on the building we're going to leave it on the sorting layer default okay that makes sense and lastly over here we have a health bar and for this one we want to show up on top so let's just select the top alright so everything is now organized we've got our background then we've got buildings and then we've got the health bar on top of everything so this is what sorting layers do they define which objects show up on top of which so first we define all the layers then we define the order in which they are rendered and then we set individually each object in its own sorting layer now the other film that we see in here is the ordinal layer or the sorting order so this is how you sort things within the same layer so for example let's duplicate this building and there it is now we have two buildings and both of them are on the exact same sorting layer and both of them also want the exact same sorting order now if we leave them on the same sorting order and same sorting layer then we have the issue that we saw previously which is that the behavior is not deterministic so sometimes this one will be on top and sometimes this one will now we want our game to always behave in the same way so make sure you always use different orders so here if the wood harvester is on sorting in order to zero then over here on the tower building we put a non 10 in order to show up above so with this it's on top and if we set it to 10 then yep now it's behind that one so the sorting order is how you sort objects within that same layer and another thing about the sorting order is how this is stored in a short so that means that you can only use whole numbers you can't use decimals and also if you try putting a massive number and click enter yep there you go it clamps down to 32 000. so this is the maximum value and also the same thing if you go into a massive negative number yep it clamps down into minus 32 000. so the sorting order must be between minus 32 000 and plus 32 000 meaning that you have a total of 65 000 possible values to sort within each layer and of course each layer has its own sorting order so for example if i put this tower object on plus 32 000 and then the health bar let's move it on top and it's on the top starting layer and put it at minus 32 000 if there you go this one is on top so an object on default at plus 32 000 will still be behind an object on top with 32 000 and since we're talking about sorting let me just quickly mention how sorting works in the ui so sorting in the ui is different over here i have an image and as you can see there's no sorting order or certain layer anywhere now instead the sorting in the ui is handled by the position in the hierarchy so over here i have the canvas with two squares a white square and a blue square and down here if i drag the blue image and put it up here on top on the hierarchy yep there you go now it shows up behind so the sorting order here works similar to like i said for the soaring layers so going from top to bottom you have the rendering order so first this object renders then this one gets rendered on top and so on and if you have objects with children then the same logic applies so first the parrot gets rendered and then the channel gets rendered also related to that is the world space canvas now i covered this in detail in another video but essentially you can create a new ui canvas and over here you can get rid of these two components and then on this option instead of choosing screen space overlay you can choose world space and when you do you can see a field for the sorting layer and sorting order so we can just place this in our world and then inside let's say we create an image so now you can set the canvas for example put it on top and now it shows up on top of everything and put it on default and behind it and yep it's behind both buildings so this is yet another place where sorting layers are used and lastly just to clarify one thing here which is sorting layers are different from regular layers when you select the game object up here we see a layer field and you can see all these layers and you can even click on add layer and yep it goes to the same as the previous one so we have a list of sorting layers and over here only seven layers so these ones are used in many places like for example camera rendering physics collisions and so on but they have absolutely no relation to the sorting layers which define how 2d objects are sorted so they have similar names but are completely different things alright so that's everything about sorting layers and sorting order when working on 2d games this is extremely important knowledge to have always keep your sprites nicely organized into specific layers rather than having all of them just on default so that's sorting layers and sorting order if you found this video helpful consider liking and subscribing this video is made possible thanks to these awesome supporters go to patreon.com unitycodemonkey to get some perks and help keep the videos free for everyone as always you can download the project files and utilities from unitycodemonkey.com subscribe to the channel for more ent tutorials post any questions in the comments and i'll see you next time you