hello and welcome I'm your code monkey and in this video we're going to create a simple resource gatherer ai let's get sir so here's my scene I have a unit in here a gaunt node here and a storage area here the goal is for the unit to go towards the goal node play an animation carry the gone to the storage and drop it so let's go and see the code that I already have in here I have a basic game hammer script it's not doing anything it's completely empty and I have a unit interface which contains all the functions necessary to implement our AI as you can see I can tell the unit to move to a certain position I can tell it to play the mining animation and I can test if the unit is idle so let's make our gather AI script and our scripts folder make a new csharp script and name it togethererer AI so in here let's start off simple we're going to add some fields to store the gold node and storage transform so let's make a serialized film private transform for the gold node transform and make another one for the e storage transform on our private void awake let's first grab the reference to our unit so let's go here make a private eye unit unit this is the interface that contains the functions we need so the unit is on the game object docket component of a unit this game object contains a component which implements this interface so now that we have a reference to the unit interface to the goal node transform and storage transform let's make some very basic AI we're going to first go into our unit and move them towards our don't know transform dot position going to stop within ten units and when he arrives there he's going to execute an action that action is going to trigger when he arrives at the corner transform so the action we want is to play the mining animation is going to play the animation looking at the goal node transform dot position and when the animation is completed it's going to trigger this action and action will move the unit towards our storage transform dot position okay so we are moving our unit towards the goal node transform when we get there we trigger this action which plays the mining animation when the mining animation is completed it triggers this action and in this action he's going to move towards the storage transform position and when he gets there he's not going to do anything else so let's see if all of that is working correctly first I'm going to go into my unit and add the gatherer AI this script up here is the script which implements our interface and let's drag the storage transform in here and the go note transform okay what's this okay there he is goes towards the mind plays the animation and moves towards the storage okay great so that's the core of the behavior that we want to create so now let's make together and more adaptable so let's first go into our script here and instead of having the goal node and source transform in here I'm going to remove it from here and place it on the game hammer so the gallery I by itself will not have those references instead together will ask for those references when he needs it we're going to have the private inhome for our state and a private state to store our current state now for all developed states that this AI can be in let's say it's I don't moving to resource node gathering resources and moving to storage by default on awake we start at state title let's comment out this code so on the private void update we're going to do a switch on our state and execute different logic depending on the state so first of all kstate title on either let's look for a nearby resource node in order to do that we're going to ask the game handler to give us the closest resource so it's first going to our game Handler and here we want to make a function to return the closest resources syn here we're going to do a public transform gift resource no and this is simply going to return our goal No transform now in order to make things easier and let's make this static so we can access this function using the class name so let's go up here make a private static game handler for the instance on our awake let's set the instance let's make this private and make a public static transform gift resource no static and this will go into the instance and return get resource no all right so we can access this function which will return our goal node transform so this function is what we're going to call in here going to go into game handler dot get resource node let's store it as a member variable so go here private transform resource know transform and that's what we're going to store after we store the resource node let's set the state to state dot moving to resource node and down here case state dot moving to resource node let's first test if our unit is idle so if the unit dot is idle then let's move in towards the resource node unit dot move to our resource node transform dot position let's stop within ten units and when you were right there let's set the state to state dot gathering resources okay so now I stay start gathering resources if the unit dot is item we want to do unit dot play animation to mine going to load towards our resource node transform dot position and when the animation is complete let's increase a variable to store the gold amount that this unit is carrying so let's do cone inventory amount plus plus and that's what we're going to store up here so private int on the inventory amount so in here after we test for item if the gold inventory amount is bigger than zero then we're on carrying something so in here we're going to move to storage if not if this is the first time when we are carrying zero then let's gather resources so in here again we are going to request the game handler to give us the storage position so we're going to have a transform for the storage transform and we're going to go into game Handler and we need to create a function called get storage static let's make that now go down here and make a public static transform gets or static and we're going to return instance up get storage and let's go up here make a private transform get storage and we're simply going to return the storage transform alright so in our gathering I'm let's set the state equals state dot moving to storage and when moving to Serge we're going to do something similar to in here instead of moving towards the resource node we move toward a storage and when we get there we reset back to idle this is move to storage and let's store the storage transform up here and of course when we arrive we also set the gold inventory amount to zero all right so let's see how our logic is set up so the gatherer first starts off at idle when he's I don't he searches for a nearby resource node he asked the game handler to give him that when he gets a resource he sets the state to moving towards that resource if the unit is idle he's gonna move towards that resource node when he gets there he's gonna swap the state to gathering resources if he's in state gathering resources first he does if he's I don't if he already has gold in his inventory then he's gonna move to the storage if not he's gonna play an animation when the animation is complete he's gonna increase the gold inventory amount which on the next update he's gonna run the same thing and move towards the storage and moving towards the storage he tests if his idle he moves towards that storage position when he gets there he resets the gold inventory amount and resets the state back to I don't starting the whole thing over again so let's he found that is working there he is goes to the goal node mines it goes towards the storage drops it and again goes back to the node mines it drops it and so on okay great so we have a simple resource gatherer a I let's do a quick test with multiple resource nodes to see if the code is working with any resource node we give it let's make two more gold nodes put one in here and one in here let's add references in our game handler so all new two and three and on the get resource node and let's return a random one so let's make put them all in a list and return a random one all right so let's see if he's going to all the nodes okay he's going to that one mines it goes to storage okay he's going to another one and yep it's working so there you have it we created some basic area structure for a resource gatherer in the next video we're going to keep track of our resource amounts if you have any questions post them in the comments and I'll do my best to answer them subscribe for more videos and I'll see you next time