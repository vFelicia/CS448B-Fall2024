this video is made possible by my game bomber play seven awesome games and help support the channel by using a mask and increase in the scale so doing so and you would have this very nice that's the field is one of those effects that always wants probably good hello and welcome I'm your code monkey a professional indie game developer and here I won't react and analyze a gameplay trailer so I will talk about how things work behind the scenes and how you could build them in your own games the response to the previous one has been really positive so I look forward to more like this in the future and let me know any specific games you'd like to see in this case we're looking at the ghosts of Tsushima gameplay trail alright so let's hit play okay so we start off with our character standing around and then he opens up the map now for the map itself it's in a simplified 3d form so the camera starts on the way back down here and as soon as it opens it transitions and moves towards the mouse position then as the player moves the cursor around the map you can see that the camera does phone so this is extremely easy to do when using cinema sheen pretty much you just set the camera on a fixed rotation so upwards pointing downwards the map is just a texture place on a quant and then you set the same machine composition to follow the mouse cursor so then all you do is the mouse cursor is an action or game object and you just move that around and sin machine will automatically pen the camera to face it then you also have several methods for interacting with interactable objects so for example one way you could do it is to make a sphere cast around the cursor position that wouldn't locate all the objects with colliders that are within that area and then you would simply test to see if they are interactable so that's one approach another approach if you don't have that many objects you could just cycle through the whole list and cycle through all of them and test all of their positions so it depends on your performance targets and how many objects you have now once there is something within range you can also add a bit of a magnet effect to nudge the cursor on top of the icon so you can see here as he moves if there you go it snaps into position so in there as the cursor approaches once it reaches right next in there then all of a sudden it starts being yep there you go it gets attracted and goes straight on top of the position so utilizing that magnet the fact is something that is extremely useful especially when dealing with controller when working with a mouse you have more precision but when working with a controller it helps to have these tiny little nudges then the object itself also has some information for example you could store this information on a scriptable object and you would simply start a boolean to see if the location have been discovered or not and if it had been then you would show the proper icon so the player sets a waypoint and as soon as it comes out from the map the guiding wind shows the direction so this is a really interesting mechanic it makes the game feel very immersive since it looks more natural having some GPS arrows like many games have for the visual of the one you can use a simple particle system constantly moving the particles in a specific direction now I'm guessing the twin never actually goes through walls so instead of pointing directly towards the target it must be using the path fighting system so for example if there was one here I'm guessing the wind would show an arrow going around the wall then also related to it we have the grass particles right down here so you can see that they also point in the same direction normally this type of animation is handled through a shader so the shader simply moves the vertices of the grass towards a certain position so for that you would probably have a common bond shader variable for the wind vector and the grass shader would read that vector I'm guessing that it's a normal vector rather than a specific grass town having its own a vector perfectly pointing along path finding I like to win that approach would likely be too expensive and using a column vector works perfect so the vector used is probably the one right where the player standing now over here the player calls for his horse which quickly comes on running so in order to achieve this there are two approaches he can use it all depends on one if the horse always exists in the world or not now if the horse does exist all the time then when he uses this skill it probably has a max range so it knows where the horses in the world and it knows where the player is and then it simply does a distance calculation to see if the horse is within range so if so then it finds the path toward the player now the other approach is if the horse does not always exist in the world with that approach you would always spawn the horse offscreen so the game knows that the player is over here and knows that the camera is facing over here in this direction so what it does is find a position near the player but not within its radius so right behind him and then simply spawns a horse in that random position so this is how many openworld games have non spawning of various objects and NPCs they get spawn near the player but never actually in view then over here the player picks up an item so this is just a case of a very simple sphere cast being cast around the player so it looks for all of the objects right around the player and if it finds something then it tests if it can be picked up and if so then it shows the key prompt to use it then the player hits the key and in this case grabs the object now usually when implementing something like this you want it to work it in interface rather than a specific object type so in this case the player is grabbing some bamboo but the exact system is used for all the other interactable objects so in this case the player probably doesn't know that it's grabbing a specific bamboo it just knows that it's interacting with an object you can use an interface like it did in the how to interact with doors video and then for the visual you can see that the object has a slight like radiant glow so for that it's just a simple shader in order to make the object nice and visible from very far then over here we see a detection radius so first the UI element is pointing in the direction of the enemy so it is calculating the camera position and in the enemy position any test direction towards it so this is very similar to what I covered in the quest pointer video and then for the element itself you can see that the detection increases over time so over here it starts off and yep it expands on both sides so the way that expands is simply just first of all making a ray Kasten or to make sure that the players not occluded and then it simply increases the float on every update visually you can make it increase on both sides by using a mask and increasing the scale of the white part behind it and then appear yep we see the exact same thing but with a different sprite to indicate an animal rather than a human enemy now in here the player arrives at its target and he's grilled with a nest location card so it's just a simple counter set to trigger there's a Collider somewhere in here place in the world and as soon as the player enters then it triggers the nice location guard again here we have another excellent example of good immersion design so rather than placing a UI element right on top of that position it simply spawned some particles which make sense in the world and act as a pointer for the player to go there on the rise interesting and odd shape trees or maybe even animals trying to get your attention then here we have another use of a simple canal to trigger the spirits so as soon as the player enters this area it starts playing the NPC audio again just a simple quieter set the trigger and testing for ontriggerenter now the player finds a fox which is another great immersion mechanic so somewhere around here there's a special shrine then it culminates the vector pointing towards the player and then simply chooses a random position right around the max distance it applies some randomness so it can spawn on multiple places so in terms is choosing the spawn position it's very simple then as the player approaches the Fox starts heading towards a hidden site and here note how the fox moves faster than the player then the Fox is constantly checking for the distance towards the player and if it's too far then similarly plays a stopping animation and stay still until the player approaches and finally the Fox directs the player towards its hidden site the player honors the shrine and shows this really nice UI element so again visually this is very simple to do pretty much the same thing as the detection mechanic so you would create a mask exactly with this shape and then behind it you would place a simple white image and on the image you can set it to fill and you can also modify the film type to be radium so as it increases it constantly increases alongside a circle so just a simple mask and a rotating filament looks great then it's also very interesting as the particles flow away so you can see that there's a sort of diagonal line running through the UI and where it interacts with things it spawned some particles so really simple and really cool effect now we get on to the combat his combat system looks really interesting so first to play your challenge is the enemy to a duel now visually it's won some really nice cinematic bars so it makes the whole thing feel more cinematic then as he approaches the enemy over here we see something interesting so there's a prompt telling the player to hold down a button so I'm guessing that the way that this works is you hold down this button and the player attacks as soon as you let go so this whole system is probably based upon a very simple timer if you let go before the enemy actually attacks I'm guessing that the enemy wins and takes his head so you have to let them start this animation and as soon as it does then starts a timer and if you let go of the button within that time or your reward with an instant kill so over here as soon as he transitions into this animation then over here a timer starts increasing and the player has enough time to let go of the button innocence it does just testing if the home timer is under the maximum home if so then there's a nice instant kill visually it also looks really awesome so the player plays a very quick animation and it spawns this really nice slice visual in order to really make it very impactful then as soon as he takes out the first one it seems to be the exact same thing for the second one so the player holds down a button and has to let go right after they start their animation so this whole system looks really really cool now this is a really tricky design front assault on the one hand you want the player to feel like he's a master samurai capable of taking down enemies in a single hit but you also need to balance it so it doesn't become overpowered so I'm guessing that this system is only used in certain very specific scenarios like only with the first few enemies I'm guessing you can't just one shot every single enemy in the game since that would be no fun so mechanically it's a very simple system but you combine a simple mechanic with excellent sound and visuals and you get something that looks really cool as you can see the strike must count now here the player goes into some serious combat and first of all he's under attack by an archer and also has the ability to counter so this is one of those very simple mechanics that always feels really great it's one of the main things that I love from my own game ever nights now there are two ways that you can implement deflection one way is you can make it based on a simple button press so as soon as the arrow is very near to the player then you have an internal button prompt and if the player hits a button then the fight is the error so similar to doing mechanic you have a simple time gap where you must hit that button if you do it and it's closed and the arrow gets a fight however here I'm not seeing any of the fight prompts coming up so this appears to be automatic as long as the players body again this is all about balancing your specific design so in this case they probably tested with active deflection and found the player was overwhelmed by all the attacks so they end up simplifying visually you can see that the arrow is in here and has a trail right behind it now in unity this is very simple you just use the built in trail renderer the eternal renderer just follows an object and leaves a trail behind it now in here the player does a quick dodge so once again just see simple timer as soon as the enemy starts his attack then it starts playing a dutch timer and if the player hits it within the dodge window then he gets a very nice special dodge so visually you can see a bunch of effects being added so visually you can see a more pronounced vignette effect on the corners then also increase the bloom intensity which you can see in the particles and it slows the game down so the vignette in bloom you can do that easily by using a volume postprocessing and for the slowdown you can do that by easily modifying time that timescale that value works as a multiplier which gets affected to everything that uses time down to time so if the player Dodge is right on time if there you go the player is rewarded with a very nice instant kill now here we see a real nice stagger mechanic so this enemy here probably has an AI state that allows them to defend all of the players attacks so for the stagger there you go you can see a UI element increasing and once it gets full only chatters into a million pieces which looks really awesome and then there's also a really cool wave shield effect right on top so you can see how it's a wave right around here and it pretty much just distorts everything behind it so this is something that you can build to achieve graph any very simple texture so the players tigers him and then in here he seems to open a charger tank so the player homes on a button and lets go after a while and does massive damage in an arc so for the damage you could make it really complex and make it an actual proper perfect arc or more likely what you would do is just do a very very simple box cast so on the enemies within this area take some damage remember that game development is all about smoking bears so in this case using a simplified box cast would be much faster and much better than using something very complex which would have the perfect shape of an arc for the player the end result is exactly the same and it simplifies your development process okay so that was the aggressive method and now we can move on to the stealth approach as a general rule it's always great to give your player multiple ways of achieving the same objectives since everyone likes to play in their own unique way so right away he starts off with a simple noise object so the game knows where the player is looking at so it finds this ground position and then with that position and with the point position oh it does is simply calculate the pointer towards there and simply interpolates a very nice curve to go from the player towards the target so in this case for example you could check the distance between the player and the target position and then you would place a point all the way up here at let's say the same distance divided by two so doing so and you would have this very nice arc so the player throws it and if there you go it simply spawns the noise object so once again this is probably another example of a simplified system so the player probably doesn't actually fire an actual physical object that goes all the way along this what it does is it fires off the particle that phone will see trajectory and when the particle reaches its position then it spawns the actual noise object just fixed on the floor so doing it that way it's not looks the same except you avoid on expensive physics calls then for the noise it's pretty simple so it knows that the object isn't there and simply does a sphere cast all the way around the object and locates entities that can listen around that object so the enemy can listen he listens to the actual and listen and when this function is called any knows to go and inspect that position then here the player sneaks by the enemy and this is a very simple detection cone so the enemy is looking in that direction so with the player being behind them it simply tests the vector towards the player in this case the player is right behind him so at 180 degrees and let's say he goes from maximum of minus 45 degrees to plus 45 so the player being at 180 is not inside so he's simply not detected and if the player manages to approach the enemy without being detected he gets rewarded with a nice instant kill then for this enemy here he takes him out to the bow so the bow mechanic is pretty simple first of all as soon as he picks up you can see the UI Ullman showing right in the middle of the screen then here note how the camera zooms in zooming in a camera really just means switching from a wider field of view to a narrower field of view and for example you can do this very easily with same machine so you have your normal player camera which has a very wide field of view then you have the second bow camera which is always following the player and has a much narrower field of view and then all you do is just increase the priority of the second camera and it smoothly interpolates all the values then the enemy gets hit and it shows a very nice simple hit murder now over here we have another nice and simple distraction noisemaker so I'm guessing that these firecrackers simply have a larger radius than the wind chimes and I'm here the player has the ability to assassinate so just a simple case of doing a sphere cast around the player and identifying all the possible assassin target surrounded in order to have the assassinate be an option I'm guessing that probably the player needs to be hidden from the enemy and possibly also needs to be behind it now here we see two possible options assassinate and chain assassinate so what it's probably doing is the same sphere cast and locate the first enemy and then perhaps it does a second sphere cast around the second enemy in order to see if there's another enemy in there and if so then it shows a chain assassinate option so the player takes down that one and the camera immediately pans towards the next target so he takes down this one and once again it uses the same effects that we saw previously so we got extra bloom vignette and a slowmotion then while in slow motion the camera automatically pens to look at the next enemy and choose the second prompt so for finding the second and me maybe it stores a list of the possible enemies as soon as he assassinates the first one or maybe right after taking down this one it does another sphere cast and locate all the enemies within then this probably also has limits so even if you're surrounded by ten enemies you cannot instant kill out them and visually here we also see a nice outline on the enemy so one way of doing this outline is with a simple for now effect however in here it seems to be a thicker outline so most likely it's a shader that increases the visual size of the enemy and simply tints it with a moving radiant glow now over here the player is facing this super tough enemy and yep he drops a really nice smoke bomb so as soon as he opens his inventory yep there you go chose a really nice black and white effect I covered how to make postprocessing effects in another video so in this case making a black and white shader it's extremely simple you just set the saturation notes headed all the way down to zero and you up there you go everything is black and white then over here it spawned some particles and makes the camera have a really shallow depth of field so pretty much anything passed the player looks really really blurry that the film leaves one of those effects that always no it's probably good and for the action on the enemies it's the same as always so as soon as he fires he looks for a sphere cast finds all of the enemies around it and calls some sort of stun function then the enemies AI go into the stun State and whilst in that state if the player approaches yep he has the option for a critical strike and now the player grabs a kunai and just throws it to finish him off then down here he use it to kill enemies at once so this is similar to charge attack that we saw previously with a sword so when using that same charge with a kunai then attacks multiple enemies so he holds down the button and as soon as you let's go once again it locates all the enemies within a range it probably finds the three to five causes two enemies and automatically fires the cognise onto them and again visually they have a very simple trail with a rotating object so just like that throws yep just like that so just say trail renderer and the rotating game object and yep what's wrong it now over here it shows a really cool mechanic so the enemy just drops down in fear so the game probably has some sort of global reputation score and the higher reputation the more likely it is that an enemy won't be paralyzed by fear this makes the player feel really powerful and grants them a nice and easy kill again it's one of those design problems that need to be carefully balanced so the doesn't become too easy so the game probably keeps the timer of the last five or so enemies at felling fear and it only allows it to happen every so often and just in case you miss it over here yep is another enemy running away in fear so the same mechanic except instead of falling to the ground he just ran out of there so some really nice variation and the game also features a real nice grappling hook now in some games the repple can attach to almost anywhere however here it seems to be unlimited to possibly these areas so the player is constantly looking for objects around it and if they have the let's say I grapple interface then checks for distance and if it's close enough then it shows a UI element and if the grapple targets are a many only set then the designers probably also set many only the target position so they connect the grapple to an endpoint and the animation smoothly interpolates at position then the player reaches the object and does the action so just a very simple timer increasing over time we want to play your home to button down visually again it's a simple mask so you have a mask with this shape and then you have the yellow part behind it constantly filming and once it ignites the player is rewarded with a nice victory cutscene so there it is mission complete alright so that's it I hope you found the video interesting and useful and learned something along the way I'm a big fan of openworld games with lots of systems so this is right up my alley now the response to the previous react that it was really positive so I look forward to doing more of these in the future let me know in the comments your suggestions for what are the trailers I should react to check out the code monkey app on Steam interactive tutorials complete games and more click knowing the description and add it to your wish list this video is made possible thanks to these awesome supporters go to patreon.com/scishow to code monkey to get some perks and help keep the videos free for everyone like the video and subscribe to the channel if you'd like to see more post any question have in comments and I'll see you next time you