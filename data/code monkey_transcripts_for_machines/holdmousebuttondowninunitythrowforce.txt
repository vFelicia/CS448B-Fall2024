in this video we're going to cover holding down the mouse button to implement very Vaughn launch power let's begin hello and welcome I'm your code monkey and this channel is all about helping you learn how to make your own games with nf2 torrents made by a professional indie game developer so if you find the video how fun consider subscribing so here's our goal there's this bird here just sitting around and if I click somewhere I can launch him in the opposite direction of the mouse so click down here and he does just a tiny jump now in this case we want to test the illogic for holding the button down to launch him towards that tower so we have the logic that longer eHome the bigger the force and yep there we go and after two seconds we reach maximum force and he gets launched and the goal is to hold so we can point towards the tower and fire okay so that's our goal let's get to it so here we are in the starring scene and if I play you can see that the only thing it has our physics so there you go start playing everything falls down okay now the logic for holding the button down is actually quite simple so let's start off with a simple testing script to run our code so in here we create a new C sharp script this will be our testing script let's create a game object called testing and drag the script on to it okay now in here let's first make a simple predatory update and the first thing we need is to listen to input so for that we do an if input that get mouse button down this function returns true on the very first frame that we press the button and it takes a parameter for the button index so for that the left mouse button is on index 0 and the right mouse button is on index 1 so in this case we want to test for the left mouse button so we just pass in a 0 okay so in here we have the code that will be triggered once when we press down on the button so much is to a simple debug log and say button down now just like we have get mouse button down we also have a if input that get mouse button up which gets triggered on the frame that the mouse button is up so we do again on the next zero and the way debug that walk okay so let's see this code in action okay here we are and here's the console now I press the mouse button and there you go button down now I let go and yet there you go button oh okay great so we are correctly capturing when we press in and let go of our button so with that essentially we have everything we need to start the hold and finish the home so in the same that gone with holding the mouse button is to define the force that we fire our bird so for that the bird has a bird class so let's add a reference on our testing class so we make a civilized film so we can set it in the editor for the private bird and we have our bird reference so now back in the editor here we have a field and we simply drag the bird onto it so drag the bird just like that okay the birth class has two very simple functions we can use we have the launch and the show force functions as the name of quantize this one shows a certain amount of force and this one uses physics to launch our bird so right now let's just use lunch to test launching so let's go back into our testing code and here we want to launch only one will let go of the mouse button so we go in here onto the mouse button up and we call her launch then here in let's just pass in a random force okay so let's test and see the code in action okay here we are here's my bird and if I click yeah there you go as you can see when I press down it just says the log and when I let go yep the bird flies up okay so we have the illogic working now the goal with this video is to test for holding down the mouse button so let's work on making the force dependent based on how long we hold the button down so for that we simply need to know when we start pressing and when we actually let go so let's go in here and we're going to define a private mode for the home down start time this will hold the curtain time when you start holding down so we go down here onto the mouse button down and we simply set it based on time dot time this contains the time in seconds since II started the game so here we define the time and then on the mouse button up we can calculate the whole down time which will be the current time minus the whole down start time so just like that we have the number of seconds that the mouse button was held down now with this value all we need is to convert it into a force that we want so let's make a function to do that down here we make a private cloud so calculate home down force and we receive a point for each time so with that time let's define also the amount of time to reach the maximum force so we make a float for the max force hold down time and let's say we want to maximum after two seconds then we normalize our whole time so a float for the whole time normalized you will essentially be the time divided by the max force from downtown so let's just rename this to home time to make this clear and then we just do a math F dot clamp zero one in order to make sure this value stays between zero and one okay so with the hometown normalized all we need to do really is to multiply it by the max force and the birth class has exactly that we got a constant for the max force so in here we define a float for the final force which will be the whole time normalized multiplied by the bird max force so if we hold the button down for two seconds we're going to have max force if we hold down for just one second we're going to have half and that's pretty much it for calculating our force so in here we have the whole down time and then we're going to launch with the force of completely calm down force and passing the home down time okay let you do it let's test and see if we can indeed change the amount of force we apply so here we are now just a simple point to see if it jumps just a tiny bit and if there you go just a tiny bit now if I home for two seconds yep there you go he goes with a lot more force so we pretty much have our logic for holding down the mouse button fully working now as one final thing we have in the bird class a function to show the current force so let's use that so we can see how long we have been holding here in the code we only want to show the force when the button is held down so we can use the other input function which is input not get mouse button so this one returns true whenever the button is held down so whereas this one is only true for example in one frame this one is true for as long as the button is held down so we test the same button index and we can use this to show our force so we call the bird down show force and then we pass in the same force that we calculated up here okay so here's our code first we test for the mouse button down and we store the current time as the home down start time then we're testing for every frame that the mouse button is held down while it's held down we call the bird that show force in order to show the current force based on this whole down time and finally when we let go of the mouse button we again calculate the force and we tell the bird to and watch okay so this should do it let's see here we are now let's see if I click and I hold yep there you go the forces increasing and after two seconds it reaches the maximum and it no longer goes up now if I want to fire two words there I go and boom there we go the bird is indeed fun and if I home you can see that the force the indicator is the pendant based on how long we call the mouse button down so if we hold for just a bit he just gets a tiny jump and hold for the maximum which is after two seconds and there you go he goes flying so we can now launch his bird round and define the force based on how long we hold the mouse button down as always you can download the project from the new tony's from unity called monkey comm if you liked the video subscribe to the channel for more unity tutorials post any questions you have in the car I'll do my best instrument alright see you next time