hello and welcome i'm your code monkey here is the game rover mechanic simulator which features some interesting mechanics and systems let's inspect and remake the cleaning minigame to see how it works it involves working with textures copy pasting some pixels and listening to where on the object the player clicks hopefully you'll learn something new that you can then apply to mechanics in your own games by the way i'm trying out this format because there were a lot of comments on my game design breakdown videos asking for a more actionable tutorial format so let me know if you like this type of video do you prefer learning through a more guided path rather than separate tutorials then check out my complete stepbystep courses starting from scratch until the final polished games if you're into programming then get the awesome builder defender course learn how i make my own games using code build an awesome game that involves mechanics from city builders tower defense and survival games or if you're into visual scripting then you get the vs course which features not one but three complete games a simple platformer an action rpg and awesome fps in the visual scripting course all of this is built without a single line of code all games in both courses start commonly from scratch and go step by step until the final polished games all of the unleashers have their project files available at every step of the way and i'm always active answering questions every single day in the q a section so if you are looking for a more guided path then check out the courses at unitycodemonkey.com courses alright so first just a quick overview of what the game is about like the name implies it simulates being a rover mechanic so you're on mars you accept orders they give you a list of the components that need to be repaired or cleaned you then identify those components remove them by unscrewing all the screws and everything that's connected to it then you can take those components and either clean them up or remove the broken components and 3d print some new ones then you put it all back together and complete the order it's a relatively simple game plan loop which is quite appealing if you enjoy taking things apart and putting them back together and it is also a game made with unity if you want to pick it up there's a film link in the description and if you use that it will also be supporting the channel and follow the curator page on steam if you want to see more of these types of videos the game features a bunch of interesting systems and mechanics with one of them being the cleaning minigame so let's see how it works when you dismantle some objects they might be dirty if so then you need to go into the cleaning station to clean them up this opens up a nice mini game where you use the mouse to click and move the mouse to clean up the object so you have to clean up the front then rotate it clean the back and keep spraying until the dirt is all cleaned off so in terms of logic what this means is you need to store the dirty state throughout the whole object mesh so you need to know not just whether or not the object as a whole is dirty but rather you need to know exactly where that dirt is and you also need to know exactly where the player has clicked so you know what part of the object dirt should be cleaned so there are many ways you can achieve this one approach would be by actually painting a texture you can do all sorts of actions working directly with pixels inside of unity i've covered lots of those methods when i did the guest spreadsheets videos just like i used them in my game battleground tycoon you can use the function get pixel which will grab any pixel from a texture this returns a color and with that color you can do whatever you want with it so you can for example compare it with another color and then paste that new color into another texture by using set pixel using these simple functions you can achieve all this functionality so in this case you have the normal solar panel texture so the object is looking completely normal then you have another texture except this one is of the object one fully dirty so everything's done paint normal but painted with dirt on top and then you have another texture which works as the dirt mask for the mask you can make it a full rgb texture or since you just need one channel you can just have a single color so for example just green with those three textures you can then make a very simple shader either manually or with shadow graph take those three textures as inputs and the output is the final visual which is composed of the dirty texture where the mask is and a normal clean texture where there's no dirt mask so by combining all these you can probably see where this is going by the way if you find the video helpful please hit the like button it's a tiny thing but it really does help thanks all i need to do to make this minigame work is start off with the mask showing off all of the dirt and then as the player clicks on the object you simply paint some of those pixels in black and as the mask becomes more painted in black the dirt gets removed and the objects start slowing clean for that another crucial part is knowing where the player actually clicks you can do a simple raycast from the mouse position and hit the object then inside the raycast head structure you have the field texture cord this gives you the uv coordinates where the raycasts actually hit it means that on zero zero is on the lower left corner whereas one one is on the upper right corner so those are uv coordinates if you want to learn some more about meshes and uvs check out my mesh video it's very useful to understand how all of this works under the hood so again with that you have normalized uv coordinates then you just need to do some math in order to convert it into pixel coordinates then like i said you can use those functions to copy and paste pixels you can go with the very simple approach of clicking on a part of an object and just making a square area fully clean you can inspect the mass section real time to see what is being painted but making a square doesn't really look too good so you can just combine it with a simple brush texture in this case i made one with black in the middle and green outside meaning that in terms of numbers it has zeros all the way down the middle and one on the outside so this makes it perfect for some multiplication you just cycle through the home brush grab the pixel color on that position on the brush then you grab the pixel color of that position on the dirt mask and just multiply them both with that now when the player clicks you have a nice smooth area now there's one last thing missing from this minigame it's how you identify just how much of the object is clean and how much is dirty for this you really just have some simple math so you have the full dirt mask texture with foam green on the whole object area then when you start the mini game you essentially duplicate that dirt mask texture and the clone one is what you actually use to paint so not the original and with those two you can do some simple math first you cycle through the home phone dirt mask and count up all of the dirty pixels with that you have the total then you simply cycle through the whole clone texture and again count up all of the dirty pixels just divide one by the other one and you have the full percentage of dirt if you don't want the object to start off with 100 dirt then you can also just apply some simple noise after you clone the phone dirt mask then you just do that math as the player is painting the dirt mask when the dirt mask texture is fully blanked then their percentage will be at zero and the object will appear fully clean and finally in order to handle both sides you really just apply a very basic animation since the whole system is based on raycasts everything works perfectly just literally rotate the object with a simple animation and all the connections will work perfectly and that's how you can recreate the simple minigame which works quite well if you want to pick up the game there's in the film link in the description and if you use that one you'll also be supporting the channel and follow the curator page on steam if you want to see more of these types of videos as i said i'm trying out this format because there were a lot of comments on my game design breakdown videos asking for a more actionable tutorial format so let me know if you find this format helpful also let me know what other games have some interesting mechanics that you'd like to know how they work alright hope that's useful check out these videos to learn some more thanks to these awesome patreon supporters for making these videos possible thank you for watching and i'll see you next time