hello and welcome I'm your code monkey and here's how I added multiplayer to my game now thankfully because netcode for game objects is pretty easy to use this was much easier than I expected in the last that long I thought it would take maybe an entire week to get this implement but in reality it only took about two days it was mostly pretty easy although at the same time I did encounter a few bugs that almost drove me insane but it is working right now which is great because the clock is taking the demo needs to be out by next Monday so I've got no time left and this is also a great time to have some discussion around when should you implement multiplayer to your own games so should you do it right from the start as soon as you start building the game or should you do it just like it did over here which is first build a bunch of systems in single player and then add multiplayer both options have their pros and cons so let me tell you my thoughts but before all that let me just say thank you all so much for your feedback on the last video using this format there was lots of feedback specifically based on the audio so I'm trying to fix that I'm trying to make this room a bit less echoey and also got a little thing for the microphone which I'm hoping helps at the same time I'm also going to try the Tonk without moving my hand way too much and secondly only people mentioned how the editing was a bit too much I was jumping around all over the place so I toned that down a bit and made this video a bit more calm once again thank you all for your comments and as usual keep letting me know what you think and also at the same time let me say thank you all for all your answers with regards to my design questions that I posed in the previous video there were so many interesting things that I hadn't thought about at all like for example with my questions with regards to how do I Implement tools for the player in the inventory for that some people suggest the game astroneer which is really awesome I love playing that game and that game does have a really interesting backpack system I love how physical it is then for the resource spawn areas some people mentioned how just painting the terrain in a different way or maybe having a tower that sends out pulses or perhaps even a dinky that goes out and finds stuff then with regards to the heat mechanic someone suggests the word threat which makes a lot more sense so thanks for that all in all lots of excellent discussion reading all these comments really got my brain going so this has been wonderful in terms of brainstorming great design ideas that video got so many comments way too many to keep track so apologies if I miss your comment and thanks again okay so multiplayer now adding this this was very interesting in the beginning getting the basics working was super easy barely an inconvenience but then afterwards I also encountered tons of bugs with netcode for game objects which drove me crazy for quite some time it took tons of trial and error although in the end I did get it working hopefully by sharing my experience and how I ended up solving them will help you so you don't go crazy if you also try doing this now before I implemented anything just as a quick refresher I went ahead and I rewatched my own netcode for game objects video as well as my free multiplayer course honestly this is one of the best ways about making educational content when I need to relearn something I can just go rewatch my own videos and obviously they are presenting the perfect way that I like to learn and at the same time it also didn't take that long normally I watch every YouTube video on about 2x speed but since it's my own video and I'm really just rewatching to get a quick refresh here I managed to watch them at 3xpin so I ended up seeing my own NGO tutorial as well as my complete multiplayer course I end up watching all of that in about 2 hours definitely really useful as a great quick refresh you to remember how everything works now for implement the basics like that it was super easy first I just cleaned up the hierarchy and got rid of everything that wasn't absolutely necessary I just added the network manager I added some testing UI and I also installed the quantum console for making it super easy to debug then just added some basic components so I added the network objects for everything at the network transform Network rigid body in most cases it's just adding those components was more than enough to get everything working perfectly although at the same time I also got an error right away so in single player in order to carry the objects I was modifying the parent for the object but of course in multiplayer changing parents that is something that is almost very tricky so it's something you should avoid doing so after getting a quick error I just ended up doing exam like I did in my multiplayer course meaning I just have a simple script that just takes a Target transform and simply follows that position perfectly then I just converted some scripts to network Behavior I added some is owner checks and up with that very quickly I had the core of it working perfectly all of it is being synchronized across multiple builds setting all this up only took about 22 hours really fast thanks to our NGO is super easy to use and thanks to rewatching my own multiplayer with the base is working then I need the connection scene flow meaning I want the player to start from the main menu then go into the lobby scene then into the character select scene and finally into the game scene and thankfully for that it was also super easy basically I just copied all that logic directly from my free multiplayer course it just required some very minor refactoring since all the code in those three scenes all of those scripts are already very nicely selfcontained I just removed references to Kitchen objects and renamed them with that the basic main menu was working perfectly the lobby scene was working great I could create and join lobbies the relay was also working and the character selection scene as well now I only talk about the importance of writing good clean code and this is yet another practical example of why that is by reusing code and systems that you've made previously you can massively increase your productivity and if you write the code correctly with as few depends as possible it makes it super easy to reuse that same code in montemon projects now if I were building this entire main menu pause Lobby plus characters like and so on if I were building all this from scratch it would have taken probably a week whereas thanks to being able to reuse all this I was able to build all this in literally one hour so once again another very practical example of the power of writing good clean code and how if you do things correctly you can make yourself much much more productive now while implementing that part was super easy I also did have a ton of very strange bugs I was going crazy for about six hours straight I really have no idea what was happening I was getting random bugs after random bugs and worst of all it was all related to the NGO package itself and not exactly my own code so that makes it super hard to debug and of course being in multiplayer being between a server and a client that makes debugging even more hard basically when I have some bug that only happens on the client there's no sack tricks because the client don't receive the message so I have no idea what went wrong in between the server and the client so it was extremely difficult to fix all the issues that I was Finding I had one where everything was working perfectly and then all of a sudden everything stopped working after getting crazy for many hours it turns out the answer was somehow related to the network manager I still have no idea exactly what happened there but it turns out the solution was simply to unpack the prefab as soon as I did that everything suddenly started working another strange one was the objects placed on the actual scene itself those suddenly stopped working it has something to do with the prefabs being placed in the scene it worked for the spawned objects but the ones that were placed on the scene by default those for some reason those had a weird bug it turns out that for some reason the network object component got bugged in some way I have no idea how but apparently the solution was simply removed the network object component and readded literally that's it there's no other change and just doing that for some reason fix that then I got yet another strange one which is if the client connects while the server is in the middle of spawning objects if so then for some reason the client that is actually connecting that one decides to spawn some objects and then try to destroy them now of course the client cannot destroy things so that caused an error again this was insane to debug because I cannot follow the stack trace on the client itself I can see the client is getting an error but I have no idea where that came from in server now thankfully for this range one I did manage to find the solution and the solution was simply just pause the game as soon as the client is connecting so on the connection approval compact as soon as the server sees that someone is trying to connect it is going to pause the game that way it ensures that nothing is being spawned in the middle and then as soon as the client connects then it resumes the game again another extremely strange bug no idea what causes since the client should never be spawning any objects but spawning it while the client is connecting for some reason that sounds it so that's good and with all that done there is still one more bug that I just cannot solve no matter what for some reason it has to do with the network animator however even more strange it only happens if I start the game from the game scene itself if I start from the main menu itself and I go through the entire connection file if I do that and there's no bug but if I start from the game scene there's a bug again really no idea what caused this one really no idea what is going on but thankfully since this one is on the player animator it doesn't really break anything so in this case my simple installation is really just ignore this bug and hope that nothing else breaks honestly I really have no clue what happened with all these bugs when I was making the multiplayer cores I worked on it for quite a long time and I didn't have any of these issues so I have no idea if I was just extremely unlucky and the most random things happen maybe it was because that other one kitchen chaos Zone was a much more simple game and one very important difference is on that one I decided to not allow only joining whereas for this one I decided to do all of that I do want the players to be able to join one of the game is actually in session and here are lots of issues with you to spawning objects in the middle of the game actually playing either way thankfully after all that stress after me going crazy for several hours thankfully now the game is solid I can play there are no issues and everything is nicely synchronized the starring objects are on there in the beginning and then the ones that spawn afterwards the player can actually join late and everything is synchronized correctly so thankfully the multiplayer build is now in a good state so I can continue developing the game also here's a super useful and quick tip for working with custom types with network for game objects as you might know you cannot use every single type in an RPC call for example you cannot pass in a script or an object referenced the alternative is with the special Network object reference or network Behavior reference however for something like a certain object for that one you can't pass in directly but there is actually a more advanced method where you can actually apply custom serialization to any of your types and doing that is actually not difficult at all I just created this last for the serial about extensions now if you don't know about extension methods you should definitely look into them they are a super useful csharp feature by using that according to the docs I was able to implement these two extensions I extend the function for reading and a function for writing so serializing and deserializing this custom object to handle the serialization I basically just converted into an index and back from it so I just got a script more object that actually holds a list of all the very script mode objects and using that index that index is a simple end so I can easily serialize and deserialize that so with that everything works so I can read I can write and with that I can now use my script objects directly in any RPC and anything I want however for using it in a natural variable for that one requires one extra step here is the documentation and here is the implementation as you can see it's on pretty simple with all this I can now use any of these script more object types in my actual RPC and network variables which does simplify the multiple logic by quite a bit now to answer that question that I mentioned in the beginning so should you build multiplayer games just like I did here meaning make a bunch of systems make them all working right at once and then work on converting them to multiplayer or should we instead start with multiplayer right from the very beginning honestly this is one of those questions where there really isn't an objective answer I think the answer mostly comes down to experience if you are a beginner or a semi beginner then I think the better option is to start from multiplayer right from the start adding multiplayer after everything is built that makes everything quite a bit more difficult debugging even simple issues becomes quite complex and if you don't have enough debugging experience that can be very very challenging all these strange issues that I mentioned if I had tried to debug those 10 years ago when I had much less experience if I had done that it would have probably taken me perhaps an entire month to fix all those issues whereas with the unlevel experience that I have nowadays thankfully I was able to solve all of those very strange issues in a few hours whereas if you start with multiplayer right from the very beginning if you do that then you manage to implement one feature at a time so you never end up with a mountain of issues all at once taking Tiny Steps like that won't be much much easier rather than what I did here which was build a ton of systems and then work on converting every single one of those to multiplier but as you can see that method can also work I do have a functioning multiplayer game right now now for me I was confident in my own skills and my own abilities so that is why I was comfortable with first making the game and then converting it to multiplayer but if you are much less experienced then yes I would highly recommend you start with multiplayer right from the very beginning as soon as you start the project install the netcode package right away and start making it multiplayer then for everything on Tiny system that you change make sure the change works both in single player and in multiplayer doing it like that is much much easier than trying to convert the entire project into multiplier even though like I said the alternative can also work now with all that the game is now playable in multiplayer so everything is in a functional state so I finally made the build and sent it over for Seam for approval an actually fun fact after 24 hours they actually review the build and they declined it the reason is because the build that is pretty much just the bare bones functionality so it doesn't actually have all the features that I'm going to implement by the time the demo comes out next week so for example the build that I submit for review does not have controller support and does not have pointer customization I will Implement those by the time the festival release comes out but for now in order to get through the build approval process for that I simply just remove those from the store page so it can pass correctly alright so now the build is working and I still got a massive amount of work to do the clock is ticking and I got less than a week to get the entire demo fully up and running I have to somehow put the rest of the mechanics that I need to add and somehow put them all together into one cohere and demo experience and also I might need some play tires just to make sure that all the connection everything works perfectly so if you're interested stay tuned for some random live streams sometime by the end this week where I will ask some people to install the game just to make sure that all the connection all of that works perfectly before the festival starts okay so now I gotta quickly finish recording this I gotta quickly edit this video and publish it so that I can get back to work go ahead and add dinky Guardians here wishlist if you haven't already thank you so much for watching and I'll see you next time all right