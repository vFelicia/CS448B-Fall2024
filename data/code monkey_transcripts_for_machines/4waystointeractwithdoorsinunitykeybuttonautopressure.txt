in this video we're going to look at four ways we can interact with doors and unity we previously saw three methods for opening and closing doors and now we're going to look at four ways into those actions using a button key pressure plate and automatic let's begin hello and welcome I'm your code monkey and this channel is all about helping you learn how to make your own games with enough tutorials made by a professional indie game developer so if you find the video helpful consider subscribing okay so in this video we're going to look at four ways that we can interact with our doors so over here I have my four doors now in the previous video we looked at three ways that we can handle doors so go check out that video if you haven't seen it yet there's a link in the description and now here the four interaction methods that we're going to make can be used with any of those three door types so just for this demo I'm using the animation door but you can use any type you want okay so first of all here on the left is the simplest one this one is a button interaction so if I try to go through nope some of the object cannot go through but as long as I'm near it I can press interact button any of there you go the door opens and I can now pass through and if I press again there you go the door closes now one thing about this method is how he made it distance limited so if I move way too far away now press the button yep nothing happens so I need to be near the door in order to interact with it the way we set things up means that we can work with any door since its distance based I can make it interact with this door by pressing button by being near it but now if I go near this door I can interact with this one so the same script is not hardcoded to a specific door okay so that's the button method now for here we have the automatic door so this is pretty much the simplest one as I approach it there you go the door opens and I go through and I move away any of the door closes so just a very basic automatic door next over here is the really interesting pressure plate so this would be great for any type of puzzle game over here is the door and once again I cannot go through it but down here is a pressure plate and when I step on it there you go it opens the door and if I stay on top of the pressure plate and the door stays open and as I move away the timer starts counting down and after the timer goes down to zero then the door closes so I have to open it in order to go very quickly go through it and there you go it calls behind me and finally over here on the right is the key door system affectionately covered this one in detail in another video so here I won't just give an overview of how the system is set up now it works exactly like you might expect it so first without a key as I approached it nope I cannot open the door but then if I go down I grab the key there we go the key is now in the UI and I approach the door and there you go now I can use the key in order to open the door so that's the key method which would be perfect for any type of Metroidvania or Zelda game and again as I said all of these methods can be applied to any door type the way they work is through an interface so as long as the object has an open door and closed or functions then everything works you could even further generalizes to work with any object type so you could easily make all these methods work with lights to turn them on and off with pretty much the exact same code alright so here are the four methods one using a button on the player in order to open and close the door one automatic based on the player being nearby when using a pressure plate to open and close after a while and one using a key this video is made possible thanks to these awesome supporters go to patreon.com/scishow to code monkey to get some perks and help keep the videos free for everyone all right so this is our goal let's get to it ok so here we are in our starting scene now first of all we're going to see how we can interact with any type of door so here I have the three door types that we made in a previous video so they are all interactable with a simple mobile key input so as I press the key if there you go that door opens press another and it closes same thing for this one and for that so let's look at the script here is the door trigger button script and as you can see all the types are completely hardcoded so pressing the R key only opens exactly this door pressing the F key opens example this one and so on so we're going to fix this to make our code cleaner and more reusable and for that we're going to use an interface I have a dedicated video covering interfaces coming up so if you're not familiar with them then make sure you're subscribed and hit the bell icon so here let's create a new C sharp script and we're going to call this the AI door and in here first of all this is not a class but rather an interface and it's called AI door ok and now in here we're going to have a couple functions so first of all a void open door and a void closed door so these are the ones that were implemented in the other video and then let's also implement a nice so toggle door alright so that's it this is our very nice simple interface that we're going to apply to all of our door types now it's just implemented over here is the door set active so it similarly sets the game object to active or not and in here we just implement a door and the only one we need to implement is really deep toggle so let's do that and just like that now let's implement the same interface on all the other types all right so I implemented the interface on all three door types and now we can go on to the interact script and in here now the one issue that we have is that interfaces do not show up in the editor so if I change the type to this to ID or and here in the editor there it is you can see the first field so one workaround that we can do is instead we have films for game objects so you get a field for a game object and then on the private Freud awake we assign a ID or field so we have a door a field of type I door and we're going into the door game object a in order to get the component of type ID or now we have film for a game object so we can drag our door set active alright let's do the same thing for the other fields alright there it is we have three generic door types all of them using the ID or interface and we're using it by using the interface so this should be working let's test ok here we are there's the animated or press the button and there you go it plays the animation and same thing for this one it opens and now this one it's like to unlock and push it in the up there you go right awesome so over here we have three separate door types but they are all being used by using a common interface so just like this we've successfully converted all of our code to work with an interface so our interaction methods will not be hardcoded to a specific door tank right awesome ok so with that then now we can finally get to work on our floor so we're going to make a simple button for testing I'm going to use right now is the animated door now for the button we're going to start off pretty much examine like the script that we saw so let's make a new script and we're going to call this the door interact button so we're going to use a button to interact to the door let's make a game object to run and drag the script okay now here let's start off by having a door film then using the interface like we did previously all right so we have a film for our door game object and we grab the interface component spike in the editor we have the film and we can drag our door okay so far so good now back in our code let's make a front voice update and on update let's listen to a gate key down and let's say on the e key when we press the e key then let's toggle our doors to do door dot cough on door so just like this we should be able to open and close our door with a single heat let's test so here we are in doors sound and it's closed press a button and there you go starts opening I can go through press again and it closed all right good so far so good so like this we have it working as a mobile button however we don't really want it to be global in this case if we move all the way over here there's door right down there and I press the button and yep it still opens now what we want to do is to have it only interactive doors that are near the player so let's do that over here first we're going to need the player reference so let's add another field or a transform for the player transform and now when you press E we can grab the player transform dog position okay so now the question becomes is how do we find out what doors are near the player now one way would be to second through all the doors in the world like I did in the melee combat system now that would work but would not be very reusable with that method if you had too many doors it will become very promised intensive so another approach is like how I handled collisions in the shoot projectiles video in there I used physics so let's do that here when we press the key let's use the physics 2d in order to make a overlap circle all this one takes a point which is going to be our player transform position and then a radius so that's going to be our interact radius so just like that now what this does is it creates a circle Collider and it's going to return all the colliders that are overlapping within that circle so this returns an array of collided TD and now we can cycle through our colliders so for each Collider and we try to get a component of type ID or so commodity V get component of type i door and if door is not known then we have a door within our interaction range so in here we can do the orthogonal door all right so that's it so we do a overlap circle around the player and use the physics engine to locate off the doors around it and if there are any then it tells the door so since we are looking for doors automatically using the physics system then we no longer need to have a specific door set in here so we can get rid of this this and all of this all right there it is very simple now for this to work we actually need to make sure one more thing so back in the editor first let's drag the player reference in there okay and then over here we have our door and the way that this door works is it only has the colliders on the inner doors so on the ones that move that's ones that have the colliders so if we run it just like this it won't actually find this object and not the parent object so in order to get the parent we need to make sure that this one also has a Collider so just like that I had the collider I made a trigger and just right there in the middle of the door so just like this it should work our overlap circle should find this game object and it should be able to grab the door names which does implement our door interface so let's test ok so here we are and first of all let's move away ok so door is all the way over there and now if I press the button and if there you go nothing is actually happening it's not happening because there are no doors nearby a player but now if I approach the door I go near it and I press the button again there you don't know I'm near it I can actually activate and use that door and as I move I press again and yep nothing happens so I can only interact to the door when I'm near it now let's verify that it's working correctly by adding some more doors so let's take this door and just duplicate it and place a bunch more so one there and one there okay and now here let's approach this door down here press the button any of there you go I only interacted with this one now go towards this one press the button there you go with that one and here wait down all right so here we have our button interaction method fully working it works by pressing a button and it's smart enough to look for whatever objects are near so in this case we're working with doors but you could very easily make this exact same system work for any type of object so for example instead of a door you can have some lights with an interface that defines the methods to turn it on and off and by pressing a button you would interact with the lights in the exact same way by using the nearby ones so here is the first method fully working based on using a button now let's check out the second method the automatic door now this one is actually going to be pretty much easy simplest method possible we're going to open the door when the player goes in and we close it when he goes out and the way we're going to do that is by using a Collider trigger so let's make a new game object call this the door interact automatic let's position it right on top of the door so right in there okay and now let's add a box Collider component and we make it a trigger so that it's not a solid object and now simply extend it out okay just like that so when the player goes inside this area we're going to open the door and when he leaves we're going to close it so let's make our very simple script in here and you see our script our door interact automatic drag the script onto our object and open now in here it's going to be very simple all we really need to do is make the function private void on trigger enter to D we set the collider to be a trigger so we're using trigger and we're using enter which is only going to be called once when a Collider enters this Collider so this function has our Collider that called with this Collider and now when that happens we can verify if it's a player so to do that you can check if the collider getcomponent and in this case the player is using the character controller 2d so if that one is not known then the player entered this Collider and now to open the door and let's apply the door and like we did previously so you have our door game object to grab the door that appoints the interface and in here all we do is open our door and then we're going to do the same thing on the private void on trigger exit 2d and we do the same thing check if it's the player and if so then we call it the door alright so there it is very simple this is all we need to do so let's test ok here we are in the door is closed and now as I approach it there you go the door opens and I go through it now I move out of the area and there you go the door automatically closes right awesome so just like this we have our automatic trigger working so pretty much a very simple very automatic door so this is probably the simplest method possible and here in the code we're testing specifically for the player script but we could easily do the exact same thing that we did with the door interface you could create a sort of door interact object interface and apply it to the player and whatever other objects you also wanted to open the door so that way the door would work with a player with NPCs with animals whatever you want all right so here is the second method based on automatically opening the door when the player is near now let's check out the third method this one is going to be using a pressure plate so we want the player to step on a pressure plate and the door stays open while he's on there and when he leaves it won't count down a timer and after a while it will close the door so let's do that first let's make our simple pressure plate so we create a new to the object a sprite and let's choose a sprite all right here's a very basic sprite now let's add a box Collider and make it a trigger ok that's it now let's make the script so a new C sharp script for the door interact pressure plate and let's drag our script now in here we're going to do very much the same thing that we did with the automatic door so let's copy this okay so we have when the player enters the trigger when that happens we're going to open the door all right sounds good however when the player leaves we don't want it to close immediately so let's remove this one and instead up here let's make a private point for a timer now we can set it to a certain volume let's say one second when the player enters the collider and then we have our private voice update and on update we check if the timer is bigger than zero so if we have Valentine where we just count it down all right so that's it very simple however you can probably guess that just like this it won't actually work if we try one see over here I go in and there you go it does open but it causes immediately even though I'm still on top of the pressure plate what we want this order to say open as long as the player is standing on top of the pressure plate so in here instead of setting our timer on the trigger and there to dien we're going to set it on the on trigger stay 2d this function is called on every frame well there's a Collider inside the trigger so when that happens then we actually set our timer all right just like that so this should work let's see okay so this should be working but we might still have one issue but let's test so we go in step on top it opens and as we stay on top and yep after a while it actually closes so there's something wrong happening here and the answer is due to how the physics system works in order to have good performance the physics system is smart enough in order to not check everything on every single frame so some physics objects are set to sleep and while they're sleeping they're not actually interacting with the physics world so the issue in this case is that the player rigid body is falling asleep and in doing so it's no longer triggering the collider event and in doing so it starts closing door so the solution for that is very simple over here I have my character control which has the rigidbody and here you have the sleeping mode instead of just starting on awake let's make sure that it never sleeps and if we test okay so here we are and we on top of the pressure plate and it opens and yep as long as we stay there we stay with the door open so we have our pressure plate exactly working as intended and as soon as I move out the timer starts counting down and in this case after one second the door closed so step on it opens move away and after a while holds this and now I'm stuck so here is our pressure plate fully working and like I said before you can easily make an interface to interact with the pressure plate with more than just the player so you could very easily apply this to a puzzle game and create some sort of box that you can push around and make that box interact with the pressure plate all right so here is our third method of interaction this one using a pressure plate now for the final method this one is actually something I already covered in detail in a previous video it's the key door system I made an entire video about it so here I'll just do an overview of how it works all right so here is everything already set up there's the normal door and there's the key now if I go towards the door yep I can't open it it even plays a nice animation saying that I fail to open it but if I go and touch the key there you go now we have a UI element saying that I've picked up the key and now I go into the door and yep now the door knows that I have the key and it opens and I can now go through so let's look at how this system works there are three parts to it first there's the door then there's a key and finally there's the player which holds a key holder so first of all here is the key it just has a simple circle coiler with a trigger and then it has a key script here this it's a very small very simple script and essentially all it does is it stores a film for a key type so this is how we have various colors of Kings and it's all that this script does then over here on the player character there's a keyholder script and what this one does is pretty much it just stores a list of all the keys then down here it has a ontriggerenter and if it finds an object with the key then it adds this key and destroys the key game object so it adds a key to the list and finally we have door with a basic key door script and in here all occur only does is it holds the field for the key type and then the normal function to open the door so then the key holder on the trigger enter he also checks if there is a key door and we test if on the key holder we currently holding a key that matches the same key type that door requires and if so then we remove that key and we open the door and if not then we play the open film animation then finally there's the UI display so over here inside the UI on the canvas there's the UI key holder and inside there as the visual for the key and now it has is this script and in here we have a reference to the key holder so this is the one that it's placed on the player and on start we are subscribing to the event on when the keys changed and when they do we simply update the visual some of those very scripts make up the key door system and as you can see they are all very tiny and everything is nicely separated so let's see it in action so here we are and we approached red open door and nope we cannot open we do not have the key and we play nice door fail open animation and now as I approach a key if there you go I picked up the key and I can see it in the UI and now if I approach the door there you go the key is consumed it vanishes from the UI and it opens the door and I can go through and go on with my life again if you want to see the whole system being created from scratch and check out the full video on linked in the description all right so here we have our four methods of interacting the doors now the first one here is using a button but the button is also a locum so if I'm Way too far in a press button nothing happens I need to approach it press the button and now I open this door and press again and it closes and again since this system is smart enough to look for nearby doors I can use the exact same thing with multiple doors so down here here is another door so I approach this one and press the button and I open this one but not that one then our participant presses on any of this opens and not down okay so this is the first method using a button now the second method is in here this is the most basic one it's an automatic door so as I approach it opens and as I move away it causes so very nice very basic very simple next is over here the pressure plate so as I step on a plate the door opens and if I say on top of the plate then the door stays open and as I leave it counts on a timer and after the timer lapses the door closes so here we have the time pressure point method then finally here is the key door system so without the key I approach and nope nothing happens I cannot open the door then I move towards the key I grabbed and now if I go towards door there you go the door opens with the correct key so here you have four methods of interacting with doors and once again this is all set up to work with an interface so it works with any type of door and you could easily modify the interface to make this interact with any object type you want like some lights or an elevator or whatever else this video is made possible thanks to these awesome supporters go to patreon.com/scishow to code monkey to get some perks and help keep the videos free for everyone as always you can download the project files in the Tonys from unity karma calm subscribe to the channel for more ent tutorials post any questions on the comments and I'll see you next time