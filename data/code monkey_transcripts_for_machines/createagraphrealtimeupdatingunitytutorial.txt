hello and welcome I'm your code monkey in this video were continuing to create a graph in unity we're going to add the ability to update our graph in real time let's begin so in the past two videos we modify the graph visual interface to work with an object that implements the graph visual object interface instead of simple game objects so each specific bar in our graph is now represented as a specific object in doing so we were able to add specific code to the graph visual object that manages each specific object here is the definition for the interfaces as you can see our main graph visual has a function to create a new visual object and each i graph visual object has a function to set that object's info when calling this function we are no longer creating a new object so this makes it very easy to update our graph so let's begin with a simple function to update a single value we're going to receive an int for the index that we wish to update and end in for the value that we're going to set in that index so here we are creating the graph visual object and adding it to this list so we simply access the index on that list and we set the graphical object info and now we need to send the new info so we can go up here and see how all those values are calculated so these are the various values we send it a new anchored position then we have the position width which is the excise and then we have the tooltip text which we calculate so in here obviously we have bunch of errors because inside this function we do not have these values so in order to can only the graph position we need to access the x size and the Y minimum and maximum those are calculated up here when we are first creating the graph so for now let's just store them as member variables so go up here and store those out and down here we're going to store them as the member variables okay so since we made these as member variables we now can access the same values that were coming later up here and we can access them in this function and use them to create a new X&Y position and XS and so on so just like this we should be able to update a single value in our graph so in order to test that let's go up here into our way and here on let's create a function periodic to test our update the function periodic is part of the code monkeys only said you can wear out for free from unity code monkey comm so let's create which won't trigger this action every let's say 100 milliseconds and in here let's just increase the very first value so in here define D value start off at 0 and we're going to update our value at index 0 we're going to give it value and then increase the value so every 100 milliseconds we are going to increase the value and update the value shown in our graph so let's see if the very first bar is constantly increasing okay there it is the bar is constantly increasing and if I pass the mouse over you can see that the toe tip updates and the sides updating okay so everything seems correct but as you can see right now the bar now goes past the graph borders that is because we also need to update the maximum and minimum in order to rescale the graph if needed if we change the scale then we're also going to need to update every other point on the graph so in here let's first make a function to calculate the Y maximum and minimum so instead of using the member variables that were committed previously we're going to calculate them inside this function now for this function we want to return both the Y minimum and the y maximum so instead of setting a return value in here we're simply going to return void and add some out parameters for the float Y minimum and a out for a float Y maximum if you're not familiar with the out parameter it is essentially unless you return more than one value from a function so when we call this function we can get both of these values as our return so inside we're going to copy the combination code that we were using previously right here so just like that we are calculating the Y scale and up here instead of having all this code we're going to first define a float for the Y minimum and one for dy maximum then we're going to call the function and give it these values so this function will do its calculations and put the correct calculated values back on these variables so we can also go up here and get rid of the member variables since they won't always be calculated so what's s and everything should be working exactly the same as previously and yep there it is our graph is still working exactly the same ok great now let's also go up here and define a private volume for the start Y scale at 0 and set it to true on our awake we're making this as a member variable so that later we can add a function to easily modify this during runtime and when we are calculating if the boolean value is set to true then we do reset our graph okay so back in our update value function let's also grab the Y minimum and Y maximum the same thing that we are doing when we are also creating the graph for the first time so now we have the count lated Y maximum and Y minimum that we can use in here ok great and now we want to update the home graph since this K on my change and all of them need to be updated so we're going to copy all this code and the difference is instead of creating a graphical object we're going to use the sacrificial object info in order to update it so just like this we should be able to see all of the valleys in the graph being updated and if the scale does change you can see all of them match that scale so let's see ok here it is the first value as you can see it is increasing and now when he gets up here he won't start to modify the scale and all the others should become smaller and yet there you go as soon as that one reaches the top of the graph which has some breathing room as soon as he goes higher all of the others these don't have the same values but relative to this one they are much smaller so our graph is now correctly scaling all of the values so now as you can see there is still an issue with our update the yaxis labels are not updating to reflect the new scale this one is saying the top is 117 when this bar is 429 so that is obviously not correct so let's deal with that here on our create graph function we are in sin XI ating all of the labels on the yaxis and we are simply adding them on to our generic game object list so before we can update those labels we need to first store those references so we need to go all the way up here and make a new private list a list of rect transform and we're going to call this the white label list so in here when we incent she ate a new label let's also add it to the list and just like that we have a list that contains references to every single label also we have to go up here on the clean up when we are destroying all the game objects and it's also clear this list okay so now that we have a list of references to the current levels we can go back into the update function so in here let's cycle through the home label is and in here we need to complete the new label values so let's see appear how it is calculated the position will be the same so we need to change is really this line here now in order to have this line we also need the normalized value so let's copy these the separated count is the number of labels so we can use the list count and for the label list rect transform it is on the in list of index I and yep it's this symbol so let's test and we should be able to see the labels now correctly updating okay so there's the bar increasing and when it gets high enough it should rescale the rest the size and the labels yep there you go they are now correctly being rescale so if I placed my mouse over it's on 160 and as you can see that one is always around 20% higher so everything is now scaling correctly and the labels are also updating so now I just add one more simple thing we only want to recalculate the y axis labels and update the home graph if the scale actually changes if the scale of the graph doesn't change then we only need to update a single phone so that's very simple to implement in here on our update before we modify the value in the list let's complete the Y minimum and y maximum and let's call this Y minimum before and Y maximum before then we set the new value come late everything yep correct and now in here let's define a bone bone Y scale change and this will be true if the Y minimum before is different from the Y minimum or if the y maximum before is different from the y maximum so then we do if the scale did not change if it did not change then we only want to update a single value so that's this code in here so if the scale did not change then we are only going to update this value but if the scale did change then we're going to update everything so this way we are no longer wasting resources by updating every single point and the labels when the Y scale does not change so let's see if that is correct and yep as you can see everything works perfectly fine the scale of the others are not changing and this one is increasing and one cuts up there you won't see everything else change accordingly so there you have it we have the ability to update our graph in real time we can update any value and the code automatically resizes the graph to make sure all values fit inside as always you can download the project files and utilities from unity code monkey comm if you have any questions post them in the comments and I'll do my best to answer them subscribe for more videos and I'll see you next time