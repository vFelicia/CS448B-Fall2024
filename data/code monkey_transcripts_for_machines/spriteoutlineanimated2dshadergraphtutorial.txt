in this video we're going to make a sprite outline shader using shadow graph we're going to have an outline apply to any sprite and be able to customize the thickness and color what's beginning hello and welcome I'm your code monkey and this channel is all about helping you learn how to make your own games with nf2 torrents made by a professional indie game developer so if you find the video helpful consider subscribing okay so this is what we're trying to make over here is my character and as you can see there's a nice outline around all of the body parts I can increase or decrease the thickness of the outline I can also modify the car and using plume and and HDR color I can make it have a very nice glow so just like that the whole effect is made in a pre simple shader and at the end we're going to take the base effect and expand upon it and we're going to make a nice outline and animate it through our shader alright so this circle let's get to it okay so here I am in my starting scene let's begin by making our shader so in the project files right click a new shader to the renderer with a sprite on the graph let's call this our outline and open it up okay here we are inside of shader graph without a very nice master node now the first thing we need is a texture so up here create a new texture 2d call this the main text and set the reference to underscore main text this name has to be exact this is the default name for the main texture which the sprite renderer uses to apply to the sprite so here on let's unlike the default and drag it onto the board now in here we cannot use the texture directly so first we're going to add a sample texture node here's our texture and then we can say well pass the rgba onto there and there it is and just make this a quad and there you go there's our nice preview ok so let's go up here to save our asset and now here let's test it out so over here I have a material so let's just go up here and change the shader into your shader graphs and our outline shader and there it is a field for our main text let's test and if there's our character currently visible just sending around okay so far so good now back in the shader graph what we're trying to do here is build an outline so that means we want to essentially expand the spreadsheet body parts now your first approach might be to simply scale the texture so we could do that by creating a tiling and offset node the tiling is how many times the texture repeats so for example with the town of two on the X it would the texture twice horizontally let's apply to our UV so there it is you can see the texture repeats twice so we could use this to scale our texture by putting a tiling under one so in this instead of putting two or one let's foot 2.9 and just like this you can see that the texture is indeed bigger so put this one at point 8 this one at point 8 and there you go as you can see the texture is indeed scaling however the texture is scaling from the lower left corner what we want and said is for each body part to scale up from its center and not from a corner of the entire texture so this approach is not good for what we're trying to make instead how we're going to achieve our up line is by shifting it texture left right up and down so instead of modifying the telling field we're going to play around with the offset field so set these to 1 okay and here when I modify the offset you can see what I'm into the texture it gets shifted to one side however we also do not want to modify our original texture so let's leave this one as normal get rid of this connection there it is and down here let's make another texture sampling using the exact same texture ok so up here we have our original and now in here let's have one shifted slightly to the side so here if we make the offset a bit big you can see the exact difference between this one and this one so we want the second one to be the up line and then to be added on top of the original ok so let's grab the alpha from this one and place a subtract node and we're going to subtract this alpha from this alpha and just like that you can see our up line so now with this let's define a property for our outline cone so let's go up here make a new color call this the outline color and let's set it to a gr so we can have a nice glow and let's put it on green ok so now we can take our caller drag it in here make a multiply node and we're going to multiply our color by this alpha and there it is there's our outline and I finally only need this to apply it this one on top of our texture so push the master here and we do a add node and we add this one on top of that one and put the output in there and just like that on the preview you can see our nice outline on the left side let's test this and if there's our character with an outline on the on left side all right so now all we need to do is apply this exact same thing to all the other sides so let's do that now over here we are shifting positively on the X to get an outline on the on that time however here we are also setting the thickness directly on to this value so let's make it a property instead of a hardcoded value so up here making you vector one call this the outline thickness so we have this nice vector one so we can drag it in here however in here it expects a offset a vector two so it simply do a combine node and we set this onto the r and we output the RG so in here it looks a bit confusing because it's using the in labels for colors but this works the same for a simple vector two or vector four so in here the R represents the X and the G represents a one so we are setting the outline thickness on the X and outputting this one in there and the output is the same as previously so if I increase the thickness there you go you can see how it shifts more so this is working however it's working with very tiny values so point zero one so we can add a nice quality of life improvement in here let's make a static vector one and put it at point zero one and now before we do our math let's first multiply this so you multiply our thickness by this small value and then we get this output now we can appear into our property and set it from default into a slider and we're going to make a slider that goes might say from zero to three so just like that we have 110 set it to 2 can set it to 3 and so on this is not an essential step it just makes a shader easier to use so we can save the asset and see what this looks like so here's the game running and we have our shader properties and here on the thickness you can see our nice slider so we can move it up and down and there you go you can see the sprite moving to the side just like that ok so let's go back to making the other sides so in here we have our texture being shifted to the left side now let's shift it down so we need to essentially duplicate all this except now instead of combining on the R which is the X we're going to put on the G which is the one and just like that you can see that this one is being shifted to the left and this one is being shifted down and this is the original so there it is so afterwards and let's play around with the Alpha for both of these so these we make a nice add node and we had this alpha onto this alpha and you can see in there both the alphas one to the left and one down so now we use this one on the subtract except in here you can already see an issue and the issue is that we are adding values past one so we need to make sure that we clamp them so let's shift all this to the side make a clamp node we're going to clamp this output between 0 and 1 and then we use this one in there and there you go now we have our nice outline going to the left and down and over here on the preview you can already see our result ok let's test this and if there it is we have our character with an outline to the left and going down and again we can play around over here with the slider and you can see the outline increasing and decreasing and the collar the same thing we can also modify it if we want there you go a nice blue alright so far so good now let's set the other sides ok here I am so essentially we're going to duplicate all of this so you first shift it then we sample it and then we add both of them and now here for the offset we essentially want the opposite from this one so we can add a nice negate node so I'm going to grab this one which was the X negated and then push it in here and there you go so this one is shifted to the left and this one to the right and add another node in here and negate the Y and pass it in there and there you go so now this one is going down this one is going out so over here we have the unless noun over here the right and now so now we simply make another add and add this one onto this one so over here you can see we have our four sides then we pass this on to the clamp and there you go and everything else is the same and yep just like that you can see our very nice up line it's going a leftright updown and there you go with what's very nice let's see it running and if there's our nice outline effect and over here in the inspector we can simply modify the thickness they're given looks very nice and we can also easily modify the color so just like this we have our nice complete outline no here in sheet graph you can see that we did it by shifting the left right up and down so for more scenarios this works perfect but in here if we play around with a massive thickness so as we increase and there you go and we'll get the sword in there so when it's way too big you can see the effect kind of break down so if you need to have very big outlines then one thing you do would be to add four more outlines for each of the diagonal positions so one up right up left down left and down right doing that will help this effect look great even on very large outlines but for most cases again this works perfect here it is with the character having a very nice outline and it's all nicely animated and with a nice flow effect and a gr color we have this very nice outline now finally just for fun we can still add some more stuff onto this effect okay so here I added a new section you can see the final effect with two colors constantly moving and it works is basically by using this noise and the noise is being shifted on the Italian offset and it's being shifted based on a time node so there is a time multiplied by a certain factor then we apply it onto the G which applies on TDY on the offset and makes the grating noise move up so then we take one of those and multiply it by the normal outline color and then we take another one we invert that and we multiply by a secondary color then we add both of them so here we have green and blue and then finally we take all of this we multiply by our original outline and we apply to our sprite so I see the effect if there's our nice outline effect with two colors and constantly moving up so we have a very nice gradient effect so you can see how you can take the baseline of a simple outline and apply it onto various effects as always you can download the project files I need some of these from unity code monkey com subscribe to the channel for more unity tutorials post any questions you have in the comments and I'll see you next time