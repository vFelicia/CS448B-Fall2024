hello and welcome I'm your code monkey and in this video we're going to cover the setup for you to DC let's get sir all right so let's start this from scratch this is the unity 20 18 new project window I'm going to name this project my new game and I'm going to use the 2d template everything else is fine so let's click create project ok so the project has been created then here's my empty scene this is our hierarchy and this is our project folder it starts off with a scenes folder and the sample scene inside it on our sample scene we have a main camera displaying a simple solid color as you can see the projection is set to orthographic which means it's rendering in 2d it has an orthographic size of 5 units this size represents the units that are visible vertically so let's create a empty game object just a scene so here on this object Y you can see that the camera is displaying vertically from minus 5 to plus five for the horizontal size it's going to depend on your resolution currently I'm using 16 by 9 but if you change this you can see the camera view change accordingly alright so that's the basic setup for the camera let's test just to make sure that everything is working so yep there you go the cameras is playing a simple solid color now let's set it up for our 2d game first let's rename the scene to give it a more appropriate name so let's name it a game scene this is a scene where most of the game runs you would have a different scene for the main menu maybe another for the level select and so on let's grab our empty game object place it on 0 0 and rename it to game tenly this will be the main container for all of our preset scene objects the better you keep your objects organized easier it is to find what you're looking for let's reg our camera into our game handler and just for testing let's make a background so new game object name it background let's add a component of type sprite renderer which is the primary component for displaying sprites in a 2d game now we need a sprite to render so let's create a new folder and we're going to name it textures inside I'm going to place an image which is just a white pixel it's a 1 by 1 PNG it's very useful to have a simple white pixel texture for when you want to display a solid color in a sprite renderer since as you can see if you don't assign a sprite you can't really see anything on the import options everything is mostly the defaults except for the pixels per unit which we're going to set to 1 since the texture is one by one when we use this as a sprite runner to occupy one unit so let's drag our sprite into our background as you can see a square of one by one and in the sprite renderer we have a corner parameter it acts as a multiply so since our sprite is white we can easily tint it let's tint it green to simulate some sort of grass texture and increase the size used to occupy our camera so as you can see the camera is correctly displaying our 2d background sprite so another thing that is useful in prestandard is to have sorting layers on the sprite render you can see the sorting layer in here and we can add a new sorting layer right now we only have the default so let's add another one and name it background and let's another one and name it game objects the render order in here goes from top to bottom so let's drag the background on top being on the top of this array sanshi only means the background gets rendered first then the default gets rendered on top of the background then the game objects on top of the default so in our background let's put it on the background sorting layer and let's duplicate it name it something like player give it a different color and let's place it on the game objects so as you can see regardless of what we set on the order in layer the player will always be on top of the background since it is on a sorting layer above the background all right now normally in my scenes I have a helper pointer object just to help me identify positions in the game make a new game object and let's name it pointer and if we go up here we can give our pointer an icon which will make it very visible in the scene view and in the game view if you're showing gizmos so let's click it and as you can see it shows up in there and you can move it around to easily read that this position is on 4.4 and 2.6 and if you go into the game scene and enable gizmos you can also see it on the game it's running so anytime you want to locate a position on screen just grab this object and move it around and it's quite helpful especially when you use it while the game is paused okay now let's make our game script this will be the main script in our game make a new folder and let's call it scripts inside let's make a create csharp script and name it game handler so in son let's make a private droid start and a private oi update on our start let's simply do a debug game Handler dot start just to make sure that our script is running so let's go into our scene and we're going to drag that script into our game handler object so let's run the scene and we should see the script running in our console in here yep there you go the game is running and you can see game how long about start alright so now to make things much easier we're going to add the code monkey utilities which you can grab for free from unity code monkey calm these utilities contain any bunch of helper functions and classes that I have written over the years and help immensely when making a game and testing new mechanics the utilities contain plenty of comments so feel free to go through all the classes and view on the functionality all right so the utilities come as a unity package I just doubleclick that file and it will open this window in unity in here you can view the list of files that will be added to our project let's click import and the files won't be added so as you can see a new folder appeared in here and inside are all the files for all of our utilities so now we can go back into our game Handler and in here let's test to make sure the utilities were correctly installed the utilities contain several namespaces so first we need to go up here and write using code monkey and also using code monkey itself so on starting here let's create a function periodic which triggers an action every certain amount of time so a function periodic we're going to create and here it takes an action and a timer so for the action let's go into the CM debug class and spawn a text object on the mods position so use the text popup mouse which is a helper function that spawns a text object on the mouse position in here let's just write something and in here you have the time so essentially every half a second this action will execute this action won't spawn a pop up on the mouse position you won't say ding and then a number which won't increase every time this action is called all right so let's test and we should see the message pop up on the mouse position okay yep there you go you can see the tacks pop up on the mouse position every half a second so that means the utilities are correctly installed this won't be very useful while making our game personally I use the etextbook pop up all the time when I want to visualize an event while the game is running feel free to check out the code for the utilities and see all the various helper functions and how they can help you get your game up and running faster so there you have it we start with an empty scene and set it up to build a 2d game we also install the code monkey utilities which won't help us in developing and debugging our game if you have any questions post them in the comments and I'll do my best answer now subscribe for more videos and I'll see you next time