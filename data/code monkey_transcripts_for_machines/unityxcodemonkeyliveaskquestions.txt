and we're live welcome everyone how are you welcome to another let's dev stream here on the unity twitch channel and i have a very special guest that i'm so excited about uh first time exclusive face reveal of code monkey is anyone surprised that he's not a monkey you go introduce yourself tell us uh what you do uh and why the entire community loves you so much sure thanks hey everyone yeah um yeah exactly you have to come now to twitch [Laughter] unity tech and chat is saying their legend has been revealed indeed yeah so tell us what you've been doing and tell us uh what you do on your youtube channel right so on my youtube channel i do all kinds of uh unity tutorials pretty much anything that i can think of that i would like to do on camera and teach other people how to do that's pretty much what i do so pretty much anything related to unity i first started making games so eventually i realized that i wanted to try teaching essentially what i what i've learned over the years so yeah that's why i started the channel about three years ago and yeah it's been like 500 videos ever since so yeah quite a bit quite a bit 500 nice we're gonna have to do something special when you reach a thousand i was gonna say face reveal but i guess not we'll do something special for you at the thousand video mark that will be a special occasion nice um so today's stream is going to be about part of your how it's made series so for those who don't know um we have the video was right here um it's part of our humble bundle pack um our whole humble bundle showcase let's take a look at it right here um as you probably saw code monkey made a bunch of videos uh to advertise and to promote the new humble bundle pack that we did with unity it comes with a lot of assets uh comes with a lot of tools as well but we wanted to show you guys how you can make your own fps game so i'm really excited for that do you wanna tell us what else you're gonna be doing in that video sure yeah we're going to be remaking some mechanics from for done so the game is pretty interesting and it's included in the bundle so if you get the bundle even if you just get it for the assets definitely give the game a try it's pretty interesting say first person shooter world war one there's also tenenberg which is kind of the sequel so it's essentially one is uh focus on the western front the other one on the instant so pretty interesting games and being world war one they're pretty unique so yeah the bundle has lots of things now i made the video before the bundle started so i didn't actually end up using a lot of these assets but you could definitely use them for example the character movement fundamentals i've been looking into this one a bit more deeply and it's really awesome it's really super simple to use and it works on pretty much any kind of terrain so if you get it definitely and look into this one and uh yeah you got the game here then of course you got all kinds of environments so you could definitely just use any of these and use in pretty much any game so in my case i pretty much just use the terrain but i could have used any of these because yeah a lot of these assets even though this is an fps bundle this really works for for anything you want so a lot of these scifi you could make a ship game you can make a strategy game pretty much anything so yeah this bundle and the fantasy bundle which is also ongoing both of them are really great value really awesome lots of interesting assets lots of awesome stuff yeah nice thank you um so if you want to go check out the bundle we're going to throw the link in chat it helps supports code monkey but it helps support us too so definitely just click away as much as possible i'm also going to throw the link to the fantasy bundle which we featured yesterday it got extended an extra six days so definitely um go click both they're great bundles uh the fantasy one is awesome too you can get odin in there lots of really cool tools um you don't necessarily need to be making a fantasy game there's not just 3d assets in there so definitely go check it out um are you guys hearing double is there an echoing no we will never resolve it there was an issue a while ago but i think i sound it but i'm not sure because the audio mixer was still showing uh but i think i sound it so let me know enchant yeah wow didn't expect his voice to be exactly oh it's fixed okay magically through the magic of thrones just don't touch anything anymore thanks chad thanks for being so patient with us about all of this um for those who don't know the humble bundle uh is a pay what you want but depending on the tier you pay you can get all kinds of great assets this is a really great bundle though for like you know 50 bucks or less than even 25 bucks you can get a thousand dollars worth of assets that you can use for other games uh just like hugo said so definitely go check it out we only do it really once a year although if your guys are really interested maybe we'll have to be convinced to do another one we'll see this one is really awesome because it benefits the carbon fun foundation on oceana so you're also supporting some great charities in this case i think something to make this stream extra spicy is that we should do some giveaways we're going to be giving away some official unity lego minifigures for those who don't know unity and lego are super awesome partners look out for more lego content coming out in the next couple weeks um but i don't know what would your community how do we give away what do we do to give away some nice uh lego minifigures to your community what should we ask them uh not sure i'm not sure i've done so many things so trying to pick something yeah well i love the how it's made series and i think people love it too i think it's a great way to learn i think oftentimes when you start game development you know it's so natural to be i get this question a lot as a community manager at unity is like hey how do i make the next uh cod or so i think your series is really awesome for that because then you can look at the game that you really loved and then you can learn all the mechanics for it and it's a great way to learn instead of just like jumping into just a single mechanic yeah exactly i mean if you break if you break it down pretty much any game is composed of simple things so when you see a final game when you see something like call of duty it seems impossibly complex but if you break it down system by system then it's actually just a bunch of simple systems built together and then looks really complex so if you if you learn how to look at games uh from that way starting to see things system by systems all of a sudden everything becomes much more easy to understand how things work yeah i think that's why i'm like super excited about this stream because for me and fb guests and fps games just seems so complex but the way you're gonna break down uh everything today is gonna be like oh wow i never thought of that and the best part is you're probably gonna get you give insight and to be like well this mechanic seems like it's only for this particular fps game but actually you can use it for this type of game and this other type of game so it's really awesome um so i think we should ask the chat what's the next game that you want to see code monkey break down uh in the next how it's made series so we'll take your suggestions sure throw it in chat what's the next big game that you want to see pick something hard all right all right so let's go take a look do you want to open up uh we're done and play it play it a little bit and uh okay awesome i'm sorry pepper is going to be very vocal during the stream as per usual all right oh sorry just trying to manage all the streams obs and everything at the same time we are both streaming we are streaming to so if you want to support code monkey go watch the stream here on twitch at unity but also watch his stream on youtube if you would so please alright so i think nice all right okay so let me join a random game so what did you think of this game it's pretty interesting you know like i said the uh um i mean it's pretty unique the fact that it's a world war one shooter i mean there's plenty of shooters but usually world war one is not a thing that you usually see yeah and it's actually pretty realistic the main thing about the game is just how how punishing it is pretty much like pretty much every every weapon here is pretty much one shot one kill oh yeah oh no just walking around and boom one shot and you're gone but it also works the other way so if i hit someone then just one shot oh crap there's an artillery here there you go so there's one of the systems that we're going to look into essentially an enemy and then we fired an artillery so it just looks and yeah see how the game is pretty interesting it has a lot of very interesting systems there you go it's really one shot and it's gone you're gone this is how do you feel about these really unforgiving games quote unforgiving quoteunquote very difficult games to to play nowadays i think that's like we often call them like the souls of games oh yeah i mean i mean it's great to have variety so i'm a big fan of battlefield which is definitely a lot more arcadey but then you got this so you got different styles so all of them it's always great to change things around so with a little bit of something a bit more arcade a little bit something much more hardcore it's always interesting keep it fresh uh akuno and chat says code monkey actually looks badass thanks i guess uh and janisco says great humble showcase streams thank you yeah we're trying to give you guys as much variety as possible um we're going to be showing a lot more streamers we want to feature all the your favorite all the people that you've been using to learn how to use unity want to have them come on and join us so i'm really excited to have code monkey hebrew recently did a unity tips dev takeover oh yeah that was awesome yeah very interesting to make yeah awesome did you what was your favorite tip from that series uh i'm not sure they're all pretty great i mean the the mini map that's something that i that i've already done in the video so now i'm making it untip just it's a it's something that it's super simple to to make and it works pretty great so essentially just based on using a second camera in the render texture so yeah so essentially making that mini video making the making a mini map in just 60 seconds really shows just how quick and easy you can do it so that's once again it's what we were talking about a while ago where all these games seem insanely complex but really when you break it down for example a mini map it seems insanely complex but it can actually be quite simple nice yeah so all of this we're doing so the reason we're doing so many of these showcase streams and things like that is to really try and educate you give you the tools you need to participate in our humble bundle showcase so as you know we have showcases on unity play every month and we're gonna do one for the humble bundle so if you already have some of the assets from the humble model or if you don't and you've downloaded it recently or you've already had it or you've made a demo or any type of game that you want to showcase definitely submit to the humboldt showcase i'm going to be playing the with joyce of minions art also another great twitch streamer and shader witch as she's known in her community and we'll see what you guys made so yeah definitely submit them awesome so it looks like we're definitely going to be taking a look at that artillery breakdown like a drop mechanic and then what else would you like to take a look at during the stream uh i want to try it wrong let me just go into a playsuit part so i can easily show it working [Laughter] because you're testing out seeing those mechanics and again with lots of players that's a bit tricky yeah thankfully the game does have bots so it's uh it's pretty great i'm assuming the game has some sort of single player story mode as well uh actually story mode i don't think so it's pretty much a multiplayer game i don't i don't think so at least i just jumped into multiplayer right away so but yeah so the three mechanics it's the artillery so essentially look somewhere and i just got to make sure that i'm using the right squat uh but yeah you look somewhere then it's uh then it shows a marker on where it's going to land let me see if i because some of them have some of them don't actually i actually forgot to change one thing just to make this easier no worries chad's throwing a lot of great games as suggestions uh lomigang says code mike you should break down the fps outer wilds lucky for you i actually did that already so yeah great yeah perfect trying to look at chat but it's going by insanely fast no worries it's tricky yeah i think your chat is very very active i had i got a message saying i wasn't expecting code monkey to be this cute thanks i guess if you would like code monkey to have camera on for his future videos uh let us know in chat that would be tricky exactly focused with the camera in my face i must say it's not really my my thing nice welcome also to the code monkey chat i'm checking out the twitch chat um but i just want to definitely say hello to the guys over there because you guys are very active it would seem my moderators are having trouble keeping up with you okay so here i've got the the officer class so i'm just trying to go somewhere where i won't die instantly okay so essentially by pressing a button you can see that it shows a little overly little target so it shows where it's going to land i know i just actually got to wait for the second artillery to be available so that's one of the things so again it's like i said in my video just looking at this try to guess how would you make this just pressing a button and being able to have a target directly placed on terrain exactly where where you're looking at so try to guess pretty simple yeah uh yeah so essentially you look somewhere then you press the button and it spawns an artillery right there so it starts wearing some mortar some artillery you can even see on the mini map there's a nice little icon and after a while things start flowing down and everything explodes all the explosions yeah nice blake lowell already kind of guessed it some raycast yep exactly uh yeah so dot uh doctor this is already this is kind of a continuation of his video how it's made we're done um but it's more of a deep dive so that was like a quick like run through of how he did everything but we're really going to show you guys how he's going to do it in the stream so if you have any particular questions or other things you want to add so it's like if you want to have the same mechanic in your game but you want to figure out how to add some sort of additional features let us know and we'll do it we'll do it on stream for you guys all right so actually now that i've seen now we can actually look at the since i'm in a bot it's no problem to going if afk on a bot thing so next i got my remake here so this is the project that i made that i'm recording for that video and over here i've got my demo scene so yep right so this is my that one just uh just mute the game because it sounds a bit distracting sounds great but yeah it does sound great right so this is my demo scene so i've got my player pretty much just a very normal first person controller so like i was saying on the over here you could use for example this one or the ultimate fps that one also has a controller so you could use any of these now uh so yeah just a standard first person controller and then down here i'm using just a terrain and just a bunch of trees and then of course like someone said there's a raycast so as i press a button i can already see my target and wherever i'll look on terrain you can see the target goes exactly where it is so again that's the very basic raycast and then by pressing another button i can simply mark and there you go after a few seconds some explosions come in and the whole thing falls so once again as you see it's uh most complex in the game if you take the whole game into account but if you look at just this one system yeah it's pretty simple just do a raycast and spawn some things so if you look in the code it's actually quite simple let me it's right here so this grip pretty much very simple very small uh yeah so pretty much exactly like someone said yeah there you go just a physics braycast that's pretty much it so the raycast in case you don't know it's essentially uh essentially a laser that exists in the physics world so it identifies things that have a physics and leather so in this case i'm using a a terrain so right here this is a terrain object and as you can see it has a terrain collider so essentially the terrain exists in the physics world so that is why over here just doing a raycast then the raycast takes an origin direction so for the origin starts with from the player transform position then for the direction it's the transform forward which i guess this would be a nice quick tip because a lot of people don't seem to know there's the forward vector so that is really useful for identifying seeing where a transform is pointing towards so that's really useful uh yeah so this does a raycast and then the results of the raycast go on to the rake acid so this is a structure that contains all kinds of info so you can inspect and see everything that it has so it essentially has a collateral that hit the exact point where it hit the normal and so on so as you can see lots of interesting data that you can use and of course uh it simply takes the transform visual so that's just a transform reference so over here if you look in the player if i look in the script there it is so just got a reference to the camera and then over here reference to the transform visual so here is the target and just for fun i also added a nice animation so just up and down pretty simple so yeah pretty much what it does is just a raycast in order to find the exact point so the point is going to be over here on the raycasted.point and then pretty much just move that one in there nice my dog approves that's a great tip so yeah as you can see it's pretty simple pretty much just a recast then listening for another keep press and then just spawning some artillery on that raycast position so pretty much a sort of position and then for the spawning the things it's really just instantiating a bunch of prefabs so just grab a random one from the list then instantiate it called destroy which here's another quick tip just in case you don't know destroy also has a second parameter so you might use it just like this so essentially just destroys and destroys instantly but you can use it with the second parameter which is actually the time that it is destroyed so when you want to spawn something that you want it to be destroyed after some time this is great so essentially after five seconds this game object gets destroyed so everything is nicely cleaned up and yeah that's pretty much it uh also another interesting thing is for the uh screen shade so for the for the camera i'm using the uh scene machine component so i got sin machine i just look around i press and after a while yeah there you go some really nice screen shake so if you want to know the easiest way to do it well if you're using scene machines actually quite simple so here i've got my camera and it's using the same machine brain and then on the player it has a virtual camera and it has a sin machine impulse listener and then on the layer itself it also has an impulse source so these two components work together and over here in the code you essentially just have reference just trigger generate impulse and it's going to make sure that this fires an impulse on the zen machine system which then on the virtual camera listens to that and then shakes the camera so if you want to know how to do some very simple screen shake yep that's pretty much it nice this is perfect because yesterday manisha was on the stream and she was there to give some great uh game jam tips and that's exactly kind of the suggestion we'd make so it's perfect she also used some machines to try to show how you can make really simple cut scenes for your uh game it's really great to make like press kit stuff and and what not to use the machine so it's perfect you can go check it out stream it's really simple to install some machine actually yeah let's get it super useful very easy yeah it's really awesome yeah um i know that one of your uni tips was also to create like uh for collision and stuff like that how to make exploding uh elements so you guys want to go check that out unity devs tip when code monkey did a takeover you can go check that out yeah that one was using pro builder which is also another super useful unity package nice awesome it's a good tip you can ask questions any time during the stream and we will answer them so sure they're all there a lot of things on chat but yeah kind of hard to keep up for those who don't know this is a stream featuring code monkey part of our humble bundle showcase streams for all the the entire month of september we're inviting a lot of uh influencers to come on and show us how they use the humble bundle to break down games or give us tips for game gems or anything you like people are saying my screen looks blurry does it uh you might be lower quality on twitch for sure the quality on youtube is going to be a little bit higher um because the encoding is a little bit better on on youtube so sorry twitch is a little bit tricky with that i've seen this question pretty often when you post it as well and i saw this it's been asked by uh priscoda hello how do makes a machine work with the new input system i want to rotate only your mouse right button is down and actually a lot of people are asking what to do i don't know if you can answer this but a lot of people are asking like what to do with this hum new like this asset pack for example from humble bundle um it doesn't often perfectly work out of the box with the new input system what's your advice for that i mean that's going to depend on uh on each asset pack so i'm pretty sure i was looking on the over here on the character movement fundamentals i was looking in the in the manual and i'm pretty sure they do have something there where it's uh pretty much if the input is nicely separated and it's pretty easy to swap out but yeah that's really going to depend on each uh on the specific asset that you're using so yeah a lot of these assets have been updated over time so that's that's great there's it means that they're very stable by now but at the same time it means that if the first version came out quite a long time ago then yeah they're probably using the uh legacy input manager by default so yeah but it depends on the uh but yeah i'm pretty sure i saw on the on the manual for that one that it did talk about new input system and then for the uh input system combined with cine machine i mean that really depends on what exactly you're doing because those two uh those two systems aren't really connected automatically at least i don't think i mean because uh where's my sin machine right here the virtual camera so essentially over here you've got all the settings that you set and these are pretty much uh input agnostic so most of these won't follow a virtual target so for example in my case i've got a camera target here so this object let me put side by side so this target oh just yeah take it okay so that object that is essentially what cinemachine is following so cinemachine doesn't care doesn't know how that object is actually moving it just knows to follow exactly that object say it's only behind it so just like that so yeah essentially all of that to say that the input system in cine machine should be preseparate so you should be able to use cine machine on using the legacy input manager or new input system it should work with either of them awesome thank you for that all right so do we jump into the next mechanic i'm kind of excited for this one this one has a lot of good juicy tidbits in it all right so okay so for the other one the next one is the gas mechanic which is also very very interesting uh i just need to swap out the squad because essentially in the game each squad each character has different abilities so for example on this one the ui stove boys apparently they got freaking brush now i gotta find one that has the there you go the mustard gas which is pretty much a staple in every world war one game pretty much all right so there another thing also that i didn't cover in the video but also interesting as you can see the uh the the ui element over there it's kind of hard because i i want a point but i can't point to it but uh exactly over there it's a uh a little circular thing that's actually super easy to do uh just make sure that i don't break anything uh because that is actually super useful and super easy but a lot of people probably don't know about so essentially just making an image and for the image uh just choose a sprite for example just a random circle sprite and then on it over here on the image type you can set it into filmed and over here you've got the film method you can set it to radial or horizontal so if you set it to radial and over here you've got the fill amount and if you modify this one you get something like that so then you can change here the origin so for example put it on the top and then uh on the game uh you can see that it's just an outline so it's not a whole thing so you can essentially just combine this with a mask so essentially just make another image and now i'm not sure if i have just a texture that it works every much is this just add the mask component and then make this one channel that one and over here on the mask do not show the mass graphic actually it's reversed but yeah uh lurking ninja says pacman for the win correct you can make your own pacman game now yeah exactly for this you could just use a a circle and yeah if you put it on the on the left right and pretty much just animate it a little bit like that that's pacman nice so that's what i expect to see for the humble showcase guys i want to see an fps game featuring pacman so yeah there you go like this that'll make something very simple now if the the other texture was with alpha on the middle then you would get essentially what you see in the game so as you can see the using the image type setting it to film just in case you don't know this is super useful so anytime you want to do something yep super easy super useful that and of course the mask mask is also extremely useful awesome thanks for that too yeah all right so here i'm just making a map surrounded by bots okay so i fired that one and actually for firing the gas the mechanic is pretty much the exact same thing as the artillery the difference is instead of spawning just some mortars you spawn a bunch of gas there you go the gas starts showing up in there actually i should have posted a bit closer to me all right so the gas starts showing up and if i get inside yeah we can see that everything is nicely nicely blurred the whole thing i'm losing my health so yep stayed way too long so obviously the gas kills you yep right so yeah this is one of the one of the things is having the the screen go blurry so that's an interesting one yeah okay you see a little bit of like a little bit of vignette coming in as well yeah that as well yeah by by just adding a bit of post processing you can really add all kinds of effects all kinds of interesting things okay so now the other thing that the game has obviously counter to the ass so you can put on a gas mask and when you do you can see vision is a bit more unlimited because they're essentially a sprite on top but now you can go inside the gas and you can look around you don't take damage so that's pretty much the system so you've got an area where if you go in without a mask you start taking damage and if you take if you put on the mask then everything works fine yeah this is awesome by the way i'm learning a lot as well i love that you break it down because when you're looking at this it feels like there's so many things but it's really simple the way you break it down there's like three basic mechanics that you need to learn which we learned a little bit of it already in the previous uh mechanics so that's that's how you build a game out of curiosity which version of unity are you using for this i'm using the lts version so 20.3 nice yeah pretty much when in doubt always use the lts version that's i made a video quite a while ago explaining the unity versions because quite a lot of people seem to have because there's a lot of them so yeah i can see how for a beginner it can be a bit confusing but once you understand how the system works it's actually very straightforward so pretty much when in doubt go with lts which as of right now it's 20 20.3 yeah is there any situation where you would actually really recommend any of the more experimental versions well i mean the only thing would be if you're actually trying to uh trying to work on the packages that require that version so pretty much if you're working on the bleeding edge trying to make the things that are currently in development that's pretty much so for example using dots using entities for that you know that's the kind of thing that's always on the bleeding edge so for that one usually you have to work with the latest version nice thanks right again just uh very quickly talking a while ago about post processing and how much of a difference it makes so for example here's the scene with and without post processing so yeah you can see it's a pretty huge difference just by adding a bunch of effects so over here i've got some vignette i've got some bloom of course and then just some color adjustments and tone mapping so yeah i would like to beg for everyone not to overuse the bloom i'm old my eyes cannot handle that much i find like too much movement in bloom now makes me immediately want to throw up so all right so did you play oblivion or not no i did it i i recently tried to play uh i used to i recently tried to play doom the latest doom and i can last like five minutes at a time if i turn off every visual effect there is yeah but back in the 2005 back when graphics cards were becoming better and better there was a time right around when oblivion came out everybody was just abusing bloom if you go and see uh oblivion gameplay pretty much everything is shiny all the people on the faces everything yeah chat is vehemently arguing with me vehemently arguing with me that bloom is important but you know if it goes like this that's a bit way too much so definitely bring it down to something a bit more manageable yeah all right so for the gas mechanic uh twisted verb size just means it's important to give users settings to turn it off yeah i agree sure of course always editing the options that's a very nice uh quality of life options like oftentimes you know i judge game game jam games a lot and we critique games or review them and we talk to a lot of other developers like from our creator spotlight series and you'd be surprised how often we spend time thinking about what makes the best user experience as much as you spend time on creating mechanics and beautiful stories and all these things you'd be surprised oftentimes the developers sit there and think a lot about what's gonna make a user not throw up halfway through the game yeah that's pretty important yeah crucial i would say all right so here is my mechanic with the the thing so you can see again i'm using the same terrain the same first person controller so pretty standard uh and i've got a nice software so we've got a simple uh health system implemented and then over there got a bit of gas so if i go in yeah we can see that the whole scene changes now i'm taking some damage so everything is nicely blurry everything is a lot more green so yep if i stay there way too much i die so instead i can equip a gas mask and now if i go inside and nope there's no issues so now i can see here i can do everything and yep it all works so that's pretty much a mechanic so if you go inside the visuals change you start taking damage and if you take the mask then you can go inside there's no issues all right so again this one is also pretty easy to make so for the visual itself uh it's pretty much just a particle system so the antiparticle system is super useful so you haven't looked at that pretty much is some particles just moving up the just some basic shape there in a cone so just around this area just constantly spawning moving up increasing and then just on the corner over the lifetime so they start off a bit faded then they become white and then fade away so just a basic particle system then over here on the gas first of all for the visual which you saw the visual difference which actually on the scene camera also works so if i go inside you can see the whole post processing everything changes so that is using the volume component which is how you add post processing and over here on the mode the usual thing that you might do is a global that's how you apply post processing to the whole thing but you can also apply to local and if you combine that with a collateral so if i enable gizmos you can see over there i've got a spherical leather and as soon as i go within that area you can see that it changes so essentially this volume these postprocessing settings these are going to override the global ones because it's got over here the priority higher than the other one so the default one is over here it's got a priority of zero so on this one when it's local and with a higher priority so this one takes over so if i'm outside then go inside so as you can see making areas with commonly different visuals it's very easy really just make a spherical ladder make it local and yep it works great awesome uh quick question um which render pipeline are you using for this uh i'm using the urp universal render pipeline yeah that's pretty much what i use all the time also yeah um so i know you're using the particle system it's really awesome essentially it's like you know the way that we do that fog or gas like it's kind of like sprites any any advice on if you want to build the same thing using the vfx graph have you taken a look at more realtime visual effects uh i mean i haven't looked into it in about a year but yeah it's uh i mean they both have their their use case so essentially the main difference is that the this particle system this one runs on the cpu whereas the vfx graph runs on gpu so for this one you're limited to like a couple hundred particles whereas on the vfx graph you can get millions of particles so that's the main difference it's where each system runs but yeah you could definitely make this one using the vfx graph it's a it's a lot more capable uh but also a bit more complex so pretty much every tool unless it's used so that's uh but that's a that's an interesting thing because one comment that i see every once in a while it's essentially asking um does the vfx ref essentially replace the particle system and the answer is it doesn't they both do different things so so they both can coexist essentially one is not a direct operator to the other one yeah yeah awesome perfect that's kind of basically what i was trying to get at is um oftentimes people are trying to rebuild things in bfx graph totally uh but yeah there's definitely use cases for them agreed pepper right so so that's the particle system and the visuals let's see postprocessing uh and then for identifying if the player is inside so just got a basic script so essentially once again it's using physics except in this case it's not trying to identify just a laser going somewhere instead it's using overlap sphere so this is kind of uh imagine a virtual sphere existing in the physics world and what this one does is it tests if there's any colliders so it returns a converted array so this will return all the colliders that are colliding with a virtual sphere that is on this position with this range and also with this layer mask so when working with the physics system you're going to deal with layers quite a lot so yep another quick tip just in case you don't know you can use the layer mask struct so this one is super useful and if you look in the inspector uh yep this is what it looks like so essentially you've got a drop down menu where you can select multiple layers so you can select multiple of them or just one and so on so in case you don't know because sometimes people working with layers the first thing that you see is that they work based on integers and that is really confusing to handle you got to do a lot of bitwise operations and something but using the layer mask structure that makes it so much easier nice thanks for the tip um i got a really quick question since you know you showed how you set up the terrain and everything like that uh this is from jukebox5 is there a way to turn on and off layers of terrain during runtime turn off grass or trees or grass structures when the players does something that's actually kind of a good question because it's good for performance too uh that's good i'm actually not entirely sure uh i'm actually not sure about that i mean you can enable or disable the whole terrain so usually what you would do is make the terrain in chunks but yeah erasing just the trees or things uh i'm really not sure i mean i guess you could just uh enter the the the prefab the material so maybe through that maybe do the make a custom shader that you can enable or disable rendering maybe something like that but yeah this is actually a pretty complex question because it comes up a lot uh big game studios struggle with this kind of stuff as well and there's many many ways of dealing with it actually almost every single guest from our creator spotlight series answers it in their own unique way with some custom solution so if you want to go check it out i mean the trees also have lod so as you can see that's pretty much the most basic thing you can do for performance so if i'm zoomed in this is really high quality if i go out yeah it becomes much less so that's pretty much the main thing you would do nice right so uh so yeah that's essentially how it identifies if the player is inside so just as an overlap sphere use the gas layer mouse to only identify uh colliders within that layer mask and also another thing that i didn't mention uh it's over here on the gas when you got this leather make sure you set it to trigger so this is so that it doesn't work as a physics object as an actual solid object so like this you can go through it otherwise this would work like an invisible wall so not exactly what you want say i'm making like that then over here once you call this then you get an array with all the colliders within that area within that layer mask and yeah then just some very basic logic trying to see if you have any collaterals since over here i'm using the gas layer mask and i don't even have to test if this collider is a is a gas container because if it's on this layer then i already know that it is and then uh for the for the damage i just made a simple damage timer just so it doesn't damage uh constantly but yep for the identifying that's pretty much it just the collider and then you deal some damage over time and then for the volume modifying the the weight so that's how it uh essentially uh let me put it side by side sorry right so here as you can see as the player goes inside and also the other thing that i didn't mention over here the blend distance so as you can see the the switch between one post crossing profile and the other one it's pretty smooth and that's because that one doesn't so as i get within four units of that sphere so as you can see the sphere right there and if i go inside then you can see i started taking damage and if i'm just about outside and i don't so that's the spherical cast that works essentially identifying the whole thing hey no sorry chad can't hear me right now awesome yeah that's pretty much it and then for the for the uh gas mask that's pretty much just a game object setting into active so just uh it's just an object on the ui so on the player i've got a canvas and i've got a health bar and i've got a gas mask which is really just a basic texture so just like that there you go just a texture that gets enabled or disabled and for the texture also add some animation so it's literally just scaling up and down like the simplest animation which is actually not playing right now oh right because i'm on idle right yeah so i got the idle and the move animation so just very simple this one thing that is super simple to do and it really adds quite a bit more instead of having just a static thing so just yeah super basic animated controller just with a parameter so when this parameter is through then transitions into the moving animation once phones goes back into idle so super simple yeah yeah i love this trick this is really really simple and easy anyone any beginner can it's like i often see these kind of like gas cloud as like uh some sort of object that you have to get past and care for the character to get past so it's like really such a great way to add like an additional level of immersion um quick question for you so all these animation systems workflows that you've showed here this is obviously for a 3d game but can they be carried over to a 2d game i often see this yeah sure yeah i mean the only difference is instead of using physics you use the class physics 2d so that's pretty much it so then over here you've also got you've got a boxcast you've got a capsule cast so instead of a sphere because there's no sphere in 2d so you got a certain cast but yeah pretty much everything that you see works exactly the same thing except instead of using the physics so this is the 3d class use the physics 2d so yeah and also it returns instead of collider returns a collateral 2d so but yeah pretty much the in terms of functionality yeah both systems work work pretty much the same nice thanks yeah a lot of people always think that um they 2d developers think that they can't like leverage any of the assets tools or some of the tips it's there's not that much of a distance the notion of 3d versus 2d doesn't exist you're actually still in a 3d space quoteunquote so all of it is applicable to a 2d developer and actually for example i've got over here the uh that this one the character movement fundamentals uh and this one actually has an interesting top down it's got a topdown controller so the camera is up top actually it's not this one that i want the this one is really awesome it's got a lot of uh clicktomove scene okay i think it's this one uh it's got tons of uh example scenes so for example this one just hide the gizmos right so yeah oh by the way i guess that's a nice tip just in case you don't know over here i'm on the game view and you can see all the gizmos so over there there's a little icon there's a little sound icon so these are called gizmos in unity and by default you see them on the scene view so these gizmos right here and just in case you don't know you got that button there so you can enable or disable them and you can show them in the game view or in the scene view or anything so that's sometimes super useful to know nice thanks right so yeah what i was going to uh uh yeah essentially on the camera i mean just even if you get 3d assets if you take the camera and you make it orthographic there you go now this is pretty much a 2d game so if the camera then if the character didn't rotate then if you wanted to make something in a serve 2d sort of 3d then this is how you could do it so just demonstrating how difference between 2d and 3d yeah it's very much uh it's pretty entert interchangeable yeah nice awesome i get that question a lot so i really always want to like make put people at ease in terms of like being able to use the tools interchangeably i'm kind of curious in chat if you're a 2d developer were any of the assets from the bundle useful to you i know there's definitely several that easily could be used even if you're a 2d developer if you're not making an fps game definitely all the sounds the tooltip system explosions the green stuff yeah pretty much i mean and even the 3d assets i mean 2d is really just an image so you can just take any of these 3d assets just place your camera take a screenshot copy it and there you go you've got a background for your 2d game so yeah same thing with these weapons like you want a weapon well just put them side by side take a screenshot and there you go you've got a weapon for your 2d game so that's actually a really good tip yeah exactly going the other way is tricky so going from yeah but from 3d to tuning yeah that's pretty easy to do yeah yeah that's awesome actually yeah we had a stream with uh crying suns and they go from 2d to 3d pixel art to 3d how to make it and that is a process you probably don't want to do awesome perfect thanks for all that tips and then finally what's the last mechanic we're going to take a look at right so the last mechanic is the drawing uh where's my game it's the drawing on the mini map oh look at that seems like the bots are winning all right great nice because my bots have pushed in almost to the end of the map oh great i love that you switched over to box because you thought it'd be easier mistake do not trust cypher says just purchase both bundles great bundles thank you and thank you for using codemonkey's code yeah thank you that helps a lot so thank you if you guys want to know the code for the fps model and the fantasy bundle it's going to be thrown into chat magically by the month the fps one is going to be going until the end of the month and we just extended the fantasy one definitely get that one he's got some amazing tools even if you're not making a fantasy game it's worth it just for a lot of the tools yeah i mean for odin alone it is definitely worth it worth it we should do a whole odin stream i think for the amount of times that people uh have talked about odin and awesome we should invite them on and do a whole stream with those guys because they're awesome it is it is a great tool if you take the time to learn how to use it it can definitely massively increase your productivity yeah so yeah with a huge discount yeah it's definitely worth it yeah yeah for those who don't know do you can you explain what odin is and uh it's essentially a tool for making custom editors so over here on the inspector all this this is the default editor so over here you've got a bunch of links a bunch of things bunch of references but with odin you can essentially customize this whole thing so for example on the on the gas game object instead of having this the default reference i could have for example a square showing an image of the gas mask and then upon clicking i could be able to select an object from the uh from the scene so on so essentially lets you customize pretty much anything so all the uh actually does this have custom inspect because a lot of assets have custom inspectors and pretty much what odin does oh for example over here on this project i also have the ultimate fps and let's see if that opens yeah there you go for example this window this kind of thing that if you use the unity editor uh class it's pretty tricky to do but if you use odin this is super simple so just making all of these tabs all these buttons all these interesting things so pretty much odin makes it super simple to do any of this so that's why i say if you take on the time to to learn how it actually works and build tools to help you build your own games it is really massively useful yeah yeah relookingninja.com says odin made me lazy i have no inclination to write custom inspectors anymore that's the point [Laughter] thanks thanks for showing us i also have a video on my channel where i did pretty much a detailed uh review on odin and then i also did a quick getting started guide so if you want to learn more you can search my channel for odin it's a it's a really awesome tool yeah yeah i'm gonna throw code monkey's channel not that i'm pretty sure everyone here follows code monkey but i'll throw it in chat just in case you want to go give him a sub right so for the next mechanic it's the drawing on the minimap which is another thing that if you see it it looks complex but it really isn't so essentially you can bring up the minimap and then when you're using the the uh officer class essentially you can click and now i can click and drag in order to pretty much give orders to my squad so i can say okay go through here and do that now the main thing is that it's not just a a fixed thing so it's not just click and it shows an arrow the main thing is that you can actually click and draw your own thing so for a strategy game this is super useful so let's say there's an enemy here you want your teammates to avoid it so just go like that so super useful so pretty much making this uh pretty much making an arrow that you can draw in real time so that's the mechanic which is again super useful for any kind of tactics strategy game alright so let's see in my remake uh over here on the draw arrows right so that's my project on the same thing then i can bring up the map and whoops what did i do okay not entirely sure but yeah i don't think i changed anything but apparently something was said to know okay not sure must be an initialization issue anyways uh so yeah i can bring up the minimap and now i can click and drag and i can do pretty much anything that i want so let's say i want my teammates to avoid this area so i can tell them go through here and go to there so pretty much just drawing on the ui so this is potentially very useful if you're working on any kind of strategy game anything where you want to give some more specific orders instead of just a straight arrow being able to really draw pretty much any path you want all right so how this works it's pretty simple once again so here is the my script right so here it is and really the the only thing you need to to learn or to know how to do this it's really just knowing how to dynamically draw mesh so that's something that looks pretty complex in the beginning but it's actually quite simple once you understand how it works so for me i've got a really nice utilities class that i made quite a while ago i made this for a video but well after 500 videos it's kind of hard to remember where exactly i made it uh i remember that in your video too it's like people the thing about game dev or just programming and developing in general is you just become really good at googling yeah exactly that's it that's the main skill is knowing how because when i started this uh remaking this mechanic i didn't remember how how i made this thing of drawing uh uh drawing a mesh on the on the ui but i remember that i covered that in a video so i just searched through my video list until i found the video where i did that and yeah so learning from my past self that's great good thing you documented so well exactly uh so yeah drawing a mesh super simple you really just do new mesh then you just manually assign the vertices the uvs and triangles and essentially that way you can create the dynamic mesh so just in case you have no idea what it is that i'm talking about actually another quick tip is over here let me just load it do that and just put it side by side just in case you don't know over here on the scene view you've got this little drop down menu where you can see all the various ways that unity is rendering your game and by default you see shaded which means it applies on textures and everything but you can also for example see wireframe in order to be able to see the actual meshes that make up the things and if you do that then you click and drag you can see unlike that that's how the mesh is being generated so if you look at that that's pretty much what a mesh is it's really just polygons so as i'm clicking and dragging you can see that it's generating all these so if i put it on [ __ ] wireframe look at that essentially as i click and move it's creating and generating the mesh so it's really just putting one triangle in front another one and so on so by doing that you can create any shape you want so this whole thing is really just based upon a very simple dynamic mesh so as i move the mouse if i go into the code uh it's over on the map ui yup over here just another thing how do you convert a mouse from screen space into local space by you can use this the reg transform utility this has a bunch of really useful functions uh yeah so essentially you can convert the input mouse position so this one is in screen space so that's different from the local space of the ui but using this one you can convert that into the local ui coordinates and it's pretty much just creating a mesh so first of all i just create an empty mesh right on mouse button down so as soon as you click it creates an empty mesh and then while you hold the mouse button down once again just on every update getting the mouse local point and just going into my utilities adding a line point and the only thing that this is doing is it finds the last left and right vertex so as you can see the whole thing so there's so for example that one is left and right vertex and then as i add a bit more everyone just adds one tiny bit more so that pretty much just adds two polygons so just dynamically generating the triangles so that's pretty much what it does it just connects those so identifies does a bunch of math to figure out the position of the new point and pretty much just add the online point to the mesh so it just grabs the vertices the uvs and triangles these are the three arrays that you need to assign then you assign those onto the mesh just assign them and there you go the mesh updates and that's pretty much it for these for this system just generates a mesh and then the arrow is just a basic image so for the anchored position it gets placed on the exact class position so as i move you can see the arrow is placed exactly under my mouse and yeah for the angles it's just being rotated so yeah pepper likes it the chat can't hear but we're still all right now she can sorry chad all right so yeah that's the the system's pretty much dynamically drawing some meshes and yep that's pretty much it super simple and again you can imagine how you could use this to make a drawing minigame in your game so you can let the player draw something draw i mean i can't really draw much i'm definitely not an artist i'm a programmer that is beautiful perfect looks amazing um i think somebody asked this previously in one of your videos like why uh you can also do this with line renderer right sure yeah i mean this is pretty much exactly what the line runner is doing it's just doing that on the background so you don't see it but yeah that's pretty much exactly what it does it's dynamically drawing a mesh over time so i do think that the line render does have some uh something on the api actually i never tried doing that but uh yeah it's got a bunch of functions to set the position so yeah you could if you wanted instead of handling the mesh yourself you could definitely use this set the positions and it would just generate the mesh and by the way just another quick tip just in case you don't know how i get here just when you mouse over if you've got visual studio and it's uh set up to use the unity tools you can just put the cursor above any sort of class then you can right click go into definition and that shows you the definition of that type so for example underline render and you can inspect and you can see for example all the public fields that it has all the public functions and so on so whenever you don't know how to interact with something like for example you didn't know what was a vector three how does it work i'll just go into the definition and you can easily see one there you go factor three has an x y and z it has these constructors and so on yeah nice thanks perfect thanks um i had some additional weird questions that are unrelated to this but uh because we were talking about 2d earlier um how do we optimize 2d lights seems to not be optimized with the fastest setting i mean the main thing is really just be smart with how you use them that's pretty much it i don't think there's any magical thing i mean the more lights you have the more uh more expensive it's going to be so i actually didn't do i haven't done a a test on 2d lights um essentially to figure out which ones are more performant because uh i don't know maybe i'm thinking in 3d because pointing lights in 3d are extremely expensive so being able to swap point lights for directional lights or something like that there's that's always uh using spotlights that's always much more performant so now 2d maybe using freeform lights i'm not sure but yeah pretty much just there's no magical solution that's pretty much it yeah no definitely not yeah that's a that's a pretty difficult question um what was the game that was really clever with the lights uh used shaders i'm not really sure what that question's about i'm not sure yeah sorry about the the stream quality is because we're streaming to two different places so there's a lot of bandwidth issues right now um but since codemonkey is sharing his screen directly you can actually go check out his stream on his youtube channel or rewatch it after it'll probably be the highest quality but on the twitch channel it probably won't be the best but luckily we have it too so yeah um our metis tech asked are lights or geometry more expensive generally 3d but in either i mean it's lights lights are very expensive uh in terms of 3d gpus nowadays are insanely fast so you can literally have i don't know hundreds of thousands millions of polygons and really doesn't doesn't worry much but if you have just i don't know just 15 lights everything breaks down so yeah lights essentially for every single light the the engine pretty much has to fake a camera from that point of view in order to see what the light sees and then stitch all of those sections together in order to figure out what should be lit what shouldn't be so yeah lights are definitely the most expensive thing possible that's why usually if you want uh good lighting you should actually use big lighting so on unity you've got the gpu light mapper so you can use that set all the settings and then just bake the lights so what that does is essentially precalculates all the lights how they should look how the texture should look and uh yeah essentially just bakes them onto the texture so then it has pretty much no cost during uh run time so you just make them beforehand and then it works right yeah this is a pretty complicated question depending on your project what you're trying to achieve how good your technical artist is going to be uh on this project but yeah definitely there's a lot of uh definitely we have a lot of great conversations with the developer unity developers who talk exactly about this particular challenge in their games um minibar says talk about network solutions in unity yeah we should definitely talk about that eventually maybe in the close future is a good primer we'll we'll talk about it one day i don't know if you want to mention anything about it i'm not sure i don't know i haven't uh looked into multiplayer in quite a while but yeah i know the uh the ml api from what i saw looks really interesting and was acquired by nt recently so yeah that's always the thing there's always there's always like 50 topics that i'd love to research but just need to find the time to do them all so yeah pretty much multiplayer is on my list eventually i'd love to look into that yeah keep a pin in that we'll visit that particular request in the near future but yeah mlpi is one of our think better solutions not available widely yet but definitely there's already studios who are using it in the experimental version so we'll definitely bring them back eventually to show you how they leveraged it so yeah that's a really good question um awesome thank you is there anything else you'd like to show us i think there's another question about oh no yeah anything else you wanna show us really quick about you i don't know a while ago somebody was mentioning outer wilds so actually i got on this project the uh the remake that i did so if anyone wants to look into that it's also pretty interesting yeah yeah so the game is great if you haven't played it i would definitely recommend it especially if you like uh uh if you like mystery type games yeah it's uh really awesome um so yeah when the mechanics is that essentially you've got a scout probe launcher where you can click you can shoot it and essentially just a projectile just goes through and then the main thing is that it has a camera so that's pretty much what i remade in that video so once again i've got the basic first person controller then i've got a terrain and then i can just shoot out a probe launcher and there you go it's pretty much as a projectile just goes somewhere and then where it lands you can see over there on the right side that essentially there's a camera attached to it and using some buttons i can actually look and see essentially rotate the camera around the virtual camera so this is super useful for example if you send it somewhere you can see and then you can update the camera and see exactly what the scout pro sees so this is a really useful mechanic in the game and it's uh really interesting and once again it's another thing that if you play the game it looks really complex but if you try to do it's actually quite simple so for the uh projectile itself uh it's pretty much just a projectile so just uh moving forward with physics and then what it does is it locks into uh the various objects so for that it's over here on the scout you can see it's got a little collider down there so that's how we test for when it hits on any object so these got physical objects so these got a boxing letter so it listens to a collision and then pretty much just rotates the object just places it on the collision point rotates it according to normal so that it faces correctly so if i place down it looks down if i place it up there actually the connector is only on the bottom so i can't really connect it up top but yeah wherever it lands essentially goes and for the camera that is the super useful the render textures so just in case you don't know what these are these are super useful so essentially there are textures where you can render something onto a onto a texture instead of rendering directly onto the screen so i got the main camera this one is running onto the screen so that's what it sees here and then for that one there's actually another camera object right in there inside of the probe launcher so you got this camera and if you go over here under output you can see output texture so if you assign a render texture onto it then instead of this camera being rendered onto the screen that's going to be rendered on this texture and if you look into it yep you can see that's what the camera actually sees so this camera you can see on the preview yep that's what it sees and then just for displaying it in the ui so this one is also super simple i just got a basic canvas and then inside i've got a raw image so this is the one big difference normally use an image when displaying sprites in dui but when using a render texture this is a texture it's not a sprite so in order to show this you need to use a raw image component which takes in a texture and yeah that's pretty much it so you got a canvas you show a raw image and over there you can see what the camera sees and then on the input i'm simply just rotating that camera object so put them side by side uh nice like that camera oh crap because it spawns and destroys the the previous one uh yeah if i select the camera and i see the camera object and then over here yeah there you go it's really just rotating the camera object and there you go so yeah as you can see also another pretty simple system yeah super simple but great great little trick for those who are i mean outer wilds is a fan favorite uh a great made with unity game um if those who don't know they just recently uh released a new dlc and actually they're gonna be invited yeah they're gonna be invited guests on our stream in the next couple of weeks so look forward to that if you want to know more about them and how they built their game they're going to reveal a lot of great information about about the worlds and um how they built up the system and everything and a lot of the mechanics in it so it's going to be good so make sure you watch yeah make sure you watch this stream and watch that one yeah you can see how code monkey did it and you can see how they did it there's a lot of great ways to do to get to the same solution so it's really awesome yeah just uh just since this stream is going on the twitch but also on my youtube uh if you're watching this on my youtube then uh definitely go on to the watch the official unity twitch stream because on there they they've done a lot of interesting ones interviewing creators where they open up their games the creative spotlight series so definitely a lot of very interesting things there you know there was a one on death's door that was really interesting they showed how to use the the floor using pro builder and then built the whole thing up on top of it then lots of postprocessing so so yeah definitely if you want to see more behind the scenes definitely go and check out the official unity twitch channel oh thank you yeah sure that's awesome thank you for the plug similarly you can go check out code monkey he's a great creator and as a community team we often recommend him as the goto source if you want to start off there's great beginner and advanced topics i think a lot of times we think that a lot of the content that's created on youtube is only for hobbyists and beginners but i would say that i often see really advanced users browse through these videos just to like be able to remember just like monkey said some of the stuff that they needed to learn a while ago but forgot about nice i love that we just both plugged each other's channels but thanks everyone that's awesome uh so thanks again for code monkey for coming by this is really awesome i hope that we'll see you on here more often the community really loves you and super happy that the community saw your face people had a lot of things to say about that so that was really fun and i hope chad you enjoyed it if you have any other questions throw them all away we have a discord i don't know if uh hugo you have a discord or any community spaces not really i tried but i couldn't i couldn't keep up with all the comments emails plus this card that was true sorry guys you overwhelmed the code yeah but uh i think uh for this particular stream we broke down we're done sorry but we're so excited about the stream she was very vocal today i'm really sorry about that but uh all the project files are also available so if you missed anything you can go check out the video it was definitely clear on the other stream really sorry about the quality we're trying something new this time we were trying to stream to as many places as possible but looks like quality took a tank but no worries uh it's gonna be crystal clear on the code monkey channel but also i think your project files will be available right sure yeah yeah yeah so you guys can go check it out and take a look there if you missed anything but yeah thanks everyone uh if you want to see code monkey come back let us know uh we look forward to working with him again oh important question lego giveaway oh what was the game i saw some really good answers there was valheim the new kenna game uh somebody said battlefield um what did we end up picking moderators as the game that we uh the game that should be broken down in one of the next uh code monkey videos can you guys like start throwing them in chat so we can take a look really quickly you did valham already did you i'm trying to remember i did one but it wasn't it was a game design overview so it's a bit of a different format yeah yeah but it's also interesting if you want to learn a bunch of things about that game yeah definitely go watch that video because that game does a lot of things very very well yeah yeah awesome yeah that's another great way with unity game uh we should definitely bring them on to the chat uh into our stream as well he showed how to build yeah we'll do a poll um throw your questions in chat we'll go back and take a look oh yes there was humankind that is also a good one that team also has our been on our uh they were featured in our gdc creator spotlight series um and yeah another great one oh hard there's a lot of mechanics in that those kind of strategy based games are always kind of difficult um and people are saying green hell uh perfect i really like humankind because that's a would you be willing to do a game like that sure yeah i mean it's uh it's pretty complex which means it has a lot of systems that i can remake so a lot of things to choose from yeah yeah a lot of character classes looks uh very interesting yeah yeah really great game a lot of character classes they all interact with each other there's some different mechanics like the world changes depending on which race or ethnicities you choose and history you choose so it's a very very interesting very complex game you guys are going to give code monkey here yeah okay perfect so i think lurking ninja picked that one you got the lego minifigures so congrats awesome um thank you everyone this was an awesome stream i'm super excited uh hoping to get more remember go check out the two huma bundle packs the fps one and the fantasy ones we're throwing them in chat now they're both code monkeys links so uh please go support him and uh the stream as well his channel as well and as you know all this was being done so that we can do a showcase by next month if you're making a game with any of these assets or you feel like just submitting one of your games that will play uh by the end of the month and be featured on the unity play website definitely submit to the showcase we don't have as many we usually get like 600 submissions guys by the end of these things so i want to see i still want to see those numbers go up so yeah thank you any last words hugo sure thanks thanks for having me this was uh interesting again first time with the with the camera so face reveal so right this is it so yeah this was interesting but i think it went well so yeah thank you all for for being here for watching this this was a very interesting and i hope you learned something from me so yeah thanks thank you everyone all right we're gonna raid scotchbox vr stay tuned he's a great vr streamer plays a lot of made with unity vr games um so definitely go give him a shout out over there and thanks to code monkeys community thanks for watching and being very vocal we'll catch you guys all next time bye thanks everyone bye bye you