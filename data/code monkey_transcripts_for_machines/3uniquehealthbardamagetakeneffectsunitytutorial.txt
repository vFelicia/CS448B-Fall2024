in this video we're going to create various ways of showing damage taken in a health bar this is a great way for the players to see how much damage he took in the very last hit we're going to make three versions of the effect so you can pick which one best suits your game all right let's begin hello and welcome I'm your code monkey and this channel is all about helping you learn how to make your own games with nf2 torrents made by a professional indie game developer so if you find the video helpful consider subscribing so again here are our three effects over here we have one that fits into nothing so we trigger damage there's the damage part and after a while it fades into nothing then we have this one which shrinks so we take some damage and after a while it shrinks to match the bar and yep there you go and finally have the cut which gets cut from the health bar and after a while falls down and vanishes all three are great effects that add polish to your game so here I am in an empty scene let's start off by making our basic health bar so first we go into the campus and create an empty game object this will be our health bar fail so this will be the one with the fading effect let's add a new UI image inside this will be for our background and on top we have another image for the actual help okay so this is our basic health bar we have the main container then we have a background and then we have a bar with our gradient sprite now in here on the image type let's switch from simple into filmed select horizontal and left to right and just like that we can now modify the fill amount in order to set our bar size okay now let's make a script to handle this health bar so here create a new C sharp script this will be our health bar faint drag it onto the game object and let's write some code okay now in here let's first grab a reference to our image so we make a private void awake to grab our references we define a private image reference for our bar image okay so we have our reference now let's make a nice set health function so we make a Fred boy set he'll and in here we're going to receive a float for the health normalize so we receive a normalized value and all we need to do is go into the bar image set the Philmont to our normalized val and that's pretty much it so now on private void start let's do some testing and here we do set home and let's put it at 80 percent so we pass in point eight okay let's see if the health bar is indeed at 80 percent and if there is the health bar pretty much at 80 percent okay great now in order to make our effects we're going to need a very simple health system so in here a new C sharp script for the health system and now in here I'm going to write a health system very quickly just to make sure that this video is focused on a health bar instead of the health system okay so here it is I have done a video on a health system at health bar so check those out for a more indepth look into how this works also you can pause the video to write the code if you're following along or you can download the project files from the website in this video all we care is that we have events notifying us when the health changes then here we have a function which returns our corn health normalized and we have functions to heal or damage our health system so this is very basic now let's apply this to our health bar so here on the health bar feed code let's make our testing here on the start so first we're going to create a new health system so we start a new health system with a hundred health and now we set the health instead of being a number we go into the health system when we get the health normalized then in order to make sure the bar updates has the health system takes damage or heals we simply subscribe to the events so the health system subscribe to the undamaged event and here we're going to do the same thing we update the health bar and also subscribe to the health system on heal defense and we do the same thing we update our bar okay okay so that's pretty much it and this should be working let's just run the code to make sure our bar shows up as fully healed any up there it is the bar is that a hundred percent okay great now let's create some buttons so we can test out the healing and damaging in order to create some really quick testing buttons we can use the CMD bar class which is part of the code mock utility as long as you can grab the utilities for free from unity code monkey calm so in that class we have a function where we can easily create a button on UI so it's perfect for testing put it on a certain position so this will be our damage button and then we pass in an action that we want to happen when we click on this button so in this case we want to deal some damage so the action will go into the Health System and cause some damage and then next to it let's make a heal button okay so we should have two nice testing buttons let's see okay here we have our nice testing buttons now if I press on damage yep there you go the health system took damage and the bar does indeed show that damage okay and I can heal and goes back up all right so right now we have a very basic health bar working now it's time to start working on adding our effects so first here in the editor let's think about what we were going to need for this bar we're trying to make the fade effect so we want the bar to take damage and have another bar behind it showing the damage different then that bar will start to fade after some time so for that we can simply duplicate our bar this will be our damaged bar instead of using this texture let's just make it in white okay so this will be our damaged bar image we just have a bar working example like the health bar except it says behind it and essentially this will show this amount and then after a while it won't start to fade and then if we get hit again it will calculate the same fill amount and so on and so forth okay so now we can go back into the code and here the first thing we're going to need is a reference to our damage bar image now let's also store the current color when we grab our reference and for starters we're going to start off with the Alpha at zero so that the damage bar is invisible and we also need a timer in order to know when we should start to fade so up here we make a private hole for the damaged health fade time so this is the current timer when this is under zero then we're going to lower the Alpha so that means we also need a maximum timer so for that let's define it as a constant so here we do a private on squad for the damage how fade timer max and four stars and let's put it at one second so the bar will be visible for one second and then start to fade away so with all these we have all the elements to be able to create our effect so in order to do the effect let's create a private roid update and first we test if the image is visible by testing the current alpha so we test if the damage color dot a if it is bigger than zero then the image is currently visible so if it is visible we countdown the timer so we set the damaged health a timer mine is equals by time time then we test if that timer is under zero then we want to start fading so we go into the damaged color and we start lowering the alpha by a certain fade amount and then we set the damaged bar image dot color to be our damaged color okay so that's pretty much it for the code for our fade effect now we need is to set a timer and show the bar when we do get hit so let's go down here into our on damaged function so this is triggered by an event on the Health System so whenever the Health System takes damage we get this and when we do before we set the helm let's check if the image is not visible so if the damaged color alpha if it is under zero then the damage bar image is invisible so if it is invisible then let's set the current size before we damage the bar so we set the damage bar image dot fill amounts to be the same as the bar is currently showing so the bar image so the image of our image won't keep the same size that had happened before he took damage then we also said the damage Colorado alpha to one set the image color to the damage color and we set the timer to our timer max okay so that's pretty much it for activating the effect when the bar is invisible so essentially that means it's been a long time since he took the last damage amount so everything is reset back to normal then we take some damage and we run all this we set the damage of our image to the same as the previous bar image fill amount we set the color alpha to 1 we set our image convert to that color and we set the fate timer to the maximum however let's say he gets hit twice in a row instead of resetting the effect and resetting the damage of our image fill amount we just want to reset the timer and the Alpha so in here we do anything else so damage bar is already visible so if it is already visible then we don't want to reset the size so we simply do this we set the Alpha to 1 in case it's in between the fade and we reset the timer back to the maximum so if we get hit twice really quickly then it will show the whole thing as just one bar okay so that should do it now in here as you can see we have some duplicated code this way it should be easy to follow what is happening when the damage bar is invisible versus when it is visible but we can also simply shorten this by putting this outside to make sure that we always reset the Alpha and the timer regardless of what happened and when the bar is visible all we do is update the size okay so here it is the exact same logic just more compact so that you do it well let's test and see okay here's the bar now if I click on the image if there you go there's the white part and it fades after one so it showed that this is the amount of damage that we took now if we hit it again yep there you go that's the amount of damage that I took now hit twice very quickly so hit once twice and you know the whole thing resets the timer and then the whole thing fades and the heal some works exactly as in time heal the image and yep there you go okay great so this is our first effect fully working one example of this effect in action is in apex legends you can see it in the game the bar slowly vanishing and I also recreated it in unity so check out the link in the description for the full video of recreating the apex legends health system okay so with the first effect only working let's remake these testing buttons just to make it look a bit better so here in the editor I'm going to create some buttons here on the side okay so here are these two buttons just to look a bit better than those testing buttons so let's go to the code and then here and let's go up here here's where we were creating our testing buttons so instead of this lets you first get the reference for our buttons okay so that's pretty much it so the buttons have the button UI component which is part of the code mock you tommy's it's just a simple class that Hamill's buttons and we trigger the click function to be this damage and heal so now we can get rid of these testing buttons and let's see again and yep here's our bar and here's our two buttons so I can click to damage any of there you go take damage and it works after wild fades and heal and everything works okay great this is just so it looks better to do our testing so now let's get to work on making the shrinking effect so for that let's go into the editor and let's duplicate the bar so that was the bar fade and this will be the bar shrink the composition will be essentially the same we're still going to have a damaged bar except instead of fading away it won't simply shrink to the size of the health bar okay so now let's also duplicate the script so we have a nice starting point so this will be the health bar shrink now let's go to the code in here let's fix all these errors and get rid of all the fade codes so this will be the our shrink get rid of the fade code on our update and also here on damaged so here is pretty much our normal health bar it simply has the health system and it shows all this stuff okay so now for the logic on the shrink we're also going to have the damage bar image so we can leave that and now we need to have a timer in order to know when we should start the shrink so let's go up here make a proud float this will be the damaged home shrink timer and if we have a timer we also need a maximum so up here a constant for the damaged help shrink timer max and that's pretty much it for all the elements that we need so now let's go into our update in order to make our effect and the first thing we're going to do is count down the timer then we test if the timer is under zero if so then we change the damage bar fill amount towards the action bar fill not so if the bar image dot fill amount if the current partial amount is less than the damage bar image that amount that that means the curve bar is smaller than the damage bar so if so and the timer is down then we simply shrink our damage bar fill now to reduce it by a certain amount and that's pretty much it for this effect so we count down the time work when the timer is under zero then we check if the current bar is smaller than the damage bar and if so then we shrink it now we need to set the timer so let's go here into the undamaged event and really all we need to do is go into the timer and we set the timer to the timer max so all that remains is to set the damaged bar image film on and we're only going to change that when we do get it heal so in here when we heal we set the help and we set this fill amount didn't burn image that film I'm not so whenever we heal the damage bar heals along with it and whenever we damage first we set the health which will only change the bar image then we set the shrink timer which after a while will start to shrink the damaged bar image and on start we also need to do this in order to make sure that the damaged bar image starts off exactly like the health bar image ok so that should do it alright let's try out and test in order to test we need to go here and make sure that we set the hump bar shrink and add it in here so we still have our faith health bar let's leave it at that and the shrink with the shrink code let's see okay here we are this is the fade bar and this is a shrink bar and if I click on the image there's the bar and you pastor well it doesn't need drink so hit there is damage and yep it did shrink now hit twice once twice and there you go choose this amount and then it shrinks towards that and if we heal and damage again yep there you go it says that's the amount of damage we took in that amount and that amount so we have correctly built our second method of displaying damage this effect is used for example in second row shadows I twice I also did a video covering the recreation of the health and posture system so if you're interested check out the link in the description so we have our two bars that we can play around so this one as you can see it fades after a while and this one shrinks after I want now we want to work on the final effect and the final effect is having the hump bar essentially be cut whenever the player takes damage so we take the image it cuts this part and then after a while this part should fall down instead of shrink so let's get to it we're going to start off in the same way so we simply come in the editor and we duplicate and this will be the health bar cut now this time in here for the components for our health bar the damage bar image won't be used as a template that we will later duplicate so let's call this damaged bar template here on the anchor and let's anchor it come only to the in left sign so when we get hit we're going to duplicate this template then we're going to place this bar exactly on the spot after the bar was hit then we're going to give it the fill amount that contains the amount that it took and after a while we're going to move this transform down so that's a goal now let's disable the template by default we're going to enable it through code all right now again for the code let's go here and duplicate this class this will be our health bar cut now let's go in and again get rid of the shrinking code okay so here we are again working as a regular bar here in the editor let's add the health bar cut in here and get where the other one okay so now to make our effect let's first grab a reference to the template so in here we grab a credit transform or the damaged bar template and we grab it in here then with the reference to our template let's go into the undamaged function and down here we're going to duplicate our template so we instantiate the damaged bar template so this will be our transform for the damaged bar we need to make sure that we instantiate as a channel that this transform so we pass in like that okay now with our newly created damaged bar let's first enable the transform since the template is disabled by default so we simply go into the damaged bar set the game object dot set active and set it to true okay now we need to place it in the correct location so for that we know the film amount of the current health bar which is a normalized value so in order to figure out the correct location all we need is the maximum width that way we can multiply the normalized value by that weight and get the correct position so let's check in the editor and over here we can see the tonal size of the bar which is 500 so now I can go back into our code and go up here to define a constant so a private constant for the bar width which will be 500 and now we can simply go down here and after we duplicate our damaged bar we set the damaged bar we get the component for erect transform and we set the anchored position and on the X we're going to place it on the bar image dot fill amount which again is a normalized value multiplied by the bar width and for the wine let's use the same way as the anchored position okay so just like that we should be correct on locating our damaged bar at the edge of our current health bar now we need the film mount for our damaged bar and that will really just be the difference between the current film mount and the one before we set our help so let's define here a float for the before damage bar fill UNAM and to be based on the bar image on film mount so here all we need is to set the damage bar getcomponent of type image and we set the fill amount to be the V for damage fill amount minus the current bar image fill now and that's it okay so this should do it let's see and we should be able to see our template being duplicated whenever we take some damage okay here we are and the bar down here is the cut bar so when I damage if there you go there's the white part exactly as intended so now let's pause and make sure everything is indeed exactly as intended here is the hump bar cut and here is our template clone and yep as you can see it is perfectly located at the edge of our current health bar and the film mount is perfect to match towards the end so we have successfully cut the part of the bar that we want now all that's left is to make this phone down after some time so for that the simplest way is to make the script so this will be our health bar cut fall down inside this will be a very simple script let's define a simple vote for the timer on our private void awake we set default down timer then on our private void update we simply calm down the timer so minus equals timed out the time then if it is under zero then we need is to start moving this fret transform down okay so we simply move the reference from angered position down by a certain fall speed then after a while we wanted to start vanishing so let's define a time where to start fading so a private cloud for the fav timer so first he counts on the phone down timer after one second he starts falling down when he does we start counting now the faith hammer if the fate time Reza laps then we start lowering the Alpha so let's go up here and also define a color so when the fete timer is elapsed we start counting down the alpha then we apply that to the image and finally if the colored alpha is under zero then this is completely invisible so we can now safely destroy this game object okay so that's pretty much it we have a very nice very simple code we count down the phone down timer when it's under 0 we start falling down by modifying the electrons from anchored position then we start counting down the fate timer when that one is under zero then we start fading our color apply the color to the image and when the color is completely invisible then we destroy this game object now we need is to actually use the script so let's go into the healthbar script in here we have our in Senshi ated damage bar we place it we size it then we go into the damage bar the game object and we add the component for our health bar cut found out okay so that's pretty much it let's test ok so here we are with our three health bars and down here is the cut now when I press the image and let's see there's the white part and if there you go after while the white part film down start to vanish and completely disappear so we can pause to make sure that yep we only have our hidden template the other one indeed fell down and disappeared so you can trigger more damage and you've there you go after a while everything starts to fall and looks very nice and we can heal back up and damage again any up there you go everything looks nice if we wanted we could apply some simple extra logic and make them merge before falling down but like this actually looks quite great so again here are our three effects over here we have one that fits into nothing so we trigger damage there's the damage part and after a while it fades into nothing then we have this one which shrinks so we take some damage and after a while it shrinks to match the bar and yep there you go and finally we have the cut which gets cut from the health bar and after a while falls down and vanishes all three are great effects that add polish to your game so just like that we have created three different but for shown damage taken in a hump bar it's up to you to decide which one best fits your game as always you can download the project files in utilities from mt code monkey comm if you liked the video subscribe to the channel for more unity tutorials post any questions you have in the comments and I'll do my best instrument alright see you next time