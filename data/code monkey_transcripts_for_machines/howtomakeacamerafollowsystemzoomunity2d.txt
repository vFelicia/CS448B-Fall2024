hello and welcome I am your code monkey and in this video we're going to continue our camera phone system and add zoom functionality let's get started okay so now that we have camera movement working we should probably add camera zoom so let's go in here in order to get the zoom working we need a reference to the actual camera in this game object so let's add a private void start and on start we're going to first above here set up a private camera call with my camera and on starting to get my camera calls transform getcomponent uptime camera so down here let's copy this movement camera movement code into its own function so make a private void and no movement and we're going to copy all this code in there and then we're going to make another one a private void panel zoom and in here on our update we're going to call the hand movement and the handle assumed okay there it is so in order to get the zoom we're using 2d so we're going to change the cameras orthographic size in here let's set up our float camera zoom which won't be let's say four yeah so zoom in just a test and do my camera dot orthographic size equals camera zoom so just like that the camera should be instantly zooming in as soon as it starts yep there it is it just zoom then and I can still change it and everything else still works okay so now the zoom is actually being instant which we don't want so let's smooth that out the same way we did with the movement so float camera zoom difference equals camera zoom would you where we want to be and this is our current difference and float camera zoom speed let's just put it at 1 F so orthographic size increase by difference times camera zoom speed times time Delta time and now as you can see it should zoom in slowly very nice thank you so mu yep great okay so now this one is gonna have the same problems when we were running at very low frame rates so let's make sure it doesn't overshoot its target so if our camera zoom difference is bigger than zero so we remove if we're in this case zooming out we're going to make sure it doesn't overshoot the target so if my camera god orthographic sighs if it's actually bigger than camera zoom then we have overshot the target so I'd simply set it to camera zoom and do the same thing if the value is actually negative if we go under zoom you set it back so now just test make sure that everything still works the same but now if the player is running at a very low frame rate you won't no longer have problems great so now instead of receiving a fixed value here let's do the same thing and do a private func that in this case won't return a float and call it get camera zoom func and we're going to add this to our setup and and down here instead of setting it like that we're gonna grab it from our function and then our game handler is give it another function that in this case just for testing let's return 200 so now it should zoom out yep there it is zooming out great okay so now let's have the ability to zoom in and out so in here make a private float that will contain the zoom there we want to go and add a private void zoom in and a private ROI zoom out okay now when we zoom in just decrease zoom but let's say 40 and make sure that it stays within a valid range because we don't want to zoom in too much so if zoom is under let's say 40 and zoom equals 4 yup and when we zoom out zoom was equals oh yeah if the zoom is bigger than oh let's say 200 F then zoom I don't know okay stemming here let's return instead of returning a fixed number let's return our number and let's add some buttons for zoom in and zoom out and actually in here the only function we're gonna call it's gonna be the zoom in function in here powers and place those buttons slightly lower and put it about that should do the trick I just set the starting zoom value to 40 M just might zoom in and now let's see if the buttons are there and test if our zoom is working so it's currently zooming in and we can zoom out and it was back zoom in and goes up and as always we can still change and we can change character zoom into that character zoom out go to another character zoom in and zoom out let's send some functions for our camera to receive a fixed point since sometimes in case where we want to do a cutscene we wanted to go to a specific point not necessarily have to give it a get camera position func so let's add a public void and set camera follow position and just give it a factor 3 camera call position and internally we're going to call this function and just return this we're going to add also a function for public set get camera zoom func which will always change our actual camera zoom phone and and set camera zoom to a fixed number so float camera zoom and call function and just put it there and we're zoom well there you go now I can go here and just send it to a specific point so set camera fall position let's just send it to 100 50 somewhere to the left and to the right in camera follow dot set camera zoom let's zoom in so just like that we can move the camera away yep let's say a cutscene is happening here and when ends we go back to the player and now it's again being used in the player so just for fun let's make the camera go into random positions so in here let's use the code monkey utilities to create a new function periodic which is just an action that won't be executed every certain amount of time so it's great one every let's say top second so let's just send it to a random position so here let's just go random to our range between minus 100 100 and the same thing and on our zoom render range within 4 yup and 200 yeah great so now every half a second the camera should just move around randomly and there you have it we have our nice camera system that is independent of the actual things moving in the scene and we can set it to move and zoom to anywhere you want we can make it smoothly follow the player and the other object and easily make some cutscenes by setting a target position target zoom before returning to player control ok if you have any questions post them in the comments and I'll do my best answer them alright see you next time