hello and welcome i'm your code monkey and here let's learn how to use the animation rigging package this is an extremely useful package to help make your game feel much more polished by adding all kinds of dynamic movement on top of your animations you can easily make your characters look at a moving object or maybe grab a dynamic item from the scene or make a skeleton with a chain of bones or a character in a third person shooter make it aim perfectly the package is excellent and really easy to use the final results look great and they definitely make your game feel much more polished also this video is a lecture taken from my ultimate unity overview course unity is massive so in the course i explain over 50 features and tools of the engine that you might not know about there's individual lectures explaining tons of things like shadowgraph similar definitions animation avatar video player and so on as well as many other niche things that i couldn't possibly cover in normal youtube videos also the course will continuously be updated with free updates as i add more lectures explaining more tools and features this specific lecture was added as part of the second free update that explains more tools and features so go ahead and get the phone course to learn how to master all the unity tools to help you make better games faster in this lecture we're going to learn all about the animation rigging package this one is an extremely useful package that makes a bunch of complex animation logic very easy it's all about adding dynamic animations on top of your static animations so for example having a static normal idle animation but then making the head point towards a dynamic object moving around the scene it also helps you handle ik or inverse kinematics so for example you move the hand and automatically the upper and lower arm moves to where it makes sense so let's first look at how to install the package and browse some of the official samples then after that let's learn how to create three scenarios how to make a head look at a dynamic object then how to make a leg bandwidth ik and finally how to combine it all to make a character aim perfectly at a target okay so let's do it now first of all this one is a package so you get it by going through the package manager up here make sure you select the unity registry and then simply find the animation rating package and hit on install when you install it then you should be able to see a menu up here called animation rigging so it's installed now also on the package manager over here you've got a samples so you can import these these are extremely useful for seeing all of the various use cases when you import them it adds a unity folder and then inside you've got the samples for all the various things so here it is all of the scenes showcasing tons of different scenarios and on top of that in terms of documentation it also adds a really nice readme file so as you can see there's tons of demos all of them with nice description here telling you exactly what they showcase so let's see some of these demos for example here is the simple aim demo so in this one there's a simple object moving around the scene then as you can see the head of the character is constantly pointing towards the object and same thing for that model cannon it's always pointing perfectly towards a moving object now you can obviously inspect all this to see how it's all set up so over here the root model has a rig and here is the aim head component which is using a multim constraint so it's contraining the head bone and it's pointing towards the aim target object and all of it is set up and same thing for the gun just doing the same thing now the main going with this package is that this is not a premade animation so i can stop the bomb from animating i can place it anywhere in my scene and as you can see the head and the cannon always looks perfectly so i can put this anywhere and everything works so the animation reading package is automatically calculating how to rotate the head bone and the canon bone how to rotate it to make it face towards a dynamic position and this sample is also showcasing leg ik so the animation on these legs is being driven by these target objects so the animation is just moving up and down and then these cubes and the logic is complicating where to put the knee the bones and so on then here's another sample showcasing the chain ik so it's a scorpion with a ton of bones that make up the whole tail and again the animation rating system there's a target moving around and the system is being used in order to make sure that tail hits a very specific point so as the thing jumps about there you go it hits it so here you can see how i can place the target anywhere and all of the bones go to where it makes sense the animation breaking package is constantly calculating where the bones need to be in order to make sure that it hits this point exactly with the tip so as you can see all these demos are super useful and the official documentation is also excellent it shows very clear examples of what each constraint does how it works and what each setting does okay so with all of that let's learn how to use it over here i've got my character and it's just playing a basic title animation now let's build one of the simplest things you can do to add a bit more life to your games let's just make it so that our character can look at a dynamic object so the character is on prestandard it's got a basic animator then inside there's a skin mesh renderer with the actual visual as well as a simple humanoid rig i cover animations and animator in detail in other lectures and this character is from miximo which i also covered in the animation avatar and lecture so first of all the way animation breaking works is based on creating rigs so let's select the main character game object then go up here into the animation rig menu and hit on rig setup as soon as you do you can see that on this game object it has a ray builder with a reference super rig and this is a game object that was created which has a ray component so this is the ring and now inside our rig this is where we can add any constraints that we want so for example inside the rig let's make a new game object call this the head aim and then just go up here into add component let's go inside animation rigging and now for this case we want the head to aim and look towards the target so let's pick the multiaim constraint now we have all of these fields to set up our constraint starting off with the constrained object this is whatever bone we want to constrain to aim towards something now thankfully on the animation ringing package there's also a really harmful tool included you can select the main game object then go up here into animation rigging and click on the bone render setup and yep this is super useful this adds a really nice visualizer for all the bones and over here on the component you can change the color change the shape size and so on so this is a super useful utility to be able to see exactly all the bones that make up the character and also super useful is that if you click directly on the bone it actually selects the bone whereas if you don't have this and you click on it just select the skin mesh render so this is super useful okay so now that we can see the bones let's set up our constraint over here on our settings the first one is the constraint object so this is whatever bone we want to apply this constraint to now in this case we want the head so let's just pick the head bone here it is the miximo rig head and just drag that reference next up we've got the aim axis and the up axes these are the axes that the animation breaking system won't use in order to correctly point towards the target now if you get issues for example your character is pointing towards the target using the top of the head instead of actually looking with the face if you got issues with that then you play around those if you want to figure out which axis you should use just go ahead and select the head bone then up here you've got this really nice button that swaps from global into local so this changes the world space over here on the tool handle so you can see on global if i move over here to the right then i'm moving on the x then the z is in there and the y isn't there but this bone or any parent bones might be rotated so if you click on local then you see different axes so this is the one that you have to pay attention to so make sure that one isn't local so right here we can see that the one pointing forward is over here the blue one so the blue one is the z axis so this one that we're going to use for the aim and for the up we've got the green so in this case the y so point forward on the z and aim up on the y so over here let's set up like that so the aim x is on the z and the up axis is on the y okay then for the warm web type for this one you probably don't need to play around it then the next important setting is over here the source object so this is the actual target that you want to look at so for that let's make a new game object inside of our head aim and just call the target now this one doesn't have to be a child of this game object you can place it anywhere but in order to keep things organized and putting it in here makes sense so just create it and just drag the reference so here's the target and now we can move it around one more super useful thing in this package are the effectors so over here on the lower right corner on the scene view you can see this little tool window and over here you see the plus button so if you click on it now you can add an effector for this game object so this is kind of like a visual gizmo you can click on one on circle icon and just choose you can use any mesh you want but there's also a bunch of effectors included in the package so you can search for effector and over here if you don't see anything that's because this button so it's not showing hidden packages so if you type in effector and you don't see anything make sure you click here so that it actually shows the hidden ones and if you have these four included ones so you can use a box so there you go a nice little cube there or you can go with the ball with a simple 2d circle with a locator just a nice cross or a simple square now for this case for target object let's go with the ball that looks pretty good then again you can play around the collar size and so on okay so this way we've got a really nice visual to make sure that we see where the character is looking at now on the rig we still have a bunch more settings but just with this everything should already be working however another thing related to the animation rigging package which is just like this if i move the target you can see it's not actually working naturally here i made a slight mistake this gizmo should be on the target not on this game object it's a target that we're going to use so let's actually remove it from this one and add it over here and also one more thing that you might be seeing you might be seeing these images these are the gizmos for the rig component and the various constraints this can be slightly annoying so while you're setting it up if you want you can just disable gizmos up there or you can manually go here and find the various constraints so for example over here the multiunconstrained you can just hide this gizmo individual so either do it individually or hide them all so just keep things nice and clean okay so as i was saying the way that animation reading works just like this if i now take and i move the target you can see the head is definitely not looking towards the target now there are two ways that we can see the animation rigging in action now one way is obviously by hitting on play and playing the game but another one that might also be very useful is if we are in the animation preview state so over here i've got the animation preview window and if i click over here on the preview button now there you go the character actually goes into the animation preview and while this preview is active now animation rigging is indeed working so this one is great if you want to continue setting up the animation without having to hit play just make sure you go into the animation window and enable preview and yet another thing that you should learn about how animation reading works is that the way this works since it's on based on jobs in order to make it super performant since it works like that it means that if you change any settings over here they won't be applied immediately so for example let's say that i want to aim with the top of the head instead so let's put it maybe on a y and now if i move the target then nope it's still working exactly the same as previously again that's because we were already on preview so i have to leave preview mode and now reenter and yep now it is indeed using the new settings so that's another specific thing for how animation rigging works so as you can see i need to exit and reenter preview and same thing for plane so right now the game is playing and the character is aiming like that but if you go over here and you swap it back and nope it didn't actually change that's because these changes are only applied when the actual game starts running after it starts running you can't really change this so swap this one back into the z hit on play and yep there it is everything is already working so i can take this target object i can put it there anywhere and yep it looks perfectly so i can look left and right up and down i can look anywhere and yep the character always looks perfectly towards the target and again keep in mind that the character is still playing the basic channel animation so the animation itself doesn't have any of this dynamic movement it's all being handled by the animation breaking package alright awesome so for example you can see how this very simple use case would be extremely useful for things like for example having this character talk to the player so let's say the player was right there and the character is looking at it that makes it much more immersive than if the character is always pointing straight ahead and the players off to the side then the player could even move and the character would continue looking at the player or maybe for example this one is a player and there's an item to grab right there on the floor so the player can look at that and make sure that it's looking directly at the object so again just with this very simple example you can already see tons of potential use case okay now for these other settings there are two offsets now the first one maintain rotation offset so if this one is unticked and over here look at how the target is to the left of the character if i hit on play then the character starts looking perfectly towards the target however if i now enable this now it's essentially going to keep this offset so when i hit on play if the character is now still looking forward so it's essentially applying the offset to this target as it was when i hit on play so now if i move it's still looking it's essentially applying the offset that this object had when i had on play and then you have an actual offset so this one will essentially make the character look towards that object plus whatever offset is in here however for some reason the scale is strange so if i put just one on the y you would assume it wouldn't look around one unit above so it shouldn't look around here but now it's still looking pretty much perfectly towards that one so this is working but for some reason the scale in here is a bit weird if i put it on 50 you can see that it is indeed working so right now it is working although once again the axes are slightly different depending on the bone so adding 50 on the y over here on this constraint adding that apparently adds here and left to right so if i'm looking left and right you can see it's always looking slightly to the right so here if i put minus 50 on the x now it is indeed looking above wherever i put the target so for example let's say you want the character to look towards a really tall something you can put this on the base and simply add the offset so the scale over here is very strange but it does work exactly as in them next up over here we've got the constrained axes so this is which of the axes will be affected by this constraint for example right now if i hit on play and if i take the target and i put it somewhere right next to the bone you can see how the head is rotating like that so left and right way too much let's say you only want the head to actually go left and right and not like this then over here you could disable the axes so for that one that would be the z axis and now if i try putting it on that same place you can see yep the head no longer rotates like that it only goes left right up down it no longer shifts to the side like that or for example let's say you only want it to look up down and not left right then for that case you would disable the y axis and yep now the head doesn't look up and down but it does not look left and right and the final one we have here are the rotation limits so the minimum and the maximum so for example a normal human head usually cannot rotate 180 degrees so this is not humanlike behavior usually the head stops roughly around there so roughly 90 degrees that's pretty much how much your neck can actually rotate so you can set it here for example say go from minus 80 to plus 80. and now if you take this and put it straight behind nope once it gets to minus 0 plus 80 then no longer rotates more all right great the next thing that we see is over here the constraint has a certain weight and then if you look in the rig itself the array also has a weight this is how you define just how much impact this rig or this specific constraint has on the final thing so for example let's say the goal here is for this character to look at an object so we would place the target directly on the object but then let's say that we only want the character to look at the object when close enough well we can easily do that by modifying the weight so if the weight is at one then it is indeed looking straight towards the object but if the weight is slowly going down to zero then nope now it's just playing the normal idle animation so the character would be like this then as the character moves forward and approaches the object then you would slowly increase this one and yep now it's looking towards the object so that's a super simple example that adds quite a bit of immersion to your game and it's also super simple to do so let's see how we can do that through code over here let's make a simple csharp script call this look at object animation rigging and now for attaching the script let's attach it directly over here onto our ring okay so now here the only thing that we need is a reference to that rig component which also means we need to find out where this rig class exists if over here if i just do a private void awake and unawake i try to get component of type rig if i just do this then nope does not work it does not recognize what is a rig so that means we need to find out how we can access this class and actually cover that in another lecture i covered how you can find any class for any tool line feature definitely go watch that lecture if you haven't seen it so here you can just right click on the rig and go into edit script and when you do yep it opens up the actual script so with this we can now see that this one is inside the unity engine and missions rigging namespace and then the rig component itself is named right so all we need to do is add this using so over here just add using that and there we go now we get our rig component okay so with this let's just make some simple code for modifying the weight okay so here it is some very basic logic so as i press the t key it's going to set the target weight to one and as i press the white key it's going to set it to zero then i'm just using math.lab in order to have a nice smooth interpolation instead of being instant so that's it very simple logic let's test so here we are and there's the character playing the normal idol animation now let's say the character approaches a certain npc and i press a button and yep now the character is looking towards where that character would be now let's say the character moves away and yep back into playing the normal idol animation just looking forward so you can see how easy it is to play around with all of your constraints through code by just easily playing around the weights this simple example alone is already great for adding that extra bit of polish to your game okay now let's build another very common example for ik let's make some foot placement here is my character again and again let's add a rig so go into the menu rake setup okay automatically adds the rig all right now inside the rail let's make our game object so create a new empty game object let's call it foot ik and then go into that component and in this case we're going to use down here a two bone ik constraint so this one as you can see takes a root bone a mid bone and a tip bone so for a leg this would be the hip and then the knee and then the foot and if we were to use this on an arm then instead this would be the shoulder the elbow and finally the hand now there's also a really useful tool for this component instead of having to assign all of these and create the source objects you can just start by assigning the tip so in this case we want the leg so let's select this one right here so we've got our right foot so just go in there assign the right foot onto the tip and then right click on the constraint itself and then down here auto setup from tip transform and when you do that yep it automatically fills up on the other ones so it goes from the tip and essentially automatically chooses the two parent game objects above it so you've got the left foot then we've got the leg and right a point so you can see the foot down there the leg that's that bone and that bone okay so all that is correct and it also automatically creates a foot ik target and a hint now the target is where we want the foot to actually be placed and then for the hint this is kind of a soft target meant for the middle joint so in this case would be the knee and if we were playing with an arm that would be the elbow so based on how humans work you would want this one to be in front since human knees generally don't bend backwards so you would place this one in front and then the target down there by the way this one is also optional so you can choose not to use the hint and if you don't assign it then essentially the animation rating system will try to guess where the knee should bend to okay so that's pretty much how easy it is to set this up now again we can use down here the really awesome gizmos so let's place one on the target for target let's go with the box and for the hint over here let's go with maybe a locator effector okay so here we've got the target for the foot and over there we've got the hint so just like this with this very simple setup so all we did was assign the tip and then use the menu so just with this if we hit on play and you have just with this as you can see it's already working now this specific ik also takes the rotation of the final object into account so that is why the leg over there the foot isn't looking very strange so just rotate it to make it make a bit more sense okay so like that the foot is looking kind of normal and again like you see that effector the hint is used for where it should bend so right now if i move the leg like this then obviously it makes sense so the knee is bending correctly but if i put it above then that goes backwards so that's essentially how the hint is used to make this so in the case of a humanoid that's pretty much all you need to do then over here you can see how easily you could animate just this final object and the leg would correctly move to match then of course from the side you can see that it matches up not just up and down but also from side to side and then over here the hint also has an impact going left and right all you need to do is just put it like this and yep there's another perfect leg so this is yet another super useful constraint the two bone ik constraint so this one as you can see is perfect for handling foot placement so for example let's say this character instead of being just on a flat plane it was actually on some kind of hill so in that case you wouldn't want the foot to be straight flat on the ground if it was a hill if it had something then you could easily apply some rotation and maybe move it a bit and that way the foot would match perfectly with whatever surface you're working on so this one is super useful or of course as you can see this one is just a two bone so those two bones can be a foot or it can also be an arm so you could apply this constraint onto an arm in order to very easily grab a dynamic object okay now let's build one final common example we want to make a weapon aim perfectly at a target over here is my character with a simple aim animation as you can see the aim is fixed so the character is just aiming forward now that's not very good you want the character to be aiming at an exact position not just a generic forward so let's see if the target was down here on the floor you wouldn't want it to be aiming in that direction so once again we can use animation rigging to take this basic static animation and make it aim perfectly towards any point so again we select our character and we go and set up our break so rig setup all right we have a rig now inside let's first make an empty game object let's call this our aim rig and then over here we're going to add a component and once again we're trying to aim somewhere so let's use a multim constraint so just like we did on the very first example now we need to set the constraint object now for aiming we're going to want to aim with the hand so let's use the right hand so let's go into our constraint and drag the hand as a constrained object and by the way as you can see the weapon is over here i've got a nice weapon prefab and it's placed as a child of the handgame object so as this one moves you can see that the weapon moves along with it so we need to do is rotate the hand and the weapon will rotate with it now again over here we need to play around with the aim axis and the up axes and again in order to identify which one you should be using here you can go ahead select the right hand and once again make sure that up here you're in local so you can see everything and over here we can see that the green one is the one painting forward so the green one is the y axis so let's go up here for the aim axis let's go with a y and then for the up axis we've got over here the red one that's the x but it's pointing down so pointing up we would want a minus x so up here put minus x and that's it now the final thing that we need is just our target so let's make an empty game object inside of this let's call it the target and just drag the reference and again let's add a nice effector okay so there's our target and just with this let's hit on play and here right away you can see the hand is indeed aiming perfectly towards the target so i can place the target anywhere and yep the hand actually aims correctly towards it so i can put it up down left right and yep the target is always perfectly aiming all right that's great also here's a quick tip if you want to verify that it's aiming correctly you can go for example on the right hand where we're moving and over here let's create a cube inside of it and then you just make it really thin and pointing forward so in this case pointing forward on the y so you can do it like this and really increase the y massively and you can see yep it is aiming perfectly so now as i move this yep you can see it's always aiming perfectly go up down and as always perfectly intersect so just a quick tip to ensure that it is aiming perfectly and if it isn't then of course you can either play around with where you place the aim target or again over here like we saw on the settings you can play around over here and add a slight offset okay so what we have here is indeed working so as you can see the weapon is perfectly aiming towards our position but of course it looks quite a bit odd right now the only thing that is turning is just the hand so the rest of the body is static the second hand is also static so just like this it's not enough looks still quite a bit odd just like in real life you wouldn't aim just by moving your hand you would actually move your entire body so let's do that on our same ring we can create another empty game object let's do the body aim rig so we're going to want to rotate the body and once again let's add a component animation breaking and once again use the multium constraint now for the bone this time we want to apply to the hips so let's see over here the spine so that's good so just select the spine and once again let's play around with the aim axes so make sure this one is on local okay so the four is the blue one so that's the z so over there fourth on the z okay and the up one is green that's the y and yep that's already correct so on the source object let's use the exact same one so up here the target just assign it and that's pretty much it so let's see and yep now it looks quite a bit better so as you can see now the chest does rotate to face the target so it's no longer 100 static so pointing up down the chest rotates along with it so that's great however you can also see that over here the hand is no longer perfectly pointing so the hand is definitely not pointing in that direction so the hand is definitely looking very strange why is the hand looking like that now the reality is that this has to do with the order in which the system calculates the rotation for all the joints basically what is happening right now is the hands are rotating to face the target perfectly so just like before it's still doing that but the issue is that after the hand is rotated then we're rotating the body and of course the hand is connected to the body so by moving the body we are once again moving the hand so in the end after the body rotates the hand is no longer facing perfectly now the issue here is that we're rotating the hand first and then the body second when really we want to reverse we want to first aim by rotating the body and then we want to aim the hand perfectly thankfully that is super easy to solve the order in which the rigs are evaluated is based on the order in the hierarchy so all you really need to do is take the body aim and just drag this game object and put it above the aim rig so that's it now it's going to calculate the body aim and then it's going to complete the hand aim and yep there it is now the hand is indeed rotating perfectly so it's perfectly aiming towards the target and as you can see the body is also rotating all right awesome everything is working great however the body is also rotating a bit too much so this is kind of personal preference but like this the body is rotating perfectly so i guess if you want your character to look really mechanic then maybe this is it but if you want it a bit more natural then lowering the rotation by a little bit would probably be best thankfully that is something that we can easily do we can go into the body aim break and over here we've got the usual weight so you can just lower this down we still wanted to aim just not aim perfectly so maybe let's say 0.7 and now as we move the target yep the body rotates just not perfectly so it rotates just enough to be natural once the hand still points perfectly all right great now there's just one last thing that we need right now the chest and the hand they are rotating so they all look great but of course the other hand is not moving at all so that looks very strange the character is supposed to be holding the front end of the rifle with this hand once again we can solve this with another constraint let's make another one so another empty game object what's called the second hand rig and over here we are going to add an animation bringing we're going to make a two bone ik constrained so just like we did for the legs now set it up once again we can just set up the tip so for this one we're going to want the other hand so let's select the left hand okay so let's go into this one select the left hand put it on the tip and then once again use the super useful tool so auto setup all right and it automatically creates our target and our hint now for this we want to grab directly on the weapon so let's take both of these game objects instead of being child of this object let's make a child of the right hand okay and now we just need to position them so let's put them right on the hand now we just need to play around the position so let's hit on play and yep as you can see the second hand is there so now it's really just a case of rotating this one to where it makes sense and then same thing for the hint we want the elbow to rotate from the other side okay so when it looks correct we can just copy the position on this one so let's select the target and over here you're going to transform and just copy the component then stop playing then select the target and up here right click and paste component values and now it should be placed on the correct place and if we hit on play and yep the second hand is there and let's just play around the hint so let's put it slightly there so that's how the elbow should bend and once again just right click copy this one and paste it back all right so here is our final result we've got our target i can put it anywhere and as you can see the character is always aiming perfectly so i can move up down left right and everything aims perfectly so the body rotates the left hand the right hand all of them rotate and everything aims perfectly and again keep in mind that the animation itself is just a simple static animation pointing straight ahead it's the animation rigging system that is overriding the animation to make all of these bones aim perfectly towards the target so you can put it anywhere and always aims perfectly then of course you can combine what we'll learn here with what we learned in the animation avatar video in there i teach you about how to use avatars in avatar masks to make essentially a separate layer from the upper body and the lower body so that's how you could make the upper body exam like this so just rotating aim perfectly and then leave the lower body playing an idol or a movement animation and just with that you would have a very good character aim controller so here it is really nice extremely useful the character aiming perfectly now let's see a few more things that this package can do so far we've been looking at how it's used to dynamically apply changes to the animation that's one of the best use cases but this package can also be used to modify any animation you already have so there's a way to modify the actual animation itself rather than making it dynamic meaning that you can essentially bake the constrained motion directly in the animation that way you're not spending any processing power running the rig so here is another scene from the official samples this is the twist chain so it shows a twist chain constraint and on the animation as you can see over here the only keyframes are for the root and the tip so these objects are the only thing that's animated and then the animation rigging package decides how to move all these cubes that make up the chain now let's say you want this exact animation every time maybe you're making a cutscene animation and you don't need anything dynamic if you don't want it to ever change then there is no reason to spend processing power running the animation rating package so instead you can make this exact animation directly on the animation itself to do that just select the animation over here on the animation window and make sure you have a duplicate so you have a backup if you need it and then you can select the root and then you can go into the rig builder and right click and over here you see this option transform motion to skeleton and if you choose it and yep it automatically created all the keyframes for all of these objects so if i hit on play i still get the exact same animation although right now you can see that over here the rig weight is set to zero meaning that this rig is no longer used so this whole animation is baked directly into the object themselves and in order to bake like you saw we can do it over here on the rig builder so select the object on the rig builder you can do this but you can also do it over here individually on each rig or even individually on each constraint so you have all those options for baking and after baking you can even delete all the rig components so you can delete them on the animation itself delete all this and then just here to delete the rig and go into this one delete the rig builder and if you hit on play yep there you go you can still see the exact same animation everything works perfectly so this is another super powerful use case for this package you can essentially modify any animations you already have however there is one pretty important limitation with this utility it does not work on humanoid characters so over here back in the previous scene this one is using a humanoid rig and if i right click nope those options are grayed out however on the forums i did found a slight workaround if you absolutely need it according to this official response the bidirectional baking on humanoid characters is not on the roadmap but as a workaround you can use the fpx exporter so using that apparently you can bake the constraints back into a generic rig as opposed to a humanoid rig and then it should work and then reimport it back as humanoid so if you absolutely need to do exactly that then maybe this is the way to do it okay so we just saw how you can turn a constraint into an animation but you can also do the opposite you can turn an animation back into a constraint so here is the animation that we just created but the rig is not active now you can select the constraint itself and right click and this time transfer motion to constraint and if you do that and you could apply that motion back over here onto the constrained objects so the root object position rotation same thing for the tip so now you can once again delete all of these ones that were created previously and if you had on play and yep we still have the exact same behavior as previously so as you can see you can go one way or the other way alright so that's the animation rigging package as you can see it's full of features this one is perfect for when you want to apply dynamic modifications to your animations so as you can see it's perfect for dynamic foot placement or aiming exactly at where the player is aiming or even some other things like for example grabbing a moving object or maybe making a character touch the door while going through it this is an excellent package that will make all your animations feel much more natural alright so this was a lecture from my ultimate in the overview course there's lots more explaining tons of things like shadowgraph similar definitions animation avatar the video player and so on as well as many niche things that i couldn't possibly cover in normal youtube videos go ahead and get the full course and learn how to master all the unity tools and features to help you make better games faster