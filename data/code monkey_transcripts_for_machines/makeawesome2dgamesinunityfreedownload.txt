hello and welcome I'm your Cod monkey Unity CI tools have massively improved over the past few years they've already been used to make several gorgeous awesome games notable examples include games like cuphead Hollow Knight Among Us or even games that makes 2D and 3D like Dave the diver or comp the lamb to help you make games like that Unity has just released an excellent brand new sample with all of their 2D tools you can get it for free from the ssur so check the link description alongside the sample there are also various blog posts help you learn and use all of these awesome TD tools that has you can use studio lights and normal maps to make your game look really excellent you can add shadows and day night cycles then you can build worms and lots of logic using these 2D to Maps next you can use Tod rigging and AK to set up your character with bones you can use the PSC importer to easily import your characters and animate them inside unity and finally you can learn all about how to use the VFX ra to make awesome 2D particle effects so let's inspect this sample and read all these articles to learn about all of these awesome 2D tools that exist nowadays there are many of these that you might not be familiar with and might be incredibly useful to you if you're working on 3D games for me lately I've been working mostly on 3D so a lot of this has been new to me and I've already learned quite a lot from this sample also this video is sponsored by unity check the links in the description to download the free sample and read all the Articles there's a ton of info on all those articles so here I'm just going to cover a quick hand level overview of all this so do make sure that afterwards you check all these articles and you read through them yourself there's time SS in the video if you want to jump ahead okay so here I've got the project load into Unity there's nice main menu and then it jumps right into gameplay so it starts off on this really nice inside scene right away you can see a bunch of really interesting Dynamic lights you can see the light effects on the character you can see the character rotates as I move the mouse you can see the timer the coins menu and so on and of course if we go down here we can go into the exterior and if there you go there's a really nice exterior so we got a house a really nice Pig again the time keeps going and down here we have a really nice Farm the game is basically a mini farming mini game so I've got a bunch of tools down here for example I've got this hoe I think so I can go down I can I don't know prepare the land whatever this means I can water some plants and I can take one of these seeds and just plant a bunch of stuff so let's plant what is this this is wheat yep let's plant it then using this little basket I can start harvesting some things and yep I'm picking up a bunch of things and that one is already starting to grow and some carrots over here and also note how the lighting is changing so this has a really nice day night cycle and again note all the rim light effects of the effects making it look really nice and then at night there's also a bunch more Dynamic lights so you can see over here this Dynamic light moving and moves around so it looks really good then up here there are also some buttons to control the weather so this can be nice clear skies or we can enable some rain or even some really intense rain and lighting effects so there you go look at that it looks really gorgeous so some really nice particle effects on the background there's the rain falling down of course it's all being affect by light so everything looks really gorgeous really nice all of it nicely animated and I can walk around I can explore this I can see a bunch more effects there's a bunch of water there's also collisions and so on and over here on the market then I can sell a bunch of things so let's sell a bunch of wheat a bunch of carrots and let's buy a bunch more seeds and so on so I can do this and then I can continue so let's pick up some more wheat and so on and as you can see it's a really nice really complete mini game so right away you can already see quite a lot of stuff you can see how it's got a to map in the background you've seen all the lighting effects you've seen how they interact the lighting interacts with the character in different ways all the animations all the interactions the particle effects and so on so yep that's pretty much how this is a really nice really cool sample showcasing all the unity 2D tools honestly playing through this one really makes me want to make a stepbystep course on making a farming mini game kind of like this something like stard Valley I'm currently busy working on my upcoming steam game d Guardians by the way go ahead and addit your wish list but after I finish this game I do want to get back to making complete course so don't let me know if a course like this on making something like sard Valley something like a farming Min game if you'd be interested in that so anyways yep like I said said this is a great sample a great very functional miname as you can see all the great 2D tools being used and the main one really is lighting so let's begin with that one there's a really article SL tutorial that goes into a lot of detail over how all of this works as you can see this is insanely detailed so like I said in this video I'm pretty much just going to cover an overview but definitely do make sure that you check the links and you go through them in detail one by one there's a ton of info here so if you want to make 2D games definitely spend some time learning all about this starting off with Dynamic lighting now some of you might not be familiar with the fact that Unity actually has 2D specific lights if you're making a 2d game you should definitely use these and not the 3D lights over here in the inspector when you go into to add some object you can go into light and over here you've got these up top These are 3D lights and then down here these are the 2D specific lights if you don't see these that means you probably don't have the 2D packages installed so over here make sure you have these 2D packages and then of course make sure you are using urp and make sure you are using a 2d renderer with that you should be able to see the 2D lights of all these types for these ones free form is basically a two light that can have any shap shape you want by the way another quick tip over here on the search you can press T then colon and then you can write some kind of type so for example over here I want to see all the lights so I'm going to type light 2D and Y there you go I can see all of the lights that exist in this nice demo scene so for example here is a free form light and this one free form has a certain shape and you can create this shape on all kinds of vertices this is free form then you have Sprite lights these can use any Sprite you want for example over here the Street Lamp this one has a sprite light and you can see over there exactly what the shape of the light is so it basically takes a Sprite and use that as a light shape then you have spotlights these are super basic so these are your standard lights that hit a certain area so as you can see that is a basic Spotlight and then you have Global lights this one does not have any shape this one simply affects every single object on the world also when using to the lights it is important over here to look at the Target sorting layers this is which layers will actually be affected by this light for example over here if I move this light you can see that it does affect the background but if I put it over there near the character you can see it does not like the character whereas if I modify this one to include another let's say the objects and I move it over there and yep now it does indeed light up the character also another very important part about lights is make sure that your material is using a Sprite Shader so go into any Sprite runer you have and make sure that on your material you're using a Sprite lit material you can check out the Shader and make sure that you are using a Sprite lid Shader if you're not using this 2D Shader if you're using the regular one just by urp that will not be affected by two lights then to take your two lights even further one thing you can add are secondary textures this is how you can add this nice little Rim lighting by default the entire Sprite won't be lit but by using secondary textures you can make sure the light only affects a certain part of it to use to the textures you basically just go into your texture map so over here this is the texture map for the entire character and over there on the Sprite import settings we can see that this one is being imported as it to the Sprite and we can open up the Sprite editor and over here we see all the body parts so how that is set up and if we go on the top left corner over here we can go down into secondary textures and you can see that this texure does have two secondary textures it has a normal map and a mask map then if we click on these we can see how these are set up you can see the normal map here with these gradients this normal map this is how you get that almost 3d effect where the light hits different parts of the Sprite differently if I grab this light and I move it around you can see a pretty big difference look at how the Sprite is lit depending on where exactly the light is the other map you can apply is a mask map so masks are how you control where the lights affect the Sprite and specifically over here on this game the mass map is used as a rim light you can see that little Rim lighting over there on the top of the hair you can see how that one is different from the rest of the Sprites that really helps the readability in the game itself as to how you make those normal maps in the article over here they mentioned several options if your workflow involves 3D modeling something before creating the Sprite then doing those should be pretty easy to generate if not then apparently there are some tools that can help you build them now I'm not familiar with any of these so I can't speak to the specific process but regardless of which of these tools you use in the end you probably want to have an artist manually paint the lights and Shadows for the really important Sprites like the main character you probably want an artist to manually go ahead and modify each generated Sprite to make it look exactly as you want it now something really important in this sample is the day night cycle this sample contains a really awesome script that also contains a really nice custom editor where you can easily modify everything to see the change you can see all the various lights that they use as well as all the gradients basically the way they make it work is with a global light and a directional light now technically in 2D you don't have a directional light so the way they actually fake a directional light is simply by using a regular Spotlight with an angle of 360 and then they simply rotate where exactly that light comes from so over here you can see that inside the main camera there's a lights Rotator this is an empty game object where inside of it they've got all kinds of day and night lights and then the day night cycle script that one basically just rotates this game object you can see over there the Z rotation you can see it rotates and if we select both these we can see day light and yep you can see that it rotates up and down and the NightLight pretty much does the opposite so this is a really clever way of how to handle on directional lights even though the 2D system doesn't technically have directional lights this definitely a really clever approach personally I never thought of it but obviously it makes a lot of sense a spotlight that you move around pretty much acts like a directional light so if you'd like to implement a day night cycle into your own 2D games I highly recommend you download this sampl and look at this script look at how all this set up I think this looks really nice the way they have multiple lights with multiple mask and over here using the gradients I think this looks really good and the other important thing related to lighting is obviously Shadows now there are multiple ways to add Shadows one way which is somewhat counterintuitive is to actually use a light that is how they handle the shadows for this little building again in 2D this building doesn't actually have a shape so in order to create this shape they made a free form light and then they simply tinted that light and black another technique you can use are 2D realtime Shadows so there over there the Shadow on this little Barrel as I move it around yep it has a perfect realtime Shadow adding this is super simple you just go into any Sprite and you add the shadow Caster comp component then you can addit the shape in order to modify the shape that generates the Shadow and they also have a really excellent tip for how to apply Shadows to your character how you probably do not want to add Shadows to the entire character itself doing that would make it look quite weird so instead just add it to De feat and like this it looks really nice you basically just go inside the field bones and you add the same Shadow Caster component although these Shadows these are actually pretty harsh and infinite as you can see in the article they essentially are better suited for night scenes and not really for daytime scenes however during daytime you still want some shadows in order to make your game look good so for that you can essentially use fake Shadows here in the daytime we can see how they made those fake Shadows so you can see over here this one this Shadow for this tree you can see how it rotates around and this Shadow is actually technically just a light it is enlightened in Black this one is a sprite light so it has this little Shadow Sprite and then the day night cycle script that one simply rotates this Parent Game object again these are not perfect to the lights but this method looks much better during the daytime and coming back to the shadow for the house over here as we saw in the article they basically use a free form light but if I modify the time you can see how the shape actually changes in a really nice really smooth way this yet another thing that you can take directly from this really nice sample basically they have a really great script here inside the light 2D warehouse and it's a script that they call light interpolator so basically inside they've got all kinds of free form lights these have all kinds of points and then they basically use the script in order to generate a light Shadow a free form light shadow that way interpolates between all these various frame points and that is how you get this really nice interpolated free form Shadow and one more nice tip is using blob Shadows so for things like the character for that one during the daytime you probably don't want a hard Shadow so you really just want a simple Sprite right to feed the character it's a simple thing but it looks really great and that's pretty much what all 2D games use now when it comes to lighting one big concern is always with regards to Performance especially if you're making mobile games so this article has a bunch of tips to help you in that regard the main one that you can use is really just use a frame debugger this lets you basically see how each frame is being rendered that can really help you figure out bottle necks in your GPU rendering down here you can see all the various tips make sure your lights are batchable try to keep the render scale as low as possible minimize the number of Shadow casting lights on screen this is probably the best one that you can easily modify also minimize the number of blend styles again there is a significant cost in all the algorithms that make up the blend Styles or simply adjust the max number of Lights okay so all of this is a t info on the 2D lighting system then another tool that is used heavily in this sample is the 2D T map again there's another really detailed article with tons of info on making art and gameplay using to the T Maps I covered a simple tutorial on how to use the T map some time ago basically you can create a Sprite asset you can create tiles by slicing some Sprites then you can easily place them in a Unity grid using a simple brush then on top of that you can add collisions you can make more tile maps and build more complex things which this article covers so here in the sample we we can see all the ti Maps they're all in here under this grid game object so we've got underwater tiles water ground base and so on so tons of tiles for all kinds of different types each one of these uses a different TI map if we select one of the ti maps and over here we click on open tile pallet over here we can see all the various tiles that make up this stle map so as you can see we've got a water tile a bunch of grass we've got all kinds of walls ceilings floors and so on this is all nicely separated into various layers and the way you paint is you simply select the tile and then you simply draw on top of it so if you're making 2D games the to map is really one of the most useful things you can use and just like with lighting you can also use secondary textures so you can use normal maps in order to modify how the light impacts the various tiles one of the most useful things is the rule tile so this is how you can basically Define some rules and then easily paint and every time you paint it follows along with these rules in order to figure out which Sprite to select in this sample you can find all of the various R tiles over here so inside happy harvest inside art tiles and then you've got the various ones and most of these got a kind of rule tile and over here yep we can see all the rules so for example the first rule if you place a tile and there is no tile above it no to to the left but there is a dirt to to the right under to the right and under if so then it's going to select this corner tole then if it follows this rule it selects this one this one this one and so on so yep Ru Tils are super important super useful if you're using the 2D to map definitely make sure you'll learn how this to works it's actually pretty simple and super useful definitely Mak selecting all of these round Tils much much easier you just Define the rules and then easily paint and everything looks correct here in the article there's a really nice explainer on how all the various sound maps are structured how they separated them and why they did it so why did they make in underwater tiles water and so on and actually in here in this article I learned about one thing that I did not know which is the game object brush I did not know that this existed this one apparently lets you use a brush like you use with any of the time ups but instead of painting tiles you can actually paint regular game objects this is something that I've seen being done by a bunch of tools on the osur but I I didn't know that Unity itself could do it so I just learned something new that's right one area where it's really useful to spawn separate objects instead of just one towel is for example for dealing with sorting orders if you put one town map then the entire town map won't have the same sorting order but of course if you have a tree over here and you've got another one down here you want those to be on different sorting orders in order to show up one above the other one so for objects that are not directly painted on the floor for those you probably want to use a separate object and using that game object brush is super useful to place them easily however TI maps are not just for visuals that's the main thing but it can be used for more than that like it says here in this article you can use a t map API in order to handle all kinds of gameplay in this game which is a farming game for example the ground to map this one contains some logic based on the S Tils to indicate where the player can dig and pl seeds you can inspect the terrain manager in order to see all the functions that it uses to interact with the to map API in order to read the various things and update the tiles that one is placed over here directly on the grid game object here we have the terrain manager and in this script we can see how it has references to the various T maps and then it's using various functions like the ti map. set tile in order to modify a certain tile on a certain position so if you want to learn how to handle gameplay directly inside the T map make sure you check out this script although personally I must say for me when I want to handle some logic inside of a grid personally I really just use my own grid system which is really made to use generic so it feels much more adaptable but if you just want to use the builtin into tell map then definitely look into this one to figure out what you can do with it then you have another set of tools that was used heavily in this sample are the 2D rigging and ik tools again there's another excellent article super detailed exactly on this topic this one is really insanely detailed if you've never played around with the 2D bone tools and Sprite swapping like for me I haven't then I highly recommend reading through this entire article it all starts off obviously by drawing the character properly by drawing the body part separately now for this you can draw the body in really any image program but if you use Photoshop then the PSC import can be extremely useful here I have the character PSC file select the unity and if I open this Sprite editor look that all the body parts all neatly separated however here is a file open up in Photoshop note how all of the body parts is are on placed correctly except for the hair that one for some reason is appearing in front of the face but everything else on the arms and legs and so on all those are placed correctly and note how they are all on separate layers all on separate folders the old way of drawing some spreadsheets would be to draw them manually separated so you draw one arm here one leg here one foot here one hand here and so on drawing it like that is really tricky to make sure that everything fits correctly so this is obviously a much better method and if you use the PS import you can do it EXA like this place it on separate layers and then Unity automatically separates all of those layers into separate parts makes them fit correctly as tightly as possible and automatically creates individual Sprites out of each body part so just as soon alone is insanely useful personally I remember trying to manually draw Sprite sheets quite a long time ago and it was all such a huge pain to draw them manually so being able to automate this process this is super awesome if you make 2D games definitely make sure you use the PSD importer so with this here we have all the separate body parts now for this game it's a 2d top down game so they opted to go for just four directions as you can see it's up to you to decide how many directions you want to have obviously the more you have the more responsive your game looks but obviously a lot more work to create all of these individual directions as opposed to just these over here for the Sprites we can see we've got the head front the head back and the head to the side and for the other side they simply invert this one then note how they also Drew various hand poses these are used in the animation which I'm going to cover in a bit alongside this section is something that we've already seen which are the secondary textures so we can see and Yep this one also has a normal map and mass texture this is how we can get those really nice lighting info and then here in the article here is the really awesome part rigging in the Sprite editor this is how you can very easily create bones directly inside of unity so over here again selecting the PSD character here is the entire character and on the top left corner we can go down into the skinning editor and up here we can see the skin for our character for our mesh along with all the bones and what objects they affect this bone tool is really super powerful using this makes building 2D animations so much easier than using Sprite sheet animations adding bones is really easy which means you can set up all kinds of individual bones you can really go super detail and make sure to animate just the ears the eyes and so on they also added bones just to the eyelids the eyebrows and so on so using this tool building something like face animations that is so much easier then after assigning bones there's a button to automatically add some geometry you can play around with this but obviously don't go way too crazy otherwise you end up with a million polygons and once the geometry is set up then you can play around over here with the weights and you basically just select the bones and then draw directly on the Sprite so for example double click over here on this bone so on this shoulder bone right now it's obviously only affecting the right shoulder but if I want I can paint the left shoulder and there you go now it affects both them so it just takes a bit of work in order to go individually by each bone in order to paint exactly where you want it and everything behaves perfectly when you have everything set up correctly you should be able to play around with most of the bones in order to get any animation any pose that you want this character is already really nicely animated so you can see how very easily I can build all kinds of interesting animations interesting poses and everything works great then of course one huge benefit of bone based animation instead of handdrawn spreadsheets is you can easily apply the same animation to multiple different characters in this game all the characters share the same animation despite having very different visuals you can do that using Sprite swap which lets you use the same bones or animation but swap these Sprites on top of it all the thata is stored in these various Sprite Library assets so this one the character itself has the Sprite Library using this asset and we can inspect it here as you can see this one has both caries and labels this one is the dummy base Herer so they set up this base Sprite Library acid with the nose from the front the side the ears and so on they set up all of these and then they basically just extend them in order to make these various other ones so for example here for the head for the Farmer they simply use a different reference to a different Sprite with all of that here is the character and in order to swap out the character really just swap out over here the Sprite liy asset so I swapped that out for the farming Sprite library but for some reason this one doesn't update immediately but if I play the game yep there's my completely different character and if I want to change it just swap out the Sprite Library asset and yep there's another character and there's another character again all of them sharing the same animations but having some really nice different visuals and of course for the animations these are set up in the regular animator you create animations by modifying the bone positions so pretty simple just like you would normally do and the animator itself also has an interesting setup note how they use different layers for both The Head and the base animations also note how this little a here this means that this this means that this layer over here the blending is set to additive meaning it adds on top of all the other animations then the base layer has the various movement and action so w watering eating and so on and finally for the last layer flip this one just has two animations face right and face left and if we go into the character and we inspect those animations we can see that really all they are doing all they are recording is over there the scale. X so on face right that one is on one and on face left that one is on minus one so they really just modify the scale. X in order to look left or right and then the base layer works on up the flip layer and the head layer on top of that now for building animations like we saw you can just use the regular animat window just manually move all the limbs all the bones and everything will work correctly or you can also use ik which is inverse kinematics basically this how you can move just a hand and then it will automatically move the lower and the upper arm in order to place them in a position where it makes sense for the hand to reach that point using is always really awesome I already covered the tool that is used for making it in 3D and over here as you can see that tool also exists in 2D this one really helps speed up the animation process significantly the way this works is over here the prefab character base this one has an ik manager and as you can see this one has all kinds of limb solvers so let's see this one the arm right limb solver and if you ever Ed any ik tool then this should be pretty familiar you really just got the effector which is what is going to be affected by this and then you've got the target so the target this really just an invisible position and now if I move just as Target look what happens to the rest of the arm as you can see everything moves correctly in order to make sure that the hand always places exactly where I'm targeting so you can see how it saves a ton of time to be able to animate just this one target instead of having to animate every individual bone to make sure it makes sense and of course you can also make this Dynamic meaning instead of controlling the effector with a static animation you could simply control it through code to make it grab a dynamic object or something like that exactly like I covered in 3D in a previous video you can do the exact same thing with this 2D tool but remember that while using bones and ik is indeed super useful sometimes a simple animation is more than good enough for example if we look at the lamp we can see how the lamp over here has a simple animation just swinging left and right so for these kind of use case you really just need an animation so not even an animator just the old school animation component it is super simple but of course works great for the super simple use case then yet another animation you have are just simply flip book animations so for things like splashing water or these kinds of effects these can be super simple flipbook animations that are simply played by a simple Shader and speaking of shaders that is obviously something that always gives some excellent polish and for that there is yet another super detailed article that is coming soon all about 2D special effects with the VFX R and shade graph which again some of you might not even know that VFX gra already Works in 2D when it came out it was 3D only but in a previous version they've already added 2D support and if this sample in all these examples is enough if you want to learn even more about in2d there's even a a bunch more links you can check out the previous excellent 2D samples one of them is the Lo script this one has tons of interesting particles lots of interesting stuff and then you've got the dragon precious demo this one has tons of bone animations Sprite shapes and lots of stuff I also made a video doing an overview on this one and for more ebooks there's one all about 2D game art and animation there's one an introduction to urp for advanced Unity creators I also made a nice video overview on this one if you got a book all about hrp just in case you want to push Unity to its visual limits and you got another ebook this this one is all about Advanced visual effects in unity so if you want to dive deeper into the VFX graph definitely go ahead and read this one all right so that is the latest official Unity 2D sample showcasing all of these awesome 2D tools to help you make awesome 2D games if you do want to make 2D games then I highly encourage you to download this free sample and check out all of these ebooks personally I've been more into 3D recently so for me it was great to read all this and get a refresher on all the 2D tools that un has it's really amazing how much un 2D has involved over the past few years when I started making games with un back in 2012 back then I was making 2D games but I had to use all kinds of weird 3D tools and make them look like 2D so it's really amazing that there are so many dedicated 2D tools nowadays nowadays thanks to all these aesome 2D tools you can make excellent games like the ones I mentioned in the intro so check the link description to download the s for yourself check out all these articles and read through all them thank you for watching and I'll see you next time