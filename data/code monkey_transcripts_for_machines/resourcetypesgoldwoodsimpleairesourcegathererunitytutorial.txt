hello and welcome I'm your code monkey and in this video we're continuing our resource gathering aai we're going to set up multiple resource types let's begin so we previously made our scene here we have two gathers I can click on either one to select them and when I have one gather selected I can click on note to tell more term on the gather won't go to that mind money take it to surgeon so what if there is a node nearby the one that he was or to mind here American Utley search for it goes there and mines but when there are no more he owes and reverts back to Anam okay great so everything is working so far but the resource type is currently hardcoded right now we can only support one resource type which in this case is gone so let's see what we need to do to support multiple resource types so let's go into our code now in our game resources class which represents our main resource Bank you can see that gold is hardcoded into every variable this is named gold going on and so on so let's begin by making an enumerator types so in here let's make a public in ohm and let's name it resource type an enum contains multiple specific values now we could define this in here or elsewhere in its own file for example but since a resource are part of the game resources it makes sense to put it in here to keep things nice and organized so let's begin by making gold and then let's also have wood alright so this in ohm is what we're going to use to differentiate between the various resource types now we could have an int for each resource type like we have for the golden here but in order to keep our code adaptable let's set up the resource amount using a dictionary so let's make a private static a dictionary now a dictionary contains a key and a value so for the key let's use resource type and for the value let's use an int and this will be a resource amount dictionary all right now we need a function to initialize our dictionary so let's do that now let's make a public static void init function this will be the basic initialization function for our game resources so in here and let's first make the dictionary so dictionary calls the new dictionary all right and now let's initialize all the keys and set them to zero so let's I don't throw all the keys in the dictionary and set them all to zero so let's do a for each resource time resource type in system dot and new get values of type of resource time so using get values we can cycle through all of the valid values of the resource type so if we add something else in here it will automatically side not throw it in here so when we're cycling through it let's just go to the dictionary and go to the key of our resource type and set it to zero all right so now let's remove the own integer since this is no longer needed but we're going to keep this implementation for now the cond amount and so on so in here instead of increasing the previous integer we're going to increase the dictionary resource type dotcom so let's do that and the same thing in here alright so as far as the outside world is concerned everything in this milestone works exactly the same it exposes this function and this function so everything internal changed but the outside is still correct so we can test to make sure that everything still works as previously with the way we have the setup we need to make sure that this function is called before anything happens now there are many ways to do that the simplest one is simply to go to the game Handler and before we do anything let's simply call the initialization on the game resources class all right just like that okay let's test all right so here's our scene so like the various and I can set to go there's have to go there they are mining mining and when they add to the storage yep it correctly works exactly the same as previously okay great so everything is still working but internally the game resources class is using a dictionary of resource types instead of a hardcoded int now let's change the functions and the event so back in our code here let's modify all of this if you're using visual studio you can easily rename something by hitting ctrl R R this won't automatically rename when this instance is used so in here we want to do on resource amount change rather than just in gone and the same thing in here so for this function lets you add resource amount and here get the resource amount okay again a quick test make sure everything works and yep there you go to someone's okay so now in these functions we need to know the resource type that we want to add so let's add a parameter for that so in here let's receive a resource type resource type for the amount add and I only get resource amount let's do the same thing and that resource type is obviously what we're going to use in our dictionary so now let's find where these functions are referenced if you're using Visual Studio you can right click and click on find all references and here we can see we got a reference in here and now it's red since we have to tell them what it is so in here we grabbing resource amount type don't and let's go back to the game resources and find the other reference for this one here is on our UI we have this reference which will also be using resource type comm all right so we change the name of our functions change their signature to support the resource type and modify it on the references so everything should still work so let's test yep there you go everything some words can select and tell them and so on ok great so now everything is still working exactly the same but we're one step closer to supporting multiple resource types so now let's go to the gathering I and up here as you can see we are also storing an integer for our gold inventory amount let's do the same thing we did on the game resource and create a dictionary to hold our resource time now let's make a private dictionary dictionary of game resources dog resource type and in this will be the inventory amount dictionary now let's instantiate it in here all right so we now have our dictionary being instantiated at zero now let's make a function for getting the total inventory amount let's make a private int to get total inventory amount and in here we're essentially going to calculate the nth total I'll start off at zero and then return the total now in order to calculate the total we're essentially going to do the same thing we did in here we're going to cycle through all of the possible resource types and increase the total by what is currently carrying of that time okay great on our inventory tax let's update with this so inventory amount let's store in here equals our total inventory amount and this is what we're going to test if it is better than zero then that's what we're going to this point okay so let's see where else we are using this integer so let's go down here and we are seeing if it is bigger than three which really means when the inventory is full so let's make that function make a private ball is inventory phone and in here we're going to return the get total inventory amount if it is bigger than three so now go down here and that's the function that we're going to use instead of using the integer okay great again down here we are using the integer and we grab a resource and for now let's keep grabbing just going resources but in here what's going to the inventory amount dictionary of the resource type dark gold and that's we're going to increase as previously okay and finally down here we need to reset the integers so let's make another function and we're going to call it drop inventory amount into game resources which one essentially called this line as well as resetting it back to zero so let's make that function so let's go up here on to our inventory code right there okay let's make a private toy drop them into the game resources and we're going to copy this line in here alright so let's go up there okay now in here what we want to do is again cycle through all of the possible types in our inventory and first things first we're going to add the resource amount to the game resources so in here the resource type we're going to add that based on the amount that we're currently carrying okay and after dropping it into the game resources let's reset the inventory amount back to zero all right so let's see if we still have any references to our total inventory and nope it's only in here so we can now remove this and see no errors are left all right great so we have successfully transition our gatherer from working with an integer to now working with a dictionary now let's test and everything should still be working yep there you go I can sum control them everything some compiles they some behind and everything some works you mind three drops three and yep there you go three six okay great so we now have the game resources supporting multiple resource types the gatherers also supported so the only thing left is the resource node itself so on the code for the resource node in here we have the constructor that we receive a transform so let's receive that transform but then also receive game resource or resource type of the resource type contained in this note so let's store it in here now on the grab resource let's return the resource type that has been grabbed so we're going to return a game resource to our resource type and we're going to return this nodes resource type yep exactly okay now let's also do a switch for changing the sprite renderer so in here if it is depleted do a switch on our resource type Caze gone then we do the same thing as previously and kaze wooden let's use a different sprites right here okay alright so we now have to modify together to make sure he grabs the resource type when he calls this function so let's go in here and here when we are grabbing this resource let's put this in a different function so let's go down here and make a private boy grabbed resource from node and in here this function we're going to call from up here after he finishes the mining animation and let's copy this and down here what we're going to do is grab the resource now that will return a game resources the resource type resource type that's what we've grabbed and that's what we're going to increase in our dictionary alright and after we do let's also update the inventory tax and that way we can go up here instead of doing all this we can just call this function when the animation is completed so this way we can easily do something else so in here we can make this switch on our resource node dot gets resource type won't make that function later and in here case game resources now resource type goal then you're going to play the mining animation if it is a wood resource type then play the animation wood chuck here is the resource node and here only to a Foley you're going to return game resources the resource type get the resource type and you're simply going to return this resource another resource type okay great so now the one thing missing is in here on our game handler so in here on let's instantiate a new resource node in this case this one is a gold node since it is on the goal node transform let's make another one for the tree no transform array let's I come through it and create them using the wood resource type all right so we now have almost everything correct as you can see the scene is still working okay great all right so now let's place a tree on our scene so let's duplicate the goal node I'm going to use this tree sprite in here okay great let's modify the box going either to be able to click roughly on the tree trunk all right like that let's go to the game Handler and drag the tree onto the tree no transform right all right and all it says and everything should be working with the tree so let's see all right so there he is he goes there and he starts chopping down the tree yep like that great all right so the only thing missing is in here as you can see he dropped but he gone did an update since that was not gone but rather that was wood so let's see that in here on the text on the UI and let's simply add wood underneath so just some very simple let's print the wood amount right underneath the gold amount let's put in here would grab the resources of type wood all right very simple and it should be correct all right here it is wooden gold ok great there's my gathers I can click on him and now if I click in there he goes he mines one two three the tree is now depleted he goes he drops in yep as he can see he dropped wood now if I click on this one tell him to go there and he's going to grab gold one two three he goes and yep there you go gone three wood three so there you have it we added support for multiple resource types we can now gather wood and gold but the code is set up in such a way that it would be very easy to add more resource types in the next video we're going to set up some very simple resource regeneration as long as you can download the project found the new tony's from unity code monkey calm if you have any questions post them in the comments and I'll do my best enter now subscribe for more videos and I'll see you next time