hello and welcome I'm your code monkey in this video we're going to make the adrenaline system from Assassin's Creed Odyssey the player gains adrenaline based on enemy heads and welltimed dodges in later videos we're going to use it for abilities like these parking kick alright let's begin okay here's my scene I have my Spartan character I can move them around there are some enemies that chase me and attack me and I can also attack them and I can dodge their attacks I can do a simple roll and dodge away so with this we have the base for creating our adrenaline system so let's check out how the code is setup over here is the player class it's pretty simple there are several states and on update it runs different logic based on the state so if the state is normal which means normal basic movement he handles the movement handles the movement by checking for the input and moving the transform then it also handles a Dodge by checking for the spacebar and finally it handles the attack which it simply test for the left mouse button click if so it looks for a nearby enemy if he finds when he damages him and plays the attack animation okay so let's make the adrenaline class so in here let's make a new csharp script and name it adrenaline in here let's first make it a static class since we only want there to be one adrenaline system and remove the mono behavior so the first thing we need is a certain amount for the adrenaline amount so a private static int for the amount then let's also make a maximum amount so a private static int for the amount Max and then we're going to divide the adrenaline by a certain number of bars essentially need to fill up an entire bar before you can actually use it so let's define a public constant for the amount per bar which let's say at 25 so essentially the amount needs to reach at least 25 in order for us to use it okay let's make now a public static void in it to initialize our adrenaline system so first set the amount to zero and let's calculate the amount max by the finding a certain number of bars so in for the bar amount and let's say two bars and we're going to define the amount max which will be the bar amount multip by the amount for a bar so in this case with two bars in each of them having 25 the amount max won't be 50 so now for some functions let's make a public static void add adrenaline and we're going to receive a parameter for the ad amount and in here we're similarly going to increase it by that amount so amount Falls equals ad amount and let's make sure we don't go over the max so if a month is bigger than a month max set the amount equals amount max okay and then let's do a debug pop up with the current amount just so we can see how much we actually have so for that I'm going to use the CM debug class which is part of the code monkey Tonys which as long as you can grab for free from unity code monkey calm so using code monkey and let's go down here use the CM debug to create a text pop up on the mouse position and that pop up won't simply say the amount this is just so we can see what is going on inside this class all right this is a nice starting point so let's go into the game handler which is our main script and in here and let's make a private void awake and on the awakened let's initialize the adrenalin system so adrenaline dot init and here on cert you can see we are setting the camera to follow the player and we are spawning an enemy every one and a half seconds okay so finally let's go into the player class and on the Hamel attack when we actually damage an enemy let's add some adrenaline so in here do adrenaline dot add adrenaline and let's give it a let's say three okay so let's test then we should see the popup whenever we attack an enemy okay here I am moving around if I attack nothing yep nothing happens but if I hit an enemy yup there you go you can see the various popups showing how much it's running we have and if I go up to a maximum of fifty yep you can see it doesn't go above the maximum okay great so now let's add some more functions to our adrenaline system first let's make a function to come like the number of film bars so make a public static int get film bar amount so this is meant to return how many bars we can actually use so the film bar is if the amount is bigger than the amount per bar so in here we are going to return the amount divided by amount per bar so if we have 25 then this one return 1 since we have one film bar however we have to account for when the amount is in between bars so in here let's do a math F dot for two int 2 for that value so essentially if the amount is 30 30 divided by 25 will essentially be one point something so we need 2 for that number to get a 1 and since in here we are dividing two integers together and let's first multiply this by a float to convert it into a float so if the amount is 30 this will return 1 if it is 20 to return 0 okay so let's make another function for removing a film bar so public static void remove film bar and in here we're simply going to remove the amount by amount per bar and make sure it's not under 0 if it isn't or 0 set it to 0 and now we can make our code a little less errorprone with a function that automatically tests if we can actually remove a bar so let's make a public static boom try remove film bar and in here we're going to first test if you get film bar amount if it is bigger than 1 then we can actually remove it so then remove the film bar and once we do let's return true to say that this function was successful if not then return false so you can call this function whenever and if we do remove a film bar it'll return true if not it will return false okay so our journal in system is beginning to take shape now let's add a simple indicator to show if we have an adrenaline bar that we can use so let's head into the editor and here I have the player game object let me add an in game object let's come with the adrenaline icon and simply give it a sprite renderer with a circle sprite so this is one will simply be our indicator to show if we do have a bar that we can use so let's make it a bit bigger and tint it and it should work okay so this is our indicator in case we do have an adrenaline bar film that we can use we're going to enable it when you can and the same only 20 we can't so by default let's start with it disabled now let's head into the player script and all the way up here on the awake let's first grab a reference so here make a private game object for the adrenaline icon game object and we're going to grab it in here by doing transform dot fine our adrenaline icon so using that game object on our update let's do the adrenaline game object that's set active and this will only be enabled if we do have an adrenaline bar so go into the adrenaline class and get the film var amount and return if it is bigger than or equal to one so if we have at least one bar filled then the adrenaline icon won't be visible if not it won't be hidden and now just for testing let's go here into the normal update and they simple if input gif key down let's say key code II so if we do press the II let's try to spend an adrenaline bar so do an if adrenaline dot try remove the film bar and if we do successfully remove it let's spawn a popup so again using the CM debug let's fire text pop up on the mouse position and say bar spent so this is just for testing to see if the adrenaline system is working later on we're going to remove this code so to recap we added some functions to be able to remove and get the number of bars that are currently filled we add an icon to our player game object and on the player class we are setting that icon to visible if we do have at least one film bar if not it is invisible and when we press the e key we try to remove that film bar and if we do successfully remove it it says bar spent if we don't have a film bar then this function return false and there won't be no papa okay so let's test okay so here I am as you can see the icon is currently hidden now I can attack him you can see the popup saying the adrenaline amount so it is currently at 24 now if I hit the next one yep there's the icon right there and now if I press E if there you go the bar was spent and again I can increase and I can go up to the maximum of 15 now I can press E to spend one bar and yep there you go I still can use another one and I use it and there you go again go up and so on okay great so everything is working perfectly exactly as we wanted so far now let's add some bonus adrenaline on kill and also on a successful dodge so back in our player class let's go down to the handle attack function down here we are testing the mouse button we are not looking for it closer than me and we are attacking him if we do find them so we are causing damage to the enemy and now in here let's ask if the enemy dot is dead if the enemy is dead then we have killed them so let's add a bonus amount okay so that is pretty simple we add three of adrenaline for every hit and if we do kill him we add three on the killer hit now for the Dodge let's go all the way up here to see where we are handling the Dodge which we are testing for the spacebar if so we change the state to dodging which acts as the animation we'll look for the keys to get the move direction and we simply play dodge animation towards that direction and we move him while he's dodging okay so in here when we begin to dodge we want to test if we actually dodged any enemies we don't want to give a bonus adrenaline if you are just spamming the Dodge around but rather we only want to give a bonus if you actually dodge any enemy attack so the first thing we need is the number of enemies within range so for that we need to go into the enemy class and make that function so in here let's make a public static list of enemy and we're going to call this get enemy list in range we're going to receive a vector3 for the position and they float for the range so here let's cycle through all the enemies so for each enemy enemy in the enemy list let's do a simple test for D distance so if the vector 3 dot distance between the position and the enemy get position if that distance is under the range then the enemy is enraged saying here we want to add them to own list so let's make the list of enemy this will be our return list and down here we're going to return our list and here if it is in range and then add them to the list alright so we now have a nice simple function to get on the enemies within range so now we can go back into the player and here after we begin to dodge let's grab a list of enemies near the player position so let's grab a list of enemy for the enemy lists which is on the enemy dot get the enemy list in range in range of this position and by a certain amount which we're going to call dodge enemy distance so let's define here it's long for dodge enemy distance and let's give it say about 40 okay so we now have a list of enemies within 40 units of our position so now let's cycle for each enemy on this list in the enemy list and I mean here we want to test if the enemy is attacking so if enemy that is attacking if the enemy is attacking then we do want to give bonus adrenaline so do adrenaline dot add adrenaline and let's give it also about 3 all right so that should do it let's test ok here I am and there's an enemy and I'm gonna hit him now I have 9 if I hit him again yep there you go it was too popups exactly on the same position but you can see that it trigger twice and gave me the bonus per kill only about 24 and now again okay great now let me spend the bar and now let's test dodge so let one of them get now dodge and yep there you go I got bonus and their dodge and yep and if I get a lot of them attacking up once and I thought yep I have pretty much maxed out all right great so there you have it we created the adrenaline system as it's used in Assassin's Creed Odyssey we gain adrenaline on enemy hits per enemy kill and per successful dodge in the next video we're going to use a journaling to execute a spartan kick as always you can download the project files and utilities from unity code monkey comm if you have any questions post them in the comments and I'll do my best answer them subscribe for more videos and I'll see you next time