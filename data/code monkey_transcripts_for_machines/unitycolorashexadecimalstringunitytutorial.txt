hello and welcome I'm your code monkey and in this video we're going to convert a caller into a hexadecimal string and back let's get started so here's my scene I have a game object in here with a sprite renderer displaying a white square and I have a game handler script running which has a reference to my sprite game object now in here I want to change the sprite caller into red so the way to do it is first of all grab the reference to the sprite renderer which is on the sprite game object getcomponent sprite renderer and then I go into the sprite renderer and set the color to a new color red green blue so 1 0 0 so the sprite should now be red yep there you go the sprite change the color to red so this works but I'm used to dealing with colors in hexadecimal values so I would prefer instead to be able to write something like ff0000 that to me is much more simple than using 1 0 0 so let's make some functions to create a color object with a hexadecimal string so first we need to convert a string into the corresponding decimal number to do that we can use a function in the system namespace dot convert and the way to and 32 of a hexadecimal value so let's convert FF from base 16 and this will give me a decimal integer so let's do a debug log and see what this says all right as you can see in the input it says 255 which is correct F F equals 255 all right so let's make this into a function so a private in hex to death and here I'm going to receive a string for the hexadecimal and I'm going to return this so convert the hexadecimal string into a decimal value now let's make another function to do the reverse so a private string that's 2 hex and in here I'm going to receive an int for each decimal value in order to convert back we can simply use to string with a format so return value to string and the format we're going to use is x2 which converts it to a hexadecimal representation with always two digits so let's go up here and test so do a debug log of doing hex to deaths of ffs and then a dead 2 hex of 255 alright so this one should print 255 and this one should print FF let's see and yep there it is 255 FF okay so we can now easily convert from a hexadecimal string into a decimal number now the commerce trout works with the normalized value and not with 255 so let's make two more functions to work with normalized balance so in here make a private string flute normalized to hex and here we're going to receive a float value so this function will receive a float between 0 and 1 to return the correct hex value let's multiply that normalize value by 255 and then use the previous function so we're going to return that's two tanks of the value x 255 F and do a math after round two ends so in here we're going to receive a value between 0 and 1 then we're going to multiply it by 255 so if we get a 1 in here then we're going to have a 255 in here we're going to round that number to an integer and then send it to this function to return the hexadecimal representation of that number all right now let's do the opposite function so a private float text to quote normalized and here I'm going to receive a string for the hexadecimal representation and I'm going to return in here you convert text to a decimal of this one so as you know this one will return between 0 and 255 so we have to do is divide this by 255 F so the return value of this won't be from 0 to 1 so let's test in here so in here this one should output 1 and this one should output FF so let's see give there you go 1 + FF all right so now we have all the helper functions to help us convert a hexadecimal string into various values that we can use in our collar struct so let's finally make a function to return a color object make a private color get color from string and in here we're going to receive a string for our text string and we're going to have a float for each color so float red is going to be a text to float normalized of the red portion of this string now this string will be a complete hexadecimal string so it won't have as you can see up here two values for the red two for the green and you for the blue so we only want to grab the first two characters of this string in order to do that go into the hex string and do a substring starting on index zero and going for a length of two so in here if this receives ff0000 then in here it will return FF so now let's do the same for the other color so you got red you got green and you got blue now red starts on zero and has two characters green starts on two and has two characters and blue starts on four and has two characters so we now have found three values in here that convert this hex string into normalized values all we need to do is finally do a return new color and use red green and blue all right so now up here we can remove the comments from here and instead of making a new color let's do get come word from string and give it at first FF 0 0 so from red and foam green should display yellow let's see all right there you go R square is yellow ok great so now let's make the reverse of this function so a private string you can get string from color and we're going to receive a caller in here we're going to grab the hexadecimal string from each color so strange red won't be float normalized to hex of color dot R which is the red value and it the same thing for the other caller so green and whoo all right so now these variables contain the hexadecimal values of that caller so for example red contains F F and blue contains zero zero so all we need to do now is return a string which is red for this green plus blue the plus concatenate strings so if red is FF and green is zero zero this will return FF 0 0 all right so let's go up here and test firstly to get color from string FF FF 0 0 and here get string from color I'm going to give it the same color which is 1 1 0 so we should be able to see both representations of yellow and yep as you can see here are the two representations of yellow you can see it's got one the red one the green and 0 in the blue and here same thing ffff 0 0 all right so now the only thing left to add is alpha support as you can see in here the Alpha is 1 since we didn't touch it so in here on get confirm string will receive a string in here we need to test to make sure that this string contains an alpha value so in here we're going to do if Tex string length is bigger than 8 if it does have 8 characters then it does have an alpha value so if it does have then we want to use that so we want to do alpha equals of the hex string starting on 6 but if it does not contain that then we want alpha to be a default 1f and down here let's return the alpha velm so this function supports receiving a string there is only six characters so it only contains red green and blue but also supports a character so it supports alpha and down here on get string from color let's add an optional parameter for grabbing the Alpha or not so let's say boom use alpha let's make it optional so set the default two phones and here if we are not using alpha then return what we were returning previously but if we are returning the Alpha we're going to return red green plus blue plus alpha and we are going to grab the Alpha value on cholerae all right so let's go up here and set the sprite to halftransparent so let's give it 88 on the alpha and do the same thing in here 88 and 0.5 F on the alpha so this fright should now be yellow and half transparent yep there you go it is in yellow you can see the transparency is about half you can see that 188 equals 0.53 and here it still says only the three color values since we didn't set the optional parameter so let's try that and here's that use alpha to true and now it should say yes there you go ffff zero zero eight zero so there you have it in this video we'll learn how to convert hexadecimal strings into color objects so we can easily use color strings in our code if you have any questions post them in the comments and I'll do my best to answer them subscribe for more videos and I'll see you next time