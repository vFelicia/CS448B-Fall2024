this can be as simple as doing a sphere cast however while the attack is happening the game is still listening to so that coupled with a certain detection fov hello and welcome i'm your code monkey a professional in the game developer and here i will react and analyze a gameplay trailer i will talk about how things work behind the scenes and how you could build them in your own games it's been a while since i've made one of these videos you can go watch the full playlist if you want to learn more about some other games in this case we're going to look at the elden ring gameplay trailer from e3 2021 alright so let's hit play the tarnished will soon return guided by grace once lost the golden order is broken to its core now the very first mechanic that we see is over here the horse summoning so one of the main differences between this game and the songs games is the fact that this one is meant to be open world so the horse is going to be the main way that you traverse through that world and it's also interesting to take a look at the method they use for summoning the horse now usually what most games do when you press a button is the horse's spawn off screen and then runs you so the game knows where the player is and knows where the player is looking at so based on the camera direction and the field of view you can easily accommodate a bunch of positions that are just outside of the player's view so in most games that's how you do it you would generate all of these various positions outside of the player view and you would spawn the horse on one of those random ones and then simply have the horse move towards the player however in this game since there is magic involved the horse is literally just summoned so over here the player just pushes a button and the horse magically appears now this is an excellent example for how you always have multiple approaches for solving the same problem depending on the theme and the various things particularly to your game then over here they show some mounted combat so this involves a bunch of interesting mechanics now based on what is shown in the video it appears to be a hold attack so down here we see the pointer grab the sword and then we see the sword actually go down and touch the floor so while this is happening the player is simply pressing down the attack button and when the attack actually happens the player simply releases so it's pretty simple to handle that mechanic you would just count up a timer using time.time while the player is holding down the button and then it probably has a minimum haul time so just checking if the time is above a certain amount and then on release of the times above the minimum trigger then you play the attack animation now another thing is for the hit detection this can be as simple as doing a sphere cast right around the player that would identify all of the objects within that area so for example the enemy right in there then you check if the object within the area can be damageable and if so then you cause some damage so that would be the seamless approach and another approach if you wanted extreme accuracy you would simply do perhaps a box cast with the exact same shape of the sword again both approaches that are valid just depends on what type of game you're making how accurate you want it to be so it depends if you're going for extreme realism or some rkd action so that's really just some very simple logic but again one of my goals with these videos is to show you how all of these aaa games look insanely complex but as you dig deeper you realize that all of these systems are relatively simple and something that you can definitely build in your own games what makes this simple action feel so good even in this simple 10 second clip is really the sound in the animation so the sword and sheets all the particles as it touches the ground the excellent attack animation coupled with the awesome punchy sound effect of those helmets put together are what really helps to sell the simple logic underneath in search of the elden ring then over here a very simple thing which is over here this creature as it attacks the player the player is walking and note how the player gets a tiny knockback so he defends and yep gets pushed back this is an example of a tiny thing that really improves your game adding a simple knockback is one of the easiest ways for making your game feel much more responsive this tiny action makes the game feel much more alive as opposed to having the player block the hit and nothing would happen of ambition thy flag then over here the player dodges this projectile so dodging is another thing that you can implement in many different ways so the simplest way is to simply make the dodge work pretty much just like real life so the player is right in here and they're moving over here to the left so they move very quickly and just by getting the timing right it automatically dodges the projectile hitbox so that's the hyper realistic way of doing things however another way to handle dodging and really the most common way is to add some sort of invincibility frames so you just define a simple invulnerability timer then when the player presses dodge you set it to a certain amount and then on update you're constantly counting it down then if the player is meant to take damage you simply check that variable first and if the timer is still active then the player is invincible so don't deal any damage now this is usually the better approach because it makes the game a bit more forgiving and doesn't require some perfect hitboxes always remember that your goal as a game developer is not to perfectly recreate reality instead your goal is to give the player a good time and letting the player do some death to find dodges always feels great by the way if you find the video helpful please hit the like button it's a tiny thing but it really does help thanks and speaking of dodges here the player does another one so on this one it seems like the player is still within the attack damage radius so right in there as the boss drops from the sky yep just like that so chances are they are really going for the invulnerability timer approach which usually that is indeed the better approach since it gives the player better control and a better feeling for the game they will fight and they will die then over here we see some horse jump pads now like i said the main difference with this game from the other souls games is the fact that it's open world and from software are known for making some very complex levels that usually open up with some new shortcuts as you progress so in an open world game it seems like these jump pads are solving that problem on a much greater scale they essentially let you traverse in large vertical and maybe also some horizontal jumps after either you get the skill or simply enable them to jump out they will die so a great movement mechanic that personally fits with the theme of the game then over here this jump attack looks really awesome so the player attacks and as soon as the attack ends the player jumps back and gets some distance from the enemy so i wonder if this is all just one attack or perhaps it's the player doing an attack then right after doing a dodge and the game combines both actions now how you would implement such a thing once again depends on the design you're going for if you want maximum responsiveness then perhaps you just triggered the jump back as soon as the player pressed the button however in doing so you kind of take away the risk of doing such a heavy attack so another approach is to make this attack and cancel so as soon as the player starts off the attack you cannot stop it however while the attack is happening the game is still listening to player input and then if the player happens to press the dodge button you simply queue up the action instead of triggering it right away now when using this approach sometimes long cue actions can also make the game feel very unresponsive for example while in midattack you decide that you really don't want to dodge but at that point the action has already been queued up so you can't stop it so the solution to that is to only queue up the action if the time from that action was taken if it is under a certain amount of milliseconds like 100 milliseconds before the dodge gets actually triggered you check if it is within the time and if so trigger the jump if not you just ignore the player input by doing that you would keep the heavy attack as meaningful but also allow the player to jump backwards with perfect timing without forcing the player to have some gunlike reflexes then over here we also see the player summoning so you hit a button and a real player joins your world to help you so that's a standard multiplayer connection as for the player visual here this is a simple for now shader effect so what that does is it adds some glow to all the various edges so of the edges of the mesh right in there they get a nice close it looks pretty nice and then just place it with a simple blue tint and looks quite ghostlike quite interesting then over here we see another approach of the dodge with invulnerability frames right here now this method also has the benefit where you can let the player dodge through the attacks which is always very satisfying so right in there the attack starts and the player just dodges straight through it so that's another approach you can take when you use the invulnerability frames method to be a lowly born playing as a lord over here we see a sneak attack it's a pretty common mechanic and it's actually pretty simple to do so for this one you know of course the player position and then you also know where the enemies are and you know the direction in which they are facing so that coupled with a certain detection fov and you can identify if the player is in front or behind the enemies so you just calculate the angle from there into the player and then you simply check with the enemies fov so for example maybe it goes from minus 45 to plus 45 and if the player is not within that so let's say here the player is on 80 degrees if so then he's simply not detected now sometimes depending on the game you might also want to add a sort of listening mechanic so if you wanted the enemies to be able to listen to some sounds by the player if you want to add such a thing then usually what you do would be just a simple sphere cast around the enemy and if the player is too close then the enemy would attack even if outside of the film division so that would be one way to simulate hearing but in this case we want some perfect sneaking to let the player do a massive sneak attack brandish the elden ring for all of us all right so there you have it that's my analysis of the elven ring gameplay trailer lots of great stuff here i can't wait to play the game i'm really curious to see how they're going to handle all the open world mechanics that is a pretty big difference from all the other games so it's going to be interesting to see how they tackle all those challenges okay i hope you found the video interesting and useful and learn something along the way check out the phone react playlist where i already covered a bunch of other games alright hope that's useful check out these videos to learn some more thanks to these awesome patreon supporters for making these videos possible thank you for watching and i'll see you next time