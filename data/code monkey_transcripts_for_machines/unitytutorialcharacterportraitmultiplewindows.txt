hello and welcome I'm your code monkey and in this video we're continuing to make a character portrait window we're going to add support from multiple windows at once let's get sir so we previously created our portrait window we can click the character to show the window and it shows a view of the character I can click this button to hide the window but if I click on this character and then on this one then the first one is no longer visible since we only have one window let's add support to be able to view both characters at once first let's spawn one window for a character so in order to do that let's convert our window into a prefab which won't be instantiated every time we click on a different character let's start off by making a new folder name it prefabs and make a new prefab and call it PF window character portrait let's drag our window into our prefab so this will we're going to instantiate per character okay so in our character portrait code so in here we're going to make a public static void show static this will be the static function that we're going to use to create new windows in here we're going to spawn our prefab now in order to spawn we need a reference to the prefab and our canvas now normally I would create a separate class to handle asset references but in order to keep this video focused on the character portrait window let's just add the references in here in our game handler so in here let me make a public static game handler for my instance and add a public canvas for my canvas and a public transform for the PF window character portrait again if you're using this in your own game make sure you place the acid references where they make sense on awake let's set the instance to this and on the character portrait let's instantiate the prefab into the canvas so in Senshi 8 the game handler the instance and grab the PF character portrait set the parent to our canvas transform parents and let's give it a random position so they don't spawn on top of each other okay let's grab the getcomponent of our window character portrait script and we're going to call the show function using the follow transform that we're going to receive in here send it in here now we want this class to only be accessed through this static function so let's make this show private okay so now on our game handler let's use the show static function instead of the normal show function in order to use static we're going to access the class directly instead of an instance and we no longer need this instance so let's drag our references in the editor and test alright so here I am and I should be able to spawn a new window every time we click on a character click on that one Windows Phones click on that one any Windows Phones yep there you go I can close them and open them again great all right so now as you can see there's an issue with the camera view it's finding two windows but they're both showing the same thing the reason is because we're using only one rendered texture we need to create a new rendered texture for each window so back in our character portrait script on our show let's create a new rendered texture let's apply this render texture to our camera so transform dog find our camera get the camera component and set the target texture to our render texture we also need to set the raw image to display this rendered texture so go into the transfer now find our raw image get the component of our raw image which is part of the using Unity engine UI get the raw image and set the texture to our render texture alright so we're now creating a render texture dynamically per each window let's give it a try and see if it's working okay here's the characters I click on this one and there's that camera and this one any creating new rendered texture so each window is now correctly displaying a separate view alright so now that the spawning seems to be working let's handle on our cleanup when we hide the window since we are instantiating a new character every time we use the show static we are no longer going to mess around with a set active so we can remove this from here and from here and remove the hide in there now on our hein first of all it's going to be private and hide will no longer actually hide the window but rather destroy it so let's rename this to a more accurate name and call it to destroy window so in here we're going to destroy our game object all right so let's test and everything should be exactly the same but now each window should be destroyed rather than simply hidden so here I am I can point this one in this one I can close and close and at all causes and if you check out the canvas you can see that it's completely empty I spawn one and there's one I close it and it vanishes okay great so now as you can see there is a potential issue I click on this camera and it shows the window as it should but I click again and it shows another window now this might be intended behavior for your game but chances are what you really want is only one window for a character so let's keep track of what windows are spawned and who they are following so in our code here in order to keep track of our windows and let's use a dictionary a private static dictionary now a dictionary contains a key and a value so we're going to use the follow transform as our key and a window character portrait as our valve window dictionary so on our show static when we are in sin she ating new windows let's first of all if it equals gnome let's instantiate our dictionary and before we spawn anything let's test if that key already exist in the dictionary so if dictionary that contains key and the key is going to be this phone will transform if it does contain that key then there's already window following this phone will transform so we don't want to spawn a duplicate so we only want to execute this code if the dictionary does not contain that King and after we do it we're a sign into the follow transform into this key we're going to send our character portrait alright so as you can see on our show static we are calling it with a phone transform inside we're testing if our private dictionary is in Senshi ated if not then we instantiate it we're going to test if I don't worry contains a key to test whether or not a window following this particular transform is already spawned if it does not contain that key then no window is currently active so let's spawn a window and set it to show and phone with this transform and finally set this dictionary on this key to contain this window okay so now the spawning logic should be correct now when we destroy them let's remove the entry from the dictionary all right let's test it out so here I am I can click this one and choose that window click down choose our window now if I click again and there we go no more windows our spawn since this one is already in here if I hide it and I click it again it shows another one and same for this character can't spawn duplicates but I can close and hide it again great so there you have it we have added support for multiple windows showing different views and limited to one window per character in the next video we're going to add some character stats to our window as always you can download the project files in utilities from unity code monkey comm if you have any questions post them in the comments and I'll do my best to answer them subscribe for more videos and I'll see you next time