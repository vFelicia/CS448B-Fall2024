hello and welcome I'm your code monkey in this video we're continuing our resource gatherer AI let's set up player control so we can tell our units were to harvest let's get started all right so here's the scene so far we have the gatherer he goes to a node mines it drops the resources in storage and goes back to finding another no right now he's deciding where to mine let's add the ability to tell him where to go so first off let's create a very simple text mesh to see what together is carrying so in here let's make a new game object call it inventory text mesh and let's add a text mash to display the inventory amount alright so there's the text mesh on top of the unit that we can use to display what he is carrying so let's go in our gather AI code and here let's grab a reference to the text mesh so a private text mesh and call it inventory text mesh and we're going to grab it on the awake in here and let's make a function to update it so proud void update inventory tax if we do have inventory then let's display it so if gold inventory amount if it is bigger than 0 then go into the inventory tax math text and set it to the amount that we are carrying if we are not carrying anything then just hide it by setting the text to nothing okay so we want to update it on awake and update it every time the gold inventory amount changes so in here update the text and in here update it as well alright let's test and see how it's going there you go it's hidden now in mines and you see one two three and now it drops and it vanishes again okay great so very simple and we can now view what the unit is carrying now let's set up a way to click our resource notes in order to do that and let's go in here into the goal node game object going to add a box Collider 2d and set it to occupy roughly the size of sprite so we have a box Collider and now we need to be able to click it to do that I'm going to use the script button sprite which is part of the code monkey utilities which is always you can grab for free from Unity code monkey calm this script allows me to easily capture clicks on this specific box Collider so in our code here we previously created a resource node that handles the node logic and is constructed using a reference to the resource node transform so here in the constructor let's capture the transform clicks so transform dot get component of type button sprites which we have to go up here using code monkey dot utils and here is the button sprite which has an action like funk which is triggered whenever we click on the specific button now in order to keep our code clean we're going to firon invent when this transform is clicked so let's go up here and make a public static event event handler on resource node click in order to use even handler we have to do using the system namespace and here when we click the action that we're going to fire is going to fire that event so if on resource note click if it is not know so if we have subscribers let's trigger it by sending this and event our it's empty so this way we can capture clicks with another class and this class doesn't need to know about it so let's capture those clicks on our game Handler on a wait here let's subscribe to that event which is on resource no dot on resource note clicked now the event center object is going to be of type resource notes and let's cast it to that so set a resource node resource node equals the sender as a resource node since the sender is sent as an object we have to cast it first to the resource no alright so in here we are being notified when a resource node is click now we have to tell the gatherer to mind that so first let's go in our together and stop him looking for nodes automatically which he's doing in here by commenting out this line he is no longer automatically searching for nodes instead let's make a public function to give him a resource node so go down here make a public void set resource node and here we are going to receive a resource node resource node and inside and let's set our internal resource node so this dot resource node equals this resource node so if the unit is iPhone the next time we set the node he's gonna move towards it all right now back in our game handler let's go up here and add a reference to our gather a I so make a serialize film for the gatherer AI and gather AI and when we click on the node we call this phone and here let's go into our gather AI and set the resource node to this resource node all right so let's test and see how it's going all right so here's together he's completely still which makes sense since he's no longer automatically searching for a resource node and now when I click on this one and boom there he goes he's going to mine that node now when he finishes he goes back to the storage and once again he stops and waits for another arm no I sent him in here and he goes okay great now let's make him automatically keep mining nodes if they are near the one that he was ordered to mind so in here let's make a cluster of nodes so put this one in here another one here in here and in here so when he finishes mining the target resource node let's tell him to ask the game handler for a valid node near that one so on game panel let's make that function we were simply using a resource node now let's make a get resource node near position and we're going to receive a vector3 for the position so here let's set a max distance amount and here if it has no more resources we are removing it from the list or if the vector 3 dot distance between the position and the temp resource node list I dot get positioned if that distance is bigger than the max distance then we're also going to remove to a list so this gets removed from the list if it either has no more resources or too far and let's make a static function to call this one so in here before we move to storage instead of setting the resource node back to no let's ask the game handler for get resource node near the resource node position so when this one is depleted we're going to look for another one near that position all right so now on the game handler up here currently we're receiving three separate things but instead of that let's receive an array of goal node transform array and when creating would simply go for each alright so we now have just one array instead of having multiple variables so let's set that array and film it up with all of these gold nodes he has the array with me lock the inspectors like all of these and drag it all in there okay let's test and let's see how it's going right there he is he is staying still I'm going to mine this one he goes there and he mines it to three now he drops it on storage he stays still now let's mine this one so what's going there now he's mining one two three okay now he's gonna drop it on storage and yep he picked another position in there and now he's mining another resource note the plates it goes back goes to another one now he's mining the final one and when he finishes boom there we go he stays idle since there are no more nodes near these ones alright so we have exactly the behavior we wanted so there you have it we had a support for controlling our gatherer by telling him where to go to mine a specific node once he finishes that node he decides to look for nodes that are near that one and if there are goes there if not he stops and waits for another order in the next video we're going to add support for multiple gatherers if you have any questions post them in the comments and I'll do my best answer them subscribe for more videos and I'll see you next time