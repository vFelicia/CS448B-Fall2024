hello and welcome I'm your code monkey miniseries were making snake in unity in this video we're going to add snake death and wrap around the level let's begin okay so here's our game so far we have the snake move around we can eat food which will grow the snake by one segment and all the sprites are correctly displayed you can see the corners when the snake moves they look correctly right now I can go through the snake like that there you go that should cause a game over but right now nothing happens so let's deal with that so here is the snake class let's go down to the function where we handle our grid movement so in here we are doing a timer and then moving our snake based on the grid move direction so in here we move the grid position so it's in here that we need to check if this new position is empty or it's a body position so after we do the movement and move the entire body let's go through every single snake body part and in here all we need to do is check if the snake body parts get bred position we're going to make that function soon so it's gonna return a vector to int for the snake body parts for its position so we get the grid position from that specific snake body part and then all we need to do is do a check for the grid position which is the position of the head if it's the same as the snake body part grid position then we have a game over so let's make this function on the snake body part we want a get grid position so down here make it public it's one returning vector to int now in here we want to return the current grid position so the grid position is based on the snake move position so we return that that get grade position again the snake move position was created in the previous video and it simply handles one move position for the snake so just like this we shouldn't have the basics for testing for snake tap so let's go up here and this is what's happening we go through the entire body part list we get the grid position that that body part is in we check if it's the same as the head grid position and if so we got a popup saying game over so let's see okay so here's the snake with enough of a body size to test for our game over so let's go now I wrap around and yep there you go there's the pop up when we went through our body we see the pop up where we should have a game over okay so everything is working correctly now obviously we don't want the snake to keep moving after achieving a game over so let's sort that out so in our snake class we can simply go all the way up here and we're going to create a state and the update will only run this code once the state is alive so let's do that make a private room for the state of our snake and the possible states are alive or dead and let's store a private state for our state and by default let's make our state equal state out alive and in our update simply do a switch on the state in case we are on state are alive then we run this code same as previously in case we are on state then we do nothing all right so now all we need to do is modify our state to become dead so let's go down here onto our popup saying that we are dead and what simply set the state equals state that dead okay so let's see if our snake stops moving when it dies okay here's our snake now let's wrap around and hit the body and yep there you go it's dead and these snakes stopped all right great so we now have a correct game over state so now that we have death working let's deal with another part of the design which is the 11 wraparound right now the level has no boundaries so here on start if I go to the right you can see that this net just keeps going forever obviously we want the snake to stay inside the level so when it gets to the right side it should appear on the left side so let's do that here on this necklace let's see where we are moving our snake here is the great position and after we move it let's ask the 11th grade to validate our new word position so let's make a function on the 11 where in in that function we're going to return a vector to end for the validated great position now let's count to validate great position so we receive a red position and we make sure it is valid so if the grid position that X is under zero then we've on off the map to the left side in that case let's set the grid position that X to be width minus 1 so the width contains the entire size of the grid so in our case we are setting it with 20/20 so that means that our grid goes from 0 to 19 so in here we are setting to the complete right side which is 20 minus 119 now let's do the same thing for the height and after we validate let's return our grid position okay this should be correct so now let's go into the snake so we can call this function here in our snake we move our grid position then we ask the 11 grid to validate our grid position and we replace the grid position with the validated right position so let's test our code and see if everything is working okay there's a snake going to the left let's see what happens it goes there and yep it now showed up on the right side so now let's test the border down and it's moving down and yep it showed up up there all right great so now let's apply the same logic to the right and upper sides so all we do is if the grit position that X if it is bigger than the width minus 1 then we have gone off the map from the right side so we simply set the grid position that X to be 0 same thing on the height okay so let's test and see if the right border and the upper border are also wrapping around correctly there's a snake moving to the right and yep there you go it gets their town ports on the left side from the left teleport to the right from Downey teleport up and from up you teleport down so there you go we got our level wraparound working correctly and also let's make sure everything still works with a large body ok there's a very large body now let's try going into a corner and if there you go it shows up in there now I try going down there and there it is and there this so we have our snake right position correctly wrapping around all of them and works perfectly fine for all the other body parts and we can still eat an apple and there you go show up on that side eat another one and everything works perfectly fine and finally let's also make sure our game over is still working so let's wrap around that side and now back to down and crash and yep there you go our snake has done so there you have it we added a game over state when we hit the snake body and also the ability to wrap around the level in the next video we're going to set up the UI to show our current score as always you can download the project fountain attorneys from in Tacoma keep calm if you have any questions possum any comments around in my best answer them subscribe for more videos and I'll see you next time