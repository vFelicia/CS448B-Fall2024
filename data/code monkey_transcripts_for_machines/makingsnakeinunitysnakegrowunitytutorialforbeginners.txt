hello and welcome I'm your code machi miniseries were making snake in unity in this video we're going to grow our snake every time we eat some food let's begin okay so here is our scene we have our snake that we can move around with the keyboard and as you can see we also have some food in our mouth and if I move towards it if the snake eats it and the food is spawned in a new position I go back to it I eat it again and then you wanna spawn and so on and so forth okay so now we need to make our snake row every time we eat something so here in our snake class we need some variables to store and handle the size of the snake so it's making here a private int for the snake body size this will store the size of the body of the snake so when it's zero we only have the head when not zero it contains the number of body segments and then we also need to store where the snake has been so we know where to locate our body parts so for that and let's define a list of vector2 ends this will be used when we need to add size to our snake body so now let's fill up this list so for that we go into the place where we are handling our grid movement and in here before we actually move our snake let's add the current position to the list so going to the snake move position list and we insert into index zero and let's insert our current grid position so we insert the current position into the position list then we move our snake and after that we need to test if toneless is too big based on the snake body size so in here we simply do if okay so we check how many elements we have stored in our list if the number of elements is bigger than or equal to the body size plus one so one more than we need then we simply remove the very last one on the list okay so this is very simple and it should be working so for testing let's spawn something just to be able to see these sneaks eyes so after we validate our snake position list let's do a simple cycle in here let's simply spawn a square so we can see where the snake move positional list is currently holding so for that I'm going to create a world sprite this is part of the code monkey utilities it simply lets me very simply create a sprite so let's position it where this body part would be and let's also create a function timer so we can destroy this world sprite before the snake moves again okay so this is just for testing but it should be working essentially we are cycling through the move position list we create a sprite on that move position and the next time we move we destroy that sprite so essentially our sprites will always be created and destroyed just so we can visually see where our snake has been and also for testing let's set the snake body size to one so we have one body part walking behind the head and obviously initialize our list okay there's our snake and as you can see it has a body part standing behind it and I can move up into the left and down and yep it's going well it says with a couple more body signs and yep there it is as you can see all the positions are correctly following the snake now we have multiple positions and they fall exactly where the snake has been all right so we are correctly storing the positions we need to place the body now all we need to do is actually grow our snake when we eat our food so previously we were handling the food like this we were similarly telling the unleavened grid that the snake had moved into a certain position and then the level grid checks if the awkward position matches the food and if so destroys and spawns a new food however we also need the snake to know if any food was eaten so in here let's rename this function into try snake eat food in order to quickly rename things in Visual Studio you can simply hit ctrl R R and it allows you to rename a method and as you can see all the references to that method get renamed automatically so now with a more proper name try snake eat food and let's also return a boolean so essentially this will return true if the snake has eaten some food and false if not so in this case it has indeed eaten the food so in here we return true and if not we return false so now we can go back into our snake and now the return value of this function is if the snake has eaten some food so cool snake ate food and if the snake ate food then snake a food grow body and then in here all we do is snake body size increase now we want to run this code before we validate our snake body size so in here so we modify the grid position we test if the snake has eaten some food if so we increase the body size and then we check the amount of values that are currently in our position list so just like that we should now be correctly increasing in size whenever we eat some food so I'd like to go up here and we know I'm gonna need this for testing so let's put this at zero as it should be and see if the snake body does increase okay there's a snake moving around I'm going to go and eat that piece of food and when I get there yep the body now has one size now I eat another one and let's see if it grows and yep we now have a body with the size of two yet another one and now we should have three and so on and as you can see the body is correctly following exactly where the snake has been and everything is working perfectly fine so now that we have a snake body we need to once again fix the issue we had previously regarding the food spawn in here if you remember first of all we were only doing this which picks a completely random position in our grid however that could mean that it could spawn right on top of the head which is not what we wanted so that's why we added this cycle in order to make sure that the food world position is never on top of the snake but right now the snake has a body so it cannot spawn on top of the head of the snake or any of the body parts so here in our snake let's make a function to return the complete snake in great position so here we have a very simple function that returns the complete snake great positional list so you create a new list that we are going to return we initially set it with a grid position which is the head grid position and then we add the snake move position list which contains all the positions of the body so now we can go back into the level were in and here we generate a random position and we keep generating wild so we keep generating once this position is found inside of our grid position list so it means this one is occupied so generate one again again and so on so let's s just make sure we never see any food spawning on top of the body and just like that here's our snake with a very large body and you can see that whenever I eat some food it spawns a new one and it does not spawn right on top of the body so there you have it we set up our snake class to be aware of where it's been so we can increase the size of our body whenever the snake eats some food in the next video we're going to add some proper snake body sprites as always you can download the project files and utilities from unity code monkey comm if you have any questions post them in the comments and I'll do my best answer them subscribe for more videos and I'll see you next time