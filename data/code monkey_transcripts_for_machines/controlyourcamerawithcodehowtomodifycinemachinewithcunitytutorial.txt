hello and welcome I'm your code monkey and here's a quick video on how to change sin machine values through code so over here I have a simple first person controller this is the official Unity Star as controller that I covered in another video and for the assets over here I'm using the Senti office pack there's a link if you want to get it so I can look around I can move around first person and this controller is using send machine to control the main camera so over here I have a cinemasion virtual camera now let's say I want to press a button and modify over here the vertical fov so I want to modify exactly this field now you might think of doing it just like you changed pretty much any value so let's make a script to do that in UC sharp script commonly change send machine code let's make a game object to run it and attach the script okay so now here let's add a very simple and serialized field so we have our reference so a serialized field of type scene machine virtual camera so we need to add using send machine now we can find of type syn machine virtual camera okay now here let's drag that reference all right then let's do a simple update and on update let's says for a get key down let's say t key for testing so when that happens we go inside the send machine virtual camera and over here like we saw let's try modifying the vertical fov so if I search for fov nope can't find it search for vertical something nope search for feel on The View and nope nothing happens so this is the tricky party to how scene machine works but thankfully listen machine also comes with all of the source code so we can inspect the virtual camera script to see how it all works and the method that I'm going to show here can be used to find any field you want to change in any package so we're here on the send machine virtual camera object I can right click and go into edit script in doing so it takes you to the send machine codes over here you can see all of the source code that makes it work now if it doesn't open this automatically then you can manually find the script over here on the project window you can scroll down and you've got the packages and you can click on the little arrow to expand them now if you click on that and doesn't show anything then over here on the top right corner you see this button with a little I if this one is toggled then hides the packages so you can see anything so make sure this one is untuckable and now here we can see everything so we can and browse around go inside send machine and then find the runtime the core and so on so we can find it by manual looking into it or we can use the super useful search bars over here let's search for cinemachine virtual camera and then here on the search right now we don't see anything but we can switch where we are searching so instead of looking in the assets let's look inside the packages and if we select it yep there you go here it shows up so here we have the send machine virtual camera the script which is located in here and if you exit on the search yep over here it Scrolls down to exactly where that script is okay so double it to open it now here we can do a quick search for field of view and nope we don't find anything maybe search for fov and no password on find it with vertical level V nope nothing like that so we still can find it however I'm looking into the send machine virtual camera inspector over here we can get a clue we can see that the fov feel this one exists inside the lens so we've got the lens Tab and inside there we've got the fov and so on now back in the script If instead I search for in lens and up over here I do find it so the online settings and we have the lens field now we can look what this lens settings type contains and again we can do the exact same thing so over here we can manually find it over here on the packages or use the search bar look for online settings look in the packages and here it is and now here on the online settings we can scroll down and yep here we do find the field of view so this is the method for how you can find any field in order to modify it through code there's an even more advanced version of this method where you can load all of the packages source code directly over here into visual studio so you can do it so that on the installation Explorer over here it identifies all of the various packages you have installed doing that makes it super easy to find exactly where it is the film that you want to change and makes it super easy to browse the entire package source code in my ultimate TNT overview course one of the lectures is exactly on this topic how to find any class or any film to modify any of the many tools that Unity has another example would be the post processing effect so how do you modify for example just simple intensity so that's one of the things that you can do with this method that I covered in that lecture also that course teaches you how to use many of the tools and features that UNT has so check it out to the link in the description okay so back to this tutorial now we know where the film review exists so now we can modify it so over here we access the cinemachine version on camera then inside let's access the online so the M underscore lens and now we want to modify the field of view so let's change it and when we press let's say bring it down to 20. okay so let's test so here we are and the fov is looking pretty normal now as I press the button yep there you go really nice zoom in all right great now let's look at how to modify some other things over here I have another scene this one with a different camera type I've got a nice topdown camera and the way this works is I've got the send machine virtual camera and over here I've set the fungal and the unlocked targets and those are just an empty game object right in there so the way the camera is set up over here on the body set up as a transposer and it's looking at the object with a followup set so 20 on the Y and minus 20 on the Z so the object that's looking at is over there and the camera is over there up there by the way if you want a complete camera controller tutorial check out my other video on it in there I built a fully functioning complete camera controller perfect for any game where you want the player to control the camera so with this camera like I said I'm using a transposer and let's say that I want to modify over here the file offset so in sort of 20 when I press a button I want to change this to some smaller value and again if over here in the code if I try searching for it so try looking for the phone offset nope I cannot find anything so again we're going to need to use that method to look in the package source code to figure out what to change so on the send machine virtual camera over here on this group let's see how it works and if we browse through this code we can see that it works based on a component system over here we can see it has something called a send machine component base and it contains an array so these are all the components and then we've got a really useful function so we can call gets in machine component and pass in the type where the type extends in machine component base then if we search in the scripts we can actually find the type that we want so let's search for transposer and impure we do find the send machine transposer Let's click on the X to see where it exists in the file yup here it is so inside the components here we have the third person follow basically Channel purlin composer Framing and so on so if you look in the virtual camera over here on the body those are exactly these types so each one of these types has a different script and same thing for the aim each of these has a different script so the one that we want is the send machine transposer this is the one that we're using here so let's open this one and over here now if we search for the final offset if here it is we do find a vector 3 for the M4 offset so now we know how to modify this so let's go back into original script and first of all we need to get the same machine component of that type so let's call the function gets image machine component and the type that we want is a syn machine transposer and then on this type now we can modify the follow offset so let's modify it to something like I said let's bring it down a bit so maybe just 3F and keep 20 on the Z okay so let's test so here we are unlocking top down press a button and there you go the camera goes all the way down so everything worked we press the button and we modify the field in the scene machine virtual camera alright awesome so this is how you can modify any field in a cinemasion virtual camera through code if you're looking for a complete camera system check out my video on it another thing related to send machine is if you want to manually handle screen shake to modify this shake intensity I also have video on that and something similar to this is how to modify effects in postprocessing it's very similar it's also component based and again I covered it in another video so if you want to learn how to modify effects through code during runtime go watch that one and finally like I said this method that I showed here is one of the things that I teach in my ultimate Indie overview course in there I teach this method for how to modify any field in any package or Unity tool and also another method for how you can load the package source code directly into visual studio and on top of that the course has over 15 lectures each covering a different two or more feature of the engine so if you want to learn more about how to better use Unity check it out all right hope that's useful check out these videos to learn some more thanks to these awesome patreon supporters for making these videos possible thank you for watching and I'll see you next time