hello and welcome I'm your code monkey in this video we're going to create a health bar from code and control it let's begin alright so in the previous video we made this 1/2 bar in here visually you can see that it has a bar a background and a border the bar has a pivot on the left side and is an increasing in size when it gets low it flashes in white so we can both modify the size and the color of our bar now let's create the whole thing through code now you could use a prefab and in Senshi at the example like in the editor but we're going to do the whole thing straight through code this way if we want to use this bar in a different project all we have to do is copy the script and there's no need to create a package that also includes the prefab so here in the editor let's review what we're going to create so first of all we have a parent game object in here it has no components as you can see only the health bar script and it has a scale of 1 1 so it is not scaled at all then we have the background which is placed on locum position 0 0 and has a bar size on the local scale it is also tinted in grey then we have the bar game object which as you can see is shifted to the left side by half of the size size of our bar is 40 and this when you shift to the left by 20 we're placing it in here so we can essentially have the inner bar pivoted to the left side so we can modify this one and there you go it's pivoted on the left side okay again there's also no components in here then we have the bar sprite as a child of the bar and in here we do have a sprite renderer it is tinted in red as you can see it has the same size as the background 45 and it is shifted to the right side so if we set this on 1 you can see that it is shifted in there so it occupies exactly the same position but the parent is pivoted on the left side so we can easily modify it in here ok and for the border let's just ignore that for now so this whole thing is what we're going to create through code let's go into the health bar class and up here we're going to make a static function to create a health bar so let's make a public static health bar and we're going to call it create now in here in order to create we're going to receive a vector3 for the position on which to spawn the health bar and a vector3 for the size of the hump bar so let's begin by making the main game object so game object let's call it count bar game object and to be any game object in college health bar we're going to put the health bar game object out transform that position into our position the scale of this bar will leave it at 1 now let's make the background so game object background game object equals a new game object we're going to call it background and we're also going to initialize it with a sprite renderer component let's set the parent to the main container so going background transform dot set parent to our health bar game object transform now let's set the local position to keep it at vector 3.0 and for the local scale it's going to be the size that we receive and let's go into the background market component sprite renderer to set the color to color gray okay so our background is now working now since this is a sprite renderer we need to give it a sprite otherwise it won't be visible now in order to get a reference to the asset pick so I'm going to use a script that we created previously called the game assets you can view the entire video on this script but essentially it lets me drag references to this scripts prefab and then access it anywhere through code so in here I have a film for the white pixel sprite and I can access it using this property so I go through this property to access this white pixel so in my home farm let's go again to the sprite grant component and set the sprite to the game assets dot I dot white pixel alright so this way the background should now be fully visible now let's make the bar game object game object bar game object and say to be you game object then let's name it bar inside we're going to set the parent transform that said parent to our helper game object transform now as we saw previously this is simply the container for the pivot for our actual bar sprite so let's first make the bar sprite so let's make a bar sprite game object and we're going to call it bar sprite let's copy the background code in here and for the transform the bar sprite game object the transform will be the bar game object and not the main game object let's set the bar color to red and again give it the white pixel now for the unlocking position as we saw previously we have to offset this by half of the size so for this Fred game object we want to offset it to the right so let's put this on new vector3 of the size X divided by 2 ax so half of the size and leave it on 0 F and then for the main bar appear for the bar game project we need to put it to the left by that offset okay so you don't let's make some comments ooh so this isn't look as messy so in here we are creating the main health bar then we are creating the background then in here we are creating the bar and here the bar sprite alright so this is much easier to now understand so one last thing let's set the sorting order so for the background game object is going to be at the bottom so grab the sprite renderer and set the sorting order to let's say 100 and for the sprite let's put the sprite at 110 so the sprite is on top of the game object and finally let's have this help our script into the main game object so we got here the health bar game object we're going to add the component which is this health bar script and this is the health bar bar and it is what we're going to return from this function so up here this function returns a health bar and that's what we return ok so now let's go into the game Amalur and create a bar in here let's first comment out this previous code we're going to use it for testing later and in here let's go into the health bar dot create and now in order to create first we need the position so let's put it on zero zero and then a size let's put it the same size as previously which was 45 now let's go in the editor and let's disable this old health bar so the editor you can see nothing is visible nothing is visible so now when we run it should spawn a new health bar yep there it is our new bar created internally through code is working perfectly and if I pause the game you can see in the scene this is the one we created previously and this is the one we created through code and as you can see it's got a background it's got the bar and it's got the bar sprite and we can still modify the bar and there you go it shifts exactly as previously okay great so now let's apply the animation we were doing previously to make sure everything still works so after we create the health bar we actually returning home bar so we can get rid of that global health bar and making you one game here alright then now let's again apply the same code as previously everything is working with the health bar so it should be working exactly the same so let's try yep there you go there's the bar it is lowering in size it's now flashes when it's low and goes back to normal okay great so we have successfully created the bar through code and are now manipulating using the code we wrote previously so now let's add a border to our bar let's go to our bar create function and let's essentially duplicate our background bar and we're going to name this the border and let's call it the border let's rename all of these references let's put the sorting order under the actual bar and let's put the color in black now for the size let's put it at the normal size plus a certain float border thickness let's say one app and in here size Florida's vector 3.1 multiplied by the border thickness so this will increase the size by one F on all sides so now let's see and we should be seeing a black border around our bar as we had previously yep there you go a nice black border okay so now let's customize our bar let's begin by customizing the border so let's go up here and make a public class and we're going to call it border now inside this class we're going to have two values first of all a public float for the thickness of the border and a public color for the color of the border and on our health bar create function we're going to receive a border class object and by default let's leave it at No so in here if border it is not no then we are going to execute this and create a border but if it is no leave it without a border and in here instead of using this border thickness in here we're going to use the one given in the border object so go to the border and get the thickness and go into the border and get the color all right so now in our game handler let's make another bar so let's make another bar above that one so let's put it on ten and in here we're going to give it a new border and the border won't have a thickness of 1 F and let's give it a color of color dot white so we have a health bar being created using the default border which means no border so we're not sending anything in there and a second one with a white border so let's see if both of our bars are being created exactly as they should yep there you go we got one normal border no bar and one with a white border all right now let's also add some parameters for setting the bar color and the background color so in the health bar dot create let's receive a color for the bar color and a color for the background color and we're going to apply it down here so the background instead of calling up gray get that color and the bar color instead of colored on red let's give it our bar color so let's go in our game Handler and first of all let's give the normal colors to this one so for the bar color let's give it card out red background color up gray and do the same thing this one down here and then above this one let's greet another helpful I'm going to put it on 20 and let's say the color will be yellow the background color let's put that white and for the border let's put it on black all right so now as you can see we are using the same function and creating three very different bars let's see them yep there you we first got a red bar with no border then we got a yellow bar with a black border any red bar with a light grey background and a white border all these are created using the same function and all of them were created through code so we have been calling this a health bar but really this code is really just a bar if you change the color to let's say a blue you could use it to represent a cooldown or a action bar we are making the animation lowering the size but we could just as easily set it to increase so what we have here is a very versatile bar so essentially what we have created here is the world bar class from the code monkey utilities you can grab the eternities for free from unity code monkey comm and check out the warm bar class to see how that one was implemented and what other functions it has so there you have it we create a health bar both in the editor and through code we made a function to easily create a bar on the fly with customization for size collars and border if you have any questions post them in the comments and I'll do my best to answer them subscribe for more videos and I'll see you next time you