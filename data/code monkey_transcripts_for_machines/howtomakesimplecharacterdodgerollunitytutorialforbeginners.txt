hello and welcome I am your code monkey min this video we're going to take our simple character movement and add dodge rolling let's begin so this is our character I can move around using the keyboard and if I go up here as you can see he tests for a hitboxes so he does not go through walls and also if I press space I have the ability to do a dash that we had in the previous video it makes him move forward quickly and spawns a nice effect the dash also tests for wall so I cannot dash through the wall okay so now we want to make a nice dodge roll the main difference between the dodge roll and the is that the dash is instant whereas the dodge roll is a slide so that requires us to animate the position over time so let's look at the code and here we have our simple setup on update we have our two functions being called testing for normal movement and also testing for D dash now we're going to add another function for handling the dodge roll so in here handle dodge roll the handle movement captures for a keyboard input and moves them around and the dash does the same thing handles for the space and instantiate the effect we also have two helper functions one to test if we can move which does a physics raycast to test if there is no collider towards that direction by that distance and they try move does the same thing whilst also testing for diagonal horizontal and vertical movement so here let's make a new function for the handle dodge roll so first let's capture the input for our dodge we're going to use the right mouse click so just for testing to see if we are correctly capturing the mouse click let's do a debug pop up I'm going to use ECM debug class to create a text pop up on the mouse position this last is part of the code monk utilities which you can grab for free from unity code monkey comm so in here let's just do a popup on the mouse position to say click so let's see so here I am moving around right click and yep there you go there's the popup so we are correctly capturing the mouse click ok so now back in the code since we want to make a slide instead of an instant movement that means we need to move the transform over several updates for that we're going to use some simple States so all the way up here let's define a private room for the state in here first we're going to have a very simple state so the normal state and then we're also going to have the dodge roll State and we store the state as a member variable by default we start off at safe normal and then on our update we do a simple switch on our state so case we are on the normal state we are doing the exact same thing as previously but if we are on case state the dodge roll sliding then we want to do something else so let's do a function to handle actually moving the transform so we're going to call this the handle Dodger on slide so in this function we're going to move the transform so just for testing let's simply move them towards e right so move the transform that position moving towards the right by a certain sliding speed so it's a fine here a fold for the sliding speed and multiplied by time times since we want this to be frame rate independent and appear on the handle dodge roll let's do dodge roll and we set the state to be state dodge roll sliding so we change the state when we hit the right mouse button and then on the update when we have this state it won't run this function which will move him towards the right on every frame so let's see if he is sliding to the right okay so here is the character moving around if I hit the right mouse button yep there you go he's sliding to the right okay great so now we need the actual direction we're going to slide towards in order to use that direction here it means we need to set it as a member variable so all the way up here let's make a private vector3 for this slide there and we're going to set that all the way down here on the handle dodge roll when we start dodj rolling we need to set the slide direction we're going to make him slide towards the mouse so define the solid direction as the mouse world position mine is this transform dot position so we have the slide direction towards the mouse and now in here on the handle dodge roll sliding instead of using this created vector we're going to use the slide direction so it's testing we should be able to see the character smiling towards the mouse position so here I am moving around five points the mouse in here and hit the right button if there you go he dashed towards the mouse okay so now obviously we don't want them to keep sliding forever so let's on in order to do that we're going to start off with a certain slide speed and then reduce that speed until it is near zero so all the way up here we're going to define another member variable this will be a private float for the slide speed just like with in direction we're going to define a slight speed when we actually start sliding so here let's set a certain amount so let's say 350 and now in here when we are handling the Dajjal sliding we're going to use the actual slide speed instead of this one to find in here and then we're going to reduce it by a certain amount so we're going to reduce this might spin well let's say itself multiplied by a certain number and time double time so this won't reduce our slide speed every frame until it very much near zero so in here we simply do an if the slight speed if it is under a low enough amount so let's test first four five then we should go back to the normal state so state equals state are normal and let's also do another popup just to see when this happens okay so that should do it so let's see a piece of here's the character I can move him around now the mouse is in here first the right mouse button and yep there you go he dodged and as you can see the state changing when I click yup dodge role when he slides in there and the speed is back to low he goes back to normal and again I can move I can sound and everything else still works so slide and there you go No so dodge dodge dodge and I can keep dodging and yep just like that now we are currently moving the transform so again like with all the others we are currently not testing for hitboxes so let's deal with that so here when we are moving instead of moving and using this function we can use this nice try move function that we made previously so in here we simply do a try move towards the slide ear we move them by slight speed multiplied by time lay down time okay here I am and if I slide towards the wall if there yo I don't go through the wall he slides and then he moves along the wall okay great now the only thing missing is the actual roll animation so let's add that I have the animation here in the base class alongside the walking and idle animations so in here when we start the dodge roll all we need to do is go into the player character base play the dodge animation towards the slide dear okay so let's see okay here I am move around and I dodge and you up there yo we got the nice dodge roll animation we got the slide movement and again we can also go through walls and yep everything is moving the states are changing and everything works great so there you have it we have the simple dodge roll the ability to be able to move our character away from attacks the code is set up in a simple way and all the other code we wrote previously is still working along with the new Dodge row as always you can download the project files in utilities from unity called monkey comm if you have any questions post them in the comments and I'll do my best answer them subscribe for more videos and I'll see you next time