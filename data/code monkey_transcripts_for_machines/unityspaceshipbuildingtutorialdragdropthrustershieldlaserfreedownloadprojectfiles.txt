hello and welcome i'm your code monkey so a while ago i made a video on a game called nimbatus it's an interesting game where you build your drones from a bunch of parts the drone is built on a grid and you drag and drop all the parts to connect them and it's also up to you to define what key triggers what object for example place the thruster behind the drone then assign it to the w key so when you press w it activates the thrust and moves your drone forward then you have all kinds of parts like magnets fuel energy and laser turrets and so on you bomb watch your drones and go out on missions depending on the mission type it's up to you to build the right drone for the right mission i made that quick video talking about that interesting mechanic and in there i asked if you'd like to see a tutorial video on it so lately that's what i've been working on this one is a relatively complex system but the code is actually nicely set up and easy to understand you can download the project files link in the description to see how it all works for yourself the final system came out really well it works exactly as intended it's super easy to use and visually also looks pretty awesome let's see how i made it starting from scratch until the final polish game and if you like these types of videos where i remake some mechanics from some game then hit the like button and check out the entire how it's made plays if you prefer a more guided path with stepbystep lectures then check out my complete courses learn how to make a bundler defender game using csharp just like i make my own steam games or learn how to make games entirely using visual scripting or learn all about unity with the ultimate overview course which contains over 13 lectures each covering a different tool or feature of the engine to help you make better games faster i'm always available in the courses q a section answering your questions every single day so check out all the courses with the link in the description okay so i actually made most of this system while on various live streams that's why there's this overlay within live chat characters in my camera if you want to know when i go live then go ahead and hit the bell icon or set up an account on the website and if you're curious as to how this overlay works i made a video on the how to make unity transparent and another one on my mesh animation system so i start by first making the main part just a simple cube then for the first part i tried to make was the thruster made a simple visual just based on cubes and set up a simple script for it it really just uses the main ship rigid body and applies a force based on direction of the thruster object that's it very simple and it already works pretty great i can place the thruster anywhere and it does push the ship exactly as it should i decided to make this system using 3d meshes but logic is mostly in 2d so for getting the mouse position it's actually pretty simple i covered it in detail in another video there's just a plane with a collider and that's the mouse position next up i worked on a very important part of this system handling the separation between edit and play mode basically during edit the parts are just visuals and colliders they have no logic and then in play mode the ship has a rigid body with gravity and all of the parts have their logic handling that logic was easy but also a bit complex basically i need to make a sort of save and load system so that i can save in the edit scene and load the same ship with the same parts in the same positions in the placing then i expand on the part logic to have a generic key to activate with that it was now possible to have multiple thrusters and each activated by a different key just with that the spaceship was already fully functional just had some thrusters on each side and it can already move anywhere with that working then it was time to handle multiple part types for the second one i chose a simple shield to identify each part i use scriptable objects which are insanely useful really very useful for managing various types of objects with that i had to expand the safe mode logic from edit to play mode in order to support multiple types doing this involves generalizing the logic so that it can work with any type again this involves some thinking and some clever use of interfaces interfaces are insanely useful i also made a video on them with that i could now support any number of different types each of them with whatever logic they need to work and the whole system works flawlessly then it was time to handle object selection they all have call editors so this one was just a basic raycast exam like i did in the mouse position video i also made a simple ui to see what object was currently selected and the ui updates based on some simple c sharp events at that point there was a moment on stream where i went totally insane basically a find wasn't working and i had no idea why the name was correct the script was placed on the correct object and everything should be working but it wasn't it was constantly getting a nonreference exception as if the code couldn't find the object so after going crazy for a few minutes i finally found the culprit it was a tiny invisible space right in the end of the name of the button it had the correct name but then a space at the end this was another great example of how strings are so brittle and how you should avoid using them whenever possible for me i really only use strings in this one specific instance where i'm doing a find and even with using them so little i still get errors like this so impossible try to avoid using strings anyway so i made the buttons work on the ui with this i could now play some of the objects i could select any of them and choose what key activates what object this was at the end of the first live stream around 2 hours of work just without the system was already working pretty well at that point the game was still just some boring cubes so i used my recently acquired wonder knowledge to make some simple meshes i've only been learning blender for a few hours but i'm already able to do some nice simple meshes if you want to learn from the same course that i've been learning from then it's the gamedevtv blender 3d modeling course i actually worked with gamedev tv to create a curated bundle that includes that course and two more with some really nice discount it's available on the website so check the link in the description if you also want to learn some blender or unity or some programming patterns then one very important part of this system is being able to rebind keys to actions that way the player can add any part they want and they can activate it with any key they want then i continue working on the game during the second live stream first task was meant to be a simple one just add some particle system visuals to the thruster this was meant to be an easy task to start the live stream but was actually quite tricky turns out to start and stop emitting particles isn't as simple as calling play and stop once you can't stop on the particle system then for some reason you can't hit play again so it took a while but with some googling i found the answer it means you just need to manually enable or disable just the particle emission then making them look good just added some simple glow and it already looks great after that was another crucial part of this system being able to drag and drop to place the parts here was another example of me learning something new while on stream to get the drag event i use the unity event system and just implement the ibn drag handler interface however it turns out that if you just implement that one it doesn't actually trigger the event in order for that event to be fired you also need to implement the idrac handler even if you don't use it so that was an interesting quirk of the system and showed that even for me i'm still constantly learning new things then adding some snapping was pretty easy just run the position that's it with that the ship can now be much more well built with all the parts in the perfect locations for another quick visual was adding the part connections which is a simple cube stretched out to touch the new parts very simple and fixed the issue of having parts visually in the middle of the air at this point the system was already good enough to build the ship and play around with it by the way if you find the video helpful please hit the like button it's a tiny thing but really does help thanks however keeping a static camera limits how much i can move so the next task was adding some camera movement this was possibly the easiest task ever literally just added a new cinemachine virtual camera just assigned the ship as a follow and unlocked target and that's really it all the defaults are already perfect city machine is really awesome and you should definitely use it it makes handling cameras so insanely easy the next task was also quite easy thanks to how i focused on writing good clean code throughout the making of this project the goal was to go back to edit mode in order to allow the player to iterate upon the ship they were building this was as simple as instantiating the edit mode prefabs instead of the play mode prefabs so a great example of how you can make things much easier for yourself if you just take time to structure your code properly now that i could get back to edit mode in order to allow the player to iterate upon the ship it's crucial to be able to move in late parts and in thinking of how i could enable some dragging to move apart i came up with a very simple solution i could just delete the part and as soon as i start moving then automatically enable the part placement to place a new part exactly the previous one then as i was handling destruction i actually came across another interesting issue the code wasn't working i was deleting the part but it wasn't really disappearing it was still being counted as a child object right after deleting this was another excellent example of the power of experience i immediately recognized what was going on because i've encountered this exact specific issue one time before while working on one of my games the issue is that unity doesn't immediately destroy the object and update the parentchild relationships if you call destroy and right after checking the number of children it still has the same amount so when i first encountered this bug several years ago i think it was while working on battleground tycoon back then it took me hours of going crazy to figure out what was going on whereas now thanks to the power of experience i immediately recognized the issue and fixed it in a few seconds so yep another practical example of how everything becomes much easier the more experience you have with the delete working properly it was time to handle drag drop movement this was also pretty easy the only sort of tricky part is handling the drag drop events on world objects if you wanted to work on a world object you need to add a physics raycaster to the event system up next i added a proper action to the shield it activates using a key which can be rebound just like the thruster for the activation it just grows a shield sphere and for the visual i actually made a really interesting shield shader effect quite a long time ago this was the perfect time to reuse that shader so with that and with the basic logic and yep the shield was working this was the end of the second live stream again another super productive two hours thank you all for joining me and before the third live stream i also added a really cool new feature to my overlay you can go to your user page on the website and customize your character this was a feature that already existed but now on this update you can select a custom texture so you can draw over the default body parts you can draw anything and make something really nice and custom it's a pretty fun feature for live streams and during this third one actually a bunch of people try them out and it worked quite well first task was adding another spaceship part a canon that would fire projectiles just need to create a new scriptable object for the new part type create the prefabs for edit mode and play mode and these scripts to run the custom part logic so yep super easy to add any number of parts to the system then the logic for the canon this one is all about shooting projectiles it just spawns a bullet prefab which moves straight forward pointing towards the mouse position the visual for the bullet is also pretty simple just add a nice material with some mission and some bloom and already looks pretty good and for another super awesome builtin unity tool is the trail renderer you just need to add the component and play with some settings and in a few seconds you've got a really nice drill this one for example is one of the unity tools that i cover in detail in my ultimate tnt overview course after that was handling some collisions just some physics and legends and when they happen just destroy the bullet and create a spawn explosion effect then it was time to make a basic enemy i just wanted to make something that i could damage so just made a simple hue visual the enemy has a collateral and also script with that i just went into the bolt logic to test if the collision was with an object that had the enemy script and if so just deal damage for handling damage once again i reused my super useful health system i actually made this class on the very first video on this channel four years ago so that was a very long time ago and here i am still reusing it in a new project it's super simple to create a new health system and connecting it to the enemy damage function for the visual i went with the world canvas for the health bar these are also super useful i made a video on them you can place ui elements in the world and it's super useful because the ui image has a fill amount setting which makes it perfect for making a health bar just add that listen to some events on the health system to update the health bar and everything works next up just for fun i had a quick minimap i covered how to do this in several videos specifically i made a short where i built this in under 60 seconds it's really easy all it requires is a second camera that only renders objects on the minimap layer and a render texture where that camera will render onto so in a very short amount of time already had a nice minimap working after that i made another part just for fun just to be able to see how fast i could build it because the code is so well set up this only took about 10 minutes the part was making a laser so just making the scriptable object in the prefabs then script for it so it works kind of like a static bullet there's a collider that stretches towards the mouse position and deals damage to anything it touches and at that point that was the end of the final live stream so after that i just worked a bit more on my own just publishing a few things first i added some icons to the part buttons just took some screenshots of the parts then also implemented a save and load system onto an actual file again this was super easy because the whole edit play mode connection already worked just like a save all i had to do was actually save that data onto a file doing that really helped with iteration so i no longer need to rebuild the same ship over and over again then i added a visual for the selected part so you know which one you're interacting with edit the same health system to the ship i made the enemies fire bullets that can damage the ship and made the shield protect from the enemy bullets and finally just had a simple win condition so just destroy all the enemies and you win with all that done over here is the final system alright so here i start with my basic spaceship core then i've got all the buttons down here for the various ship parts that i can add so i can just click and drag the mouse in order to place them anywhere i want and as soon as i drop them there's a nice visual connector connecting them to the ship and of course each part is a different thing so over here for the thrusters they provide some thrust so i want one up here and i want it to push upwards so i can click to select the object and over here on the window i can rebind to any key so this one i want to point out so let's apply it to w then let's drag another thruster maybe in there and maybe one there using the mouse wheel i can rotate the selected object so put it just like this for this one i want to go left so bind it to a this one bind it to d now for some offensive abilities let's add two cannons so over here on the cannon just click and drag let's place them in there and let's also add two lasers okay so here's my very basic ship let's hit on play and if there it is i can move up down left right so i can control and by clicking i can shoot my lasers and my cannons at the same time so over there is an enemy and i can just shoot them and take them all down but now as my ship falls down i see that i'm stuck so i really need another thruster in there so i can press a button to go back into edit mode now i can place another thruster put it up there and for this one let's bind it to an s and there you go now if i accidentally get flipped around i can still move okay now there are a bunch of enemies over there and i'm taking a lot of damage so i really should improve my ship so let's go back into edit mode and again the important part about this system is iterating upon your ship design so let's add some defense by placing down a bunch of shields so let's make them all activate with the space bar and of course if i accidentally place any of these anywhere i can just click and drag in order to move them around or i can simply delete each part another thing i can do is also press on the save button here and save it onto a phone so i can press on save now i quit the game and over here is my save phone as you can see just some simple json and i can play the game again here is my empty ship again now i click on load there you go the exact same ship so i can now hit on play and now with my cannons my lasers and my shields as well i can defend myself i can take down all the enemies and just do everything and complete the mission so here's the big one and just gotta shoot a bunch of things and there you go take them out all right awesome so here is the fully functioning ship constructor system you can download the project files to check out all the code for yourself and maybe build upon this and make some interesting prototypes thanks again to everyone who joined me on the live stream it was fun to build most of the system live on stream i only did a bit of work off stream so pretty much the entire building of this system is recorded you can see all of the recorded vods to see how long it took me took me about six hours to build all of this oh no i'm quite pleased with the result i'm thinking i might further expand upon this maybe make some more parts maybe add a few more energy system and maybe make this into a proper easy to use asset let me know in the comments if you'd be interested in something like that so basically a more polished more featurerich version of this system alright so again thanks so much for watching i hope you enjoyed watching this video and watching the system be built so thanks again and i'll see you next time