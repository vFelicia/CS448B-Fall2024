hello and welcome I'm your code monkey and in this video we're continuing to make a character portrait window we're going to add some character stats to our window let's get started all right so here's the scene from the previous videos we can click on a character and it spawns the window click on another and it spawns another window and I can close them ok right so right now it is only displaying the portrait of my character let's also display some stats now the first thing we need to change is instead of receiving a transform to fall let's follow a character object so in our code on the window character portrait and here on the show static instead of receiving the transform let's receive a character character character on our dictionary we're no longer working with transforms but rather with a character let's make a private character for our character our following on the window dictionary down here let's create a new character as a dictionary at test for the key of this character show with this character and set this now on our show instead of taking a transform let's get a character character so transform will be the character that transform all right so we have replaced the transform with a character so this script now receives a specific character object this is what we're going to use to grab the stats at this point in our window so now that our class is working with characters and set of transforms and let's go into the game Handler and here instead of showing using the character transform we're going to use the characters I have a function down here setting up these steel characters so on the first one let's send this one on the second one Watson this one alright let's test now everything should be working exactly the same ok there it is my two characters are moving the same I click and chose everything's exactly the same great now obviously the differences that are internally this window no longer has just a reference to this transform but to the character object itself so let's take a look at the character object and see what information it contains so this is the character object as you can see it has some member variables and some generic functionality it has some events in here it has a reference to the transform it has a name a level and stats on our constructor we are simply initializing random values to our stats and creating a function periodic which is adding experience every 25 milliseconds when we add experience if we have enough we increase the level which increase the stats randomly so this class is simply representing a very generic character that you would use in your game alright so now let's set up the window to display our stats back in our editor let's grab our prefab and let's set it up with various text fields all right so our window is now set up let's go into our code so since we change the show static to use characters instead of transforms we can access the stats from that character on our show function in here I can go transform dot find the name text get component type text and set that text to the character dot name alright let's see if the name is correctly showing you okay here I am I click this character and as you can see this character's name is neo and this one in here is named only Unitas ok so let's set up the rest of our stats so since the name never changes we can only set it in the show but the other valleys do change so let's set them on our update in order to keep our game performance let's grab the references to our text object in our awake instead of doing fine and yet component on every update so let's make some member variables for the text objects let's grab the references on our awake so okay I have all my references now let's set them up on our updates so the level text dot text is going to be my character dot level doc strength do the same thing for all the other stats and for my experience bar I have set it up so that I can modify the welcome scale which is a vector3 that receives something than 1 + 1 + 40 X I'm going to need a normalized value which the character has as a function called get experience normalized which gets the experience as a value between 0 and 1 which then modifies the scale between 0 & 1 alright so let's test and see if our values are being updated for each of our characters alright so here's my characters and when I click on it there's the window and it's correctly updating as you can see it shows the name shows the level the experience bar is updating as it increases it increases the level it increased one of the stats and I can still close and reopen it and it all works perfectly fine all right so now this works but if your game is heavily dependent on performance it would be wasteful to update on every frame the class is firing some events when the character levels up and when he gains experience so let's use that to update our values let's comment out this code on our update since we're going to deal with this another way so let's first make some functions update our balance so a private void of the experience bar and a private void update stats and let's copy this code in here ok so on our show let's call both of these although one and the update stance so let's subscribe to the character dot on experience gained event it is a basic advance so it gets an object sender and event args e on experience gained we simply want to update our experience bar and on the other events on go home though on this event we want to update the experience bar and also update our stats all right so now the only thing we're doing on update is setting the camera transform since that does change every single day and on our show we're subscribing to the events and only updating our values when they actually change so let's see how it's working and yep there you go I can see the character I can see the stats I can see the window and everything is increasing and updating exactly as it should but now it is much more performant so there you have it we have add the ability to display character stats on our window alongside our portrait camera so the main camera can be elsewhere in your game and it can still view the character and its stats as always you can download the project files in utilities from Unity code monkey comm if you have any questions post them in the comments and I'll do my best to answer them subscribe for more videos and I'll see you next time