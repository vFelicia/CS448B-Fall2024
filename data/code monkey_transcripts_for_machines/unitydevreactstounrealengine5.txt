hello and welcome i'm your code monkey so there's a new unreal engine 5 showcase and i figured i'd share my thoughts as a yinty developer now if you're regular in channel you probably know that i've been working with dnt for almost 10 years now in all that time i made and published 8 steam games i transitioned directly from flash into unity because at the time that was pretty much the only option and i've been very happy with unity ever since so i never really had a reason to check out another game engine but unreal engine 5 definitely has quite a lot of hype behind it so let's see what it has to offer from the perspective of a unity solo indie game developer and if you are a unity developer check out my complete courses learn how to make a builder defender game using csharp just like i make my own steam games or learn how to make games internally using visual scripting build a platformer a action rpg and a first person shooter or learn all about unity with the ultimate overview course which contains over 13 lectures each covering a different tool or feature of the engine to help you make better games faster check them out to the link in the description now one of the main features of unreal engine 5 is nanite our virtualized micro polygon geometry system that frees artists to create as much geometric detail as the eye can see virtualized geometry supports orders of magnitude more triangles without compromising speed and replaces the traditional system of mesh lods handling all detail transitions seamlessly without any additional setup in other words nanites lets the artist create while the engine does the work alright so the first thing they show is nanite it's this system for unloading objects with millions of triangles and the system is smart enough to automatically generate all the leds with seamless transitions i work mainly in 2d so dealing with geometry is not something i usually deal with but i know just how time consuming it can be to have to create all the various leds for each object so having all this be automatic all of it just works that seems like huge deal for asset creators based on demo it is totally seamless i cannot find the seam anywhere i guess my only question would be just how memory intensive is it all of those automatically generated download these need to be in memory somewhere so i wonder what the cost is at the same time what is the cost in terms of just standard storage games keep getting bigger and bigger so with this either the games will have a higher startup time because it's dynamically generating all the lods or they will simply get bigger and bigger with hundreds of gigabytes but anyway it's definitely very impressive just drop a super high resolution 3d asset and use directly in the game super easy while highly detailed assets are great on their own high quality lighting that realistically reacts to your scene is what opens the door to more dynamic worlds and immersive gameplay lumen is our fully dynamic realtime global illumination solution that immediately reacts to scene and light change making for more believable experiences and the gi hooks in directly with our time of day settings allowing for true physically based setups for photorealistic environments the mega skins library has meticulously calibrated physically based services and objects in the thousands of assets as of today and the assets that were highlighted here show just how powerful it is to have nanite and lumen working in tandem now this part looks really gorgeous lighting is definitely the most important thing when making a scene look good if you have some great assets but terrible lighting then your game will definitely look terrible having lighting of this quality in real time is extremely impressive light baking is one of the processes that i most dislike it always takes me ages to figure out the right settings to make something look good so having lighting of this high quality running in real time is definitely very impressive being able to change the lighting at will and test out different times of day won't be a great boost for games with day night cycles of course when in development having access to high quality content that's easy to use helps you iterate quickly and saves lots of time that can be better spent elsewhere on your project with kwixel now being a part of the epic games family we've made the full mega scans library free and open for all unreal engine users bridge our online browser for mega scans assets has historically functioned as a standalone application for quickly exporting assets in bulk directly into the engine albeit separate from unreal quicksole is definitely one of the best things about unreal all these super awesome high quality assets free to use in your games it's insane just how good it actually is coupled with the free price tag at least if you're using unreal now for me i usually prefer making some more cartoony and low poly assets but if you're making a realistic looking game then quickson is definitely a godsend also by the way if you're a unity developer you can still use quixote it's just not free i've only briefly looked at the asset list but they've got quite a lot of stuff today we're happy to announce that is now natively integrated directly into the engine ui now you can simply drag and drop assets directly into your scene for a more intuitive and connected experience and simply logging in with your epic id gives you immediate access to thousands of assets to use for free in your unreal engine projects just being able to browse and drag and drop assets directly on the scene is awesome i certainly wish unity had something similar to this instead of having to import an entire package into your project i wish you could just browse the package just like this and select each individual asset to import that would certainly help in keeping the unt project smaller and ensure that you only have the actual assets that you're using by the way if you find the video helpful please hit the like button it's a tiny thing but really does help thanks we are constantly looking to enhance the value of the mega scans library and today we're excited to announce that we're adding a brand new asset type called mega assemblies mega assemblies are the natural next step for us in removing even more barriers for artists in crafting their worlds by combining existing assets from the mega scans library our artists are preassembling elements that can be quickly accessed and leveraged to populate your scenes now this one also looks great for me i'm mainly a programmer and definitely not a level designer so one of the things that i absolutely don't like to do is when i have to do some sort of demo and i need to populate it with all kinds of props so it doesn't look too empty individually placing each proper asset is not something i like to do so having some preset assemblies on top of each individual asset that can certainly be very useful and i'm guessing it will help speed up level design quite significantly my only question would be just how many of these assemblies do they have all they show here and all they've shown in the previous showcase is this desert environment so the question is do they have cities forests maybe some medieval villages maybe some more fantastical i'm not sure i've never used quixote so maybe they do have all of that and i'm just not familiar with it with ue5 we are reimagining what collaboration looks like for teams and projects of all sizes a common challenge when collaborating on large worlds is deciding how to structure map content so that everyone on the team can easily work without asset contention while also avoiding painful merge conflicts a new system called world partition makes traditional world building workflows obsolete by changing the way that we think about map files rather than requiring artists to build out map content as a series of streaming levels world partition allows teams to think of a single map as one large world that gets broken down automatically into many smaller streamable cells on a grid these cells can be selectively loaded or unloaded in the editor to save on edit time resources allowing artists to only load up the sections of the map that they need now this one is interesting being able to have a single huge giant world but only low chunks of it so multiple people can work at once now for me i mostly work alone so this is not a problem that i'm usually faced with but again i can definitely see how useful this is on a large team with multiple level designers the more people you can have working at the same time the better you can actually do things and just in terms of performance it is probably also a very good thing if you unload a small chunk then you can probably do some work on a hyperrealistic game even on a weak laptop managing this much content at runtime typically requires a ton of thought about how to stream relevant content in and out to stay inside performance budgets fortunately world partition handles that as well at runtime only the cells in a userdefined radius from our player are loaded and as we move new cells are streamed in while cells no longer needed are replaced by their lower resolution hierarchical level of detail or hlod version and since all projects have different requirements the cell size and loading radius are fully configurable to match each project's content streaming needs and on top of that it seems that this system is not only for edit time but also for runtime having an automated world chunk loading system is certainly going to be useful for devs working on huge maps making a good system like this takes a lot of work so if it's customizable enough to fit any game then this is another super useful feature to build and maintain more scalable gameplay systems we've also added a new framework called game feature plugins that will allow you to build and ship game content in a more modular way with game feature plugins numerous core gameplay features can be built in parallel with better encapsulation and finer content organization then they show game feature plugins it seems to be all about writing some individual modular components and then switch between them in runtime so it's one of those things that is potentially very complex and requires building your game to a specific architecture but if you come into it you can have some huge benefits using unity scripting objects you could build something like this just make your game logic mostly databased and load components in and out then if you needed to make this online you could combine it with the unity addressable system if you've never experimented with a more data focused architecture i would definitely encourage you to give it a try it's certainly interesting all of the assets and logic needed for the ability including new animations input controls blueprint code vfx and audio are contained inside this plugin and core game classes have no idea that these assets exist until we activate it now i do like how this feature kind of forces you to think about how to best organize your code and all your assets since the plugin needs to be fully decoupled from everything else so that alone will force you to write better code which is always a good thing we've also added a feature called animation motion warping which allows you to manipulate root motion animations to adapt them to the world before triggering the vaulting animation a blueprint script determines her rotation how high up she jumps how far she needs to move to get to the other side and where her feet should land motion warping then adapts the root motion of the vault animation to match this data then another interesting feature motion warping being able to slightly modify animations in runtime to make them perfectly match all kinds of objects it seems to be quite simple to use so that's great anything to make animations feel much more natural without having to make all kinds of variations one thing unity has which i'm always impressed with is kinematica that's also a system for generating some dynamic animations and runtime it's been development for quite a while so i wonder how they're progressing with that haven't seen it in a while but every time i do it's always very impressive here at epic we are passionate about building great tools and new technology and a big part of our excitement is being able to bring you the developer community on the journey with us so today we're making an early access build of unreal engine 5 freely available on the epic games launcher in the unreal engine github so you can explore and test out these tools yourself to get an early look at what's coming later in the full release of ue 5.0 and the final announcement is that it's now available as an early access version for free i've never touched in real engine before so maybe i'll give it a try and see what it's like to try out unreal from unt dev so all in all my thoughts on this are this is definitely an interesting and potentially big upgrade as a game player i would say this will lead to even better looking games with some gorgeous dynamic lighting and possibly also some bigger games if nanite does indeed speed up asset creation as well as some better performance for those huge worlds thanks to that streaming system now as a game developer from all the features they showed it seems like they're turning more the aaa developers making these huge hyper realistic worlds with some giant teams as opposed to some smaller indie devs so for me as a solo indie dev who is mainly a programmer and who mainly makes some cartoony or low pawn games for me the high quality real time lighting is probably the thing i would be most interested in it's kind of funny how both engines are sort of targeting the different audience so unreal targets aaa developers with massive teams and also the movie industry with all the super high fidelity tools whereas unity is more focused on in developers and letting everyone be a creator running their own games from the lowest mobile devices to some highend pcs and unity is also targeting more of the automotive and building industries so both are definitely very great very capable engines and both have their audiences as for me unt is still perfect for everything i want to do but i definitely would like to give unreal a try maybe there's something that they do much better than unity that i simply don't even know about so that would be interesting to try out alright hope that's useful check out these videos to learn some more thanks to these awesome patreon supporters for making these videos possible thank you for watching and i'll see you next time you