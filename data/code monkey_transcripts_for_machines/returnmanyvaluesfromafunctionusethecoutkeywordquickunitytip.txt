hi there this is a quick tip for how to return multiple values from a single function so I have this scene here with a zombie just hanging around and when I click on the mouse button there is an explosion that should damage him so I can click somewhere and if it's within a certain distance you know damage if it's far away it does not so let's see the code so over here is the script running on the scene and here we're simply doing on our updates testing if the left mouse button is down if so we spawn the explosion on the mouse wrong position on the spawn explosion we simply instantiate the prefab on that position then we use this function to test if the zombie should be hit and if so we trigger damage now in this function we receive the zombie position and the explosion position then we simply do a distance check between the zombie position and the explosion position and if it is within a certain range then we return true if not return false okay so this works pretty simple if the players within this distance he won't take damage if not he will not however now let's say we want the damage to be dependent on the distance of the bomb and also we want to get a random chance for the bomb to cause a knock back this function is simply returning a boolean so right now there's no way to return more information now one way we could do it is by creating a class or struct to hold the various values and return an instance of that class with those values so for example here make a private struct zombie hit info and inside we would have a public pool for hit then a polygon for damage amount and the public ball for cause knockback so you could do this and return this object in there so this would work but there's another way that does not require is to define another different struct or class so instead of that we have our function it's some returns a boolean and in here we can add several other parameters and now we need to do is at the out keyword so for example when in for the damage amount and evolved for the cost knock back the out keyword means we're going to modify these parameters inside this function so we can access them outside so if he's far away we simply set the damage of to zero since it's not going to cause damage and the cost not life we also set it to false so as you can see the air disappeared since if you are using the out keyword you must set those variables before you exit the function so in here let's make the damage amount dependent on the distance so here we are defining the damage amount based on the distance to the zombie to the explosion sophie is right on top he takes 50 damage if he is right at the edge you only taste one damage and we are simply defining a 50% chance to cause a knock back so then in here in order to use these parameters we need to first create some variables to hold our values so in here before we call the function we define an inch for the damage amount and a bulb for the cause knockback and here when we do our function call we pass in those two and then our out for the damage amount and out for the cause knock back so the our keyword means that when this function is run we know that we have some value stored in these two so in here we can use this damage amount instead of using effects by only use the one returned by this function and if we are cause knockback which regulate knockback okay so essentially we have three pieces of data being returned by this function we've got a boolean if the zombie has been hit we have the damage amount to depend on the distance to the explosion position and we have a boolean for the cosna track so let's see okay here we are let's cause M Juran here and there you go took a little bit and they knock back and now there was no knock back and right on top takes 50 and far away takes nothing and like that okay so as you can see this is how you return multiple values from just one function and that's it hope you found this tip useful alright see you next time you