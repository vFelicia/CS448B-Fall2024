hello and welcome i'm your code monkey and here let's build a really interesting system that i've wanted to make for quite a while an inventory tetris system now for me i remember this system from playing commandos as a kid great games or some of you might know it from resident evil 4 or maybe more recently from something like daisy or escape from tarkov it's an interesting system that adds another layer of engagement to your game's inventory i have to say this is quite a bit more difficult to make that i initially anticipated it took me about 8 hours to make but i'm quite happy with the final result after watching the video you can go ahead and download the project files and inspect the code for yourself so let's see what i built here and how it works do you want to master game development and make a fulltime living creating games learn how to do it with this video sponsored the ultimate gamedev course it's a massive course model at an extremely low price taught by both jason wyman and thomas brush who together already have over 3 500 students worldwide it will teach you everything you need to know to make both 2d and 3d games on a professional level with some good patterns and workflows on top of this it will also teach you how to successfully launch your game and hopefully make a fulltime living so you will learn how to work with publishers crowdfunding how to run a successful kickstarter just like thomas himself has done jason is a veteran in the aaa games industry having worked on massively complex titles like everquest 2 and vanguard and thomas has published two games that were very successful and received a bunch of awards and raised hundreds of thousands of dollars from publishers and kexner the campaign starts on july 1st and runs for only 30 days or until all the seats are sold out there's only 300 limited seats available to ensure the best experience possible for all students so go ahead and get the ultimate game of course before the seats run out with a link in the description and turn gamedev into your dream job now if you've been watching the channel for a while just by looking at the final goal you can probably already guess how i'm going to start to build this the answer is of course by once again reusing the grid system this class has been insanely useful in so many scenarios now you can go watch the phone playlist to see just how many use cases this has it started off simple just handling the basics then start doing some pathfinding a turn based game after that a grid building system then a factory game and the last one which was the house building system so yep this one started almost two years ago as just a very simple grid system but it has really turned into an excellent example for seeing the benefits of writing clean code and reusing it in tons of different scenarios in reality what i really want to build here is almost exactly like the grid building system i want to place down objects in a grid and rotate them around so this is an example for how you can take the same underlying system and by just using some different visuals with a different concept then it becomes something completely new so that was my starting point i grabbed the grid building system 2d and started working on it first the system is based on scriptable objects for defining the placed object types each scriptable object holds the data for the prefab the visual and the width and height of that object so i just made a tetris item scriptable object definition and created a whole bunch of objects for all my items for the items themselves i simply just reused a bunch of items that i've made for some of my games so i've got a bunch of weapons from my very first steam game survivor squad i've also got a katana from ninja tycoon and some money from battle royale tycoon so yet another example of what you should do to become a very efficient indie game developer whenever you need new assets always check if you can reuse something that you've built for previous projects i drew these weapons all the way back in 2013 when i was working on my first team game and now here i am eight years later reusing those same assets once again okay so i had the atom scriptable objects defined and just with that i already had tons of things working thanks to the underlying grid building system so i could place down objects i could even rotate them and i cannot place them outside bounds or on top of other objects already a great start and thanks to reusing a previously made system it really didn't take much work to do oh and by the way these characters on the bottom they are the people in chat i actually built a part of this system well in the live stream my live streams aren't planned so make sure you hit the bell icon if you want to know when i go live and if you want to know how the overlay works i also covered that in the transparent unity window video so after making the items the next task was to handle moving them now for this the final goal was to make it with a drag and drop but first i just wanted to handle the logic there are some potential issues with regards to what happens if you move it to an invalid position so you need to be careful not to lose the atom forever also you need to allow for the player to move the atom by just one position doing that was actually quite simple so first thing i do is just remove the atom from the inventory then just check if it can be placed on the final position if so i move it and if not i just place it back in the original position doing it this way by first removing the item means that the new position can overlap with the previous one so that logic seemed pretty complex but was actually quite simple now one huge change that i needed to make to this whole thing was to make it on a canvas the grid building system that i made previously is based on placing objects in the world not the canvas but of course the inventory is meant to be a ui element so i had to convert that this definitely required quite a bit of thinking first i was thinking that maybe i need to convert the whole grid class but in reality the 2d world space and the 2d canvas space are really just the same thing they are world spaces based on two dimensions so i didn't really need to change the underlying grid at all i just needed to modify how i grab those positions in order to use the mouse canvas position instead of the mouse button position and then of course i just swapped out all the visuals by changing sprite renderers for image components and actually one issue was with the grid visuals now normally for the debug visuals i just use debug.wrongline but that only works in world space so that's actually something that i'm going to have to work on in the future all of the logic works in the ui but i cannot see the grid for the background visual i really just made some images now the good news is that by using the grid layout component it makes it super easy to align the background perfectly with the grip without that the system was now working on a canvas then as a tiny thing i also added the tooltip that i made in a previous video i added it just to show the message when the position was already occupied very simple then at that point i started to think of my final goal which was to have the player's inventory and then on the side a second inventory that represents whatever the player is looking at so maybe it's just the floor so that the player can drop some items or maybe it's the inventory for some chess the players looting it can really be anything in order to make that second inventory i just needed to pretty much duplicate my object and in doing so i realized that i was handling all the manual placement logic in the exact same script as the inventory logic itself now if i do that and i duplicate it then i get all kinds of issues so the next task was to refactor the code in order to separate the underlying inventory tetras logic from the manual placement with those two scripts separated i can now have my two inventory tetris and only apply minimum placement to one of them or actually i can have as many inventory tetras as i want for this design i only need two but in reality i can add as many as i want next up was preadding some items to an inventory the final goal is to load up the second inventory with whatever items the player finds on a chest or something so preadding those was really just the case of using the same function that i used in the manual placement script so just place a certain item type on a certain position and for defining which items to add i also very quickly implemented some simple saving and loading i also added this to the house building system it's actually quite simple and i covered it a while ago in a dedicated video so go watch that if you want to learn a simple but powerful way of handling saving and loading i really just have to define a certain save object and then save the whole thing as a simple json string then unload simply just parse that json back into the save object and place them on the inventory as normal it's really quite easy to do by the way if you find the video helpful please hit the like button it's a tiny thing but it really does help thanks next up adding the ability to drag and drop this one was also pretty easy i covered drag and drop in a dedicated video previously so what i did here was just grab exactly that same class from that video just by doing that i could already click to drag and drop an item now while the atom visual was indeed moving the underlying grid position was not so for that i just made a drag drop system kind of like a manager so when an object gets grabbed the system listens to it it knows which inventory system the object came from and then i just apply the same moving logic that i made previously so just remove it from the current position and try to drop it on the target position if it can't be dropped then really just drop it back where it came from then the next tricky thing was how do i handle dragging and dropping between different inventory objects i actually thought this was going to be very difficult but it turned out quite easy all i really needed to do was go through all of the inventories so i just have a list go through each inventory one by one and get the local mouse grid position if the mouse is on a valid grid position then that means the mouse is on top of that inventory it's really that simple just check if it's not on a negative position and not more than the width and height and with that i know which inventory is meant to be the target then it's running the same drag drop logic remove from the original inventory and try to drop on the new inventory and that new inventory can also be the exact same one or can be a different one then a task that was actually quite difficult handling rotation while dragging this was difficult because of how the objects rotate and where on the object you grab with the mouse so as an object rotates the origin is always on the lower left corner so that means that i need to rotate the visual object but also offset its position this was very tricky took a lot of trial and error but i finally got it working so i could grab an item rotate it and drop it somewhere after that i just added a bit of polish so i removed the grid visual from the sprites themselves and made it only show up while dragging i also changed the background of the inventory to something a bit nicer and i added a little bit of snapping while dragging as well as hiding the mouse so put all of that together and here is the final system so starting off here is my empty inventory now let's say that i'm playing the game and i come across a chest so i press a button to open the chest and yep out pops out the inventory showing the chest contents now i can very simply just click and drag in order to move each item so i can move it to a different position on the exact same inventory or i can bring it back into my own inventory then if i also try to drag an item and drop it on an invalid position so right here in the middle of nowhere i drop it in nope i cannot drop the atom there so i get a nice snow tip and the item goes back to where it came from so i cannot drop an item outside the inventory and i also cannot drop it on top of the position that is already occupied so i just click and drag and drop it onto new positions so just like that now once i grab all the items then i can pretend that i open a new chest and load some more so all these items in their preset position is just a basic safe system at work so once again i grab this katana and i can move it and place it in here now while dragging i can also rotate the object in any of the four directions so i rotate it and i place the rifle right in there and then i just keep grabbing all the items and grabbing them position them where i want and load some more and get some more get a bunch of money put it on my nice inventory and just keep it up and yep there's my inventory all of it nicely organized with tons of items now like i said this actually took quite a bit more work than i initially anticipated but i'm quite happy with the final result you can go ahead and download the project files to inspect all the code for yourself now someone also mentioned during the live stream if i was going to add support for item shapes more than just simple rectangles it's definitely possible so i might do that in a future video i might also make it work as part of a larger third person shooter demo something like resident evil so hit the like button if you'd like to see some more on this topic also i'm thinking of perhaps punishing up this whole system and making it into my next pro asset let me know if you would be interested in this system as a fully featured super easy to use package also don't forget to check out the ultimate gamedev course in the description it's only running for 30 days so check it out and turn game dev into your dream job alright hope that's useful check out these videos to learn some more thanks to these awesome patreon supporters for making these videos possible thank you for watching and i'll see you next time