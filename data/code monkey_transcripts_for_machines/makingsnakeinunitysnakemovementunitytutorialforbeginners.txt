hello and welcome I'm your code monkey man the series were making snake in unity in this video we're going to create our snake and handle movement let's begin so we previously did on the set up on our scene so we can now start to actually build something the game of snake is played on a grid so let's set up our snake to move on that grid now before we do that lets just resize our elements to make our grid a bit smaller which will make it easier to see in our game view so the snake is already correct it is currently occupying one unit or level area instead of making it 50 by 15 let's make it just 20 by 20 and just like that our scene is now a bit smaller which will make it easier and more simple so let's begin by making a new class to handle our snake so get into the scripts folder and create a new C sharp script and name it snake okay so again the game is played on a grid now in here for our snake to move along the grid we need to first know where it actually is so we need to store a x and y position so let's store a private we want to store a grid position and we're going to use a vector to int call it grid position a vector to end is exactly like a vector except it uses ends instead of float which is perfect for a grid position so now in here let's do a private weight awake and on the weight let's initialize the grid position let's put it in the middle of the grid so on 10/10 ok and now on our private Lloyd update let's actually move the transform to the correct location based on the grid position since we set the grid to have a size of 1 the transform position will perfectly match our grid position so in here we simply do so just like that we are positioning our snake correctly ok so let's go back into the editor and now let's drag our script onto our snake game object and let's run the code and see if our snake appears right in the middle of our level if there it is there's the snake right in the middle ok great now back to the code let's add the ability to move our snake using the keyboard so on our update before we set its position let's do way if input dot get keydown of Kiko dot up arrow so this returns true on the frame when we press our up arrow so if we press up we simply change the grid position dot y and the y increases as you go up so we similarly increase it by one so a TFR snake moves up when we press the up arrow there it is in the middle and if I press up yep there you go it increased by one position on the grid okay let's add only other directions okay there it is I can move up I can move left right and now okay so we got all movement directions currently working now in the actual game of snake the movement is automatic and not when you press keys so let's deal with that essentially we want the grid position to change automatically every certain amount of time so to do that let's create a variable to count the time so we define a private float and we're going to call this the grid move timer this will contain the time remaining until the next movement and let's also define a variable to whom the time between moves so a private lowbred move timer max this will contain the amount of time between moves so here on our wake we set the grid move timer max to be at 1m so we want our snake to move on all the grid every one second and we set the grid move timer to be the grid love Tamra map so every second our snake will move on the grid so on the update let's increase the grid move timer by time.deltatime timed adult time contains the amount of time that has elapsed since the last update so after we increase it we want to test if grid move timer if it is bigger than grid move Tamra max if it isn't it has been one second since the last time we moved so we want to move again so now obviously we need to know where exactly we're going to move it towards which means we need a variable to store the move direction so let's go all the way up here make a new private again a vector to int this will be the grid move the right now unawakened let's set it a default two one zero so by default our snake won't be moving to the right and I'll update when we are inside here we're going to increase the grid position by the grid move direction and obviously after we move we need to reset the move time so we take the move timer and we reduce it by the grid move time or max so the code in here will run exactly once per second all right so let's test and see if our snake is indeed moving to the right every second okay there's a snake and yep moving to the right to the right to the right every second okay great now let's apply this to our keyboard input which again we are not directly modifying the grid position but rather in here we are setting the grid move direction so if I press up I set the grid move direction that Y to b1 and on the X to be zero so let's do the same for all the others okay so all the directions are set up when we press the up arrow we modified the move direction we set the x on the zero since we are moving up and we set the Y to pause one same thing for all the others so let's see okay there's a snake moving to the right now if I press up yep there you go he's now moving up now I press left and now he's moving to the left so as you can see by pressing the keyboard keys I can now change the direction that the snake is moving now there's still one thing which is different from the game which is we can go back to where we came from so here I'm going up now I press down and you can see that I can go down this is not intended so let's fix it so here on the update after we test for the input we're only going to modify our direction if we can actually modify our direction so in here for example when pressing up we can only go up if we are not currently going down so in here we check if the grid move direction if it's different from minus one then we are not going down if we are going down then we cannot go directly up the same thing on the down arrow we can only go down if we are not currently going up so let's apply this to the rest okay so let's see there's a snake going to the right press up and now it's going up pressing left and it's going to live now if I press right and if nothing happens because I cannot go right but I can't go down and now if I press up yep I cannot go directly up I have to go first to the right and then I can go up okay great alright so now that we have our basic movement set up let's clean this code a bit we're going to put all the input code in its own function so in here make a private void handle input we're going to copy all of our input code in there and on update we call that function and then let's also copy this code into a private void handle grid movement and call this in here and let's also copy the transform that position and put it on the grid movement okay so here on our update we are first handling our input which checks for all the keyboard inputs and then we do the handle grid movement which does the time check and then finally move Z transform now in here the one issue we still have is our sprite is not currently being rotated so our snake is always pointing up despite the direction that it's going so in here when we move we want to also rotate it to face the great move direction so here's a function that takes a vector to int and returns a float it's only does a math to get the angle and here when working in 2d you can see our rotation here these are our Euler angles and in 2d the only one we modify is the Z so in here we modify the transform dot humor angles make a new vector3 around 0 0 and then we modify the z and for these add let's get the angle from the vector and give our print move direction and just like that it should be working the one issue is the sprite is drawn facing upwards whereas in unity a zero is facing to the right so if you run the code you can see pointing to the right and it's pointing up and and they're in there so let's simply change that we could redraw the sprite or simply change in here and do this and just like that point to the right now I move up and now the snake is pointing up and pointing to the left and down and again if it's moving down I cannot go straight up and if I'm going straight to the left I cannot go straight right but I can move in every direction so there you have it we took our starting scene and began creating our game we set up the snake along with input controls and movement according to our game design in the next video we're going to spawn some food and add the ability for the snake to eat it as always you can download the project files in utilities from me in Tacoma keep calm if you have any questions post them in the comments and I'll do my best answer them subscribe for more videos and I'll see you next time you