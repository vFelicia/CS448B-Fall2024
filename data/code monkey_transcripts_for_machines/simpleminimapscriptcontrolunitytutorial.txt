hello and welcome I am your code monkey and in this video we're going to take our simple mini map and make some scripts to control it let's begin so this is what we have created in the previous video I have a player in here there are some enemies and some buildings you can see on the minimap various icons for the player the enemies and the buildings I can attack the enemies and they got a different icon when they are flying okay the minimap is composed of a camera rendering a specific layer into a render texture that is then displayed on the UI with a nice mask on top of it so in this video we're going to take that and create a few scripts to make our minimap system very simple and clean so first let's start by creating a new csharp script and let's call it mini map window this won't control our minimap window in here so we can drag it in here okay so first of all to keep our code clean let's put all of our various scripts in a specific namespace so in here let's make namespace minimap so our code is nice and clean and everything is organized okay now in here let's make a private static minimap window that will be our static instance and on our awake let's set dot instance instance equals this let's make some static showing hide functions so a public static void show and then we'll have a public static void hein on the show we do instance dot game object set active to false simply hide the game object as run show we are going to set the active to true and on hide we are going to hide the game object okay just like that alright so that's the basics for our minimap window so let's make a simple game handler script just to test our code so let's call it game Handler and drag it on to our game handler object so in here on update let's test showing and hiding the minimum so let's see if input get key down and let's do Kiko dot keypad plus so when we hit keep that plus let's go into the minimap dot minimap window and show our window and when hit the iPad let's hide the window and we can go up here and do using the minimap namespace and we can now remove this okay right so when we hit keypad pause it should show the minimap keypad it should hide the minimum all right let's see okay here right now there's a minimum and if I hit yep it's gone and if I had pause it shows okay great very simple and very useful in case you want to hide it for example during a cutscene alright now another script we're going to need is a script attached to each icon this script will be responsible for handling each specific icon so for example when we resize the minimap we want to change the icon size so let's make a new C sharp script let's name it minimap icon again to keep our code clean let's put it on the minimap namespace and here we're going to make some simple show and hide functions as well however each mini map icon is different so we're not going to use static so simply do a public void show and a public void hide and do the same thing game object out set active when we show we set it to true when we highlight Lee set it to false so let's add this script to every single minimap icon so here the player has an icon so drag it on to there the buildings each have a mini map icon so drag it onto there the enemies also have a mini map icon and finally the enemy flying body okay so all of our mini map icons now contain that script so just for testing let's do something with a player icon here on the game hand one let's add a serialized field for a private minimap icon for the player mini map icon okay and on our private voice start let's hide it after some time so for that I'm going to go up here and do using the code monkey utilities which is always you can wear out for free from unity code monkey calm so in the utilities I have the function timer which triggers a function after some time so after some time let's do the player minimap icon dot hide after and let's say two seconds and two seconds after that let's show okay so after two seconds the player minimap icon should hide and after four seconds it should show so let's see that okay there's the player there's the icon after two seconds it's gone and now it's visible again okay great we can now control each specific individual minimap icon great now the final element using our minimap system is the camera so let's make a script for that making new csharp script and let's name it minimap camera let's drag it onto our minimap camera again make it in the minimap namespace keeps everything nice and clean and in here let's also make a private static minimap camera for our instance and we're going to set it on private going awake and let's also grab a reference to our camera components any web camera equals transform yep component type camera okay now let's make a function to set the zoom so a public void set zoom and here we're going to receive a float for the orthographic size since our camera is in 2d and all we're going to do is minimap camera orthographic size equals orthographic sighs okay and let's make this static so we can call it using the class reference instance dot minimap camera okay and let's also do a public static float for get zoom which will return the camera orthographic size so return this okay let's also make some simple zoomin and zoomout functions so a public static void do in and a public static void zoom out now on our way come let's grab a float for our zoom which will be our starting zoom so in here minimap camera dot photographic size will be our starting zoom and let's define some constants for how much we want to change the zoom so up here let's make a private cons boat and call it zoom change amount and let's say 10 just for testing let's also make a zoom minimum any zoom maximum okay so with these values let's use them in here so when we're zooming in again remember this is the orthographic size which represents the amount in units that is displayed on the vertical axis by the camera essentially the larger the orthographic size the more the camera sees so when we zoom in we want the opposite so we want to reduce the actual zoom so do instance not zoom let's reduce it by the zoom change amount and let's do a test just to make sure it doesn't go too small and set the zoom to our instance zoom and for the zoom out we do the opposite okay so that's our minimap camera fully functioning now on the game Handler and let's create some debug buttons to test the whole thing we're going to use the CMD wa class to create some buttons on the Y to make testing very easy okay so let's remove the previous testing code and okay so now we should have multiple buttons want to show and hide the minimap show and hide the player icon and zoom in and zoom out on the minimap camera so let's test okay here's all the buttons let's hide the minimap and yep we can hide and we can show great show and now hide and show the player icon great and now we can zoom in on the minimum yep there you go zoom in up to a maximum and zoom out okay great so we now have various very simple functions that we can use to manipulate our minimap to do whatever we want now in order to keep the minimap system nice and clean let's make a simple main static class to handle everything related to our minimum so in here let's make a new csharp script and we're simply going to call this minimap and here this won't be part of the minimap namespace this won't be a static class and it's a simple class it does not inherit modern behavior so essentially we want all of the external code to go through this class in this class on load so in here let's make a public static void let's say show window and inside we're going to go into our minimap window and show it same thing for hiding now let's expose the camera functions so a public static void set soon it won't go into the minimap camera and set the zoom now let's do the same for all the other functions all right so now this main class exposes all the functions used by the various components so on the game handling let's make sure we use the minimap instead of all of these so in here minimap dot show window alright so now we have all of our code interacting only with a single class so everything is nice and clean let's test make sure everything still works exactly as previously yep there is everything so working I can show and hide the minimap showing hi the player icon and zoom in and zoom out on the minimum yep great now let's do one more thing which is fire an event whenever something changes so for example on the minimap camera in here would be quite useful to have an event that is fired whenever the zoom changes so let's make a public static event let's simply make it event handler and let's call it on Zoom changed even hammer is part of the system namespace ok now we could use a generic on the event handler in order to pass in the zoom but for now let's leave it as is so in here whenever the zoom changes let's fire this event if we do have subscribers ok now on the minimap window let's also make some events here make a public static event event handler and let's call it on window show and on window hi and let's fire these events in here all right now let's put it all together by capturing Andrey firing these events through the minimap main class so in here let's copy exactly the same events and we're going to have a public static void init function that will initialize the various events it won't go into the minimap camera dot on zoom change and here we're just going to fire the event through this class now let's do the same thing for the others all right so again now all we did was manage to make some specific events on each of the specific scripts then those events are captured by this main class and this main class fires them again so this way we can have all of our external code interact only with this class and now we can do things when the zoom changes and when the window is shown or hidden so for example we can go into the minimap icon and here at a private voice start and on start let's subscribe to the minimap on zoom change subscribe to that event and especially when the zoom changes we want the icon to modify its scale okay so in here or minimap icon we subscribe to the on zoom changed event and when that event is fired we are modifying our makan scale based on our base scale and then simply changing it based on the zoom so if the zoom is of 180 F then we get the base scale if it is lower then we get a smaller icon this way our icons don't take up the whole minimap when the minimap is for zoomed in so the last thing we need is to make sure that we actually call the minimap taught in it so that this can subscribe to all the various events so for that let's go into our game Handler and here before we do anything let's do minimap that in it now in order to make sure our various scripts all initialized correctly let's modify the script execution order so on the editor let's go into edit project settings and script execution order first let's make the minimap camera execute first then execute the window and finally the icon then our game handler will execute on default which happens after all of these then he won't call the static class init function and everything should work perfectly fine so let's see okay there you go everything is the same there's the minimap and now if i zoom in you can see that the icons keep the same size so they no longer become huge when the minimap is extremely zoomed in and if i zoom out again the icons still have the same size all of that is happening through a very clean nice class and the minimap icons are similarly subscribing to an event on that class and doing whatever they need so there you have it we took our simple minimap and made some scripts to control it through code as always you can download the project fanzine utilities from unity code monkey comm if you have any questions post them in the comments and I'll do my best to answer them subscribe for more videos and I'll see you next time