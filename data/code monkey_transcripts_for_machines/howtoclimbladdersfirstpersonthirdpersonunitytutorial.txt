hello and welcome I'm your code monkey and here let's build something pretty simple but also pretty essential to so many games let's enable the player to climb ladders we're going to cover two methods the first one just approaching the ladder and move forward to climb up so very much like HalfLife another one where you approach leather and then press a button to grab onto it so very much like an element ring we're going to cover both methods and both working in first and third person okay so let's do it if you use unity in any way definitely get my ultimatinity overview course it won't teach you how to use the many tools and features that ENT has so you can be more effective and make better games faster there's no need to build something yourself from scratch if there is already a builtin tool that works great UNT has tons of them that you might not know about the course already has 15 lectures each covering a different twohour feature of the engine and is constantly getting free updates or if you prefer stepbystep courses on making a specific game check out my Builder defender course I also have a phone course only on using visual scripting there's a single line of code in any of those games and if you're past the beginner stage and you want a guided path to help you make the jump from beginner to Advanced and get my turnbased strategy course it will help you massively improve your programming and Game Dev skills on all courses I'm always available in the Q a section answering all of your questions every single day so check them out to the link in the description okay so here's my starting scene I've got my character in first person and I can move and look around over here I've got a letter leading up to this container and then this big leather going to the top of that building then also have another character controller this one in third person again same thing I can move around and look at the leather for these character controllers I'm using the official Unity star assets these are super awesome free assets made by unity I cover them in detail in another video you have the first person and the third person controllers then for the visuals over here I'm using the Cynthia apocalypse pack really great pack perfect for a zombie or postbuncle lips type of game there's a link in the description if you want to get it okay so let's begin making our leather logic first let's head on the simpler method we want to just approach a leather and start climbing up so here is my scene and over here I've got the unleader object first thing we need is to actually identify if there's a leather in front for that we're going to be using a recast so we need to make sure that this leather object has a collider which it does then for identifying what collider we're looking at for that we can identify it by the end layer method so we could put all of the letters on their own layer that would work you would be more performant but using the layer method can be a bit tricky if you have too many objects since you have the only the number of layers so let's use the script method which is much more adaptable so let's just create a new csharp script call this letter then here I'm going to go inside the prefab so that it applies to all of them and just attach the script okay so that's it we don't need to write anything on this script just leave it as empty this is only going to be used to identify this object so now let's go into the player script so on the first person controller let's open up the first person script so here it is again all of this is based on the official entity star assets I just refactored it to match my coding sound so let's go down to find the movement logic so here it is the move function we first test if we are sprinting or not then we get move Vector to test if it is empty or not after that we use that to calculate the speed then blend some animations then we've got the input then we use the input to rotate the transform and finally over here here we have the actual move so before this let's fire a raycast towards the Direction Where We Are Moving so we're going to go into physics and for a recast now we want to fire raycast towards the Direction Where We Are Moving and we want to do it by a small distance just to make sure we don't start climbing from too far away however also the way that the player is set up if we look in the editor over here for the first person controller we can see the way the player set up is the origin is right there on the bottom so if we test exactly from this point we might accidentally hit the floor or some tiny Pebbles so when doing the raycast let's just lift up the point by a little bit so over here we do a raycast we need an origin and direction so like I said let's start from this transform that position and lift it up a little bit so let's find a float for the avoid for distance and put it at something small maybe just point one f so we lift it up by this bit then for the direction it's going to be the third Direction so this one is based on the player input then let's just grab the rake acid so out for the raycast hit and finally distance so we don't grab from too far so we float let's call it in leather grab distance and let's grab the leather within let's say 0.4 units so this like this actually here we want to lift it up a bit so pause the vector three dot up multiplied by that all right so this is our raycast let's do a quick test so if this one succeeds let's do something so over here just say debug.log let's go into the ray cassette and print out the transform okay so with this let's test so here I am I can move around and if I approach and I push towards the leather yep there you go it doesn't find the letter and if I push towards the container yep the container and over here this couch yep it does fine okay great so we are correctly identifying Which object is in front now let's use a try get component to identify and see if it is in leather so here if we have this let's go into this freak acid transform and in there let's call try get component try to get the component of type leather and if it isn't leather then let's change the movement to go up instead of forward so the thing that actually moves over here the control without move is the target Direction so we can modify this and to go up instead of forward let's just swap out the Y for the Z so over here on let's just set the target direction.y equals z then let's zero out the Zen and optionally you can also zero out the X movement if you don't want the player to slide left to right when on leather this one is optional either you want this or not it's very much a design question okay so this is it now due to the way that this specific controller is written it has a separate Vertical Velocity to handle jumping and grounding and then over here on the testing function it also has an is grounded volume so also need to make sure to set these so that it doesn't seem like the character is flying so just set this grounded manually into true and set the vertical velocity to zero to clear out the gravity again this part is specific to the way this controller works but for whatever control you're using the logic won't be very similar it just depends on how you're handling the jump in gravity so with just this it might already be working so let's test so here we are let's go approaching leather and keep pushing forward and if there you go it does indeed start moving up alright great so the character does identify the leather and does climb up it's a bit too slow but we'll fix that in a bit however the main issue is if I move back the character Falls instead of climbing the leather down so we're going to fix that in a bit as well now if you do this and you see the character constantly falling down instead of just staying over here on the letter if you see that then like I said that is going to depend on how you're handling gravity if the character doesn't climb or climbs a bit and then falls down again if that happens then the issue is you probably need to disable gravity while holding onto the leather now we're going to add some logic where we need to keep track of the grandmother States so let's keep track of that and in a super complex game perhaps you could use a proper State machine to handle it but over here this controller is super simple so I'm just going to use a basic volume so just here on the player let's make a private ball let's just call it is climbing ladder okay got a simple bullion by default it starts off as phones now let's make two functions so let's make a private void called grab leather and let's make another one private void drop leather on grab we're going to set the volume so set it to true and again depending on how you handle gravity this is where you would disable it then up here when we touch in leather let's set this one to true so we grab the leather and then we're going to run this logic if we are grabbing the Leather So after the raycast Let's test if is climbing leather if we are climbing the leather then let's run this logic and like we saw a while ago the issue is that it was climbing the leather way too slow that's due to how the speed variable is calculating so it basically takes the input takes how much it's actually moving so the way it works it gets a bit broken if we're moving straight towards the wall but we can manually set the spin so down here if we are climbing the ladder let's manually set the speed and let's set it to the Target speed which is the one that is defined up here so again on this controller it gets a Target speed and basically if it is printing user speed if not using normal speed okay so just with this the rest should already be working so if we touch the leather we grab the leather and if we Are Climbing we just keep climbing okay so here let's approach in Leather And if I go yep there you go it does move up and actually by doing this by adding that Boolean we also fixed the issue of the player falling when moving backwards so if I move backwards yep there you go it does climb down so now I can climb up or climb down and I can also hold on here and nope I do not fall down okay so far so good however the next issue is if I push all the way up to the top yup there you go as you can see the game is now broken the character is right now holding on to an invisible leather so I can climb all the way up to infinity and there you go everything is broken so at some point we need to let go of the leather now this is actually going to be pretty simple we just need to run different logic if we are already climbing and if not so over here if we are not is climbing Leather So if we are not climbing then we're going to try to grab it so we run this logic and if not then we are climbing the ladder so if we Are Climbing let's do a Brickhouse to see if we shouldn't let go let's do the exact same recast so we still got the avoid forward distance we still got the leather grab distance okay we do a recast and if it has the component then we're not going to do anything we're going to keep holding onto it but if it does not have the component so if in front there's a collider that is not in leather if so then we're going to drop from our leather and also if there's no hit if there is no collider in front we'll also going to drop our leather then for the drop leather function over here we just reset this one back into false okay so just like this let's see so let's go approaching leather and climb up and once we get to the Top If there go it kind of works I got up here and I didn't didn't let go of the leather but as you can see it looks quite a bit junky so if I get the top one with that look at that jittering constantly going up and down the issue with that is because as soon as we get to the top of the leather we let go which means we fall down by a tiny bit so we grab it again then we move up let go grab and so on to fix this we can pretty much just as soon as we get to the top we push the player upwards and forwards in order to make them jump over that tiny Gap now I can mention this controller already has a vertical velocity this is how it handles the jumping so I can just set this so when letting go of the ladder let's set this one to something so with this let's test so now if I go and I approach and I get to the top and yep there you go there's a nice jump and everything looks much more natural there you go just like this okay so far so good however with this external logic we actually broke the going down logic now if I climb leather and now I want to go down and I push back and there you go that's the issue pretty much it jumps back the problem is that over here on this raycast we're still using the same Target Direction so for holding onto the leather and we do a raycast pointing to the Target Direction which in this case is going to be backwards then obviously there's nothing behind us so this is going to fall so that is why we dropped the ladder and add a jump we can solve this by instead of using the current Target direction we just cache the direction when we first grab the leather so let's go up here to make a field to store that so let's make a private a vector 3 called the last grab leather Direction so we have this and then down here let's go into our graveloader function and over here let's receive this one and we're going to store it okay so then over here on the grab leather when we call this function let's press in the entire Direction when we last grab the leather so we do that and then when we are climbing the ladder for this week instead of using the corn direct Direction let's use this one the last grab will either direction that way even if we try moving backwards we're still going to make the raycast forwards so let's see so here we are let's try going up okay I'm holding on to the leather now I go back and there you go I can go down up and down and so on all right great so far so good now for the next issue is if we are holding onto the leather and I go down I try going down to the floor so now I'm still pressing down but I'm not looking over the leather so the character is pretty much just colliding with the floor instead of letting go and moving backwards so when we have this when you have the character moving down and colliding with the four we should really let go so for this we're going to need a different raycast first of all we need to test if we are climbing down the ladder and if so we want to recast down instead of towards the leather so that means we need to know if we are climbing down and thankfully one way that we can do this is with the super useful vector3 dot product this lets you calculate if a vector is pointing to a similar or opposite direction for example this is exactly the crucial part to making the backstab system that I covered in another video so here we can similarly calculate the vector 3 Dot and we calculate that taking into account the current Target direction as well as the last ground leather Direction let's do a debug.log on this to see what it says okay let's see so here on let's go and as I approach ladder and I move up there you go I've got a positive value and if I climb down there you go negative value and again this one works even if I'm pointing to the right and pointing back there you go it always works perfectly it even works if I'm actually facing the other way now if I press s I'm moving up the ladder and if I press W I'm moving down the ladder okay so with this we do know if we are climbing up or down now over here we just need some different brake cast logic so over here we test if this if the vector 3 dot if it is under 0 meaning we are climbing down the ladder if so then here lets we recast pointing down so let's do a physics style recast and now here we can really just use the transform.position let's Point down so Vector 3 dot down let's keep track of the raycast set raycast hit and finally for the distance so let's find a fold for the leather floor Drop Distance put it at something small maybe 0.1 F so for this distance here actually we need a different name so the form will break a set okay so if we have this if this collider does hit something so that means there's a collider right underneath the player if so then we simply drop the another okay so that's it let's test so here I am now let's go pick up the leather and go up now I won't down and as soon as I get the Fuller yep there you go with this drop all right great so I can go all the way up top yep it does work I can pick it up in there and go down any of this work I can jump pick it up in the middle and continue and yep everything works perfectly and to make all this work it just takes the unleader component and since I attached that component into the prefab that means all these letters are already climbable so I can now go up to this really tall building and start climbing and once I get to the top yep there you go with that really nice view so I managed to get to the point and now from here I can do anything I want all right awesome now with that working it's pretty trivial to handle the other interaction method where it requires a button input instead of automatic all it takes is over here when we are not climbing the ladder when we're not doing that instead of doing it automatic we're simply going to require a button input so let's go if input dot let's say get key down let's say just like in many PC games when you press the E key for interact so that's it that's pretty much all it takes so we press the E key and we're going to run the exact same code so now if I go and I approach the letter and I keep going towards it nope there you go I cannot automatically climb now if I press e there you go I start climbing up and down and everything works perfectly now you would obviously add some kind of visual button problem so the player knows when they can grab the leather as long as they are close enough and they press the button there you go they can climb so here it is the same logic fully working with that second method and for letting go either up top or on the bottom for that you could also make it input based but personally I think it makes more sense to be more Dynamic but still it would be the same thing instead of doing an automatic just do it based on a button press and finally here is all that same exact logic working in third person it really is only the same you just test the movement Direction grab the leather I also had the really nice leather climb animation to make it look a bit nicer in third person everything else is very much the same so here it is a fully functioning leather system with two input methods working both first and third person you can download the project files and play around the project for yourself and if you want these visuals it's from the Cynthia apocalypse facts so check the link in the description again if you use unity in any way definitely get my ultimate TNT overview course or if you want to make a certain type of game check out the others alright hope that's useful check out these videos to learn some more thanks to these awesome patreon supporters for making these videos possible thank you for watching and I'll see you next time foreign