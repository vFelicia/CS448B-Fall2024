hello and welcome I'm your code monkey and in this video we're continuing to create a graph in unity we're going to add the ability to switch between a bar chart and a line graph by making a generic chart visual interface let's get CERN all right so we previously converted our line graph into a bar chart in here we have commented our code so right now the graph type is hardcoded into our script now let's find a way to be able to display as either a bar chart or a line graph we're going to go down here and create a new sub class for each of our display types let's start off with a bar chart create a private class and name it bar chart video so we want to copy the bar chart specific code into this class so in here the create bar function let's dump it in here and as you can see we got an error because we need the graph container so let's store a rect transform for our graph container and we're going to create a public constructor in that constructor and let's receive our graph container and set internal value okay so this sub class now has everything necessary to display the bars since we want to have multiple visual types let's create a generic function to display the value in our graph we're going to make a public void and say add graph visual and Nord to have a generic function to add the graph visual we're going to send it a vector two for our graph position and a float for our graph position width we want to keep a good level of abstraction so we're going to give it the width of the graph position rather than a bar width so in here we're going to create our bar as we did previously so go up here and grab our bar code place it in here and we're going to modify the return type to game object so we can return this game object for our position let's set the graph position and for the graph position with what's in it this one okay so now using this function we should be able to display the bar graph as previously so back up here into our show graph code let's create a bar chart visual so bar chart visual bar chart visually new bar charts visual going to give it the grab container and in here I'm going to use it instead of creating a bar like previously let's go into our visual and do a graph visual I'm going to send it the vector two and this right here okay the set up is correct so let's test it out and it should be displaying the exact same thing as before yep there you go I can see my bar chart as normal great now let's add some customization for our visuals so here on the constructor let's receive a color for our bar color and a float for the bar with multiplier and we're going to store it as remember variables and in here when we're creating a bar let's go into our game object I get component of type image and set the color to our bar color and multiply the bar width by our bar with multiplier it's now appear when we're creating our bar chart visual let's add some custom things so let's send a color green and bar with multiplier and let's say point eight F so the bars won't be slimmer and they won't be green yep there it is the bars are now green and slightly thinner our graph is now easily customizable so now that the bar chart visuals are working let's make the in line graph visuals so we're going to be use the same pattern that we did so we're going to go down here and create a new subclass let's call it line graph visual inside we're also going to need the rect transform for our graph and Tanner which we will receive on a constructor and let's go up here and copy/paste the dot connection and the create code down here into our class now we also need a private sprite for our dot sprite and get that in our constructor okay so now let's create a function with the same signature as this one and we're going to copy paste the code that we were using in here so this code right here we're going to place it down here and first of all we need a game object to store the previous so private game object for our last game object which will be known by the phone we're going to create it using our graph position we don't need the position width but we want the signature to be the same as up here and since we need to return more than one value in order to clean up our graph we need to return the dot and the dot connection so let's return a list of game objects instead of just one game object so let's return the game object list and make a game object list and here and let's also switch the return value up here to keep the same signature and just going to return a new list of game object with just this project okay now let's go up here and when we're adding instead of adding like this let's do add range since we're receiving a list as a return value of the add we're visual but we're actually going to use our line graph the visual that's new we're a visual give it the grab container and give it the dots price let's comment out the bar chart visual and here instead of making the bar chart let's use the line graph visual and we're using the same method signature so right now we should be able to display our line graph again okay let's see and there you go we are back to this playing a line graph so again let's add some customization to our line graph so down here in our constructor letters received a color for the dot color and another Congre for the dot connection color down here let's apply our color so going to bounine image color long dark color and in here let's set the color to our dot connection collar and back up here when we create and let's give it some colors so for the dots let's make them green and for the dot connection color let's give it a transparent white as previously since that is the easiest way to view it yep there it is the dots are green the others are transparent okay great so we now have both visuals each in their own specific class that we can swap easily so now let's make our graph function receive which visual it will actually use so here on our parameters we want to receive the visual time so in order to receive multiple possible types let's use an interface so let's go down here and we're going to create a private interface name it I grab visual now in that interface we're simply going to have the method that we created in here this is the matter that this interface needs to implement and we're going to use this interface on both of our subclasses and on our show graph this is what we're going to receive and here wrap visual and in here instead of using all of this we're going to use the graph visual and add our graph visual and finally on our start method in here and let's call it with the visual so let's use the constructor we built in here go up here make an eye graph the visual graph visual and make this one that's what we're going to use so let's see if we're displaying the line graph visual as previously yep there you go it is this plane to the line graph visual okay now just for fun let's add a function periodic to swap the visual every half a second so make a function periodic create the function periodic is part of the code monkey utilities which is always you can grab for free from ent code monkey calm so in here we take a action and then a timer so let's say every half a second we want to call this action and this action won't swap the visuals so let's say this is the line graph visual and let's make the bar chart visual which we're going to use what we built in here and let's also go down here and clean up all this code get rid of all of these comments okay and now in here let's make a bone use bar chart let's set it to true if use bar charts okay so we're going to trigger this function every half a second and the first time triggers is going to use a bar chart so this play with the bar chart visual and then it's going to swap it out and the second time it runs is going to display the line graph and so on and so forth so let's essen we should be able to easily see the visuals changing there's the line and there's the bar line bar line bar okay awesome we can now switch the visuals very easily so there you have it we have successfully created different visual types that we can apply to our graph in the next video we're going to add tooltips to display the exact value of each data point as always you can download the project files and utilities from Unity code monkey comm if you have any questions post them in the comments and I'll do my best answer them ok see you next time