hello and welcome i'm your code monkey and here let's learn how to use render textures this is a unity feature that is extremely useful for making all kinds of interesting effects like an ingame tv or a minimap or much much more also this video is a lecture taken from my ultimate unity overview course unity is massive so in the course i explain over 30 features and tools of the engine that you might not know about there's individual lectures explaining tons of things like shadowgraph assembly definitions pro builder the video player and so on also the course will continuously be updated with free updates as i add more and more lectures explaining more and more tools and features so go ahead and get the full course and learn how to master all the unity tools to help you make better games faster in this lecture we're going to learn all about render textures in yinty this is a really awesome feature that has limitless potential for making some really cool effects essentially they are textures that you can render onto so instead of having the camera render directly onto the screen you can make it render onto a texture and then you can use that texture to make all kinds of effects like an ingame tv or a minimap or some custom postprocessing so let's see how it works first thing we need to do is actually create the render texture so for that just right click go into create and up here we've got the render texture so you get the object and over here in the inspector we can see all of these settings now the most important one is up here going to be the size so this is the resolution of the rendered texture naturally with a higher resolution you won't get better quality but at the same time obviously it has a cost for performance so the resolution needs to be tailored towards what you're going to use the texture for the size of the resolution itself is very important as is the aspect ratio so with 256 by 256 i've got a square image then you can apply antialiasing or not again this is going to have a certain performance cost you can set the depth buffer to be included or not so no that buffer no stencil or width stencil and the rest are pretty similar to the normal texture options so enable mid map play around the color format mess around with the wrap mode filter mode and so on okay so this is the render texture now let's see how we can use it over here for my very simple demo i simply got a player character that i can move around and now let's say i want to create the tv to see myself moving so for that let's create a new camera so a new camera let's name this the tv camera and now just like this both cameras are rendering onto the same screen however if we go into the camera and down here we go into the output section here we have an output texture field and as you can see it receives a type render texture so if we drag our render texture onto it and if just like that the main camera is back to normal and now the render texture yep there you go now it is rendering what that camera is seeing so this second camera is running onto the texture instead of the screen so now let me just place it on a random position so let's say about here and here's a quick unity shortcut you move around the scene view then select the object and then hit ctrl shift f and it places that object directly in there alright so there i've got my tv camera and all we need to do is just make a simple quad to display our texture so let me create a 3d object let's say a quad and let's position it in there then just make a material for it and simply render this render texture so we're using the render texture as if it's a normal texture and now if i hit play and yep there it is we have our tv fully working so as i'm moving around yep i can see my character move around on that tv alright awesome so these are the basics for render textures you render a camera onto a texture instead of directly onto the screen now one feature that is perfect for this is making a mini map so for that instead of placing the tv camera on the side let's place it directly above so let's put the y position bottom 20 everything else on zero and let's just angle it downwards so down by 90 degrees and now for a mini map you don't want to render it directly on the scene view but instead of on the ui so let's create the ui let's first of make a canvas then inside make a ui and now here you see two objects so normally you would use a normal image so if i go and see it yep this is a normal image so you can choose a sprite and it shows up however if i try to drag the random texture nope does not work that is because this one expects a sprite and not a texture so in order to show a texture or a render texture on the ui you remove this component and instead of adding an image you add a raw image and now this one does take a normal texture as its input so if we drag this one on there if there you go now it does correctly display our render texture so this is our ui let's just put it down in the corner and let's just add an outline just to make it look a bit nice okay so let's play and see and all right here i am and as i move yep i can indeed see myself moving from the camera that is seeing from above now a mini mac camera is usually supposed to be a 2d camera so in there that one has some perspective so it's not supposed to do that so that's an easy fix instead of making a perspective camera just make an orthographic then play around the size and yep now that is correct we've got a flat camera so like this minimap is working but mini maps are usually a simplified representation of the world and not exactly the same thing but smaller so let's see how we can achieve that now doing that is very simple we just need to play around with the normal camera features so for example up here we've got the culling mask so this is which layers this camera will render so let's make a new layer just for our minimap objects so let's go up here to layers let's add a new layer let's name this the mini map and now we go into our tv camera let's actually rename this to the minimap camera and here on the calling mask instead of everything first let's select nothing and then only the minimap so now as you can see it's now rendering anything and now we go into the player game object and in here let's add a component let's add a 2d sprite just a normal square sprite this is going to be the minimap icon and then we just need to put this on the layer put it on the minimap layer then let's play around the size and maybe the color and then just need to make sure that it's pointing upwards so let's just flip it over here on the x and yep like this we do see the player on minimap but we're also seeing it on the main camera so again very simple we just go into the main camera and on the calling mask we render everything except the minimap layer and yep that is correct now we can just play around with the minimap in case we want so for example let's make a round minimap instead and yep there it is so i did we just make an image for the border visual and then another one for the mask so for the image just a circle and then just made a mask and then inside it i've got the raw image with the render texture so with all that yep here we have our awesome minimap fully working it was very easy to do and all of it thanks to render textures now as you saw on the render textures over here you can also include the indepth buffer and the stencil buffer so with all that data you can get as creative as you want with your render textures and making some custom shaders okay now let's just briefly see some code so first you can create the render detection like we saw create a normal asset in the project files or you can create it directly in code by using the constructor so new render texture and then here you can copy the settings from another render texture or just create it by default so give it a size depth and so on so that's how you create it then for dynamically assigning it to a camera you go for example let's grab the main camera and you modify the target texture so this is the target random texture that we saw previously in the editor so in here you would set it then in order to remove it and have the camera render back onto the screen you would set it to no so for example if you want to capture the main camera to do something you would set the turret texture then you would tell the camera to render and then you would set the render texture back into note so that would essentially take a screenshot and it would stay over here on the render texture all right so that's render textures in ent it's an awesome feature that has limited potential for making all kinds of effects to make your games really stand out alright so this was a lecture from my ultimate unity overview course there's lots more explaining tons of things like shadowgraph assembly definitions pro builder the video player and so on go ahead and get the full course and learn how to master all the unity tools and features at your disposal in order to help you make better games faster alright hope that's useful check out these videos to learn some more thanks to these awesome patreon supporters for making these videos possible thank you for watching and i'll see you next time