hello and welcome I'm your code monkey in this video we're going to take our simple character movement and add dashing let's begin so here is the character we have we can move them around using the keyboard and the movement also test for hitboxes so if I move above I cannot go through that wall so now let's implement our will be an instant movement kind of like a short teleport so let's look at the code so far here is our player character script so you can see on update we have our Hamill movement function being called this function deals with the basic character movement and it checks for keyboard input it takes that input and it creates a movement direction using that direction it then moves them whilst testing for hitboxes okay so now let's go down here make a private void handle and we're also going to call this on update just like our handle loop now here the first thing we're going to do is test for keyboard input using our space key so if the input target key down of the key code dot space so when we press space we want to dash towards the in last move direction so I just move in there by modifying the transform dot position we're going to increase it towards the last move direction by a certain amount so in here let's define a float for the distance we're defining the dash distance in here but we can also define it as a member variable and that way we could easily modify to support some sort of upgrade system but for now let's keep things simple and just define it in here so we're going to move on towards the unless move direction and by the dash distance amount so let's see and we should be able to see the character move towards the last move direction by a hundred units whenever we hit space okay so here I am I can move around now I move to the left so my last move Direction is to the left now if I hit space yep there you go he teleported on left by 100 units so distance is a bit too big but everything else is working correctly however since we did a very simple transform movement we can currently dash through wall so if I go in here and I move up and I hit space yep I'm on the other side the wall that is not the intent behavior so let's fix it so back in our code in here and let's test for hitbox is the same way we did in the movement now before we do that let's clean up all of this code so in here we essentially need to do a ray cast to test if we can move and then we actually move our character so let's do that in a more clean way so then here let's make a bond can move we're going to receive a vector3 for the direction that we want to move towards and a float for the distance and here we're going to do the recast the same that we did up here using this direction towards this distance and we're simply going to return if this which returns a rake asset as you can see up here so if the rake asset can either if it is known then we can move there so dock neither equals no so now we have a nice simple function to test if we can move towards this direction by this amount so up here on our hammer movement we can now clean up this code okay so here is our cleanup code so first we define the base move direction which is the one using our keyboard input then we have a move the error vector we're using both so we can then modify the move the air whilst using the base movie Rex and why to test for a vertical and horizontal movement then we use our can move function to try to move first in the diagonal direction if we can then we skip all this and we just go straight in here and here we set the last move direction we play the monkey animation and we moving towards the move direction and if we cannot move then we play the at all animation and in here if we cannot move diagonally then we test for a move tear using only the base movie or X so essentially testing for only horizontal movement then we did a test and again for the vertical movement and so on now let's also put this in another function to keep the handle movement function even more simple so we may they try and move function it receives a base movement direction this incent is doing the same thing as previously and in the end it simply returns true if he did successfully move and returns false if it did not so appear on our handle movement function it is now extremely simple we get the input we commonly the move direction we call the function try to move if we can we won't if not we idle so our code is now much easier to read let's test to make sure that all of our cleanup did not mess up with the logic so here we are moving around and yep I cannot go through walls okay good so now that we have these two functions it is very easy to apply it to our so first let's reduce the distance is something more manageable and here we can call the try move to try to move towards the and last move dear by the distance so let's see if we can now whilst not going through the wall Here I am moving around and if I okay still normal if I upwards yep there you go I can no longer through the wall so now that we have the working let's have a nice effect over here I have a spreadsheet this is the same spreadsheet that I use for Hyper nights so we're going to use this as our effect now we want to spawn it as a prefab when we so let's make a prefab so here is a prefab with a simple sprite renderer and since this is a sprite based animation I'm going to use the sprite animator which is a very simple script we created in a previous video it is very simple it simply plays multiple frames one after the other so it is perfect for this case so this one point all the frames at 30 frames per second and when it passes the last frame it won't destroy itself which is perfect for a oneshot effect that we want to use so here in the code we need to spawn the effect before we actually so up here first of all we're going to need a reference for the effect I'm just going to add it as a civilised field in here so a private transform for the PF effect and down here we need to place the effect on the position before we actually so let's store a vector3 for the before position and we only want to actually spawn the effect if we can so we can use the if on our try move function so if we did successfully move then now we have the before and after position so let's instantiate the prefab so Kiev effect instantiate it on the b4 position then let's rotate it towards the in last move direction so modify the owner angles give it 0 0 since we are in 2d and we just need to modify the Z so I'm using the utens class to get the anger from vector float this is part of the code monkey utilities that you can grab for free from unity code monkey calm it simply takes a vector3 and returns a Euler angle so it is perfect for this case I send it on last move direction and it will return the correct angle so now our effect is correctly positioned and rotated all we need is the scale the sprite has an actual width of 35 s so let's define here a float for the dash effect width this is the width of the sprite which is dependent on the pixels per unit that is set on the import support the dash distance divided by the width and everything else with Oana all right so let's test and see if our fact shows up okay so here I am moving around if I hit space if there yo he teleports forward and there's a nice dash effect behind him and again I still cannot go through wall I can teleport around but don't go through walls ok great the way we set up our code we can easily modify the dash distance and everything else should be the same so let's see here I am and yep I got a much bigger and the effect is scaled correctly and again I still cannot go through walls yep great now the way we set things up it means that if we go up here and we try to above since we are within the distance we don't actually move forward if we if you if you wanted you could improve the code to make it so that when you hit space it would go right next to the wall you would simply need to do a ray cast and test the distance to the wall and then change the if distance accordingly so there you have it we add the simple ability with a nice effect to quickly move our character around as always you can download the project files in you tell from Unicode monkey calm if you have any questions post them in the comments and I'll do my best answer them subscribe for more videos and I'll see you next time