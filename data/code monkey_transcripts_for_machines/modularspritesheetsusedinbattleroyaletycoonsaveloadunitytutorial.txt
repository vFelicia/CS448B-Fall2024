hello and welcome I'm your code monkey in this video we're continuing to create modular spreadsheets as used in battle royale Tycoon we're going to take on the parameters we've been using to save and load the exact same spreadsheet every time let's begin so far in the series we've dynamically created this spreadsheet we have options for multiple skin colors multiple hair and beard colors and also various beard and hair styles and finally we have multiple bodies with a primary and a secondary color so now with all of these parameters we're going to implement saving and loading so we can correctly load the very same spreadsheet every time we're going to use Jason to keep our final format simple if you're not familiar with Jason check out my series on how to make a simple save system the game is out now on Steam so check it out to see what I'm teaching here apply to a real game so here in our code and let's define a class to hold our spreadsheet data we are going to make this a very simple class and in here we're going to store a int for the hair index also another one for the beard index and the body index so those are the indexes that compose our spreadsheet then we have a public color first let's store the hair color then we need the skin color and then the body primary color and the body secondary color alright so these are all the parameters that we use when creating our guest prett so in here let's create a function to generate a random guest spreadsheet data so we make it a public it's gonna return get spreadsheet data and just call it generate random and let's make this a static function so here in our code we can see how we were grabbing our values so let's copy the array for the various skin colors then we pick a skin call ok and then we have the various hair colors for the body primary and secondary let's keep a simple one and for the indexes of the hair and beard we are grabbing them in here so we define our hair index and if we have hair we choose a random one and if not then we simply set our hair index to minus one and we're going to do the exact same thing for our beard index and finally our body index all right so just like that we are correctly pick random parameters that we need to create our spreadsheet so now after we have created all these let's return a spreadsheet data object we're going to create it using these indexes okay so here is our final object which contains our random parameters so now just for testing let's try saving this object so on the game camera we're on awake in here let's simply get a guest spreadsheet data and we're going to go into the guest spreadsheet data and generate a random data object now in here we want to convert it into JSON so we're going to use the JSON utility dot to Jason we're going to convert our guest spreadsheet data into JSON and for now let's just print it on the console so we can see what this returns and yep here it is on the console you can see our JSON representation of our guest save data object you can see the hair index beard the next body and the various colors alright so now let's try saving and loading soon here let's make a function to return void and this will be our save function now the simplest way to save persistent data is using player price so we're going to use that here we do a set the string and we give it our JSON string so we are grabbing the adjacent string from this object and we are setting the string with the key guess spreadsheet on it to contain our JSON string and then we're going to have another function a public void load and in here we're going to load it from the player preps so we go into the point price and do a get string and get the this string that was saved previously alright so this is our string for our adjacent string so now let's print out our g string on saving and loading just make sure everything is working correctly so here on our game hammer let's just do our guess spreadsheet data first we save and then we unload all right so let's see if both strings match and yep here's the code in there as you can see they both look exactly the same so we are correctly saving and loading using player preps and using JSON to contain our file format okay now I have added to debug buttons to save and load so in here using this one let's save it and yep okay he saved here index of one beard minus one and body of three so now let's reload the scene and now when I hit load we should be able to see 11 and three hit load and yep there you go 1 minus 1 3 okay great so we have saving and loading working perfectly now all we need is to actually apply it to our texture so in here let's modify this function to instead of using get texture we are going to receive a guest spreadsheet data as a parameter and in here instead of grabbing from a skin color array we grab the skin color from the data and do the same thing for all of our parameters okay so we have replaced all of our random parameters with the ones given by this class and here let's modify this function to be cept guest spreadsheet data we're going to receive how are you get spreadsheet data and it's what we're going to use to generate our texture so here we generate a random one and then we set it to this one and then our load button we are going to first of all load our data then we set it using the new data okay so in here one last thing we need is after we get our JSON string we need to convert it back into our data object so instead of having a load function we're going to have a static which will return a guest spreadsheet data call it load static and again it goes through that gets the JSON string and then we do jason utility dot from jason we want to convert it back into a guest spreadsheet data and we give it our JSON string and this is what we're going to return okay so here's our character with a blonde Mohawk in the Mon mustache so now I hit save and there you there's a safe string that was saved we got the hair index beard hair call and so on now let's reset the scene and again here's another random and we hit random a couple times and now if I hit load if there go there it's the exact same character as previously and randomize load and we can always grab the same character back the game is out no one seems so check it out to see what I'm teaching here apply to a real game so there you have it we took our dynamically created sprite sheet and added the ability to save on parameters so we can load the same sprite sheet at will as always you can download the project files in utilities from unity code monkey comm if you have any questions post them in the comments and I'll do my best answer them subscribe for more videos and I'll see you next time