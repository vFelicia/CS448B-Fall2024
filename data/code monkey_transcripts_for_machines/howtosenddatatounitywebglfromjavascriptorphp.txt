in this video we're going to see how we can communicate with unity from JavaScript or PHP this allows us to use unity to make really coollooking complex visuals and work with external data let's begin hello and welcome I'm your code monkey and this channel is all about helping you will learn how to make your own games with indepth tutorials made by a professional indie game developer so if you find the video helpful consider subscribing okay so this is a bit of a different video from the usual I was researching how to make a nice stats display in unity in order to visualize some data from my website but I couldn't really find much it's actually very simple to do so I'm hoping if someone is looking for a solution to this problem they come across this video we're going to make a simple scene in unity and export to WebGL then we're going to look into the JavaScript code in order to call functions inside of our bill to interact with it and then we're going to use the graph we created in a previous video to make a visual graph that receives data from JavaScript or PHP and displays it in unity so like I said I want to visualize some data from the website I know there are tons of excellent JavaScript charting tools but I'm not very experienced in JavaScript and CSS especially when it comes to making something look good unity is a game engine so it's perfectly set up for making something visual and I'm already very experienced in it there are actually several methods mentioned in the unity manual and I'll link that page in the description here I'll use this simplest way which perfectly solves my problem through JavaScript we can use the function on the Unity WebGL instance called send message which takes an object name than a method name and finally an optional value so let's try that Here I am in my scene so let's make a simple sprites so over here I have a simple circle just drag it and there it is alright so here we have a very basic sprite now we want to interact and change the cone so in order to interact with it as you saw the function requires an object name and a method name so in here and let's make a new object let's call this our javascript hook and let's make it script so you need C sharp script our JavaScript hook and let's attach it on to the object now in here the script does not necessarily have to have the same name as the object but this helps keep our scene nice and organized okay now in this script let's make some methods to simply change the color of our sprites all right so here we have a reference to our circle sprite renderer and then a function to tint red which simply sets color and went to tint in green okay now just for testing let's call these functions from key press all right so we can test by pressing these two keys let's see ok here we are with default sprite now press T there you go now it's red press Y and there you go now it's green right awesome so our very basic logic is working correctly great now let's make this into a WebGL built so we just need to go into file don't settings never here we have the WebGL and we simply built okay it's done and here we have our bill running on a browser and if we press our keys yup we can still take the color okay so far so good now we don't want to tint it based on key presses browser based on JavaScript buttons so here is the HTML file as it comes from the build and now we're in here and let's just make some very basic buttons all right so here we have two very basic buttons so essentially just a div that we can click so in order to click we use the on click parameter so here we can put some JavaScript code and CIN here that we go into the unity instance so this is the object that is created all the way up here so use that then we call send message and now first we pass in the object name so again back in the editor our object name is over here the JavaScript hook so you pass in the object name and then we pass in the method name so in this case it's 10th red all right so we have our two functions when we click we're going to execute this JavaScript code let's see okay here we are and there's our two buttons now as I press on this one and there we go these brighter in red precision and it turns green all right so just like this we can interact with our unity instance from some JavaScript code awesome now in this send message function we're calling with the object name the function name and then we can also pass in a optional parameter so right now it's empty we can pass in either a number or a string so let's test that back in our unity editor let's make two text fields all right so I've added two different text fields now let's handle them in our script alright so there it is just like that we have our references for our text objects and then we simply have a set number and set string okay now let's make our WebGL build okay here we have our new WebGL build with our two text fields and again the color still works okay now let's do the JavaScript to interact with these so here we are on the index.html and just copy these so for the number here is the function name set number so you pass in set number and then let's say a number then we have set string then we can pass in a string alright let's test okay here we have our two buttons so I can change the color okay that works now change the number and there we go he received a number change the string and there you go he received a string so just like this we are calling you a whole bunch of functions passing in a whole bunch of different parameters right awesome now you might have already guessed how we can expand upon this to pass in pretty much anything we want if we can pass in a string then that means we can take whatever that we have encoded into JSON and easily send it into unity if you're not familiar with Jason check out the video on linked in the description where I cover how it is and how its formatted I've also covered using jason to make a safe system so check that out to see how you can use jason to encode safe data which is similar to what we're going to do in here so let's try to send some JSON back in our unity script let's make a simple object to test our JSON parsing alright here we have a simple object with two fields a string for name and and for the H now a function to receive it so we have a function with the parameter type string so we're going to receive our JSON and then we use the JSON utility we do from jason convert that jason into our JSON object so here we have our JSON object alright and then we simply update our string okay that's it very simple let's test okay now in our HTML code and let's make an object and pass it into our unity instance so we're here in our JavaScript let's make a javascript object okay here we have a Chava script object now we convert it into jason so we use jason dot stringify so here we have our JSON string and now let's make the button to send it into our game so again the function name is called test Jason so that's the function name and then in here we pass in the object that we created in here so a JSON string all right let's see okay here we are and we can still change colors we can still send the numbers and string and now a JSON object and there you go here we have our object it correctly parse the name as John HS 34 so our unity WebGL bill correctly received a JSON string and parsed it to get the name and H awesome alright so here we have our functioning valent receiving any data we want from JavaScript we can take it one step further and get some data with PHP and use it in our JavaScript code all right so here we have some simple PHP code so we have our JSON string then we go into our PHP we create a new object we call JSON encode and then we simply echo the JSON representation so if we go back into our build and we call this function and there yo now it received a me with age of 29 so just like this we are essentially communicating with unity PHP so these are the basics and now you can easily expand upon it for example here I have this scene which has the graph that was made from scratch in a previous video so here is the graph running inside of unity and if here we are on the WebGL build and now with this button we can pass in different values to unity and I click and there you go now the graph received a bunch of different values so click on them and there you go so here we have some data being displayed and of the data is external and not hardcoded inside of the unity WebGL build at all so now you know how to interact with a WebGL build from JavaScript or PHP or anywhere else as always you can download the project files in utilities from in tucum√°n keep calm subscribe the channel for more ET tutorials post any questions you have in the comments and I'll see you next time