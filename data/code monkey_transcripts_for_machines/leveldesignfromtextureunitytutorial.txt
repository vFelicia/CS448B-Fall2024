hello and welcome I'm your code monkey and in this video we're going to design a level based on a texture let's begin all right so here's my scene with my character I can aim and shoot there are some enemies that are attacking the player but he goes and as you can see the health goes down I can attack him and kill them okay great is he getting here we have some ammo pickups so I got four and now I've got 20 ammo and I got a help pick up that boosts up my help we also have some walls here that the player cannot move through okay so these are all the elements that we're going to use to design our levels so here is the main script running the game the code is cleanly set up so we have these functions in here we can spawn the player put them into a position spawn a health pack spawn a ammo pack spawn an enemy and a wall we're going to essentially draw pixels in a texture and based on the color of those pixels we're going to spawn various items so let's begin with a simple texture so here I have a 10 by 10 pixels texture now I'm using Photoshop which you can do this in any program as long as you can draw individual pixels so first off let's start with the whole thing in white essentially white will mean nothing spawned in that position and now we have to define a color for the player position so let's go in here and let's define the player position color as a pure blue so let's put it on to 5500 so in the hexadecimal 0 0 0 0 FF that is going to be the pixel that references our player position so let's for example spawn him in here in this corner ok so here is the own level texture on the project files and now that we have our texture in here and let's go into the code and read it so on the game panel in here let's first add a field for dtector so a private texture 2d for our level texture and we're going to make this a serialized field so we can set it in the editor so let's go to the editor and drag our reference there's our own level texture and drag it in there ok now let's also go into the texture import settings and in here we have to make sure that we can read and write our texture so we go down here read write enable and enable it also make sure that the texture does not have any MIT maps and the film mode is set to point we want to read every pixel exactly as we drew them now in here the found that we are reading is a PSD file which is photoshop's file format but you can draw your own level anywhere and save it in here just make sure that you save your file as a bitmap otherwise the compression could mess up the colors so hit apply and let's go back to the code now in here we need to cycle through the whole texture so let's make two for loops one for the width and one for the height so a two a four inch let's say X start off with the width X less than the level texture dot width then inside we do a four int y equals zero Wireless and level texture dot height so in here we are cycling through every single pixel on our own level texture now in order to read the pixels the best way to do it in terms of performance would be in level texture dot get pixels this function returns a flattened array that contains all of the pixels the array size is the width multiplied by the height however in order to make our code easier to follow we're going to do it using get pixel and read each pixel one by one so instead we get pixels we use get pixel then we feed it the x and y coordinates this way our code is less confusing since we don't have to do any index calculations but if you're implementing this in your own game make sure you later we factor this code to use get pixels so for now when we're cycling in here the get pay zone will return a color which is the color of this pixel so store the color and for testing let's do a debug log of our pixel color okay so let's run the code and see what shows up in the console ok our game is running and as you can see in the console it is displaying the color of each specific pixel and if we go up here we should be able to see a different pixel there you go right there we got one pixel with the red and zero the green in zero and blue and one and alpha also in one so as you can see this is the blue pixel in between all these white pixels and as you can see in here we have a hundred messages which makes sense since our texture is ten by ten so it has a hundred pixels so we are correctly the pixel values from our texture now let's go back into the code and in here let's first convert the color into a hexadecimal value to help us define the values for our objects to do that I'm going to use the utens class which is part of the code monkey utilities which you can grab for free from in Tacoma comm and in that class I have a function called get string from color which essentially returns a hexadecimal string from a color object so in here I'm going to pass in the color and this will return a hexadecimal string for that comm so in the case of the player string it will be 0 0 0 0 FF so using that let's go up here and define a private cons strength for our player color which will be 0 0 0 0 FF so here when we're grabbing the pixel color let's do a switch on the hexadecimal representation and case hexadecimal matches player color then essentially we are reading a player pixel so if it doesn't match the player color for now let's just do a debug dialog of the player position so player position and let's pass in the X and the y so X and then the Y now can let's test and see where it finds the player okay there's the console and as you can see found the player position on position 2 2 so let's go into our level texture and as you can see the index starts on 0 so this one is 0 0 1 0 2 0 so 2 0 2 1 & 2 2 so it does match exactly what we're reading so now that we have the coordinates of our player and let's actually put them in that position now for the size of our level let's go up here and define another constant so do a private const quote and this will be our units per pixel which won't be the amount of units in game that represents one pixel in our level texture so in this case and let's set it to 20 app so in here let's count only two coordinates where the player should be spawned so a vector 3 for the players spawn position which should be a new vector3 with the X&Y and let's multiply this vector 3 by our units per pixel then we're going to spawn the player on this position so using a units per pixel of 20 and placing the player on to 2 essentially the player should be placed on 40 40 so let's see if that is correct okay here we are in game and as you can see the player game object is indeed on 40 40 and again we can now go into our texture and instead of placing the player in there let's erase them from there and place them on the corner so that corner is on zero zero so the player should now be positioned on zero zero let's run the game and there's a player and if we check out the game object it is indeed on zero zero so as you can see by editing our texture in here we can modify what happens when we run our game so that's the base of our system we are essentially reading our level texture and doing something different dependant on the color that we see from that pixel so there you have it we'll learn how to create a level texture and read that texture to define a player spawn position in the next video we're going to add support for different object types and create an interesting level as always you can download the project files in utilities from unity code monkey comm if you have any questions post them in the comments and I'll do my best to answer them subscribe for more videos and I'll see you next time