hello and welcome I am you're a code monkey and in this video we're going to create some really nice and fun confetti let's get started all right so this is actually a very appropriate video for today since we've just passed a thousand subscribers so let me first say many thanks to everyone who is watching and I'm glad you're enjoying the videos now we want to create a really fun effect what it seems like confetti falling on the screen something that would be used on a level complete or a player win or any sort of success screen we're going to build a confetti in the UI system so let's go into our canvas here I have my game Handler inside I have a UI game object and I got my canvas right here it's a screen space camera canvas using this camera which is displaying the canvas okay so in here I am going to create a new game object and name it window can fail I'm going to stretch it to occupy the entire screen and set everything to 0 okay now here in my prefabs folder I am going to create a new prefab and name it PF and 30 now in our prefab let us add first a image component for the visual I have a sprite sheet here so let me switch this from single into multiple get this bright editor and I'm going to slice all the frames so they are in 64 by 64 okay so there your first frame second frame third reinforcement so my spreadsheet in here as you can see it's like a piece of confetti just flipping back and forth we are going to tint this spreadsheet that is why we have one face in white and one in gray so back to our prefab theorem let's add the first frame and let me drag it into my scene here reset the position and set the size as 15 by 15 and let's give it a nice blue tint okay now I'm going to add the image animator script this is the script that we created in the previous video for the simple sprite animator it simply plays a list of animation frames sequentially it's very simple so in here I'm going to set the frame rate to 20 frames per second I'm going to set it to loop and for our frame array let's first lock the inspector so we can drag on our frames and or frames into the red okay and let's test and see if our piece of confetti is in there yep there it is just a single piece of confetti it contains some basic sprites your animation so it seems like it's flipping back and forth okay good now let's set up the script to actually spawn them so in here remove the original game object since we're going to spawn it from the prefab and I'm going to create a new C sharp script and name it window confetti let's add a very ball for our prefab so a private transform PF confetti make it a serialized field so we can set it any editor and let us create a subclass to handle our individual confetti logics so we're going to make a private class confetti in here let's make a constructor for our confetti and inside we're going to receive a transform for our prefab a transform for our container and the vector two for our anchored position in here let's instantiate our prefab into our container we're going to store our transform and we're also going to store our rect transform which is using unity engine dot u wine so here let's set our transform and our rect transform equal transform component type transform okay let's set our write transform anchor position okay so we have our confetti being accentuated and set up let us make a private voi update and in here we're going to move our anchored position by a certain move amount let's say vector to move amount of the new vector to and we're just going to move it on the Y let's say 100 and up here we need to store our anchor position this done anchored anchored position okay in here anchored position was equals the move amount times time Delta time and set our right transform dot anchored position to our anchor position okay so this should spawn the confetti and move it downwards now let us go up here and create a list that won't hold all of our confetti call it confetti list let us make a private void awake in which we're going to instantiate our list and let's make it private void update in which we're going to go through all the confetti in our lists gemelas and call the update and final let's make a function to spawn our confetti spawn confetti in here let's create a new confetti object and that equals new confetti for the prefab we're going to give it the PF confetti for the container won't be this window and for the entered position let's calculate that so the anchors position we want to get a random position between the left and right side so let's grab the width and height of this transform so float width equals transform get component rect transform the rect dot with let's also grab our height okay so for our anchored position let's pick a random value within the entire width since the origin of the window is in the middle we want to randomize the position between minus half of our width and plus half of our width so random down range between minus width / 2 and width / 2 and for our height we want height divided by 2 so in here the waiting we have set up our canvas when we get the rect transform width we're going to get this entire size but since we are anchored in we want to grab a random value between minus half of our width and plus half of our width so it won't be a random value on the total width and for our height we want to put right on top of here which is half of our height okay so finally on our way let's spawn eight confetti and in here let's add our confetti to our config list let's drag our script and drag our transform and now it should spawn a confetti and see it move down yep there it is it's moving down okay we got a single piece of confetti working all right now let's add a time to spawn more so in here I'm going to make the private float spawn timer and also a private cons float spawn timer max which will be zero point zero 33 out so we're going to spawn some confetti 30 times per second so in here spawn timer equals time Delta time if our spawn timer is less than zero and we're going to reset our spawn timer by increasing it by the spawn timer max and in here and let's spawn some confetti but let's spawn a random amount so int spawn amount equals random dot range let's say between 1 and 4 pieces and 4 and 0 and we're going to spawn our campaign so 3 times per second we're going to run this code and we're going to spawn between 1 and 4 pieces of confetti and we know what we need to spawn that one on start so let's see right now yep there you go we now have multiple pieces of confetti being spawned great ok now let's add some size variation to our confetti so in here when we set up let us go into our rect transform dot size Delta and let us multiply that by a random value between let's say 0.8 122 hour so essentially our size will be randomized between 80% of the original size or a hundred and twenty percent of the original size let's see if we have some bigger than the others and you know there you go this one is smaller than that one and yeah it's very subtle but it helps to add a bit more variation okay now let's add some rotation for a rotation we're going to store a private vector3 for our Euler and we're going to store a float for our Euler speed and in here let's set a Foley our Euler keep the X&Y stable since this is in 2d and four hours in let's get a random value between 0 and 360 this will be our starting Euler transform the local Euler angles equal to your and for our you more speed let's grab a random value between 100 and 200 F and let's also randomize it between clockwise and counterclockwise so your speed x equals let's get a another random value between 0 and 2 now if this equals zero then we're going to multiply it by 1 app if not by 1 f so in here we are getting a random value between 0 and 2 so it won't be either 0 or 1 now if it is zero then we're going to multiply our your speed by one so essentially keep the same thing if this random equals 1 then we're going to invert our rotation speed so it won't either to go clockwise or counterclockwise and down here let us increase our Euler dot z by our your speed times time duct all the time and set our transform dot local Euler angles to our viewer okay so now our confetti should be rotating clockwise and counterclockwise okay there you go some of them going clockwise some going counterclockwise yep right there okay good now let us also randomize the move speed amount so let us here a private vector2 for our move amount and we're going to counter it in here on the X let's keep it at zero we just want to fall straight down so let's grab a random dollar range between minus 50 F and minus 150 and in here we're going to use the move amount that we set there okay so we should now have some with a speed different from the others and yet there you go these are falling very quickly these very slowing all right that adds quite a lot of variation okay so now finally and let us add a bunch of different colors so we're going to go up here and make another serialize field that will be a private an array of colors call it color array and on our constructor here let's receive a color and we're going to set our transform component okay image set the color to our color and in here I'm not a constructor let us grab a color from our array so the color won't go to the caller array and grab it random range between 0 and our caller array dot length and here give it the color okay so we are now picking a random color so let us go into the editor and let's select a bunch of colors okay I have set up all my colors now let's hit play and see the effect yep there you go they are moving at different speeds they got different colors they are rotating some clockwise some counterclockwise the size is random so there you have it now the only thing we're missing is cleanup because if we hit pause here and we check it out as you can see they spawn and they never vanish so let's clean up our objects once they go past our window so into my code here I am going to receive a float for the minimum Y and in here I'm going to give it the minimum Y which won't be minus height divided by two F and then here let's store our minimum line and then here if anchored positioned our Y if it is under our minimum Y then we want to destroy our transformed game object we will also want to stop updating it from the list and let's convert our update instead of a void let's return a boolean and we're going to return true when the object has been destroyed else we're going to return false so appear on our updates if update returns true then that means the confetti has been destroyed so let's remove it from the list confirming list remove our confetti and in here and let us create a new list of confetti so we are cycling through a clone of the original list and on it we are modifying the original list if you don't create a clone this would cause an error because you cannot modify an list whilst going through for each ok so let's see if our objects are being cleaned up there you go here's my scene here are the objects being spawned and once they go down there boom they vanish and are correctly being cleaned up ok great and there you have it a very nice fun effect that you can apply on a level complete or a player win as always you can download the project files and utilities for free from unity code monkey comm if you have any questions post them in the comments and I'll do my best to answer them and once again thank you for subscribing to the channel alright see you next time