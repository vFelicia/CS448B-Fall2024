in this video we're going to create a nice hit counter to show the number of successful hits it will increase in intensity with the more hits we have and reset when the player gets hit let's begin hello and welcome I'm your code monkey and this channel is all about helping you will learn how to make your own games with and after torrents made by a professional indie game developer so if you find the video helpful consider subscribing okay so this is what we want to create I have my player character here that I can move around and attack and when I hit an enemy there we go as you can see there's a little counter showing the number of hits that I have successfully don't the counter goes up it changes color and it shakes with some very nice intensity now if I do get hit there you go the counter resets back to zero and we have to keep hitting enemies in order to make it increase this is a really cool element and very much like the hit counter that I used in hyper nights so you can check that game out to see the final effect in action it's a very simple element but also externally satisfying we're going to start off by making just the text element and the script to handle it then when we have the illogic fully working we're going to polish up the effect by adding shake size increase and a color change so watch the whole video to see the full creation of the final effect alright let's get to it so here we are in our starting scene I have a character that I can move around and there are enemies being spawn I can hit and kill them and there you go after three hits they die and they are constantly being spawned and attacking me so right now you can already see the massive difference that not having the effect mix the game looks much less impactful so let's get to work on making the head counter here in the editor and let's first go into the player object and inside we're going to place the head counter text so we go in here and we create a new text mesh object let's name this the hit counter text mesh Pro and while it's located above the player okay let's test to see if it's in the correct position with the correct size and if it sounds just about right it's there on the up and to the right okay good now that we have the text mesh correctly located let's make it look good by using a nice custom font so over here I have this custom font I then convert it into a front asset to be used by the text mesh Pro then I extracted this texture and modified it to have some nice effects as you can see it has a nice gradient and an outline to learn how to use custom font textures check out the link in the description for the video where I cover how to use custom fonts in text mesh Pro in that video I also cover how to extract the font texture Atlas so you can modify it in any image program to add effects like for example the gradient and outline in this one so let's use this font here on the text message pro and we simply drag our font asset into down and there you go that's what the font plots like so let's try again and if there's our head counter with a very nice custom font now as we hit the enemies we want the Texas play the current hit count and as the hit count goes up we also want to change the color size and polish our text all right so let's see how we're going to write the code for that first thing we need is obviously a script to handle it so let's go here make a new C sharp script this will be our hit counter and let's drag it onto the our text mesh Pro here's our object and just drag the script onto it okay now in here the first thing we need is to wear reference to our text mesh and ponen so we make a private text Metro which is inside the using TM Pro and we grab it on our private void away okay we have the reference to our component now we need a function to set our current counter so let's make a front void set hit counter and we receive an int for the hit count inside all we do is set the text so we go into the text mesh Pro and set our text to be our head count dot two string okay that's it these are our basics now let's make a simple test let's try showing the counter constantly increasing so over here on the awake let's create a function periodic this is part of the code mock utilities that you can grab for free from unity code monkey calm this class lets me trigger an action every certain amount of time so it's perfect for this testing so in here every certain amount of time we're going to trigger this action let's say every half a second so now inside this action let's define a hit count start off at zero and every half a second we're going to execute this code so we increase the head count and then we do set head counter to our head count okay so every half a second we're going to increase it and update our text so let's see here we are and the up as you can see the counter is indeed going up over time okay great so we have a simple visual hit counter that we can update to display any number now let's see how we're going to apply it to our player over here is the player class now the way it works isn't relevant to creating the hit counter all we know is when the player hidden in me and when he got hit and for that appear we have these nice events which provide everything that we need again always remember to keep your code as cleanly separated as possible we want the hit counter element to be completely decoupled from whatever implementation of the player that we have that way as we build our head counter we can use it with any sort of system and use it in various games all the hit counter needs to know are these events and the player doesn't need to know anything about the hit counter so we can go into the hit counter script and here first we need a reference to the player so let's go up here make a serialize field for the private player here in the editor we just drag our player reference okay now that we have the reference let's go up here into a private voice start and we're going to subscribe to our players events in this case just to keep things simple let's subscribe to the on attacked event this one is fired whenever the player does an attack regardless of whether he hits an enemy or not so it's perfect for our testing so when this event is triggered we want to increase the head counter so let's go up here to define a private end for the hit count and we can remove our temporary testing code okay and now in here when the player fires this event we just increase our hit count and we set the hit counter to this hit count and that's pretty much it so we are subscribing to the event we don't care how to play fires ever event all we need is that he does indeed fire it and when he does we increase the headcount and we update the text so let's test so here we are and you can already see a slight issue the hit counter is still saying the default text so we need to sort that out but first let's test out the hits if I attack even without hitting any of them if there you go one two three four five and so on so as you can see the hit counter is correctly and listening to those events and increasing the hit counter whenever they do regardless of whether I hit an enemy or not and as you know it keeps going up up up and you know exactly okay great so far so good now let's go back into the code first let's fix our default text issue so in here we make a function a private void hide hit counter and on we're going to do is disable the mesh renderer which is what the text my shoes is to display it so let's go up here to grab our reference to the mesh renderer and here we just said it to enable as false and when we set the head counter we set it back to true ok and now up here on our way what we need is stall hide our hit counter ok that's it let's test and yep the counter is sitting by the phone this one is I attack it becomes visible ok great now let's listen to the on damage event so we can reset the hit counter whenever the player takes damage so here only need to do subscribe to the on damaged event and when the player takes damage when it takes damage we set the hit count back to zero and we hide our head count ok that's pretty much it for our reset again we don't care how the player implements this event all we care is that he fires it so let's test so here we are let's do some hits yep there you go I got a hit counter of 5 and now if I get hit if there your reset and now I'm back to 1 so get hit goes there and going up get hit resets and when I get hit it always reset ok awesome so we can now increase our head count and also reset it when we do take a hit now let's finalize the logic to make the hit counter properly work on our attacks so for the events as you can see we have on enemy hit and on enemy killed we're going to use both of them in order to give a bonus when the enemy gets killed so before we do that let's clean our code by making a function to increase our head counter so a convoy increase hit count and in here we just do what we were doing in here and on this one we can still call it even though we're not going to subscribe to the on attacked is only for testing so we can comment that out and now in here let's subscribe to the player dot on enemy hit so this one gets triggered when the player hits an enemy when he does hit an enemy we increase the headcount then we have the player on enemy kill so here the player killed an enemy and here we increase the hit count as well so essentially on the killing blow we had two hits instead of just one so we got a nice small bonus for killing an enemy so let's test and see if the logic is all completely working here we are with zero now if I attack nothing yep nothing happens now if I hit this enemy one yep there you go two three any of there you go he hit four because he had a bonus on the killing hit one two three four yep exactly okay awesome so all of our logic is working we are increasing by one per attack getting a bonus for a killing blow and we still reset if we get hit okay awesome so our logic is fully working exactly as intended now it's time to punish yourself to make it look really cool so the first thing we're going to do is a common change we want to convert to change based on certain thresholds so as the hit counter increases it looks more and more special let's see so we go down into the set hit counter function and here we just do some very simple ifs okay so here we have a bunch of simple lives just testing if the hit count is above certain thresholds and applying a certain color I'm using this function from the utilities which allows me to convert a hexadecimal code into a color so this is much simpler to understand so after we define our text color all we need is to apply it to our text so our text mesh set the color to this text color okay let's see ok here we are with no hits now let's hit okay with four we still got just our basic white text and yep now it turned blue after 10 now let's see after 20 there you go a nice green now let's see after 30 yep we got a nice yellow where's more enemies and hit him and 40 we got an orange and after 50 if there you go we had a nice thing and everything looks very nice very special and if we take damage there go back to zero back to white back to increasing okay awesome so we have successfully added different colors dependent on the number of hits all right now for another effect let's increase the size as the hit counter goes up so to increase the size we have two options we can do simple ifs like we did in here in order to make specific thresholds or we can increase the phone by a tiny bit per every single hit so let's try the second approach and here we find a color for the font size and by default we're starting off at 7f and now we need to design how much the font will increase per hit so in here a note for the pircuit font size and let's put it that point zero seven f so the font size won't double after a hundred hits then all we do is set the font size on the text match pro okay let you do it let's see so here we are let's see the font size on the first hit and there we go we still got the normal size and let's see if it increases as the hits get higher and we'd sixteen you come on rate see that it's quite a bit bigger and quite a bit bigger and once it reaches 50 it should be quite large and keep increasing 3040 and as you can see it's definitely bigger and 48 and 50 and yep it's quite big okay so this looks good we should probably add a sort of upper limit but the illogic looks good now for a final effect let's also make the hit counter shake whenever we hit an enemy and then slowdown back to zero okay let's see so here is our limit we're just doing a simple clamp we take what we're going to only put a minimum on the starting and a maximum on the double okay now for the shake we want to be just a simple shake so that means we're just going to move the position around a bit so let's make a update to do our animation then here a press Boyd update now in here we want to modify the little composition so first let's go up here and make the private vector3 we're going to store our base local position and we grab it on our awake okay so we have our base law composition now here on our update we set our current transformed optimal composition we set it to be based on our baisemeaux composition and then we add a random direction so in here making a vector3 for the random direction so we have a random direction and we add it by that now we don't want to add just a static magnitude we want to have a varying intensity so let's go up here make a private fold for our shake intensity and that's what we'll multiply on our direction so just for testing let's go here on our awake and let's set it to a testing value of let's say 5 up so let's see if the hit counter is indeed shaking okay here we are where's the enemy there he is and I hit him and yep there we go it is indeed shaking but obviously way too much so let's set a more accurate value okay so like this it's a bit better it's a bit too intense but this is the effect that we want let's see so we want on the absolute maximum to be with an intensity of 1 ok so that's the value we want however we also want the intensity to drop down over time so here on our update first we're only going to shake it the shake intensity if it is above 0 if it is above 0 then let's decrease the intensity by a certain amount so we float for the in three drop amount and here we define how fast we want to drop so let's start off testing with 0.5 F and we reduce our intensity by the intensity drop amount multiplied by time downtime okay that's pretty much it so we have a nice flow that we set to a certain value and on every update it's gonna drop by a certain amount and if it is under zero then we simply stop shaking so my t if he stops the shaking okay here he is and yep there you go the shake stopped and went down and now it's completely stopped okay awesome so that's exactly the effect that we want now obviously we don't want to add the shake intensity in here so we go down here when we hit an enemy and it's in here that we need to set our intensity however we also want it to be per hit so what's the final float for the base intensity then a float for the / head intensity and we set our shake intensity to be the base was the per hit x the hip count okay so whenever we hit an enemy we should be able to see the hit counter shake and more enemies we hit the more it shakes we can play around these values to make it shake more or less depending on the number of hits so let's test okay here we are let's see the first hit and there you go just a very very slight shake and a couple more and yet there you go as you can see it increases its shaking more and more and as goes up the color is still changing and there you go the shake now becomes more intense and after a while we still have the hit counter but no more shake so now go away and we got hit so now let's build it up to the maximum and see shake it's in blue 2024 shake some more and set 30 we are near our maximum and here we go hit 40 and getting close to 50 and as you can see that is a very very intense shake so we probably need to do the same thing with it for the text size in order to add women otherwise it's gonna continue shaking to the point where it we can no longer actually see the velum okay so we need to add a maximum but that's exactly what we want when we hit it goes up when we stop hitting it slows down and stops the shake okay awesome so here on the shake intensity we do the same thing we do a clamp and final let's also add an effect that it's not really related to the hit counter but it looks good which is just a simple screen shake so in here when we hit our enemy let's go to the utils glass shake camera let's shake by small amount and when we kill an enemy let's shake a bit more okay so let's see the final effect here we are with our final effect my character moving around when I hit an enemy yup there you go and there's the screen shake and there's the shake of the head counter and the hit company goes up as it goes up it changes the color it starts shaking more and more intensely in order to really show that we're getting more and more hits and keeps going up and the color changes and goes up to 50 but the counter keeps going up everything looks great and if we do get hit yep there you go we got a nice reset and we're back on one so here we go keep throwing keep shaking and looks quite awesome so this is a really great effect and really makes things look a lot more impactful as always you can download the project files in Tony's from unity curb monkey comm if you liked the video subscribe the channel for more unity tutorials post any questions you have in the comments and I'll do my best answer them alright see you next time