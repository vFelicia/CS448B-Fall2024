in this video we're going to make a simple chat bubble in unity this is great if you want to show some messages on top of your characters or as a simple messaging system in a multiplayer game for example I use Czech bubbles on Parramatta kun to display a guest thoughts let's begin hello and welcome I'm your code monkey and this channel is all about helping you will learn how to make your own games with nf2 turns made by a professional indie game developer so if you find the video helpful consider subscribing okay so what we're going to create here is a very simple but very effective system we're going to show some text using some icon and display it above a character like I said I use this extensively in my own West game pattern real tycoon in order to display guest thoughts it's a very simple system designed to provide the player with a bit more information without having to go through a specific UI so if you have a game with lots of Units roaming around like some management or strategy game then this system is an excellent way of adding some extra information in an easy way okay so here is what we're trying to make I have some characters roaming around randomly and they randomly say some things which you can see popping up above their heads so we have an icon and a message and as you can see the message gets written over time so this is made using the text writer that we made in a previous video I'm also controlling my basic player character here and I can press a button and there's a very nice text input window which again also made in another video and in here I can say anything so I just write something press ok any of there you go there's my nice message so you can see how this system is useful for showcasing any type of text like download between characters or you can also use this in a multiplayer game for a basic chat display check out the code monkey app on Steam interactive tutorials complete games and more click knowing the description and add it to your wish list this video is made possible thanks to these awesome supporters go to patreon.com/scishow to code monkey to get some perks and help keep the videos free for everyone alright so this circle let's get to it okay so here we are in our starting scene I have my player character that I can move around and there's a bunch of NPCs just randomly roaming around all right so let's begin making our chat bubble so first of all the approach we're going to take is to make our chat bubble live in the world as a child of each NPC or player instead of doing it in the UI by doing it this way we essentially avoid some conversion so first let's begin by making new empty game object call the seed chat bubble and now inside let's make a 2d sprite this will be the background then duplicate and make one for the icon and then final let's right click create a 3d object of text mesh pro text so this will be our text now here my textures I have a simple chat bubble texture yep just like that and then for the icon I also have a whole bunch of random icons and for the sorting order over here I'm going to place them on the top layer so off the main sprites like the character and the NPCs live on the default layer then the background obviously on the background so this one won't be on top so it will show up on top of everything else set the background on top then the icon on top and increase the order by a bit and same thing for the text also go here to add or sorting layer on top and once again put around 10 and for the text let's align it on the left side put it down the middle for the width and height put both at 0 and down here and let's disable our wrapping alright so this is pretty much our setup we have a background a icon and the text now through code we're going to dynamically select the icon set the text and modify the background to fit to whatever text we write so let's make that script in you see sharp script call this our chat bubble and let's drag it on to our game object okay now in here let's first make a simple private void awake and let's grab all of our references all right so here we have all our references when working with text mesh crowd and forget to add the using statement now let's make a function to set our text let's call this our setup so we're going to set up our chat bubble and inside we just access the text mesh browser set the text and we pass in this text all right now just for testing let's countdown our start we call our setup and pass in a random string okay that should do it let's test any of there it is we have our chat bubble indeed saying our text all right so far so good now let's make our background actually match the text so here we're setting the text and now we need the background to match the size now we can get the visible render bounds by accessing the text mesh Pro object and call get rendered values so this returns a vector to with our size and now here we might get some issues in certain scenarios related to the text not rendering instantly so in order to avoid that from ever happening we can access our object to call our force mesh update so just adding this to make sure that it always works so here we have our render bounds now we just need to modify the size of the background and add a little extra padding so for the size the background we acts as a sprite renderer and we're going to modify the size and let's say the text size + V offset all right so just like this it should work however in order to make the size film actually be used we need to set our strike render to use these sliced mode so back in the editor here when we have our sprite renderer instead of drama being simple we modify this set to sliced so as you can see now we not also need to modify our chat bubble so let's select the texture in here so like the mesh from tight going into foam rect and hit apply now since we're looking at this we can also look at another issue which is now if we go back and we modify our width if there you go it actually does work however look at the corners when we increase it very further if there it is right there it's not really looking very good so again we can just go into the texture click on the sprite editor and in here we can simply drag our edges so this way the corners will not be stretched so if we hit apply and if there you go now that looks much better all right so everything is set up let's test any of there it is it doesn't need to have the exact perfect science if we stop and we place the background right down the middle of the word and if there you go it works it sounded perfect all right so the size is working correctly we just need to position it a bit differently and also add a bit more extra padding so that it does occupy also for the icon now with regard to positioning that is also going to depend on what you said here on these fright import settings here we have the pivot and right now it's at the center so one approach we could take is for example change this from the center and put it on the on website and now with the pivot on the left side we could simply move this to where we want and then just play around with that however this bright might also be used elsewhere in our game so if we modify the pivot we could possibly cause some unintentional breaking changes so instead let's leave it at the center and do some math to figure out where we want our background to be so back in the code here we have our padding and we are modifying the size and now first of all we need to add some extra padding in order to make sure that we also occupy the icon so here on let's just try this out and let's also try out a bigger message okay there it is with a bigger text message and now if we shift this to the right side just like that we can see yep the size is pretty much correct all right now we just need a position so we just take our spread trailer access the transform to modify the unload composition and let's just put that half the size so we're using at half of our size width let's see any of there it is correctly right down the middle of the text now we just need to shift it a bit and left to occupy the icon any of their lists so the text background and icon all match perfectly depending on what text is written awesome alright now let's customize our icon first let's make you known for all of our possible icon types so we have all of our types and now down here on our setup function we receive the text then let's also receive our icon type so now here we have to modify our sprite renderer dot sprite so let's make a function to get the icon okay we just do switch and now we need to return the sprite so up here and let's set some fields for it all right we have them and we just returned them down here all right so that's it very simple and then on our setup lets press in and right now let's say angry alright so finally in the editor now here we have our films and we just need to drag them alright let's test and if there's the chat bubble with our angry icon looking great awesome so functionally everything is pretty much working now let's just make our class more robust and very easy to use now we're going to do that by making the class itself be responsible for in Senshi ating of the chat bubbles I'm going to use a simple pattern that I've used many times so if you've seen my videos and this should be very familiar now here on our chat bubble let's simply make a public static void on create we receive a transform for the parent then in vector 3 for the own little composition and icon type and finally a string for our text now here we just call instantiate and we incent she ate our chat bubble prefab so that means that we're going to need our prefab reference so in my scene I have this game object with this game asset script now this class was fully created in a previous video it's extremely useful to grab asset references from elsewhere in our code so we really need to do is that a public field in this case for a transform let's commit for our prefab chat bubble so just a public field and we have a static instance now back in the editor we can see our field in here for our chat bubble so first let's make the chat bubble in to a prefab just drag it onto the folder yep and now here we drag our prefab reference right in there okay so with that we can now go here on our chat bubble to access the game assets as is the instance and we're at each half bubble Precog so in sin she ate our chat bubble as a child of this parent then we set the whole composition and then lastly we get the component of type chat bubble and we call our setup function and passing the icon type and E text all right so that's pretty much it now we have this function which is a static function that we can come from anywhere in our code and it will automatically spawn a chat bubble so let's try it now here in my scene I have a main game object it has this simple script here it is all it has is a reference to our player and all of the various NPCs so we can use this just for testing so let's make our private void start and on start let's spawn a chat bubble on top of the deployer so we access our chat bubble access the static create function passing the employer transform now we certain local position let's put it up and to the right now for a icon let's like neutral and now for some text alright that's pretty much it we just have this one function call and everything is handled automatically let's try and if there is each half bubble on top of the player and since it is a child of the player transform as I move the player yep there you go it also moves the text alright awesome so right now the chat bubble actually lives forever so this one will never go away so let's make it vanish after some time now in order to do that it's actually extremely simple we can use the destroy function this one takes an object and then we have an optional time parameter so we can tell it to destroy the chat bubble transform game object and then after some time so let's say after four seconds destroy the chat bubble we could also expose that as a parameter up here but just in this simple case this should work what says and yep there's our message and after four seconds we wait any up there we go the message gets a strike all right awesome okay so now let's polish this up and add a simple animation so let's open up our chat bubble prefab and in here and let's add a animation clip then we create a new animation alright so here it is a very basic animation just a fade in it automatically plays when the object is instantiated so everything should be working ok here we are any of there it is a nice and simple Faden so it fades in shows the message and gets destroyed now for some more polish let's add the text writer that we made in a previous video so here is the class that we made and we made it very easy to use all we need to do is just call one function so back in our chat bubble on the setup we first set the text we forced it to update in order to get the text size and then afterwards just for a visual let's use our text writer okay here we are and if there is a nice animation and a nice text writer so once again a great example of the power of writing clean code we made the text writer a long time ago and since we made it in a way that's very easy to use all it took was just one line of code and our chat bubble is now looking more polished now let's just randomly add some messages to all of the NPCs now in this script I have a simple array of all the NPC transforms and then a function to get a we're in the message so I just had our random messages alright so here it is I'm using the function periodic from the code monkey utilities which is almost like maghreb for free from unity Comic Con so this one similarly trigger this action every certain amount of time so we simply grab a random NPC transform from the array we grab a random message then a random icon and we simply call our nice function all right let's see menu here we are with all of our NPCs saying we're in the messages and all the chat buttons are working correctly they're animated they've got the text writer and everything looks pretty great alright awesome now let's go for one last thing so just for fun over here I have the nice input window which again was fully made in a previous video so yet another example of clean code so we can write something and click on submit let's use this don't let the player talk let's make a script to handle just that so a new script code our player taunt now here let's do our private Foley update and we're going to listen to the input get key down on the key code enter so when we press enter and let's say that we want the input window to show up okay so we have our input window with our nice static function again go watch the other video to see how all this was created from scratch but essentially we have an action which returns our input text so it's in here that we can spawn our chat power all right that's it what's test okay so here we are down to our NPC sing your random messages and I press ENTER and there you go there's the nice input window so let's say something and press ok and there you go there's our nice chat message so we can input whatever text we want we input whatever text we 1 press ok and there you go just like that we have a custom chat box so you can see how this simple chat button could be used as a very basic messaging system in a multiplayer game so here it is all of our chat bubbles at work and we wrote our code very nicely so all I need to do to add this to your game is just call the create function and everything is working perfectly this video is made possible thanks to these awesome supporters go to patreon.com/scishow to code monkey to get some perks and help keep the videos free for everyone as always you can download the project found in a tony's from minty Kermit calm subscribe the channel for more unity tutorials post any question comes and I'll see you next time you