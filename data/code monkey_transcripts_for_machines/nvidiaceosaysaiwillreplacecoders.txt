nid CEO predicts the death of coding Jensen Wong says AI won't do the work so kids don't need to learn programming so I first saw this a few weeks ago and I was definitely quite surprised Jensen is an extremely intelligent man extremely successful so I'm definitely inclined to listen to what he has to say but me being a programmer I'm pretty confident that programming is not going anywhere so whenever I see things like this death of coding whenever I see that usually I don't really pay much attention but when it comes from the Nvidia CEO I'm definitely curious to see why does he think that way now obviously I am biased I am a programmer I love programming this channel is all about programming in fact just the other week I launched my latest course all about learning how to program in C it's really awesome if you want to learn definitely check it with the link in the description but on the other hand the Nvidia CEO is definitely also biased in this case towards AI their stock price has massively run up in the past few years thanks to the AI hype but anyways let's see exactly why does he think this way what exactly did he say in this interview so for some context the questioner asked about education so given the massive improvements of AI what should people learn nowadays what should they teach their kids so let's see what he says I'm going to say something and it it's it's going to sound completely opposite um of what people feel you you you probably recall uh over the course of the last 10 years 15 years um almost everybody who sits on a stage like this would tell you it is vital that your children learn computer science um everybody should learn how to program and in fact it's almost exactly the opposite it is our job to create Computing technology such that nobody has to program and that the programming language is human everybody in the world is now a programmer this is the miracle so that's what he said in this interview and I can definitely see what he's trying to say here basically thanks to all these AIS and with the power of basically taking natural language and converting it into programming code based on that technically some people don't need to become programmers in order to actually be able to build some programs that can help them do all kinds of things and that is definitely true I do think AI will have a very good very positive impact on the kinds of people who have a lot of knowledge but don't really know how to transform that knowledge into an actual program that can actually help them do something so for those people I do think AI in general will be very helpful but the other end which is no one needs to learn how to program that part I really disagree based on one simple thing and that simple thing is just exactness basically when you write a program you want that program to do exactly what you wanted to do and when you're trying to make something exact English is really not a very good language there's a lot of nuance and a lot of misunderstandings that come from the fact that the language simply isn't exact enough and that is really what a programming language is all about it's about telling the instructions of specifically what exactly you're trying to do now you can just go into chat GPT and ask it to build something simple like something like a health system you can do that and it won't probably give you code that probably does work but at the same time it probably won't do exactly what you're trying to do since English is limited the program cannot possibly know exactly what you're trying to implement it only takes the unlimited information that you give it based on natural language and turns that into some code in order to to get something that actually works that actually has what you want to do assuming you're trying to do anything remotely complex if so then you're going to need to keep talking to it continue asking questions continue developing more and more code and at that point I feel like you are basically doing exactly programming except you're doing it a very very inefficient language it's like for example there are all kinds of languages you've got JavaScript C there's go Russ C++ maybe even assembly so technically you can build pretty much anything you want using just assem that is possible you can build anything you can build the game you can build websites using just assembly but if you do it that is going to be a terrible language because you're going to have to make so many things that are really just going to make you much less efficient that you could be much less efficient than you could be if you were using a proper language so can you build all kinds of things using natural language and these super awesome AIS the answer is probably yes but you are going to have to talk to the AI so many times in order to get exactly what you want that at that point I feel that it's really just a very inefficient language and Al specifically what he said on computer science sits on a stage like this would tell you it is vital that your children learn computer science on this one I would also make a very big distinction between programming meaning just writing code and computer science in general now for me the way I see it programming or computer science more in general is really more about problem solving than it is about writing exteral code and I can confidently say that those two are quite very different things for example I've been writing code since I was 10 years old so for over 25 years I've used maybe a dozen different languages but at the same time if you were to give me a completely new language that I had never seen before in my life I'm pretty sure I could become pretty proficient at that language within about a week simply based on the fact that even if I didn't know anything about that particular language that particular Syntax for that language even if I didn't know that I do still have a ton of knowledge based on General problem solving so yeah I might indeed end up replacing super basic programs that pretty much just take code and just write code and do nothing else but when it comes to learning how to solve problems I feel that it's still going to be a very valuable seal for a very long time now one great example in game development and specifically game design is what is called the door problem so basically the premise is you are making a game and you want to implement some kind of door in your game now in technical terms that is actually very easy you can just go into Unity just make a hinge joint just have two cubes and very much just like that you have a door that if you push it it actually opens so the technical aspect behind how to make a door nowadays is super simple this would be the equivalent of just going into chat GPT and asking it how do I make a door system a heal system or something like that and while this technically does work it technically does fit the technical definition of what exactly is a door at the same time just making a door just making something that swings around that is probably not enough for whatever you're trying to build so when it comes to the door problem building a door seems like something super simple but at the same time you have to answer all these questions like for example are there doors in the game can the player open the doors can the player open every door or are some doors just for decoration how does the player know difference between those two types are there some doors you can open and some that you can't are the doors that you can open filled up with trash in the front or do you simply just remove the door knobs and assume that's correct can doors be locked or unlocked how does a player tell what is locked and what is unlocked how does a player know how to unlock a door do they need a key to hack a console Sol puzzle and so on so as you can see all kinds of question that you need to ask yourself in order to actually come to the conclusion of the original question which is I want to have a door in my game these are all the implementation details that in this case are more applicable to game design but the exact same thing is done when it comes to programming you want to make a health system what specifically does the health system need to do if you just need an in value in order to sort of the health then sure anyone with any knowledge of English can just ask chg PT in order to make it but in most case you're going to be doing something a lot more complex than that and at that point you do need some kind of problem solving skill in order to be able to ask the right questions to get the right result and like I said at that point I feel that if you're using English that is really just a very ineffective language ineffective way of actually achieving your goal of making a health system so in general my takeway and AI is pretty simple I think the future is going to be programmers plus AI as opposed to AI replacing programmers I think if you don't know anything AI is a great tool in order to help you learn you can basically just ask it questions and get some very good feedback and on the other hand since yeah is really so smart you can give it a specific question a specific very high level very complex question and it will probably give you a very good answer that at least helps point you in the right direction so that's really how I feel about Ai and programming in general my basic feeling is that English is not a good enough language in order to become some kind of programming language there's way too much Nuance way too many potential for misunderstandings so I don't think English will replace programming anytime soon but at the same time his last point is actually very good this is a tremendous time for uh all of you to realize that the technology divide has been closed the countries the people that understand how to solve a domain problem in digital biology or in education of young people or in manufacturing or in farming those people who understand domain expertise now can utilize technology that is readily available to you you now have a computer that will do what you tell it to do to help automate your work to amplify your productivity to make you more efficient it is vital that we upskill everyone and the upscaling process I I believe will be delightful surprising um to realize that this computer can perform all these things that you're instructing it to do and doing it so easily I think this is actually a really great Point basically people who have a ton of expertise on some specific Fields but they don't necessarily have any programming expertise thanks to using natural language those people people should hopefully be able to get some kind of prototype to some kind of idea they should be able to get that working using English as a basic language in order to build a basic prototype and that should hopefully lead to validating that idea in order to make sure okay on this particular field this expert knows how to do this thing and this does work this prototype is functional and then take that prototype and bring it to some professional software developers who will take that prototype and make an excellent product out of it so in terms of testing ideas for people who have no idea what is programming I do think that is an extremely valuable extremely positive thing to come out of all this so that's what I thought when I saw all of these headlines a few weeks ago I'm definitely bias towards programming I love programming I love writing code I definitely intend to continue writing code for the rest of my life but I'm definitely curious to hear what you all think so as you look at all these AI tools what do you think is going to happen in the future