hello and welcome I'm your code monkey and in this video we're going to create a mesh from code we're going to learn what a mash is made out of and how to dynamically create and modify it in real time let's get started so a mesh is composed of vertices triangles and UV coordinates the vertices are vectors that represent the position the triangles are inside connect the vertices together and the UV coordinates are vectors that represent what part of the texture is applied to each vertex so to start here let's make our mesh and create a game object test call it new game object given a name of mesh and add it with the components mesh filter and a mesh renderer and let's just set the local scale to be big so it's easier to test 31 okay there we go we have a game object means instantiated and it correctly has a mesh filter and a mesh renderer which is where we're going to use to display our mesh on the screen so back to the code here let's set up the data that our mesh won't require an array of vector three for our vertices equals new vector3 put an empty array for now create an array of vector three for our UV empty array and finally an array for intz for our triangles also an empty array down here let's add the data to our mesh where disease equals vertices mesh to a UV and mashed up triangles equal triangles now down here let's add the mesh to our mesh filter component so game object I'll get component of type mesh filter that mesh equals our mesh let's test it and the mesh filter should now have an empty mesh in there yep there you go it's a mesh in there it's completely empty zero four zero trees but it's in there okay so now let's make a square now for a square we're going to need four vertices the UVs are the same as a vertices since you have one UV four vertex and on our triangles we're going to have three triangles for each polygon in order to display a square we need two polygons so we're going to need six triangles so down here let's set up our vertices and we're going to put them one two and three okay so I'm going to add them in a Z shape now the order of the vertices doesn't matter but the order of the triangles does so for the vertices the first one won't be on the left side on top the second one will be on the right side on top the third one will be on the bottom left and the fourth one will be on the right bottom so for our UVs Thank You spectre2 and for now in our uvisa let's just display the whole texture so we're going to copy the coordinates that we have on our vertices so down here for our triangles okay so in here you have to be careful with the order that you put them you need to display them in clockwise in order for the triangles to face the camera if you put them on counter clockwise they won't face away so our first triangle won't be from the upper left corner to the upper right corner to the lower left corner and the second one will be from the lower left corner to the upper right corner and to the lower right corner so the first one will go from zero to the one to the two and the second triangle won't be from the two going to the upper right corner so to the one going to the lower right corner and so to three so these numbers right here represent the index on the vertices right and three of them make up a polygon so our first polygon will go from vertex zero which is on the upper left corner then go to vertex one which is on the upper right corner then go to vertex two which is on the lower left corner so these three right here and the second one will go to one three so we'll start off on this one left then go to the one which is on the upper right then you go to the three which is on the lower right so in order to have a visual to our mesh we need to add a material to our mesh renderers so what's going to game object I'll get component type mesh renderer material material and here we're going to public material material so in here let's drag a material to our script now I have material here which is just a sprite sheet and let's play and it should display the entire spreadsheet yep there you go you can see the mesh is one square and you can see it on the wireframe that it is actually made up of two polygons you can see the dash here in the middle so in this video we cover the components that make up a mesh vertices you've ease and triangles how to set up the data and how to instantiate a game object with that mesh in the next video we're going to cover how to edit the UV to display only a portion of our sprites you if you have any questions post them in the comments I'll do my best answer them right see you next time