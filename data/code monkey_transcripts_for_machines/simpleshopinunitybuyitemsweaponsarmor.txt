in this video we're going to make a simple shop in unity we're going to have some currency and create the UI to be able to buy various items and weapons let's begin hello and welcome I'm your code monkey and this channel is all about helping you learn how to make your own games with nf2 torrents made by a professional indie game developer so if you find the video helpful consider subscribing okay so this is our goal over here I have my player character just walking around if I go down here then some enemies get spawn and I can attack and kill them and as I come to them as you can see I'm getting some gold ok and now up here we have a nice building and as I approach the building there you go the shop interface shows up you know here I can spend my hardearned gold so currently we have 85 and we have some items that we can purchase so for example I can buy this armor so I click on it and there you go I have consumed some gold and now I have a new armor the way the armor changes is by modifying textures in runtime and you can see how it's done in the modular spreadsheets video so here I have my new armor but the only thing I can afford now is the health potion so you can see I currently have one and I can consume it and there you go I've consumed it and now I currently have 0 and if I click there you go now I have one and I cannot click anymore there you go I cannot afford it so I can't afford anything else so now I can go down sponsor more enemies kill them and get some more gold and there you go all right so I have killed a ton of enemies now I have a whole bunch of gold now I go back into the shop and now let's equip then you armor stereo I bought it and my gold went down and buy the new sword and new helmet and they're days just like that and again when I cannot afford something so for example I cannot afford to buy this armor again any click and we have the nice still tape warning which again was also made from scratch in a previous video so here we have a very nice game loop so I go down I kill some enemies the enemies drop some gold and again these popup items were also made in a previous video so as I killed them I got some nice gold icon so that was made in the damaged popup video so I can get some gold go back into the shop and spin it to buy some items alright so this is our goal let's get to it ok here's our starting scene I have my player character here walking around and if I go down here some enemies get spawned and attack me and I can attack them as I kill them as you can see I'm gaining some gold and there you go I got some go and if I go up here there you go I have my shop building okay so let's make our shop you want so here in our scene let's go into the canvas create an empty game object call this the new wine shop now inside let's make a template for each item in our shop so first we make a container to call all of our templates and inside we create an empty game object call this our shop item template and now here just filled it up alright so here is our template so we have a image for our item we have a text field for the item name a text field for the Adam cost and a simple gold icon so we're going to build our shop dynamically in runtime by duplicating this template for all of our items so let's make a script to handle our UI so in here we make a new csharp script call this our UI shop and drag it into our UI shop okay all right now in here let's populate our store okay so here four stars we grab the reference to our container and then inside our container we have the reference for our template and we start off with the template hidden all right so far so good now here in this project I have this simple item class so you can see very simple it just defines a bunch of item types then a function to get the cost and a function to get the sprite so the sprite is grout from the game assets class which I covered in a previous video essentially here in the editor there is a game object that contains the game assets script and over here we have all of our asset reference so in here you can see the armor the helmet the sword and so on so we can access this script we exit through a static instance and then our items return that instance containing the reference for that sprite okay so let's go into our shop and here let's instantiate a bunch of items so let's make a function to spawn a template with a given name sprite and price okay we have our function where we receive the item sprite the item name and the item cost so now in here what we do is we duplicate our item template okay so we instantiate our item template inside of our container then we grab the rect transform and now we need to position it correctly okay so here we have our function we also receive a position index in order to locate it correctly so when we do is modify the anchored position by a certain item height multiplied by the index and then we simply set the item name and the cost text as well as the item image okay so we have to do is call this a bunch of times up here so let's do it on our start so we create an item button let's go into the item and call get sprite then let's say we start off with the first armor so we get the sprite then also get the name and so on alright so like this we should be able to see our shop correctly populated with two armor types let's see any of there's our two armor types displayed in our store right awesome now let's fill it up with the rest of the items and your peers are sharp with all of our items right great so far so good now right now the shop isn't really doing anything so if I click on anything nothing happens so let's sort that for that we modify our templates so in here we go into our template and to make this into a button let's add the button UI script so the button UI this script is part of the code monkey utilities which you can grab for free from unity Comic Con this is a very basic script that already has a bunch of button behavior feel free to make your own button script or use the default E&T one either way it works so here back in the script when we create our item button let's also grab the button code so getcomponent of type button UI and then we set the click function to be something so for here we have clicked on the item shop button so here let's make a function to buy this item type so actually in here we receive all this and let's also receive the item type okay so we have the atom type and then when we click let's call it function call try by item and pass in our item type so let's make this one in here okay so we have this function being called whenever we click on an item on the shop so now here is where we need to answer some questions regarding code architecture now we could make this class interact directly with a player and give him the item directly that would work but then our code would become title e coupled with a specific player class so by clicking on that we could for example call this function directly which again would work but would be tightly coupled with this specific instance of this player class so this shop would not work with a different player class so we want to make sure that this specific class is not directly used by our shop so in order to keep those separate we have a bunch of options for example we could use events to fire off when someone buy something from the shop or another approach is to use an interface so in this scenario let's use the interface so back in our editor and let's create a new C sharp call this the I shop customer and open it up okay so now in here first we define this as an interface and not a class so in here we have public class and now we're going to have a public interface and normally all the interfaces start with name with I so we have our I shop customer and now here if you're not familiar with interfaces they are very simple all we have to do is define the functions that this interface won't implement however we do not include any implementation whatsoever so in here we just add a void call it bot item and passing the item item type and that's it this is all we put in an interface so now on our shop we can receive an object of this type so up here and let's define a feel for who is currently using the shop so I shop customer and let's call it shop customer and now down here when we have this function to try to buy an item we can go into our shop customer and calm watch item and just like that we have our shop working with the shop customer interface the benefit of this is that the shop only cares that the object use here implements our shop customer interface so it doesn't care about the rest of the customer object all it cares is that it implements this interface which implements these functions so now we can make this specific player class implement that specific interface so we have we implement the I shop customer and now we need to implement that interface so there you go we have our bot item function and in here and let's just do a debug dot walk okay so far so good now the last thing we need is to connect this player on to our shop so we're going to make that connection when we also show the shop so in here let's make a public void call it just show and when we show the UI shop let's pass in a I shop customer all right so when we show we set our film for the shop customer which we use in here and we simply set the game object to active and on hide we set it to inactive so for starters let's start off hidden so create the buttons and then we hide our game object okay we're almost done with this now let's see where we're going to call this function to show our shop for that let's go here back in the editor and let's create an empty game object let's call this the shop trigger area and inside we add a box Collider 2d so there it is make it a trigger and let's stretch it out to occupy about that area okay so when the player enter is this area this shop will appear when he exits it won't hide itself so now let's make the script to handle this so we make a new C sharp script call this our shop trigger Collider and let's wreck it in there okay okay so now inside the script we just had the functions to handle our collisions so we just make a ontriggerenter 2d so when I call that our enters inside of this trigger then let's try to grab a shop customer so we try to grab a shop customer from the collider that collided with this trigger and if it is not known then that means that's something that is a valid customer has entered inside of this trigger so in here we want to show the store so we need is a reference to our shop so in here let's add a zero noise film for our UI shop and then here we simply call show and repassing this shop customer so now let's do the same thing for hiding ok so when we have the trigger exit we hide our shop all right so now all that's left is to drag this reference so here in the editor we have our script to the field for our UI shop so let's simply drag this reference right in there right that's it and again remember we're working with triggers so in here make sure that the collider is set to trigger okay let's test okay so here we are and as you can see the shop starts off as hidden but as I approach and there you go the sharp shows up and if I leave and there you go the shop hides itself all right awesome so just like this we have everything working and again we are not working directly with a specific player class but rather with an implementation of a certain interface so we could easily make this work with a player or with NPCs or with anything okay so now let's him only by behavior so over here is my constant so we can see so for example let's go in here and I'm going to click on the helmet and there you go we have our log saying we bought our element so we have our shop correctly showing and hiding and we can now interact with the specific customer awesome so again we're using an interface to keep our shop nice and clean and we're using a simple trigger to display the shop when a customer enters and we hide the shop when a customer exits so as you can see thanks to our interface we could easily pour this code into any game we just need customers to implement the interface and everything works all right so let's continue know in order to spend some gold let's go into our interface and add another function so we're going to return a boolean and we're going to call this try spend gold amount I'm going to receive an int or the equal to not right so here we have a function where we're going to pass in a certain gold amount and it's going to return true if we can spend it and false if we cannot so now we implement this into our player so here's our shop customer and let's implement the rest of it so here we have try to spend our condiment so we do is very simple over here the player already has a function to get the gold amount so if the gold amount is bigger than our spend going along then we can simply spend it so you reduce our current gold amount by the spend gold amount and then for the UI to work we need to fire off the event so over here as you can see on gold amount change so we simply far off this so in here we were able to spend it so we return true and if not then we cannot afford to spend this much bone so we return false all right so again we have defined a new function in our interface and we implement it in our player and now we can go into our shop script and in here when we try to buy an item we don't buy it directly right away but instead first we go into the customer and we ask if we can spend this much gold amount so go into the item and get the cost for this item type so if we can't afford the cost and finally we do buy the item ok so just like this the goal should be working and now when the player let's also handle what item we bought so we're here on we're doing is doing a debug log but now let's actually use these functions in here in order to set our active item and armor alright so here we're just doing a switch on our item type and then calling the functions that I have prepared previously so for example the equal partner that's going to modify some pixels on the spreadsheet which you can find out how it works on the modular spreadsheet series so go check out those videos to see how those work and everything else is pretty simple so let's test and we should be able to see spending our count correctly and buying and equipping our items ok so here we are now let's head to the store and there you go the store showed up now let's see if we can afford anything so I click and there you go nothing actually happens we currently have 0 count so obviously we can't afford anything so now let's leave the store and try to buy and kill some enemies and there you go so kill a bunch of them there you go getting some goals I'm going alright great we have some gold now let's go back into our shop there it is now let's try to buy the first armor and let's see if the sprite changes and click and there you go we consumed three gold and we equipped our new Hartmann now let's try buying a health potion and there you go now we have two and if I consume one there you go consumed now another one and now I have zero and again now there's no more gold so I can go back down and see some more enemies and kill no more and get some more gold and there you go keep shooting them yep I can go all the way up here and I have some more gold so now let's try to buy the helmet and there you go consumed 90 gold and I have equipped my helmet alright so just like this we can spend our gold and buy some items awesome now one simple thing is for example in here we cannot afford anything but if I click there's no feedback to the player so let's add a simple warning taunted now here in my canvas I have this tooltip warning object which contains this script this was fully made in scratch in the tooltip series so go check that out then here in our shop we can reuse our taunted warning in order to tell the player what's going on so if we cannot afford it then let's use a tooltip warning and call show and simply say cannot afford it alright that's it so we should now be able to give some feedback to the player so here we are with zero gold then we go up here and let's try to buy some armor and there you go we cannot afford 100 gold alright awesome so we have some nice feedback and again we made this whole thing completely from scratch in a previous video so go check that out and just like this we already have pretty much our complete game look so we go out some enemies at spawn and we can attack and kill them for every enemy we kill we get some gold once we have captured some gold we can go all the way up here and we can buy some new armor some new health potions then go down here consume the health potions kill some more enemies get some more gold buy some more items and so on and just like this we have a very simple but working game loop with a working game store and again the whole thing is written in a pre simple way using a very nice interface so this would be extremely easy to apply to any type of game as always you can download the project Rosina tony's from antigua Montcalm subscribe to channel for more TNT tutorials post any questions it has me comments and I'll see you next time