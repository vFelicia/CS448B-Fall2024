Oh hello and welcome I am your code monkey and this is a quick tip for referencing assets through code now personally I like to make my game so there's a little use of the editor in the monobehaviour system as possible it's just easier to me to follow the flow of execution through the code rather than through all the various model behavior components and they're awake and start methods so in order to access acid references instead of dragging and dropping assets into various mana behavior components I use a single prefab amount of behavior with a static reference and put all the acid references in there when I access a static reference the prefab gets instantiated if it doesn't exist yet for example Here I am in a scene and I have a static class that does not depend on monobehaviour at all and it's being calmed by some other initializer and in here I want to spawn a sprite I want to do create sprite and spawn some sprite but I need a reference for it since this isn't even a mono behavior class I can't drag it directly into here so in order to do that let's create our game assets that will contain the assets that we use in our game so create a new C sharp script and name it game passes so in here removes start and update since we want this class to be very very simple and we're going to use a property as our static reference so that we can execute some logic when it script access it so first let's create a internal reference so private static game assets underscore I and now for our public property public static game assets I and our property won't have a get but no set so on our get essentially we're just going to return our internal reference and in here in case our internal reference doesn't exist so if this is the first time we're using or if we switch scenes we're going to set our internal to instantiate we're going to grab our prefab from the resources resources dot load our game assets and we're going to instantiate as game object so that we can go here and grab the components of time game assets so we have a reference to this script and down here we're similarly going to add the references to the assets that we want so in this case I want a reference to my sprite so just get the reference here good done so now up here the name eye is not necessarily very clean code and would normally actually be named something like instance but since this is a very specific tiny class I considered it the worthwhile tradeoff to just call it I and in this way I can access it by just doing game assets instead of having a type instance so in this case not necessarily very clean but very specific case it works so now back to our scene here create a new folder called resources and inside we're going to create a prefab and call it game assets now on this one let's just drag a game object into it and drag our game assets code now as you can see we got the reference right there we're going to put it in there now on our game logic here that is being instantiated we can now use create sprite go into game assets dot I access the instance and use our sprite and now in here when we execute the code there you go we are referencing this sprite through this game assets which gets instantiated when it is needed and that's it this is a very simple class that you can use to access assets through your code without having to drag every asset into every mana behavior that needs it ok if you have any questions post them in the comments and I'll do my best to answer them see you next time