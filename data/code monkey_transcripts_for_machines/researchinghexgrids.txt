ah so so so all right hey everyone how's it going all right hope you're all doing well today okay everything seems nice all right okay so i got a bit of interesting thing that i want to research and i figured i'd do it on live stream so this should be interesting i'm going to play around with hex grids which is pretty much just math but it's actually pretty simple math so that should be interesting so let's see map should be similar to isometric i'm going to be doing this the math in a well i was going to say in 3d but actually the plan the plane is in 2d xz but yeah so let's do it a star would actually be quite simple i mean i haven't done it yet but i'm pretty sure a7 will be super simple because a star is all about calculating the neighbors so the only difference between a grid and the hex grid is that the hex grid has six neighbors whereas the regular grid has three six eight so that's pretty much the only difference just with that difference i'm pretty sure it won't work but anyways before that i want to make sure the basics of the hex work so let's do some research and try to figure out if all of this works okay so i got my notes here the things that i want to test basically did a bunch of research to try to figure out what is the math required to make this work so let's give it a shot and by the way i got a video coming out in about 40 minutes it's about the unity art bundle so there was a tools bundle last week and now there's a art bundle so if you want go ahead and check that out afterwards the uh the regular video doing an overview is coming out in a bit but anyways over here let's start working with hexes i made a nice simple visual just to verify that everything is working so all right it should make a star faster with fewer neighbors uh yeah technically although the neighbors part if your a star is well optimized the neighbor's compilation shouldn't be too difficult but yeah technically yeah yep hexagons are bestigons yeah they are great i really gotta rewatch that video from cgp gray that was great i haven't seen it in quite a while anyways okay so let's figure it out typography oh that's awesome i hope you're enjoying it i hope you're on learning a lot took a lot of work but i'm really happy with how it came out and actually what i'm working on here this is going to be a free update to the course pretty much just converting the game of the course from working with regular uh rectangular grids to working with hex grids so that's going with all this research so let's figure out how it all works okay right so let's try doing some work okay so i got my notes here so the whole thing is a bunch of math but it's actually some pretty simple math i'm not very good at math so if you like me are also not very good at math then this should all be nicely understandable so let's start making a script just write some code and test it out okay let's go on a test hex grid and make a game object human brains use hex grids to make internal maps for navigation is that right oh that's quite interesting only working on your 2d build defender core so that's great yeah i really like that that game that was a a very fun design nice mix of building defending that was really fun i'm quite happy with the design of that game that was nice okay so here now the first thing that i want is well let's actually just hide the visual on the floor but don't leave the collider yeah right let me first just make sure that my mouse 3d script make sure this is working so over here let's put it on the ground layer on the mouse 3d let's put it also hit the ground layer and let me just make a quick visual for it so just a sphere put it super tiny and let's make a nice material just to make it glow nicely so mouse and on the sphere drag it and to make it fun let's enable emission nice screen and blow it up okay great so now for my camera just make sure that it's looking correctly so let's say i'm looking down here and okay all right so about making a hex based game that plays like an adventure board game yeah adventure or board games they are very usually working with hexes so yeah this is very useful to know okay why is this did i not make the does the cube not have a call either it does have a collector it's on the ground and all right i didn't drag it that's why okay let's just make sure that the mouse 3d is working and nope not working yet why isn't it working that's strange i also want to make a sphere planet with hex grids yep there was a a game what was that called uh what was that called before we leave i think that's it yeah this one really awesome it's a hex grid on a spherical planet that is a really awesome art style so yeah if you wanted to build something like this yeah that's pretty much just make a hex grid and somehow attach it into a sphere it's really nice yeah i've had this game on my two playlists for quite some time because it looks really interesting nice management building on a hex vertical world really cool okay um why was this one not working did i not examine the muscle position the recast using the mouse is this one not kidding that's strange next i got oh right never mind i put this one on the wrong layer that's why it doesn't work of course um take it out put it on the ground okay all right there you go okay so my mouse is indeed working for the king was a popular isn't that an adventure game something like that i remember that name yeah that looks nice that yep pretty nice yup nice adventure hexes yep really nice i miss your dodge tutorials well when that's 1.0 comes out you can definitely expect a lot of them coming since i really enjoy the tech behind dots so yep once it hits 1.0 definitely going to do a lot of things with it definitely going to be interesting okay anyway so i've got i just wanted to make my mouse just to make the most visual work just so i know i am okay so now let's first just flatten out this one so put it like that for 190 degrees and maybe put the camera a bit more up just so i can actually test out okay put the camera right in here all right so now on the script let's just do a quick update and on update let's do a debug.log on the mouse 3d and let's get the mouse 1 position okay so let's see and make sure that the scale of this is indeed correct see working with hexagonal tunnels yep hexagons are awesome so and hopefully after the research that i've done it should be pretty simple to implement this so let's hope so oh and left the other log okay so anyways on that corner i've got 0.5 0 and 0.25 yep exactly what i'm expecting 0.5 yep exactly like that that one is yup exact all right so far the scale of my of my nice squad is indeed working because i made the squad i drew this in photoshop actually photoshop has a nice tool for making hexagons that was interesting and uh pretty much yeah so i've got all these points and the hex pretty much has a certain distance from the center to the side which happens to be 0.5 so this entire width is one unit and then this point over here this is the tricky thing i thought it i thought i was going to get it based on an angle but now really to calculate this point i'm going to have to start from the center go to the right by half the size then go up i also have the size so that is why this one is on 0.5 and 0.25 this is pretty much that exact point okay so let's first keep track of all the points calculate where all of them are and then i'm going to start identifying if a certain point is within or outside of the of the mesh all right okay so let's start completing those points all right so over here let's make a simple class private class what am i going to call it a well just hexagon i guess and i'm going to have a vector three let's figure out the name so i've got upper upper upper all right so an upper right corner yeah and the other one do i call it upper corner yeah i guess so so if only the three for the upper corner then i'm going to have the upper and left corner and then the ones down here so the lower left corner just the lower corner and the lower right corner okay so those are the six points on a hexagon so pretty much that is the upper right the upper upper left lower left lower and lower right okay great vertex instead of corner yeah i guess technically those two names would work corner vertex i guess vertex kind of means a mesh whereas i want it to be more abstract than an actual mesh but yeah even though in a bit i do want to make a dynamic mesh but okay so now let's first manually create a hexagon then going to do it procedurally so let's create a new one now for the well let me define a vector three for the hexagon center point so i actually gotta i need this as well so vector three for the center point writing each of those trying to put them in one line separated back out just because i don't like that at all i find that very confusing to read something like this one field in one line personally i find this much easier to read but yep as would always as with so many things when it comes to code readability it's whatever works for you so if you don't like that then by all means do that come past directions yeah that is also interesting but for me i always have a always takes about half a second in my brain to try to figure out okay west is that left or right i never quite know the eastwest thing that is always triggered to me so that is why i stick with upper and lower instead of eastwest and so on okay the center point let's put it on factor 3.0 and then over here let's put the center point equals the hexagon center point all right and actually yeah i might as well put it over here or do i make that i don't know i mean i'm just doing this for testing this is going to be all refactored in quite a bit but let's do it like this okay vector three for the center point and i'm going to receive this center point all right and then inside of this one instead of creating it like this let's do a new one pass in down like that and then on this one let's do the compilations and i need the center point as well as the size of course otherwise i can't figure out where it is so a float for the size and look at that a custom character hello that's nice that's awesome by the way all of you you can all get custom characters you can just follow this nice little tutorial you can get your character you can just download the sprite sheet you can draw on top of it and your character will look nice and custom so if you want go ahead and play around that okay as soon as you are into the tiles with the points up yep yeah i might see how to rotate them but yeah for now i saw this if you want to learn pretty much this is the website that i learned a lot from it this is super detailed website so if you want to learn more about hexagons definitely check that out but yep this is pretty much the style that i'm going to be building so with a pointy top instead of a flat top so this kind of thing that i'm doing so i got the size over here the size up here then size half to get to this point size after that point and so on okay right so where was i where was i right so i got the point i need to receive the size and i can start calculating so the upper right corner this one and do i call it size or size half that's a good question let's say size half yeah that's probably okay let's go with size all right so the upper right corner is going to start off from the center point then i want to move to the right so vector oh that's a tricky thing oh actually that's freaking i'm trying to think in terms of x y x z the every online method take a square grid and shift if y'all yep that's that's pretty much what i'm going to do right now i'm mainly focused on the math of trying to figure out is a certain point inside a hex or not that's that's kind of thing okay so here a bit of a tricky issue because i'm trying to get this to work with xz plane so instead of using the default ones i'm going to be using like this okay so for the upper right corner i got to move to the right by half the size so for the right that is going to be one zero zero so that is movement to the right multiplied by size multiplied by point five f for let's define here the half size equal size times 0.5 up okay so then i multiplied by that so that puts me to the right and to get the upper right corner then i got to lift it up so pause a new vector3 except up in this context is up on the zen so 0 0 1 multiplied by and actually i think it's half size times 0.5 right would it be very unperformant to have a collector on each hex yeah that that approach does work and it is indeed uh simpler than using math but yeah that is going to reach into scalability issues pretty quickly so yeah that's that is one option that you can do if your game is limited but i really want to do this proper proper approach using math because this one is going to be easily easily expandable scalable and so on what portuguese city are you based i'm in lisbon you can use radiant math with yeah i mean for me math and angle is already tricky enough and radiance becomes even more tricky so yeah i definitely stick with euler as much as possible okay uh right so i want to go to the right i want to go up but i want to go up by half size times 0.5 so i think this is correct because basically i've got the center point here i want to go to the right by my half size which is this distance however when going up is it also half size no i think it's half size exactly it's not half size it's half size but half of that half off size okay that's a bit confusing but yeah okay so i think this point should be correct so let's do a debug.log try to figure out and see if this corrects over here just got to define a float for the size and for the size let's put one unit so got point five on each side all right okay so let's try it out all right so all right because i got the mouse in the middle uh yeah let me take away the mouse but yeah the other one did work this one is indeed on 0.5 and 0.25 and it is indeed correct so if i put a new one and i put it on 0.5 0.25 and yep it is that point all right great okay so far so good turn on full body fps character you really need to be more specific than that what do you mean by phone body what do you mean by things what do you mean by fps i've got a video on a third person shooter so if you want look at that one third person or first person works pretty much the same and if you want to see how to work with animation rigging to make the weapon name perfectly look at that so pretty much something like that okay right so the first point is indeed working permanently so the upper right corner that is perfect so now doing all the others should be pretty simple so let's do the upper and left corner and for the upper left i go up by center point okay then instead of that go in minus one and then up by that yep now for the let's go the other which is the upper corner so the upper corner is on the center point and i just move up by half the size so that is just zero just one by the half size yep that is correct all right so the upper corner and the lower corner both these are super simple so the lower corner okay so i got those then for the other ones so for the lower left corner and the lower right corner let's see these two okay so for the lower right i start on the center point then i gotta move to the right so this one is a plus one by half the size and then i gotta move down by half size minus point yup that's pretty much it okay all right so i think i think these are working already hey great uh how do i print all this out without being one by one how about if i convert into json just for fun so to json but not this one let's put it over here let's convert this hexagon to json and see if this does work if i can read all the points okay all right well so far the math is going good although so far it's all the simple stuff yeah okay let's see so for all of these this be available in standalone youtube video later yep and actually i think for this one i made it on uh yeah this one will show up as a regular video yeah which is going to be interesting because i've got a standard video coming out in 20 minutes so then i have no idea how you how you how youtube is going to handle uh having one video in one one live stream coming out on the same day so that's going to be an interesting experiment to see what that does to the analytics okay right so this one i'm pretty sure that it works so for the center point on zero zero zero okay makes sense the right corner is on point five point twenty five yep the upper corner zero zero point five all right awesome then the upper left is to the left by minus point five then by point twenty five yep and for the lower left going left then down yep and lower corners just down and the lower right corner to the right and all right great okay so using some math using a center point i am now calculating all the various points okay so now let's figure out the logic for testing if a point is inside a hexagon okay so now let's see all this logic carbon direction is up you can simplify as left right trapezoid i'm not sure what that means cardinal direction is up are you saying use angles instead well let's see okay so i've got the okay so now let's define a point well the point is going to be the so a vector 3 for the test point and the test point is going to be the mouse 3d dot get the mouse world position okay so this is going to be my test point now the first thing that i'm going to test is if it's within the horizontal so test if the test point test test point dot x if it is under the if exactly because it is the okay that's going to be interesting converting into local in global space that is going to be interesting um okay so for the hexagon dot i want to test the x if it's under the right side so let's go into the yeah i can use either of these the upper or the lower okay and testpoint.x is above hexagon dot upper and left corner okay so if it is this one debug.log let's do it inside horizontal and let's put analog so it doesn't break okay so the test point and the x all right great okay so let's see if that simple test is now working and does detect if it is within the inside bounds so if i'm here this one is outside and as i go there yep i'm inside and if i go to the other side okay now i'm outside and now i'm inside all right so i can detect if the mouse is within the left and right but of course it's still detecting over here as being inside when it's outside okay and also the text up here so next let's test under the width and height axial coordinates i'm not sure what that means you mean angles or do you mean low compositions so i gotta say math is not my strong point so if you give me technical terms yeah i'm not going to be able to understand but uh yeah okay so with this i am inside the horizontal now it says if it's inside the the vertical as well so if the test point that's zen if the z is under the hexagon dot upper corner dot z and the test point dot z is above the hexagon dot lower corner lower corner dot z if so then it is inside so let's see log except this time is inside the vertical although it's not really vertical but yep okay all right so let's see about just the closest hex position to the mouse position yeah that would not just testing distance wouldn't work because by testing distance you're essentially just testing around a circular radius so it would kind of break over here on these edge cases you would select the wrong one so yeah just doing like that wouldn't quite work split into two quads in left and right yep i do i do on this uh this really nice website over here there was a part where they mentioned they mentioned something interesting here about quadrants okay it wasn't on this one maybe it was another one but yeah so pretty much i want to test if it's inside the right and the left side then i want to make sure if it's within the bounds then i want to test is it on this corner if so then i got to test against this angle right here if it's on this quadrant i want to test against this one and so on so pretty much like that okay uh right so what am i testing okay so in here so if i go here i'm inside the horizontal and if i go in here now i'm inside the vertical okay so far so good all right right okay so i can test it inside the horizontal and vertical so these were the easy parts and now let me let me test just uh before i put all of them together okay so the horizontal and vertical and that does work but now i want to test if it's within that angle because dealing with odd angles that's the tough part so let me figure it out okay so basically the way that i let me check my notes here so basically with my notes i need to use the dot product and i need to use the vector3 dot perpendicular so let me first figure out how that one works to specific new game just working through new game mechanics well i've got my super useful grid system that i've made in so many videos where's my my grid system there you go all of these they're all based on rectangular grid so i'm pretty much working on the mat to be able to convert all of these into a hex grid specifically over here my my turnbased strategy course so this one works on a standard rectangular grid but yeah i pretty much want to research how to be able to convert that and so on make it hex so that's kind of the goal here so pretty much the research that i'm doing here will end up as a free expansion on the course so that should be fun okay so let me try to figure that okay so i'm going to need to so i've got my points now i need to calculate the direction from this point into this point why was i thinking oh right because then i need to rotate it okay so yeah i just finished that course that's awesome i hope you enjoyed it i hope you'll learn a lot all right so let me figure out the direction vector going from the upper right corner into the upper corner so let me do a thing about download here just to see if that does work or actually instead of working inside here let's work outside here okay debug download let's go inside the hexagon let's grab the upper right corner or actually now start on the hexagon dot the upper corner so upper corner minus the upper right corner so this should give me that thing and then let me make another one using that direction and i'm going to use the function which i've never used so vector 2 dot perpendicular except it's not going to work because it's the vector 3 so that's going to be interesting uh right so i need only vector three so there from upper right corner is going to be a huge name to upper corner all right so this is this direction so let's get this so that's my direction so that's the one going from there and up and then for the perpendicular except i'm going to need to create a new vector 2 because this only works with vector 2s yeah along variable names i mean at least it's very descriptive so there can be no doubt as to what this variable contains okay so i can only be perpendicular and now let's see i actually don't know if that one is going to rotate that way or that way so let's see okay now let's see what it returns okay so which one is the direction which one is that one so this one is direction from the upper right to the upper corner uh does that actually make sense i actually don't know well that's yeah right i made this test but i don't know how to verify it but technically no yeah it is correct yeah of course going from this point to that point is going to move minus 0.5 on the x and plus 0.25 on the zen yep okay so that is correct and then the other one makes a vector on minus 25 and minus 0.5 so i got it in my brain convert that from x y to x z so minus 0.25 is going to move just a little bit and then down so so it is correct basically i just want to i just wanted to know is that going to point in that direction or up here and apparently it is going to point around in this direction which is exactly what i want okay great so that is indeed the vector so that is that one so okay let's think uh i've got a vector 2 perpendicular let me store this one yeah this one conversion is difficult i might actually have to make my own vector two perpendiculars vector three does not have a perpendicular nope it does not so yeah i'll probably have to make my own sort of utility function so i don't end up with very massive conversions between vector twos and factor threes okay so i've got a vector three so uh oh boy this is tricky oh god this is a tough name to figure out so direction to center except it's not really direction to the center but yeah anyways so let's figure that out in a bit so perpendicular dot x then zero on the y then perpendicular dot z okay so this one is going to be direction to center and now for the final thing that i actually want to use that's vector 3 dot and now i always forget which one of these but i think it doesn't matter so if i use this one and then the other direction is the point to the center okay now i'm confused no this one is the direction from that corner to the center so now i want from the test point to that one and if it goes in the same direction then it's correct if not okay so i need the vector three for the direction from test point to uh where am i going test point to the upper right corner okay i'm thinking a lot so sorry if i'm not responding to chat but yeah i'm trying to trying to think so the distance from the test point to the upper right corner so let's go into the hexagon grab the upper right corner minus the test point so this is going to be a certain direction let me do yeah i'm going to need a bunch of logs to make sure that i know what all this is doing and then i got the dot with that one and this one and maybe the dot product will indeed work well let's test let's see what all of this is doing dot okay and let's hide this one all right so let's do a test and try it out and i got an error what did i forget did i not save oh not z dot one okay all right hey there doing great hey thanks for being here with your awesome custom character thank you that's nice all right so let's see if this one does work let me actually zoom in the camera the camera is way too far so let me zoom in the camera so it's a bit easier to see all right okay just rectangle in mid and triggers to check if it hits any of them yeah that's pretty much it okay so first of all the direction from the test point to the upper right corner so if the test point isn't there so if the test point is right to the right then direction from the test point to yep going to the left alright that is perfect and yeah actually it is already working all right awesome so it is working so if i don't like this why is it yeah probably flip the the order around why is that one not approaching one that's a bit strange because it is working but is the magnitude does the dot product does that get get uh confused with magnitude that's probably it so let me just normalize these just to make sure that i see a nice minus one or plus one perpendicular point in the right direction yep it is going inside so that is correct so if i see yep okay so apparently that one does have to be normalized all right awesome so so pretty much over here i'm testing if the the mouse position if it is uh on this side of this line here so comparing against this line is it on this side or on that side and i can test with the dot product so if it's on this side the dot product is on minus one and if it's on that one it's on positive all right and if it is perfectly perpendicular so the other vector is pointing straight around let's see around here so that part the dot product is exactly on minus one and if i point in there it's exactly plus one all right awesome so this is indeed working just for a tutorial well uh yep i won't make a tutorial on how to make a hex word and i will also update my turnbased strategy course to make it work with hexes so this is going to be some very small research all right okay vestagons yep hexagons are vestagons okay now how do i clean up this code so that it's not quite such a mess um i'm trying to figure out what do i call a test direction uh trying to come up with some good names for this so maybe a vector 3 for the uh why not use vs code just because i've used regular visual studio for such a long time so this one works perfectly in fact i think this one what is version yeah i think this one is version 2017 but it works perfectly so yeah no reason to switch you got nothing against visual studio code so if you like it definitely use it and for me i won't keep using this okay so let me think about the name what is wrong with the builtin timeline well because i want to learn how hexes work and because the builtin tile map i don't want to be using a time map i want to be using the hex for logic not just for visual so so that is why i want to handle it all by myself okay so let's figure out a good name for this so basically i only need this one in order to calculate the perpendicular that is pretty much the only one that i want ah i guess i i can just go with super long names and then figure out if there's a better name so basically i just want ah i'm annoyed because the the name isn't perfect wrong question is why not dark mode because dark mode burns my eyes that's pretty much it um i'm trying to think the direction of the upper right point down into the center except that is not true but yeah i guess i won't take a bit of an incorrect name as opposed to something that would be way too annoying i'm not sure all right anyway so direction uh upper right corner to center although again it's not exactly like that yeah long names are always better but over here it would technically be the direction upper right corner perpendicular from direction from upper right to upper corner so at that point i think if the name is 100 characters long then at that point it would become quite tricky so yeah i guess let's go with this even though the direction is not technically 100 going from that corner to the center it's a bit more offside so yeah we're thinking about jetbrains rather i've heard lots of people uh talk lots of good things about it but i've never actually used it so i don't know basically i'm very happy with visual studio does everything that i wanted to do it allows me to rename it allows me to have it allows me to have colors on all the things so yeah pretty much visual studio works perfectly okay we should set codes for each other instead of similarly naming yeah maybe i mean for these i'm okay with these names they are worthy but i think they are descriptive it's on these ones that are confusing but anyways let's go with this then i'll figure out if i can find out some other name notice me senpai all right that's great i'm glad you enjoyed the videos thank you okay so upper right to center now upper left to center so upper and left corner to center then it's going to be the lower right corner to center right oh that is actually going to be tricky this one i'm not sure if it's going to work exactly as intended but let's go and the upper left corner to center we post this video later yep it won't be posted like oh look at that it's almost 6 p.m because i got a regular video coming out in a bit so yeah it's going to be interesting how that regular video is going to conflict with the live stream which is also going to be started as a video so that is going to be interesting to look at that from the point of view of analytics okay so let's just let's just do this is this part of a bigger project well the research that i'm doing here will eventually turn into a free expansion to my turnbased strategy course so technically yes although i will also make a standalone video so yes and no that is the answer okay so the direction from the upper right corner to the upper corner and i take the upper corner and the upper right corner then i've got to take that one and converting to the perpendicular oh god this definitely this is way too big a name oh boy i don't like again i'm going to have to refactor this i'm going to have to make my own perpendicular function so that it doesn't end up like this anyway so this one should be correct but now the other ones that is what is going to be tricky so i want the direction from the upper left corner upper and left corner to the upper corner so upper and left to the upper corner so that is this direction so upper corner minus the upper left corner okay then from that one i want to make that one a perpendicular except i think this perpendicular is going to be moving in the opposite direction so that is going to be tricky i got to convert this but yeah i do the perpendicular of that one and that is eventually going to become this one the direction upper and left corner to center okay now let's just do the other two ones so direction from the lower left corner or my background some inspiration while i work on combining some systems i had worked on months and months ago all right that's awesome go for it i hope the work goes well yeah definitely push it towards the finish line i mean finishing projects is definitely where you get the all of the unlearnings from that project so yeah definitely if you got something that was interesting definitely go ahead and finish it okay so this one is actually wrong this is from the lower left corner to the lower corner that's what i want i don't want to go to the upper corner so the lower corner let's go into this one yeah all these names are very unwieldy but let's see because i think a bunch of these oh right yeah i think a bunch of these are going to be yeah perpendicular trying to point to the center i'm trying to point to the center but it's not exactly to the center because the center is not uh uh where's my where's my thing so basically this angle here the center is over here in the middle and if i make the angle to the center it is not going to match this line here if i point straight to the center then the line is more around like this so i want to take this line this direction then make it perpendicular to get it pretty much just like this then with that one i can use the dot product to make it like that how do you get a custom avatar again there's a nice tutorial here and when you do it let me know because there's a manual validation process so if you make your own sprite sheet make sure you link your youtube account and then let me know so that i can manually validate it okay so back into this logic so this i want the lower order corner uh six game object children but that would not be scalable and the whole point we're doing this using math instead of raycasts and so on is to make it scalable so that is why i'm not doing it like that okay so the lower corner minus the lower left corner lower corner minus the lower left corner okay so i've got that one then i've got the perpendicular on this one yep then i take that perpendicular and this one becomes the direction from the lower left corner to the center and the final one the final one is going to be the lower right corner so that's the lower right corner to the lower corner yes so the lower right corner let's just make sure let's hope that all these are correct let's hope i didn't miss anything here okay so now let me do a whole bunch of logs on these ones okay so on all of these let's see this guy this one should be correct and now for the other ones the lower left the upper left lower left and lower right and lower all right so that was a lot of stuff but let's see if all of those are correct okay boy all right okay let's pause this all right so let's see the direction on the upper right corner that is this one up here going down to the center although not exactly the center that is minus on the x and lower on this end so that is correct then the upper and left corner to the center so nope that is going to the left yeah exactly that's the problem that is going to the left and going up so i pretty much want the opposite uh so how do i yeah i gotta i gotta invert it i gotta make the direction from the upper and left corner too i pretty much gotta invert oh boy what did i do uh i've got to invert this one and now like this obviously like this the name is broken but yeah check my character okay let me let me try that okay let's see if the other one is correct so that one going left and down that is correct that one is going right and down all right that is correct for the lower left corner that's this one over here it's going to right and up all right that is perfect and the lower right lower right is going to the right and down so that is not correct so that one also needs to change so like this i save it i did not save it all right because i was in there uh all right so there's two people with custom textures let's validate it then tell it to update the character customization and there you go look at that a custom character that's nice it's always awesome when when people do this only handful of people have done it but yeah it's a pretty fun so yeah there you go you've got a custom character that's nice uh okay so i think this logic did indeed work let's see uh right so all of them work so on the upper right corner i'm going left and down that is correct on the upper left corner i'm going right and down that is correct on the lower left corner i'm going to the right and up that is correct and on the lower right corner i'm going left and up that is correct all right okay that was tricky but yep it does work so i've got all the corners and yeah i should probably normalize them so i don't have that problem so let's just normalize these just normalize these where am i just normalize these and normalize okay so then i've got the direction oh right that is going to be i mean technically the math here is super simple but the logic to get it all working that's the thing that is quite a bit tricky about the vertices but you actually mean the sides no i do mean the corner so this one up here this is exactly the upper right corner then this one is exactly the upper corner this one is the upper left corner so it's only on the corners that i'm thinking so pretty much now i've got the perpendicular zone pointing to the side so using that i can calculate and see if a point is on one side or another side of a certain line so i got direction so let's just make sure this one works uh dear to center that was the other one that i was doing right yeah i think i was using this one so the hexagon dot this guy i think that's what i was using and yeah that's the only tricky things that i need the the test point to compare with that one but yeah okay so basically now i can get rid of this and i need this and now this dot should be working with regards to the upper right corner so let's see if it is working you don't sound like you look okay thank you i guess i don't know if that's positive or negative but thank you all right okay so i'm testing against this line so if the the point isn't there then i've got dot product on the positive and if the point is here i've got negative all right awesome so actually i wouldn't like that to be the opposite if i swap this won't that work actually i don't know so let's test test it out best way to structure architecture code as a newbie where should i start should i learn something like solid principle yep definitely do study the solid principles and uh well i mean if you know the absolute basics then i would definitely recommend you look into my turnbased strategy course because the whole point the whole point with that course was to help you learn how to structure organize the code write good click code so that is what i would recommend but you can also just go online oh and yeah and i don't have the book here with me but the book code complete2 i've recommended this book several times so yeah definitely go ahead and get this book it's a pretty massive book it's like a thousand pages long but if you want to learn how to write good clean code definitely go ahead and get this book okay so what was i doing uh right testing so this one oh right i just wanted to see if that one flips becomes positive instead of negative okay uh all right so yeah that actually didn't change did i not save the code or is that intentional yeah i don't know if the dot product is depending on then my vote for more live streams yeah i definitely want to make them quite a bit more regular since the setup works everything works honestly the only issue is that it's insanely hot that's kind of problem over here with these lights i'm sweating like crazy so i can't stream for more than about an hour and a half otherwise yeah it's a pretty messy all right so yeah that does not swap but it's okay the dot product is under one so that can be good okay so that's one of these dot products so let's call it a float for dot test upper right corner so this is going to be my test and i do this dot product all right so now testing for the other ones so the dot test on the upper left corner there from test point to the upper left corner and the upper left corner all right so this is actually hopefully pretty simple and deer upper and left corner to center alright so let's see if this one is working so already got the horizontals working so now if these lines work then everything will indeed work uh okay so which one am i testing i'm testing the other one right so i'm testing this line here and if i'm in here i've got a negative and here i got a positive all right so that is awesome okay but that course has helped me a lot to go through 35 but pause now because some worse on you all right yeah that's great i mean the the course is waiting for you so don't uh don't feel stressed about that definitely go back to it when you got the time yeah definitely if this is your hobby definitely don't stress there are more important things but yeah do get back to it because while completing things really helps i'm learning the the final part of it so don't stress out but eventually do make sure you get back to it don't don't drop it because that teaches you a lot of interesting things especially near the end of the course as things become more and more complex that's when you learn quite a bit more so that is quite an interesting one okay so let me test just the other points so this one is going to be this direction to the test point to the lower left corner so lower left corner that's all i need and the dear lower left corner to center so that is going to be the top test the lower left corner and let's do another one so that is that one and the dot test lower right corner is going to be this one okay explain what you are trying to do i'm trying to do some math to figure out if a point is inside a hexagon or not that is pretty much it so the lower right corner so i test the lower right corner to the test point and direction little right corner to the center and this one over here okay so i think that is correct do some vr deaf tutorials yup that is a topic that i very much would like to research i've only played a few vr games i really love beat saber that is really awesome and that is a quite a workout it's pretty awesome so yeah i definitely would like to research a bit more vr maybe do some videos but yeah with that the whole problem is how do you present them that is kind of the tricky thing so for vr i would kind of have to get a camera set up in order to i don't know showcase wearing the wet the headset and so on so yeah it's a tricky thing but yeah definitely an area that i would love to research all right so this is all working so that one is outside that one is inside down is outside down is inside okay so honestly with all of these obviously this code is not it's not really it's not very pretty but it does work so if i go like this i've got my test point i check if it's inside the horizontal inside the vertical and then inside i do all of these calculations test against all the angles and now after this oh hey another custom character hey thanks for being here all right uh so now for testing if it's inside all of them now of course i could still do some math but if i test pretty much all of these dot tests if they are all under zero so that's pretty much going to be the thing douglas quest you can easily cast to a web browser is that so is interesting i need to look into that i do have a quest it's really awesome being wireless really is quite a game changer so yeah that is pretty cool all right so with all these debug.oh inside hexagon there you go just like that so all the math is actually pretty simple it looks complex because there's a lot of things involved but the math is all pretty simple so with all this inside the horizontal the vertical yup yup yup and then i got this one all right so yeah this is quite the tricky thing make an application transparent window in unity with characters similar to one yep and just in case you don't know i did make a video on that so if you want the transparent unity window i made a video on how you can achieve that which is what i'm using over here for the overlay and if you want to know how i made the characters those are pretty much just dynamic meshes so you can look into those to figure out how i built all of this you are actually an old man am i old i guess that is very relative i mean i'm 34 years old so i guess depending on the point of view that might be old or not okay so let's test so did i not make oh i did make a log all right awesome let me make another log here so let's do that one return and if it does not return debug.log outside hexagon okay let's see 134 okay all right okay so the logic is indeed working so over here i'm outside the hexagon and as i go here still outside as i go here still outside and i go in there and yep i'm inside so outside inside over here inside everywhere go there outside on the corners outside inside all right oh boy okay that was pretty interesting make the sphere change colors if it's outsider and you know what that's actually a very fun idea so let's do that just for fun so let's make a serialized field for the do i go material yeah let's go now let's go with mesh render mesh renderer for the sphere mesh renderer let's go with that one then make a material called green material and let's go with another one called the red material so let's try doing that just for fun so you put that one dot material ah auto complete isn't working uh that material equals the green material if it's inside and if it's outside the hexagon let's go with the red material red material just like this okay 37n can code this well well i mean it all depends on when you start that's pretty much it if you start a bit late then definitely don't feel too bad i mean you can always you can always learn that's pretty much it no matter how old you are you can always start learning right now that's the same thing with me with uh going to the gym i definitely wish i started going to the gym when i was like 18 years old but anyways okay i went a bit late but still it's only enough to be pretty effective so yeah okay so let's write the sphere mesh render and material boy i can't read it hey everyone nice i can't read underneath that so the green material and the red material all right oh boy oh right it's past 6 p.m i didn't even notice but the video should be live right now so it's red and green red green red green all right awesome so yeah all the logic works over here it's red as i go inside there you go turns green so i can definitely identify when an object is inside or outside a hexagon okay that is really awesome it's really cool oh boy all right nice okay thanks for the tutorials thanks a lot that's awesome i'm glad the videos have helped you okay let me just make sure that the the video was supposed to launch didn't launch correctly did everything go over yep it did and just in case you haven't seen that video yet pretty much is just an overview of the of the new humboldt bundle which has not just visuals but actually some really interesting tools like this one over here if you want to make things nice and bouncy look at that you can make things real nice and bouncy and collide with things that is really interesting so this one is supposedly about uh art but it does have a lot of interesting tools like this one which can make turn a 3d mesh and make it pixelated so really awesome so this bundle i thought with art it wasn't going to be as interesting but actually has quite a lot of interesting tools so yeah pretty nice anyways okay so the hex didn't did work yep a new homo bundle yeah there is the two bundle last week and now there's a new one okay so all this logic worked so i got all the corners on the thing so i'll have to refactor this code to come up with a bit better names but on the logic is indeed working so i test if it's inside the horizontal the vertical and then i test against all the things now of course this could be a lot more performant but yep that does indeed work so the only thing is over here the test point and you gotta do some math hmm try and think of how i would change that okay and the other thing that i want to test is if instead of just one hexagon if i'm testing out a grid of hexagons trying to see if the distance would work because i'm not sure that it would or would am i upside down no okay why is that okay now i'm confused where am i that is the x okay right i was a bit confused on that yeah a nice unity bundle yep how to be part of humboldt i'm not sure what you mean part you mean as a publisher well i guess unity organizes the bundle so the nts is our the unity assessor team would be the ones who invite people i would assume so pretty much like that okay so right i was going to test the distance just to see if a distance works because i don't think it works but maybe it does i'm not sure so technically on a grid this would be 0.5 this would be seven five is that correct or is it seven two five no i think that's two five no yeah definitely seven five okay so pretty much like this and now if i put over here on minus 0.5 and if i go down there so this would be 1 1 1 0 yeah exactly all right so let me just do another interesting thing so let me make here a serialized field private uh uh what do i want a transform let's do one list i prefer a list list of transforms so so hex transform list so let's go with that one and over here let's actually let's not run this code right now so just return don't want to run that uh okay so i want to find the closest so transform closest because no then yeah for each of these so transform hex transform in the hex transform list if the closest equals null then this one becomes equals so of course this equals the hex transform and if not then let's do a vector three dot distance calculate the distance from the closest dot transform dot close dot position that is already transformed from down to the mouse realm position so let's use define the test point up here so from that the test point if the new one is closer than the closest so let's just this one this one the hex transform that position the distance if it is closer than the one that was closest then the closest becomes this hex transform okay let's do a debug.log on this hoses and see if this does work because i'm not sure that the um the hex transform list just testing like this i'm not sure this would work but maybe it does work so maybe all that math is only really required for or actually right yeah i don't know uh okay so well i need to kind of remember where all these positions are so that is the so yeah this one is the original then the quad one part two and quad three okay so if i'm here this one is the quad down is a quad one that one is a two and then there's a three and if it is right up there even if it goes to the corner yep still says down and down all right so yeah actually this does work so if i'm doing just one hex yeah i do need to do all that math but if i'm testing against a grid then i actually just need to do transform positions all right so that actually simplifies the code by quite a lot so i'm trying to think um let me let me think how to update textures in stream you can follow this tutorial where you can download the base texture you can draw whatever you want on it then you can save your changes and make sure you link your youtube account so that the character knows which one belongs to you and then of course this has manual validation so if you do that then let me know and i will manually validate okay so what do i want what i want let me go into my grid system um oh i didn't name it grid system i just named grid uh right because my attires are sick yeah nice mr bean with nice doggy doggy doge is that doge well technically just a shiva you know i guess uh anyways all right so actually can you validate okay let me let me try doing that let me see if there are any new ones uh okay yeah right so this is the other math that i'm going to pretty much need to do that is going to be tricky okay now that one is definitely going to be tricky how do i take a worm position and convert it into a hex grin xy i guess that would be it i would have to do some math and figure out which one is closest that's kind of it so let's see okay there's a bunch of custom textures all right so let me put them and now update the character customization and in a little bit there you go there's a custom texture a nice snowman that is nice is he looking left right he's looking right there you go i don't like that that is nice hey another one yeah there you go nice all right that is cool okay right so a lot of custom textures already that is fun okay uh anyway so yeah the main thing that i wanted to do the uh doing all this math to calculate if a certain point is inside or outside that did work perfectly just divide the wrong position dot x on the hex size and that point five zero is on yeah i can figure out the x and y the problem is on the angles because i need to take a world position and convert it into down if i just add an offset then it won't be a hex shape it won't just be an offset grid shape so yeah why don't you use dark mode because dark mode burns my eyes that's pretty much it about rendering the hex grid in game well actually yeah actually that is another thing that i wanted to try out now that this logic is indeed working uh you can pretty much just make a custom mesh so pretty much all the characters down here these are all custom meshes so that is kind of what i want to do in order to in order to print out a grid so let's actually try doing that but yep on the logic for testing if it's inside or outside a single one that does work smart mode burns my eyes but not the other way around yep that is correct dark mode burns my eyes my eyes can't seem to focus on white uh letters on a dark background but over here but if it isn't like this my eyes got no problem i can look at this for hours on end no issue okay so anyways yeah so the logic for testing if it's inside or outside a hex grid does work perfectly so inside and outside and all of this these are all outside of the main one and as i go in here go inside like that all right so that is pretty cool okay great uh right so yeah let's actually try doing a visual to the hex since this is indeed working so let's go up here i just want to run it once so let's do it on start and i've got my mesh utils which i wrote in a video i don't even know how long i think maybe it was on the mesh video kind of like that where i can create an empty mesh and then okay these are adding quads so that is not what i want yeah i think i'll just manually um add the mesh yeah i think that is probably the the best approach because these are all add line points so pretty much all this was made with quads in mind and not really made with the other thing in mind okay all right so i think i'll just manually make it which should be fun because i haven't i haven't made a mesh in quite some time so basically i need the vertices the uvs and triangles okay so let's actually do this can i create an empty mesh yeah that one just creates the empty ones then i'm copying them and so on okay uh right so let's actually try this to use vs code or vs this is just standard visual studio it's the community version which is free so yeah that's pretty much it okay so let's start just drawing a triangle so we need three vertices do i need the uvs i don't think i need uvs or not and the triangles that is six right six plus one oh right is it six okay now i'm confused no it's not six it's six if i was meaning a quad if i'm just making a triangle then it's only three okay great so mesh mesh becomes a new mesh and then mesh dot vertices equals these vertices mesh dot triangles equals triangles okay so now i just need a i got a mesh render now let's make a mesh filter so hex mesh filter so let's try this one then i do that then on measurement mesh equals this mesh okay so let's add something and see if it does work my chat is on the other side other thing okay right i didn't have the free version i enjoy it but i'm too poor yeah i've heard great things about writer but i have not used it how do i make my own utilities package i'm not sure what you mean by i mean there's nothing special about utilities let's just say for example over here i've got my code monkey.utils why can't i find the utel's class ah utils class so that's all it is these are utilities you just put it inside namespace and start writing classes objects functions whatever so yeah pretty much what you need so yeah there's nothing else there's nothing special about the name utilities it's from just code with useful functions that you might do for me i've been building this class with lots of interesting things for i don't know like 10 years now like for example over here random city name this is when i made my first steam game survivor nights survivor squad where i need a bunch of names for random towns that were randomly generated so i made this function and since it might be useful i also put it in here so that's pretty much it same thing for getting random names just in case i need them get a random id random so on so yeah just a bunch of useful functions okay where is the hexagon class it's over here just something simple just because i need to store all the points on the things okay so let's see if this one does spawn a mesh so i need to go up here and let me actually hide the visuals hide those visuals right now let me just duplicate this one let me unlock that one let's call this hex i'm going to have a mesh filter mesh renderer but no material no nothing just like that so let's see if this one does change let's just drag the reference and let's test okay right is this code hard to make not really what i've got here is very much uh something pretty simple so yeah okay so that's my mesh and isn't this super oh yeah there you go three vertices okay so i think that does work okay so now let's put some points so on the vertices we've already seen zero let's put it on new vector three on zero zero zero okay then i've got the vertices one let's put a triangle so put the right on one zero zero and that one zero zero one so just like this then i've got to set up the triangles so triangles where is this one going to be and let's go because this one i always get confused if it's clockwise or counterclockwise i'm going to assume that it's clockwise so let's start off on vertex zero and then let's go one that's one right so that would be counterclockwise so let's go into two and then two one okay let's see this looks complex to me well it depends on your base knowledge i mean for example what i'm doing here these are just basic uh meshes so if you know how meshes work then this is pretty basic but if you don't know how much is worked then yeah this looks quite a bit confusing and all the math down here it looks like a lot but it's really just doing the same thing over and over so vector3 dot dot this one by the way this was a super awesome thing that i made the backstab mechanic that was a fun video to make that is what what made me research the uh vector3.mechanic mechanic the math function to see how it works so yeah if you haven't seen that video definitely watch it because it's a pretty interesting thing you can basically use the math to figure out if a character is behind another one to trigger a backstab or not that is fun do you make assets or buy them i buy them because i am not a artist 3d modeler so all these these are from a various uh cinti packs so yeah i haven't drawn any of these i am not in uh an artist i'm not a 3d modeler nothing like that so yeah um okay so i could probably get rid of that but uh did this not work did it end up backwards why did i put a compiler i did put a collateral i don't want to call either but um let's go into wireframe except i don't see it oh there it is wait did i put it on these zed wait where am i yeah xz so why is that did i mess up in there what did i do now i put it on the x number is this rotate okay this is rotate yeah that is why put it on zero and get rid of the collider okay many times have you tried learning blender i tried it just the just what like a year ago half a year ago i don't know i tried i actually learned quite a bit but yeah as always it's a it's a question of experience and training so i haven't really touched it much since so yeah if i went back right now i definitely would need quite a bit of a refresher does portugal have their own version of silicon valley are there any tech hubs in the country now really uh i mean there's some tech related universities but not really anything on the scale of silicon valley there's no i mean there's pretty much no game developers over here in portugal there's a i think the biggest one is mini clip which they make mobile games they used to make flash games and i'll make mobile games so i think that's the biggest one here but yeah not much of a market is a pretty tiny country so yeah i mean that is why i eventually became independent is because if i went for a regular job i wouldn't be able to find anything so yeah i mean that led to me being doing what i am doing now so i'm quite happy with how things turned out so that was that was fun uh okay yeah originally wants to be like silicon valley yeah it wants to but i don't think i don't know at least i'm not i'm not too familiar with it but yeah i know they want to become but i don't know maybe there's something awesome that came out of there that i don't know that would be something got a custom character main okay let me refresh the validation okay thanks so much for the timebased course it immensely helped me nailed an interview segment all right that's awesome yeah i hope it goes well best of luck that is great that is great yeah i hope you get it uh what was i doing use unity for other projects other than making games well this overlay here this is technically not a game and it is made with unity so yeah i just messed up in here so yeah i haven't really built i also built a nice uh a graph to graph my to graph a bunch of things so i had some data points so i created a simple graph in unity and did that so like that and uh so yeah thanks again and now for the super chat was i doing that is not working uh yeah so this is indeed working so it is going to that to that and i'm pretty sure the only reason why it's pink is just because i did not assign a mesh so if i assign a a machine material yep it does work all right awesome so so actually this might be super simple for drawing a mesh i'm trying to think trying to think so i can create a hexagon and let me do a return here because i don't want those logs to keep popping up so i've got a hexagon point center let's actually define it up here so up here does the order matter in the vertices array uh yes it matters for depth i think yeah i'm pretty sure it matters for depth pretty much vertices lower on the on the array are going to be in front of the ones or i'm not sure there was something to it but yeah i'm not sure is it depth no actually i don't think it stops because obviously it does work if the camera rotates or maybe it was depth but only on 2d yeah i think that was it i think maybe that was it when making these characters i have to make sure that the quad for the head is drawn after the quad for the body and the quad for that hand has to be drawn first i think that was it i think that's why so i think in 2d the order on the vertices array does matter but in 3d maybe not i don't know i don't know that's a good question but over here on triangles it doesn't matter if you put it counterclockwise and it's pretty much going to look the other way so that's kind of tricky how many hours a day do you spend programming well that really depends on the days i i spend a lot of time just researching things for new videos i spend a lot of time just writing videos recording editing so yeah programming i don't know maybe two hours a day it really depends on kind of things that i'm doing when i was preparing the course yeah that was pretty much just programming when i was making the games pretty much just programming but yeah nowadays with making video tutorials that involves quite a lot more than just programming so yeah i'm getting thrown for using ap characters like spiderman in your videos no i mean i only use it in very very unlimited ways so for example the spiderman video that was quite a long time ago that was pretty fun making that one when i made this one shoot webs this was still when i was making tutorials in multiple parts yeah that was a fun character but yeah the character i mean it was drawn by me so it's obviously it's obviously spiderman but i drew the sprite in order to make it work so yeah it's not big enough for the automated uh content from disney or whatever to find out and my channel is way too small for anyone to manually care so so that's pretty much it why well i never really got any issues that's pretty much it uh what was i doing right so i got the hexagon so this is pretty much just making triangles right yeah so if i put let's let's build on the vertices so vertex one is going to be the hexagon.center point then for this one yeah let's put all of those so center point let's go the upper right corner let me just copy all these considered free advertising yeah maybe i mean if i got millions of views then maybe somebody would be upset but yeah at this point yeah just pretty much advertising unit testing in gamedev is an important part i mean that depends on how you work for me i really value the concept of testing but in terms of being an indie game developer you really have to be insanely fast you've got to be able to produce a game extremely quickly and for that if you are a solo game developer then then testing just adds more work without too much benefit if you're part of the team and making something really complex on a massive scale then definitely but something on the scale of the games that i make small indie games for that i don't think the math works out for for the time that it takes to make testing but just because i don't specifically do testing i absolutely do sort of test driven development i mean not driven by testing but every code that i write i try to make sure that the code would be testable so i don't write unit tests but i do make sure that the code that i write would be possible to use united so that's my insert nut all right another super chat that's nice thank you how would you make enemies backstab the player i'm not sure what you mean by that are you referring to the backstab video i mean the logic for that one would be the same so you would test the vector from the from the enemy's point of view to the player's point of view so if the enemy is behind the player then you would trigger the backstab attack although probably with the enemies you would make it a bit more more specific so they would have to be right behind otherwise it would be very tricky so yeah that's pretty much what you do pretty much the exact same logic as here on this video pretty much the exact same logic but just apply to the enemy ai so then how do you move the enemy and all of that that is pretty much well that really depends on what kind of ai you're using what kind of state machine what kind of system yeah but the logic for testing the backstab specifically yeah it's pretty much exactly the same thing so you just do a simple dot product to test if a point is underneath is behind a certain point okay so let's do a triangle let's try doing one on the upper right so yeah for this one let's actually make this yet it's not going to match but okay let's do seven points and four triangles let's switch is three and i already forgot it's gotta be counter clockwise or clockwise i think it's clockwise so let's start from the center point let's go to the upper corner so that is the next two okay great then let's go to the upper right corner which is the next one all right so just like this it should work i want to turn on let's keep it up that's awesome i'm glad you like the videos i mean the only reason why the channel exists is because all of you watch the videos so yeah thank you all for being here i'm glad you find the videos useful and helpful okay did this work let me create a point just to verify that it is positioned correctly on zero zero zero and for this point if i move it in there i'm 1.5.25 okay that is correct and there on 0.5 all right okay awesome so that did work i love your work i may have moved away from unity but your concepts certainly carry over yeah there's a lot of uh game development is very general for example i'm sure all of you are already aware but just in case you're not definitely let me open it ah it was broken definitely go and watch the game makers still kid thanks again for the super chat real nice thank you the game maker song kit so pretty much really awesome videos on game design and none of that is related to any specific engine so yeah a lot of things about game development are very global so yeah you can definitely even if you're not using unity you can certainly learn a bunch of things from my channel or if you're using unity you can learn from an unreal channel yeah a lot of things about games game development they're pretty universal yeah gmtk is definitely an awesome channel really awesome lots of awesome info okay so let me try making the second point let me make the one going from the upper right to the upper left so let's add another triangle so three four five so over here i'm going to need six triangles so for that one i'm going to start on zero and again gotta go clockwise so i gotta go there so that's the upper and left corner so that is on index three no this one is on zero this one's on three then going to one which is the upper corner or did i do it the other one right no yeah i did it correct okay like that so i gotta go into two which is the upper corner okay great i forget neck or shoulder pain when hunched over the keyboard i recommend that chair you're sitting on uh i don't know this chair is pretty basic but i've bought it like i don't know seven years ago so i don't even exactly know make or model or rather i don't think this company still exists so i don't know if i would recommend this chair specific i mean it's not bad it's pretty standard just nothing special and then yeah i don't really get neck or shoulder pain just because i make it an effort to go out as much as possible so i don't really sit here for eight hours a day i've got my dog so i take them outside three times a day so that lets me get up and move i drink a lot of water so getting up drinking a lot of water that also makes a nice break i go to the gym so again also a nice break i go for a walk so again nice break so yeah if you got problems with neck and shoulder pain i highly recommend you simply spend less time in front of the computer and less time sitting because yeah that is definitely not a very healthy thing yeah that would be my best advice because yeah focusing on a chair that can solve that i don't think that would actually work although yeah a good chair is definitely yeah a standing table can also be good if you're standing i mean the basic the best thing about posture that i've heard is the the best posture is your next posture meaning constantly switch around your posture that's pretty much the thing how do you do that with the pen these are pen tricks so if i search for pen tricks if you search back when i learned there was no youtube but yeah nowadays you've got lots of pen spinning pen tricks pen tricks and lots of lots of interesting awesome stuff i only know the basics but yeah pretty cool stuff all right anyway so yeah i did make that one so yeah the logic is indeed working so let's make all the other triangles so i've got that one so that's six seven and eight and for this one i want that one so in order to go i've got to go into the lower left corner so that is on index four then the upper and left corner that is on index three and then go into the center point so that is on two all right yeah because i started on the other one let's let's keep it the same so start on zero then go on the lower left so that is on four then going to three okay so for the next one i gotta go down so that's 9 10 and 11. so starting on zero go down that's the lower corner that's on six then to the lower left that's on four okay and now let's see the other one hey cpu hey how's it going let's see all right so let's get into 12 13 and 14. so start on zero uh okay i already forgot this one what is the six the six is the lower corner in the lower left all right so i want to go down into the same six but then i want to go into the lower right corner so that is on five okay and i think there's only one left so that going into five and from five then again going to the upper right corner that is on one that is on 14 15 16 17. so there are 18 triangles okay let's see if i put all that correct all right thanks again oh boy it's already almost seven so just a bit more my voice already starting to go and apparently i messed something up okay what did i mess up um was it the last one oh i went backwards and this is always the tricky part uh this is always the tricky thing when making meshes you got to make them clockwise if you want them to face upwards if you make them counterclockwise they face downwards so that is why oh right because i kept going in this same direction instead of the other direction so that is why it broke so if i just swap this so five and six and one and five if i swap this now it should work okay and yep there you go look at that a nice drawn hexagon drawn using code like that it looks really nice so a nice pointy hexagon and it is on zero zero so now the other logic if i run that it should work the same even though the other visual isn't working kind of like coding is nice to turn on a hex rhythm does he that's nice i've seen that website a bunch of times a bunch of really good uh nice tutorial so yeah i don't know how i missed that okay so yeah it does work and the logic for testing if it's inside the hexagon still works let me just make a proper thing for this so let's make one just call it uh i don't know gray just take away the emission make it a simple gray just to put it on this one so it's not the boring pink so like this if i go and there you go so i'm inside and inside and inside so outside the hexagon and inside outside inside outside inside all right boy that's great portugal is android more popular than iphone i actually don't know these statistics uh i'm trying to think about the people that i know i think it's mainly android at least from the people that i do know i know about two or three people with iphones then about seven or eight with androids so yeah i guess over here android is more popular but yeah that's just very much anecdotal so yeah i really don't know what the stats are as for me i've always had android always i mean iphones are pretty expensive and portugal is not a very high income country so yeah very few people can afford to spend like 700 or 800 bucks on an iphone so yeah so maybe maybe it is yeah majority is android but you see plenty yep there's a bunch of iphones but yeah i wonder if statistically the majority is android that's an interesting one know about the octagon yeah that could be interesting actually that's a good question why do why are hexagons so popular amongst game development but octagons are not actually if you search octagon game development does it or just games is going to show me just ufc games no yeah so basically there's is that the oh god what was he called there was a really awesome one within the octagon but yeah not many with with grids like this yeah so apparently there are not many games using octagons i don't know why because it is an interesting shape so yeah but i guess most of them if i search for hexagon games then all of a sudden yeah see quite a bunch more things quite a bunch more yeah yeah so i guess for some reason people like uh hexagons more than octagons you cannot film the plane with octagons you can't because you octagon octagon grid this is create gaps oh okay well i guess that's why yeah okay so great news so we found the answer yeah because with hexagons they all fit perfectly but yeah i guess with octagons you end up with these tiny gaps so you could still make a game around that but yeah that would definitely make it if you want to make it fit perfectly then yeah i guess hexagons are bestagons i guess i guess that is the answer yes all right okay so all the research on the logic that i want to try out it did indeed work testing out all this logic with the directions testing out the lines doing a vector3 dot again for me i'm not very good at math so the fact that i figured out how to make all this i'm pretty happy with that pretty happy with the result so all the math worked doing all the directions the perpendiculars the dot products testing left right and so on so yeah all that works quite nicely okay octagons are better used as structure maps where you use the gap as tunnel between rooms oh that's a good point yeah i guess you could use octagons for the for sort of the world map and then hexagons for the inner map so kind of connect multiple world maps in octagon shape and then hexagons for the inner inner room shape that could be an interesting design that would be interesting okay right so my voice is going it's almost seven all right so i think that's gonna be it because this logic did work it did work correctly what's your keyboard the very own samsung guy i have no idea what the model name is i've had this for i don't know about 15 years so yeah it still works it's a membrane keyboard which technically a lot of people don't like but yeah it's what i'm used to so works pretty well all right yeah so yeah anyways the logic that i want to do research if a point is inside or outside a hexagon and yep the logic does work perfectly so i test there and there and it does work awesomely so yeah pretty great okay right so i think that's gonna be it my voice is messed up wonder why most game devs learn pen spinning well i learned that before i was into game development i mean i learned it when i was like i don't know 15 years old then i saw some random video clips of some people doing pen spinning and i thought oh that is so cool so i spent a bunch of time learning yeah i mean but it is a nice thing to keep your brain focused while you're trying to think of something and keep your hands occupied so yeah it's a pretty nice of some extensions for vs extensions i guess the only one that i use uh where do you see the extensions the extensions where are they is it this yeah there you go this one vs4 that's pretty much the only one that i use because it adds all these colors all these nice things then the visual commander i just got that one just for for moving up and down with the cursor so move up or down about 10 lines i think instead of going page up or page down which is massive so this one just goes up by a tiny bit so this is useful so that's pretty much the only the only two that i have there's the nice colors which i quite like makes everything super easy to read i can see okay look at this this one is a string this one is a type another type and another bunch of things so yeah pretty nice so that's so my visual studio is really pretty basic one butterfly knife tricks wow that is that's pretty hardcore i mean that does sound very cool but also very dangerous so so yeah i guess that's why i never got into that yeah good place to learn visual scripting from well i mean i've got a bunch of videos and i've got a course on it assuming that by vs you mean visual scripting not visual studio uh yeah visual scripting so i've got a whole bunch of videos on youtube and i've got my course which makes a whole bunch of games this was also a fun course to make i mean i love programming but it was fun to research how to make all of these games without writing a single line of code that's pretty fun i'm quite happy with with this game a really nice fps you've got some rockets some jumping got a nice boss fight got a nice hook shot multiple weapons and again all of it without writing a single line of code so that was pretty fun okay anyways so my voice is already already going so i think that's gonna be it this was very productive i managed to do quite a lot so figured out this logic of testing if a point is inside or outside a hexagon so now that the the research portion did work now eventually i have to write this into a video because i couldn't find any anyone teaching this specific thing how to test if a point is inside a hexagon the only things that i could find were using tons of math equations which for me really does not work so hopefully if you're also like me and you're not extremely advanced in math hopefully you should be able to follow my video on the subject so that should hopefully be useful to at least some people so that should be like that okay right my voice is really going so that's going to be it all right so yeah thank you all so much for being here this was really nice and the live streams have been going well so yeah i'm definitely planning to do i don't know at least one per week that should be should hopefully be doable so a bit of a nice interaction with all of you and answer all your questions and do whatever so that should be fun so hopefully a few more in the future coming so anyways all right so once again thank you all so much for being here let me just reenable the background everything looks good all right so that's gonna be it for me all right so thank you all so much thank you and see you next time um um do so so do you