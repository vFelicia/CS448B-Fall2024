hello and welcome i'm your code monkey in this video we're going to learn how we can limit how much a sin machine camera can see by adding the confiner module this lets us very easily make a shape with our view area to make sure that our camera never goes outside of it this works for any game like a topdown game or a platformer or a management game by the way i also cover this in my complete builder defender course in there i use syn machine to move the camera and then i implement this in order to make sure that the camera is always inside the world check the link in the description if you want to see this being used in a complete game as part of a stepbystep course so over here i have my simple demo scene it's a simple topdown game and i have my simple character so i can move left right up down and if i go towards the edges yep there you go there's the issue i already have some invisible walls to stop the player from leaving the play area but the camera is still unconstricted so we can see that we should not be able to see the void outside of the play area so let's solve this issue so over here is my scene view and i've got my main camera which as you can see is using a synth machine brain so it's being controlled by this virtual camera right in here now i cover the basics for cinemachine in another video so go check that out if you're not familiar with this tool it essentially simplifies everything to do with cameras so i've got my virtual camera and over here it's using this basic setup all it's really doing is just set up to follow my simple character so that's it nothing special and then down here we see a whole bunch of extensions and we can click to add some of them and in this case let's add a sin machine confiner so like the name implies this one will confine the camera to a certain bonding shape now here as you can see it requires a bonding shape and the way that we define that is by making an empty game object and then in here let's add a polygon collider 2d so as soon as you do it see that it creates this object so right away we've got this shape and all we need to do is really just set the points where we want them we can click over here in order to edit the collather as soon as we do now we can easily modify these so start dragging them out just like that and of course this is the default shape which might have too many points so in this case we really just want a rectangle so we don't need one of these points and one way to destroy these points is to hold down ctrl and then click anywhere on the line so i want to destroy this point so let's click on this line there you go it's gone and if you want to add more of them then you really just click on anywhere okay so just drag these out to the play area by the way if you find the video helpful please hit the like button it's a tiny thing but really does help thanks okay so here i have my bounding box this is a physics object so let's just go up here on the polygon collider and make sure we tick is trigger to make sure that this is not a solid object and now depending on how you set up the rest of your game you might be thinking one thing which is won't this actually break everything that has to do with physics and the answer is yes if we leave it like this then it won't break pretty much any raycast that you try to do so you can solve that by going up here on the layer and you can use the default ignore raycast layer if you do that then it will no longer block any physics tests and if you're curious then another approach you can do is go into edit and over here go into the project settings and you can go into the physics and down here you see the layer collision matrix so you could for example put this on a different layer and then make sure that it doesn't interact with some different other layer so our bounding box is set up now let's simply select our main camera and then go down here and we just drag our reference let's just rename this to the syn machine confiner bounce and yep down there on the virtual camera we have it now sin machine works both in 2d and 3d so naturally if you had a 3d camera in a 3d game then instead of a polygon quality 2d you would use one of the other ones so for example a boxing leather and in here some light can find 3d then you got an interesting toggle which is should it confine the screen edges or not if you do take this then it won't take into account the actual size of the camera and if you don't then it will only take account the center of the camera so in this case we do not want to see the void outside of our play area so let's leave it ticked and then for damping just if you want to slow it down but in this case we do not want to see the void so let's put damping on zero okay so here we are and i move around and if i go towards the edge yep there you go i've got the physics on letters so the character cannot leave the play area and now the camera no longer leaves the player either so i can go anywhere i want and i no longer see the empty void and here we can experiment with zooming in and out so if i go towards the corner and if i start zooming out yep there you go i cannot see the void right there on the right it zooms out but it pushes the camera to the left whereas if you disable the confined screen edges then now it only takes into account the very center of the camera so with this it looks perfect and everything works exactly as intended alright so there it is super easy to add if you found this video helpful consider liking and subscribing this video is made possible thanks to these awesome supporters go to patreon.com unitycodemonkey to get some perks and help keep the videos free for everyone post any questions have in the comments and i'll see you next time