this video is sponsored by dashlane in this video we're going to make a simple battle system like the one I used in the topdown shooter game I made recently we're going to have a trigger to start the battle spawn the enemies in waves and when all of them are dead the battle will be over let's begin hello and welcome I'm your code monkey and this channel is all about helping you learn how to make your own games with NF tutorials made by a professional indie game developer so if you find the video helpful consider subscribing okay so here's what we want to make over here is my player character and I can move around and in here we can see a nice very inviting door being open and in there we have a nice key that we want to grab so it seems empty but as soon as we approach if there you go the door comes behind us and a bunch of enemies start being spawned on multiple ways so they start being strong they start attacking me and I'm closed inside of this battle arena so here they are one less enemy and I shoot him and there go the battle is over all the enemies are dead and the exit door is now open so now I can go through the door I can open this door using the key and now I can go touch a trophy and there you go I've won this nice mini game so here we have a nice battle system which is exactly what I use in the topdown shooter game I made recently so go check out that video and play that game to see of this in action the system is built in a very simple way and can easily be adapted and expand upon a bunch of the things that you see in here were made in previous videos so go to the page to play that game which contains links to on with these elements and since we're talking about a battle system you should also think about your personal online security with this video sponsor dashlane is your allinone internet shortcut to help you improve your productivity and security while using the web it's available on all your devices it saves on your passwords credit card and personal information safely in one place and makes the internet a oneclick autofill experience as I'm sure you've heard it's extremely important to use strong unique passwords on every account you create the biggest mistake people do is use a single password on every single service they sign up for doing that means that if one account is compromised and all their accounts are compromised so the solution is to use a unique password for each service but it can be quite challenging to remember all those passwords get the free dash line app on your smart phone tablet or computer and you'll be able to generate super strong unique passwords for each service you sign up for whilst only having to remember a single master password your master password is never transmitted or stored anywhere all your information is stored using dash patented zero knowledge security architecture which features the strongest encryption available and is recognised as a safest way to store personal data so even if something were to happen to dashing servers your info would still be secure it is also more than just a password manager one feature that I love is secure notes and documents you can serve whatever sensitive or very important information you have and to always be available everywhere through the app so for example you can make a note with your banking info or social security number and keep it with you at all times on your phone or tablet or computer once again everything is secured with bestinclass encryption without the master password no one can decrypt your info not even Lee download Aisling for free on your first device by clicking the link in the description and automatically get a 30day free trial of premium by downloading the free app you'll be supporting channel in getting an awesome program to help you manage your online info thank you to dashlane and also thank you to these awesome supporters for making this video possible all right so here's our battle system this is our goal let's get to it okay here we are in our CERN scene I just have my player character I'm looking around and I can shoot I've covered the weapon aim in a previous video so check that out and I'm also using a nice particle system for the ball shell so check them out as well okay let's make our battle system so here in the editor let's begin by making a new C sharp script and call this the battle system let's make a game object to run our script so call it battle system and drag the script on to it okay now in here this is going to be a very simple script so let's first make a function to start our battle so let's make a front void call it start bow and in here let's just do a debug log and call start bow and now let's make a start just to test things out and on started we're going to start our about okay there it is very simple let's test any of there's our console showing start battle alright so far so good now we want to spawn enemies in our battle system so over here I have a bunch of prefabs for the various enemies that I made for the topdown shooter game so for example let's grab the archer enemy and place it somewhere over here so right there now here the enemies have this enemy spawn script so inside the enemy spawn script we have a simple spawn function so by default the enemy starts off hidden and when this function is called it won't actually be spawned so if I just run the game like this and yet there you go there's no enemy currently spawned so we need to instantiate our prefab and then combat function in order to actually spawn our enemy so we're here on the battle system let's add a reference field for our enemy and on start' battle we're going to go into the transform get the components of type enemy spawn then we call these font function okay just like that now let's track the reference in the editor so this one put it in there okay what's this and if there it is here we are any up there's the enemy he spawned immediately and became spawn all right great now we don't want the battle to start immediately but rather only when the player reaches a certain position so the way we're going to do that is using a Collider trigger so back in the editor let's make an empty game object conflict our battle trigger and inside we're going to add a box Collider 2d component and we make sure that we set is trigger to true and now make it big enough right here in the middle okay just like that so when the player enters into this area then the battle will actually begin again remember to set this trigger to true so now let's make a script to handle these collisions so in here let's make a new csharp script call this our collider trigger and drag the script onto our game object ok and now in here we just do the trigger functions so we simply do the ontriggerenter 2d so this function gets called whenever another Collider enters inside the area of this trigger Collider so when that happens let's see if it's the player that entered so we do a gift component on the collider that entered inside of this trigger and you simply test if it is not known then we have the player inside the trigger area so it's in here that we actually want to start our bow however we want to make sure that this class is nice and simple and keep it clean so let's make sure that it's separated from the battle system so the way we keep them separate but still now when this happens is by using an event so in here we can make a new event let's call this on player in turn trigger and now we have this event and we simply fire it in here so we do invoke press in this and even our it's empty all right there it is so again this class does not have any reference to the balance system at all now before we see how we're going to connect it let's simply add a debug table lets you see if this fires ok here we are and we have our start battle since it's starting right on start and if we go in if there you go we have the player inside the trigger right great ok so now that we have the trigger working let's attach the event on our battle system so here we had another field of type collider trigger and then here on start we subscribe to the on player enter trigger event and when that happens then we start our bell alright so let's see if the enemy stays hidden and only gets spawned whenever the player enters this area ok here we are and if we go in yup there you go there is no enemy spawn so the battle has not started and as soon as I go in if there you go we have our battle starting the enemy get spawned and there he goes ok so this is working but we also have one issue now the issue is that currently I'm outside of the trigger and now if I go back in there yo the spawn function gets called again so every time I enter it gets in obviously we only want the battle to start once so let's sort that now the way that we make sure that the battle only starts once is by making a very simple state machine so we're here let's define a noon for all of our possible States so our states are idle so before the battle has been activated and then we have active whilst the battle is active so then we have a field to store our current state and by default we start off at idle and then when the player enters the trigger we test if the states equals state title if so then we do start the battle and over here we set the state equals state active all right so that should have fixed the problem of the battle starting multiple times let's see ok here we are and as I move up there you go the battle starts and I get away from the trigger and back inside any of the battle no longer starts more than once and if we check the thing there you go as you can see the player is going inside multiple times but the battle only started once all right awesome now here since we're using events another way that we can make sure this gets called only once is to unsubscribed after the event is triggered so that way we're not wasting CPU cycles by having this function be called more than is absolutely necessary all right so we have our battle starting when the player enters the trigger now in here we're currently only spawning one enemy now let's spawn a bunch more so if here instead of just having our enemy transform let's have an array of enemy spawns so instead of a single one we have an array of enemy spawns and making it by enemy spawns won't save us the yet component call so when we start the battle we simply cycle through the array it only do is trigger all of the enemy spawns that spawn all right so this should be working for spawning multiple enemies let's see the editor so here we are and there's our battle system script as you can see we have no right now here let's place a bunch more enemies you know here's a quick unity tip we can use the nice inspector and lock button right there so we click now the inspector is locked so now I can go over here and select all four of my enemies and drag them directly in there you go it fills up the array automatically now just position them all right so here's all the enemy set up inside of the enemy spawn alright so let's see that okay here we are everything is empty there's no enemies nothing and as soon as I go inside there we go the battle starts and all of them get spawned instantly and they're all attacking me and yep there you go just like that all right great so essentially in here we built what we could call a enemy spawn wave so we have a bunch of enemies getting spawned right at once now we can expand upon our battle system in order to make multiple waves separated by a certain timer so to handle the concept of waves instead of having multiple arrays of race let's simply create a specific object so in here we create a nice class let's call this the and now inside of here is when we're going to have our enemy spawn array and up here instead of having an array of enemy spawns in here we just have a weight so on start Venom we simply go into the wave and we call spawn enemies so let's make this function which won't do exactly this all right there it is very simple but we're now using a nice nested class now let's go into the editor in order to set up this wave and over here in the editor after the code compounds as you can see we do not have our wave visible now the reason for that is because custom objects do not show up in the inspector by default in order to make them show up we need to go in here and we need to add the attribute system dot serializable and by doing that yep there you go over here in the editor we can now see our wave so our way which contains the enemies phone ring so let's use the same lock inspector trick in order to drag all these references like that ok so it says to make sure that it's working exactly the same ok here we are let's go up and if there you go all of them get spawned immediately as intended so all of the logic is still working exactly the same as before ok so here we now have an object to represent a single enemy spawn wave and obviously you can guess where we're going with this so in here instead of having a single wave let's have an array of waves so we have the wave right so we're going to have multiple ways that we can spawn but we don't want them to spawn all at once since that would really just be one wave so let's add another field in here we're going to have a field for a simple timer so this is how much time since the battle has started will this wave actually spawn and then instead of exposing the spawn enemies directly let's expose a update function on update we simply reduce the countdown time and then we test if the timer is under zero then let's actually spawn enemies and again in order to make sure that our code is nice and clean we're going to make this one a try so outside and we need to do is call this function however in here you can probably already yes that there's an issue in here and the issue is that essentially we're going to on enemies every single frame after the timer reaches under zero so here we're only going to run this logic if the timer is bigger than zero so if the timer is bigger than zero we're going to count down after we count down we check if it's under or equal to zero and if so then we spawn off the enemies inside of this way all right so this is our logic for a single wave and now here we have this our panel okay now let's also add a update and inside this update we're simply going to cycle through all the waves and all we got to do is cone wave that update and that's it however we're also using a state machine so we do not want this to be calmed whenever the battle system is idle so we simply do a switch on the current state and we already run this once the paddle is active all right so here is all of our logic in order to support multiple waves and each of them separated by a different timer and then here we should actually include the zero as well in case we want set timer to zero to start right as soon as the battle starts so now we can go into the editor in order to fill up our wave array and test things out all right so here we have everything set up so we have three different waves that we are currently spawning so element 0 1 & 2 okay each of them has an enemy spawn array and the timers so on the first wave we're going to spawn right on the 0 second so as soon as the battle starts it won't spawn this and turn spawn 3 archers then after 2 seconds it won't spawn the second wave which won't spawn 3 Chargers and after 5 seconds it won't spawn the last wave with 3 shooters okay let's test okay here we are and yep there's nothing happening you know battle is active and since I go in give their yo the archers get spawn there you go 3 of them after a while 3 charges get spawn and after a while yep three shooters get spawn so just like this we already have way too many enemies but yep our wave logic is working correctly alright so just like this we have multiple waves spawning multiple enemies at different times and everything looks great awesome all right now all that's left is to hem on the end of the battle so to hell on the end there are many ways we can do that let's go with the simplest one so we're going to check if all of the enemies that were spawn have already been killed so if every single wave has already spawned and all the enemies in each of those waves are dead then the battle is over so here let's make a public bone call it is wave over and now the wave will be over if the enemies have been spawned so we check if the timer is under 0 that means the wave has been spawned and if it hasn't been spawned then we simply return false since the enemies have not spawned yet and if they have been spawned then we psych on through our enemy spawns and in that script we can ask if the enemy spawn dot is alive so if the enemies don't live then the wave has not been finished so we return false and if we get all the way down here that means that none of them are alive so we return true ok so this is the logic for testing if the wave is over so first we check if it's spawn if it didn't then we simply return phones if the wave has spawned then we go through every single enemy if at least one of them is still alive then we return false if none of them is alive then we return true and the wave is indeed over so then outside here in our battle script let's make a function test if the battle is over and we do that is we just call this function on every single way so we cycle through all the waves all right so here we have a function to ask if one of the waves are over so we use the is wave over function that we built down here if it is not over return false if we go through all of them then we return true and in here we test if the battle is over we only test if the battle is still active and if so and all the battles are over then the battle is over so let's add another state for when the battle is over when it is over we modify the state and let's also do a debug log saying battle over all right so now we need to do is call this function all the way in here all right this should be working let's test all right they're days I've come Alton and yep over here we can see start battle and then the battle is over all right right so we are correctly identifying when the battle has ended now here the way we set things up we are testing if the battle is over on every single frame now that's free wasteful since most frames nothing will change so a better case would be to test this only when the enemy spawn actually dies so you could have an event on the enemy spawn to test when it dies and if so then we update a simple point in here to test if the wave is over so that's one way that we could greatly improve performance in here but just for testing purposes this way that we did works nice so just like this we have pretty much our entire very simple final system now we can apply this with a bunch of doors in a bunch of thing in order to make everything look nice alright so here I've had a bunch of things there's a key right in the middle of the room and the key won't open this door which allows us to reach the trophy now the key and or were made in the key door system video so we'll go check that out and then we have a bunch of doors that do not require keys so much is seen like this and yep this one starts off open and there's a key in there and that door in there starts off close ok so what we want is for the battle to start when the battle starts we want to close this door and when the battle is over we want to open this door ok so let's make a testing script to connect all of that together so you create an empty game object let's just call it testing and let's create a testing script ok now in this script we can use events to keep our logic nice and clean and still make everything nicely connected so here let's add fields for both of our doors ok we have the entry door in the exit door and now let's also have a field for our battle system ok there it is now in the editor let's drag those references so here drag the entry door right there drag the exit door in there and now the battle system up here ok so back in here we have all of our references and now on our start we're going to handle our logic so we want to close this one when the battle starts and open this one when the battle ends so to do that let's go into the battle system and in here we're going to add some events an event on Battlestar one on battle over so now we can go down here and simply far off these events so in here what I don't start we invoke and in here on the test battle over we invoke the other one alright so we have these two events and we can now go back into our testing and connect both of those all right so here we are making our connections using some nice events so when the baton starts we're going to close the entry door and set the corner to read and when the barrel ends we're going to open the exit door not this one alright open the exit door and we set the color to green so again you can see how by using events we can make sure that all of our code is nicely dekopon so the valence system in this case knows absolutely nothing about whatever doors are opening or closing all it knows is how to handle the baton system and here on testing we handle whatever connections we need between the battle system and any other behavior we want all right so let's test so here we are with the first door nicely open and the second one is closed and as soon as you go in and we trigger yep there you go the entry door is closed and the exit door is still closed now let's try to kill all of our enemies so alright all of them are out and there you go as soon as they all died we ran the logic on the battle is over which opened this door so now I can grab this key I can go up here now I open this door and there's a nice trophy and there you go the trophy zooms in and you play the nice animation awesome so here we have our complete nice battle system we made sure to write clean code so this system is easily adaptable and expandable we also made this very simple Collider trigger script that can be used in multitude of scenarios so we just place this and then we have a nice event that we can connect with any other logic we want and again the barrel system we made sure that it works with two nice events so we can connect the start and the end of the battle with whatever other things we want to happen so here it is again our nice battle system we go in everything starts on the enemies at spawn they get spawn in multiple waves they attack and after killing all of them and there you go with the battle ends the door opens I can go in I can open this door and enter it into the nice trophy you can see this used in action in the topdown shooter game I made recently so go apply that to see a practical application of this battle system thank you to dashlane and also thank you to these awesome supporters for making this video possible as always you can download the project the new tony's from unity karmic account subscribe to the channel for more ent deterrents post any question having it comes and I'll see you next time