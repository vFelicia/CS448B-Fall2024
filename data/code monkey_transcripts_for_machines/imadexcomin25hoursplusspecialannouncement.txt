hello and welcome i'm your code monkey and here's a really awesome project that i made it's a turnbased strategy action game very much inspired by the likes of xcom and so it only took me about 30 hours to build this project and i'm quite happy with the final result it's got all of the mechanics you expect there's turnbased combat and movement it has line of sight both full and half cover an overwatch mechanic and of course a hit percentage for those awesome 99 misses in this video let's check out how i made it starting from scratch until the final polished game also stick around to the end where i have a very exciting announcement to share if you prefer a more guided path with stepbystep lectures then check out my complete courses learn how to make a builder defender game using c sharp just like i make my own steam games or learn how to make games internally using visual scripting or learn all about unity with the ultimate overview course which contains over 13 lectures each covering a different tool or feature of the engine to help you make better games faster i'm always available in the courses q a section answering your questions every single day so check out all the courses with the link in the description so i started off like i usually start these projects thinking on paper and writing down some basic design this is obviously inspired by xcom so i inspected the game to see what were the crucial features and i also took some time to think about how i would structure the code for example i realized that everything in the game is really an action shooting is an action abilities are an action and even just simple movement is also an action so i thought quite a bit on what is the best way to implement that logic in the code using a nice common interface then i open a new project and just start working on it like i said it's all about action so i start off implementing a basic movement action setting up the main unit class in the interface and making a move action that implements it with that the character was just moving in a straight line also for the visuals over here i'm using the super useful cinti studios prototype pack i think this one was free during a bunch of giveaways so chances are you already have it these are pretty nice simple assets then of course since the game is grid based i once again reused my super useful grid system if you are new to the channel check out the home playlist this class and this playlist is one of the best examples of the power writing clean reusable code i originally made it over three years ago and now it just took me five minutes to implement a working grid with that then i added some grid movement so instead of having the unit move directly to the path now it goes in a grid path one great position at a time however at this point still note pathfinding so it just moves all horizontally and then home vertically up next i want to be able to move to where i clicked so i implement the simple mouse click and mouse position once again we're using a super awesome class i made in a previous video it gets me the mouse position in the world then using that i can tell the unit where to move then with the grid position object i had the field for the unit and some logic to know where that unit was so just by looking at the grid itself i can know exactly what unit is occupying what position then for the installation once again i spend quite some time thinking about design thinking about what would be the best way to implement this and i came up with a simple class to manage the current active unit and action since i know which unit is on which grid position it's actually very easy to handle selection i just need to check the grid position under the mouse and check if there's a unit on it and if so select it then just add a simple visual to know which one is selected again all while writing some nice clean code so the visual is completely separated from the system then once again some more thinking time now this time thinking about how to best implement multiple actions i realized that a lot of them would have quite a lot of things in common like what unit that action belongs to and a combat they store on action complete so with that i made a base class with all of that common logic then i started implementing multiple actions starting with a simple spin action just spinning the character in place this action obviously makes no sense in the final game but over here it's very simple and very visual so it's great to make sure that the whole system works great with any number of actions of any type and at this point the game was already starting to take shape despite the fact that it was just two hours of development so this really showcases three things one it's the power of writing clean reasonable code i first made the grid system three years ago and now it just took me five minutes to reuse it and also the mouse position i also made that video about two years ago and here i just reused the same class another thing this showcase is the power of preproduction since i dedicated quite a few days to preparing an offline for what i want to build when i actually started building it i already had a pretty nice idea of exactly what i needed to build so what systems i needed to make and how they would interact with one another and finally this showcased the power of experience really if i had tried to make this game 10 years ago when i was just starting with unity back then it would have taken me weeks or maybe a month to get to this point but thanks to all of the experience i already have i really managed to build this in just under two hours so those are three really nice takeaways from just the beginning of this project okay so everything was already looking pretty good next up was adding one very crucial thing to this game adding action points and a turn system i want to be able to spend action points doing some actions then end the turn and have the action points reset for the character visual elements i use a world space canvas ui it's super useful i made a video on that each unit has a nice overlay showing the action points after that i implemented health once again reusing my health system from the very first video on this channel very simple to add just add the visual to the character overlay and made a simple shoot action so just by clicking on another unit it deals damage super simple also at this point you could spam click and take actions at the same time as other actions so this can really cause a lot of bugs so i just added a simple turn blocker basically it blocks any actions while the current one is running very simple and fixes tons of issues after that i just added some animations just to look a bit better so just some simple moving and shooting animations then for the actions instead of debug keys i made a proper ui just some simple buttons and when selected they enable a specific action on the current selected unit and for selecting units it's still the same so while in move action if you click on top of another unit then instead of moving there it just selects that unit after that was something very important having a grid visual here i went with a super simple approach just spawning a simple prefab on every single grid position now this one is not the most performant approach but it works pretty well in this case if i wanted maximum performance then i would implement a single mesh just like it did in the heat map video or even the 2d xcom video but for this quick demo this really works more than good enough with the grid visual done i then expanded each action to return a list of all of the valid grid positions so you can no longer move an infinite amount or move just 0 units also you cannot shoot an infinite distance so it needs to be within a certain range for the action to be valid thanks to how all of the code is set up in a nice clean way it's super simple to add unique rules for each action then i added something extremely important some simple pathfinding actually reuse the exact same script that i made in the pathfinding video that video teaches you how the a star pathfinding algorithm works so check it out if you want to understand it the only downside with the exact class made in that video is that it's not really intended to be performant but again in this case since this is a turnbased shooter maximum performance isn't really a requirement related to the pathfinding was obviously making some paths either walkable or unwalkable so for that i just added a collateral for each solid object that i want to block path and i play stack and ladder in a specific layer then right when the game starts the pathfinding is created and goes through every single grid position and there's a raycast to see if there's any walker there if so the grid position becomes unworkable and if not then it's normal so some pretty simple logic and with that pathfinding was fully working up next for a bit of fun i added a ragdoll to the units when they die it's really simple it's using unity's builtin breakdown wizard which is actually one of the tools that i cover in my ultimate unity overview course it's pretty easy to use a tool and make any character turn into a ragdoll so now when the inside they fall to the ground in a nice satisfying way also at this point there was no concept of enemy or friendly so i just quickly added that just a simple bowling variable so either unit is friendly or an enemy after that i implemented some camera movement super simple for this i use send machine which makes camera handling extremely easy just made the virtual camera follow a target object then with a simple script just move that object rotated and applied some zoom for another quick visual improvement i enabled screen space ambient occlusion this one is a subtle effect but it looks pretty great it's also somewhat hidden but i made a video on how to enable it if you don't know about it then it was finally time to tackle one of the more complex tasks start working on the enemy ai first start off with the easiest part just making the enemy take a turn so it just makes sure that it's the player's turn and then when the player ends their turn the enemy takes theirs with that basic logic working then it was time to make the enemy take actions again starting simple just testing the logic to make it take an action so all it does is take a spin action while it has action points and after all the enemies spend their action points then the enemy ends their turn and goes back to the player without working then it was time to make some proper ai i spent quite some time thinking about this naturally ai is a massive topic you could spend hours weeks or even years just working on ai for this quick demo i wanted something functional but as simple as possible so the rules that i implemented were pretty simple if you can shoot a player character then shoot if not move somewhere and to test where to move assign some points depending on the number of targets in range of that new position so basically it tries to move to where it can shoot at least one player unit and then if there's something in range then just shoot them also made them prioritize weaker units so if there's a unit with half health and one with full health then it targets the weakest this is also the best tactic when actually playing xcom you want to remove as many enemy units as possible okay so with that very basic ai done then i worked on a fun task making an action camera once again pretty easy thanks to using cinemachine just made another virtual camera then through code when someone takes an action it positions the camera right behind the shooter looking at the target and when the action is done it simply disables the virtual camera and it goes back to the regular virtual camera up next it was time to work on another crucial system making the cover system for defining cover it was pretty easy every object that's already blocking pathfinding meaning every solid object for all of those i just added another script which defines if that object works as half or full cover it's really similar to how the pathfinding works just goes through every single grid position to check the cover state and simply sets that state on that grid position so populating the world with cover points is super easy for the cover animation i just went into miximo and downloaded a free crouch idling mission mixamo is an awesome website where you can download free animations that work on any project i made a video on that home process then i decided to continue working on the game during a live stream thank you all for joining me first task on stream was a simple one just make a cover icon so it's just an image it listens to the events when the unit changes great position and just updates the icon super simple then i also quickly made some high crates just took out the normal crates stretch them out change the cover script value to say these are now phone cover with that done i then decided to build another action a throw grenade action creating the action itself was pretty easy thanks to how the code is set up in a nice clean way i just need to make an action script that implements the interface and write down the throw grenade code for throwing it just spawns a visual prefab and moves it over time since the player can throw at various distances then the grenade movement couldn't be a static animation it had to be driven by code for the horizontal movement i made it as normal but for the vertical movement i went with the approach of using an interesting animation curve this one is a really awesome unity feature that has tons of use cases don't be fooled by the name this can be used for anything not just animations you can place the points and draw the curve exactly as you want it so in my case i use the animation curve to define the yaxis so the grenade moves and then when it lands i just spawn some nice and simple particles and finally for dealing damage i just did a physics overlap sphere to find all the objects in range find all of the unit objects and call the deal damage function then i also wanted to add a nice destruction to the cover objects for that i used the method that i covered in a previous video just using pro builder to slice the crate into multiple pieces then i just spawn the prefab when the crate is destroyed and apply some force to make all the parts go fine as you can see it's really easy to add some destruction in your games and looks really awesome that was the end of the live stream thank you all for joining me back to working on it by myself i started working on the fog of war system units should not be able to see all over the map if an enemy is behind the wall it should be invisible handling that logic was very similar to what i covered in the line of sight field of view videos i just start from each unit position then i do some math to get all of the directions around the unit and test the grid positions at various distance points if the grid position has a full cover object then the unit cannot see further it's some pretty simple logic and it works great just need to then connect it to the enemy logic just add some simple code to hide the visual so the enemy still works as normal just invisible and that's pretty much it and it works next was adding a crucial mechanic for this game type calculating a hit percentage now this one is pretty easy to add you can make it as complex as you want in the math but really i just kept it simple basically just took into account the distance to the target also whether the target was in cover or not then with that i also had an accuracy film to each unit just to add a tiny bit of randomness if you had a more persistent game like xcom with the overwhelm then you could load your soldier accuracy stats for this simple prototype i'm happy with the simple math that i have here it adds a degree of randomness to your hits but it can also be managed by the player simply playing better by getting into cover and approaching the enemies before firing up next was a fun mechanic adding an overwatch this one is also quite simple thanks to how everything is set up for making the action since all the code is set up in a nice clean way it was pretty easy to add another action then for the logic basically i just need to know what is the overwatch range and since i already have events when every unit changes with position i just listen to that and see if the enemy unit entered within the overwatch range and if so just shoot them using the same cal hit percent with a bit of a penalty so that's really it it works great and this ability was super easy to make with that all of the mechanics were pretty much done so i just quickly set up a nice level placing down walls crates enemies and so on and with that over here is the final result alright so here i am on turn one i've got my team right here and over here is a bunch of enemies there is a fog war system so i can't see any more enemies around this area then down here i can select which action i want to take and by clicking i can select which unit and by default the move action shows me everywhere that i can move and of course there's the walls with phone cover and he creates some with phone cover some with half cover so i'm going to move my unit over there and there you go he runs and now he's got full cover and i can go into the shoot action and try to hit any of these and of course they've got a certain hit percentage that one is on phone cover so the hit percentage is really low then this one is closer than this one so let's try hitting this one 78 percent chance so click there you go the nice camera zoom in the nice shot and in this case it actually missed so now this one is out of action point so let's select another one move them into a bit of cover in this case maybe throw a grenade just throw and boom deals nice aoe damage and for this one just without moving just shoot down and try to hit if there you go nice hit another one and if there you go another nice hit and as soon as the enemy dies there goes a really nice ride off okay so i'm out of action points and now it's time to let the enemy take their turn the enemy ai is currently running and all of the various enemies are taking their action that one decides to take a shot and there you go once two shots then another one wins a shot there goes one of my units and another one getting hit yep as soon as the enemy takes all their turns now it's my turn again so once again i can move i can attack i can throw some grenades and so on the game also has some nice destructibility so if i fire a grenade over there and there's a crate just fire the grenade and boom there you go it also blows up the box and the final skill is the overwatch so i just enable overwatch and my turn and there's the enemy starts to move and as soon as he gets within range he gets a nice shot alright so that's the minigame pretty awesome now here's the exciting announcement that i mentioned in the beginning the reason why i made this quick pro tap is because this is going to be my next complete course this is a pretty fun genre i think a lot of people would like to learn how to make this specific type of game something turnbased strategy with actions combat abilities movement and so on and personally i also really like it so it's perfect for my next complete stepbystep course it's going to be in the same format as my other courses so starting commonly from scratch and going step by step until the final polish game so if that's something you're interested in there's a link description where you can sign up and i'll let you know when it's out as for timing it's always very tricky to know exactly but i already have this prototype and the outline and a lot of things already done so hopefully within the next one to two months so if you're interested in that course sign up on the website thank you for watching and i'll see you next time you