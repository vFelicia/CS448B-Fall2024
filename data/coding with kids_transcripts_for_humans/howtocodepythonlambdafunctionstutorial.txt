With timestamps:

00:00 - welcome to creating with kids my name is
00:03 - andrew today we're going to teach you
00:05 - python so today we're going to learn
00:07 - about
00:07 - lambda functions so lambda function is a
00:11 - small annoyance function
00:13 - so a lambda function can have any number
00:15 - of arguments
00:16 - but can only have one expression so why
00:19 - use a lambda function instead of a usual
00:22 - function
00:23 - well you can get the the power out of
00:26 - lambda functions when you put it inside
00:28 - a regular function
00:30 - so first we're going to do a usual
00:32 - function
00:33 - so when this is how to write
00:36 - uh lambda functions so first you have
00:39 - the name
00:40 - equals lambda the word lambda then the
00:42 - parameters
00:44 - and then the expression so this is the
00:47 - regular function
00:48 - so we're going to do def which is to
00:49 - find hello then there's a parameter
00:52 - x then return hello plus x
00:55 - i want to run that function print hello
00:58 - then world so the x is the world
01:02 - then it will return hello plus x and x
01:04 - is world so print hello world so i'm
01:06 - going to save it
01:08 - to the hello world going to do it in
01:12 - the lambda way so we're going to do
01:14 - hello one
01:16 - equals lambda x so is the parameter then
01:19 - hello
01:19 - plus x so that's the expression so we're
01:22 - going to print
01:22 - hello one then world as x
01:26 - so let's see if it also prints hello
01:27 - world so they both did hello world
01:30 - next i'm going to also do a function
01:33 - just like this one
01:34 - but i can it will be like the lambda
01:37 - function
01:37 - because it will be one line so we're
01:39 - gonna do def hello to
01:42 - x return hello plus x and all we're also
01:45 - going to do print
01:46 - hello to world so i'm going to save all
01:49 - three of them do hello
01:50 - so now there's free hello world so right
01:53 - now we have three ways
01:55 - to use functions to print hello world
01:58 - yeah so i'm gonna do greeting
02:01 - so i'm gonna do the lambda function
02:03 - equals lambda
02:04 - great name so now there's two arguments
02:08 - i mean two yeah two parameters and green
02:11 - plus then space plus name so we're gonna
02:14 - do
02:14 - print grading and the great will be how
02:18 - are you doing and the
02:19 - name will be andrew so greet
02:23 - then space andrew so to do how are you
02:25 - doing space
02:26 - andrew um right
02:29 - say that how are you doing then there's
02:31 - space andrews that worked
02:33 - i'm going to do define multiply and this
02:37 - is the original function
02:38 - i'm going to return lambda
02:41 - a and a times n so now we are gonna
02:46 - we are placing a lambda function inside
02:48 - a regular function
02:50 - so now there are two parameters
02:54 - one for the regular function one for the
02:55 - length so how do we fill
02:57 - both of them out at the same time so we
03:00 - need to
03:00 - fill out the parameters in different
03:02 - times i'm going to do double
03:04 - which is a variable equals then we'll do
03:06 - the
03:07 - function multiply two so we're filling
03:09 - up n
03:10 - as two then we're going to do triple
03:13 - equals multiply
03:14 - three then we're gonna do
03:23 - 11. so now it's gonna supposed to be
03:26 - print
03:26 - 22 and 33. so did 22
03:30 - and 33 so this worked and this draws out
03:33 - the power of the lavender function
03:35 - well that was fun and that's it for
03:38 - today
03:39 - thank you for watching remember to smash
03:42 - the like button and subscribe
03:44 - bye bye

Cleaned transcript:

welcome to creating with kids my name is andrew today we're going to teach you python so today we're going to learn about lambda functions so lambda function is a small annoyance function so a lambda function can have any number of arguments but can only have one expression so why use a lambda function instead of a usual function well you can get the the power out of lambda functions when you put it inside a regular function so first we're going to do a usual function so when this is how to write uh lambda functions so first you have the name equals lambda the word lambda then the parameters and then the expression so this is the regular function so we're going to do def which is to find hello then there's a parameter x then return hello plus x i want to run that function print hello then world so the x is the world then it will return hello plus x and x is world so print hello world so i'm going to save it to the hello world going to do it in the lambda way so we're going to do hello one equals lambda x so is the parameter then hello plus x so that's the expression so we're going to print hello one then world as x so let's see if it also prints hello world so they both did hello world next i'm going to also do a function just like this one but i can it will be like the lambda function because it will be one line so we're gonna do def hello to x return hello plus x and all we're also going to do print hello to world so i'm going to save all three of them do hello so now there's free hello world so right now we have three ways to use functions to print hello world yeah so i'm gonna do greeting so i'm gonna do the lambda function equals lambda great name so now there's two arguments i mean two yeah two parameters and green plus then space plus name so we're gonna do print grading and the great will be how are you doing and the name will be andrew so greet then space andrew so to do how are you doing space andrew um right say that how are you doing then there's space andrews that worked i'm going to do define multiply and this is the original function i'm going to return lambda a and a times n so now we are gonna we are placing a lambda function inside a regular function so now there are two parameters one for the regular function one for the length so how do we fill both of them out at the same time so we need to fill out the parameters in different times i'm going to do double which is a variable equals then we'll do the function multiply two so we're filling up n as two then we're going to do triple equals multiply three then we're gonna do 11. so now it's gonna supposed to be print 22 and 33. so did 22 and 33 so this worked and this draws out the power of the lavender function well that was fun and that's it for today thank you for watching remember to smash the like button and subscribe bye bye
