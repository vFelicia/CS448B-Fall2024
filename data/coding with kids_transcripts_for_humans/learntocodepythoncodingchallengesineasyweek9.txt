With timestamps:

00:00 - welcome to coding with kids my name is
00:03 - Kalia my name is Andrew today we're in
00:05 - edible So today we're gonna do three
00:07 - easy coding challenges in edit so edible
00:10 - is a coding platform where there are
00:12 - lots of easy coding problems and which
00:15 - you can solve using different coding
00:17 - languages
00:18 - so our first problem is called find the
00:21 - total number of digits the given number
00:23 - has
00:24 - our instructions are create a function
00:26 - that takes a number as an argument and
00:29 - Returns the amount of digits it has so
00:31 - for example here it will give us a
00:33 - random number for example 56 we need to
00:37 - return how many digits there are so 56
00:40 - is from five and a six so we're going to
00:43 - turn two for
00:45 - 123 there are three digits so we're
00:48 - going to turn three
00:50 - okay so first we have a function called
00:52 - find digit amount with a variable which
00:55 - is the number called num so first we're
00:58 - gonna do
01:00 - string equals string num so string is a
01:04 - variable so we're going to use the
01:06 - string function to turn the number we're
01:08 - given into a string so we can use the
01:11 - line length function to find the length
01:14 - so next we're going to do we're going to
01:16 - create another variable called length
01:18 - and we're going to use the Len function
01:20 - of string
01:21 - so we're gonna the length function will
01:25 - turn
01:25 - well um
01:28 - figure out the length of whatever you
01:31 - put inside for example the string and
01:34 - then it will put the number like the
01:37 - number of digits or letters inside the
01:40 - variable length
01:41 - so we're gonna do string not num because
01:44 - the length function only works on
01:46 - strings
01:47 - so then we're going to do return length
01:49 - to return the length of digits in the
01:52 - number so we do test cases for example
01:54 - here there's five five five one no five
01:59 - five five five one there are five digits
02:01 - so we're going to turn five and there's
02:03 - one there's nine six four five six four
02:07 - three one so there's eight digits so
02:09 - we're gonna turn eight so now we pass
02:12 - all their tests so our next problem is
02:14 - called sort numbers and ascending order
02:16 - create a function that takes a list of
02:19 - numbers and returns a new list sorted in
02:21 - ascended ascending order which is
02:24 - smallest to biggest
02:25 - sort numbers list in ascending order if
02:29 - the function's argument is none or it
02:31 - gives you an empty list return an empty
02:33 - list return a new array of sorted
02:35 - numbers so here's an example
02:38 - if they give us 1 2 10 50 and 5 which it
02:41 - so is the bunch of numbers in list we
02:44 - need to return the list back with the
02:47 - numbers in order from Smalls to greatest
02:49 - so here it'll be one two five ten and
02:52 - fifty so first we have a function called
02:55 - sort nums ascending with a list with
02:58 - with numbers in it called list
03:00 - so first we're going to do if list
03:03 - equals equals empty bracket or empty
03:06 - empty list return the empty list back
03:10 - so we're going to we're going to use two
03:12 - equal signs because we don't want to
03:14 - assign something to make a bug
03:17 - so then if the list does have numbers in
03:19 - it we're going to do else list.sort so
03:22 - the sort function will
03:25 - um make sort the numbers from smallest
03:27 - to greatest
03:29 - so then we're going to return the sorted
03:31 - the new sorted list I'm going to check
03:33 - it and now see the test cases for
03:35 - example there can also be negative
03:37 - numbers here for example negative 21
03:40 - negative 9 and negative 96. so the
03:44 - smalls is negative 96 then negative 21
03:46 - and then negative 9 so we're going to
03:48 - return that list here if we get a empty
03:51 - list we return the empty list
03:54 - so back to the console all tests are
03:57 - passed onto our final problem
03:59 - find the amount of potatoes that's silly
04:02 - potatoes create a function to return the
04:05 - amount of potatoes there are in the
04:07 - street so they'll give us a string with
04:09 - a potato with at least well maybe yeah
04:14 - at least one potato in it and then we
04:17 - need there will also be other words and
04:18 - letters potato Apple so when you return
04:21 - the
04:23 - um on the number of times potato
04:26 - um was in these isn't appears in the
04:29 - strip so first we have a function called
04:31 - potatoes with the string called potato
04:34 - so first I'm going to do create a
04:36 - function called number num equals potato
04:38 - dot count and then we're going to count
04:40 - the string potato so the count function
04:43 - will return the number of times
04:46 - um whatever is in here
04:48 - that is in the variable or the list so
04:53 - we're going to put that number in the
04:54 - variable num so we're going to count for
04:56 - the string potato
04:59 - then we're basically going to return the
05:01 - num variable so your tests there is
05:04 - potato potato Cherry so they're two
05:07 - potatoes there's a pattern two there's a
05:10 - potato potato orange no potato potato
05:14 - orange there's three potatoes to return
05:16 - three console all tests are passed well
05:20 - that was fun and that's it for today
05:23 - thank you for watching Remember to smash
05:26 - the like button and subscribe bye bye

Cleaned transcript:

welcome to coding with kids my name is Kalia my name is Andrew today we're in edible So today we're gonna do three easy coding challenges in edit so edible is a coding platform where there are lots of easy coding problems and which you can solve using different coding languages so our first problem is called find the total number of digits the given number has our instructions are create a function that takes a number as an argument and Returns the amount of digits it has so for example here it will give us a random number for example 56 we need to return how many digits there are so 56 is from five and a six so we're going to turn two for 123 there are three digits so we're going to turn three okay so first we have a function called find digit amount with a variable which is the number called num so first we're gonna do string equals string num so string is a variable so we're going to use the string function to turn the number we're given into a string so we can use the line length function to find the length so next we're going to do we're going to create another variable called length and we're going to use the Len function of string so we're gonna the length function will turn well um figure out the length of whatever you put inside for example the string and then it will put the number like the number of digits or letters inside the variable length so we're gonna do string not num because the length function only works on strings so then we're going to do return length to return the length of digits in the number so we do test cases for example here there's five five five one no five five five five one there are five digits so we're going to turn five and there's one there's nine six four five six four three one so there's eight digits so we're gonna turn eight so now we pass all their tests so our next problem is called sort numbers and ascending order create a function that takes a list of numbers and returns a new list sorted in ascended ascending order which is smallest to biggest sort numbers list in ascending order if the function's argument is none or it gives you an empty list return an empty list return a new array of sorted numbers so here's an example if they give us 1 2 10 50 and 5 which it so is the bunch of numbers in list we need to return the list back with the numbers in order from Smalls to greatest so here it'll be one two five ten and fifty so first we have a function called sort nums ascending with a list with with numbers in it called list so first we're going to do if list equals equals empty bracket or empty empty list return the empty list back so we're going to we're going to use two equal signs because we don't want to assign something to make a bug so then if the list does have numbers in it we're going to do else list.sort so the sort function will um make sort the numbers from smallest to greatest so then we're going to return the sorted the new sorted list I'm going to check it and now see the test cases for example there can also be negative numbers here for example negative 21 negative 9 and negative 96. so the smalls is negative 96 then negative 21 and then negative 9 so we're going to return that list here if we get a empty list we return the empty list so back to the console all tests are passed onto our final problem find the amount of potatoes that's silly potatoes create a function to return the amount of potatoes there are in the street so they'll give us a string with a potato with at least well maybe yeah at least one potato in it and then we need there will also be other words and letters potato Apple so when you return the um on the number of times potato um was in these isn't appears in the strip so first we have a function called potatoes with the string called potato so first I'm going to do create a function called number num equals potato dot count and then we're going to count the string potato so the count function will return the number of times um whatever is in here that is in the variable or the list so we're going to put that number in the variable num so we're going to count for the string potato then we're basically going to return the num variable so your tests there is potato potato Cherry so they're two potatoes there's a pattern two there's a potato potato orange no potato potato orange there's three potatoes to return three console all tests are passed well that was fun and that's it for today thank you for watching Remember to smash the like button and subscribe bye bye
