With timestamps:

00:00 - welcome to cutting with kids my name is
00:03 - Kalia my name is Andrew day one edible
00:05 - so edibit is a coding platform where
00:08 - there are lots and lots of coding
00:11 - problems that you can solve using
00:13 - different kinds of coding languages So
00:15 - today we're going to do three easy
00:17 - coding challenges using python so our
00:20 - first problem is called pair management
00:22 - our instructions are given to arguments
00:25 - return on lists which contains these two
00:27 - arguments so basically just
00:30 - um get to numbers because that's what is
00:33 - in the test cases and then when you put
00:35 - these numbers and return it in a list
00:38 - so first we have a function called make
00:41 - pair with two variables num1 and number
00:45 - two
00:46 - so first we're going to do we're gonna
00:49 - make a list so we have to make the list
00:50 - ourselves so we're going to do list
00:52 - equals and then two square brackets as
00:55 - an empty list next we need to add the
00:58 - two numbers into the list and eventually
01:00 - return the list
01:02 - so I want to add the two list using this
01:04 - function this list helper function
01:06 - called append so append is the function
01:09 - where you can add something to a list so
01:12 - we're gonna do list dot append number
01:14 - one and list a pen thought append number
01:16 - two so now our list has both number one
01:19 - and number two in it so now all we have
01:22 - to do is return it so we're going to do
01:23 - return list now we're going to check it
01:25 - and see the test cases
01:28 - so here that it will give us two numbers
01:30 - here there's
01:32 - 4213 with 526 so we would turn it in a
01:36 - list with square brackets and the same
01:38 - problem so here in console we got all
01:41 - the tests passed there are only three
01:43 - tests so on to our next problem
01:46 - so it's called Boolean to string
01:48 - conversion create a function that takes
01:50 - a Boolean variable called flag and
01:53 - returns it as a string so all we need to
01:55 - do is turn a Boolean into a string
01:58 - so don't forget to return your result so
02:02 - here we just need to use a simple
02:04 - function so first we have a function
02:06 - called bull to string and a variable
02:08 - called flag which is a Boolean so we're
02:11 - gonna use we're gonna create a variable
02:13 - called solution which is basically
02:15 - storing the answer to return so equals
02:19 - string function and flat so string
02:22 - function function will try to return
02:24 - whatever is in the
02:28 - um and here like for example the flag
02:31 - here no try to convert whatever it is
02:34 - into a string so here we're going to
02:36 - convert the Boolean whatever is the
02:39 - Boolean in the flag variable
02:41 - into a string I'm going to store that
02:43 - string the solution variable and then
02:46 - we're basically going to return the
02:48 - solution variable
02:49 - okay so you can also do use the string
02:52 - function on integers now I'm going to
02:54 - check it and see the test cases see
02:56 - there are only two questions test cases
02:58 - even less than the other ones true and
03:02 - false it's a two uh test cases are true
03:06 - and false so basically here there's
03:08 - there are balloons booleans so there are
03:11 - blue so to make a string we need to add
03:14 - parentheses to make a string so let's go
03:18 - back to console and both tests are
03:20 - passed on to our final coding challenge
03:23 - so our final coding challenge is kind of
03:26 - fun and silly it's called broken bridge
03:29 - create a function which validates
03:32 - whether a bridge is safe to walk on it
03:34 - has no gaps in it to fall through so
03:37 - we're either going to return true if
03:39 - it's safe to walk on and false if it has
03:41 - a hole in it so here it's kind of silly
03:44 - and it's very creative because the
03:47 - number of signs are actually the bridge
03:49 - so there's a gap between between them
03:51 - it's basically the space they look like
03:54 - railroads yeah well it's just
03:57 - pretty close to a bridge so here for
04:00 - example here there are no you can't see
04:03 - any spaces so it's a complete Bridge so
04:06 - it's safe to walk and you won't fall
04:07 - into the river so whenever it is beneath
04:11 - me yes return true and then here there
04:14 - is a hole in between the two parts of
04:17 - the bridge right here okay so we're
04:20 - gonna return false so we basically have
04:22 - to check if the string with the bridge
04:25 - has a has this space in it so here
04:29 - there's only one that's a very small
04:31 - Bridge so this is true you can expect
04:33 - the bridges and connecting it to a
04:36 - surrounding okay so first we have a
04:38 - function called is safe Bridge with the
04:42 - bridge stored in a variable called s so
04:45 - first we have to check if there are any
04:47 - spaces in the bridge so we're going to
04:50 - do if then empty string which is a space
04:53 - so we add a space in it because if we do
04:55 - this it won't work so we add a string as
04:59 - in a hole so if there is a hole
05:02 - technically a hole not a but also a
05:06 - space in the bridge which is s we're
05:09 - gonna return false because it's not safe
05:11 - to walk on
05:13 - if
05:14 - so if there isn't then we're gonna
05:19 - uh isn't a hole then that we're gonna do
05:21 - else returns true because it's safe to
05:23 - walk on now let's see the test or maybe
05:25 - that train can go through
05:27 - world
05:29 - you see so railroad she thinks they're
05:32 - true okay here so there are two are
05:34 - false and two are true so here there is
05:37 - a hole there's a number sign whole
05:40 - number sign that's still a pretty short
05:42 - bridge but there's a hole in beneath uh
05:45 - in it so we're gonna turn false here
05:47 - there's also a hole between the very big
05:50 - bridge so we're in turn false so now all
05:53 - tests are passed hooray well that was
05:57 - fun and that's it for today thank you
05:59 - for watching Remember to smash the like
06:02 - button and subscribe bye bye

Cleaned transcript:

welcome to cutting with kids my name is Kalia my name is Andrew day one edible so edibit is a coding platform where there are lots and lots of coding problems that you can solve using different kinds of coding languages So today we're going to do three easy coding challenges using python so our first problem is called pair management our instructions are given to arguments return on lists which contains these two arguments so basically just um get to numbers because that's what is in the test cases and then when you put these numbers and return it in a list so first we have a function called make pair with two variables num1 and number two so first we're going to do we're gonna make a list so we have to make the list ourselves so we're going to do list equals and then two square brackets as an empty list next we need to add the two numbers into the list and eventually return the list so I want to add the two list using this function this list helper function called append so append is the function where you can add something to a list so we're gonna do list dot append number one and list a pen thought append number two so now our list has both number one and number two in it so now all we have to do is return it so we're going to do return list now we're going to check it and see the test cases so here that it will give us two numbers here there's 4213 with 526 so we would turn it in a list with square brackets and the same problem so here in console we got all the tests passed there are only three tests so on to our next problem so it's called Boolean to string conversion create a function that takes a Boolean variable called flag and returns it as a string so all we need to do is turn a Boolean into a string so don't forget to return your result so here we just need to use a simple function so first we have a function called bull to string and a variable called flag which is a Boolean so we're gonna use we're gonna create a variable called solution which is basically storing the answer to return so equals string function and flat so string function function will try to return whatever is in the um and here like for example the flag here no try to convert whatever it is into a string so here we're going to convert the Boolean whatever is the Boolean in the flag variable into a string I'm going to store that string the solution variable and then we're basically going to return the solution variable okay so you can also do use the string function on integers now I'm going to check it and see the test cases see there are only two questions test cases even less than the other ones true and false it's a two uh test cases are true and false so basically here there's there are balloons booleans so there are blue so to make a string we need to add parentheses to make a string so let's go back to console and both tests are passed on to our final coding challenge so our final coding challenge is kind of fun and silly it's called broken bridge create a function which validates whether a bridge is safe to walk on it has no gaps in it to fall through so we're either going to return true if it's safe to walk on and false if it has a hole in it so here it's kind of silly and it's very creative because the number of signs are actually the bridge so there's a gap between between them it's basically the space they look like railroads yeah well it's just pretty close to a bridge so here for example here there are no you can't see any spaces so it's a complete Bridge so it's safe to walk and you won't fall into the river so whenever it is beneath me yes return true and then here there is a hole in between the two parts of the bridge right here okay so we're gonna return false so we basically have to check if the string with the bridge has a has this space in it so here there's only one that's a very small Bridge so this is true you can expect the bridges and connecting it to a surrounding okay so first we have a function called is safe Bridge with the bridge stored in a variable called s so first we have to check if there are any spaces in the bridge so we're going to do if then empty string which is a space so we add a space in it because if we do this it won't work so we add a string as in a hole so if there is a hole technically a hole not a but also a space in the bridge which is s we're gonna return false because it's not safe to walk on if so if there isn't then we're gonna uh isn't a hole then that we're gonna do else returns true because it's safe to walk on now let's see the test or maybe that train can go through world you see so railroad she thinks they're true okay here so there are two are false and two are true so here there is a hole there's a number sign whole number sign that's still a pretty short bridge but there's a hole in beneath uh in it so we're gonna turn false here there's also a hole between the very big bridge so we're in turn false so now all tests are passed hooray well that was fun and that's it for today thank you for watching Remember to smash the like button and subscribe bye bye
