00:00 - hello and welcome i'm your code monkey
00:02 - i've been making videos on this channel
00:03 - for over four years now i've covered
00:05 - tons and tons of topics in over 500
00:07 - videos one thing that i always made sure
00:08 - to do since the very beginning is read
00:10 - through all of the comments every single
00:11 - day and answer as many questions as i
00:13 - can
00:14 - usually i reply directly to the person
00:15 - but if at least one person has a
00:17 - question then chances are there's more
00:18 - people wondering the same thing so here
00:20 - let's see some interesting questions
00:21 - that i saw that maybe you would also
00:23 - like to know the answer to if you find
00:25 - this format useful go ahead and hit the
00:26 - like button i've already answered
00:28 - probably a thousand questions so if you
00:30 - find this helpful i've got many more
00:31 - questions that i can highlight in future
00:33 - videos if you like using discord check
00:35 - out the united programming channel lots
00:37 - of like-minded game developers helping
00:39 - each other out asking and answering
00:40 - questions getting some feedback and
00:42 - sharing their progress so if you like
00:44 - discord check out the link in the
00:45 - description and let's begin with a
00:47 - question that is relatively common among
00:49 - beginners this one was posted on the
00:51 - video where i talked about what i
00:52 - managed to learn in blender in just 10
00:54 - hours although the question isn't really
00:55 - related to the video the question comes
00:57 - from here who asks what are the
00:59 - necessary things to making a mmorpg game
01:02 - now this is very much a beginner kind of
01:04 - question what i mean by that is that
01:05 - beginners tend to think in massive terms
01:08 - like how to make an entire mmorpg or
01:10 - something like how to build skyrim or
01:11 - call of duty if you try to think in
01:13 - those terms then you really won't be
01:15 - able to build anything no one can go
01:16 - from zero to mmorpg and by that i don't
01:19 - mean in terms of programming skills i
01:21 - mean that in terms of project structure
01:23 - you cannot build the game by thinking of
01:25 - the final massive complete project
01:27 - the way you build a project really any
01:29 - project whether it be small or huge the
01:31 - way you do that is by breaking it into
01:33 - its core components and then doing one
01:35 - thing at a time
01:37 - so if you want to make a game like
01:38 - skyrim first of all i would definitely
01:40 - advise you to massively cut your scope
01:41 - but still assuming you really want to
01:43 - build the game just like sarem what you
01:45 - start by doing is breaking that massive
01:46 - project into its core components so
01:48 - first of all you probably need some kind
01:50 - of player controller need to decide on
01:52 - first person or third person then you
01:54 - need to make some world where the player
01:56 - can walk on perhaps build it with some
01:58 - kind of terrain system
01:59 - then you also probably need some kind of
02:01 - combat system figure out how to build an
02:03 - enemy how to add attacks to the player
02:04 - and how to make those attacks damaging
02:06 - enemies each of those things involves
02:08 - tons of individual systems
02:10 - then perhaps figure out how to make an
02:11 - inventory how to handle picking up loot
02:13 - maybe handling equipment then interact
02:15 - with npcs create a quest system and so
02:18 - on so instead of just thinking i want to
02:20 - make skyrim start off by enlisting all
02:22 - the components and work on them one by
02:23 - one and back to this original question
02:26 - if you think making skyrim sounds way
02:27 - too easy one way to increase the
02:29 - difficulty tenfold is just make it
02:30 - multiplier so needless to say definitely
02:33 - don't do that if you're still in the
02:34 - beginner stage or even if you don't have
02:36 - a team and also on this topic let me
02:38 - just say that i'm no different it's
02:39 - pretty much guaranteed that when someone
02:41 - first gets into game development they're
02:42 - going to try building their dream game
02:44 - or something massive
02:46 - i myself did the exact same thing after
02:48 - making about four or five flash games
02:50 - meaning they were really tiny games with
02:51 - basically just one mechanic so they were
02:53 - really just prototypes after doing that
02:55 - i suddenly decided why don't i try
02:57 - making a massive mmo game all about cops
02:59 - and robbers the idea was some players
03:01 - could play as the robbers and try to do
03:03 - some heists and other players would be
03:04 - cops and try to stop the robbers
03:06 - as you might have guessed i never end up
03:08 - completing that project i worked on it
03:10 - for maybe one or two months before i
03:11 - realized that i had nowhere near the
03:13 - skills required to bring that vision to
03:15 - life so my advice to you if you tend to
03:17 - think in terms of massive projects just
03:18 - like this comment first of all lower
03:21 - your scope so cut it in half do that
03:23 - then cut it in half again and maybe by
03:25 - then you will have something that you
03:26 - can build and the second thing is learn
03:28 - how to break a game idea down into its
03:30 - core components and then work on each
03:32 - one individually instead of just looking
03:34 - at the total project as a single task
03:36 - this next question comes from my youtube
03:38 - membership video click the join button
03:40 - below if you'd like to get access to
03:41 - this video
03:42 - this question is related to my grid
03:44 - building system video that one is a
03:46 - really great system it's built upon my
03:48 - original grid system which i started
03:50 - building many years ago and kept
03:51 - improving on it
03:53 - the building system lets you define some
03:54 - buildings then place them on the grid
03:56 - kind of like a city builder to keep the
03:58 - video simple i made the buildings always
04:00 - have a rectangular shape so they have a
04:01 - certain width and length but never any
04:03 - weird shapes so for the question over
04:05 - here how about games asks how exactly
04:08 - would i go about implementing some
04:09 - l-shaped buildings so how do you add
04:11 - some buildings to this system without
04:13 - being rectangular buildings my answer to
04:15 - that is instead of just defining an end
04:17 - for the width and in for the height
04:18 - instead of that define some kind of 2d
04:20 - ball array
04:22 - also just in case you don't know about
04:23 - multi-dimensional arrays in c-sharp you
04:25 - can create a regular ray with square
04:27 - brackets just like i'm sure you know
04:28 - about but perhaps you might not know
04:30 - that by adding a comma inside you can
04:32 - define various dimensions you can have
04:34 - as many dimensions as you want so for
04:36 - this case making a 2d a two dimensional
04:38 - bone array is perfect you can define the
04:40 - array for the building shape and then
04:42 - simply set it to true on the positions
04:43 - where you want the building to occupy
04:45 - and then false on the others
04:47 - then in the building logic where you
04:48 - actually place the building on the grid
04:51 - for that instead of just checking for
04:52 - the standard width and length
04:54 - instead of that you cycle through the
04:55 - array check each individual bone
04:57 - position if it's true make sure the grid
04:59 - is empty on that position if it's well
05:01 - just skip it i also did something
05:03 - somewhat similar to this in the
05:04 - minecraft crafting video
05:06 - in there each recipe has a certain shape
05:08 - that it must conform to and i use pretty
05:10 - much the same type of logic define a 2d
05:12 - array and then for that case define what
05:14 - items must go on each position to make a
05:16 - full recipe so you could apply this to
05:18 - the grid building system to make
05:19 - buildings with all kinds of weird shapes
05:21 - or another fun system that i made which
05:23 - is similar is the inventory tetris
05:25 - system you could do the exact same thing
05:27 - in that one to make items with some
05:28 - weird shapes this next question is a
05:31 - pretty simple one all about sprites on
05:33 - the video for how to make a mini map in
05:35 - 60 seconds the way i thought that is by
05:37 - adding a simple sprite on top of all of
05:39 - your objects those are sprites used for
05:41 - simple mini-map icons which are always
05:43 - pointing up then add a second camera
05:45 - placed above looking down
05:47 - then those minimap sprites are on a
05:48 - special layer that is not visible by any
05:50 - main camera and only visible by the
05:52 - minimap camera and finally the minimap
05:55 - camera renders the view onto a texture
05:56 - which is shown in the ui so this system
05:58 - is based upon adding simple sprite icons
06:01 - to each object that you want to track in
06:02 - the minimap
06:03 - and the question comes from evan who
06:05 - asks how do you create the 2d sprite if
06:07 - you don't see a 2d sprite option now if
06:09 - you right click on the hierarchy you may
06:11 - or may not see the 2d sprite option if
06:13 - you don't then the solution is actually
06:15 - super simple you just go into the
06:16 - package manager and you install the 2d
06:18 - sprite package this adds those sprite
06:20 - options and also enables you to edit
06:22 - sprites so if you create a new project
06:24 - using an empty 3d template that does not
06:26 - have sprites by default you can easily
06:28 - solve that just by installing the
06:29 - package also alternatively if you don't
06:31 - want to do that you can just use a
06:33 - simple quad instead
06:34 - the only negative to that is that you
06:36 - also need to create new material whereas
06:37 - with a sprite you can just use the
06:39 - sprite directly this next question comes
06:41 - from my turn based strategy course it's
06:43 - from the lecture on handling the unit
06:45 - selected visuals to keep the logic and
06:47 - the ui visuals nicely separated this is
06:49 - handled through an event so the logic
06:51 - code doesn't care if there's a ui
06:53 - element it works perfectly fine without
06:55 - it if you don't know about c-sharp
06:56 - events they are super powerful at
06:58 - helping you write better more decoupled
07:00 - code
07:01 - in there i use a regular event with the
07:03 - event handler type for when the selected
07:04 - unit changes and this question comes
07:06 - from rob who asks since the events work
07:08 - with any delegate type why use the event
07:11 - handler instead of the much simpler
07:12 - action delegate and my response to that
07:15 - is that the reason is simply because
07:16 - it's the c-sharp standard events do work
07:19 - with any dungeon type so you can use it
07:21 - with action or with event handler but
07:22 - like i said event handler is the
07:24 - generally accepted c-sharp standard and
07:26 - senders can be useful in helping you
07:28 - communicate with others if you use
07:30 - common senders then you can easily pass
07:32 - your code around and other programmers
07:33 - won't be able to easily understand your
07:35 - code
07:36 - however also just in case you're working
07:38 - completely alone you can also deviate
07:39 - from the common standards and use
07:41 - whatever standards make most sense to
07:42 - you so in this case if you're working
07:44 - with others then i would encourage you
07:46 - to stick with the standard and use event
07:47 - handler but if you're working solo then
07:50 - feel free to use action if you prefer it
07:52 - since it does simplify the event quite a
07:53 - bit and sort of a second question inside
07:55 - this question which is why use ventaron
07:57 - the event keyword you can subscribe or
08:00 - unsubscribe to a regular delegate field
08:02 - however the event keyword serves to add
08:04 - some more limitations which can help you
08:06 - protect your code from yourself
08:08 - if you don't add even keyword then any
08:10 - class that can subscribe to that
08:11 - delegate they can also call the delegate
08:13 - they can set it to know or do anything
08:15 - they want whereas if you add the event
08:17 - keyword then outside classes can only
08:18 - subscribe or unsubscribe and nothing
08:20 - else so adding the event keyword
08:22 - protects your film and makes it so it is
08:24 - used exactly as intended other classes
08:26 - can sub or unsub but only the main class
08:29 - where the event is defined only that one
08:30 - can call the event or clear it again if
08:33 - you want to learn more about c-sharp
08:34 - event check out my full video on them
08:36 - and if you want to learn how to write
08:37 - better code and manage a complex project
08:39 - then check out my turn based strategy
08:41 - course alright so those are a bunch more
08:43 - of your questions and my answers to
08:44 - those
08:45 - i hope you learned something new this is
08:47 - a new format that i'm trying out if you
08:49 - like this format hit the like button and
08:50 - let me know in the comments since i've
08:52 - been answering questions like this for
08:54 - the past four years i have hundreds or
08:56 - thousands of interesting questions that
08:57 - i could include in videos like this one
08:59 - and like i said if just one person has a
09:00 - question chances are some of you might
09:02 - also be wondering the same thing so
09:03 - these answers might be useful
09:05 - so do let me know if you'd like to see
09:07 - some more like this alright hope that's
09:09 - useful check out these videos to learn
09:10 - some more thanks to these awesome
09:12 - patreon supporters for making these
09:14 - videos possible thank you for watching
09:16 - and i'll see you next time
09:20 - [Music]
09:24 - you