00:00 - in this video we're going to make a 2d
00:02 - character aim towards the mouse position
00:03 - this is a very basic video and essential
00:06 - for making a 2d top-down game let's
00:08 - begin
00:11 - [Music]
00:15 - hello and welcome I'm your code monkey
00:18 - and this channel is all about helping
00:19 - you learn how to make your own games
00:21 - with enough tutorials made by a
00:22 - professional indie game developer so if
00:24 - you find the video helpful consider
00:26 - subscribing okay so here's what we want
00:28 - to make over here I have my basic
00:30 - character moving around and you can
00:32 - already see that the weapon is aiming
00:34 - straight at the mouse position so
00:35 - wherever I move the mouse or move my
00:37 - character you can see that it's looking
00:39 - at the mouse position perfectly now when
00:41 - I click on the mouse if there you go the
00:43 - weapon shoots perfectly onto the mouse
00:45 - position so here is something that is
00:47 - pretty new and essential for any sort of
00:49 - shooting game also you can see a bunch
00:52 - of effects that make the shooting feel
00:53 - great so we have an animation screen
00:56 - shake and a shoot flash then we have the
00:58 - bullet tracer sprite this was made in a
01:00 - previous video and finally also a bullet
01:04 - shell particles which was also made in
01:05 - the mesh particle system video so go
01:08 - check those out for more in-depth look
01:10 - into these effects alright so over here
01:12 - we have our goal let's get to it okay so
01:15 - here we are in our starting scene oh I
01:17 - have is a simple character just standing
01:19 - around with some basic movement controls
01:21 - as you can see he doesn't have any arms
01:23 - or hands so let's take care of that here
01:26 - in the editor let's first build the
01:27 - players hands and weapon so here is the
01:30 - player game object now it's not visible
01:32 - because this particular animation system
01:34 - only runs when the game is running but
01:36 - this is the game object so it's filmed
01:38 - what we're going to use to rotate
01:40 - towards a target position so we make a
01:42 - new child empty game object let's call
01:45 - this our aim and then inside let's make
01:48 - a sprite and I'm going to drag over here
01:51 - the pistol sprite okay so there is the
01:55 - sprite now here as you can see the
01:58 - pistol sprite itself is drawn looking to
02:00 - the right this is important because
02:02 - pointing to the right is a zero angle in
02:04 - unity as we won't see for now let's just
02:06 - test just like this and if there is the
02:09 - player with the weapon on top okay now
02:11 - let's make our script to handle it so
02:13 - we're going to create a new C sharp
02:15 - script call this our player aim weapon
02:18 - and we drag it straight into the player
02:20 - game object okay you know here since we
02:23 - are attaching this script to the player
02:24 - the first thing we need is to grab
02:26 - reference to our aim game object
02:34 - okay we have our aim reference now let's
02:38 - make our prep boy update and in here the
02:41 - first thing we need is to grab the mouse
02:43 - position so here we can use this nice
02:49 - function from the utilities which is
02:50 - always you can grab for free from unity
02:52 - code monkey comm here is the function in
02:54 - case you want to make it yourself in
02:56 - essence it just takes the world camera
02:58 - and as a screen to run a point on the
03:00 - input dot Mouse position so with that
03:03 - here we have our vector three for our
03:04 - mouse position now here we're working on
03:09 - a 2-d game so that means that rotation
03:11 - works differently than in 3d now in 3d
03:14 - you could simply do go into the aim
03:16 - transform and come look at and here we
03:19 - transcend the mouse position and this
03:21 - would pointy transform towards that
03:23 - position but if we test this and just
03:26 - like this we cannot see our sprite
03:27 - anymore but if we pause the game we can
03:31 - go into our hierarchy select the aim
03:32 - game object and there you go it doesn't
03:34 - need have some rotation and if we put
03:36 - our scene in 3d you can see that it is
03:38 - indeed pointing right forwards so this
03:40 - is not how we want to handle rotation in
03:42 - our 2d game in 2d we want the X and y to
03:45 - always be at zero and the only thing
03:47 - we're going to modify is these that just
03:49 - like that okay so let's go back into our
03:51 - code and here we're not going to use
03:54 - transform done look at instead let's get
03:56 - the Euler angles for our lock Direction
03:58 - so first we have our target position
04:01 - which is the mouse position with that we
04:03 - can calculate the direction so a vector
04:05 - three for the aim direction which won't
04:10 - be the mouse position minus our
04:11 - transform position and since this is a
04:15 - direction let's normalize this vector
04:17 - okay so now we have our aim Direction
04:20 - this is a vector with values on the x
04:22 - and y pointing towards emails position
04:24 - now we need to convert this into a Euler
04:26 - angle so to do that we use some map
04:34 - okay so we use this function we pass in
04:37 - the Y and the X this returns the angle
04:39 - in radians then we multiply it by this
04:42 - in order to convert our radians back
04:44 - into degrees and now over here we have
04:46 - our oiler angle now we just need to
04:48 - apply this to our aim transform so we go
04:50 - into the aim transform and modify the
04:52 - Euler angles and we said he vector three
04:54 - and again here we are working in 2d so
04:57 - we pass in a zero on the X zero on the Y
04:59 - and now an angle on the EZ and just like
05:02 - that it should be working let's just add
05:04 - a debug log in order to see what the
05:06 - angle says all right let's test and here
05:10 - we are and yep you can see our pistol is
05:12 - indeed pointing perfectly towards our
05:14 - mouse position and if we look at the
05:16 - console there it is you can see our
05:18 - angle and now you can see that when I
05:20 - put mouse on the right yep there you go
05:21 - that's the angle zero and over here we
05:23 - have a 90 and so on so you can see that
05:26 - default for unity the angle zero is
05:28 - pointing to the right so that is why we
05:30 - set up our aims right to be a piston
05:32 - pointing to the right so whenever you
05:34 - draw a sprite that is meant to point in
05:35 - a certain direction always draw it
05:37 - pointing right okay so just like this we
05:39 - have our weapon aiming towards the mouse
05:41 - awesome now let's actually make it look
05:43 - a bit better instead of just being an
05:44 - empty weapon let's add some hands and
05:46 - offset it a little bit so back in the
05:48 - editor okay we have our aim game object
05:50 - this is what we're going to rotate on
05:52 - the set to point towards the mouse
05:54 - position so now the first thing we need
05:56 - is to ensure that our inner sprite our
05:58 - pistol sprite is actually correctly
06:00 - sorted so as you can see it's a bit
06:02 - higher so let's drag the sprite a bit
06:05 - like that so that it's right there on
06:07 - this axis and now let's also push it a
06:10 - bit forward and add some sprites for the
06:12 - hands
06:23 - okay so there it is offset a bit forward
06:26 - as you can see straight on the same axes
06:28 - and the pistol and we have two hands
06:30 - let's see okay so here we are and yep
06:32 - our pistol is now offset and aiming
06:34 - correctly so as you can see perfectly
06:36 - following now the hands are a bit lower
06:38 - so let's modify our actual aim transform
06:41 - so here the aim is currently on zero
06:43 - zero and let's just move it up a bit any
06:45 - of there it is now it's more at shoulder
06:46 - height so it looks much better right
06:48 - awesome so now with this working let's
06:50 - handle some basic shooting so back in
06:53 - our code let's first make a function to
06:55 - Himmel its so let's call it handle
06:58 - shooting and we can also put this into
07:02 - its own function okay so we have our two
07:09 - functions being called on our update
07:10 - first we aim then we test if we can
07:12 - shoot so in here let's do a input get
07:15 - mouse button down on the left mouse
07:17 - button
07:18 - so when we press on the on left mouse
07:20 - button when we do then let's actually
07:22 - shoot our weapon so for that let's add
07:24 - an animation so here in order to an
07:26 - admission we just add the animator
07:28 - component and then here I have some
07:31 - animations already set up so here I
07:33 - modify the game object to work with the
07:34 - animations that I prepared previously
07:35 - but as you can see everything some works
07:37 - it's only the same so we have our
07:39 - in-game object then inside we have an
07:41 - extra sprite for a nice muzzle flash as
07:43 - well as d2 hands here is the animator as
07:46 - you can see it's extremely simple we
07:48 - just have a idle and a shoot animation
07:50 - and we're going to go from idle to shoot
07:52 - whenever we find the shoot trigger so
07:54 - there it is a very basic animator so
07:57 - back in our code and let's first grab
07:58 - the animator
08:05 - okay so we have the animator that is on
08:07 - the aim transform game object and down
08:10 - here when we are testing for the mouse
08:12 - click we simply go in to the animator
08:13 - and we set the trigger so it's called
08:16 - shoot okay so that's it now we should be
08:19 - able to see the animation playing
08:20 - whenever we left click on the mouse
08:22 - button okay so here's our character is
08:24 - still pointing to the mouse position and
08:26 - when I click there you go we have a nice
08:28 - shoot animation so just like that
08:30 - nicely shooting alright awesome ok so
08:33 - here we have our basics working now
08:35 - let's set things up like I do in the
08:37 - normal aiming class that you've seen me
08:38 - use in my videos so all the extra
08:41 - effects will be separate from the aiming
08:42 - class and they're added through an event
08:44 - so back in here and let's make that
08:46 - event so first of all we need to be
08:48 - using system and then we can add a
08:52 - public event type event handler and
08:54 - let's call this on shoot you know here
08:58 - we want to pass in multiple values so
09:00 - let's make a custom event arts we're
09:05 - going to set it to passing the gun
09:07 - endpoint position as well as the shoot
09:09 - position okay so now we can make this
09:14 - event handler of type on shoot event
09:17 - arts all right that's our event now
09:21 - let's go to where we are shooting so
09:22 - right here here we're going to trigger
09:25 - our event so we do an invoke pass in the
09:28 - center the center is this and now we
09:30 - need to pass in the shoot event arts so
09:34 - for that we need to set the gun endpoint
09:36 - position so let's make that using an
09:38 - empty game object so back in our scene
09:40 - we have our aim now inside let's create
09:42 - an empty game object call this the gun
09:44 - endpoint position and now here we can
09:49 - visually place it right there so that's
09:51 - where our booth will be fired now we
09:53 - just need to know this name
09:54 - so back in here let's make another
09:56 - transform
10:02 - okay we have this and now here we can
10:05 - set that gun in point position to be
10:07 - this one dot position all right so
10:09 - that's that now we need the chute
10:10 - position and that's going to be our
10:11 - mouse position so whenever we do a
10:16 - left-click we're going to play the
10:19 - shooting animation and we're going to
10:21 - fire the event which is going to pass in
10:23 - both of these arguments so now with this
10:25 - we can easily add some effects without
10:27 - having to modify this class anymore so
10:30 - let's make a new script let's call this
10:32 - just testing and make an empty game
10:35 - object and call it also testing and drag
10:38 - the script onto it okay now here let's
10:40 - first add a field for our player so we
10:42 - have a certain wise feel for our player
10:45 - aim weapon and now I can go back into
10:50 - the editor and here we can set it so
10:53 - there's the field just write the point
10:55 - of reference onto it okay and now that
10:56 - we have this reference let's do a
10:58 - private void start and I'm start to go
11:02 - into the player aim weapon and we
11:03 - subscribe to the on shoot event so just
11:06 - like this you can already see our event
11:08 - and as you can see it contains a on
11:09 - shoot event Argus parameter so here
11:12 - let's add a bunch of effects so first of
11:14 - all let's add some very simple screen
11:15 - shake so in the utilities I have some
11:19 - very basic screen shake so we just shake
11:22 - the camera and now I also have a class
11:26 - to spawn a weapon tracer this was
11:29 - created in a previous video so go check
11:31 - it out
11:31 - so here we take a front position and a
11:33 - target position so we use exactly what
11:35 - we get from the event arc so we pass in
11:37 - the gun endpoint position and the shoot
11:39 - position and for another event just
11:45 - adding he should flash
11:46 - ok so let's test just like this ok so
11:49 - here we are and everything so pointing
11:52 - and when I shoot if there you go we have
11:54 - some very nice effects so there are here
11:56 - we have some screen shake we have our
11:58 - bullet tracer and we have a shoot flash
12:00 - all right so just like this summary
12:03 - sorry talk great now it's had some bull
12:05 - chance now in order to fire the shells
12:07 - we also need to know where they should
12:08 - come from so for that we can add
12:11 - a game object in order to locate it
12:12 - perfectly so for this let's put it right
12:15 - in there and I'll back in our script you
12:19 - just need to do the same thing we did
12:20 - for the gun end point in order to pass
12:27 - in more values whenever we fire our
12:29 - event we can simply add it in here so we
12:34 - just do this and then down here we do
12:36 - pretty much the same thing okay so you
12:40 - can see how simple it is to add more
12:41 - values whenever we fire our event so now
12:44 - we can go back into our testing class
12:45 - and in here we can use the shell
12:47 - particle system that we made in a
12:49 - previous video and here we spawn the
12:52 - shell so we go into our event and use
12:55 - the shell position and now we need
12:56 - direction so the Russian is going to be
12:59 - our aim Direction offset by 90 degrees
13:01 - so again we're going to do the same
13:03 - thing that we did on the mesh particle
13:05 - system video all right so just like that
13:13 - let's see and here we are in shoot any
13:15 - of their yeah we have our shown
13:17 - particles leaving exactly where they
13:19 - should so just like that and looks great
13:21 - again this is part of the mesh particle
13:23 - system so go watch that video to see how
13:25 - this effect works as you can see the
13:27 - particles stay there forever
13:36 - okay so here I've polished things up a
13:38 - bit so now the player is also animated
13:40 - and as you can see the pistol once it
13:42 - goes past that there you go it inverts
13:44 - so the player no longer holds the weapon
13:46 - upside down so here it is everything is
13:49 - working I can move I can shoot there you
13:51 - go some nice particles nice effects and
13:53 - everything is looking great and again
13:55 - the way we set up our things makes our
13:57 - code very nice and clean so all these
13:59 - particle effects are own completely
14:01 - decoupled from the player class so the
14:03 - player has no idea that all of these
14:05 - effects are being added on top so we
14:07 - could add or remove more effects and we
14:09 - wouldn't have to touch the player class
14:11 - at all so again here is our nice effect
14:13 - and here we have our simple aim shooting
14:16 - as always you can download the project
14:17 - files any zombies from unity code McKee
14:19 - comm subscribe to the channel for more
14:21 - unity tutorials post any questions you
14:23 - have in the comments and I'll see you
14:24 - next time
14:27 - [Music]