00:00 - this video is made possible by my game
00:02 - bomber play seven awesome games and help
00:04 - support the channel by using a mask and
00:06 - increase in the scale so doing so and
00:07 - you would have this very nice that's the
00:09 - field is one of those effects that
00:10 - always wants probably good hello and
00:17 - welcome I'm your code monkey a
00:18 - professional indie game developer and
00:20 - here I won't react and analyze a
00:21 - gameplay trailer so I will talk about
00:24 - how things work behind the scenes and
00:25 - how you could build them in your own
00:27 - games the response to the previous one
00:28 - has been really positive so I look
00:30 - forward to more like this in the future
00:31 - and let me know any specific games you'd
00:33 - like to see in this case we're looking
00:35 - at the ghosts of Tsushima gameplay trail
00:37 - alright so let's hit play
00:47 - okay so we start off with our character
00:49 - standing around and then he opens up the
00:52 - map now for the map itself it's in a
00:55 - simplified 3d form so the camera starts
00:58 - on the way back down here and as soon as
01:00 - it opens it transitions and moves
01:02 - towards the mouse position then as the
01:04 - player moves the cursor around the map
01:05 - you can see that the camera does phone
01:07 - so this is extremely easy to do when
01:10 - using cinema sheen pretty much you just
01:12 - set the camera on a fixed rotation so
01:14 - upwards pointing downwards the map is
01:17 - just a texture place on a quant and then
01:19 - you set the same machine composition to
01:21 - follow the mouse cursor so then all you
01:24 - do is the mouse cursor is an action or
01:25 - game object and you just move that
01:27 - around and sin machine will
01:28 - automatically pen the camera to face it
01:30 - then you also have several methods for
01:32 - interacting with interactable objects so
01:35 - for example one way you could do it is
01:37 - to make a sphere cast around the cursor
01:39 - position that wouldn't locate all the
01:41 - objects with colliders that are within
01:43 - that area and then you would simply test
01:44 - to see if they are interactable
01:46 - so that's one approach another approach
01:48 - if you don't have that many objects you
01:50 - could just cycle through the whole list
01:52 - and cycle through all of them and test
01:53 - all of their positions so it depends on
01:56 - your performance targets and how many
01:57 - objects you have now once there is
01:59 - something within range you can also add
02:01 - a bit of a magnet effect to nudge the
02:03 - cursor on top of the icon so you can see
02:05 - here as he moves if there you go it
02:07 - snaps into position so in there as the
02:10 - cursor approaches once it reaches right
02:13 - next in there then all of a sudden it
02:15 - starts being yep there you go it gets
02:17 - attracted and goes straight on top of
02:19 - the position so utilizing that magnet
02:21 - the fact is something that is extremely
02:23 - useful especially when dealing with
02:24 - controller when working with a mouse you
02:27 - have more precision but when working
02:29 - with a controller it helps to have these
02:31 - tiny little nudges then the object
02:33 - itself also has some information for
02:36 - example you could store this information
02:37 - on a scriptable object and you would
02:39 - simply start a boolean to see if the
02:41 - location have been discovered or not and
02:42 - if it had been then you would show the
02:44 - proper icon so the player sets a
02:46 - waypoint and as soon as it comes out
02:48 - from the map the guiding wind shows the
02:49 - direction so this is a really
02:51 - interesting mechanic it makes the game
02:53 - feel very immersive since it looks more
02:55 - natural
02:55 - having some GPS arrows like many games
02:57 - have for the visual of the one you can
03:00 - use a simple particle system constantly
03:02 - moving the particles in a specific
03:03 - direction now I'm guessing the twin
03:06 - never actually goes through walls so
03:08 - instead of pointing directly towards the
03:10 - target it must be using the path
03:11 - fighting system so for example if there
03:13 - was one here I'm guessing the wind would
03:15 - show an arrow going around the wall then
03:17 - also related to it we have the grass
03:19 - particles right down here so you can see
03:22 - that they also point in the same
03:23 - direction normally this type of
03:25 - animation is handled through a shader so
03:26 - the shader simply moves the vertices of
03:29 - the grass towards a certain position so
03:32 - for that you would probably have a
03:33 - common bond shader variable for the wind
03:35 - vector and the grass shader would read
03:36 - that vector I'm guessing that it's a
03:38 - normal vector rather than a specific
03:40 - grass town having its own a vector
03:43 - perfectly pointing along path finding I
03:44 - like to win that approach would likely
03:46 - be too expensive
03:47 - and using a column vector works perfect
03:49 - so the vector used is probably the one
03:51 - right where the player standing now over
03:53 - here the player calls for his horse
03:55 - which quickly comes on running so in
03:57 - order to achieve this there are two
03:58 - approaches he can use it all depends on
04:01 - one if the horse always exists in the
04:02 - world or not
04:03 - now if the horse does exist all the time
04:06 - then when he uses this skill it probably
04:08 - has a max range so it knows where the
04:11 - horses in the world and it knows where
04:13 - the player is and then it simply does a
04:16 - distance calculation to see if the horse
04:18 - is within range so if so then it finds
04:20 - the path toward the player now the other
04:22 - approach is if the horse does not always
04:24 - exist in the world with that approach
04:26 - you would always spawn the horse
04:27 - off-screen so the game knows that the
04:30 - player is over here and knows that the
04:31 - camera is facing over here in this
04:33 - direction so what it does is find a
04:36 - position near the player but not within
04:37 - its radius so right behind him and then
04:40 - simply spawns a horse in that random
04:41 - position so this is how many open-world
04:44 - games have non spawning of various
04:45 - objects and NPCs they get spawn near the
04:47 - player but never actually in view
04:54 - [Music]
05:02 - then over here the player picks up an
05:05 - item so this is just a case of a very
05:07 - simple sphere cast being cast around the
05:09 - player so it looks for all of the
05:11 - objects right around the player and if
05:14 - it finds something then it tests if it
05:15 - can be picked up and if so then it shows
05:18 - the key prompt to use it then the player
05:20 - hits the key and in this case grabs the
05:21 - object now usually when implementing
05:24 - something like this you want it to work
05:25 - it in interface rather than a specific
05:27 - object type so in this case the player
05:30 - is grabbing some bamboo but the exact
05:32 - system is used for all the other
05:33 - interactable
05:33 - objects so in this case the player
05:35 - probably doesn't know that it's grabbing
05:36 - a specific bamboo it just knows that
05:38 - it's interacting with an object you can
05:40 - use an interface like it did in the how
05:42 - to interact with doors video and then
05:44 - for the visual you can see that the
05:45 - object has a slight like radiant glow so
05:48 - for that it's just a simple shader in
05:50 - order to make the object nice and
05:51 - visible from very far
05:57 - then over here we see a detection radius
06:00 - so first the UI element is pointing in
06:02 - the direction of the enemy so it is
06:05 - calculating the camera position and in
06:07 - the enemy position any test direction
06:09 - towards it so this is very similar to
06:11 - what I covered in the quest pointer
06:12 - video and then for the element itself
06:15 - you can see that the detection increases
06:17 - over time so over here it starts off and
06:19 - yep it expands on both sides so the way
06:22 - that expands is simply just first of all
06:24 - making a ray Kasten or to make sure that
06:26 - the players not occluded and then it
06:28 - simply increases the float on every
06:29 - update visually you can make it increase
06:31 - on both sides by using a mask and
06:33 - increasing the scale of the white part
06:34 - behind it and then appear yep we see the
06:37 - exact same thing but with a different
06:38 - sprite to indicate an animal rather than
06:40 - a human enemy now in here the player
06:45 - arrives at its target and he's grilled
06:46 - with a nest location card so it's just a
06:49 - simple counter set to trigger there's a
06:51 - Collider somewhere in here place in the
06:53 - world and as soon as the player enters
06:55 - then it triggers the nice location guard
06:57 - again here we have another excellent
06:59 - example of good immersion design so
07:01 - rather than placing a UI element right
07:03 - on top of that position
07:04 - it simply spawned some particles which
07:06 - make sense in the world and act as a
07:08 - pointer for the player to go there on
07:09 - the rise
07:10 - interesting and odd shape trees or maybe
07:13 - even animals trying to get your
07:14 - attention then here we have another use
07:19 - of a simple canal to trigger the spirits
07:26 - so as soon as the player enters this
07:28 - area it starts playing the NPC audio
07:29 - again just a simple quieter set the
07:31 - trigger and testing for ontriggerenter
07:42 - now the player finds a fox which is
07:45 - another great immersion mechanic so
07:47 - somewhere around here there's a special
07:49 - shrine then it culminates the vector
07:51 - pointing towards the player and then
07:53 - simply chooses a random position right
07:55 - around the max distance it applies some
07:57 - randomness so it can spawn on multiple
07:59 - places so in terms is choosing the spawn
08:01 - position it's very simple then as the
08:04 - player approaches the Fox starts heading
08:06 - towards a hidden site and here note how
08:09 - the fox moves faster than the player
08:11 - then the Fox is constantly checking for
08:13 - the distance towards the player and if
08:16 - it's too far then similarly plays a
08:17 - stopping animation and stay still until
08:19 - the player approaches and finally the
08:21 - Fox directs the player towards its
08:23 - hidden site the player honors the shrine
08:33 - and shows this really nice UI element so
08:36 - again visually this is very simple to do
08:38 - pretty much the same thing as the
08:39 - detection mechanic so you would create a
08:42 - mask exactly with this shape and then
08:44 - behind it you would place a simple white
08:46 - image and on the image you can set it to
08:49 - fill and you can also modify the film
08:51 - type to be radium so as it increases it
08:53 - constantly increases alongside a circle
08:55 - so just a simple mask and a rotating
08:57 - filament looks great then it's also very
09:00 - interesting as the particles flow away
09:01 - so you can see that there's a sort of
09:03 - diagonal line running through the UI and
09:05 - where it interacts with things it
09:07 - spawned some particles so really simple
09:09 - and really cool effect now we get on to
09:12 - the combat his combat system looks
09:14 - really interesting so first to play your
09:16 - challenge is the enemy to a duel now
09:18 - visually it's won some really nice
09:19 - cinematic bars so it makes the whole
09:21 - thing feel more cinematic
09:23 - then as he approaches the enemy over
09:25 - here we see something interesting so
09:27 - there's a prompt telling the player to
09:29 - hold down a button so I'm guessing that
09:30 - the way that this works is you hold down
09:32 - this button and the player attacks as
09:35 - soon as you let go so this whole system
09:37 - is probably based upon a very simple
09:39 - timer if you let go before the enemy
09:41 - actually attacks I'm guessing that the
09:42 - enemy wins and takes his head so you
09:44 - have to let them start this animation
09:46 - and as soon as it does then starts a
09:48 - timer and if you let go of the button
09:50 - within that time or your reward with an
09:51 - instant kill so over here as soon as he
09:54 - transitions into this animation then
09:56 - over here a timer starts increasing and
09:58 - the player has enough time to let go of
10:00 - the button innocence it does just
10:02 - testing if the home timer is under the
10:04 - maximum home if so then there's a nice
10:07 - instant kill visually it also looks
10:09 - really awesome so the player plays a
10:11 - very quick animation and it spawns this
10:14 - really nice slice visual in order to
10:16 - really make it very impactful then as
10:20 - soon as he takes out the first one it
10:22 - seems to be the exact same thing for the
10:23 - second one so the player holds down a
10:24 - button and has to let go right after
10:26 - they start their animation so this whole
10:29 - system looks really really cool now this
10:32 - is a really tricky design front assault
10:33 - on the one hand you want the player to
10:35 - feel like he's a master samurai capable
10:37 - of taking down enemies in a single hit
10:39 - but you also need to balance it so it
10:41 - doesn't become overpowered so I'm
10:43 - guessing that this system is only used
10:45 - in certain very specific scenarios like
10:47 - only with the first few enemies I'm
10:49 - guessing you can't just one shot every
10:51 - single enemy in the game since that
10:52 - would be no fun so mechanically it's a
10:54 - very simple system but you combine a
10:56 - simple mechanic with excellent sound and
10:58 - visuals and you get something that looks
11:00 - really cool
11:06 - as you can see the strike must count now
11:11 - here the player goes into some serious
11:13 - combat and first of all he's under
11:15 - attack by an archer and also has the
11:17 - ability to counter so this is one of
11:19 - those very simple mechanics that always
11:21 - feels really great it's one of the main
11:23 - things that I love from my own game ever
11:25 - nights now there are two ways that you
11:27 - can implement deflection one way is you
11:29 - can make it based on a simple button
11:31 - press so as soon as the arrow is very
11:35 - near to the player then you have an
11:37 - internal button prompt and if the player
11:38 - hits a button then the fight is the
11:40 - error so similar to doing mechanic you
11:43 - have a simple time gap where you must
11:45 - hit that button if you do it and it's
11:47 - closed and the arrow gets a fight
11:48 - however here I'm not seeing any of the
11:50 - fight prompts coming up so this appears
11:52 - to be automatic as long as the players
11:53 - body again this is all about balancing
11:55 - your specific design so in this case
11:57 - they probably tested with active
11:59 - deflection and found the player was
12:00 - overwhelmed by all the attacks so they
12:02 - end up simplifying visually you can see
12:05 - that the arrow is in here and has a
12:07 - trail right behind it now in unity this
12:09 - is very simple you just use the built in
12:11 - trail renderer the eternal renderer just
12:13 - follows an object and leaves a trail
12:15 - behind it now in here the player does a
12:17 - quick dodge so once again just see
12:19 - simple timer as soon as the enemy starts
12:22 - his attack then it starts playing a
12:23 - dutch timer and if the player hits it
12:26 - within the dodge window then he gets a
12:27 - very nice special dodge so visually you
12:30 - can see a bunch of effects being added
12:31 - so visually you can see a more
12:34 - pronounced vignette effect on the
12:35 - corners then also increase the bloom
12:38 - intensity which you can see in the
12:39 - particles and it slows the game down so
12:42 - the vignette in bloom you can do that
12:43 - easily by using a volume post-processing
12:46 - and for the slowdown you can do that by
12:48 - easily modifying time that timescale
12:50 - that value works as a multiplier which
12:52 - gets affected to everything that uses
12:54 - time down to time so if the player Dodge
12:56 - is right on time if there you go the
12:58 - player is rewarded with a very nice
13:00 - instant kill now here we see a real nice
13:02 - stagger mechanic so this enemy here
13:05 - probably has an AI state that allows
13:06 - them to defend all of the players
13:08 - attacks so for the stagger there you go
13:10 - you can see a UI element increasing and
13:13 - once it gets full only chatters into a
13:14 - million pieces which looks really
13:16 - awesome and then there's also a really
13:18 - cool wave shield effect
13:20 - right on top so you can see how it's a
13:22 - wave right around here and it pretty
13:24 - much just distorts everything behind it
13:26 - so this is something that you can build
13:28 - to achieve graph any very simple texture
13:30 - so the players tigers him and then in
13:32 - here he seems to open a charger tank so
13:35 - the player homes on a button and lets go
13:37 - after a while and does massive damage in
13:38 - an arc so for the damage you could make
13:41 - it really complex and make it an actual
13:42 - proper perfect arc or more likely what
13:45 - you would do is just do a very very
13:47 - simple box cast so on the enemies within
13:50 - this area take some damage remember that
13:53 - game development is all about smoking
13:54 - bears so in this case using a simplified
13:56 - box cast would be much faster and much
13:58 - better than using something very complex
14:00 - which would have the perfect shape of an
14:02 - arc for the player the end result is
14:04 - exactly the same and it simplifies your
14:05 - development process okay so that was the
14:07 - aggressive method and now we can move on
14:09 - to the stealth approach as a general
14:11 - rule it's always great to give your
14:13 - player multiple ways of achieving the
14:14 - same objectives since everyone likes to
14:16 - play in their own unique way so right
14:18 - away he starts off with a simple noise
14:20 - object so the game knows where the
14:22 - player is looking at so it finds this
14:25 - ground position and then with that
14:26 - position and with the point position oh
14:28 - it does is simply calculate the pointer
14:31 - towards there and simply interpolates a
14:34 - very nice curve to go from the player
14:35 - towards the target so in this case for
14:37 - example you could check the distance
14:39 - between the player and the target
14:40 - position and then you would place a
14:41 - point all the way up here at let's say
14:44 - the same distance divided by two so
14:46 - doing so and you would have this very
14:47 - nice arc so the player throws it and if
14:50 - there you go it simply spawns the noise
14:52 - object so once again this is probably
14:54 - another example of a simplified system
14:56 - so the player probably doesn't actually
14:58 - fire an actual physical object that goes
15:00 - all the way along this what it does is
15:02 - it fires off the particle that phone
15:04 - will see trajectory and when the
15:06 - particle reaches its position then it
15:08 - spawns the actual noise object just
15:09 - fixed on the floor so doing it that way
15:11 - it's not looks the same except you avoid
15:13 - on expensive physics calls then for the
15:15 - noise it's pretty simple so it knows
15:17 - that the object isn't there and simply
15:19 - does a sphere cast all the way around
15:21 - the object and locates entities that can
15:23 - listen around that object so the enemy
15:25 - can listen he listens to the actual and
15:27 - listen and when this function is called
15:29 - any knows to go and inspect that
15:31 - position then here the player sneaks by
15:33 - the enemy and this is a very simple
15:36 - detection cone so the enemy is looking
15:38 - in that direction so with the player
15:40 - being behind them
15:41 - it simply tests the vector towards the
15:43 - player in this case the player is right
15:45 - behind him so at 180 degrees and let's
15:47 - say he goes from maximum of minus 45
15:49 - degrees to plus 45 so the player being
15:52 - at 180 is not inside so he's simply not
15:55 - detected and if the player manages to
15:57 - approach the enemy without being
15:58 - detected he gets rewarded with a nice
15:59 - instant kill then for this enemy here he
16:04 - takes him out to the bow so the bow
16:06 - mechanic is pretty simple first of all
16:08 - as soon as he picks up you can see the
16:10 - UI Ullman showing right in the middle of
16:12 - the screen then here note how the camera
16:14 - zooms in zooming in a camera really just
16:17 - means switching from a wider field of
16:18 - view to a narrower field of view and for
16:20 - example you can do this very easily with
16:22 - same machine so you have your normal
16:25 - player camera which has a very wide
16:27 - field of view then you have the second
16:29 - bow camera which is always following the
16:30 - player and has a much narrower field of
16:32 - view and then all you do is just
16:33 - increase the priority of the second
16:35 - camera and it smoothly interpolates all
16:37 - the values then the enemy gets hit and
16:39 - it shows a very nice simple hit murder
16:44 - now over here we have another nice and
16:47 - simple distraction noisemaker so I'm
16:49 - guessing that these firecrackers simply
16:51 - have a larger radius than the wind
16:52 - chimes and I'm here - the player has the
16:54 - ability to assassinate so just a simple
16:57 - case of doing a sphere cast around the
16:58 - player and identifying all the possible
17:01 - assassin target surrounded in order to
17:03 - have the assassinate be an option I'm
17:05 - guessing that probably the player needs
17:07 - to be hidden from the enemy and possibly
17:09 - also needs to be behind it now here we
17:11 - see two possible options assassinate and
17:13 - chain assassinate so what it's probably
17:15 - doing is the same sphere cast and locate
17:17 - the first enemy and then perhaps it does
17:19 - a second sphere cast around the second
17:21 - enemy in order to see if there's another
17:22 - enemy in there and if so then it shows a
17:24 - chain assassinate option so the player
17:26 - takes down that one and the camera
17:28 - immediately pans towards the next target
17:31 - so he takes down this one and once again
17:34 - it uses the same effects that we saw
17:35 - previously so we got extra bloom
17:38 - vignette and a slow-motion then while in
17:40 - slow motion the camera automatically
17:42 - pens to look at the next enemy and
17:43 - choose the second prompt so for finding
17:45 - the second and me maybe it stores a list
17:47 - of
17:47 - the possible enemies as soon as he
17:48 - assassinates the first one or maybe
17:50 - right after taking down this one it does
17:52 - another sphere cast and locate all the
17:54 - enemies within then this probably also
17:56 - has limits so even if you're surrounded
17:57 - by ten enemies you cannot instant kill
17:59 - out them and visually here we also see a
18:01 - nice outline on the enemy so one way of
18:04 - doing this outline is with a simple for
18:06 - now effect however in here it seems to
18:08 - be a thicker outline so most likely it's
18:11 - a shader that increases the visual size
18:13 - of the enemy and simply tints it with a
18:15 - moving radiant glow now over here the
18:17 - player is facing this super tough enemy
18:19 - and yep he drops a really nice smoke
18:21 - bomb so as soon as he opens his
18:23 - inventory yep there you go chose a
18:25 - really nice black and white effect I
18:26 - covered how to make post-processing
18:28 - effects in another video so in this case
18:30 - making a black and white shader it's
18:32 - extremely simple you just set the
18:33 - saturation notes headed all the way down
18:35 - to zero and you up there you go
18:36 - everything is black and white then over
18:38 - here it spawned some particles and makes
18:40 - the camera have a really shallow depth
18:41 - of field so pretty much anything passed
18:43 - the player looks really really blurry
18:45 - that the film leaves one of those
18:47 - effects that always no it's probably
18:48 - good and for the action on the enemies
18:50 - it's the same as always so as soon as he
18:53 - fires he looks for a sphere cast finds
18:55 - all of the enemies around it and calls
18:57 - some sort of stun function then the
19:00 - enemies AI go into the stun State and
19:02 - whilst in that state if the player
19:03 - approaches yep he has the option for a
19:05 - critical strike and now the player grabs
19:07 - a kunai and just throws it to finish him
19:08 - off then down here he use it to kill
19:10 - enemies at once so this is similar to
19:12 - charge attack that we saw previously
19:13 - with a sword so when using that same
19:16 - charge with a kunai then attacks
19:18 - multiple enemies so he holds down the
19:20 - button
19:21 - and as soon as you let's go once again
19:23 - it locates all the enemies within a
19:25 - range
19:25 - it probably finds the three to five
19:27 - causes two enemies and automatically
19:29 - fires the cognise onto them and again
19:31 - visually they have a very simple trail
19:33 - with a rotating object so just like that
19:36 - throws yep just like that so just say
19:38 - trail renderer and the rotating game
19:40 - object and yep what's wrong it now over
19:42 - here it shows a really cool mechanic so
19:44 - the enemy just drops down in fear so the
19:46 - game probably has some sort of global
19:48 - reputation score and the higher
19:49 - reputation the more likely it is that an
19:51 - enemy won't be paralyzed by fear this
19:54 - makes the player feel really powerful
19:55 - and grants them a nice and easy kill
19:57 - again it's one of those design problems
19:59 - that need to be carefully balanced so
20:01 - the
20:01 - doesn't become too easy so the game
20:03 - probably keeps the timer of the last
20:04 - five or so enemies at felling fear and
20:06 - it only allows it to happen every so
20:08 - often and just in case you miss it
20:10 - over here yep is another enemy running
20:12 - away in fear so the same mechanic except
20:15 - instead of falling to the ground he just
20:16 - ran out of there
20:17 - so some really nice variation and the
20:29 - game also features a real nice grappling
20:31 - hook now in some games the repple can
20:33 - attach to almost anywhere however here
20:35 - it seems to be unlimited to possibly
20:37 - these areas so the player is constantly
20:39 - looking for objects around it and if
20:41 - they have the let's say I grapple
20:43 - interface then checks for distance and
20:45 - if it's close enough then it shows a UI
20:46 - element and if the grapple targets are a
20:49 - many only set then the designers
20:50 - probably also set many only the target
20:52 - position so they connect the grapple to
20:54 - an endpoint and the animation smoothly
20:56 - interpolates at position
21:19 - then the player reaches the object and
21:21 - does the action so just a very simple
21:24 - timer increasing over time we want to
21:25 - play your home to button down visually
21:28 - again it's a simple mask so you have a
21:30 - mask with this shape and then you have
21:32 - the yellow part behind it constantly
21:34 - filming and once it ignites the player
21:43 - is rewarded with a nice victory cutscene
21:45 - so there it is mission complete
21:47 - alright so that's it I hope you found
21:50 - the video interesting and useful and
21:51 - learned something along the way I'm a
21:53 - big fan of open-world games with lots of
21:54 - systems so this is right up my alley now
21:57 - the response to the previous react that
21:58 - it was really positive so I look forward
22:00 - to doing more of these in the future let
22:01 - me know in the comments your suggestions
22:03 - for what are the trailers I should react
22:04 - to check out the code monkey app on
22:07 - Steam interactive tutorials complete
22:09 - games and more click knowing the
22:10 - description and add it to your wish list
22:12 - this video is made possible thanks to
22:13 - these awesome supporters go to
22:15 - patreon.com/scishow to code monkey to
22:18 - get some perks and help keep the videos
22:19 - free for everyone like the video and
22:21 - subscribe to the channel if you'd like
22:23 - to see more post any question have in
22:25 - comments and I'll see you next time
22:30 - [Music]
22:32 - you