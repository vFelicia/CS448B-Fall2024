00:00 - this can be as simple as doing a sphere
00:02 - cast however while the attack is
00:04 - happening the game is still listening to
00:05 - so that coupled with a certain detection
00:07 - fov
00:09 - hello and welcome i'm your code monkey a
00:11 - professional in the game developer
00:13 - and here i will react and analyze a
00:15 - gameplay trailer i will talk about how
00:16 - things work behind the scenes and how
00:18 - you could build them in your own games
00:20 - it's been a while since i've made one of
00:21 - these videos you can go watch the full
00:23 - playlist if you want to learn more about
00:25 - some other games
00:26 - in this case we're going to look at the
00:27 - elden ring gameplay trailer from e3
00:30 - 2021 alright so let's hit play
00:53 - the tarnished will soon return
01:00 - guided by grace once lost
01:09 - the golden order is broken to its core
01:18 - now the very first mechanic that we see
01:20 - is over here the horse summoning
01:21 - so one of the main differences between
01:23 - this game and the songs games is the
01:24 - fact that this one is meant to be open
01:26 - world
01:27 - so the horse is going to be the main way
01:28 - that you traverse through that world
01:30 - and it's also interesting to take a look
01:32 - at the method they use for summoning the
01:33 - horse
01:35 - now usually what most games do when you
01:37 - press a button is the horse's spawn off
01:39 - screen and then runs you
01:42 - so the game knows where the player is
01:44 - and knows where the player is looking at
01:46 - so based on the camera direction and the
01:47 - field of view you can easily accommodate
01:49 - a bunch of positions that are just
01:50 - outside of the player's view
01:52 - so in most games that's how you do it
01:53 - you would generate all of these various
01:55 - positions outside of the player view
01:57 - and you would spawn the horse on one of
01:58 - those random ones and then simply have
02:00 - the horse move towards the player
02:02 - however in this game since there is
02:04 - magic involved the horse is literally
02:05 - just summoned
02:07 - so over here the player just pushes a
02:09 - button and the horse magically appears
02:12 - now this is an excellent example for how
02:14 - you always have multiple approaches for
02:15 - solving the same problem depending on
02:17 - the theme and the various things
02:18 - particularly to your game
02:29 - then over here they show some mounted
02:31 - combat
02:33 - so this involves a bunch of interesting
02:35 - mechanics now based on what is shown in
02:37 - the video it appears to be a hold attack
02:41 - so down here we see the pointer grab the
02:43 - sword and then we see the sword actually
02:45 - go down and touch the floor
02:47 - so while this is happening the player is
02:48 - simply pressing down the attack button
02:51 - and when the attack actually happens the
02:52 - player simply releases
02:54 - so it's pretty simple to handle that
02:55 - mechanic you would just count up a timer
02:58 - using time.time while the player is
02:59 - holding down the button
03:00 - and then it probably has a minimum haul
03:02 - time so just checking if the time
03:04 - is above a certain amount and then on
03:07 - release of the times above the minimum
03:09 - trigger then you play the attack
03:10 - animation
03:12 - now another thing is for the hit
03:13 - detection this can be as simple as doing
03:16 - a sphere cast right around
03:18 - the player that would identify all of
03:20 - the objects within that area so for
03:21 - example the enemy right in there
03:23 - then you check if the object within the
03:24 - area can be damageable and if so then
03:26 - you cause some damage
03:28 - so that would be the seamless approach
03:29 - and another approach if you wanted
03:31 - extreme accuracy you would simply do
03:33 - perhaps a box cast with the exact same
03:34 - shape of the sword
03:36 - again both approaches that are valid
03:37 - just depends on what type of game you're
03:39 - making how accurate you want it to be
03:41 - so it depends if you're going for
03:42 - extreme realism or some rkd action
03:45 - so that's really just some very simple
03:46 - logic but again one of my goals with
03:48 - these videos is to show you how all of
03:49 - these
03:50 - aaa games look insanely complex but as
03:52 - you dig deeper you realize that all of
03:54 - these systems are relatively simple and
03:56 - something that you can definitely build
03:57 - in your own games
03:58 - what makes this simple action feel so
04:00 - good even in this simple 10 second clip
04:02 - is really the sound in the animation so
04:04 - the sword and sheets all the particles
04:06 - as it touches the ground
04:07 - the excellent attack animation coupled
04:09 - with the awesome punchy sound effect
04:11 - of those helmets put together are what
04:13 - really helps to sell the simple logic
04:14 - underneath
04:18 - in search of the elden ring
04:22 - then over here a very simple thing which
04:24 - is over here this creature as it attacks
04:26 - the player the player is walking and
04:27 - note how the player gets a tiny
04:29 - knockback
04:30 - so he defends and yep gets pushed back
04:33 - this is an example of a tiny thing that
04:35 - really improves your game
04:37 - adding a simple knockback is one of the
04:38 - easiest ways for making your game feel
04:40 - much more responsive
04:41 - this tiny action makes the game feel
04:43 - much more alive as opposed to having the
04:44 - player block the hit and nothing would
04:47 - happen
04:50 - of ambition
04:56 - thy flag
04:59 - then over here the player dodges this
05:00 - projectile
05:02 - so dodging is another thing that you can
05:04 - implement in many different ways
05:07 - so the simplest way is to simply make
05:08 - the dodge work pretty much just like
05:10 - real life
05:11 - so the player is right in here and
05:13 - they're moving over here to the left so
05:15 - they move very quickly
05:16 - and just by getting the timing right it
05:18 - automatically dodges the projectile
05:20 - hitbox
05:21 - so that's the hyper realistic way of
05:22 - doing things however another way to
05:24 - handle dodging and really the most
05:26 - common way is to add some sort of
05:28 - invincibility frames
05:31 - so you just define a simple
05:32 - invulnerability timer
05:34 - then when the player presses dodge you
05:37 - set it to a certain amount
05:38 - and then on update you're constantly
05:40 - counting it down then if the player is
05:42 - meant to take damage you simply check
05:43 - that variable first
05:44 - and if the timer is still active then
05:46 - the player is invincible so don't deal
05:47 - any damage
05:48 - now this is usually the better approach
05:50 - because it makes the game a bit more
05:51 - forgiving and doesn't require some
05:52 - perfect hitboxes
05:54 - always remember that your goal as a game
05:56 - developer is not to perfectly recreate
05:58 - reality instead your goal is to give the
06:00 - player a good time and letting the
06:01 - player do some death to find dodges
06:03 - always feels great
06:04 - by the way if you find the video helpful
06:06 - please hit the like button it's a tiny
06:08 - thing but it really does help
06:09 - thanks
06:13 - and speaking of dodges here the player
06:15 - does another one
06:16 - so on this one it seems like the player
06:18 - is still within the attack damage radius
06:20 - so right in there as the boss drops from
06:22 - the sky yep just like that
06:24 - so chances are they are really going for
06:25 - the invulnerability timer approach
06:27 - which usually that is indeed the better
06:29 - approach since it gives the player
06:30 - better control and a better feeling for
06:32 - the game
06:33 - they will fight and they will
06:36 - die then over here we see some horse
06:40 - jump pads
06:41 - now like i said the main difference with
06:43 - this game from the other souls games is
06:44 - the fact that it's open world
06:46 - and from software are known for making
06:48 - some very complex levels that usually
06:50 - open up with some new shortcuts as you
06:52 - progress
06:53 - so in an open world game it seems like
06:55 - these jump pads are solving that problem
06:57 - on a much greater scale
06:58 - they essentially let you traverse in
07:00 - large vertical and maybe also some
07:01 - horizontal jumps after either you get
07:03 - the skill or simply enable them to jump
07:05 - out
07:05 - they will die so a great movement
07:09 - mechanic that personally fits with the
07:10 - theme of the game
07:14 - then over here this jump attack looks
07:16 - really awesome
07:18 - so the player attacks and as soon as the
07:19 - attack ends the player jumps back and
07:21 - gets some distance from the enemy
07:23 - so i wonder if this is all just one
07:24 - attack or perhaps it's the player doing
07:27 - an attack
07:28 - then right after doing a dodge and the
07:29 - game combines both actions
07:34 - now how you would implement such a thing
07:35 - once again depends on the design you're
07:37 - going for
07:37 - if you want maximum responsiveness then
07:39 - perhaps you just triggered the jump back
07:41 - as soon as the player pressed the button
07:43 - however in doing so you kind of take
07:44 - away the risk of doing such a heavy
07:46 - attack
07:46 - so another approach is to make this
07:48 - attack and cancel
07:50 - so as soon as the player starts off the
07:52 - attack you cannot stop it
07:53 - however while the attack is happening
07:55 - the game is still listening to player
07:56 - input
07:57 - and then if the player happens to press
07:59 - the dodge button you simply queue up the
08:01 - action instead of triggering it right
08:03 - away
08:04 - now when using this approach sometimes
08:05 - long cue actions can also make the game
08:07 - feel very unresponsive
08:09 - for example while in mid-attack you
08:10 - decide that you really don't want to
08:12 - dodge but at that point the
08:13 - action has already been queued up so you
08:15 - can't stop it so the solution to that is
08:17 - to only queue up the action if the time
08:19 - from that action was taken
08:22 - if it is under a certain amount of
08:23 - milliseconds like 100 milliseconds
08:25 - before the dodge gets actually triggered
08:27 - you check if it is within the time and
08:28 - if so trigger the jump if not you just
08:30 - ignore the player input
08:32 - by doing that you would keep the heavy
08:33 - attack as meaningful but also allow the
08:35 - player to jump backwards with perfect
08:36 - timing without forcing the player to
08:38 - have some gun-like reflexes
08:42 - then over here we also see the player
08:44 - summoning so you hit a button and a real
08:46 - player joins your world to help you so
08:48 - that's a standard multiplayer connection
08:50 - as for the player visual here this is a
08:53 - simple for now
08:54 - shader effect so what that does is it
08:56 - adds some glow to all the various edges
08:59 - so of the edges of the mesh right in
09:00 - there they get a nice close it looks
09:02 - pretty nice
09:03 - and then just place it with a simple
09:04 - blue tint and looks quite ghost-like
09:06 - quite interesting
09:10 - [Music]
09:20 - then over here we see another approach
09:22 - of the dodge with invulnerability frames
09:24 - right here now this method also has the
09:26 - benefit where you can let the player
09:28 - dodge through the attacks which is
09:30 - always very satisfying
09:31 - so right in there the attack starts and
09:33 - the player just dodges straight through
09:34 - it
09:35 - so that's another approach you can take
09:36 - when you use the invulnerability frames
09:38 - method
09:42 - to be
09:47 - [Music]
09:49 - a lowly born
09:52 - playing as a lord
10:08 - over here we see a sneak attack it's a
10:10 - pretty common mechanic and it's actually
10:12 - pretty simple to do
10:14 - so for this one you know of course the
10:15 - player position
10:17 - and then you also know where the enemies
10:18 - are and you know the direction in which
10:21 - they are facing
10:22 - so that coupled with a certain detection
10:24 - fov and you can identify if the player
10:26 - is in front or behind the enemies
10:28 - so you just calculate the angle from
10:30 - there into the player
10:31 - and then you simply check with the
10:33 - enemies fov so for example maybe it goes
10:35 - from minus 45 to
10:36 - plus 45 and if the player is not within
10:39 - that so let's say here the player is on
10:40 - 80 degrees
10:41 - if so then he's simply not detected now
10:44 - sometimes depending on the game you
10:45 - might also want to add a sort of
10:47 - listening mechanic
10:48 - so if you wanted the enemies to be able
10:50 - to listen to some sounds by the player
10:52 - if you want to add such a thing then
10:54 - usually what you do would be just a
10:55 - simple sphere cast around the enemy
10:58 - and if the player is too close then the
10:59 - enemy would attack even if outside of
11:01 - the film division so that would be one
11:03 - way to simulate hearing
11:04 - but in this case we want some perfect
11:05 - sneaking to let the player do a massive
11:07 - sneak attack
11:21 - brandish the elden ring
11:23 - [Music]
11:26 - for all of us
11:36 - all right so there you have it that's my
11:38 - analysis of the elven ring gameplay
11:40 - trailer
11:40 - lots of great stuff here i can't wait to
11:42 - play the game i'm really curious to see
11:44 - how they're going to handle all the open
11:46 - world mechanics
11:47 - that is a pretty big difference from all
11:48 - the other games so it's going to be
11:50 - interesting to see how they tackle all
11:51 - those challenges
11:52 - okay i hope you found the video
11:54 - interesting and useful and learn
11:55 - something along the
11:56 - way check out the phone react playlist
11:57 - where i already covered a bunch of other
11:59 - games
11:59 - alright hope that's useful check out
12:01 - these videos to learn some more
12:03 - thanks to these awesome patreon
12:04 - supporters for making these videos
12:06 - possible
12:07 - thank you for watching and i'll see you
12:08 - next time
12:13 - [Music]