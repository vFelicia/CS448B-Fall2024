00:00 - hello and welcome I'm your code monkey
00:02 - and in this video we're going to create
00:03 - a mesh from code we're going to learn
00:05 - what a mash is made out of and how to
00:07 - dynamically create and modify it in real
00:09 - time let's get started
00:13 - so a mesh is composed of vertices
00:16 - triangles and UV coordinates the
00:18 - vertices are vectors that represent the
00:19 - position the triangles are inside
00:21 - connect the vertices together and the UV
00:23 - coordinates are vectors that represent
00:25 - what part of the texture is applied to
00:27 - each vertex so to start here let's make
00:31 - our mesh and create a game object test
00:38 - call it new game object given a name of
00:42 - mesh and add it with the components mesh
00:48 - filter and a mesh renderer and let's
00:54 - just set the local scale to be big so
00:59 - it's easier to test 31 okay there we go
01:07 - we have a game object means instantiated
01:09 - and it correctly has a mesh filter and a
01:11 - mesh renderer which is where we're going
01:13 - to use to display our mesh on the screen
01:16 - so back to the code here let's set up
01:19 - the data that our mesh won't require an
01:23 - array of vector three for our vertices
01:25 - equals new vector3 put an empty array
01:29 - for now create an array of vector three
01:32 - for our UV empty array and finally an
01:38 - array for intz for our triangles also an
01:43 - empty array down here let's add the data
01:46 - to our mesh where disease equals
01:50 - vertices mesh to a UV
01:52 - and mashed up triangles equal triangles
01:57 - now down here let's add the mesh to our
02:01 - mesh filter component so game object
02:03 - I'll get component of type mesh filter
02:06 - that mesh equals our mesh let's test it
02:11 - and the mesh filter should now have an
02:12 - empty mesh in there yep there you go
02:14 - it's a mesh in there it's completely
02:16 - empty zero four zero trees but it's in
02:18 - there okay so now let's make a square
02:22 - now for a square we're going to need
02:24 - four vertices the UVs are the same as a
02:27 - vertices since you have one UV four
02:29 - vertex and on our triangles we're going
02:32 - to have three triangles for each polygon
02:34 - in order to display a square we need two
02:36 - polygons so we're going to need six
02:38 - triangles so down here let's set up our
02:42 - vertices and we're going to put them one
02:48 - two and three okay so I'm going to add
02:52 - them in a Z shape now the order of the
02:55 - vertices doesn't matter but the order of
02:57 - the triangles does so for the vertices
03:00 - the first one won't be on the left side
03:02 - on top the second one will be on the
03:04 - right side on top the third one will be
03:07 - on the bottom left and the fourth one
03:09 - will be on the right bottom so for our
03:14 - UVs
03:16 - Thank You spectre-2 and for now in our
03:24 - u-visa let's just display the whole
03:25 - texture so we're going to copy the
03:28 - coordinates that we have on our vertices
03:36 - so down here for our triangles okay so
03:48 - in here you have to be careful with the
03:50 - order that you put them you need to
03:51 - display them in clockwise in order for
03:53 - the triangles to face the camera if you
03:55 - put them on counter clockwise they won't
03:57 - face away
03:58 - so our first triangle won't be from the
04:01 - upper left corner to the upper right
04:02 - corner to the lower left corner and the
04:04 - second one will be from the lower left
04:06 - corner to the upper right corner and to
04:08 - the lower right corner so the first one
04:11 - will go from zero to the one to the two
04:14 - and the second triangle won't be from
04:17 - the two going to the upper right corner
04:20 - so to the one going to the lower right
04:22 - corner and so to three so these numbers
04:24 - right here represent the index on the
04:26 - vertices right and three of them make up
04:29 - a polygon so our first polygon will go
04:31 - from vertex zero which is on the upper
04:34 - left corner then go to vertex one which
04:36 - is on the upper right corner then go to
04:39 - vertex two which is on the lower left
04:41 - corner so these three right here and the
04:43 - second one will go to one three so we'll
04:46 - start off on this one left then go to
04:49 - the one which is on the upper right then
04:52 - you go to the three which is on the
04:53 - lower right so in order to have a visual
04:55 - to our mesh we need to add a material to
04:57 - our mesh renderers so what's going to
04:59 - game object
04:59 - I'll get component type mesh renderer
05:02 - material material and here we're going
05:08 - to public material material so in here
05:14 - let's drag a material to our script now
05:18 - I have material here which is just a
05:20 - sprite sheet and let's play and it
05:22 - should display the entire spreadsheet
05:24 - yep there you go you can see the mesh is
05:26 - one square and you can see it on the
05:28 - wireframe that it is actually made up of
05:30 - two polygons you can see the dash here
05:32 - in the middle so in this video we cover
05:34 - the components that make up a mesh
05:36 - vertices you've ease and triangles how
05:38 - to set up the data and how to
05:40 - instantiate a game object with that mesh
05:42 - in the next video we're going to cover
05:44 - how to edit the UV to display only a
05:46 - portion of our sprites you
05:47 - if you have any questions post them in
05:49 - the comments I'll do my best answer them
05:51 - right see you next time