00:00 - in this video we're going to make a
00:01 - really simple but really nice wind
00:03 - shader effect you can easily apply this
00:05 - to grass
00:06 - leaves trees or really just about
00:07 - anything you want to make its way back
00:09 - and forth there's also exposed
00:10 - parameters to play around with the
00:12 - intensity of the wind
00:13 - let's begin
00:18 - okay so here let's check out how to make
00:20 - a very simple grass wind shader effect
00:23 - now this is really simple to do and it
00:24 - will really make your game stand out
00:26 - for example here in my scene i have my
00:29 - basic player character
00:30 - and there's some random bushes in the
00:31 - world everything looks way too static
00:33 - which makes it quite uninteresting
00:35 - so let's make our bushes way back and
00:37 - forth with the win by the way i also use
00:39 - this exact effect in my course for the
00:41 - builder defender game
00:42 - the course is 10 hours long with over 15
00:44 - lectures nicely organized into distinct
00:46 - topics
00:47 - it teaches you everything on how to make
00:49 - a game starting completely from scratch
00:50 - until the final polished game
00:52 - the lectures are all presented as clear
00:53 - step-by-step tutorials just like these
00:55 - normal videos
00:56 - it teaches you about how to make a
00:58 - building system resource management
01:00 - enemy ai world building
01:01 - post processing polish and much much
01:03 - more so if you're looking for a guided
01:05 - step-by-step course on making a complete
01:07 - game from start to finish then check the
01:08 - link in the description to pick up the
01:10 - course
01:10 - alright so let's make it this video is
01:13 - made possible thanks to these awesome
01:14 - supporters
01:15 - go to patreon.com unitycodemonkey to get
01:18 - some perks and help keep the videos free
01:20 - for everyone
01:21 - on the project files let's right click
01:22 - go into create we're going to create a
01:24 - shader
01:25 - and in this case go into the 2d renderer
01:28 - and we're going to create a sprite like
01:29 - graph
01:30 - however everything we're going to do
01:31 - works the same in any other graph
01:33 - so if you're working on a 3d game it
01:35 - won't work pretty much exactly the same
01:37 - let's name it wind effect now here's a
01:40 - quick tip for making a material using
01:42 - shader
01:42 - instead of right clicking on top of a
01:44 - folder or something right click directly
01:46 - on top of the shader
01:47 - and going to create create a material
01:49 - and it will automatically create using
01:50 - that shader so just a very simple quick
01:52 - tip
01:53 - so just this for our wind effect and now
01:56 - if these bushes in my case are
01:57 - set up inside prefab so just open up the
01:59 - prefabs
02:00 - and inside this is just a normal sprite
02:02 - render so just apply the wind effect
02:06 - material
02:09 - okay i've applied the material to all
02:11 - the different grass types however right
02:13 - now we can't really see
02:14 - anything we just see some white blobs so
02:17 - let's open up the shader so double click
02:19 - and in here hit shift space in order to
02:21 - make our shadowgraph phone screen
02:23 - and now in here if you're not familiar
02:25 - with shadowgraph check out my quick
02:26 - getting started video
02:28 - it will teach you the absolute basics
02:30 - now in here the first thing we want to
02:32 - make is make our basic visual so we need
02:34 - a basic texture so a new texture 2d
02:36 - for the main text and with the reference
02:40 - underscore main text
02:42 - and let's default it to one of these
02:44 - bushes then we just drag the texture we
02:46 - need to
02:47 - sample it and then we pass in the colors
02:49 - into the color field
02:50 - alright that's it let's also enable the
02:52 - main preview and right click and swap it
02:55 - onto a quad
02:56 - all right that's it let's hit save and
02:58 - yep we have all of our nice static
03:00 - bushes okay so far so good
03:02 - now the way we're going to make this way
03:03 - back and forth is by moving the vertices
03:05 - so if we go back into the scene view in
03:08 - here
03:08 - you have a little drop down menu so you
03:10 - click on it and instead of shaded we can
03:12 - select wireframe
03:14 - and if we do now we can see the actual
03:15 - vertices that make up each of our meshes
03:18 - so down here let's zoom into this bush
03:20 - and you can see all these tiny vertices
03:22 - so if you go back into shaded if there
03:24 - you go and if we go into our frame yep
03:26 - there it is we can see all the vertices
03:28 - now since this effect will be based on
03:30 - moving vertices it's very important for
03:32 - the mesh to actually have these vertices
03:34 - so if you go into the sprite import
03:36 - settings here it is and yep it's a
03:38 - normal sprite
03:39 - and in here you can see a film for the
03:41 - mesh type so you have two options
03:43 - tight or phone wrecked so if it's unlike
03:45 - tight it will create a complex mesh with
03:47 - the shape of the visual sprite
03:48 - or you can set it to phone rect hit
03:50 - apply and there you go now it just takes
03:52 - the shape of a normal quad
03:53 - so again since this effect will be based
03:55 - on moving vertices we want as many
03:57 - vertices
03:57 - as possible so in order to make this
03:59 - work we need to make sure that we are
04:01 - using tight
04:02 - and there you go we have all these
04:03 - vertices all right so back in shader
04:05 - over here on the master node we can see
04:07 - a parameter for the vertex position
04:09 - so this will impact the position of each
04:11 - specific vertex
04:12 - and now the way that we get that
04:14 - position the position that is in there
04:15 - by default
04:16 - let's just add the position node and
04:19 - okay here it is
04:20 - then on this drop down menu we can
04:22 - choose which space we want to use
04:24 - so you can get the world space position
04:26 - which will give you the absolute
04:27 - position
04:28 - of the vertices in the world space or we
04:30 - can choose
04:31 - object for the actual positions only the
04:33 - object local space
04:34 - which is what this one is by default so
04:36 - if we connect this one to this one
04:38 - nothing changes since that's what was
04:39 - already being used but in our case yep
04:42 - that's what we want we want the object
04:43 - then we just want to play around with
04:44 - this
04:45 - so we can test to see what this is doing
04:47 - let's create an add node
04:49 - and we're going to add this position and
04:51 - let's set it just by one on the x
04:53 - and then use this as our vertex position
04:56 - and right away in there you can see that
04:57 - the sprite shifted to the right
04:59 - and if we save there it is every sprite
05:02 - is slightly moving to the right you can
05:03 - see compared to the shadow position so
05:05 - every one of those
05:06 - has moved to the right by one unit so
05:08 - that's what modifying the object space
05:10 - position does
05:11 - it modifies the actual position of each
05:13 - vertex so with this you can already
05:15 - imagine how we're going to achieve this
05:16 - effect
05:17 - we just need to apply some swaying
05:18 - movement over here to our object space
05:20 - position
05:21 - now the way we make them sway back and
05:23 - forth is using some really nice
05:24 - scrolling noise
05:26 - so let's position this correctly place
05:27 - the collar down here since we're not
05:28 - going to touch the collar
05:30 - and now up here let's add node of
05:32 - gradient noise there you go you can see
05:34 - that
05:34 - now again always remember that colors
05:36 - really equal numbers so
05:38 - in here on the black we have zero and on
05:40 - the white we have one
05:41 - so we have noise going from zero to one
05:43 - and now if we take this
05:45 - and we add this to our add node in there
05:47 - you can see that all of the vertices
05:49 - moved according to the value on the
05:50 - noise gradient
05:51 - so by modifying the scale you can see
05:53 - yep there you go it's changing quite a
05:54 - lot
05:55 - and again this goes from zero to one
05:56 - that is why that one is shifted to the
05:58 - right and up by one on each side
06:00 - however in order to do that we're not
06:01 - going to modify the scale but the uv in
06:03 - here which will make a scrolling texture
06:05 - so in order to see this in action let's
06:07 - add a time node
06:08 - so this one has various parameters
06:10 - related to the time so the first one is
06:11 - just a constantly increasing float
06:14 - so we can take this and connect this
06:15 - into the uv2 and if there to go now you
06:17 - can see that it's constantly moving
06:19 - however with this we are shifting all
06:21 - the vertices by exactly the same amount
06:23 - so let's sample the gradient noise on
06:25 - different positions depending on the
06:26 - object space so let's actually move this
06:29 - and make another one in here and we add
06:32 - these two
06:33 - and then sample the gradient noise so
06:35 - now each vertex is grabbing a different
06:37 - position from the gradient
06:38 - now if you want you can play around in
06:39 - here with the scaled noise if you want
06:41 - more or less separate areas on each
06:43 - vertex
06:44 - so for example if you put it less there
06:46 - you go it looks much more smooth
06:48 - and you put it insane then it looks well
06:50 - insane so just like this looks pretty
06:52 - good
06:52 - so if we save and look and if there it
06:55 - is we have all of our bushes swaying
06:56 - indeed back and forth
06:57 - however you can obviously see the issue
07:00 - which is they are swaying but they are
07:01 - swaying on the x
07:02 - on the y and also on the z so over here
07:05 - in the scene view in a 3d view we can
07:07 - actually see what is going on
07:09 - so each vertex is being moved up down
07:11 - left right and
07:12 - front and back however in our case we
07:14 - really only want to move on the x
07:16 - we don't want to touch the y and the z
07:18 - so let's do that
07:19 - over here on the object position instead
07:22 - of adding them to all of them
07:23 - what we're going to do is we take this
07:25 - we make a split node
07:27 - and that will split that vector 3 into
07:29 - our three components
07:31 - and now in here it says rgb but in
07:33 - reality this represents
07:34 - x y z so again we only want to apply it
07:36 - to the x
07:37 - so we take our add node instead of using
07:39 - all of them we just take the x
07:41 - so we just add on to the x okay and then
07:43 - we need to combine them back
07:45 - so combined use the x that we call it in
07:47 - here and the original
07:49 - y and the original z and now we place
07:51 - all these in there
07:53 - and there you go now it does only sway
07:54 - back and forth on the x axis
07:56 - so yep you can now see the effect in
07:58 - action and now they're only going left
08:00 - and right alright so far so good
08:02 - now the one issue that we can see right
08:03 - away in here is that it's really only
08:05 - swing in one direction
08:06 - so when the noise is at zero then the
08:08 - vertex is on its normal position
08:09 - and when the noise is at one then it
08:11 - goes to the right we want it to sway
08:13 - both
08:13 - left and right so solving that is very
08:16 - simple fix
08:17 - over here we have our green noise and
08:19 - like i said the noise goes from zero to
08:20 - one
08:21 - so if we want to go left and right then
08:23 - we can just take this
08:25 - and we just add a subtract node and we
08:28 - just take this and subtract it by point
08:30 - five
08:30 - so now instead of going from zero to one
08:32 - it will go from minus point five to plus
08:34 - point five
08:34 - so we take this and use it and there you
08:36 - go now it is in the center and goes left
08:38 - and right all right so far so good
08:40 - now the other thing is the effect might
08:41 - be a bit too intense
08:43 - obviously that's going to spin on the
08:45 - scale of your game
08:46 - but if you want to modify that we just
08:48 - add a multiply node
08:50 - and we take this and multiply this by a
08:52 - certain value and then we add it
08:54 - so with this with 2 now the wind is very
08:55 - intense but at 10 it's even more intense
08:58 - and if we put it at something like 0.5
09:00 - then now it's much more smooth so now we
09:02 - can even make this an exposed property
09:03 - so in here let's make a vector 1
09:06 - for the wind intensity
09:09 - let's see fall to 2.5 let's make a mode
09:12 - a nice slider so we can play around with
09:14 - let's make it from that to center line
09:16 - five and just drag it and this will use
09:18 - in here
09:18 - so if we test so there's the wind effect
09:22 - very smooth very small and in here we
09:24 - have the wind intensity and as we
09:25 - increase
09:26 - if there you go now it's a lot more
09:27 - intense and as we decrease and now
09:29 - there's no wind and there's a little bit
09:30 - and a lot
09:31 - so we have a really nice property that
09:33 - we could easily set through code
09:35 - if we wanted our game to have some
09:36 - dynamic wind okay so this is looking
09:38 - good
09:39 - however we have one series issue which
09:41 - is right now the whole sprite is moving
09:43 - but the bottom of the sprite is meant to
09:45 - be connected to the ground so we don't
09:46 - want that to move
09:47 - essentially we want it not to move at
09:49 - the bottom and move a lot the higher we
09:51 - go on the sprite
09:52 - so first we need some sort of mask for
09:53 - that effect so
09:55 - with that we can add a simple uv node so
09:58 - there you go we have our uv
09:59 - and now we can take this and split this
10:02 - and again this says rgb
10:04 - but in reality this means x y z and in
10:06 - here from this gradient let's take the y
10:08 - which is the g
10:09 - and we can easily visualize what we have
10:11 - in here with a preview node
10:13 - and yep there it is so as you can see we
10:15 - have black in the bottom and white on
10:16 - the top
10:17 - so essentially it's going from zero to
10:18 - one so this is exactly the mass that we
10:20 - want and we just want to multiply this
10:22 - by our actual effect
10:23 - so let's move all this a bit to the side
10:26 - get a bit more space
10:27 - and then in here we add a multiply node
10:30 - we multiply this gradient
10:32 - by the output of here and then we add it
10:34 - onto there
10:35 - and if there you go now we have the
10:36 - effect exactly as we want it so
10:38 - down here it doesn't move at all and up
10:40 - here it moves a lot
10:41 - all right so this is pretty much the
10:43 - complete effect let's save and test
10:45 - and if there it is all of them are
10:46 - working exactly as intended so at the
10:48 - bottom there's no movement as we move up
10:50 - there's more movement
10:51 - another property we can add is for the
10:54 - wind speed
10:55 - so the wind speed is essentially over
10:56 - here the scale in our
10:58 - gradient noise so as we increase this if
11:01 - there you go it moves a lot more a lot
11:02 - more intense so let's make the same
11:04 - property
11:11 - so we have the wind speed property and
11:13 - we just use it in here and if there it
11:15 - is now we have our property so let's
11:17 - increase the wind speed
11:18 - and there you go yep now it moves a lot
11:20 - more and we can also modify the
11:21 - intensity
11:22 - and if there you go we have a very
11:24 - customizable very nice looking wind
11:26 - okay so this is working however there's
11:27 - one slight issue in here
11:29 - here if i duplicate this and place a
11:31 - whole bunch of wind effects right next
11:33 - to each other
11:37 - and in there you can see the issue when
11:39 - you've got sprites that look exactly the
11:40 - same right next to each other
11:42 - they all have the exact same wind speed
11:44 - so as this one moves to the right then
11:46 - also moves to the right now wind in real
11:48 - life isn't actually like that it doesn't
11:50 - apply
11:51 - the exact same effect on every single
11:52 - position in the world essentially it's
11:54 - ways along the world
11:56 - so objects on different positions should
11:58 - sway a bit more different
11:59 - so let's fix this now the fix for that
12:02 - is extremely simple we don't even need
12:03 - to add anything
12:04 - over here we already add the position or
12:06 - to get the position of each vertex
12:08 - and instead of using from object space
12:10 - let's use it from world space
12:12 - and yep that's pretty much it now if we
12:14 - want we can also just take this and only
12:15 - apply it to the x
12:16 - so we split it we grab just the x and we
12:19 - add it on there
12:20 - and depending on the scale of your game
12:22 - this might not be enough in order to
12:23 - actually differentiate them so then we
12:25 - just add a multiply node
12:26 - in order to make sprites that are
12:28 - physically very near graph from
12:29 - different positions over here on our
12:31 - gradient
12:31 - so just take this multiply by a certain
12:34 - amount
12:35 - and then grab this all right so with
12:37 - this let's test
12:38 - and yep it's working so the effect is
12:40 - now slightly different on each object
12:42 - making it look a bit more natural
12:43 - and again as we already saw they're only
12:45 - using the same material initiator
12:46 - automatically works with any texture
12:49 - so all these different textures they're
12:50 - all working with the same material and
12:51 - they all have the really nice effect
12:53 - then like i said we expose these
12:54 - properties so we could play around with
12:56 - these
12:56 - through code and make the wind more
12:58 - intense in certain areas and a bit less
13:00 - intense in some other areas
13:02 - so there you go like this is a very
13:03 - subtle effect and like this it suddenly
13:06 - becomes
13:06 - way too intense here's our final scene
13:08 - looking a lot more dynamic than the
13:10 - static scene that we start with
13:11 - so here is a very simple very good
13:13 - looking shader effect
13:14 - again this shader was originally created
13:16 - for the complete bundler defender course
13:17 - so if you want to see how this is used
13:19 - as part of a complete game go check out
13:21 - the course link in the description it
13:22 - teaches you everything on how to make a
13:24 - game starting completely from scratch
13:25 - until the final polish the game
13:27 - if you found this video helpful consider
13:28 - liking and subscribing this video is
13:30 - made possible thanks to these awesome
13:32 - supporters
13:32 - go to patreon.com unitycodemonkey to get
13:35 - some perks and help keep the videos free
13:37 - for everyone
13:38 - as always you can download the project
13:39 - fountain utilities from
13:40 - unitycodemarket.com
13:42 - subscribe to the channel for more ent
13:43 - tutorials post any questions i have in
13:45 - the comments and i'll see you next time
13:47 - [Music]