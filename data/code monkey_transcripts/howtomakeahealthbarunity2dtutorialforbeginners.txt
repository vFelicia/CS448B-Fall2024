00:00 - hello and welcome I'm your code monkey
00:02 - min this video we're going to create a
00:03 - health bar and a script to control it
00:05 - let's begin
00:08 - so in order to make our health bar we're
00:11 - going to use sprite renderers with a
00:13 - white pixel that we can stretch and tint
00:15 - let's begin by making an empty game
00:18 - object and we're going to name this
00:20 - health bar so this will be the container
00:23 - for our bar now inside the first thing
00:26 - we need let's make another empty game
00:28 - object and this one is going to be for
00:30 - the background and for the background
00:32 - let's leave it at zero zero and we're
00:34 - going to add a sprite renderer so the
00:37 - sprite renderer doesn't actually show
00:39 - anything until you actually apply a
00:40 - sprite so let's drag a simple white
00:43 - pixel in there so that we can visualize
00:45 - our rectangle okay like that we can view
00:48 - the texture import settings in here and
00:51 - as you can see this is literally just a
00:52 - one-by-one white pixel and it has pixels
00:56 - per unit of one this is very useful when
00:58 - you want to display a rectangle using a
01:00 - sprite runner
01:01 - so in here since this is our background
01:04 - let's tint it in a dark grey like that
01:07 - okay and for the sorting order drone
01:10 - depends on how your game is set up but
01:12 - for now let's leave it on the default
01:13 - and put it at a hundred all right so
01:16 - that's our background working perfectly
01:18 - now let's make the actual bar so we're
01:21 - going to set up the bar in such a way
01:23 - that we can easily modify the scale to
01:24 - be able to use a normalized value so
01:27 - let's go up here and make another empty
01:29 - game object and name this bar now for
01:32 - this game object we're going to leave it
01:34 - completely empty you won't see why the
01:36 - purpose of this game object is simply as
01:38 - an anchor for the actual sprite so
01:40 - inside this game object let's make
01:42 - another game object and this one let's
01:45 - name it bar sprite now for this one
01:48 - let's add a sprite renderer drag the
01:51 - white pixel and put the same size as the
01:54 - background sprite for the sorting order
01:56 - let's put an add 110 so that it shows up
01:58 - on top of the background so right now it
02:01 - is occupying the exact same space as the
02:03 - background however we're going to shift
02:06 - this to the right side so for that 20 so
02:09 - that it is shifted to the right on half
02:12 - of its size now the reason why we're
02:14 - doing this so that we can now go into
02:16 - the bar in here and we can easily modify
02:19 - the x value and
02:22 - to correctly pivot from the left side to
02:25 - the right all we need to do here is go
02:27 - to the left by half of our size and as
02:31 - you can see it is now shift to the left
02:32 - and this way if we give it a scale of
02:35 - zero you can see that it is an empty bar
02:37 - if we give a one it is full so all we
02:40 - need in our code is to convert whatever
02:41 - health values we are using into a
02:43 - normalized value and we can easily apply
02:45 - to our bar all right so that's a simple
02:48 - bar now for an optional thing let's add
02:50 - a border so let's duplicate the
02:53 - background call it border and let's drag
02:56 - it up there to keep things nice and
02:57 - organized and for the Orlan layer let's
03:00 - put it at ninety so it is behind the
03:02 - background put it in black and increase
03:05 - the size by a little bit there you go we
03:08 - got a nice little border behind our bar
03:10 - and we can go into our bar game object
03:12 - modify the X scale and as you can see it
03:14 - works perfectly as we want okay right
03:16 - now one last thing change the bar sprite
03:19 - to red so that this actually does
03:22 - represent a hump bar all right so that's
03:24 - our bar come only set up in the editor
03:27 - you can view in the game window yep
03:29 - that's a health bar right there alright
03:31 - so now let's make a script to control
03:33 - our bar through code so in our folder
03:36 - our skirts one room let's make a new
03:38 - c-sharp script and name it health bar
03:41 - we're going to drag this script into our
03:44 - main health bar game object just like
03:46 - that now inside our script let's begin
03:49 - by grabbing a reference to the bar
03:51 - transform so in here
03:52 - transform bar equals transform dot find
03:56 - our bar and just we're testing let's
03:59 - change the bar in here so the bar dot
04:02 - local scale equals new vector3
04:06 - and we're going to put it on point four
04:08 - and one out so the bar should be
04:11 - displaying as 40% filled let's see and
04:14 - yep there you go you can see the bar and
04:16 - it is 40% film okay great
04:18 - now let's make a function for modifying
04:21 - the size of our bar first let's store
04:23 - the transform as a member variable so
04:25 - here a transform for our bar and we're
04:28 - going to set it in there okay great
04:31 - let's get rid of the update for now and
04:33 - make the start private to
04:35 - keeper toad nice and clean now let's
04:37 - make a public void set size and inside
04:41 - we're going to receive a float for the
04:43 - size normalize and now we're going to do
04:46 - in here is set the bar dot local scale
04:49 - to a new vector3 with the size
04:52 - normalized and one app so the size that
04:55 - we receive in here won't be between 0 &
04:58 - 1
04:58 - and we apply to our bar as previously so
05:01 - now for testing let's create a basic
05:03 - game handler script so let's make in our
05:06 - script create new c-sharp squared name
05:08 - it game Kendall this is a simple script
05:10 - so that we can run things outside of our
05:12 - health bar so let's drag it on to this
05:14 - game object in here and inside the game
05:18 - handler we're going to first of all
05:20 - require a reference to our health bar
05:23 - bar and let's make this a serialized
05:26 - field and once we get our health bar
05:29 - let's set the health bar dot set size to
05:33 - let say point 4 up now in the editor and
05:36 - let's drag the health bar into our hump
05:38 - bar reference alright so there you the
05:41 - health bar is now correctly 40 percent
05:42 - film as we set in the game handler so
05:45 - now let's go back to the game Handler
05:47 - and let's make a little animation to
05:49 - constantly lower our health bar size so
05:52 - for that let's going here and I'm going
05:54 - to use a function periodic which is part
05:57 - of the code monkey utilities cause
05:59 - monkey value tells which as long as you
06:01 - can grab for free from unity code monkey
06:03 - calm now the function periodic simply
06:06 - creates a function that is triggered
06:10 - every certain amount of time so every
06:12 - let's say 30 milliseconds we're going to
06:15 - execute this function in here and now
06:17 - for that function let's make a float
06:19 - health equals 1 F so start our health
06:22 - component like foam and here if the
06:26 - health if it is bigger than 0 F then
06:28 - let's reduce the health by point zero
06:31 - one F and set the health bar the set
06:34 - size to our health all right so this
06:38 - simple script should be reducing this
06:40 - hunt amount and constantly setting the
06:43 - size of the health bar so the health Mar
06:44 - should be constantly going lower yep as
06:47 - you can see the bar is constantly going
06:48 - lower
06:49 - and l0 okay great so we can easily now
06:52 - modify the size of our health bar now
06:54 - let's go in our health bar and make
06:56 - another function for setting the bar
06:58 - color so let's make here only void set
07:01 - color and inside we're going to receive
07:04 - a color object and we're simply going to
07:07 - go into the bar dot find our bar sprite
07:11 - on the bar sprite and let's get the
07:13 - sprite renderer component and in there
07:16 - we simply set the color to this color so
07:19 - just for testing let's go in the game
07:21 - handler down here and let's set the
07:23 - health bar dot set color - let's say
07:26 - color dot white so let's see if our bar
07:29 - is now white yep there you go we now
07:31 - have a white bar okay and now in here in
07:34 - our little animation let's make the bar
07:37 - flash when it is too low so in here
07:40 - let's do if he'll if it is under point
07:44 - three out so if we have under 30% home
07:47 - under 30% tone lettuce flashing and
07:52 - white but only sometimes so let's see if
07:54 - he'll multiply it by a hundred F
07:57 - remainder of three equals zero and
08:01 - setters why else lets it as red all
08:05 - right so in here multiplying our health
08:07 - by a hundred gives me a value between
08:08 - zero and 100 and doing the remainder of
08:12 - the division by three means that it will
08:14 - return zero only on every multiple of 3
08:17 - so on three six nine etc and if it is a
08:20 - multiple of three then we set it as
08:22 - white if not then we sell it as well so
08:24 - this is just a simple basic animation to
08:26 - see if our set color is working
08:27 - correctly so our bars should be flashing
08:30 - white whenever it is under three percent
08:32 - health so let's see that all right so
08:35 - here's our own little bar and when it
08:37 - gets in our 30 yep it starts flashing
08:39 - okay so we can easily set up the size of
08:43 - this bar and we can also modify the
08:44 - color great so there you have it we
08:47 - create the health bar in the editor and
08:49 - made a script to control it through code
08:50 - we can easily modify to display any
08:52 - value that we want as always you can
08:55 - download the project files in utilities
08:56 - from unity code monkey comm if you have
08:59 - any questions post them in the comments
09:00 - and I'll do my best
09:01 - answer them subscribe for more videos
09:02 - and I'll see you next time