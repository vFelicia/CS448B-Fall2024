00:00 - hello and welcome I'm your code monkey
00:01 - and in this video we're continuing to
00:03 - create modular spreadsheets as used in
00:04 - Baron round tycoon we're going to
00:06 - compose the head sprite from various
00:08 - beards and hair styles let's begin
00:12 - so here's what we've built so far here
00:15 - is the spreadsheet which you can see
00:17 - that it is composed of the base fried
00:19 - sheet plus the body sprite sheet and a
00:23 - head spread sheet those are all
00:25 - mix-and-match together to create this
00:27 - final spreadsheet which is used by the
00:28 - animation system now to get even more
00:31 - randomization we're going to randomize
00:32 - the head with various beards and hair
00:35 - styles the game is up now on Steam so
00:37 - check it out to see what I'm teaching
00:38 - here apply to a real game so over here I
00:41 - have a spreadsheet with a bunch of
00:42 - beards a bunch of hairstyles and the
00:45 - base head so let's go to the code and
00:48 - here the first thing we need is
00:49 - serialize fields to grab the textures
00:55 - and again remember that on your textures
00:59 - you need to go into the settings and
01:01 - enable read and write we need this to be
01:03 - able to grab the pixel data from our
01:05 - code so previously we were grabbing this
01:08 - head spreadsheet which was already
01:10 - composed now we just want the base so
01:13 - here is where we were grabbing all of
01:15 - our heads so for now instead of grabbing
01:17 - from the head texture let's grab it from
01:19 - the base head texture and the base head
01:22 - is only one so we can remove the head
01:24 - index and simply grab it from 0 0 with a
01:27 - height of 128 128 okay so let's do a
01:30 - quick test and see if our spreadsheet is
01:32 - being created with the base head and yep
01:35 - there it is it is now using the base
01:36 - head with no hair and no beard ok so now
01:39 - let's do the same thing to grab the
01:41 - first hairstyle so in here grab the hair
01:43 - pixels we're going to grab it from the
01:45 - hair texture and for now let's just grab
01:48 - the first one so on 0 0 128 by 128
01:51 - however in here we don't want to do set
01:53 - pixels because if we do this then we
01:55 - won't completely overwrite our head so
01:57 - we need a function to overlay the hair
01:59 - pixels on top of the head pixels so
02:02 - let's make a function to do that a
02:03 - private void merge color array we need a
02:09 - color array for our base array and
02:12 - another corner array for the overlay
02:14 - that we wish to add on top of the base
02:16 - array so the way we do this is sigh come
02:19 - through our base arraign
02:22 - and first we check if we actually have
02:24 - something on the overlay so if the
02:26 - overlay on the same index dot alpha if
02:29 - the Alpha is bigger than zero then we
02:32 - have something visible on the overlay so
02:34 - in here overlay has color then we check
02:38 - if the overlay of this index dot alpha
02:41 - if it is one then we want to completely
02:44 - replace the base array with whatever is
02:47 - on the overlay so we set the base array
02:49 - on index I to be the overlay on the next
02:52 - time if it is not one however then it is
02:56 - somewhere between zero and one so in
02:58 - here we want to interpolate all the
03:00 - colors
03:01 - so first let's spread the Alpha for the
03:04 - overloading and now we're going to
03:08 - modify the base array pixel on the next
03:10 - eye first let's modify the red pixel and
03:13 - increase it by the difference between
03:15 - both of them and multiply it by the
03:20 - alpha value so in here we are
03:22 - essentially interpolating between the
03:24 - base array value and the overlay value
03:26 - so if the alpha is 0.5 then the final
03:29 - value won't be the halfway point between
03:31 - the base array and the overlay so let's
03:34 - apply this to all the other colors and
03:40 - finally we increase the base array alpha
03:43 - by the same as our overlay alpha okay so
03:48 - that's our function for correctly
03:50 - overlaying a group of pixels on top of
03:52 - another one
03:53 - so using this function we can now go up
03:55 - here first we grab the head pixels then
03:57 - the hair pixels and now before we set
04:00 - all these we first take our merge color
04:04 - erase we grab the head pixels and we add
04:07 - the overlay of our hair pixels and the
04:10 - result won't be placed on the head
04:11 - pixels so we grab the head grab the hair
04:14 - merge it to and put the result into our
04:17 - texture so let's run the code and see if
04:19 - we have our base head with our first
04:22 - hairstyle and yep there it is there's
04:24 - the base head with the first hairstyle
04:26 - on top so you can see in here we have
04:28 - the base head which is down and the
04:30 - first hairstyle which is that one
04:32 - alright so now let's do the same thing
04:34 - to add the beard
04:36 - so in here we're going to copy this in
04:38 - order to grab the beard pixels grab it
04:41 - from the beard texture and do the same
04:43 - thing then we add the beard pickles on
04:45 - top of the head pixels which again
04:46 - already contain the hair pixels and
04:48 - finally set it all on the texture and if
04:50 - there is the final head composed of a
04:52 - base head some hair and some beer so now
04:55 - that we can do this we can easily grab
04:57 - one at random so let's see so here let's
05:00 - first define end for the hair index and
05:02 - the same thing we're doing previously do
05:04 - a simple random Dow range between 0 & 4
05:07 - and here the spreadsheet is placed on a
05:09 - 128 grid so we do that multiply it by
05:12 - the hair index and then do the same
05:14 - thing for the beard and one more thing
05:18 - we can also do is make him bald or
05:20 - clean-shaven so we just define a ball
05:22 - for has hair and we define it grab a
05:27 - number between 0 and 100 and say there's
05:30 - a 70% chance that he has hair so if he
05:33 - has here then we do all this and do the
05:36 - same thing for defining if he has a
05:39 - beard okay so we are selecting a random
05:44 - from our for possible hair and beard
05:46 - indexes and we are also giving it a 70%
05:49 - chance that he has hair or a beard so
05:52 - let's see the final result and yep
05:54 - there's the hair you can see some of
05:56 - them have no hair some of them have no
05:58 - beard and they're all very random
06:00 - izybelle so as you can see just like
06:02 - this we now have an almost infinite
06:03 - number of possibilities with just four
06:05 - hairstyles and for beer times the game
06:08 - is out now on Steam so check it out to
06:09 - see what I'm teaching here apply to a
06:11 - real game so there you have it we took
06:13 - our previous sprite sheet and went one
06:15 - step further by adding randomization to
06:16 - the beard and hairstyle in the next
06:18 - video we're going to tint our
06:19 - spreadsheets to get multiple hair colors
06:21 - as always ignore the project files in
06:23 - utilities from unity code monkey comm if
06:26 - you have any questions post them in the
06:27 - comments and I'll do my best answer them
06:28 - subscribe for more videos and I'll see
06:30 - you next time