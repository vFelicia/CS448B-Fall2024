00:00 - hello and welcome i'm your code monkey
00:02 - so bitcoin is very popular nowadays
00:04 - along with all kinds of crypto like
00:06 - ethereum defy nfts and so on
00:09 - behind all of that is the blockchain
00:10 - technology which is still a mystery to a
00:12 - lot of people
00:13 - it's pretty complex but also very
00:15 - interesting and once it clicks then
00:16 - everything starts to make sense
00:18 - so i've been researching bitcoin and
00:20 - blockchain for the past few months and i
00:22 - made this nice demo to help solidify my
00:24 - own knowledge and to help you understand
00:26 - how all of this works
00:27 - i'm going to start from the most basic
00:29 - scenario possible and slowly introduce
00:31 - more and more concepts until the home
00:33 - blockchain system comes clear
00:34 - there are chapters in the video if you
00:36 - want to skip around but if you really
00:37 - want to learn then it's best to watch
00:39 - the whole thing
00:40 - and the demo that i won't be using here
00:42 - is also available on the website
00:44 - as well as the project files in case you
00:45 - want to dig deeper yourself
00:47 - all right so first let's just define
00:49 - some basic terms
00:50 - now bitcoin is one specific
00:52 - cryptocurrency that uses the blockchain
00:54 - to keep track of ownership
00:56 - and blockchain is the technology which
00:58 - like the name implies
00:59 - chains a bunch of blocks together which
01:01 - contain whatever data you want
01:03 - the chain from block to block is based
01:05 - on some very complex algorithms which is
01:07 - what gives it security
01:08 - now the key point is bitcoin does not
01:10 - equal blockchain
01:12 - bitcoin is simply one of the many
01:13 - possible use cases for blockchain
01:15 - technology
01:16 - for example you might have heard of nfts
01:18 - well that is another type of use case
01:20 - for blockchain technology that has
01:22 - absolutely nothing to do with bitcoin in
01:24 - the case of nfts the underlying network
01:26 - might be for example the ethereum
01:28 - network which allows for smart contracts
01:30 - to be created
01:31 - but again for now let's stick with the
01:32 - basics so how does the blockchain work
01:35 - now to understand it i made this nice
01:36 - demo and we're going to go step by step
01:40 - so on my first demo here i really just
01:42 - have a text box
01:43 - now like i said the blockchain can store
01:45 - any kind of data
01:46 - so in the case of bitcoin this would be
01:48 - some data like for example
01:50 - list sends bob10btc or for example
01:54 - in the case of ethereum this could be a
01:55 - smart contract or in the case of nft
01:58 - this would be some unique id
02:00 - data is really just data remember how
02:02 - blockchain can be used for anything it
02:04 - doesn't have to be just bitcoin or just
02:06 - money
02:06 - so for now let's ignore everything
02:08 - related to transactions or wallets or
02:10 - money of any kind
02:11 - in the end everything is just data so
02:13 - here as a type of data i just have some
02:15 - text
02:16 - so now we introduce the concept of a
02:18 - hash so first what is a hash
02:20 - well a hash is essentially a signature
02:23 - for some data
02:24 - now if i type something in here like for
02:26 - example hello world
02:28 - i get down here the calculated hash
02:30 - based on this data
02:31 - so as you can see it starts with a591
02:34 - now importantly the same data will
02:36 - always result in the same hash
02:38 - so if i erase this and i type hello
02:40 - world again
02:42 - yep i get the exact same hash another
02:44 - very important thing about hashes is if
02:46 - i make just
02:47 - one tiny change then the output should
02:49 - completely change
02:50 - so for example in here if i just change
02:52 - the w from uppercase into lowercase
02:54 - if there you go i get a completely
02:56 - different hash so if the data changes in
02:59 - any way no matter how small the hash is
03:01 - completely different
03:02 - so keep that in mind as we go along also
03:04 - different cryptos use different hashes
03:06 - like for example bitcoin uses sha 256
03:09 - whereas ethereum uses eth hash
03:11 - but the logic behind how the hashes are
03:12 - used is mostly the same
03:15 - so with this we now have a simple block
03:18 - we just got some data and some hash
03:20 - and then we can have multiple blocks and
03:22 - like the name implies it's a blockchain
03:24 - so the next step is to chain these
03:26 - blocks
03:27 - so here it is now the way they are
03:29 - chained together is that each block
03:31 - contains the hash of the previous block
03:33 - so this block has discounted hash then
03:36 - the second block takes that hash as an
03:38 - input then this calculated hash goes
03:40 - into the previous one on this one and so
03:42 - on
03:42 - now one important part is the very first
03:44 - one this one there's no previous blocks
03:46 - so this is what is called the genesis
03:48 - block it's a very special first block on
03:50 - the blockchain
03:51 - which has a special value on the
03:53 - previous hash and all the others they
03:55 - contain the hash of the previous block
03:57 - now also note how the hash is calculated
04:00 - so it's a hash of the data on the block
04:02 - but also the previous hash so previously
04:05 - all the blocks with the same data had
04:06 - the same hash
04:08 - but now since the hash is currently
04:09 - along with the previous hash if i type
04:11 - in the exact same thing
04:14 - here all blocks have the exact same data
04:16 - but since the hash is calculated not
04:18 - just on the data but the data plus the
04:20 - previous hash you can see that the final
04:21 - hashes are completely different
04:23 - so all the blocks are chained together
04:25 - they all have a link to the previous
04:27 - hash on the previous block
04:28 - now again remember that the purpose of a
04:30 - hash is to work as a signature for the
04:32 - data contained in block
04:33 - the data plus the previous hash so that
04:36 - means that if i modify this block
04:38 - i get a different hash and now this
04:40 - second block also needs to have a
04:42 - different hash here
04:43 - so that means that if i modify this
04:45 - block then this hash has to be
04:48 - recalculated since the data changed
04:49 - and in turn it makes this block
04:51 - incorrect which breaks the whole chain
04:53 - so this is how the blockchain is
04:55 - immutable immutable simply means that it
04:57 - cannot change
04:58 - it cannot mutate it cannot modify into
05:00 - something else once the data is recorded
05:02 - on the blockchain it cannot be changed
05:04 - or else the home blockchain breaks
05:06 - the only way to modify the blockchain is
05:08 - to essentially re-calculate all of the
05:09 - hashes on the entire blockchain which as
05:11 - we will soon see it's essentially an
05:13 - impossible task
05:15 - so now that we have a blockchain working
05:17 - we move on to the next level
05:19 - one very important concept about bitcoin
05:21 - and pretty much all of crypto is
05:23 - decentralization
05:24 - meaning that the blockchain does not
05:26 - exist on just one central authority but
05:28 - instead everyone has a copy of the
05:30 - blockchain
05:31 - so that means that for example if this
05:33 - user is nefarious and tries to modify
05:35 - the blockchain
05:36 - even if this user manages to recollect
05:38 - the hashes in order to make a valid
05:40 - blockchain
05:40 - all of the other users won't see it and
05:42 - the consensus wins so the network as a
05:44 - whole simply ignores the nefarious actor
05:46 - so in this case there are two users with
05:48 - the blockchain on this state
05:49 - and then there's one user on a different
05:51 - state so two versus one two wins so this
05:53 - one is the actual valid state for the
05:55 - blockchain
05:56 - so as new users join the network the
05:58 - first thing they do is get a copy of the
05:59 - entire blockchain
06:00 - then those users can go and verify all
06:02 - the hashes to ensure that all the data
06:04 - on the blockchain is valid
06:06 - and has not been tampered with and as
06:08 - soon as that new user starts to receive
06:09 - the
06:09 - latest blocks it can verify the hash in
06:12 - the previous hash to confirm that it
06:13 - does have the valid correct blockchain
06:16 - so next up how blocks are added now in
06:19 - order to add it the user creates a block
06:20 - with whatever data it should have
06:22 - so for example in the case of bitcoin it
06:24 - would add pending transactions as the
06:26 - data
06:26 - so for example alice sends bob10 btc
06:30 - so that's the data that is going to be
06:31 - created on this block
06:33 - then it adds the hash to the previous
06:35 - block in order to make the link
06:37 - and then it calculates the final hash
06:39 - based on the previous and the data
06:40 - contained in this block
06:41 - and then it simply broadcasts that block
06:43 - onto the entire network
06:44 - again this is how it's decentralized
06:46 - this is a peer-to-peer system
06:48 - so there's no centralized server
06:50 - anywhere this user creates the block
06:52 - then tells this user and this user
06:54 - then in turn this one tells this one and
06:56 - so on so the next block gets propagated
06:58 - throughout the network throughout its
07:00 - users
07:00 - now of course if anyone can add blocks
07:02 - by just pressing a button then that
07:03 - would make it way too easy for a
07:05 - nefarious actor to take over the network
07:07 - and generate a whole bunch of fake
07:08 - blocks
07:09 - if you could recalculate all the hashes
07:11 - of the entire blockchain in an instant
07:13 - then it wouldn't be secure at all
07:15 - so that's where the concept of mining
07:17 - and proof-of-work comes in in order to
07:18 - create a new block on network
07:20 - a user or rather a miner does indeed
07:22 - create a new block with whatever data
07:24 - and
07:24 - link to the previous block but then it
07:26 - also adds one more thing called the
07:28 - nonce
07:29 - so this is just a normal number and this
07:31 - number is used in completing the final
07:33 - hash so as you can see the final hash
07:35 - now is composed of the previous hash
07:37 - the data for this block and the nonce
07:39 - value now the important thing is that
07:41 - the final hash here
07:42 - in order to be considered valid it has
07:44 - to have a certain number of starting
07:46 - zeros
07:47 - so as a new block gets added into the
07:48 - pending poll so again for example
07:50 - ellis sends bob10btc that one gets set
07:53 - on the pending block
07:55 - then in order for this to be added into
07:56 - the blockchain the miner really starts
07:59 - money
07:59 - and what that means that the miner must
08:01 - go through all kinds of numbers until it
08:03 - finds one that makes the final hash
08:04 - start with a certain number of zeros
08:06 - so that's what mining is it's really
08:08 - just a computer or rather tons of
08:09 - computers so all the miners on the
08:11 - network
08:12 - all of them trying all different kinds
08:14 - of numbers until the first one finds a
08:15 - valid number
08:16 - when a miner finds a nonce it generates
08:18 - a valid hash
08:20 - then it gets broadcasted to all the
08:21 - miners and gets added onto the
08:22 - blockchain
08:24 - and the number of zeros here is
08:25 - essentially the difficulty setting on
08:27 - the puzzle
08:27 - so if i set in low difficulty so less
08:29 - number of zeros on the starting hash
08:31 - then means that the miners won't find a
08:33 - valid result very quickly
08:35 - so you go down with three starting zeros
08:37 - it took eleven thousand tries in order
08:39 - to find a valid hash
08:40 - but this one with just two zeros it only
08:41 - took 400 tries so if you lower the
08:43 - difficulty then the miners find the
08:45 - valid result very quickly
08:46 - and if you set it higher then obviously
08:48 - takes more tries in order to find a
08:49 - valid result
08:50 - now in the context of bitcoin this
08:52 - difficulty is dynamically adjusted based
08:54 - on the number of active miners on the
08:55 - network in order to ensure that each
08:57 - block takes on average 10 minutes to
08:58 - mine
08:59 - so as more miners join the network the
09:01 - difficulty goes up
09:02 - and if miners leave the network then the
09:04 - difficulty goes down
09:05 - so what we have here is what's called
09:07 - proof of work that is because when a
09:09 - miner broadcasts a new node onto the
09:11 - network
09:12 - all of the users on that network can
09:14 - validate and verify that this nonce does
09:16 - indeed
09:17 - generate a valid final hash and they
09:19 - know that the only way the miner found
09:20 - that valid notes was by trying out tons
09:22 - and tons of them
09:23 - one by one so the fact that the miner
09:25 - found the valid numbers is proof that a
09:27 - certain amount of work has been put into
09:28 - it
09:29 - also one key point here is that it's
09:31 - very difficult to find a valid hash
09:33 - essentially you have to try every single
09:35 - possible number until you find a valid
09:37 - one
09:37 - so that takes a ton of work however it's
09:40 - very easy to validate a hash
09:41 - once you know all of the values you can
09:43 - very easily calculate the hash of all
09:45 - this and verify that this nonce with
09:46 - this data and this previous hash
09:48 - does indeed generate this final hash so
09:51 - it's hard to generate but easy to verify
09:53 - now just one note here about users and
09:55 - miners
09:56 - so a user is anyone who is using the
09:58 - network so anyone who has a wallet and
10:00 - wants to do some sort of transaction
10:03 - so a user itself doesn't actually need
10:05 - to have a phone copy of the blockchain
10:06 - the user simply says i want to do a
10:08 - transaction and send the transaction
10:10 - onto the pending pool
10:11 - and then the miners they are really just
10:12 - machines simply running the mining
10:14 - software
10:15 - those then go into the pinning pool they
10:17 - grab on transactions in there they do
10:19 - the money work and create a new valid
10:20 - block
10:21 - so the key point is you don't have to be
10:23 - a miner in order to simply use the
10:24 - network
10:26 - now based on how the network is
10:27 - decentralized and you have tons of
10:29 - miners all over the world all of them
10:31 - trying to solve the same puzzle
10:34 - eventually it won't happen that two
10:36 - miners come up with two different valid
10:38 - solutions at the exact same time
10:40 - because again this is just unknown so
10:42 - there isn't just one valid solution
10:43 - there's tons of them
10:44 - so when two of them find a valid
10:46 - solution at the exact same time
10:48 - when that happens it creates a fork on
10:50 - the blockchain
10:51 - now the blockchain cannot have forks so
10:54 - one block must only lead into just one
10:56 - other so the solution to that is to
10:58 - simply wait until more blocks
11:00 - are mined now some miners won't be
11:01 - mining on this block so using this hash
11:03 - is the previous hash
11:04 - and some miners won't be mining on this
11:06 - fork so using this hash is the previous
11:07 - one
11:08 - and after one or more blocks are mined
11:10 - then as a rule the longest chain wins
11:13 - being the longest chain really means
11:15 - that it's the one with the most amount
11:16 - of work put into it
11:17 - so the fact that this chain is valid and
11:19 - longer is proof that more work was put
11:21 - into it
11:22 - so when that happens the other fork is
11:24 - simply discarded as if it never existed
11:26 - the network consensus is based on what
11:28 - the majority of the network agrees that
11:30 - is true
11:31 - so once a majority of network agrees
11:33 - that this is a true state of the
11:34 - blockchain then everything keeps going
11:36 - from here on as normal
11:37 - so that's another key point of
11:39 - blockchain it's a system that does not
11:40 - require trust on one
11:42 - individual or central authority trust
11:44 - comes by simply knowing that work has
11:46 - been put into the network
11:47 - so as a new user comes into the network
11:50 - maybe they will receive blockchain data
11:51 - from two peers and one of them sends
11:53 - this chain and another one sends this
11:55 - chain that new user doesn't have to
11:57 - choose in order to trust
11:58 - one pier over another it simply trusts
12:00 - that the longest chain is the one with
12:02 - the most amount of work put into it and
12:03 - considers that the true state of the
12:05 - watching
12:06 - now the possibility of forks also has
12:08 - another implication with regards to
12:10 - security and truth on the network
12:12 - so let's say for example that on this
12:14 - four can include a transaction to buy an
12:15 - item
12:16 - so for example let's say that alice
12:17 - wanted to buy something from bob
12:20 - and different miners can grab different
12:21 - transactions from the pending pool
12:23 - so again let's say on this fork it had
12:25 - this transaction but on this one it
12:27 - didn't have this one it had something
12:28 - else
12:28 - and now let's say that bob only happened
12:30 - to receive this fork
12:32 - so he sees the block he sees that the
12:34 - block is valid
12:35 - which means that he received payment so
12:37 - he ships the item right away
12:39 - but then the miners continue working on
12:40 - network and the fork is solved and it
12:42 - just so happens that this one down here
12:44 - is the one that is selected
12:45 - so that means that this one is now the
12:47 - true state of network and this fork is
12:48 - discarded
12:49 - so if for example this fork up here did
12:52 - include this transaction but this one
12:53 - did not
12:54 - well that means that since this fork is
12:56 - discarded then bob never ends up
12:58 - receiving the payment
12:59 - but bob already shipped the package so
13:01 - now he's screwed and there's nothing he
13:02 - can do about it
13:03 - now this is not a bug it's an inherent
13:05 - property of the way the blockchain works
13:08 - what it means is that you cannot 100
13:10 - trust as soon as a valid block is mined
13:12 - so the transaction analyst sends
13:14 - bob10btc gets added onto the pending
13:16 - pool
13:17 - then a miner mines it and adds it to the
13:19 - lock so this one is now valid on
13:21 - blockchain but again it's a very recent
13:23 - block so you cannot 100 trust it just
13:26 - yet
13:27 - since network consensus is based on the
13:29 - chain link then the older the block is
13:30 - the more you can trust it since there's
13:32 - more proof of work
13:33 - so again when it's the very last block
13:35 - you can't trust it
13:36 - when it's now the second block and chain
13:38 - then you can start to trust it a bit
13:39 - more
13:40 - then after three maybe it's trustworthy
13:42 - and when it's maybe five or six blocks
13:44 - behind
13:45 - then at that point he can be pretty
13:47 - confident that that is the true set of
13:48 - network
13:49 - now let's try to understand how
13:51 - everything that we have set up here
13:52 - makes for a very secure system that
13:54 - cannot be modified
13:56 - so here for example we have alice and
13:57 - bob and a bunch more users on the
13:59 - network
14:00 - now alice decides to send bob 50
14:02 - bitcoins to buy a car or something so
14:04 - analyst sends bob
14:05 - 50 btc so makes that transaction adds it
14:08 - into the pending pool
14:09 - then a bunch of miners are going to mine
14:11 - it they're going to find a found hash
14:12 - and they're going to add it to them
14:13 - watching
14:14 - so everything is good now bob follows
14:16 - what i said in the
14:17 - last demo and only since the car after
14:19 - the block is a couple of blocks old
14:21 - so a bunch more blocks are mined and
14:23 - added onto the blockchain
14:25 - and after a few have been added now bob
14:27 - finally sends the car
14:28 - now as soon as alice hears that bob's in
14:30 - the car now she tries to be sneaky and
14:32 - modify the blockchain and to only send
14:34 - just 10 bitcoins
14:36 - so she goes into her own blockchain
14:37 - modifies instead of setting 50 just
14:39 - sending 10.
14:40 - now again like we saw previously
14:41 - modifying the data caused they change in
14:43 - the hash which means that this node has
14:45 - to be mined all over again
14:46 - and of course since each hash is using
14:48 - the next block then all of these ones
14:50 - need to be bind again as well
14:51 - and again the network consensus is based
14:53 - on the longest chain
14:55 - so what that means is that in order for
14:57 - analysts to cheat bob and modify the
14:59 - blockchain
15:00 - she would have to make modifications and
15:02 - mine all of these blocks herself
15:04 - before the entire rest of network mined
15:06 - some more blocks
15:07 - so what that means is that it's
15:08 - technically possible for alice to modify
15:10 - the blockchain and cheat the system
15:12 - but in order to do that she would need
15:14 - to control the majority of the mining
15:15 - power on the network
15:17 - this is what you might have heard
15:18 - referred to as a 51
15:20 - attack essentially if you controlled 51
15:23 - of the network then your fake chain
15:24 - would have more mining power which would
15:26 - eventually surpass the real chain
15:28 - which would in turn make your fake chain
15:30 - the real accepted chain
15:31 - so this is what gives blockchain its
15:33 - security every block is completely
15:35 - immutable and cannot
15:36 - ever be modified as long as there is no
15:38 - single actor with a majority of control
15:40 - of the network
15:41 - which given the current size of the
15:43 - bitcoin blockchain makes it pretty much
15:45 - impossible for someone to control that
15:46 - much mining power which in turn makes it
15:48 - extremely secure
15:50 - so when you put all the steps that we
15:52 - just saw together we end up with a basic
15:54 - working blockchain
15:55 - everything you see in the crypto space
15:56 - is really just various use cases built
15:58 - upon the same base
16:00 - so for example in the context of bitcoin
16:02 - the blockchain is used to store
16:03 - transaction data
16:05 - you have wallets with some keys used to
16:07 - validate that you have
16:08 - access to a particular wallet with a
16:09 - particular amount of bitcoins
16:11 - then you also have the rate at which
16:12 - bitcoins are introduced into the system
16:14 - they are given as rewards to miners and
16:17 - after a fixed number of bitcoins are
16:18 - created then network will transition to
16:20 - working on mining fees
16:22 - another popular network is the ethereum
16:24 - blockchain which instead of just
16:25 - transaction data
16:26 - it also uses smart contracts to run code
16:28 - directly on the blockchain
16:30 - the code can then do all kinds of things
16:32 - like wait for a particular condition to
16:33 - be fulfilled and automatically transfer
16:35 - funds from one account to another you
16:37 - might also have heard of nfts which
16:39 - again they're just data stored on the
16:41 - blockchain so in this case it's a sort
16:42 - of unique token that represents
16:44 - ownership of a particular thing
16:46 - so essentially with all this you now
16:47 - have a better understanding of how the
16:49 - basics of the blockchain works
16:51 - you can now go and learn about some more
16:53 - advanced topics like for example how
16:55 - account balance works in bitcoin
16:57 - so what are wallets and what are public
16:59 - and private keys
17:00 - and how they are used to secure the
17:01 - wallet as well as signing transactions
17:04 - you can also go research other consensus
17:06 - methods beyond proof-of-work
17:08 - so proof-of-stake is one of the main
17:10 - alternatives which has the huge benefit
17:12 - of massively cutting down on energy
17:13 - usage as compared to proof-of-work
17:16 - smart contracts which is the main
17:17 - difference between bitcoin and someone
17:19 - like ethereum
17:20 - it's a way to run code directly on the
17:21 - blockchain tokenomics which is how each
17:24 - cryptocurrency handles their token
17:26 - so how new tokens enter the system how
17:28 - or if they are burned
17:30 - how much do the funders hold and so on
17:32 - layer two which is how you build a
17:34 - blockchain on top of another blockchain
17:35 - in order to solve some transaction
17:37 - volume problems and so on
17:39 - so as you can see blockchain is a
17:40 - massive new technology and if you want
17:42 - to go deeper you can learn much more
17:43 - about it
17:44 - okay so that's it if this video helped
17:46 - you then please hit the like button it's
17:48 - a tiny thing but it really does help
17:50 - the more i learn about blockchain
17:52 - technology the more i'm fascinated by
17:53 - all of the possible use cases so
17:55 - definitely look forward to some more
17:56 - interesting blockchain videos in the
17:58 - future
17:59 - alright hope that's useful check out
18:00 - these videos to learn some more
18:02 - thanks to these awesome patreon
18:03 - supporters for making these videos
18:05 - possible
18:06 - thank you for watching and i'll see you
18:07 - next time
18:16 - you