00:00 - in this video we're going to make a
00:01 - simple shop in unity we're going to have
00:03 - some currency and create the UI to be
00:05 - able to buy various items and weapons
00:07 - let's begin
00:11 - [Music]
00:15 - hello and welcome I'm your code monkey
00:18 - and this channel is all about helping
00:19 - you learn how to make your own games
00:21 - with nf2 torrents made by a professional
00:23 - indie game developer so if you find the
00:25 - video helpful consider subscribing okay
00:27 - so this is our goal over here I have my
00:29 - player character just walking around if
00:31 - I go down here then some enemies get
00:33 - spawn and I can attack and kill them and
00:35 - as I come to them as you can see I'm
00:37 - getting some gold ok and now up here we
00:39 - have a nice building and as I approach
00:42 - the building there you go the shop
00:43 - interface shows up you know here I can
00:46 - spend my hard-earned gold so currently
00:48 - we have 85 and we have some items that
00:50 - we can purchase so for example I can buy
00:53 - this armor so I click on it and there
00:55 - you go I have consumed some gold and now
00:56 - I have a new armor the way the armor
00:59 - changes is by modifying textures in
01:01 - runtime and you can see how it's done in
01:03 - the modular spreadsheets video so here I
01:05 - have my new armor but the only thing I
01:07 - can afford now is the health potion so
01:10 - you can see I currently have one and I
01:11 - can consume it and there you go I've
01:12 - consumed it and now I currently have 0
01:15 - and if I click there you go now I have
01:16 - one and I cannot click anymore there you
01:18 - go I cannot afford it so I can't afford
01:21 - anything else so now I can go down
01:23 - sponsor more enemies kill them and get
01:25 - some more gold and there you go all
01:32 - right so I have killed a ton of enemies
01:34 - now I have a whole bunch of gold now I
01:36 - go back into the shop and now let's
01:38 - equip then you armor stereo I bought it
01:40 - and my gold went down and buy the new
01:42 - sword and new helmet and they're days
01:45 - just like that and again when I cannot
01:47 - afford something so for example I cannot
01:48 - afford to buy this armor again any click
01:50 - and we have the nice still tape warning
01:52 - which again was also made from scratch
01:53 - in a previous video so here we have a
01:56 - very nice game loop so I go down I kill
01:58 - some enemies the enemies drop some gold
02:01 - and again these pop-up items were also
02:03 - made in a previous video so as I killed
02:05 - them I got some nice gold icon so that
02:07 - was made in the damaged pop-up video so
02:10 - I can get some gold go back into the
02:12 - shop and spin it to buy some items
02:14 - alright so this is our goal let's get to
02:17 - it ok here's our starting scene I have
02:19 - my player character here walking around
02:21 - and if I go down here some enemies get
02:24 - spawned and
02:25 - attack me and I can attack them as I
02:26 - kill them as you can see I'm gaining
02:28 - some gold and there you go I got some go
02:30 - and if I go up here there you go I have
02:33 - my shop building okay so let's make our
02:36 - shop you want so here in our scene let's
02:38 - go into the canvas create an empty game
02:41 - object call this the new wine shop now
02:44 - inside let's make a template for each
02:46 - item in our shop so first we make a
02:49 - container to call all of our templates
02:51 - and inside we create an empty game
02:54 - object call this our shop item template
02:57 - and now here just filled it up alright
03:16 - so here is our template so we have a
03:19 - image for our item we have a text field
03:22 - for the item name a text field for the
03:25 - Adam cost and a simple gold icon so
03:28 - we're going to build our shop
03:29 - dynamically in runtime by duplicating
03:31 - this template for all of our items so
03:34 - let's make a script to handle our UI so
03:37 - in here we make a new c-sharp script
03:39 - call this our UI shop and drag it into
03:42 - our UI shop okay all right now in here
03:45 - let's populate our store
03:58 - okay so here four stars we grab the
04:01 - reference to our container and then
04:02 - inside our container we have the
04:04 - reference for our template and we start
04:06 - off with the template hidden all right
04:07 - so far so good now here in this project
04:10 - I have this simple item class so you can
04:13 - see very simple it just defines a bunch
04:15 - of item types then a function to get the
04:17 - cost and a function to get the sprite so
04:19 - the sprite is grout from the game assets
04:21 - class which I covered in a previous
04:23 - video essentially here in the editor
04:25 - there is a game object that contains the
04:27 - game assets script and over here we have
04:29 - all of our asset reference so in here
04:31 - you can see the armor the helmet the
04:32 - sword and so on so we can access this
04:34 - script we exit through a static instance
04:37 - and then our items return that instance
04:40 - containing the reference for that sprite
04:42 - okay so let's go into our shop and here
04:44 - let's instantiate a bunch of items so
04:47 - let's make a function to spawn a
04:48 - template with a given name sprite and
04:50 - price okay we have our function where we
04:58 - receive the item sprite the item name
05:00 - and the item cost so now in here what we
05:02 - do is we duplicate our item template
05:10 - okay so we instantiate our item template
05:13 - inside of our container then we grab the
05:16 - rect transform and now we need to
05:17 - position it correctly
05:29 - okay so here we have our function we
05:32 - also receive a position index in order
05:33 - to locate it correctly so when we do is
05:35 - modify the anchored position by a
05:38 - certain item height multiplied by the
05:40 - index and then we simply set the item
05:42 - name and the cost text as well as the
05:45 - item image okay so we have to do is call
05:48 - this a bunch of times up here so let's
05:50 - do it on our start so we create an item
05:54 - button let's go into the item and call
05:57 - get sprite then let's say we start off
05:59 - with the first armor so we get the
06:02 - sprite then also get the name and so on
06:09 - alright so like this we should be able
06:11 - to see our shop correctly populated with
06:14 - two armor types
06:15 - let's see any of there's our two armor
06:18 - types displayed in our store right
06:19 - awesome now let's fill it up with the
06:21 - rest of the items
06:32 - and your peers are sharp with all of our
06:35 - items right great so far so good
06:37 - now right now the shop isn't really
06:39 - doing anything so if I click on anything
06:41 - nothing happens so let's sort that for
06:44 - that we modify our templates so in here
06:46 - we go into our template and to make this
06:49 - into a button let's add the button UI
06:51 - script so the button UI this script is
06:56 - part of the code monkey utilities which
06:57 - you can grab for free from unity Comic
06:59 - Con this is a very basic script that
07:02 - already has a bunch of button behavior
07:04 - feel free to make your own button script
07:06 - or use the default E&T one either way it
07:08 - works
07:08 - so here back in the script when we
07:10 - create our item button let's also grab
07:13 - the button code so getcomponent of type
07:16 - button UI and then we set the click
07:19 - function to be something so for here we
07:24 - have clicked on the item shop button so
07:27 - here let's make a function to buy this
07:28 - item type so actually in here we receive
07:31 - all this and let's also receive the item
07:33 - type okay so we have the atom type and
07:41 - then when we click let's call it
07:43 - function call try by item and pass in
07:46 - our item type so let's make this one in
07:49 - here okay so we have this function being
07:55 - called whenever we click on an item on
07:57 - the shop so now here is where we need to
07:59 - answer some questions regarding code
08:01 - architecture now we could make this
08:03 - class interact directly with a player
08:05 - and give him the item directly that
08:07 - would work but then our code would
08:09 - become title e coupled with a specific
08:11 - player class so by clicking on that we
08:13 - could for example call this function
08:15 - directly which again would work but
08:17 - would be tightly coupled with this
08:19 - specific instance of this player class
08:20 - so this shop would not work with a
08:23 - different player class so we want to
08:25 - make sure that this specific class is
08:27 - not directly used by our shop so in
08:29 - order to keep those separate we have a
08:31 - bunch of options for example we could
08:33 - use events to fire off when someone buy
08:35 - something from the shop or another
08:37 - approach is to use an interface so in
08:39 - this scenario let's use the interface so
08:42 - back in our editor and let's create a
08:44 - new C sharp
08:45 - call this the I shop customer and open
08:49 - it up okay so now in here first we
08:52 - define this as an interface and not a
08:54 - class so in here we have public class
08:56 - and now we're going to have a public
08:58 - interface and normally all the
09:01 - interfaces start with name with I so we
09:04 - have our I shop customer and now here if
09:06 - you're not familiar with interfaces they
09:08 - are very simple all we have to do is
09:10 - define the functions that this interface
09:12 - won't implement however we do not
09:14 - include any implementation whatsoever so
09:16 - in here we just add a void call it bot
09:19 - item and passing the item item type and
09:23 - that's it this is all we put in an
09:26 - interface so now on our shop we can
09:28 - receive an object of this type so up
09:30 - here and let's define a feel for who is
09:32 - currently using the shop so I shop
09:35 - customer and let's call it shop customer
09:37 - and now down here when we have this
09:39 - function to try to buy an item we can go
09:42 - into our shop customer and calm watch
09:43 - item and just like that we have our shop
09:47 - working with the shop customer interface
09:49 - the benefit of this is that the shop
09:51 - only cares that the object use here
09:53 - implements our shop customer interface
09:55 - so it doesn't care about the rest of the
09:58 - customer object all it cares is that it
10:00 - implements this interface which
10:01 - implements these functions so now we can
10:03 - make this specific player class
10:05 - implement that specific interface so we
10:07 - have we implement the I shop customer
10:09 - and now we need to implement that
10:11 - interface so there you go we have our
10:13 - bot item function and in here and let's
10:16 - just do a debug dot walk okay so far so
10:22 - good now the last thing we need is to
10:25 - connect this player on to our shop so
10:28 - we're going to make that connection when
10:29 - we also show the shop so in here let's
10:32 - make a public void call it just show and
10:35 - when we show the UI shop let's pass in a
10:38 - I shop customer
10:44 - all right so when we show we set our
10:47 - film for the shop customer which we use
10:49 - in here and we simply set the game
10:51 - object to active and on hide we set it
10:53 - to inactive so for starters let's start
10:55 - off hidden so create the buttons and
10:58 - then we hide our game object okay we're
11:01 - almost done with this now let's see
11:02 - where we're going to call this function
11:03 - to show our shop for that let's go here
11:06 - back in the editor and let's create an
11:09 - empty game object let's call this the
11:11 - shop trigger area and inside we add a
11:15 - box Collider 2d so there it is make it a
11:18 - trigger and let's stretch it out to
11:20 - occupy about that area okay so when the
11:23 - player enter is this area this shop will
11:25 - appear when he exits it won't hide
11:27 - itself so now let's make the script to
11:29 - handle this so we make a new C sharp
11:32 - script call this our shop trigger
11:34 - Collider and let's wreck it in there
11:38 - okay okay so now inside the script we
11:41 - just had the functions to handle our
11:42 - collisions so we just make a
11:44 - ontriggerenter 2d so when I call that
11:48 - our enters inside of this trigger then
11:51 - let's try to grab a shop customer so we
11:59 - try to grab a shop customer from the
12:00 - collider that collided with this trigger
12:02 - and if it is not known then that means
12:05 - that's something that is a valid
12:06 - customer has entered inside of this
12:08 - trigger so in here we want to show the
12:10 - store so we need is a reference to our
12:12 - shop so in here let's add a zero noise
12:15 - film for our UI shop and then here we
12:21 - simply call show and repassing this shop
12:23 - customer so now let's do the same thing
12:26 - for hiding ok so when we have the
12:33 - trigger exit we hide our shop all right
12:36 - so now all that's left is to drag this
12:37 - reference so here in the editor we have
12:40 - our script to the field for our UI shop
12:42 - so let's simply drag this reference
12:44 - right in there right that's it and again
12:46 - remember we're working with triggers so
12:48 - in here make sure that the collider is
12:50 - set to trigger okay let's test okay so
12:53 - here we are and as you can see the shop
12:55 - starts off as hidden but as I approach
12:57 - and there you go the sharp shows up and
12:59 - if I leave and there you go the shop
13:00 - hides itself all right awesome so just
13:03 - like this we have everything working and
13:04 - again we are not working directly with a
13:06 - specific player class but rather with an
13:08 - implementation of a certain interface so
13:11 - we could easily make this work with a
13:12 - player or with NPCs or with anything
13:15 - okay so now let's him only by behavior
13:18 - so over here is my constant so we can
13:20 - see so for example let's go in here and
13:22 - I'm going to click on the helmet and
13:24 - there you go we have our log saying we
13:26 - bought our element so we have our shop
13:28 - correctly showing and hiding and we can
13:30 - now interact with the specific customer
13:32 - awesome so again we're using an
13:34 - interface to keep our shop nice and
13:35 - clean and we're using a simple trigger
13:37 - to display the shop when a customer
13:39 - enters and we hide the shop when a
13:41 - customer exits so as you can see thanks
13:43 - to our interface we could easily pour
13:45 - this code into any game we just need
13:47 - customers to implement the interface and
13:48 - everything works all right so let's
13:51 - continue know in order to spend some
13:52 - gold let's go into our interface and add
13:55 - another function so we're going to
13:57 - return a boolean and we're going to call
13:59 - this try spend gold amount I'm going to
14:02 - receive an int or the equal to not right
14:07 - so here we have a function where we're
14:08 - going to pass in a certain gold amount
14:10 - and it's going to return true if we can
14:12 - spend it and false if we cannot so now
14:14 - we implement this into our player so
14:16 - here's our shop customer and let's
14:18 - implement the rest of it so here we have
14:20 - try to spend our condiment
14:22 - so we do is very simple over here the
14:25 - player already has a function to get the
14:27 - gold amount so if the gold amount is
14:30 - bigger than our spend going along then
14:33 - we can simply spend it so you reduce our
14:36 - current gold amount by the spend gold
14:37 - amount and then for the UI to work we
14:40 - need to fire off the event so over here
14:42 - as you can see on gold amount change so
14:44 - we simply far off this
14:47 - so in here we were able to spend it so
14:50 - we return true and if not then we cannot
14:52 - afford to spend this much bone so we
14:53 - return false
14:55 - all right so again we have defined a new
14:58 - function in our interface and we
14:59 - implement it in our player and now we
15:02 - can go into our shop script and in here
15:05 - when we try to buy an item we don't buy
15:07 - it directly right away but instead first
15:09 - we go into the customer and we ask if we
15:11 - can spend this much gold amount so go
15:14 - into the item and get the cost for this
15:16 - item type so if we can't afford the cost
15:21 - and finally we do buy the item ok so
15:24 - just like this the goal should be
15:26 - working and now when the player let's
15:28 - also handle what item we bought so we're
15:31 - here on we're doing is doing a debug log
15:33 - but now let's actually use these
15:35 - functions in here in order to set our
15:37 - active item and armor alright so here
15:51 - we're just doing a switch on our item
15:53 - type and then calling the functions that
15:55 - I have prepared previously so for
15:57 - example the equal partner that's going
15:59 - to modify some pixels on the spreadsheet
16:00 - which you can find out how it works on
16:03 - the modular spreadsheet series so go
16:05 - check out those videos to see how those
16:06 - work and everything else is pretty
16:08 - simple so let's test and we should be
16:10 - able to see spending our count correctly
16:12 - and buying and equipping our items ok so
16:15 - here we are now let's head to the store
16:17 - and there you go the store showed up now
16:19 - let's see if we can afford anything so I
16:21 - click and there you go nothing actually
16:23 - happens we currently have 0 count so
16:26 - obviously we can't afford anything
16:27 - so now let's leave the store and try to
16:30 - buy and kill some enemies and there you
16:32 - go so kill a bunch of them there you go
16:33 - getting some goals I'm going alright
16:35 - great we have some gold now let's go
16:37 - back into our shop there it is now let's
16:40 - try to buy the first armor and let's see
16:42 - if the sprite changes and click and
16:43 - there you go we consumed three gold and
16:46 - we equipped our new Hartmann now let's
16:48 - try buying a health potion and there you
16:49 - go now we have two and if I consume one
16:51 - there you go consumed now another one
16:53 - and now I have zero and again now
16:55 - there's no more gold so I can go back
16:58 - down
16:59 - and see some more enemies and kill no
17:00 - more and get some more gold and there
17:02 - you go keep shooting them yep I can go
17:05 - all the way up here and I have some more
17:07 - gold so now let's try to buy the helmet
17:09 - and there you go consumed 90 gold and I
17:11 - have equipped my helmet alright so just
17:13 - like this we can spend our gold and buy
17:15 - some items awesome now one simple thing
17:18 - is for example in here
17:20 - we cannot afford anything but if I click
17:22 - there's no feedback to the player so
17:24 - let's add a simple warning taunted now
17:26 - here in my canvas I have this tooltip
17:28 - warning object which contains this
17:31 - script this was fully made in scratch in
17:33 - the tooltip series so go check that out
17:35 - then here in our shop we can reuse our
17:37 - taunted warning in order to tell the
17:39 - player what's going on so if we cannot
17:41 - afford it then let's use a tooltip
17:43 - warning and call show and simply say
17:48 - cannot afford it
17:52 - alright that's it so we should now be
17:54 - able to give some feedback to the player
17:56 - so here we are with zero gold then we go
17:59 - up here and let's try to buy some armor
18:00 - and there you go we cannot afford 100
18:02 - gold alright awesome so we have some
18:04 - nice feedback and again we made this
18:06 - whole thing completely from scratch in a
18:08 - previous video so go check that out and
18:10 - just like this we already have pretty
18:12 - much our complete game look so we go out
18:15 - some enemies at spawn and we can attack
18:17 - and kill them for every enemy we kill we
18:20 - get some gold once we have captured some
18:21 - gold we can go all the way up here and
18:23 - we can buy some new armor some new
18:26 - health potions then go down here consume
18:28 - the health potions kill some more
18:29 - enemies get some more gold buy some more
18:30 - items and so on and just like this we
18:33 - have a very simple but working game loop
18:35 - with a working game store and again the
18:38 - whole thing is written in a pre simple
18:40 - way using a very nice interface so this
18:42 - would be extremely easy to apply to any
18:44 - type of game as always you can download
18:46 - the project Rosina tony's from antigua
18:48 - Montcalm subscribe to channel for more
18:50 - TNT tutorials post any questions it has
18:52 - me comments and I'll see you next time
18:56 - [Music]