00:00 - in this video we're going to have a
00:01 - custom editor script and set it up so
00:03 - that we can click on objects this
00:05 - coupled with some gizmos allows us to
00:07 - create some awesome easy-to-use tools in
00:09 - this case we're going to test it out by
00:11 - quickly building a scripted cutscene for
00:13 - our game once we
00:17 - [Music]
00:21 - hello and welcome I'm your code monkey
00:24 - and this channel is all about helping
00:25 - you will learn how to make your own
00:27 - games with enough tutorials made by a
00:29 - professional indie game developer so if
00:30 - you find the video helpful consider
00:32 - subscribing okay so once again I've been
00:34 - working on the code monkey steam app if
00:36 - you haven't done it yet then click the
00:38 - link in the description to add it to
00:39 - your wishlist now I need do a ton of
00:41 - scripting so I started researching how
00:43 - to build a nice and easy tool now in a
00:45 - previous video I already covered how to
00:47 - make a custom editor script in that one
00:49 - we will learn how to create the custom
00:51 - inspector to show the fields exactly as
00:53 - we want it on with some really nice home
00:54 - from gizmos and now here we're going to
00:57 - expand upon that and add a simple button
00:59 - to each film that won't let us click to
01:01 - select our objects okay so let's check
01:03 - out our goal and then we're going to
01:04 - build it now over here is my scene and
01:07 - in this script I have the custom action
01:09 - script and we made in the previous video
01:10 - so with this I can script a whole bunch
01:13 - of different actions so for example
01:15 - let's say I want to make a little
01:16 - scripted cutscene so I want this
01:18 - character here to come here open the
01:20 - door then move here then see something
01:22 - then this one then this one requires and
01:23 - the first one goes away and close the
01:25 - door so it's a relatively simple
01:26 - scripted scene and thanks to the awesome
01:28 - custom inspector it will be very easy to
01:30 - do so first I have my custom action
01:33 - script and right away we see the custom
01:35 - inspector that we made in the previous
01:36 - video now here what's like the type of
01:38 - move action and now there's a field for
01:41 - the unit game object and over here we
01:43 - see a very nice custom button so as I
01:45 - click on it yep there's a message
01:46 - telling me to collect this unlike the
01:48 - unit move position and now the custom
01:50 - editor is in a clickable mode and if I
01:52 - mouse over a valid unit if there you go
01:55 - I can see a nice highlight so this one
01:56 - is valid and I click on it and there you
01:59 - go the unit gets on like automatically
02:00 - and this field is set so using this
02:02 - method I didn't need to look at the
02:04 - hierarchy at all I just looked at the
02:06 - fields click the button then visually
02:08 - clicked on my scene and all the films
02:09 - were set so as you can see this mixer
02:12 - are nice too only extremely simple and
02:13 - easy to use
02:13 - alright so let's continue filming the
02:16 - scene this one will move here okay then
02:19 - let's make another action this one won't
02:21 - be of type door so once again there's a
02:22 - button to visually select door so click
02:24 - on it and now I highlight the door and I
02:26 - click on it yep there you go it's
02:27 - selected this one will open and then the
02:30 - move action also has the own reach
02:31 - position which takes a custom action so
02:33 - once again
02:34 - button visually click on the door action
02:36 - and there you go he goes straight into
02:38 - that one so you can see how all of this
02:40 - is very visual and there's no need to
02:42 - look in the hierarchy at all so now I'm
02:44 - going to very quickly build out the home
02:46 - scripted cutscene all right so here it
03:01 - is in just a few seconds I managed to
03:03 - make a really complex cutscene
03:04 - let's try it out so there it is heard
03:07 - off with down he goes in there
03:08 - opens door now he moves in there he says
03:10 - his message Devon moves up says the
03:13 - other message then down moves away and
03:14 - finally closes the door alright awesome
03:17 - so here we have a really nice simple
03:19 - cutscene and he saw how easy it was to
03:21 - build thanks to our custom editor
03:22 - inspector along with the ability to
03:24 - visually click to select objects you can
03:26 - see how this greatly improves your
03:28 - productivity without this tool it would
03:30 - have taken me something like 30 minutes
03:32 - to script this cutscene but in this case
03:34 - since I took the time to build a custom
03:35 - tool it literally took me just 60
03:37 - seconds to build this whole cutscene of
03:39 - it thanks to a custom inspector custom
03:41 - gizmos and capturing clicks in the
03:43 - scenery
03:44 - this videos patreon sponsor is bad
03:46 - Adventure bad adventurer is a game
03:49 - development duo currently working on
03:50 - their first game Wayfarers edge it's a
03:53 - RPG focused on exploring and settling
03:55 - unknown frontier lands in a low fantasy
03:57 - and Wild West theme check them out at
03:59 - bat adventure calm thank you to the
04:01 - patreon sponsor and thank you to these
04:03 - awesome supporters for making this video
04:05 - possible go to patreon.com/scishow
04:08 - code monkey to get some perks and help
04:09 - keep the videos free for everyone
04:11 - alright so this our goal let's get to it
04:13 - okay so here we are in our starting
04:16 - theme this is where we left off on the
04:18 - custom inspector video so we already
04:20 - have a custom action with a custom
04:22 - inspector script so by itself this is
04:24 - already very nice and very versatile
04:26 - tool however in order to use it we need
04:28 - to identify objects and drag their
04:30 - references so for example let's say I
04:32 - want to use an action to move this
04:34 - character over here so first I go into
04:37 - the action types and lightly move and
04:39 - now here I have my field so I have to
04:41 - select the unit game object so first I
04:43 - need to identify it so let me click on
04:45 - it and there you I can see that it's
04:47 - this one now
04:48 - have to memorize this name so it's a
04:50 - unit one now select it again
04:52 - now click on this one drag it on and
04:54 - drag it on there alright so this is how
04:55 - it is
04:56 - now let's improve this home process by
04:58 - seeing how we can capture clicks in the
04:59 - editors name that way I can click on
05:01 - some random button in here then visually
05:03 - click on noun and it automatically fills
05:05 - the field okay so to do that let's first
05:08 - open the custom editor script right here
05:10 - the custom action editor okay now in
05:12 - order to do this we're going to need to
05:14 - do it down here on the on scene GUI now
05:17 - this function gets called when the
05:18 - object is selected and the scene GUI
05:20 - updates so here we are already handling
05:23 - with the position handle for the move
05:24 - position so down here you can see it in
05:27 - action when I select this action and
05:29 - it's a move type yep there's a nice move
05:31 - handle to set the move position so
05:33 - that's what this code is doing and here
05:35 - now the first thing we're going to do is
05:36 - grab the current event so we're going to
05:38 - given dot current
05:41 - and now here since we want to capture
05:43 - clicks let's test if the event dot type
05:46 - is of type and I'll here one thing in
05:49 - theory we want the mouse up but just for
05:52 - testing let's first test onmousedown so
05:56 - on let's rock let's test okay now
06:02 - i'm like i said that function only runs
06:04 - when the object is selected so if it's
06:06 - not selected I click yep there's nothing
06:08 - on the console so I need to first unlike
06:10 - the object that contains the custom
06:12 - action and now if I click if there you
06:14 - go there's a mouse down event so just
06:16 - like this we are capturing mouse clicks
06:18 - with our editor script all right awesome
06:20 - now here's the reason why I test with
06:22 - mouse down insert mouse up has to do
06:24 - with how the selection works so if I put
06:26 - mouse up which is how we should capture
06:28 - our clicks except if I do it right here
06:31 - and I can I can now let go and if
06:32 - there's no message that is because first
06:34 - the object gets D selected and then that
06:36 - function no longer runs so we don't have
06:38 - our message so the next thing we need to
06:40 - learn is how to pull up clicks so here
06:43 - let's first test blocking clicks if the
06:46 - e
06:46 - control is down so if we press E control
06:49 - key then we don't want our object to be
06:50 - deselected and now the way that we
06:52 - bought clicks is going into the handle
06:54 - and utility add a default control and we
06:58 - grab the default control
07:04 - all right so this tells the editor to
07:07 - use the default control which causes it
07:08 - to not change selection and if we go
07:10 - back okay so if I sound like the object
07:12 - and click away
07:14 - yep there you go the clicks tongue works
07:15 - as normal but now if I do it well
07:17 - pressing control and nope there you go
07:20 - it no longer decent less the object and
07:21 - right here in the console you can see
07:23 - that our mouse up is now correctly being
07:25 - triggered so this is how we're going to
07:26 - stop unity from decent lightening our
07:28 - objects and instead capture the clicks
07:30 - to do whatever object we want okay so
07:32 - now that we can capture our clicks it's
07:34 - time to actually test if we're
07:36 - collecting on top of something valent
07:37 - now there are mainly two ways that we
07:39 - can find what the object were clicking
07:41 - on if the object has a Collider then we
07:44 - can use the physic system and if it does
07:46 - not have a Collider then we need to do
07:48 - some trickery with positions now in here
07:50 - all the objects that we want are using
07:51 - quieter so let's go with the simplest
07:53 - physics system method so let's fire some
07:55 - recasts back in our code down here on
07:58 - the unseen GUI let's first get our ring
08:01 - so our way we go into the handle utility
08:03 - and we do a GUI point to world break
08:06 - passing the mouse position then we do a
08:11 - normal way cast okay here it is and then
08:18 - we just do a debug log upon the amount
08:20 - of hits
08:21 - so in here dot point all right so we
08:24 - should be constantly doing array and I
08:25 - didn't find what's underneath the mouse
08:27 - position let's see and it right away we
08:30 - can see the console updating so if I aim
08:32 - towards nothing yep there's a zero
08:34 - there's no raise nothing being hit and
08:36 - if I mouse over the ground which does
08:38 - have a Collider yep there you go and I
08:40 - mouse over the wall and there you go and
08:42 - on door and so on all right great
08:44 - so now that we have our recast working
08:46 - let's add a very nice visual now to do
08:49 - that first let's take on through all of
08:50 - our hits and now here let's draw a wire
08:56 - cube around the corner that this hit
09:03 - all right so we should be able to see a
09:06 - weary queue right on top of the camera
09:07 - that was hit
09:08 - okay here we are as I mouse over the
09:10 - ground if there you go there's the water
09:12 - keep on top and there's a wall another
09:13 - wall and a part of the door and so on
09:15 - all right
09:16 - great so just like this you can
09:18 - definitely see the object that I'm
09:19 - hovering over now here if you're
09:21 - following along depending on how you set
09:22 - up your scene you might be seeing a
09:24 - potential issue here so right now as you
09:26 - can see everything is updating nicely
09:27 - however depending on what you have near
09:30 - scene this might not be as responsive
09:32 - meaning maybe you move the mouse around
09:33 - and it takes a while to update the
09:35 - actual drawn wire queue now the reason
09:37 - for that is due to how the scene view
09:39 - works the scene view only renders when
09:41 - something changes so back in this code
09:44 - this function will only get called when
09:45 - it absolutely needs it so if you do have
09:48 - that issue then one simple solution is
09:50 - to call scene view the repaint on this
09:54 - won't force the scene view to repaint
09:55 - and if you do that then the issues with
09:58 - unresponsiveness should be solved right
10:00 - great so now that we know what we're
10:02 - hovering over let's identify and filter
10:05 - our objects for starters let's say we
10:07 - want to capture just the unit's we want
10:09 - to be able to run our move action in
10:11 - order to do that the units need to have
10:13 - the move position component now this is
10:16 - the modular component that we built in
10:18 - the modular character video so let's use
10:20 - this as our filter here when we do our
10:22 - ray cast let's try getting the component
10:31 - so if this succeeds and that means that
10:33 - the game object that were hovering over
10:35 - does have a move position component so
10:37 - in this case it's a valid unit and if it
10:39 - is not then it should not show the wire
10:41 - cue all right so let's test okay here we
10:44 - are and as I move the mouse over the
10:46 - ground yep there's nothing on it since
10:47 - the ground does not have the move
10:48 - position component but if I mouse over a
10:51 - unit if they're gonna I can definitely
10:53 - see it all right so our code is now
10:55 - correctly identifying which objects are
10:56 - about okay so right here we have pretty
10:59 - much over logic nah let's just organize
11:01 - this nice and clean so appear and let's
11:03 - make a nice function okay here is our
11:06 - really nice and helpful function now it
11:08 - does exactly the same thing that we're
11:09 - doing previously and it's also set up to
11:12 - be made to work with any type we want
11:13 - which
11:14 - makes it very versatile now in here it's
11:16 - using generics and if you're not
11:18 - familiar or want to learn more then
11:20 - check the video linked in the
11:21 - description so we do a ray do a ray cast
11:23 - cycle through them check if they have
11:24 - the component and if so then we output
11:26 - with the component and also the collider
11:29 - and then down here we can just use it so
11:32 - instead of doing all this let's replace
11:33 - it with our function call alright so
11:43 - just like this and should be working
11:44 - exactly the same any up here it is it
11:46 - does not show anything on the ground but
11:48 - as I mouse over yep there it is alright
11:49 - great
11:50 - so this code covers our selection now
11:52 - let's also apply this to our clicks so
11:55 - we're going to use the mouse up event
11:56 - and when we do have the mouse up then
12:00 - let's once again test we grab the object
12:07 - over to recast and if there is something
12:09 - and then we need our script instance
12:11 - right here and we just set our
12:13 - parameters all right so that should do
12:18 - it so when we let go of the mouse we are
12:20 - going to set the field if it's on top of
12:22 - a valid position and in here if we are
12:24 - holding ctrl then we are not going to
12:25 - deselect our object okay so here we have
12:28 - our custom action let's make it up move
12:30 - and yep there we go that one is set to
12:31 - null and as I mouse over yep there you
12:34 - go it identifies that that one is a
12:35 - valid unit and if I press on the control
12:37 - key in order to not deselect and I click
12:39 - and there you go and I would correctly
12:41 - selected our unit so by visually
12:44 - clicking on the scene view we correctly
12:45 - set this field all right awesome now
12:48 - instead of having this mode active at
12:50 - all times let's use it by activating a
12:52 - button so in our custom inspector we
12:54 - have our inspector code and down here we
12:57 - have the line that shows all of our
12:58 - property fields so instead of showing
13:00 - the entire move pram see neuralyzed
13:02 - object will show them individually ok so
13:06 - it shows each one now let's put a button
13:08 - right next to the unit game object so
13:11 - for that let's first call the editor GUI
13:14 - in layout and let's begin a horizontal
13:17 - then we add our unicum object property
13:20 - field and then let's add a button
13:26 - so this one's fun a button with a plus
13:29 - sign in the small width and then we and
13:31 - the horizontal alright so just like this
13:35 - we should be able to see the button and
13:37 - if there it is we have our unique
13:38 - geologic film and right in there we got
13:40 - a nice button now let's add some code on
13:42 - the button so this function returns true
13:44 - when the button is pressed and if so
13:48 - then we want to enable our click mode so
13:50 - up here and let's define some signal
13:52 - fields so when we click let's set this
13:56 - one to true and now down here we're only
13:59 - going to highlight some like the ball
14:01 - okay if this one is true and we're also
14:04 - going to block the clicks only when this
14:06 - one is true and after we said there are
14:08 - field and we set this to false all right
14:13 - so this should be working okay here we
14:16 - are with our custom action let's first
14:17 - swap it onto a move action alright and
14:20 - it's set to no okay and if we click yep
14:22 - there you go the clicks are working as
14:23 - normal now we select it again and now
14:26 - it's like on the plus sign and now it
14:28 - should be boiling clicks and as I mouse
14:29 - over if there you go there's a selection
14:31 - now I click on it and there you go it
14:33 - filmed the field and now the Mazda
14:35 - vector no so I can click and yep decent
14:37 - like normal all right awesome so with
14:39 - this we have all of our click logic
14:41 - fully working now we need to do is just
14:43 - expand upon this by handling all of the
14:45 - various types so back in the editor
14:47 - script
14:48 - let's the finding room for all of our
14:50 - types all right so we have an in home
14:58 - for all of our types we store the animal
15:01 - type and then we also have an action so
15:03 - this is an action delegate to set our
15:05 - actual object now if you're not familiar
15:07 - with delegates check the link in the
15:08 - description then down here we set like
15:11 - this all true yes then we set the click
15:13 - to select type in this case we use the
15:16 - same one okay and then for the action we
15:21 - set it to a delegate
15:29 - all right so we didn't like this so this
15:31 - action will receive an object as a
15:32 - parameter and we're going to set in this
15:34 - case the move params that in-game object
15:36 - with our object as a game object so then
15:39 - down here we can make it work with any
15:41 - type first we do a switch on our click
15:45 - to select tank this is where we check
15:49 - the type that we're going to use in here
15:51 - now down here to do the same thing and
15:57 - instead of using this directly we're
16:01 - going to call the click to select action
16:03 - and then passing the object which in
16:05 - this case won't be the collider game
16:07 - object all right so this should still
16:09 - all be working exactly the same ok we
16:12 - have our custom action and no units
16:14 - selected no click on that one now some
16:15 - like don't know any of there go all
16:17 - right awesome
16:17 - it still works now it's applied to of
16:19 - type of another custom action so first
16:22 - we have another plus button on here on
16:24 - the on reach position action so we
16:37 - modify the click select type to select a
16:39 - custom action and then we set the move
16:41 - params on reach position to this object
16:43 - as a custom action and now down here
16:46 - first we handle the selection so this
16:49 - one really just means changing this one
16:52 - all right so we test if the mouse is
16:55 - over a custom action and we show I know
16:57 - down here handling the clicks we call
17:05 - the click to select action and we pass
17:06 - in this one all right so we just need
17:08 - one final thing which is all this is
17:11 - working using the physic system so that
17:13 - means that in this case Northlight
17:15 - something needs to have a cone weather
17:16 - so on the custom action let's also add a
17:18 - basic box Collider so just like that
17:22 - just so it's clickable right so let's
17:24 - make a different action
17:31 - all right so here I have a custom action
17:34 - to open this door so this one moves and
17:36 - now here we have the unreached position
17:37 - we have our nice plus button so click on
17:40 - it and I can click on this action any of
17:42 - there you go it goes from this one on to
17:44 - this one alright so here we have a very
17:46 - versatile very robust system it is built
17:48 - in such a way that we can make it work
17:50 - with any type so here you some how we
17:52 - add the two types now we just need to
17:54 - expand upon this to also enable clicking
17:56 - on doors and other objects and anything
17:58 - we want so I'm just going to finish
18:00 - adding all the rest all right so I've
18:16 - expanded the code to fit all the types
18:18 - so everything should be working so let's
18:21 - first start off with this action let's
18:23 - make it of type move all right here I
18:25 - have the various plus sign so for the
18:26 - NTA I click on plus yeah there you go
18:29 - there's also very nice label click this
18:31 - unlike the unit move position so I'm
18:32 - going to select this one and now I'm
18:34 - going to tell it to move here and now
18:36 - it's like this action let's make this of
18:39 - type door and there give the door also
18:41 - has a plus so click on it and select
18:43 - this door and now let's go from this
18:45 - move position and when reaches let's
18:48 - select two points like the door and
18:49 - there you just like that so very easily
18:51 - just by clicking on the scene view you
18:53 - can see that I have set up all the
18:55 - fields for these various custom actions
18:56 - and if we run our scene yep there's the
19:00 - end right there it goes in there any up
19:01 - opens the door alright awesome so now
19:04 - let's make a complex cutscene so first
19:07 - let's set up on the actions so we have
19:11 - that one moving then this one is also
19:12 - going to be a move it's going to move
19:14 - that unit and I was going to move it in
19:16 - here then we had another move action
19:19 - this time we're going to move this unit
19:21 - and we're going to move it in there and
19:23 - then we're going to have another action
19:25 - this won't be a chat bubble so a click
19:27 - and we're going to say a message on this
19:29 - unit it's going to say something
19:33 - then we have another one and I was going
19:36 - to be this unit generally to have
19:43 - another move action we need to move this
19:46 - one back in there and finally we're also
19:50 - going to have another door action and
19:51 - this time we're going to close all right
19:53 - so there's all the individual actions
19:55 - and now we just need to schedule them so
19:57 - that one moves into this one now this
19:59 - one when the door animation completes
20:00 - goes into this one so he moves there
20:03 - then after moving he moves the other one
20:05 - so he doesn't this one then this one
20:07 - says the chat bubble then this one the
20:09 - other one all right so just like this
20:11 - let's test
20:12 - all right the unit cows goes in there
20:14 - opens door now goes in there another one
20:16 - in there now he says a message no this
20:18 - one says this message now that one he
20:21 - was in there and yep he calls the door
20:22 - right awesome so here we have our very
20:25 - complex behavior working correctly and
20:27 - we built this in just a few seconds
20:29 - thanks to all of our awesome tools so
20:31 - here you will learn how to capture
20:33 - editor clicks and apply them to any tone
20:35 - we want
20:35 - in doing so we created this awesome
20:37 - custom editor script that lets us build
20:39 - some really complex rooted behaviors
20:41 - extremely easy this is just one small
20:43 - example of the use case for a custom
20:45 - script by making a custom inspector with
20:47 - interactive buttons and clicking on the
20:49 - scene you can apply this to any tool you
20:50 - have in your games
20:51 - so go ahead apply this here games to
20:54 - greatly increase your productivity check
20:56 - out the code monkey upon Steam
20:58 - interactive tutorials complete games and
21:00 - more click knowing the description and
21:02 - add it to your wish list this video is
21:04 - made possible thanks to these awesome
21:05 - supporters go to patreon.com/scishow
21:08 - code monkey to get some perks and help
21:10 - keep the videos free for everyone as
21:11 - always you can download the project
21:13 - fountain utilities from unity code
21:14 - Montcalm subscribe to channel for more
21:17 - unity tutorials posting the cursor in
21:19 - the comments and I'll see you next time
21:21 - [Music]