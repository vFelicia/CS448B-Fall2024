00:00 - hello and welcome I'm your code monkey I
00:02 - recently announced that I'm working on
00:04 - my next team game it's called turtleworm
00:06 - Liberation go ahead and add it to your
00:07 - wishlist in the announcement video I
00:09 - talked about how this idea came about
00:11 - how I've been wanting to get back to
00:13 - making a complete game for quite some
00:14 - time and how earlier this year I spent
00:16 - several months working on my turn-based
00:18 - strategy course then when I had the idea
00:20 - of continuing from what I built there to
00:22 - make a phone game I thought that was a
00:23 - great plan it's great for me because
00:25 - well first of all it's an idea in the
00:27 - genre that I enjoy and I would love to
00:28 - explore some more and it's also great as
00:30 - content for you the viewer to see a
00:32 - practical use case of how you can take
00:34 - whatever knowledge you gain from
00:35 - following whatever cars you have
00:37 - completed take that final project and
00:39 - continue building upon it to make
00:40 - something unique and interesting you
00:42 - won't see how the funnel game will be
00:43 - very different from what you see in the
00:45 - course it will look like a completely
00:46 - different game despite being built upon
00:48 - the same base I officially announced the
00:50 - game after I was certain that this was
00:52 - the idea that I want to pursue and after
00:53 - building quite a lot of things so here
00:55 - let's see everything that I've done in
00:57 - that time this devlog is actually quite
00:59 - a bit longer than I would like because I
01:00 - end up building so many mechanics and
01:02 - systems so quickly
01:03 - and stick around to the end where I'm
01:05 - going to mention something that I tried
01:07 - which might help you if you're in the
01:08 - habit of stopping projects in the middle
01:10 - of finishing just like me pausing
01:12 - development of this game to get back to
01:13 - doing regular videos also since one of
01:15 - my main goals with this devlog series is
01:17 - phone transparency throughout the entire
01:19 - Dev process in the announcement video I
01:21 - asked you to wish list the game wish
01:22 - lists are extremely important nowadays
01:24 - if you want to be successful you really
01:26 - need to launch with a good amount of
01:27 - wishlists otherwise your game won't be
01:29 - buried between the dozens of games that
01:31 - come out every single day on scene that
01:34 - is why I waited to have the steam page
01:36 - up and running with a phone trailer
01:37 - before I announce a game in the
01:39 - announcement video I asked you to
01:40 - wishlist game and as of right now the
01:42 - game already has over 3000 wishlist
01:44 - which is a huge amount so thank you all
01:46 - so much in the video where I did the
01:49 - math you can't let the gongs the smaller
01:50 - gong was 10K wishlist and the absolute
01:52 - bare minimum was 5K so already in just
01:55 - about a month it hit over half of the
01:57 - absolute bare minimum so that really is
01:59 - an excellent start so once again thank
02:01 - you all so much for wishlist in the game
02:02 - speaking to you as an instructor my
02:05 - advice is announce your game as soon as
02:06 - you have something to show and start
02:08 - Gathering wishlists right away and
02:10 - speaking to you as a developer myself as
02:12 - a two wishlist game if you haven't
02:13 - already the goal release date is on Q3
02:15 - of next year so with 3 000 wishlists
02:18 - already by now then I filmed that
02:19 - hitting 10K by release should definitely
02:21 - be doable alright so here let's see how
02:24 - I took the final course game and built
02:25 - upon it adding tons more mechanism
02:27 - systems to make my own unique game I
02:29 - already had tons of notes on design that
02:31 - I want to implement basically I first
02:33 - worked on design on paper before I wrote
02:35 - any code so when it came down to writing
02:37 - the actual code I already had a list of
02:39 - systems and mechanics that I wanted to
02:40 - build and basically I prioritized them
02:42 - based on their importance and their ease
02:45 - of development for example the open
02:47 - world logic being able to seamlessly
02:49 - move around in a large open world with
02:51 - Dunes all over the place that system is
02:53 - very much crucial to the entire game
02:55 - design but I also know that system won't
02:57 - take a long time to implement so in
02:59 - making a first quick prototype I did not
03:01 - choose to prioritize that system instead
03:03 - I built other systems that were easier
03:05 - to implement but still very important to
03:07 - the final design and before I got to
03:09 - implementing any system the first thing
03:10 - that I did was just make a nice empty
03:12 - scene for development in the course the
03:14 - final lecture is on building a nice
03:16 - complete Mini-Game with all the
03:17 - mechanics built in the course so the
03:19 - final game has a nice level scripting a
03:21 - bunch of enemies some carefully placed
03:23 - items and so on but while developing
03:25 - this game I did not want such a complex
03:27 - level for developing and testing you
03:29 - really want it as simple as possible so
03:32 - I duplicated that scene and got rid of
03:34 - everything that wasn't absolutely
03:35 - necessary so no level layout only two
03:38 - friendlies and two enemies I made sure
03:40 - to remove all of the 11 scripting so I
03:42 - could run the game and everything worked
03:43 - in this simple possible with a nice
03:45 - empty testing scene setup I started
03:47 - implementing the first system and for
03:49 - that I chose the building system the
03:52 - game has billing mechanics where you can
03:53 - place down buildings construct them with
03:55 - resources and so on in the final game
03:58 - you won't be able to go out into the
03:59 - middle of nowhere and completely build a
04:01 - nice Outpost from scratch making this
04:03 - mechanic was actually pretty simple
04:05 - because in the course I already
04:06 - implemented a nice generic interact
04:08 - action you can make any object
04:10 - interactable then the units have an
04:12 - interact action which can take an action
04:14 - on that object and importantly that
04:16 - system is built using an interface so
04:18 - that action can be whatever you want so
04:20 - in the course that same system is used
04:22 - for making a door you can open and close
04:23 - or some crates you can blow up so over
04:26 - here I just made a construction object I
04:28 - set it as interactable and for the logic
04:30 - just added some construction progress
04:32 - when the progress completes it simply
04:34 - destroys the construction object and
04:36 - spawns the final object really simple
04:37 - system this mechanic was super easy to
04:40 - implement and once again is a great very
04:42 - practical example of the power of
04:43 - writing good clean code because I focus
04:46 - on making the course code as clean and
04:48 - extensible as possible adding this
04:50 - mechanic took literally just about 30
04:52 - minutes
04:52 - if I had not taken care to write
04:54 - Googling code if my interaction system
04:56 - was all very hacky and built without any
04:59 - thought behind it if so then mechanical
05:01 - like this would probably have taken
05:02 - hours or days instead of 30 minutes so
05:05 - this is really the reason why it might
05:07 - seem like I'm a broken clock constantly
05:08 - telling you about the same thing talking
05:10 - about how important it is to write
05:11 - Googling code
05:12 - but the reason why I say that so much is
05:14 - because this is because it really does
05:16 - matter
05:17 - also a very important fun thing related
05:19 - to this mechanic I went to Google to
05:21 - figure out if it was spelled
05:22 - constructable or constructable fun fact
05:25 - my steam game gamecorp DX actually has a
05:28 - typo in the game you have various
05:30 - categories for the funnel game quality
05:31 - and skills your developers can learn one
05:34 - of them being writing and in the game I
05:36 - totally thought that writing had two T's
05:39 - so funnily now if that game has a typo
05:41 - in the most ironic Place possible anyway
05:43 - so I got the beginning of the
05:44 - construction system working and then I
05:46 - jumped to another very crucial system
05:48 - which is in laser system basically the
05:50 - game is meant to be kind of like XCOM
05:52 - but in a large open world with tons of
05:54 - units the big problem with that design
05:56 - is that if you have something like 30
05:58 - units over a huge world that's a huge
06:00 - amount of work to get them all to do
06:01 - something on the same turn you'd need to
06:03 - take three actions on every single turn
06:05 - that would really slow the game down so
06:08 - part of my solution for that problem is
06:09 - the only their system there are some
06:11 - special units that act like leaders and
06:14 - other non-leather units can only be
06:16 - directly controlled when within range of
06:18 - a leader so in the final game this will
06:20 - make it so that each leader kind of has
06:22 - its own team
06:23 - and then with that it's easier to manage
06:25 - one team's thing behind defending the
06:26 - main base while not only that goes out
06:28 - another team to capture and build a
06:30 - secondary Outpost for building that
06:32 - system it's also pretty easy it's really
06:33 - just a decent check so each unit has a
06:36 - simple Boolean either it's a leader or
06:38 - it's not then the leaders can always be
06:40 - selected and the non-leaders when the
06:42 - round begins it does a distant check to
06:45 - all the leaders if it's within a certain
06:47 - distance then the unit can be selected
06:49 - if not then it cannot be that's it
06:51 - pretty simple and now you yourself might
06:53 - be thinking another problem with this
06:55 - design which is well does it mean that
06:57 - the units outside of Direct Control just
06:59 - stay there do they just say static and
07:01 - do absolutely nothing that is indeed a
07:03 - problem with this design and solution
07:05 - for that is something that I call
07:06 - automated actions which I'll cover in a
07:08 - bit the next task now that I had a
07:10 - building and leaders working was making
07:12 - a controllable turret this was also
07:14 - pretty easy in the building system when
07:17 - spawning the funnel object that object
07:19 - can be whatever I want so I just made a
07:21 - turret and added the unit script just
07:24 - with that it's already controllable and
07:25 - again the whole design of the game is
07:27 - very modular the actions that a unit can
07:29 - take just depend on what action
07:30 - components it has so by default I add
07:33 - the same components as units which also
07:35 - means that the turret could walk around
07:36 - which was a bit funny obviously I don't
07:39 - want that for the turret so to make it
07:40 - act like an actual turret I just removed
07:42 - the move action and that's it with that
07:45 - tour can shoot just like any any other
07:46 - unit really simple to implement this
07:48 - thanks to once again good clean code so
07:51 - with those systems working the next
07:52 - crucial system was items the game is
07:55 - meant to have building crafting
07:56 - automation elements all of those require
07:58 - items to function
07:59 - for implement the items I thought of a
08:02 - bunch of different ideas the main
08:04 - question when making a game like this
08:05 - which is grid base is do you want just
08:08 - one item per grid position or not
08:10 - I felt that was a bit too limiting so I
08:12 - didn't want that design I want plenty of
08:15 - items all over the place to represent
08:17 - the atoms I just built some cubes with
08:19 - some icons those icons are obviously
08:21 - just placeholders but like I mentioned
08:23 - in the video where I cover the assets
08:25 - that I'm using to build this game a
08:27 - bunch of those icons were taken from
08:28 - previous videos or previous games that I
08:30 - made obviously the icons have nothing to
08:33 - do with the actual items they're just
08:34 - random icons just while I'm developing
08:36 - the system
08:37 - so I have some items as cubes and for
08:40 - picking them up like I said I did not
08:42 - want to be limited to just one item per
08:44 - grid position and I also did not want
08:46 - the limitation of having to use an
08:48 - action point to use an item so for
08:50 - picking up the player literally just
08:51 - clicks on the item if it's close enough
08:53 - it gets picked up that's it super simple
08:56 - also added a rigid body and collided to
08:58 - the items just for fun and for
09:00 - representing the actual item data for
09:02 - that obviously I use script more objects
09:04 - which are excellent for exactly this
09:06 - purpose
09:07 - just to find a prefab icon name and
09:09 - that's really it built a bunch of times
09:12 - just assess it out and everything worked
09:14 - perfectly with the items working I also
09:16 - worked on a fun mechanic making enemies
09:18 - drop items on death it's pretty simple
09:20 - to add just a script that listens to the
09:22 - health system on that event when that
09:24 - happens just spawn some items and then
09:27 - using physics apply and explosion Force
09:29 - just to throw the atoms in the air
09:30 - really fun and at this point actually
09:32 - something extremely rare happened Unity
09:34 - actually crashed sometimes I hear people
09:37 - talk about how their Unity crashes all
09:39 - the time and it always confused me
09:41 - because for me I use Unity a ton and it
09:43 - never crashes on me I literally get
09:45 - maybe one or two crashes per year while
09:47 - using it for hours every single day I
09:50 - guess the reason is because I normally
09:51 - stick with the very stable LTS release
09:54 - for this game I'm using the tech version
09:55 - since the release date is only in late
09:57 - next year by then I'll be launching the
10:00 - game with version 22 LTS which should be
10:02 - commonly stable anyway since I saved
10:04 - constantly I hit Ctrl s subconsciously
10:07 - pretty much every few seconds because
10:08 - that I didn't really lose any progress
10:10 - to this crash so just reloaded unity and
10:13 - kept on working alongside the items one
10:15 - obvious system is an inventory system
10:17 - building this was pretty fun it's
10:19 - something that I've done many times
10:20 - before so I just wrote code non-stop for
10:22 - about an hour before doing any testing
10:24 - now you probably shouldn't do that you
10:26 - should test often after writing just a
10:28 - headphone lens of code definitely don't
10:30 - write 100 lines of code and then test if
10:32 - you do you might have tons of issues and
10:34 - then have lots of trouble finding those
10:35 - issues but anyways for me I've built
10:37 - dozens of inventory systems so that's
10:39 - why I just wrote tons of code non-stop
10:41 - making a simple inventory system is
10:43 - pretty easy I have a video tutorial that
10:45 - I made quite a long time ago I've
10:46 - actually been meaning to remake that
10:48 - tutorial with a better one for example
10:49 - something that uses scriptable objects
10:51 - just like I'm using here
10:53 - so I made that and worked but it also
10:56 - brought forward a potential issue with
10:57 - this design I knew that I did not want
10:59 - to have a limitless inventory I wanted
11:01 - to limit I wanted a physical
11:03 - representation of space
11:05 - but if every item occupies one slot then
11:07 - it gets really difficult to then
11:09 - Implement building or crafting mechanics
11:11 - or anything that requires tons of
11:12 - resource also ammo I want ammo to be a
11:15 - consumable resource so that the player
11:17 - needs to craft some ammo and bring
11:18 - enough when they go out to explore the
11:20 - world with this system where each item
11:22 - takes one slot with this the player
11:24 - really couldn't take much with them so
11:26 - later on I spend upon the inventory to
11:28 - make a stackable item system so this was
11:30 - quite a bit more complex but still
11:31 - doable I can define an item type as
11:34 - stackable or not and Define the max
11:36 - stack amount then of course all the
11:37 - logic for consuming a single item
11:39 - merging and splitting stacks and so on
11:41 - some of that was pretty tricky to handle
11:43 - but it came out looking quite great with
11:45 - the inventory done I made a visual since
11:47 - the game has lots of units and objects
11:49 - in the world I cannot just use a regular
11:51 - UI to show data for all of them so each
11:54 - unit and each object has a worm space
11:56 - canvas attached to it this is a really
11:58 - awesome way to attach UI elements to
12:00 - objects in your world I made a simple
12:01 - button to show and hide the inventory UI
12:04 - as well as some simple Logic for
12:06 - displaying the item icons of course all
12:08 - of it written with some nice clean code
12:10 - so there is no direct connection between
12:12 - the inventory and logic and the
12:13 - inventory UI DUI just listens to events
12:16 - and updates itself so everything is
12:18 - nicely decoupled I could completely
12:20 - remove the UI class and the code would
12:22 - still compile with atoms working it was
12:24 - time to actually use them so I modified
12:26 - the building system to require items for
12:28 - construction the unit doing the
12:30 - constructing must have the required
12:31 - items in their inventory if they do they
12:33 - cannot progress pretty simple next is
12:35 - since I have items in individual
12:37 - inventories I want to be able to
12:39 - transfer items between them to do this I
12:41 - just made something super simple pretty
12:43 - much just duplicated the interact action
12:45 - except instead of interacting it begins
12:47 - an item transfer action for making it
12:49 - work once again I made heavy use of
12:51 - interfaces so this item transfer action
12:53 - can work with anything that has an
12:55 - inventory it works for changing items to
12:57 - be doing two units I can drop items on a
13:00 - crafting station or a storage I can pick
13:02 - up items from a Loot Crate and so on so
13:05 - another excellent example of the power
13:06 - of c-sharp interfaces with all those
13:08 - mechanics working it was time to create
13:10 - a crafting system I just made a crafting
13:13 - station just a regular building I made
13:15 - it with the I interactable interface so
13:17 - I can interact with it it checks if the
13:19 - unit has required items in their
13:21 - inventory if so then it grabs the funnel
13:23 - item and stores it in the crafting
13:24 - station inventory for the crafting
13:26 - recipes as usual I use scriptable
13:28 - objects just to find some inputs and
13:30 - outputs all of it pretty easy then for a
13:32 - really fun system the power system this
13:35 - is crucial for implementing the
13:36 - automation mechanics I want some
13:38 - buildings to require power and I want
13:40 - that power to have to be gen generated
13:42 - and transporting this is on part of the
13:44 - original design that I wrote down so
13:46 - implementing it wasn't too difficult I
13:48 - wanted three types of buildings
13:49 - generators that produced power
13:51 - Transporters that transport that power
13:53 - and consumers that use up power
13:56 - for the generated it's pretty simple
13:57 - it's just a building for the consumers
14:00 - once again made heavy use of c-sharp
14:02 - interfaces so any building of any type
14:04 - can be made into a consumer just needs
14:06 - to implement the interface which is
14:08 - those three things the system is already
14:09 - working it's a simple system but I think
14:11 - it will do very well in the final game
14:13 - since it's connected to so many other
14:15 - systems you build something like for
14:17 - example a crafting machine and it needs
14:19 - some power so you build a generator and
14:22 - doing that requires resources that you
14:23 - need together then perhaps you also need
14:25 - a transporter if the machine is far away
14:27 - from the generator and of course you
14:29 - need to defend the transports on the way
14:30 - if the zombies destroy them then your
14:32 - secondary Outpost won't lose power so I
14:34 - really like how this system is
14:36 - interconnected with all the other
14:37 - systems and I think it won't be pretty
14:38 - crucial in the final gameplay then
14:41 - actually did a bunch of work for a few
14:43 - days but forgot to hit record I'm still
14:45 - getting used to this concept of making
14:46 - some devlogs so I gotta remember to
14:48 - record anytime that I work on the game
14:50 - then I worked on the atom transport
14:52 - system so this is another really crucial
14:54 - assistant to the home game one of the
14:56 - main goals is having a large persistent
14:58 - open world with multiple bases and units
15:00 - all over the place since building
15:02 - requires items in order to build things
15:04 - in many places I created the item
15:06 - transport system which essentially acts
15:08 - kind of like a conveyor system you build
15:10 - some item Transporters then Define an
15:12 - atom transport route Define what Atom
15:14 - types will go through that route from
15:16 - where it starts and from where it goes
15:18 - then the atoms move a certain distance
15:20 - automatically every turn this works in
15:22 - conjunction with all of the other
15:23 - automation mechanics so you can have
15:25 - something like a money Outpost Gathering
15:27 - some resources and then transporting
15:29 - those resources back into the main base
15:31 - it is also obviously connected to the
15:33 - power system so each transport must be
15:35 - powered up for it to work and of course
15:37 - it also works with all of the Survival
15:38 - Systems like the zombies if a anime
15:40 - transport gets destroyed on the way then
15:42 - the atom route stops working speaking of
15:44 - automation I also build a Automated
15:46 - machine that can grab and drop meaning
15:48 - you can build a machine just like any
15:50 - other building and then tell it to grab
15:52 - a specific items from a specific nearby
15:54 - position and drop it on another one
15:56 - again this whole system uses interfaces
15:58 - so it can grab items from anything that
16:01 - has an inventory and drop it on anything
16:03 - else that has an inventory
16:05 - for example this machine can grab items
16:07 - from a search container and drop it on a
16:09 - crafting station
16:10 - or maybe it can grab items from an item
16:13 - transporter and drop it in long-term
16:14 - storage it works really well and the
16:17 - Automated machine does not need to know
16:18 - what object type it's interacting with
16:20 - all it cares is that it has an inventory
16:22 - that's it again my focus on this is
16:24 - really making the code AS generic as
16:26 - possible with everything working through
16:28 - interfaces
16:29 - so that that way these systems that I'm
16:31 - building here all of them can work with
16:32 - one another then I made another
16:34 - Automated machine this one is an
16:36 - interactive machine so it triggers an
16:38 - interaction on a Target word position
16:40 - like for example it can automatically
16:42 - make some crafting then for another
16:44 - simple action I also made some resource
16:46 - nodes so you can interact with it and it
16:48 - spawns some resources which again the
16:50 - player can pick up
16:51 - putting all of those systems together it
16:53 - already enables some really complex
16:54 - immersion gameplay you can build up your
16:57 - main base with a bunch of crafting
16:58 - machines then you can go out with a
17:00 - leader and build a secondary outpost on
17:03 - that Outpost you can gather some
17:04 - resources then build some power lines
17:06 - along the way and some item Transporters
17:08 - to transport those resources back to the
17:10 - main base and use the automated machines
17:13 - to grab items from the Transporters
17:14 - place them in the crafters and another
17:16 - automated machine to automatically start
17:18 - crafting so already quite a lot of
17:20 - complexity is possible just with these
17:21 - handful of systems and buildings one of
17:23 - the missing automated things in that
17:25 - example gameplay is how do you make the
17:27 - Gathering automated for that and to
17:29 - solve the problem that I mentioned in
17:30 - the beginning of this video I
17:32 - implemented something called automated
17:33 - actions basically there's three turn
17:35 - types there's the player turn the enemy
17:38 - turn and the automated turn during the
17:40 - Army return all of the automated actions
17:42 - take place this helps keep the game
17:45 - moving without forcing the player to do
17:46 - all kinds of manual actions for example
17:49 - the player units they can already gather
17:51 - resources the player can manually move
17:54 - them to a resource node and interact
17:55 - with it so all that already works but
17:57 - doing it manually is a bit annoying so
17:59 - the automated action helps that I can
18:01 - set up an automated Gathering action on
18:03 - a certain unit I can give it a certain
18:06 - area from which to gather resources and
18:08 - also an area to drop resources in
18:10 - storage
18:11 - then the unit is controlled by the AI to
18:13 - do all that logic importantly is this
18:15 - automated turn only happens after the
18:17 - player normal turn so the unit isn't
18:20 - locked to the AI or anything the player
18:22 - can manually take any action then after
18:24 - ending the turn if there are more action
18:26 - points available the unit will do the
18:28 - automated action with this the unit can
18:30 - handle resource Gathering automatically
18:31 - it can drop resources on storage
18:34 - then an automated machine can take those
18:36 - resources from storage and drop them off
18:38 - in an item transporter which then
18:40 - completes the scenario that I mentioned
18:41 - this was the final system that I worked
18:43 - on before pausing development to make
18:44 - the trailer and as you can see I already
18:46 - built quite a lot of interesting
18:48 - interlock systems that work well with
18:50 - one another I really think the design of
18:52 - the final game will be very compelling
18:53 - to play now like I mentioned in the
18:55 - announcement video one big challenge
18:57 - with the making of this game will be
18:58 - building it once also making regular
19:00 - videos on this channel I don't want to
19:03 - stop making tutorials or any other type
19:04 - of videos so how can I work on the game
19:07 - then pause for a few weeks to make
19:08 - videos and then get back to the game
19:10 - usually when you come back to a project
19:12 - after some time it can be quite a bit
19:14 - tricky to remember how everything worked
19:16 - it can take a few days to get
19:17 - reappointed with the code base so to
19:20 - help try to solve that I made a nice
19:21 - diagram of all of these systems what is
19:23 - their purpose and how they are connected
19:25 - I just got back to development on this
19:27 - game after being away for almost two
19:29 - months and this diagram really helped I
19:31 - was able to quickly get back and start
19:33 - writing some more code so if you're the
19:35 - kind of person who stops projects in the
19:36 - middle then perhaps consider doing a
19:38 - diagram kind of like this one before you
19:40 - stop building something like this while
19:42 - you're still very familiar with the code
19:43 - base is pretty easy and in my experience
19:45 - it really helped me when getting back to
19:47 - it so perhaps do give this technique a
19:49 - try alright so that's everything that I
19:51 - built in the about two weeks that I was
19:53 - working on the game full time thanks to
19:55 - already having a really nice base in the
19:57 - final course code I was able to do a ton
19:59 - of progress really quickly and once
20:01 - again let me remind you that part of the
20:03 - reason why I built all of this so fast
20:04 - is because the course code is really
20:06 - nice and clean so I don't want to sound
20:08 - like a broken record but hopefully this
20:10 - video and this whole journey will act
20:12 - like an excellent practical use case of
20:14 - the power of writing good clean code and
20:16 - why it is so important if you haven't
20:18 - wished list the game yet go ahead and
20:19 - edit your wish list there's a link in
20:21 - the description and stay tuned for
20:22 - future devlogs as I continue on this
20:24 - journey alright hope that's useful check
20:27 - out these videos to learn some more
20:28 - thanks to these awesome patreon
20:30 - supporters for making these videos
20:31 - possible thank you for watching and I'll
20:33 - see you next time
20:37 - foreign