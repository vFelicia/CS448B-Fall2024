00:00 - hello and welcome i'm your code monkey
00:02 - in this video we're going to build a
00:03 - really simple but really useful question
00:05 - dialog this is excellent for asking your
00:08 - player confirmation on anything like for
00:10 - example do you really want to quit the
00:11 - game or really equip an item and so on
00:14 - the way the code is set up makes it
00:15 - super simple to use i've used some
00:17 - version of this in pretty much every
00:19 - single one of my steam games so let's go
00:21 - ahead and build it if you prefer a more
00:23 - guided path with step-by-step lectures
00:25 - then check out my complete courses learn
00:28 - how to make a bundler defender game
00:29 - using c-sharp just like i make my own
00:31 - steam games or learn how to make games
00:34 - internally using visual scripting or
00:36 - learn all about unity with the ultimate
00:38 - overview course which contains over 13
00:40 - lectures each covering a different tool
00:41 - or feature of the engine to help you
00:43 - make better games faster i'm always
00:45 - available in the courses q a section
00:47 - answering your questions every single
00:48 - day so check out all the courses with
00:50 - the link in the description okay so here
00:52 - i am in my empty scene now let's begin
00:54 - by first of all making the ui elements
00:56 - so i've got my scene over here i've got
00:58 - the canvas so just go inside let's first
01:00 - create an empty game object our nice
01:02 - container let's name it the question
01:04 - dialog ui and now inside let's make
01:07 - another object let's make a ui an image
01:10 - let's name this the background
01:13 - and now let's expand it to fit the whole
01:15 - area so this one right here and hold
01:16 - down shift also center the pivot okay so
01:19 - just like that make sure everything is
01:20 - zero on everything and now essentially
01:22 - we can play around the size of the
01:24 - parent and automatically modifies
01:25 - background okay now for the sprite
01:27 - itself over here in my project files
01:29 - i've got this really nice sprite it's
01:31 - essentially just a square with round
01:33 - corners this is the same sprite that i
01:35 - used in making the chat bubble which is
01:37 - another interesting element you can
01:38 - easily add to your games so with that
01:40 - all i've got it set up here is if i go
01:42 - into the sprite editor over here you can
01:44 - see that i just drag the borders so what
01:46 - that means is that now on the background
01:48 - over here i can select and make it
01:50 - sliced and i can modify the pixels per
01:52 - unit in order to make it pretty much
01:53 - like that so whatever size i set now
01:55 - i've got some nice round corners so just
01:57 - a bit of fun okay so next up let's make
02:00 - it a dark gray and it's a bit of fun
02:02 - maybe add an outline and maybe also a
02:05 - shadow
02:06 - okay so there's our basic starting point
02:08 - now next thing we need is just some
02:10 - simple text so let's reclaim go into ui
02:13 - and we're going to make a text and we're
02:14 - going to use text mesh pro since it has
02:16 - a lot more settings so let's name the
02:18 - object text and then over here let's set
02:20 - this up in order to fit whatever we want
02:23 - let's put a new text and put just a
02:24 - whole bunch of text in there now let's
02:27 - also extend it to occupy the whole
02:29 - parent so let's put everything there now
02:32 - here let's select auto size in order to
02:33 - automatically size whatever text we give
02:35 - it to here and let's see what a good
02:37 - size would be
02:41 - okay so like this minimum of 12 maximum
02:43 - of 24 okay that looks pretty good now
02:45 - just up here make it nice and centered
02:47 - centered on everything okay for the
02:49 - wrapping leave it enabled so that it
02:50 - wraps
02:51 - and the overflow here yep for now let's
02:54 - leave it on overflow okay now just
02:56 - modify that a little bit just so it
02:58 - doesn't touch the exactly the edges
03:01 - so just like that and again we can still
03:03 - play around the parent size so as we
03:05 - size this if you can see yep it always
03:08 - matches okay so far so good
03:11 - next let's make our two buttons so first
03:14 - of all just an empty game object let's
03:16 - name the yes button then inside again
03:19 - also another ui image for the background
03:22 - and select the same thing but this one
03:25 - maybe in a green
03:29 - and again fit it to occupy the parent
03:31 - and i just play around the parent size
03:34 - and of course we also need some text so
03:36 - ui make another text
03:49 - okay so there's the button so just
03:50 - background some text now on the parent
03:52 - itself let's add the button component
03:55 - okay and here we can also use the
03:56 - automatic transition so just drag the
03:58 - background reference for a color tent
04:00 - for the normal column that sounds like
04:01 - this one so by the way here's a quick
04:03 - tip you can right click directly on the
04:04 - color in order to copy go back into the
04:07 - yes button for normal color let's paste
04:09 - it that's a normal color and then again
04:11 - this one tints on top of the other one
04:12 - so make this one in white okay good and
04:15 - for the how i do color once again we can
04:17 - copy paste this one then just make it a
04:19 - bit lighter and for the press color same
04:22 - thing just maybe darker
04:24 - and these two others we no longer need
04:27 - okay so far so good we've got the yes
04:29 - button so just duplicate it and next to
04:31 - it this is going to be no button so the
04:33 - no button
04:35 - and inside for text put it on no
04:38 - and then for the caller instead of green
04:39 - let's make it on based on reds
04:46 - alright so here we have our basic
04:48 - structure so we've got some text a
04:50 - simple yes button and no button alright
04:52 - so now let's handle the code so let's go
04:54 - ahead and create a new c-sharp script
04:56 - name this the question dialog ui and
04:59 - just attach a script onto it and let's
05:01 - open by the way if you find the video
05:03 - helpful please hit the like button it's
05:04 - a tiny thing but really does help thanks
05:07 - okay so here first let's grab all of our
05:09 - references to the buttons and the text
05:12 - so let's make a project right away and
05:14 - on the awake first grab the text so we
05:16 - need to add using tm pro since we're
05:17 - using text mesh pro let's define a field
05:20 - so text mesh pro uguy since this is a ui
05:23 - element
05:24 - let's make the text mesh pro
05:27 - and then just grab it and we do a
05:29 - transform we do a find
05:31 - find the text object and get component
05:34 - text mesh pro ugly
05:36 - now if you prefer you can also just make
05:38 - this a serialized film then drag the
05:39 - reference in the editor but personally i
05:41 - prefer this
05:42 - okay so next up for the button so
05:44 - private this will be a button which is
05:47 - inside using unity engine dot ui
05:50 - okay so we've got the button and it's
05:52 - going to be the yes button and then the
05:54 - no button
05:56 - so let's go the yes button equals you do
05:58 - a transform we find the yes button and
06:01 - get the component of type button
06:04 - same thing for the no button and yep
06:09 - okay so we have all of our references
06:11 - now let's make a function to actually
06:13 - show a question
06:14 - so public void let's name it show
06:16 - question
06:19 - and now for the parameters let's receive
06:21 - a string for the question text so
06:24 - question text
06:26 - and then for the yes and no let's
06:28 - receive actions so action which is
06:30 - inside using system
06:33 - now an action if you don't know this is
06:35 - a delegate i cover them in more detail
06:38 - in another video so go watch that if you
06:39 - don't know what it means essentially it
06:41 - lets you pass in a function as an
06:43 - argument so the yes action
06:46 - and then the action for the no action
06:50 - so we're going to pass in the question
06:52 - text and then a function that will be
06:53 - triggered when you press yes another one
06:55 - that won't be triggered when we press no
06:57 - so now we just assign these so first go
06:59 - into our text mesh pro in order to set
07:01 - the text to our question text
07:04 - and then we go into the yes button and
07:06 - in this case we're using the unity
07:07 - engine button
07:09 - so we need to add a listener so we go
07:11 - into the on click add in listener
07:14 - and now here as you can see it takes in
07:15 - a unity action so not an action
07:19 - now we could modify this code to receive
07:20 - ent actions but personally i like to
07:23 - work with the normal actions instead
07:25 - so what we can simply do is just do a
07:28 - new unity action and just encapsulate
07:30 - our action
07:32 - so essentially we're converting a
07:34 - system.action into a unity action and
07:37 - you can see that they have pretty much
07:39 - exactly the same signature so over here
07:41 - public delegate void dnt action as you
07:43 - can see no return no parameters nothing
07:46 - which is the exact same thing as over
07:47 - here on the action so public done with
07:49 - wide and it's just action and if you
07:51 - want to know how i did this i just
07:52 - pressed on the f12 which is the same
07:54 - thing as right clicking and go to
07:55 - definition so it goes definition and
07:57 - shows you where that is defined okay so
07:59 - that's yes and then finally for the no
08:01 - button when we click we trigger the no
08:03 - action okay so that's pretty much it so
08:06 - now let's test this to make sure that
08:08 - everything is working so over here on
08:10 - awake let's call show question
08:12 - and we're going to say
08:14 - do you want to do this
08:17 - this is our question then for the s
08:18 - action again let's pass in a lambda
08:21 - which again if you're not familiar with
08:22 - it then go watch the link in the
08:24 - description where i cover lambdas and
08:26 - delegates in more detail this syntax
08:28 - over here is in lambda which is
08:29 - essentially a way of defining a function
08:31 - directly inside some other text so here
08:34 - for the section let's just do the debug
08:35 - download
08:37 - yes
08:38 - and then pass in also on lambda for the
08:41 - node and for the little let's do debug
08:44 - log no
08:46 - okay that's it very simple let's see if
08:47 - it works
08:48 - and yep right away it says the question
08:50 - do you want to do this yes or no so if i
08:53 - press on yes and there you go over here
08:54 - on the console i can see yep i've got a
08:56 - yes press and no and yep i've got to
08:58 - know all right so everything is working
09:01 - now let's just expand upon this a little
09:02 - bit for example when we press on any of
09:05 - these we should hide the question so
09:07 - let's handle that in order to do that
09:09 - let's make a function to hide the
09:11 - question dialog
09:13 - so let's make a private void just call
09:15 - it hide and on hide we just set the game
09:18 - object that set active into false
09:20 - so we just disable the game object which
09:22 - automatically hides everything now all
09:24 - we really want is to call this just
09:26 - before we trigger all of our actions so
09:28 - in here on our add listener let's
09:31 - actually pass in a lambda so let's
09:33 - create one and essentially when we click
09:36 - on the button the first thing we do is
09:37 - we hide the question dialog and then we
09:39 - trigger the yes action and then same
09:41 - thing over here on the no
09:44 - so we just go and first of all we hide
09:46 - and then the no action now the reason
09:49 - why i'm first doing the hide is just in
09:51 - case you pass in a question that then
09:52 - afterwards asks another question
09:54 - if you instead put the hide after the s
09:57 - action then it would show the question
09:59 - it would trigger the yes action which
10:00 - would try to ask another question but
10:02 - then it would go back in here and it
10:04 - would hide so it would not show the
10:05 - second question so that is why first you
10:07 - hide then you trigger the yes action and
10:09 - let it do whatever it needs to alright
10:11 - so now we should be able to select one
10:13 - and only one answer so let's see so here
10:16 - do you want to do this let's say yes and
10:18 - there you go the question hides and you
10:19 - appear on the console yep we've got our
10:21 - yes alright so just like this we have
10:23 - our simple question dialogue only
10:24 - working now let's polish this up to make
10:26 - it extremely easy to use so first of all
10:29 - let's make the singleton pattern in
10:30 - order to make this super easy to use
10:32 - from anywhere in our code base so first
10:34 - up let's make a public static question
10:36 - dialog ui
10:38 - make a static instance
10:40 - and as always you make the get public
10:42 - but be set private that means that this
10:45 - property can only be set by this
10:47 - specific class and all the other ones
10:49 - can only get it so over here on white
10:51 - let's set the instance equals this
10:54 - okay so that's pretty much it so
10:55 - anywhere else in our code we can access
10:57 - the static instance and then we can
10:59 - access the public show question so now
11:00 - here let's just make another script
11:03 - let's call it testing question dialog
11:07 - then let's just make game object to run
11:08 - it
11:10 - and just drag it okay now let's open and
11:13 - in here now it's super simple to ask a
11:15 - question
11:16 - so let's make a private void update so
11:19 - an update lets us for if
11:21 - input.getkeydown so when i press the
11:24 - spacebar
11:27 - let's do get key down just so it
11:28 - triggers only once okay so when i press
11:30 - the spacebar let's go into the question
11:32 - dialog ui
11:34 - we access the static instance and then
11:36 - we call show question and then ask a
11:38 - question so for example are you sure you
11:40 - want to quit the game
11:44 - then we pass in the yes action
11:46 - and then we pass in the no action
11:49 - so now for example on the yes action
11:53 - in this case we could just do
11:54 - application application.quit
11:56 - so this would quit the application
11:58 - although in the editor it doesn't really
11:59 - do anything but we'll see that in a bit
12:01 - and then for the node then we simply do
12:03 - nothing
12:04 - so do nothing on no
12:06 - so by default the question automatically
12:08 - hides itself so there's nothing else we
12:09 - need to do so just like this it is
12:11 - working but application.quit does not do
12:13 - anything in the editor it only quits
12:15 - while you have a final build so just for
12:18 - testing just make sure that all this
12:19 - works
12:20 - let's just go up here using unity editor
12:26 - and then we can go into the editor
12:28 - application
12:29 - and we call exit play mode
12:32 - okay so just like this our testing
12:33 - should work and let's just go into the
12:35 - question ui remove our testing question
12:37 - and by default as soon as we away we set
12:40 - everything up and then we hide the
12:41 - question down and also since on hide we
12:44 - are setting the game object to inactive
12:46 - then when we show we need to set it back
12:48 - into active so that it actually shows up
12:50 - so like this there you go when you press
12:52 - show question it shows the game object
12:54 - and when you go into high then it hides
12:56 - the object okay so everything should be
12:58 - working so let's test okay so here i am
13:01 - nothing is visible now i press the
13:02 - spacebar and there you go are you sure
13:04 - you really want to quit the game and if
13:06 - i press on no then simply hides itself
13:08 - okay great now press spacebar again
13:09 - there you go there's my question press
13:11 - on yes and there you go it automatically
13:13 - stops again alright awesome now let's
13:15 - see just two more things so first of all
13:18 - in order to once again make this super
13:20 - easy to use anywhere else in our code we
13:21 - can just make this one into a prefab so
13:24 - we got the question dialog prefab if you
13:26 - want to modify any visuals just go
13:27 - inside modify the home prefab and then
13:29 - come back outside and reuse this prefab
13:31 - in any scenes you want so it's a very
13:33 - quick improvement and then also over
13:35 - here on the testing question dialog
13:37 - here's an example of what i was saying
13:39 - previously about how you can ask
13:40 - questions inside questions
13:43 - so you ask are you sure you want to quit
13:44 - the game then inside once again question
13:46 - dialog access the static instance and
13:49 - show the question
13:50 - and are you really sure
13:54 - and if you do
14:00 - so yep just like that we ask a question
14:02 - and then we ask are you really sure
14:04 - so this is an example for how you can
14:05 - show a question then another question
14:07 - right after that again if this seems
14:09 - confusing to you go watch the video on
14:11 - lambdas and delegates once you
14:12 - understand that this is really just a
14:14 - function then all this logic becomes
14:16 - pretty clear okay so let's see this code
14:18 - in action so here i am press the
14:20 - spacebar are you sure you want to quit
14:21 - and nope and okay everything continues
14:24 - once again are you sure you want to quit
14:25 - now let's say yes are you really sure
14:27 - nope and yep we're still here and are
14:30 - you sure you want to quit yes are you
14:31 - really sure yes and there you go exit
14:34 - all right so here you have a super easy
14:36 - to use question download use this
14:38 - whenever you want to ask the player a
14:39 - question like do you want to buy this
14:40 - item or quit the game or any question
14:42 - you want if you've played my steam games
14:44 - and you've certainly seen a window just
14:45 - like this one it's super easy to use and
14:47 - very effective
14:49 - if you wanted you could then expand upon
14:50 - this further in order to dynamically
14:52 - modify the size of the window based on
14:53 - the text amount i covered something
14:55 - similar to that in the tooltip video so
14:57 - you could definitely apply that to this
14:59 - you could also make it support multiple
15:00 - buttons so dynamically instantiate and
15:02 - position them so you could have a window
15:04 - with yes and no buttons
15:06 - another one with ok cancel or just ok so
15:09 - depending on your use case you can use
15:11 - this as a base and build upon it again
15:13 - if you're looking for a more guided path
15:15 - with step-by-step lectures then check
15:16 - out my complete courses alright hope
15:18 - that's useful check out these videos to
15:20 - learn some more thanks to these awesome
15:22 - patreon supporters for making these
15:24 - videos possible thank you for watching
15:26 - and i'll see you next time
15:32 - [Music]