00:00 - hello and welcome I'm your code monkey
00:02 - I've been making videos on this channel
00:04 - for over four years now I've covered
00:05 - tons and tons of topics in over 600
00:07 - videos one thing that I made sure to
00:09 - always do since the very beginning is
00:10 - read through all the comments every
00:12 - single day and answer as many questions
00:13 - as I can I've probably answered
00:15 - thousands of questions usually I reply
00:17 - directly to the person but if at least
00:19 - one person has a question then chances
00:20 - are there's more people wondering the
00:22 - same thing so here let's see some
00:23 - interesting questions that I answered
00:25 - that maybe you'd also like to know the
00:26 - answer to I've already done a bunch of
00:27 - these videos check out the entire policy
00:29 - see some more questions hopefully you'll
00:31 - learn quite a lot by seeing what others
00:32 - are asking okay so starting off with a
00:35 - question posted on my last QA video here
00:37 - is does meffin who asks basically is the
00:40 - code in the tutorials performance and
00:42 - alternatively do I recommend focusing on
00:44 - performance or not so the answer to this
00:46 - is that tutorials are mainly just
00:47 - starting points they teach you how to
00:49 - learn one thing and how to do that thing
00:51 - so for the most part any tutorial you
00:53 - find is not going to be perfect
00:54 - production ready cone but a more
00:56 - important question is does that matter
00:57 - so should you focus on improving
00:59 - performance or not
01:00 - and the answer to that question is
01:01 - usually probably not there's a fun
01:04 - saying which goes premature optimization
01:06 - is root of all evil because you can
01:08 - easily get sucked trying to improve
01:09 - performance of some kind of system when
01:11 - really you should be spending that time
01:12 - just building your game just think is it
01:15 - a very use of your time to add some
01:17 - enemies and maybe some building
01:18 - mechanics to your game or should you use
01:20 - that time to improve your inventory code
01:22 - to go from something like 0.5
01:23 - milliseconds to 0.1 technically that
01:26 - would be a 5x performance Improvement
01:27 - but it's not really worth it most times
01:29 - the answer is no that is not worth it
01:31 - most of the times tutorial code is
01:33 - performed enough for your needs however
01:35 - with that said at the same time that
01:36 - does not mean that you should
01:37 - intentionally write hormone code you
01:39 - might be aware of the concept of
01:41 - technical debt which is what you get
01:43 - when you try to do things quick and
01:44 - dirty which you will then have to clean
01:45 - up sometime in the future the ideal goal
01:48 - is you keep improving your programming
01:49 - skills and specifically your clean code
01:51 - skills so that the first skill you write
01:53 - while it might not be the absolute most
01:55 - performed code possible it is also not
01:57 - completely horrible it is good enough to
01:58 - do the job and not cause problems to any
02:00 - other system so specifically with
02:02 - regards to watching and following
02:04 - tutorials usually a tutorial is focused
02:06 - on achieving a certain goal or building
02:08 - a certain mechanic it is intended to
02:09 - teach you how to do that but is usually
02:11 - not intended to be super high
02:13 - performance production ready code
02:14 - perhaps this your own code is more than
02:16 - fast enough for your use case or perhaps
02:17 - it might require extra work to fit your
02:19 - performance budget so in general don't
02:21 - worry too much about performance unless
02:23 - it is bad enough that it hurts your
02:24 - development process and then randomly at
02:26 - various points in development use the
02:28 - profiler to check out hotspots in your
02:30 - game make sure you measure the actual
02:31 - performance and use that to decide if
02:33 - it's worth your time trying to improve
02:35 - performance or instead spend that time
02:36 - working on other mechanics in Polish
02:38 - next up here is a really extremely
02:40 - interesting comment it is posted on the
02:42 - video where I made a really nice
02:44 - top-down shooter in seven days the video
02:46 - was quite a long time ago but I'm still
02:47 - happy with how the game looks the game
02:49 - involved tons of systems working
02:50 - together with one another there was
02:52 - quite a nice amount of complexity which
02:54 - means writing good clean code was
02:55 - definitely a priority and this one is
02:57 - not so much a question but rather
02:58 - comment it comes from Klaus who talks
03:01 - about how as beginner watching my
03:02 - tutorials was complicated and annoying
03:04 - it looks like the code that I write is
03:06 - needlessly complex which can definitely
03:08 - look quite a bit daunting to a beginner
03:09 - but Cloud says that after coming back
03:12 - with some more knowledge now the code
03:13 - and tutorials makes a lot more sense
03:15 - this one is a really tricky topic with
03:17 - regards to teaching one easy example is
03:19 - variable access I even made a dedicated
03:21 - video on this topic for a beginner the
03:23 - obvious simple way is just make the
03:25 - variable public that's it just one line
03:27 - of code super simple very easy to
03:29 - understand whereas if a beginner watches
03:31 - one of my videos and they see that I'm
03:32 - using some weird syntax with some square
03:34 - brackets for something called a
03:36 - serialized field and then making it
03:37 - private with some functions to expose it
03:39 - for a beginner that might all seem
03:41 - unnecessarily convoluted and complex
03:43 - like why on Earth wouldn't I just make
03:45 - it public same thing for pretty much
03:46 - every clean code Concept in my videos
03:49 - when I want to update some UI I normally
03:50 - do it through some kind of event again a
03:53 - beginner might ask why on Earth are you
03:55 - doing these weird things called events
03:56 - instead of just calling a function
03:57 - directly or updating the UI object
03:59 - directly from the logic code writing
04:02 - good clean code is one of those things
04:03 - that is absolutely essential but
04:04 - extremely difficult to communicate the
04:06 - importance to a beginner no matter how
04:08 - much I try to explain for most people
04:10 - they really have to suffer through the
04:11 - consequences before they understand the
04:13 - importance and the benefits of writing
04:14 - good clean code again this song part of
04:16 - the regular learning process I myself am
04:18 - no different I also used to just make
04:20 - everything publicly calm functions from
04:22 - everywhere use strings all over the
04:23 - place and as complexity of my games went
04:26 - up so did the difficulty of actually
04:27 - building them I soon realized the
04:29 - problems with having systems be tightly
04:31 - coupled with one another I have lots and
04:34 - lots of Errors because of using strings
04:35 - for States many times I wasted lots of
04:38 - energy trying to fix bugs before
04:39 - realizing it was just a string with an
04:41 - extra invisible space so my advice to
04:43 - you if you are a beginner is if you're
04:44 - watching a tutorial and the instructor
04:46 - is doing things the way you think is
04:47 - wrong consider that perhaps it's not
04:50 - wrong perhaps it's your lack of
04:51 - experience making you blind to some
04:53 - potential issues that the instructor
04:54 - already went through but like I said
04:56 - it's really hard for a beginner to learn
04:57 - that even if I tell it directly so if
04:59 - you do end up doing what everyone does
05:01 - and ignore this advice until it pulls up
05:03 - in your face when that happens don't be
05:04 - too harsh on yourself remember that
05:06 - everyone myself often every instructor
05:08 - included everyone goes through the same
05:10 - thing so just keep at it keep on
05:12 - learning and do what you can to minimize
05:13 - the painful experiences you have to go
05:15 - through in your Learning Journey the
05:17 - next question was posted on my hex grid
05:19 - system tutorial video here Luca asks how
05:21 - it's possible to dive into new topics
05:23 - and get to know everything in such a
05:24 - short amount of time why is it that I
05:26 - can learn something super quickly well
05:28 - for a lot of people it would take them
05:29 - hours or even days diving into
05:31 - documentation to fully understand how
05:32 - something works my answer to that is
05:34 - there's really no secret the only secret
05:35 - there's really just experience that's
05:37 - pretty much it I know that might sound
05:39 - like a overly simple answer but it
05:41 - really is the truth there is no special
05:42 - secret the more code you write the more
05:45 - systems you build the more games you
05:46 - make the easier it becomes to build
05:47 - something new or in this case to learn
05:49 - something new after you have created
05:51 - dozens of Unique Systems and a handful
05:53 - of unique games then you've probably
05:55 - already experienced a ton of unique
05:56 - scenarios so when you go to learn
05:58 - something new it probably isn't on you
06:00 - it's a mix of things you've done
06:01 - previously and a tiny amount of new
06:03 - things for example for this video making
06:05 - a hex grid I already knew how to make
06:07 - grid system so all I really needed was
06:10 - some math to convert it from a square
06:11 - root system onto a hex grid even though
06:14 - I'm not very good at math I have done
06:15 - enough things in the past that I can
06:17 - figure it out I've already gone through
06:19 - the painful process of learning the
06:20 - basics of kind of like vectors rotations
06:22 - that product and so on so I didn't have
06:24 - to learn all of that right now for the
06:26 - very first time so building this hex
06:28 - grid system really wasn't something that
06:30 - was completely 100 new many things are
06:33 - similar to things that I have done in
06:34 - the past same thing for more different
06:36 - topics like for example the net good for
06:38 - game objects video it's a completely new
06:40 - tool set that I had not touched before
06:41 - but I have made multiplayer games in the
06:44 - past so even though I did not know the
06:46 - Syntax for net good for game objects I
06:48 - was already familiar with the Core
06:50 - Concepts behind multiplayer games things
06:52 - like what is a packet what is a
06:53 - connection what is bandwidth where are
06:55 - potential issues with nap and firewalls
06:57 - all those Concepts were already stored
06:59 - in my brain when I went to read the net
07:01 - code for game object's documentation my
07:03 - brain simply remembered all those things
07:04 - so even though the tone set and the
07:06 - syntax were completely new there was a
07:08 - lot of familiarity which allowed me to
07:09 - learn how to make that and build that
07:11 - one hour video in pretty much just a
07:13 - handful of days so I wish this was
07:15 - something that I could actually teach I
07:16 - wish I could teach you how to learn new
07:18 - things quickly because it is a very
07:19 - useful skill set to have but really the
07:22 - only way is experience so my advice to
07:24 - you is keep building things keep making
07:26 - prototypes keep writing code every line
07:28 - of code you write makes the next one
07:29 - easier and of course explore lots of
07:32 - Topics in terms of gaining knowledge and
07:33 - experience it really helps to build say
07:35 - 10 games in 10 different genres rather
07:37 - than 10 games that all have pretty much
07:39 - the same Mechanics for me something that
07:41 - really helped is when I covered in my
07:43 - Game Dev Journey video how I got started
07:45 - making Flash games and flash games were
07:47 - all about making something interesting
07:48 - and make it super quickly back then no
07:50 - one was working years on flash games
07:52 - most devs would work maybe weeks or at
07:55 - the most extreme maybe months and the
07:56 - final game was not not supposed to have
07:58 - dozens of hours of content just a few
08:00 - minutes of good gameplay was more than
08:02 - enough
08:03 - so thanks to that in the five years that
08:04 - I was making Flash games I built
08:06 - something like 40 games I did everything
08:08 - from top down Shooters to management
08:09 - games RPGs racing strategy and so on I
08:12 - really think that massively helped me
08:14 - Kickstart My Own knowledge base in quite
08:15 - a big way and if you want to know
08:17 - specifically How I Learned things like I
08:19 - said there's no secret for example I
08:21 - recently made a really detailed video on
08:23 - ENT dots I managed to learn the new
08:25 - version and make the video in about
08:26 - three days first thing I do is look in
08:28 - the documentation so I open up the
08:31 - entities package and read through most
08:32 - of it then in this case there is a
08:34 - really useful dots guide which I found
08:36 - the forums so again right through the
08:37 - whole thing then I also read a bunch of
08:40 - posts in the forums specifically the pin
08:42 - posts as you can guess from the fact
08:44 - that I have a video tutorial Channel I
08:46 - also like to learn by watching video
08:47 - tutorials so I searched YouTube and
08:49 - found an excellent really detailed guide
08:51 - by turbomix games as well as some very
08:54 - useful videos from win games I watched
08:56 - everything that I could by the way a
08:58 - quick tip for learning things quickly
08:59 - learn how to listen and understand on a
09:01 - faster speed personally for me I watch
09:04 - every YouTube video on either 2X or 3xp
09:07 - so for example on Johnny's dots tutorial
09:09 - it's two and a half hours long I watched
09:11 - it at mostly 2.5 speed so I managed to
09:13 - watch and understand the whole thing in
09:15 - just about an hour and then of course
09:16 - after consuming all that content the
09:18 - next very important step is to try it
09:20 - out for yourself so I opened up a Unity
09:22 - project and started writing some code
09:23 - tried making a component a system I
09:25 - explore the differences between the
09:27 - system based and I system I spent a
09:29 - bunch of time experimenting with making
09:30 - my own aspect learning about all the
09:32 - things you can and cannot do within them
09:34 - and in my case another excellent thing
09:36 - that really helps my learning process is
09:38 - this very Channel if you ever want to
09:40 - try and learn something try to teach it
09:42 - to someone when you try to teach it it
09:44 - forces you to really learn the content
09:45 - so for me making video tutorials is an
09:47 - excellent way to help my own learning
09:49 - process if you want maybe try doing that
09:51 - yourself maybe make a tutorial video on
09:53 - some topic or perhaps just try to
09:55 - present something and teach your friends
09:57 - alright so those are a bunch more of
09:59 - your questions and my answers to them I
10:01 - hope you'll learn something new check
10:02 - out the entire playlist to see some more
10:04 - interesting questions I've already
10:05 - answered thousands of questions so stay
10:07 - tuned for more videos like this so you
10:08 - can learn from what others have asked
10:10 - alright hope that's useful check out
10:12 - these videos to learn some more thanks
10:14 - to these awesome patreon supporters for
10:16 - making these videos possible thank you
10:18 - for watching and I'll see you next time
10:23 - [Music]