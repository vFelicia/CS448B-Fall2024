00:00 - In this video, we're going to
learn Unity in under 20 minutes.
00:03 - Game objects, components,
scenes, physics, and more.
00:06 - Alright, let's begin.
00:12 - Okay, so first things first.
00:13 - Let's cover how
Unity versions work.
00:16 - Right now you can get
version 2019 and 2020.
00:19 - The 2019 version is in long-term support,
which means it's extremely stable.
00:24 - Whereas the 2020
version is in a tech release,
00:27 - which means it is being
used for testing new features.
00:30 - So that means that for most cases,
you want to use the most stable version,
00:34 - which in this
case is the 2019.4,
00:36 - which is what
I'll be using here.
00:38 - Now, as soon as
you download Unity,
00:40 - you're actually going to
download the Unity Hub.
00:43 - This is the program that manages
all your projects and Unity versions.
00:47 - So you've got the Projects
tab with all your projects.
00:49 - You have the Learn tab with a bunch
of official learning content from Unity.
00:53 - Then the Community
with a whole bunch of links
00:56 - and the Installs, which
shows all of the editor versions
00:58 - you have installed
in your machine.
01:00 - So here in the Projects tab, let's
hit new and we get this new window.
01:04 - Now in here we can see a
whole bunch of different templates.
01:07 - They will simply set up the
starting state of your project,
01:09 - so don't worry too much.
01:11 - For example, if you
select the 3D template,
01:13 - you can still use
2D or vice versa.
01:15 - Now these two down here are for
the two separate render pipelines.
01:19 - The high definition
Render Pipeline is focused
01:21 - on giving you the
absolute best visuals,
01:23 - and the Universal Render
Pipeline is focused on making
01:26 - your project run on anything.
01:28 - So if you're an indie
game developer,
01:29 - chances are you'll be mainly
working on the Universal
01:32 - unless you're trying to push
the limits with the visuals.
01:35 - Now, in this case,
01:36 - we want the simplest
thing possible.
01:37 - So let's just select the
basic empty 3D template.
01:41 - Let's just give it a name
01:43 - and just hit Create.
01:50 - And yep, here we are in
our brand new empty project.
01:53 - So over here we have our scenes
starting with light and just a camera.
01:57 - So everything is
completely empty.
01:58 - So we have a real nice blank
canvas where we can create anything.
02:01 - Now right away we see
the default Unity layout.
02:05 - You can see that there's
lots of tabs everywhere.
02:07 - So for example, here
is the Scene view.
02:09 - Then over here is the
Inspector and so on.
02:12 - By clicking and dragging,
02:13 - you can move them around so
you can place them anywhere.
02:15 - So you can customize the editor
to look exactly the way you want it.
02:19 - Now I'll cover what each of
these windows does in a bit,
02:22 - but first let's set
up our layout.
02:24 - Now for me, I've been
using Unity for a long time
02:26 - and this is the layout
that I found best,
02:28 - so the Inspector is nice on
the right side, always visible.
02:32 - Then I place the
Hierarchy down here.
02:34 - Then the project files here
next to it with the console.
02:37 - Then on the project files,
02:38 - I also like to see them on
a standard explorer view.
02:41 - So just go in here instead of the two
column layout, I prefer the one column.
02:45 - And just like that, you
can see everything.
02:47 - So that's the project files,
02:48 - and next to it, again,
the normal console.
02:51 - And up here a nice big
view of our scene view.
02:54 - And next to it we
have our game view.
02:56 - So this is the layout that
I normally use, but again,
02:58 - all the windows
are customizable.
03:00 - So if you prefer
something different,
03:01 - by all means use that.
03:02 - You can drag and place any
window and place them anywhere.
03:05 - Okay, so now let's cover what each
of these windows actually represents.
03:09 - Now, right down the middle
we have our scene view.
03:12 - So this showcases everything that
you have placed in this scene world.
03:16 - For example, I
can place an object.
03:18 - So I go down here to this
plus, create a new 3D object.
03:21 - Let's make it a cube.
03:22 - There you go. Just like this,
03:23 - I have a basic cube right
in the middle of my scene.
03:25 - You can also see these handles.
03:27 - So these allow us
to move the object.
03:30 - So for example with this one, I
can move it just on the X-axis,
03:33 - moving it on the Z-axis
and on the Y-axis.
03:36 - Or just any of these
and move them around.
03:38 - Now this is only the
editor's scene view.
03:41 - It is not the game view.
03:42 - If we click on the game view,
03:44 - then now we are actually
seeing what the camera sees.
03:47 - Whereas in the scene view,
03:48 - we are free to roam around and
look around from any perspective.
03:51 - Now for the other windows
down here, we have the Hierarchy.
03:54 - So this shows all the objects that
currently exist in this scene world.
03:58 - Up here we have the name of
our scene, our sample scene,
04:01 - and here are all the
objects inside of this scene.
04:04 - Then here on the right
we have our Inspector.
04:07 - This shows detailed information
of whatever object we select.
04:11 - So on the Hierarchy, we simply
click to select an object, and yep,
04:14 - it shows the object over
here in the Inspector.
04:17 - It shows the object name up here and
all the components attached to that object
04:21 - along with all of their fields.
04:22 - Now I'll cover
components in a bit.
04:24 - Then down here we
have our project files.
04:27 - So this is just the folder
structure for your entire project.
04:30 - So if you right click and
click on Show in Explorer,
04:34 - it opens up the basic Explorer and
you can see that all of the assets in here
04:38 - in the project files are the
ones inside the assets folder.
04:41 - So as you can see, we
have a Scenes folder,
04:42 - and inside we have
our Sample scene.
04:44 - Alright, so those are
the basic windows.
04:47 - Now let's go back here
into our scene view window.
04:50 - And again, here we can see
the entire world view of this scene.
04:53 - So in terms of controls,
04:55 - everything is pretty basic.
04:56 - So we can select objects
by left clicking on them.
04:59 - Then we can look
around with right click.
05:01 - If you press Alt and
left click and drag,
05:04 - you can orbit around
a certain position.
05:06 - You can zoom in and
out with the mouse wheel.
05:09 - to pan around, you can
use the middle mouse click
05:13 - or alternatively up here,
05:14 - use the hand tool, just
hand and just left click.
05:18 - You can also do
freeform movement.
05:20 - So with right mouse button down,
05:21 - looking around and we can
move using W, A, S and D.
05:25 - So just basic as if it
was a normal game.
05:28 - we can increase and decrease
the speed with the mouse wheel.
05:31 - So press mouse button down,
mouse wheel up, and there you go.
05:34 - Now we're moving at 2x speed,
05:36 - move it down, and now
we are moving very slow.
05:38 - And if you get way too far
away from a certain object,
05:41 - you can, for example, select
over here on the Hierarchy
05:44 - and press the F key.
05:45 - And there you go, it zooms
in straight on the object.
05:48 - So the object zoomed
in, and for example,
05:49 - if I orbit around now it
orbits around the object.
05:52 - Then up here we
have our toolbar.
05:54 - Now we already
saw the hand tool,
05:56 - which is used for
panning around.
05:58 - Then we have the move tool,
05:59 - which shows all of
our movement axis.
06:01 - So moving the X, the
Z, the Y, or any of them.
06:05 - Then we have the
rotation tool, which again,
06:07 - we can rotate individually on
each or rotate on all of them at once.
06:12 - Then we have the scale tool,
06:13 - so we can scale on the Y,
06:15 - scale on the X or scale
on all of them uniformly.
06:18 - The next to it is the Rect tool.
06:20 - So this one also
modifies the scale,
06:22 - but it does so on
a different way.
06:24 - Now this tool is mainly
used when working in the UI.
06:27 - And finally we have the Combined
tool which combines all of them.
06:30 - So over here we can move, we can
scale, and we can rotate all of them.
06:35 - Alright, so that's the controls
and all of our basic tools.
06:38 - and all these tools can be
accessed with the keyboard.
06:40 - So press the Q, and now
we have the hand tool.
06:43 - Press the W, we can move.
06:44 - Press E, and we
have the rotation.
06:46 - The R, we have our scale,
06:47 - and T we have the Rect tool.
06:50 - And with the Y, we
have the combined.
06:52 - All right, so that's the
controls and the basic tools.
06:55 - Okay, so now that we cover
the interface and all of its controls,
06:59 - let's see the basics on how
the engine actually works.
07:02 - Now, as you already saw
over here in the Hierarchy,
07:04 - we have a list of all of
the objects in our scene.
07:07 - They are technically
called game objects.
07:10 - So a game object is the
main building block in Unity.
07:13 - It's the base for every
object in your game.
07:16 - With game object selected,
07:17 - we can look over
here in the Inspector
07:20 - and right away up here we
see the name of the game object.
07:23 - So you can change this
to whatever you want.
07:27 - As you update, you can see that the
name also updates on the Hierarchy.
07:30 - You can also click on this
button in order to add an icon.
07:33 - So for example,
let's add this one.
07:35 - And now on the scene
view, I can see the icon there.
07:38 - Now a game object can have
components attached to it.
07:42 - Unity is all about composing a
game object with various components
07:45 - to get the behavior
that you want.
07:47 - So for example, let's go up here
and just create an empty game object.
07:50 - So I created, and there you go,
07:51 - there's the game
object, there's a name,
07:53 - and by default it has a
Transform component.
07:56 - So every game object always
has a Transform component.
07:59 - Now this component stores the game
object's position, rotation, and scale.
08:03 - So this is the name of the component
and these are the three fields for it.
08:07 - By adding more components,
08:08 - you add more logic and
behavior to your objects.
08:11 - So by itself, this empty game
object doesn't have any visual at all.
08:14 - So in the scene view, we can
move our object with our handle
08:17 - and we can see that
it's moving the transform,
08:19 - but there's no actual visual.
08:21 - In order to actually see it,
08:22 - we need to add some
sort of visual component.
08:25 - So for example, let's
add a mesh component.
08:27 - So we click on Add component,
08:29 - and over here we can manually
select from any of these groups.
08:32 - So in this case,
08:33 - we can go into mesh
and click on the mesh filter.
08:36 - Or alternatively,
08:37 - we can use the search
bar and just type in mesh.
08:40 - And there you go.
08:41 - We have our mesh filter.
08:42 - and now we can see the fields
related to this specific component type.
08:45 - So as you can see, they are
different from the transform.
08:48 - This component requires a mesh.
08:50 - So we can click on this button
here in order to select a basic mesh.
08:53 - So we click on it
08:55 - and we get this window.
08:56 - So here we can see all the meshes
currently available in our project.
09:00 - So we have all of our defaults.
09:01 - So let's select the basic cube,
09:03 - and now we still
don't see anything.
09:05 - That's because this
component only stores a mesh.
09:08 - It doesn't actually
have a visual.
09:10 - So in order to
visualize this mesh,
09:12 - we need to add
another component.
09:14 - This one will be
the mesh renderer.
09:16 - And as soon as we add it, now
we can indeed see our cube mesh.
09:20 - So the mesh filter has a single
purpose, which is to store a mesh.
09:23 - And the mesh renderer
has a single purpose,
09:25 - which is to render
whatever mesh it has.
09:28 - So here we see all the fields that
define how this object is rendered.
09:32 - And right away we can see
that our mesh is actually in pink.
09:35 - Now the reason for that is
because pink is the default color.
09:38 - So when you don't have anything
assigned, it won't render as pink.
09:42 - What defines the rendering
is over here, the materials.
09:45 - So materials are what defines
how an object is rendered.
09:48 - We can create a material by
going over here into our project files,
09:51 - click the plus button,
09:53 - and over here we can
create a whole bunch of stuff.
09:55 - And let's select the material.
09:56 - Now we have our material.
Let's give it a name,
09:58 - our cube material,
10:00 - and here it is, our
material in the Inspector.
10:02 - Now each material
uses a Shader up here.
10:05 - This is what defines the
various properties of that material.
10:09 - So for example, if we
select the very simple shader,
10:12 - there you go. This
one is extremely simple.
10:14 - Only it has a basic
film for a texture.
10:17 - And if we select the more complex
shader, like the default shader,
10:20 - this one has a bunch more fields
related to how they interact with light
10:24 - and normal maps and so on.
10:25 - So with this standard shader,
10:27 - over here we have
a field for the Albedo.
10:29 - This what defines the
actual color of the object.
10:32 - And over here we have a little square
and then our button to select something.
10:36 - So if we click on it,
10:37 - now we see all the various sections
that we can use with our material.
10:41 - For here, let's just select
one of the default textures,
10:44 - and just like that.
10:45 - down here we can see a preview
of what our material looks like.
10:49 - We can also play around with making it
more metallic, more smooth, and so on.
10:53 - For now, let's leave
it all at the defaults.
10:55 - Okay, so we have our material.
10:56 - Now let's go back
and select our object.
10:59 - Then we have the
field for our material,
11:00 - and we can again just click
in here and select the material.
11:03 - Or alternatively,
11:04 - we can click and drag from our
project files and drag it right in there.
11:07 - And there you go. We have our
material being applied to our mesh.
11:10 - Alright, awesome.
11:11 - So far, so good.
11:12 - So we made the game object.
11:14 - We added the
component to add a mesh,
11:16 - then we added another component
to actually render that mesh
11:19 - with a specific material
using a specific texture.
11:22 - Now again,
11:23 - Unity is all about components
attached to game objects.
11:26 - So we can keep adding components
to add more logic and behavior.
11:29 - For example, we can
click on add component
11:31 - and let's add a rigid
body component.
11:34 - So this one will make the game
object exist in the physics world,
11:37 - which will make it
fall down with gravity.
11:40 - So let's make sure that the game object
is positioned in front of the camera.
11:43 - So you can see
the camera's here,
11:44 - the camera's being
in there and yep,
11:46 - there you go. The game
object is indeed in there.
11:48 - Alright, so now we
can try to hit play.
11:50 - And right away we see our
object follow along with gravity.
11:53 - So as you can see,
11:54 - it's extremely simple to
add physics interactions.
11:56 - Just add a rigid body
component. And there you go.
11:58 - Now it's being
affected by gravity.
12:00 - Now, by itself,
12:01 - the rigid body doesn't
have a physics shape,
12:03 - so in order to do that we
can add another component.
12:06 - So in this case, let's
add a sphere collider.
12:09 - So in the shape of a sphere,
12:11 - and let's change our
mesh from a cube.
12:13 - Let's select our
sphere. There you go.
12:15 - So we now have a visual sphere along
with a rigid body and a sphere collider.
12:19 - Now let's try
creating a new plane.
12:22 - So clicking here,
create a new 3D object.
12:24 - Let's make a new plane.
12:26 - let's put it underneath
the sphere.
12:28 - Now by itself when
you create a plane,
12:30 - you can see that it already
has a mesh filter, mesh render,
12:32 - and also a mesh collider.
12:34 - So this shape has collisions.
12:36 - And if we run,
12:38 - there you go, the sphere falls
and falls right on top of the plane.
12:41 - Now if we just
slightly rotate the plane
12:44 - and test again,
12:46 - and there you go, the
sphere falls along with gravity.
12:48 - And since the plane is slightly
rotated now it's gonna roll away.
12:51 - So it's rolling,
rolling and yep,
12:53 - there you go, it
goes falls down.
12:55 - So as you can see, that's how
easy it is to add physics to your game.
12:58 - You just had a collider and
a rigid body and just like that,
13:01 - we have some really
cool physics interactions.
13:03 - So as you can see,
13:04 - a game object is the
base building block in Unity.
13:07 - It can have components
attached to it,
13:09 - and those components are what
defines how the object looks and behaves.
13:13 - Each component has a purpose.
13:15 - You can browse around this add component
list to see all the components that are
13:18 - available by default.
13:19 - And you can also obviously
make your own scripts
13:21 - and add them as
components your game objects.
13:24 - Now to make script, we
just go into our project files.
13:27 - Let's right click here on the
assets folder, go into Create,
13:30 - and let's create
a new C# script.
13:32 - Let's call this our
custom component.
13:35 - And now when you install Unity,
13:37 - it also install Visual Studio
and linked it with the editor.
13:40 - So just by double
clicking on this file,
13:43 - it should open up Visual Studio.
13:45 - And yep, right away
we see our default script.
13:47 - Now here I'm just covering an
overview for how the engine works,
13:50 - so I won't go too
deep on scripting.
13:53 - By default, you can see that we
have the start and update functions.
13:56 - So the start is called once
before the first frame update.
14:00 - And the update is
called once per frame.
14:03 - Now one important thing
that you can see here
14:05 - is how it extends MonoBehavior.
14:07 - This is the base Unity class
that all scripts must extend
14:10 - if you wish to use this
class as a component.
14:13 - So let's leave it as it is and
let's go back into the editor.
14:17 - And here we can add our custom
script as a component to our object.
14:20 - So we can either click on add
component and find our custom component.
14:24 - There it is.
14:25 - Or alternatively,
14:26 - we can just click
and drag from here
14:28 - and drop it right in there.
14:29 - There you go.
14:30 - There's our custom component
attached to our game object.
14:33 - Now just for testing,
14:34 - let's go back
into Visual Studio.
14:36 - And in here, let's
add some messages.
14:41 - All right, so I'm just calling
the Debug log function.
14:44 - So this function simply logs
a message to the console.
14:47 - So there's one on
start and one on update.
14:50 - So now if we go
back into the editor
14:52 - and if we run our game,
and now down here,
14:54 - if you look on the
console, yep, there you go.
14:56 - We can see our messages.
14:57 - So we can see that
the start ran just once.
15:00 - And then we've got updates being
called on every single frame nonstop.
15:04 - Okay, awesome.
15:05 - So that's how custom
components work in Unity.
15:08 - Now another thing about Unity
is how it works both in 2D and 3D.
15:12 - So over here, if we
select our main camera,
15:14 - we can see that it's a 3D camera
15:16 - and on our sphere we
have a sphere mesh,
15:19 - but we can easily
change this to 2D.
15:21 - So instead of a mesh
render and a mesh filter,
15:24 - let's instead add a component
of type Sprite renderer.
15:28 - So this one
displays a 2D Sprite.
15:30 - So in here we
click on this button,
15:31 - let's select one of
the default ones.
15:34 - So let's say this one.
15:35 - And there you go.
15:36 - You can see the Sprite.
15:37 - Yep, there you
go. That's a Sprite.
15:39 - So you can see that
it is completely flat.
15:41 - So yep, just like that.
15:42 - So that's how you
make it to the visual.
15:45 - And now on the camera right now,
15:47 - you can see this is a
perspective camera.
15:49 - So over here we
have a field of view.
15:51 - So we can swap it out.
15:52 - Over here we have the projection
15:54 - and we can swap the
projection from perspective
15:56 - and put it in orthographic.
15:58 - So now, as you can
see, yep, it is a flat 2D.
16:01 - Okay, so we're back
here on the scene view.
16:04 - And now down here
we see the Hierarchy,
16:06 - which shows every
object in this scene world.
16:09 - So let's quickly cover
what are our scenes.
16:11 - Now scenes are one of
the main ways you have
16:14 - of organizing different
parts of your game.
16:16 - So for example, you would
have a scene for the main menu,
16:18 - another one for the game,
16:19 - another one for a different
part of your game and so on.
16:22 - You can easily create a scene
by going to the project files,
16:26 - click on the plus sign, and over
here we create an new scene.
16:29 - Let's call this our second scene
16:32 - and double click to open it.
16:34 - And yep,
16:34 - right away you can see that we no longer
have the objects we had in our scene.
16:38 - So we're back into a
default empty scene.
16:40 - So down here we
can see the Hierarchy.
16:42 - Yep, we just have the
camera and the light.
16:44 - And if you go back into our original
scene, our objects are all still here.
16:47 - So as you can see, they are
in completely separate worlds.
16:50 - You can have as many scenes as
you'd like to help you manage your game.
16:53 - Alright,
16:54 - so you just learned the basics
of Unity in under 20 minutes.
16:57 - Now that you know the basics, you can
go follow some more complex tutorials.
17:01 - Unity is extremely versatile.
17:02 - You can use it to build very
simple or very complex games.
17:06 - So anything from shooters to
point and clicks to deep simulations,
17:09 - the only limit is only
your imagination.
17:12 - Alright, if you found
the video helpful,
17:13 - hit the like button and subscribe
to the channel for more videos.
17:16 - Post any questions you have in the
comments, and I'll see you next time.