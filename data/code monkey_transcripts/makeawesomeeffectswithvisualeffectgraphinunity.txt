00:00 - in this video we're going to get started
00:01 - using unities visual effects graph this
00:04 - is a new particle system that is super
00:06 - fast which allows you to have an insane
00:08 - amount of particles it's also node base
00:10 - so it's very easy to create some awesome
00:12 - effects what's being
00:16 - [Music]
00:20 - hello and welcome I'm your code monkey
00:23 - and this channel is all about helping
00:24 - you learn how to make your own games
00:26 - with NF tutorials made by a professional
00:28 - indie game developer so if you find the
00:29 - video helpful consider subscribing okay
00:32 - so here on let's look at the visual
00:33 - effects are first of all we're going to
00:35 - see what it is then we're going to play
00:37 - around with it and in the end we're
00:39 - going to check out some really awesome
00:41 - pre-made samples so the visual effects
00:44 - where F is a particle system in unity it
00:46 - allows you to make some really complex
00:48 - visual effects using millions of
00:50 - particles it is built through a
00:51 - node-based interface so it's very easy
00:53 - to use while also being extremely
00:55 - customizable you can set up some really
00:58 - complex logic to make lots of really
01:00 - awesome gorgeous effects right now
01:02 - there's a spring sale happening on the
01:03 - assets or turns of great assets icons
01:06 - sound effects and awesome tools at a
01:07 - great discount use them to make your
01:09 - game really stand out check it out by
01:11 - clicking the link in the description and
01:12 - if you pick up anything through there
01:14 - you'll also be helping out the channel
01:15 - now as you might know unity has already
01:18 - had a built in particle system for a
01:20 - very long time now the main difference
01:22 - between the belton and the visual
01:24 - effects graph is how one runs on the CPU
01:26 - and the other one runs on the GPU so
01:29 - that means that the visual effects were
01:31 - F does not replace the built in system
01:32 - but rather they won't continue to
01:34 - coexist side by side because each has
01:36 - their pros and cons in terms of the
01:38 - renderer the built in runs on the built
01:41 - in renderer where is he visual effects
01:42 - reference on the universal or the
01:44 - high-definition render pipelines for the
01:47 - number of particles the built in
01:48 - supports thousands of particles whereas
01:51 - the visual effects where F supports
01:52 - millions the built in runs on the CPU so
01:55 - it can directly interact with the
01:56 - physics system whereas the visual
01:58 - effects where F cannot interact directly
02:00 - but it can do it with some complex
02:02 - methods you can use C sharp scripts to
02:04 - directly modify anything about the built
02:06 - in particle system like you can access
02:08 - stats for each individual particle and
02:10 - listen to collision events whereas in
02:13 - the visual effects were a few have
02:14 - similar mutations since you are
02:16 - accessing that on the GPU but you can
02:18 - access and modify expose properties and
02:21 - interact with custom events
02:22 - lastly the built in particle system
02:24 - cannot read frame buffers but the visual
02:26 - effects are F camp so you can see how
02:28 - each has its pros and cons if you want
02:31 - knowns of particles
02:32 - use
02:32 - visual-effects graph and if you want
02:34 - easy interaction with the physics world
02:36 - then you should use the built in
02:37 - particle system alright so now that
02:39 - we've seen a bunch of pros and cons
02:41 - let's try playing around it now if
02:44 - you're already familiar with using the
02:45 - shadow graph then you own very easily
02:47 - pick up the additional effects worth and
02:48 - if you've never used either of them then
02:50 - they are very easy to use its own load
02:52 - base so just follow the connections this
02:54 - video is made possible thanks to these
02:56 - awesome supporters go to
02:58 - patreon.com/scishow to code monkey to
03:00 - get some perks and help keep the videos
03:02 - free for everyone ok so here I am in a
03:05 - basic empty scene now the first thing we
03:07 - need is to install the visual effects
03:09 - graph package so we go into window in
03:11 - order to open up the package manager and
03:13 - then in here you scroll down until you
03:16 - find the visual effects package there it
03:19 - is the visual effect package and then
03:22 - here you just install it also you have
03:25 - the visual effects Rev samples so import
03:28 - those also to your project and we'll
03:29 - check them out in the end now the visual
03:31 - effects where f can run on the universal
03:33 - or the high definition render pipelines
03:35 - so make sure you're using one of those
03:37 - as well in this case I have the
03:39 - universal render pipeline installed so
03:41 - here in the project settings you can see
03:43 - that I'm using a universal render
03:44 - pipeline asset and in asset I'm just
03:47 - using a basic forerunner okay so we down
03:50 - the setup done let's start making an
03:51 - effect so over here in our project files
03:54 - let's right-click and we're going to
03:56 - create and over here something like the
03:58 - visual effects and let's create a new
04:00 - visual effect where let's call this our
04:02 - test the effects so here we have our
04:06 - effect in the project files and we can
04:07 - simply drag it straight onto our
04:09 - hierarchy and there it is there's our
04:11 - effect in our scene so just like that we
04:14 - have our effect now in here one thing of
04:17 - note here in the hierarchy we do not
04:20 - have this exact object directly what you
04:22 - do have is a game object with a visual
04:25 - effect component and then this component
04:27 - has a field for the actual visual effect
04:29 - graph so the graph and the game object
04:32 - are two separate things
04:33 - so for example another way of creating
04:35 - it is let's create a new game object
04:37 - what's going to visual effects and
04:39 - create a new visual effect so we're here
04:41 - we have a new visual effect object and
04:43 - as you can see there is nothing on it
04:45 - because it does not have a visual effect
04:47 - asset assigned so we need to assign it
04:49 - so just drag this one and there you go
04:52 - just like this now it does work so just
04:54 - keep in mind that the graph and the game
04:56 - object are two separate things we're
04:58 - going to see how that is important later
05:00 - in the video
05:00 - all right so let's play around with our
05:02 - effect now the first thing we do is
05:04 - simply double click on our test VFX
05:06 - graph there you it opens up the visual
05:09 - effects graph window and now in here
05:11 - let's dock it right on the right side
05:17 - all right so just like this we can see
05:20 - both the we're having the effect side by
05:21 - side now over here in the graph you can
05:24 - see that it is split into various
05:26 - sections or as they're called contacts
05:28 - now the logic essentially runs from top
05:31 - to bottom so first our particles are
05:33 - spawned then they are initialized
05:35 - afterwards we have the update which runs
05:38 - on every frame and lastly we have the
05:40 - output which finds how the particles are
05:42 - rendered so here we can see how the
05:44 - default effect works so first over here
05:47 - on the spawn context we set the spawn
05:49 - rate so in this case it's spawning 16
05:51 - particles per second then on the
05:54 - initialize first we assign a maximum
05:56 - particle capacity so for example up here
05:59 - if I set the spawn rate super high you
06:01 - can see that it's not really spawning
06:03 - that many particles in order to do that
06:05 - we also need to increase the capacity so
06:06 - if I increase it if there you go now you
06:09 - can see a monumental amount of Pardons
06:11 - then over here we also have the culling
06:13 - bounds so essentially this is a box with
06:16 - a specific size and this box needs to be
06:18 - visible by the camera in order for the
06:20 - particle system to actually be rendered
06:22 - then we also have a random velocity
06:24 - block so you can see how each particle
06:26 - is randomly moving a bit side by side we
06:29 - also have a random lifetime so particles
06:31 - will live between 1 and 3 seconds then
06:33 - over here on the update context right
06:35 - now we're not doing anything and then
06:37 - lastly we have the output which defines
06:40 - how the particle is rendered and in this
06:42 - case we're using the default particle
06:44 - texture it's set to constantly face the
06:46 - camera it increases its size over its
06:49 - lifetime and it's changing the color
06:51 - from transparent to Y to transparent
06:53 - again so here you can see that the
06:54 - particle does exactly that
06:56 - so it spawns it moves up it
06:58 - goes from transparent on to white and
07:00 - back to transparent and size increases
07:02 - over time now as I said all this is
07:05 - totally customizable so on each context
07:07 - you can add or remove various blocks so
07:10 - for example let's select over here the
07:12 - update particle context and then we can
07:15 - either hit the spacebar or we can right
07:17 - click and create block and now in here
07:20 - we have all the actions that we can take
07:22 - inside of this context so for something
07:24 - very simple let's just add gravity so we
07:27 - can use the search bar to search for
07:28 - gravity and there you go and just like
07:31 - that you can already see that the
07:32 - particles are spawned they start falling
07:33 - down so that's how you add a block onto
07:35 - a context and another thing you can do
07:38 - is also add nodes outside of the box
07:40 - so click out here and either right click
07:42 - or press the spacebar so let's try it
07:44 - out to the very basic test now first
07:46 - let's remove the gravity and then let's
07:49 - also remove the random blocks so just
07:51 - like this as you can see we have no
07:53 - particles so for the first thing let's
07:55 - add a set lifetime block so let's set it
07:58 - to 1 which means each particle won't
08:00 - live for exactly one second then let's
08:03 - also add a set velocity block and let's
08:07 - hit the y22 and yep there you go now we
08:09 - can see each particle moving straight up
08:11 - and then let's also add a set position
08:13 - and this will set the starting position
08:16 - of each particle and now in here and
08:18 - let's play around with these values
08:20 - rather than setting something fixed so
08:22 - let's click outside of the context in
08:24 - here we press space and let's add a
08:27 - simple sine wave there we go we have our
08:29 - sine wave with input frequency minimum
08:31 - and maximum so we have all of our
08:33 - various fields and now if you're already
08:35 - familiar with sheet where often this
08:37 - won't be extremely familiar all we need
08:39 - to do is really just connect the dots so
08:41 - in this case let's expand the position
08:43 - so we can individually access the x y&z
08:45 - and over here on the output of our sine
08:48 - wave let's connect that into the input
08:50 - of the X so just like that we have a
08:52 - sine wave being outputted onto the input
08:54 - for the position X so by modifying this
08:57 - input you can see that we change that so
08:59 - now again just like in shader we're off
09:00 - let's spawn a simple time node so we get
09:04 - the total time and now in here we simply
09:06 - connect the total time onto the input
09:08 - and there you go just like that we have
09:10 - a very nice effect
09:11 - so we have our total time being inputted
09:13 - onto the sine wave and then we have that
09:16 - sine wave going onto the set position X
09:19 - so just like that we have some very
09:20 - simple logic working and just like this
09:22 - you can see just how customizable this
09:24 - system is so you have the various
09:26 - contexts running from top to bottom and
09:28 - then you can apply all the logic that
09:29 - you want using nodes going from left to
09:31 - right now something else you can do is
09:34 - expose properties so for here we have a
09:36 - button which opens up the blackboard so
09:39 - you click it and you see this and now in
09:41 - here we can click on the plus icon and
09:43 - we can add some properties so in this
09:46 - case and let's add a new fold property
09:47 - let's rename this to the sine max let's
09:51 - make it a range range between 0 and 10
09:54 - and let's default it to 1 and lastly and
09:58 - let's tick this box in order to expose
09:59 - it all right so now here we can use it
10:01 - on our graph so just drag it in there
10:03 - and now we can drag it on to the maximum
10:05 - yet there you go so by default it's
10:07 - going between 0 and 1 so just the same
10:08 - however now if we go into our hierarchy
10:11 - and we select our VFX object over here
10:14 - we can see the various properties so we
10:16 - can see our sine Max and now if you
10:18 - remember a while ago I talked about the
10:20 - separation between the effect graph and
10:22 - the actual effect object so here is
10:24 - where that comes in handy you can see
10:26 - that we have this nice little checkbox
10:28 - on the left side this is the override
10:30 - checkbox so if I don't take it then it's
10:32 - using the default family that we defined
10:34 - on our visual effect graph
10:36 - however we can take this and override
10:38 - this with a different property so in
10:41 - this case and let's make it go to 3
10:42 - there we go now that one is much wider
10:45 - however the interesting thing is that
10:47 - this value is being applied only for
10:49 - this effect object so here in my scene
10:52 - let's duplicate this visual effects
10:54 - object let's put it on the side here so
10:57 - now we have two objects both of them
10:59 - using the same and drawing graph but now
11:01 - using your property we can make them
11:03 - behave differently so that one is going
11:05 - for a white and now in this one let's
11:06 - override and put this one on one so just
11:09 - like that without modifying the
11:11 - underlying graph we have two different
11:13 - effects so using this you can use the
11:15 - same graph and customize it in various
11:17 - ways by simply exposing some properties
11:19 - then over here on the black board you
11:21 - can see all the various types of
11:23 - properties that you can add
11:25 - so for example let's make a new gradient
11:27 - let's make this our color gradient we're
11:30 - also going to expose it and then down
11:33 - here let's drag it onto our graph and
11:35 - we're going to connect our color
11:36 - gradient to the output color so now
11:39 - again we can select the right one and
11:40 - leave it like that one and on the left
11:41 - one let's change the gradient color so
11:51 - there you go just like that now we have
11:53 - this nice gradient with a bunch of
11:54 - colors and there you go both effects are
11:57 - using the same underlying graph but they
11:58 - both look visually very different so
12:01 - that's how the separation between the
12:03 - actual effect graph and the effect
12:05 - object is extremely useful you make an
12:07 - underlying object you expose some
12:09 - properties and then you can use it in
12:10 - various different ways all right so here
12:12 - we saw the basics for how the visual
12:15 - effects work works we have our various
12:17 - contexts the logic goes from top to
12:20 - bottom and then we can add blocks on
12:22 - each specific context and then outside
12:24 - of it we can add some nodes going on
12:25 - left to right to further customize the
12:27 - inputs for each block so now that we
12:30 - know all of that let's check out the
12:31 - more complex samples now there are
12:33 - actually two samples packs the first one
12:36 - is the one that you download it straight
12:38 - from the package manager and the second
12:40 - one you can get from github so the first
12:42 - one contains some similar effects and
12:44 - second one contains a bunch of really
12:46 - awesome but more complex effects so the
12:48 - first one is over here on my project
12:50 - files so just expand all these so here
12:53 - we have a bunch of different ones so
12:55 - over here we have some nice basic sports
12:57 - then we have some smoke we have a nice
13:00 - lightening effect and then finally we
13:02 - have a bonfire and again you can inspect
13:05 - all of the visual effects where after
13:06 - make up these effects so for example
13:08 - over here we can go into the VFX and
13:11 - inspect the smoke graph and here is the
13:13 - entire effect as you can see it's
13:15 - relatively straightforward we have a
13:17 - simple constant spawn rate then we start
13:20 - off with a certain velocity going
13:22 - upwards with a bit of randomization then
13:24 - it uses a flip book texture for the
13:26 - visual and it also picks a random
13:28 - starting index then on update you can
13:32 - see it apply some force you push it
13:33 - upwards and have some drag then also use
13:36 - a flip up player in order to animate the
13:38 - flip book
13:38 - and then lastly down here on the output
13:41 - it renders the particle makes it face
13:43 - towards the camera increase the size
13:45 - over the lifetime increase and decrease
13:47 - the Alpha and makes it fade based on
13:50 - proximity to the camera so you can look
13:52 - around these samples and inspect off the
13:54 - graphs to see how they were made to get
13:56 - an idea of how you can make some really
13:57 - awesome effects and speaking of Awesome
14:00 - effects there's another simple project
14:02 - with a bunch of really cool effects made
14:04 - using the visual effects where you can
14:06 - grab them from the official github page
14:08 - there's a link in the description
14:10 - download that project and when you open
14:12 - it you don't see this so this one
14:14 - contains a whole bunch of sample so here
14:16 - all of them are there are some really
14:18 - gorgeous effects so it contains a demo
14:21 - scene where we can cycle through all of
14:23 - them so we're here we have the unity on
14:25 - Logan looks really cool then we have
14:27 - this mask with some really awesome mesh
14:29 - deformation then over here some
14:31 - butterflies just flying around there's
14:33 - one with some grass being affected by
14:35 - wind and movement this one is showing
14:37 - off some really cool volumetric light so
14:39 - it turns out particles then over here
14:41 - some really cool important and as you
14:43 - can see it's interacting with the floor
14:44 - then this nice animation showing up some
14:48 - nice planets this one which is super
14:50 - cool showing some Vox and wise terrain
14:52 - so here a bunch of options bunch of
14:54 - things that you can play around with and
14:55 - looks really awesome just like that then
15:00 - the genome which is the first one that
15:02 - they made there you go the genie comes
15:03 - out of the bottom while the particle is
15:05 - moving in there you go tons of particles
15:07 - the spaceship tunnel this is also one of
15:10 - the coolest ones the really cool Hong
15:13 - gram effect with the animated meshes and
15:15 - the effect on the side we're only come
15:16 - upon fire with some fire smoke lights
15:18 - and so on some really nice ribbon
15:21 - animations and finally the magic book
15:23 - with the pages being torn going upwards
15:25 - and so on and so forth so this one is
15:27 - actually combining the visual effects
15:29 - raft with the work so as you can
15:31 - see over here we have tons of different
15:33 - samples all of them looking awesome and
15:35 - again you can inspect the graphs to see
15:37 - how they were made so for example here
15:39 - is the scene with the unity and logo and
15:42 - you can inspect the entire graph so here
15:44 - it is the entire effect as you can see
15:46 - it's a lot more complex but it also has
15:49 - a whole bunch of sticky notes so you can
15:51 - easily understand how
15:52 - actually works so you have tons of
15:54 - samples which showcase the power of this
15:56 - awesome tool if you like to see me go
15:58 - more in depth into how each of these
15:59 - samples work let me know in the comments
16:01 - all right so that's the visual effects
16:03 - graph it allows you to create awesome
16:05 - effects that render mils of particles to
16:07 - really make your game stand out this
16:09 - video is made possible thanks to these
16:11 - awesome supporters go to
16:12 - patreon.com/scishow new code monkey to
16:15 - get some perks and help keep the videos
16:16 - free for everyone as always you can
16:18 - download the project files in a tony's
16:20 - from unity code monkey calm subscribe to
16:22 - the channel for more unity tutorials
16:23 - post any question have in the comments
16:25 - and I'll see you next time
16:27 - [Music]