00:00 - hello and welcome I'm your code monkey
00:01 - and in this video we're going to expand
00:03 - upon our 10 minute game and make it into
00:05 - a simple RTS let's begin
00:09 - so on the 10 minute challenge I took a
00:12 - different approach from most people
00:14 - instead of making something from scratch
00:15 - I use that video to highlight the power
00:17 - of writing clean reusable code because
00:20 - of that we managed to make a pretty nice
00:21 - complex scene in just those 10 minutes
00:23 - essentially we made the base for a tiny
00:26 - RTS game we can spawn warriors and they
00:29 - move towards each other and attack their
00:31 - enemies now we're going to expand upon
00:33 - it by adding some workers to gather
00:35 - resources and then manually spawning all
00:37 - of our warriors we had an entire series
00:39 - on making the gathering I and here we're
00:42 - going to do something similar over here
00:44 - I have a gaunt node sprite this won't be
00:46 - our main resource so let me drag it onto
00:49 - my scene and I want to make it into a
00:51 - prefab
00:52 - call it PF resource node gold I'm going
00:56 - to place a bunch of them around here
00:58 - okay now I'm going to drag a crate which
01:01 - will be our storage in the tent which
01:04 - won't represent our barracks from where
01:06 - we're going to spawn our warriors okay
01:09 - so this is the scene we're going to make
01:10 - we're going to spawn workers from our
01:12 - storage they are going to mind going
01:14 - from one of these nodes and drop it back
01:16 - into storage that one give us gold onto
01:19 - a global game resource pool and then
01:21 - we're going to use those resources to
01:22 - spawn a warrior from the barracks and
01:24 - then the warrior won't move ahead and
01:26 - there won't be some enemies walking
01:28 - around in the position around here
01:30 - now in this video I'm going to quickly
01:32 - write the code and do a little overview
01:33 - so if you want a more in-depth
01:35 - explanation of what I'm going to do
01:37 - check out together AI series playlist so
01:40 - let's begin by making a resource node
01:41 - class so a new c-sharp script this is
01:44 - our resource node which won't be our
01:46 - class that represents a single one of
01:47 - these resource nodes so in here let's
01:50 - make it a very simple class and we're
01:53 - going to have a constructor for the
01:54 - resource node and we're going to receive
01:56 - a transform for our transform and the
02:02 - public vector3 for our gets position
02:05 - which will return our transform position
02:08 - we could also place this as a component
02:10 - on the transform itself but this way we
02:13 - keep our code nice and separated this
02:15 - mess won't later be more complex but for
02:17 - now all we want is to create this class
02:19 - so we're not dealing directly with the
02:20 - transforms okay so with the base for a
02:22 - resource
02:23 - now let's make the worker we're going to
02:25 - do the same thing with it for the
02:27 - warrior so let's duplicate the base
02:29 - position movement handler class again
02:31 - this is one of my base class that was
02:32 - written months ago and lets me easily
02:34 - set up a character to move into a
02:35 - position so here let's make a function
02:38 - that won't receive the note that he's
02:39 - supposed to mine so make a phony void
02:41 - set resource node and I'm going to
02:44 - receive the resource note that he's
02:46 - meant to mine going to store it as an
02:50 - internal variable now let's also do some
02:54 - basic states like we did for the warrior
02:56 - so a private the noon for our possible
02:58 - States and for the worker he can be idle
03:02 - or moving to resource node gathering
03:06 - resources and moving to storage private
03:11 - state state and by default we start off
03:14 - at idle state equal state dot IO
03:18 - okay so on our update let's do a switch
03:20 - on our state case we are on state dot
03:24 - eyeball then here we're going to ask the
03:27 - game handler to give us a resource node
03:29 - so go into the game Handler and get a
03:32 - resource node we're going to make that
03:34 - function later and it will eventually
03:36 - return a resource node resource node
03:39 - we're only going to do this if our
03:42 - current resource node is equal to null
03:45 - so this is our phone resource node and
03:49 - then if found resource node is not known
03:52 - we're going to set our resource node to
03:55 - be the found resource node okay and
03:57 - finally if the resource node if it is
04:00 - not known then we have a resource notes
04:02 - and let's set the state to state out
04:05 - moving to resource node
04:07 - okay so then on the case state moving to
04:09 - resource node in here let's handle our
04:12 - movement we're going to test if the
04:15 - vector3 distance if the distance between
04:18 - this worker and the resource node docket
04:22 - position if the distance between the two
04:24 - is closed so let's say within five units
04:26 - then here we are close enough to
04:28 - actually start gathering so let's set
04:29 - these state to state dot gathering
04:32 - resources if it is not then we are too
04:34 - far so set the target
04:36 - position to be on the resource node that
04:38 - get the position
04:40 - okay so then on the case state not
04:42 - gathering resources when gathering
04:45 - resources let's play the mining
04:47 - animation and when we finish playing the
04:59 - animation let's set the state to state
05:01 - out moving to the storage and here we're
05:06 - going to get the storage transform which
05:08 - we're going to ask the game handler get
05:11 - storage transform then we check for the
05:15 - distance to our storage transform and if
05:21 - we are close enough then finally drop
05:22 - the resources and go back to idle so
05:25 - state equal state dark I don't okay okay
05:28 - so now we need to go into the game
05:29 - Handler and do these functions so back
05:32 - in the game handler let's go down here
05:34 - and make a public static this one is
05:36 - going to return a resource node we're
05:40 - going to receive a vector3 for the
05:42 - position so up here we need to add some
05:46 - serialize fields one for the storage
05:49 - transform another one for the barracks
05:53 - transform and an array for the goal node
05:57 - transform array then we're going to use
06:02 - the goal node transform array to create
06:03 - resource nodes so let's make a list of
06:07 - resource node which is the resource node
06:10 - and list and we're going to make this
06:12 - list in here on our start
06:21 - okay so we are cycling through the array
06:23 - in creating new resource node objects
06:25 - using each transform in the array so now
06:28 - we can go down here and later we're
06:30 - going to make it to return the closest
06:32 - before now let's just return a random
06:33 - one
06:40 - okay so we're returning a random
06:42 - resource node now the other function we
06:44 - need to make is to get the storage
06:45 - transform now we're simply going to
06:50 - return the instance dot storage
06:52 - transform okay so everything should be
06:54 - set for a very simple gatherer so I just
06:57 - go up here and comment out the spawning
06:59 - of the units and set a spawn a worker
07:02 - for the worker we're going to have
07:03 - another pre found so for the PF worker
07:06 - and let's instantiate them in here
07:15 - there's the worker he goes to the node
07:17 - he minds it and he goes to storage and
07:19 - back to node back to mining it and so on
07:21 - okay great
07:23 - so now that we have the worker let's
07:25 - make a game resources class to keep
07:27 - track of the total amount so let's make
07:29 - a new sea shell script call it game
07:31 - resources and here again a very simple
07:34 - class so let's make a private static int
07:38 - for the gold amount then a function
07:40 - public static void add gone amount I'm
07:45 - going to have an in for the add amount
07:47 - and go on the mount was equals yep then
07:51 - a function to try to spend so public
07:53 - static boom try spending gold amount so
07:59 - this will only actually spend the gold
08:01 - amount if we can so first we tested on
08:03 - the Mount is bigger than the amount if
08:05 - it is then we reduce the gold amount by
08:08 - the amount and return true
08:13 - if not then we return false ok ok so
08:17 - just for testing let's add a pop-up in
08:18 - here so for that I'm going to use the
08:21 - code mock utilities which as long as you
08:23 - can grab for free from unity code monkey
08:24 - calm so in here just for testing go into
08:27 - CM debug and do a text pop-up to say how
08:31 - much fun we currently have ok so we can
08:37 - now go into our worker and down here
08:40 - when you drop it off at storage let's do
08:42 - game resources and go on the Mount and
08:44 - we're going to add one gun ok so let's
08:46 - see if we see a pop-up saying one when
08:49 - the unit reaches the storage there he
08:51 - goes he's mining now he goes back to
08:53 - storage and yep there's the pop-up we
08:55 - have one gold now he goes mines another
08:57 - one goes and we got two ok good now
08:59 - let's make a UI to display the gold
09:01 - amount instead of using a debug pop-up
09:03 - so I'm going to go into the UI canvas
09:06 - and here create a new empty game object
09:08 - and we're going to call it the resources
09:11 - window in this window I'm going to put
09:14 - it on the upper left corner and add
09:15 - another empty game object for the gold
09:17 - amount text and it won't simply have a
09:21 - text and it will say gold and then a
09:24 - certain amount okay now let's make the
09:26 - script to control it so a new c-sharp
09:28 - script this will be the resources window
09:31 - in here on our private void awake let's
09:35 - grab a reference to the text component
09:37 - so a private text which is part of the
09:40 - Unity engine WI
09:49 - and on our private Lloyd update let's
09:52 - update the text okay so we should not be
09:59 - seeing the gunk curriculum displayed on
10:00 - the corner of our screen okay there's
10:02 - the go home saying zero now it drops it
10:04 - now it says one ok great so we now have
10:06 - a counter to correctly display the goal
10:07 - that we are currently carrying so now
10:09 - let's make some UI buttons to spawn
10:11 - workers and warriors so let's make
10:13 - another empty game object call it the
10:16 - unit construction window and here I'm
10:19 - going to play some buttons to construct
10:21 - them
10:59 - okay so here are some very simple
11:01 - buttons with a gold cost now let's make
11:04 - the clasp to handle unit construction so
11:08 - here is the unit construction system
11:10 - class we're going to first have a
11:13 - constructor and on this constructor
11:15 - we're going to receive all the prefabs
11:17 - that we need to construct now we're
11:29 - going to have a build queue so let's
11:32 - make a prevalent for the warrior cube
11:34 - count in order to do the construction
11:37 - I'm going to use the time tech system
11:40 - which you can check out the full video
11:41 - on so I'm going to need a private
11:44 - constant for the warrior construction
11:47 - tick max let's say in 30 ticks so in the
11:55 - game here where I'm going to initialize
11:56 - the time say system and now in here I
12:02 - can subscribe to it
12:03 - pantech system dot on tick and subscribe
12:05 - to that event okay now on the text if
12:09 - the warrior Q count if it is bigger than
12:13 - zero then we have a warrior in the queue
12:15 - so let's construct them if the tick is
12:20 - complete and let's construct them
12:29 - okay now let's have some functions to
12:32 - help us we're going to make a progress
12:34 - bar so for that we need a public float
12:37 - for the get warrior construction
12:39 - progress normalize this will tell us the
12:44 - progress of our current Warrior then
12:49 - some more helper functions okay so we
12:58 - have some nice humper functions the time
13:00 - was how many are in the queue if we are
13:02 - currently constructing and in order to
13:04 - add another one to the queue so now
13:06 - let's deal with the UI so here is the
13:11 - unit construction window now I'm here on
13:14 - our awake let's grab a reference to our
13:17 - button so a transform for the build
13:19 - warrior button and when I click on the
13:32 - button I want to add a warrior to the
13:34 - queue so I'm going to have a private for
13:37 - the unit construction system and that's
13:42 - what I'm going to use to trigger that
13:43 - function in a construction system dot
13:45 - add a warrior to the queue now we need a
13:49 - way to set the unit construction systems
13:50 - all it's editing here and finally let's
13:56 - add a progress bar to our construction
13:58 - so for that I'm going to use the UI bar
14:01 - from the utilities
14:13 - and I'm going to update the bar on our
14:16 - update okay so we should be able to
14:27 - construct and see the progress of the
14:28 - warrior construction so let's see okay
14:31 - so here we are now if I click on the
14:32 - warrior button yep there you go he is
14:34 - spawning and the bar is increasing when
14:37 - it gets the end
14:38 - yep the bar vanishes and the warrior is
14:40 - fun okay so now let's actually make it
14:42 - spin the gold in order to use it and
14:44 - let's make it so that we can also build
14:47 - some workers so let's simply get all
14:49 - this also for the worker so now in the
15:00 - unit construction system let's also add
15:02 - all this for the worker okay so we now
15:17 - have functions for the word and the
15:18 - worker so finally let's actually spend
15:21 - some goal nor to construct them so in
15:23 - here before we add these let's the
15:25 - finaland for the warrior cost and let's
15:28 - say it's two so in here on we need to do
15:31 - is go into the game resources and try to
15:33 - spend the gold amount we don't amount
15:35 - for the warrior cost and if we can spend
15:38 - this then we do add them to the queue
15:40 - and if not then we simply do a pop up so
15:47 - again use the CMD bug to do a pop up
15:54 - saying I cannot afford cost and do the
15:58 - same thing for the worker okay let's see
16:02 - it all in action okay I have zero goal
16:05 - so nope I cannot afford any of them so
16:08 - let me finish that one and I only spawn
16:10 - a warrior and yep there's the bar and as
16:13 - you can see the go into a spent I'm back
16:15 - to zero back to one and the warrior and
16:17 - yep there he is now I have five gone so
16:20 - let me spawn a worker there's the bar
16:22 - increasing and he's constructing the
16:24 - worker and after a while
16:26 - yep there you go a new worker respond
16:28 - and he's straight to work and there you
16:30 - go now we have two workers gathering
16:32 - goods and again I got more for another
16:33 - worker and now he's gonna get there and
16:36 - now I have more for another warrior and
16:37 - so on okay okay so our basic RTS system
16:40 - is working now what we really need
16:42 - obviously is some enemies which is
16:44 - exactly what we did on the previous
16:45 - video so let's just apply that and
16:47 - everything should be functional so on
16:49 - our start let's add some enemies on the
16:51 - right side so let's define a vector3 for
16:55 - the enemy center spawn position so over
17:00 - here in the editor and let me see a
17:01 - random point up here on the right side
17:04 - so about that seems okay so that's on
17:07 - let's say 270 so in here I'm going to
17:10 - spawn them on 270 zero and I'm going to
17:13 - spawn ten of them
17:23 - okay so I'm now spawning ten enemies
17:26 - around this point so now let's just
17:28 - change something on the warrior code in
17:30 - here on our closest function we are
17:32 - checking for the closest to this
17:34 - specific position now we want to add a
17:36 - flow to filter the values to only within
17:40 - a certain max distance so let's set a
17:42 - float for the max distance so here we're
17:45 - simply going to do a test for the vector
17:47 - 3 dot distance the distance between the
17:50 - position and this Warrior Diet position
17:53 - if that distance is further than the max
17:56 - distance then we're going to ignore him
17:58 - now by doing this we can go into our get
18:01 - closest and when it comes to our max
18:04 - distance if we are an enemy then we're
18:06 - going to only look for closeby opponents
18:09 - so let's search for a maximum distance
18:11 - of let's say 4 yeah if we are not an
18:14 - enemy so if we are friendly then let's
18:16 - look at pretty much an infinite distance
18:18 - okay so this way our warriors will
18:21 - always find the enemies but the enemies
18:22 - won't stick around that area until an
18:24 - opponent comes nearby okay let's test
18:27 - okay so here in my scene if I pan the
18:29 - camera to the right side you can see yep
18:31 - there's a bunch of enemies right there
18:33 - so let's go back and let's one a warrior
18:36 - so there he goes he's currently being
18:38 - spawned and when he gets to the end and
18:40 - the prefab is instantiated yep and he
18:42 - immediately finds an enemy goes towards
18:44 - it and those stand by and he only gets
18:47 - within position then they start fighting
18:49 - so he won now he goes for another one
18:51 - and now he dies okay so let's increase
18:53 - the target distance of the enemies a
18:55 - little bit and then everything should be
18:56 - working okay so here we are gathering
18:59 - some gold and let's spawn a warrior and
19:01 - there he goes he's being spawned he's
19:03 - gonna appear right in here yep he's
19:05 - gonna search for an enemy he's gonna
19:06 - head for this one since it's the closest
19:08 - once he gets here yep both of them went
19:10 - for him and he's obviously gonna die
19:12 - okay now we can go back up here and
19:16 - let's create some workers so we can
19:18 - spawn warriors faster so let's make a
19:20 - bunch of workers there's a second worker
19:22 - both them are mining gathering resources
19:25 - okay we now have four workers gathering
19:27 - resources so our resources are
19:29 - increasing quite quickly
19:30 - so now we can spawn a bunch of warriors
19:33 - and as you can see I can add them to the
19:35 - queue and when one
19:36 - and another one starts right away and
19:38 - there you go there's the other one he
19:40 - goes and he's fighting and actually
19:41 - there are two enemies in there so they
19:43 - are fighting and there you go one of
19:45 - them died another one died and there
19:47 - they go and now here are all my guys
19:49 - being spawn and now they are attacking
19:50 - them and they're going one by one so
19:53 - there you have it we expand upon the
19:54 - 10-minute game by adding some workers
19:56 - resources and spawning of warriors and
19:58 - workers in the next video we're going to
20:00 - construct buildings give orders to units
20:02 - and make the enemy warriors roam around
20:04 - as always you can download the project
20:06 - files on utilities from unity code
20:08 - monkey comm if you have any questions
20:10 - post them in the comments and I'll do my
20:11 - best answer them subscribe for more
20:12 - videos and I'll see you next time