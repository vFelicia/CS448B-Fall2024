00:00 - hello and welcome i'm your code monkey
00:02 - and here is an action rpg that i made
00:04 - entirely using visual scripting it
00:06 - features a player with multiple weapons
00:08 - so there's melee and projectiles it's
00:09 - got coins keys and doors there's
00:11 - dungeons to explore and lots of pots to
00:13 - smash and again all of it without
00:15 - writing a single line of code this is an
00:17 - excellent project that really showcases
00:19 - the power of visual scripting and how
00:21 - you can really build anything you want
00:22 - with it here i will do an overview for
00:25 - how all of this was made internally
00:26 - using visual scripting but if you want
00:28 - the complete step-by-step guide then
00:30 - check out my visual scripting course
00:32 - this is just one of the three games made
00:34 - in that course the others are a simple
00:36 - platformer and a really nice fps all
00:38 - games are complete from scratch and go
00:40 - step by step until the final punished
00:41 - games in total the course is 20 hours
00:44 - long and it will take you from beginner
00:45 - to advanced it will teach you everything
00:47 - you need to know on how to make games
00:48 - using only visual scripting go check it
00:50 - out to see this game being built step by
00:52 - step okay so here let's play the final
00:54 - game and then we're going to analyze the
00:56 - project and see how all these visual
00:58 - scripts are working together as i said
00:59 - this is a fully featured rpg so it's got
01:02 - all of the mechanics you would expect
01:03 - it's got multiple weapons keys doors
01:06 - enemies dungeons objectives health coins
01:08 - shops and so on
01:10 - so we start off on a very basic main
01:12 - menu and here we see all the game
01:13 - controls of it pretty simple so we've
01:16 - got an attack the ability to fire some
01:18 - arrows use a pusheen to block enemy
01:20 - attacks interact with various kinds of
01:22 - objects and buttons and have a really
01:23 - nice dash so we just go ahead and hit on
01:26 - play and right away we are spawned
01:28 - inside of our world so we have the
01:29 - player character and we can move around
01:31 - it as you can see the world itself is
01:33 - composed of a bunch of really nice tiles
01:35 - the player also correctly identifies
01:37 - collision so i cannot go through solid
01:39 - objects then there's a really nice dash
01:41 - to quickly move in one direction there's
01:43 - obviously sword attacks and the ability
01:45 - to fire some arrows and the errors
01:47 - themselves they reload over time so
01:48 - there they are i can fire on three then
01:50 - i gotta wait for them to reload and fire
01:51 - them are now in the ui we can see the
01:54 - current health as our hearts as well as
01:56 - the current number of coins and our star
01:58 - fragments which is the goal of the game
01:59 - for the enemies down there we see a
02:01 - really nice melee enemy he is currently
02:04 - in the patrol state so just moving
02:05 - between his various patrol points and if
02:08 - i approach if there you go he sees me
02:10 - and he starts chasing
02:11 - now if he goes if i get within range if
02:14 - there you go i take some damage but if i
02:15 - use my real nice shield yep there you go
02:17 - and i can obviously hit the enemy now
02:19 - that i took some damage i can go ahead
02:21 - pick up this coin that's nice pick up
02:23 - that one and yep there we go so now
02:25 - there's this one now let's attack him
02:27 - so if i just get within and boom there
02:29 - you go
02:30 - all right so those are the enemies then
02:32 - up here some really nice spots to smash
02:34 - so just smash them and get tons of coins
02:38 - then down here a portal so a really nice
02:41 - and i go in yep i get teleported into
02:43 - the portal and over here we've got an
02:45 - example of a shop so this one takes 50
02:47 - gold which obviously i do not have so
02:49 - that is why i cannot open the door in
02:50 - order to buy the item
02:52 - so i can go and teleport back onto into
02:55 - the main world the world itself is
02:57 - pretty massive so there's all kinds of
02:59 - things everywhere so over here turns
03:01 - more coins and more enemies i constantly
03:04 - have to attack them and again all of
03:06 - this without writing a single line of
03:08 - code so all this is being run just based
03:10 - on visual scripts
03:15 - over here really nice chess so i can
03:16 - just smack it and get tons of coins
03:19 - really awesome and over here is a
03:20 - different door this one requires the red
03:22 - key so i gotta find that one
03:25 - and go inside a different dungeon
03:28 - and the dungeons have that really nice
03:30 - moving lava and they're all pretty
03:32 - different
03:36 - and over here is the red key and i can
03:38 - pick it up
03:41 - then over there is one of the star
03:43 - fragments so that's the goal of the game
03:44 - to collect all of them and if i go in
03:47 - this one actually has a trap so a bunch
03:48 - of enemies get spawned and i have to
03:51 - somehow survive
03:57 - [Music]
04:00 - there's also some buttons that i can
04:01 - interact with so for example open and
04:03 - close the door the logic for that is
04:05 - really general so it works with just
04:07 - about anything as i'll see in a bit and
04:09 - there's also some upgrades over here if
04:10 - i pick it up yep now i've got a maximum
04:12 - hearts of four
04:14 - alright so there's only one more star
04:16 - fragment left and this one happens to be
04:18 - behind this shop and to go into the shop
04:20 - i just need to have enough gold then
04:22 - approach and there you go the door opens
04:23 - and i can go in and open up and there
04:25 - you go you
04:26 - win alright so that's a game as you can
04:29 - see this really is a fully featured rpg
04:32 - and again everything you see here works
04:34 - internally using visual scripting so
04:35 - there's no written code anywhere let's
04:38 - explore the project to see how all this
04:39 - is set up by the way if you find the
04:41 - video helpful please hit the like button
04:43 - it's a tiny thing but it really does
04:45 - help thanks
04:46 - so here i am with the editor window open
04:49 - so for example let's inspect how the
04:51 - player works so here is the player game
04:53 - object and you can see all the
04:55 - components attached to it so for example
04:57 - you see tons of variables that are
04:59 - required to make all of this work as
05:00 - well as multiple separate flow machines
05:03 - that's one of the very important things
05:04 - is how you can have multiple phone
05:06 - machines on a single object so you can
05:07 - keep all your logic nicely separated
05:10 - then some scripts are pretty massive
05:11 - like for example this one this is the
05:13 - main player script so as you can see
05:15 - very very massive but again it is
05:17 - actually quite readable thanks to all
05:19 - these nice groups so if you take the
05:21 - time to properly organize your own logic
05:23 - then all this can actually be quite
05:25 - manageable so for example for handling
05:27 - the player attack over here we go into
05:29 - the input manager we listen to an event
05:31 - that happens when the player presses the
05:32 - attack input we set a trigger on the
05:35 - animator to play a certain animation
05:37 - then do a whole bunch of things like
05:38 - play some sound we generate a bit of
05:40 - screen shake we spawn some sword slash
05:43 - particles and so on then we do a circle
05:45 - cast to identify all the hits of the
05:47 - objects that can be damaged and if so
05:50 - then they are damaged try to give a
05:52 - knockback to the object and so on so you
05:54 - can see it's a pretty massive script but
05:55 - thanks to the groups everything is
05:57 - nicely separated there's also some
05:59 - scripts that are reused so for example
06:01 - here we've got the health system we can
06:03 - look at it and see yep we have a maximum
06:05 - amount of health we have an event
06:07 - listening to take some damage another
06:08 - one to heal check if it is a full health
06:11 - check to add some health amount max and
06:13 - so on
06:14 - so this is the health system which is on
06:16 - the player and it is the one that is
06:18 - also placed on the enemy so the enemy
06:20 - itself over here it also has the exact
06:22 - same health system script so being able
06:24 - to reuse scripts is something you should
06:26 - always try to do it will greatly
06:27 - increase your productivity then the
06:29 - enemies also use a very nice visual
06:31 - scripting feature which is over here the
06:32 - state machine this is a really awesome
06:35 - built-in feature you can define the
06:36 - various states and all the conditions
06:38 - for swapping between them so it's a
06:40 - really awesome way to handle all the
06:41 - states like for example over here it's
06:43 - very easy to see what this is doing
06:45 - we've got a patrol state then we've got
06:47 - a chase state and a attack state and the
06:49 - connections between them which handle
06:51 - all the various conditions so for
06:52 - example he's on patrol and on patrol
06:54 - he's doing all this logic again with
06:56 - groups to make everything nice and easy
06:58 - to understand so it constantly cycles
07:00 - through all of the patrol positions then
07:02 - on the condition to change from patrol
07:04 - into chase over here it simply grabs the
07:07 - player it does a vector3 distance it
07:09 - checks if it is within the player
07:10 - detection radius if so then it triggers
07:12 - the transition so then it goes into
07:14 - chase then again checks if it is within
07:16 - attack range and if so plays the
07:18 - animation and so on so the state machine
07:20 - is a really awesome easy to use feature
07:22 - another thing the game has is some nice
07:24 - custom shaders made in shadowgraph for
07:26 - example when the enemies get spawned
07:28 - they have a really nice effect i
07:30 - actually covered that effect in a
07:31 - separate video previously it's a simple
07:33 - on the song shader which works great as
07:35 - a spawning effect the grass is also
07:37 - swinging in the wind so that's another
07:39 - effect that i covered in a separate
07:40 - video
07:41 - then over here everything's nicely
07:43 - organized with a whole bunch of spanish
07:45 - scripts so for example here the coin
07:47 - spawner script this is what is called
07:49 - whenever the chest takes damage so
07:50 - whenever it takes damage it spawns a
07:52 - coin so that's what it does simply goes
07:53 - into this script fires off a function
07:55 - which instead it instantiates a prefab
07:58 - and adds some velocity just make it look
07:59 - a bit nice
08:00 - so there's all these spawners and all
08:03 - those references are stored over here on
08:05 - the scene variables so this is an easy
08:07 - way to access the references for all
08:08 - these objects in order to be able to
08:10 - fire off events to do pretty much
08:11 - anything so despite the fact that this
08:13 - project is pretty huge it is very well
08:15 - organized which makes it quite easy to
08:17 - work with one interesting system is the
08:19 - key door system
08:21 - so for example the way that works is
08:23 - over here this script is on the player
08:25 - and it is listening to trigger
08:26 - collisions when a collision happens it
08:29 - checks the layer for that object that's
08:31 - how it identifies what object did it
08:33 - collide with so it checks if the layer
08:36 - is on the keys then this one connect
08:37 - with the key and if so the way that the
08:39 - system works is it simply has a variable
08:41 - of type kill list and simply adds this
08:43 - key onto that list so over here on the
08:45 - variables over here the player has a key
08:48 - list which is just a list of game
08:49 - objects so as the player picks up keys
08:51 - they get added onto this list and then
08:54 - there's the doors which again work
08:55 - pretty much the exact same way so on
08:57 - trigger enter so when it collides with
08:59 - an object it identifies if it is door
09:02 - if so then checks if the player contains
09:04 - the key that is matched up to that door
09:06 - and if so then it simply opens that door
09:08 - so for example over here is the red door
09:10 - as you can see it has the physics
09:12 - collider so that one is walkable as well
09:14 - as the trigger collider which is a bit
09:15 - bigger so when the player enters into
09:17 - this area it goes inside and checks the
09:19 - variables for this door
09:21 - and it sees if it has this key then it
09:23 - checks if the player also has this key
09:25 - if so then opens the store so it's a
09:27 - really interesting system and again not
09:29 - a single line of code here then for
09:30 - another interesting system are the
09:32 - interactable buttons so on the player
09:34 - over here there's another group for the
09:36 - interact so it goes into the input
09:38 - manager listens to the interact event
09:41 - when that happens it does a physics
09:43 - overlap circle it checks out for objects
09:46 - within the button layer and if it finds
09:48 - something then it triggers a interactive
09:50 - end on that object so this works with
09:52 - buttons but also read really just about
09:54 - anything that's the interesting thing
09:55 - about events in visual scripting which
09:57 - is you're not directly calling a
09:59 - function you're just firing off an event
10:01 - and if that object is listening to that
10:03 - particular event then it can run some
10:04 - logic so it makes it possible to make
10:06 - some really modular code so for example
10:09 - up here is this button
10:10 - and on the button it has a toggle button
10:13 - flow machine
10:14 - so what this one does is it receives the
10:16 - interact event that is fired by the
10:17 - player it triggers its own event for the
10:19 - toggle button since this is a toggle
10:21 - button
10:22 - and then it just handles all the logic
10:24 - for inverting the button state it
10:25 - updates the visual
10:27 - and then in this case this is a very
10:28 - general script so this one simply fires
10:31 - off another event which in this case
10:33 - that event is over here stored as a
10:34 - variable so it goes into this target
10:36 - object which is the door so it's this
10:38 - door and fires off this event which is
10:40 - set door open state so by the player
10:43 - interacting with this button it will
10:44 - open up this door and as you can see
10:46 - ophthalmologic is commonly separated so
10:48 - this basic logic for an interaction
10:50 - system this works with just about
10:52 - anything you want to do with it so you
10:54 - can open doors disable some cannons
10:56 - spawn some enemies anything you want
10:58 - then for the map visuals it's using the
11:00 - built-in unity towel map so it places
11:02 - all the background objects then all the
11:04 - objects on top so all the grass ground
11:07 - and so on then a whole bunch of them for
11:09 - the collectors and so on and if i zoom
11:12 - all the way out i can see this is the
11:14 - main world and then down here on to the
11:16 - side are all of the various dungeons so
11:18 - when the players enters into a portal it
11:19 - simply gets cell port onto one of these
11:21 - positions
11:22 - and the ui itself is also nicely
11:24 - decoupled from the rest of the logic
11:26 - again it's using events which is
11:28 - essential in visual scripting to make
11:29 - all of this work so for example over
11:31 - here the health ui
11:33 - it has this graph which as you can see
11:35 - it simply listens to an event on the
11:37 - player so the player fires off an event
11:39 - when the hunt amount changes and then
11:40 - the ui simply handles the logic in order
11:42 - to showcase and update the visuals there
11:44 - it is just updating all the full hearts
11:46 - or empty hearts
11:47 - and all of the input logic is abstracted
11:50 - away onto a separate input system so
11:52 - thanks to how all of this setup it is
11:54 - very simple to make this game work with
11:56 - a keyboard or with touch input or with a
11:58 - mouse or with a controller or really
11:59 - with anything so this project is an
12:01 - excellent example of just how much you
12:03 - can build with visual scripting alone
12:05 - the game is pretty complex packed with
12:07 - tons of features and all of it works
12:09 - perfectly without having to write a
12:10 - single line of code and as i mentioned
12:13 - all of this was built from scratch step
12:14 - by step in my complete visual scripting
12:16 - course so if you want to learn how you
12:17 - can build this go ahead and check it out
12:19 - this is just one of the three games made
12:21 - in that course the others are the simple
12:23 - platformer and a really nice fps all
12:26 - games are completely from scratch and go
12:27 - step by step until the final polished
12:29 - games in total the course is 20 hours
12:31 - long and it won't take you from beginner
12:33 - to advanced it will teach you everything
12:35 - you need to know on how to make games
12:36 - using only visual scripting go check it
12:39 - out to see this game being built step by
12:40 - step alright hope that's useful check
12:42 - out these videos to learn some more
12:44 - thanks to these awesome patreon
12:46 - supporters for making these videos
12:47 - possible thank you for watching and i'll
12:49 - see you next time
12:54 - [Music]