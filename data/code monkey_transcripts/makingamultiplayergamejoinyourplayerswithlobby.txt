00:00 - hello and welcome I'm your cone monkey
00:02 - and here let's learn how to use Unity
00:04 - Lobby this is their tool for helping you
00:06 - create online lobbies for your
00:07 - multiplayer games which you can join
00:09 - along with your friends and start
00:10 - playing together as a host you can
00:12 - create a Lobby give it a name make it
00:14 - public or private you can update the
00:16 - unlocked data which can be whatever you
00:17 - want like for example a game mode and as
00:20 - a player you can find public lobbies or
00:22 - join a private lobby with the code set
00:24 - some filters or use Quick join to join
00:26 - automatically the going with this tools
00:28 - is to handle everything related to
00:29 - lobbies and related to that there are
00:31 - two other Unity gaming Services tools
00:33 - I've already made an extremely detailed
00:35 - tutorial on how to use netcode for game
00:37 - objects watch that video to learn how to
00:39 - actually send data between the players
00:40 - after the game has turned and in the
00:42 - next video I'm also going to cover the
00:44 - really tool which helps you easily
00:45 - connect your players without requiring
00:47 - IPS or port forwarding all three of
00:49 - these films can be used separately or
00:51 - they can be used together in a really
00:52 - seamless easy way so in this video let's
00:55 - learn all about Lobby I'm going to focus
00:57 - on going step by step showcasing just
00:59 - using the functions and showing how the
01:01 - API works with no Visual and in the end
01:03 - I will also showcase a visual sample
01:05 - that I built myself including all of
01:07 - this functionality you can download the
01:08 - final demo the project files are linked
01:10 - in the description also this video is
01:12 - officially sponsored by Unity gaming
01:14 - services this is a collection of tools
01:16 - for helping you build operate and grow
01:17 - your games with ease it includes all of
01:19 - the tones that I'm going to mention here
01:21 - netcode for game objects for adding
01:23 - multiplayer to your games
01:24 - Lobby for joining players really for
01:27 - connecting them there's also a dedicated
01:29 - game server tool one for matchmaking
01:31 - vivox for Voice and text you have Cloud
01:34 - save for storing player data in the
01:36 - cloud cloudcon delivery for delivering
01:38 - as to your players you can explore your
01:40 - game analytics do some a b testing
01:42 - monetize with ads or do in-app purchases
01:44 - or a bunch more all of these tools are
01:46 - either completely free or they have
01:48 - generous free tiers so click the link in
01:50 - the description to learn more about TNT
01:51 - gaming services and get started for free
01:53 - alright so Lobby the first step is to
01:56 - install the package so let's open up the
01:57 - package manager then let's go up here
01:59 - into the entity registry and now just
02:01 - scroll down until we find the lobby
02:03 - package right here and just install it
02:05 - the next step is to set up a project
02:07 - with UNT services so for that let's go
02:10 - up into edit then project settings then
02:12 - go into Services now make sure you are
02:14 - signed in if not you can click on the
02:16 - button over here on the top left corner
02:17 - to sign in then over here you can create
02:20 - a brand new ENT project ID so you can do
02:22 - that through here or if you already
02:24 - created in the dashboard let's go into
02:25 - this one then select your organization
02:27 - select your project and Link the project
02:29 - okay that's it the project was linked
02:32 - now we can go into the NT dashboard and
02:34 - over here on the left side let's go down
02:35 - into multiplayer then we've got all the
02:37 - multiplayer tools over here let's go
02:39 - into Lobby go ahead and click on the
02:41 - button around here in order to enable
02:43 - Lobby that takes you through the setup
02:45 - guide so let's follow these steps first
02:47 - of all I'll link the NT branching so we
02:48 - already did that let's go next then
02:50 - install the package we also did that
02:51 - next then make sure to turn the lobby on
02:54 - next and that's it if you want you can
02:56 - import these samples to see how Lobby
02:58 - works in the context of a bigger sample
03:00 - but for now let's keep things simple for
03:02 - this video just go ahead finish and
03:03 - that's it that's the basic setup done
03:05 - now back in our project here let's begin
03:07 - by making a new c-sharp script let's
03:10 - call it test Lobby let's make a game
03:12 - object to run it here let's attach the
03:15 - script and open okay so the first thing
03:17 - we need to do is initialize Unity
03:18 - services so let's make a private void
03:20 - start and on start we're going to go
03:22 - into the unity services this is inside
03:25 - unity.services.com
03:27 - let's go into this one and just call
03:29 - initialize async now importantly note
03:31 - how this is an awaitable function so in
03:34 - order to run this properly let's add a
03:36 - weight in here and once we add a weight
03:38 - we need to make sure that this function
03:39 - is also marked as async now if you're
03:41 - not familiar with async in a way don't
03:43 - worry too much about it you don't need
03:45 - to know how it works in order to use it
03:46 - but essentially what this does is it
03:48 - lets you run code asynchronously so for
03:50 - example over here this will send a
03:52 - request ENT services in order to
03:54 - initialize the API that request is going
03:56 - to go over the Internet so it's not
03:58 - instant if you did not make this async
04:01 - and did not use a weight then the game
04:02 - would pretty much freeze and don't
04:03 - received a reply from the server whereas
04:05 - by using these keywords this way the
04:07 - game does not freeze when it gets to
04:09 - this point it sends off the request and
04:11 - then just pause the execution of this
04:12 - function and the rest of the game keeps
04:14 - going
04:15 - then when this function receives a
04:16 - response then continues executing down
04:18 - here but like I said you don't need to
04:20 - worry about it just don't forget the
04:22 - async and Away keywords okay so that's
04:24 - it for initializing these services
04:26 - then Lobby requires authentication to
04:29 - use ENT authentication has tons of
04:31 - options you can link a Sim account Apple
04:33 - Android Facebook or open ID so you can
04:36 - ask the player for access in order to
04:37 - create an account and Link it with any
04:38 - of those services or something super
04:40 - awesome is you can just do a super quick
04:42 - Anonymous sign in over here we just go
04:45 - inside the authentication Service this
04:47 - one inside Unity Services authentication
04:50 - then let's access the static instance
04:52 - and now we just call in the sign in
04:55 - anonymously async
04:58 - and again this is an available constant
05:00 - let's await basically this way it's
05:02 - normally invisible to the user so
05:03 - there's no need to ask them for any
05:05 - username or password it just happens
05:06 - automatically then the future if you
05:08 - want you can upgrade this Anonymous
05:10 - account into an account linked with any
05:11 - of those services
05:13 - okay so this will sign in anonymously
05:15 - and create a new account for this user
05:17 - we can listen to the event to know when
05:19 - the sign-in completes so let's go inside
05:21 - the authentication Service inside the
05:23 - instance and let's listen to the signed
05:25 - in event
05:28 - so over here on let's do analog saying
05:31 - we've signed in
05:32 - and we can grab the authentication
05:34 - Service instance and let's grab the
05:36 - player ID so this is the player ID that
05:38 - was generated okay so with this we have
05:40 - everything we need in order to get
05:41 - started working in the lobby so first
05:43 - things first let's handle creating a
05:45 - Lobby let's make over here a function so
05:48 - private void create Lobby
05:50 - then over here to create let's go inside
05:52 - Lobby service inside
05:55 - unity.services.lovice on this one let's
05:57 - access the instance and then we're going
05:58 - to count the function create Lobby async
06:01 - this one as you can see takes a Lobby
06:03 - name and the max number of players so
06:05 - let's define here so a string for the
06:07 - lobby name let's call just my Lobby
06:10 - and then for the max players and let's
06:13 - say we want four players
06:15 - so over here the unlocking name and the
06:16 - max players
06:18 - okay so this will create a Lobby and
06:20 - again note how it's available and it's
06:21 - going to return an object of type Mobby
06:23 - so let's grab that one so first of all
06:25 - make it away and then use the object of
06:28 - type Lobby so this one right here inside
06:31 - unity.services.love is not models so
06:33 - this is the lobby that we just created
06:34 - and verify that we did create Let's see
06:37 - we debunk just to see it
06:41 - and again in order for a way to work we
06:43 - need to make sure we mark this as async
06:45 - all right that's it so this code here is
06:47 - going to create our lobby now one very
06:49 - important thing is that all of the
06:51 - functions related to lobbies all of
06:52 - these can throw an exception for example
06:54 - if it couldn't create a Lobby or somehow
06:56 - it could not connect to the lobby server
06:58 - if we don't catch that exception that
07:01 - could break our entire game we don't
07:02 - want that to happen so let's wrap off
07:05 - this inside a nice try catch so try
07:07 - catch and we can catch up type Lobby
07:10 - service exception
07:12 - and just do a debug download on this
07:15 - just that way in case there's any error
07:17 - we can see what caused it okay we're
07:19 - almost done and just for testing over
07:21 - here I'm going to be using the quantum
07:22 - console this one is an excellent asset
07:24 - that lets you easily add a console read
07:26 - the logs and Trigger functions however I
07:28 - should point out this is not required
07:30 - you can call this Lobby function from
07:31 - anywhere but in my case for testing for
07:34 - this video this has to be super useful
07:35 - so in order to make it work with that
07:37 - asset I'm just going to add the command
07:38 - attribute
07:40 - okay with this let's test all right here
07:42 - we are and right away we can see that
07:44 - the authentication is working so we
07:45 - signed in and this is the generated
07:47 - player ID and now let's call the
07:49 - function so the create Lobby function
07:51 - let's run that function and there you go
07:53 - create the lobby with the name man Lobby
07:55 - and with four players alright great so
07:58 - far everything is going really good we
08:00 - can verify that it didn't work by
08:01 - unlocking the dashboard over here in the
08:03 - dashboard if under Lobby we go into
08:05 - overview over here we've got a whole
08:07 - bunch of sans and we can look and see
08:09 - yep we've got one request right now and
08:10 - down here we can see request by type if
08:12 - we got a create request okay great so
08:15 - now that we have created on Lobby the
08:17 - next important action is searching for
08:19 - lobbies so let's make another function
08:21 - so a private Droid let's call it list
08:23 - lobbies
08:25 - then over here let's go inside lobbies
08:28 - access the static instance and now it's
08:30 - called the function query and Lobby is
08:32 - async and again this one is available
08:36 - for the parameters you can see we have
08:37 - an optional parameter this is for
08:39 - filtering if we leave it as empty it's
08:41 - going to return only in lobbies I'm
08:43 - going to Showcase how to use the filters
08:44 - in a little bit so this one as we can
08:46 - see returns a query response so let's
08:48 - grab that so the query response
08:51 - and again make sure this one is marked
08:53 - as async all right so we have our query
08:56 - response and now we can go inside that
08:58 - one and over there we've got the results
09:00 - so this is a nice list containing all
09:02 - the results that we found
09:04 - so let's see over here at debug log
09:06 - let's say Lobby is found
09:08 - and query results are count so we found
09:10 - these lobbies then let's just cycle
09:12 - through them and print some data so
09:14 - we'll just do a four inch for each Lobby
09:18 - in the query response to our results and
09:21 - for each of these let's do a log log in
09:24 - lobby.name and perhaps let's say the
09:27 - lobby.max players
09:29 - okay so since we did not use any filter
09:31 - this is basically going to query for
09:33 - every single Lobby that exists now again
09:35 - remember to wrap this inside a try catch
09:38 - otherwise this thing could break the
09:39 - entire game so let's wrap it
09:43 - and okay let's test and see what this
09:45 - does all right so here we are I'm signed
09:48 - in first let's do our search so let's
09:50 - call let's logins do our search and yep
09:53 - Lobby's found zero okay make sense now
09:55 - let's create a Lobby there you go
09:57 - created and now we film list again if
09:59 - there we go we found one log to verify
10:01 - that it is indeed running over here I've
10:03 - got two builds so let's try doing a list
10:06 - and nope down from zero and on this one
10:08 - listen nope also found zero now this one
10:10 - let's create a Lobby and there you go
10:12 - that one created and now on this other
10:14 - one if I'm list again
10:16 - and if there go this one did find the
10:18 - lobby so we have verified that we are
10:19 - indeed grabbing the lobby from the
10:21 - master server on the internet and not
10:22 - anything local okay great and again I
10:25 - should point out that like I said over
10:26 - here I'm just testing out the API but as
10:29 - you might imagine you can easily add a
10:30 - visual to all the return values from all
10:32 - these functions that's what I'm going to
10:34 - Showcase when I showcase the if only
10:35 - working sample in a little bit now one
10:38 - important thing about movies is they can
10:40 - become inactive if they receive no data
10:42 - in 30 seconds so the lobby has been
10:44 - created it has been a bit over 30
10:46 - seconds so now if I try it on listen
10:48 - lobbies again let's see if it still
10:49 - finds the same one
10:51 - and up there you go look at that zero
10:52 - lab is found so the lobby was created
10:55 - but since we didn't send any data we
10:57 - didn't update anything after 30 seconds
10:59 - it became inactive
11:00 - inactive pretty much means that it does
11:02 - not show up on search so new players
11:04 - cannot find it however players that are
11:06 - already on the lobby they can still get
11:07 - data from that Lobby now in starting the
11:10 - game you really want to keep the lobby
11:11 - alive until all players joined so in
11:13 - order to keep it alive what we need to
11:15 - do is send a heartbeat so when we create
11:17 - a brand new Lobby let's keep a reference
11:19 - to it so let's go up here making private
11:22 - of type Lobby let's call it the host
11:24 - Lobby
11:26 - and then down here when we create our
11:28 - lobby we get one of the host Lobby
11:30 - equals this Lobby okay and now with this
11:32 - we basically just need to run some logic
11:34 - every certain amount of time in order to
11:36 - trigger the heartbeat function so we
11:39 - need to run some code every x amount of
11:40 - time and if you want you can do that in
11:42 - Co routine but personally I do not like
11:44 - co-routines I don't like the pattern
11:46 - that they force you to use so if you
11:48 - want you can use them but for me I'm
11:50 - just going to use a basic full timer so
11:52 - if you're just going to declare a float
11:54 - for the heartbeat timer
11:57 - then let's make a private void update
12:00 - and then let's make a function handle
12:03 - Lobby heartbeat
12:06 - and we're going to run this on update
12:08 - now here just do some basic timer but
12:11 - obviously first check if the host Lobby
12:13 - does not know so if we have a host Lobby
12:15 - if so count down the timer
12:20 - then if the timer has elapsed
12:23 - if so let's reset the timer
12:28 - now for the heartbeat like I said love
12:30 - becomes inactive after 30 seconds of
12:32 - inactivity so let's send a heartbeat
12:34 - let's say every 15 seconds so for
12:36 - actually sending the heartbeat let's go
12:38 - inside the lobby service in the incense
12:40 - and let's call the send heartbeat Peng
12:42 - async then this requires an ID for Lobby
12:44 - ID so let's grab in the host Lobby and
12:46 - pass in the ID
12:48 - and again this one is available so let's
12:50 - await and make this one async all right
12:53 - so that's it let's test and see if our
12:55 - Korean Lobby stays alive after 30
12:57 - seconds okay so first of all let's list
12:59 - our lobbies and nope we've got zero
13:01 - great let's create a brand new Lobby
13:04 - okay let's list them again and yep there
13:06 - it is okay so now let's wait 30 seconds
13:09 - okay it has been almost a minute so
13:11 - let's listen again and see if it's still
13:13 - alive and if they're good with the lobby
13:15 - is still alive okay great so our lobby
13:17 - is no longer becoming active now like I
13:20 - mentioned over here when releasing
13:21 - lobbies you can optionally add some
13:22 - filters so let's see how to do that this
13:25 - function takes a parameter of type query
13:27 - and Lobby's options so let's make one of
13:29 - those so query and Lobby's options
13:32 - we can inspect this time to see what it
13:34 - contains here we've got a bunch of
13:36 - things so for example how many results
13:37 - we want to get which ones we want to
13:39 - skip and importantly over here we've got
13:41 - the filters and the order so the filters
13:44 - are how we can narrow down which lobbies
13:46 - we want to get so let's inspect the
13:47 - query filter over here on this one a
13:50 - query filter contains a film options a
13:52 - value and an operation for the field
13:55 - options this is which field it's going
13:57 - to act upon you can see there's some
13:59 - common ones so you can filter by number
14:00 - of max players you can filter by number
14:02 - of available slots you can filter by the
14:05 - name by when it was created when it was
14:07 - last updated and then these ones the S1
14:10 - through 5 and the N1 through five these
14:12 - are basically custom parameters which
14:13 - you can Define yourself the end simply
14:16 - means number and the assembly means ring
14:17 - so for example when creating a Lobby you
14:20 - can Define the S1 field you can Define
14:22 - that one as for example the game mode
14:24 - and then when querying for lobbies you
14:26 - can filter only the lobbies that have
14:27 - that specific game mode or alternatively
14:30 - in terms of numbers you could have for
14:31 - example if you known for something like
14:33 - the player skill
14:34 - and then he could filter for all lobbies
14:36 - with player skill within a certain
14:38 - amount so that's all destruction now
14:40 - let's see how to actually use it so here
14:42 - we create the new query and Lobby's
14:43 - options then like we saw for example we
14:45 - can set the count so let's say we wanted
14:46 - to get just 25 results and then for the
14:49 - filters so this one is a list so let's
14:51 - create a list of query filter and then
14:54 - over here we create as many query
14:56 - filters as we want so first of all for
14:58 - the options for this one let's go with
15:01 - available slots then for the value
15:04 - let's go with zero and then for the
15:06 - operation over here you can see we've
15:08 - got all kinds of operations so we have
15:10 - contains if it contains this value we've
15:13 - got equals greater or equals greater
15:15 - than less or equals less than and not
15:18 - equals so let's say right now we want to
15:20 - filter all the lobbys with at least one
15:21 - available slots so more than zero so
15:24 - let's go with greater than and just like
15:26 - this as you can see this is a list so
15:28 - you can add as many functions as you
15:29 - want or we can add just one so basically
15:31 - just like this this will return oil
15:33 - lobbies that have more than zero
15:35 - available slots and by the way this one
15:37 - is actually a string even though then it
15:39 - won't be Parson to an end but yep takes
15:41 - a string now I said another thing you
15:43 - can do is sort the results so over here
15:45 - we can set the order
15:47 - and once again this one is also in list
15:50 - and list of querying orders so let's
15:51 - create a new query order first you can
15:54 - set it as ascending true or false let's
15:56 - say false to make it descending and then
15:58 - for the field
16:00 - let's go with when the lobby was created
16:02 - so the lobbies will basically be sorted
16:04 - from the oldest to newest alright so
16:06 - here we Define our options now we just
16:08 - pass it in over here into our function
16:09 - so that's it and again like I mentioned
16:11 - over here I'm really just showing you
16:13 - how to work with the API how to count
16:14 - the functions and so on but as you might
16:16 - imagine in your game you would have the
16:18 - UI and using the UI you would have all
16:20 - kinds of buttons to set the filters and
16:21 - then using that you would construct over
16:23 - here these query and lobbies options now
16:25 - for a quick test let's try creating a
16:27 - lobby with just one player which means
16:29 - we won't have any more players after we
16:31 - join when we create so let's go up here
16:34 - when we've got the create Lobby instead
16:35 - of four players let's put just one okay
16:38 - so now here he found with lobbies and
16:40 - nope none are found okay now let's
16:42 - create unlocking and yep it created and
16:44 - a final list and up there you go also
16:46 - zero Lobby's phone because again there
16:48 - is no lobby with at least one available
16:50 - slot all right great so far so good now
16:53 - the next thing we want to do is be able
16:54 - to join Lobby so for here let's make
16:57 - another function
16:58 - let's make a private void call it join
17:01 - Lobby
17:02 - and then over here in order to join we
17:04 - just go into lobbies access the instance
17:06 - and then we've got some join functions
17:09 - as you can see we've got two of them so
17:11 - we can join in lobby buy ID or we can
17:13 - join by code here just a test that we
17:16 - can join in the lobby let's get we
17:17 - joined by ID and let's basically just
17:19 - copy this just to do a query and join
17:21 - the very first Lobby so just a quick
17:23 - test
17:23 - so over here do a query response find
17:25 - the first one and then let's go inside
17:27 - let's not apply anything so no lobbies
17:30 - no options make this one async so it
17:33 - finds whatever lobbies and then let's
17:35 - say we join the very first one so let's
17:37 - get into results on index 0 and we're
17:39 - going to grab the ID because we use join
17:41 - Lobby by ID and let's await this and
17:44 - remove the log okay so this function
17:46 - should be able to join the very first
17:48 - Lobby that it finds so let me just add
17:50 - the command here
17:52 - and then let's go up here and add some
17:54 - more players so we can join it okay so
17:57 - let's test
17:58 - so here with both Builds on this one
18:00 - let's create a Lobby okay creating now
18:03 - this one if we unless we should be able
18:04 - to see it yep and if we use the join
18:06 - Lobby it should join that one so let's
18:08 - click any of there you go it didn't do
18:10 - anything because there's no log but yep
18:12 - it did join the lobby again obviously
18:14 - you can imagine how with a proper UI you
18:16 - would first have a visual listing of the
18:18 - lobbies then the player would click and
18:20 - it would join the lobby based on that ID
18:22 - that's exactly how my simple Works which
18:24 - again I'm going to Showcase in a little
18:25 - bit now an important concept is the
18:28 - difference between public and private
18:30 - lobbies like name implies a public Lobby
18:32 - is searchable so anyone can join whereas
18:34 - a private lobby can only be joined
18:36 - directly either with the ID or the code
18:38 - how we Define it as public or private is
18:41 - over here when we create a Lobby so
18:43 - we've got this function which takes a
18:44 - Lobby name the max players and then as
18:46 - we can see it also takes a create Lobby
18:48 - options so let's create one of these see
18:50 - what it does so we create Lobby options
18:54 - let's go inside this to see what this
18:56 - contains and yep it has this so we've
18:59 - got a Boolean for is private so if this
19:01 - one is true then it is private if it is
19:02 - false then it is public then we also got
19:05 - some information about the player
19:06 - created in the lobby and some more data
19:07 - for this Lobby we're going to see these
19:09 - two in a little bit for now let's just
19:10 - focus on the prevent so we're here when
19:12 - creating one let's set this private back
19:15 - into true
19:16 - so we are going to create a private
19:18 - lobby and then after creating lets you
19:20 - unlock so let's also unlock the lobby.id
19:23 - and let's also log the lobby.lobby code
19:27 - and of course up here let's make sure to
19:29 - use our create Lobby options
19:31 - all right so it says all right here we
19:34 - are and let's create a brand new Lobby
19:36 - and there you go it created with that
19:38 - name that many max players and here we
19:41 - see a big string for our ID and then a
19:43 - smaller one for our nice Lobby code but
19:45 - importantly we made this private so now
19:47 - we find list for lobbies and up there
19:50 - you go zero Lobby is found because again
19:51 - this one is set as private so it does
19:53 - not show up to the public the way we can
19:55 - join this private lobby is either
19:57 - through the ID which again that is a
19:58 - pretty complex string so this one is not
20:00 - very useful for sending to your friends
20:02 - and so on so because that you have a
20:05 - much shorter and much easier to read in
20:06 - lobby code and this is the one that you
20:08 - can send to anyone in order to join this
20:09 - private lobby all right so let's go down
20:12 - into our join Lobby function instead of
20:14 - joining the very first one after
20:15 - querying let's get rid of this and let's
20:17 - add a proper parameter let's add a
20:19 - string for the lobby code and let's also
20:22 - rename this function so join Lobby by
20:24 - code then with that let's use the other
20:26 - function so join Lobby by code async and
20:29 - this one as you can see takes a string
20:31 - for the lobby code so let's just pass in
20:33 - that one so the lobby code
20:35 - then let's just do a debug log let's say
20:38 - join lobby with code and then Lobby code
20:42 - okay so with the slits test
20:44 - all right so here I have both balance
20:46 - now on this one let's call create Lobby
20:48 - and there you go create long Lobby so
20:51 - now on this other one if I do list
20:53 - lobbies no one is private so yep we some
20:55 - don't have the unlock we found and on
20:57 - this one let's use the function join
20:58 - Lobby by code and then let's pass in the
21:00 - code it is down so
21:03 - k3k6pp let's join and if there you go we
21:06 - join the lobby with this code all right
21:08 - Awesome everything worked this is how
21:10 - you can join a Lobby directly next let's
21:13 - look at one really awesome Lobby feature
21:15 - which is quick join it's perfect for
21:16 - getting players into your games very
21:18 - quickly without having to ask them which
21:20 - game they want to join with quick join
21:22 - your player just press the button and
21:24 - they instantly join the lobby to do that
21:26 - let's make another function so private
21:28 - void let's call it quick join Lobby
21:32 - and over here we go into the lobby
21:34 - service access the instance and we're
21:37 - going to call the function quick join
21:38 - Lobby async as you can see this one has
21:41 - some optional options using this you
21:43 - could filter so for example you could
21:45 - have a quick join only on a certain map
21:47 - or a certain game mode and so on but to
21:49 - make it super simple you really just
21:51 - have this function but again this one is
21:52 - available so let's await let's make this
21:54 - async and again as always don't forget
21:56 - to add the try catch
21:58 - if you do then it might cause an
22:00 - exception and break your home game so
22:02 - don't forget this okay so we have this
22:04 - let me just make Command just for
22:06 - testing and let's test so here with both
22:09 - builds let's create a Lobby and then on
22:12 - this one let's do quick join Lobby and
22:15 - if there you go it did not work and by
22:16 - the way here's a nice example of the
22:18 - errors
22:19 - thanks to the try catch the game didn't
22:20 - break we just got a really nice error
22:22 - function and on this one as we can see
22:24 - it is saying that it failed to find any
22:26 - open lobbies again that is because we
22:28 - made this one a prevalent Lobby so this
22:29 - one cannot find it through quick drawing
22:31 - let's just quickly go here go up into
22:33 - create Lobby and for this one let's set
22:35 - is private back into phones to make it
22:37 - public
22:38 - so now again over here on let's create
22:40 - in lobby
22:42 - and there you go creating and on this
22:44 - one let's quick join Lobby and there you
22:45 - go it does join quickly okay great so
22:48 - with this we already have quite a lot
22:49 - working we can create lobbies we can
22:51 - list them and join them but on the lava
22:54 - itself we still have no data one very
22:56 - exciting example is the players have no
22:58 - name we can see all the players inside a
23:00 - Lobby about looking inside this Lobby
23:02 - class so this one over here if we look
23:04 - we see over here yep we've got a list of
23:08 - all of our players and then if we look
23:10 - here on the definition of the player
23:11 - class if you look at this one you can
23:13 - see we've got an ID connection info and
23:15 - location ID join lesson and so on so as
23:17 - you can see we have no field directly
23:19 - for a name however what it does have is
23:22 - over here a real nice dictionary so
23:24 - basically the way this works is all of
23:26 - this data is up for you to Define so you
23:28 - have to decide what data you want to
23:29 - include with each player you can for
23:31 - example include the name you could
23:33 - include some kind of Loadout you could
23:34 - include some kind of selected character
23:36 - some kind of Icon colors whatever this
23:39 - is a dictionary of generic status so
23:40 - it's up to you to Define what data each
23:42 - player needs to have let's first just
23:44 - make a function just to print all
23:45 - details from the player so let's go down
23:47 - here make a simple function
23:49 - let's just call it print players
23:53 - and we're going to receive a Lobby
23:54 - object
23:55 - so then let's cycle through
23:58 - player player in the lobby dot players
24:03 - so we go through this one and let's do a
24:05 - debug.log and let's say for example the
24:08 - player.id and up here on let's see debug
24:11 - log and let's say players in lobby and
24:15 - then print out in lobby.net
24:17 - alright so we have this nice somper
24:19 - function so up here when we create a
24:21 - Lobby we've got the host Lobby then
24:24 - let's call this function and pass in the
24:26 - host Lobby
24:28 - okay so just like this let's see what
24:31 - this prints so here if I just create a
24:33 - Lobby
24:35 - there you go that's what it did so it
24:36 - creates a Lobby players in the lobby and
24:38 - as you can see it is the ID of this
24:40 - player now let's see how we can actually
24:42 - add our proper data into it the way we
24:44 - do that is actually what we saw a while
24:46 - ago so we have the create Lobby options
24:48 - and if you remember over here inside
24:49 - we've got a player so this is the
24:51 - information about the player that is
24:53 - creating this Lobby so we can basically
24:55 - just add this inside
24:57 - let's set over here playing equals and
24:59 - we construct a brand new player and then
25:01 - for the player takes all kinds of things
25:03 - so for the ID let's go into the
25:05 - authentication Service
25:07 - access the instance and let's get the
25:09 - player ID
25:11 - and then we've got the data so what's
25:13 - constructed this one is a dictionary so
25:16 - inside we can add as many keys as we
25:18 - want so let's put in a key for something
25:20 - like the player name let's call this and
25:22 - then let's give it a player name and
25:24 - just for testing we need to make sure
25:25 - that we have different names so let's go
25:28 - up here to define a random name
25:30 - so private string for the player name
25:32 - and let's name it put code monkey and
25:35 - then
25:37 - do a Unity engine random.range just to
25:39 - generate a random number so let's say 10
25:42 - and 99 just so we can get a nice random
25:44 - number with this the editor in the build
25:46 - should have different names let's also
25:48 - print it over here on start
25:50 - so a debug.log on the player name
25:54 - okay so we have that and then down here
25:56 - let's pass in the player name equals
25:58 - this player name except this one is not
26:00 - a string but rather we have to create a
26:02 - player that object then inside we can
26:04 - Define the visibility this one we have
26:07 - three options member private and public
26:09 - so public easy as you expect so this one
26:12 - is visible to anyone outside the lobby
26:14 - private means it is only visible to the
26:16 - host of the lobby and remember this one
26:18 - is visible to every member in the lobby
26:20 - I'm going to cover these in more detail
26:22 - in a little bit but for now let's just
26:24 - make it member so it's visible to every
26:25 - member inside this Lobby
26:28 - then for the volume let's put the player
26:29 - name and close this and actually for the
26:32 - ID we need to either send it over here
26:34 - in the Constructor or actually if you
26:36 - omit this then it won't just grab it
26:37 - directly from the authentication so
26:39 - let's leave it just like this okay so
26:41 - basically with this when we create a
26:42 - Lobby we are creating a Lobby and
26:44 - passing in the player that is squaring
26:45 - the sloppy and inside that player class
26:47 - we are defining the Dana and we are
26:48 - defining a field for player name and we
26:50 - are setting it to the player name
26:52 - so then down here let's go into our
26:55 - print players function over here we are
26:56 - printing the player ID and then let's
26:58 - also print the player let's go inside
27:00 - the data and let's grab the player name
27:03 - this contains a player that object so
27:05 - let's go inside and grab the value
27:07 - alright so let's print it and see if it
27:09 - does say the name of the player that is
27:11 - creating the lobby and actually
27:12 - random.range apparently cannot be called
27:14 - directly from the Constructor so instead
27:16 - of generating the name here let's just
27:19 - copy this erase this and Define the
27:21 - player name here
27:24 - okay so let's test so here we are and
27:26 - that's the generate name so code
27:28 - monkey91 so now if we create a Lobby
27:31 - and if there go with the create a Lobby
27:33 - and the players inside this Lobby has
27:35 - this ID and this really nice name all
27:37 - right now let's make sure this works
27:39 - also when joining
27:40 - again for all the functions we need to
27:42 - create a player object and pass it in so
27:44 - for example down here when we've got the
27:46 - join Lobby by code for example on this
27:49 - one we've got the function we take the
27:51 - lobby code and then we also have the
27:52 - option so we need to also include that
27:54 - so join Lobby by code options so let's
27:57 - construct one of these
28:00 - and then over here we have the player so
28:01 - this is the player that is joining
28:03 - and instead of copy pasting a ton of
28:05 - code let's actually make a function to
28:06 - return a new player object
28:09 - so let's just make something like this
28:10 - so private going to return a player so
28:12 - get player
28:14 - and over here just return a new player
28:16 - doing exactly that okay so now let's use
28:19 - this function so up here instead of the
28:20 - find that let's call get player
28:23 - okay like this and then down here when
28:26 - we are joining let's put the exact same
28:27 - thing player get player and then we just
28:29 - pass in this inside there
28:32 - okay we do this and finally let's also
28:35 - print our players just see all the
28:37 - players inside so we join the lobby and
28:38 - print the players inside this Lobby so
28:40 - this one actually Returns the lobby for
28:42 - the join Lobby and it is this one so
28:46 - let's print like this okay so let's test
28:49 - all right so here are both bones this
28:51 - one is Code Monkey 56 and this one is
28:53 - Code Monkey 80. all right so on this one
28:55 - let's create a Lobby and yep there you
28:57 - go and the lobby has that code so let's
28:59 - use that to join so over here let's join
29:02 - the lobby
29:03 - let's put down g d m e e j let's join
29:06 - and if there go join and over there we
29:09 - can see both names of both our players
29:11 - all right great so with this our players
29:14 - now have some proper names basically
29:16 - what we did here is we defined some per
29:18 - player data like I said that can be
29:20 - whatever you want so it can be as simple
29:23 - as a player name or maybe on a game kind
29:25 - of likely of Legends perhaps you would
29:27 - store the player chosen Champion or
29:29 - perhaps in a game like Battlefield you
29:31 - could sort the player and Loadout as you
29:33 - saw it takes the dictionary so you can
29:34 - store whatever that you want
29:36 - and the other type of data that you can
29:38 - store is on the unlock itself so for
29:40 - example this would be the game mode
29:41 - which obviously you don't want one game
29:43 - mode per player you want just one game
29:45 - mode for the internal Lobby how we set
29:47 - that up is pretty much exactly the same
29:48 - way so let's go into the lobby create so
29:51 - up here we've got the create Lobby
29:53 - options and if we inspect this again
29:55 - over here we see the exact same thing so
29:57 - we've got a dictionary of our data so
29:59 - when creating a Lobby let's create let's
30:01 - put data and construct a brand new
30:04 - dictionary
30:05 - and on the dictionary let's add an entry
30:08 - so for the string for our key let's say
30:11 - our game mode
30:12 - and then for our data object let's
30:14 - construct it again we need to pass in
30:16 - the visibility so again pump link means
30:18 - it is visible to anyone outside private
30:21 - means only visible to this host and
30:23 - member own visible to people inside
30:24 - Lobby so for game mode you want it to be
30:27 - public you want it to show up in the
30:29 - server browser so that people can select
30:31 - which email they want to join
30:33 - so let's make it public and then for the
30:35 - value let's say capture the flag
30:39 - I should also point out that there's one
30:41 - final optional parameter this one is for
30:42 - the index
30:43 - and this one as you can see we've got
30:45 - string one through five and numbers one
30:47 - through five like we saw a while ago for
30:49 - the search these are the indexes that
30:51 - are using there so you could Define this
30:53 - game mode define this one as the S1
30:55 - index and then down here when listening
30:57 - for lobbies you could make a filter
30:59 - let's put one right here so let's say
31:01 - you could make a new query filter
31:04 - create search for things and let's
31:07 - search for S1 which is the one that we
31:09 - use up here so you could search for that
31:12 - then for the film let's say capture the
31:14 - flag
31:16 - and finally for the operations we would
31:18 - go with equals so using this query
31:20 - filter you would basically only find all
31:22 - of the lobbies that have captured the
31:24 - flag in their game mode so for more
31:26 - complex use case these indexes are super
31:28 - useful but for now for this simple demo
31:29 - let's remove this and just put it just
31:31 - like this so just a simple game mod
31:33 - and that's it this is how we can assign
31:36 - some data whatever that we want to our
31:38 - brand new Lobby let's go down here into
31:40 - the print players and let's also print
31:41 - it
31:43 - so we've got the lobby name then let's
31:45 - also print in lobby let's grab the data
31:47 - grab the game mode
31:49 - and inside gravity value and also appear
31:52 - when we are listing the lobbies so let's
31:54 - see this one listening to lobbies print
31:56 - the name the max players and let's also
31:58 - print in lobby data gravity game mode
32:01 - and print the value okay so let's see
32:04 - like this all right so here let's create
32:06 - a Lobby and if there go it created and
32:09 - we can see the players in lobby with the
32:11 - name man Lobby and the game mode capture
32:12 - the flag and if we do analyst lobbies
32:15 - yep we also see yep there's the lobby
32:17 - with capture the flag the reason why it
32:19 - found two is because I accidentally ran
32:21 - create Lobby twice but yep everything is
32:23 - working with this we now know how to set
32:25 - per player data and purple data but of
32:28 - course over here we are only sending
32:30 - that data when we are creating a Lobby
32:31 - obviously you want to also be able to
32:33 - update it after the lobby has been
32:35 - created you want to be able to change
32:36 - the game mode the name and so on so
32:39 - let's make a function to update the game
32:40 - mode so let's go down here let's make a
32:43 - private void update game mode
32:45 - actually rename this to update Lobby
32:48 - game node okay
32:49 - then let's receive a string for the game
32:52 - mode
32:53 - and for updating let's go inside lobbies
32:56 - the instance and let's call update Lobby
32:58 - async this one first of all takes a
33:01 - Lobby ID so actually up here we're
33:03 - already storing our host Lobby so let's
33:05 - grab this one let's go down here use
33:07 - this list all of the dot ID and then
33:10 - we've got the update Lobby options so
33:12 - let's construct an object of that type
33:16 - and over here we can set the data and
33:19 - let's pass into brand new data so game
33:21 - mode
33:22 - and let's make a new one
33:29 - and let's do it like this and as usual
33:31 - let's put this inside a try catch so a
33:34 - try catch
33:35 - okay so we update lobby with this ID and
33:38 - we're going to modify the game mode then
33:40 - let's print the players which is going
33:41 - to print the brand new game mode
33:43 - although it actually won't do that
33:45 - because if two sync issues the first one
33:47 - is that this Lobby object this is a
33:50 - class but this does not get updated
33:51 - automatically instead you need to pretty
33:54 - much get the one that is returned from
33:55 - the lobby service
33:57 - so when updating this returns a Lobby so
33:59 - let's update our host lobby with one
34:01 - that we receive here
34:02 - so let's add this one into this one and
34:05 - actually this one is a weightable so
34:06 - let's await an async
34:08 - so like this when we print we should be
34:10 - able to see the updated game mode
34:12 - so here we are and if we create a Lobby
34:15 - if there go Capture the Flag okay great
34:17 - now let's update in lobby game mode
34:19 - let's say that match
34:21 - and if there you go with it update okay
34:23 - great one more thing if you have
34:25 - multiple pieces of data over here you
34:27 - only need to assign the ones that you
34:28 - want to update so for example let's go
34:30 - up here when we create a Lobby let's
34:32 - create a new piece of data so let's say
34:35 - the map
34:36 - then the same thing and you that object
34:38 - let's also make it public and let's say
34:41 - we are on Dust two
34:45 - okay so we have a map and then down here
34:47 - when updating the EM mode we only want
34:49 - to update the game mode so when printing
34:51 - let's also print the map
34:52 - and make sure that the map still exists
34:54 - so Lobby data let's pick up the map and
34:57 - the value okay so let's see this so here
34:59 - if we create a Lobby and yep there you
35:02 - go capture the flag on this too okay
35:03 - makes sense now let's update in lobby
35:06 - game mode let's put it on Conquest
35:08 - and if there go the game mode did update
35:11 - but the map did not update so basically
35:13 - over here when updating you don't need
35:15 - to include every single piece of data
35:17 - you only need to include the things that
35:18 - you want to modify okay so it looks like
35:20 - it's working but like I said there's
35:22 - another sneaky issue here let's do a
35:24 - quick log to see the lobby data all the
35:26 - time so let's go on our update let's
35:29 - actually print so we don't want to see
35:31 - host lobby but also let's say the join
35:34 - Lobby
35:35 - so we have this one and when the host
35:37 - Lobby changes it's over here when you
35:39 - set it let's set the join Lobby equals
35:41 - the host Lobby again we just want to
35:43 - keep a reference of the lobby that we
35:45 - just joined so on this one when we
35:47 - update the host Lobby let's also put
35:49 - this one equals that one and then over
35:51 - here let's say the joined by code on
35:53 - this one when you join the lobby let's
35:55 - also update that so let's rename this
35:57 - one to lobby and then put you in lobby
35:59 - equals this Lobby all right so we have
36:01 - this now on the print Players let's
36:03 - actually make another version of this
36:05 - function so print players with no
36:07 - parameters and we're just going to call
36:09 - Print players and pass in the join Lobby
36:12 - then let's just make this a command just
36:14 - so we can test it out okay so this way
36:16 - we can manually trigger this log so
36:18 - let's see what this does so over here
36:19 - got both builds now on this one let's
36:22 - create a Lobby it's going to create and
36:24 - join it and there you go okay so this
36:26 - one joined now on this one
36:28 - let's call join Lobby and let's pass in
36:31 - the code to join that Lobby let's join
36:34 - and if there you go it joined so we can
36:36 - see Code Monkey 76 and 30 so this one is
36:38 - 30 this one's 76 okay great and over
36:41 - here if I call that function print
36:42 - players
36:43 - here we can already see one issue but
36:46 - let's do another thing let's update in
36:48 - lobby game mode let's change this one to
36:50 - deathmatch and there you go this one
36:52 - seems like an updated so there you go
36:54 - it's got that match instead of Capture
36:55 - the Flag but now on this one now let's
36:58 - call Print players and let's see what
37:00 - this one does
37:01 - and there you go this one still says
37:03 - capture the flag so we updated the game
37:05 - mode on lobby but this player apparently
37:07 - has no idea that happened this player
37:10 - does not know that the lobby data
37:11 - changed in any way it still thinks that
37:13 - the game mode is captured to the flag
37:14 - instead of being Deathmatch here it is
37:16 - important to remember how Lobby is not a
37:19 - real-time connection kind of like
37:20 - netcode for game objects meaning it does
37:23 - not update automatically in order to
37:25 - update anything like the game mode the
37:27 - map or anything in order to do that you
37:29 - need to manually Pawn for updates so
37:32 - let's make another function with a
37:33 - simple timer so we can Pawn for updates
37:36 - let's make a private void handle Lobby
37:40 - tone for updates
37:43 - by the way there are obviously some rate
37:44 - limits when it comes to polling you
37:46 - cannot pull 60 times per second you can
37:48 - see the rate limits over here on the
37:50 - library documentation so for polling for
37:52 - updates we can do one request per second
37:54 - now here only to a timer and again if
37:57 - you like you can use a co-routine for me
37:59 - I'm going to make another basic photo
38:00 - timer
38:02 - so a private float Lobby update timer
38:05 - and then down here run pretty much exact
38:08 - same logic so it's actually copy this
38:09 - directly just replace it so we're going
38:11 - to test this on the join Lobby and then
38:14 - for the lobby update timer let's replace
38:16 - all of these so this one and this one
38:19 - now for the lobby update timer Max
38:24 - for this one like we saw we can only
38:25 - update once per second so let's put this
38:28 - one at 1.1 seconds just make sure it
38:31 - doesn't hit the limit
38:32 - so we do this and then the function that
38:34 - we're going to use
38:35 - is the get Lobby async and this one as
38:38 - you can see is going to return in lobby
38:40 - so let's pass in the join Lobby ID and
38:42 - this one returns a lobby lobby and again
38:45 - remember this class is not auto update
38:47 - so let's replace our join lobby with
38:50 - this Lobby and again this one is a
38:52 - weight so let's make this async and
38:55 - finally we just need to call this over
38:56 - here on our update okay so that's it
38:59 - this should be getting updates on every
39:01 - second so let's test
39:02 - so here we are let's create a Lobby and
39:05 - yep there it is on this one let's join
39:07 - the lobby
39:09 - use the key
39:10 - all right it joined the lobby we capture
39:12 - the flag and so on and as we saw a while
39:14 - ago on this one if I call the print
39:17 - players
39:18 - it would not update it would not show
39:19 - that this other players joined but now
39:21 - that we added polling this one should
39:22 - work so if we press enter if there go
39:24 - this one does see that two players are
39:26 - on there so now on this one if I try to
39:28 - update the lobby mode let's say to
39:30 - Deathmatch
39:33 - so there you go this one updates right
39:34 - away and on this one just need to wait
39:36 - for one second and now print players and
39:38 - if there go this one does receive the
39:40 - update so now this one knows that the
39:41 - game mode is that much alright awesome
39:43 - so they both got the update everything
39:44 - is working on the data is nicely being
39:46 - synchronized and of course since we can
39:49 - update the in lobby data so we can
39:50 - update the unlocking game mode we can
39:52 - also update all of the player that it
39:54 - works pretty much exactly the same way
39:55 - so let's go down here make another
39:57 - function
39:59 - so proud Droid let's call it update
40:01 - player name and receive a string for the
40:03 - new player name
40:05 - and let's also update the variable up
40:07 - there player name equals the new player
40:09 - name
40:10 - then we just need to go into the lobby
40:12 - service the instance and let's update
40:14 - player async not Lobby player this one
40:17 - takes a Lobby ID so let's use the join
40:19 - lobby.id
40:20 - then the player ID so let's go into the
40:22 - authentication Service
40:24 - grab the instance and the player ID
40:26 - and finally you've got the update player
40:28 - options
40:30 - and on this one let's update the data
40:33 - and let's put the exact same thing that
40:34 - we saw up here so let's see the function
40:36 - where we're getting the player so we get
40:38 - this data let's update this data let's
40:41 - put the player name and use our new
40:42 - player name once again let's put this
40:44 - inside a nice try catch to make sure
40:47 - that nothing breaks finally make this a
40:50 - weight and over here async
40:53 - and note how this one also Returns on
40:55 - Lobby so if you wanted to update
40:56 - instantly you could grab this one or
40:59 - since we already updated polling we can
41:00 - just wait one second and it won't auto
41:02 - update alright so let's test and see if
41:04 - we can update the player name so we're
41:06 - here let's create a Lobby then on this
41:08 - one let's join the lobby
41:10 - then on this one let's call update the
41:12 - player name and let's say this one is
41:14 - now Iron Man
41:16 - seven updates and it should have pulled
41:18 - already so if we go into print players
41:19 - Yep this one is now Iron Man and on this
41:21 - one same thing if we print players yep
41:23 - there go that one is Armand all right
41:25 - awesome so we can update both player
41:27 - data and Lobby data now the next
41:29 - important ability is the ability to
41:31 - Simply leave a Lobby so let's make a
41:34 - function for that
41:35 - can't just leave Lobby
41:38 - and then over here it's pretty simple we
41:40 - just go inside the lobby service the
41:42 - instance and just call remove player
41:44 - async this one takes in lobby ID so
41:47 - let's pass in the join lobby.id
41:50 - and then the player ID so let's go into
41:51 - the authentication Service
41:54 - and let's grab this player ID
41:56 - as usual make this a weight make this
41:59 - one async
42:00 - and let's add the try catch
42:04 - all right so that's it pretty simple
42:06 - Let's test so on this one down here
42:09 - let's create a Lobby then on this one up
42:12 - here let's join the lobby
42:14 - okay both players are currently inside
42:16 - this Lobby so print players yet both
42:18 - players are there now on this player
42:20 - let's call leave Lobby and down here
42:23 - let's print it again so print layers and
42:25 - if there you go that player didn't leave
42:27 - okay great now this function as you can
42:30 - see takes an ID for the player if it is
42:32 - this player ID then obviously display
42:34 - leaves but if this code is running on
42:37 - the host then essentially with this you
42:38 - can kick some players
42:40 - so let's make a function to try that out
42:42 - so private void let's call it kick
42:44 - player
42:45 - then over here on let's do the exact
42:47 - same thing and let's just click the
42:49 - second player
42:50 - so in here let's go into the join Lobby
42:53 - let's grab the players and let's take
42:55 - the second player since the first one is
42:57 - going to be the host so let's do it just
42:59 - like this
43:01 - okay so let's test so down here let's
43:04 - create a new Lobby then on this one
43:07 - let's join it okay so both are currently
43:10 - inside
43:11 - now on this one let's kick the other
43:13 - player and let's print the players and
43:16 - yep only this one is inside and also one
43:19 - very important thing is over here on the
43:21 - player that was kicked we don't have any
43:22 - event or anything again remember how
43:25 - Lobby is not a real-time connection it
43:27 - is all based on pulling and what happens
43:30 - when the player is kicked is pulling for
43:31 - that Lobby simply returns no basically
43:33 - appear when we call get Lobby async the
43:36 - amount of data that we get in this Lobby
43:38 - object depends if we are a member or not
43:40 - which again goes back to the visibility
43:42 - options that we saw here so since this
43:44 - one is kicked and is no longer a member
43:46 - when we call this we can still see the
43:48 - game mode on the map but we cannot see
43:50 - what players are inside so if we try
43:52 - printing the players this one is going
43:53 - to be null so we're going to have a
43:55 - known reference here over here if I try
43:57 - printing the players yep there you go no
44:00 - reference now one thing you might be
44:02 - thinking right now is what happens if
44:03 - the host decides to leave and the answer
44:06 - is Lobby has automatic host migration so
44:09 - both players are currently inside there
44:11 - you go 63 and 17 yeah both are inside
44:14 - the same Lobby and on this one on the
44:16 - host let's simply leave the lobby and
44:18 - there you go the host left and on this
44:20 - one if we call Print players if there go
44:23 - only this one is inside and this one has
44:25 - now become the host if there are
44:27 - multiple players on the lobby then the
44:28 - host is chosen at random and also over
44:30 - here you can see an error happened
44:32 - that's because we still try to send a
44:34 - heartbeat even though we already
44:35 - unlocked that one so we're no longer the
44:37 - host now alternatively you can also
44:39 - manually handle host migration so let's
44:42 - make a function call it migrate Lobby
44:45 - host
44:47 - and to do that we do it pretty much
44:49 - exactly update in lobby data so we're
44:52 - here updating the game mode Let's
44:53 - actually copy all this let's go down
44:55 - here and we're going to call update
44:57 - moabi async let's just make this async
45:00 - and over here if we inspect the update
45:02 - Lobby options over here if we scroll
45:05 - down we can see yep we've got a host ID
45:07 - so this is the ID of the player that is
45:09 - the host of this Lobby so over here
45:11 - instead of modifying the game mode let's
45:14 - say we want to modify the host ID and
45:17 - for example let's make the second player
45:18 - of the host so let's grab the second
45:20 - player ID just like this alright so
45:23 - let's test down here let's create a
45:26 - Lobby then on this one let's join it
45:29 - and then back to this one down here on
45:32 - this one let's call my great Lobby host
45:36 - okay it did it and now for example if we
45:39 - try to update the lobby game mode Let's
45:41 - try changing this to deathmatch and up
45:44 - there you go we've got an error we can
45:46 - see this user does not have the
45:47 - authority to update in lobby yet another
45:50 - question you might have is what happens
45:51 - if everyone leaves the lobby and the
45:53 - answer is simple the lobby is
45:54 - automatically deleted if there is no one
45:57 - inside it gets deleted and if you want
45:59 - you can also manually delete it yourself
46:01 - so let's make a function delete Lobby
46:06 - and then this one is pretty simple just
46:08 - go inside the lobby service the instance
46:10 - and just call delete and Lobby async and
46:12 - this takes in lobby ID so let's pass in
46:14 - the join lobby.id
46:22 - alright that's it let's test so on this
46:25 - one down here I created the lobby on
46:27 - this one up here I joined and over here
46:29 - let's delete this Lobby
46:32 - and yep there you go it's done and as
46:34 - you can see we're getting errors because
46:35 - the lobby has been deleted all right
46:37 - great
46:38 - so these are all the abilities of the
46:40 - lobby tool really awesome now before I
46:42 - showcase my final sample let's just
46:44 - quickly look at pricing
46:46 - here is the Unity gaming Services
46:47 - pricing page and if we scroll down and
46:50 - we find Lobby so yep here it is on the
46:53 - left side there's a free tier and on the
46:54 - right side is the pay tier and as you
46:56 - can see as usual there's a very generous
46:58 - free tier
46:59 - foreign Lobby you have 10 gigabytes for
47:01 - free per month per each region group
47:04 - that is a pretty massive amount Lobby
47:06 - uses very little data so unless your
47:08 - game is a massive hit it will likely be
47:10 - completely free to you so finally here
47:13 - is the sample that I've built using all
47:14 - these features you can download this
47:16 - sample and inspect on the source code
47:18 - since you've watched this whole video
47:20 - you should be able to easily read all
47:21 - the code in the sample the main script
47:23 - is this one a Lobby manager and here
47:26 - it's got pretty much all the functions
47:27 - that we already saw so function to
47:29 - handle the lobby heartbeat one for
47:31 - polling get the join Lobby and so on
47:33 - create a Lobby so all the exact same
47:34 - functions that we just saw then on top
47:36 - of it are some UI elements that hook
47:38 - onto this class for example here we've
47:40 - got the lobbying list UI I've got a
47:43 - simple container inside I've got a
47:44 - template with the lobby name the amount
47:46 - of players and the game mode what
47:47 - account template is pretty much just a
47:49 - local prefab so this template this gets
47:52 - duplicated in order to create more or
47:53 - less entries there's a refresh button
47:56 - and a button to create a brand new Lobby
47:57 - here on that UI script when I click on
48:00 - the refresh button this one calls this
48:02 - function
48:03 - and then this function simply goes into
48:05 - the 11th manager and refreshes the
48:06 - unlocking list so this one does a Lobby
48:09 - query so pretty much just like we saw
48:11 - finds all the lobbies and then fires off
48:13 - an event and passes in the list of
48:15 - movies then the UI script over here it
48:18 - simply listens to that event so on the
48:19 - unlocking list changed so when that
48:22 - happens it simply goes here destroys the
48:24 - previous Olympics on the list and adds
48:25 - the new ones so as you can see it
48:27 - literally is just a very simple UI
48:29 - script built on top of all the functions
48:30 - that we already saw by the way you can
48:32 - obviously make the list auto refresh I
48:35 - actually made that code so over here on
48:36 - the unlocking manager if we scroll down
48:38 - into the update we are handling the
48:40 - refresh login list then for this one
48:42 - what this code does is super simple HX
48:44 - Affinity Services have been initialized
48:46 - and if the player is signed in if so
48:48 - again just count down a simple timer and
48:50 - call that function I simply come to this
48:52 - out because I'm running multiple Builds
48:54 - on one machine so that means that all of
48:56 - the lobby requests are coming from the
48:57 - exact same IP so if I were to enable
48:59 - auto refresh with multiple builds I
49:01 - would end up being rate limited since
49:03 - each instance would be making too many
49:05 - requests but in the final game yep you
49:07 - would use exactly this so with two
49:09 - builds running first it asks for the
49:11 - player name and then there's a button to
49:12 - authenticate based on what I'm doing
49:14 - here is you see simple trick to allow
49:16 - the demo to work with multiple Builds on
49:18 - one PC if you just authenticate
49:20 - automatically you won't always get the
49:21 - exact same player ID which then can
49:23 - cause issues because you cannot join the
49:25 - same lobby with the same ID so over here
49:27 - I just added some super simple logic so
49:29 - I can click on this button in order to
49:30 - edit the player name let's say this one
49:32 - is Iron Man by the way this input window
49:34 - is something that I made in a previous
49:36 - video so with this I can easily change
49:38 - the name and then when I click on
49:39 - authenticate it runs this function which
49:41 - takes the string for the player name and
49:43 - over here just creates an object of type
49:45 - initialization options and over here
49:47 - using the player name in order to set
49:49 - the profile and then it's used over here
49:50 - to initialize Unity services this way
49:53 - even when running multiple Builds on the
49:55 - same PC they get different player IDs
49:56 - since they're using different profiles
49:58 - again I'm doing this just for demo just
50:00 - make it work with multiple ambulance on
50:01 - the same PC unless you specifically want
50:04 - to implement profiles there's no need to
50:05 - do this in your final game okay so with
50:07 - both these let's authenticate and
50:09 - authenticate now this one up here let's
50:11 - create a Lobby so just click on the plus
50:12 - button and shows this nice UI
50:15 - then all of the usual settings that we
50:17 - saw are used for creating the lobby so
50:18 - over here let's edit the lobby name
50:20 - let's call it my fun Lobby
50:23 - then I can make it public or private
50:25 - let's make it public include any number
50:27 - of players so let's say five players
50:29 - and the mode that capture the flyover
50:31 - contest and just go ahead click on
50:33 - Create and there you go the lobby was
50:34 - created so now on this one if I refresh
50:36 - and if there you go I can see the my
50:38 - phone Lobby running capture the flag
50:39 - with one out of 5 players then by just
50:42 - looking here it's going to join Lobby
50:43 - it's just going to call this function
50:46 - which is going to join Lobby by ID so
50:48 - here just join and you have to go this
50:50 - is the lobby UI this one is pretty
50:52 - similar to the endless UI instead of
50:54 - having a list of obvious it just has a
50:56 - list of all the players now while inside
50:58 - the lobby I can view all the other
50:59 - players inside this Lobby and I cannot
51:02 - see a nice icon of the character that
51:03 - they are using again this is the custom
51:05 - data that you can Define I just defined
51:07 - something for a character so let's say
51:09 - on this one up here if I do want to use
51:11 - the Marine but on this one down here let
51:12 - me say I want to use a ninja so there
51:14 - you go I click that button it updated
51:15 - the player data and that was propagated
51:18 - to all of the players then on the host
51:20 - there are also some more buttons which
51:21 - are hidden from the clients there's this
51:23 - button down here which toggles the game
51:25 - mode so if I click on it there you go
51:26 - that one becomes conquest and yep that
51:28 - one gets the update and the other button
51:30 - is this one which allows me to kick a
51:31 - player so if I click on this
51:33 - and if there go that player was kicked
51:35 - from that Lobby alternatively I've got a
51:37 - button up here to leave the lobby so if
51:39 - I click on it I go back to the list and
51:41 - if we refresh we cannot find the lobby
51:42 - because again everybody in left lobbyism
51:44 - Lobby was deleted okay so as you can see
51:47 - all the functionality is here working on
51:49 - this very simple demo I can create
51:51 - lobbies with other ones I can search for
51:53 - lobbies I can also join them I can join
51:56 - with multiple players I can change my
51:58 - character I can kick some out from my
52:01 - Lobby
52:02 - I can refresh again to another one and
52:04 - so on so this has all the functions that
52:06 - we saw except being applied to a nice UI
52:09 - you can download the project files and
52:10 - maybe use this as a starting point for
52:12 - your next multiplier alright so that's
52:14 - Lobby it's a really awesome tool for
52:16 - managing your multiplayer lobbies as you
52:18 - can see it's extremely feature complete
52:20 - allowing you to do everything you need
52:21 - from a Lobby and it's all pretty easy to
52:23 - use like I mentioned on the UNT gaming
52:25 - Services tools work very well with one
52:27 - another so stay tuned for the next video
52:29 - where I will explain how it really works
52:32 - and how to make a multiplayer game with
52:33 - Lobby relay and netcode for game objects
52:36 - alright hope that's useful check out
52:38 - these videos to learn some more thanks
52:40 - to these awesome patreon supporters for
52:42 - making these videos possible thank you
52:44 - for watching and I'll see you next time
52:49 - foreign