06:52 - and we're live welcome everyone how are
06:55 - you
06:56 - welcome to another let's dev stream here
06:59 - on the unity twitch channel and i have a
07:01 - very special guest that i'm so excited
07:03 - about uh
07:05 - first time exclusive face reveal of code
07:08 - monkey is anyone surprised that he's not
07:12 - a monkey
07:17 - you go introduce yourself tell us uh
07:20 - what you do uh and why the entire
07:22 - community loves you so much
07:24 - sure thanks
07:26 - hey everyone yeah
07:38 - um
07:51 - yeah exactly
07:53 - you have to come now to twitch
07:55 - [Laughter]
07:57 - unity tech and chat is saying their
07:59 - legend has been revealed indeed
08:04 - yeah so tell us what you've been doing
08:06 - and tell us uh what you do on your
08:08 - youtube channel right so on my youtube
08:10 - channel i do all kinds of uh unity
08:12 - tutorials pretty much anything that i
08:15 - can think of that i would like to
08:17 - do on camera and teach other people how
08:18 - to do that's pretty much what i do so
08:21 - pretty much anything related to unity i
08:23 - first started making games so eventually
08:26 - i realized that i wanted to try teaching
08:29 - essentially what i what i've learned
08:31 - over the years so yeah that's why i
08:33 - started the channel about three years
08:34 - ago and
08:35 - yeah it's been like 500 videos ever
08:38 - since
08:38 - so yeah quite a bit quite a bit 500 nice
08:42 - we're gonna have to do something special
08:43 - when you reach a thousand
08:45 - i was gonna say face reveal but i guess
08:47 - not
08:49 - we'll do something special for you at
08:50 - the thousand video mark that will be a
08:52 - special occasion
08:54 - nice um so today's stream is going to be
08:58 - about part of your how it's made series
09:00 - so for those who don't know um we have
09:02 - the video was right here um it's part of
09:05 - our humble bundle pack um our whole
09:08 - humble bundle showcase
09:10 - let's take a look at it right here
09:13 - um as you probably saw code monkey made
09:16 - a bunch of videos uh to advertise and to
09:19 - promote the new humble bundle pack that
09:21 - we did with unity it comes with a lot of
09:23 - assets uh comes with a lot of tools as
09:25 - well but we wanted to show you guys how
09:27 - you can make your own fps game so i'm
09:30 - really excited for that do you wanna
09:32 - tell us what else you're gonna be doing
09:34 - in that video
09:36 - sure yeah we're going to be remaking
09:38 - some mechanics from for done so the game
09:40 - is pretty interesting and it's included
09:41 - in the bundle so
09:43 - if you get the bundle even if you just
09:44 - get it for the assets definitely give
09:45 - the game a try it's pretty interesting
09:47 - say first person shooter world war one
09:49 - there's also tenenberg which is kind of
09:51 - the sequel so it's
09:52 - essentially one is uh focus on the
09:54 - western front the other one on the
09:55 - instant so pretty interesting games and
09:57 - being world war one they're pretty
09:58 - unique
09:59 - so yeah the bundle has lots of things
10:02 - now i made the video before the bundle
10:04 - started so i didn't actually end up
10:06 - using a lot of these assets but you
10:07 - could definitely use them for example
10:09 - the character movement fundamentals i've
10:10 - been looking into this one a bit more
10:12 - deeply and it's really awesome it's
10:13 - really super simple to use and it works
10:15 - on pretty much any kind of terrain so if
10:18 - you get it definitely and look into this
10:19 - one
10:21 - and uh yeah you got the game here then
10:23 - of course you got all kinds of
10:24 - environments
10:25 - so you could definitely just use any of
10:27 - these and use in pretty much any game so
10:30 - in my case i pretty much just use the
10:31 - terrain but i could have used any of
10:33 - these because yeah a lot of these assets
10:35 - even though this is an fps bundle this
10:36 - really works for for anything you want
10:39 - so a lot of these sci-fi you could make
10:41 - a ship game you can make a strategy game
10:42 - pretty much anything so
10:44 - yeah this bundle and the fantasy bundle
10:46 - which is also ongoing
10:48 - both of them are
10:49 - really great value really awesome lots
10:51 - of interesting assets lots of awesome
10:53 - stuff yeah
10:55 - nice thank you um so if you want to go
10:58 - check out the bundle we're going to
10:59 - throw the link in chat it helps supports
11:01 - code monkey but it helps support us too
11:02 - so definitely just click away as much as
11:04 - possible i'm also going to throw the
11:06 - link to the fantasy bundle which we
11:09 - featured
11:10 - yesterday it got extended an extra six
11:12 - days so definitely um go click both
11:16 - they're great bundles uh the fantasy one
11:18 - is awesome too you can get odin in there
11:20 - lots of really cool tools um you don't
11:23 - necessarily need to be making a fantasy
11:24 - game there's not just 3d assets in there
11:26 - so definitely go check it out um are you
11:29 - guys hearing double is there an echoing
11:31 - no
11:34 - we will never resolve it there was an
11:36 - issue a while ago but i think i sound it
11:38 - but i'm not sure
11:40 - because the audio mixer was still
11:42 - showing uh
11:44 - but i think i sound it so let me know
11:46 - enchant
11:47 - yeah wow didn't expect his voice to be
11:49 - exactly
11:50 - oh it's fixed okay
11:51 - magically through the magic of thrones
11:54 - just don't touch anything anymore
11:59 - thanks chad thanks for being so patient
12:00 - with us about all of this um for those
12:02 - who don't know the humble bundle uh is a
12:05 - pay what you want but depending on the
12:07 - tier you pay you can get all kinds of
12:09 - great assets this is a really great
12:10 - bundle though for like you know 50 bucks
12:12 - or less than even 25 bucks you can get a
12:14 - thousand dollars worth of assets that
12:16 - you can use for other games uh just like
12:18 - hugo said so definitely go check it out
12:21 - we only do it really once a year
12:22 - although if your guys are really
12:24 - interested maybe we'll have to be
12:25 - convinced to do another one we'll see
12:27 - this one is really awesome because it
12:29 - benefits the carbon fun foundation on
12:32 - oceana so you're also supporting some
12:33 - great charities in this case
12:36 - i think something to make this stream
12:38 - extra spicy is that we should do some
12:40 - giveaways we're going to be giving away
12:42 - some official unity lego minifigures for
12:44 - those who don't know unity and lego are
12:46 - super awesome partners look out for more
12:48 - lego content coming out in the next
12:50 - couple weeks um but i don't know what
12:52 - would your community
12:54 - how do we give away what do we do to
12:56 - give away some nice uh
12:58 - lego minifigures to your community what
13:00 - should we ask them
13:01 - uh
13:03 - not sure
13:04 - i'm not sure i've done so many things so
13:06 - trying to pick something
13:08 - yeah well i love the how it's made
13:10 - series and i think people love it too i
13:11 - think it's a great way to learn i think
13:13 - oftentimes when you start game
13:15 - development you know it's so natural to
13:18 - be i get this question a lot as a
13:19 - community manager at unity is like hey
13:21 - how do i make the next uh cod or
13:26 - so i think your series is really awesome
13:28 - for that because then you can look at
13:30 - the game that you really loved and then
13:31 - you can learn all the mechanics for it
13:33 - and it's a great way to learn instead of
13:34 - just like jumping into just a single
13:37 - mechanic yeah exactly i mean if you
13:39 - break if you break it down pretty much
13:41 - any game is composed of simple things
13:44 - so when you see a final game when you
13:45 - see something like call of duty it seems
13:46 - impossibly complex but if you break it
13:48 - down system by system then it's actually
13:51 - just a bunch of simple systems built
13:52 - together and then looks really complex
13:54 - so if you if you learn how to look at
13:56 - games uh from that way starting to see
13:59 - things system by systems all of a sudden
14:01 - everything becomes much more easy to
14:03 - understand how things work
14:05 - yeah i think that's why i'm like super
14:07 - excited about this stream because for me
14:09 - and fb guests and fps games just seems
14:11 - so complex but the way you're gonna
14:13 - break down uh everything today is gonna
14:15 - be like oh wow i never thought of that
14:16 - and the best part is you're probably
14:18 - gonna get you give insight and to be
14:19 - like well this mechanic seems like it's
14:21 - only for this particular fps game but
14:23 - actually you can use it for this type of
14:24 - game and this other type of game so it's
14:26 - really awesome um so i think we should
14:28 - ask the chat
14:30 - what's the next game that you want to
14:31 - see
14:32 - code monkey break down uh in the next
14:35 - how it's made series so we'll take your
14:37 - suggestions sure throw it in chat what's
14:39 - the next big game that you want to see
14:42 - pick something hard
14:47 - all right all right so
14:48 - let's go
14:50 - take a look do you want to open up uh
14:52 - we're done and play it play it a little
14:54 - bit and uh
14:55 - okay awesome
14:58 - i'm sorry
14:59 - pepper is going to be very vocal during
15:00 - the stream
15:02 - as per usual
15:09 - all right
15:10 - oh sorry just trying to manage all the
15:13 - streams obs and everything at the same
15:15 - time
15:16 - we are both streaming we are streaming
15:18 - to so if you want to support
15:20 - code monkey go watch the stream here on
15:22 - twitch
15:23 - at unity but also watch his stream on
15:25 - youtube
15:27 - if you would so please
15:31 - alright so i think
15:42 - nice all right
15:44 - okay so let me join a random game
15:46 - so what did you think of this game
15:48 - it's pretty interesting you know like i
15:50 - said the uh
15:51 - um
15:53 - i mean it's pretty unique the fact that
15:55 - it's a world war one shooter i mean
15:56 - there's plenty of shooters but usually
15:58 - world war one is not a thing that you
16:00 - usually see
16:01 - yeah and it's actually pretty realistic
16:03 - the main thing about the game is just
16:05 - how
16:05 - how punishing it is pretty much like
16:08 - pretty much every every weapon here is
16:10 - pretty much one shot one kill
16:13 - oh
16:14 - yeah oh no
16:17 - just walking around and boom
16:19 - one shot and you're gone
16:21 - but it also works the other way so if i
16:23 - hit someone then just one shot oh crap
16:25 - there's an artillery here
16:29 - there you go so there's one of the
16:30 - systems that we're going to look into
16:32 - essentially an enemy
16:36 - and then we fired an artillery so it
16:38 - just looks
16:40 - and yeah
16:42 - see how the game is pretty interesting
16:44 - it has a lot of very interesting systems
16:49 - there you go
16:51 - it's really one shot and it's gone
16:53 - you're gone
16:54 - this is how do you feel about these
16:56 - really unforgiving games quote
16:58 - unforgiving quote-unquote very difficult
17:00 - games to to play nowadays i think that's
17:03 - like we often call them like
17:05 - the souls of games
17:08 - oh yeah i mean i mean it's great to have
17:10 - variety so
17:12 - i'm a big fan of battlefield which is
17:13 - definitely a lot more arcadey but then
17:15 - you got this so you got different styles
17:17 - so
17:18 - all of them it's always great to change
17:20 - things around so
17:22 - with a little bit of something a bit
17:23 - more arcade a little bit something much
17:25 - more hardcore
17:27 - it's always interesting keep it fresh
17:37 - uh akuno and chat says code monkey
17:39 - actually looks badass
17:42 - thanks
17:44 - i guess
17:48 - uh and janisco says great humble
17:50 - showcase streams thank you yeah we're
17:53 - trying to give you guys as much variety
17:55 - as possible um we're going to be showing
17:57 - a lot more streamers we want to feature
18:00 - all the your favorite all the people
18:01 - that you've been using to learn how to
18:03 - use unity want to have them come on and
18:05 - join us so i'm really excited to have
18:06 - code monkey hebrew recently did a unity
18:09 - tips dev takeover
18:11 - oh yeah that was awesome yeah very
18:12 - interesting to make yeah
18:14 - awesome did you what was your favorite
18:16 - tip from that series uh
18:19 - i'm not sure they're all pretty great i
18:21 - mean the
18:22 - the mini map that's something that i
18:24 - that i've already done in the video so
18:26 - now i'm making it untip just it's a it's
18:28 - something that it's super simple to to
18:30 - make and it works pretty great so
18:32 - essentially just based on using a second
18:34 - camera in the render texture
18:36 - so
18:37 - yeah so essentially making that mini
18:39 - video making the making a mini map in
18:41 - just 60 seconds really shows just how
18:44 - quick and easy you can do it
18:46 - so that's once again it's what we were
18:47 - talking about a while ago where all
18:50 - these games seem insanely complex but
18:52 - really when you break it down for
18:53 - example a mini map it seems insanely
18:54 - complex but it can actually be quite
18:56 - simple
18:57 - nice
18:58 - yeah
18:59 - so all of this we're doing so the reason
19:01 - we're doing so many of these showcase
19:03 - streams and things like that is to
19:04 - really try and educate you give you the
19:06 - tools you need to participate in our
19:08 - humble bundle showcase so as you know we
19:10 - have showcases on unity play every month
19:13 - and we're gonna do one for the humble
19:15 - bundle so if you already have some of
19:17 - the assets from the humble model or if
19:18 - you don't
19:19 - and you've downloaded it recently or
19:21 - you've already had it or you've made a
19:22 - demo or any type of game that you want
19:24 - to showcase definitely submit to the
19:26 - humboldt showcase i'm going to be
19:28 - playing the with joyce of minions art
19:30 - also another great twitch
19:32 - streamer and
19:34 - shader witch as she's known in her
19:36 - community and we'll see
19:38 - what you guys made
19:43 - so yeah definitely submit them
19:47 - awesome so it looks like we're
19:48 - definitely going to be taking a look at
19:50 - that artillery
19:53 - breakdown like a drop
19:56 - mechanic
20:02 - and then
20:03 - what else would you like to take a look
20:05 - at during the stream
20:07 - uh i want to try it wrong let me just go
20:10 - into a playsuit part so i can easily
20:12 - show it working
20:14 - [Laughter]
20:18 - because you're testing out seeing those
20:20 - mechanics and again with lots of players
20:22 - that's a bit tricky
20:24 - yeah thankfully the game does have bots
20:25 - so it's uh
20:28 - it's pretty great
20:30 - i'm assuming the game has some sort of
20:31 - single player story mode as well uh
20:34 - actually story mode i don't think so
20:36 - it's pretty much a multiplayer game i
20:39 - don't i don't think so at least
20:41 - i just jumped into multiplayer right
20:42 - away so
20:46 - but yeah so the three mechanics it's the
20:49 - artillery so essentially look somewhere
20:51 - and i just got to make sure that i'm
20:53 - using the right squat uh but yeah you
20:56 - look somewhere then it's uh
20:59 - then it shows a marker on where it's
21:00 - going to land let me see if i
21:02 - because some of them have some of them
21:04 - don't actually
21:06 - i actually forgot to change one thing
21:08 - just to make this easier
21:10 - no worries
21:12 - chad's throwing a lot of great games as
21:14 - suggestions uh
21:16 - lomigang says code mike you should break
21:18 - down the fps outer wilds lucky for you
21:21 - i actually did that already so yeah
21:23 - great yeah
21:24 - perfect
21:38 - trying to look at chat but it's going by
21:40 - insanely fast
21:41 - no worries it's tricky yeah i think your
21:44 - chat is very very active
21:53 - i had i got a message saying i wasn't
21:55 - expecting code monkey to be this cute
21:59 - thanks i guess
22:06 - if you would like code monkey to have
22:08 - camera on for his future videos uh let
22:11 - us know in chat
22:13 - that would be tricky
22:19 - exactly focused with the camera in my
22:21 - face
22:23 - i must say it's not really my
22:25 - my thing
22:33 - nice welcome also to the code monkey
22:35 - chat i'm checking out the twitch chat um
22:38 - but i just want to definitely say hello
22:40 - to the guys over there because you guys
22:42 - are very active it would seem
22:44 - my moderators are having trouble keeping
22:46 - up with you
22:49 - okay so here i've got the the officer
22:51 - class so
22:53 - i'm just trying to go somewhere where i
22:54 - won't die instantly
22:58 - okay so essentially by pressing a button
23:01 - you can see that it shows a little
23:02 - overly little target
23:04 - so it shows where it's going to land i
23:05 - know i just actually got to wait for the
23:07 - second artillery to be available
23:09 - so that's one of the things
23:11 - so again it's like i said in my video
23:13 - just looking at this try to guess how
23:15 - would you make this
23:17 - just pressing a button and being able to
23:19 - have a target directly placed on terrain
23:21 - exactly where where you're looking at
23:25 - so try to guess pretty simple
23:28 - yeah uh
23:29 - yeah so essentially you look somewhere
23:30 - then you press the button and it spawns
23:33 - an artillery right there
23:35 - so it starts wearing some mortar some
23:36 - artillery you can even see on the mini
23:38 - map there's a nice little icon and after
23:41 - a while things start flowing down and
23:42 - everything explodes
23:45 - all the explosions yeah nice
23:48 - blake lowell already kind of guessed it
23:50 - some raycast yep exactly
23:55 - uh yeah so dot
23:58 - uh
23:58 - doctor this is already this is kind of a
24:01 - continuation of his video how it's made
24:03 - we're done um but it's more of a deep
24:05 - dive so that was like a quick like run
24:07 - through of how he did everything but
24:08 - we're really going to show you guys how
24:09 - he's going to do it in the stream so if
24:11 - you have any particular questions or
24:13 - other things you want to add so it's
24:14 - like if you want to have the same
24:15 - mechanic in your game but you want to
24:17 - figure out how to add some sort of
24:19 - additional features let us know and
24:21 - we'll do it we'll do it on stream for
24:23 - you guys
24:27 - all right so actually now that i've seen
24:29 - now we can actually look at the
24:30 - since i'm in a bot it's no
24:33 - problem to going if afk on a bot thing
24:36 - so
24:37 - next i got my remake here
24:45 - so this is the project that i made that
24:46 - i'm recording for that video
24:50 - and over here i've got my demo scene
24:55 - so yep right so this is my that one just
24:59 - uh just mute the game because
25:02 - it sounds a bit distracting sounds great
25:04 - but yeah
25:05 - it does sound great
25:06 - right so this is my demo scene so i've
25:08 - got my player pretty much just a very
25:10 - normal first person controller so like i
25:13 - was saying on the over here you could
25:15 - use for example this one or the ultimate
25:17 - fps that one also has a controller so
25:18 - you could use any of these now
25:20 - uh so yeah just a standard first person
25:23 - controller and then down here i'm using
25:25 - just a terrain and just a bunch of trees
25:28 - and then of course like someone said
25:30 - there's a raycast so as i press a button
25:32 - i can already see my target and wherever
25:34 - i'll look on terrain you can see the
25:36 - target goes exactly where it is so again
25:38 - that's the very basic raycast and then
25:41 - by pressing another button i can simply
25:42 - mark and there you go after a few
25:44 - seconds some explosions come in and the
25:46 - whole thing falls
25:49 - so once again as you see it's uh
25:52 - most complex in the game if you take the
25:54 - whole game into account but if you look
25:55 - at just this one system yeah it's pretty
25:57 - simple just do a raycast and spawn some
25:59 - things
26:00 - so if you look in the code it's actually
26:02 - quite simple let me
26:04 - it's right here
26:06 - so this grip pretty much very simple
26:08 - very small
26:10 - uh
26:11 - yeah so pretty much exactly like someone
26:14 - said yeah there you go just a physics
26:15 - braycast that's pretty much it so
26:17 - the raycast in case you don't know it's
26:19 - essentially
26:20 - uh essentially a laser that exists in
26:22 - the physics world so it identifies
26:25 - things that have a physics and leather
26:26 - so in this case i'm using a
26:28 - a terrain
26:30 - so right here this is a terrain object
26:32 - and as you can see it has a terrain
26:33 - collider so essentially the terrain
26:35 - exists in the physics world
26:37 - so that is why over here just doing a
26:38 - raycast then the raycast takes an origin
26:41 - direction so for the origin starts with
26:43 - from the player transform position then
26:45 - for the direction it's the transform
26:47 - forward which i guess this would be a
26:48 - nice quick tip because a lot of people
26:51 - don't seem to know there's the forward
26:52 - vector so that is really useful for
26:54 - identifying
26:56 - seeing where a transform is pointing
26:57 - towards so that's really useful
27:00 - uh yeah so this does a raycast and then
27:02 - the results of the raycast go on to the
27:04 - rake acid so this is a structure that
27:05 - contains all kinds of info
27:08 - so you can inspect and see everything
27:09 - that it has so it essentially has a
27:11 - collateral that hit the exact point
27:13 - where it hit the normal and so on so as
27:15 - you can see lots of interesting data
27:17 - that you can use and of course uh it
27:19 - simply
27:20 - takes the transform visual
27:22 - so that's just a transform reference
27:24 - so over here if you look in the player
27:26 - if i look in the script there it is
27:28 - so just got a reference to the camera
27:30 - and then over here reference to the
27:31 - transform visual
27:33 - so here is the target and just for fun i
27:35 - also added a nice animation so just up
27:37 - and down pretty simple
27:39 - so yeah pretty much what it does is just
27:41 - a raycast in order to find the exact
27:43 - point
27:44 - so the point is going to be over here on
27:46 - the raycasted.point
27:48 - and then pretty much just move that one
27:49 - in there
27:51 - nice my dog approves
27:54 - that's a great tip
27:57 - so yeah as you can see it's pretty
27:58 - simple pretty much just a recast then
28:00 - listening for another keep press and
28:02 - then just spawning some artillery on
28:04 - that raycast position so pretty much a
28:06 - sort of position and then for the
28:08 - spawning the things it's really just
28:10 - instantiating a bunch of prefabs so just
28:12 - grab a random one from the list then
28:14 - instantiate it called destroy which
28:16 - here's another quick tip just in case
28:18 - you don't know destroy also has a second
28:20 - parameter so you might use it just like
28:23 - this so essentially just destroys and
28:24 - destroys instantly but you can use it
28:26 - with the second parameter which is
28:28 - actually the time that it is destroyed
28:29 - so when you want to spawn something that
28:31 - you want it to be destroyed after some
28:33 - time this is great so essentially after
28:35 - five seconds this game object gets
28:36 - destroyed so everything is nicely
28:38 - cleaned up
28:40 - and
28:41 - yeah that's pretty much it uh also
28:43 - another interesting thing is for the uh
28:46 - screen shade
28:47 - so
28:50 - for the for the camera i'm using the uh
28:53 - scene machine component
28:56 - so i got sin machine i just look around
28:58 - i press and after a while yeah there you
29:00 - go some really nice screen shake
29:03 - so if you want to know the easiest way
29:04 - to do it well if you're using scene
29:06 - machines actually quite simple so here
29:08 - i've got my camera and it's using the
29:10 - same machine brain
29:11 - and then on the player it has a virtual
29:13 - camera
29:14 - and it has a sin machine impulse
29:16 - listener
29:17 - and then on the
29:19 - layer itself
29:21 - it also has an impulse source so these
29:23 - two components work together and
29:27 - over here in the code you essentially
29:28 - just have reference just trigger
29:30 - generate impulse and it's going to
29:32 - make sure that this fires an impulse on
29:34 - the zen machine system which then on the
29:36 - virtual camera listens to that and then
29:38 - shakes the camera
29:39 - so if you want to know how to do some
29:40 - very simple screen shake yep that's
29:42 - pretty much it
29:43 - nice this is perfect because yesterday
29:45 - manisha was on the stream and she was
29:47 - there to give some great uh
29:49 - game jam tips and that's exactly kind of
29:51 - the suggestion we'd make so it's perfect
29:53 - she also used some machines to try to
29:55 - show how you can make really simple cut
29:56 - scenes for your uh game it's really
29:59 - great to make like press kit stuff and
30:00 - and what not to use the machine so it's
30:02 - perfect you can go check it out stream
30:04 - it's really simple to install some
30:05 - machine actually yeah let's get it super
30:07 - useful very easy yeah it's really
30:09 - awesome
30:10 - yeah um
30:12 - i know that one of your uni tips was
30:14 - also to create like uh for collision and
30:16 - stuff like that how to make exploding
30:19 - uh elements so you guys want to go check
30:21 - that out unity devs tip
30:23 - when code monkey did a takeover you can
30:25 - go check that out yeah that one was
30:27 - using pro builder which is also another
30:29 - super useful unity package
30:32 - nice
30:33 - awesome it's a good tip you can ask
30:35 - questions any time during the stream and
30:37 - we will answer them so sure they're all
30:40 - there a lot of things on chat but yeah
30:43 - kind of hard to keep up
30:45 - for those who don't know this is a
30:46 - stream featuring code monkey
30:49 - part of our humble bundle showcase
30:51 - streams for all the the entire month of
30:53 - september we're inviting a lot of uh
30:56 - influencers to come on and show us how
30:58 - they use the humble bundle to break down
31:01 - games or give us tips for game gems or
31:03 - anything you like
31:06 - people are saying my screen looks blurry
31:08 - does it
31:10 - uh you might be lower quality on twitch
31:13 - for sure the quality on youtube is going
31:15 - to be a little bit higher um
31:19 - because
31:20 - the encoding is a little bit better on
31:21 - on youtube so sorry
31:24 - twitch is a little bit tricky with that
31:29 - i've seen this question pretty often
31:31 - when you post it as well and i saw this
31:34 - it's been asked by
31:37 - uh priscoda hello how do makes a machine
31:39 - work with the new input system i want to
31:41 - rotate only your mouse right button is
31:43 - down and actually a lot of people are
31:44 - asking
31:45 - what to do i don't know if you can
31:47 - answer this but a lot of people are
31:49 - asking like what to do with this hum new
31:51 - like this
31:52 - asset pack for example from humble
31:54 - bundle um
31:55 - it doesn't often perfectly work out of
31:58 - the box with the new input system what's
31:59 - your advice for that
32:00 - i mean that's going to depend on
32:02 - uh on each asset pack so
32:05 - i'm pretty sure i was looking on the
32:07 - over here on the character movement
32:08 - fundamentals i was looking in the
32:10 - in the manual and i'm pretty sure they
32:12 - do have something there where it's
32:14 - uh pretty much if the input is nicely
32:16 - separated and it's pretty easy to swap
32:18 - out but yeah that's really going to
32:20 - depend on each uh on the specific asset
32:23 - that you're using
32:24 - so
32:25 - yeah a lot of these assets have been
32:28 - updated over time so that's that's great
32:30 - there's it means that they're very
32:31 - stable by now but at the same time it
32:33 - means that if the first version came out
32:35 - quite a long time ago then yeah they're
32:37 - probably using the uh legacy input
32:39 - manager by default so yeah but it
32:42 - depends on the
32:45 - uh but yeah i'm pretty sure i saw on the
32:47 - on the manual for that one that it did
32:49 - talk about new input system
32:51 - and then for the uh input system
32:53 - combined with cine machine i mean that
32:55 - really depends on what exactly you're
32:57 - doing because those two
32:59 - uh those two systems aren't really
33:02 - connected automatically at least i don't
33:04 - think
33:06 - i mean because uh
33:08 - where's my sin machine right here the
33:10 - virtual camera so essentially over here
33:12 - you've got all the settings that you set
33:15 - and these are pretty much uh input
33:17 - agnostic so
33:20 - most of these won't follow a virtual
33:22 - target so for example in my case i've
33:25 - got a camera target here so this object
33:27 - let me put side by side
33:32 - so this target oh
33:35 - just
33:36 - yeah take it okay so that object that is
33:39 - essentially what cinemachine is
33:41 - following
33:42 - so cinemachine doesn't care doesn't know
33:44 - how that object is actually moving it
33:46 - just knows to follow exactly that object
33:48 - say it's only behind it so just like
33:50 - that
33:51 - so yeah essentially all of that to say
33:53 - that the input system in cine machine
33:55 - should be pre-separate so you should be
33:57 - able to use cine machine on
33:59 - using the legacy input manager or new
34:02 - input system it should work with either
34:04 - of
34:04 - them awesome thank you for that
34:09 - all right so do we jump into the next
34:12 - mechanic i'm kind of excited for this
34:13 - one this one has a lot of good juicy
34:15 - tidbits in it
34:19 - all right so
34:24 - okay so for the other one the next one
34:26 - is the gas mechanic which is also
34:28 - very very interesting uh i just need to
34:31 - swap out the squad because essentially
34:33 - in the game each squad each character
34:34 - has
34:35 - different abilities so for example on
34:37 - this one the ui stove boys apparently
34:39 - they got freaking brush now i gotta find
34:41 - one that has
34:43 - the
34:45 - there you go the mustard gas which is
34:47 - pretty much a
34:48 - staple in every
34:50 - world war one game pretty much
35:00 - all right so there
35:02 - another thing also that i didn't cover
35:04 - in the video but also interesting as you
35:05 - can see the uh the
35:08 - the ui element over there it's kind of
35:10 - hard because i i want a point but i
35:12 - can't point to it
35:14 - but uh
35:17 - exactly
35:18 - over there it's a uh
35:20 - a little circular thing that's actually
35:22 - super easy to do
35:24 - uh
35:25 - just make sure that i don't break
35:26 - anything
35:27 - uh
35:28 - because that is actually super useful
35:30 - and super easy but a lot of people
35:32 - probably don't know about so essentially
35:34 - just making an image
35:37 - and for the image uh just choose a
35:40 - sprite for example just a random circle
35:42 - sprite
35:43 - and then on it over here on the image
35:45 - type you can set it into filmed and over
35:48 - here you've got the film method
35:49 - you can set it to radial or horizontal
35:51 - so if you set it to radial and over here
35:53 - you've got the fill amount and if you
35:55 - modify this one you get something like
35:56 - that
35:57 - so then you can change here the origin
35:59 - so for example put it on the top
36:02 - and then
36:03 - uh
36:04 - on the game
36:05 - uh you can see that it's just an outline
36:08 - so it's not a whole thing so you can
36:09 - essentially just combine this with a
36:11 - mask so essentially just make another
36:14 - image
36:16 - and now i'm not sure if i have
36:18 - just a texture that it works
36:22 - every much is this just add the mask
36:24 - component
36:26 - and then make this one channel that one
36:30 - and
36:32 - over here on the mask do not show the
36:33 - mass graphic
36:35 - actually it's reversed
36:38 - but yeah
36:40 - uh lurking ninja says pac-man for the
36:42 - win correct you can make your own
36:44 - pac-man game now
36:46 - yeah exactly
36:47 - for this you could just use a
36:49 - a circle and yeah if you put it on the
36:52 - on the left right and pretty much just
36:54 - animate it a little bit like that that's
36:56 - pac-man
36:57 - nice
37:03 - so that's what i expect to see for the
37:05 - humble showcase guys i want to see an
37:07 - fps game featuring pac-man
37:09 - so yeah there you go like this that'll
37:10 - make something very simple
37:12 - now if the the other texture was
37:15 - with alpha on the middle then you would
37:16 - get essentially what you see in the game
37:18 - so as you can see the using the image
37:20 - type setting it to film just in case you
37:21 - don't know this is super useful so
37:24 - anytime you want to do something
37:26 - yep super easy super useful that and of
37:29 - course the mask mask is also extremely
37:31 - useful
37:32 - awesome thanks for that too yeah
37:34 - all right so here i'm just
37:36 - making a map surrounded by bots
37:39 - okay so i fired that one and actually
37:41 - for firing the gas the mechanic is
37:42 - pretty much the exact same thing as the
37:44 - artillery
37:45 - the difference is instead of spawning
37:47 - just some mortars you spawn a bunch of
37:49 - gas
37:50 - there you go the gas starts showing up
37:52 - in there
37:53 - actually i should have posted a bit
37:55 - closer to me
38:05 - all right so the gas starts showing up
38:09 - and if i get inside yeah we can see that
38:10 - everything is nicely nicely blurred the
38:13 - whole thing i'm losing my health so yep
38:16 - stayed way too long so obviously the gas
38:18 - kills you
38:20 - yep
38:21 - right so yeah this is one of the one of
38:23 - the things is having the
38:25 - the screen go blurry so
38:28 - that's an interesting one
38:30 - yeah okay you see a little bit of like a
38:32 - little bit of vignette coming in as well
38:34 - yeah that as well
38:36 - yeah by by just adding a bit of post
38:38 - processing you can really add all kinds
38:40 - of effects all kinds of interesting
38:41 - things
38:42 - okay so now the other thing that the
38:44 - game has obviously counter to the ass so
38:46 - you can put on a gas mask
38:49 - and when you do you can see vision is a
38:51 - bit more unlimited because they're
38:53 - essentially a sprite on top
38:55 - but now you can go inside the gas and
38:57 - you can look around you don't take
38:59 - damage so that's pretty much the system
39:00 - so you've got an area where if you go in
39:02 - without a mask you start taking damage
39:04 - and if you take if you put on the mask
39:06 - then everything works fine
39:09 - yeah this is awesome by the way i'm
39:10 - learning a lot as well i love that you
39:12 - break it down because when you're
39:13 - looking at this it feels like there's so
39:14 - many things but it's really simple the
39:16 - way you break it down there's like three
39:17 - basic mechanics that you need to learn
39:18 - which we learned a little bit of it
39:20 - already in the previous uh mechanics so
39:22 - that's that's how you build a game
39:26 - out of curiosity which version of unity
39:28 - are you using for this i'm using the lts
39:30 - version so 20.3
39:32 - nice yeah pretty much when in doubt
39:34 - always use the lts version that's
39:37 - i made a video quite a while ago
39:39 - explaining the unity versions because
39:40 - quite a lot of people seem to have
39:42 - because there's a lot of them so yeah i
39:44 - can see how for a beginner it can be a
39:46 - bit confusing but once you understand
39:48 - how the system works it's actually very
39:49 - straightforward so
39:51 - pretty much when in doubt go with lts
39:53 - which as of right now it's 20 20.3
39:56 - yeah is there any situation where you
39:57 - would actually really recommend any of
39:59 - the more experimental versions well i
40:01 - mean the only thing would be if you're
40:02 - actually trying to uh
40:05 - trying to work on the packages that
40:07 - require that version so pretty much if
40:08 - you're working on the bleeding edge
40:10 - trying to
40:11 - make the things that are currently in
40:13 - development that's pretty much so for
40:14 - example using dots using entities for
40:17 - that you know that's the kind of thing
40:18 - that's always on the bleeding edge so
40:20 - for that one usually you have to work
40:21 - with the latest version nice thanks
40:26 - right again just uh very quickly talking
40:28 - a while ago about post processing and
40:30 - how much of a difference it makes so for
40:32 - example here's the scene with
40:34 - and without post processing
40:36 - so yeah you can see it's a pretty huge
40:38 - difference just by adding a bunch of
40:40 - effects so over here i've got some
40:42 - vignette i've got some bloom of course
40:45 - and then just some color adjustments and
40:47 - tone mapping so yeah
40:49 - i would like to beg for everyone not to
40:50 - overuse the bloom i'm old my eyes cannot
40:54 - handle that much
40:57 - i find like too much movement in bloom
40:58 - now makes me immediately want to throw
41:00 - up so
41:01 - all right
41:02 - so did you play
41:03 - oblivion or not
41:05 - no i did it i i recently tried to play
41:08 - uh i used to i recently tried to play
41:10 - doom the latest doom and i can last like
41:13 - five minutes at a time if i turn off
41:15 - every visual effect there is
41:18 - yeah but back in the 2005 back when
41:20 - graphics cards were becoming better and
41:22 - better there was a time right around
41:24 - when oblivion came out everybody was
41:26 - just abusing bloom
41:28 - if you go and see uh oblivion gameplay
41:30 - pretty much everything is shiny all the
41:32 - people on the faces everything
41:34 - yeah chat is vehemently arguing with me
41:39 - vehemently arguing with me that bloom is
41:40 - important but you know if it goes like
41:43 - this that's a bit way too much so
41:45 - definitely bring it down to something a
41:47 - bit more manageable
41:48 - yeah
41:50 - all right so for the gas mechanic
42:01 - uh twisted verb size just means it's
42:03 - important to give users settings to turn
42:04 - it off yeah i agree sure of course
42:06 - always editing the options
42:08 - that's a very nice uh quality of life
42:10 - options like oftentimes you know i judge
42:12 - game game jam games a lot and we
42:15 - critique games or review them and we
42:17 - talk to a lot of other developers like
42:19 - from our creator spotlight series and
42:21 - you'd be surprised how often we spend
42:22 - time thinking about
42:24 - what makes the best user experience
42:27 - as much as you spend time on creating
42:28 - mechanics and beautiful stories and all
42:30 - these things you'd be surprised
42:32 - oftentimes the developers sit there and
42:33 - think a lot about what's gonna make a
42:35 - user
42:36 - not throw up halfway through the game
42:38 - yeah that's pretty important
42:40 - yeah crucial i would
42:42 - say
42:44 - all right so here is my mechanic with
42:46 - the the thing so you can see again i'm
42:49 - using the same terrain the same first
42:51 - person controller so pretty standard
42:53 - uh and i've got a nice software so we've
42:55 - got a simple uh health system
42:57 - implemented and then over there got a
42:59 - bit of gas so if i go in yeah we can see
43:02 - that the whole scene changes now i'm
43:03 - taking some damage so everything is
43:05 - nicely blurry everything is a lot more
43:07 - green so yep if i stay there way too
43:09 - much i die
43:10 - so instead i can equip a gas mask
43:13 - and now if i go inside and nope there's
43:16 - no issues so now i can see here i can do
43:18 - everything and yep it all works
43:20 - so that's pretty much a mechanic so if
43:22 - you go inside the visuals change you
43:24 - start taking damage and if you take the
43:25 - mask then you can go inside there's no
43:27 - issues
43:30 - all right so again this one is also
43:32 - pretty easy to make
43:33 - so
43:34 - for the visual itself
43:36 - uh it's pretty much just a particle
43:38 - system so the anti-particle system is
43:40 - super useful
43:43 - so you haven't looked at that pretty
43:44 - much is some particles just moving up
43:46 - the just some basic shape there in a
43:48 - cone so just around this area just
43:50 - constantly spawning moving up increasing
43:53 - and then just on the corner over the
43:54 - lifetime so they start off a bit faded
43:56 - then they become white and then fade
43:58 - away so just a basic particle system
44:03 - then over here on the gas
44:05 - first of all for the visual
44:07 - which you saw the visual difference
44:08 - which actually on the scene camera also
44:10 - works so if i go inside you can see the
44:12 - whole post processing everything changes
44:15 - so that is using the volume component
44:17 - which is how you add post processing and
44:20 - over here on the mode
44:22 - the usual thing that you might do is a
44:23 - global that's how you apply post
44:24 - processing to the whole thing but you
44:26 - can also apply to local and if you
44:28 - combine that with a collateral so if i
44:30 - enable gizmos you can see over there
44:32 - i've got a spherical leather and as soon
44:34 - as i go within that area you can see
44:36 - that it changes so essentially
44:38 - this volume these post-processing
44:40 - settings these are going to override the
44:41 - global ones because it's got over here
44:43 - the priority higher than the other one
44:45 - so the default one
44:47 - is over here it's got a priority of zero
44:49 - so on this one when it's local and with
44:51 - a higher priority so this one takes over
44:53 - so if i'm outside then go inside so as
44:55 - you can see making areas with commonly
44:57 - different visuals
44:59 - it's very easy really just make a
45:01 - spherical ladder make it local and yep
45:03 - it works great
45:06 - awesome
45:07 - uh quick question um
45:08 - which render pipeline are you using for
45:10 - this uh i'm using the urp universal
45:12 - render pipeline yeah that's pretty much
45:14 - what i use all the time also yeah
45:18 - um
45:18 - so i know you're using the particle
45:20 - system it's really awesome essentially
45:22 - it's like you know the way that we do
45:24 - that fog or
45:25 - gas like it's kind of like sprites any
45:28 - any advice on if you want to build the
45:30 - same thing using the vfx graph have you
45:33 - taken a look at more real-time visual
45:35 - effects uh i mean i haven't looked into
45:38 - it in about a year but yeah it's uh i
45:40 - mean they both have their their use case
45:43 - so essentially the main difference is
45:44 - that the this particle system this one
45:46 - runs on the cpu whereas the vfx graph
45:48 - runs on gpu so for this one you're
45:50 - limited to like a couple hundred
45:52 - particles whereas on the vfx graph you
45:54 - can get millions of particles so that's
45:56 - the main difference it's where each
45:57 - system runs
45:59 - but yeah you could definitely make this
46:00 - one using the vfx graph it's a
46:04 - it's a lot more capable
46:06 - uh but also a bit more complex so
46:10 - pretty much every tool unless it's used
46:11 - so that's uh but that's a that's an
46:13 - interesting thing because one comment
46:14 - that i see every once in a while it's
46:16 - essentially asking
46:18 - um
46:19 - does the vfx ref essentially replace the
46:21 - particle system and the answer is it
46:22 - doesn't they both do different things so
46:26 - so they both can coexist essentially one
46:28 - is not a direct operator to the other
46:30 - one yeah yeah awesome perfect that's
46:33 - kind of basically what i was trying to
46:34 - get at is um oftentimes people are
46:36 - trying to rebuild things in bfx graph
46:38 - totally uh but yeah there's definitely
46:40 - use cases for them
46:44 - agreed pepper
46:47 - right so
46:49 - so that's the particle system and the
46:51 - visuals let's see post-processing uh and
46:54 - then for identifying if the player is
46:55 - inside so just got a basic script
47:00 - so essentially once again it's using
47:02 - physics except in this case it's not
47:04 - trying to identify just a laser going
47:06 - somewhere instead it's using overlap
47:08 - sphere so this is kind of uh
47:10 - imagine a virtual sphere existing in the
47:13 - physics world and what this one does is
47:15 - it tests if there's any colliders so it
47:17 - returns a converted array so this will
47:19 - return all the colliders that are
47:22 - colliding with a virtual sphere that is
47:24 - on this position with this range and
47:26 - also with this layer mask so when
47:28 - working with the physics system you're
47:30 - going to deal with layers quite a lot
47:32 - so yep another quick tip just in case
47:34 - you don't know you can use the layer
47:35 - mask struct so this one is super useful
47:37 - and if you look in the inspector
47:40 - uh yep this is what it looks like so
47:42 - essentially you've got a drop down menu
47:43 - where you can select multiple layers so
47:46 - you can select multiple of them or just
47:47 - one and so on
47:49 - so in case you don't know because
47:50 - sometimes people working with layers the
47:52 - first thing that you see is that
47:54 - they work based on integers and that is
47:57 - really confusing to handle you got to do
47:59 - a lot of
48:00 - bitwise operations and something but
48:02 - using the layer mask structure that
48:03 - makes it so much easier
48:05 - nice thanks for the tip
48:07 - um i got a really quick question since
48:09 - you know you showed how you set up the
48:11 - terrain and everything like that uh this
48:13 - is from jukebox5 is there a way to turn
48:15 - on and off layers of terrain during
48:17 - runtime turn off grass or trees or grass
48:19 - structures when the players does
48:21 - something that's actually kind of a good
48:22 - question because it's good for
48:22 - performance too uh that's good i'm
48:25 - actually not entirely sure
48:27 - uh
48:32 - i'm actually not sure about that i mean
48:34 - you can enable or disable the whole
48:36 - terrain so usually what you would do is
48:37 - make the terrain in chunks
48:39 - but yeah erasing just the trees or
48:42 - things
48:44 - uh
48:45 - i'm really not sure i mean i guess you
48:47 - could just uh enter the the
48:51 - the prefab the material so maybe through
48:53 - that maybe do the make a custom shader
48:56 - that you can enable or disable rendering
48:58 - maybe something like that
49:00 - but yeah
49:01 - this is actually a pretty complex
49:03 - question because it comes up a lot uh
49:07 - big game studios struggle with this kind
49:09 - of stuff as well and there's many many
49:11 - ways of dealing with it actually almost
49:13 - every single guest from our creator
49:14 - spotlight series answers it in their own
49:17 - unique way with some custom solution so
49:19 - if you want to go check it out
49:21 - i mean the trees also have lod so as you
49:23 - can see
49:24 - that's pretty much the most basic thing
49:26 - you can do for performance so if i'm
49:27 - zoomed in this is really high quality if
49:29 - i go out yeah it becomes much less so
49:31 - that's pretty much the main thing you
49:32 - would do
49:34 - nice
49:37 - right so uh
49:39 - so yeah that's essentially how it
49:40 - identifies if the player is inside so
49:43 - just as an overlap sphere use the gas
49:45 - layer mouse to only identify uh
49:47 - colliders within that layer mask and
49:50 - also another thing that i didn't mention
49:52 - uh
49:53 - it's over here on the gas when you got
49:54 - this leather make sure you set it to
49:55 - trigger so this is so that it doesn't
49:57 - work as a physics object as an actual
50:00 - solid object so like this you can go
50:02 - through it otherwise this would work
50:04 - like an invisible wall so not exactly
50:06 - what you want
50:09 - say i'm making like that then over here
50:10 - once you call this then you get an array
50:12 - with all the colliders within that area
50:14 - within that layer mask and yeah then
50:16 - just some very basic logic trying to see
50:18 - if you have any collaterals since over
50:20 - here i'm using the gas layer mask and i
50:21 - don't even have to
50:22 - test if this collider is a is a gas
50:25 - container because if it's on this layer
50:27 - then i already know that it is
50:28 - and then uh for the
50:32 - for the damage i just made a simple
50:33 - damage timer just so it doesn't damage
50:36 - uh constantly
50:37 - but yep for the identifying that's
50:39 - pretty much it just the collider and
50:41 - then you deal some damage over time
50:45 - and then for the volume modifying the
50:48 - the weight
50:50 - so that's how it uh
50:53 - essentially
50:58 - uh let me put it side by side
51:09 - sorry
51:12 - right so here as you can see as the
51:13 - player goes inside
51:15 - and also the other thing that i didn't
51:16 - mention over here the blend distance so
51:18 - as you can see the the switch between
51:20 - one post crossing profile and the other
51:22 - one it's pretty smooth and that's
51:23 - because that one doesn't so as i get
51:25 - within four units of that sphere so as
51:28 - you can see the sphere right there
51:29 - and
51:30 - if i go inside then you can see i
51:32 - started taking damage and if i'm just
51:33 - about outside and i don't so that's the
51:35 - spherical cast that works essentially
51:36 - identifying the whole thing
51:39 - hey no
51:43 - sorry chad can't hear me right now
51:48 - awesome
51:49 - yeah that's pretty much it and then for
51:50 - the for the
51:52 - uh gas mask that's pretty much just a
51:54 - game object setting into active
51:56 - so just uh it's just an object on the ui
51:59 - so on the player i've got a canvas and
52:01 - i've got a health bar and i've got a gas
52:03 - mask which is really just a
52:06 - basic texture so just like that there
52:08 - you go
52:09 - just a texture that gets enabled or
52:11 - disabled and for the texture also add
52:13 - some animation
52:15 - so it's literally just scaling up and
52:17 - down like the simplest animation
52:21 - which is actually not playing right now
52:29 - oh right because i'm on idle
52:30 - right yeah so i got the idle and the
52:32 - move animation so
52:34 - just very simple this one thing that is
52:36 - super simple to do and it really adds
52:39 - quite a bit more instead of having just
52:41 - a static thing so just yeah super basic
52:43 - animated controller just with a
52:45 - parameter so when this parameter is
52:46 - through then transitions into the moving
52:48 - animation once phones goes back into
52:50 - idle so super simple yeah
52:52 - yeah i love this trick this is really
52:54 - really simple and easy anyone any
52:56 - beginner can it's like i often see these
52:58 - kind of like gas cloud as like uh some
53:01 - sort of object that you have to get past
53:02 - and care for the character to get past
53:04 - so it's like really such a great way to
53:06 - add like an additional level of
53:07 - immersion um
53:09 - quick question for you so all these
53:11 - animation systems workflows that you've
53:14 - showed here this is obviously for a 3d
53:16 - game but can they be carried over to a
53:18 - 2d game i often see this
53:20 - yeah
53:22 - sure yeah i mean the only difference is
53:23 - instead of using physics you use the
53:25 - class physics 2d so that's pretty much
53:27 - it so then over here
53:28 - you've also got you've got a boxcast
53:30 - you've got a capsule cast so instead of
53:32 - a sphere because there's no sphere in 2d
53:33 - so you got a certain cast but yeah
53:36 - pretty much
53:37 - everything that you see works exactly
53:38 - the same thing except instead of using
53:40 - the physics so this is the 3d class use
53:42 - the physics 2d
53:44 - so yeah and also it returns instead of
53:46 - collider returns a collateral 2d
53:49 - so but yeah pretty much the in terms of
53:50 - functionality yeah both systems work
53:52 - work pretty much the same
53:55 - nice thanks
53:57 - yeah a lot of people always think that
53:59 - um
54:00 - they
54:01 - 2d developers think that they can't like
54:03 - leverage any of the assets tools or some
54:05 - of the tips it's there's not that much
54:06 - of a distance the notion of 3d versus 2d
54:10 - doesn't exist you're actually still in a
54:12 - 3d space quote-unquote
54:14 - so all of it is applicable to a 2d
54:16 - developer
54:18 - and actually for example i've got over
54:19 - here the uh that
54:22 - this one the character movement
54:23 - fundamentals
54:24 - uh and this one actually has an
54:26 - interesting top down
54:30 - it's got a top-down controller so the
54:31 - camera is up top
54:33 - actually it's not this one that i want
54:34 - the this one is really awesome it's got
54:36 - a lot of uh click-to-move scene okay i
54:39 - think it's this one
54:40 - uh
54:41 - it's got tons of uh example scenes so
54:44 - for example this one
54:45 - just hide the gizmos
54:47 - right so yeah oh by the way i guess
54:49 - that's a nice tip just in case you don't
54:50 - know over here i'm on the game view and
54:52 - you can see all the gizmos so over there
54:54 - there's a little icon there's a little
54:55 - sound icon
54:57 - so these are called gizmos in unity and
54:59 - by default you see them on the scene
55:01 - view so these gizmos right here
55:03 - and just in case you don't know you got
55:05 - that button there so you can enable or
55:06 - disable them and you can show them in
55:09 - the game view or in the scene view or
55:10 - anything so that's sometimes super
55:13 - useful to know
55:15 - nice thanks right so yeah what i was
55:17 - going to
55:18 - uh
55:21 - uh
55:22 - yeah essentially on the camera
55:25 - i mean just even if you get 3d assets if
55:27 - you take the camera and you make it
55:29 - orthographic there you go now this is
55:30 - pretty much a 2d game so if the camera
55:32 - then if the character didn't rotate then
55:35 - if you wanted to make something in a
55:38 - serve 2d sort of 3d then this is how you
55:41 - could do it
55:45 - so just demonstrating how difference
55:47 - between 2d and 3d yeah it's very much uh
55:51 - it's pretty entert interchangeable yeah
55:54 - nice awesome i get that question a lot
55:56 - so i really always want to like
55:58 - make put people at ease in terms of like
56:01 - being able to use the tools
56:02 - interchangeably
56:08 - i'm kind of curious in chat if you're a
56:10 - 2d developer were any of the assets from
56:12 - the bundle useful to you i know there's
56:14 - definitely several that easily could be
56:16 - used even if you're a 2d developer if
56:18 - you're not making an fps game
56:20 - definitely all the sounds
56:22 - the tooltip system
56:24 - explosions
56:26 - the green stuff
56:28 - yeah pretty much i mean and even the 3d
56:31 - assets i mean 2d is really just an image
56:33 - so you can just take any of these 3d
56:35 - assets just place your camera take a
56:37 - screenshot copy it and there you go
56:38 - you've got a background for your 2d game
56:40 - so
56:41 - yeah same thing with these weapons like
56:43 - you want a weapon well just put them
56:44 - side by side take a screenshot and there
56:46 - you go you've got a weapon for your 2d
56:48 - game
56:49 - so that's actually a really good tip
56:50 - yeah exactly going the other way is
56:52 - tricky so going from yeah
56:54 - but from 3d to tuning yeah that's pretty
56:57 - easy to do yeah yeah that's awesome
56:59 - actually yeah we had a stream with uh
57:02 - crying suns and they go from 2d to 3d
57:05 - pixel art to 3d how to make it and
57:07 - that is a process you
57:09 - probably don't want to do
57:15 - awesome perfect thanks for all that tips
57:18 - and then
57:19 - finally
57:21 - what's the last mechanic we're going to
57:22 - take a look at
57:24 - right so the last mechanic is the
57:26 - drawing uh where's my game it's the
57:28 - drawing on the mini map oh look at that
57:30 - seems like the bots are winning
57:33 - all right great
57:35 - nice because my bots have pushed in
57:37 - almost to the end of the map
57:39 - oh great i love that you switched over
57:40 - to box because you thought it'd be
57:41 - easier
57:43 - mistake do not trust
57:49 - cypher says just purchase both bundles
57:51 - great bundles thank you and thank you
57:52 - for using codemonkey's code
57:54 - yeah thank you that helps a lot so thank
57:56 - you
57:58 - if you guys want to know the code for
57:59 - the fps model and the fantasy bundle
58:02 - it's going to be thrown into chat
58:03 - magically by the month
58:06 - the fps one is going to be going until
58:08 - the end of the month and we just
58:08 - extended the fantasy one definitely get
58:11 - that one he's got some amazing tools
58:13 - even if you're not making a fantasy game
58:15 - it's worth it just for a lot of the
58:16 - tools yeah i mean for odin alone it is
58:19 - definitely worth it
58:20 - worth it we should do a whole odin
58:21 - stream i think for the amount of times
58:23 - that people uh have talked about odin
58:24 - and awesome we should invite them on and
58:26 - do a whole stream with those guys
58:27 - because they're awesome it is it is a
58:29 - great tool if you take the time to learn
58:31 - how to use it it can definitely
58:32 - massively increase your productivity
58:34 - yeah so yeah with a huge discount yeah
58:37 - it's definitely worth it yeah
58:39 - yeah for those who don't know do you can
58:40 - you explain what odin is and
58:42 - uh it's essentially a tool for making
58:44 - custom editors
58:45 - so
58:46 - over here on the inspector all this this
58:48 - is the default editor so over here
58:50 - you've got a bunch of links a bunch of
58:52 - things bunch of references but with odin
58:54 - you can essentially customize this whole
58:55 - thing so for example on the on the gas
58:58 - game object instead of having this
59:00 - the default reference i could have for
59:02 - example a square showing an image of the
59:04 - gas mask and then upon clicking i could
59:05 - be able to select an object from the uh
59:08 - from the scene so on so
59:10 - essentially lets you customize pretty
59:12 - much anything so all the
59:14 - uh actually does this have custom
59:16 - inspect because a lot of assets have
59:18 - custom inspectors and pretty much what
59:20 - odin does oh for example over here on
59:22 - this project i also have the ultimate
59:25 - fps
59:26 - and
59:28 - let's see if that opens yeah there you
59:30 - go for example this window this kind of
59:31 - thing that if you use the unity editor
59:34 - uh class it's pretty tricky to do but if
59:36 - you use odin this is super simple so
59:39 - just making all of these tabs all these
59:40 - buttons all these interesting things so
59:42 - pretty much odin makes it super simple
59:44 - to do any of this
59:46 - so that's why i say if you take on the
59:48 - time to to learn how it actually works
59:50 - and build tools to help you build your
59:52 - own games it is really massively useful
59:54 - yeah
59:55 - yeah
59:56 - relookingninja.com says odin made me
59:58 - lazy i have no inclination to write
59:59 - custom inspectors anymore
60:02 - that's the point
60:03 - [Laughter]
60:06 - thanks thanks for showing us
60:09 - i also have a video on my channel where
60:11 - i did pretty much a detailed uh review
60:14 - on odin and then i also did a
60:16 - quick getting started guide so if you
60:18 - want to learn more you can search my
60:19 - channel for odin
60:20 - it's a it's a really awesome tool yeah
60:23 - yeah i'm gonna throw code monkey's
60:25 - channel not that i'm pretty sure
60:27 - everyone here
60:28 - follows code monkey but i'll throw it in
60:30 - chat just in case
60:31 - you want to go give him a sub
60:37 - right so for the next mechanic it's the
60:41 - drawing on the minimap which is another
60:43 - thing that if you see it it looks
60:44 - complex but it really isn't so
60:46 - essentially you can bring up the minimap
60:48 - and then when you're using the the uh
60:50 - officer class essentially you can click
60:52 - and now i can click and drag in order to
60:54 - pretty much give orders to my squad so i
60:56 - can say okay go through here and do that
60:58 - now the main thing is that it's not just
60:59 - a a fixed thing so it's not just click
61:02 - and it shows an arrow the main thing is
61:04 - that you can actually click and draw
61:05 - your own thing so for a strategy game
61:07 - this is super useful so let's say
61:09 - there's an enemy here you want your
61:10 - teammates to avoid it so just go like
61:12 - that so super useful so pretty much
61:14 - making this uh
61:16 - pretty much making an arrow that you can
61:18 - draw in real time so that's the mechanic
61:20 - which is again super useful for any kind
61:23 - of tactics strategy game
61:26 - alright so let's see
61:28 - in my
61:29 - remake
61:34 - uh over here on the draw arrows
61:42 - right so that's my project on the same
61:43 - thing then i can bring up the map
61:46 - and whoops
61:51 - what did i do
61:55 - okay not entirely sure but
61:58 - yeah i don't think i changed anything
62:00 - but apparently something was said to
62:02 - know
62:03 - okay not sure must be an initialization
62:05 - issue anyways
62:06 - uh so yeah i can bring up the minimap
62:09 - and now i can click and drag and i can
62:11 - do pretty much anything that i want so
62:13 - let's say i want my teammates to avoid
62:14 - this area so i can tell them go through
62:16 - here and go to there so pretty much just
62:18 - drawing on the ui so this is
62:20 - potentially very useful if you're
62:22 - working on any kind of strategy game
62:23 - anything where you want to give some
62:25 - more specific orders instead of just a
62:27 - straight arrow being able to really draw
62:29 - pretty much any path you want
62:31 - all right so how this works it's pretty
62:34 - simple once again
62:36 - so
62:37 - here is the
62:39 - my script
62:44 - right so here it is and really the the
62:46 - only thing you need to to learn or to
62:49 - know how to do this it's really just
62:50 - knowing how to dynamically draw mesh so
62:54 - that's something that looks pretty
62:55 - complex in the beginning but it's
62:57 - actually quite simple once you
62:58 - understand how it works
63:00 - so
63:01 - for me i've got a really nice utilities
63:03 - class that i made quite a while ago i
63:05 - made this for a video but
63:06 - well after 500 videos it's kind of hard
63:09 - to remember where exactly i made it
63:12 - uh
63:13 - i remember that in your video too it's
63:14 - like people
63:16 - the thing about game dev or just
63:18 - programming and developing in general is
63:20 - you just become really good at googling
63:22 - yeah exactly that's it that's the main
63:24 - skill is knowing how because when i
63:26 - started this uh remaking this mechanic i
63:28 - didn't remember how how i made this
63:30 - thing of drawing uh uh
63:33 - drawing a mesh on the on the ui but i
63:35 - remember that i covered that in a video
63:36 - so i just searched through my video list
63:38 - until i found the video where i did that
63:39 - and yeah so learning from my past self
63:44 - that's great
63:45 - good thing you documented so well
63:47 - exactly
63:49 - uh so yeah drawing a mesh super simple
63:52 - you really just do new mesh then you
63:54 - just manually assign the vertices the
63:56 - uvs and triangles and essentially that
63:58 - way you can create the dynamic mesh
64:00 - so
64:01 - just in case you have no idea what it is
64:03 - that i'm talking about actually
64:05 - another quick tip is over here let me
64:07 - just load it
64:09 - do that and just
64:12 - put it side by side
64:14 - just in case you don't know over here on
64:16 - the scene view
64:17 - you've got this little drop down menu
64:20 - where you can see all the various ways
64:22 - that unity is rendering your game
64:24 - and by default you see shaded which
64:26 - means it applies on textures and
64:27 - everything but you can also for example
64:29 - see wireframe in order to be able to see
64:31 - the actual meshes that make up the
64:32 - things
64:34 - and if you do that then you click and
64:35 - drag you can see unlike that that's how
64:37 - the mesh is being
64:39 - generated
64:40 - so if you look at that that's pretty
64:42 - much what a mesh is it's really just
64:43 - polygons so as i'm clicking and dragging
64:46 - you can see that it's generating all
64:47 - these so if i put it on [ __ ] wireframe
64:50 - look at that essentially as i click and
64:52 - move it's creating and generating the
64:54 - mesh
64:55 - so it's really just putting one triangle
64:57 - in front another one and so on so by
65:00 - doing that you can create any shape you
65:01 - want so this whole thing is really just
65:03 - based upon a very simple dynamic mesh so
65:06 - as i move the mouse if i go into the
65:09 - code
65:11 - uh it's over on the map ui
65:14 - yup over here just another thing how do
65:16 - you convert a mouse from screen space
65:19 - into local space by you can use this the
65:21 - reg transform utility this has a bunch
65:23 - of really useful functions
65:25 - uh
65:26 - yeah so essentially you can convert the
65:28 - input mouse position so this one is in
65:30 - screen space
65:31 - so that's different from the local space
65:33 - of the ui but using this one you can
65:34 - convert that into the local ui
65:36 - coordinates and it's pretty much just
65:38 - creating a mesh so first of all i just
65:40 - create an empty mesh right on mouse
65:41 - button down so as soon as you click it
65:43 - creates an empty mesh and then while you
65:45 - hold the mouse button down once again
65:47 - just on every update getting the mouse
65:49 - local point and just going into my
65:51 - utilities adding a line point
65:53 - and the only thing that this is doing is
65:55 - it finds the last left and right vertex
65:59 - so as you can see the whole thing so
66:01 - there's so for example that one is left
66:02 - and right vertex and then as i add a bit
66:05 - more everyone just adds one tiny bit
66:07 - more
66:09 - so that pretty much just adds two
66:10 - polygons so just dynamically generating
66:12 - the triangles
66:14 - so that's pretty much what it does
66:16 - it just connects those so identifies
66:18 - does a bunch of math to figure out the
66:20 - position of the new point
66:22 - and pretty much just add the online
66:23 - point to the mesh
66:25 - so it just grabs the vertices the uvs
66:27 - and triangles these are the three arrays
66:28 - that you need to assign
66:30 - then you assign those onto the mesh
66:32 - just assign them and there you go the
66:34 - mesh updates
66:36 - and that's pretty much it for these for
66:38 - this system just generates a mesh and
66:40 - then the arrow is just a basic image so
66:43 - for the anchored position it gets placed
66:44 - on the exact class position so as i move
66:46 - you can see the arrow is placed exactly
66:48 - under my mouse
66:50 - and
66:51 - yeah for the angles it's just being
66:53 - rotated
66:56 - so yeah pepper likes it
67:00 - the chat can't hear but we're still all
67:02 - right
67:05 - now she can
67:06 - sorry chad
67:10 - all right so yeah that's the the
67:11 - system's pretty much
67:13 - dynamically drawing some meshes and
67:16 - yep that's pretty much it super simple
67:18 - and again you can imagine how you could
67:19 - use this to make a
67:21 - drawing minigame in your game so you can
67:23 - let the player draw something draw
67:25 - i mean i can't really draw much i'm
67:28 - definitely not an artist i'm a
67:29 - programmer
67:30 - that is beautiful
67:32 - perfect
67:34 - looks amazing
67:37 - um i think somebody asked this
67:38 - previously in one of your videos like
67:40 - why uh you can also do this with line
67:42 - renderer right
67:43 - sure yeah i mean this is pretty much
67:45 - exactly what the line runner is doing
67:47 - it's just doing that on the background
67:48 - so you don't see it but yeah that's
67:49 - pretty much
67:51 - exactly what it does it's dynamically
67:52 - drawing a mesh over time
67:54 - so i do think that the line render does
67:56 - have some
67:57 - uh
67:58 - something on the api actually
68:01 - i never tried doing that but
68:04 - uh
68:05 - yeah it's got a bunch of functions to
68:06 - set the position so yeah you could if
68:08 - you wanted instead of handling the mesh
68:11 - yourself you could definitely use this
68:13 - set the positions and it would just
68:15 - generate the mesh
68:17 - and by the way just
68:19 - another quick tip just in case you don't
68:21 - know
68:22 - how i get here just when you mouse over
68:24 - if you've got visual studio and it's uh
68:27 - set up to use the unity tools you can
68:30 - just put the cursor above any sort of
68:32 - class then you can right click go into
68:34 - definition
68:36 - and that shows you the definition of
68:37 - that type so for example underline
68:38 - render and you can inspect and you can
68:40 - see for example all the
68:42 - public fields that it has all the public
68:44 - functions and so on so whenever you
68:46 - don't know how to interact with
68:47 - something like for example you didn't
68:48 - know what was a vector three how does it
68:50 - work i'll just go into the definition
68:52 - and you can easily see one there you go
68:54 - factor three has an x y and z it has
68:56 - these constructors and so on yeah
69:00 - nice thanks
69:02 - perfect thanks
69:03 - um
69:04 - i had some additional weird questions
69:06 - that are unrelated to this but uh
69:09 - because we were talking about 2d earlier
69:11 - um
69:12 - how do we optimize 2d lights
69:15 - seems to not be optimized with the
69:16 - fastest setting
69:20 - i mean the main thing is really just be
69:22 - smart with how you use them that's
69:23 - pretty much it i don't think there's any
69:25 - magical thing i mean the more lights you
69:27 - have the more uh more expensive it's
69:30 - going to be so
69:32 - i actually didn't do i haven't done a a
69:34 - test on 2d lights um
69:37 - [Music]
69:38 - essentially to figure out which ones are
69:40 - more performant because
69:42 - uh
69:43 - i don't know maybe i'm thinking in 3d
69:45 - because pointing lights in 3d are
69:46 - extremely expensive so being able to
69:49 - swap point lights for directional lights
69:50 - or something like that there's that's
69:51 - always uh using spotlights that's always
69:54 - much more performant so
69:56 - now 2d maybe using freeform lights i'm
69:59 - not sure but
70:00 - yeah pretty much just
70:02 - there's no magical solution that's
70:04 - pretty much it yeah
70:06 - no
70:07 - definitely not yeah that's a that's a
70:09 - pretty difficult question
70:12 - um
70:14 - what was the game that was really clever
70:16 - with the lights uh used shaders
70:21 - i'm not really sure what that question's
70:22 - about
70:24 - i'm not sure
70:25 - yeah sorry about the the stream quality
70:27 - is because we're streaming to two
70:29 - different places so there's a lot of
70:30 - bandwidth issues right now um but since
70:33 - codemonkey is sharing his screen
70:34 - directly you can actually go check out
70:36 - his stream on his youtube channel or
70:37 - re-watch it after it'll probably be the
70:39 - highest quality
70:40 - but on the twitch channel it probably
70:41 - won't be the best but luckily we have it
70:43 - too
70:47 - so yeah um
70:49 - [Music]
70:50 - our metis tech asked are lights or
70:53 - geometry more expensive generally 3d but
70:55 - in either
70:56 - i mean it's lights lights are very
70:59 - expensive uh in terms of
71:01 - 3d gpus nowadays are insanely fast so
71:04 - you can literally have
71:05 - i don't know hundreds of thousands
71:07 - millions of polygons and really doesn't
71:09 - doesn't worry much but if you have just
71:11 - i don't know just 15 lights everything
71:13 - breaks down so yeah
71:15 - lights essentially for every single
71:16 - light the the engine pretty much has to
71:20 - fake a camera from that point of view in
71:22 - order to see what the light sees and
71:23 - then stitch all of those sections
71:25 - together in order to figure out what
71:26 - should be lit what shouldn't be so yeah
71:28 - lights are definitely the most expensive
71:30 - thing possible
71:31 - that's why usually if you want uh good
71:34 - lighting you should actually use big
71:35 - lighting so on unity you've got the
71:39 - gpu light mapper so you can use that set
71:41 - all the settings and then just bake the
71:43 - lights so what that does is essentially
71:45 - pre-calculates all the lights how they
71:47 - should look how the texture should look
71:49 - and uh
71:50 - yeah essentially just bakes them onto
71:52 - the texture so then it has pretty much
71:53 - no cost
71:55 - during uh run time so you just make them
71:57 - beforehand and then it works right
72:00 - yeah this is a pretty complicated
72:02 - question depending on your project what
72:04 - you're trying to achieve
72:06 - how good your technical artist is going
72:08 - to be uh
72:09 - on this project but yeah definitely
72:12 - there's a lot of uh definitely we have a
72:13 - lot of great conversations with the
72:15 - developer unity developers who talk
72:16 - exactly about this particular challenge
72:19 - in their games
72:20 - um minibar says talk about network
72:23 - solutions in unity yeah we should
72:24 - definitely talk about that eventually
72:25 - maybe in the close future
72:28 - is a good primer we'll we'll talk about
72:30 - it one day i don't know if you want to
72:31 - mention anything about it
72:33 - i'm not sure i don't know i haven't uh
72:36 - looked into multiplayer in quite a while
72:37 - but yeah i know the
72:39 - uh the ml api from what i saw looks
72:41 - really interesting and was acquired by
72:43 - nt recently so
72:45 - yeah that's always the thing there's
72:46 - always
72:47 - there's always like 50 topics that i'd
72:49 - love to research but just need to find
72:50 - the time to do them all
72:52 - so yeah pretty much multiplayer is on my
72:55 - list
72:56 - eventually i'd love to look into that
72:59 - yeah keep a pin in that we'll visit that
73:02 - particular request in the near future
73:04 - but yeah mlpi is one of our think better
73:07 - solutions not available widely yet but
73:10 - definitely there's already studios who
73:12 - are using it in the experimental version
73:14 - so we'll definitely bring them back
73:16 - eventually to show you how they
73:17 - leveraged it so yeah that's a really
73:19 - good question
73:21 - um
73:22 - awesome thank you is there anything else
73:24 - you'd like to show us i think there's
73:25 - another question about oh no
73:27 - yeah anything else you wanna
73:29 - show us really quick about you
73:32 - i don't know a while ago somebody was
73:34 - mentioning outer wilds so actually i got
73:36 - on this project the uh
73:38 - the remake that i did so if anyone wants
73:40 - to look into that it's also pretty
73:42 - interesting
73:43 - yeah
73:45 - yeah so the game is great if you haven't
73:47 - played it i would definitely recommend
73:48 - it especially if you like uh
73:50 - uh
73:51 - if you like mystery type games yeah it's
73:53 - uh really awesome
73:55 - um
73:56 - so yeah when the mechanics is that
73:57 - essentially you've got a scout probe
73:59 - launcher where you can click you can
74:01 - shoot it and essentially just a
74:02 - projectile just goes through and then
74:04 - the main thing is that it has a camera
74:06 - so that's pretty much what i remade in
74:08 - that video so once again i've got the
74:10 - basic first person controller then i've
74:12 - got a terrain and then i can just shoot
74:15 - out a probe launcher and there you go
74:17 - it's pretty much as a projectile just
74:18 - goes somewhere and then where it lands
74:21 - you can see over there on the right side
74:22 - that essentially there's a camera
74:23 - attached to it
74:25 - and using some buttons i can actually
74:27 - look and see
74:28 - essentially rotate the camera around the
74:30 - virtual camera
74:32 - so this is super useful for example if
74:33 - you send it somewhere you can see and
74:36 - then you can
74:37 - update the camera and see exactly what
74:38 - the scout pro sees so this is a really
74:41 - useful mechanic in the game and it's uh
74:43 - really interesting
74:45 - and once again it's another thing that
74:46 - if you play the game it looks really
74:48 - complex
74:49 - but if you try to do it's actually quite
74:51 - simple
74:52 - so for the uh
74:54 - projectile itself uh it's pretty much
74:56 - just a projectile so just uh moving
74:58 - forward with physics
75:00 - and then what it does is it locks into
75:02 - uh the various objects
75:06 - so for that
75:07 - it's over here on the scout you can see
75:10 - it's got a little collider down there so
75:12 - that's how we test for when it hits on
75:15 - any object so these got physical objects
75:18 - so these got a boxing letter so it
75:20 - listens to a collision and then pretty
75:21 - much just rotates the object just places
75:24 - it on the collision point rotates it
75:26 - according to normal so that it faces
75:28 - correctly so if i place down it looks
75:30 - down if i place it up there actually
75:32 - the connector is only on the bottom so i
75:34 - can't really connect it up top
75:36 - but yeah wherever it lands essentially
75:38 - goes
75:40 - and for the camera
75:42 - that is the super useful the render
75:44 - textures
75:46 - so just in case you don't know what
75:47 - these are these are super useful so
75:49 - essentially there are textures where you
75:50 - can render something onto a
75:53 - onto a texture instead of rendering
75:54 - directly onto the screen so i got the
75:56 - main camera this one is running onto the
75:57 - screen so that's what it sees here and
75:59 - then for that one there's actually
76:00 - another camera object right in there
76:02 - inside of the probe launcher
76:05 - so you got this camera and if you go
76:07 - over here under output you can see
76:08 - output texture so if you assign a render
76:11 - texture onto it then instead of this
76:12 - camera being rendered onto the screen
76:14 - that's going to be rendered on this
76:15 - texture and if you look into it yep you
76:17 - can see that's what the camera actually
76:19 - sees so this camera you can see on the
76:22 - preview yep that's what it sees
76:23 - and then just for displaying it in the
76:25 - ui
76:27 - so this one is also super simple i just
76:28 - got a basic canvas and then inside i've
76:30 - got a raw image so this is the one big
76:33 - difference
76:34 - normally use an image when displaying
76:36 - sprites in dui but when using a render
76:38 - texture this is a texture it's not a
76:40 - sprite
76:40 - so in order to show this you need to use
76:42 - a raw image component which takes in a
76:44 - texture
76:45 - and yeah that's pretty much it so you
76:47 - got a canvas you show a raw image and
76:49 - over there you can see what the camera
76:50 - sees and then on the input i'm simply
76:52 - just rotating that camera object
76:55 - so
76:57 - put them side by side
76:59 - uh nice like that camera oh crap
77:03 - because it spawns and destroys the the
77:05 - previous one
77:06 - uh
77:07 - yeah if i select the camera
77:10 - and i see the camera object and then
77:12 - over here yeah there you go it's really
77:13 - just rotating
77:15 - the camera object and there you go
77:17 - so yeah as you can see also another
77:20 - pretty simple system
77:22 - yeah super simple but great great little
77:24 - trick for those who are i mean outer
77:27 - wilds is a fan favorite uh a great made
77:30 - with unity game um if those who don't
77:32 - know they just recently uh released a
77:35 - new dlc and actually they're gonna be
77:37 - invited yeah they're gonna be invited
77:39 - guests on our stream in the next couple
77:40 - of weeks so look forward to that if you
77:41 - want to know more about them and how
77:44 - they built their game they're going to
77:45 - reveal a lot of great information about
77:47 - about the worlds and um how they built
77:49 - up the system and everything and a lot
77:51 - of the mechanics in it so it's going to
77:52 - be good
77:53 - so make sure you watch yeah make sure
77:55 - you watch this stream and watch that one
77:57 - yeah
77:59 - you can see how code monkey did it and
78:00 - you can see how they did it there's a
78:01 - lot of great ways to do to get to the
78:03 - same solution so it's really awesome
78:04 - yeah just uh
78:06 - just since this stream is going on the
78:08 - twitch but also on my youtube uh if
78:11 - you're watching this on my youtube then
78:12 - uh definitely go on to the watch the
78:15 - official unity twitch stream because on
78:16 - there they they've done a lot of
78:18 - interesting ones interviewing creators
78:20 - where they open up their games the
78:21 - creative spotlight series so
78:24 - definitely a lot of very interesting
78:26 - things there you know there was a
78:28 - one on death's door that was really
78:30 - interesting they showed how to use the
78:32 - the floor using pro builder and then
78:34 - built the whole thing up on top of it
78:36 - then lots of post-processing so
78:38 - so yeah definitely if you want to see
78:40 - more behind the scenes definitely go and
78:42 - check out the official unity twitch
78:45 - channel oh thank you yeah sure that's
78:47 - awesome thank you for the plug
78:50 - similarly you can go check out code
78:51 - monkey he's a great
78:53 - creator and as a community team we often
78:56 - recommend him as the
78:58 - go-to source if you want to start off
79:00 - there's great beginner and advanced
79:02 - topics i think a lot of times we think
79:04 - that a lot of the content that's created
79:06 - on youtube is only for hobbyists and
79:07 - beginners but i would say that i often
79:09 - see
79:10 - really advanced users browse through
79:13 - these videos just to like be able to
79:15 - remember just like monkey said some of
79:17 - the stuff that they needed to learn a
79:19 - while ago but forgot about
79:22 - nice i love that we just both plugged
79:24 - each other's channels
79:29 - but thanks everyone that's awesome uh so
79:33 - thanks again for code monkey for coming
79:34 - by this is really awesome i hope that
79:36 - we'll see you on here more often
79:39 - the community really loves you and super
79:41 - happy that the community saw your face
79:44 - people had a lot of things to say
79:47 - about that so that was really fun and i
79:50 - hope chad you enjoyed it if you have any
79:51 - other questions throw them all away we
79:54 - have a discord i don't know if uh hugo
79:56 - you have a discord or any community
79:57 - spaces
79:58 - not really i tried but i couldn't i
80:00 - couldn't keep up with all the comments
80:02 - emails plus this card that was true
80:04 - sorry guys
80:06 - you overwhelmed the code
80:09 - yeah but uh i think uh for this
80:12 - particular stream we broke down we're
80:13 - done sorry but we're so excited about
80:15 - the stream she was very vocal today i'm
80:17 - really sorry about that
80:18 - but uh all the project files are also
80:21 - available so if you missed anything you
80:22 - can go check out the video it was
80:24 - definitely clear on the other stream
80:25 - really sorry about the quality we're
80:26 - trying something new this time we were
80:28 - trying to stream to as many places as
80:29 - possible but looks like quality took a
80:31 - tank but no worries uh it's gonna be
80:33 - crystal clear on the code monkey channel
80:36 - but also i think your project files will
80:37 - be available right sure yeah yeah
80:40 - yeah so you guys can go check it out and
80:41 - take a look there if you missed anything
80:44 - but yeah thanks everyone uh if you want
80:46 - to see code monkey come back let us know
80:48 - uh we look forward to working with him
80:50 - again
80:52 - oh important question lego giveaway oh
80:54 - what was the game i saw some really good
80:56 - answers there was valheim the new kenna
80:59 - game
81:00 - uh somebody said battlefield um
81:04 - what did we end up picking
81:07 - moderators as the game that we
81:10 - uh
81:11 - the game that should be broken down in
81:12 - one of the next uh
81:14 - code monkey videos
81:16 - can you guys like start throwing them in
81:18 - chat so we can take a look really
81:20 - quickly
81:24 - you did valham already did you i'm
81:26 - trying to remember i did one but it
81:28 - wasn't it was a game design overview so
81:31 - it's a bit of a different format yeah
81:33 - yeah but it's also interesting if you
81:35 - want to learn a bunch of things about
81:36 - that game yeah definitely go watch that
81:38 - video because that game does a lot of
81:40 - things very very well yeah
81:42 - yeah awesome yeah that's another great
81:44 - way with unity game uh we should
81:46 - definitely bring them on to the chat uh
81:48 - into our stream as well
81:50 - he showed how to build yeah we'll do a
81:51 - poll um throw your questions in chat
81:54 - we'll go back and take a look oh yes
81:56 - there was humankind that is also a good
81:57 - one that team also has our been on our
82:00 - uh they were featured in our gdc creator
82:03 - spotlight series um
82:05 - and yeah another great one oh hard
82:08 - there's a lot of mechanics in that
82:10 - those kind of strategy based games are
82:11 - always kind of
82:12 - difficult um
82:15 - and people are saying green hell
82:17 - uh
82:21 - perfect i really like humankind because
82:25 - that's a would you be willing to do a
82:28 - game like that sure yeah
82:30 - i mean it's uh it's pretty complex which
82:32 - means it has a lot of systems that i can
82:34 - remake so a lot of things to choose from
82:36 - yeah yeah a lot of character classes
82:38 - looks uh very interesting yeah
82:40 - yeah really great game a lot of
82:42 - character classes they all interact with
82:45 - each other there's some different
82:47 - mechanics like the world changes
82:49 - depending on which
82:50 - race or ethnicities you choose and
82:53 - history you choose so it's a very very
82:55 - interesting very complex game you guys
82:57 - are going to give code monkey
83:00 - here
83:02 - yeah okay perfect so i think lurking
83:04 - ninja picked that one you got the lego
83:06 - minifigures so congrats
83:09 - awesome um thank you everyone this was
83:11 - an awesome stream i'm super excited uh
83:14 - hoping to get more remember go check out
83:16 - the two huma bundle packs the fps one
83:18 - and the fantasy ones we're throwing them
83:20 - in chat now they're both code monkeys
83:22 - links so uh please go support him and
83:25 - uh the stream as well his channel as
83:27 - well and as you know all this was being
83:30 - done so that we can do a showcase by
83:33 - next month if you're making a game with
83:35 - any of these assets or you feel like
83:36 - just submitting one of your games that
83:38 - will play uh by the end of the month and
83:40 - be featured on the unity play website
83:42 - definitely submit to the showcase we
83:44 - don't have as many we usually get like
83:46 - 600 submissions guys by the end of these
83:48 - things so i want to see i still want to
83:50 - see those numbers go up
83:52 - so yeah thank you any last words hugo
83:55 - sure thanks thanks for having me this
83:57 - was uh interesting again first time with
84:00 - the with the camera so face reveal so
84:02 - right this is it
84:04 - so yeah this was interesting but i think
84:06 - it went well so yeah thank you all for
84:08 - for being here for watching this this
84:10 - was a
84:11 - very interesting and i hope you learned
84:13 - something from me so yeah thanks thank
84:16 - you everyone all right we're gonna raid
84:18 - scotchbox vr stay tuned he's a great vr
84:21 - streamer plays a lot of made with unity
84:23 - vr games um so definitely go give him a
84:25 - shout out over there and thanks to code
84:28 - monkeys community thanks for watching
84:30 - and being very vocal
84:33 - we'll catch you guys all next time bye
84:35 - thanks everyone bye bye
86:57 - you