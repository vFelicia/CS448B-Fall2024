00:00 - hello and welcome I'm your code monkey
00:01 - in this video we're going to view a
00:02 - summary of the test system from battle
00:04 - round tycoon series let's begin
00:09 - so the goal in this series is to make
00:11 - the task system as it's used in better
00:13 - morale Tycoon the system is very useful
00:16 - and it's used for most sections in the
00:17 - game like for the transporters or the
00:19 - cleanup of the arena essentially when
00:21 - the arena battle ends the system
00:23 - generates tasks for the quadrants that
00:25 - need to be cleaned and the weapons that
00:26 - need to be picked up then the workers
00:28 - pick up a task when they can and finally
00:30 - execute it this series will teach you
00:32 - everything you need to know to be able
00:33 - to implement your own task system with
00:35 - whatever task types you need so first
00:37 - we're going to create the test system
00:39 - class with a very simple task that tells
00:41 - the worker a position to move to then
00:43 - we're going to create a simple worker
00:45 - class that periodically requests tasks
00:47 - and executes them by moving to that
00:49 - target position in the second video
00:51 - we're going to make multiple task types
00:53 - with different parameters and executions
00:55 - we're going to have a test that tells
00:57 - the worker to go to a specific position
00:59 - and also a different task that tells the
01:01 - worker to play an animation after that
01:03 - we won't set up a complex test that
01:06 - involves the worker going to a certain
01:08 - position then playing an animation then
01:10 - executing an action so all of those
01:12 - together make up the behavior for the
01:14 - worker to clean up a sprite on the floor
01:16 - with that we won't then add the ability
01:18 - to queue and validate tasks that way we
01:21 - can add a task to the test system as
01:23 - soon as we want but we can also add a
01:25 - validate function where the tasks won't
01:27 - stay in the queue until it can actually
01:29 - be executed the next video won't cover a
01:32 - good example for how useful that is
01:34 - we're going to create a test type for
01:37 - the worker to grab a weapon and drop it
01:39 - on an item slot however before that task
01:42 - is executed the test system will
01:43 - validate it by making sure the Adam slot
01:45 - is actually empty and in the final video
01:48 - we're going to take our code and create
01:50 - two separate test systems with different
01:52 - test types so we're going to make a test
01:55 - system that has a task to take a weapon
01:57 - and drop it onto an item slot and then
02:00 - another completely separate task system
02:02 - which will have a task that checks if
02:04 - the item slot has an item and if so we
02:07 - rabbit and take it away each task system
02:09 - won't be completely independent and have
02:11 - one worker and both of them won't work
02:13 - in tandem as the first one drops a
02:16 - weapon into the item slot the second one
02:18 - won't grab it and take it away that
02:21 - shows you how you can combine
02:22 - multiple tasks systems with multiple
02:24 - task types in order to create some
02:26 - really complex behavior so that's a plan
02:28 - for the test system in background tycoon
02:30 - series it's a very useful system
02:32 - especially if your game involves
02:34 - ordering around multiple units the final
02:36 - system is quite complex but the videos
02:38 - go through each part of the system in a
02:40 - slow and clear manner so go watch the
02:42 - playlist and begin learning right now as
02:45 - always you can download the project
02:46 - files in utilities for each video in the
02:48 - series from unity code monkey comm if
02:50 - you have any questions post them in the
02:52 - comments and I'll do my best answer
02:53 - subscribe for more videos and I'll see
02:55 - you next time
03:04 - you