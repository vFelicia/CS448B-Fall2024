00:00 - hello and welcome I'm your Cod Mony here
00:02 - let's see a high level overview on how
00:03 - to make a turnbas strategy I will cover
00:05 - the basic Mechanics for how pretty much
00:07 - any game in this genre can be made then
00:09 - I'll also cover some mechanics specific
00:10 - to this game that I've been playing
00:11 - classified France 44 it's a really great
00:14 - turn-based strategy game where you
00:15 - control the French Resistance during
00:16 - World War II personally I love games
00:18 - with a gorilla and sabotage theme so
00:20 - this one definitely fits the bill I
00:21 - definitely enjoyed my time playing this
00:23 - it really pushes the genre forward with
00:25 - some really interesting Innovations I
00:26 - made a page on the website with links to
00:28 - all the various tutorials that I'm going
00:29 - to reference many of these are topics
00:30 - that I have covered in detail previously
00:32 - so if you like to make a game in this
00:33 - genre then hopefully this video and all
00:35 - of these links will help point you in
00:36 - the right direction what's cooking okay
00:38 - so let's see a high level overview on
00:40 - how to make a turn-based strategy game
00:41 - like this one here is the mechanic list
00:43 - that we're going to cover so naturally
00:44 - this involves a grid system it involves
00:46 - an action point system some ability some
00:48 - health an OverWatch system there's
00:49 - flanking spray zones Health multiple
00:52 - enemy types map data level scripting and
00:54 - a bunch more let's see how to build this
00:55 - type of game and actually if you're
00:57 - trying to make something in this
00:58 - specific genre and you're looking for a
01:00 - gu path if so then naturally try out my
01:02 - turnbas strategy game course it goes
01:03 - step by step starting completely from
01:05 - scratch until the final polish game it
01:06 - features many of the mechanics that
01:08 - we're going to see here so if you want a
01:09 - guided step-by-step path definitely
01:11 - check it out or if you prefer separate
01:13 - tutorials and I've also covered a lot of
01:14 - these in separate videos basically if
01:15 - you watch all these videos and you put
01:17 - them all together you end up with a game
01:18 - kind of like this one now the core of
01:19 - pretty much this entire genre is using a
01:21 - grid system the entire world is a grid
01:23 - the units move in a grid they should in
01:24 - a grid everything is on a grid I've made
01:26 - a series of videos on how to build a
01:28 - grid system how to create it from scr
01:29 - scratch add some generics then build all
01:31 - kinds of things on top of it and just in
01:33 - case you don't know a grid system is
01:34 - literally just splitting the entire
01:36 - world into multiple grid positions and
01:38 - then on all of those you can apply
01:39 - whatever logic you want making it grid
01:41 - base can help simplify some of your game
01:43 - design rules which lets you as a game
01:44 - designer have a bit more control over
01:46 - all the actions your players can take
01:48 - this is especially great for strategy
01:49 - games they allow you to make some very
01:51 - clear decisions but they're also very
01:52 - useful for many other things I've used
01:54 - my grid system to make a city Builder
01:57 - I've used it to make a house building
01:58 - system like valheim I've bu a nice mini
02:00 - Factory game I built a pixel drawing
02:02 - mechanic also a Tetris inventory game
02:05 - and a bunch bunch more I that grid
02:07 - system make it work with a hex grid so
02:08 - grid systems are really awesome they're
02:10 - extremely versatile I highly recommend
02:11 - you research them then in the case of
02:13 - this game the grid system is used for
02:14 - all kinds of actions like for example
02:15 - the movement and before applying the
02:17 - movement they really just need to know
02:18 - what grid position the player is
02:19 - clicking on that can be done with some
02:21 - simple math or just a basic recast I
02:23 - covered how to get the mosor position
02:25 - both in 2D and 3D in this video
02:27 - moving and then movement of course is
02:29 - going to have some kind of path finding
02:31 - obviously when the character moves you
02:32 - don't want the character to go through
02:33 - walls you can learn how to implement the
02:35 - ASR pathfinding algorithm in this
02:36 - tutorial so pathf finding is really
02:38 - crucial for making your characters move
02:40 - exactly where they're supposed to but
02:41 - it's also very important to work with
02:43 - next core mechanic which is the action
02:44 - point system specifically how in this
02:46 - game the characters spend one action
02:47 - point for each movement they do so in
02:49 - order to identify how far a character
02:51 - can move you need to find first of all
02:52 - the max move distance and then need to
02:54 - calulate the path finding for each of
02:55 - those points to see if they are actually
02:56 - reachable or not the other thing that
02:58 - characters can do other than just
02:59 - movement is do all kinds of abilities
03:01 - like shooting we have ambushed them
03:03 - attack so the game has to stored that
03:05 - ability data somewhere for storing all
03:07 - the data related to each ability like
03:08 - for example how many action points does
03:10 - it take to shoot a weapon of a specific
03:12 - type for that you can sort in a script
03:14 - objects script objects are really
03:16 - awesome they basically let you create
03:17 - individual objects that can sore
03:19 - whatever kind of data you want so they
03:20 - are perfect for things like defining
03:22 - types that can be types of weapons types
03:24 - of equipment or for example types of
03:26 - abilities with all of their related data
03:28 - this is another Super useful thing that
03:29 - you definitely must know about I've made
03:31 - a video teaching all about script
03:32 - objects and I've also used them in many
03:34 - scenarios like for example defining a
03:36 - crafting recipe I've used both a complex
03:38 - and a very simple one then I've also
03:40 - used them to Define weapon parts in my
03:41 - weapon attachment system and a bunch
03:43 - more so script objects are definitely
03:44 - extremely useful make sure you do
03:46 - research them if you don't know about
03:47 - them next mechanic is the stealth
03:49 - mechanic now I really like this one in
03:51 - the context of this game personally I'm
03:52 - always a fan of gorilla sty gameplay
03:54 - where you control basically a small team
03:55 - and you have to sneakily take out a very
03:57 - large enemy Force the game basically has
03:59 - a mechanic where you start off hidden
04:00 - and as long as you are hidden you can
04:02 - take out tons of enemies silently
04:03 - although there is also a really nice
04:05 - noise radius I like how the game gives
04:07 - you perfect information so before you
04:09 - attack you can see okay is this going to
04:10 - make me discovered or not as a game
04:12 - designer you always have both options do
04:14 - you want to give the player perfect
04:15 - information or do you want there to be
04:16 - some Randomness involved in both options
04:18 - are personally valid it just depends on
04:20 - what kind of game you're trying to make
04:21 - in this one you can see exactly how far
04:23 - the enemies will see or here so you do
04:25 - know whether an action is going to make
04:26 - you detectable or not you can see each
04:28 - enemy as they're pointing forward the
04:30 - cone of exactly what they're going to
04:31 - see and if the unit goes inside that
04:33 - cone then naturally the unit becomes
04:34 - detected so for this mechanic you really
04:36 - just need to define a cone by using the
04:38 - enemy's transform. forward that is going
04:40 - to be the forward Vector that is
04:41 - pointing wherever the character is
04:43 - pointing then using that you can do some
04:44 - math or perhaps fire some rast to find
04:46 - the grid positions that are in front of
04:47 - it then fire some more rast in order to
04:49 - find which of those positions are behind
04:51 - objects so do all of that to validate
04:53 - what exactly are the grid positions that
04:54 - are within the enemy's con of view so
04:56 - it's actually pretty similar to what I
04:57 - covered in my line of sight tutorial
04:59 - it's pretty much just in a grid the
05:00 - enemies also have some preset Patrol
05:02 - locations during this stage I'm going to
05:04 - talk about that in a little bit in the
05:05 - map data and level scripting another
05:07 - mechanic that many games on this channel
05:09 - have is an OverWatch system basically
05:11 - this is how you can set a unit to cover
05:12 - an area and if an enemy goes within that
05:14 - area they shoot it automatically
05:16 - building this is exactly like what I
05:17 - just said for the self mechanic so for
05:19 - the player you can choose where you want
05:21 - the OverWatch to aim then you do really
05:23 - the same thing fire a ton of recasts or
05:25 - do some math in order to find all the
05:27 - OverWatch grid positions and then during
05:29 - the enemy turn if they walk inside any
05:30 - of those positions the player
05:31 - automatically shoots yet another
05:33 - mechanic very common in these types of
05:34 - games is some kind of cover system so as
05:36 - you move your units you can get them
05:38 - behind either no cover or Low cover or
05:40 - High cover the cover basically impacts
05:42 - the hit chance that enemies have to hit
05:44 - you so call that hit chance is really
05:46 - just some simple math when attacking a
05:48 - Target when cating the accuracy if the
05:50 - target is in some kind of High cover if
05:51 - so then give a big penalty to the
05:53 - accuracy if it's on Low cover just a
05:55 - slight penalty and if there is no cover
05:57 - then no penalty always remember how
05:58 - really a lot of these games are really
06:00 - just about simple calculations the
06:02 - tricky part is really just balancing all
06:04 - these numbers make it a really
06:05 - satisfying experience to Define what
06:06 - count is cover for that you can have
06:08 - just a simple script on the object
06:10 - themselves just a script that you attach
06:12 - to something like for example a crate
06:13 - and on that script you can just store
06:15 - maybe an enum for defining the cover
06:17 - type then when initializing the grid you
06:18 - just do a rast to find all the objects
06:20 - on each grid position and check if they
06:22 - have that script and if so then they
06:24 - have that cover State on that grid
06:25 - position then when moving a character
06:27 - just check the neighbor grid positions
06:28 - to find what is the best cover available
06:30 - then this game also includes an
06:32 - interesting flanking mechanic basically
06:33 - if an enemy is behind cover but you move
06:35 - your units to a point where the cover is
06:37 - not obstructing in between the enemy and
06:38 - the attacker if so then that unit is
06:40 - flanked basically how you calculate if a
06:42 - character is flanked or not is really
06:43 - depending on if there's cover in between
06:45 - both characters so you can use a ray
06:47 - cast or some M to find all the grid
06:48 - positions between the attacker and
06:49 - Defender and then really just check if
06:51 - the cover point that is next to the unit
06:53 - if that one is in between both the
06:55 - attacker and Defender if there is and
06:56 - there's a normal thing but if not then
06:58 - that character is currently being FL and
07:00 - in terms of what flanking does again
07:01 - it's really the same thing as cover
07:02 - versus no cover it really just applies
07:05 - some kind of negative penalty to the
07:06 - accuracy so if a character is flanked
07:08 - then it's going to be much easier to hit
07:09 - it once again Sur only all just numbers
07:11 - to call in the accuracy watch your fire
07:13 - next mechanic is spray Zone and friendly
07:15 - fire now this is a really interesting
07:17 - mechanic basically if you have a
07:18 - character with rifle you cannot shoot
07:20 - through your own units without damaging
07:22 - them this makes the game have some
07:24 - really interesting decisions basically
07:25 - if you get two clothes up in personally
07:27 - in order to knife an enemy then if
07:28 - another character tries to shoot it you
07:30 - might shoot your own unit as well so
07:32 - that leads to some really interesting
07:33 - decisions on how exactly do you play the
07:35 - game as a player in terms of
07:36 - implementing this actually quite super
07:38 - simple it's really just a rast from
07:40 - attacker to the Target and see if any
07:41 - unit is in range so pretty much the
07:43 - exact same thing as fing out if it is
07:44 - fled or not check all the grid positions
07:46 - from the attacker to the unit and see if
07:49 - any of those grid positions that are
07:50 - going to be shot if any of those contain
07:51 - a unit whether it be friendly or enemy
07:53 - and if so really just apply the exact
07:55 - same accuracy calculations to all of
07:56 - them and if the character is using a
07:58 - weapon kind of like a shotgun or a
07:59 - submachine gun if so those weapons
08:01 - actually have an arc so any units within
08:04 - that Arc whether they be enemies or
08:05 - friendlies any of those are also going
08:07 - to get shot so once again all really the
08:09 - exact same logic the same thing as for
08:11 - how to find out if it is being flanked
08:13 - or finding out for the OverWatch
08:15 - position just get an arc and do a ton of
08:17 - recasts on all positions in order to
08:18 - find all the great positions and any
08:20 - characters within that Arc they're going
08:22 - to head head next we have health and
08:24 - morale now health is pretty simple you
08:26 - can really just use any basic health
08:27 - system for this like for example the fre
08:29 - one that I made quite a while ago it's a
08:31 - great system it's what I use in many of
08:32 - my games so definitely go ahead and just
08:33 - download it for free and use it the
08:35 - health in this game is really just an
08:36 - INT number Super basic but then this
08:38 - game also has a very unique very
08:40 - interesting morale system now the
08:42 - biggest frustration with games like XCOM
08:44 - is the dreaded 98% chance to hit that
08:46 - actually misses that one never feels
08:48 - good that always feels messed up so in
08:50 - this game at least characters have
08:51 - something called morale and if your shot
08:53 - misses it won't deal any health damage
08:55 - but it will still deal morale damage and
08:57 - if their morale goes under half then on
08:59 - the next turn turn they have fewer
09:00 - action points and less chance to hit and
09:02 - if their morale goes to zero they get
09:03 - broken and cannot take a turn personally
09:05 - I really think this is a great system a
09:06 - great mechanic a great addition to this
09:08 - gen it makes the game a lot less random
09:10 - and gives you more control over your own
09:11 - actions in technical terms the morale
09:13 - system is really the exact same thing as
09:15 - the health system it's really just a
09:16 - number that goes down slowly over time
09:18 - so you could use literally the exact
09:19 - same code you could use the exact same
09:21 - Health System just have a second health
09:23 - bar and have that one pretty much just
09:24 - always takes damage even if the shot
09:26 - misses then the game also includes
09:27 - several enemy types each of those with
09:29 - different stats and abilities and for
09:31 - defining all this you can once again use
09:32 - script objects you can Define some kind
09:34 - of enemy so class and in there place all
09:36 - the stats like for example how much
09:38 - health the enemy has how smart should be
09:40 - any special abilities and so on then we
09:42 - come to the map data and now this is
09:43 - always an interesting topic that can be
09:45 - solved in a multitude of ways the
09:47 - simplest one is really just have your
09:48 - Maps as prefabs so you build the entire
09:50 - map the entire world environment in a
09:52 - single prefab then thenly spawn whatever
09:55 - prefab for whatever map you're trying to
09:56 - choose then inside that prefab you can
09:58 - use empty game objects or other prefabs
10:00 - in order to define various positions
10:02 - this makes it really easy for level
10:03 - designers to set up the levels for
10:05 - example all of the enemy Patrol
10:06 - positions that I mentioned a while ago
10:08 - you could position an enemy game object
10:10 - either it could be the enemy prefab
10:11 - itself or just an empty marker that
10:13 - won't be spawned later you can do that
10:15 - then you just need to position all the
10:16 - points all the empty game objects for
10:17 - all the various Patrol positions where
10:19 - the enemy is going to go through just
10:20 - have the enemy script have a reference
10:22 - to all those points and when the game is
10:24 - running it simply just goes from one
10:25 - point to the next then to make it even
10:27 - more designer friendly you can create
10:28 - some simple editor tools to build this I
10:30 - covered how you can do that in two video
10:32 - tutorials there's one on the basics and
10:34 - one on how you can make a really nice
10:35 - cut scene tool and related to that is
10:37 - going to be in level scripting basically
10:38 - all the things that you want to happen
10:40 - in a level in a script manner things
10:42 - like spawning some dialogue or
10:43 - triggering a cut scene once again you
10:45 - can Define some empty game objects to
10:46 - define the trigger positions and then
10:48 - the code you can check whenever a unit
10:50 - moves if a unit reaches that specific R
10:52 - position if so trigger a cut scene or
10:54 - spawn some enemies for this kind of
10:56 - level scripting you can literally just
10:57 - make a simple class that you attach
10:59 - maybe to the map prefab that class will
11:01 - contain all the logic for that map
11:03 - including all the map position
11:04 - references by doing it this way each
11:06 - prefab is essentially self-contained
11:08 - with the entire map as well as on the
11:09 - logic this is what I did in my turnbas
11:11 - strategy course for making the final
11:13 - level that level has some really
11:14 - interesting level scripting Logic for
11:16 - showing the rooms or waking up some
11:17 - enemies and all of that is handled examp
11:19 - like this next up we have the overall
11:21 - map so this is where you pick the next
11:23 - mission the interesting thing is how the
11:25 - map is actually split into multiple
11:27 - sections so the simple way to implement
11:28 - this would be with some kind of texture
11:30 - you can slice the entire world into
11:32 - basically different images and then you
11:33 - can dynamically color each of those
11:35 - that's exactly what I did for my game
11:36 - hyper knites which feature an overall
11:38 - map that you could conquer then for
11:40 - identifying where exactly you are
11:41 - clicking on for that you can really just
11:43 - make some simple colliders with a rough
11:45 - shape of each region and then just do a
11:47 - very simple mouse recast the characters
11:49 - also sometimes have them dialog it's
11:51 - really just some text and some video
11:52 - playing once again this is something you
11:54 - can build super simply by just finding
11:56 - some script B objects to store all data
11:58 - each character also has a skill tree
12:00 - these are skills that can be unlocked
12:01 - it's a very standard skill tree with
12:03 - some requirements they've got a cost and
12:05 - then also some previous skills that have
12:06 - to be unlocked before that one can be
12:08 - unlocked I made a tutorial on this topic
12:10 - quite a while ago that video is a little
12:11 - bit old the only difference nowadays is
12:13 - I would have built this system using
12:14 - scrip object instead of enom and then
12:16 - the characters can also equip some
12:18 - weapons and some visuals these can
12:19 - either give some bonuses or also apply
12:21 - some visual changes so for some kind of
12:24 - visual character customization you can
12:25 - watch my tutorial on that topic it can
12:27 - be literally as simple as just enabling
12:28 - or disabling game objects on a specific
12:30 - m is done okay so that's a hell level
12:33 - overview on how you can make a
12:34 - turn-based strategy game using this game
12:36 - classified friends 44 as an example I
12:38 - made a page on the website with all the
12:40 - tutorial links that I've mentioned
12:41 - hopefully with this hevel overview video
12:43 - and with all these tutoral links with
12:44 - that hopefully they can point you in the
12:46 - right direction if your goal is to build
12:47 - a game just like this one now if you're
12:48 - looking for a guid path then definitely
12:50 - go ahead and check out my turnbas
12:51 - strategy course it is literally on the
12:52 - making of This Jer it covers the making
12:54 - of game like this starting from absolute
12:56 - nothing including all the steps for
12:57 - making the grid system creating
12:59 - pathfinding algorithm set up the enemy
13:01 - AI the weapons the actions and much more
13:03 - the only thing is really that course is
13:04 - meant for more intermediate users so
13:06 - that course does assume you have some
13:07 - basic knowledge of unity and C so if you
13:09 - are a complete beginner then maybe start
13:11 - with my free kitchen chaos course or for
13:13 - learning the language itself check out
13:14 - my C course all right hope that's useful
13:17 - check out these videos to learn some
13:18 - more thanks to these awesome patreon
13:20 - supporters for making these videos
13:22 - possible thank you for watching and I'll
13:24 - see you next time
13:29 - oh