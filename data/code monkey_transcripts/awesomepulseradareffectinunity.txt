00:00 - in this video we're going to make a
00:01 - pulse radar to detect enemies this won't
00:03 - be an object that we can place which
00:05 - sends out a pulse and detects any
00:07 - enemies or items it finds then in the
00:09 - end we're going to convert it into a UI
00:11 - minima let's begin
00:15 - [Music]
00:19 - hello and welcome I'm your code monkey
00:22 - and this channel is all about helping
00:23 - you learn how to make your own games
00:25 - with nf2 torrents made by a professional
00:27 - indie game developer so if you find the
00:29 - video helpful consider subscribing so
00:31 - here's what we want to create over here
00:33 - you can see a bunch of enemies just
00:34 - running around as one with some items
00:36 - scattered throughout the map now with
00:38 - the button I can hide the enemies they
00:40 - are still alive and they are still
00:41 - moving they are just hidden with another
00:43 - button I can hide the atoms and now I
00:45 - can hide leave background now everything
00:47 - is invisible and it seems like we can
00:49 - only see a black screen however if I
00:51 - enable the radar pumps and if there it
00:53 - is there's our radar sending out pulses
00:55 - and locating objects and enemies it hits
00:57 - with a color we can identify that over
01:00 - here we have an item and over here is an
01:02 - enemy moving around as you can see by
01:04 - the location of the Pink's so as the
01:06 - pulse reaches the end it fades out and
01:08 - resets back into zero I can press some
01:11 - keys in order to modify the range of my
01:13 - pulse and there you go now what it is
01:15 - going much further and with no the key I
01:17 - can modify the speed there we go just
01:20 - like that
01:21 - pulsing out very quickly so we're going
01:24 - to build our class in a nice way so we
01:25 - can easily modify these sorts of
01:27 - parameters so over here we have our nice
01:30 - effect also in the end we're going to
01:32 - convert it into a nice UI element just
01:34 - like some sort of minimum so now I can
01:36 - move around with my player and I can
01:38 - look at the mini-map and if I hide the
01:40 - enemies and the items there you go I can
01:42 - still see them on my radar so I can see
01:43 - there's an item in there
01:44 - and I move and I capture the hidden item
01:47 - so this could be used to the tech club
01:49 - enemies or maybe a special mini map that
01:51 - showed the location of hidden items or
01:53 - Easter eggs you can see this effect in
01:55 - action in one of my games survivors quad
01:57 - gauntlets you can throw out a motion
02:00 - sensor which sends out pulses that
02:02 - locates enemies even when they're hidden
02:03 - since the game is heavily based on field
02:06 - of view this effect works as an
02:07 - excellent mechanic you can pick up the
02:09 - game included in the game bundle alright
02:12 - so this circle let's get to it so here's
02:15 - our starting scene over here I have a
02:17 - bunch of enemies just roaming around as
02:19 - well as some items this is pretty much
02:21 - the same starting scene that I used for
02:22 - the radar effect video check the link in
02:25 - the description if you haven't seen it
02:26 - yet in that video I cover a radar that
02:28 - sweeps through an area and locates items
02:30 - and enemies now in this one
02:32 - going to have an expanding circle
02:33 - instead so here let's begin by making
02:36 - the visual so a new game object let's
02:39 - call this the radar pulse now inside
02:42 - let's add a 2d sprite and over here in
02:45 - the project files I have this nice
02:47 - texture there it is you can see a circle
02:50 - with a fade on the inside so this is our
02:52 - pulse sprite
02:54 - and essentially what we're going to do
02:56 - is increase the scale of this game
02:58 - object over time okay so this is our
03:00 - setup now let's make the script to
03:02 - control it over here let's make a new
03:04 - script call it the radar pulse and let's
03:07 - drag it on to our game object like that
03:09 - okay now in here let's first grab our
03:12 - pulse transform okay here we have it now
03:22 - let's also define a private float for
03:24 - the current range and also another for
03:28 - the range max so on awake let's set the
03:32 - range max at let's say 300 and then we
03:36 - make our update and on update we
03:38 - increase the range by a certain range
03:41 - spin x dot time and then if the range
03:49 - goes past the maximum and we reset the
03:54 - range back to zero and after all this we
03:58 - apply the range to the pulse transform
04:03 - all right just like that so you should
04:06 - be able to see our pulse constantly
04:08 - increasing reaches the maximum and
04:09 - resets okay let's see and there it is
04:14 - and increasing in reaches the maximum
04:16 - and it goes back to zero so there you
04:18 - now we have our pulse constantly going
04:20 - up okay great now let's see how we can
04:23 - actually locate our objects so for that
04:26 - in here we're going to use the physics
04:29 - 2d use the circle cast function by now
04:34 - you're probably already familiar with
04:35 - how a great cast works it sends out
04:37 - array in a direction so it has an origin
04:39 - and a direction and here it's similar
04:42 - except we use a circle area rather than
04:44 - just array so
04:46 - do our circle recast which requires an
04:48 - origin the origin will be our
04:50 - transformed position then we require a
04:52 - radius which will be our range and then
04:55 - we need a direction in case we wanted to
04:57 - move the circle but in this case we just
04:58 - want to test it exactly where it is and
05:01 - we're simply going to increase the range
05:02 - so in here let's only pass vector to
05:05 - zero okay so we do our circle test which
05:09 - returns a raycasthit to D and now in
05:16 - here we can test for the collider so if
05:21 - the collider is not known then we hit
05:22 - something
05:23 - so we in here just for testing let's
05:25 - spawn a simple pop-up so in here I'm
05:31 - using the text pop-up function from the
05:33 - utilities as always you can grab the
05:34 - utilities for free from Unity code McKee
05:36 - calm so this won't spawn a pop-up
05:39 - let's one is pop-up same thing and let's
05:41 - put it on the position that it hit so
05:43 - let's use the array cast it and use the
05:45 - point okay so just like that we should
05:48 - be able to see a pop-up whenever it
05:49 - collides with some object let's see okay
05:52 - here it is and as you can see the
05:53 - problems are going out however you can
05:55 - see an issue which is they are weirdly
05:57 - positioned the reason is because we are
05:59 - setting the range on the vector to local
06:02 - scale so that applies the range on all
06:04 - sides but then on the circle cast we are
06:07 - using a size which is only a radius so
06:09 - it's only on one side so in here instead
06:12 - of using our phone range for our circle
06:14 - cast we want to range divided by 2m
06:16 - since essentially the range that we have
06:18 - in here is multiplied by two since our
06:20 - pong circle won't expand from both sides
06:22 - so let's see any up there it is just
06:25 - like that you can already see the pins
06:26 - are correctly located so as the pulse
06:29 - expands there we go once it hits
06:30 - something it triggers a nice pop oh okay
06:34 - great
06:34 - now you can already see some issues for
06:37 - example you can see the issue with
06:39 - multiple things for the same object so
06:41 - essentially as it expands every single
06:43 - frame we're doing a ray cast so the same
06:45 - object will be hit multiple times over
06:47 - the same frame so let's fix this by
06:49 - making sure that we only pane once per
06:51 - each object so in order to do that in
06:53 - here all we need to do is keep track of
06:55 - what objects we already hit so we know
06:57 - which ones we can ignore
06:59 - so up here let's make a list you can
07:03 - make a list of quality D we initialize
07:08 - our own list in here and in here okay we
07:12 - hit something but before we spawn the
07:14 - profit we're only going to do that if
07:15 - the list does not contain this Collider
07:18 - we gas it to be colonizer so we only run
07:24 - this code if it does not contain that
07:26 - coil so if it doesn't then we add it and
07:29 - we do our puppet okay there it is just
07:34 - like that this should be working
07:35 - let's test okay there it is increasing
07:38 - and yep fire the ping there and the ping
07:40 - in there and a ping in there okay great
07:42 - however now it goes up it resets and now
07:45 - you can see an issue we paint certain
07:47 - objects and we no longer paying those
07:49 - exact same objects the second time that
07:51 - the pulse goes out the reason is because
07:53 - we are adding colliders to the list so
07:55 - we need to make sure that we clear the
07:56 - list when we also reset the wrench so
07:59 - over here extremely simple when we reset
08:01 - our range let's also go into the list
08:03 - and call it clear okay let's see okay
08:07 - here we are an increase and if they're
08:10 - hoping down in down now let's reset and
08:13 - try again and ping that one again a
08:17 - second time all right so our pings are
08:19 - correctly resetting between pulses okay
08:22 - great now the other issue that you can
08:24 - see is that we're not really pinging all
08:26 - the objects only some of them are
08:28 - actually being hit this is due to the
08:30 - way that we're doing our circle cast it
08:31 - stops as soon as it finds just one
08:33 - colliding object so if multiple objects
08:36 - are inside the range only one of them
08:38 - won't be hit this motion is very simple
08:40 - in here instead of using our circle cast
08:42 - we can use the circle cast all this
08:46 - instead of returning just a single break
08:47 - asset it returns an array of break
08:49 - assets
08:54 - so this returns an array and then only
08:56 - need to do let's do a simple for each
08:59 - and use the exact same name and now in
09:05 - here all the code is exactly the same so
09:07 - here we get an array of all the
09:09 - collisions that occur inside this circle
09:11 - then here we cycle through them and
09:13 - spawn the same thing alright let's see
09:15 - okay here we are an increase and ping
09:18 - that one and that one and now down down
09:19 - down down and finally down and now it
09:22 - resets and there you go it's pinging all
09:25 - of them once again right great so we
09:28 - have our pulse correctly hitting every
09:30 - single item an enemy and it goes up to
09:33 - the end and resets and everything works
09:35 - exactly as intended okay great so with
09:37 - the logic working now let's replace
09:39 - these debug pings with something more
09:41 - appropriate now over here the project
09:43 - files I have this nice prefab it's
09:45 - essentially just a pink sprint and then
09:47 - contains a simple radar pinging script
09:49 - here it is the script as you can see
09:52 - it's pretty simple very small and here
09:54 - we just have a reference to our sprite
09:56 - render and then we have some code over
09:58 - here running on every update we are
10:00 - essentially lowering the alpha based on
10:02 - a certain disappeared timer and when it
10:04 - reaches zero we destroy this game object
10:07 - then here we can set the starting color
10:09 - and we can set the disappear time so
10:12 - just a very simple script nor to make
10:13 - sure that the alpha for the ping goes
10:14 - down and then this raise itself so now
10:17 - we can go into our radar pong script and
10:19 - in here let's have a zero noise field
10:21 - for our prefab okay we have our film
10:27 - let's set it in the editor
10:29 - there's our film then just drag the
10:31 - prefab okay and now let's go down here
10:33 - here we are spawning or testing things
10:35 - and now instead of doing this let's
10:37 - simply instantiate our prefab we
10:42 - instantiate it on the array casted 2d
10:44 - dot point
10:48 - all right so just like that we should be
10:50 - able to see the pings in Senshi ated
10:51 - instead of our puppet and there it is
10:53 - any of their yo as soon as it goes up
10:55 - when locates something it spawns our
10:58 - paint right awesome so that we have this
11:00 - let's set the pink color based on what
11:03 - type of item we hit so one pink color
11:05 - for the items and one for the enemies so
11:07 - for that let's use the script so this
11:10 - returns a transform for the radar pane
11:12 - transform then we can use the array they
11:15 - are pink transform to get the component
11:18 - type radar thing so here we have our
11:25 - script and I would seen here that we can
11:27 - call SATCOM so now in here on let's
11:29 - identify which one is an item and which
11:31 - one is an enemy and here you can see on
11:34 - the hierarchy of the items and enemies
11:36 - here they are the enemies are using this
11:39 - script the character waypoints hammer
11:40 - and then the items in here are using the
11:43 - item hammer so we can use these scripts
11:45 - to identify what we are hitting so in
11:47 - here before we set the color let's go
11:49 - into our break acid 2d and we go into
11:53 - the collider game object we get the
11:56 - component of type item gambler so if
11:59 - this is not known then we have hit an
12:04 - item and if it hits the character Y
12:09 - points in order then we hit and so now
12:12 - in here for the enemy let's set the
12:13 - color to a new column let's put red one
12:16 - green and blue okay so full red and now
12:20 - for the atom let's put it on phone blue
12:25 - ok this should be working
12:27 - let's test and here we are and yet there
12:29 - you go the pings are correctly being in
12:31 - Senshi ated spawning in the correct
12:33 - position and using a nice color so the
12:35 - enemies are pinging red and the atoms in
12:37 - blue right awesome now let's just see
12:39 - how we can play around with the other
12:41 - function on the radar ping so in here
12:42 - they set disappear timer
12:50 - so if we set it to the range max divided
12:53 - by the arranged speed essentially we're
12:55 - making sure that the radar pink won't
12:58 - live for as long as until the range
12:59 - resets and reaches the same size so here
13:02 - it is there you see that thing happened
13:03 - now it vanished now it spawned again
13:05 - vanished and spawned again okay so since
13:08 - we made this based on the range speed
13:09 - over here we can't increase it and there
13:15 - it is now the pulse is going on much
13:17 - faster but as you can see they stomping
13:19 - exactly the same so we only have one
13:21 - ping alive for each pulse if we wanted
13:24 - we could also multiply this by a certain
13:26 - value to keep it alive for longer and
13:28 - there's the effect and now you can see
13:30 - that each paying survives for about
13:31 - three pulses so with this we can
13:34 - actually see where the enemies go so
13:36 - they I want to stop now it moves there
13:37 - was a ping they're playing they're
13:38 - paying there so if we hide everything we
13:41 - can see and look their enemies in there
13:43 - and now he's moving down there now
13:44 - they're on that right so you can easily
13:46 - play around with these values to figure
13:48 - out what value is best suit your game so
13:50 - with this the effect is almost done
13:52 - let's just add a couple more things
13:53 - let's first add a fade at the end of the
13:55 - range so it doesn't look so jarring
13:57 - reaching the end and immediately
13:59 - resetting so here on our update let's
14:02 - start trading after a certain amount so
14:04 - here with the following a float for the
14:06 - fade range in here let's put it the last
14:12 - 10% so let's put the fade range at 30
14:14 - and then down here while inside our
14:16 - update let's test if the range is past
14:20 - the range max minus our pain then we
14:25 - want to start to fade so we also need
14:27 - the color
14:34 - okay so we have the color and the sprite
14:37 - render so here we have our code we're
14:52 - simply setting the Alpha we're doing an
14:54 - alert between 0 & 1
14:55 - and the way we are calculating the T in
14:58 - here this value won't start off at 1 and
15:00 - approach 0 as it range increase to reach
15:02 - the range max so we start off at 1 in a
15:05 - at 0 then the end we simply set the
15:07 - sprite renderer to this cone okay so
15:10 - let's see okay here we are and if there
15:12 - you go you can see a very nice fit at
15:14 - the end so the effect no longer looks
15:16 - quite as abrupt so it goes once it
15:18 - reaches the end the Alpha starts to fade
15:21 - until it commonly vanishes and again
15:23 - we're doing all of this based on fields
15:25 - so in here and let's say the fade range
15:27 - is a bit longer so I'd say 100 and just
15:30 - like that if they're days we have a much
15:32 - softer much longer faith so you can see
15:34 - how you can play around with all of
15:36 - these values in order to figure out what
15:37 - best suit your yeah
16:04 - okay so in here I have had it some
16:06 - simple keyboard controls again our code
16:09 - works with some nice simple variables so
16:11 - we can simply increase or decrease them
16:12 - let's see okay here we are now I can
16:15 - press this button and increase the range
16:17 - and there you go now the range is much
16:19 - further and I can press this button in
16:21 - order to increase the speed and there
16:23 - you go now I can decrease the range and
16:26 - let's make it yep just like that very
16:28 - small and make it bigger and make it
16:30 - slower and faster so as you can see this
16:33 - effect is very easily adaptable and
16:35 - again hide all of the underlying objects
16:37 - so there you go no background no items
16:40 - no enemies and as you can see everything
16:42 - exactly working as intended alright so
16:45 - just like this we have our nice radar
16:47 - pulse effect and now finally just for
16:49 - fun let's take this effect and apply it
16:51 - into a minima so I'm going to do pretty
16:53 - much the same thing that I did when I
16:55 - made the minimum video so check the link
16:57 - in the description and go watch that
16:59 - video to see a step-by-step on how to
17:01 - create the mini map and render your
17:02 - scene onto it
17:26 - okay so here I am with my player
17:28 - character that I can move around and
17:29 - over here in the UI you can see the
17:32 - radar effect working and you can see by
17:34 - the things that there's an item above me
17:36 - so what's enabled a visual yup there we
17:38 - go there's an item in there and it's
17:40 - being identified on the pulse and I move
17:42 - and I capture it and there you go I
17:44 - picked up the item there are two more in
17:46 - there
17:47 - and there you go yep there they are
17:48 - right next to me and I picked them up
17:50 - and just like that pick them up and they
17:52 - are no longer in there so I can now hide
17:55 - the enemies as if they had some sort of
17:57 - cloaking technology and there you go I
17:59 - cannot see them on the map but they
18:00 - still exist and I can see them on the
18:02 - radar so there's one right there so what
18:05 - I did was first of all make this UI
18:07 - element over here inside my canvass I
18:10 - just have this game object inside I just
18:12 - have this raw image the reason why it's
18:15 - a raw image is so that I can add a
18:17 - rendered texture onto it and this radar
18:19 - texture is actually what is this playing
18:21 - what that camera sees so the camera that
18:23 - is printing out to this render texture
18:25 - is a secondary camera in here so this
18:28 - camera is only rendering things on the
18:30 - radar layer so over here only on the
18:32 - radar and the main camera is not
18:33 - rendering anything on the radar so on
18:36 - the radar objects like the ping and the
18:38 - radar pulses you can see they are on the
18:39 - radar layer so that way they are visible
18:41 - on the radar camera but not on the main
18:43 - camera then the radar pulse is simply a
18:45 - child of the player so it falls on women
18:47 - so again here it is the full effect and
18:50 - there you go I can hide everything and
18:52 - using the radar I can still look that
18:53 - there's an enemy right here so just like
18:55 - this we have our entire very nice effect
18:58 - as you can see this is a great effect if
18:59 - you have some sort of enemies in your
19:01 - game or just some hidden easter egg
19:03 - items as always you can download the
19:05 - project files in a tony's from in Tacoma
19:07 - comm if you liked the video subscribe to
19:09 - the channel for more ent tutorials post
19:11 - any questions you have in the comments
19:12 - and I'll see you next time
19:15 - [Music]