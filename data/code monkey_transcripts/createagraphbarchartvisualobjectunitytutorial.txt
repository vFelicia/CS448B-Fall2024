00:00 - hello and welcome I'm your code monkey
00:01 - in this video we're continuing to create
00:03 - a graph in unity we're going to create
00:05 - the graph visual object interface so we
00:07 - can later update our graph in real time
00:09 - let's begin
00:13 - so our graph is already very capable of
00:15 - displaying anything we give it we can
00:17 - display any list of values and even
00:19 - change how those values are displayed I
00:21 - have a bar chart and a line graph we
00:23 - created those using an interface so it
00:25 - would be relatively simple to add even
00:27 - more different this points so let's
00:29 - check out the code and down here we have
00:32 - the interface the i graph visual which
00:37 - is a definition for showing a visual for
00:39 - a data point inside we simply have a add
00:42 - graph digital function which takes in
00:44 - certain parameters and returns a list of
00:47 - game objects now this works as we've
00:49 - seen but it is not the best approach for
00:51 - example right now there is no way to
00:53 - update our graph since this function
00:55 - returns a list of game objects we have
00:57 - no idea of knowing what each of them
00:59 - represents so without knowing that we
01:01 - don't know how to modify them so we need
01:03 - to create another interface to handle a
01:05 - single graph visual object so let's
01:07 - begin by making a private interface and
01:10 - let's call it eye graph visual object
01:14 - now this represents a single visual
01:19 - object in the graph so in the bar chart
01:24 - every single bar will be a visual object
01:27 - so in here to start off simple let's
01:30 - make a function to set the graph visual
01:32 - object info so a void set graph visual
01:36 - object info and inside we're going to
01:38 - receive what we are sending in here the
01:41 - same thing just like that so this
01:44 - function will set up the object in the
01:45 - graph so now let's implement this on our
01:48 - bar chart so down here on let's make a
01:51 - subclass for the bar chart visual object
01:54 - which won't implement our interface so a
01:56 - public class let's talk bar chart the
01:59 - visual object and we're going to
02:01 - implement the i graph visual object
02:03 - interface so in order to do that we need
02:06 - to implement this method in here
02:10 - so in order to be able to do this let's
02:13 - make eight constructors so a public bar
02:15 - chart there's no object on the
02:19 - constructor and let's receive a game
02:20 - object for the bar game object and also
02:25 - a float for the bar with multiplier
02:27 - let's store them both as member
02:30 - variables and on the sacrificial object
02:39 - info we want to modify the game object
02:41 - to fit these values so up here we can
02:44 - see how we are creating the bar so we're
02:47 - going to need to update the anchored
02:48 - position and the size Delta everything
02:50 - else is responsible for just it's
02:52 - wrapped in the bar so it's copy these we
02:59 - need to grab the rect transform which is
03:01 - a time for a transform and we get it
03:04 - from the bar game object if component
03:07 - rect transform and then instead of the
03:10 - bar width we have a graph position width
03:12 - and just like that all right so that's
03:14 - the object setup for now we're going to
03:16 - deal with the total player
03:17 - so up here on the bar chart we're at
03:19 - visual when we add a graph visual let's
03:23 - create a bar game object and then actual
03:25 - instantiate a bar chart visual object
03:28 - which we're going to instantiate using
03:30 - the bar game object and give it the bar
03:35 - with multiplier then let's call the
03:39 - function sacrificial object info and
03:41 - we're going to pass the same thing so
03:43 - that the graph position with and the
03:45 - insulted text okay okay so now let's
03:48 - test and we should be able to see
03:50 - everything exactly the same as
03:51 - previously and yep there it is the bars
03:53 - working is only the same I can still
03:55 - modify everything some work still tips
03:57 - everything okay good so everything is
04:00 - still working as previously but now we
04:01 - have a new object that is responsible
04:03 - for handling each specific data point
04:05 - which in this case means each bar so
04:08 - with that we now have the function to
04:09 - easily update it now let's modify the
04:12 - graph visual interface and first of all
04:15 - let's rename this instead of being at
04:17 - graphical let's make it create graph the
04:20 - visual
04:21 - since that's what this will be doing
04:24 - instead of returning a list of game
04:27 - objects and let's return a I graph
04:29 - visual object so as you can see we have
04:31 - a bunch of errors in our code so let's
04:33 - deal with that on the create perhaps
04:36 - visual object let's change the return
04:37 - type to be an eye graph visual object
04:40 - and we're going to return the visual
04:42 - object that we've created in here so
04:43 - return this okay down here for the line
04:47 - graph we're going to refactor the in
04:49 - line graph later so for now just return
04:51 - null and all the way up here when we are
04:56 - actually creating instead of adding it
04:58 - to the game object list let's go up here
05:01 - and make a new list instead of a list of
05:04 - game objects and let's make a private
05:06 - list of I grant visual object so the
05:09 - graph the visual object list let's
05:12 - instantiate it in here and go down here
05:15 - now here instead of adding to this list
05:18 - let's head to the graph visual object
05:20 - list
05:23 - so now we are creating a graphical
05:26 - object from this function and adding it
05:28 - to a list so we have changed the return
05:30 - type and how this function works but
05:32 - everything should still be working
05:34 - exactly the same so let's see and yep
05:36 - everything seems to be working now if I
05:39 - hit on Zoom and yep as you can see
05:42 - everything is a bit messed up
05:44 - essentially what is happening here is
05:46 - all the bars are overlapping each other
05:48 - since none of them are being destroyed
05:50 - we need to destroy the old ones whenever
05:52 - we create new ones now previously we
05:54 - were doing that by destroying everything
05:56 - in game object list but since we made a
05:58 - graphical object we are no longer to
05:59 - destroy it so let's see on with the
06:01 - cleanup
06:01 - down here on the graph visual object
06:04 - interface let's make another function
06:06 - and this will be void cleanup this will
06:09 - be responsible for cleaning up whatever
06:11 - game objects this visual object actually
06:13 - has so then down here on the bar chart
06:16 - original object let's make a public void
06:18 - cleanup in order to clean up this bar
06:22 - chart visual object all we need to do is
06:24 - destroy this bar game object so we said
06:26 - we do a destroy on the bar game object
06:29 - okay so this visual object now knows how
06:32 - to destroy itself
06:33 - so now we can
06:34 - up here when we have our list of graph
06:37 - visual objects and up here when we are
06:40 - destroying the game objects let's also
06:42 - cycle through each i graph visual object
06:45 - breath visual objects in the graph
06:50 - visual object list and we're simply
06:52 - going to call the function dot cleanup
06:55 - and afterwards we're going to clear the
06:57 - list as we did with the game objects not
07:00 - clear okay so in here we are self
07:02 - cleaning up the game object list which
07:04 - contains as you can see down here all
07:06 - the dashes and labels and then we are
07:09 - cleaning up all the graphical objects
07:11 - and clearing out the list so let's test
07:13 - and we should now be able to see the old
07:15 - objects being cleaned up and the graph
07:17 - works again and yep here's my graph
07:20 - everything works fine I can zoom out and
07:22 - zoom in and everything works exactly as
07:24 - it should so we now have an object
07:26 - responsible for handling each specific
07:28 - data point which in this case the bar
07:30 - and the only thing missing is to update
07:32 - the filter so let's deal with that so in
07:35 - here when we create the bar let's also
07:37 - set up the bar button UI
07:39 - so down here on the bar let's add the
07:42 - same thing for the game object at the
07:44 - button UI which we're going to use for
07:46 - the tooltip now using that jewel-tone
07:49 - tip on mouse-over and onmouseout instead
07:51 - of doing it in here we're going to do it
07:53 - on the side graph visual object info
07:57 - let's grab the button UI bar button UI
08:02 - which is on the game object I'd get
08:04 - component of type 'button UI and do the
08:07 - same thing sort of adding let's just set
08:10 - equals to that much okay so now if we
08:13 - change the tooltip text it should
08:14 - actually change it so let's see and yep
08:18 - everything looks exactly the same so
08:20 - right now it might seem odd why we did
08:22 - all of this work if everything still
08:24 - works is only the same but it won't be
08:26 - clear when we actually implement
08:28 - real-time updating using the graphical
08:31 - object that we have created you can
08:32 - probably guess how we're going to update
08:34 - this in real time
08:35 - so there you have it we've created an
08:37 - interface to handle each specific graph
08:39 - object in the next video we're going to
08:41 - create the in line graph visual object
08:42 - and after that we won't work on updating
08:45 - the graph in real time as always you can
08:47 - download the project files in a Tony's
08:49 - from Unity code monkey comm if you have
08:51 - any questions post them in the comments
08:52 - and I'll do my best to answer them
08:54 - subscribe for more videos and I'll see
08:55 - you next time