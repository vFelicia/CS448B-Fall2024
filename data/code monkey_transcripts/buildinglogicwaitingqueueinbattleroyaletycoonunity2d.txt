00:00 - hello and welcome I'm your code monkey
00:02 - and in this video we're continuing to
00:03 - create the waiting queue in battleground
00:05 - Tycoon we're going to create the logic
00:07 - to have our guests enter the building
00:09 - perform an action and leave let's get
00:11 - started
00:14 - okay so here's the waiting to you from
00:16 - the previous video guests are being
00:18 - automatically added and they're firing
00:21 - an event when they reach the front of
00:23 - the queue after reaching the front of
00:24 - the queue they are simply sent away the
00:27 - game is still in development so if you
00:28 - like the concept go to the same page and
00:30 - add it to your wish list and fall so
00:32 - based on the events we added in the
00:34 - previous video now let's create some
00:36 - logic for our building to make the
00:38 - interaction based on those events since
00:40 - this building represents a bathroom
00:42 - we're going to grab a guest from the
00:44 - queue in here send him to a toilet
00:46 - placed in here have him play an
00:48 - animation and leave through the exit in
00:50 - here then repeat the process for every
00:53 - guest on the queue okay so to make our
00:56 - building logic let's create a new C
00:58 - sharp script name it cm building
01:01 - bathroom I'm adding the prefix cm simply
01:05 - to avoid naming conflicts with the
01:06 - actual game classes since I'm doing this
01:09 - video on the game's actual code base now
01:11 - inside here let's first remove all of
01:13 - this since we want this as a nice clean
01:16 - class without being dependent on
01:17 - monobehaviour
01:18 - let's start off by making a constructor
01:21 - so public cm building bathroom so on our
01:24 - constructor first of all we're going to
01:26 - receive a reference to our waiting queue
01:29 - then for the logic of the building we're
01:32 - going to get a list of positions for our
01:34 - toilets so a list of vector3
01:36 - for the toilet position list and let's
01:41 - store these as number variables okay now
01:46 - let's just spawn some sprites on our
01:48 - toilet position so we can visually see
01:49 - them so go through each vector3 toilet
01:54 - position in toilet position list and in
01:58 - here I'm going to go into the world
02:00 - sprite which is part of the code monkey
02:03 - utilities which as always you can grab
02:05 - for free from unity code monkey comm so
02:08 - I'm going to grab from the utilities a
02:11 - sprite and create it on this toilet
02:15 - position with a vector 3.1 okay so back
02:19 - into our game handler in here let's
02:21 - create our building so down here in
02:24 - order to create our building first we
02:26 - need to have
02:27 - list of our toilets positions so Melissa
02:29 - a vector3 a toilets position list is
02:33 - gonna be a new list and in here I'm
02:36 - going to give it okay I have two
02:41 - positions in here so let's finally
02:43 - create the building bathroom building
02:46 - bathroom equals new building bathroom
02:49 - and I'm going to give it the waiting
02:51 - queue that were created previously and
02:53 - the toilet position listen Anna let's
02:56 - also go down here and remove this code
02:58 - or sending them automatically we're
03:01 - going to leave the pop up to know when
03:03 - the guests arrived in front all right so
03:05 - let's test and we should be able to see
03:06 - some sprites on our to analog position
03:08 - list yep as you can see both toilet
03:11 - positions are being spawned with a
03:12 - sprite okay since they're in the correct
03:15 - position now let's actually spawn the
03:16 - correct sprite so in my game handler I'm
03:19 - going to add a private sprite and
03:22 - college eight solid sprite and make it a
03:25 - serialized feel so we can set it in the
03:28 - editor and down here on the constructor
03:30 - and let's also send the sprite and here
03:35 - let's receive the sprites for d2l it
03:37 - sprite and it's what we're going to use
03:40 - to spawn in here okay so there you go
03:42 - the sprites are correct all right so now
03:45 - back into our bathroom code we need to
03:48 - identify which toilets are empty so we
03:50 - can send a guest in there in order to do
03:52 - that let's create a simple sub class to
03:55 - store the toilet position and the guest
03:56 - currently using it so down here I'm
03:59 - going to make a private class and call
04:01 - it toilet now in here I'm going to have
04:04 - a public guest which is the guest that
04:08 - is using this particular toilet and a
04:10 - public vector3 4d toilet position and go
04:15 - up here instead of having eternal
04:16 - position list we're actually going to
04:18 - have a list of toilets and college 12
04:20 - listen
04:22 - so let's instantiate that list and in
04:26 - here when we're cycling through the list
04:28 - we're going to add a new toilet and
04:32 - we're going to give it the toilet
04:34 - position to the
04:36 - we're on the position and the guest
04:38 - states as known since it is empty okay
04:41 - now down here on our sub class let's
04:43 - make a simple function to test if it is
04:45 - empty so make a public bowl is empty and
04:48 - in here we're simply going to return if
04:50 - our guest is No
04:52 - if it is no then it is empty if not then
04:54 - someone is in here and then our bathroom
04:57 - let's make a private toilet called
05:00 - get empty 12 this was we're going to use
05:03 - in order to get a toilet that we can
05:05 - assign to a specific guest so in here
05:07 - let's just cycle through the 12 list in
05:11 - topless and here if toilet dot is empty
05:16 - then we're going to return this toilet
05:18 - if not then we're going to return no
05:21 - okay so if you don't let subscribe to
05:24 - the waiting queue event of on guest
05:27 - arrived at the front of the queue make
05:30 - subscribe to this event which won't be
05:32 - fired when it guest arrives at the front
05:34 - of the queue and in here and let's call
05:37 - a function and we're going to name it
05:39 - try send guests to toilet and let's make
05:43 - this function in here so this function
05:46 - needs to test if we have an empty toilet
05:48 - if so it's going to try to grab a guess
05:51 - from our waiting queue if it
05:53 - successfully grabs a guest
05:54 - it won't send that gas to that 12 so
05:57 - let's first make a - an attempt eternal
05:59 - it equals get empty toilet okay now if
06:03 - empty toilet is different from No so we
06:06 - have an empty one if not then we're not
06:08 - going to send anyone anywhere so here
06:10 - let's grab our guests so go into the
06:13 - waiting queue get first in queue this is
06:16 - going to be a yes and again if the gas
06:20 - is not know then that means someone is
06:22 - waiting in there so this is the guest
06:25 - that we're going to send to that
06:26 - particular torrent so I'm going to go
06:29 - into the empty toilet make a function
06:31 - called set guess I'm going to give it
06:34 - this guest and then I'm going to go into
06:36 - my guest and I'm going to move him
06:39 - towards the empty toilet dot get
06:42 - position so you go down here and let's
06:45 - make these functions so first of all a
06:47 - public voice set guests which will
06:50 - receive a guest object and Wilson set
06:54 - the internal guest object to this guest
06:56 - object and a public Victor three gets
06:59 - position it wrong return the toilet
07:02 - position okay our logic should be
07:05 - correctly working so when a guest
07:08 - reaches the front of the queue it won't
07:09 - fire this event which won't be caught by
07:11 - this function in here so this function
07:14 - won't trigger this function and in here
07:17 - we're going to test if we have an empty
07:19 - toilet if we do then this is not gonna
07:22 - be known then we're going to try to grab
07:24 - the first guest in our queue if we can
07:26 - grab and that means someone is waiting
07:28 - in there so we're going to send this
07:30 - guest into this toilet set the internal
07:33 - value so we make sure that this is no
07:35 - longer empty and we're going to move the
07:37 - guests
07:37 - towards this to unlock position all
07:39 - right so let's test this we should be
07:42 - able to see a guest enter the queue when
07:44 - you reaches the front he won't fire the
07:46 - event and be moved towards an empty
07:48 - toilet okay here's my scene here's my
07:52 - waiting queue when he reaches the front
07:54 - he triggers the event and he gets called
07:56 - that one goes into that one that one
07:58 - goes into that one okay great so the
08:00 - logic is correctly working both of them
08:02 - are going each to its specific empty
08:04 - toilet and since there are no more empty
08:06 - toilets everybody else is just waiting
08:08 - great now in here let's add some debug
08:11 - sprites to be able to see if the toilet
08:12 - is empty or not just so it helps to
08:15 - visualize the logic that is going on
08:17 - inside this object so when you create
08:19 - our own sprite let's create another
08:21 - sprite into our 12 position plus a bit
08:26 - to the right so let's say 50 zero since
08:32 - by the font it is empty by the font it
08:33 - will be green and in here let's make a
08:35 - function updater created and this will
08:40 - trigger an action a function of data
08:42 - triggers in action every update so in
08:45 - here we're simply going to set the
08:46 - caller to this debug sprite so let's
08:49 - store our world sprite call it debug
08:51 - sprite and in here we're simply going to
08:54 - set the color based on whether or not
08:57 - this particular toilet is in
08:59 - so in here instead of creating Taunton
09:02 - here let's grab a reference to Almaty
09:04 - Kazakhstan would add it in here
09:07 - set the corner if it is empty then we're
09:10 - going to put the color in green
09:13 - if not then color done right okay this
09:16 - is just an easy way so we can easily
09:18 - visualize which tournaments are empty
09:21 - which are occupied so we can easily see
09:23 - the logic going on inside this class
09:25 - okay so we can see our debug sprites in
09:28 - here and now this one when the first get
09:31 - reaches the front both of them become
09:33 - round okay right so we can easily
09:34 - visualize the internal workings of our
09:36 - class that is very helpful for debugging
09:38 - now when they reach the eternal position
09:41 - let's have them play an animation when
09:43 - completed they're gonna leave and then
09:45 - call the next one and so on so forth so
09:47 - back in my bathroom in here when I got
09:50 - the move to function now this function
09:52 - calls an action when the guest arrives
09:55 - at the given position so this action in
09:59 - here will be triggered when the guest
10:01 - arrives at the toilet position so what
10:04 - we want to do in here is go into the
10:06 - guest and I have a function here that
10:08 - plays a animation and in there it also
10:11 - has another action that is fired when
10:13 - the animation is complete so when the
10:16 - animation is complete let's first of all
10:18 - clear the guest from our toilet so go
10:20 - into the empty toilet which is the
10:22 - turnout that this guest is using come a
10:25 - function call your guest so go down here
10:29 - make a public void clear guest and we're
10:34 - simply going to set our guest to know so
10:37 - this toilet is now empty again and after
10:41 - we empty it let's just send this guest
10:43 - to move to a exit position now we're
10:48 - going to go up here into our constructor
10:49 - and we're going to receive a vector3 for
10:53 - our exit position and we're going to
10:55 - store it internally and here okay so our
11:00 - logic in here we're testing if we have
11:02 - an empty toilet if we do we have a guest
11:04 - if we also have a guest then we set that
11:06 - guest into that empty toilet we send
11:08 - them to the toilet position when he
11:10 - reaches that point it triggers this
11:12 - action in this action he's going to play
11:15 - an animation when the animation is
11:17 - completed it won't trigger this action
11:19 - when this action gets triggered we
11:21 - cleared the guests from the toilet so
11:22 - it's empty again and we move them
11:24 - towards the exit position okay so let's
11:27 - go into our game Handler and we have to
11:29 - send them a exit position so let's say a
11:32 - new vector3 seven four five two four
11:35 - five that should be good
11:37 - so let's test and see if all of that
11:39 - logic is correctly working okay here's a
11:41 - guest on the queue he goes in he reaches
11:44 - the front one of them goes in there the
11:46 - other one in there when they reach
11:48 - they're gonna play a certain animation
11:50 - okay okay the animation is completed you
11:53 - can see the toilets are now empty and
11:55 - they leave the bathroom okay great
11:57 - everything is working so the logic is
12:00 - working perfectly but as you can see no
12:02 - one else is entering from the queue we
12:05 - need to try to grab another guest when
12:06 - this one actually leaves so back in our
12:09 - code here on our bathroom in the end
12:12 - when he arrives at the exit position we
12:16 - need to request another guest from our
12:19 - queue okay here we are again guest
12:22 - enters the queue reaches the front goes
12:25 - to his toilet he occupies it
12:28 - he plays a certain animation when the
12:31 - animation is completed he leaves and
12:34 - when he reaches the end and yep there
12:37 - you go he grabbed both of them and there
12:40 - you go so there you have it
12:42 - we have successfully connected now we're
12:43 - waiting to you to a building the
12:45 - building has its own logic which
12:47 - requests the guests when needed and gets
12:49 - notified when one reaches the front of
12:51 - the queue in the next video we're going
12:53 - to add the ability to modify the
12:55 - positions in our queue again the game is
12:57 - still in development so if you don't
12:59 - like the concept go to the scene page
13:00 - add it to your wish list and phone as
13:03 - always you can download the project
13:04 - files and utilities from Unity code
13:06 - monkey calm if you have any questions
13:08 - post them in the comments and I'll do my
13:10 - best to answer them subscribe for more
13:12 - videos and I'll see you next time