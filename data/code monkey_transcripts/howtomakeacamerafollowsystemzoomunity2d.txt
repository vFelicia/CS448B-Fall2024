00:00 - hello and welcome I am your code monkey
00:02 - and in this video we're going to
00:03 - continue our camera phone system and add
00:06 - zoom functionality let's get started
00:11 - okay so now that we have camera movement
00:14 - working we should probably add camera
00:16 - zoom so let's go in here in order to get
00:20 - the zoom working we need a reference to
00:23 - the actual camera in this game object so
00:26 - let's add a private void start and on
00:30 - start we're going to first above here
00:33 - set up a private camera call with my
00:36 - camera and on starting to get my camera
00:39 - calls transform getcomponent uptime
00:42 - camera so down here let's copy this
00:49 - movement camera movement code into its
00:51 - own function so make a private void and
00:54 - no movement and we're going to copy all
00:58 - this code in there and then we're going
01:02 - to make another one a private void panel
01:04 - zoom and in here on our update we're
01:08 - going to call the hand movement and the
01:10 - handle assumed okay there it is so in
01:15 - order to get the zoom we're using 2d so
01:19 - we're going to change the cameras
01:21 - orthographic size in here let's set up
01:26 - our float camera zoom which won't be
01:33 - let's say four yeah so zoom in just a
01:36 - test and do my camera dot orthographic
01:43 - size equals camera zoom so just like
01:46 - that the camera should be instantly
01:48 - zooming in as soon as it starts yep
01:54 - there it is it just zoom then and I can
01:56 - still change it and everything else
01:57 - still works okay so now the zoom is
02:00 - actually being instant which we don't
02:02 - want so let's smooth that out the same
02:04 - way we did with the movement so float
02:07 - camera zoom difference equals camera
02:11 - zoom would you
02:12 - where we want to be and this is our
02:15 - current difference and float camera zoom
02:22 - speed let's just put it at 1 F so
02:26 - orthographic size increase by difference
02:29 - times camera zoom speed times time Delta
02:35 - time and now as you can see it should
02:43 - zoom in slowly very nice thank you so mu
02:47 - yep great okay so now this one is gonna
02:51 - have the same problems when we were
02:52 - running at very low frame rates so let's
02:56 - make sure it doesn't overshoot its
02:57 - target
02:59 - so if our camera zoom difference is
03:04 - bigger than zero so we remove if we're
03:06 - in this case zooming out we're going to
03:11 - make sure it doesn't overshoot the
03:12 - target so if my camera god
03:16 - orthographic sighs if it's actually
03:19 - bigger than camera zoom then we have
03:21 - overshot the target so I'd simply set it
03:24 - to camera zoom and do the same thing if
03:30 - the value is actually negative if we go
03:33 - under zoom you set it back
03:36 - so now just test make sure that
03:38 - everything still works the same but now
03:40 - if the player is running at a very low
03:43 - frame rate you won't no longer have
03:45 - problems great so now instead of
03:48 - receiving a fixed value here let's do
03:50 - the same thing and do a private func
03:54 - that in this case won't return a float
03:55 - and call it get camera zoom func
04:00 - and we're going to add this to our setup
04:06 - and and down here instead of setting it
04:10 - like that we're gonna grab it from our
04:12 - function and then our game handler is
04:16 - give it another function that in this
04:18 - case just for testing let's return 200
04:21 - so now it should zoom out yep there it
04:25 - is
04:25 - zooming out great okay so now let's have
04:30 - the ability to zoom in and out so in
04:33 - here make a private float that will
04:35 - contain the zoom there we want to go and
04:38 - add a private void zoom in and a private
04:43 - ROI zoom out okay now when we zoom in
04:48 - just decrease zoom but let's say 40 and
04:52 - make sure that it stays within a valid
04:54 - range because we don't want to zoom in
04:56 - too much
04:57 - so if zoom is under let's say 40 and
05:01 - zoom equals 4 yup and when we zoom out
05:05 - zoom was equals oh yeah if the zoom is
05:10 - bigger than oh let's say 200 F then zoom
05:13 - I don't know okay stemming here let's
05:19 - return instead of returning a fixed
05:21 - number let's return our number and let's
05:24 - add some buttons for zoom in and zoom
05:30 - out and actually in here the only
05:34 - function we're gonna call it's gonna be
05:36 - the zoom in function in here
05:40 - powers and place those buttons slightly
05:46 - lower and put it about that should do
05:50 - the trick
05:50 - I just set the starting zoom value to 40
05:54 - M just might zoom in and now let's see
05:57 - if the buttons are there and test if our
06:01 - zoom is working so it's currently
06:02 - zooming in and we can zoom out and it
06:07 - was back
06:07 - zoom in and goes up and as always we can
06:10 - still change and we can change character
06:12 - zoom into that character zoom out go to
06:16 - another character zoom in and zoom out
06:18 - let's send some functions for our camera
06:21 - to receive a fixed point since sometimes
06:23 - in case where we want to do a cutscene
06:26 - we wanted to go to a specific point not
06:29 - necessarily have to give it a get camera
06:32 - position func so let's add a public void
06:36 - and set camera follow position and just
06:44 - give it a factor 3 camera call position
06:49 - and internally we're going to call this
06:52 - function and just return this we're
06:57 - going to add also a function for public
07:00 - set get camera zoom func
07:06 - which will always change our actual
07:10 - camera zoom phone and and set camera
07:17 - zoom to a fixed number so float camera
07:22 - zoom and
07:24 - call function and just put it there and
07:29 - we're zoom well there you go
07:33 - now I can go here and just send it to a
07:38 - specific point so set camera fall
07:43 - position let's just send it to - 100 -
07:48 - 50
07:49 - somewhere to the left and to the right
07:51 - in camera follow dot set camera zoom
07:54 - let's zoom in so just like that we can
08:00 - move the camera away yep let's say a
08:04 - cutscene is happening here and when ends
08:06 - we go back to the player and now it's
08:08 - again being used in the player so just
08:12 - for fun let's make the camera go into
08:13 - random positions so in here let's use
08:17 - the code monkey utilities to create a
08:19 - new function periodic which is just an
08:22 - action that won't be executed every
08:24 - certain amount of time so it's great one
08:27 - every let's say top second so let's just
08:32 - send it to a random position so here
08:34 - let's just go
08:35 - random to our range between minus 100
08:38 - 100 and the same thing and on our zoom
08:47 - render range within 4 yup and 200 yeah
08:52 - great so now every half a second the
08:55 - camera should just move around randomly
08:58 - and there you have it we have our nice
09:01 - camera system that is independent of the
09:03 - actual things moving in the scene and we
09:06 - can set it to move and zoom to anywhere
09:10 - you want we can make it smoothly follow
09:12 - the player and the other object and
09:14 - easily make some cutscenes by setting a
09:16 - target position target zoom before
09:18 - returning to player control ok if you
09:22 - have any questions post them in the
09:24 - comments and I'll do my best answer them
09:25 - alright see you next time