00:00 - hello and welcome I'm your code monkey
00:01 - so recently on Twitter someone pointed
00:04 - me to an interesting post it's all about
00:06 - the notion of clean code and is that
00:07 - something that you need now I spent way
00:09 - too long writing a super big reply so
00:11 - let's see what I said since this is
00:12 - obviously a topic that I'm very
00:13 - passionate about clean code really is
00:15 - the reason why I can make complex games
00:17 - like my upcoming steam game dinky
00:19 - Guardians it has tons of interconnected
00:21 - systems tons of classes events
00:22 - interfaces all of them working
00:24 - seamlessly with one another I could not
00:26 - build this game without a focus on good
00:27 - clean code go ahead and add it to your
00:29 - steam wishlist so the original tweet
00:31 - this says early career people should
00:33 - take time to download and look at the
00:34 - elite Far Cry source code this is
00:37 - apparently something that just leaked
00:38 - someone just put the entire Far Cry
00:39 - source code onto the internet archive I
00:41 - believe so apparently early career
00:43 - people should look at that in order not
00:45 - to learn some new techno lessons but
00:47 - rather to disabuse themselves of the
00:48 - notion of clean code then it goes on to
00:50 - say that the player class is 7 000 lines
00:52 - of code that's definitely huge with a
00:54 - zillion hidden State machines and it did
00:56 - not prevent the game from spawning a
00:58 - build their own franchise and no this is
01:00 - a specific Game Dev I can assure you
01:02 - that almost every successful long
01:03 - surviving code base looks like that so
01:05 - it is definitely a very interesting
01:06 - topic and down here plenty of people are
01:08 - actually agreeing with the sentiment so
01:10 - one related not to programming rather to
01:12 - AAA 3D modeling is to try to rip some
01:15 - models and see how apparently the game
01:16 - topology isn't super great then
01:18 - someone's saying yep there is value in
01:19 - seeing what kind of junk actually ships
01:21 - games so I'm not saying that they reuse
01:23 - it for Far Cry 2 or start from scratch
01:24 - saying Angry Birds was 50 000 lines of
01:27 - code and so on so this one quite a bit
01:29 - of discussion and for me the main thing
01:31 - really is that this tweet makes it seem
01:32 - like link code is something that you
01:34 - shouldn't even worry about at least
01:36 - that's my interpretation of this Suite
01:37 - it kind of means how clean code is
01:39 - apparently unimportant because even
01:41 - without it technically you can make Far
01:43 - Cry which is a super successful game
01:45 - definitely multi-build down franchise
01:46 - and technically you can build that
01:48 - without focusing on clean code and here
01:50 - is my super long tweet basically I just
01:52 - find the original one to be a bit
01:54 - strange like I said my interpretation is
01:56 - that it's saying how you shouldn't worry
01:57 - about clean code because suddenly you
01:59 - can find success with very bad code and
02:01 - can you make a successful game with the
02:03 - ugliest code possible and the answer is
02:04 - of course you can technically you could
02:06 - eliminate all the new lines you could
02:07 - don't Far Cry in a single line of code
02:09 - you could intentionally obfuscate every
02:11 - single variable you could give it just
02:13 - random names you could write the entire
02:15 - thing in just a single class with an
02:16 - entire huge update Loop the compiler
02:19 - really doesn't care about any of it the
02:20 - compiler just takes a code and makes the
02:22 - final executable it does not care about
02:24 - any of this however if you try to do
02:26 - that if you completely ignore every
02:27 - single clean code principle chances are
02:29 - you won't just drown in a mountain of
02:31 - technical debt before ever finishing
02:32 - your game now for me I do get how some
02:34 - people can definitely be quite Zealot
02:37 - when it comes to clean code they follow
02:38 - the rules so rigidly that they
02:40 - completely forget the whole purpose
02:41 - behind those rules do I see it clean
02:43 - code isn't really actually about rules
02:45 - it's more just simple guidelines and the
02:47 - ultimate goal is simply to help you
02:49 - produce better game or software so I
02:51 - would definitely say definitely don't
02:52 - follow the rules so rigidly just focus
02:54 - on using them as guidelines so I can get
02:56 - how some people don't take that too far
02:58 - but then I think that going on on the
03:00 - completely opposite side that is also
03:02 - not very helpful completely devaluing
03:04 - all of those principles that seems
03:05 - insane to me and its core clean code
03:07 - really isn't Magic it won't just
03:08 - magically make your game better or more
03:10 - successful it's really just getting
03:12 - principles meant to help you as a
03:13 - developer meant to help you make your
03:15 - game if you ignore all of those
03:17 - principles that's fine the component
03:18 - doesn't care the code will run exactly
03:20 - the same exactly as you write it so the
03:22 - code won't compound but it will affect
03:24 - you as a developer and you will probably
03:26 - not actually finish your game so should
03:28 - you obsess with writing the most
03:29 - absolute perfect code possible to the
03:31 - point where you are not even making
03:32 - progress you're just focusing on writing
03:34 - good clean code then you don't even care
03:35 - about actually making the game at that
03:37 - point no of course not I think at that
03:39 - point you're kind of going against
03:40 - yourself but on the other hand should
03:42 - you completely disregard any you know
03:43 - clean code senders just because
03:45 - technically you can find success without
03:46 - worrying about it and personally no I
03:49 - don't think that's wise as with so many
03:50 - things common sense is really the main
03:52 - thing don't obsess over writing perfect
03:54 - code your code does not have to be
03:55 - perfect but at the same time don't
03:57 - completely ignore it and live in a
03:58 - terrible code base that will also not
04:00 - help you as a developer another example
04:02 - is actually sunless which sold millions
04:04 - of copies super highly successful game
04:05 - and that is another one where a few
04:07 - years ago the developer actually shared
04:09 - the movement code and that involves a
04:11 - massive 5000 line player class in only
04:14 - it's messy and mostly undocumented Glory
04:16 - so this is another thing that when they
04:18 - posted this people did indeed point out
04:20 - how this isn't the best or cleanest code
04:22 - in the world and once again some people
04:23 - who are a bit way too intense about this
04:25 - topic they took this as a way to say
04:27 - negative things about the game just
04:28 - because the code quality isn't
04:29 - supposedly perfect and definitely ignore
04:31 - the ultimate goal which is the game came
04:33 - out and it was massively successful so
04:35 - you have some positive comments this
04:36 - makes me feel better about my code I
04:37 - know it can be embarrassing but it's
04:38 - nice to see even the best devs can still
04:40 - write messy code and yep again that is
04:42 - true the ultimate goal is actually make
04:43 - your game actually finish your game try
04:45 - to keep your code quality as high as
04:47 - possible but the main goal is still just
04:49 - finishing the game and this thread was
04:51 - five years ago so there's a bunch of
04:52 - them deleted posts someone saying Jesus
04:54 - what an if else monster so yes unless is
04:56 - an interesting example where it shows
04:58 - you how you can write bad code and you
04:59 - can't find success so that seems to sort
05:01 - of prove the original post but thinking
05:04 - about it in that way makes me think of
05:05 - the maximum correlation is not causation
05:07 - so the fact that it's less on millions
05:09 - of copies that is now related to a
05:11 - massive 5000 lens of code method rather
05:13 - it found success because the developer
05:15 - is actually very skilled and managed to
05:16 - actually build the game despite having
05:18 - that much complexity so in the end your
05:20 - code absolutely does not need to be
05:22 - perfect so if you're just getting
05:23 - started and you're concerned about the
05:25 - quality of your code as long as you are
05:26 - making an effort to actually try to
05:28 - produce good code I would say you're
05:29 - doing very well the first goal is really
05:31 - it just has to work but at the same time
05:34 - the the year the code that you write the
05:36 - harder it is to get it to actually work
05:37 - so for me the number one goal is
05:39 - complete the game and a close second one
05:41 - is simply keep code quality as good as
05:43 - possible in order to actually make it
05:44 - easier on me to actually complete the
05:46 - game in the end basically my advice to
05:47 - you is focus on actually making your
05:49 - game that's the number one goal actually
05:50 - complete your game and clean code is
05:53 - simply a set of guidelines a set of
05:55 - principles to help you actually achieve
05:56 - that so don't obsess over making the
05:58 - absolute perfect cone but at the same
06:00 - time don't completely ignore it to the
06:01 - point where you might actually never end
06:03 - up finishing your game and if you want
06:04 - to learn more about clean code I highly
06:06 - recommend you follow my free complete
06:08 - course it's on making an interesting
06:09 - game and throughout it I'm constantly
06:11 - emphasizing the value of writing good
06:12 - clean code or if you're a more advanced
06:14 - user then check out my turn-based
06:16 - strategy course again the only way to
06:18 - build the game as complex is that one is
06:19 - to focus on writing high quality clean
06:21 - code just like I teach in that course
06:23 - alright hope that's useful check out
06:25 - these videos to learn some more thanks
06:27 - to these awesome patreon supporters for
06:29 - making these videos possible thank you
06:31 - for watching and I'll see you next time
06:35 - foreign