00:00 - hello and welcome I'm your code monkey
00:02 - and in this video we're continuing to
00:03 - create a graph in unity we're going to
00:05 - dynamically modify the horizontal scale
00:07 - of our graph based on our list of values
00:09 - let's get Sir
00:13 - so we previously made the y-axes in here
00:16 - dynamically scale based on the valleys
00:19 - received we set up the code to make it
00:21 - identify the highest value and increase
00:24 - a bit from there I didn't find the
00:25 - lowest and decrease a bit from there now
00:27 - we set up the code to support going
00:29 - under zero based on the lowest value but
00:33 - in this case it looks better if we just
00:36 - start off at zero so the code supports
00:38 - going under but for now let's start off
00:40 - at zero so there are many ways to scale
00:43 - our x axis depending on what we want we
00:45 - can have for example a maximum amount
00:48 - and ignore the older values or we can
00:51 - show them all regardless of how many we
00:52 - have and position them correctly within
00:55 - the width of our graph let's start off
00:57 - by making a maximum number of values
00:59 - visible so here I am in my code in my
01:02 - show graph function and in here I'm
01:05 - going to create a variable for the
01:06 - maximum amount of values we can show sin
01:10 - here let's make an end for the max
01:11 - visible value amount which won't be 5
01:16 - let's say so we only want to display the
01:18 - last five values and down here when
01:21 - we're cycling through our value list
01:24 - array we only want to show a certain
01:26 - amount of values so instead of starting
01:28 - at 0 we're going to start at value list
01:31 - count minus our max visible value amount
01:36 - so if the maximum value amount is set to
01:39 - 5 this will start displaying from valent
01:42 - list minus 5 so it won't display the
01:44 - last 5 values now that we're no longer
01:47 - storing the index at 0 we can't use the
01:50 - index to calculate our exposition so
01:53 - let's make a variable to store our X
01:55 - index regardless of the actual index
01:57 - that we're checking on our list so in
01:59 - here let's make an X index and start off
02:02 - at 0 and when we go through the end of
02:05 - our cycle let's increase our X index and
02:08 - here instead of using eye we're going to
02:10 - use the X in X so regardless of what
02:13 - value I has the X index will start from
02:15 - 0 so what sets it out and we should see
02:18 - only the last five values yep there you
02:20 - go our graph this is displaying the last
02:22 - 5 elements you can even see the days are
02:24 - correct and 11th
02:25 - $13 $5 okay great now in here the one
02:29 - issue that we can see is that our Y
02:31 - scaling is some being dependent on the
02:33 - entire value list since one of those
02:35 - values was at 98 we still go up to 117
02:37 - but in the ones that we are showing here
02:39 - that you don't go up too high so let's
02:41 - make sure that when we calculate our
02:43 - highest and lowest values we are doing
02:46 - so only based on these values the ones
02:48 - that are actually visible so up here
02:50 - instead of doing a four-inch through the
02:52 - whole list
02:53 - let's do for each only of the values
02:55 - that we want make an end value which is
02:58 - the value list of pot okay so now
03:00 - everything should be working if there it
03:03 - is our bottom is at zero since we set
03:05 - that specifically and the highest point
03:07 - has a 20% buffer okay great so now one
03:11 - thing let's go into our code and up here
03:13 - when I'm setting my list let is send an
03:16 - actual different thing let me send just
03:19 - one Valley so can you guess what won't
03:22 - happen well let's see and there you have
03:24 - it we have an error in our console
03:26 - argument out of range so essentially we
03:29 - are trying to access a negative index so
03:32 - down here when we're going through the
03:34 - values we have to make sure that we
03:36 - never start off at a negative value in
03:39 - order to do that let's go into
03:40 - mathematics and pick the highest value
03:43 - between this and zero we're grabbing the
03:46 - highest value between these two if we
03:48 - have less than five values then this
03:50 - first argument in here won't be negative
03:52 - and the function will return this zero
03:54 - otherwise don't return the value in here
03:57 - let's apply the same thing down here
03:59 - okay let's test again and it should
04:02 - display only one value if they're your
04:04 - we are displaying just one value and
04:06 - there are no longer in the errors now
04:08 - again our scaling has an issue here
04:10 - since if we only have one value then our
04:13 - code in here when we're doing this
04:15 - difference it will always be zero so
04:18 - we're we can't add 20% of zero because
04:21 - well not zero so one way to fix that we
04:24 - can go up here and make a fold for the
04:26 - why difference which will be Y maximum
04:28 - minus the Y minimum and we're simply
04:32 - going to test if it is under a certain
04:34 - amount so in here if the Y difference
04:37 - if it is less than zero then let's just
04:41 - set it to a simple minimum so let's say
04:43 - 5f apparently in here really depends on
04:45 - what vowels it will receive but as long
04:47 - as it's a positive number it won't
04:49 - increase by a certain amount so in here
04:51 - instead of using that we're going to use
04:53 - the difference
04:54 - okay so let's test it again and now the
04:56 - number should no longer be hugging the
04:58 - top yep there you go we got a nice
05:00 - little buffer in here okay all right so
05:02 - we now have the graph displaying a
05:04 - maximum amount of values let's write the
05:06 - code for displaying all values
05:08 - regardless of the size so first of all
05:11 - we want to have both behaviors available
05:13 - so we're going to add a new parameter to
05:15 - our function to indicate how many values
05:17 - we want to show so I'm going to grab the
05:20 - max visible value amount and add it as a
05:23 - parameter in here so remove the local
05:28 - one and let's set the default to minus
05:31 - one now we're going to make sure this
05:33 - value is always valid so in here if it
05:37 - is less than or equal to zero
05:40 - then let's just display the whole thing
05:42 - so let's display the value list dot
05:44 - count now in here when I call if I want
05:47 - to display the whole thing let's send it
05:49 - a minus one so I'm sending a minus 1 in
05:51 - here which is under zero so it won't set
05:54 - this to the volume list count which is
05:56 - all of the items so we're going to use
05:58 - the previous value list on with these
06:00 - and we're going to send minus one so we
06:02 - should be able to see all of these
06:04 - values yep there you go we can see all
06:07 - the values that we are sending to our
06:08 - graph now there's still an issue with
06:11 - our code so back in here let's add a
06:15 - bunch more values so random stuff in
06:19 - there now let's test and as you can see
06:23 - the values aren't leaving our graph this
06:26 - is happening because we have set a fixed
06:28 - value to our X size so the width of each
06:31 - of our nodes we need to define our
06:34 - excise based on the max visible value
06:36 - amount so back in here in my show graph
06:39 - when I'm calculating the excise it will
06:43 - no longer be a fixed value let's simply
06:45 - do our graph width divided by the max
06:48 - visit
06:48 - value amount so up here when I'm ground
06:51 - where I fight let's also grab the graph
06:55 - width which is a size Delta X and in
06:59 - here divide the graph width by the max
07:01 - visible value amount so let's test it
07:04 - out and okay all of our valleys are
07:07 - currently being displayed in here now
07:10 - our last value in here is hugging the
07:12 - right side of the graph let's give it
07:14 - some distance so in here on our exercise
07:17 - calculations let's just increase the max
07:20 - visible amount by one and that should be
07:24 - enough to give us a little buffer on the
07:25 - right side yep there you go all of our
07:28 - values are being correctly displayed
07:30 - regardless of how many we have so there
07:33 - you have it we have successfully added
07:34 - horizonte on scaling to our graph in the
07:37 - next video we're going to display it as
07:39 - a bar graph instead of a line graph as
07:42 - always you can download the project
07:44 - files in utilities from unity code
07:46 - monkey comm if you have any questions
07:48 - post them in the comments and I'll do my
07:49 - best to answer them ok see you next time