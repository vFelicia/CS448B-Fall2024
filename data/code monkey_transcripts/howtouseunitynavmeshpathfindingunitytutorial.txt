00:00 - hello and welcome i'm your code monkey
00:02 - and here let's learn how to use
00:03 - navmesh this is unity's built-in
00:05 - pathfinding tool
00:06 - also this video is a lecture taken from
00:08 - my ultimate unity overview course
00:10 - unt is massive so in the course i
00:11 - explain over 30 features and tools of
00:13 - the engine that you might not know about
00:15 - there's individual lectures explaining
00:17 - tons of things like shadowgraph assembly
00:19 - definitions pro builder script execution
00:21 - order and so on
00:22 - also the course will continuously be
00:24 - updated with free updates as i add more
00:26 - lectures explaining more and more tools
00:28 - and features
00:29 - so go ahead get the phone course and
00:30 - learn how to master all of the unity
00:32 - tools to help you make better games
00:34 - faster
00:34 - in this lecture we're going to learn all
00:36 - about nav mesh in unity this is unity's
00:39 - built-in pathfinding system
00:41 - so first of all nav mesh stands for the
00:43 - navigation mesh
00:44 - the system makes a mesh which the agents
00:46 - can then use for navigation
00:48 - so let's see how to use it over here
00:50 - i've got my demo scene
00:52 - so i just have a simple plane then i
00:54 - have a cube acting as an
00:56 - obstacle and finally just a basic player
00:58 - capture
00:59 - so first of all we need to bake the nav
01:01 - mesh
01:02 - now to open the navmesh menu go up here
01:04 - into window
01:06 - then down here into ai and we have
01:08 - navigation
01:09 - so this opens up the navigation window
01:11 - now up here just go into the bake tab
01:14 - and we have a whole bunch of settings
01:16 - but for now leave it all on default
01:18 - and we just go ahead and click on bake
01:20 - and as soon as you do
01:21 - nope nothing happens that's because we
01:24 - need to identify
01:25 - what objects we want to be walkable so
01:27 - in this case let's select the plane
01:29 - and then on the navigation window let's
01:31 - go into the object tab
01:32 - and over here let's tick the box that
01:34 - says navigation static
01:36 - this means that this object will not
01:38 - move so for the purposes of navigation
01:41 - is a static object
01:42 - now another way to set this would be
01:44 - simply through the inspector
01:46 - over here you see a little static and if
01:48 - you click on the
01:49 - little arrow you can see all of the
01:51 - various ways that this object can be
01:53 - static
01:53 - so in this case we made it navigation
01:55 - static now with just that if we go back
01:57 - into the navigation into bake and we
01:59 - click on bake
02:00 - and yep we do see our navigation mesh so
02:03 - it's in light blue there it is
02:05 - so this is all the areas that our agents
02:07 - can walk in
02:08 - however just like this the issue is that
02:10 - it didn't identify this cube as an
02:11 - obstacle
02:12 - so again let's do the same thing first
02:14 - of all select the cube now let's mark it
02:16 - as static
02:17 - and in this case let's make it through
02:18 - the inspector and we can either just
02:21 - individually make
02:22 - it navigation static or just make the
02:23 - whole thing static
02:25 - so these are the various kinds of static
02:26 - things that you can have but in this
02:28 - case
02:28 - navigation static is all that matters so
02:31 - there it is it's set
02:32 - and now back on the navigation if we
02:33 - click on bake again yep there you go now
02:35 - it automatically identifies the cube
02:37 - so the wonka ball area is in light blue
02:39 - and then you can see over here on these
02:41 - corners nope the agent cannot go through
02:43 - there
02:43 - alright so so far so good we have our
02:46 - correct basic nav mesh
02:47 - now let's make the agent actually use it
02:50 - so let's select the player game object
02:52 - and over here on the inspector let's add
02:54 - a component down here go into navigation
02:57 - and let's make this a navmesh agent then
03:00 - again for now let's leave all of the
03:01 - parameters at default
03:03 - now in order to tell the agent where to
03:05 - go we need to make a simple script
03:07 - so let's make it let's just create a new
03:09 - c-sharp script
03:11 - call this the player neb mesh let's
03:14 - attach it to the player game object and
03:16 - let's open the script
03:17 - now here the first thing we want is to
03:19 - grab the nav mesh component
03:21 - and in order to access that type we need
03:23 - to add using unity engine dot ai
03:28 - and then here let's make a simple
03:30 - private void awake and unawake
03:32 - let's do a get component of nav mesh
03:34 - agent
03:38 - all right so we have our navmesh agent
03:40 - reference
03:42 - and now let's make a private void update
03:44 - and on
03:45 - update let's tell it where to go so the
03:48 - way we do that
03:49 - is we go into the navmesh agent and we
03:50 - modify the destination
03:52 - so for the destination let's add a
03:55 - transform reference so we can tell the
03:56 - agent where to go to
03:58 - so up here and let's make it a
03:59 - serialized field so we can set it in the
04:01 - editor
04:02 - of type transform and let's call it move
04:04 - position transform
04:06 - okay so we have that reference and down
04:08 - here just set it to that one dot
04:10 - position
04:11 - okay so our agent will be moving towards
04:13 - our move position transform
04:15 - so back in the editor here i've got an
04:17 - object that i made
04:18 - it just a very simple sphere just a nice
04:20 - material so we can visually see where it
04:22 - is our target
04:23 - so just on the player just drag that
04:25 - transform reference and there it is so
04:28 - now the player should move towards our
04:29 - move target
04:30 - but in this case there's an obstacle in
04:32 - the middle so it should go around the
04:34 - obstacle
04:35 - okay so let's see and yep there's the
04:37 - agent going towards the
04:38 - move target and as you can see it does
04:40 - avoid the obstacle so if i move the
04:42 - obstacle i put it in there you can see
04:44 - that it never goes
04:45 - through the obstacle instead it collates
04:48 - the path
04:48 - and knows how to get there alright so
04:50 - that's the absolute basics as you can
04:52 - see it automatically avoids the
04:53 - obstacles on navmesh so he knows to go
04:55 - around the wall instead of just ramming
04:57 - against it
04:58 - now that we've seen the basics let's
04:59 - inspect some of these parameters
05:01 - and for that here is a slightly more
05:03 - advanced demo scene
05:04 - so i've got this level that i built
05:06 - using pro builder which i also cover in
05:08 - detail in another lecture
05:10 - so i've got some basic floor i've got
05:12 - some stairs
05:13 - an area above i've got some overhangs
05:16 - the usual objects
05:17 - i've got some jumping areas some slopes
05:19 - and so on so now let's inspect on the
05:22 - navigation
05:22 - let's go into bake and in order to bake
05:25 - all of this area once again i need to
05:27 - make sure that all these objects are
05:28 - static
05:29 - so i can just select the parents since
05:31 - all these are children
05:33 - and just mark it as static and
05:34 - automatically apply some children so
05:36 - make all challenge sciatic
05:37 - and now if i go into bake and i hit on
05:39 - bake it automatically bakes the area
05:41 - okay so far so good now let's look at
05:43 - these parameters
05:44 - so you've got these two ones related to
05:46 - the agent
05:48 - so that's the agent essentially the
05:49 - width and height
05:51 - so as i increase the width let's say of
05:54 - one
05:55 - and i hit on bake again let's see what
05:57 - happens over here into this area so as i
05:58 - hit on bake
05:59 - yep there you go as you can see as the
06:01 - agent becomes more
06:02 - thick essentially the area that it can
06:04 - well becomes smaller and smaller
06:06 - so let's increase this a bit more and
06:08 - there you go now the agent is so thick
06:10 - that it cannot
06:10 - actually pass through this gap so the
06:13 - height is a similar thing except it
06:14 - affects
06:15 - some overhangs so for example over here
06:16 - i've got an area above and an area
06:18 - underneath
06:19 - and right now the agent can indeed go
06:20 - underneath here but if i increase the
06:22 - agent height
06:23 - and nope now it can no longer go there
06:26 - next up we've got the max slope
06:28 - so this is the angle that the agent can
06:30 - climb so over here i've got these two
06:33 - nice slopes
06:34 - so this one is on 25 degrees and this
06:36 - one is on 40 degrees
06:38 - and here the max slope and the step
06:40 - height are slightly connected as you can
06:42 - see by the warning here
06:43 - so for now let's make the step height
06:45 - pretty big so we can see both these
06:47 - slopes let's put it on the near maximum
06:49 - so right there
06:50 - so if i put it like that you can see
06:52 - that the agent can indeed climb this
06:53 - slope as well as this one which is
06:55 - quite a bit more intense look at that so
06:57 - it can climb that and that
06:59 - but if i now bring it down to maybe
07:01 - something like 30
07:02 - yep now the agent can indeed climb
07:04 - through this one but he cannot climb
07:05 - that one
07:06 - so the next one is the step height so
07:08 - over here we've got some real nice steps
07:10 - again these were built automatically
07:12 - using pro builder really useful
07:14 - so if i set it at point one then these
07:17 - steps are bigger than that
07:19 - so the nav mesh does not break so the
07:21 - agent cannot use these steps
07:22 - so just increase them a bit and if there
07:25 - we go now these steps
07:26 - their height is under that one so it can
07:28 - indeed do that so now let's just briefly
07:31 - play around and see all this in action
07:33 - so over here let's just modify the code
07:34 - to only move towards the target position
07:36 - after i press the space bar so in here
07:38 - if just a simple input get key down
07:42 - when i press the spacebar then go
07:44 - towards there otherwise don't
07:46 - just so i can manually tell when to move
07:49 - so like this if i tell the agent to go
07:50 - there so i press space
07:52 - if there you go it does go around that
07:53 - obstacle now if i tell to for example go
07:56 - up there
07:57 - so i press space and there you go as you
08:00 - can see the agent does know how to climb
08:02 - through the ramp
08:03 - and if i go down there he should know
08:05 - how to go down through the stairs
08:07 - just like this and yep it automatically
08:09 - goes down and again for the overhang
08:11 - down there
08:12 - the agent also knows how to do that so
08:14 - you can go through there and go down
08:16 - there
08:17 - but if i try to tell the agent to go
08:18 - through this slope which is way too
08:20 - intense
08:21 - and the agent comes close but it gets
08:24 - there and that's it he can no longer go
08:26 - upwards okay then we have the generated
08:28 - off mesh links
08:30 - so these are connections between parts
08:32 - that are not directly connected
08:34 - so the first one is the drop height so
08:36 - for example if you want the agent to be
08:38 - able to just draw from there down there
08:40 - we can just increase this and look at
08:42 - that now the agent can indeed draw from
08:44 - any of these points on there
08:46 - so if i tell the agent to go up there
08:48 - the agent takes the stairs goes through
08:50 - there
08:50 - okay and now if i drag this and i put it
08:53 - all the way down there
08:54 - let's see what the agent does yep he
08:56 - goes through that link drops down and
08:58 - continues going
08:59 - so those are the various drops and the
09:01 - final one is the jump distance
09:04 - if i set the jump distance to be high
09:06 - enough and i hit on bake
09:07 - if there you go now we've got some links
09:09 - so the agent can jump from here to there
09:11 - and from there there
09:12 - so let's get the agent all the way up
09:14 - there
09:15 - and then move it on the other side press
09:17 - on space and if there you go it is the
09:19 - nav mesh in order to jump
09:20 - up there so this is how you link various
09:22 - nav meshes together
09:24 - and then you've got the advanced tab so
09:26 - these are much more advanced settings
09:28 - first of all the manual unboxing size so
09:31 - under the hood the way that all of this
09:33 - works is unity converts the entire scene
09:35 - into
09:36 - voxels and identifies which ones are
09:37 - wonkable so you can essentially play
09:39 - around this value to get
09:41 - more or less accuracy now if you'll
09:43 - lower the voxel size it will be much
09:45 - more accurate but at the cost of longer
09:47 - bake times
09:48 - and higher memory consumption and if you
09:50 - set it to bigger then becomes
09:52 - less accurate but also more performance
09:54 - but this is for
09:55 - really advanced use case so in most
09:56 - cases you really shouldn't need to touch
09:58 - this at all
09:59 - and then you've got the minimum region
10:01 - area so this the minimum size that
10:03 - region needs to be in order to be
10:05 - walkable
10:06 - so for example right now if i lower the
10:08 - agent radius and i hit on bake
10:10 - you can see that this area here is
10:11 - marked as walkable
10:13 - but if i then increase the minimum
10:15 - region area
10:16 - there you go that one is too small to be
10:18 - considered to be walkable
10:19 - so again this helps on optimization in
10:21 - order to not have to
10:22 - bake areas that are not meant to be
10:24 - walkable and finally you've got the
10:26 - height mesh setting
10:28 - so this impacts things like for example
10:30 - the stairs here
10:31 - which as you can see the nav mesh is
10:32 - really slope so it's not stairs
10:35 - and if you enable the height mesh and
10:37 - hit on bake
10:39 - and over here on the nav mesh display
10:40 - also enable the viewing of the nav mesh
10:43 - if you do that then you can see yep the
10:45 - navmesh perfectly matches the stairs
10:47 - so with the height mesh if i tell the
10:48 - agent to climb through the stairs
10:51 - you can see that instead of sloping he
10:53 - goes up the stairs he's down like that
10:55 - so again this is wrong due to personal
10:57 - performance but it also does have a
10:59 - memory cost in order to create all these
11:01 - separate areas so once again in most
11:02 - cases just having a slope is more than
11:04 - good enough so no need to actually
11:05 - enable
11:06 - over here the height mesh okay so these
11:09 - are all the bake parameters
11:10 - now let's see the agent parameters so
11:12 - here is the default netmesh agent
11:14 - component
11:15 - first one we see is over here the agent
11:17 - type so you can open the agent settings
11:20 - and it opens up the navigation window
11:22 - over here on the agents tab
11:23 - and this is where you can set all kinds
11:25 - of different types of agents
11:27 - so for example if you've got a small
11:29 - humanoid but then a giant orc
11:31 - this is where you would add all the
11:33 - various types so you can set the radius
11:35 - the height and so on
11:36 - then the base offset is essentially the
11:38 - y position
11:39 - over here on the agent so if it's at
11:42 - zero then the agent origin
11:43 - this is what matters for the compilation
11:46 - next up you've got the various steering
11:47 - settings
11:48 - so first the spin this is how fast the
11:50 - agent actually moves
11:52 - then you saw the agent also rotates to
11:54 - face the direction it's moving towards
11:55 - so this is how fast it turns
11:58 - then the acceleration so how fast it
12:00 - accelerates
12:01 - the stopping doesn't so how far from the
12:03 - target position does it start to stop
12:06 - and then auto braking to prevent the
12:07 - agent from overshooting the target then
12:10 - you've got the obstacle avoidance
12:12 - so this is related to avoiding other
12:14 - obstacles
12:15 - they can be fixed obstacles or they can
12:17 - also be other agents
12:19 - so you've got the usual settings radius
12:21 - height then again the quality
12:23 - so naturally higher quality avoidance
12:25 - will look better and avoid collisions
12:27 - more naturally but
12:28 - again at the cost of more expensive
12:30 - performance
12:31 - and then the priority for the agent so
12:32 - for example if you had a hundred npcs
12:35 - walking around
12:35 - and one player character you would
12:37 - obviously make the player have much
12:38 - higher priority in order to have the
12:40 - collisions be much more accurate
12:42 - relative to the player
12:43 - and then the pathfinding settings so the
12:46 - first one does the agent automatically
12:47 - to reverse the nav mesh links
12:49 - so those are the gems that we saw here
12:51 - and drop down there
12:53 - if you want to handle some complex
12:54 - animations or some extra settings when
12:56 - jumping between links then maybe you
12:58 - want to disable this and handle it
12:59 - manually
13:00 - otherwise it will move like we saw then
13:03 - the auto repath which is if you want the
13:05 - agent to
13:06 - constantly collate the path to
13:07 - destination to take into account any
13:09 - moving objects that might block the
13:10 - agent as it's moving
13:12 - and finally the area mask so this is
13:14 - where you set
13:15 - which areas the agent can wank and which
13:17 - ones they cannot
13:18 - so in this case so far we've been using
13:20 - the most basic thing possible we really
13:22 - just have wonka ball and not walkable
13:24 - you can define the areas over here on
13:26 - the navigation window go into areas and
13:28 - you can add all kinds of them
13:30 - so for example you add a new water area
13:33 - then in order to define an area with
13:35 - this particular area type
13:37 - you simply select the object so let's
13:38 - actually make a different one
13:43 - okay so i have this little cube here to
13:45 - mark our area
13:47 - so you just go into object and over here
13:50 - select the object
13:51 - and here you've got the drop down menu
13:53 - where you make what type of area this
13:55 - object belongs to so in this case let's
13:57 - say this one belongs to water
13:59 - and once again just hit on bake and yep
14:01 - now it identifies that this one is some
14:03 - water
14:04 - but you can see especially if we hide
14:06 - the object you can see that it's on a
14:07 - different color
14:08 - so this one is on a different area so
14:11 - you can see the blue is the walkable
14:12 - area
14:13 - perfectly normal and the next one is the
14:15 - water so there you go this one is on a
14:17 - different area
14:18 - then you can for example select the
14:19 - player and over here on the nav mesh
14:21 - agent on the air mask say that the
14:22 - player cannot walk through water
14:24 - and now just like this fight on the
14:25 - agent to go there yep he does not go
14:27 - through there
14:28 - again this area is walkable just not
14:29 - walkabout by this agent
14:31 - but now if i take the agent and i once
14:33 - again say that this one can now walk on
14:35 - water
14:36 - and now move it over there press on
14:37 - space and yep it does now go through
14:39 - that area
14:40 - so you can see how with just these
14:42 - basics you can already do quite a lot
14:43 - with the unity's navamesh system
14:45 - so whenever you need some pathfinding
14:47 - for your games consider the navmesh
14:48 - system
14:49 - alright so this was a lecture from my
14:51 - ultimate unity overview course
14:53 - there's a lot more explaining tons of
14:55 - things like shadowgraph similar
14:56 - definitions
14:57 - pro builder script execution order and
14:59 - so on go ahead and get the full course
15:01 - and learn how to master all the unity
15:03 - tools and features to help you make
15:05 - better games faster
15:06 - alright hope that's useful check out
15:08 - these videos to learn some more
15:10 - thanks to these awesome patreon
15:11 - supporters for making these videos
15:13 - possible
15:13 - thank you for watching and i'll see you
15:15 - next time