00:00 - in this video we're going to create the
00:01 - double jump with the ability to make it
00:03 - a triple also a nice object to reset the
00:06 - jump count in midair so we can cross big
00:08 - gaps let's begin hello and welcome I'm
00:18 - your code monkey and this channel is all
00:20 - about helping you will learn how to make
00:21 - your own games with enough tutorials
00:23 - made by a professional indie game
00:24 - developer so if you find the video
00:26 - helpful consider subscribing ok so this
00:28 - is what we want to create we have our
00:30 - character in here moving left and right
00:31 - and with a simple jump now if I jump off
00:34 - in the middle of the air I can do a nice
00:36 - double jump and the code is extremely
00:39 - simple to use and we can easily upgrade
00:41 - it so right now we have a double jump
00:43 - but just by clicking this button you can
00:45 - see the jump counter in there click it
00:47 - and now we have two air jumps so I can
00:49 - do it to jump double jump in a triple
00:51 - jump ok for example here on the on left
00:54 - side we cannot reach that platform with
00:56 - a simple double jump so we can go do a
00:59 - nice upgrade now we have a nice triple
01:01 - jump and as you can see we have a nice
01:03 - Metroidvania design then here on this
01:06 - side we have a nice or object that
01:08 - object resets our air jump counter so
01:10 - for example we can use it to come across
01:12 - this gap so I do a jump double jump hit
01:15 - the object another jump note double jump
01:17 - and I can now cross this gap so we're
01:19 - going to implement all this and
01:21 - depending on the game you're making it's
01:23 - up to you to decide which parts to keep
01:24 - if all you want is a simple double jump
01:27 - then it's going to be very easy alright
01:29 - let's get to it
01:30 - our starting point is this scene which
01:33 - was created in the video on making a
01:34 - simple jump if you haven't seen that
01:36 - video already then go watch it before
01:38 - this one to see how the basic jump works
01:40 - the own link is in the description here
01:43 - I won't just do a quick overview and
01:45 - then we're going to take this and
01:46 - implement the long jump here is the
01:48 - player code if we scroll down to the
01:51 - update as you can see in here we're
01:53 - doing a simple input test to see if the
01:55 - space key has been pressed and when we
01:58 - press we modify the rigidbody velocity
02:01 - and move them up this jump only works
02:03 - when we press space and the character is
02:05 - grounded then over here we have our
02:08 - movement code this also provides us with
02:10 - full mid-air control so whilst women
02:13 - middle of the air we can also move
02:14 - mutton right so we are simply doing a
02:16 - test for the left and right arrow then
02:19 - we also have a bunch of calls to the
02:20 - playerbase class which is what handles
02:22 - our animations so the stirring scene
02:25 - that I have here is the unity package
02:27 - from the project files from that video
02:28 - that you can download from the website
02:30 - okay now let's get to work on our double
02:33 - job so let's go here into our jump code
02:36 - and in here the first thing we need to
02:38 - change in order to have double jump is
02:40 - to not test for is ground
02:42 - what a double jump really means is that
02:44 - we can jump whilst in midair but only a
02:46 - certain amount of times so let's start
02:48 - off with a very simple boolean let's go
02:51 - up here and we're going to make a
02:53 - private ball for the can double jump and
02:56 - now on the update in here if we are
03:00 - grounded then let's set the can double
03:05 - jump to true and here first we test if
03:09 - we press on the spacebar okay then we
03:12 - test if we are grounded then we can jump
03:14 - and if we are not grounded we test if we
03:18 - can double jump and if we do in the
03:22 - double jump then we set can double jump
03:24 - to false so we can only double jump once
03:27 - okay so we press space if we are
03:29 - grounded we do a normal jump if we are
03:31 - not grounded we test the boolean we jump
03:34 - and then we set it to false so the next
03:36 - time we try this will be false and we
03:37 - fall down and when we fall down into the
03:39 - ground this one runs and we set can
03:42 - double jump back into true let's see so
03:45 - here we are i press space and I can do
03:48 - an arm jump okay now press space twice
03:49 - once twice and if there you go I can do
03:52 - the double jump now try to do a triple
03:54 - jump so we jump we jump and yep it
03:57 - doesn't work until my phone down you
03:59 - know I can do another double check ok
04:02 - great so our placing double check logic
04:04 - is indeed working now here one issue we
04:07 - might have depending on the game design
04:09 - is that if I jump double jump and I hold
04:12 - space when he falls down he does not
04:13 - jump so that means if the player presses
04:16 - jump exactly before he hits the ground
04:19 - he won't jump and that might cause some
04:21 - frustration depending on your game this
04:23 - might be the intent design but
04:25 - let's say we want to have a double jump
04:26 - but also to hold down the jump button
04:28 - and have that work so let's go into our
04:31 - code so here we are testing if get keep
04:34 - down on the space so this one is true
04:36 - for exactly only one frame so if we want
04:39 - them to jump as soon as he touches the
04:41 - floor if the space is being held down
04:43 - then let switches from gate key down to
04:45 - just get key so this won't be true
04:47 - whenever the space key is held down so
04:50 - in here we do our normal jump if it's
04:52 - held down however for the double jump we
04:54 - just want to test when the key is
04:56 - actually pressed so in here we do a
04:58 - different if if we have the gate key
05:02 - down then we test for double jump so if
05:10 - we have space on down and the character
05:12 - touches the ground
05:13 - this one only true the character touches
05:15 - the ground so he starts jumping up there
05:17 - on the next frame the space key is still
05:19 - held down so this one goes true but he's
05:21 - not grounded so we go into in here
05:23 - however this one won't be fall since
05:25 - it's the second frame that the space key
05:27 - is held down so this one goes out and
05:29 - then if we do press space whilst we're
05:31 - in the middle of the air then this one
05:33 - goes true and then we test it we can
05:34 - double jump and we do our double jump
05:36 - okay so this makes our double jump in
05:38 - our normal jump much better for the
05:40 - player so we no longer have frustrated
05:42 - players because they clicked on the
05:44 - space bar right before the character hit
05:46 - the ground so here do a normal jump and
05:48 - if there you go a normal jump now do a
05:50 - jump and home the space bar so jump and
05:53 - I'm still holding and if there you go
05:54 - every time he falls he's jumping ok good
05:57 - so if I jump and I press right before I
05:59 - hit yep there you go he keeps jumping
06:01 - and now for the double jump let's go and
06:04 - press again and yep there you go Chun
06:06 - double jump and I cannot do a triple and
06:08 - if I hold as soon as he falls he jumps
06:11 - again
06:11 - alright so our code is much better much
06:15 - less frustrating alright great so our
06:18 - basic double jump is working correctly
06:20 - however here in the code using a boolean
06:23 - means that we are limited to just one
06:25 - double jump now the pinning on our
06:27 - design we may wish to add an upgrade so
06:29 - that the player can double jump and then
06:31 - unlock a triple jump so instead of a
06:34 - boolean let's define a int for the
06:37 - number of jumps so it's gone with the
06:39 - air jump camp and let's also define a
06:43 - maximum so a prevalent air jump count
06:46 - max we're making this a normal variable
06:49 - so we could easily upgrade from one air
06:51 - jump to two in order to get a triple
06:53 - jump four stars on our awake let's set
06:56 - the jump out max to just one so we have
06:58 - one jump whilst in mid-air so we're here
07:01 - when we are ground instead of setting
07:03 - can double jump to true we set our air
07:05 - jump count to zero so this contains the
07:09 - current number of air jumps that we have
07:11 - made so when we hit the ground we have
07:13 - zero and then in here when we test if
07:16 - can double jump instead of that we test
07:18 - if the air jump count is less than the
07:20 - maximum so that means we can still do a
07:23 - air jump so we do it and instead of
07:25 - setting it to false we just increase it
07:27 - so when we do a double jump this one
07:30 - will increase so it will go from zero to
07:31 - one and then the next time we try one
07:34 - under one is not true so we can no
07:36 - longer do it all right so let's test and
07:38 - see if the normal double jump is still
07:40 - work okay here we are in a normal jump
07:43 - Stoneworks okay let's see double jump
07:44 - jump and that won't jump and yep it's
07:46 - all works let's try a triple one too and
07:49 - yep there's no triple we only have two
07:52 - okay great
07:52 - so now let's change it in order to make
07:55 - a triple so here we are and all we need
07:58 - to do is set the max from one to two and
08:01 - now let's see okay we are do one two and
08:05 - three yep there you go so we now have
08:06 - one two three a triple jump completely
08:09 - working one two three so we can go here
08:12 - jump here one two and A three and yep I
08:15 - made it across this gap okay awesome now
08:18 - it's at a nice particle effect when
08:20 - jumping in mid-air so for that I have
08:23 - this prefab here which has just a simple
08:25 - particle effect there it is so what we
08:28 - need to do is pawn it when we get a
08:29 - double jump so let's go into the code
08:32 - and up here we're going to add another
08:34 - serialize field this will be a private
08:38 - transform for the prefab of the double
08:42 - jump effect
08:46 - okay now back in the editor let's drag
08:50 - our prefab reference in there okay and
08:52 - here on let us go to where we are doing
08:54 - our double jump
08:55 - so in here it's the normal jump and here
08:59 - we have our air jump which might be a
09:02 - double triple or anything else so it's
09:05 - in here that we want to instantiate
09:08 - simply instantiate our double jump
09:10 - effect just like that okay that should
09:16 - do it let's see here we are and the
09:19 - normal jump works let's see a double and
09:21 - if there you go when there's a nice
09:22 - little effect and also appears when you
09:24 - do a triple so double triple and it
09:27 - looks very nice okay awesome
09:29 - now let's make a simple indicator to
09:32 - show how many jumps we can perform so
09:35 - first in here let's make our visual so
09:37 - we make a simple sprite let's make it
09:40 - just a simple bar so I'm going to use
09:42 - the white pixel okay just like that a
09:45 - very simple bar let's give it a name so
09:47 - this won't be the air jump icon and
09:51 - let's make it a prefab now let's go into
09:54 - our player code and in here add another
09:56 - serialised field drag it in the editor
10:02 - just like that okay in here let's make a
10:06 - function to set the max jump count so
10:09 - here let's make a predatory set air jump
10:12 - count max we receive an end for the air
10:17 - jump count max inside we set the
10:21 - variable and then let's build our bars
10:35 - okay so we are instantiating as many air
10:38 - jump icons as we need so now we go here
10:40 - instead of setting the max directly
10:42 - let's use this function okay so now we
10:46 - have all of our icons now we need
10:48 - references so let's go up here make a
10:51 - list of game objects and this will be
10:53 - the air jump icon game object list let's
10:58 - instantiate it and here we add it to the
11:04 - list
11:05 - okay so we have our icons being
11:07 - accentuated and stored in a list now we
11:11 - need this to be able to make them
11:12 - visible or invisible so let's go up here
11:14 - when we use our jump count and let's
11:17 - update our icons so make a function for
11:20 - that in here make a front void call it
11:23 - spend air jump then here let's increase
11:28 - our air jump count and we're going to
11:31 - call this function instead so we
11:34 - increase the air jump count and then
11:36 - let's hide our spent icons okay so we do
11:45 - a cycle starting at zero going until the
11:47 - air jump count and we simply disable or
11:49 - hide the game object on this index so if
11:53 - your gym count is 1 then the first one
11:55 - will be hidden if it is 2 then the first
11:57 - 2 won't be hidden and so on so for
11:59 - resetting the visibility good let's do a
12:01 - function a proudful reset air jump count
12:07 - in which we set the air jump count back
12:11 - in to zero and we set them all as
12:14 - visible
12:19 - okay so now up here instead of setting
12:23 - that directly in there we simply we set
12:25 - it like that and here in order to make
12:28 - sure this doesn't run every frame let's
12:30 - only run this if the air jump count is
12:32 - bigger than zero then we reset it okay
12:35 - so that should do it
12:37 - so first we set the air jump count max
12:39 - we create all the icons and put them in
12:42 - a list then every time we do an air jump
12:44 - we call this function we increase our
12:47 - count and we hide one of the game
12:49 - objects then when we touch the ground
12:51 - again we reset the air jump which sets
12:54 - this one back in to zero and shows all
12:56 - of our icons so let's run the code and
12:59 - see okay here are our icons as you can
13:02 - see we have two air jumps available so
13:05 - now we do a normal jump and doesn't
13:07 - change do a double jump and yep one of
13:10 - them is hidden now do a triple and one
13:12 - is gone and the other one is gone and I
13:14 - can't jump anymore and as soon as I
13:16 - touch the ground everything resets we
13:17 - have two air jumps and yep there you go
13:20 - so now we jump do it double triple fall
13:22 - down double triple and fall down and
13:25 - reset okay awesome so we have as many
13:29 - jumps as we want as well as icons to
13:31 - tell us how many we have now let's do a
13:34 - fun test we're going to make a button so
13:36 - we can upgrade our jump count whilst in
13:39 - the middle of the game so let's go in
13:41 - here go into the canvas let's make a
13:44 - simple UI button
14:01 - ok so I have created a game object
14:04 - called our test UI inside I have a game
14:07 - object with a nice simple button it's
14:09 - using the button UI class which is part
14:11 - of the code monkey Tony's that you can
14:13 - grab for free from in Tacoma Keep Calm
14:15 - and this class is very simple it just
14:17 - allows me to easily create buttons so
14:20 - with this let's make a script so it
14:23 - making you see sharp script this won't
14:25 - be our test UI let's drag it onto the
14:29 - game object and in here we simply do a
14:34 - perfect awake grab the reference to our
14:36 - button and now when we click the button
14:45 - we want to upgrade the maximum number of
14:48 - jumps so let's go into the player and
14:50 - here we're going to need a reference for
14:53 - the player instance so let's just make a
14:55 - simple static field down here and let's
14:59 - make a static function in order to
15:01 - increase our jump count so we have a
15:11 - static function that we can come from
15:13 - anywhere else so it's perfect for our
15:15 - testing so in here when we click the
15:17 - button we call the player dot increase
15:19 - jump count max we call this static
15:22 - function this static function uses the
15:25 - instance and calls the increased jump
15:27 - count max which simply increases the air
15:29 - jump count by the maximum plus one okay
15:32 - so we should have a button to easily
15:34 - upgrade our jump whilst in the middle of
15:36 - our game so now let's go up here and by
15:39 - default let's leave them with zero so we
15:41 - only has a normal jump and then we're
15:43 - going to increase it let's see ok so
15:45 - here we are moving around as you can see
15:47 - there are no icons under so we do not
15:49 - have air jumps and let's see I can jump
15:51 - and yep there's no double jump I can
15:53 - only do normal jumps okay awesome now
15:56 - let's go in here click on the button and
15:58 - if there you go I now have a double jump
16:00 - so I can jump and jump again and there's
16:03 - the indicator now I still don't have
16:05 - enough
16:05 - in order to reach this platform so let's
16:07 - click in and you know I should have a
16:10 - triple jump so I do a first jump second
16:13 - jump triple jump so if I do them all at
16:15 - once and yep it's enough to reach this
16:17 - nice platform so I jump down and here
16:20 - and jump
16:20 - yep there it is so we now have a nice
16:23 - button and as you can see it's extremely
16:24 - simple to do a simple upgrade in order
16:27 - to increase the number of air jumps so
16:29 - with the functionality to operate the
16:31 - jumps you can see how we have some nice
16:33 - Metroidvania design now let's also
16:35 - create a nice object that we can use to
16:38 - reset the jump counter so here in the
16:41 - editor let's make a nice gap here on the
16:44 - right side that is only possible if we
16:46 - reset our double jump in mid-air
16:48 - so in here let's just push this to the
16:50 - side so here we start off with a double
16:53 - jump and now if we go here to the right
16:55 - side I jump and do a double jump and
16:57 - it's not enough to reach that platform
16:59 - so let's make a nice orb that we're
17:02 - going to place here in the middle so
17:04 - that when we hit it we reset our jump
17:06 - counter whilst in mid-air so let's see
17:08 - here in the editor I already have a nice
17:11 - sprite prepared there it is it's just a
17:14 - simple prefab with a nice particle
17:16 - effect behind it so this won't be our
17:18 - orb that won't reset our jump counter so
17:22 - let's go to our place and here in
17:24 - between these two jump platforms we're
17:27 - going to place it in here so the player
17:29 - jumps does a double jump then hits here
17:31 - he resets the air gem counter any jumps
17:34 - and double jumps again okay let's do
17:37 - that okay so in order to make sure that
17:39 - the player collides with this object we
17:41 - need to add what's going here make a
17:43 - circle Collider 2d and let's make this a
17:47 - trigger so it doesn't collide with the
17:49 - physics now let's make a script for it
17:51 - so in here a new c-sharp script this
17:53 - won't be our jump orb and drag it onto
17:57 - our prefab now in here let's do a front
18:00 - void on trigger enter 2d so this
18:03 - function is fired when a collider
18:06 - collide with this game object first
18:08 - thing we do is identify if it is the
18:10 - player so we test first
18:12 - if the collider the game object got get
18:15 - component of type player
18:17 - is not known so let's clean this up so
18:23 - if the play reference is not known then
18:25 - that means the player has collided with
18:27 - this jump order so we need this to make
18:29 - some function in the player that won't
18:31 - do what we want so let's say player
18:33 - let's just call it touch jump or okay
18:38 - let's make that function it's down here
18:40 - let's make it safe only boy touched or
18:44 - now when he touches your let's reset the
18:47 - air jump count so we call this and let's
18:51 - also make him do a auto jump so let's go
18:53 - and see our jump code here it is we
18:56 - modify the jump velocity so we can clean
18:59 - this up so we don't have duplicated code
19:01 - so let's go in here make a private toy
19:04 - jump and we're going to do this and in
19:15 - here we call our jump we spend the air
19:17 - jump and here we do a normal jump and
19:20 - finally down here when we reset the air
19:24 - jump count and we do a jump okay so that
19:28 - you do it so when the player collides
19:30 - with the jump or this code runs if this
19:33 - code identifies that it was indeed the
19:35 - player that collide with him it triggers
19:38 - this function on the player which resets
19:40 - the air jump count and triggers a jump
19:42 - let's see okay here we are everything
19:45 - works the same as normal we have our
19:46 - nice double jump now let's see if we can
19:49 - live with that we jump double jump
19:50 - collide with it and there's a jump
19:52 - another double jump and yep I can now
19:54 - reach this nice platform so I go back
19:56 - double jump
19:57 - touch it there's another jump and double
19:59 - jump and so on so hit it hmm and yep
20:02 - just like that okay awesome now in here
20:07 - the jump rope currently works every time
20:09 - so if I jump double jump hit the orb and
20:11 - here I'm constantly jumping every single
20:14 - time let's make it so that when we do
20:16 - jump on the orb
20:17 - it stays inactive for a certain amount
20:19 - of time here on the jump or let's make a
20:22 - simple timer so a private float let's
20:25 - call this the enable timer
20:28 - we make the appropriate update we reduce
20:34 - the enable timer and if it is under zero
20:40 - then we just set this jump orb into
20:42 - active so let's do here a part volume
20:45 - column jump or active and by default on
20:50 - our private boy in awake we start off as
20:52 - active and in here we only run our timer
20:56 - if we are not active so if we are not we
20:59 - countdown the timer when timer isn't
21:02 - left we set it back into active and when
21:05 - we trigger on the player we test if the
21:08 - jump fork is active and we have a play
21:11 - reference we make an jump then we set
21:13 - the jump orb to inactive then we also
21:17 - set the enable timer at let's say 5
21:19 - seconds
21:20 - so when the player does an auto jump we
21:23 - disable the orb for five seconds after 5
21:25 - seconds counts down the time and we set
21:27 - it back to enable so in order to
21:29 - visualize this let's modify the colon so
21:37 - when it's inactive it won't have the
21:40 - halfa turn to a half and when it's back
21:42 - to active it won't be fully visible so
21:46 - let's see here we are now let's go to
21:48 - our testing place we do a jump a double
21:51 - jump hit down and yet there you go now
21:53 - it's inactive and after 5 seconds you
21:56 - should see the alphago backed up and yep
21:57 - it's active again now we hit it any of
22:00 - their ego exactly so now we can no
22:02 - longer constantly jump on top of it
22:04 - since it only becomes active for a
22:06 - little while so in here do a jump double
22:08 - jump hit it it jumps that won't jump and
22:11 - I can now cross the huge gap awesome ok
22:14 - as one final thing let's just change the
22:16 - animation whilst we're doing our double
22:17 - jumps so here on the employer animations
22:20 - we are simply testing if the character
22:22 - is grounded if so we check the velocity
22:25 - if it's zero then we are playing the
22:26 - idle animation if not we are playing the
22:28 - move animation and when we are not
22:30 - ground we are playing the jump animation
22:32 - the player base also has a different
22:34 - function for a roll animation so that's
22:36 - what we're going to use however we only
22:39 - want to play that animation
22:40 - when it's on the double John so on the
22:42 - first jump we wanted to keep this one so
22:45 - for that we can similarly test compare
22:47 - the air jump count to the air jump count
22:49 - max so if the air jump count is still
22:56 - zero that means we did not knew any
22:59 - double jumps so in here we play the
23:02 - normal jump and if not we play the role
23:07 - animation alright that should look good
23:12 - let's see okay here we are do a jump
23:15 - it's not the same animation and that
23:17 - will jump and there you go on the second
23:19 - one we've got a very nice new animation
23:22 - going here jump hit it and double jump
23:24 - and yep
23:25 - everything looks quite nice hit jump and
23:28 - that one was disabled and didn't work
23:30 - and again we can still go here into the
23:33 - on left side pass this jump do this jump
23:35 - and now can we go in there and nope we
23:37 - cannot reach it so we click the button
23:39 - upgrade our double jump into a triple
23:42 - jump and now we can indeed reach this
23:44 - nice platform so here is our fully
23:50 - creative scene we start off with just a
23:51 - simple jump then we add the ability to
23:53 - do a double jump then we add the ability
23:56 - to make that internet integer so we can
23:58 - make any number of jumps so we can do a
23:59 - double triple or as many as we want then
24:03 - we created a nice special orb which we
24:06 - can touch in midair in order to reset
24:07 - our air jumps which provides excellent
24:09 - design for making different levels so we
24:13 - can go here jump it jump again and again
24:16 - the home code is extremely simple to use
24:18 - so we can make a nice upgrade system and
24:21 - click it and now we have a bunch of nice
24:23 - air jumps and we can constantly jump and
24:26 - everything works nice and easy and works
24:28 - great as always you can download the
24:30 - project files in utilities from unity
24:32 - code monkey comm if you liked the video
24:34 - subscribe the channel for more unity
24:36 - tutorials post any questions you have in
24:38 - the comments and I'll do my best answer
24:40 - alright see you next time
24:45 - [Music]