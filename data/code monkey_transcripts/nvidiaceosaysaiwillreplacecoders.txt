00:00 - nid CEO predicts the death of coding
00:02 - Jensen Wong says AI won't do the work so
00:04 - kids don't need to learn programming so
00:05 - I first saw this a few weeks ago and I
00:07 - was definitely quite surprised Jensen is
00:09 - an extremely intelligent man extremely
00:10 - successful so I'm definitely inclined to
00:12 - listen to what he has to say but me
00:14 - being a programmer I'm pretty confident
00:15 - that programming is not going anywhere
00:17 - so whenever I see things like this death
00:18 - of coding whenever I see that usually I
00:20 - don't really pay much attention but when
00:22 - it comes from the Nvidia CEO I'm
00:23 - definitely curious to see why does he
00:24 - think that way now obviously I am biased
00:27 - I am a programmer I love programming
00:28 - this channel is all about programming in
00:30 - fact just the other week I launched my
00:32 - latest course all about learning how to
00:33 - program in C it's really awesome if you
00:35 - want to learn definitely check it with
00:36 - the link in the description but on the
00:38 - other hand the Nvidia CEO is definitely
00:39 - also biased in this case towards AI
00:42 - their stock price has massively run up
00:44 - in the past few years thanks to the AI
00:45 - hype but anyways let's see exactly why
00:47 - does he think this way what exactly did
00:48 - he say in this interview so for some
00:50 - context the questioner asked about
00:52 - education so given the massive
00:54 - improvements of AI what should people
00:55 - learn nowadays what should they teach
00:56 - their kids so let's see what he says I'm
00:59 - going to say something and it it's it's
01:01 - going to sound completely
01:03 - opposite um of what people
01:05 - feel you you you probably recall uh over
01:10 - the course of the last 10 years 15 years
01:12 - um almost everybody who sits on a stage
01:15 - like this would tell you it is vital
01:17 - that your children learn computer
01:20 - science um everybody should learn how to
01:23 - program and in fact it's almost exactly
01:25 - the opposite it is our job to create
01:28 - Computing technology such that nobody
01:31 - has to
01:32 - program and that the programming
01:34 - language is
01:36 - human everybody in the world is now a
01:39 - programmer this is the miracle so that's
01:42 - what he said in this interview and I can
01:44 - definitely see what he's trying to say
01:45 - here basically thanks to all these AIS
01:47 - and with the power of basically taking
01:49 - natural language and converting it into
01:51 - programming code based on that
01:52 - technically some people don't need to
01:54 - become programmers in order to actually
01:55 - be able to build some programs that can
01:57 - help them do all kinds of things and
01:59 - that is definitely true I do think AI
02:00 - will have a very good very positive
02:02 - impact on the kinds of people who have a
02:04 - lot of knowledge but don't really know
02:05 - how to transform that knowledge into an
02:07 - actual program that can actually help
02:08 - them do something so for those people I
02:11 - do think AI in general will be very
02:12 - helpful but the other end which is no
02:15 - one needs to learn how to program that
02:17 - part I really disagree based on one
02:18 - simple thing and that simple thing is
02:20 - just exactness basically when you write
02:22 - a program you want that program to do
02:23 - exactly what you wanted to do and when
02:25 - you're trying to make something exact
02:27 - English is really not a very good
02:28 - language there's a lot of nuance and a
02:30 - lot of misunderstandings that come from
02:31 - the fact that the language simply isn't
02:32 - exact enough and that is really what a
02:34 - programming language is all about it's
02:35 - about telling the instructions of
02:37 - specifically what exactly you're trying
02:38 - to do now you can just go into chat GPT
02:41 - and ask it to build something simple
02:42 - like something like a health system you
02:44 - can do that and it won't probably give
02:45 - you code that probably does work but at
02:47 - the same time it probably won't do
02:48 - exactly what you're trying to do since
02:50 - English is limited the program cannot
02:52 - possibly know exactly what you're trying
02:53 - to implement it only takes the unlimited
02:55 - information that you give it based on
02:56 - natural language and turns that into
02:58 - some code in order to to get something
03:00 - that actually works that actually has
03:01 - what you want to do assuming you're
03:02 - trying to do anything remotely complex
03:05 - if so then you're going to need to keep
03:06 - talking to it continue asking questions
03:08 - continue developing more and more code
03:10 - and at that point I feel like you are
03:11 - basically doing exactly programming
03:13 - except you're doing it a very very
03:15 - inefficient language it's like for
03:17 - example there are all kinds of languages
03:19 - you've got JavaScript C there's go Russ
03:21 - C++ maybe even assembly so technically
03:24 - you can build pretty much anything you
03:25 - want using just assem that is possible
03:27 - you can build anything you can build the
03:29 - game you can build websites using just
03:30 - assembly but if you do it that is going
03:32 - to be a terrible language because you're
03:33 - going to have to make so many things
03:35 - that are really just going to make you
03:36 - much less efficient that you could be
03:38 - much less efficient than you could be if
03:40 - you were using a proper language so can
03:42 - you build all kinds of things using
03:44 - natural language and these super awesome
03:45 - AIS the answer is probably yes but you
03:48 - are going to have to talk to the AI so
03:50 - many times in order to get exactly what
03:51 - you want that at that point I feel that
03:53 - it's really just a very inefficient
03:54 - language and Al specifically what he
03:56 - said on computer science sits on a stage
03:58 - like this would tell you it is vital
04:00 - that your children learn computer
04:02 - science on this one I would also make a
04:05 - very big distinction between programming
04:07 - meaning just writing code and computer
04:09 - science in general now for me the way I
04:11 - see it programming or computer science
04:13 - more in general is really more about
04:14 - problem solving than it is about writing
04:16 - exteral code and I can confidently say
04:18 - that those two are quite very different
04:20 - things for example I've been writing
04:21 - code since I was 10 years old so for
04:23 - over 25 years I've used maybe a dozen
04:26 - different languages but at the same time
04:27 - if you were to give me a completely new
04:29 - language that I had never seen before in
04:30 - my life I'm pretty sure I could become
04:32 - pretty proficient at that language
04:33 - within about a week simply based on the
04:35 - fact that even if I didn't know anything
04:37 - about that particular language that
04:38 - particular Syntax for that language even
04:40 - if I didn't know that I do still have a
04:42 - ton of knowledge based on General
04:43 - problem solving so yeah I might indeed
04:45 - end up replacing super basic programs
04:47 - that pretty much just take code and just
04:48 - write code and do nothing else but when
04:50 - it comes to learning how to solve
04:51 - problems I feel that it's still going to
04:53 - be a very valuable seal for a very long
04:55 - time now one great example in game
04:57 - development and specifically game design
04:58 - is what is called the door problem so
05:00 - basically the premise is you are making
05:02 - a game and you want to implement some
05:03 - kind of door in your game now in
05:05 - technical terms that is actually very
05:06 - easy you can just go into Unity just
05:08 - make a hinge joint just have two cubes
05:10 - and very much just like that you have a
05:12 - door that if you push it it actually
05:13 - opens so the technical aspect behind how
05:15 - to make a door nowadays is super simple
05:18 - this would be the equivalent of just
05:19 - going into chat GPT and asking it how do
05:21 - I make a door system a heal system or
05:22 - something like that and while this
05:24 - technically does work it technically
05:25 - does fit the technical definition of
05:27 - what exactly is a door at the same time
05:29 - just making a door just making something
05:30 - that swings around that is probably not
05:32 - enough for whatever you're trying to
05:33 - build so when it comes to the door
05:34 - problem building a door seems like
05:36 - something super simple but at the same
05:37 - time you have to answer all these
05:38 - questions like for example are there
05:40 - doors in the game can the player open
05:42 - the doors can the player open every door
05:44 - or are some doors just for decoration
05:46 - how does the player know difference
05:47 - between those two types are there some
05:49 - doors you can open and some that you
05:50 - can't are the doors that you can open
05:52 - filled up with trash in the front or do
05:55 - you simply just remove the door knobs
05:56 - and assume that's correct can doors be
05:58 - locked or unlocked how does a player
06:00 - tell what is locked and what is unlocked
06:02 - how does a player know how to unlock a
06:03 - door do they need a key to hack a
06:05 - console Sol puzzle and so on so as you
06:06 - can see all kinds of question that you
06:08 - need to ask yourself in order to
06:10 - actually come to the conclusion of the
06:12 - original question which is I want to
06:13 - have a door in my game these are all the
06:15 - implementation details that in this case
06:17 - are more applicable to game design but
06:19 - the exact same thing is done when it
06:20 - comes to programming you want to make a
06:21 - health system what specifically does the
06:23 - health system need to do if you just
06:24 - need an in value in order to sort of the
06:26 - health then sure anyone with any
06:27 - knowledge of English can just ask chg PT
06:29 - in order to make it but in most case
06:31 - you're going to be doing something a lot
06:32 - more complex than that and at that point
06:33 - you do need some kind of problem solving
06:35 - skill in order to be able to ask the
06:36 - right questions to get the right result
06:38 - and like I said at that point I feel
06:39 - that if you're using English that is
06:41 - really just a very ineffective language
06:43 - ineffective way of actually achieving
06:44 - your goal of making a health system so
06:46 - in general my takeway and AI is pretty
06:48 - simple I think the future is going to be
06:50 - programmers plus AI as opposed to AI
06:52 - replacing programmers I think if you
06:53 - don't know anything AI is a great tool
06:55 - in order to help you learn you can
06:56 - basically just ask it questions and get
06:58 - some very good feedback and on the other
07:00 - hand since yeah is really so smart you
07:01 - can give it a specific question a
07:03 - specific very high level very complex
07:05 - question and it will probably give you a
07:07 - very good answer that at least helps
07:08 - point you in the right direction so
07:09 - that's really how I feel about Ai and
07:11 - programming in general my basic feeling
07:13 - is that English is not a good enough
07:14 - language in order to become some kind of
07:16 - programming language there's way too
07:18 - much Nuance way too many potential for
07:19 - misunderstandings so I don't think
07:21 - English will replace programming anytime
07:23 - soon but at the same time his last point
07:25 - is actually very good this is a
07:27 - tremendous time for uh all of you to
07:31 - realize that the technology divide has
07:33 - been closed the countries the people
07:35 - that understand how to solve a domain
07:39 - problem in digital biology or in
07:42 - education of young people or in
07:45 - manufacturing or in farming those people
07:47 - who understand domain
07:50 - expertise now can utilize technology
07:54 - that is readily available to you you now
07:56 - have a computer that will do what you
07:58 - tell it to do to help automate your work
08:01 - to amplify your productivity to make you
08:03 - more efficient it is vital that we
08:06 - upskill everyone and the upscaling
08:09 - process I I believe will be delightful
08:12 - surprising um to realize that this
08:14 - computer can perform all these things
08:16 - that you're instructing it to do and
08:17 - doing it so easily I think this is
08:19 - actually a really great Point basically
08:21 - people who have a ton of expertise on
08:23 - some specific Fields but they don't
08:25 - necessarily have any programming
08:26 - expertise thanks to using natural
08:28 - language those people people should
08:29 - hopefully be able to get some kind of
08:31 - prototype to some kind of idea they
08:33 - should be able to get that working using
08:35 - English as a basic language in order to
08:36 - build a basic prototype and that should
08:38 - hopefully lead to validating that idea
08:40 - in order to make sure okay on this
08:41 - particular field this expert knows how
08:43 - to do this thing and this does work this
08:45 - prototype is functional and then take
08:46 - that prototype and bring it to some
08:48 - professional software developers who
08:49 - will take that prototype and make an
08:50 - excellent product out of it so in terms
08:52 - of testing ideas for people who have no
08:54 - idea what is programming I do think that
08:56 - is an extremely valuable extremely
08:57 - positive thing to come out of all this
08:59 - so that's what I thought when I saw all
09:00 - of these headlines a few weeks ago I'm
09:02 - definitely bias towards programming I
09:04 - love programming I love writing code I
09:05 - definitely intend to continue writing
09:07 - code for the rest of my life but I'm
09:08 - definitely curious to hear what you all
09:10 - think so as you look at all these AI
09:12 - tools what do you think is going to
09:13 - happen in the future