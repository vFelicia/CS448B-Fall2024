00:00 - hello and welcome i'm your code monkey
00:02 - now in the last video i did my response
00:04 - to a video that suggested that you
00:05 - shouldn't use unity in there i respond
00:08 - to each argument one by one by
00:09 - clarifying a lot of misconceptions
00:11 - definitely go watch that one if you
00:13 - haven't seen it and in there i also
00:15 - mentioned that i would make another
00:16 - video with some valid things that i
00:17 - think unity couldn't even improve so
00:19 - this is it that other video was already
00:21 - pretty long so i didn't want to make it
00:23 - super long or have to cut down on this
00:24 - one so that's why i made them separate
00:26 - and actually because of that last video
00:28 - in the end i will also mention two bonus
00:30 - things that i saw in the comments from
00:32 - that video alright so here are seven
00:34 - valid issues with unity that i'd like to
00:35 - see them improve starting off with a
00:37 - really simple one the version names i
00:39 - think the way they have the three
00:41 - version types makes perfect sense that
00:43 - being the preview tech in lts however
00:45 - the part that i think they should change
00:47 - is just increase the year by one right
00:50 - now we are in 2021 however the
00:51 - recommended version is the lts version
00:53 - which is version 2020. naturally that
00:56 - might lead people to think that the lts
00:58 - version is already outdated and that
00:59 - version 2021 is the current version so i
01:02 - think what they should do is just
01:04 - increase it by one so nowadays in 2021
01:06 - we should be using the 2021 lts and the
01:09 - preview version should instead be 2022
01:11 - that would make it much more clear that
01:13 - the tech and preview versions are the
01:14 - future and not the ones that you should
01:16 - be using in the current year again all
01:18 - i'm talking about is just a name change
01:20 - alone keep how they work exactly the
01:22 - same the same categories just increase
01:24 - the number by one i think that one tiny
01:26 - change alone would greatly help in
01:28 - avoiding any potential version confusion
01:30 - the next thing that i think they should
01:32 - improve is something that actually they
01:34 - have already improved in these past two
01:35 - years but i thought i should mention it
01:37 - that being just don't highlight preview
01:39 - or experiment on things as much usually
01:42 - during the unity keynotes it's all about
01:44 - highlighting exciting things in the
01:45 - future and while it's great to hear
01:47 - about exciting new things coming up in
01:49 - the future it doesn't lead to people
01:50 - saying the engine is in constant preview
01:52 - which really just isn't true that one is
01:54 - just a false perception caused by
01:56 - talking more about the future than what
01:57 - currently exists right now pretty much
01:59 - no one gets excited about hearing about
02:01 - normal 2d objects or basic tooting
02:03 - lights or regular animations even though
02:05 - those quote unquote basic tools really
02:08 - they're more than enough to allow games
02:09 - like hollow knight and valheim to exist
02:12 - now for me i love hearing about future
02:14 - things and where the engine is headed
02:15 - but i can see how it does lead to a lot
02:17 - of people seeing the engine in a
02:18 - negative way if you're constantly only
02:20 - talking about things that are in preview
02:22 - that leads to people thinking that
02:23 - that's all there is but like i said this
02:25 - one has already been massively improved
02:27 - in the past two years in 2019 the united
02:30 - thoughts were all about tons of preview
02:31 - packages and tools
02:33 - but since then unity has definitely
02:35 - focused more on highlighting things that
02:36 - are already out and verified and i think
02:38 - that's a very good thing although these
02:40 - past few years were also very different
02:42 - because of the whole worldwide thing but
02:44 - hopefully it was intentional so next
02:46 - year when hopefully the next unite
02:48 - conference happens hopefully they won't
02:51 - continue doing that and not overly
02:52 - highlight preview packages another thing
02:55 - that i think they should improve is in
02:56 - communicating all the things that they
02:58 - already do
02:59 - there's tons of super useful tools and
03:01 - features that they have already built
03:03 - but you probably don't know about
03:05 - specifically there's a bunch of them
03:06 - that only exist as github projects and
03:09 - if you don't know about them then you
03:10 - pretty much will never find them for
03:12 - example the nevmesh what comes with
03:14 - unity is a great starting point but also
03:16 - has tons of limitations it's why i
03:18 - recommend the astar pathfinding project
03:20 - so much it's extremely adaptable and
03:22 - very performant much more capable than
03:24 - the standard navmesh
03:25 - but did you also know that unity also
03:28 - has a navmesh exorcist project on github
03:30 - adding tons more features
03:32 - chances are you didn't know about that
03:34 - there's also a 2d exercise package with
03:36 - tons more useful functionality for any
03:38 - 2d games
03:40 - there's a ton of samples including
03:41 - complete projects like the multiplayer
03:43 - fps sample or the boat attack demo the
03:46 - issue is most people won't bother to
03:48 - browse their github which is massive and
03:50 - full of interesting things so most
03:51 - people just don't know that all of this
03:53 - exists another one that is a very well
03:55 - built and very useful tool is the photo
03:57 - mode it's really excellent and something
03:59 - that nowadays players love so adding it
04:01 - to your game will be a great plus but
04:03 - again almost no one knows about it
04:05 - there's no mention of it in the engine
04:07 - at all there was just one blog post and
04:09 - one video on the official channel and
04:11 - that's it so if you missed those then
04:12 - you have no idea that this exists yet
04:14 - another excellent one is the starter
04:16 - assets you have two controllers one in
04:18 - first person and one in third person
04:20 - both are excellently well made i
04:22 - showcase them in a video and even use
04:24 - the third person asset as a base for my
04:26 - third person shooter if you don't browse
04:28 - the asset store then chances are you
04:30 - have no idea that those excellent
04:32 - unity-made assets exist
04:34 - same thing for all the other assets on
04:35 - the store there's lots of awesome stuff
04:37 - all of it is free and chances are most
04:39 - people don't know about it so yeah i
04:41 - would say they definitely need to find
04:43 - some way of showing all those things to
04:44 - people using the engine maybe add
04:46 - another tab on unt hub or maybe a splash
04:49 - screen when you open the engine showing
04:51 - a random selection of those projects so
04:53 - i'm not entirely sure on the solution
04:54 - but i think they definitely should
04:56 - surface those projects a lot more and up
04:58 - next something that has been a pretty
05:00 - big negative for unity for quite a while
05:02 - is just no native multiplayer support
05:04 - there's always been a bunch of tools you
05:06 - can use which is great but the engine
05:08 - itself should definitely support
05:09 - natively and again this one is also
05:11 - something they are actively solving they
05:13 - acquired the ml api a couple of months
05:16 - ago and they're working on it under the
05:17 - new name netcode4gameobjects
05:19 - it's still in preview or rather in
05:21 - pre-release so while this one is not yet
05:24 - production ready it does seem like this
05:25 - issue should hopefully be solved in the
05:27 - coming months when it does i'll
05:29 - definitely be covering it in the video i
05:31 - haven't touched unity networking since a
05:33 - deprecated unit all those years ago and
05:35 - speaking of that one pretty bad thing
05:37 - they did in the past was essentially
05:39 - deprecating or seizing support for
05:41 - something before a newer tool was
05:42 - available for example like i said
05:44 - networking the official unit stopped
05:46 - being supported many many years ago and
05:48 - only now are we finally seeing an
05:50 - official multiplayer tool with the ml
05:52 - api
05:53 - another example was the render pipelines
05:56 - i think introducing urp and agrp is a
05:58 - very good thing but pushing those so
06:00 - hard before they were at parity with the
06:02 - built-in render pipeline doing that i
06:04 - think that wasn't good so that's another
06:06 - issue but thankfully this one seems to
06:08 - have been mostly solved as a recently so
06:10 - i hope they keep doing it this way for
06:13 - example the new input system is awesome
06:15 - and better than the legacy input manager
06:17 - in every way
06:18 - but it's also not being forced upon you
06:20 - you are still welcome to use the old
06:22 - input manager and one thing that i love
06:24 - is that you can actually use both at
06:26 - once
06:26 - so this one is great definitely give
06:28 - people more options instead of taking
06:30 - things before providing a suitable
06:32 - replacement then something which is or
06:34 - isn't an issue depending on how you look
06:36 - at it it's how ecs has been taking ages
06:39 - i say it is or isn't an issue just
06:42 - because i understand engineering is hard
06:44 - it's very difficult to predict what
06:45 - issues may occur especially with such a
06:48 - massive architecture shift so personally
06:50 - i do understand that ecs is more complex
06:52 - than initially expected and i understand
06:54 - that it's taking longer than usual
06:56 - but at the same time i also understand
06:58 - how people can be upset with that since
07:00 - three years ago all the talks were about
07:02 - how ecs is the future and it's so much
07:04 - better in so many scenarios and yet here
07:07 - we are three years later and it's not
07:08 - yet ready for production so i can see
07:10 - both sides on that issue
07:12 - personally i really like how the future
07:14 - of unity looks like but i'm also very
07:16 - happy with the current game object
07:18 - workflow so while i'm excited for what
07:20 - the feature might bring i'm also okay
07:22 - with waiting for it
07:23 - so with regards to this one i would say
07:25 - more communication but again i can also
07:27 - see how that's difficult if they have no
07:29 - idea when it might be done either way
07:32 - hopefully next year there will be some
07:33 - new information the last public ecs
07:36 - build was over one year ago
07:38 - also by the way over here let me clarify
07:40 - one important misconception that a lot
07:41 - of people get wrong there's a difference
07:43 - between dots and ecs i hear a lot of
07:46 - people complain that dots is still in
07:47 - preview which just isn't accurate dots
07:50 - is composed of the entity component
07:51 - system or ecs the burst compiler and the
07:54 - job system
07:55 - of those three the only one still in
07:57 - preview is ecs the burst compiler and
07:59 - the job system have been stable and
08:01 - verified for quite a while so keep in
08:03 - mind whenever you hear someone say that
08:05 - dots is stuck in preview that's just not
08:07 - true ecs is in preview but the job
08:09 - system in burst those are already done
08:11 - and actually on that note here's a quick
08:13 - news flash that just happened literally
08:15 - as i was editing this video
08:17 - there's an update on the ecs package the
08:19 - huge upgrade to version 0.5 is coming
08:22 - out early next year and then version 1.0
08:24 - is planned for the 22 lts cycle so just
08:27 - like i hoped it seems there won't be
08:29 - lots of exciting developments related to
08:31 - ecs next year the next issue is how
08:33 - there should be some more clarity for
08:35 - how features relate to one another
08:38 - for example i've seen people talk about
08:40 - how they don't know whether they should
08:42 - use the vfx graph or the particle system
08:44 - whether they should use the input
08:46 - manager or the input system whether ecs
08:48 - will replace game objects text versus
08:51 - text mesh pro unity ui versus ui
08:53 - elements whether urp and agrp replace
08:56 - the built-in render pipeline or not
08:58 - should you use unity collaborate or plus
09:00 - xm
09:01 - there's a lot of confusion about a lot
09:03 - of those things now some of those are
09:05 - upgrades some are sight grades and some
09:07 - really aren't related at all
09:09 - now i'm not sure exactly how or where
09:11 - they could clarify the relationship
09:13 - between these films but there certainly
09:14 - is a lot of confusion on it there's even
09:17 - a popular meme about it in the unt
09:18 - subreddit and all the comments agree
09:20 - that this is definitely an issue
09:22 - so while i'm here let me answer these
09:24 - ones for the vfx graph and the particle
09:26 - system these are essentially side grades
09:29 - the vfx graph runs on the gpu and the
09:31 - particle system runs on the cpu so the
09:34 - vfx graph is great for massive amounts
09:36 - of particles but the particle system is
09:38 - still better for doing things related to
09:40 - collisions then for the input manager
09:42 - and input system the input system is
09:45 - pretty much a phone upgrade although the
09:47 - input manager is not being deprecated
09:50 - the input system does everything the
09:51 - input manager can do but do it better
09:53 - but again if your game is using the in
09:55 - legacy input manager then you don't have
09:57 - to worry it won't be removed next up
09:59 - whether ecs will replace game objects i
10:02 - saw this confusion quite a lot back when
10:04 - unity was constantly talking about dots
10:06 - like i said first of all remember dots
10:08 - is not ecs
10:09 - so on that the burst compiler and job
10:11 - system have nothing to do with game
10:13 - objects they work with any kind of
10:15 - object or data
10:16 - but then ecs also has nothing to do with
10:18 - game objects it is not an upgrade or
10:20 - even a side grade it's just another way
10:22 - of working that might or might not be
10:24 - suitable for whatever project you're
10:26 - currently trying to solve so on this one
10:28 - nope game objects are not going to be
10:30 - deprecated and ecs is not a replacement
10:33 - for it
10:34 - then on text versus text mesh pro this
10:36 - one is a straight upgrade nowadays text
10:39 - pretty much only exists for legacy
10:41 - reasons it's just there so your own
10:43 - projects don't break on new versions but
10:46 - text mesh pro is better in every single
10:48 - way and it's what you should be using it
10:49 - should replace both the world text mesh
10:51 - as well as the legacy ui text then on
10:54 - unity ui versus ui elements this one is
10:57 - a tricky one i haven't quite caught up
10:59 - to date with the development of ui
11:01 - elements this one is sort of a side
11:03 - grade it's a different way of building
11:05 - your ui
11:06 - but also from what i know unity is
11:08 - working hard to make it a better way of
11:10 - building your ui so in the future this
11:12 - might become a straight upgrade to unt
11:14 - ui
11:14 - but again unt ui is not being deprecated
11:17 - so keep using that without fear then
11:19 - whether urp and agrp replace the render
11:21 - pipeline for a while urp and hrp were
11:24 - missing quite a lot of features but by
11:26 - now i believe they have achieved parity
11:28 - so nowadays unless you have a very
11:30 - specific reason to use the legacy
11:32 - built-in rather pipeline nowadays yep
11:34 - you should be using either urp or agrp
11:37 - it should be a straight upgrade and
11:39 - finally on unity collaborate versus
11:41 - plastic sem i'm really not very familiar
11:43 - with these two so i'm not sure how they
11:45 - relate
11:46 - they bought plastic sem after unity
11:48 - collaborate already existed so maybe as
11:50 - of right now they are side grades but
11:52 - maybe in the future one of those two may
11:54 - come out on top again i'm not too
11:55 - familiar so not entirely sure on this
11:57 - one so yes all of these tools and how
11:59 - they relate to each other that can
12:01 - definitely be very confusing
12:03 - personally i know all of this because my
12:05 - job to keep track of all of it but for
12:06 - the average user yep definitely very
12:08 - confusing so i think this one is a
12:11 - potentially very big issue but honestly
12:13 - i'm not too sure how to fix it maybe
12:15 - when you add a particle system or a vfx
12:17 - graph component maybe there's a quick
12:18 - message to explain the difference
12:21 - i'm really not sure but this one is
12:22 - definitely an issue and hopefully they
12:24 - won't find a good solution okay so for
12:26 - the two bonus things that i saw
12:27 - mentioned in the previous video's
12:29 - comments
12:30 - first one is on the astastor and render
12:32 - pipelines i would say don't highlight
12:34 - assets that don't work with the new
12:36 - render pipelines the aztecs or has been
12:38 - around for a very long time so naturally
12:40 - there's tons of really awesome stuff
12:42 - that came out before the render
12:43 - pipelines were a thing
12:45 - and for most of those that's actually
12:46 - not an issue since the render pipelines
12:48 - have that built-in automatic converter
12:50 - however there are quite a lot of assets
12:52 - that use custom shaders and for those
12:54 - there's no automatic conversion process
12:56 - so either you convert them yourself if
12:58 - you're a shader programmer or you really
13:00 - can't use them now my suggestion isn't
13:02 - that they should remove those assets i
13:04 - would say keep them there but don't
13:06 - highlight them if they don't
13:08 - automatically work with new render
13:09 - pipelines for example a while ago there
13:11 - were a bunch of ent mega bundles those
13:13 - are always great heavy discount on tons
13:15 - of assets but a lot of the ads included
13:17 - in those bundles are very old and i
13:19 - remember quite a lot of frustration at
13:21 - seeing some assets that look really
13:22 - great but then seeing urp is not
13:24 - supported for example i was just this
13:26 - week looking for a really nice
13:28 - environment for an upcoming video i
13:30 - browsed my assets and saw this really
13:32 - awesome pack that i picked up in one of
13:33 - those bundles and upon opening it i saw
13:36 - that the asset uses a bunch of custom
13:38 - shaders which were not automatically
13:39 - upgraded so even though the asset looks
13:41 - really awesome in the videos and
13:43 - screenshots sadly i cannot use it so yes
13:45 - i would say keep those assets on the
13:47 - store but when choosing which ones to
13:49 - highlight in future sales or bundles
13:51 - make sure you only highlight things that
13:52 - support the render pipelines and for the
13:55 - second bonus point that i saw mentioned
13:56 - in the comments it is simply hide the
13:59 - old legacy features by default for
14:01 - example text mesh pro is better than the
14:03 - legacy text mesh and the ui text in
14:05 - every way
14:06 - so because of that there's really no
14:08 - reason to have them waste space on that
14:10 - context menu it's great that the engine
14:12 - keeps supporting legacy features so i
14:13 - don't want them removed but they should
14:15 - definitely be hidden by default just to
14:17 - avoid some confusion just make it
14:19 - example like the preview packages on the
14:21 - package manager add some sort of setting
14:23 - in the preferences where you must enable
14:25 - if you want to see the legacy text mesh
14:27 - or the legacy ui text and perhaps even
14:29 - the same thing for the legacy animation
14:31 - component and the legacy animation
14:32 - system so keep those features but hide
14:35 - them by default alright so those are a
14:37 - bunch of things that i think are vellum
14:39 - issues that they could improve and some
14:41 - other things that they've already
14:42 - improved and i hope they keep it up in
14:44 - the future now just in case someone from
14:46 - unity ends up seeing this video go ahead
14:48 - and post in the comments what issues you
14:50 - have with the engine and how you think
14:51 - they could improve it
14:52 - but also do make sure you watch my
14:54 - previous video so you don't end up
14:55 - mentioning one of the non-issues that i
14:57 - talked about in there
14:59 - either way the future looks bright so i
15:00 - hope unity keeps getting better and
15:02 - better alright hope that's useful check
15:04 - out these videos to learn some more
15:06 - thanks to these awesome patreon
15:07 - supporters for making these videos
15:09 - possible thank you for watching and i'll
15:11 - see you next time
15:16 - [Music]