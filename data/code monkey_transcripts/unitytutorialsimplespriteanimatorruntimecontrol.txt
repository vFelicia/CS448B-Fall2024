00:00 - hello and welcome I'm your code monkey
00:02 - and in this video we're going to add
00:03 - more functionality to our sprite
00:04 - animator to be able to modify the
00:06 - sprites during runtime let's get started
00:12 - okay let's continue our sprite animator
00:15 - so far we have made it play the
00:16 - animation based on sprite frames enable
00:19 - and disable looping while firing events
00:21 - now let's add the ability to modify our
00:24 - sprites during runtime so far we've just
00:27 - been using this basic walk animation now
00:29 - I want to be able to switch between walk
00:31 - and idle animation we need a function to
00:33 - set our animation frames so let's go
00:36 - into our code here and down here let's
00:39 - add a public void play animation and
00:44 - we're going to receive an array of
00:46 - sprites and call it frame array now
00:50 - inside we're going to set our member
00:52 - frame array that we set up here and
00:55 - we're going to set our current frame to
00:58 - zero and display the sprite at frame 0
01:02 - the same time we set the timeline
01:06 - okay so in my game handler here let's
01:09 - add a private sprite array for my
01:13 - eyeball animation frame array and
01:18 - another private sprite array for my wall
01:21 - animation frame array
01:23 - make them both sterilized field so we
01:26 - can set them in the editor and on my
01:31 - start let's test swapping animations
01:33 - every second so I'm going to use the
01:36 - function periodic from the using code
01:40 - monkey Newton's which is always you can
01:43 - grab for free from unity code monkey
01:45 - calm this will trigger a function every
01:48 - certain amount of time so in this case
01:50 - every second let's create a new function
01:53 - and this function will essentially swap
01:57 - out the frames let's set a ball call it
02:03 - play wall set it to true and here if
02:07 - play won't then we're going to go into
02:11 - our sprite animator and play the
02:13 - animation walk animation frame right if
02:17 - we're not supposed to play the wrong
02:19 - animation then we're going to play the
02:21 - item and
02:22 - and settle a wall to the opposite of
02:26 - walk and here we're going to execute
02:29 - this function every second so every
02:32 - second this function won't trigger and
02:33 - if play wonk is true we're going to play
02:36 - our walk animation if not we're going to
02:38 - play our idle animation and every time
02:41 - this function runs it inverts the state
02:44 - of play walk so it should swap
02:47 - animations every second let's test it
02:49 - out first going in here and we have to
02:52 - add the references again as a tip you
02:55 - can walk the inspector so you can select
02:57 - multiple sprites and drag them in there
03:00 - so select all these drag them in there
03:03 - and we can unlock the inspector so let's
03:07 - test it out and it should swap
03:09 - animations every second he's walking and
03:12 - there you go he's an idle and back to
03:13 - Wong back to idle
03:15 - okay great we can now swap our
03:18 - animations at any time now in here it
03:23 - looks a bit odd for the idle animation
03:25 - because it is running at a higher
03:27 - framerate then it actually should since
03:29 - the idle animation only has two frames
03:31 - it would be nice if we could modify the
03:33 - frame rate of every animation so let's
03:36 - go into our code here on our sprite
03:39 - animator instead of receiving just the
03:41 - frame array we're going to receive that
03:42 - and also a float for our frame rate and
03:47 - we're also going to set our internal
03:49 - frame rate and on my game handler so in
03:52 - here for my walk animation I'm going to
03:54 - play at a hundred milliseconds per frame
03:57 - and my idle animation since it hasn't
04:00 - less frames let's just plate swap frames
04:02 - every 200 milliseconds so let's test it
04:05 - out and my walk animation should be
04:08 - wearing like that and my I don't swaps
04:10 - frames much slower yep exactly now
04:15 - instead of using a helper function to
04:17 - modify our animations let's do it based
04:19 - on our input so go into my game animal
04:23 - script and in here I'm going to make a
04:26 - private in noon
04:27 - and call it the animation type and we
04:32 - have two animations we have two I don't
04:35 - envy won't animation and I'm going to
04:37 - have a private animation type which is
04:41 - the active animation type down here on
04:46 - our update we're going to test if the
04:50 - keyboard is down to simulate the
04:52 - character moving so let's make a bull
04:55 - call it is moving equals false and if
04:59 - input dot get key get key of key code
05:04 - let's ad assuming we are moving to the
05:06 - right if we are then set is moving to
05:10 - true so now in here if we are moving
05:12 - we're going to call a function called
05:14 - play animation going to make function a
05:18 - private boy playing animation it's going
05:22 - to receive a animation type animation
05:26 - type so in here let's do a switch on our
05:29 - animation type and K is animation type
05:32 - dot i phone we're going to play the idle
05:36 - animation and case animation type dot
05:40 - won't we're going to play the animation
05:45 - now in here if we are moving then we are
05:47 - going to play animation type I won't if
05:50 - we are not moving then we're going to
05:52 - play the title and appear on start we no
05:56 - longer need this testing code and let's
05:58 - just do play animation animation dot
06:02 - title so we start off at hilum and on
06:05 - update we test if we have the key down
06:08 - then we set is moving to true if not
06:10 - then is moving is false and if is moving
06:12 - is true then we the world animation if
06:14 - not we play the idle animation so we can
06:17 - go back into our code here and we have
06:21 - the Apple animation when I press the it
06:23 - plays the Walt animation now as you can
06:25 - see the animation isn't actually
06:26 - changing because we are setting the
06:28 - animation every frame even when it's the
06:31 - exact same animation so what's all that
06:33 - so in here on my plan emission I only
06:35 - want to point if it's different from the
06:37 - current
06:37 - active animation so in here if the
06:39 - animation type that I want to play if it
06:42 - is different from my active animation
06:44 - type then I'm going to play if it is the
06:48 - same that I'm not going to play it since
06:50 - it's already playing and I'm going to
06:51 - set my active animation type to my
06:53 - animation type okay let's test it out
06:57 - and it should now be playing the
06:59 - animation and there you go I have my
07:01 - idle animation and when I press the
07:03 - keyboard
07:04 - there you go I'm walking and now I'm
07:07 - idle honking and now idle so there you
07:10 - have it we can now easily modify our
07:12 - active sprites during runtime you can
07:15 - see how you could take this class and
07:16 - make a very simple character animation
07:19 - just set all the animations for moving
07:20 - walking jumping attacking and just swap
07:23 - it based on your input as always you can
07:26 - download the project files in utilities
07:27 - for free from unity code monkey comm if
07:30 - you have any questions post them in the
07:32 - comments and I'll do my best to answer
07:33 - them
07:34 - ok see you next time