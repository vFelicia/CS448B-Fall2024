00:00 - in this video we're going to get started
00:02 - using bolt which is unity's official
00:04 - visual scripting tool
00:05 - it is very visual and very simple to use
00:07 - while also being immensely powerful
00:09 - you can use it to make complete games or
00:11 - use it as a learning tool to help you
00:13 - learn programming
00:14 - let's begin
00:17 - [Music]
00:22 - hello and welcome i'm your code monkey
00:24 - and this channel is all about helping
00:25 - you learn how to make your own games
00:27 - with in-depth tutorials made by a
00:29 - professional indie game developer so if
00:30 - you find the video helpful consider
00:32 - subscribing
00:33 - all right so here we're going to learn
00:35 - how to do visual scripting in unity
00:37 - using bolt
00:38 - is already a very robust visual
00:40 - scripting tool it has been development
00:42 - for several years now
00:43 - and unity bought them a while ago now
00:45 - since unity bought the tool they have
00:47 - made it completely free for anyone to
00:49 - use
00:50 - if you're coming across this video while
00:51 - being completely new to unity check the
00:53 - link in the description where i cover
00:55 - the unity basics in a quick video
00:57 - here i will assume you know what are
00:58 - transforms game objects components and
01:00 - so on
01:01 - okay so bolt is extremely easy to
01:03 - install in get started
01:05 - first you go to the asset store and just
01:08 - search for bond and you'll find it
01:09 - it's completely free so just add to your
01:12 - assets and then click the button to open
01:13 - in unity
01:15 - when you do it opens up the package
01:17 - manager and down here you can see a
01:19 - button to download so click on that and
01:21 - then click on
01:21 - import
01:24 - so right away this only imports a few
01:26 - files and as soon as it's done
01:28 - go up here into tools and click on
01:30 - install bolt
01:31 - so it asks you a question and just click
01:33 - on import
01:37 - and yep now it imports all the actual
01:39 - files if you want you can go ahead and
01:41 - just delete the install bone folder
01:43 - alright so we see our very nice wizard
01:46 - tool let's go ahead hit next
01:48 - and now here it asks you a very
01:50 - interesting question so do you want
01:51 - human naming
01:52 - or programmer naming now this is a
01:54 - really interesting question because it
01:56 - depends on what your goals are with
01:57 - visual scripting
01:59 - one of them will show you nodes and
02:00 - actions pretty much just as standard
02:02 - english
02:03 - so for example it says list of game
02:05 - object whereas the other one will still
02:08 - work as visual scripting but won't show
02:09 - the nodes just like the underlying
02:11 - c-sharp syntax
02:12 - so it shows exactly as you would write
02:14 - code to a list of type game object
02:16 - so if you have no concept of programming
02:19 - syntax at all it might seem like human
02:21 - naming is the way to go
02:22 - however i would strongly encourage you
02:24 - to go with programmer naming
02:26 - now the reason is because even if you
02:28 - have no interest in learning written
02:29 - c-sharp programming
02:30 - it is still a huge help to know the
02:32 - absolute basics it will help you
02:34 - communicate with programmers and easily
02:36 - find solutions for any problem you have
02:38 - and by just using programmer naming you
02:40 - won't be exposing yourself to basic
02:42 - programming syntax
02:43 - so even if you're not intentionally
02:45 - trying to learn c-sharp you will learn
02:46 - it as you use visual scripting more and
02:48 - more
02:49 - but at the same time just like it says
02:50 - down here you can change this at any
02:52 - time
02:53 - so if you feel intimidated by
02:55 - programming syntax you can start off
02:56 - with human naming and then later on
02:58 - transition into programmer name
03:00 - okay so in this case i won't be choosing
03:02 - programmer naming
03:05 - then here we see some assembly options
03:08 - this is for more advanced users in case
03:09 - you want to load external libraries
03:12 - in our case we want to keep it simple so
03:13 - just leave it all at the default and
03:15 - click next
03:16 - then we have a list of types again it's
03:18 - for more advanced use cases where you
03:20 - want to add your own custom types as
03:21 - nodes
03:22 - so for now leave everything at default
03:24 - and just hit on generate
03:28 - all right so after a bit everything is
03:30 - generated and we have bolt fully
03:32 - installed and ready to be used awesome
03:34 - let's hit close and yep let's start
03:36 - actually using it
03:38 - let's try making the most basic example
03:40 - possible in unity which is to make just
03:42 - the cube spin around
03:44 - so first let's create a cube so again
03:45 - just a basic 3d object
03:53 - all right there's a basic cube in our
03:54 - scene and now to make a visual script we
03:56 - can go
03:57 - up here to click on add component then
04:00 - we go
04:00 - under bolt and in here we're going to
04:02 - add a flow machine
04:06 - okay so right away we see some options
04:08 - we see a field for a macro
04:10 - the macro is around the script so go
04:13 - ahead and click on new
04:14 - and just save the macro anywhere in this
04:16 - case let's call it our spinning cube
04:20 - all right there it is and now we can
04:21 - also add a title in summary if you want
04:23 - so let's just say
04:26 - all right so there's our macro now let's
04:28 - click on edit graph
04:29 - and yep right away the graph window pops
04:31 - up so we can already see the default
04:34 - state of our graph
04:35 - we have a stern event which is fired
04:37 - just once at the beginning
04:39 - and then update event which is fired on
04:40 - every single frame
04:42 - so this is the graph window where we're
04:44 - actually going to draw our graph
04:46 - and there's another window related to
04:47 - both that's also very useful so go up
04:49 - here into window and we're going to open
04:51 - the graph inspector
04:53 - this one works basically the same as the
04:54 - normal inspector except it's for when
04:56 - you select nodes inside of the graph
04:58 - so for example selecting the update node
05:00 - and over here i can see yep there you go
05:02 - update is called on every frame
05:04 - so let's dock it right next to the graph
05:06 - just like that
05:11 - all right so here's our basic layout we
05:12 - have the graph and graph inspector okay
05:15 - now let's remember what's our goal here
05:17 - the goal is to spin
05:18 - our cue so what that really means is to
05:21 - rotate it on every frame
05:22 - so let's start off by getting rid of the
05:24 - start event since we don't need it
05:26 - and now we can go up here to our update
05:28 - event and click and drag out this arrow
05:32 - and as soon as we drop it yep there you
05:33 - go it shows a menu with all the actions
05:35 - that we can take from this input
05:37 - so if you want you can browse around
05:39 - this list to see all the nodes that are
05:40 - available
05:41 - so for example over here you see a whole
05:43 - ton of math functions
05:45 - then here we can access some collections
05:48 - and under code base we can access pretty
05:49 - much anything
05:50 - so as you can see there's tons of nodes
05:52 - to do exactly anything you want to do
05:55 - now since there's so many of them the
05:56 - better approach is simply to use the
05:57 - search bar
05:58 - now we want to rotate so let's just type
06:00 - in rotate
06:02 - as soon as you do we see a whole bunch
06:04 - of rotate methods
06:05 - now in this case what we want to do is
06:07 - rotate our transform so it's going to be
06:09 - one of these
06:11 - and we can see that they take different
06:12 - types of parameters
06:14 - let's just select the simplest one which
06:16 - is this one here which just takes three
06:17 - floats
06:18 - so click on it and there you go there's
06:19 - our transform rotate node
06:21 - and here in the graph inspector we can
06:23 - also visualize all the inputs and
06:25 - outputs
06:26 - so the first input is the flow so it
06:28 - goes from event into there
06:30 - then we have the target which is going
06:31 - to be this object and then we have three
06:34 - floats
06:34 - and for the outputs we just have an
06:36 - output flow all right so in this case
06:38 - let's just rotate it on the y
06:39 - axis so over here let's just hit one and
06:42 - yep that's it this is all it takes
06:44 - this will add one to the object y angle
06:46 - on every single update
06:48 - so just like this let's test and yep
06:50 - there you go we have our very nice spin
06:52 - eq
06:53 - awesome now one really cool thing about
06:55 - bolt is how you can visualize the flow
06:57 - inside a graph
06:58 - so we can see that the update event is
07:00 - constantly being fired
07:02 - and is being received by the rotate node
07:04 - so this becomes an extremely small
07:05 - feature as your scripts become more and
07:07 - more complex
07:08 - okay so this is the most basic graph now
07:11 - when it comes to scripting one very
07:13 - important element are variables so
07:15 - let's look at that so for the variables
07:17 - there's another window we can open so
07:19 - again go into window and open up
07:20 - variables
07:21 - all right so here we can see tons of
07:23 - variables that we can use in our scripts
07:25 - let's dock it right next to the flow
07:27 - graph so right underneath the graph
07:28 - inspector yep there you go
07:30 - and now here just a quick unity tip you
07:32 - can make the active window full screen
07:34 - by clicking on the window and then
07:36 - hitting on shift and space and there you
07:38 - go just like this it makes the current
07:39 - window full screen
07:40 - alternatively you can also click on this
07:42 - full screen button so
07:44 - it goes from that to that or just double
07:46 - click on the window itself
07:48 - and on these buttons here you can switch
07:49 - these from left side to the right side
07:51 - personally i prefer on the right side
07:53 - so here we have a bigger area to work
07:55 - with ok
07:56 - so to make a variable it's actually very
07:58 - simple
07:59 - down here on the graph variables we can
08:01 - click on here in order to input a
08:03 - variable name
08:04 - in this case let's call it our speed
08:06 - variable and click on the plus icon
08:08 - and over here we need the type now for
08:11 - our speed we want it to be a float
08:12 - so yep select float and then some
08:15 - default value
08:16 - so in this case let's set it to
08:18 - something like three all right so that's
08:20 - it that's our variable all set up
08:22 - now we just click in this position right
08:24 - here and then drag it into our graph
08:26 - and there you go here we have our get
08:28 - variable node so from this port out here
08:30 - we get whatever value is stored in the
08:32 - variable so we just take this one and
08:34 - connect it onto the y
08:35 - angle and if there you go now it's going
08:37 - to rotate our cube based on the speed
08:39 - that we set in the variable
08:40 - all right so let's test and if there's a
08:43 - cube now spinning faster
08:44 - and again volt is awesome and shows us
08:46 - the flow of values that are going into
08:48 - the inputs and outputs
08:50 - so we can see that over here we have a 3
08:51 - being sent from this variable onto this
08:53 - input
08:54 - and if you modify the variable in here
08:56 - instead of three and let's say nine
08:57 - and yep there you go it automatically
08:59 - updates so even while the game is
09:01 - running you can easily modify the code
09:03 - right awesome
09:04 - now let's try doing another basic thing
09:07 - let's listen to some input and make our
09:09 - cube jump
09:10 - now in order to make it jump let's add
09:11 - some physics
09:13 - so for that just over here on our normal
09:15 - cube game object let's add a rigid body
09:17 - component
09:18 - yep there you go just like that and
09:20 - let's also make a floor so it doesn't
09:22 - fall into infinity so just create a new
09:24 - plane
09:30 - alright so here we have our cube it's
09:31 - rotating and falling along with gravity
09:34 - now here in our graph let's expand it
09:36 - and now let's right click
09:38 - and we're going to add something let's
09:39 - search for add force
09:42 - and we're going to apply some force to
09:43 - our rigid body so let's go with this one
09:45 - that takes three floats and then the
09:48 - mode
09:50 - okay now here we want to jump up so
09:52 - let's add some value on the
09:54 - y and for the mode let's select impulse
09:57 - since it's meant to be instantly applied
09:59 - okay so here's what we want to do just
10:01 - add some force on the y all right
10:03 - now we want to trigger this on a key
10:04 - press so let's right click
10:07 - and we're going to search for get key
10:09 - down
10:10 - if there you go input get key down so
10:12 - once again you can look in the graph
10:14 - inspector to see what it actually does
10:16 - so it returns true during the frame when
10:18 - the user starts pressing the key down
10:20 - and then here for the key let's select
10:22 - the space key and now we have our two
10:24 - outputs
10:24 - one of them is the simple flow and the
10:26 - other one is the boolean so this volume
10:28 - will be true
10:29 - when we press the space bar and we only
10:32 - want to run this rigid body when that
10:33 - one is true
10:34 - so now the question is how do we connect
10:36 - these two nodes since we can't directly
10:38 - link the volume in there and now what we
10:40 - do is let's drag the bowline and right
10:42 - away we see our little selector and
10:45 - let's select our branch
10:47 - so this branch node takes an input it
10:49 - takes a flow and then we have the output
10:51 - which are two flows
10:52 - one of them if it's true and one if it's
10:54 - false
10:55 - so if it's true then we want to run and
10:57 - actually add force to our rigid body
10:59 - and we also need to connect the flow to
11:01 - the branch input
11:02 - okay so that's set up however you can
11:04 - see that these nodes are slightly
11:06 - transparent
11:07 - that means they're not being used at all
11:09 - now one key concept in programming and
11:11 - running code
11:12 - is the flow of execution essentially the
11:14 - code runs line by line so it runs the
11:16 - first line the next line and so on
11:19 - here we can visualize that same process
11:21 - with the flow of execution
11:23 - so we start off on the update then we go
11:25 - and we execute the
11:26 - rotate node and then after that we need
11:29 - to connect this into the get key down
11:30 - which will then run this one then run
11:32 - this one and run this one
11:34 - essentially there always needs to be a
11:35 - continuous flow from start to finish
11:38 - and right now you can see they're
11:39 - normally transparent since they are
11:40 - indeed being used
11:42 - alright so here's our complete script
11:44 - the cube will always be rotating based
11:46 - on the speed set in the variable
11:48 - and then if we press the space bar it
11:51 - will add force on the rigid body and
11:52 - make it jump
11:53 - up okay so let's test here's our
11:56 - spinning cube and down here on the graph
11:58 - we can see exactly what it's doing
12:00 - so the flow is constantly running but
12:01 - yep there's no following here since it
12:03 - only runs when this one is true
12:05 - so now if i press on the space key if
12:07 - there you go the cube jumps up and you
12:09 - can see that one become
12:10 - activated for exactly one frame so since
12:13 - i press
12:13 - if there you go you add some force and
12:15 - he moves it upwards
12:18 - all right so here we have a very simple
12:20 - script fully working
12:21 - all right awesome okay so this was the
12:24 - complete basics to getting started with
12:26 - bolt
12:26 - and now that the basics have been
12:28 - covered i want to ask you what would you
12:29 - like to see
12:30 - would you like to see more visual
12:31 - scripting content if so exactly what
12:34 - type
12:34 - maybe some complete games maybe some
12:36 - bolt compared with c
12:38 - sharp maybe converting some of my
12:39 - previous mate systems to be made with
12:41 - bond
12:42 - let me know in the comments what you'd
12:43 - like to see if you found this video
12:45 - helpful consider liking and subscribing
12:47 - this video is made possible thanks to
12:49 - these awesome supporters
12:50 - go to patreon.com unitycodemonkey to get
12:53 - some perks and help keep the videos free
12:55 - for everyone
12:55 - as always you can download the project
12:57 - files and utilities from
12:58 - unitycodemonkey.com
12:59 - subscribe to the channel for more unt
13:01 - tutorials post any questions have in the
13:03 - comments and i'll see you next time