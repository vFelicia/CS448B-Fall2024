00:00 - in this video I'm going to go over my
00:01 - highlights from the unite 2019
00:03 - Copenhagen keynote there's lots of
00:05 - awesome news on dots to the AR and more
00:08 - let's begin so I just got back from the
00:18 - unite and it was an excellent experience
00:20 - tons of great thoughts on just about
00:22 - every topic and booths filmed with
00:24 - awesome people doing cool stuff all the
00:26 - unity people were really nice and
00:28 - Copenhagen is a beautiful city I also
00:30 - met a bunch of other inunity youtubers
00:32 - for the first time and we had a ton of
00:34 - fun so it was a really action-packed
00:36 - week again it's a great event and if you
00:38 - haven't been I definitely encourage you
00:40 - to go someday now let's check out a
00:42 - keynote how it's so for me I have to
00:45 - start with dots how much performance so
00:47 - naturally I adore dots so far the main
00:50 - comments against dots and ECS that I've
00:52 - seen in my videos are mostly to do with
00:54 - the amount of code that you need to
00:55 - write to do something simple well
00:57 - thankfully it seems unity is tackling
00:59 - that problem ahead on starting with
01:01 - twenty nineteen point three there are
01:03 - two things that greatly reduced the
01:04 - amount of code one of the things is
01:06 - actually something I haven't covered yet
01:08 - but it's on my list which is the
01:09 - conversion workflow previously you would
01:11 - need to override a function to implement
01:13 - the dots components that match up with
01:15 - the mono behaviors you add it to an
01:17 - object now you can simply use an
01:19 - attribute if you don't need any custom
01:20 - logic so that helps cut down quite a
01:23 - nice chunk of boilerplate code the most
01:26 - awesome thing is you no longer need to
01:28 - define a job struct for simple jobs you
01:30 - can just do an entities for each and it
01:32 - will automatically create and complete
01:34 - the job all while using bursts this is a
01:36 - massive awesome change since
01:38 - previously the way I would do things was
01:40 - I would always start by making a normal
01:42 - component system I would get on pelagic
01:44 - working and only then I would convert
01:46 - the component system into a job system
01:49 - now with this change I no longer need
01:51 - those two steps just do one entities for
01:53 - each and your code is automatically
01:55 - benefiting from multiple threads and
01:57 - burst for very easy insane performance
01:59 - so you go from this to this which is
02:02 - much more condensed faster to write and
02:04 - easier to understand also on the roadmap
02:06 - talk it was announced that a dot score
02:09 - stack which is ECS the job system and
02:11 - we'll all be out of preview and
02:13 - production ready in 2020 point one and
02:16 - again everything is still available as a
02:18 - package including the source code so you
02:20 - can inspect it to see how it works and
02:22 - if you have an issue you can follow
02:24 - along with East actors now unity is
02:27 - pretty much designed on what they think
02:28 - should be the correct dad's workflow
02:30 - they want people to continually using
02:32 - game objects like they've always done
02:34 - and then in run time it all gets
02:36 - converted into superfast entities to
02:38 - achieve that in an easy manner there is
02:40 - now in 2019 point three a simple box you
02:43 - can take to convert a game object into
02:45 - an entity if your object requires
02:47 - specific logic in order to achieve
02:49 - conversion you can still make your own
02:50 - conversion script when you run the game
02:53 - the object will be converted into an
02:55 - entity and by selecting that object and
02:57 - Luckman the inspector you can see the
02:58 - various ECS components that were added
03:00 - to the entity and the values that they
03:02 - currently can think so it's now very
03:04 - easy to visually see a specific entity
03:06 - and see the EECS internals all this
03:09 - makes it very easy to work with game
03:11 - objects like you've always done but
03:12 - benefit from the massive performance
03:14 - during run time there is a new complete
03:17 - third-person shooter which is built
03:19 - completely using dots and contains a ton
03:21 - of features it has animation physics
03:24 - multiplayer audio live link and more I
03:26 - think it's the first project that is
03:28 - completely 100% done using dots so I'm
03:31 - really looking for this one and picking
03:33 - it apart
03:34 - I've seen some talks on how the
03:36 - multiplier works and it seems really
03:38 - interesting speaking of lively that was
03:40 - something they showcase some more
03:42 - essentially you can have a build running
03:44 - and the editor still open then you can
03:47 - easily make changes in the editor and
03:48 - see them change instantly in the build
03:50 - the build can also be running anywhere
03:53 - like on another PC or console or mobile
03:55 - so this is gonna be an awesome tool for
03:57 - quickly iterating on things like level
03:59 - design and general testing to find the
04:01 - perfect values that make your game great
04:03 - it's also great for iterating on
04:05 - performance for specific parts of your
04:07 - mother so for example if a specific
04:09 - areas are running slow you can very
04:11 - easily remove things and watch how the
04:13 - build player performs multiplayer was
04:16 - mentioned in the third-person shooter
04:18 - demo and like all the other features
04:19 - should be coming out in 2019
04:21 - three I'm really looking forward to
04:23 - fling around with the normal
04:24 - implementation as well as just using the
04:26 - transport package directly they also
04:29 - highlighted the various extra features
04:30 - that are also coming like the dedicated
04:32 - service and matchmaking and also voice
04:35 - communication again all of this should
04:37 - be implemented in the third person
04:39 - shooter which will be able to inspect
04:41 - and see exactly how its implemented a
04:44 - Argentine needs to be supported and
04:46 - improved this is another area I'd love
04:48 - to play around with being able to build
04:50 - your project once and have it run
04:52 - anywhere is an excellent feature and one
04:54 - of the main reasons why unity has been
04:56 - so successful so it's great to see that
04:57 - apply to a are you can also now include
05:00 - the in library in native apps which
05:02 - sounds like an excellent way to add AR
05:04 - features to an already built native app
05:06 - they also showed someone driving a Volvo
05:09 - wearing a our classes no idea if that's
05:11 - meant to be something real or just a
05:13 - weird ever but it worked quite funny and
05:15 - this is just an example of unity
05:17 - expanding into different areas there
05:19 - were lots of automotive focused features
05:21 - and Boots present that show another area
05:24 - a unity is expanding into is for
05:26 - architects and construction they show
05:28 - the demo where you edit the building
05:30 - specs and the 3d model automatically
05:32 - refreshes and you can also use AR to
05:34 - visually see your building on for again
05:37 - now really relevant to game developers
05:39 - but it's awesome how unity has so many
05:41 - different use cases and they continue
05:43 - expanding more and more then there's the
05:45 - scriptable and render pipeline VFX graph
05:48 - and shadow graph which are all becoming
05:50 - production-ready
05:50 - so you can safely use them in whatever
05:52 - game you're working on also in case you
05:55 - don't know the almighty wait render
05:56 - pipeline has been renamed into the
05:58 - universal render pipeline so now you
06:01 - have the universal and the high
06:02 - definition
06:03 - what's a focus on awesome 2d features
06:05 - for me I really like 2d which for quite
06:08 - awhile felt like it wasn't really
06:10 - getting much attention since all the
06:11 - features were 3d focused however in
06:14 - these past few years things have really
06:16 - changed and now there's tons of awesome
06:17 - features already done and more coming
06:19 - they show that gorgeous demo using the
06:22 - universal render pipeline which now has
06:24 - a 2d specific render you can see glowing
06:27 - particles dynamic shadows a day/night
06:30 - cycle by easily moving a slider to the
06:33 - lights with easily
06:34 - five volt gizmos reflections on the
06:37 - water using a shader made in shader
06:39 - graph spreadsheet for easily placing
06:41 - curves bound based animations with the
06:45 - option to easily swap out sprites the
06:47 - whole demo looks absolutely gorgeous
06:50 - so yeah a ton of 2d features to help you
06:52 - easily create awesome 2d games I'm
06:55 - really looking forward to playing around
06:56 - with all these features in the future
06:58 - continuing the story from the previous
07:00 - unite we saw the hair tech part 2 as
07:03 - always unity cinematics are just
07:04 - gorgeous and insanely high quality we've
07:07 - gotten used to it so it really makes you
07:09 - almost forget just how impressive they
07:11 - really are I mean they're running this
07:13 - cinematic with this insane quality on a
07:15 - normal rate running at 30 frames per
07:17 - second just 10 years ago you would need
07:19 - a server farm and spend several hours to
07:22 - render a single frame with this level of
07:24 - fidelity so that really puts it into
07:26 - perspective just how impressive all this
07:28 - tech is and more than that there's
07:30 - really nothing special hidden there
07:33 - using the shadowgraph
07:34 - Cena machine lighting animation and more
07:36 - of the things you see are made using the
07:38 - exact same tools that all of us have
07:40 - access to so it's really great to see
07:43 - just how far you can push the engine and
07:45 - apparently the beard is using the C
07:47 - sharp jump system to update the position
07:49 - of every hair in runtime then they
07:52 - showed something called EMT simulation
07:54 - and game tuning these seem to be powered
07:57 - by a machine learning and the cloud to
07:58 - help you test your games thousands of
08:00 - times in a short number of hours the
08:02 - concept seems excellent but I'm not very
08:04 - clear on how the implementation works so
08:07 - does it just push buttons randomly until
08:09 - it encounters a wind condition or do you
08:11 - need to train it to play properly if so
08:13 - how complex is a training procedure so
08:16 - not too clear on the specifics but
08:18 - definitely interested in what they're
08:19 - trying to do so that's the keynote and
08:22 - it had a lot of great stuff that are
08:24 - already available and even more to look
08:26 - forward to in the future
08:27 - Dodd's continues to be awesome and I
08:29 - look forward to playing around with
08:30 - these new features when they come out in
08:32 - 20 19.3
08:33 - it seems unity is simultaneously
08:35 - building up its core features while also
08:37 - branching out to completely different
08:39 - applications like automotive and
08:41 - building and for you as someone who is
08:43 - learning unity all this should make you
08:45 - feel really good
08:46 - about your future prospects the more
08:48 - integrals both inside and outside of
08:50 - game development the more job options
08:52 - there are the future is looking bright
08:54 - and I look forward to doing my research
08:56 - so I can do videos on these exciting
08:57 - features so stay tuned all right see you
09:00 - next time
09:10 - [Music]