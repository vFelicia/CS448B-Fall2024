00:00 - hello and welcome I'm your code monkey
00:02 - Lin this video we're going to make a
00:03 - very satisfying flying body animation
00:06 - we're going to add it on enemy death to
00:08 - make it very impact on satisfying let's
00:10 - get started
00:14 - so I have my scene here I have a pointer
00:18 - character enemies are currently being
00:19 - spawned and I can damage them with my
00:21 - sword
00:22 - now right now when they die they simply
00:26 - disappear let's make them fly now I have
00:31 - a prefab here with a sprite of the enemy
00:33 - dead body so when an enemy is killed
00:37 - after the enemy is destroyed we want to
00:39 - spawn the dead body and send him flying
00:41 - what so let's begin by creating a new
00:45 - c-sharp script and name it fly body ok
00:50 - now in here let's remove this and add a
00:52 - public static void a create function
00:57 - that won't create our flying body so
00:59 - inside we're going to receive a
01:01 - transform for a prefab of our dead body
01:05 - a vector3 for the spawn position and
01:09 - another vector 3 for our fly direction
01:14 - so in here let's instantiate our prefab
01:18 - into our spawn position with a
01:21 - quaternion dot identity this will be our
01:25 - flying body transform ok now on this
01:31 - transform we want to add the component
01:35 - for our flying body and now we want to
01:46 - call a setup function on our flying body
01:49 - component for that setup we're going to
01:51 - send it the fly direction okay great so
01:55 - now down here let's add a private void
01:58 - setup on our setup we're going to
02:00 - receive a vector 3 for our fly direction
02:03 - and we're going to store it as a member
02:06 - of the variable so now on our private
02:11 - void update we are going to move the
02:14 - transform towards the Phi direction so
02:17 - transform that position as equals Phi
02:21 - direction
02:22 - I'm dot double time okay so this class
02:26 - looks good for now let's go back into
02:28 - our game handler script and in here you
02:32 - can see I just have a pretty basic code
02:34 - I got the camera which is following the
02:36 - player I got a reference to my player on
02:38 - this for my enemies in here the players
02:42 - being in Senshi ated I'm setting up the
02:44 - list setting the camera to follow the
02:46 - player and I'm using function periodic
02:49 - to spawn an enemy every 1/2 second
02:51 - function periodic is part of the code
02:54 - monkeytales which you can grab at Unity
02:56 - code monkey calm and the camera phone
02:58 - script is part of a previous video which
03:00 - you can check out so now in here my
03:03 - player Hammer script is actually sending
03:05 - an event for on enemy kill so we're
03:09 - going to use that to spawn our dead
03:10 - bunny so since this is triggered after
03:16 - the enemies kill right here is where we
03:18 - want to go into our flowing body dot
03:20 - create we're going to send our prefab
03:22 - for the enemy dead body which will set
03:26 - up soon right here this event passes the
03:30 - event arts which contains the enemy
03:32 - handler and the enemy handler contains a
03:34 - get position so this will give us a
03:36 - position of the enemy that was just
03:37 - killed and for our fire action we're
03:40 - going to calculate it y direction which
03:44 - won't be based on D enemy's position
03:47 - mine is the player handler dot get
03:49 - position now we're going to normalize it
03:57 - okay and send it in here it's now up
04:01 - here let's set another serialized feel
04:04 - private
04:05 - transform PF enemy dead body okay so now
04:11 - when this event is fired we're going to
04:13 - create a enemy body which won't call
04:16 - this function so let's see if the enemy
04:18 - if the body is spawned and flies away
04:21 - back into our scene here with the code
04:25 - compound going to here and we're going
04:27 - to drive our reference to our enemy dead
04:30 - body so let's test it okay I'm here when
04:33 - an enemy spawn going to hit them three
04:35 - and there you go that body was spawned
04:38 - and moving very slowly we obviously need
04:40 - to make that go a lot faster but the
04:43 - bodies are currently being spun okay
04:45 - great so back into our script here and
04:48 - let's first make a float for our fly
04:51 - speed and let's say about 150 should be
04:55 - good we're going to multiply okay and
05:00 - now right now this game object is just
05:02 - flying until infinity so let's make sure
05:04 - it gets destroyed after some time so
05:07 - appearance my a private float timer and
05:12 - an update simply increase the timer was
05:15 - equals time dot dot the time
05:17 - now if timer is bigger than let's say
05:21 - one second that's probably more than
05:22 - enough time for the body to leave the
05:24 - screen and we're going to destroy this
05:28 - game object okay well let's see if the
05:32 - game object is being destroyed and if it
05:34 - is moving faster okay here I am worse
05:38 - there he goes boom he goes away any
05:40 - vanish as you can see on the hierarchy
05:42 - that the dead bodies get spawned and get
05:45 - destroyed after some time and they are
05:48 - correctly moving in the correct
05:50 - direction with a decent speed calling
05:54 - freeze that a little bit more okay
05:57 - well it's good for now so back in our
05:59 - code here we're going to make him move a
06:01 - little bit faster and for a better
06:04 - effect let's also increase the scale
06:06 - going to transform local scale and we're
06:09 - going to increase it by vector 3.1 times
06:12 - the scale speed times time dot dot the
06:17 - time for our scale speed let's make it
06:22 - about twentieth okay let's test it out
06:28 - okay there goes and boom there goes it's
06:31 - a bit too much but yep that's the effect
06:34 - we want
06:37 - okay back into our code let's reduce
06:39 - this for a little bit and actually for
06:43 - start we're going to want to start a
06:45 - little bit more so transferring all on
06:47 - scale equals let's make our vector 3.1
06:51 - times let's increase at double the size
06:54 - so the starting scale is already bigger
06:57 - and let's see okay there you go it's
07:03 - looking pretty good now the speed
07:07 - actually has to go a lot faster but it's
07:10 - going good
07:11 - so for our speed and here we're going to
07:14 - make it 30 for scale let's just make it
07:17 - seven but it's looking good for now okay
07:21 - so for another effect let's add some
07:24 - rotation so let's store our Euler load
07:30 - the owners end and here on transform dot
07:39 - local Euler angles we're going to set
07:44 - the new vector 3 0 0 Zed and our Euler's
07:50 - end won't increase by your speed times
07:55 - time Delta time so for our your speed
07:59 - let's make it 360 which is one rotation
08:05 - but that's not enough that would be just
08:08 - one rotation per second we want this to
08:10 - make a bit faster so let's say four
08:12 - rotations per second okay let's test it
08:17 - out and see how it's going okay here I
08:21 - am and I can hit them boom there goes
08:23 - flying away and the speed is actually
08:28 - still one a bit lower let's increase the
08:33 - speed a little bit more this is all
08:35 - about tweaking values to make it as
08:37 - satisfying as possible ok now in here in
08:40 - this scene I also have my blood handler
08:42 - class which is spawning those bullet
08:44 - particles that you see so let's add that
08:46 - while he's
08:47 - so fine so I'm going to go into my
08:49 - handler class and spawn one for the
08:55 - amount let's say five particles on
08:58 - location transform dot position and for
09:01 - Direction will be the opposite of our
09:03 - flight direction so y-direction times
09:04 - minus one okay let's seek those
09:09 - particles are being spawned okay
09:12 - there's the enemy I'm gonna hit him boom
09:14 - oh look at that there you go they're
09:19 - always going and leaving a trail which
09:22 - makes killing the enemies quite
09:24 - satisfying okay so as a final effect
09:30 - let's add some screen shake I have a
09:34 - function here in my camera and when
09:38 - enemies come let's just create a new
09:40 - shake I have an intensity let's EQ and
09:43 - timer for 100 milliseconds and let's
09:47 - give it one final test okay here's my
09:51 - player there's an enemy boom boom boom
09:53 - there he goes and there you go
09:57 - we made a very satisfying flying dead
10:00 - body so if you want to add a very
10:03 - over-the-top effect on enemy death you
10:07 - can use this to make your game feel much
10:09 - more satisfying to play ok so there you
10:14 - go if you have any questions post them
10:16 - in the comments and I'll do my best to
10:17 - answer them alright see you next time