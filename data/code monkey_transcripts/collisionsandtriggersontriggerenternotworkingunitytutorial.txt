00:00 - in this video we're going to cover how
00:01 - to handle simple collisions in unity
00:03 - we're going to look at colliders rigid
00:05 - bodies and on the various events let's
00:07 - begin
00:11 - [Music]
00:15 - hello and welcome I'm your code monkey
00:17 - and this channel is all about helping
00:19 - you learn how to make your own games
00:20 - with enough tutorials made by a
00:22 - professional indie game developer so if
00:24 - you find the video helpful consider
00:25 - subscribing okay so this is a very
00:28 - simple beginner video I'm making this
00:30 - because I've seen a lot of comments by
00:31 - people confused with how to get
00:33 - collisions working one of the issues I
00:35 - see is a lot of people cannot get their
00:37 - triggers to register it can be a bit
00:39 - tricky so let's check it out so for
00:42 - starters let's make a new game object so
00:44 - in here create an empty one and let's
00:46 - call this our health potion and now
00:49 - let's add a component of type box
00:51 - Collider 2d so here you can already see
00:54 - the widget displaying the size of our
00:56 - Collider now let's also add a sprite
00:58 - renderer and now for our visual over
01:01 - here I have a health potion texture and
01:03 - just drag it on there okay and now we
01:05 - can click on this button in order to
01:07 - easily add a deco editor and make it
01:09 - just big enough to capture the whole
01:11 - texture okay alright so here is our
01:13 - simple object now let's make another
01:15 - object so we're going to create an empty
01:17 - game object this will be our player and
01:20 - inside we have a component of type
01:22 - capsule Collider TD okay and then also a
01:25 - visual so a sprite renderer alright so
01:33 - here is the sprite with the capsule
01:35 - Collider on top so now that we have
01:37 - these two simple objects let's see how
01:39 - we can handle collisions so first of all
01:42 - on the health potion over here on the
01:44 - collider properties you can see we have
01:46 - a bunch of things we can change for
01:48 - example over here we have a box called
01:49 - is trigger this makes it so that this
01:52 - object is not physically solid and it
01:54 - only triggers an event this is right for
01:56 - example for making the player pick up an
01:58 - item so we do want the player to be able
02:00 - to get inside of this box so this meant
02:02 - to be just the trigger okay and for the
02:05 - player will leave it as not a trigger
02:06 - since we want it to be a solid object
02:08 - okay and now in here I have a simple
02:10 - script with some basic movements so just
02:12 - add it to the player and here you can
02:14 - see these script is extremely small very
02:16 - simple here we just have a function that
02:18 - being called on update can't handle our
02:20 - movement and we're testing for inputs
02:22 - and moving our transform that's it very
02:24 - simple and now in order to capture our
02:26 - trigger we need to
02:27 - they function so we're going to add the
02:29 - function on trigger answer to D so this
02:33 - is the function that is called whenever
02:34 - this object is involved in a collision
02:36 - with a trigger so here in let's just add
02:39 - a debug log and say something all right
02:42 - so let's test okay here we are and I can
02:45 - move the play around all right make
02:46 - sense and now let's check out the world
02:49 - whenever I approach each item and I go
02:51 - and nope we have nothing happening so
02:54 - this is the part that really confuses
02:55 - some people they both have their
02:57 - colliders correctly set up so why is
02:58 - nothing happening well the reason is
03:01 - because the physics system is meant to
03:02 - work with rigid bodies and not just
03:04 - empty colliders so here in our player we
03:07 - need to add a rigidbody in this case
03:10 - rigidbody 2d and here since we're
03:12 - working on top down in order to make it
03:14 - not fall down just set gravity to zero
03:16 - however the item itself does not need a
03:19 - rigidbody in order to get the collisions
03:21 - working we just need one of the objects
03:23 - in the interaction to have a rigidbody
03:25 - so the item is fine just like this just
03:27 - a box Collider with its trigger set to
03:29 - true and the player has a capsule
03:31 - Collider and a rigidbody okay so now
03:34 - let's test this okay here we are making
03:36 - some move and if I go towards the atom
03:38 - there you go now we have our triggers
03:40 - correctly working awesome
03:42 - so as you can see it's very simple to
03:44 - fix this issue with collisions not
03:46 - triggering all you need to do is make
03:48 - sure that you have at least one rigid
03:50 - body in that physics interaction so now
03:53 - let's look at some more collisions
03:54 - alright so over here I made a static
03:57 - wall and a bunch of debris so the wall
03:59 - is meant to be static and we should be
04:01 - able to push the rocks around so here on
04:04 - the wall all we have is a simple box
04:06 - Collider and you can see it is not a
04:09 - trigger and on the rocks they also have
04:13 - a box Collider and in addition to that
04:15 - they have a rigidbody set the dynamic we
04:18 - have the rigidbody since we want the
04:19 - rocks in order to be influenced by the
04:21 - physic system and over here on the
04:23 - player here on let's set the rigid body
04:26 - from dynamic and put it as kinematic so
04:29 - this is important and we won't see what
04:30 - this does and I'll back in our player
04:32 - code we should rework our movement code
04:35 - and move it into the fix update due to
04:37 - physics
04:49 - okay so here we're using the rigidbody2d
04:52 - move position function in order to move
04:54 - our player okay let's see okay here we
04:57 - are
04:58 - and I just replace the player with a
04:59 - nice animated character instead of a
05:01 - simple sprite but it works exactly the
05:03 - same so I can still move just like
05:05 - normal and now over here we have our
05:06 - rocks and if I move towards them yep
05:08 - there you go as you can see I can
05:09 - correctly push around the rocks alright
05:12 - so that looks good
05:13 - however let's go into the wall and there
05:15 - you go the wall does not work and I can
05:17 - go straight through it so here we have
05:19 - some weird issues now the problem in
05:22 - this case is because we set our
05:23 - rigidbody to be kinematic so kinematic
05:26 - means that it will not be affected by
05:28 - outside forces so as I move the
05:30 - rigidbody towards the wall the wall will
05:32 - not be able to block it
05:33 - but being kinematic it still effects
05:35 - other objects so that's why we can still
05:37 - push these rocks around now here if we
05:39 - modify the original body type from
05:41 - kinematic and place it as dynamic and
05:44 - now we test okay so here we are and yep
05:46 - I can still push the rocks okay great
05:48 - and now on the wall any of there you go
05:50 - now the wall does indeed work as a solid
05:53 - object so if you have issues with your
05:56 - objects not colliding pay attention to
05:57 - whether or not they are supposed to be
05:59 - kinematic if you want to learn more
06:01 - about physics interactions including how
06:03 - layers and bit masks work then check out
06:05 - the video linked in the description now
06:07 - let's look at a bunch more collision
06:09 - events so here we played around with the
06:11 - ontriggerenter 2d which gets called
06:13 - whenever a Collider enters another one
06:15 - that is set to being a trigger then we
06:18 - also have the proud void on collision
06:21 - enter 2d this one works the same when it
06:24 - enters accept this works with a Collider
06:27 - that is not set to being a trigger and
06:29 - another difference is the parameter in
06:31 - this function is a collision instead of
06:33 - a Collider so the collision contains a
06:36 - bunch of information on the collision
06:38 - that happened like all the various
06:39 - contact points collision velocity and so
06:41 - on then we also have the on collision
06:44 - exit and on trigger exit
06:48 - so these get called whenever the
06:50 - collision between the two objects ends
06:53 - and then finally we have the on
07:00 - collision say and on trigger stay these
07:02 - are called on every physics update while
07:04 - the collisions are active so let's have
07:07 - logs on all of them okay let's test okay
07:19 - so here we are moving around now let's
07:21 - test so first let's collide with the
07:23 - wall and there you go we have a
07:25 - collision enter a bunch of collision
07:27 - says-- and finally a collision exit then
07:30 - over here we have our health potion
07:31 - which is set to a trigger so that when
07:34 - you go in if there you go we have
07:36 - ontriggerenter a bunch of trigger stays
07:38 - and a trigger exit at the end and
07:40 - finally over here on the rocks we can
07:42 - push them around and there you go we
07:44 - have a interstate exit just like that
07:46 - right so here are all of our nice
07:48 - collision events okay
07:50 - now let's apply this to some interesting
07:52 - behavior okay here's my player again now
07:54 - let's move towards the wall and yep some
07:56 - works as a simple solid object is it
07:58 - supposed okay now over here the rocks
08:01 - let's push them and there you go with
08:02 - the rocks are now somehow super heavy
08:04 - and they caused me some nice damage so
08:07 - the players nowadays over here we have
08:09 - the health potion and let's use the
08:10 - trigger in order to go in there capture
08:12 - and consume the health potion and then
08:14 - all the way in here we have this very
08:16 - nice special circle and as I go inside
08:19 - there you go we activate a very cool
08:21 - awesome shader effect and if I go out it
08:24 - gets is able so there you go enabled on
08:26 - enter and disabled on exit if you want
08:29 - to see how this cool walking shader
08:30 - works then check the link in the
08:32 - description so over here we have a very
08:34 - simple scene working with all kinds of
08:36 - physics interactions and collisions
08:38 - again if you have issues with collisions
08:41 - make sure that at least one of the
08:43 - objects in your collision has a
08:44 - rigidbody and check if it should be
08:46 - kinematic or dynamic as long as you can
08:49 - download the project file signatories
08:51 - from unity code monkey comm subscribe to
08:53 - the channel for more
08:54 - et tu Turtles post any questions at have
08:56 - the comments and I'll see you next time
09:00 - [Music]