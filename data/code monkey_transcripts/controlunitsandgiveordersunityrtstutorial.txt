00:00 - in this video we're going to make a
00:01 - simple RTS control system we're going to
00:04 - handle unit selection and control draw a
00:06 - selection area and give the unit some
00:07 - orders let's begin hello and welcome I'm
00:18 - your code monkey and this channel is all
00:19 - about helping you will learn how to make
00:21 - your own games with enough tutorials
00:23 - made by a professional indie game
00:24 - developer so if you find the video
00:25 - helpful consider subscribing okay now I
00:28 - already cover this topic once before
00:30 - however it was in a video focused on the
00:32 - dots and ECS in here we're going to make
00:35 - this internally using game objects so
00:38 - here's what we're going to make over
00:39 - here I have a bunch of Units some of
00:41 - them sending I don't know I can
00:43 - left-click and yep there you go you can
00:45 - see that this unit is selected and I can
00:47 - right click in order to give them a move
00:48 - order I can also click on empty space
00:51 - and if there you go it's is selected and
00:53 - I can no longer give orders I can also
00:55 - click and drag in order to select
00:57 - multiple units so now all of these are
00:59 - selected and I can recollect any of
01:01 - there you go they own winter and as you
01:03 - can see they all go into different
01:05 - positions so I can some like the whole
01:06 - ten of them tell them to move and they
01:08 - all go into a dynamically calculated
01:10 - position so each position is calculated
01:13 - depending on the number of units that
01:14 - are selected so I can select any group
01:16 - that I want and if there you go they're
01:19 - not overlapping so here is a nice base
01:21 - for a simple RTS you can expand upon
01:24 - this to add any type of order that you
01:26 - want like for example grabbing items
01:28 - attacking enemies constructing buildings
01:29 - and so on so here we're going to handle
01:32 - our basic RTS controls and then c2 in
01:34 - for an upcoming video we're going to add
01:36 - some actions and really cool custom
01:38 - animated cursors based on what the mouse
01:40 - is hovering this videos patreon sponsor
01:43 - is bad adventure bad adventurer is a
01:45 - game development duo currently working
01:47 - on their first game Wayfarers edge
01:49 - it's a RPG focused on exploring and
01:51 - settling unknown frontier lands in a low
01:54 - fantasy and Wild West theme check them
01:56 - out at bat adventure comm thank you to
01:58 - the patreon sponsor and thank you to
02:00 - these awesome supporters for making this
02:02 - video possible go to patreon.com/scishow
02:04 - code monkey to get some perks and help
02:06 - keep the videos free for everyone
02:08 - alright so over here is our cone let's
02:10 - get to it
02:11 - okay so here we have our starting
02:13 - just the simple character standing
02:15 - around I don't so I cannot select it or
02:17 - do anything all right so first of all
02:19 - let's make our script so a new C sharp
02:22 - script let's call this our game RTS
02:24 - controller and let's make a game object
02:30 - same name and attach the square okay now
02:33 - in here let's first do a private void
02:36 - update and then update and let's test
02:39 - for get mouse button down on the Left
02:42 - mouse button so button 0 and in here
02:48 - we're going to grab the mouse wheel on
02:49 - position so for that I can use a
02:51 - function from the utilities which is
02:52 - almost I can download from unity calm
02:54 - calm so using the utilities and in there
03:01 - there's a function to get the mouse warm
03:03 - position so we get it and then let's
03:07 - just store it on a simple T all right
03:12 - just like that and then we do a input
03:15 - get mouse button up on the same left
03:18 - mouse button and then in here and let's
03:22 - do a debug log on both positions all
03:28 - right so we should be able to see the
03:29 - wall with the correct positions let's
03:30 - test okay so here we are and what's
03:33 - pressing here move to here and release
03:35 - and you've there you go there's our two
03:37 - correct positions awesome alright so
03:39 - back in our code now since we have our
03:42 - positions we can now do a simple test to
03:44 - test if something is inside of that
03:46 - position and for that we're going to use
03:48 - the physics so we're going to go into
03:50 - physics 2d in order to call overlapped
03:54 - area on so this will return all the 2d
03:57 - colliders within a certain area so in
04:00 - here we can pass the start position and
04:02 - this current mouse born position now
04:05 - this returns an array of toilet or 2d so
04:10 - these are all the colliders within that
04:12 - area and now let's just the way for each
04:19 - alright so we just suck on through it
04:22 - and do a lot so we should be able to
04:24 - find out all the objects within our
04:25 - selection area
04:26 - what's test okay here we are so if I
04:28 - press here and let go in here
04:30 - yep it's empty so nothing but if I press
04:32 - here and let go in here if there you go
04:34 - we found our unit here in the editor you
04:36 - can see that the unit has a box on
04:38 - either so this is how we are detecting
04:41 - it so with this our logic is working
04:43 - click here and let go in here and yep
04:44 - it's empty but click here and let go in
04:46 - here and you've there you go there's the
04:48 - unit ok great so we now have our game
04:51 - objects within the solution area however
04:53 - we also need to identify them for
04:55 - example here is a rock which also has a
04:57 - Collider and if I press in here and let
05:00 - you in here if they're your we
05:01 - identified both of them now obviously we
05:03 - only want to select units so let's
05:06 - identify our objects for that let's
05:08 - create a new C sharp script and this one
05:11 - we're going to call our unit urk yes
05:13 - let's select the unit prefab and drag
05:16 - the script on to it okay so for now
05:18 - let's leave this script just like this
05:19 - and back in our control over here when
05:22 - we are cycling let's set up a list of
05:24 - all our selected units so up here let's
05:27 - make a private list of type unit RTS
05:30 - this will be our selected unit RTS list
05:34 - and we're going to initialize it on our
05:37 - awake and now in here when we are
05:41 - cycling through all of our colliders now
05:43 - the first thing we're going to do is
05:45 - clear our list then we cycle through
05:47 - them we try to get the unit RTS
05:50 - component so we do a get component of
05:55 - type unity RTS on each Collider and then
05:57 - we simply test if the unit RTS if it is
05:59 - not known then that means this commander
06:03 - has our components so we add it to the
06:05 - list
06:07 - all right so just like that then for
06:11 - testing let's do a debug log on the
06:13 - selected count and for testing in here
06:18 - and let's also duplicate our prefab put
06:20 - it in here ok let's see ok so here we
06:23 - are with our two units in our Rock now
06:26 - first of all I click here and what's
06:27 - going here and yep zero nothing is
06:29 - selected now click here am I doing here
06:31 - yep
06:32 - we have one selected now let's also
06:33 - include the rock and yep just one so it
06:36 - correctly identified that the rock is
06:37 - not a unit and I'll click here and let
06:39 - go in here any of their ego we have to
06:41 - alright so far so good we have our unit
06:44 - selection working now let's add a nice
06:46 - visual so for that let's open up the
06:49 - unit prefab and in here let's add a new
06:51 - sprite renderer call it our selected and
06:54 - in here I have a nice texture yep just
07:01 - like this so we're going to show or hide
07:03 - this depending on whether the intestine
07:05 - lighten now let's go back to our unit
07:07 - RTS component and in here we're going to
07:10 - have a simple game object filmed for our
07:13 - selected game object and then we're
07:18 - going to grab it on our away alright so
07:24 - we grab it by doing a transform file and
07:26 - we get game object and then we have a
07:28 - function to set the eave is ability and
07:30 - we simply set the game object whether
07:31 - active or inactive now we need this go
07:34 - back into our RTS controller script and
07:36 - in here before we clear our own list
07:38 - let's firstly select all of our objects
07:40 - so we cycle through all the unit Arceus
07:44 - in our selected list so we deselect all
07:52 - of our units and then we select all the
07:55 - units within the selection area so here
07:59 - we set this unlike visible to true
08:00 - alright so that should be working now
08:03 - finally by default let's just keep it on
08:05 - hidden so on awake we also do sets
08:08 - unlike the two phones okay let's test ok
08:12 - so here we are and they're all normal
08:14 - now click in here and let's go in here
08:15 - yep nothing now coming here and let go
08:17 - here yep so like now and click here and
08:18 - let go here yep some like that one now
08:20 - click on empty any of their go both the
08:22 - selected all right so we can now
08:24 - visually see which units are selected
08:26 - awesome now let's get to work on
08:28 - actually making the selection area
08:29 - visible so back in the editor let's
08:32 - create a new empty game object let's
08:34 - call this our selection area and then
08:37 - inside it we're going to create a new
08:39 - sprite and for the sprite version let's
08:41 - select the white pixel so here is as you
08:45 - see it's literally just a one-by-one
08:47 - white pixel and now in here with the
08:50 - child we're going to offset it to the
08:52 - side and upwards by doing this we're
08:55 - essentially modifying the apparent pivot
08:56 - so now the parent pivot is on the only
08:58 - one left side so we're going to do is
09:00 - we're going to place this object on the
09:02 - lower left side of the selection area
09:04 - and then we're going to scale it in
09:07 - order to find the correct size okay so
09:12 - let's do that now back in our RTS
09:14 - controller the first thing we need is a
09:16 - reference to that selection area
09:17 - transform so let's add a sterilized film
09:21 - we have our field and back in the editor
09:25 - we just write the reference okay
09:27 - and now first of all we're going to
09:29 - start off with it hidden so on a week
09:31 - let's go grab the game object to set
09:33 - active to false in order to hide it okay
09:35 - and then when we press the left mouse
09:38 - button down we're going to show it so
09:40 - set active to true and when we release
09:42 - then we're going to hide it again okay
09:45 - so that's the visibility now we need to
09:47 - scale and position that accordingly so
09:49 - let's do a if our input get mouse button
09:55 - so this one returns true for every
09:57 - single frame whilst the mouse is held
09:59 - down so it's in here that we're going to
10:02 - take our selection area transform now
10:05 - we're going to set the position and the
10:06 - scale so for that we need to come late
10:09 - the in lower left and the upper right
10:10 - positions okay so we're common leaning
10:19 - the in lower left we're essentially
10:21 - doing a method min on the start position
10:23 - X and the current Mouse position X so we
10:26 - get in lower left and the upper right
10:27 - then we're going to position it on the
10:30 - in lower left and we're going to scale
10:31 - it based on the difference all right
10:38 - that should be working
10:39 - let's test okay so here our and the
10:42 - selection area starts off invisible okay
10:44 - now I click here and drag and yep there
10:47 - you go there's a selection area
10:48 - perfectly fitting the correct position
10:49 - and I can drag from left to right and
10:52 - right to down and if I go and I select
10:54 - these to give their yo correctly
10:56 - selected right awesome now let's just
10:58 - make the selection area
10:59 - top and tinted in green alright so here
11:02 - it is now it's in green and shows up on
11:04 - top all right awesome so here we have
11:06 - our nice selection area so now that we
11:09 - can select various units now let's give
11:10 - them some orders so let's give them a
11:13 - move order now here in the unit game
11:15 - object the setup for this unit is based
11:18 - on a modular character controller that I
11:20 - covered in a previous video so here you
11:22 - can see the various modules that this
11:23 - character has so it has a movie any
11:26 - movie ssin direct component we're going
11:28 - to use this module which won't take our
11:31 - character move it to a position directly
11:32 - and we're just going to call this
11:34 - function so on our unit RTS script let's
11:37 - do a public void call it move to so we
11:46 - get the component of type move position
11:48 - and then we set our move position again
11:50 - go check out that video which covers in
11:51 - detail how we made this nice modular
11:53 - system so all we need to do is simply
11:56 - call this function so let's go back into
11:58 - the RTS controller and in here let's add
12:00 - another if for if in this case input get
12:04 - mouse button down on the right mouse
12:05 - button so button 1 and in here let's I
12:09 - go through all of our selected units and
12:13 - we're simply you need to tell them to go
12:14 - towards the mouse position all right so
12:21 - just like that so let's test ok here we
12:24 - are and first of all if I right click
12:25 - yep nothing happened since no Yenta
12:27 - selected now let me select this one and
12:29 - right click any up there you go he gets
12:31 - the order and he moves to the target
12:32 - position now some like this one itself
12:34 - give the earth any of there they go
12:36 - correctly in there now some like both of
12:38 - them quick and yep they both go to the
12:40 - same position right great now as you can
12:42 - see we have one issue which is that both
12:45 - of them are going in to the exact same
12:46 - position so let's solve that by
12:48 - calculating multiple valid positions so
12:51 - let's first test that out with some
12:52 - fixed positions so let's make a list of
12:55 - vector three
12:59 - all right so here we have a simple list
13:02 - of positions all in a nice line and now
13:05 - when we second through them let's send
13:07 - them to a specific position all right so
13:14 - we cycle through them and we give each
13:16 - of them a different position on the list
13:17 - so let's test so here we are and select
13:21 - both them and tell them to go any of
13:23 - their ego they went to different
13:24 - positions
13:25 - all right great now let's add some more
13:27 - units all right so we have a bunch of
13:33 - units now select them all click any of
13:36 - their ego they each went to account
13:37 - elated position all right so when we
13:39 - really need to do is dynamically
13:41 - commonly in a bunch more positions so
13:43 - let's do that now we're going to come
13:45 - late valid positions around a certain
13:47 - circle all right so here it is
14:01 - essentially we take a start position
14:04 - along with a distance for the circle and
14:06 - eternal number of positions then we
14:09 - second through all of our positions we
14:11 - can lead a different angle for each of
14:13 - them depending on the index then we
14:15 - apply a simple rotation in order to
14:17 - convert that angle into a direction and
14:19 - then we construct our final position
14:21 - based on the start position was the
14:23 - direction times the distance so now up
14:26 - here we can use this in order to
14:27 - complete our target position list so we
14:30 - get position list around our move to
14:32 - position within this and seven let's say
14:35 - ten F and let's come late five positions
14:38 - all right so let's test alright here we
14:41 - are let's select all of them and right
14:43 - click and if they're going like that all
14:45 - of them went to a different generated
14:47 - position around a nice circle awesome
14:49 - okay so here we have valent positions
14:51 - now let's just make a bunch more circle
14:54 - so we can control tons of Units
15:05 - all right so just like that we receive
15:08 - an array of all the ring distances an
15:10 - array of all the ring positions and then
15:12 - we simply do an ad range and we use our
15:14 - function so up here and let's use this
15:17 - one instead so we're going to have a
15:23 - ring at a distance of ten lists of 20
15:25 - and distance of 30 and 40 positions all
15:33 - right so this should be working
15:34 - let's test back in the editor and let's
15:37 - generate a ton more Guinness okay so
15:43 - here we are and we can sell some like
15:44 - just one and just move it around and now
15:47 - select all of them and put them all in
15:49 - the same position and yep there you go
15:50 - they all go go go and if they're this
15:53 - alright so each of them went to a
15:55 - different position and here we have all
15:57 - of them and it works very nice so I can
16:00 - select all of them some like just a
16:01 - bunch just ease so like just one just
16:03 - one and move them and yep there you go
16:06 - nice controls all right so here's our
16:08 - RTS controls all fully working we can
16:11 - click the select a single unit and then
16:14 - right click the town to move somewhere
16:15 - then we can click on empty space in
16:17 - order to deselect and then we can click
16:19 - and drag in order to make a selection
16:20 - area to select multiple units and
16:22 - right-click to tell them all to go and
16:23 - they each go into their own calculated
16:26 - position so just like that over here we
16:28 - have a very nice
16:29 - RTS control system so I can select
16:32 - whatever units I want and give them some
16:34 - move orders you can expand upon this
16:36 - system to add any type of order you want
16:38 - like for example grabbing items
16:40 - attacking enemies constructing buildings
16:41 - and so on stay tuned for an upcoming
16:44 - video where we're going to add some
16:46 - actions and some really cool custom
16:48 - animated cursors based on what the mouse
16:50 - is hovering this video is made possible
16:53 - thanks to these awesome supporters go to
16:55 - patreon.com/scishow natee code monkey to
16:57 - get some perks and help keep the videos
16:59 - free for everyone as always you can
17:01 - download the project fanzini tony's from
17:03 - unity karma comm subscribe the channel
17:04 - for more unity tutorials post any
17:07 - personal incomes and I'll see you next
17:08 - time
17:10 - [Music]