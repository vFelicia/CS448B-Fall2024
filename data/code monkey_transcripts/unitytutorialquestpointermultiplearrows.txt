00:00 - hello and welcome I'm your code monkey
00:02 - and in this video we're going to take
00:03 - our previous UI arrow pointer and add
00:05 - the ability for multiple pointers let's
00:07 - get started
00:10 - so we previously created this arrow
00:12 - pointer in here it's pointing to a
00:14 - position in the world and displaying it
00:16 - as an arrow when the position is
00:18 - off-screen it should it's off to the
00:19 - side and chose an arrow when the
00:21 - position is on-screen and converts into
00:23 - a cross and it's placed on top of the
00:24 - target position we also have some code
00:27 - testing if we are near position and when
00:29 - we get close the arrow changes position
00:31 - oh just like that alright so now we want
00:34 - to be able to display multiple arrows
00:36 - pointing to different positions so first
00:38 - let's go into our quest pointer code in
00:41 - here someone pointed out in the previous
00:43 - video that there's a better way to test
00:45 - if the values are within the range and
00:47 - that is to use math F dot clamp so let's
00:50 - use that right now this week works by
00:52 - using clamp Oh make it cleaner so let's
00:54 - make our cafeteria position dot X equals
00:58 - method clamp clamp takes a value and
01:02 - puts it in between amen and maximum so
01:05 - the men is the border size and in this
01:07 - case the maximum is screen dot with
01:09 - minus our border size do the same thing
01:14 - for the wine using the Y bar size and on
01:18 - height and remove all this all right so
01:22 - this should work exactly the same but
01:23 - it's a bit more clean and there you go
01:26 - the arrow is still correctly placed
01:28 - within a border of the edge of the
01:30 - screen and everything is working the
01:31 - same ok great so now in the editor and
01:34 - let's place a couple more tents
01:36 - so let's duplicate place another one
01:38 - down here and another one far off in
01:41 - here we want to display different arrows
01:43 - pointing to each of these tents ok so
01:45 - let's go into our window code and in
01:48 - here we're using a show function which
01:50 - is consistent with the way this class is
01:52 - set up the window is shown when the
01:54 - function is called but now we want to
01:56 - have the window always active and create
01:59 - and destroy each individual arrow so
02:01 - let's rename show in to create pointers
02:03 - so rename create pointer as a little
02:06 - visual studio tip if you hit ctrl R R
02:09 - you can easily rename a function and it
02:12 - will rename every instance where that is
02:14 - used so now in here we're going to take
02:16 - a target position as normal but we're
02:19 - not going to select event
02:21 - to set a member position in here we're
02:23 - going to create a pointer object so
02:26 - let's first make a public class and call
02:28 - it quest pointer and we're making this
02:33 - public since we want to return this
02:35 - object to whoever wants to create a
02:36 - pointer let's make a constructor so
02:39 - public quest pointer and in here we're
02:42 - going to take a vector3 for our target
02:45 - position and store it as a member
02:48 - variable since each pointer is going to
02:53 - have its specific game object we're
02:55 - going to receive a game object for the
02:57 - pointer game object and also a sprite
03:01 - for the arrow sprite and another sprite
03:04 - for the cross sprite so on our create
03:12 - pointer let's create this object so make
03:14 - a quest pointer a quest pointer equals
03:16 - new quest pointer we're going to give it
03:19 - the target position for the pointer game
03:21 - object let's make a pointer game object
03:26 - and it's going to be a duplicate of our
03:28 - pointer template which is going to be
03:30 - essentially this let's just rename it
03:33 - back in our editor but it's going to be
03:35 - the same thing in here and we're going
03:42 - to give it in here also give it the
03:44 - arrow sprite and across sprite and
03:47 - finally let's return the quest pointer
03:49 - from our function return the quest
03:52 - pointer okay so now that we're creating
03:54 - this object and let's convert the rest
03:56 - of the code to use a subject instead of
03:57 - our previous member variables so let's
03:59 - go up here instead of having all this
04:01 - let's have a private quest pointer quest
04:04 - pointer and let's remove all of this
04:07 - which will actually be placed in our
04:10 - specific object and on awake instead of
04:13 - doing this we're going to do this on our
04:15 - constructor and we're going to have a
04:18 - public void update which we're going to
04:21 - execute the code that we were running
04:23 - previously and here so let's go copy all
04:26 - this into the specific object update
04:28 - copy the helper function as
04:31 - here there you go and on our update
04:34 - we're simply going to run the quest
04:36 - pointer dot update and also again since
04:40 - we're no longer hiding this window let's
04:42 - remove the hide in here in order to do
04:44 - our screen to our own point calculations
04:46 - we also need the UI camera so let's pass
04:49 - that in as a parameter as well so the UI
04:53 - camera let's pass it in in here
04:57 - alright so essentially our code is still
05:01 - working exactly the same but we have
05:03 - reorganized it to use an object instead
05:05 - of running everything on the windows
05:06 - update and then here set the member of
05:09 - quest pointer to this quest pointer so
05:12 - finally let's go into our game Handler
05:14 - and right now let's only create the
05:15 - pointer and comment out on this code
05:18 - right here ok so we're only creating the
05:20 - point so right now we should see pretty
05:23 - much the same thing that we saw
05:24 - previously ok so there you go that arrow
05:26 - is working exactly the same when I get
05:28 - to the end it gets placed on top ok
05:31 - great as you can see there is a
05:33 - secondary arrow here that is our
05:34 - template which we're going to hide but
05:36 - as you can see everything is working
05:38 - exactly the same but our code is now
05:40 - organized to be able to easily support
05:42 - multiple arrows so let's first go into
05:45 - our UI in here and rename this to
05:48 - pointer template and let's just hide it
05:51 - this is what we're going to use to
05:52 - duplicate to create our various pointers
05:54 - it's going here instead we're having the
05:56 - pointer it's the pointer template and
05:59 - when we create it we also have to do
06:01 - that set active to true yep there you go
06:05 - now I can only see my arrow ok good
06:08 - so now in order to add support for
06:10 - multiple arrows let's simply switches
06:12 - out from a simple quest pointer to a
06:14 - list of quest pointer name is what's
06:16 - pointer list in here we want to add our
06:19 - newly created quest pointer to our quest
06:22 - pointer lists so let's go into the quest
06:24 - pointer list and add this quest pointer
06:28 - ok
06:29 - now up here on our awake let su quest
06:32 - point journalist equals new and Senshi 8
06:34 - our list and on our update we are going
06:37 - to go for each quest pointer quest
06:40 - pointer in quest pointer list
06:43 - and we're going to run our update all
06:45 - right so let's make sure everything is
06:46 - done working the same yep there I am
06:49 - there's a single arrow okay good so now
06:51 - let's go into our game hammer and create
06:53 - multiple pointers
06:58 - all right I am now creating a pointer on
07:01 - top of each specific tenth yep there you
07:03 - go we now we have three arrows let's see
07:06 - if they are pointing correctly and yep
07:08 - that one's playing two down one pointing
07:10 - to that one and that one is pointing
07:11 - away okay great so it seems like our
07:14 - multiple arrows are not correctly
07:15 - working so now the only thing missing is
07:17 - the ability to destroy them let's go
07:19 - into our window code and here let's make
07:21 - a public void destroy pointer and we're
07:26 - going to receive a West pointer as our
07:28 - parameter so West pointer so in order to
07:32 - destroy it let's remove it from the list
07:35 - remove our West pointer and let's create
07:38 - a function called destroy sound which
07:40 - we're going to place on our object in
07:42 - here public void destroy song and this
07:46 - function will destroy the game object so
07:48 - destroy the pointer game object okay so
07:52 - on my game handler in here when you
07:54 - create a new pointer the function to
07:57 - create the pointer returns a quest
07:59 - pointer so let's store that so store our
08:03 - window quest pointer dot quest pointer
08:05 - so first pointer so we are storing a
08:10 - reference to our pointer and here let's
08:12 - create a function updater the function
08:15 - updater is part of the code mock
08:16 - utilities which is almost you can grab
08:18 - for free from ent code monkey comm and a
08:21 - function updater
08:22 - triggers a action on every update so on
08:25 - this update we want to test if the
08:28 - player is near our quest point so let's
08:31 - test if vector3 not distance between the
08:34 - cameras main position the distance
08:38 - between that and our pointer position
08:41 - which in this case is 245 if it is under
08:45 - 40 F then let's simply destroy this
08:47 - quest pointers so going to our window
08:50 - quest pointer dot destroy the pointer
08:52 - and we're going to destroy this pointer
08:53 - and finally return true
08:56 - to destroy this function update okay I'm
08:59 - let's see if the first pointer is
09:01 - destroying when we get near it okay so
09:03 - here I am that's the first arrow so when
09:06 - I get near it should vanish and poof
09:08 - there you go it's gone
09:10 - all right let's apply that to all the
09:11 - others all right so here I am and when I
09:23 - get near to the first arrow and boom it
09:26 - vanishes the second vanishes and the
09:29 - third one there it is on the corner in
09:32 - there and when I get near it vanishes so
09:34 - there you have it
09:35 - we took our UI arrow pointer window and
09:37 - converted it to support multiple arrows
09:39 - in the next video we're going to
09:41 - customize our pointers with different
09:42 - sprites and colors as always you can
09:45 - download the project files in utilities
09:46 - from unity code monkey comm if you have
09:49 - any questions post them in the comments
09:50 - and I'll do my best to answer now
09:51 - subscribe for more videos and I'll see
09:53 - you next time