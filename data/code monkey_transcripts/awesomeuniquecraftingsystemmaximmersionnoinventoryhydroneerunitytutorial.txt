00:00 - hello and welcome I'm your code monkey
00:01 - so a while ago I was playing the game
00:03 - hydroneer it's a pretty interesting
00:05 - crafting building automation game one of
00:08 - the more unique things about it is how
00:09 - the game has no UI at all nothing exists
00:12 - outside of the world so there's no
00:13 - virtual inventory all of the items exist
00:15 - in the world itself and there's also no
00:17 - UI to select options like for example
00:19 - what to craft it's a pretty unique
00:21 - mechanic a very unique crafting system
00:23 - and something that is actually quite
00:24 - simple to do so if you want to
00:26 - experiment with making a game with no UI
00:28 - for your next project then let's look at
00:29 - how it's done and before I show you how
00:32 - it's done try to guess how you would
00:33 - make this basically you just need to
00:35 - figure out if a certain item is placed
00:36 - on a certain position like for example
00:38 - above the Anvil that is actually super
00:40 - simple just requires a bit of physics
00:41 - also by the way if you like this format
00:43 - check out the entire How It's Made
00:44 - playlist where I remake various
00:46 - mechanics from various games I've remade
00:49 - some whirl interactions from cyberpunk
00:50 - remade the soil moisture system from
00:53 - Endzone World Part I made the cleaning
00:55 - minigame from Rover mechanic simulator a
00:58 - bunch of interesting effects from Hades
00:59 - and several more so if you want to learn
01:01 - how all those mechanics are made check
01:03 - out those videos If you prefer a more
01:05 - guided path with step-by-step lectures
01:07 - then check out my complete courses learn
01:09 - how to make a builder Defender game
01:11 - using c-sharp or learn how to make games
01:13 - internally using visual scripting
01:14 - perhaps if you're past the beginner
01:16 - stage and want to make the jump to
01:17 - Advanced then check out my turn-based
01:19 - strategy course to learn how to manage a
01:21 - more complex project and write some good
01:22 - clean code or learn all about Unity with
01:25 - the ultimate unity overview course which
01:27 - contains over 15 lectures each covering
01:29 - a different two-hour feature of the
01:30 - engine I'm always available in the Q a
01:32 - section answering your questions every
01:34 - single day so check them all out with
01:35 - the link in the description alright so
01:37 - here let's build this here is my
01:39 - starting demo I have a player character
01:41 - in first person and I can move and walk
01:43 - around this controller is from the
01:45 - official ENT start assets which I
01:46 - covered in another video
01:48 - and then for the assets used in this
01:50 - demo these are from the Cindy polygon
01:52 - fantasy Kingdom pack there's a link in
01:53 - the description if you want to get it so
01:55 - I have this and then I also have a
01:57 - simple script to pick up and drop
01:58 - objects I covered this one in detail in
02:00 - another video go watch that if you want
02:02 - to learn how this system works how to
02:03 - pick up and drop objects with this I can
02:06 - look at any object I can press a button
02:08 - to pick it up it picks up the object and
02:10 - hovers in from the camera and then I can
02:12 - press another button and drop the
02:13 - objects and Falls along with gravity so
02:15 - I have a whole bunch of iron ingots and
02:17 - some gold ingots over here on this table
02:19 - and then over here I've got a whole
02:21 - bunch of gemstones and again I can pick
02:22 - them up on then another script in this
02:25 - demo is for interacting with the info
02:26 - here for selecting the recipe
02:28 - on the player I have this script so it's
02:30 - reasonable just listens to the key down
02:32 - or button down does a Rick has to figure
02:35 - out if the envelope is in front if so
02:38 - tries to get the component identify that
02:39 - it's an anvil and if so then on the E
02:41 - button call the next recipe function and
02:44 - on Mouse click let's call The Craft
02:45 - function then for these two functions
02:47 - over here is the script super simple
02:49 - over here it just Cycles through a list
02:51 - of crafting recipes and for those
02:53 - recipes I'm using a scriptable object I
02:56 - cover the crafting system with script on
02:58 - objects quite a while ago you can go
02:59 - watch that to learn some more Baseline
03:01 - definition is super simple HSA
03:04 - scriptable object that holds a reference
03:05 - to the Sprite object then a list for the
03:07 - input items and finally a output item
03:10 - that's right is what is used over here
03:12 - on the info the envo object inside it
03:15 - has a canvas this is a world space
03:17 - canvas also something that I covered in
03:19 - another video that is how you can place
03:20 - a canvas in the world and use something
03:22 - so over here I've got a recipe image
03:24 - which is just a simple image component
03:26 - and over here it's got a source image so
03:28 - this is a sprite and when pressing
03:30 - button to modify the next recipe it also
03:32 - goes into the recipe image and modifies
03:33 - the new Sprite so this is my basic
03:36 - starting scene I can pick up and drop
03:37 - some items and over here I can interact
03:40 - with the envelope I can tell it to go
03:41 - into a different recipe or I can press a
03:44 - button or to try to craft however trying
03:46 - to craft doesn't actually do anything
03:47 - that's what we want to do so let's build
03:50 - that and like I said all we need to know
03:52 - is to know which items are placed over
03:54 - here on top of the Anvil so over here on
03:57 - the envo script let's go down into the
03:59 - crafting function and over here it's
04:01 - quite simple how we identify things is
04:03 - like I said using physics so we can use
04:05 - physics and over here we've got a bunch
04:07 - of overlap functions each of these has a
04:10 - different shape and what this does is it
04:12 - has if this position this shape overlaps
04:14 - with any other collider in the world in
04:16 - order for this to work all we need is
04:18 - for the objects to have colliders and if
04:20 - we unlock in the inspector we can see
04:22 - over here for example the iron ingots
04:24 - yep they do have a mesh collider so now
04:26 - let's think of which shape makes the
04:28 - most sense in this case for the Anvil it
04:30 - has a bit of a rectangle shame so I
04:32 - think the shape that makes most sense is
04:34 - the overlap box so let's use this
04:36 - function this one as you can see it
04:38 - takes a center position and then half
04:39 - the size
04:40 - now we can write some numbers here to
04:42 - try to find the perfect numbers or for
04:45 - something easier let's just go into the
04:46 - editor and over here let's go inside the
04:49 - interval so here is the Anvil let's
04:51 - create inside an empty new game object
04:53 - let's call it the place items area
04:57 - then over here let's give it a box
04:59 - collider box letter there it is
05:02 - so you can see it that is the box and
05:04 - now we just need to position it
05:05 - correctly and for that we can either
05:07 - modify over here the size so just click
05:09 - and drag all these positions that is one
05:11 - way to do it another one is over here
05:13 - there's the button to edit the calendar
05:14 - this is super helpful so it creates
05:16 - these new gizmos in the scene view
05:17 - there's even little square buttons where
05:19 - you can click and drag in order to
05:21 - reposition and rescale the object so
05:23 - let's use this to position it exactly
05:25 - where we want so let's put it a bit up
05:27 - right on top of there so something like
05:29 - this make it a bit smaller okay so
05:31 - that's pretty good again doesn't have to
05:33 - be perfect this round is just an
05:35 - invisible collider so we just want to
05:36 - test for example if the earning it drops
05:38 - anywhere inside this area so this is
05:40 - correctly set up however one very
05:42 - important thing you might have noticed
05:43 - right now is that if we leave it like
05:45 - this and now I go and I pick up
05:48 - something like this Jewel when I drop it
05:49 - in there there you go everything breaks
05:51 - so the journal is now flying on top of
05:53 - an invisible box this is not what we
05:55 - want so here inside the invo let's just
05:57 - take this object and completely disable
05:59 - this game object that way the collider
06:01 - will no longer have any effect
06:02 - whatsoever we really just want to use
06:04 - these values and also by the way just a
06:07 - quick note over here you might have
06:08 - thought of a different way of doing this
06:10 - you couldn't leave this enabled and just
06:12 - set this one as a trigger and then test
06:14 - for trigger collisions that could work
06:16 - that would be a valid approach however
06:18 - the game that we're remaking here
06:19 - already has tons of physics objects with
06:22 - that the more physics object you have
06:23 - the less performative game becomes so
06:26 - while that would work it would also be
06:28 - unless efficient since you would need to
06:30 - have this physics object always existing
06:32 - in the world whereas here in The Code by
06:33 - doing an overlap box and only calling
06:35 - this on the craft we're going to make
06:37 - sure that we only query the physics
06:39 - world just once when we actually need it
06:41 - but for the most part this is a case of
06:43 - personal preference so if you want you
06:45 - can go ahead and use the trigger method
06:46 - but in my case I'm just going to use
06:48 - this object only to get these values so
06:50 - here on the script let's add a
06:52 - serialized film for that object so a
06:54 - serialized filmed
06:55 - we can make directly of type box
06:57 - collider let's call the place items area
07:00 - box Collider
07:02 - okay let's just go down here let's
07:05 - comment this just so the code compiles
07:07 - so here on the invo let's drag the
07:09 - reference to the place items area and
07:11 - let's drag it over there okay
07:13 - okay so now let's use those values as
07:15 - our parameters so let's go into the
07:17 - place items area boxing letter let's
07:20 - grab the center however here also be
07:22 - careful that the overlap box this one
07:24 - takes a center but that is a gullible
07:26 - position whereas the center on the
07:28 - boxing either this one is in low
07:29 - composition we can see if I'm looking
07:31 - into the place items area
07:33 - over here the center values you can see
07:35 - it's pretty much 0.5 and 0. however if
07:38 - you look at the end volume we can see
07:39 - that the envelope position which is the
07:41 - ignorable position this one is not
07:43 - anywhere near zero zero so what we have
07:45 - here is a low composition but what this
07:47 - function requires is a global position
07:49 - so we need to make sure to add this
07:51 - transform that position onto the center
07:52 - that's how we get the correct position
07:55 - and then for the half extends this one
07:58 - is the place items box collider dot size
08:01 - by the way just a quick note on why this
08:04 - is called half extends that is because
08:05 - previously the boxing letter used to
08:07 - have something called the extents but as
08:09 - you can see this one is now considered
08:10 - deprecating so you should instead be
08:12 - using the size and the reason why that
08:14 - one is half extensive is because this
08:16 - extent used to be double the size but
08:18 - the size already has it correct so
08:20 - anyways just explaining why the name is
08:22 - called that either way half extends
08:24 - equals the size then we can also add
08:26 - another parameter for the orientation so
08:28 - the rotation of the virtual box that
08:30 - we're going to test for the overlap it's
08:32 - over here for the orientation let's go
08:34 - into our boxing leather and on the box
08:36 - lighter itself we don't have any
08:38 - rotation so we need to access the
08:39 - transform in order to gravity rotation
08:41 - and finally optionally we could use a
08:43 - layer mask but over here let's just test
08:45 - for on collisions and then manually see
08:47 - which ones are items okay so we have the
08:49 - overlap box so this is a physics query
08:52 - to get all of the colliders within this
08:54 - position
08:55 - so let's grab a con leather array for
08:57 - all of the collectors
08:59 - so we do it over on the box all right
09:01 - and we have the completed array then
09:03 - from here let's just cycle through so do
09:05 - a for each con later
09:08 - let's grab the color editor from the
09:09 - command letter ring
09:12 - and over here just for testing let's
09:13 - just do a debug download on this
09:15 - collider to see what it says okay so
09:17 - here we are on let's approach and I
09:19 - press the craft button and there you go
09:21 - it does craft and does identify three
09:23 - are actually Four objects so you can see
09:25 - that it found the table so this is one
09:27 - of these tables to the side then it
09:29 - identify the envelope itself twice
09:31 - that's because it has both a meshed on
09:33 - either as well as a box on leather and
09:35 - then also since I'm really close it also
09:36 - identify the player controller and if I
09:39 - grab one of these so let's say grab this
09:40 - Gem and drop it in there and I press the
09:42 - craft button and there you go now it
09:44 - does identify also the item Gem and if I
09:47 - go and I pick up an iron ingot and drop
09:49 - it and I press the craft button again
09:51 - and there you go you have the earning it
09:53 - and the jump all right great so
09:54 - everything is working now we need to do
09:56 - is just identify which one of these
09:58 - objects are items and if they match the
10:00 - recipe input so back in the script here
10:02 - let's identify the items and we can do
10:05 - that very easily because each of the
10:07 - objects actually has an item so holder
10:09 - component here in the editor if we
10:11 - select an iron ingot down here as you
10:13 - can see it does have an item so holder
10:15 - and this one is really just a basic
10:16 - script so here it is literally just has
10:18 - a film for the item as well so this
10:20 - ironing it contains a reference to the
10:22 - iron ingot scriptable object so over
10:24 - here on the info let's just do it let's
10:26 - just go into the collider try to get the
10:28 - component of type item holder so
10:34 - so we try to get this component if so
10:36 - then that means that this object this
10:37 - collider belongs to something within
10:39 - item scriptable object now we need to do
10:41 - is test if this matches of the required
10:43 - input for the recipe for the recipe
10:45 - again I'm also using a script more
10:47 - object and over here inside I've got a
10:49 - list of items so for the input items on
10:51 - list so let's just grab this list so the
10:54 - way we're going to test if everything is
10:55 - inside let's go into the recipe
10:57 - scriptable object and I've got the input
11:00 - items on list and let's just duplicate
11:02 - this one so in your list of item so so
11:06 - the input item list
11:08 - equals a new list and let's duplicate
11:11 - that list you'll see why I'm duplicating
11:13 - in a bit so over here with this
11:15 - duplicating list we don't want to modify
11:17 - the original but on the duplicate let's
11:19 - go into that list and let's come remove
11:21 - and try to remove the one from this item
11:23 - so this one and remove the item so so we
11:26 - get a copy of the input item list then
11:28 - we cycle through all the commanders we
11:30 - get the atomso for that particular
11:31 - object and we try to remove that item so
11:34 - from the list meaning that after this
11:36 - logic is done if down here the input
11:38 - item is on list if this will not count
11:41 - if this one is zero so if the input
11:43 - noise is empty that means we've removed
11:45 - all the required ones which means all
11:46 - the required items are indeed on top of
11:48 - the envelope object so if we have this
11:50 - then we can craft
11:52 - so if the enlist count is zero
11:55 - if so then we have all the required
11:58 - items
12:00 - so we're here on let's just do analog
12:03 - say something
12:04 - and if not say something else
12:08 - okay let's test so by default we've got
12:11 - the dagger recipe and this one takes you
12:13 - our nuggets and if I click right now
12:15 - then unlock I can see nope I don't have
12:17 - the required items and if I drop just
12:19 - one and click on it nope still nope if I
12:22 - grab a gold ingot and I drop it this
12:25 - should not work so yep there it goes
12:27 - then we gotta know so let's take away
12:28 - the gold ingot and drop an iron ingot
12:31 - and now if I click if there go got it
12:33 - yes all right so on logic is indeed
12:35 - working so what's left is over here just
12:37 - spawn the object and destroy the items
12:39 - for spawning the object that is very
12:41 - simple we just go into the crafting
12:43 - recipe so
12:44 - and in that one we've got the output
12:46 - item so and on the ismso over here we've
12:49 - got a prefab so let's instantiate this
12:52 - so instantiate this prefab
12:54 - now we also need to know where exactly
12:56 - we're going to instantiate so we need a
12:58 - Target position let's do that as a
13:00 - serialized film so we can drag it so
13:03 - over here let's make another serialized
13:04 - film a private transform
13:08 - let's go with the item spawn point
13:11 - and also just for fun I also have a
13:13 - prefab with a nice smoke effect so let's
13:14 - also add a film for that one so you
13:17 - private also a transform
13:18 - it's called the VFX spawn item
13:22 - okay so let's drag these references so
13:24 - over here in the editor on the envo
13:26 - let's drag these so first we need to
13:27 - make it so let's right click let's
13:28 - create an empty game object for the item
13:31 - spawn point
13:33 - and then let's just position it right
13:35 - above so something like this
13:38 - okay there's our Point Let's just drag
13:40 - the reference for that one and then for
13:42 - the smoke over here I've got a nice
13:44 - smoke particle effect so let's drag that
13:45 - one okay now we can go down here and
13:49 - we're going to instantiate the prefab
13:50 - and then it asks us for the position
13:53 - where we want to instantiate it so let's
13:55 - use the atom spawn point dot position
13:57 - the atom spawn point dot rotation
14:01 - this will be our
14:03 - spawn item transform
14:07 - and then let's also instantiate that
14:08 - smoke effect so instantiate
14:11 - so the VFX spawn item so the smoke
14:13 - effect on the exact same point exact
14:15 - same position
14:17 - all right so this should already be
14:19 - working no the last thing needed is to
14:21 - just consume the actual items so let's
14:23 - actually keep track of which items are
14:25 - going to be consumed
14:27 - so let's make it a list of type game
14:29 - object
14:30 - let's call it the consume item game
14:32 - object list
14:35 - and then over here let's make sure we
14:36 - add it to the list so let's add this
14:39 - calendar.game object however the way
14:42 - that remove works is this is going to
14:44 - run even if it doesn't find this so we
14:46 - need to make sure that it finds us if
14:47 - we're going to add it to this list
14:49 - so before calling remove let's ask this
14:52 - one if it contains if it contains this
14:55 - item so if so then let's remove it and
14:58 - add it to the list and then down here
15:00 - after spawning it let's cycle through it
15:02 - so for each game object for the consume
15:06 - item game object
15:08 - let's cycle through the list
15:10 - and then just call destroy on this game
15:13 - object okay so we spawned the final item
15:16 - which has a prefab reference inside the
15:18 - atomso again if this seems confusing
15:20 - make sure you watch the scriptable
15:21 - objects video they are super useful
15:24 - this is all super simple stuff then we
15:26 - should spawn the particle effect and we
15:27 - destroy the actual items okay so let's
15:30 - do this so here we are and let's select
15:32 - the recipe and let's begin with dagger
15:34 - so let's pick up just one drop it and
15:36 - try to craft and nope nothing happens
15:38 - all right let's drop a gold ingot and
15:40 - see what happens so let's drop click to
15:42 - craft nope nothing happens now let's
15:44 - drop another iron ingot and now if I
15:46 - click if there you go the iron ingots
15:48 - were consumed and over here I've got my
15:50 - really nice dagger all right awesome
15:52 - let's put it on this thing right here
15:55 - there you go it flies around but yep
15:56 - let's drop it in there and we actually
15:58 - already saw that we can drop as many
16:00 - things as we want in here and it only
16:02 - consumes the things that it requires so
16:04 - if I drop a ruby in there drop another
16:06 - iron ingot and we still have the actual
16:09 - over here the dagger selection so let's
16:11 - wrap this one and drop another one
16:14 - and that one actually fell down but okay
16:16 - let's drop another one and craft and
16:18 - there you go yep it does craft and those
16:20 - objects were not destroyed so it is
16:22 - correctly only destroying the things
16:23 - that are required
16:25 - and now let's talk about the recipe so
16:27 - for the ring so we just need a gold
16:29 - ingot and a ruby a gemstone so let's
16:31 - press and there you go here is my really
16:33 - nice ring look at that really nice
16:35 - all right so here as you can see the
16:37 - crafting system is only working
16:39 - I can interact to select the recipe I
16:42 - can place all the objects that required
16:44 - for the recipe and I can press a button
16:46 - to turn those objects into a completely
16:48 - different object and again the whole
16:49 - thing works without any UI whatsoever
16:51 - there's only one canvas to select the
16:54 - recipe but there's no virtual UI no
16:56 - virtual inventory no virtual nothing
16:58 - everything works perfectly inside the
17:00 - world so this is a really nice really
17:01 - immersive nice system and like I
17:03 - mentioned everything in the home game
17:05 - has no UI
17:06 - so for example how you buy things is you
17:08 - pick them up from the store and drop
17:10 - them on this area then you drop some
17:12 - coins in the bucket and you press a
17:13 - button and again all of this works in
17:15 - the exact same way so it does an overlap
17:17 - box on the buy area to identify the
17:19 - items in the shopping area
17:21 - then there's an overlap sphere on the
17:23 - bucket to end and file the coins and
17:25 - then just triggers a simple interaction
17:26 - with the button so all of it's super
17:27 - simple
17:28 - so if you'd like to experiment with
17:30 - making a game with no UI for your next
17:31 - project then now you know how easy it is
17:33 - to actually do
17:35 - and of course physics queries are super
17:37 - useful in tons of different scenarios so
17:39 - if you weren't familiar with them well
17:40 - now you've gained some really powerful
17:41 - knowledge by the way if you like this
17:43 - format check out the entire How It's
17:45 - Made playlist where I remake various
17:46 - mechanics from various games
17:48 - learn how interacted with the world in
17:50 - cyberpunk it's very similar to this
17:52 - method how I made the path climb
17:54 - animation in Hades how I handle the
17:56 - Scout probe launcher in outer whiles and
17:58 - many more I always enjoy this format of
18:00 - remaking mechanics from interesting
18:02 - games so if you like this format go
18:03 - ahead and hit the like button to let me
18:05 - know again if you want a more guided
18:07 - path with step-by-step lectures then
18:09 - check out my complete courses alright
18:11 - hope that's useful check out these
18:12 - videos to learn some more thanks to
18:14 - these awesome patreon supporters for
18:16 - making these videos possible thank you
18:18 - for watching and I'll see you next time
18:24 - foreign