00:00 - hello and welcome I am your code monkey
00:02 - and in this video we're continuing our
00:03 - mesh creation from code we're going to
00:06 - learn how the UV coordinates work and
00:08 - display a single body part from a
00:09 - spreadsheet let's get started
00:14 - so in the previous video we covered how
00:17 - a mesh is created it is composed of
00:19 - vertices UVs and triangles I mentioned
00:22 - that the UV coordinates are the position
00:23 - in the texture that gets applied to that
00:25 - particular vertex the UV coordinates are
00:28 - represented as a percentage of the
00:30 - texture where the values go from 0 to 1
00:32 - the lower left corner of the texture has
00:35 - a coordinate of 0 0 and the upper right
00:37 - corner has a coordinate of 1 1 in order
00:41 - to make this easier to manage let's make
00:42 - a function that converts pixels into
00:44 - percentages so let's go into our code go
00:48 - down here and we're going to create a
00:50 - new function public we're going to
00:53 - return a vector 2 that won't be used for
00:55 - our movies we're going to call it
00:57 - convert pixels to UV coordinates so in
01:04 - this function we're going to receive our
01:06 - values as pixels and we're going to
01:07 - convert them into UV coordinates in
01:10 - order to derive we're going to receive
01:12 - an index an int for our Y then we also
01:15 - need an end for our texture width and a
01:19 - end for our texture hi
01:22 - so in here using some very simple math
01:25 - we can convert them into UV coordinates
01:27 - so we're going to return a new vector2
01:29 - on the X we're going to return the X
01:32 - divide by the texture with and on the Y
01:36 - we're going to return the Y in pixels
01:38 - divided by the texture height and
01:42 - obviously convert these down to float so
01:45 - that the result is not cast down to an
01:48 - end and their young we are now correctly
01:51 - converting from pixels into UV
01:53 - coordinates now with the mesh Square we
01:56 - created previously we are currently
01:57 - displaying the whole texture now let's
01:59 - display only the head the spritesheet is
02:02 - in 512 by 512 and the pixel coordinates
02:05 - for the head are 0
02:07 - 380 with a width of 128 and a height
02:10 - 1:28 so let's set these values up here
02:15 - I'm going to put an end for my head X
02:18 - which won't be 0 and then for my head Y
02:22 - which is 380 and then for my head with
02:27 - which will be 128 and then for my head
02:30 - height which is also 128 and then for my
02:34 - texture width which is 5 pump and then
02:38 - for my texture height which is also 5
02:41 - time ok now that we have our values
02:47 - let's apply them to our UVs so UV is 0
02:51 - we're going to use our function to
02:54 - convert and put the head x and y texture
03:02 - with texture height we're going to use 3
03:08 - ok now let's set them up correctly so
03:11 - for our UV 0 we want the coordinates of
03:14 - our left top coordinate some left top
03:18 - left is just ahead X top we got the head
03:22 - why was the head height okay for my
03:27 - second UV I want the right top so X plus
03:33 - my head with head what was the head
03:36 - height for my UV 2 I want the left
03:41 - bottom so just head X hat Y and for the
03:45 - 3 I want the right bottom so FX plus
03:49 - head width and just a head why so there
03:54 - you know the UV should now be correctly
03:56 - displaying and the square that we
03:58 - created previously should now display
03:59 - the head let's test it out and there it
04:04 - is we're using UVs to display just a
04:06 - portion of our texture in our mesh so
04:10 - now let's improve the code and make some
04:11 - variables to store the UVs of the
04:13 - various body parts we're going to create
04:16 - a function that will return for UV
04:18 - coordinates representing a body part in
04:20 - our spreadsheet we have to make sure
04:21 - that we're returning the positions
04:23 - the correct pattern that we set up for
04:24 - our vertices so we're going to continue
04:26 - to work in a z shape back to our code go
04:30 - down here and this function should
04:32 - actually be private to keep things nice
04:34 - and clean and we're going to make a new
04:36 - function and it won't be a private
04:39 - return an array of vector two and
04:42 - comelet's get UV rectangle from pixels
04:47 - we're going to return on four positions
04:49 - of a rectangle defined by the pixels in
04:53 - our spreadsheet so in here the families
04:58 - that we require are our X our why you
05:03 - need the width of the body part that we
05:05 - want to select the height and then we
05:08 - also need the texture width and in for
05:13 - picture high now we're going to return
05:19 - an array of vector 2 we're going to
05:28 - return for vector tubes now again
05:31 - remember to keep the Z position so the
05:34 - first one is left top then we've got
05:36 - right top and left bottom and right
05:39 - bottom so let's just add a comment so we
05:46 - don't forget the direction we're moving
05:47 - in so we have 0 1 then we have a 1 1
05:53 - then we have a 0 0 and then finally we
05:57 - have a 1 0 ok so this is the pattern
06:00 - that we want to make sure we always use
06:02 - so all the UVs and vectors and triangles
06:05 - everything matches ok so now in here we
06:08 - want the 0 1 and we're going to
06:11 - essentially do the same thing that we
06:12 - did in here so actually in here we're
06:14 - not going to return an array of X 2 or
06:17 - rather we're going to use the function
06:19 - that we use since well that's much
06:21 - easier so for the left top I want
06:24 - x4 the top 2 1 2 y plus the height and
06:28 - then picture with and texture high for
06:34 - right top I want the X plus with top I
06:38 - want to y plus height picture with
06:42 - picture right now in here I want at the
06:47 - bottom so just X Y texture with texture
06:52 - height and down here I want right bottom
06:55 - so for write x plus wood for the bottom
06:58 - just the one line and texture with
07:00 - texture height and there you go now we
07:05 - have a nice helper function that will
07:07 - help us convert from pixels and grab for
07:10 - UVs to represent our body parts square
07:12 - now let's make a variable to store the
07:15 - value of a body part UV so up here I'm
07:19 - going to make a private it will be an
07:21 - array of vector 2 and call it head down
07:26 - UV and here we're going to set up the
07:31 - head down UV which we're going to use
07:34 - our function and our X is going to be 0
07:39 - our Y is going to be 380 the width 1 28
07:42 - - 28
07:43 - next your width and texture hi and now
07:47 - let's comment this out now let's make a
07:50 - function that won't take our body part
07:52 - UV array and apply that to our main UV
07:55 - Iraq go down here and add another one
07:59 - private void apply UV to UV array now in
08:06 - here we're going to receive an array for
08:09 - our UV that we want to apply and we're
08:13 - going to receive a another array for the
08:16 - main UV of our mesh that we're going to
08:19 - pass in to be modified since we want to
08:21 - modify this right we're going to pass it
08:24 - with the wrap now technically we don't
08:26 - need to add where F in here since and
08:28 - raise already a reference type but in
08:30 - order to keep our code clean and make it
08:32 - clear that this function is going to
08:33 - modify this array we're going to add the
08:36 - so in here we're going to apply the UV
08:39 - to our main UV so going to take the main
08:43 - UV of 0 and F 2 are UV 0 3 2 3 so in
08:55 - here let me just make a note with
08:56 - regards to performance since in the end
08:59 - we want the system to be very performant
09:01 - we're going to make the assumption that
09:03 - UV and men UV are correct meaning they
09:05 - are both not know and they both have
09:07 - four elements but when we're developing
09:10 - it might help to always test to make
09:12 - sure our values are correct
09:14 - so let's validate our inputs anyway so
09:16 - here we're going to test if our UV array
09:18 - is known or UV contains less than 4
09:23 - elements or our main UV is no or the
09:28 - main UV link also has less than 4
09:31 - elements if it is not we're going to
09:34 - throw a new exception so this one
09:38 - validate our inputs but once the whole
09:40 - system is set up we can comment this out
09:43 - and assume everything won't work
09:44 - correctly performance is all about
09:46 - making assumptions on your data and once
09:49 - the system has been fully tested and you
09:50 - can be confident that you are never
09:52 - sending invalid values into this
09:54 - function you can remove the input
09:56 - validations and make the whole thing
09:58 - more performant so but for now since we
10:00 - are developing the system let's keep the
10:03 - checks on which should never be
10:06 - triggered since we always want to make
10:08 - sure that whenever we call this function
10:09 - we always call it with valid values ok
10:13 - so up here where we define our head down
10:16 - UV we can now use our new function to
10:19 - apply this head down UV into our main UV
10:23 - iraq so we're going to apply UV to UV
10:27 - array we're going to choose the head
10:28 - down UV and apply it passing the
10:31 - reference to our UV and here we can also
10:36 - comment the sound so all we need to make
10:39 - sure is that we are correctly
10:40 - nationalizing with the correct values in
10:43 - here it won't copy our variable UV into
10:47 - our UV array this way we can apply
10:49 - several times without constantly having
10:51 - to do this calculation let's test it out
10:54 - and see if everything is working exactly
10:56 - the same as it should and there you go
10:59 - still working the same no errors nothing
11:01 - awesome now let's add more variables to
11:05 - contain all the body parts in our
11:07 - spreadsheet okay so another note here on
11:17 - my spreadsheet I only have the sprite
11:19 - for the head right I don't have a sprite
11:21 - for the head and left but we can easily
11:22 - mirror our head right UV by sending the
11:26 - reverse coordinates on the X so our
11:28 - width is going to be negative and how
11:31 - our X will be 2 5 6 so the right corner
11:35 - and with negative like that and we can
11:38 - test this out places in here make sure
11:40 - that we are this plane the left head
11:42 - there you go our sprite sheet only has
11:44 - the head facing the right but we can
11:45 - easily mirror it and have left this way
11:48 - we don't have to waste space on our
11:50 - spreadsheet ok I have all my UV setup
12:01 - now let's make some buttons just for fun
12:04 - to modify our UVs in real time I need to
12:09 - go down here so in here I'm going to use
12:11 - the CMD bug class create a button on the
12:14 - UI the button won't be somewhere on the
12:18 - left side and this button won't set up
12:23 - the head down UV and the action trigger
12:28 - you won't use this function to our head
12:32 - down movie and after we apply it to our
12:36 - UV array we have to make sure we update
12:38 - our mesh mesh that usually equals UV
12:41 - essentially the UV array only gets sent
12:44 - to the graphics card once you apply it
12:46 - directly to the mesh this is a property
12:48 - and when he set this it gets
12:50 - automatically uploaded to the graphics
12:52 - card well it's another one
12:56 - body down and another one let's just say
13:00 - the sword sword UV and body down UV okay
13:06 - let's make the buttons under one another
13:09 - it's that in there and there we go
13:13 - yep we have our buttons in here and now
13:17 - we can modify the UV in real time boom
13:20 - there you go head down now it's the body
13:22 - down and now it's a sword yep as you can
13:25 - see we can easily modify the UV in real
13:27 - time and there you have it in this video
13:30 - we covered how to apply the correct UV
13:32 - to our mesh based on the pixel position
13:34 - in our texture and modify that mesh in
13:36 - real time based on this you can see how
13:39 - you could easily do sprite animations if
13:42 - you have a spreadsheet with various
13:43 - frames drawn rather than separate in
13:46 - body parts you would just automatically
13:48 - switch sprites in real time based on the
13:52 - frame rate of your animation in the next
13:54 - video we're going to cover how to add
13:56 - multiple body parts and size them
13:58 - accordingly if you have any questions
14:00 - post them in the comments and I'll do my
14:02 - best answer them ok see you next time