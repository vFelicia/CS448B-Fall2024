00:00 - hello and welcome I am your code monkey
00:01 - in this video we're going to make it on
00:03 - tape in unity let's VM
00:07 - so over here I have a generic uiwindow
00:10 - it has some text and some buttons now we
00:13 - would like to display some extra
00:14 - information when we pass the mouse over
00:16 - each button and each label so we're
00:19 - going to use a tooltip to do that first
00:22 - let's create our tooltip and the editor
00:24 - so let's go into the canvas and here
00:26 - first of all create a new empty game
00:28 - object name is Salta
00:30 - now inside we're going to need text and
00:32 - a background so for the background just
00:36 - add a simple image and for the text and
00:40 - the text give it a font size of about
00:43 - twelve and position it on the in lower
00:45 - left corner now we're going to anchor
00:51 - both of these to the in lower left
00:52 - corner and put them all on zero all
00:57 - right so just like that we have this
00:58 - game object that we want to move around
00:59 - now the size of the background doesn't
01:02 - matter since it won't be dynamically
01:03 - modified based on whatever text we give
01:05 - it and for the text let's just put it on
01:08 - four and four so we have a little bit of
01:10 - a border so the text is easier to read
01:12 - and finally disabled recast target just
01:15 - in case we need to click through our
01:16 - filter all right so that's the transform
01:18 - for our tone tip now let's make the
01:20 - class to actually handle the code so a
01:22 - new c-sharp script my name is Dalton so
01:25 - in here we're going to have two
01:27 - functions a private void show tooltip
01:29 - and a private void heidsontour first
01:34 - thing we do is just set the game object
01:36 - to active either true or false
01:38 - in order to show or hide it salted for
01:41 - the show tooltip as a parameter we're
01:43 - going to receive a string for the
01:44 - haunted string and inside we're going to
01:47 - set the text so in order to keep our
01:49 - code nice and simple
01:50 - let's first grab references on our awake
02:02 - okay so first things first set the tone
02:05 - tip tax dot text to our tool tip string
02:08 - and now we need to calculate the size of
02:11 - our background so we do a vector2 for
02:14 - our background size now to get the width
02:18 - we get the tool tip text dot preferred
02:22 - width and for the height we don't have
02:24 - text at preferred height this will give
02:27 - us the exact size that our text is
02:30 - occupying while using this string so we
02:33 - offset our text by a little bit in the
02:35 - editor in order to make it easier to
02:36 - read so we need to add that in here as
02:38 - well so we define a float for the text
02:40 - padding size and we set it at four so
02:44 - we're going to increase the background
02:46 - size by the padding multiplied by two
02:50 - since we got padding on the left and on
02:52 - the right side and finally we simply
02:55 - accept the background rect transform dot
02:57 - size Delta to be this background size
03:00 - okay so now for testing let's show it
03:03 - with some text so we go up here and we
03:05 - simply do a show tooltip and let's give
03:09 - it some random tilted text all right so
03:12 - let's test and yep there's the tooltip
03:14 - and as you can see the text is correctly
03:16 - displayed and the background is also
03:18 - correctly sized to match whatever text
03:20 - we put it now let's throw out some
03:22 - random tags to see how the background is
03:24 - correctly changing
03:40 - okay so here is some simple testing code
03:43 - I'm creating a function periodic which
03:45 - is part of the code monkey to notice
03:46 - that you can grab for free from unity
03:48 - code monkey calm now essentially this
03:50 - will run this action every half a second
03:53 - so we're going to define a string with
03:55 - just a bunch of random characters and
03:57 - we're going to cycle through it between
03:58 - 30 and 100 50 times and increase by
04:01 - adding to our show text a simple
04:04 - character from this string and
04:05 - afterwards show the total so essentially
04:07 - this will always be random so I see if
04:09 - our code is correctly resizing our
04:11 - background regardless of what text we
04:13 - give it and yep as you can see
04:15 - regardless of the random text that goes
04:18 - in it correctly resizes the background
04:21 - to match whatever is in there and it
04:23 - works even with multi-line text okay now
04:26 - let's make our tool tip from of the
04:28 - mouse so in order to do that let's go to
04:30 - the update so in here we can get the
04:33 - screen mouse position using input Mouse
04:37 - position however this is the screen
04:41 - position of the mouse and not the UI
04:43 - position so we need to do a conversion
04:45 - so in order to do that we're going to
04:47 - use the rect transform utility and do a
04:50 - screen point two and welcome point in
04:52 - rectangle for the rectangle we want to
04:56 - convert into is going to be our
04:58 - transform dot parent for the screen
05:00 - point we're going to use the mouse
05:02 - position for the camera we're going to
05:04 - need a reference to our UI camera and
05:07 - finally we return this value into a
05:10 - local point so we need the reference to
05:14 - our camera so let's go up here make a
05:16 - private camera for the UI camera and
05:19 - make it a serialize field so we can set
05:21 - it in the editor and here it requires a
05:24 - rect transform so let's do a get
05:26 - component okay so with this we are
05:29 - correctly converting the input mouse
05:32 - position into a position inside the
05:34 - parent of this transform so we have the
05:37 - in local point which is the unload
05:38 - composition so in here all we need to do
05:41 - is that the
05:41 - transform that low composition to be
05:43 - this local point
05:45 - okay so let's test and see if the
05:46 - tooltip is following the mouse make sure
05:49 - we drag the camera onto here now since
05:52 - we are setting up our canvas to use
05:54 - screen space camera then we need our UI
05:56 - camera reference but if we were using
05:58 - screen space overlay then we would not
06:01 - need the camera reference and we would
06:02 - simply leave it as no so let's see and
06:06 - yep there you go as you can see the
06:07 - tooltip is randomly changing the
06:09 - background some words everything some
06:11 - words and it is now following the mouse
06:13 - okay now let's make some static
06:15 - functions to show and hide our tooltip
06:17 - so we're going to make a public static
06:19 - void show 20 static and give it the same
06:23 - parameter so a string for the tooltip
06:25 - string and we're going to have a public
06:28 - static void I don't it static we're
06:34 - creating static functions so we can
06:35 - easily use this class from any other
06:37 - class we need so all we need is to go up
06:40 - here and create a private static tooltip
06:42 - for our instance and on away set the
06:45 - instance to this and here simply do
06:49 - instance not show tooltip give it the
06:52 - tooltip string and same thing in here
06:58 - all right so we now got these two public
07:00 - functions that we can use from elsewhere
07:02 - in our code so just for testing we're
07:05 - going to add a tool tip to these buttons
07:07 - and these labels to see how we could use
07:09 - this on a final game these buttons have
07:12 - a button UI component which again is
07:14 - part of the code monkey Tonys it's a
07:16 - very simple function that has some
07:18 - classes so that we can move over and
07:20 - click our button which is what we're
07:21 - going to need in order to implement our
07:23 - Taunton
07:23 - so just for testing create a new C sharp
07:26 - script this will be our window
07:33 - so on the button UI I have a mouse over
07:37 - once funk which triggers an action only
07:40 - once when the mouse goes over the button
07:42 - which is exactly what we need in order
07:44 - to show our tanta so the action when I
07:47 - pass the mouse over will go into the
07:49 - total class and call the show taunted
07:51 - static - in this case say attack and
07:55 - then I have the mouse out once funk
07:59 - which triggers once when the mouse
08:01 - leaves the button so it is perfect for
08:03 - the height on tape static so let's apply
08:06 - this to all the buttons and all the
08:08 - labels okay so here it is pretty simple
08:21 - we have some strings that won't be
08:22 - displayed when we pass the mouse over a
08:25 - button and then when we leave the button
08:27 - we simply hide the tonton so let's see
08:29 - that in action okay here's the window
08:32 - and if I pass the mouse over yep there
08:34 - we go I got a nice stone tip saying this
08:35 - is the attack button this is the defend
08:37 - button the patrol health amount movement
08:39 - speed and attack damage and as you can
08:41 - see it follows the mouse so now we can
08:43 - easily give the player some extra
08:44 - information whenever we need to so there
08:47 - you have it - created a tooltip to
08:48 - display extra information to the player
08:50 - while making the code dynamically adapt
08:52 - to the size of whatever text we give it
08:53 - in the next video we're going to make
08:55 - sure our tooltip never leaves the screen
08:57 - and it's always on top as always you can
08:59 - download the project files in utilities
09:00 - from unity code monkey comm if you have
09:02 - any questions post them in the comments
09:04 - and I'll do my best answer them
09:05 - subscribe for more videos and I'll see
09:07 - you next time
09:19 - you