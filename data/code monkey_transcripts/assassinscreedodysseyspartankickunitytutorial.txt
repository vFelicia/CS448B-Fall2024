00:00 - hello and welcome I'm your code monkey
00:01 - in this video we're going to make the
00:03 - Spartan cake from Assassin's Creed
00:04 - Odyssey it is a very powerful kick that
00:06 - sends enemies flying away let's begin
00:11 - okay so over here I have my scene I have
00:14 - a player with some movements in some
00:16 - attacks there are enemies that come
00:18 - towards me and attack me and I can
00:20 - attack them as well I can also do a
00:24 - dodge run to dodge attacks okay so let's
00:28 - implement the spartan kick so here in
00:31 - the player base class i have some
00:33 - functions to play animations
00:34 - specifically the one we're going to need
00:36 - is the police parking cake animation it
00:38 - takes a direction and execute an action
00:41 - on the impact frame and one when the
00:42 - animation is completed so now on the
00:45 - player class here as you see on awake we
00:48 - are grabbing the reference to the player
00:50 - base which is also a component on this
00:53 - same game object and for logic in here
00:55 - we have some simple States normal
00:57 - attacking and dodging we do a switch on
01:00 - state on the update keys normal we check
01:03 - for movement then we check if we should
01:05 - attack and also if we should dodge so
01:08 - that's a simple overview of how
01:10 - everything is set up so now let's add
01:12 - this part and kick so first here on the
01:14 - update on the normal state let's add a
01:17 - new function for handling these Spartan
01:18 - kicks so in here to handle spartan kick
01:21 - and let's go down here and make a
01:24 - function a private void handle spartan
01:27 - kick now in order to do the cake let's
01:32 - test for a key so if input not get it
01:36 - down and let's say key code e so when we
01:41 - press e we want to stop on the other
01:43 - logic so before we go further let's go
01:45 - up here and add another state this will
01:47 - be state called busy and essentially
01:49 - this does nothing so in here lets you
01:52 - case state that busy and we do
01:56 - absolutely nothing we're doing this so
01:58 - we can now go down here and when we
02:00 - press the e we can set the state to be
02:02 - state busy and as such the rest of this
02:06 - logic will no longer run whilst we're in
02:08 - the middle of our cake animation so
02:10 - after setting the state let's grab the
02:12 - attack direction so a vector3 for the
02:14 - attack dear now the attack direction
02:16 - will be towards the mouse position so
02:19 - let's go in computers class and grab the
02:21 - mouse world
02:24 - - this position dot normalize okay so we
02:28 - have our attack direction towards the
02:30 - mouse now using that let's go into the
02:33 - player base and play the spartan kick
02:36 - animation this takes the direction so
02:38 - our attacker clear for the on hit and
02:40 - let's leave it as no and for the on end
02:42 - mission complete let's go back to normal
02:44 - so set state back to wrong alright so
02:47 - that's the basic setup when we press e
02:50 - we complete the attack direction towards
02:52 - the mouse and we play the animation
02:53 - towards that direction alright so in
02:55 - order to test let's go into the game
02:57 - handler this is our main script and then
03:00 - here let's simply stop spawning enemies
03:02 - so we can easily test to see if our kick
03:04 - is working ok so let's test ok Here I am
03:09 - everything is perfectly normal now if I
03:10 - press the e yep there you go that's the
03:13 - spartan kick animation if I press
03:15 - smoking me elsewhere and there you go
03:17 - the animation matches ok good so now
03:19 - let's set things up to be able to
03:21 - actually hit some enemies so in here
03:23 - before we play the animation let's see
03:26 - if there are any enemies near our target
03:28 - so first we need to define a target
03:30 - position and that position will become
03:33 - related based on our get position who is
03:36 - moving towards the attack direction then
03:40 - let's multiply it by a certain attack
03:42 - offset and go here and define a fold for
03:45 - the attack offset and let's say about xx
03:48 - so our target position is essentially
03:51 - starting from our position moving
03:53 - towards the attack direction by 20 units
03:55 - so now with this target position we need
03:57 - to look for an and meet near that
03:58 - position so enemy enemy equals we go
04:02 - into the enemy class and get the closest
04:04 - enemy essentially this is same function
04:06 - that we're using when we're attacking so
04:08 - this returns the closest enemy to a
04:10 - certain position so in this case and
04:11 - let's give it the target position and a
04:13 - certain max range and let's say 20 units
04:16 - so this will return the closest enemy
04:19 - within 20 units of the target position
04:21 - now obviously it's possible that there
04:23 - is no such enemy within that range so
04:25 - first we need to check if the enemy is
04:27 - not known so that means there's an enemy
04:29 - in range otherwise no enemy and
04:32 - right now if we do have an enemy let's
04:35 - reconnoiter the target position to be
04:37 - the enemy that gets position and let's
04:40 - also recalculate the attack direction to
04:42 - be directly exactly towards the enemy so
04:45 - equals the enemy that get position minus
04:48 - our position
04:49 - dot normal okay so in here when we are
04:55 - playing the animation let's now apply
04:57 - something to this parameter now this
04:59 - parameter is the action that is
05:00 - triggered when it reaches the impact
05:02 - frame so in here let's execute a
05:04 - function and in that function let's you
05:08 - if enemy is different from now if we do
05:13 - have an enemy let's do enemy got damaged
05:17 - so when the animation reaches the impact
05:19 - frame it should cause damage to the
05:21 - enemy so let's test that let's go into
05:24 - the game Handler and go back to spawning
05:26 - some enemies okay okay here I am there's
05:29 - an enemy I can attack him as normal if I
05:31 - press E if there yogi played the
05:34 - animation and caused damage when the
05:36 - animation reached the impact Frank so in
05:38 - here again hit and there you go they are
05:41 - being kicked away and it is completing
05:43 - the one near the mouse position so if I
05:45 - put the mouse in here yep there you go
05:46 - kick that one now and out okay good now
05:49 - let's also make the player move forward
05:51 - on the impact frame so in here you a
05:54 - transform dot position so transfer
05:57 - position increase it move them towards
05:59 - the attack direction by a certain amount
06:01 - so let's say about 10 units
06:04 - okay I'm let's see okay here I am and I
06:07 - hit E and yep there you go
06:09 - there's a nice little dash forward okay
06:11 - good
06:12 - so now let's see on with the enemy
06:14 - receiving the kick so let's go into the
06:16 - enemy class and this is set up in very
06:19 - much a similar way to the player class
06:21 - there is a enemy base class that
06:24 - contains most of the animation functions
06:27 - and this class is responsible for the
06:29 - logical level so in here let's go down
06:32 - and make a function called public void
06:35 - knocked back fly away essentially when
06:40 - the enemy is hit by the kick we want him
06:42 - to fly away from the map so let's
06:44 - receive a
06:45 - 3:14 knockback beer and first let's go
06:49 - into the enemy base and play the hit
06:52 - animation towards the knock back here
06:55 - and we want to move them towards that
06:58 - direction so for that instead of adding
07:01 - a new stages for this temporary effect
07:03 - let's use the function updater which is
07:06 - part of the code monkey Tony's that you
07:07 - can grab for free from unity code monkey
07:09 - calm now in here I can create and
07:12 - trigger an action every update so I can
07:16 - use this to very simply make him slide
07:17 - away towards Enoch back direction so do
07:20 - a transform that position increase the
07:22 - position towards Enoch back there
07:24 - multiplied by a knock-back speed
07:28 - multiplied by time depth time so in here
07:31 - define a float for the knock back speed
07:34 - and wait and let's say 300 okay now
07:39 - let's also add a time to destroy so we
07:41 - float time to destroy and let's put it
07:44 - at 5 up and on our update let's reduce
07:49 - the time to destroy by time.deltatime
07:51 - and if the time to destroy if it is
07:55 - under zero then let's destroy this game
07:58 - object so five seconds should be plenty
08:01 - of time for the enemy to actually leave
08:03 - the screen so then it gets easily
08:05 - destroyed and now just like we did with
08:07 - the player we need to set the state to
08:09 - busy so the rest of the logic no longer
08:11 - runs while he's flying away so set the
08:14 - state to state dot busy ok so now back
08:18 - here on the player class when we are
08:21 - doing a kick in here when we are
08:23 - damaging the enemy instead of doing a
08:25 - damage let's do enemy dot knock back fly
08:29 - away
08:30 - and now the knock back direction won't
08:31 - be the same as the attack direction and
08:34 - use that instead alright so let's test
08:37 - and see if the enemy correctly flies
08:38 - away from the screen when he gets kicked
08:40 - ok here I am there's the enemy now if I
08:43 - near him and I press the kick yep there
08:45 - you go he was kicked away kick this one
08:47 - kick this one and yep there you go they
08:48 - are being kicked away and the normal
08:51 - ties to work and yep kicked this one and
08:53 - boom there he goes ok
08:55 - so we can increase the speed but yep
08:57 - that's the effect we want
08:59 - so in order to make the effect more
09:00 - satisfying let's add a little screen
09:02 - shake when the cake action on lens so in
09:04 - here after we knock back let's do some
09:07 - basic screen shake and I have a function
09:08 - on Utah's class to actually shake the
09:10 - camera so let's shake just a little bit
09:15 - okay Here I am there use and if I kick
09:17 - him boom yep there you go there's a nice
09:19 - little screen shake and he flies away
09:21 - from the screen can type in sorrow and
09:23 - kick him boom there he goes all right
09:26 - great so now let's implement it to the
09:29 - adrenaline system that we had in the
09:31 - previous video to make sure that we can
09:32 - only use this overpowered kick once
09:34 - every certain amount of time so in the
09:37 - previous video with the adrenaline
09:38 - system that we created in here we have
09:40 - some functions to add adrenaline in
09:42 - which we are adding when we hit an enemy
09:44 - and when the enemy dies and we have a
09:46 - function to try to remove a film bar so
09:48 - this is what we need to go on to the
09:50 - employer and first we test if the key is
09:52 - down if so then what says if adrenaline
09:55 - dot try to remove the film bar so you
09:58 - only execute the spartan kick when we
10:01 - press the key and we do have an
10:02 - adrenaline bar
10:03 - alright so it's that simple to implement
10:05 - our previous system so let's test and
10:08 - here I am if I press E yep nothing
10:11 - happens now with me hit him to get some
10:13 - adrenaline there we go there's the
10:14 - indicator now for pressing yep he flies
10:17 - away and no more adrenaline hit a couple
10:19 - more until I have and boom there you go
10:21 - another kick get some more and kick a
10:23 - boy yep there you go great so there you
10:26 - have it we create the Spartan capability
10:28 - from Assassin's Creed Odyssey as always
10:30 - you can download the project files in
10:32 - utilities from unity code monkey comm if
10:34 - you have any questions post them in the
10:35 - comments and I will do my best to answer
10:37 - them subscribe for more videos and I'll
10:38 - see you next time