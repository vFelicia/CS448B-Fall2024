00:00 - hello and welcome i'm your code monkey
00:02 - so a while ago i made a poll asking if
00:04 - you were playing elden ring and what
00:05 - mechanics you'd like to see from it
00:07 - thank you for all the responses there
00:08 - are lots of great ones although a lot of
00:10 - them are also more general about action
00:12 - or open world games rather than
00:13 - something specific to alden ring so i do
00:16 - want to cover things like giant open
00:17 - whirls making some melee combat getting
00:19 - on and off mount and so on but for this
00:22 - video i want something specific to alden
00:24 - ring so one unique interesting mechanic
00:26 - to alden ring or really all of these
00:27 - songs likes is a backstab if you're
00:30 - behind the enemy and you attack it
00:31 - triggers a backstab which causes some
00:33 - massive damage this one is a fun
00:35 - mechanic in just about any melee action
00:37 - game and it's actually pretty easy to do
00:39 - but at the same time if you don't know
00:40 - about one specific math function then
00:42 - you might have no idea how to do it so
00:44 - we need to figure out how to identify if
00:45 - the player is behind the enemy and also
00:47 - very important this involves matching
00:49 - two animations so the backstab attack
00:51 - for the player animation and the
00:53 - backstep victim animation in order to
00:55 - really sound the attack we also need to
00:56 - make sure all the objects are placed and
00:58 - rotated correctly for the animations to
01:00 - perfectly fit alright so let's handle
01:02 - all of that to make a nice simple but
01:04 - really satisfying backstab mechanic over
01:06 - here i've got my simple character i can
01:08 - move around for this i'm using a bunch
01:10 - of visual assets just for fun these are
01:13 - from the cindy studios fantasy kingdom
01:15 - pack and speaking of cinti studios
01:17 - they're actually running a massive sale
01:18 - on their store right now everything is
01:20 - at 50 off and a bunch of special assets
01:23 - at 70 off this one the fantasy kingdom
01:25 - is at 70 off this week they've got tons
01:28 - of packs all of them in their gorgeous
01:29 - style so whether your game is fantasy
01:32 - modern sci-fi whether it's pirates
01:34 - western town or really whatever is the
01:36 - theme of your game you can find some
01:38 - great assets to really make your game
01:39 - shine also a nice bonus of buying from
01:41 - the cinti store is you get both unity
01:43 - and unreal assets so check it out to the
01:46 - link description to see everything on
01:48 - sale okay so back to my starting scene
01:50 - here i can move my character around and
01:52 - i can click to play a nice attack
01:54 - animation now there's an enemy standing
01:56 - around right here he's just on idle so
01:58 - right now if i attack him he does not
01:59 - react in any way so our goal is to
02:02 - implement our backstab mechanic but
02:03 - naturally the backstab can only be done
02:05 - if we're actually behind the enemy and
02:07 - for the character control that i'm using
02:08 - here i'm using the one from the official
02:10 - unity free start assets i cover them in
02:12 - another video it's great for quickly
02:14 - getting a character up and running super
02:16 - quickly alright so over here is my super
02:19 - simple player script it's really just
02:21 - testing for an input and when it does
02:22 - play the attack animation in order to
02:24 - play that animation simply goes into the
02:26 - animator and sets a trigger then over
02:28 - here is the player animator now all of
02:30 - these nodes are from the start assets by
02:32 - default the only ones that i had were
02:34 - disu so there's a regular attack
02:36 - animation and a backstab stab animation
02:38 - and then on the enemy just has an idle
02:40 - animation and a take damage animation
02:42 - and also the backstab vector animation
02:45 - if you're not familiar with the animator
02:46 - and transitions i covered them in detail
02:48 - in one of my lectures in my ultimate
02:50 - unity overview course along with 50
02:52 - other unity tools and features we can
02:54 - preview the animations here so there you
02:56 - go the other one pre-standard
02:58 - then taking the damage just a little bit
03:00 - and finally the backstab vector
03:02 - animation so there you go takes like
03:04 - that and falls to the ground and then
03:05 - the player has the backstab attack
03:07 - animation so there you go just like that
03:08 - so we need to essentially match the
03:10 - position of these two objects and play
03:12 - both animations so they really work
03:13 - correctly now i got all of these
03:15 - animations from a great animation pack
03:16 - it was really perfect for making exactly
03:19 - sounds like so if you're making this
03:20 - type of game and you want tons of songs
03:22 - like animations definitely look into
03:24 - that animation pack okay so here is the
03:26 - basic start point with the player just
03:27 - doing a simple attack now let's identify
03:30 - if the player is close enough and behind
03:32 - the enemy if so then we want to play the
03:34 - backstab attack animation whereas on any
03:37 - other position we want to play the
03:38 - regular attack animation so like i said
03:40 - this is actually pretty easy there's
03:41 - really only one thing you need to know
03:43 - which is how do you know if you are
03:44 - behind a certain object and for that we
03:46 - can use the excellent math function to
03:48 - get the vector dot product
03:50 - now if you are a mathematician you can
03:52 - just browse the wikipedia page to learn
03:54 - how it all works but if that looks a bit
03:56 - too complex like it does to me then
03:58 - let's look at a visual example over here
04:00 - on the player script let's first add a
04:03 - reference to the enemy so it transformed
04:05 - just for the enemy transform so we can
04:07 - get the transform position
04:09 - then over here on the player script
04:10 - let's drag the reference okay then over
04:12 - here the function that we're going to
04:14 - use is vector 3 dot
04:16 - this takes two vectors the left hand and
04:18 - the right hand side again i'm not a
04:20 - mathematician so really don't ask me how
04:22 - the math works but i do know that if we
04:24 - put the enemy's transform forward on the
04:26 - first parameter so enemy transform dot
04:28 - forward and for the second one if we put
04:30 - the direction from the enemy to the
04:32 - player
04:39 - so we call it the direction from the
04:40 - enemy to the player
04:42 - and if we get this
04:44 - let's do a debug download to see what
04:46 - this returns
04:47 - okay so let's see
04:49 - okay so there's the log and right away
04:51 - if i'm straight in front of the enemy
04:53 - you can see that the dot product is very
04:54 - close to one if i'm perfectly
04:56 - mathematically perfect in front then
04:58 - it's exactly one now as i move on to the
05:00 - side it goes under one and if i'm right
05:04 - next right to the side of the enemy then
05:06 - the dot product is around zero
05:08 - then if i'm behind then the dot product
05:10 - goes under zero and if i'm perfectly
05:12 - behind then it's exactly minus one also
05:15 - note how the dot product doesn't change
05:16 - if you're on left on the right side
05:18 - so that one does not identify
05:20 - so this is only good for testing if we
05:22 - are either in front positive value or
05:24 - behind we've got a negative value
05:26 - all right so based on this very basic
05:28 - math function you can already see how
05:30 - we're going to build this to make it
05:31 - backstab we just have to complete this
05:33 - see if it's close enough to minus one
05:35 - and if so we play the backstab animation
05:37 - and if not then we play the regular
05:39 - attack animation okay so here in the
05:41 - code when we have our attack let's
05:43 - calculate our dot product
05:46 - so let's go up here instead of a log
05:48 - let's call it a float for the dot
05:53 - and then let's just test if it's close
05:54 - enough to minus one so if the dot
05:57 - now here we should not force the player
05:59 - to be 100 mathematically perfectly
06:01 - behind the enemy we want it to be a
06:03 - little bit forgiving so let's put it
06:05 - minus and say within minus one
06:13 - so we give it a little bit of margin
06:15 - like point one so we just have to be
06:17 - ninety percent behind the enemy so if so
06:20 - then we have a backstab
06:22 - and if not
06:24 - then we have a regular attack so we're
06:26 - here for the animations let's play them
06:30 - okay so that's really it let's test
06:33 - okay here we are let's go right next to
06:34 - the enemy and play an attack and there
06:36 - you go it does work a regular attack now
06:38 - if i go all the way behind my attack and
06:40 - there you go got the nice backstab
06:42 - animation alright awesome now the next
06:45 - issue that we have is the distance so if
06:47 - we're really far but behind the enemy
06:49 - and we play there you go at some place
06:51 - he backstab obviously that makes no
06:53 - sense so it needs to be close enough to
06:54 - the backstab that one is also a pretty
06:57 - easy one to handle
06:58 - now one way to handle that would be on
07:00 - the fine target logic but over here on
07:02 - this very simple demo we don't have any
07:04 - fine target logic we just have the enemy
07:06 - reference directly so for this demo
07:08 - really just adding a simple this in
07:10 - check will do
07:18 - so we just check if the vector3 dot
07:20 - distance between this transform position
07:22 - so the player and the enemy if it is
07:23 - under a certain backstab distance and
07:25 - the player is indeed behind the enemy
07:28 - then with the backstab if not we do an
07:30 - attack
07:31 - okay so here if i'm from the side we're
07:32 - gonna attack if i go behind then close
07:35 - enough there you go nice backstab
07:37 - and if i go a bit far away and i attack
07:40 - and there you go regular attack all
07:41 - right awesome all the logic is working
07:44 - now all we really need in order to make
07:45 - this backstab feel nice and impactful is
07:47 - just apply the victim animation over
07:49 - here on the enemy script i've got a nice
07:51 - spelling function to play the backstab
07:53 - victim animation
07:54 - so over here we've got the enemy
07:56 - transform now we just need to get the
07:57 - component of that script so let's just
07:59 - refactor this code to make this a enemy
08:02 - backstab
08:04 - and then up here we need the enemy
08:05 - transform so transform for the enemy
08:07 - transform go into the backstab gravity
08:10 - transform
08:12 - and then down here when we play the
08:13 - backstab animation let's go into the
08:15 - enemy backstab and we play the backstab
08:17 - victim animation okay so with that it
08:20 - should be working let's see okay so over
08:22 - here let's approach from behind and
08:24 - attack
08:25 - and yep it does kind of work they both
08:27 - did play the correct animations but as
08:29 - you can see it does not look very good
08:31 - so over here the player is looking in
08:33 - that direction and the enemy is moving
08:34 - in that direction so they both play the
08:36 - animations but they should really be
08:37 - facing one another
08:39 - so in order to make this look good we
08:40 - need to make sure we rotate the player
08:42 - to face towards the enemy and we need to
08:44 - position the enemy perfectly at a
08:46 - certain distance in front of the player
08:48 - and we also obviously need to make sure
08:50 - the enemy is rotated in the exact same
08:52 - direction okay so let's handle all of
08:54 - those
08:55 - first up on the rotation let's make sure
08:57 - we rotate the player towards the enemy
09:00 - so over here let's calculate a direction
09:02 - to the enemy
09:03 - so we just grab the enemy transform grab
09:06 - the position minus this position
09:10 - so we've got a direction to the enemy
09:12 - and for handling the rotation i've got a
09:14 - nice function here where i can give it a
09:15 - target forward so i can give the
09:17 - direction to the enemy
09:18 - and this one is using the third person
09:20 - control from the center assets handle
09:22 - that rotation
09:23 - and then on the enemy script again this
09:25 - one is just a dummy script this one is
09:27 - not a phone controller
09:28 - and over here i also have a nice
09:30 - function to set the target forward and
09:32 - really what it does is just stores the
09:34 - target forward and does some nice smooth
09:37 - layer rotation in order to rotate
09:38 - towards that forward i also covered this
09:40 - simple method of using lerp to get some
09:42 - nice smooth rotation another video it's
09:44 - super basic super quick to handle some
09:46 - smoothing with lerp so we just need to
09:48 - call this function
09:49 - so in the backstab we complete the
09:51 - direction to the enemy we rotate this
09:53 - one along that direction and we also go
09:54 - into the enemy backstab in order to set
09:56 - the target forward to make it rotate in
09:58 - the exact same direction so they're both
10:00 - rotating perfectly in the same direction
10:02 - okay so let's see like this so here we
10:04 - are let's go behind the enemy and press
10:06 - the attack and there you go it does
10:08 - rotate to face towards the enemy and yep
10:10 - there you go it plays the animation both
10:11 - of them facing the perfect direction
10:13 - alright great now the next thing that we
10:15 - need is just the positioning right now
10:18 - if i go behind that around this distance
10:20 - and i play there you'll play the
10:21 - animation but there you go the animation
10:23 - is a bit too far so let's position the
10:25 - enemy and again i've got some simple
10:27 - logic on the enemy for smoothly moving
10:29 - to a target position so it's really
10:31 - using pretty much the exact same thing
10:32 - so instead of modifying the
10:33 - transform.forward modify the
10:35 - transform.position so we just need to
10:37 - call this function
10:38 - also onenote here in a complex game this
10:41 - enemy would have some ai that would
10:42 - control the movement so perhaps having
10:44 - another script also moving the enemy
10:46 - smoothly over time perhaps that could
10:48 - create some conflicts now if you were to
10:51 - have those issues then one simple
10:52 - solution is really just teleport the
10:54 - enemy to the target victim position you
10:56 - might think that it looks a bit chunky
10:58 - but if you actually look at the songs
10:59 - games that's actually what they do since
11:01 - the whole thing is so fast you really
11:03 - don't notice a slight teleport so over
11:05 - here on this simple demo i'm using a
11:07 - nice mood but in your own games if you
11:08 - have issues just go ahead make a nice
11:10 - teleport and everything will work
11:11 - perfectly so okay i've got my nice
11:13 - smooth movement just need to call this
11:15 - function which really means that i just
11:17 - need to come up with the perfect
11:18 - position for the animations to match
11:20 - perfectly over here we already have the
11:22 - direction from the player to the enemy
11:24 - so really we just need to place the
11:26 - enemy on the player's position plus this
11:28 - direction for a certain distance so
11:30 - let's go into the enemy backstab and
11:32 - we're going to call the function to set
11:34 - the force movement so first move to a
11:37 - target position
11:39 - and the target position will be our
11:40 - transform.position plus the direction to
11:42 - the enemy and then multiply it by
11:44 - whatever distance based on the animation
11:46 - now in this case for the animation pack
11:48 - and the animation that i'm using here i
11:49 - know that this animation matches
11:51 - perfectly if i put it around point seven
11:52 - f okay so that's it
11:54 - the enemy should be perfectly positioned
11:56 - exactly where it makes sense for the
11:58 - animation so let's test so here i am
12:00 - let's go behind the enemy stay really
12:02 - far away as long as i'm behind place the
12:04 - attack and there you go the enemy moves
12:06 - a bit in order to match the animation
12:07 - and yeah perfectly alright that's pretty
12:09 - awesome so i can really attack the enemy
12:12 - from anywhere i want i can be super
12:13 - close and the enemy moves a bit forward
12:15 - in order to go the animation perfectly
12:16 - matches and looks really great
12:19 - now over here i just had a bit more
12:20 - polish i added some screen shakes some
12:22 - blood particles and some animations on
12:24 - the enemy so now if i do a regular
12:26 - attack there you go looks really nice
12:27 - really impactful and for the final
12:29 - backstab mechanic if i go behind the
12:31 - enemy to the attack there you go it
12:33 - moves rotates nice screen shake nice
12:35 - particles and everything looks really
12:37 - awesome so again doing a regular attack
12:40 - looks pretty nice and if i go behind
12:42 - there you go really nice really
12:44 - impactful really cool and backstab
12:46 - animation okay so with this you'll learn
12:48 - how to use the vector.product to
12:50 - identify if an object is behind another
12:51 - one and you also learn how to combine
12:54 - both attacker and victim animations to
12:55 - really make an action feel powerful now
12:58 - go ahead and make your action games look
12:59 - awesome alright hope that's useful check
13:02 - out these videos to learn some more
13:04 - thanks to these awesome patreon
13:05 - supporters for making these videos
13:06 - possible thank you for watching and i'll
13:08 - see you next time
13:13 - [Music]