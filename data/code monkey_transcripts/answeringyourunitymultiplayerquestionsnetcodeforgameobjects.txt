00:00 - hello and welcome I'm your code monkey
00:02 - and you've probably seen the video
00:03 - talking about how netcode for game
00:05 - objects is finally fully released it's
00:07 - one of the best performing videos so
00:08 - people are definitely interested in
00:10 - multiplayer I'm still hard to work on
00:12 - default tutorial hopefully it won't be
00:13 - out by either next Monday or Wednesday
00:15 - there were tons of interesting questions
00:17 - in that video so here let me answer a
00:19 - bunch of them signing off right away
00:20 - with a question from anguardoch who asks
00:22 - what exactly is the limitation for small
00:25 - Scalia I wasn't sure about this myself
00:26 - there are no details on the
00:28 - documentation so I asked around on the
00:30 - forums and the answer that I got appears
00:32 - to be related to bandwidth the system is
00:34 - designed to synchronize all the data in
00:36 - a single packet when a player first
00:37 - joins so at a certain point with enough
00:39 - Network objects that data packet becomes
00:41 - so massive that apparently caused a
00:43 - timeout when sending that packet if this
00:45 - is where the only limitation comes from
00:47 - then it seems like it should also be
00:49 - possible to fix it basically you just
00:50 - need to split bigger packets into small
00:52 - ones so instead of sending the entire
00:54 - game State all at once send it over
00:55 - multiple packets perhaps this is
00:57 - something they will now tackle now that
00:59 - the system has reached 1.0 and also this
01:01 - limitation sounds like something that
01:03 - you could handle yourself if you
01:04 - absolutely need to you can create
01:06 - network variables remote procedure calls
01:08 - and basically decide for yourself what
01:09 - the hell you want to synchronize so you
01:11 - don't have to depend just on the
01:12 - built-in components then there were a
01:14 - bunch of people asking for comparisons
01:16 - with Photon mirror or fishnet personally
01:19 - I do not have experience with any of
01:20 - those so I really cannot tell you what
01:22 - are the pros and cons and which stone is
01:23 - best I have heard great things about
01:25 - pretty much all of those tools and using
01:27 - netcode for game objects by myself I
01:29 - also think this tool is quite powerful
01:31 - so I really cannot tell you which tone
01:33 - to pick they don't seem pretty great so
01:35 - in most cases just pick one and learn
01:36 - unless your game has some very strict
01:38 - requirements like for example you
01:40 - require extreme accuracy for a super
01:42 - highly competitive game with tons of
01:43 - players in that case definitely spend
01:45 - some time studying off the options of
01:47 - the pros and cons then Justice asks
01:49 - about visual scripting and since visual
01:52 - scripting works on reflection it can
01:54 - work just fine with pretty much any C
01:55 - sharp plus the only limitation is that
01:57 - visual scripting does not work with
01:59 - generics which are used pretty heavily
02:01 - in netcode for game objects so making it
02:04 - purely with visual scripting would be
02:05 - quite tricky but it is certainly
02:07 - possible to make your own logic mainly
02:09 - with visual scripting and only use
02:10 - c-sharp for some of those connecting
02:12 - parts always remember you don't have to
02:13 - go phone visual surfacing or fancy sharp
02:15 - you can mix both them then Zim asks
02:18 - about dots multiplayer or netcode for
02:20 - entities like I mentioned in the current
02:22 - state of dots video it's currently
02:23 - selling development and it's targeting
02:25 - for a phone release by next year netcode
02:27 - for entities will be the tool that is
02:29 - meant for more complex multiplayer games
02:30 - so things with tons of units tons of
02:33 - networking logic so I do want to cover
02:34 - that but I'm going to wait until at
02:36 - least entities 1.0 preview is out so
02:38 - perhaps only around December then Arthur
02:41 - asks how about a nice addition to my TBS
02:43 - course adding some multiplayer either
02:45 - versus or Co-op and yep that would
02:47 - indeed be an excellent idea I'm
02:48 - currently hard work on making a free
02:50 - expansion to the course implementing hex
02:52 - warrants but after that is done I
02:54 - definitely would like to experiment with
02:55 - adding some multiplayer it would also be
02:57 - a fun challenge to see just how
02:59 - difficult it is to add multiplayer to a
03:00 - game after it's been done rather than
03:02 - right from the start that's usually
03:04 - something that you are not supposed to
03:05 - do if you want to make something
03:07 - multiplier you definitely should do that
03:08 - from the start but since the code in
03:10 - that course is very well written I think
03:12 - it could be an interesting Challenge and
03:14 - hopefully it's actually doable and not
03:15 - very difficult also plenty of comments
03:17 - on the videos mention the complete
03:19 - course on multiplayer as usual my
03:20 - problem is always the same lack of time
03:22 - there are way too many topics that I'd
03:24 - love to cover but not enough time to do
03:25 - them all but perhaps I might be able to
03:28 - do something on a smaller scale so maybe
03:30 - about five hours instead of a massive 10
03:32 - or 20 hour course
03:34 - so enough time to be a good course with
03:36 - quite a lot more information than I can
03:37 - do over here on YouTube but not so much
03:39 - that it requires six months to build
03:41 - like my TBS course I still have some big
03:43 - projects that I need to finish first but
03:45 - perhaps I can find the time to do
03:47 - something like that I always enjoy
03:48 - making courses because it allows me to
03:50 - dive deep into one project and I
03:52 - definitely would like to explore
03:53 - multiplayer in quite a bit more detail
03:54 - so hopefully perhaps a full multiplayer
03:57 - course sometime near the end this year
03:59 - then one very important question that
04:01 - Tom and some others asked is about
04:03 - pricing with regards to netcode for game
04:05 - objects the tool itself has no cost
04:07 - neither does UNT transport so by itself
04:10 - it is commonly free the question depends
04:12 - on what service you want to use to host
04:14 - your servers technically you could make
04:16 - it commonly for free the system works on
04:18 - peer-to-peer so you can have the player
04:20 - input a direct IP of the host and then
04:22 - have the host set up port forwarding
04:24 - with that approach it would indeed be
04:26 - commonly free but asking your players to
04:28 - do that is not really a good idea asking
04:30 - the player to handle IPS and port
04:32 - forwarding is something that will
04:33 - definitely annoy your players nowadays
04:34 - so to fix that UNT has two Services you
04:37 - have relay which is peer-to-peer but
04:39 - simplifies the process so you don't need
04:41 - to handle IPS or port forwarding and
04:43 - then ENT also has multiplayer which is
04:45 - for dedicated servers the cost for those
04:47 - Services is on the Unity gaming Services
04:49 - pricing page
04:51 - you can see down here that really is
04:53 - free for up to 50 concurrent users so
04:56 - for an indie game that's actually quite
04:57 - a huge amount and then for the bandwidth
05:00 - that is going to depend on how much out
05:01 - of your synchronizing if you go above
05:03 - the limits then it's 16 cents per
05:04 - additional concurrent user so that seems
05:06 - like a pretty reasonable cost then down
05:08 - here for multiply for this one since
05:11 - it's a dedicated server the cost is on a
05:13 - per hour basis and as soon as you create
05:15 - an account you have an 800 credit I also
05:18 - asked DNT about this credit and this one
05:20 - is for your home account not on a per
05:22 - project basis so at a quick lens both
05:24 - these prices seem pretty reasonable if
05:26 - you're an indie dev then the relay free
05:28 - tier this one is likely more than enough
05:29 - but also I should point out that you are
05:31 - now required to use anti-gaming Services
05:33 - you can use any relay service you want
05:35 - or any dedicated service you want for
05:38 - example I covered Azure in a recent
05:40 - video you could use that to run your
05:41 - dedicated service although again I'm not
05:43 - sure on the math so I'm not internally
05:45 - sure on which approach would be cheaper
05:47 - then a bunch of people asked if this is
05:49 - server or client the Third the answer to
05:52 - that is really up to you you can make it
05:54 - server only or server and client by
05:56 - default most of the things are server
05:58 - authoritative meaning that by default
06:01 - when you make a network transform only
06:02 - the server can move that transform the
06:04 - client does not have the permissions to
06:06 - move it but you can also use a different
06:08 - component that doesn't let the client
06:09 - move itself and tell the server its own
06:11 - position now as to which approach is
06:13 - best really depends on the kind of game
06:15 - you're making if you're making a casual
06:17 - Co-op game kind of like overcooked then
06:19 - security isn't that big of a concern so
06:22 - in that case I would say it's probably
06:23 - fine to trust the client but if you're
06:25 - making something much more competitive
06:27 - and PVP then in that case you definitely
06:29 - should not trust the client so the
06:31 - system supports both it's up to you to
06:33 - decide which one to use then Alex asks
06:35 - about rollback netcode this is a topic
06:38 - that I've only briefly heard about it's
06:40 - especially important in super fast games
06:42 - like fighting games which is a genre
06:43 - that I don't really play much but upon
06:46 - doing some quick research it doesn't
06:47 - look quite interesting basically when
06:49 - the player presses a button you play the
06:51 - action instantly then on the other
06:52 - player when they get that packet you
06:54 - jump the opponent animation forward so
06:56 - it matches when the other player hit
06:58 - their input so it requires a bit of work
07:00 - but it's certainly doable this is a very
07:02 - Niche topic so I'm not sure if I'll be
07:03 - able to cover it but I definitely want
07:05 - to research it for myself then
07:07 - point-and-shoot video asks if between
07:09 - netcode for game objects and netcode for
07:11 - entities if between those two it is
07:13 - possible to make any game and the answer
07:14 - does appear to be yes so netcode for
07:17 - game objects is great for small scale
07:19 - games and netcode for entities should be
07:21 - great for everything else so hyper
07:23 - competitive games with tons of tracked
07:25 - objects it should be great for that use
07:27 - case over here Captain neux asks if it
07:29 - integrates well with existing Solutions
07:31 - like Steam and the answer is yep it does
07:33 - work they mentioned it on docs you can
07:36 - easily swap out the underlying transport
07:37 - layer so instead of using Unity
07:40 - transport you can use the steam
07:41 - transport and everything on the game
07:43 - objects layer should work just fine then
07:45 - law then asks how about adding it to
07:48 - current projects and for that the
07:50 - recommendation is always that if you're
07:51 - going to make your game multiplayer
07:53 - definitely do it from start adding it
07:55 - after the game is done can be possible
07:56 - or it can be pretty much impossible it
07:59 - really depends heavily on the quality
08:00 - and the complexity of your code perhaps
08:02 - you just need to rewrite a few things to
08:04 - make it work or perhaps you need to
08:06 - rewrite so much that you pretty much end
08:08 - up building the entire game again from
08:10 - scratch then wasif asks about creating a
08:13 - metaverse with hundreds of players now
08:15 - for that use case this is really not the
08:17 - right tool for it if you absolutely need
08:19 - 100 players then you shouldn't look into
08:21 - something else like Photon Fusion which
08:23 - is what they use to make the Battle
08:24 - Royale 200 player game then Game Dev
08:27 - demon power asks if this is a good
08:29 - solution for a two-player card game
08:31 - which is peer-to-peer and the answer is
08:33 - yup absolutely this is exactly one of
08:35 - the use case where this system is
08:37 - perfect for a small scale multiplayer
08:39 - game especially for a card game which is
08:41 - turn based and you don't need lots of
08:42 - prediction or any kind of like
08:44 - compensation so this is definitely the
08:46 - perfect use case for this tool set then
08:48 - here Castello asks what about an RTS and
08:51 - for this genre it really depends on the
08:53 - scale if it's an RTS with a handful of
08:55 - units then yep it is possible but if
08:58 - you're looking to make something on the
08:59 - scale of Supreme Commander with tons of
09:01 - units on screen at that scale I think it
09:03 - might cause some issues but again also
09:05 - depends on how you implement it the
09:07 - limitation is apparently on the
09:09 - bandwidth so if you are smart with how
09:11 - little data you send then perhaps even a
09:13 - large RTS can be done I would recommend
09:15 - that for these Edge case you've only
09:17 - quick prototype pushing your design to
09:18 - the Limit just see if it works then yeah
09:21 - that guy asks about combining mirror
09:23 - with entity transport now I'm not
09:25 - familiar with mirror but UNT transport
09:27 - is designed to be modular so if mirror
09:30 - also supports a modular transport layer
09:32 - then yep that seems like it could work
09:34 - Matthew asks about how to share that
09:36 - amongst users in a mobile amp and for
09:38 - that use case it really depends on how
09:40 - often you're sharing that data if it's
09:42 - in real time then yep a multiplayer tool
09:44 - like this one is indeed great however if
09:46 - it's for sharing data but not in runtime
09:48 - so something more asynchronous for that
09:51 - a better tune would perhaps be something
09:52 - like Azure which I covered in a recent
09:54 - video you can store some data in the
09:56 - cloud and get the players to request
09:57 - that which is perfect for any
09:59 - asynchronous multiplayer or just some
10:01 - simple messages yifang asks if it can be
10:03 - self-hosted and yep you can create a
10:06 - server build and host it wherever you
10:07 - want like I said it does not have to be
10:09 - using Unity gaming services or
10:11 - multiplayer the server build is just an
10:13 - executable so it can be run anywhere and
10:16 - if you're using a player host and it can
10:17 - also Run Anywhere codefox asks about
10:20 - using this for making a survival game
10:22 - and again it's only a question of scale
10:23 - but Survival Games usually don't involve
10:26 - hundreds of players usually just a few
10:28 - players and a few Network objects so
10:30 - yeah for this genre I would say it does
10:32 - seem possible and over here heat asks
10:34 - about peer-to-peer and the answer is it
10:37 - can be peer-to-peer either on your own
10:39 - or through ENT really and it can also be
10:41 - based on dedicated servers again either
10:43 - host on your own or through multiplayer
10:45 - or through any other cloud provider
10:46 - alright so those are a bunch of your
10:48 - interesting multiplayer questions and my
10:50 - answers those it always helps me to
10:52 - learn more things when I get asked the
10:53 - question that I might not have thought
10:54 - about it caused me to research some
10:56 - topics and learn some more things and
10:58 - then the more things that I learned the
11:00 - better I can teach so thank you all for
11:01 - asking all these questions like I
11:03 - mentioned I'm currently hard worked on
11:05 - the phone tutorial so far I'm quite
11:07 - impressed with how this system works
11:08 - it's pretty easy to use and it's pretty
11:10 - powerful I definitely think this will be
11:12 - a huge help for anyone wanting to make
11:14 - multiplayer games so stay tuned for the
11:16 - phone video tutorial either on Monday or
11:18 - Wednesday alright hope that's useful
11:20 - check out these videos to learn some
11:22 - more thanks to these awesome patreon
11:24 - supporters for making these videos
11:25 - possible thank you for watching and I'll
11:28 - see you next time
11:32 - foreign