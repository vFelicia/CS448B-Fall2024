00:00 - hello and welcome I am your code monkey
00:01 - and in this video we're going to take
00:03 - our simple mini map and make some
00:04 - scripts to control it let's begin
00:09 - so this is what we have created in the
00:11 - previous video I have a player in here
00:14 - there are some enemies and some
00:16 - buildings you can see on the mini-map
00:18 - various icons for the player the enemies
00:21 - and the buildings I can attack the
00:22 - enemies and they got a different icon
00:25 - when they are flying okay
00:27 - the mini-map is composed of a camera
00:30 - rendering a specific layer into a render
00:33 - texture that is then displayed on the UI
00:35 - with a nice mask on top of it so in this
00:37 - video we're going to take that and
00:39 - create a few scripts to make our
00:40 - mini-map system very simple and clean so
00:43 - first let's start by creating a new
00:45 - c-sharp script and let's call it mini
00:49 - map window this won't control our
00:51 - mini-map window in here
00:53 - so we can drag it in here okay so first
00:56 - of all to keep our code clean let's put
00:58 - all of our various scripts in a specific
01:00 - namespace so in here let's make
01:02 - namespace mini-map so our code is nice
01:05 - and clean and everything is organized
01:07 - okay now in here let's make a private
01:11 - static mini-map window that will be our
01:14 - static instance and on our awake let's
01:18 - set dot instance instance equals this
01:21 - let's make some static showing hide
01:24 - functions so a public static void show
01:26 - and then we'll have a public static void
01:30 - hein on the show we do instance dot game
01:34 - object set active to false simply hide
01:37 - the game object as run show we are going
01:40 - to set the active to true and on hide we
01:42 - are going to hide the game object okay
01:43 - just like that alright so that's the
01:46 - basics for our mini-map window so let's
01:49 - make a simple game handler script just
01:51 - to test our code so let's call it game
01:54 - Handler and drag it on to our game
01:56 - handler object so in here on update
01:58 - let's test showing and hiding the
02:00 - minimum so let's see if input get key
02:03 - down and let's do Kiko dot keypad plus
02:08 - so when we hit keep that plus let's go
02:11 - into the mini-map dot mini-map window
02:14 - and show our window and when
02:19 - hit the iPad - let's hide the window and
02:23 - we can go up here and do using the
02:26 - mini-map namespace and we can now remove
02:29 - this okay right so when we hit keypad
02:32 - pause it should show the mini-map keypad
02:34 - - it should hide the minimum all right
02:36 - let's see okay here right now there's a
02:38 - minimum and if I hit - yep it's gone and
02:41 - if I had pause it shows okay great
02:43 - very simple and very useful in case you
02:45 - want to hide it for example during a
02:47 - cutscene
02:47 - alright now another script we're going
02:50 - to need is a script attached to each
02:52 - icon this script will be responsible for
02:54 - handling each specific icon so for
02:57 - example when we resize the mini-map we
02:59 - want to change the icon size so let's
03:03 - make a new C sharp script let's name it
03:05 - mini-map icon again to keep our code
03:09 - clean let's put it on the mini-map
03:11 - namespace and here we're going to make
03:15 - some simple show and hide functions as
03:17 - well however each mini map icon is
03:20 - different so we're not going to use
03:21 - static so simply do a public void show
03:24 - and a public void hide and do the same
03:28 - thing game object out set active when we
03:30 - show we set it to true when we highlight
03:32 - Lee set it to false so let's add this
03:36 - script to every single mini-map icon so
03:39 - here the player has an icon so drag it
03:41 - on to there the buildings each have a
03:44 - mini map icon so drag it onto there the
03:47 - enemies also have a mini map icon and
03:50 - finally the enemy flying body okay so
03:53 - all of our mini map icons now contain
03:56 - that script so just for testing let's do
03:58 - something with a player icon here on the
04:01 - game hand one let's add a serialized
04:03 - field for a private mini-map icon for
04:08 - the player mini map icon okay and on our
04:13 - private voice start let's hide it after
04:16 - some time so for that I'm going to go up
04:18 - here and do
04:20 - using the code monkey utilities which is
04:22 - always you can wear out for free from
04:23 - unity code monkey calm so in the
04:25 - utilities I have the function timer
04:27 - which triggers a function after some
04:30 - time so after some time let's do the
04:34 - player mini-map icon dot hide after and
04:38 - let's say two seconds and two seconds
04:40 - after that
04:41 - let's show okay so after two seconds the
04:44 - player mini-map icon should hide and
04:46 - after four seconds it should show so
04:48 - let's see that okay there's the player
04:51 - there's the icon after two seconds it's
04:53 - gone and now it's visible again okay
04:55 - great we can now control each specific
04:57 - individual mini-map icon great now the
05:00 - final element using our mini-map system
05:03 - is the camera so let's make a script for
05:05 - that making new c-sharp script and let's
05:08 - name it mini-map camera let's drag it
05:11 - onto our mini-map camera again make it
05:14 - in the mini-map namespace keeps
05:17 - everything nice and clean and in here
05:20 - let's also make a private static
05:22 - mini-map camera for our instance and
05:26 - we're going to set it on private going
05:27 - awake and let's also grab a reference to
05:32 - our camera components any web camera
05:38 - equals transform yep component type
05:41 - camera okay now let's make a function to
05:45 - set the zoom so a public void set zoom
05:49 - and here we're going to receive a float
05:51 - for the orthographic size since our
05:54 - camera is in 2d and all we're going to
05:56 - do is mini-map camera orthographic size
05:59 - equals orthographic sighs okay and let's
06:03 - make this static so we can call it using
06:05 - the class reference instance dot
06:08 - mini-map camera okay and let's also do a
06:11 - public static float for get zoom which
06:15 - will return the camera orthographic size
06:18 - so return this okay
06:20 - let's also make some simple zoomin and
06:22 - zoom-out functions so a public static
06:25 - void do
06:26 - in and a public static void zoom out now
06:31 - on our way come let's grab a float for
06:34 - our zoom which will be our starting zoom
06:37 - so in here mini-map camera dot
06:39 - photographic size will be our starting
06:42 - zoom and let's define some constants for
06:45 - how much we want to change the zoom so
06:46 - up here let's make a private cons boat
06:49 - and call it zoom change amount and let's
06:54 - say 10 just for testing let's also make
06:56 - a zoom minimum any zoom maximum okay so
07:01 - with these values let's use them in here
07:03 - so when we're zooming in again remember
07:06 - this is the orthographic size which
07:08 - represents the amount in units that is
07:10 - displayed on the vertical axis by the
07:12 - camera
07:13 - essentially the larger the orthographic
07:15 - size the more the camera sees so when we
07:18 - zoom in we want the opposite so we want
07:21 - to reduce the actual zoom so do instance
07:24 - not zoom let's reduce it by the zoom
07:26 - change amount and let's do a test just
07:30 - to make sure it doesn't go too small and
07:36 - set the zoom to our instance zoom and
07:40 - for the zoom out we do the opposite okay
07:46 - so that's our mini-map camera fully
07:48 - functioning now on the game Handler and
07:50 - let's create some debug buttons to test
07:52 - the whole thing we're going to use the
07:54 - CMD wa class to create some buttons on
07:57 - the Y to make testing very easy
08:12 - okay so let's remove the previous
08:15 - testing code and okay so now we should
08:18 - have multiple buttons want to show and
08:20 - hide the mini-map show and hide the
08:21 - player icon and zoom in and zoom out on
08:24 - the mini-map camera so let's test okay
08:28 - here's all the buttons let's hide the
08:30 - mini-map and yep we can hide and we can
08:32 - show great show and now hide and show
08:35 - the player icon great and now we can
08:38 - zoom in on the minimum yep there you go
08:39 - zoom in up to a maximum and zoom out
08:43 - okay great so we now have various very
08:47 - simple functions that we can use to
08:49 - manipulate our mini-map to do whatever
08:51 - we want now in order to keep the
08:53 - mini-map system nice and clean let's
08:55 - make a simple main static class to
08:57 - handle everything related to our minimum
08:59 - so in here let's make a new c-sharp
09:01 - script and we're simply going to call
09:03 - this mini-map and here this won't be
09:06 - part of the mini-map namespace this
09:10 - won't be a static class and it's a
09:12 - simple class it does not inherit modern
09:14 - behavior so essentially we want all of
09:17 - the external code to go through this
09:19 - class in this class on load so in here
09:21 - let's make a public static void let's
09:24 - say show window and inside we're going
09:27 - to go into our mini-map window and show
09:30 - it same thing for hiding now let's
09:34 - expose the camera functions so a public
09:37 - static void set soon it won't go into
09:42 - the mini-map camera and set the zoom now
09:45 - let's do the same for all the other
09:47 - functions
09:54 - all right so now this main class exposes
09:56 - all the functions used by the various
09:58 - components so on the game handling let's
10:00 - make sure we use the mini-map instead of
10:02 - all of these so in here mini-map dot
10:05 - show window alright so now we have all
10:15 - of our code interacting only with a
10:17 - single class so everything is nice and
10:19 - clean
10:20 - let's test make sure everything still
10:21 - works exactly as previously yep there is
10:24 - everything so working I can show and
10:26 - hide the mini-map showing hi the player
10:28 - icon and zoom in and zoom out on the
10:31 - minimum yep great now let's do one more
10:35 - thing which is fire an event whenever
10:37 - something changes so for example on the
10:39 - mini-map camera in here would be quite
10:42 - useful to have an event that is fired
10:44 - whenever the zoom changes so let's make
10:46 - a public static event let's simply make
10:49 - it event handler and let's call it on
10:52 - Zoom changed even hammer is part of the
10:55 - system namespace ok now we could use a
10:59 - generic on the event handler in order to
11:01 - pass in the zoom but for now let's leave
11:02 - it as is so in here whenever the zoom
11:05 - changes let's fire this event if we do
11:08 - have subscribers ok now on the mini-map
11:13 - window let's also make some events here
11:16 - make a public static event event handler
11:19 - and let's call it on window show and on
11:23 - window hi and let's fire these events in
11:28 - here all right now let's put it all
11:31 - together by capturing Andrey firing
11:33 - these events through the mini-map main
11:35 - class so in here let's copy exactly the
11:38 - same events and we're going to have a
11:42 - public static void init function that
11:45 - will initialize the various events it
11:48 - won't go into the mini-map camera dot on
11:50 - zoom change and here we're just going to
11:53 - fire the event through this class now
11:57 - let's do the same thing for the others
12:02 - all right so again now all we did was
12:05 - manage to make some specific events on
12:07 - each of the specific scripts then those
12:09 - events are captured by this main class
12:11 - and this main class fires them again so
12:13 - this way we can have all of our external
12:15 - code interact only with this class and
12:17 - now we can do things when the zoom
12:19 - changes and when the window is shown or
12:21 - hidden so for example we can go into the
12:23 - mini-map icon and here at a private
12:27 - voice start and on start let's subscribe
12:29 - to the mini-map on zoom change subscribe
12:32 - to that event and especially when the
12:34 - zoom changes we want the icon to modify
12:37 - its scale okay so in here or mini-map
12:48 - icon we subscribe to the on zoom changed
12:50 - event and when that event is fired we
12:53 - are modifying our makan scale based on
12:56 - our base scale and then simply changing
12:58 - it based on the zoom so if the zoom is
13:00 - of 180 F then we get the base scale if
13:03 - it is lower then we get a smaller icon
13:05 - this way our icons don't take up the
13:08 - whole mini-map when the mini-map is for
13:10 - zoomed in so the last thing we need is
13:13 - to make sure that we actually call the
13:14 - mini-map taught in it so that this can
13:16 - subscribe to all the various events so
13:19 - for that let's go into our game Handler
13:21 - and here before we do anything let's do
13:23 - mini-map that in it now in order to make
13:28 - sure our various scripts all initialized
13:30 - correctly let's modify the script
13:32 - execution order so on the editor let's
13:35 - go into edit project settings and script
13:38 - execution order first let's make the
13:40 - mini-map camera execute first then
13:43 - execute the window and finally the icon
13:46 - then our game handler will execute on
13:48 - default which happens after all of these
13:51 - then he won't call the static class init
13:53 - function and everything should work
13:54 - perfectly fine so let's see okay there
13:57 - you go everything is the same there's
13:59 - the mini-map and now if i zoom in you
14:01 - can see that the icons keep the same
14:02 - size so they no longer become huge when
14:05 - the mini-map is extremely zoomed in and
14:07 - if i zoom out again the icons still have
14:10 - the same size all of that is happening
14:12 - through a very clean
14:13 - nice class and the mini-map icons are
14:17 - similarly subscribing to an event on
14:18 - that class and doing whatever they need
14:20 - so there you have it we took our simple
14:22 - mini-map and made some scripts to
14:24 - control it through code as always you
14:26 - can download the project fanzine
14:27 - utilities from unity code monkey comm if
14:29 - you have any questions post them in the
14:31 - comments and I'll do my best to answer
14:32 - them subscribe for more videos and I'll
14:34 - see you next time