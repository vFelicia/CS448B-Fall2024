00:00 - hello and welcome I'm your code monkey
00:02 - now scriptable objects are an excellent
00:04 - Unity feature you can create discrete
00:06 - objects that exist as an asset and you
00:08 - can use them to store whatever that you
00:10 - want I cover them in detail in another
00:12 - video if you want to learn more so they
00:14 - are great they are super useful for
00:16 - things like creating items maybe
00:17 - crafting recipes maybe store some skill
00:19 - stats and so on however one thing they
00:22 - are not good for or whether they're not
00:24 - supposed to be used is for changing data
00:26 - you should only be using scriptable
00:28 - objects for static data so unlike you
00:30 - define an item with a name an icon
00:32 - perhaps a gold cost and then you don't
00:35 - touch that data after running the game
00:36 - the reason why I'm making this video is
00:38 - because I've seen some people try to
00:40 - make a safe system with script among
00:41 - objects and everything won't work well
00:43 - if you're in the editor but it won't
00:46 - completely break once you finally make
00:47 - the final build so let's see the issue
00:49 - that I'm talking about over here I've
00:52 - got my simple testing demo now for the
00:54 - visuals over here I'm using the ancient
00:56 - empire cinti pack it's a really gorgeous
00:58 - pack with a really nice Roman Greek
01:00 - theme so if you're interested check out
01:02 - the link in the description to get it
01:03 - for yourself and actually right now it's
01:05 - discounted as part of the Cynthia Black
01:07 - Friday sale all of their packs that are
01:09 - at half price so if you're a fan of
01:10 - their Style just like me then definitely
01:12 - check out their store another great
01:13 - Black Friday sale running right now is
01:15 - on the NT accessor over 500 excellent
01:17 - assets are discounted everything from
01:19 - visuals particles animations and tools
01:20 - there's even Flash Deals at 70 off
01:23 - changing every single day and finally
01:25 - there's a Humble Bundle running right
01:26 - now with some low poly assets they are
01:28 - low poly but different from the Cindy
01:30 - style they look quite a bit more cute so
01:32 - if you need any assets then check out
01:34 - all those sales Link in the description
01:35 - those are film links we've used them
01:37 - it's the same price to you and I get a
01:38 - nice commission and here I have this
01:40 - nice character so I can walk around the
01:41 - keys I can go anywhere I want all right
01:43 - then in the project files I've got this
01:46 - script so a simple save file ISO which
01:48 - is a typescript normal object and over
01:50 - here I'm just holding a public Vector 3
01:52 - for the player position and here in the
01:54 - editor I've got a scriptable object of
01:56 - that type so it's got some player
01:57 - position being stored and finally also
01:59 - to have a simple script over here has a
02:02 - reference to the save file script along
02:04 - object to deployer transform then with
02:06 - some testing inputs just running these
02:08 - two functions so on the save function I
02:10 - simply grab the player transform I grab
02:12 - the position and I save it on the save
02:14 - files for the mobile object so I did
02:15 - that that saves the position on the
02:17 - scriptable object and then for the load
02:18 - simply does the opposite just goes into
02:21 - the save files for the long object and
02:22 - loads the position onto the player
02:24 - transform so very simple just a super
02:26 - basic save system and over here and then
02:28 - what does work so I can move the
02:30 - character away I can press unload and
02:32 - there go it loads into the default now I
02:34 - can move around let's say I want to go
02:35 - all the way up here and I press on Save
02:37 - and there you go I've saved a new
02:39 - position so now I go into a completely
02:41 - different position and I hit on load and
02:43 - there you go I unload it back into that
02:45 - position so it looks like this works
02:47 - perfectly let's also make sure it works
02:48 - between runs so let's stop playing and
02:51 - over here if I look into the save file
02:52 - scriptable object yep it does have the
02:55 - new position that I saved while playing
02:56 - and now if I hit play again so here I am
02:59 - again again with my character and if I
03:01 - hit on load yep there you go it does
03:02 - load into the new position that I saved
03:04 - so the default was in here then I saved
03:05 - in here and right now it loaded into
03:07 - that one alright great so everything
03:08 - seems to be working perfectly correct so
03:11 - I can save some data on the scriptable
03:12 - object and then easily unload it and
03:14 - that data is indeed persisting between
03:16 - different runs so right now you can see
03:18 - that it seemingly does work however it
03:21 - doesn't actually work now this is the
03:23 - really sneaky thing with how scriptable
03:24 - objects operate so for example let's say
03:27 - you're happy with the system the game is
03:28 - complete and you ship it to your players
03:30 - in order to do that as usual you just
03:32 - make a build so you just go into file
03:34 - build settings let's say windows build
03:36 - and just go ahead and head on build
03:40 - okay so here's my build executable let's
03:42 - run all right here's my game once again
03:44 - and now over here if I just hit on load
03:47 - and there you go it doesn't load that
03:49 - position okay so it seems like it works
03:50 - now let's try saving another position so
03:53 - let's move the object somewhere let's
03:55 - say the player is over there let's hit
03:56 - on Save and down there on the log we can
03:59 - see that save so now let's move
04:01 - somewhere away let's load and there you
04:03 - go it did work so it did save that one
04:04 - okay so again it seems like it's working
04:07 - however again the home point of a save
04:09 - system is to keep the saves between
04:10 - various runs so let's press alt f4 to
04:13 - quit the game now let's go ahead and
04:15 - play the game again so here I am back in
04:17 - the game and if I hit unload let's see
04:19 - if it shows up on top of the stairs or
04:21 - over on the right side so I press unload
04:23 - and there you go that's the issue so in
04:25 - the last time that we saved the game I
04:27 - over here and I save this position but
04:29 - then upon opening the game again it
04:31 - resets into the default position this is
04:34 - a really sneaky issue so basically what
04:36 - we have here is different behaviors in
04:37 - the editor and in the final build so for
04:40 - example if you were building your game
04:41 - for months and you just expect the final
04:43 - build to behave just like the editor
04:45 - then this would be a very tough thing to
04:46 - find out just at the end of that project
04:49 - for example if you publish this bill to
04:51 - your players you would get complaints
04:52 - that the save system isn't working and
04:54 - then perhaps you would go insane by
04:55 - testing it in the editor and in there it
04:57 - would work normally now I should point
04:59 - out that this quote unquote issue this
05:02 - one isn't really an issue it's not a bug
05:03 - this is the exact intended behavior of
05:06 - these scriptable objects they are meant
05:08 - to be used as read-only data containers
05:10 - so you should use them for defining your
05:12 - items on their Sprite their gold costs
05:14 - and so on but you should not try to save
05:16 - that onto them during runtime so don't
05:18 - ever build a safe system or try to save
05:21 - the player inventory or anything like
05:22 - that don't ever try to do that with a
05:24 - script long object the issue is that you
05:26 - can see the save does not persist
05:28 - so if I'm playing the game and I save
05:30 - and I save this position here I go away
05:32 - and unload now the scriptable object
05:34 - which is currently stored in memory that
05:36 - one does have this new safe position but
05:38 - if I exit the game and I play it again
05:40 - then it's going to start with the value
05:41 - that was assigned right there at build
05:43 - time so whatever changes you make while
05:45 - the game is running This only affects
05:47 - the memory and doesn't actually affect
05:48 - the actual data stored on the file so
05:51 - when you run the game again it won't go
05:52 - back into the defaults that were saved
05:54 - now at this point I should point out
05:56 - that what I'm talking about here this
05:57 - quote unquote issue is specifically for
05:59 - the difference between the editor and
06:01 - the build the issue is that you cannot
06:03 - save data once in a build but you
06:05 - absolutely can save data while working
06:06 - the editor so that means you can
06:08 - definitely use scriptdoll objects and
06:10 - even write to them whilst working on
06:12 - your editor tools so over here if this
06:14 - instead of being a save system for play
06:16 - mode if this was some kind of level
06:18 - editing system that you only wanted to
06:20 - use once in the editor if so then you
06:23 - could indeed do this so you could make a
06:25 - tool that is based on script along
06:26 - objects for storing all of your own
06:27 - level data and when you do that you just
06:29 - also need to make sure to use the editor
06:31 - utility which is inside up here using
06:35 - Unity editor
06:37 - so in this one you have the editor
06:39 - utility
06:41 - and in there you can call set dirty then
06:44 - you pass in the Target so for example
06:45 - this save file Square Mall object this
06:47 - basically serves to tell the editor that
06:49 - this file has been modified so it should
06:51 - be saved now if you absolutely need or
06:53 - you want to use scriptable object to
06:55 - save data if you do then one thing you
06:57 - can do is just serialize them so you can
07:00 - use the built-in Json utility tool and
07:02 - you can convert to Json
07:04 - and let's say this save files original
07:06 - object with this you can convert the
07:08 - script on object into a string Json then
07:11 - with that you can save that as text in a
07:13 - regular file then read that text and
07:15 - load it back into the description object
07:16 - so that is one approach you can take
07:17 - although at that point for that approach
07:19 - you really don't need the description
07:20 - object at all I actually cover the save
07:23 - system just like that in another video
07:24 - it is a simple c-sharp class for the
07:27 - save object to hold all of the save data
07:28 - and then uses the Json utility to
07:31 - convert the save object into Json and
07:33 - save it onto a file now this video isn't
07:35 - meant to scare you away from using
07:36 - stripped on objects at all scriptable
07:38 - objects are an excellent Unity feature
07:40 - and you should absolutely be using them
07:42 - however use them the way they are meant
07:44 - to be used meaning mainly use them only
07:46 - as a read-only data container so do you
07:49 - use them to store and level data store
07:51 - item data enemy data and so on just
07:53 - don't use them for saving data since
07:55 - that won't work when you make the final
07:57 - build one excellent example let's hear
07:59 - the more objects is how I use them in my
08:00 - crafting system I use them to define the
08:02 - recipes and even made a custom Editor to
08:05 - make them super easy to use so check out
08:07 - that video if you want to see a really
08:08 - good nice use case for script and all
08:10 - objects alright hope that's useful check
08:12 - out these videos to learn some more
08:14 - thanks to these awesome patreon
08:16 - supporters for making these videos
08:17 - possible thank you for watching and I'll
08:19 - see you next time
08:22 - [Music]