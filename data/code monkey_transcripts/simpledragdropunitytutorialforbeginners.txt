00:00 - in this video we're going to learn how
00:01 - to do a very simple drag and drop in
00:03 - unity we're going to cover all the
00:05 - interfaces to interact with our UI
00:07 - element let's begin hello and welcome
00:17 - I'm your code monkey and this channel is
00:19 - all about helping you learn how to make
00:21 - your own games with nf2 torrents made by
00:23 - a professional indie game developer so
00:24 - if you find the video helpful consider
00:26 - subscribing okay so over here I have
00:28 - this item and in here a inventory slot
00:31 - now in this video we're going to explore
00:33 - all of the interfaces and events related
00:35 - to dragging and dropping so here in the
00:37 - console window you can see the events so
00:39 - you can see that when I press the mouse
00:40 - there you go there's one event for on
00:42 - mouse press down then as I start
00:45 - dragging there you go I have the own
00:46 - begin drag event and as I let go I have
00:49 - the on end drag vent whilst the item is
00:52 - being dragged as you can see it forms
00:53 - the mouse position and when I let go it
00:55 - drops and stays in that position and
00:58 - over here I have the atom slot which is
01:00 - using the drop event and you can see
01:02 - that if I take my atom and I drop it
01:04 - right on the atom side there you go it
01:06 - gets snapped into position and the
01:07 - object also turns invisible once it is
01:10 - moving so this whole system is extremely
01:12 - simple and it works great alright so
01:14 - this is everything we want to cover
01:16 - let's get to it
01:17 - okay so here's my starting scene over
01:20 - here in the hierarchy I have my UI with
01:22 - my canvas inside I have a item slot game
01:25 - object and a item game object the only
01:28 - thing they have is an image okay let's
01:30 - begin by making our script to handle it
01:34 - so let's create a new C sharp script
01:37 - let's call this drag drop now we're
01:40 - going to apply it to the item game
01:41 - object so just drag it in there okay now
01:43 - in here and let's check out how we can
01:46 - capture various events now the way we do
01:49 - that is by implementing certain
01:50 - interfaces in our script so let's start
01:53 - with the simplest one which is the eye
01:54 - pointer down which is inside using unity
01:58 - engine dot event systems inside there we
02:04 - have the eye pointer down handler
02:09 - so we have this function which will be
02:11 - called when the mouse is pressed whilst
02:12 - on top of this object so I mean here and
02:14 - let's just do a simple debug log to test
02:18 - okay very simple let's see okay so here
02:21 - we are let's press with the mouse on top
02:23 - of our item click and there you go we
02:25 - have our nice event and if I click
02:27 - outside yep there is no message so
02:30 - that's how you implement a very basic
02:31 - Mouse down event now here in the editor
02:34 - you can see that when you create a
02:36 - canvas it automatically creates a event
02:39 - system this is the actual script that
02:41 - handles events and passes them on to
02:42 - whatever scripts implement the
02:44 - interfaces so if you have issues with
02:46 - events make sure you have the event
02:48 - system in your scene all right so back
02:50 - in our script we have the mouse down
02:52 - handler working correctly now let's look
02:54 - at the drag events so we have the I
02:56 - begin drag handler and then the I and
02:59 - drag handle now as the name implies this
03:06 - one gets called when we begin dragging
03:07 - and this one when we stop dragging so
03:09 - let's add some locks to see okay let's
03:15 - test okay here we are in our scene now
03:17 - if I press yep we have the on pointer
03:20 - down event however we are not triggering
03:22 - the begin drag the reason for that is
03:24 - very simple in here in order for these
03:26 - two to be fired we also need to
03:28 - implement another interface which is the
03:31 - I drag handler so this is the one that
03:33 - gets called on every frame whilst we are
03:35 - dragging this object so in here let's
03:38 - put okay so now like this we should be
03:42 - able to test all three of these let's
03:43 - see okay here we are first click there
03:46 - you go and pointer down now as I move
03:47 - the mouse there yo we trigger the begin
03:50 - drag and now it's triggering the on drag
03:51 - every frame that the mouse moves and
03:53 - when I let go there you go we have the
03:56 - on end Ragavendra so we can press drag
04:01 - and drop now let's look at how we can
04:03 - move our object whilst driving
04:04 - so here the on drag function gets called
04:07 - on every frame once the object is being
04:09 - dragged and the mouse has moved so we
04:11 - can use this to apply movement to our
04:13 - object and the way we do it is by moving
04:15 - this rect transform so let's make a
04:17 - paranoid awake just to grab our right
04:20 - from reference okay we have our right
04:26 - transform and now in here on the drag we
04:28 - can modify the anchored position and we
04:30 - can increase it and we go into the event
04:34 - data and we can grab the dump this field
04:39 - contains the movement Delta which is the
04:40 - amount that the mouse moved since the
04:42 - previous frame so by adding this we
04:44 - won't be moving our object on alongside
04:46 - the mouse okay that should do it let's
04:48 - test so here we are let's press down now
04:51 - move the mouse and there we go as you
04:52 - can see I am indeed dragging and now
04:54 - let's go undergo the atom stop so I can
04:57 - drag drop and there we go very nice so
04:59 - this is great but you can already see an
05:01 - issue
05:01 - the issue is that it's not following the
05:03 - mouse perfectly so as I click right here
05:05 - on the white part and as I move away
05:07 - there you can see the sprite is moving
05:10 - further than the actual mouse the reason
05:12 - for this is due to the difference
05:13 - between the mouse movement and the
05:15 - canvas scale here in the editor if we
05:17 - inspect the canvas you can see that the
05:19 - scale is not at one it's a 1.27 so this
05:22 - is why our movement is being incorrect
05:25 - the screen position is moving on ratio
05:27 - of 1 but the scale is 1.27
05:29 - so the actual object moves 27% further
05:31 - than the actual mouse this is due to how
05:34 - the canvas is make sure that it scales
05:35 - everything in order to always fit on
05:37 - every screen so we need to use this
05:39 - value in order to get the correct
05:40 - movement so let's go into our script and
05:43 - in here let's add a field for our canvas
05:47 - ok here is the film for our canvas now
05:49 - let's go to the editor
05:50 - there's our item with our reference or
05:52 - canvas and just write a reference ok so
05:55 - now that we have this reference we can
05:56 - simply go in here we increase by the
05:58 - event a delta except we divided by the
06:02 - canvas dot scale factor all right just
06:05 - like that it should be working
06:06 - let's see ok here we're on let's press
06:08 - and move and there you go the object is
06:11 - now perfectly following the mouse
06:13 - position all right there it is just like
06:14 - that so we're right at the corner move
06:16 - it in there and yep still exactly where
06:19 - I grabbed it I can let go and it stopped
06:21 - is only there right awesome now one of
06:23 - the main things that you probably want
06:24 - to do with drag-and-drop is actually
06:26 - drop it into a specific position like
06:28 - for example and drop this item onto this
06:30 - item slot so let's do that
06:33 - in our script the interface that we need
06:36 - to implement is the eye drop handler so
06:39 - it implements the on drop function this
06:41 - one gets called when a Dragonball object
06:43 - is dropped in here so we actually don't
06:46 - want to implement this in here on the
06:47 - atom but rather on the item slot so
06:49 - let's make a new script in here make a
06:52 - new script call it the item slot and
06:55 - let's drag it onto the atom slot game
06:57 - object okay and I mean here we do what
06:59 - we were doing so we implement I drop
07:05 - handler just like that in here
07:07 - legislativo got one okay so let's test
07:12 - and see if this function is being called
07:14 - okay here's our console now we click we
07:17 - drag there we go we have the entree
07:19 - there you go let go and nope we only
07:22 - have the on drag event so we do not have
07:24 - the on drop so go drop it no dropp no
07:27 - drop no drop so something is wrong here
07:30 - now the answer is because the item
07:32 - itself is the one that is capturing the
07:34 - event instead of the slot so if we want
07:36 - to drag and drop
07:37 - we should disable the draggable item
07:39 - from capturing events so here in the
07:41 - editor and let's go into our item and
07:43 - here let's add a new component of type
07:46 - canvas group as you can see we have the
07:49 - various things we can change like the
07:51 - Alpha for example making it slightly
07:52 - transparent and more importantly we can
07:54 - define if this object should be
07:56 - interactable or not so this is what
07:58 - we're going to use let's go into the
07:59 - code and here let's grab our canvas
08:02 - group okay we have our canvas group so
08:09 - here when we begin drag we go into our
08:11 - canvas group and we set the blocks
08:15 - raycast
08:15 - into false so that the raycast goes
08:18 - through this object and lens on the
08:19 - items on so set that one to false and
08:22 - when we finish dragging we set it back
08:24 - to true and also just for fun let's make
08:27 - it slightly transparent once it's being
08:28 - drive so we certainly modify the Alpha
08:30 - let's put that point six and when we
08:33 - finish we reset back to one all right
08:35 - that should do it
08:36 - let's test okay so here we are let's
08:38 - click and drag and there you go as I
08:40 - drag it's already becoming invisible and
08:42 - as I'm let go it goes back into normal
08:44 - just like that now here is my console
08:47 - let's
08:47 - see I click there yo pointer down I drag
08:50 - begin drag now I go into the arm slot
08:52 - and I drop it and there you go we have
08:54 - the unrep Dani on n drag event alright
08:57 - so we have all of our events working
08:58 - awesome now let's go into the slot
09:01 - script in here when we capture this
09:03 - event we can also get the object that
09:04 - was dropped that one is inside event
09:07 - data dot pointer drag this is the game
09:11 - object that is currently being dragged
09:13 - so we do a similar test if this one is
09:16 - not known then let's take it get the
09:21 - component of time correct transform and
09:23 - set the anchor position to this anchored
09:25 - position alright so there it is just
09:31 - like that we should be able to see our
09:33 - items snap into position when we drop it
09:35 - near the item slot
09:36 - let's test ok here we are let's drag the
09:38 - item yep we can drag and we can let it
09:40 - go okay
09:41 - now let's drag and try to drop it right
09:43 - at the corner and see if it snaps right
09:45 - into position drop and there you go it's
09:47 - now perfectly into position so I move it
09:49 - and if I let go once on top of the item
09:52 - slot it snaps into the correct position
09:54 - and if I take it out then works is out
09:56 - the same as previously go drop go out
09:59 - right awesome so just like this we have
10:02 - some very simple logic working for our
10:04 - drag and drop so now you can take this
10:06 - simple logic and apply it to the
10:08 - inventory system built in a previous
10:10 - video in doing so you'll end up with a
10:12 - visual inventory system that you can
10:14 - drag and drop items onto as always you
10:16 - can download the project files in
10:17 - utilities from in ticker Montcalm
10:19 - subscribe to the channel for more unity
10:21 - tutorials post any questions you have in
10:23 - the comments and I'll see you next time
10:27 - [Music]