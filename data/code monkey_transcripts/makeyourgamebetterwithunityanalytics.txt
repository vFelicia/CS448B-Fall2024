00:00 - in this video we're going to learn how
00:01 - to quickly set up your project using
00:03 - unity analytics
00:04 - this lets you improve your game by
00:06 - analyzing how your players are actually
00:08 - playing your game
00:09 - let's begin
00:17 - hello and welcome i'm your code monkey
00:19 - and this channel is all about helping
00:20 - you
00:20 - learn how to make your own games with
00:22 - in-depth tutorials made by a
00:23 - professional indie game developer so if
00:25 - you find the video helpful consider
00:26 - subscribing
00:27 - okay so this is going to be a short
00:29 - video since it's extremely easy to add
00:31 - now over here i have my demo scene it's
00:34 - just a basic platformer so i have my
00:36 - character and i can move around and jump
00:38 - i covered basic jumping in another video
00:40 - if you want to know how it works
00:42 - and over here there are some hazards
00:44 - like this fire pit and over here there's
00:46 - a spike
00:46 - so if i touch them yep there you go i
00:48 - die and i can click a button to restart
00:50 - my level
00:51 - then if i keep going at the end level
00:56 - if there you go there's a nice star and
00:57 - if i touch it yep there you go i won the
00:59 - level
01:00 - then click on continue and now i'm on a
01:02 - different level and so on and all the
01:04 - mechanics are all the same
01:06 - this video is made possible thanks to
01:08 - these awesome supporters
01:09 - go to patreon.com codemonkey to get some
01:12 - perks and help keep the videos free for
01:14 - everyone
01:14 - all right so that's my demo setup just a
01:17 - pretty basic platformer
01:19 - okay so let's set up our analytics now
01:21 - like i said
01:22 - it's extremely easy we just go all the
01:24 - way up here to window
01:26 - go into general and open up the services
01:29 - tab
01:30 - right here so here first of all we need
01:34 - to create the unity project id
01:36 - so just select an organization and hit
01:38 - on create and right away the project has
01:41 - been created so we can see all the ent
01:43 - services that we can use
01:44 - so there's lots of different services
01:46 - that can help you develop your game
01:48 - in this one we're focused on the
01:49 - analytics so in here just click on it
01:51 - and yep analytics so you can figure out
01:53 - where your players get frustrated how to
01:55 - improve them and so on
01:56 - so just click on enable and then just
01:58 - asks you if your target is children
02:00 - chances are it is not so just leave it
02:02 - unticked and click on continue
02:04 - okay so in order to get some basic
02:06 - functionality this is literally all
02:08 - there is to it
02:09 - just press the button enable analytics
02:10 - and yep there you go everything is
02:12 - working
02:12 - so if i start playing right now as soon
02:15 - as i hit play then some basic analytics
02:17 - are sent
02:18 - so now again on the services window we
02:19 - can open up analytics and click the
02:21 - button to go to the dashboard
02:23 - so this opens up your browser and goes
02:24 - directly to the unity dashboard
02:26 - and over here is where you will see all
02:28 - the various stats
02:30 - now one thing about the data is that it
02:31 - takes up to one day to show up on the
02:33 - dashboard
02:34 - so right now it shows up as empty even
02:36 - though we already were in the game once
02:37 - so in one day this will be updated with
02:39 - all the stats in case you have multiple
02:42 - projects you can go up here in order to
02:43 - select the actual project that you set
02:45 - in this case it's this one
02:47 - okay so this is the analytics overview
02:50 - then here we can go into the data
02:51 - explorer
02:52 - and here we can view the default stats
02:54 - so right away in here we can click
02:56 - in order to visualize the daily active
02:58 - users monthly active users
03:00 - then there's also sessions per user and
03:02 - in case you enable monetization you also
03:04 - see a whole bunch of monetization
03:06 - revenue stats
03:07 - so this is the type of data and then
03:09 - down here is the segment
03:11 - so this allows you to further drill down
03:14 - and actually
03:14 - identify the type of data that you're
03:16 - looking for so by default
03:18 - just by pressing a button we already
03:19 - have quite a lot of data to improve our
03:21 - game
03:22 - so we could see our retention and
03:24 - compare it with either all users or just
03:26 - a couple of countries
03:27 - we could check out the number of daily
03:29 - active users per android or for ios and
03:32 - so on
03:32 - so lots of data already here however we
03:35 - want to expand upon it
03:36 - so let's learn how we can handle custom
03:38 - events okay so here we are back in our
03:41 - game
03:41 - now the first thing we need is to
03:43 - actually think about what we want to
03:44 - keep track
03:45 - so what sort of data would be useful for
03:47 - improving our game
03:48 - now in this simple example the obvious
03:50 - answers are tracking deaths and wins
03:53 - so let's start with the simple one of
03:55 - tracking wins now there are two ways we
03:57 - can send events
03:58 - we can do it through code or through a
03:59 - component so personally i prefer sending
04:02 - them through code but i'll also cover
04:03 - the component in a bit
04:04 - now over here i have my basic player
04:06 - script
04:08 - and then down here we are testing for
04:10 - the 11 win and levels
04:12 - so essentially the star game object
04:14 - contains a star component so just
04:15 - testing for the collision
04:17 - and it collides and there you go level
04:18 - one so just some pretty basic stuff
04:21 - and it's in here that we want to fire
04:22 - our custom event so for that
04:24 - let's go all the way up here and we're
04:26 - going to add using unity engine
04:29 - dot analytics then we can go down here
04:33 - and we're going to add analytics and
04:36 - call custom event
04:39 - and all we need is to pass a name for
04:40 - our custom event
04:42 - so in this case let's say level win then
04:45 - let's add our current level
04:47 - so i have just a basic static class in
04:49 - here and holds an inum for the level
04:52 - so i can just use this function down
04:53 - here to get the current level
04:55 - and that's what we use all right so this
04:58 - will be triggered whenever i win a level
05:00 - and then tell me which level we want
05:02 - now this function here returns a
05:04 - analytic result so this is just a basic
05:07 - in home with a bunch of possible values
05:09 - so in most cases what you should be
05:11 - getting is just a simple okay
05:13 - so we can analog to test so in here
05:15 - let's capture that
05:19 - so we grab the result and then we simply
05:21 - print it okay so let's try and i want to
05:24 - win so let's jump in
05:26 - jump in and go through this one and yep
05:29 - no window level all right great
05:30 - and over here in the console yep we can
05:32 - see indeed analytics result
05:34 - okay so this is telling us that our
05:36 - custom event has been correctly sent all
05:37 - right
05:38 - awesome now with this function call all
05:40 - we did was just send a basic event
05:42 - so essentially just a string however we
05:45 - have another function where we can send
05:47 - in
05:47 - a dictionary so here this one takes a
05:50 - custom event name
05:51 - and this one takes a custom event name
05:53 - as well as our dictionary
05:55 - so alternatively instead of sending a
05:57 - string composed of the level win
05:58 - and the number we can send the name of
06:00 - the event as level 1
06:03 - and then we pass in a dictionary so
06:05 - let's create a new dictionary
06:08 - of type string object
06:14 - okay so we're calling custom event
06:16 - passing in the string level 1
06:17 - then we're passing in a dictionary and a
06:20 - dictionary takes a string key and then
06:22 - an object
06:22 - so for the string key let's call it our
06:25 - level
06:28 - and the actual value will be the same
06:30 - level all right so just like this it
06:33 - should be working
06:34 - let's test okay here we are and let's
06:37 - try to win
06:43 - and if there you go we have our ok so
06:45 - once again our analytics is being
06:47 - correctly sent
06:48 - and in this case it's being sent along
06:49 - with a dictionary
06:51 - okay so that's just one way to send
06:53 - events through code now let me just
06:55 - quickly cover sending events through a
06:56 - component
06:57 - now for that let's create an empty game
06:59 - object
07:00 - and then down here we can add the
07:02 - component and we go into analytics
07:05 - and we add the analytics event tracker
07:07 - so here you can see a whole bunch of
07:09 - events
07:10 - for when the event will be triggered so
07:12 - based on its lifecycle based on a ui
07:14 - or a timer so for example we could
07:17 - choose
07:17 - lifecycle and then say on start then we
07:20 - would say send event
07:21 - then let's say level win and then we
07:24 - could add some parameters so let's say
07:26 - the
07:26 - level in this case let's say the level
07:28 - one so essentially this would send the
07:30 - exact same event that we sent through
07:32 - code
07:32 - except it would be sent through here and
07:34 - should be sent when this game object is
07:36 - created
07:36 - so for example we would make this a
07:38 - prefab and instantiate it when the
07:39 - player touches the start
07:41 - so that's how you send events through a
07:43 - basic component without touching the
07:44 - code
07:45 - now like i said i personally prefer to
07:47 - do it all through code but here's the
07:48 - other option and it's up to you
07:50 - alright so now for the other thing we
07:52 - want to track it's deaths
07:54 - so here we have the platform script and
07:56 - again this is when he hits the star and
07:58 - wins
07:59 - and this is when he hits either a lava
08:00 - or a spike where he dies
08:03 - so here let's fire off pretty much a
08:05 - similar event so we can just copy this
08:08 - except in this case it's not a level win
08:09 - but a level died
08:11 - and then again we can pass in the same
08:12 - dictionary with level and show the
08:14 - current level
08:15 - so with this we would gather some stats
08:17 - on how many times a player died on a
08:19 - specific level
08:20 - and again over here we have a dictionary
08:22 - so this is not limited to just one extra
08:24 - value
08:25 - i believe the total maximum is 10 so we
08:27 - can add various parameters in here so
08:29 - for example we have a level
08:31 - in which the player died and then we can
08:33 - also add another one
08:37 - and here let's say we want to keep track
08:39 - of the position
08:40 - and now over here we can ask ourselves
08:42 - an interesting question
08:44 - which is what would be the best type of
08:45 - data that we could send in order to make
08:47 - it easy to analyze and further improve
08:48 - our game
08:49 - so in here we could send a vector3
08:51 - however doing so would require making
08:53 - some extra tools in order to actually
08:55 - analyze that data
08:56 - since every vector 3 would be very
08:58 - different so instead what we can do is
09:00 - just some basic math
09:01 - and split up our level into various
09:03 - sections since the game is a platformer
09:05 - the player is pretty much always moving
09:07 - just left to right
09:08 - so we could essentially so in this case
09:10 - it's very easy to split our level into
09:12 - pretty much some vertical slices
09:14 - so here we take this transform position
09:16 - which is the player position
09:18 - then let's say we divide by 20 units and
09:21 - we round this value
09:25 - so essentially for every 10 units on the
09:27 - horizontal axis we're going to have a
09:29 - different section
09:30 - so here we can create a new game object
09:32 - just to visually see all right over
09:33 - there we have our position
09:35 - so if the player were to die in here on
09:37 - position 10 then it would die on section
09:39 - 0
09:39 - then if it died over here on let's say
09:42 - position 65
09:44 - then to be tagged as a death on the
09:45 - section 3 and so on
09:47 - so this is just an example as to how you
09:49 - should think about what type of data
09:50 - you're actually storing in order to make
09:52 - the best decisions
09:53 - using that data okay so that's pretty
09:55 - much it
09:56 - we have a custom event we give it a name
09:58 - we pass in the level where this event
10:00 - was fired and also the position where
10:02 - the event was fired
10:03 - so with this we know on which level the
10:05 - player died
10:06 - and roughly where on that level he died
10:09 - okay so let's test and see if our result
10:11 - is okay
10:12 - okay so here we are let's move forward
10:14 - and yep i falled i died and yep there
10:17 - you go and if i look in the console
10:19 - there's the ok result alright so
10:21 - everything seems to be working
10:23 - and now with all the data correctly set
10:25 - up now this would be the time to send
10:26 - your game to some testers in order to
10:28 - get some data
10:29 - and after you've correctly set up your
10:31 - analytics you need to wait a couple of
10:33 - hours to about a day for those sets to
10:35 - show up in the dashboard
10:36 - alright so here i am one day or later
10:38 - and we can view the stats
10:39 - so on the data explorer you can see that
10:41 - it did indeed update
10:43 - so a dau is a daily active user it was
10:46 - just me playing the game so yep just one
10:49 - and now that we have some data we can go
10:51 - on the event manager
10:52 - and over here we see all of our custom
10:54 - events so the first one we sent was the
10:56 - string level win underscore one and then
10:59 - we start sending just level and level
11:01 - down and each of these you can see has
11:02 - various parameters
11:04 - so we've got the level with each level
11:06 - and then the position which we slice the
11:07 - level into various positions so we can
11:09 - see that the custom events are correctly
11:11 - being sent
11:13 - and over here on the data explorer we
11:15 - can click on this to open up some custom
11:17 - events
11:18 - and now let's say 11 died for all
11:20 - current users
11:22 - and let's put it by a level and just
11:24 - like this in there we can see all the
11:25 - stats so we can see for example that
11:28 - there were only one deaths on level
11:30 - three there were three deaths on level
11:32 - two
11:32 - and eleven that's on level one so for
11:35 - example let's assume we want our game to
11:37 - be somewhat casual and not meant to be a
11:39 - hardcore platformer
11:40 - so this tells us that there were way too
11:42 - many that's on level one
11:44 - so using this data we would now know
11:45 - okay we should probably rebalance this
11:47 - level to make it slightly easier
11:49 - so you can add as many custom events as
11:51 - you want and search for them
11:52 - using any of the parameters that you
11:54 - sent now on the rest of the dashboard
11:56 - you also have the funnel analyzer
11:59 - so here this helps you identify where
12:00 - the players drop off
12:02 - so you can see a bunch of preset funnel
12:04 - templates so for example track
12:06 - whenever the user does something new
12:08 - track when monetization
12:10 - happens when people watch ads or so on
12:12 - or you can just create a new funnel
12:15 - and here you can give the funnel a name
12:17 - so let's say a level of progression
12:19 - and then you can add the various events
12:20 - that make up this funnel so for example
12:23 - we would track level win then over here
12:26 - the parameter on one
12:27 - and equals in this case we used an inum
12:30 - to define our levels and it's underscore
12:32 - one
12:32 - so on the first part of the funnel we
12:34 - would go through a win on level one
12:35 - then we'd go win on level two
12:41 - so just like this we have a funnel that
12:43 - will show us where the players drop off
12:45 - our game
12:46 - here is the funnel rate setup and now in
12:48 - our case since i did go through all
12:50 - three levels we can see a hundred
12:51 - percent
12:52 - but for example let's say that only half
12:54 - of the players actually went through
12:55 - level one so level one would be at 100
12:58 - and everything else would be at less
12:59 - than that
12:59 - so using this we can very easily see
13:01 - where our players are dropping off
13:03 - now there's always a natural drop off
13:05 - but we can analyze it to see if the
13:07 - drop-off that we get
13:08 - is the expected one or if players are
13:09 - dropping off way too much
13:11 - you can create any type of funnels based
13:13 - on the events you are capturing so the
13:14 - element for the system is really just
13:16 - your imagination
13:17 - then here we also have the segments part
13:20 - and here you can separate your audience
13:22 - into groups to better analyze your stats
13:24 - so by default you have all these
13:26 - segments so for example
13:27 - you have all the current users so this
13:30 - is everyone who used the app in the last
13:31 - 90 days
13:32 - then we see a bunch of them based on
13:34 - life cycle so what happens to the users
13:36 - on the first three days and so on
13:38 - then we have a bunch of geography things
13:40 - a bunch of monetization
13:42 - and also our platforms and once again
13:44 - you can also create new segments
13:46 - and you can add custom events and here
13:48 - go as detailed as you want
13:50 - then down here we also have market
13:51 - insights so here we can see a bunch of
13:54 - data on the current state of the market
13:57 - you have stats for mobile and also for
13:59 - standalone
14:00 - so for example here on standalone we can
14:03 - see that the majority of people has
14:04 - multiple cores
14:06 - then down here we can see that most of
14:08 - them are on windows
14:10 - and we can also see that quite a lot of
14:11 - people are using 1080p
14:13 - however there's still a significant
14:14 - portion of people using smaller
14:16 - resolutions
14:17 - so this tells you do not ignore those
14:19 - people and make sure your game and all
14:20 - of its text
14:21 - is either adaptable or can be read at
14:23 - small resolutions
14:25 - and for mobile we also see tons of data
14:27 - so you can see all the various aspect
14:29 - ratios
14:30 - here we see the platform split with
14:32 - android taking a huge chunk
14:34 - and the various vendors that make up all
14:36 - of those users so here you can see tons
14:38 - of data on the current side of the
14:39 - market which will help you make
14:40 - decisions to make your game the best it
14:42 - can be
14:43 - and lastly we have the raw data export
14:46 - so this is where you get the raw
14:47 - analytics data which you can then use to
14:49 - make your own custom analysis and
14:50 - visualizations
14:52 - you can export as json or as tsv
14:55 - and that makes up unity analytics as you
14:57 - saw only took was a single button press
14:59 - we enabled the basic analytics
15:01 - and then we expand upon that with custom
15:03 - events to track specific things in our
15:05 - game
15:05 - then using that custom data we were able
15:07 - to improve the game by identifying a
15:09 - specific point where the difficulty
15:10 - curve was too steep
15:12 - so the end result of all this is a
15:13 - better game for everyone
15:15 - if you found this video helpful consider
15:16 - liking and subscribing this video is
15:18 - made possible thanks to these awesome
15:20 - supporters
15:20 - go to patreon.com unitycodemonkey to get
15:23 - some perks and help keep the videos free
15:25 - for everyone
15:26 - as always you can download the project
15:27 - files and utilities from
15:28 - mintycodemonk.com
15:30 - subscribe to the channel for more unt
15:31 - tutorials post any questions i have in
15:33 - comments and i'll see you next time