00:00 - hello and welcome I'm your code machi
00:01 - miniseries were making snake in unity in
00:04 - this video we're going to grow our snake
00:05 - every time we eat some food
00:07 - let's begin
00:10 - okay so here is our scene we have our
00:13 - snake that we can move around with the
00:14 - keyboard and as you can see we also have
00:16 - some food in our mouth and if I move
00:18 - towards it
00:19 - if the snake eats it and the food is
00:21 - spawned in a new position I go back to
00:24 - it I eat it again and then you wanna
00:25 - spawn and so on and so forth
00:27 - okay so now we need to make our snake
00:29 - row every time we eat something so here
00:31 - in our snake class we need some
00:33 - variables to store and handle the size
00:35 - of the snake so it's making here a
00:37 - private int for the snake body size this
00:41 - will store the size of the body of the
00:43 - snake so when it's zero we only have the
00:45 - head when not zero it contains the
00:47 - number of body segments and then we also
00:49 - need to store where the snake has been
00:51 - so we know where to locate our body
00:53 - parts so for that and let's define a
00:55 - list of vector2 ends this will be used
01:00 - when we need to add size to our snake
01:02 - body
01:02 - so now let's fill up this list so for
01:05 - that we go into the place where we are
01:07 - handling our grid movement and in here
01:09 - before we actually move our snake let's
01:12 - add the current position to the list so
01:14 - going to the snake move position list
01:17 - and we insert into index zero and let's
01:21 - insert our current grid position so we
01:24 - insert the current position into the
01:26 - position list then we move our snake and
01:28 - after that we need to test if toneless
01:30 - is too big based on the snake body size
01:32 - so in here we simply do if
01:41 - okay so we check how many elements we
01:44 - have stored in our list if the number of
01:46 - elements is bigger than or equal to the
01:49 - body size plus one so one more than we
01:52 - need then we simply remove the very last
01:54 - one on the list okay so this is very
01:56 - simple and it should be working so for
01:58 - testing let's spawn something just to be
02:00 - able to see these sneaks eyes so after
02:02 - we validate our snake position list
02:04 - let's do a simple cycle in here let's
02:08 - simply spawn a square so we can see
02:10 - where the snake move positional list is
02:11 - currently holding so for that I'm going
02:13 - to create a world sprite this is part of
02:16 - the code monkey utilities it simply lets
02:18 - me very simply create a sprite so let's
02:21 - position it where this body part would
02:23 - be and let's also create a function
02:32 - timer so we can destroy this world
02:34 - sprite before the snake moves again okay
02:40 - so this is just for testing but it
02:41 - should be working essentially we are
02:43 - cycling through the move position list
02:44 - we create a sprite on that move position
02:47 - and the next time we move we destroy
02:50 - that sprite so essentially our sprites
02:51 - will always be created and destroyed
02:53 - just so we can visually see where our
02:55 - snake has been and also for testing
02:57 - let's set the snake body size to one so
03:00 - we have one body part walking behind the
03:02 - head and obviously initialize our list
03:06 - okay there's our snake and as you can
03:08 - see it has a body part standing behind
03:10 - it and I can move up into the left and
03:13 - down and yep it's going well it says
03:16 - with a couple more body signs and yep
03:18 - there it is as you can see all the
03:19 - positions are correctly following the
03:21 - snake now we have multiple positions and
03:23 - they fall exactly where the snake has
03:25 - been all right so we are correctly
03:27 - storing the positions we need to place
03:29 - the body now all we need to do is
03:31 - actually grow our snake when we eat our
03:34 - food so previously we were handling the
03:36 - food like this we were similarly telling
03:38 - the unleavened grid that the snake had
03:39 - moved into a certain position and then
03:41 - the level grid checks if the awkward
03:44 - position matches the food and if so
03:45 - destroys and spawns a new food however
03:47 - we also need the snake to know if any
03:49 - food was eaten so in here let's rename
03:52 - this function into
03:54 - try snake eat food in order to quickly
03:57 - rename things in Visual Studio you can
03:59 - simply hit ctrl R R and it allows you to
04:02 - rename a method and as you can see all
04:05 - the references to that method get
04:07 - renamed automatically so now with a more
04:09 - proper name try snake eat food and let's
04:11 - also return a boolean so essentially
04:13 - this will return true if the snake has
04:15 - eaten some food and false if not so in
04:17 - this case it has indeed eaten the food
04:20 - so in here we return true and if not we
04:23 - return false so now we can go back into
04:26 - our snake and now the return value of
04:28 - this function is if the snake has eaten
04:31 - some food so cool snake ate food and if
04:36 - the snake ate food then snake a food
04:41 - grow body and then in here all we do is
04:45 - snake body size increase now we want to
04:48 - run this code before we validate our
04:51 - snake body size so in here so we modify
04:55 - the grid position we test if the snake
04:57 - has eaten some food if so we increase
04:59 - the body size and then we check the
05:00 - amount of values that are currently in
05:02 - our position list so just like that we
05:04 - should now be correctly increasing in
05:05 - size whenever we eat some food so I'd
05:07 - like to go up here and we know I'm gonna
05:10 - need this for testing so let's put this
05:11 - at zero as it should be and see if the
05:13 - snake body does increase okay there's a
05:16 - snake moving around I'm going to go and
05:18 - eat that piece of food and when I get
05:20 - there
05:21 - yep the body now has one size now I eat
05:24 - another one and let's see if it grows
05:26 - and yep
05:28 - we now have a body with the size of two
05:31 - yet another one and now we should have
05:33 - three and so on and as you can see the
05:35 - body is correctly following exactly
05:37 - where the snake has been and everything
05:39 - is working perfectly fine so now that we
05:41 - have a snake body we need to once again
05:43 - fix the issue we had previously
05:44 - regarding the food spawn in here if you
05:47 - remember first of all we were only doing
05:48 - this which picks a completely random
05:50 - position in our grid however that could
05:53 - mean that it could spawn right on top of
05:55 - the head which is not what we wanted so
05:56 - that's why we added this cycle in order
05:59 - to make sure that the food world
06:00 - position is never on top of the snake
06:02 - but right now the snake has a body so it
06:05 - cannot spawn on top of the
06:06 - head of the snake or any of the body
06:07 - parts so here in our snake let's make a
06:10 - function to return the complete snake in
06:12 - great position so here we have a very
06:28 - simple function that returns the
06:29 - complete snake great positional list so
06:32 - you create a new list that we are going
06:34 - to return we initially set it with a
06:36 - grid position which is the head grid
06:38 - position and then we add the snake move
06:40 - position list which contains all the
06:41 - positions of the body so now we can go
06:43 - back into the level were in and here we
06:45 - generate a random position and we keep
06:48 - generating wild so we keep generating
06:56 - once this position is found inside of
06:59 - our grid position list so it means this
07:01 - one is occupied so generate one again
07:02 - again and so on
07:04 - so let's s just make sure we never see
07:06 - any food spawning on top of the body and
07:08 - just like that here's our snake with a
07:10 - very large body and you can see that
07:12 - whenever I eat some food it spawns a new
07:14 - one and it does not spawn right on top
07:16 - of the body so there you have it we set
07:20 - up our snake class to be aware of where
07:21 - it's been so we can increase the size of
07:23 - our body whenever the snake eats some
07:24 - food in the next video we're going to
07:26 - add some proper snake body sprites as
07:29 - always you can download the project
07:30 - files and utilities from unity code
07:32 - monkey comm if you have any questions
07:34 - post them in the comments and I'll do my
07:35 - best answer them subscribe for more
07:36 - videos and I'll see you next time