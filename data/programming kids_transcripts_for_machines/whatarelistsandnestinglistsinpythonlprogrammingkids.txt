hello programmers my name is lynn and today i will teach you about lisps in python by the end of this video you will understand the meaning of a list and why it's considered very flexible you will understand the rules and the feature of a list you will understand many creative additional methods in python and understand what is a nested if and of course we will apply all of these methods into our jupiter notebook and i'll give you a mini quiz at the end of this video to test your knowledge so let's begin first of all what is a list a list is an ordered sequence that can hold a variety of object types and what i mean by an object type is like floating points integers strings these are all can be held in a list they use square brackets and commas to separate objects and list so here's in a little example and lisps support instancing and slicing so if you didn't watch our previous video and you don't know what our industry and slicing is make sure to check it out i will link it in the eye in the corner as well as in the description box then lists are nested and we're gonna learn more about that later on now lists are considered extremely flexible in python for two main reasons one is that they have no fixed size meaning you don't have to specify how big a list will be before you start coding it and they have no fixed type data meaning that you don't have to in a list not everything should be a string it can be a mix of strings and floating points and integers so let's hop into our jupyter notebook and explore some of these concepts and let's learn a bit about coding so our jupiter notebook is where we code on and it is very good for beginners as it shows you input and output and makes you understand about what is happening to your code so i'm going to launch it from my anaconda navigator and if you don't know how to download jupyter notebook or you don't have it already make sure to click the i in the corner or the description box and check out that video that we filmed some time ago anyway i'm on my anaconda navigator now and i'm going to press launch jupiter notebook i'll see you soon all right guys as you can see we are on our jupiter notebook right now and you can see that we have blocks for us to code on and let's start with assigning a list to the variable lin oh actually here my underscore list and we have to use equal and then we need square square brackets inside them i will put five six seven and eight all right and let's try running it let's see if python can now identify this it knows that um my list is equal to five six seven and eight and as you can see this is our input this is our output and we just created a list of integers but as we know lists can actually hold more than just integers they can hold strings and floating points and way more so um i'm going to teach you a function that you can use to count how many items are in a sequence of lists and it's called the len so what you have to do is open up the brackets and inside it put the name of your list so my list and let's run it for perfect if we add more items into our list and run it it changes so let's check out some other features from lists so i'm going to teach you another really cool method and as we know that lists are extremely flexible and you can actually use a plus sign to add an item to a list although this doesn't change the original list you can do that by reassigning or by an alternative method i'm going to teach you later on so what we're going to do right now is do uh i don't want to change my list permanently i just want to tap temporarily so i'm going to put lin list plus square brackets and inside it i'm going to add 10. again this is temporarily oh i didn't define that okay we'll use my list perfect my underscore list plus 10. and now if you want to run it again because you don't want it to change your original one perfect another thing that you can do is multiply so if you want to duplicate the items in a list and you can do that this way my underscore list times this one here is used as a multiplication sign in python and you can put times 2 for duplicating it and we have everything times 2 times 3 you have a time 3. again if you want to run your list nothing changes it's temporarily so these are some of the um methods and we're going to learn a lot more but let's clear this out so that we have more space to do some of our other special methods that we can use for a list so let me clear this out and i'll see you in a second all right guys we are now enough on our fresh page on our jupiter notebook and we're going to take a look at some of the special methods that can be used in not just lists and anything in python so let's create a new list of my favorite animals and i'm going to call that new l for short and equal square brackets and my favorite animals i really like dogs they're super cute i also like oh make sure to add on your apostrophes and comments to separate all of your animals i really like cats as well they're so fluffy i think horses are pretty cool too i can't remember any for now but we can put these for now now i'm going to teach you one of my favorite methods or functions and it's called the append and this is the alternative way i was talking about earlier on it is used to permanently add an item to the end of the list so let before on this video we used a plus sign to add it but it was temporarily so append me is to add something or an item to a list for permanently so let's use it because i just remembered i absolutely love flamingos they're super cute and i love the pink color so let's use the pant function so i'm going to put the name of my list new l i'm going to put dot append and inside it i will put the name of my favorite animal so flamingos all right let's run it new owl look it is it is now one of my um lists it's in my list now and it is added at the end so that's perfect all right now i just remembered that one of my other favorites is fishes so let's put u l dot append open up the brackets and add fishes they're really good swimmers so i really like them so now let's try it out again perfect okay i just remembered that when i was younger my all of my fishes died so i don't think i would probably like fishes when i was younger because they also eat so i thought these i used to think that they eat me so maybe i don't like fishes anymore so we can use a new function called pop that is it is used to remove or pop off an item depending on the index so if you don't understand what is indexing and slicing you have to go check out our previous video we talked about them and we mentioned a lot of important stuff that will help you in your coding journey so make sure to check it out anyway let's use the pop function now to remove dishes off my list so what we're going to do is put the name of my list new l and dot pop and brackets inside the brackets i have to put the index of fishes so zero one two three four the index of fishes is four so here we go and let's check out my list now fish is no longer one of them perfect now um i want my list to be for to be in descending order i want it to be listed in a descending order and luckily we have another function which is called reverse so let's try it out so let's put the name of my list ul and let's put dot reverse and brackets empty brackets are fine and let's run mu l flamingos which is cats and dogs perfect a b c d e f g h cool all right now that that is done we're going to move on to nesting lists so i'll see you after i clean my notebook see you alright guys now what is a nested list i kept this for the end because now that you understand all of the other functions that we learned next a nested list is basically a it consists of a list inside list so it's basically a list inside the list and you just create as many normal lists as you want and just assign them to a variable and that's it and you can use all the other functions that we learned such as append and popoff and all of them now i'd like to test your knowledge about today's topic i'm going to give you three multiple choice questions and the answers will also be displayed but you'll have to pause the video and write it in the comments section and i will correct it for you so question number one lisps can have multiple object types is that true or is that false pause the video think about it and unpause it when you're ready all right you got it yes the answer is true as i said before lisps can have multiple object types such as string integers and floating points and they can be all in the same list together question number two if the list dogs cats birds what is the result of list one this is a bit tricky so think about it carefully is it cats is it cats and birds is it birds is it dogs and cats pause the video think about it and unpause it when you're ready the answer is cats birds so this is a question link to our previous video which is about indexing and slicing and of course they are used in lists and i did a different one while explaining on the jupiter notebook but this is a bit trickier and question number three and the final answer if list is equal to cat's dog's birds what is the result of list dot pop is it birds is it dogs is it cats pause the video think about it and unpause it when you're ready all right the answer is birds because we said that um the indexing is for when they when we don't specify what which one birds will always be them the last one will always be the one that will get deleted or popped off all right guys i hope you enjoyed this video and i hope you learned a lot and i make sure to give this video a big thumbs up if you enjoyed it and subscribe in order to join our family in order to become a programmer one day and if you want to get notified every time we upload a new video so that you can be first turn the notification bell on to get notified alright guys thank you keep bro programming and i'll see you guys next time on programming kids bye for now