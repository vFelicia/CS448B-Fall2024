00:00 - hello my name is jemmy and today i am
00:02 - going to be giving you a brief overview
00:04 - on json
00:06 - or json um json is a data represention
00:09 - format
00:10 - and it is also known as javascript
00:12 - object notation
00:13 - json is com most commonly used for apis
00:16 - and configs
00:17 - and the reason we use json is because
00:19 - it's a very lightweight and easy to read
00:21 - or write portable data holder also it
00:24 - integrates easily with
00:26 - most programming languages such as
00:28 - python or javascript obviously
00:30 - so that is json and let's get into it so
00:33 - the first thing we want to do in our
00:35 - code is to import json
00:37 - um import.json is important because if
00:40 - you don't have this
00:41 - then it won't work after that we will
00:43 - have create adjacent object
00:45 - this json object is just like a little
00:47 - test for like if we load an adjacent
00:50 - file
00:50 - then it would look something like this
00:52 - um so we will create this in python by
00:54 - yourself
00:55 - as you can see here this is the format
00:57 - of the json
00:58 - file it has two brackets at the end and
01:01 - then inside of the brackets it has
01:03 - commas separating each group and then
01:06 - before the bracket it has three
01:08 - quotation marks you can see here
01:10 - and then let's look in detail so in each
01:14 - comma there is
01:15 - like a topic which is name and then
01:18 - there's a colon
01:19 - and then it will tell you what's inside
01:21 - the topic which is jemmy
01:22 - so name gemmy and then comma age 12
01:26 - comma hobby programming soccer game
01:29 - something like that
01:30 - you can see here that all of these are
01:31 - different types this one's a string this
01:33 - one's an integer
01:34 - and then this one's a list so yeah you
01:36 - can have lots of
01:37 - different types of objects in python in
01:40 - here
01:41 - such as all of these inside of a json
01:44 - file
01:45 - or json object after that we will just
01:47 - print out the type of this json
01:49 - to test it all right let me comment this
01:52 - out
02:00 - [Music]
02:04 - sorry um
02:07 - b so it's a string right now um but then
02:11 - we will convert it into a list
02:13 - so let's do that so i'm gonna control z
02:16 - so we're going to start converting it
02:17 - so we're going to create another
02:19 - variable called converted json equals to
02:22 - json
02:23 - dot loads json object js json.loads is
02:27 - one of the
02:28 - programs or not programs one of the
02:30 - programming lines they have in
02:32 - import.json
02:33 - and then it will load in json object
02:35 - which is our variable we created earlier
02:38 - and then after that it will print
02:40 - converted json
02:41 - the dot name or name this is basically
02:45 - calling this topic which is name and
02:46 - then it will obviously print out gemmy
02:48 - and then it will call out hobby and then
02:51 - zero
02:52 - hobby zero which is in programming right
02:55 - because this is a list so you can call
02:57 - up specific things so this starts at
02:59 - zero so this is zero one two
03:02 - like so and then our final one is
03:04 - converted jason age
03:06 - and age will just call up um 12 right
03:09 - here
03:09 - which is the only thing inside of the
03:11 - topic so let's run this
03:13 - i'm going to comment this out okay
03:18 - like so you can see here um it was
03:21 - what i predicted jimmy programming 12 uh
03:24 - we can change this up and we can make it
03:26 - more uh
03:28 - more clear and more advanced i can say
03:31 - so yeah let's do that but after this one
03:34 - so this one is wood um open.data.json
03:38 - as json file so basically
03:41 - in conclusion what this one does is
03:44 - basically it creates a new
03:46 - um file called data.json
03:49 - like this one i'll delete this one first
03:51 - so we can look at it together
03:53 - so it will create a new uh json file
03:56 - called data
03:57 - and then it will basically put all of
03:59 - the information from
04:00 - our json.object into that file so all
04:04 - this
04:05 - like so and then let's run this
04:08 - and as you can see a new folder popped
04:10 - up
04:11 - like in here and then we can see all the
04:13 - details the name
04:14 - jimmy age 12 hobby programming game
04:17 - soccer
04:18 - um all that and then after this uh we
04:21 - will just
04:22 - yeah that's it putting our data into
04:25 - data.json and then oops sorry uh
04:28 - then now let's just make the converted
04:31 - jason name converted hobby
04:33 - converted age more like clear and more
04:36 - concise
04:36 - so yeah let's do it so um let's like
04:39 - pretend this is a good introduction
04:41 - so let's go like hello my name is jimmy
04:44 - hello
04:44 - my name is and then um it will
04:48 - show up the name and then we need a
04:50 - comma between each one
04:51 - like so okay and then my hobby
04:55 - uh is or
04:58 - yeah my hobby
05:01 - is and then after that we'll go over
05:04 - here
05:05 - and then we can add another thing we can
05:07 - oh i forgot the comma
05:09 - like so and then we can add like and
05:13 - uh i am 12
05:17 - or no and i am that blank
05:21 - comma years old at the end
05:25 - years old
05:28 - like so and then we should be able to
05:31 - run this
05:32 - um if i forgot a comma then we won't but
05:35 - let's see so yeah there we go hello my
05:38 - name is jimmy my hobby is programming
05:40 - and i'm 12 years old
05:41 - yeah so you can see that it works like
05:44 - so hello my name is
05:45 - no that doesn't make sense i gotta have
05:46 - a comma after this um
05:48 - i'll just put it there would that make
05:51 - sense
05:52 - uh not really but yeah it doesn't really
05:54 - matter um
05:56 - grammar is grammar this is programming
05:57 - um hello my name is jimmy my hobby is
06:00 - programming and i am 12 years old
06:02 - so you can see there that we can adapt
06:04 - this in multiple ways
06:05 - it's very flexible um you can use this
06:08 - json file um for other stuff too and
06:11 - yeah at the end of this
06:13 - video i will show you how to um download
06:16 - a json file from an api and then store
06:19 - it
06:20 - store that json file into a python list
06:22 - for you further use
06:23 - um so yeah let's get into that part
06:27 - okay so i am moving on to my second part
06:29 - of code
06:30 - called pokemon api.py and this one
06:34 - is basically what the thing i was
06:35 - talking about it was
06:37 - uh downloading the files from uh
06:40 - pokey.ap
06:41 - polka api i'm not sure it's a website um
06:44 - i will leave a link to the
06:45 - in the description below but yeah
06:47 - basically what it does it just
06:48 - um download the
06:52 - information from this website and then
06:55 - we will store it into our list poke a
06:57 - list you can see right here
06:58 - and i'll show you the website right now
07:01 - i will be using this
07:02 - one for our video so you can see uh it
07:05 - has 10 pokemon
07:06 - so this one uh it has 10 pokemon and
07:09 - then each pokemon there's the name
07:11 - uh the url of the pokemon and yeah
07:15 - if you go in the url i'm pretty sure
07:16 - it's just like the
07:18 - information of the pokemon let's see
07:20 - yeah it's just
07:22 - all the information of the pokemon but
07:24 - we're not going to be focusing on the
07:25 - url too much today we're just going to
07:27 - be focusing on the name
07:28 - and we're gonna get all these in a list
07:31 - um inside of python
07:32 - so yeah let's do it so um i will leave
07:36 - the link in to this list in the
07:38 - description
07:39 - as well as poke.api um if you want to do
07:43 - like the whole
07:44 - thing but i'm not going to be doing that
07:45 - today i'm only going to be doing 10
07:47 - because it is more uh
07:50 - more shorter and it's more simpler and
07:53 - more easier to work with overall
07:55 - so yeah i'm going to only be doing 10
07:57 - today
07:58 - so the first two code we want is we want
08:00 - to import requests
08:01 - and we want to import json um request is
08:04 - to use to
08:05 - uh get the information from the dot api
08:08 - website
08:09 - into our sublime text so
08:12 - after that we will create a list called
08:15 - poke list
08:16 - and it is empty right now it's just two
08:18 - brackets um and then after that we will
08:20 - basically make a url so this is the url
08:23 - to store
08:24 - our uh our api website in
08:28 - and so url equals requests.get
08:32 - and then our url pasted right in there
08:34 - inside of
08:35 - a quotation marks yeah and after that we
08:38 - will create a variable called data
08:39 - storage
08:40 - and then this one will basically put
08:42 - where we put our
08:43 - um all of this all of this
08:47 - into so this is like the variable to
08:49 - store all of this
08:50 - uh junk or not junk but just like um
08:54 - all that messy code that is not cleaned
08:56 - yet or messy json
08:58 - um data and then after that we will put
09:01 - it into a list
09:02 - a list will put in json.load storage
09:05 - data storage which is this one so it
09:07 - will load it inside of a list
09:10 - because i'm this is still a string data
09:12 - storage is a string
09:14 - um so we're gonna put inside of a list
09:16 - okay after that we're going to
09:18 - uh once we have it in our list we're
09:20 - going to
09:21 - just call out the name of the pokemon
09:24 - and we will call out for i in range um
09:28 - one or not one actually let's
09:31 - do like 10 because we need 10 pokemon
09:34 - right
09:34 - so 4i in range 10 data a list results
09:37 - um i name so let me show you in more
09:41 - perspective what this is
09:42 - so most of you would know what i is
09:44 - right it's like a number
09:45 - that starts from zero and it increases
09:48 - every time the list is ran
09:49 - until the list is um over or it is
09:52 - uh the list is snapped out or broken so
09:55 - let's go
09:56 - look into here so this is a polka dot
09:59 - pocadela.json
10:01 - um it's kind of like uh this one i
10:03 - created
10:04 - which was kind of like data.json that we
10:06 - um
10:07 - created earlier together uh i put all
10:09 - this information
10:10 - into uh json file to make it more
10:13 - clear and we can look at it better so
10:16 - you can see here that there are four
10:18 - um main uh topics
10:21 - count next previous and results and then
10:24 - it today we're going to be
10:25 - focusing on results since results
10:27 - contains the name
10:28 - um so inside of our pokedot api
10:32 - we say go into results then go into the
10:35 - number
10:36 - and then go into name so let's look at
10:38 - that so it goes into results
10:40 - and then in each bracket there is a
10:42 - specific number that starts from zero
10:44 - so this is bracket zero bracket one two
10:48 - three four five six seven eight nine ten
10:52 - um like and so on so bracket zero
10:55 - we will have name and then in the name
10:57 - we'll call out bulbasaur
10:59 - and that is how to call out um pokemon
11:02 - and then after that it will
11:04 - pokeylist.insert
11:06 - uh into our list so it will
11:09 - this is how to insert um into a list by
11:12 - the way
11:13 - and then it will basically put it into
11:14 - the slot i
11:16 - which is starting from zero and
11:17 - increases to nine and then after that
11:20 - it will um what it will put in is the
11:22 - data we collected
11:23 - and data is this variable over here so
11:25 - it will put in the data
11:26 - into our poke list
11:29 - and after that it will just print out
11:31 - poke list and we should have
11:33 - all of the pokemon inside of our list
11:37 - there we go you can see that we have
11:39 - bulbasaur ibis our venusaur
11:40 - charmander chameleon charizard squirtle
11:42 - wardrobe bass toys and caterpie
11:45 - um these are all the 10 pokemon
11:47 - bulbasaur ivs are venosaur
11:49 - um yeah you can see that it was it just
11:52 - stores our um
11:53 - data into here if you want to have more
11:56 - i'm pretty sure you can
11:57 - by just like um changing this to how
12:00 - much
12:01 - pokemon you have and then of course
12:03 - changing the url
12:04 - into the url you have uh you can change
12:07 - the limit to like 100 right
12:09 - so we can just open google chrome um i
12:13 - i'm gonna just test it out for you guys
12:14 - really quick so i'm going to store this
12:17 - inside of my uh
12:20 - i'm gonna search this up in google okay
12:25 - like so okay now let's change the limit
12:28 - to like 20 right
12:30 - all right now you can see that we have
12:32 - more pokemon
12:34 - by just changing limit over here uh to
12:36 - 20 and then we should we have more
12:38 - pokemon all the way to
12:39 - eradicate um so yeah let's
12:42 - just try this one out i guess um it
12:45 - shouldn't be too much
12:47 - of a difficulty since we just need to
12:48 - change the back url
12:50 - and the range and then after that i'm
12:54 - pretty sure
12:55 - we should be good um okay so let's run
12:57 - it
12:58 - as you can see it goes all the way to
13:00 - radicate um you can
13:02 - you can increase this actually and you
13:04 - can go all the way from
13:06 - um to 100 in from our
13:09 - uh url you can go to 100 and then you
13:12 - can store them all into
13:13 - the list and you can use it for further
13:15 - use all you got to do is just change the
13:17 - url and the range
13:18 - and that is it it's quite simple and i
13:20 - hope you found something useful of this
13:22 - video
13:23 - and see in the next one bye