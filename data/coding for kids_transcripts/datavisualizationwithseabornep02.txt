00:00 - hello everybody my name is jemmy and
00:01 - today i will be giving you a brief
00:03 - overview on penguins just kidding
00:11 - today i'm going to be giving you a brief
00:13 - overview on seabourn
00:15 - ep2 and uh today's seabourn is going to
00:18 - be mostly about penguins and flights of
00:20 - aeroplanes
00:21 - but i'm just going to give you a little
00:23 - intro of penguins first
00:25 - uh we are going to be coming back to
00:27 - this slide really soon i just want to
00:29 - have an intro on this page because i
00:30 - think it would be funny but yeah let's
00:32 - move on to seabourn so i will be doing
00:36 - or editing most of my code inside of
00:38 - jupiter notebook which you can install
00:40 - with the video up here this is a video i
00:43 - made in the past
00:44 - how to install jupyter notebook you can
00:46 - go follow it it's very easy
00:48 - to do and to install without further ado
00:51 - let's start so first if you're in
00:53 - windows open up command prompt or type
00:56 - cmd in the search bar
00:57 - once you get that make sure to pip
01:00 - install
01:00 - c board as we are going to be using this
01:02 - library today
01:04 - however if you already have it then you
01:06 - don't need to but if you're not sure
01:08 - then do it anyways you don't lose
01:09 - anything and you can check too
01:12 - once you're done with that remember to
01:13 - pip install matplotlib
01:15 - which is another library for the data
01:17 - visualization
01:19 - once we did that we can open jupiter
01:21 - notebook so
01:22 - jupiter notebook type that in
01:26 - and boom it should open in your browser
01:29 - okay we can wait okay there we go and
01:32 - since jupyter notebook
01:33 - is a local notebook this means that it
01:35 - can only use
01:36 - as much information as you download so
01:39 - if pretend you're using google cool app
01:40 - then you won't have to aip install in
01:42 - your command prompt
01:43 - you can pip install in there but jupyter
01:46 - notebook is local
01:47 - this means that you would have to do it
01:48 - in command prompt and remember to keep
01:50 - command prompt running
01:51 - because if you stop it then the
01:53 - connection with jupiter notebook will be
01:55 - lost
01:55 - so just keep it in the back of your
01:58 - computer
01:58 - let's move on and let's go into my
02:01 - folder that i prepared
02:02 - if you don't have it then just click new
02:05 - um folder right here and then
02:07 - you can rename your folder to whatever
02:08 - you want that makes uh
02:10 - that has a clear definition of what
02:13 - we're going to be doing now
02:14 - so let's go into my folder um and today
02:17 - is ep 2
02:18 - tomorrow's ep3 so like so
02:21 - and once we're in here the first thing
02:23 - we want to do is we want to import
02:25 - seaborne as
02:25 - sns which is um
02:29 - which is a way of making seaborne
02:32 - shorter so instead of saying seaborn
02:34 - every single time we want to use it we
02:36 - can just say s and s
02:37 - and after that we want to import
02:38 - matplotlib dot pi plot which is
02:40 - matplotlib
02:41 - as plt this joins down the whole name a
02:44 - bunch
02:44 - and we can use it later on once we're
02:47 - done with that
02:48 - we want to uh percent sign matplotlib
02:51 - inline
02:51 - which allows us to show graphs so if you
02:54 - don't have this then make sure to do it
02:56 - also i want to show you this link which
02:59 - is the official seaborn documentation
03:01 - if like pretend you have any uh
03:04 - questions about this or you want to do
03:06 - further research
03:06 - then i recommend you this link i will
03:08 - leave it down in the description
03:10 - it should be said seaborn documentation
03:13 - and then left this link you can go in
03:15 - there and follow me
03:16 - which is uh this link and one thing you
03:20 - should come to this page
03:21 - and you in contents we have an example
03:23 - gallery once we click in here
03:25 - there's a bunch of ways to um to display
03:28 - our data
03:29 - so there's joint plot re re-plot
03:32 - joint plot again joint grid pair grid
03:35 - all of this however we're going to be
03:37 - doing only some of them today
03:39 - such as the scatter plot the cat
03:42 - no where are we yes the cat plot uh the
03:47 - the heat map the cluster map and
03:50 - some more but we're not going to be
03:52 - covering every single one today
03:54 - if you want to you can go if you want to
03:56 - look at all of them and understand them
03:58 - you can go into each one individually
04:00 - where there's going to be an example
04:02 - code for you
04:03 - to try out but anyways let's get back to
04:05 - our code
04:06 - so right now we're going to be learning
04:08 - about metrics plots and as i said before
04:11 - we're going to be looking at two maps
04:12 - the heat map and the cluster
04:14 - map the these two maps are very similar
04:16 - to each other
04:17 - the heat map is basically going to show
04:20 - you
04:21 - um the these two are very similar to
04:25 - each other
04:25 - and let's continue so first thing i want
04:27 - to do is i want to
04:29 - um get data sets uh seaborn already has
04:32 - pre-made data sets for us
04:34 - this means that we don't actually need
04:35 - to have our own
04:37 - to make our own data set so we can just
04:39 - use theirs with this code
04:41 - s e list equals to s s dot get lit get
04:44 - data set named
04:45 - parentheses print d s list it will
04:47 - basically print out
04:48 - the whole uh the name of the data sets
04:51 - they already prepared for us
04:52 - and today we're going to be using two of
04:54 - them what you might have guessed was
04:55 - penguins
04:56 - and a flight and i will just
05:00 - uh clear my output since i already did
05:03 - this one and let's have to be a surprise
05:06 - so let's run this one first okay and
05:09 - then let's do
05:10 - this one okay and uh let we need to wait
05:13 - until it's connected
05:15 - and there we go after that we can do
05:17 - this
05:18 - and this one basically stores the
05:20 - penguin data set into
05:21 - a variable called pen i use pen because
05:25 - it's more shorter than writing penguins
05:27 - so just pen and
05:28 - pen dot head chose the first five
05:30 - columns of
05:31 - the penguin data set so there's the
05:33 - species which is basically
05:36 - the type of penguin there's the island
05:38 - where the penguin lives on
05:39 - there's the build length um the build
05:42 - depth the flipper length
05:43 - the body mass or the weight and the
05:45 - gender
05:46 - so i will be showing you what these four
05:49 - are
05:50 - build length build that flipper length
05:51 - and body mass so let's go back into your
05:53 - penguin slide
05:54 - so the let me use the thing okay so the
05:58 - bill
05:58 - length is this is how long the bill
06:02 - is the build depth is how wide the build
06:05 - is
06:06 - the body mass is how um heavy the
06:09 - penguin is or the weight of the penguin
06:11 - and by the way we're measuring the build
06:13 - length in millimeters and the build
06:15 - depth in millimeters and the body mass
06:18 - in
06:18 - grams we're also measuring the
06:22 - flippers flipper length in millimeters
06:25 - and flipper length is how long the foot
06:27 - is so basically that is
06:29 - all the data data you need to know for
06:31 - penguins
06:32 - um so just to make clear of everything
06:35 - okay
06:36 - and now once we come back into this page
06:38 - we should have a better understanding of
06:39 - what these four
06:40 - are now let's move on to flight so
06:42 - flight is the same thing as penguins
06:45 - but it just has a different data set so
06:47 - uh the flight
06:48 - let me show you we did the exact same
06:50 - thing we stored the data
06:52 - flight into the variable flight and then
06:54 - we made flight dot head which will show
06:56 - the first five rows
06:58 - of the data set flights and here they
07:00 - are um there are three cop
07:02 - three rows no three columns sorry they
07:05 - showed the first
07:06 - uh five rows okay sorry um i said
07:09 - columns it's they show the first five
07:10 - rows for head
07:11 - and then there's three columns in flight
07:14 - which is the year the month and the
07:15 - passengers
07:16 - if you want uh if we did some research i
07:20 - copied this passage from another website
07:23 - and basically the flight is uh
07:26 - this is the number of airline passengers
07:28 - who flew in each month
07:29 - each month from 1949 to 1960
07:32 - so it shows that how much passengers
07:34 - flew from each month
07:36 - from 197 1949 to 1960
07:39 - and yeah that is it um now let's move on
07:42 - to the heat map
07:42 - now ever since we've already prepared
07:44 - all of our
07:46 - uh data set we can move on to the heat
07:48 - map
07:49 - now the heat map there is pen dot core
07:52 - the pendant core is just showing the
07:54 - penguin in a matrix form
07:56 - metrics form is what we're going to be
07:57 - basing it off in the heat map
07:59 - so we just should get a visualization
08:01 - first in here
08:02 - now let's put into a heat map so here it
08:04 - is um it might look a bit strange to you
08:06 - but let me explain
08:08 - so the more white the columns or the
08:10 - tiles it
08:11 - are the more the greater the amount or
08:13 - the more
08:14 - uh the more correlated the more related
08:16 - they are to each other
08:18 - and the darker the amount the less
08:20 - related they are so we can see here that
08:22 - this on a diagonal line is extremely
08:24 - white or
08:25 - one this is because these are the same
08:27 - category build length with buildings
08:29 - build depth with build depth flipper
08:31 - length with flipper length and body mass
08:33 - with body mass so
08:34 - this doesn't count because they are the
08:36 - same category
08:38 - but let look let's look at the ones that
08:39 - aren't the same category
08:41 - but they're still pretty white so here
08:43 - the flipper length and the body mass
08:45 - are kind of white um and they are not
08:48 - the same category this means that
08:50 - they are both related to each other
08:52 - somehow
08:53 - maybe the flipper length makes most of
08:55 - the penguins mass
08:57 - but yeah we can tell if they're
08:58 - correlated by
09:00 - the how wide the tile are also we can
09:03 - tell how
09:03 - not correlated they are using the same
09:06 - method only vice versa which is how the
09:08 - more black
09:09 - the less correlated and now let's
09:12 - customize our heat map even more so we
09:15 - can make it different color themed
09:17 - um if we change the c map to cool and
09:20 - warm
09:21 - then it would look somewhat like this
09:22 - the more red the more correlated the
09:24 - less red the more blue
09:25 - the less correlated it would be now if
09:28 - we were to look at this
09:30 - we can even add some more things which
09:32 - is anode anode will show
09:34 - us the number specifically on each tile
09:37 - so let's run this so you can see here
09:39 - that this
09:40 - uh or the diagonal line is all one this
09:43 - is because they are the same category
09:45 - and the rest are just red numbers and in
09:48 - here we can see
09:50 - 0.87 is the most correlated out of all
09:53 - of them
09:54 - except for for the diagonal line
09:57 - also up here if we were to look um on
09:59 - our matrix
10:01 - 0.87 and 0.87 so they are the same
10:04 - number
10:05 - with the command and o we can display
10:07 - that let's move on to flights so we are
10:10 - still going to be using the heat map
10:12 - but we're going to be using the flight
10:14 - so this will basically show the matrix
10:16 - again
10:17 - um and these numbers in here are the
10:19 - passengers
10:20 - for each airline flight and this one
10:24 - this y-axis is the month and the x-axis
10:27 - is the year that they are traveling um
10:30 - let's put in a heat map
10:32 - okay so this might look a bit menacing
10:35 - but it is not
10:36 - uh and here the m flight the m flight is
10:39 - matrix flight uh
10:40 - and i made this variable new and flight
10:43 - equals to flight dot pivot
10:44 - table values equal passengers index
10:46 - equals month columns equal year
10:48 - this basically makes a heat map and sns
10:50 - dot heat map
10:51 - and flight note equals true fmt equals
10:54 - to g
10:55 - uh this is very confusing but don't
10:57 - worry i can explain
10:59 - if we were to take out this part and
11:00 - only focus like this it would print out
11:02 - something that looks somewhat like this
11:04 - okay and
11:05 - you can see that the same logic applies
11:08 - for the penguin
11:09 - the more darker the less people the more
11:12 - white
11:12 - um the more people so in here you can
11:15 - see that the dark
11:16 - the darker one means less people and the
11:18 - lighter ones means more people
11:20 - uh and this is because the airplane was
11:22 - invented in the 1903
11:24 - which means that this is only a couple
11:26 - years later i mean people
11:27 - didn't trust as much as they would right
11:30 - now since it was just invented
11:32 - but over the years it developed in
11:34 - safety precautions and
11:36 - commercial flights so people started to
11:38 - trust it more and use it more
11:40 - we can also see the month right we can
11:43 - see that between july and august
11:45 - even though normal people don't really
11:47 - use it you can see it's more lighter
11:49 - than the other
11:50 - and in here we can also see that it's
11:52 - more light this is because
11:53 - uh over here um it's probably in break
11:57 - or people have been traveling a lot
11:59 - during these two months
12:01 - because break vacation uh
12:05 - business travels i don't know but we can
12:07 - see a pattern that develops
12:09 - now let's add these back so and note we
12:12 - can see from the beginning or the
12:13 - penguin that it's just going to show the
12:15 - numbers
12:16 - but if we don't have fmt equals to g
12:19 - like so then it would come up a whole
12:22 - mess
12:22 - uh this is because anode right now it is
12:26 - um on square which means that it will be
12:29 - an infinite number we can see some ease
12:32 - here that is not covered
12:33 - uh but if we add the fmt equals to g
12:37 - this will basically make it so that it
12:39 - is a normal number
12:40 - like uh the matrix above here so
12:43 - now like so and let's move on to the
12:46 - next one so
12:47 - sns.heat map m flight c map it goes to
12:50 - magma
12:50 - line color goes to pink line width
12:52 - equals to one this is basically
12:53 - customizing our heat map
12:55 - so it now looks like somewhere like this
12:57 - um
12:58 - or you can change the line color to
12:59 - whatever you want like white like so and
13:02 - we can change the line width to a
13:03 - greater amount
13:04 - like 10 or 100 that's too much
13:07 - like so and you can see it gets really
13:09 - small uh but i like to leave it as one
13:11 - because it looks nicer okay and
13:15 - now let's move on to the cluster map the
13:16 - cluster map is a sibling or a cousin of
13:18 - the heat map
13:20 - and it looks somewhat similar but it's
13:22 - not but second
13:23 - even though i'm not streaming today i
13:25 - will
13:26 - be drinking water on stream because that
13:29 - seems to be my signature now um
13:34 - fresh water everything
13:38 - that lives on land animal or plant
13:42 - depends upon it
13:45 - yet only one percent of it is within
13:49 - [Music]
14:00 - reach
14:02 - and here the cluster map as i said
14:03 - earlier they are
14:05 - a cousin or a sibling or a family member
14:08 - i can say
14:09 - of the the heat map and
14:12 - i'll show you why later so here let's
14:14 - show um
14:16 - this is what a heat map or sorry a
14:18 - cluster map looks like it looks somewhat
14:20 - like a heat map but
14:22 - if we notice on the year 1949 1950
14:26 - it skips three years to 1953's gets one
14:28 - more year 1954
14:30 - skips down three years to 1951 to one
14:32 - year to 1952.
14:40 - well 1956 and it's really weird however
14:44 - i can explain why they did this
14:45 - cluster map is basically um clustering
14:49 - as the name already says
14:50 - so what it would do is it would look at
14:53 - the numbers
14:54 - that have the same or a similar value to
14:57 - each other
14:58 - so if we look at these lines right it's
15:00 - kind of like a family tree
15:02 - um however it doesn't start from the top
15:03 - it starts from the bottom
15:05 - so if we look over here at these two
15:07 - pairs 148 and 148 this is exact right so
15:10 - they paired it up together
15:11 - 136 and 135 was exact so they paired it
15:14 - together again
15:16 - and they will pair numbers from
15:19 - this grid that has the same amount of
15:22 - numbers i mean not same amount this a
15:24 - similar amount of numbers it will pair
15:25 - them up together
15:26 - like so and once they pair them up it
15:28 - will pair them in in a bigger cluster
15:31 - so now these two are paired up right but
15:33 - they do have a similar value
15:35 - so the cluster map pairs them up again
15:38 - and
15:39 - now let's look at this one so one
15:41 - hundred one two nine
15:43 - with one two nine i mean one one nine
15:44 - with one two nine pretty similar
15:46 - so they paired it up with each other and
15:48 - one two one right here pairs up with one
15:50 - two nine
15:51 - one one nine uh so it goes on and on
15:54 - however it is kind of complicated so i
15:56 - highly recommend you do
15:57 - some research on it uh probably my
16:00 - explanation
16:00 - won't be enough but what i'm saying is
16:03 - it uh
16:04 - clusters them together the one that has
16:06 - a similar
16:07 - number or value together and then it
16:09 - will cluster
16:10 - even more greater amounts until it has
16:13 - two
16:13 - big x and y clusters and this is a
16:16 - cluster map
16:18 - and we can also customize cluster maps
16:20 - to be more
16:22 - uh colorful so in here we made the c map
16:25 - into cool and warm
16:26 - and then we had a line color which was
16:27 - white and the line width equals to one
16:30 - so now it looks somewhat like this now
16:32 - let's move on to our last section which
16:34 - is grit
16:34 - grids is a fun place to go because you
16:38 - can customize it
16:39 - and you can do a lot of stuff with it so
16:41 - this is pear grid
16:43 - um this is what it looks like right now
16:45 - this is an empty canvas
16:47 - because we didn't put anything on it yet
16:49 - and
16:53 - today we're going to be looking at the
16:54 - two paired brothers the pear grid and
16:56 - the pear plot
16:57 - um right now we're going to be looking
16:59 - at the pear grid these two are
17:00 - very simple um very similar but there
17:03 - are some differences
17:05 - i'll tell you right now so the pair grid
17:07 - is more
17:08 - or less flexible than the pair plot
17:10 - meaning they can't do as much stuff
17:12 - the pear plot however you can do a lot
17:14 - of stuff with it
17:15 - such as um i'll show you later but
17:18 - basically if you notice here
17:20 - uh this is the pair grid right so this
17:22 - is the code for the pair grid
17:23 - um it looks plt.scatter gridmap
17:26 - plt.scatter
17:27 - so you can see it's quite uh not
17:30 - that simple because you would have to
17:32 - assign the pair grid and then grid map
17:34 - it
17:34 - however let's look at the pair plot the
17:36 - pair plot
17:38 - i mean cn sns dot pair plot pen
17:42 - right that's it and over here you have
17:44 - two lines
17:45 - even though for um the grip pair grid
17:48 - yeah you need two lines but the pair
17:50 - plot you only need one that's the
17:51 - difference
17:52 - um pair plot is more easy and more
17:54 - flexible than the print
17:55 - so if we look at this this is a paired
17:57 - grid um the paragraph
17:59 - is just assigns us the scatter plot um
18:02 - and
18:03 - uh this is just a scatter and there
18:06 - is vocabulary for this too there this is
18:08 - the diagonal line this is the upper
18:10 - triangle and this is the lower triangle
18:12 - um we can see that the more diagonal or
18:15 - the more
18:16 - in the straight line is the more uh
18:18 - correlated it would be
18:20 - and this is kind of like the pattern we
18:22 - saw above
18:23 - uh like before with the penguin heat map
18:26 - this is kind of the same thing since
18:28 - these are the two cats same category
18:30 - then it would be the more straight and
18:31 - you can see here the flipper length and
18:33 - the body mass are almost
18:34 - diagonal with each other uh if not
18:37 - diagonal
18:38 - but you the other ones are not as
18:40 - diagonal as the flipper length and the
18:42 - body mass
18:43 - this is because they aren't related to
18:45 - each other as much
18:47 - okay let's move on to the assigning each
18:51 - one to be
18:52 - specific so right now all of them are uh
18:55 - all of them are scattered right scatter
18:57 - plots but let's make the middle one
19:00 - or the diagonal line a histogram the
19:02 - upper
19:03 - triangle a scatter plot and the lower
19:06 - triangle
19:06 - a kde plot oh
19:10 - no now we can see that they are very
19:13 - different and we can assign lots of
19:15 - things
19:16 - so this is how to assign a grid
19:19 - or a pair grid right very
19:22 - very complicated but if we were to do
19:24 - this to the
19:26 - uh hair plot it would be much easier
19:28 - like so
19:30 - so now we're moving on to the pair plot
19:32 - now you can see that with one
19:34 - line of code we can already create a
19:35 - histogram down the middle and scatter
19:37 - plots
19:38 - around here and
19:42 - as i was saying um this we already have
19:45 - a histogram and scatter plot on both
19:47 - sides
19:47 - with only one line however let's
19:49 - customize it even more
19:50 - so now we're going to put a hue and the
19:53 - hue basically makes
19:54 - our code or our um our
19:57 - pair plot more detailed and this cannot
20:00 - be done
20:00 - with the pair grid assign the hue
20:04 - so if we were to run this right now we
20:06 - made the heel equals to species
20:07 - so we can see that there are orange red
20:11 - i mean orange orange blue and green um
20:14 - and we can see here on the side there's
20:16 - a legion
20:16 - a legion will tell us basically what is
20:19 - what
20:20 - so the blue is the deli the orange is
20:22 - the shin strap
20:23 - and the green is the gen 2 um and we can
20:26 - see
20:27 - in here on the the diagonal line
20:30 - what is what however if we were to look
20:32 - here on to the
20:34 - the pear grid it just throws all the
20:37 - information in there you can't separate
20:39 - it at all
20:39 - um so you would have to try your best to
20:42 - think which one is what however on a
20:45 - pair plot
20:46 - you can split it with a heel but on a
20:48 - pair
20:49 - grid you can so it's just very not
20:52 - flexible
20:53 - as much as the pair plot is so here the
20:56 - pair plot you can see
20:57 - we separated them into individual plot
20:59 - or individual little sections
21:01 - and we can see what is what let's move
21:04 - on to the last one which is joint grid
21:06 - uh this what is what a joint grid canvas
21:08 - looks like
21:09 - is body mass by species and let's see
21:13 - so in here oh this one actually i'll
21:16 - tell you what happened
21:17 - so this one uh you cannot use a string
21:21 - with an integer i'm pretty sure because
21:23 - i did
21:24 - a species with uh his
21:27 - species with body mass and you can
21:30 - it didn't really work out for me so i
21:32 - changed it to
21:34 - a flipper link with body mass which are
21:36 - correlated
21:37 - um to each other you can see here that
21:39 - this is the line
21:41 - um that the body mass is and it's going
21:43 - through and the flipper length is also
21:44 - kind of diagonal along with the line
21:47 - this means that they are very similar or
21:49 - related to each other
21:50 - um so yeah i hope you enjoyed my
21:53 - uh basic seabourn ep 2. if you do
21:57 - thank you very much and thank you for
21:59 - sticking throughout the video
22:00 - uh i hope you enjoyed it see you bye