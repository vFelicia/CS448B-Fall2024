00:18 - hello this is John from cave of
00:21 - programming calm in this tutorial we're
00:24 - going to look at string streams in C++ I
00:26 - I wanted to show you constructor
00:29 - parameters in this tutorial but I
00:32 - realized that we really could do with
00:35 - looking at string strings first string
00:38 - strings that you concatenate disparate
00:41 - types of data like for example a double
00:44 - and a and a string into a single string
00:50 - so I've created this program here and
00:53 - I've got rid of everything apart from
00:54 - just the main function and the return
00:56 - method so that we can look at this from
00:59 - scratch so to speak so I'm going to
01:02 - start by declaring int which I'll call
01:05 - age and let's set that equal to 32 and
01:09 - I'll also declare string here which I'll
01:14 - call name and we'll set that equal to
01:17 - Bob now supposing we want a single
01:21 - string here that includes both of these
01:25 - bits of information well we could output
01:30 - them both using a see out statement but
01:33 - that's only good if we want to output
01:35 - these immediately we could output these
01:37 - with a single C out statement or some
01:39 - put two operators we're seeing that
01:41 - before but what if we want to build up a
01:43 - string containing both of these bits of
01:46 - information so that we can use it
01:48 - elsewhere in the program
01:50 - well the first thing here is that I need
01:52 - to include iostream so that I can use
01:56 - string so let's go ahead and do that
01:59 - include iostream and it might be i
02:03 - stream dot H on your system you might
02:05 - need string dot H or something different
02:08 - but if you do you'll find out at this
02:12 - point and consuming to Google flat
02:14 - information for your compiler
02:16 - and we also say using names name space
02:23 - standard just some STD just so that we
02:26 - can use the string now what we'd like to
02:30 - do is something like this string info
02:32 - equals age less a name colon plus name
02:41 - plus and some punctuation and let's say
02:46 - age : plus age and of course we could
02:53 - output that with C out if it worked we
02:55 - could say CL info info endler now that
03:01 - doesn't work we don't see any errors
03:03 - here in Eclipse at least not for the
03:06 - canoe compiler that I'm using but let's
03:08 - try to build it and what we find is we
03:10 - get a load of errors here and if we just
03:13 - go to the top we see that is telling me
03:16 - the the problem is this plus sign here
03:18 - it's the plus sign this one here and the
03:23 - reason for that is that plus it's not
03:26 - defined for a string which this law is
03:29 - and an age of an asari on an int which
03:32 - this is so we could add two ends
03:34 - together that's no problem we can
03:37 - concatenate two strings with a plus sign
03:39 - that's no problem but we can't
03:41 - concatenate an INT with a string and to
03:44 - get around that we can use a class code
03:47 - string stream the first thing we need to
03:49 - do is include at the top here and we
03:53 - need to include string I think is called
03:58 - this SS s stream line SS dream
04:04 - so this I'm pretty sure it is called
04:10 - different things on different compilers
04:11 - maybe not but it's worth just putting
04:15 - the including commenting out anything
04:17 - else that gives you an error for the
04:19 - moment and just checking that you can
04:21 - compile the project make sure it's saved
04:23 - and compile it just with that include
04:26 - that stream we've also got some error
04:32 - here that's just a warning yes so it
04:35 - actually the build has actually been
04:38 - successful and we can run it we just got
04:40 - a warning because we're not using these
04:43 - variables I suppose now if you can't
04:47 - build and run this program with with no
04:49 - output like this then and you have an
04:52 - error that's pointing to this line then
04:55 - it may be caused something different on
04:57 - your system like s stream dot H or even
05:00 - I don't know even string stream by H or
05:02 - something and you just you just need to
05:04 - Google that for your compiler know
05:07 - Google string stream visual C++ or
05:09 - whatever but here it's fine and what I
05:12 - can do now is declare an object of the
05:15 - type string stream which are called SS
05:18 - string screen and again I'm going to
05:20 - save that one I'm gonna build it and I'd
05:23 - recommend you do the same and just chat
05:26 - we don't get any errors we're getting
05:27 - getting this warning about these unused
05:29 - variables but I could just comment those
05:32 - out made it us that's better you just
05:34 - build it and it should look pretty good
05:37 - yeah so we've got no errors if you do
05:39 - get an error again just Google string
05:42 - stream for your compiler and see if it's
05:44 - called something different there you
05:46 - need to make sure that you've got using
05:47 - namespace standard because not only
05:49 - strings see out but also string stream
05:52 - or in this namespace and we'll look at
05:54 - namespaces in future so once you've got
05:57 - this working with that include and with
05:59 - the actual variable declared a type
06:02 - string stream and go ahead and use it
06:05 - so streams in programming are the
06:09 - streams of data basically the things
06:11 - that you can send data to or get data
06:14 - from so this represents a kind of stream
06:18 - that is used to build a per stream so
06:22 - now instead of this which doesn't work
06:24 - what we can do is we can say SS use the
06:27 - put two operator just as we do out with
06:30 - this which is the console output stream
06:34 - so SS put 2 and say age is : and then
06:42 - we'll use another line and assess putt
06:44 - to age and actually let's put at the
06:51 - start here SS putt to name is : and SS
06:57 - putt to name and then just before 8 are
07:02 - putting some Center some punctuation
07:03 - just to split it up visually and now
07:06 - finally in our C out we can do C out SS
07:10 - dot strobe and a dot stret method of
07:15 - string stream converts it to an actual
07:18 - string let's run that and see if it
07:21 - works so now we've got name is Bob 8 is
07:24 - 32 so now we could pass this this object
07:30 - around or even we could convert it to a
07:33 - string let's say we could say string
07:35 - info equals ssstop stro and then we
07:40 - could to start put info in RCL so that
07:44 - the object of all of this here was just
07:46 - to get this information in a single
07:49 - string info and we can then do what we
07:52 - like with it in this case we're just
07:54 - gonna help put it down here so to
07:57 - practice this and it's important to
07:59 - practice and just again declare some
08:01 - variables you can use doubles in strings
08:04 - whatever comes to mind really try it
08:06 - with anything that you feel like trying
08:08 - it with and then use a string stream to
08:11 - turn it all into a single string and
08:13 - then output it and we'll use that later
08:15 - and if anything doesn't work don't
08:18 - hesitate to Google for how to do this
08:20 - for your particular compiler so we'll
08:23 - leave it there for this tutorial and
08:25 - until next time happy coding
08:38 - you