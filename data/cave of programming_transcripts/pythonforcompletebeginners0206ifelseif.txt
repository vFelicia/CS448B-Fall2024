00:00 - in this video we're going to take a look
00:02 - at a more complicated and general
00:04 - version of if else we're going to look
00:07 - at if else if you could call it so again
00:12 - as with many of the constructs that
00:14 - we're going to be studying in fact
00:16 - almost all of them or certainly many of
00:19 - them there are equivalents to what we're
00:21 - about to see in other programming
00:25 - languages so yes at the moment you're
00:27 - learning the syntax of python but you
00:29 - are also learning General programming
00:32 - principles which you could apply in
00:33 - other languages if you wanted to learn
00:36 - other languages as well although plenty
00:38 - of people know one programming language
00:41 - and you might easily work for your
00:43 - entire life on writing software in one
00:47 - programming language if that is what you
00:48 - want to do okay so at the top here let's
00:51 - create some more constants actually I'm
00:54 - going to rename this let's have this
00:56 - changed to worker one we can imagine
00:59 - we've got some workers in some kind of
01:01 - facility let's say it's a factory or a
01:04 - research laboratory or something we'll
01:06 - have another worker here and let's call
01:08 - this second worker Rachel and we'll have
01:12 - someone else this can be the supervisor
01:15 - let's let's write
01:18 - professor and uh he can be called
01:22 - Falcon okay so we're going to start off
01:26 - by checking to see if the name entered
01:29 - is
01:30 - John so that's worker
01:32 - one now if the name entered isn't John
01:36 - we want to check well is it Rachel or is
01:39 - it
01:40 - Falcon so what I'm going to do is put
01:42 - another clause in here above the else so
01:46 - we need to delete that indent go right
01:48 - flush to the left hand margin and I'm
01:51 - going to Type L if and we're going to
01:53 - have another condition name equals
01:55 - equals worker
01:58 - 2
02:00 - and then we'll have a customized
02:02 - greeting let's suppose Rachel prefers to
02:05 - be addressed in Italian we'll say Chia
02:10 - Rachel and here let's just say hello
02:15 - John and maybe I'll get rid of the
02:17 - second
02:18 - line so what is this El if this is short
02:21 - for Els if so we're saying if name is
02:25 - worker one you know whatever that is
02:28 - happens to be John we're going to print
02:30 - hello John else so if that's not true
02:34 - else if the name is worker 2 which is
02:38 - Rachel we're going to print CH Rachel
02:40 - else we're going to print something down
02:43 - here let's print name not
02:50 - recognized we want one more Clause here
02:53 - so I'm going to go to the next
02:55 - line again above else delete the indent
02:58 - with backspace and we'll have LF name
03:02 - equals equals
03:04 - Professor
03:06 - colon then
03:08 - print
03:11 - greetings Professor Falcon so let's see
03:14 - what this program does I'm going to run
03:21 - it so it says enter your name if I enter
03:24 - John it's going to say hello
03:27 - John run it again if I enter Rachel it's
03:30 - going to say chiao
03:32 - Rachel if I enter Falcon it's going to
03:35 - say Greetings greetings Professor Falcon
03:38 - let's put an S in
03:40 - there if I enter something else it's
03:44 - going to say name not
03:46 - recognized let's get rid of this program
03:49 - finished as well CU I just put that in
03:51 - to show you that you can have things
03:52 - after the if Els that are not part of
03:55 - the if Els so this is a mechanism for
03:59 - for selectively executing one of
04:03 - multiple possible code blocks depending
04:06 - on a
04:08 - condition it's important to realize that
04:11 - only one of these code blocks will ever
04:14 - be executed either this one or this one
04:18 - or this
04:20 - one or that one now the python
04:22 - interpreter will read this from the top
04:25 - to the bottom the python interpreter
04:28 - Python program always read your code
04:30 - from the top to the bottom so it's going
04:33 - to check through these different Clauses
04:36 - and it's going to say is this true if it
04:40 - is it's going to print hello John and in
04:42 - that case it's then finished and it will
04:45 - go on to whatever code is found after
04:48 - the if statement if there is
04:51 - any if this is not true it will check
04:54 - the second condition here if that's true
04:58 - it will print char Rachel and then it
05:01 - will go on to any code that's after the
05:04 - if statement
05:07 - here if this isn't true it will check
05:10 - the next condition down if that's true
05:13 - it prints this and then goes on to
05:15 - whatever is after the if block if this
05:19 - isn't
05:21 - true then it's going to execute this
05:23 - else Clause so you're always going to
05:27 - have one of these different code blocks
05:30 - executing it's just a question of which
05:32 - one now in each case you can have
05:35 - multiple lines in each code block I've
05:37 - only got one line in each one but each
05:39 - one can consist of multiple lines as
05:42 - long as all the lines are correctly
05:44 - indented and all the bits of this are
05:47 - optional apart from the first if so you
05:50 - could have an if by itself you could
05:52 - have an if L if or you could have all
05:55 - this bit by itself without the Els you
05:57 - could also just have if else as we've
06:00 - already seen so try this out for
06:04 - yourself type this out get it working
06:06 - and experiment with it try adding more
06:09 - lines into one or all of the code blocks
06:12 - you could add another worker in here and
06:16 - have another
06:18 - condition you could try it without the
06:20 - Els experiment with it a little bit
06:22 - we're going to be using this later on
06:25 - now as I say all programming languages
06:27 - pretty much have some equivalent to
06:32 - this they don't all have the same
06:34 - keywords like often you have to write
06:37 - out else if and since I do use several
06:40 - different programming languages you
06:42 - don't have to but I I happen to do so I
06:45 - do get confused a little bit sometimes
06:48 - but generally I find that once you
06:50 - settle into programming with a
06:51 - particular language then confusion tends
06:54 - not to arise it's really not a big
06:57 - problem and in fact when you you learn
07:00 - these constructs in one programming
07:02 - language it is much easier to learn
07:05 - another programming language if if you
07:07 - want to do that for some reason don't
07:08 - forget you've got to have these colons
07:11 - in the right place and you've got to get
07:14 - the indentation exactly right as well
07:16 - for this to
07:18 - work hello you've been watching a free
07:21 - sample from my Python and machine
07:24 - learning for complete beginners course
07:26 - I'm uploading enough videos from the
07:28 - start of the course to get you started
07:30 - with python and machine learning the
07:32 - full course is absolutely massive if
07:34 - you're interested in it please click the
07:37 - link in the description the complete
07:39 - course covers not only basic python but
07:42 - also some fairly Advanced python even
07:44 - some desktop programming stuff and then
07:47 - goes on to machine learning and
07:49 - artificial intelligence until next time
07:52 - happy coding