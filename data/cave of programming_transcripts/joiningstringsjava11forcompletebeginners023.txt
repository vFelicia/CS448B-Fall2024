00:00 - hello in this video we're going to take
00:03 - a look at a few things you can do with
00:05 - strings in Java so let's create a string
00:09 - for a start let's say string name equals
00:15 - John and we've already seen it you can
00:20 - display this so if I just type this out
00:23 - name we can't we could display that
00:25 - string we can also join strings together
00:31 - so insists out here I could do this
00:36 - my name is let's put a space in and then
00:40 - a plus what so what's this actually
00:44 - doing well here we've got a string
00:48 - variable a variable of the string type
00:52 - and we're assigning it this string value
00:56 - so this text in quotes is called a
00:59 - string literal it's it is a string
01:02 - itself and that's why we can assign it
01:05 - to a variable of type string which is
01:08 - effectively also a string so this is a
01:13 - string and this is a variable that's
01:15 - capable of referring to a string now
01:18 - when we were looking at primitive
01:22 - variables I said they're a primitive
01:23 - variable is a bit like a bucket that
01:27 - you've put a label on and you've put
01:28 - some value into that bucket this isn't a
01:33 - primitive type of variable because
01:35 - string is not a primitive type it's what
01:39 - we call a class in Java so this works a
01:42 - little bit differently this this is a
01:45 - bit like it's a bit like like if you
01:48 - write down an address on a piece of
01:51 - paper what you know the address of a
01:54 - house what is that thing that you've
01:56 - written it so it's a kind of an
01:57 - instruction for where you can find a
02:00 - particular house and with non primitive
02:03 - variable types that's similar to what
02:06 - you get so by assigning a value
02:10 - - this name variable it's as if we're
02:13 - were telling name - remember where this
02:16 - string literal is so this is what
02:18 - actually creates the string and this
02:21 - assignment operation here is saying make
02:26 - name kind of store the location of this
02:29 - string so you can find it again and they
02:33 - were actually using it and we're using
02:34 - name to refer to this existing string
02:37 - there already too much about that it'll
02:40 - become clearer to you as we go through
02:42 - the course what we're doing here is
02:44 - we're taking a string literal and we're
02:47 - joining it or concatenating it with
02:49 - another string so when we run this
02:53 - program it says my name is John we could
02:59 - also put that we could also mate well we
03:03 - could define a variable declare a
03:05 - variable I should say trying to use the
03:07 - exact right language here we could
03:09 - declare a variable that refers to a
03:12 - string literal like this so let's do
03:15 - that let's say string text I'll just
03:21 - call it text so I'm just making up names
03:22 - for my strings here equals let's do
03:28 - something a little bit different I'm
03:29 - gonna write I am called alright so I've
03:35 - made I've declared this variable of type
03:38 - string and I've assigned it the value of
03:41 - this string literal so really I'm
03:44 - telling it to refer I'm making it refer
03:47 - to this string literal here which is
03:50 - just some text it's a string and let's
03:53 - do sysout like this and then I'm going
03:56 - to write text plus name so here I'm
04:03 - joining two strings together essentially
04:07 - I'm joining this this variable with this
04:11 - variable so really what I'm doing is I'm
04:14 - joining this string literal with this
04:17 - string literal yeah because I'm joining
04:20 - that with that okay
04:23 - let's run this and we will see that it
04:25 - works I am called John and you can join
04:30 - multiple strings together for example I
04:34 - could define another string here let's
04:37 - call it end of end of sentence so here
04:44 - I've got a variable name that's made up
04:47 - of multiple words and I'm following the
04:49 - convention as usual first letter is
04:52 - lower case and we upper case the first
04:55 - letter of each subsequent word I'm going
04:57 - to set that equal just simply to a full
04:59 - stop like that and then in my system
05:03 - dial dot print line I can add on end of
05:06 - sentence and here to save me typing I'm
05:09 - going to type the first bit and then
05:11 - press control and in space so control
05:15 - space at the same time and hit return to
05:17 - select the first option and it
05:20 - autocompletes for me okay let's run this
05:26 - and you see that we've got a full stop
05:28 - on the end
05:30 - so we've concatenated three strings
05:33 - together here and try that off yourself
05:37 - try try this little program and check
05:40 - you can get it working and then try to
05:42 - make up some combination of strings and
05:45 - just output them yourself so make up
05:48 - some program that involves let's say
05:50 - three strings and join them together and
05:52 - output them something like that makes
05:54 - something up okay so until next time
05:57 - happy coding