00:00 - in this video we're going to take a look
00:01 - at if statements in Python these allow
00:05 - us to conditionally execute code
00:08 - depending on whether something is true
00:10 - or false let's start off this program by
00:13 - getting the name from the user so I'm
00:16 - going to say here name equals input and
00:19 - enter your
00:23 - name now we'll use that in a minute but
00:25 - first we'll tackle something a little
00:27 - bit simpler so I'm going to type if if
00:31 - is a key word in Python it's part of the
00:34 - Python language after if I'm going to
00:37 - leave a space and for the moment let's
00:40 - type here true don't forget you need a
00:44 - capital letter and after that we're
00:47 - going to type a colon immediately after
00:50 - the
00:51 - true now we go to the next
00:54 - line now notice when I go to the next
00:57 - line let's try that again
01:00 - Visual Studio code or at least the
01:02 - python plugin automatically puts my
01:05 - cursor somewhat indented underneath this
01:09 - the if statement we need to indent code
01:13 - to say that the code that we're typing
01:15 - is now part of the if statement its
01:18 - execution will be controlled by the if
01:21 - statement so here I've got actually four
01:24 - spaces and you can see that these are
01:27 - actually four spaces because there are
01:28 - four dots there if you don't see that
01:31 - there is a setting in one of these menus
01:33 - which on my system on my version of
01:37 - Visual Studio code is in the view menu
01:39 - an
01:40 - appearance called render white space if
01:44 - you've got that turned on it will
01:47 - replace spaces with dots so you can see
01:51 - when I go to the next line here Visual
01:53 - Studio code automatically puts four
01:56 - spaces
01:57 - here we need those four spaces to tell
02:01 - python that what I'm about to type
02:04 - should be controlled by the if
02:07 - statement let's write here
02:10 - print
02:12 - true just to print something out now
02:14 - notice this isn't the Boolean value true
02:17 - it's just a string that says true it's
02:20 - just some text enclosed in double quotes
02:23 - I can write anything I want there it
02:24 - doesn't matter I just want to print
02:26 - something to see if it actually runs
02:30 - and then underneath that let's go down a
02:32 - bit further and I'm going to erase those
02:35 - four white spaces with the back key and
02:38 - write print let's say program
02:43 - finished now let's run this and see what
02:46 - happens it says enter your
02:49 - name I'm going to write John cuz that's
02:52 - my name and then it says true and
02:54 - program finished so it is actually doing
02:56 - this print it's doing the print because
03:01 - this is true if I write false
03:05 - here and I run
03:07 - it let's write my name it doesn't print
03:11 - true anymore because the condition is
03:14 - false so you can see that this if
03:17 - statement is conditionally controlling
03:20 - whether this code is executed or not now
03:23 - even to get this to work is a little bit
03:25 - tricky you absolutely need to practice
03:28 - it you need to have the Cod on there
03:30 - remember and you need to have four
03:32 - spaces here in
03:34 - fact if you actually want to put those
03:37 - four spaces in yourself the easiest
03:39 - thing to do in Visual Studio code and
03:41 - probably most editors is just to use the
03:44 - Tab
03:45 - Key and notice that Visual Studio code
03:49 - turns my tab into four spaces this is
03:52 - controlled from the settings in Visual
03:54 - Studio code if I go to the preferences
03:59 - menu which on my version of code is in
04:02 - the code menu and I go to settings I can
04:07 - search for something like space
04:10 - Tab and we can see we've got a setting
04:12 - here insert spaces when pressing Tab and
04:15 - that's turned on so you want that to be
04:17 - turned on there's also this detect
04:20 - indentation setting I've apparently got
04:23 - that turned off but the replacement of
04:25 - tabs with spaces is working so I'm
04:28 - content with my set settings in
04:31 - Python indentation is used to indicate a
04:35 - block of code that may be controlled by
04:38 - some statement for example like an if
04:41 - statement you don't have to use four
04:44 - spaces but whatever you start off using
04:47 - in your program for indentation you have
04:50 - to then consistently use it in the rest
04:52 - of that file otherwise you'll get an
04:55 - error in Python so I could decide that I
04:58 - want to use three spaces or I want to
05:00 - use a tab an actual
05:02 - Tab and that would work but the most
05:06 - common convention is probably to use
05:08 - four spaces and that's why Visual Studio
05:13 - code here is indenting my print
05:15 - statement by four spaces let's go back
05:17 - to the settings again so I'm going to go
05:20 - to code preferences settings might be in
05:24 - a different menu on your version of code
05:27 - and if I search again for tabs space we
05:30 - can see here that tab size is set to
05:33 - four and that's controlling how many
05:36 - spaces a tab is turned into if I use a
05:39 - tab there instead so I would suggest
05:41 - that you want this to be set to four if
05:43 - you're getting a tab replaced by two
05:45 - spaces or something I don't think that's
05:48 - really enough it looks a bit messy I
05:50 - would change this setting to four and
05:53 - whichever editor you're using if it's a
05:55 - programmer's editor it's going to have
05:58 - settings like these so now let's change
06:00 - this program to something a little bit
06:02 - more interesting let's change this
06:05 - Boolean here this condition to name
06:08 - equals equals and I'm going to type John
06:11 - because that is my name you can put what
06:12 - you want there and now let's run the
06:16 - program so it says enter your name and
06:19 - if I type John it's going to Output true
06:23 - let's put something more descriptive in
06:26 - there your name is is
06:31 - John like this okay now we'll try it
06:36 - again enter your name John and it says
06:39 - your name is John and then program
06:41 - finished notice that program finished is
06:43 - not part of this if statement because
06:45 - it's not indented so this will always
06:49 - run but this bit will only run if this
06:52 - condition evaluates to True let's try it
06:55 - again and this time enter some other
06:58 - name
07:01 - and now we don't get this printing
07:04 - because the condition evaluated to
07:07 - false you can put more lines in here if
07:09 - you want they all have to be
07:12 - indented and they have to be indented by
07:14 - the same number of spaces that you
07:17 - previously used in the program let's try
07:23 - print
07:25 - hello and now so if I enter something
07:28 - that isn't my name so the conditions
07:31 - false then that stuff doesn't print but
07:33 - if I enter
07:35 - John it prints and again program
07:38 - finished always prints because it's not
07:40 - indented so it's not part of this code
07:42 - block which is controlled by the if
07:45 - statement try this out for yourself it
07:48 - is a little bit tricky to get right when
07:49 - you first do it you've got to get that
07:51 - IND indentation right there mustn't be
07:54 - any indentation anywhere else in your
07:58 - program because we don't want anything
08:00 - else to be indented in this particular
08:03 - program and you've got to have that
08:04 - colon there remember I like to leave a
08:07 - blank line after my if
08:09 - statements but it doesn't actually make
08:11 - any difference let's type John you can
08:15 - see it works the same as
08:17 - before but that blank line I think helps
08:21 - make it clearer which bit is the actual
08:24 - if statement hello you've been watching
08:26 - a free sample from my Python and machine
08:29 - learning for complete beginners course
08:32 - I'm uploading enough videos from the
08:33 - start of the course to get you started
08:36 - with python and machine learning the
08:38 - full course is absolutely massive if
08:40 - you're interested in it please click the
08:42 - link in the description the complete
08:45 - course covers not only basic python but
08:47 - also some fairly Advanced python even
08:50 - some desktop programming stuff and then
08:52 - goes on to machine learning and
08:54 - artificial intelligence until next time
08:58 - happy coding