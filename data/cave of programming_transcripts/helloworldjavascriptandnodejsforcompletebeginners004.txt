00:00 - hello this is John from cave of
00:02 - programming calm and in this video we're
00:05 - going to create a hello world JavaScript
00:07 - program so we haven't really quite
00:11 - finished installing things here so I'm
00:13 - gonna win I'm going to assume that by
00:15 - now you have got some terminal installed
00:18 - that you're happy with using I'm going
00:21 - to assume you're using bash but if you
00:23 - can use you know Windows terminal or
00:25 - whatever you just need to make sure
00:27 - you're okay with using it and you
00:30 - understand it and you should have got
00:34 - git installed
00:36 - ideally and you should have you'll
00:42 - definitely need node and NPM a needle
00:46 - that and you'll need a program is text
00:48 - editor and I will assume that you've got
00:50 - facial studio code installed by now or
00:52 - out some of the text editor that you're
00:55 - familiar with and you know how to use ok
00:57 - so one thing is Visual Studio code out
01:01 - of the box doesn't necessarily support
01:05 - JavaScript programming well what we need
01:07 - is two things we need a syntax
01:09 - highlighter which will color different
01:12 - parts of the code that we're going to
01:13 - write in meaningful ways to help us
01:16 - understand it and we need a kind of a
01:19 - pretty fire or formatter that will
01:22 - automatically format or arrange the code
01:25 - in a way that makes sense so what I
01:28 - recommend is when you start Visual
01:29 - Studio code for the first time usually
01:32 - you'll get this welcome screen and it
01:36 - says customize here install support for
01:38 - JavaScript you'll probably want to click
01:40 - that and just do it if you don't see
01:42 - that in Visual Studio code you can also
01:44 - just search on the internet for
01:47 - something like Visual Studio code
01:51 - JavaScript plugins something like that
01:55 - because you need to install plugins that
01:58 - will enable you to work well which I
02:00 - have a script go to maybe this page at
02:02 - code for our studio comm install you
02:05 - know whichever of these seem like they
02:07 - might be useful I prettier I think will
02:10 - be definitely a good one to install
02:13 - and you'll figure out pretty quickly if
02:16 - you've got the right support that you
02:19 - need in facial studio code or not and
02:21 - you can also if you look at visual
02:24 - studio code on the moment on the left at
02:27 - least in this version I'm using 2020
02:29 - there's like this icon it looks like a
02:32 - sort of some building bricks and if you
02:35 - click that it opens an extensions panel
02:38 - where if you've got an internet
02:40 - connection which you have because you're
02:43 - watching this video unless you've
02:44 - downloaded it and you're watching it
02:45 - later then you can search for extensions
02:49 - here like you could search for
02:50 - JavaScript and install them here so I've
02:54 - installed some extensions basically and
02:57 - but the bottom line is you've got to
03:00 - have a formatter and a syntax
03:03 - highlighter let's take a look all right
03:06 - so I'm going to get rid of this now and
03:09 - I'm going to open the Explorer File
03:13 - Explorer with this thing here in the top
03:15 - in the top left this icon and if I click
03:21 - that it I can open a folder so I'm going
03:24 - to open that folder we created in the
03:26 - last video you can either just create
03:29 - that manually or even better create it
03:31 - by cloning your remote git repository
03:34 - like I did in the last video so I'm
03:36 - going to click open folder navigate to
03:39 - that video and just select it click open
03:41 - and then it it shows me what's what's in
03:45 - that video actually I've opened the
03:47 - wrong one here I don't think I wanted to
03:49 - open that let's go to file and closed
03:52 - folder and then I'm going to make sure I
03:55 - open the right one click open folder and
03:59 - what I want is this folder that I just
04:03 - created in the last video using git
04:06 - using git clone so I click open and
04:09 - there we go this is the folder so it's
04:11 - got a don't get ignoring it and a
04:13 - license file in and readme MD which is
04:16 - just a text file and I'm going to create
04:19 - a new file in there you can either do
04:20 - that by going to file new file like any
04:24 - reasonable text editor
04:26 - well that's a bit of an exaggeration
04:28 - because VIN for example is a reasonable
04:31 - text editor but doesn't work like this
04:33 - but anyway like most text editors that
04:35 - have a GUI graphical user interface you
04:38 - can go to file a new file or if you look
04:42 - in this file explorer above the fault if
04:46 - you hover over the folder name there's a
04:47 - new file icon there's also a new folder
04:50 - icon
04:51 - let's click the new file icon and give
04:53 - it a name and I'm going to create a file
04:55 - called hello world j/s you can call it
05:00 - what you want but I would recommend
05:01 - giving it a J's extension and because
05:04 - I've installed various plugins the fact
05:06 - that I give it a dot J s extension means
05:09 - visual studio code will recognize that
05:11 - this is supposed to be a JavaScript file
05:13 - and that's why it's suddenly popped up
05:15 - yellow J s there it may or may not do
05:17 - that on yours
05:18 - depends what extensions you've installed
05:21 - ok now let's type a program so I'm going
05:24 - to type so I'm going to show you what to
05:29 - type here I'm not going to explain it
05:30 - that much you're going to come to it to
05:32 - understand it more as you go through the
05:34 - course if you've already got programming
05:37 - experience if this won't be a mystery to
05:39 - you if you're a complete beginner it
05:41 - will be more of a mystery but that's
05:43 - alright
05:44 - the important thing at the moment is to
05:47 - actually type this yourself so you can't
05:49 - learn programming just by watching
05:51 - videos that's like trying to learn to
05:53 - play the piano by watching videos about
05:55 - people playing the piano you have to
05:58 - actually watch the video and try the
06:00 - thing yourself whether you try it now or
06:02 - afterwards you got to do it yourself if
06:04 - you really want to learn this I don't
06:06 - know whether I'm going to give you
06:07 - suggestions for exercises I probably
06:09 - will as we go along but the really
06:11 - important thing is you try out what you
06:13 - see me doing and also experiment with it
06:15 - a little bit yourself so I'm going to
06:17 - type here console.log and then to round
06:21 - brackets and then a semicolon like that
06:24 - you got to get it exactly correct it
06:27 - will actually work without the semicolon
06:28 - in JavaScript but I usually try to put
06:31 - it in I feel it's good practice and then
06:34 - I'm going to put the cursor inside these
06:36 - two round brackets and type a
06:40 - quotes like this a quote mark and
06:42 - because I've got various plugins
06:44 - installed Visual Studio code put the
06:46 - closing quote in for me so I've got a
06:49 - pair of single quotes there it's not a
06:52 - speech mark it's two single quotes
06:55 - notice also that console is a different
06:58 - color to log if you can see that I've
07:01 - got syntax highlighting going on here
07:03 - again that's because I installed syntax
07:06 - highlight lighting extensions like
07:07 - prettier for example you want that
07:09 - working ideally it makes programming
07:12 - much easier so I'm going to click within
07:14 - just within between these two single
07:17 - quotes and type hello space world
07:19 - exclamation mark and save that file
07:22 - alright so this is a really simple basic
07:25 - JavaScript a standalone program and now
07:30 - I'm going to I'm going to run that and
07:32 - to do that
07:33 - you probably can run it from within
07:34 - visual studio code
07:36 - there's also by the way you can also
07:38 - open a terminal within Visual Studio
07:40 - code but I'm just gonna run it from my
07:45 - free-standing terminal program so I'm
07:48 - going to assume that you have a terminal
07:49 - that you're happy with and you know how
07:52 - to use or else you're using bash and you
07:55 - can just follow along with me here let's
07:57 - go to the terminal so I'm going to type
08:00 - PWD in bash to see where I am and I'm
08:05 - not in the right place here so I'm going
08:08 - to do CD space dot to go up a level CD
08:13 - space dot dot dot to go up another level
08:16 - and I'm gonna do PWD and then let's do
08:20 - LS to see what's in here
08:22 - okay I'm gonna CD space into my note J's
08:25 - folder this is going to be different for
08:29 - you you know it just depends what
08:30 - folders you've got I just wanted to show
08:32 - you a bit of how you navigate in bash I
08:34 - use the tab key to auto-complete which
08:38 - will probably work for you as well
08:40 - depends what operating system you're
08:41 - using maybe unwish or and then hit
08:43 - return
08:44 - LS I'm going to do CD space basically
08:48 - I'm going to change into that directory
08:50 - that we created in the last video
08:53 - I hit return an LS to see what's in it
08:56 - and okay there's my hello world dot J s
09:00 - LS is short for list by the way
09:03 - CDs short for change directory PWD I can
09:07 - remember that what that's short for but
09:09 - it shows you where you are if you're
09:11 - using a bash terminal now to run this I
09:14 - just type no to space HelloWorld dot J s
09:17 - and hit return again I was using the tab
09:20 - key to auto-complete the file name there
09:23 - hit return and it says hello world okay
09:27 - so what have we done here well node is a
09:30 - interpreter that is it can take a file
09:33 - containing instructions in the
09:35 - JavaScript language and it can carry out
09:38 - those instructions and the instructions
09:40 - that I wrote here basically say we call
09:45 - it printing so print the text hello
09:47 - world in other words display that on the
09:49 - console and that's the result
09:52 - so my node program has run the
09:55 - instructions in my hello world dot J's
09:58 - file written in the JavaScript language
10:00 - and it's done what I told it to do is
10:03 - print it hello world printing here has
10:06 - nothing to do with printers its
10:08 - programming lingo for display on the
10:10 - console so if you've got some
10:14 - programming experience I you may be
10:17 - underwhelmed by this you know it's the
10:19 - first step it's great you have to do it
10:22 - you may be surprised that you can do
10:24 - this with JavaScript I certainly was to
10:27 - find that you can run JavaScript as a
10:29 - free-standing program these days using
10:31 - node this was a surprise to me when I
10:33 - first did this if you're a complete
10:36 - beginner this may feel all very
10:38 - confusing
10:39 - and you won't know you know why why
10:42 - console why log why any of this that's
10:46 - okay your confusion will go away as you
10:49 - carry on going through the course the
10:52 - important thing is to follow along with
10:55 - what I'm doing either after the video or
10:57 - during it type out this stuff get it
10:59 - working yourself that's absolutely vital
11:01 - and also experiment with it a bit so in
11:04 - this case you could probably guess that
11:06 - you can change the text
11:07 - hello world inside these single quotes
11:09 - to something else and it should still
11:11 - work generally so try it out for
11:13 - yourself
11:14 - and I'm going to assume that you are
11:17 - typing this stuff for yourself and
11:19 - experimenting with it a little bit
11:21 - otherwise you just won't learn what's in
11:23 - this course unless unless you're an
11:25 - experienced programmer maybe and then
11:27 - you could probably just watch the videos
11:30 - and apply them just from memory I don't
11:32 - know maybe but anyway okay so we'll
11:36 - leave it there for this I know we won't
11:37 - I've got another thing to do
11:39 - before we leave this video let's check
11:41 - our code in to get so in there in the
11:44 - last video I created a github github
11:46 - repository and this directory that we're
11:50 - in is a local version of that so it now
11:52 - if I type git status hang on let's just
11:56 - do clear first so just type clear to
11:59 - clear the console get space status if
12:03 - you've got get installed you'll see a
12:06 - message like this so this is actually
12:09 - showing in red it may or may not do for
12:12 - you but it will probably say untracked
12:14 - files hello world so what I want to do
12:17 - is I want to we say stage the changes
12:21 - for commit is get lingo this isn't
12:24 - really tutorial on get but I need to
12:25 - tell git about this file I need to tell
12:28 - it look store this file so I'm going to
12:30 - say git add and I'll just use guitar to
12:33 - star to say look at everything to the
12:36 - git repository here and after that or I
12:40 - could just do get out hello world Jas
12:42 - doesn't matter which one really if I
12:45 - then do get status now it says changes
12:48 - to be committed and it tells me what
12:51 - command I would use if I wanted to undo
12:53 - what I just did and it says new file
12:56 - hello world Jas now I can write git
12:59 - commit and then - M to add a message and
13:05 - I so I'm committing to gates meaning now
13:08 - I'm actually saving my changes in my
13:11 - local git repository so git add says
13:14 - look take notice of these files they're
13:17 - important basically we say that we're
13:20 - staging changes
13:21 - c'mere c'mere actually saves those
13:23 - changes in effect the changes that we
13:25 - made to this file we created it and
13:28 - added text to it we want to save all
13:30 - that and it's the commit that's actually
13:32 - saving it basically so I do git commit -
13:36 - M and then I'll just put a message
13:39 - created in double quotes and hit return
13:42 - ok
13:43 - and now if I do get status it it says
13:49 - let's just do clear and get space status
13:53 - it says on branch master your branch is
13:56 - ahead of origin master by one commit use
13:58 - git push to publish your local commits
14:00 - so I've committed to my local git
14:03 - repository I've saved the changes that
14:05 - I've just done but I want to I want to
14:08 - send them to the remote repository on
14:10 - github comm because you know if my
14:13 - computer gets messed up I don't want to
14:16 - lose my changes so I'm gonna save the
14:19 - local changes in the remote repository
14:21 - to do that I write get push origin
14:25 - master so four different words there so
14:28 - I'm using git I'm doing a push command
14:30 - and pushing to the origin in other words
14:33 - to the remote repository and this is a
14:38 - what we call a branch name it's a
14:40 - particular version of this code
14:43 - basically we won't dwell on that too
14:45 - much but I'm going to hit return you
14:47 - might need to add a username and
14:50 - password at this point it's not asking
14:53 - me to do that because I've already run
14:55 - git but it will probably ask you to add
14:58 - your github username which is probably
15:01 - an email address and your github calm
15:05 - password as well and it may also ask you
15:08 - to configure your your email address and
15:12 - it will tell you how to do that probably
15:15 - if it asks you to do that so you
15:18 - probably won't have too much trouble
15:19 - with this it's not too confusing so
15:23 - there's three commands that we did
15:27 - we did let's do maybe list yeah let's do
15:31 - history Brett and gets you don't have to
15:34 - follow you don't have to do this but I
15:36 - want to look at the history of things
15:38 - that I've done and filter that so grep
15:41 - filters it so I want to run this through
15:43 - grep and just see the ones that contain
15:46 - the word get and we can see that what I
15:48 - did was basically I did get I'd star get
15:53 - commit - M with a message and get pushed
15:56 - push origin master those are the three
15:59 - commands that I used to save what I've
16:00 - done get status was just used to see
16:04 - what's going on basically and you might
16:06 - need to do other stuff you might need to
16:10 - do all this stuff like just add your
16:12 - password the first time you do this okay
16:15 - when you've done that you should be able
16:17 - to go to github.com and well if you log
16:21 - in you should be able to see your
16:26 - repository there and you find that your
16:28 - source code has been added to it and
16:32 - there it is for me if if you so you may
16:37 - or may not decide to use github it's not
16:39 - an essential part of this course but
16:42 - whether you do or not if you want to see
16:44 - my source code of stuff I'm creating you
16:46 - can go to github.com slash cave of
16:50 - programming and then you want to go to
16:54 - my no js' repository so either just go
16:57 - to slash node j s directly or click on
17:02 - my repositories tab and go to no j s so
17:06 - basically go to the URL github comm
17:09 - slash cave off programming all one word
17:12 - slash nodejs
17:13 - and then you can see my source code in
17:16 - and here's hello world j s so after this
17:20 - tutorial I'll probably start giving
17:22 - these kind of numbers so we can you can
17:25 - basically you know kind of keep track of
17:27 - them a bit better alright so that's it
17:31 - for this video hopefully you run your
17:33 - first hello world program if you're a
17:36 - complete beginner with programming and
17:38 - you manage to run this that's an
17:39 - incredible achievement
17:41 - believe me be proud of it okay so until
17:43 - next time happy coding