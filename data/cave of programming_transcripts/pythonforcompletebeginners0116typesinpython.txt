00:00 - in this video we're going to look at
00:01 - types in Python so in Python variables
00:06 - can point at different kinds of things
00:10 - you could have a variable called width
00:12 - and you could assign a value to it like
00:15 - an integer value and later on you could
00:17 - assign instead a string value to it if
00:19 - you want in some programming
00:22 - languages variables themselves have
00:25 - types so you could have a variable that
00:28 - is an INT type and can only refer to ins
00:32 - to whole numbers and you could have a
00:34 - variable that's a string type for
00:36 - example but it doesn't work like that in
00:38 - python python has something called
00:40 - Dynamic typing which basically means in
00:44 - very basic terms that variables don't
00:47 - have
00:49 - Types on the other hand it is important
00:51 - to know what type of a thing a variable
00:55 - actually refers
00:56 - to and if you forget what type of thing
01:00 - a variable refers to you can find out
01:03 - using the built-in type function and by
01:06 - the way before I forget I've called this
01:09 - file python types. py rather than just
01:14 - types. py and that's because I found out
01:16 - through bitter experience that if I call
01:19 - it types. py that actually conflicts
01:22 - with some built-in python
01:26 - package and causes problems in certain
01:29 - kinds of prr programs that's not a
01:31 - problem you'll often encounter though so
01:33 - let's take a look at this width variable
01:36 - I'm going to use print to print
01:38 - something out and what I want to print
01:40 - is the return value of the type
01:44 - function and to the type function I'm
01:48 - going to pass
01:51 - width as an
01:53 - argument arguments being just things
01:55 - that we pass to functions so I'm passing
01:58 - width to the type function and that
02:01 - returns a value it gives us a value back
02:05 - which I then print using print we're not
02:08 - somehow printing the type function
02:10 - itself here we're only printing what it
02:13 - gives us back we're printing its return
02:17 - value in technical
02:19 - terms so if I run
02:25 - this we see we get some text here that
02:28 - says class int
02:32 - we'll be talking about classes and
02:33 - objects in depth later on in this course
02:36 - but for now the important point is that
02:39 - it's telling us that
02:41 - width refers to an INT value an integer
02:44 - value we can also try this
02:47 - with length let's try
02:57 - it and you can probably get guess what
03:00 - we'll get back that's also an INT but
03:03 - watch what happens if we change 22 to
03:05 - let's say
03:06 - 22.5 for length now what we've got is a
03:12 - float so this is another possible
03:15 - built-in python type of object that is
03:19 - used to
03:21 - store floating Point numbers numbers
03:24 - with a decimal point in them now if we
03:26 - do this calculation so 15 * 22.5 five
03:31 - that's going to give us a floating point
03:33 - value so area is also going to be
03:36 - floating point now let's take a
03:44 - look and we can see that area also has
03:47 - class
03:48 - float now basically everything in Python
03:52 - is an object and one of the things that
03:55 - means is that we can use the type
03:57 - function on practically everything
04:00 - so for example we could find out what is
04:03 - the type of this text here which is a
04:08 - kind of an
04:09 - object let's run
04:11 - it object has a technical definition
04:15 - which we'll look out later and you can
04:17 - see here that the type of this string
04:21 - literal is stru that's its type meaning
04:26 - it's a string type it's some text a
04:28 - string of characters
04:30 - we can even try the type function on
04:33 - functions which are themselves also
04:36 - objects so let's take a look and try
04:39 - type on print now in this case I'm only
04:42 - going to type print by itself I'm not
04:44 - going to put round brackets after it if
04:47 - I put round brackets here like an open
04:50 - and close round bracket directly after
04:53 - print that would actually run the print
04:56 - function and with empty round brackets
04:58 - after it it would just just simply
05:00 - create a new line in the console an
05:03 - empty line if I run the type function
05:06 - and I Supply the name print to it then
05:10 - we can actually get something sensible
05:11 - back we can see that print is a kind of
05:15 - built-in function or method a method is
05:19 - a function that's attached to an object
05:21 - but we haven't covered that yet so don't
05:23 - worry about it what this is basically
05:25 - telling us is that print is a function
05:28 - so again there's no need to memorize
05:30 - anything here but what it is important
05:32 - to do is try this out for yourself you
05:34 - can use this program or some other
05:36 - program and try printing out the types
05:40 - of things and see what they are in your
05:43 - program this is a free video from my
05:46 - Python and machine learning course I'm
05:48 - uploading some videos from the start of
05:50 - the course to get you started with
05:52 - python the full course is absolutely
05:54 - huge and teaches you Python and the
05:56 - basics of machine learning and
05:58 - artificial intellig Ence with a ton of
06:01 - exercises and solutions please click the
06:03 - link in the description for the full
06:05 - course