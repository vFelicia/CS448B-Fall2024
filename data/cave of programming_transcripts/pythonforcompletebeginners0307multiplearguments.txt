00:00 - in this video we're going to look at
00:01 - multiple function parameters in python
00:05 - as an example I'm going to create a
00:07 - function that calculates the volume of a
00:11 - box I'm not actually sure what the
00:14 - mathematical term is for a box shape but
00:19 - if I say a box I think you'll know what
00:22 - kind of shape I'm talking about so the
00:25 - formula for calculating the volume of a
00:28 - box is like this
00:30 - you just multiply the width by the
00:34 - height and the length and that gives you
00:37 - the
00:37 - volume so if these are in centim for
00:41 - example you're going to get a volume in
00:43 - cubic cenm if they are in inches the
00:46 - volumes in cubic inches and so
00:49 - on so can we create a function which we
00:53 - can pass withth height and length two of
00:55 - a box and it will tell us the volume of
00:58 - the Box let's create a main
01:00 - function and I'll put pass there for the
01:03 - moment and we'll try to create our
01:05 - function so let's call it
01:08 - calculate box
01:11 - volume and we'll have a pass there just
01:13 - for the moment and a def keyword so this
01:17 - is going to need three parameters it's
01:19 - going to need a width a height and a
01:21 - length and we can have functions that
01:25 - accept multiple arguments so we can have
01:27 - multiple function parameters let's
01:30 - create them here width comma I usually
01:32 - put a space in as well although it's not
01:35 - strictly necessary width height comma
01:39 - and
01:41 - length so these are called positional
01:43 - parameters because they get matched to
01:46 - arguments via their position I'll show
01:48 - you what I
01:49 - mean so we could already call that
01:51 - function although it doesn't do anything
01:53 - yet I can say calculate box volume and
01:56 - we could pass in let's say five for the
01:59 - width two for the height and 10 for the
02:02 - length so these get matched up to the
02:05 - positional parameters via their position
02:07 - so the five is going to go into this
02:10 - width variable the two is going to go
02:12 - into the height variable the 10 is going
02:14 - to go into the length variable now we
02:17 - can do the calculation with these and we
02:19 - could print the result of that
02:21 - calculation or we could also return it
02:24 - let's return it so here I'll say return
02:27 - width time height time
02:32 - length where is this calculated value
02:35 - going to end up well here we need a
02:39 - variable to store it so let's say volume
02:43 - equals the return value of calculate box
02:47 - volume and then we can print
02:50 - it let's say box volume is colon and now
02:55 - I could do this I could cast that volume
02:57 - to a string
03:00 - and then display it there actually let's
03:02 - run this because it should work first
03:05 - I'm going to have to remember to call
03:06 - Main somewhere otherwise it's not going
03:08 - to do
03:09 - anything okay now let's try this and it
03:12 - says box volume is 100 but actually the
03:15 - print function can also accept multiple
03:19 - positional
03:20 - parameters so another way of doing this
03:23 - which is a better way is to put a comma
03:26 - here and then
03:27 - volume and then we don't actually need
03:29 - the space either because print will put
03:32 - a space in automatically let's run it
03:35 - and you can see it looks the same so
03:37 - this is the way I would normally use
03:39 - print to display multiple values the
03:42 - only reason I was using concatenation
03:45 - before is because I think that will help
03:48 - you to get to grips with different types
03:51 - in Python but by now you probably
03:54 - basically got to grips with that so I'm
03:56 - going to start using multiple parameters
03:59 - with print you just have to separate
04:00 - them with commas and notice that when
04:03 - you call the function the parameters are
04:05 - separated with commas and when you list
04:08 - multiple parameters in a function header
04:11 - they are also separated with commas also
04:13 - you have to remember that when you
04:15 - supply multiple arguments to the print
04:18 - function it automatically prints them
04:20 - with spaces in between as you can see
04:23 - here so try this out for yourself type
04:26 - this out get it working and I am going
04:28 - to give you an exercise with this and
04:30 - you might want to first practice with
04:34 - some exercises you make up yourself for
04:37 - example you could easily now write a
04:40 - function that
04:41 - converts Fahrenheit to Celsius or vice
04:44 - versa or does some other conversion you
04:47 - know how to pass data to functions and
04:50 - you know how to return data from
04:52 - functions one thing you might wonder is
04:54 - what happens if you supply the wrong
04:56 - number of arguments calculate box volume
04:59 - here has three parameters so we have to
05:01 - pass in three arguments what happens if
05:04 - we only pass in two let's try
05:07 - it in fact we get an error and you can
05:10 - see it says it's missing one required
05:13 - positional argument length so we have to
05:16 - put in the right number of arguments
05:18 - python does actually check that they
05:20 - match and that raises the question
05:23 - of how does print know how many
05:26 - arguments to accept and that's something
05:29 - that we're going to look at later on but
05:32 - for now all you need to know is you have
05:33 - to supply the right number of arguments
05:36 - to match up with the number of
05:38 - parameters and they have to be of course
05:40 - in the right order because they get
05:42 - matched up via that order in this case
05:46 - hello you've been watching a free sample
05:49 - from my Python and machine learning for
05:51 - complete beginners course I'm uploading
05:54 - enough videos from the start of the
05:56 - course to get you started with python
05:58 - and machine learning the the full course
06:00 - is absolutely massive if you're
06:01 - interested in it please click the link
06:04 - in the description the complete course
06:07 - covers not only basic python but also
06:09 - some fairly Advanced python even some
06:12 - desktop programming stuff and then goes
06:14 - on to machine learning and artificial
06:17 - intelligence until next time happy
06:19 - coding