00:01 - hello in this video we're going to take
00:03 - a look at how to terminate
00:04 - our while loops from our program so
00:08 - in the last video we saw an example of a
00:11 - non-terminating
00:13 - while loop so a loop that just keeps
00:15 - going forever
00:16 - an infinite loop uh in this video we're
00:19 - going to make it actually terminate
00:21 - so let's start by here i've got a new
00:23 - i've got a new project
00:25 - which i've called loop conditions
00:28 - and i'm gonna i'm gonna recreate a while
00:32 - loop so it's worth typing this a few
00:34 - times yourself
00:35 - so you get into the swing of typing it
00:37 - let's write while
00:39 - true open a curly bracket and then make
00:42 - sure that
00:43 - kelly bracket's closed and let's output
00:46 - a system.out.printline hello
00:49 - i'd strongly recommend typing this out
00:52 - several times because it'll really
00:54 - help you you've got to sort of memorize
00:56 - these constructs
00:59 - but not by just looking at them and
01:00 - thinking but rather than by
01:02 - by typing them a few times that really
01:04 - helps okay
01:05 - so um what we'll do here is
01:08 - above the while loop and it's really
01:10 - important that we do this above the
01:12 - while loop i'm going to declare an
01:14 - integer variable
01:16 - i'm going to call it int counter
01:20 - and i'll set it equal to zero to start
01:22 - with
01:23 - let's output the counter in our
01:27 - system.out.print
01:28 - a light print line in fact
01:32 - let's write in here
01:35 - well let's use print printf just for
01:38 - some practice using it
01:39 - so here instead of hello i'm going to
01:42 - write
01:42 - counter colon just for some text and
01:46 - then i'm going to put percent d
01:48 - and then let's finish it with a
01:49 - backslash n to create a new line
01:52 - after each time this is this runs
01:55 - so that the first argument is this
01:56 - string with a
01:58 - format specifier in it percent d and
02:01 - after that i'm going to write
02:02 - comma counter
02:07 - all right so if we run that as it is
02:09 - we're just gonna see
02:10 - zero printed over and over again so
02:12 - let's look
02:15 - terminate it with the red button there
02:18 - so it just says counter zero
02:20 - but now within the loop
02:23 - i'm going to go underneath where i wrote
02:26 - system.out.printf
02:28 - and i'm going to say counter i'm going
02:30 - to assign
02:31 - a new value to counter so i want to use
02:34 - the assignment operator
02:36 - and a new value is going to be the
02:39 - original value
02:40 - counter plus one
02:45 - so now every time the loop goes round
02:47 - it'll give this new value to counter and
02:50 - the new value will be
02:51 - the original value with one added to it
02:55 - and that's going to mean that the
02:56 - counter is going to increase one by one
02:58 - let's run it
03:00 - and we can see we've now got huge values
03:03 - very quickly being
03:04 - output here you might have a lower value
03:06 - if your computer's a bit slower if
03:08 - you've got an
03:08 - even faster computer than me you're
03:10 - going to get more numbers being output
03:12 - there
03:12 - probably all right um
03:16 - we can use this to terminate our loop
03:18 - and by the way this is not the only way
03:20 - we can do this but
03:21 - for the moment we'll we'll leave it at
03:23 - this because it's already quite puzzling
03:24 - by itself
03:26 - uh it's not an equation remember we're
03:29 - literally saying
03:30 - okay take take this value
03:33 - so it's best really in a way to read it
03:35 - from right to left
03:36 - so we're saying take counter whatever
03:38 - the value is add one to it
03:40 - and then we're going to assign that that
03:42 - value back to the variable counter
03:45 - so if counter is zero we add one and we
03:48 - get one
03:49 - and then we assign the value one well
03:52 - don't mean to do that
03:53 - we're going to assign the value one to
03:56 - the variable counter
03:57 - so counter is now one that's why it's
03:58 - incrementing like that that's why it's
04:00 - increasing
04:02 - we can use that to terminate the loop if
04:05 - we change this to
04:06 - while counter less than ten
04:11 - all right so this is a less than symbol
04:14 - and what this is saying is
04:16 - do the loop while it's
04:19 - true that the value of counter
04:22 - is less than 10. all right
04:26 - so i'm going to make some more remarks
04:28 - about this in the next video
04:30 - but for now just type this out and even
04:33 - if it's puzzling now
04:34 - it will gradually start to make sense
04:36 - but typing is really
04:38 - you know it's almost like 90 of the
04:40 - challenge in a way
04:41 - because you type these and you become
04:42 - familiar and gradually
04:45 - i suppose the thing is it's a lot easier
04:47 - to understand a program
04:48 - if it's already in your memory if you
04:50 - already remember what the program looks
04:52 - like
04:53 - it becomes a lot easier to understand it
04:55 - than if you're also struggling to
04:57 - remember what different bits it has
04:59 - and when you type it out that forces you
05:01 - to pay attention to every single
05:03 - character in the program and that really
05:04 - helps
05:05 - so you notice here we've got a semicolon
05:07 - you could easily forget that
05:09 - easily forget these semicolons but by
05:11 - typing them over and over again
05:12 - you just get used to putting them in you
05:14 - remember that they're there so
05:16 - typing is typing programs and running
05:18 - them it's really really important
05:21 - so now if we run this we see in the
05:24 - console we can actually make this
05:25 - console bigger if i drag it up
05:27 - we've got counter zero one two three
05:29 - four five six seven eight nine
05:32 - uh so we've got ten iterations in total
05:34 - so there's one to nine but there's also
05:36 - zero so
05:37 - we've looped 10 times and we carried on
05:41 - looping as long as
05:42 - the value of counter was less than 10.
05:45 - so when it was equal to 10 what happened
05:47 - was
05:48 - uh the program said okay while
05:51 - 10 because counter eventually equal 10
05:54 - is less than 10
05:55 - do the loop and it said well it's not
05:58 - true that 10 is less than 10
06:00 - so i'm not going to run this so ev when
06:02 - this is true
06:04 - if if while finds that this condition is
06:07 - true
06:08 - so that the counter is less than 10 it
06:10 - will run whatsoever in brackets
06:13 - once and then it goes back to the
06:14 - beginning and checks the condition again
06:17 - and if it's still true it runs it again
06:19 - eventually here in this program it's
06:21 - finding that this condition is not true
06:23 - and then it just does nothing then your
06:25 - program carries on
06:26 - to the lines after the while loop
06:29 - don't puzzle about that too much for now
06:32 - the important thing is
06:34 - type this out and get it working and if
06:36 - you want a little challenge
06:38 - try to write a program that outputs
06:41 - let's say the word hello or whatever you
06:44 - like
06:45 - exactly five times no more and no less
06:48 - exactly five times uh you could also
06:51 - make it output some number
06:53 - but you don't forget you're going to
06:54 - need this in order to stop the loop
06:57 - to stop the loop you need that and you
06:59 - need that and you also
07:01 - another place that beginners often go
07:04 - wrong
07:04 - is they put this variable declaration
07:07 - and assignment to zero
07:09 - that in initial variable declaration
07:11 - they put it inside the loop
07:13 - so inside these curly brackets and if
07:15 - you do that counter will always be zero
07:17 - and it will never stop running
07:19 - you've got to have this outside the loop
07:21 - you use it in this condition
07:23 - and very important you increment it
07:27 - which means increase it basically within
07:30 - this
07:31 - within this block and that's where your
07:34 - system.out is also going
07:36 - or system.out.printf in this case so try
07:39 - that for yourself and then
07:40 - try to create a program that outputs
07:42 - some text exactly five times
07:44 - just for an exercise okay so until next
07:47 - time
07:47 - happy coding