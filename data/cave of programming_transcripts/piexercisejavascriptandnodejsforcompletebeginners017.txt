00:00 - hello this is John from cave of
00:02 - programming comm and this is another
00:04 - video in my no js' and JavaScript for
00:08 - complete beginners course in this video
00:10 - I'm going to give you an exercise and
00:13 - I'm going to give you some tips and
00:15 - suggestions for how to tackle the
00:17 - exercise and how to tackle like
00:20 - programming tests in general so if
00:24 - you're a like seasoned programmer in
00:27 - another language this might be too
00:29 - simple for you but if you're a beginner
00:30 - it might be too complicated but I'm
00:34 - gonna as I say give you some tips for
00:35 - dealing with it so let's go to a browser
00:39 - and I'm going to search for the liveness
00:41 - approximation of Pi so liveness was a
00:46 - kind of mathematician physicist I think
00:48 - he was Dutch and he found a way of
00:52 - approximating the value pi now pi is
00:56 - just a number it's a floating-point
00:57 - number and what we want to do is find an
01:02 - approximation for it so pi itself as
01:05 - digits that go on forever like it is an
01:08 - irrational number so we can't write it
01:11 - down precisely but what we can do is
01:14 - approximate it and we can make a value
01:18 - for pi this is accurate as we want it to
01:20 - be before we take a look at this let's
01:22 - go back to our code here and I'm just
01:25 - going to start my program with you
01:26 - strict I'm gonna write console.log and
01:32 - if we write math dot pi capital letters
01:37 - math dot pi will actually it is actually
01:41 - a value and approximation of pi so it
01:45 - kind of shows us what we're aiming at
01:47 - math here is what we call a class and
01:50 - we'll look at those later pi is a
01:52 - constant so if I run this program let's
01:55 - write node and PI J s we get this value
01:59 - 3.14159 what we're trying to do is
02:02 - produce this value approximately so we
02:05 - want to get it right to at least some of
02:08 - the initial digits it is literally just
02:12 - a value
02:13 - and we can do that using this formula so
02:17 - we start with the value 1 which notice
02:19 - is the same as 1 divided by 1 and then
02:23 - we subtract 1/3 and then we add 1
02:29 - divided by 5 we subtract 1 divided by 7
02:33 - and we keep doing this let's say if we
02:36 - do it for maybe I don't know how many a
02:38 - thousand or five thousand terms
02:41 - eventually we'll get a value that's
02:42 - equal to 1/4 of Pi so if we then take
02:46 - that value and multiply it by 4 we
02:50 - should get a reasonable approximation of
02:52 - pi if we've done this you know like I
02:54 - don't know five thousand times so how
03:00 - are we going to tackle this program well
03:01 - if you feel confident and this doesn't
03:04 - look too off-putting ly difficult to you
03:07 - then do pause the video and have a go at
03:11 - it I'm going to show you how to actually
03:12 - write the program in the next video but
03:15 - we're going to look at how to tackle it
03:17 - here so the thing is when you have some
03:22 - kind of test that you have to do with
03:23 - programming I think the thing is to
03:26 - tackle whatever bits you can do so you
03:29 - know now how to create a hello world
03:32 - programming Java Script that but you can
03:34 - do you can already do that so or I would
03:38 - say already do that you know there's no
03:41 - need to think about how to do the whole
03:42 - thing necessarily in advance just do the
03:45 - bits you can to start with and now we
03:47 - can start breaking this down well what
03:49 - do we need here well we need a series of
03:53 - numbers which if we think of the first
03:55 - one as being 1 divided by 1 we need
03:59 - these numbers on the bottom here so the
04:02 - question is can you write a program that
04:03 - outputs the numbers 1 3 5 7 9 11 13 and
04:08 - so on because if you can do that you've
04:11 - taken a big step towards it what we also
04:14 - need is we need to we need to take one
04:20 - and divide it by each number so if you
04:22 - can write a program that outputs 1 3 5 7
04:24 - 9 and so on
04:26 - it's not too hard to write a program
04:28 - outputs the values 1/1 which is one 1/3
04:34 - 1/5 1/7 and so on that shouldn't be too
04:38 - hard and then this is tricky bit we've
04:41 - got to have alternating minus and plus
04:43 - signs so what you could do is take each
04:47 - of these values and multiply them
04:49 - ultimately by one or minus one so then
04:53 - the question becomes can you write a
04:55 - program that outputs 1 minus 1 1 minus 1
05:00 - 1 minus 1 so on alternate alternating
05:03 - and you could do that by taking a
05:06 - variable setting equal to 1 and in your
05:08 - loop multiply it by minus 1 every time
05:11 - you go through a loop because 1 times
05:13 - minus 1 is minus 1 minus 1 times minus 1
05:17 - is 1 1 times minus 1 is minus 1
05:20 - multiplying by minus 1 will cause your
05:23 - value initially set to 1 to alternate so
05:27 - I'm going through this a bit first but
05:29 - that will give you all the building
05:31 - blocks that you need here and what you'd
05:33 - need to do after that is you need a
05:35 - variable that can just accumulate all
05:38 - those values so you take your 1 or minus
05:41 - 1 and multiply it by a third or a fifth
05:44 - or whatever you you outputting at that
05:47 - point in the loop and just add those
05:50 - values to your variable every time you
05:52 - go through the loop then at the end take
05:55 - that variable multiply it by 4 and you
05:58 - should get a value for pi so especially
06:02 - if you're if you really are a beginner
06:04 - have a go at this and write whatever
06:06 - bits you can break it down in the way
06:08 - that I've just specified break it down
06:11 - and see what bits of that you can write
06:13 - if you can even write a program outputs
06:15 - 1 3 5 7 9 11 and so on adding 2 every
06:19 - time then that's really a good step so I
06:22 - think the thing is you learn a
06:24 - tremendous lot a tremendous amount by
06:28 - trying to write programs in a way it
06:30 - doesn't much matter what you try to
06:32 - write as long as you keep trying to
06:34 - write programs your programming ability
06:37 - will improve
06:38 - and this is just one suggestion of
06:41 - something you can do and if you try to
06:43 - write it even if you don't succeed in
06:46 - the end then you'll get some really good
06:49 - practice I think by doing this you know
06:54 - so just just just have a go at it and
06:56 - see if you can break it down into
06:57 - different bits output the values as you
07:01 - go along let's see that's a really
07:03 - important thing and see if you're a lot
07:06 - on the right track or not - see see what
07:08 - you get with it and in the next video
07:10 - I'm going to show you an example
07:12 - implementation of this we're actually
07:13 - going to write this program okay so
07:16 - until next time happy coding