00:04 - [Music]
00:15 - hello this is John from cave of
00:18 - programming comm and this is tutorial
00:21 - number 13 in our series of beginners
00:23 - Java tutorials this tutorial is on
00:27 - classes in Java and it's also gonna be a
00:31 - little bit about object-oriented
00:33 - programming in general so I've got a
00:37 - project in Eclipse
00:38 - as usual and I'm gonna show you the
00:42 - first step again which by now I usually
00:46 - don't show you in the tutorials but I'm
00:49 - gonna just go to file new class and I
00:54 - give my class a name and I give it a
00:57 - name that by ticking this box and I
00:59 - click finish and the reason I wanted to
01:01 - show you that was just to remind you
01:03 - that you're already creating classes in
01:07 - Java because unless you are using some
01:10 - really strange editor that some kind of
01:12 - university course are saddled you with
01:15 - then you will already be creating
01:18 - classes to run your java programs so you
01:21 - know how to create a class in Eclipse
01:23 - you go to new you can right click on
01:26 - project as well and go to new class and
01:29 - just give it a name which the first
01:31 - letter should be uppercase and if you
01:34 - have more than one words making up the
01:36 - class name you know like I don't know
01:39 - red fruit you'd capitalize the first
01:42 - letter of each word in the name just to
01:46 - make it easy to read like that so this
01:49 - would be a class and of course you only
01:51 - need a main method for your for the
01:55 - first for just one class in your program
01:57 - and this is where your program runs from
01:59 - so this is what class normally looks
02:02 - like and it's really important to notice
02:06 - that if you have a classes declared
02:10 - public then this class name must match
02:14 - the name of your file like red fruit the
02:17 - red fruit class must be in red fruit
02:19 - Java but anyway and you're probably
02:23 - wondering what is public and what is a
02:25 - class
02:26 - well what I'm gonna do to kind of make
02:30 - things a bit simpler is you don't
02:32 - normally do this but although you can
02:35 - only have one public class in your file
02:38 - you can have as many non-public classes
02:41 - as you like so I'm gonna just create a
02:42 - class here in my main kind of class file
02:48 - just to show you so then you can see
02:51 - everything on one page so to create a
02:55 - class you type class and Java keywords
02:59 - are always lowercase only given a name
03:02 - as I said and I'll call this person so
03:06 - the idea behind a class is a class is a
03:10 - template for creating objects or a
03:14 - classes of blueprints if you like for
03:16 - creating objects and what objects are is
03:20 - well in the real world everything is an
03:23 - object arguably like you're an object
03:25 - your cat is an object your computer is
03:29 - an object and so on and it's the same in
03:34 - a Java program everything is an object
03:36 - and you need some way of specifying what
03:40 - the different objects in your program
03:41 - are like and that's what clusters it's
03:43 - just so like for example a person class
03:46 - could be used to create person objects
03:50 - that would represent particular people
03:52 - but this isn't a particular person it's
03:55 - just gonna represent the idea of a
03:57 - person in general so another way of
04:01 - looking at it is this a class is also a
04:02 - bit like a type like you we've seen int
04:05 - double and string and you can create
04:08 - your own types to order this is a person
04:10 - type and what I'm going to do is well a
04:14 - class and flat matter objects have two
04:18 - kinds of things in them so classes can
04:22 - contain first thing is data which
04:27 - represents the state of your objects and
04:30 - what I mean by that is if you think
04:33 - about yourself as an object you have a
04:35 - state you have a name
04:39 - probably an address you have an age a
04:42 - location you have a mood you have a
04:46 - certain heart rate all of these things
04:48 - or they make up what we call your state
04:50 - they are how you are at the moment and
04:54 - to represent that in Java we put data
04:58 - into our class in the form of what we
05:01 - call instance variables which I'm going
05:03 - to show you in this tutorial but in the
05:06 - next tutorial we'll also look at
05:08 - subroutines which can be part of classes
05:12 - so like here is a subroutine the main
05:15 - method and in here you can type just
05:17 - things commands that are executed one
05:21 - after the other so your java program
05:24 - starts wherever you declare main and it
05:26 - just works through your commands in main
05:28 - one after the other as you already as
05:32 - you already know and so this is actually
05:37 - an example of a subroutine called main
05:39 - which is part of this class app and a
05:43 - subroutine that's part of a class we
05:45 - call a method in Java to use the lingo
05:47 - so this is a the main method I'm going
05:51 - to show you how that works in the next
05:53 - tutorial but in this tutorial we're just
05:57 - gonna look at the data part of classes
06:02 - so I'm just going to finish typing here
06:05 - so the second thing you can have in a
06:06 - class is a subroutine which you call
06:09 - methods okay so let's have some data in
06:15 - this person class so I'll have some data
06:22 - and we call the data in a class instance
06:26 - variables data or state and the reason
06:33 - for that is to to represent data that
06:36 - you want to attach to an object it's
06:38 - really simple you just type variables
06:40 - here like I could have string name so
06:43 - that this person so that people that I
06:46 - create from this person class can have
06:48 - names
06:49 - and for example they could have an age
06:53 - and in my main program now I can use
06:57 - this person class to create particular
07:00 - personal objects or particular people if
07:02 - you like so I could say person I'll give
07:08 - it a name person one I'll say when I say
07:12 - give it a name I mean give the variable
07:13 - that refers to the person the name I
07:15 - don't mean this
07:17 - so person 1 equals I'd say new person so
07:24 - well something here is here I'm
07:25 - declaring a variable of type person I'm
07:28 - in other words it's a variable that can
07:30 - refer to a person object and here I'm
07:34 - creating a particular person I'm
07:37 - creating a person object not an object
07:40 - of type person and now I can refer to
07:44 - the name and age of this person I can
07:47 - say person 1 dot name equals let's say
07:52 - Joe Joe Bloggs
07:54 - and person wonder age equals 37 and I
08:03 - could have another person I could say
08:06 - person person to have as many as you
08:09 - like of course equals new person and
08:14 - when you create the personal object
08:15 - using new don't forget you need these
08:17 - two round brackets here so to break this
08:19 - down once more is the type of the
08:23 - variable that I'm going to create here's
08:25 - a name for my variable but then I'm
08:28 - going to set the variable equal whoops
08:30 - gonna set it equal using this equal sign
08:33 - to a new person object which I'm
08:36 - creating here and to do that you just
08:38 - have to keyword new the name the name of
08:41 - your class and then two round brackets
08:43 - here which are very important so don't
08:45 - forget them and I can get person to I
08:48 - can assign a value to its name as well I
08:52 - can say Sarah Smith and person one age
08:57 - equals 20
08:59 - oh sorry person 2.8 equals 20 so you can
09:04 - see that I'm accessing these variables
09:07 - up here just by using a dot after the
09:09 - person after that variable name the name
09:12 - of a variable that refers to the person
09:14 - so it's the variable name which I chose
09:17 - here then a dot and there's no spaces
09:20 - and then just the name as a variable
09:22 - that I want to refer to and this
09:26 - actually isn't best practice in Java but
09:28 - what I'd strongly recommend is because
09:32 - by now if you haven't seen this before
09:33 - probably your brain is bubbling out of
09:35 - your ears I'd recommend just typing this
09:38 - too far for yourself just create a few
09:40 - classes you can just create them one
09:42 - after the other here above your main
09:44 - class and give them some data and then
09:47 - just create a few objects on your
09:49 - classes here like this and play about
09:53 - with the data and of course you can
09:54 - access the data using the dot notation
09:56 - in exactly the same way person 1 dot
10:00 - name for example and all this is
10:03 - actually very simple and if it looks
10:05 - complicated believe me then after
10:07 - practicing a little bit it will seem
10:10 - dead simple so that's all for this
10:13 - tutorial
10:14 - and a lot of information to absorb but
10:18 - really it boils down to some quite
10:20 - simple codes as you can see and in its
10:23 - tutorial we're going to look at probably
10:27 - subroutines and that you can have in
10:30 - classes in other words we're going to
10:32 - look at what we call methods which this
10:34 - main method here is an example so yes I
10:40 - strongly recommend just typing this out
10:42 - because if you don't practice what
10:45 - happen is when you get onto methods
10:48 - he'll start confusing methods with
10:51 - variables which I've seen many people
10:54 - too and then you won't know a from B but
10:58 - if you can just practice this a little
11:00 - bit the next bit will be a lot clearer I
11:02 - promise ok so have fun with that and you
11:06 - can find this code on cave of
11:09 - Programming calm
11:11 - please watch the next tutorial too if
11:13 - this is useful and until then happy
11:16 - coding
11:21 - [Music]
11:30 - you