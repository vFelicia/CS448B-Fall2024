00:00 - hello in this video we're going to take
00:03 - a look at control characters in strings
00:05 - so let's define a string so I'm going to
00:09 - write here string I'll call it text I'm
00:11 - giving it a generic name because I don't
00:14 - really know what it's going to be
00:15 - exactly but I'll write some text here
00:19 - what should we write to be or not to be
00:25 - that is the question all right so we've
00:30 - got two sentences here and we can output
00:33 - that sysout an output text so let's run
00:40 - this and we've got the output as we
00:44 - expect
00:45 - now within strings because they are
00:50 - simply just text you can use more or
00:54 - less any character you want to use
00:56 - almost any character that you might feel
00:59 - like using is valid in there it's just
01:02 - ordinary text but we can put control
01:07 - characters in there so all of the
01:10 - characters we've got in here are
01:11 - printing characters well in a way even
01:16 - the spaces I'm not sure how technically
01:18 - how it's classified but the point is
01:19 - that they all they all visibly display
01:24 - in in your output so the letter B
01:28 - visibly displays as it is the space will
01:33 - that just create space I guess it's an
01:35 - non-printing character anyway let's not
01:38 - worry about that but the rest all or
01:41 - visibly display but there are non
01:44 - printing characters and these are things
01:46 - that alter the formatting of your string
01:49 - so they don't actually display
01:51 - themselves they alter the position of it
01:55 - somehow and probably the most commonly
01:58 - used one is the newline character so
02:02 - then the non-printing characters or
02:03 - control characters start with a
02:07 - backslash so backslash n means newline
02:11 - so at a point where I had there
02:13 - we're going to create a new line in
02:17 - other words we're going to see that
02:18 - these two sentences are now on two
02:20 - separate lines and we don't want that
02:22 - space anymore because we don't want to
02:25 - start a new line with a space or
02:27 - whatever let's run this and you can see
02:30 - we've got that on two separate lines now
02:33 - another really common character that you
02:37 - might want to use is tab so let's let's
02:43 - indent the first line with a tab so you
02:45 - can put it anywhere in your string but
02:48 - we'll put it at the beginning here let's
02:50 - write /t that gives us a tab character
02:53 - so when we run this program we can see
02:56 - that the first sentence has been
02:57 - indented by one tab we'll put another
03:02 - one in because this looks ugly let's at
03:04 - least line them up so directly after the
03:07 - newline I'm going to write slash T so
03:10 - we've got a new line here followed by a
03:14 - tab character and if we run this now
03:18 - they're both tapped in one tab if you
03:21 - actually for some reason want a slash in
03:24 - your in your string because slash
03:28 - normally starts the control character
03:30 - you can't just write slash in there it
03:34 - will think I mean backslash o it will
03:36 - think that must be some weird control
03:38 - character so we get an error
03:40 - I don't think backslash o is a control
03:45 - character or if it is I haven't used it
03:47 - but anyway it's not valid to just put a
03:50 - slash in by itself if you actually want
03:52 - to slash in there you have to write two
03:54 - slashes and then it works so here we've
03:57 - got to be slash or not to be okay anyway
04:01 - let's get rid of that that's that's not
04:03 - something you usually use because you
04:04 - don't normally need slashes in your
04:07 - string okay now I'm going to give you a
04:09 - little challenge let's write this in a
04:15 - comment so I'm going to put slash star
04:18 - as a multi-line comment and ends in
04:21 - slash star and this star is purely
04:23 - decorative it doesn't have to be that
04:25 - just makes you a lot nicer
04:27 - so let's imagine that we want to output
04:29 - some text on the console that looks like
04:31 - this
04:32 - so it's indented by let's say a tab and
04:35 - it says select an option :
04:42 - and then indent it a little bit more
04:46 - underneath that we're going to say 1
04:53 - what should we say add an entry to view
05:02 - the database or 3 exit so look at this
05:11 - bit of text forget about the asterisks
05:13 - they're just for decoration or because
05:15 - they're part of the comment how would
05:17 - you output this text on the command line
05:20 - so you've got four lines here and three
05:23 - of them that the first one is indented
05:25 - one tab and the others let's say they're
05:29 - going to be indented two tabs so they're
05:32 - indented one type relative to the first
05:34 - line have a go of that yourself it's up
05:37 - to you how you do it whether you store
05:40 - these lines just in one variable which
05:42 - is easiest or you put the numbers in
05:45 - there separately or whatever that's I'll
05:48 - leave that up to you if you want a
05:50 - particular particularly challenging task
05:54 - store the numbers separately so one two
05:57 - and three store those in integer type
05:59 - variables and store the rest in strings
06:02 - okay have a go at lapped us try to write
06:04 - a program that outputs this on the
06:06 - command line and if you can't do it
06:08 - don't despair
06:09 - we'll take a look at it in the next
06:11 - video