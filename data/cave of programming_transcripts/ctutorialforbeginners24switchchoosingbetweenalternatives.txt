00:00 - [Music]
00:12 - [Music]
00:18 - hello this is John from Cave of
00:21 - programming. comom in this tutorial
00:22 - we're going to look at the switch
00:24 - statement in C++ and a switch statement
00:28 - lets you choose between um various
00:31 - possible values so it's uh it's
00:34 - basically the same as if Els if else if
00:39 - else it's that kind of thing which we've
00:41 - seen before but um it's kind of a more
00:44 - elegant statement and it used to be the
00:47 - case at one point that switch was a bit
00:48 - slower than if uh else if else but now
00:53 - these days I believe it's highly
00:55 - optimized and is um often faster than um
01:00 - then using an if else else if type
01:03 - thing uh I'm not really sure about that
01:05 - and usually these kind of tiny
01:08 - differences in speed are not going to
01:09 - make any difference to you anyway but
01:12 - it's it's always nice to know that
01:13 - something's fast so let's uh declare a
01:16 - value here let's say int value equals
01:20 - let's say five and now supposing we want
01:23 - to uh take different actions depending
01:25 - on what that value is so the value could
01:28 - be like the results of some kind
01:29 - calculation in the program or it could
01:32 - be taken from user input so we're going
01:35 - to type
01:36 - switch and then we're going to have
01:37 - round brackets and we're going to have
01:40 - curly parentheses after
01:42 - [Music]
01:43 - that uh so this is a pattern that we've
01:45 - seen many times before and in here we're
01:49 - going to put the value the value that we
01:51 - want to switch on uh so we're going to
01:54 - examine this value with our switch and
01:56 - take different actions in here depending
01:59 - on what what its actual value
02:02 - is so we're going to type some case
02:05 - statements here I'm going to type case
02:08 - and then we're going to put a literal
02:10 - value in here four and then a colon I'm
02:13 - going to hit return and under that I'm
02:15 - going to type break semicolon and we'll
02:18 - see we'll see how this all works in a
02:19 - minute and in here I'm going to type c
02:22 - out value uh value is four value
02:27 - is is four
02:31 - and let's put a endler there and we can
02:34 - have multiple case statements here so
02:37 - we're only going to take this action if
02:39 - the value is four let's copy that and
02:43 - let's put another one in you can have
02:45 - whatever you like of course let's say
02:47 - five value is five let's have one
02:50 - more um six and let's say value is six
02:55 - I'll just format that with the auto
02:57 - formatter and finally we're going to
02:59 - have have default colon and under that
03:02 - we're going to have see
03:05 - out un
03:09 - recognized
03:12 - value
03:14 - endler uh so what what's going to happen
03:17 - here is that switch will examine the
03:19 - value and it's going to look at these
03:21 - case labels it's going to go down them
03:22 - one after the other and as soon as it
03:25 - finds a match it's going to execute this
03:27 - code underneath the case label and um
03:30 - and then then the program ends if none
03:32 - of these are matched it's going to do
03:35 - whatever specified in the default and
03:37 - it's going to say in this case
03:38 - unrecognized value so let's run this and
03:42 - it says value is five so it's executed
03:45 - this one if we change it to four of
03:48 - course we're going to get it's going to
03:50 - say value is four if we change it to
03:53 - something that isn't matched by any of
03:54 - these case labels let's say eight we're
03:58 - going to execute the default at the
04:00 - bottom there it's going to say
04:01 - unrecognized
04:03 - value uh so again this this you sort of
04:06 - have to type this out a few times
04:07 - yourself to really feel comfortable with
04:10 - it it looks a bit ferocious when you
04:11 - first see it but it's really not that
04:13 - bad it's just a question of uh
04:15 - remembering what bits tight were and not
04:18 - forgetting vital things like the colon
04:20 - or the or the brakes or
04:22 - whatever we don't have to have this
04:24 - default value in here if I just get rid
04:26 - of it temporarily and we run it
04:31 - then it's just not going to do anything
04:33 - because none of the case labels are
04:35 - matched but often you want um a default
04:39 - for the case where U none of your case
04:41 - labels are matched now we can um we can
04:45 - only use certain types of values in
04:48 - there um basic we haven't seen the um
04:51 - the enumerated types so far um so all we
04:55 - can really use in there from what we've
04:56 - seen so far is like integer type values
04:59 - we could the Char in there that
05:01 - shouldn't be a problem let's see what
05:03 - that does let's run it so it it still
05:07 - works if we set Char to 4 because
05:10 - although Char is intended to store byes
05:14 - or that's that's one of its
05:16 - uses value is four um Char Char is
05:20 - excuse me actually a integer
05:24 - type um as is you know long and that
05:27 - sort of thing
05:30 - um you can also missart these Brak State
05:33 - statements but it's usually a very bad
05:34 - idea because what's going to happen is
05:36 - um the switch is going to execute stuff
05:39 - it's going to as soon as it matches a
05:40 - case it's going to start executing the
05:42 - stuff below it and if you don't put
05:44 - break in uh break will actually um it
05:48 - will actually bom out of the switch it
05:49 - will actually leave this uh closing
05:53 - curly bracket and execute the stuff
05:55 - afterwards if you don't put break in
05:57 - you'll end up executing other other case
06:00 - statements so let's try this so case 4
06:02 - is going to be matched and we haven't
06:04 - got a break here it's probably going to
06:05 - warn us about that let's go to project
06:08 - build project and run this so we've got
06:13 - value is four and value is five it's
06:14 - executed this and then it's executed
06:17 - this and then it's got to a break and
06:19 - then it stopped executing stuff so
06:22 - although this is legal C++ and I have
06:25 - seen it used in production code um it's
06:28 - it's very uncommon because you almost
06:29 - always want the break in there and it's
06:31 - a bit
06:32 - confusing um if you don't have breaks in
06:35 - there so that they are important to
06:36 - remember we don't need one here after
06:38 - the default cuz that's the last item in
06:41 - the list
06:43 - anyway uh you also um beginners uh
06:47 - sometimes um try to do stuff like this
06:50 - let's say number equals
06:53 - 4 and they try to put number in here
06:56 - you're not allowed to have a variable as
06:59 - as one of the cases in your switch if
07:02 - you feel strongly that you do need that
07:05 - then you are um you're doing something
07:08 - kind of wrong and somewhat confusing and
07:11 - you want to rethink what you're doing uh
07:13 - there there's no need to use uh
07:15 - variables for your case labels and
07:18 - they're not allowed but you can use
07:20 - constant values so if you wanted to give
07:22 - each um value some specific name you
07:25 - could do that let's say const there so
07:29 - I've made this
07:30 - constant and now this is allowed if I
07:33 - save that and just build it we should
07:35 - get rid of the warnings here and it
07:38 - should execute as before so you can use
07:41 - that but you can't use variables
07:43 - constant is basically the same as typing
07:46 - a literal as far as the case is
07:48 - concerned let's let's get rid of that
07:50 - just put this back because this is
07:53 - um this this looks good okay um I think
07:58 - that's all I have to tell you about this
08:01 - uh yeah the the important things that to
08:02 - remember to break don't try to use
08:04 - variables for your for your case labels
08:06 - and it's not going to work with a string
08:07 - either it's only basically going to work
08:09 - with integer values from what we've seen
08:11 - so far at least if you want to practice
08:14 - this I'd suggest create a little program
08:16 - that outputs a menu and each item in the
08:19 - menu is numbered so just a bunch of rows
08:22 - of text and and then ask the user to
08:25 - pick a value pick a entry in the menu by
08:28 - typing the corresponding value and then
08:30 - switch on the value and then take
08:32 - different action uh depending on what
08:35 - the user has
08:37 - entered and it's always good to get
08:39 - creative if you want more practice it's
08:41 - it's really really really good to like
08:43 - make up your own little programs try try
08:45 - putting switches in loops and things
08:47 - like that um try combining it with
08:50 - previous stuff you've seen and uh try to
08:52 - write some you know even more
08:54 - complicated program and see how far you
08:56 - get that's that's fantastic practice
08:59 - okay so that's it for this tutorial and
09:02 - until next time happy
09:05 - [Music]
09:28 - coding