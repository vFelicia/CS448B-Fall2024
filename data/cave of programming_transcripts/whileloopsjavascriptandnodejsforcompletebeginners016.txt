00:00 - hello this is John from cave of
00:02 - programming calm continuing the series
00:05 - of videos in my JavaScript and node.js
00:08 - for complete beginners course in this
00:11 - video we're going to start looking at
00:12 - loops in JavaScript and we're going to
00:14 - look at the very common while loop which
00:18 - is a kind of loop so I've created this
00:20 - file while j/s and if you are a complete
00:23 - beginner this is a kind of exciting step
00:25 - because when you start using loops
00:27 - that's the point at which you really
00:29 - leverage the power of programming to
00:32 - automate things so instead of typing
00:34 - something in your code like five times
00:38 - or even 50 million times which would be
00:40 - really impossible nearly you can you can
00:45 - get the JavaScript interpreter to output
00:48 - let's say some text or to execute some
00:50 - code as many times as you want let's
00:53 - start off by writing use strict doesn't
00:56 - matter what kind of quotes I use double
00:57 - or single but I'll try to use single
00:59 - because I thought I actually think they
01:01 - look nicer in JavaScript so the first
01:06 - thing we need is a variable because so
01:09 - we're going to execute some code
01:10 - repeatedly and we need to know we need
01:13 - to keep track of how many times we've
01:15 - run that code so far so I'm going to
01:18 - create a variable called counter let's
01:21 - write let counter equal I'm going to
01:23 - initially set it to zero and then we're
01:28 - going to write while so while it's a
01:30 - keyword and after that we have a pair of
01:32 - round brackets and after that I'll put a
01:35 - space in because I think it looks nice
01:36 - and we open a curly bracket and visual
01:41 - studio code has actually put the closing
01:43 - curly bracket in for me I just hit
01:45 - return and that lines up with the left
01:47 - margin which is exactly where we want it
01:49 - so we want a construct that looks like
01:51 - this and you may recognize this to an
01:54 - extent even if you're a total beginner
01:56 - because it's it's the same as what we
01:59 - have for an if statement and as with an
02:01 - if statement we're going to put a
02:03 - condition in here and we're going to put
02:06 - some code between these curly brackets
02:08 - here these curly brackets and the code
02:11 - inside them that we're going to put
02:12 - inside them
02:13 - that's called a code block so what at
02:17 - let's suppose we want to output some
02:19 - text exactly three times we can write
02:23 - here while counter less than three and
02:26 - within the loop we're going to increase
02:29 - the value of counter so I could write
02:32 - counter equals counter plus one now this
02:38 - every time this executes it's going to
02:41 - increase the value of counter by one and
02:43 - this sometimes confuses beginners
02:46 - because it looks like we're saying
02:48 - counter is equal to counter plus one
02:50 - which seems impossible on this counter
02:54 - is infinite I suppose maybe then it's
02:56 - possible I don't know but you have to
02:58 - remember that this is the assignment
03:00 - operator what it does is it takes
03:03 - whatever is on the right hand side and
03:05 - it assigns that value will stores it in
03:09 - this variable on the left here so we're
03:12 - assigning a new value to counter which
03:15 - is equal to counter plus 1 so if counter
03:19 - is 0 then 0 plus 1 gives us 1 and it
03:23 - stores that value encounter so the new
03:25 - value of counter becomes 1 we can
03:29 - actually write this in a shorter way
03:30 - just by writing counter plus plus it
03:33 - does the same thing it increments the
03:36 - value of counter it adds 1 to it so what
03:39 - what does this whole thing do let's
03:41 - first put in some text so we can before
03:45 - we increment counter here we can put in
03:48 - as many lines of code as we want and
03:51 - they will be executed repeatedly as I
03:54 - just put in some blank lines just to
03:56 - make it a bit clearer let's write
03:57 - console dot log hello
04:02 - semicolon so the JavaScript or the
04:07 - nodejs interpreter in this case is going
04:10 - to read down so it we declare counter
04:13 - and then we hit this wild keyword and it
04:16 - says okay is this condition true if it
04:20 - is then it's going to execute whatever
04:22 - is in this code block here when it's
04:25 - finished executing it
04:27 - it's gonna go back to the beginning go
04:29 - back to the beginning go back to the
04:31 - wild keyword that is and it will ask
04:34 - again is this condition true and if it
04:37 - is it will execute the code block again
04:39 - it keeps doing that until it finds that
04:42 - the condition is false when the
04:44 - condition is false it's no longer true
04:46 - then it won't execute this it will go on
04:49 - to whatever is after that in the program
04:54 - that's right
04:55 - console dot log finished and this may
05:02 - seem confusing if you're a beginner but
05:04 - a thing is to try out and play with it a
05:06 - bit yourself so let's run it now I'm
05:09 - going to write node while j/s and we see
05:14 - we've got three hellos exactly and then
05:17 - it says finished so if you prat if you
05:20 - just practice this a little bit you
05:22 - should be able to figure out how to
05:24 - output some text exactly the number of
05:28 - times that you want notice it's not
05:30 - gonna work if we if we don't increment
05:32 - counter here that's a vital working part
05:34 - of it it's quite common to forget that
05:37 - so when you're writing while loops I
05:39 - recommend putting that in right at the
05:41 - start before you start filling in code
05:43 - that you want to execute in the loop if
05:45 - we comment this out here and I try to
05:49 - execute it I haven't actually tried this
05:52 - but let's try it then it's an infinite
05:55 - loop and I have to stop it with ctrl C
05:59 - which stops programs executing in the
06:03 - bash shell so we don't normally want
06:06 - infinite loops well we always have to
06:08 - have some way of ending the loop
06:10 - normally so you have to remember all the
06:13 - different bits of this so it can be a
06:16 - bit it can seem a bit counterintuitive
06:17 - that we sit we're saying while counter
06:20 - is less than 3 and yet we want to output
06:23 - or we want to execute whatever code is
06:26 - in here 3 times and the reason for that
06:29 - is that counter starts at 0 so we have 0
06:32 - 1 & 2 those are the iterations of the
06:35 - loop the values of the counter for those
06:38 - iterations so
06:40 - sort of show what I mean here if I write
06:42 - comic counter in console dot log so that
06:46 - we output the value of counter I'll just
06:48 - clear my console if I run that we can
06:52 - see that counter takes the value 0 1 & 2
06:56 - and then when it gets to the value 3
06:58 - this condition is false country is no
07:00 - longer less than 3 it's false so it
07:03 - doesn't execute that it just goes on and
07:06 - does the rest of the program afterwards
07:08 - as you can see so if you're a beginner
07:13 - you definitely need to practice this a
07:15 - little bit I'm going to give you an
07:17 - exercise in the next video but you have
07:19 - to pry would recommend practicing this
07:22 - before you go onto that video because
07:24 - otherwise the exercise it may be too
07:26 - hard practice it a little bit it's
07:30 - really not difficult it can look
07:31 - confusing at the start you just need a
07:33 - little bit of practice with it and you
07:36 - should be able to output whatever texts
07:38 - do you like exactly however many times
07:41 - you like okay so we'll leave it there
07:45 - for this video until next time happy
07:47 - coding