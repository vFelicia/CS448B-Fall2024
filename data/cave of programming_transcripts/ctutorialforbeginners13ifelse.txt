00:17 - hello this is John from cave of
00:20 - programming calm in this video tutorial
00:23 - in the C++ for complete beginning series
00:27 - I'm going to take a look if else and
00:30 - we're going to take a little bit of a
00:32 - further look at conditions so let's
00:36 - let's start by outputting a really
00:39 - simple menu which is a very common thing
00:42 - to do in command line programs so I'm
00:45 - going to say here C out and let's have a
00:48 - menu option so the user can enter a
00:50 - number to take some particular action
00:53 - let's say 1 and add new record or
01:01 - something like that
01:03 - endler and I want to have a bunch of
01:08 - different options so I'm just going to
01:09 - copy this to save time let's have a few
01:11 - of these and let's say we can have
01:14 - delete record and maybe view record and
01:22 - search record search record and as I've
01:27 - quit so the idea is that there's some
01:29 - kind of database and you want to search
01:31 - it and view items and delete items and
01:33 - that sort of thing and this is a menu
01:35 - that lets you do it if we look at this
01:37 - now and that should look pretty good
01:41 - that's pretty good we need to change
01:44 - these numbers here of course and one
01:48 - thing you can do in in strings and
01:50 - that's often helpful for lining stuff up
01:52 - especially if you were to put the
01:54 - numbers here at the end let's say is you
01:57 - can include a tab in a string and in C++
02:01 - and many other languages between double
02:03 - quotes you can use these things called
02:05 - and control sequences and what they look
02:10 - like
02:11 - you need a backslash it must be a
02:13 - backslash not a forward slash and then
02:16 - you have a single character like that
02:18 - and so this this actually outputs a tab
02:21 - you can also use backslash n to output a
02:25 - newline and there are other options but
02:27 - I think those are by far the most common
02:30 - and also if you want to actually output
02:33 - a double quote within double quotes you
02:36 - can use a backslash double quote to do
02:39 - that otherwise you couldn't put double
02:42 - quotes within double quotes anyway let's
02:45 - let's put some / T's in here some tab
02:47 - characters so I'm going to stick them
02:50 - all after there the numbers so this each
02:54 - one of these backslash control sequences
02:56 - they're only a single character and
02:59 - often they're invisible characters like
03:01 - a tab and so let's let's take a look at
03:04 - that so I'll run this and you can see
03:06 - now that we've got tabs there doesn't
03:09 - really look that good but I wanted to
03:10 - show you the tab anyway because often it
03:13 - is very useful let's get the selection
03:17 - from user let's say see out enter your
03:22 - selection like this and end look
03:28 - in fact let's have a flush there so they
03:30 - can enter the number on the same line as
03:32 - this and let's get that input so we've
03:35 - done this before lots of times I'm going
03:38 - to say int let's call it I just call it
03:41 - value and see in value now we want to
03:48 - take various different actions depending
03:51 - on what the user enters and of course we
03:55 - could use them if we could say if value
03:57 - equals let's say five then and let's do
04:04 - a CL let's say are you sure you want no
04:09 - let's let's not do large let's just say
04:12 - application quitting well this is a bit
04:14 - of artificial because we're not actually
04:17 - going to take any action here we're just
04:18 - going to output some text but it's um
04:22 - it's just kind of a demo so let's spell
04:26 - application correctly and I'm going to
04:28 - run this and we'll check that it works
04:30 - so if I if I run this now and if I enter
04:35 - like four or something doesn't say
04:37 - anything nothing happens because I
04:39 - haven't told it to do anything if I hit
04:41 - four if I hit five in state application
04:44 - quitting so we've seen this in the last
04:47 - tutorial the only difference was we use
04:49 - strings there but and this works very
04:51 - well with integers as well now supposing
04:57 - you want to take an action if
04:59 - something's true but and you want to
05:02 - take a different action if that thing
05:04 - isn't true so you want to choose between
05:07 - two possible alternatives let's let's
05:11 - say for example here that them we wanna
05:15 - and we want to say that the user and
05:19 - let's let's say the user has like some
05:22 - kind of privileges and certain users
05:24 - can't use these first two options so we
05:27 - want to take one and one action if they
05:30 - enter a number that's less than three
05:33 - and if it's greater than or equal to
05:35 - three then we want to
05:37 - different action so we can say if value
05:41 - and I'm going to use less than here less
05:44 - than three then we want to say see out
05:50 - in sufficient privileges to use these
05:58 - menu options by now and lo so this this
06:04 - is we read this as less than and is also
06:06 - greater than which looks like that
06:08 - what we want to use less than here now
06:10 - that the way I remember this well when
06:14 - you first start programming it's
06:15 - difficult to remember which way round
06:17 - this greater than or less than goes and
06:20 - yeah after after you've been programming
06:23 - a while you just kind of automatically
06:25 - know but and a good way to remember this
06:28 - is that the condition is true here if
06:30 - the smaller value is at the smaller end
06:33 - of this symbol and the bigger value is
06:35 - at the bigger end so this arrow is got
06:38 - like a point to a small end and it's got
06:41 - a big end the kind of prongs there and
06:43 - this condition will evaluate to true if
06:46 - the small value is at small end if value
06:48 - is smaller of the two values and at the
06:51 - big end here we have three and that also
06:53 - applies to greater than this condition
06:55 - will be true
06:56 - if value is greater and three was the
06:59 - smaller value let's use less than here
07:02 - and let's see how that works so this is
07:06 - pretty simple again so we can enter a
07:08 - number and greater than three and let's
07:12 - say six nothing's going to happen the
07:15 - value this this evaluates to false so
07:18 - value is not less than three so this so
07:22 - value less than threes is false if we
07:25 - enter a value that is less than three
07:27 - let's enter one
07:29 - then this condition evaluates to true
07:31 - and says insufficient privileges it does
07:35 - it does this now what if we want an
07:38 - alternative so we want to say okay if
07:40 - the value is less than 3 we do this but
07:42 - if it's equal to 3 or it's greater than
07:45 - 3 in other words if this is false we
07:47 - want to do something else and we can do
07:49 - that just with an ounce so immediately
07:51 - after the closing bracket if I'm going
07:53 - to type else open a new curly bracket
07:56 - like that hit return Eclipse the spot
07:58 - the closing one in for me and we can say
08:01 - see out privilege level sufficient kind
08:10 - of a strange thing to say in a program
08:12 - but just demo select let's see let's run
08:16 - that and now if we enter two let's say
08:21 - then insufficient privileges if we enter
08:24 - 3 then says privilege level sufficient
08:27 - so so this is now this is now falls
08:31 - because value is not less than 3 it's
08:34 - equal to 3 so it does the else bit of
08:37 - the F so one of these conditions is
08:39 - always going to execute it's just a
08:42 - question of which one and let's let's
08:45 - just try a bigger number than 3 we could
08:47 - enter anything really like 66 and it
08:50 - will it will do this so this is if-else
08:53 - and I want to draw your attention to the
08:56 - fact that I've indented the stuff
08:58 - between these curly brackets by a tab so
09:02 - you could write it like this where you
09:03 - could put a brackets anywhere and miss
09:06 - out tubs left right and center but it's
09:09 - really hard to read this especially if
09:11 - you have multiple lines in here so you
09:14 - should absolutely never do that wherever
09:17 - you have curly brackets code between
09:19 - curly brackets indents the code between
09:22 - them by
09:23 - tab and if you have curly brackets
09:25 - within curly brackets then the code
09:28 - between these will get indented by
09:31 - another tab so the indentation level
09:34 - Clues you in to how the code is working
09:37 - with the brackets and if you ever get
09:39 - confused you can always use a shortcut
09:42 - I think it's ctrl shift F on window is a
09:45 - command shift F on map or you can just
09:46 - right click and go - it's a bit slow go
09:51 - to source and format to note there's a
09:55 - ctrl M sequence for my map here we'll do
09:58 - that and then you can see it
10:00 - automatically indents it so this this is
10:05 - if elves and you can use it as well with
10:11 - equals equals so like you know you could
10:14 - say and if value equals equals 5 then we
10:20 - could say see out quitting and learn
10:28 - elves and the curly brackets see out
10:36 - well normally would have a loop here to
10:39 - get the option level again but let's
10:40 - just say here not quitting just for just
10:43 - a really simple slightly useless demo of
10:46 - this so let's let's run that see what
10:48 - happens so now if we say like for so
10:55 - we're going to get privilege level
10:57 - sufficient and then it says not quitting
11:00 - because this evaluates to false so we
11:04 - get this let's run it again and enter
11:06 - five so the first if now is still same
11:11 - privilege level sufficient because value
11:13 - is not less than three then it says is
11:16 - value equal to five and the answer is
11:18 - yes
11:19 - so does this bit of this if so that
11:24 - lasts basically it for this tutorial
11:26 - we've seen and we've seen greater than
11:29 - and equal to
11:30 - voicing greater than less than and we've
11:33 - seen if-else and so to practice this try
11:40 - to maybe try to write a little
11:42 - application like this output your own
11:44 - menu use some tabs in it just for a
11:47 - better practice and try to take some
11:50 - different actions depending on what
11:52 - number the user enters you can also try
11:54 - this with strings if you like the more
11:57 - practice you do the better and I don't
11:59 - like to give particular actual test
12:02 - questions because I don't think that
12:05 - that valuable myself I think it's much
12:07 - better if you make up a little program
12:09 - somehow that uses things like greater
12:13 - than or less than and
12:15 - if ELPS made one up another extra kind
12:19 - of mental stretch and making something
12:21 - of yourself so if you can't think of
12:23 - anything then just try creating this
12:25 - application something closely similar
12:27 - and if you want to get creative that's
12:30 - even better
12:31 - so that's it for this tutorial and in
12:34 - the next tutorial we're going to look a
12:36 - little bit more got one more video on if
12:38 - if elves and we're going to look at how
12:41 - you can have multiple conditions in an
12:44 - if because here clearly you actually
12:47 - want to choose between different
12:48 - specific alternatives rather than just
12:51 - looking at ranges of numbers and we're
12:53 - going to look at how you can do that in
12:55 - the next tutorial so until next time
12:57 - happy coding
13:07 - you