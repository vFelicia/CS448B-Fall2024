00:02 - hello in this video
00:03 - i just want to go over the this basic
00:06 - while loop a little bit more
00:08 - so i'm going to even i think repeat a
00:10 - little bit of what i said
00:12 - in the last video because this is really
00:14 - an important topic
00:15 - now hopefully you've tried out this code
00:18 - it's really important to do that
00:20 - and hopefully you've tried the little
00:21 - exercise i gave you
00:23 - to make the loop execute exactly five
00:26 - times
00:27 - instead of 10 times in this case or
00:31 - may execute some particular number of
00:33 - times of your choosing
00:37 - it is only with typing it repeatedly
00:40 - that you will gradually become familiar
00:41 - with it
00:42 - and yes we'll be explaining everything
00:44 - that happens here and you'll gradually
00:46 - come to understand all the all the
00:48 - individual elements of it
00:50 - much better than you currently do but
00:52 - even so it's it's important to type
00:54 - these things out
00:55 - um to sort of that will really help you
00:59 - remember them and effectively you've got
01:01 - a sort of recipe here
01:03 - so that if you want a loop that executes
01:05 - a certain number of times
01:07 - you know what to type and then um
01:10 - you don't even necessarily have to
01:12 - understand it but eventually
01:13 - certainly you will um
01:16 - so as we've seen uh we've got this while
01:20 - loop
01:20 - and it's going to execute this code
01:22 - block
01:23 - repeatedly or it it might not execute it
01:27 - at all
01:27 - if the while if the loop condition here
01:30 - is never true this will never get
01:32 - executed
01:33 - but typically we're going to execute it
01:35 - at least once and
01:36 - probably several times that's the point
01:39 - of a loop
01:40 - and after the while loop is finished
01:41 - running your code your code block
01:44 - then whatever statements are below it's
01:46 - going to carry on
01:47 - your program will carry on executing
01:48 - those and we've seen that to actually
01:50 - terminate the loot we start
01:52 - with a variable declaration and we
01:54 - assign a value to it typically zero
01:57 - and then usually
02:00 - what we do or perhaps most often is we
02:03 - say
02:04 - run this loop as long as that counter is
02:06 - less than some value
02:08 - so if i were to put five here
02:11 - this would execute this code block would
02:13 - execute exactly five
02:15 - times and um the reason is
02:19 - that uh well it's the counter starts off
02:23 - at zero
02:24 - and then this would be true for the
02:26 - values
02:27 - uh one zero one two three and four
02:30 - remember we're
02:31 - incrementing the counter increasing the
02:33 - value of it every time we go through the
02:35 - loop
02:36 - when counter is equal to five it would
02:37 - stop this is a little bit confusing
02:40 - because we're saying while counter is
02:43 - less than five
02:45 - and and yet um somehow the loop executes
02:48 - exactly five times
02:50 - and the reason is that we start at zero
02:52 - so
02:53 - uh we it executes for the value zero one
02:55 - two three four
02:56 - instead of as you might expect one two
02:59 - three four five
03:01 - uh so that's that's just a little bit
03:03 - confusing but basically if you want a
03:05 - loop that executes
03:06 - you know 63 times you'd put 63 here so
03:09 - it's pretty simple
03:10 - it's really important to type out this
03:14 - even a few times if you can be bothered
03:15 - try to type it
03:17 - from memory or by looking at the code as
03:21 - little as possible
03:23 - until you can actually write a loop
03:26 - yourself that's a good thing to do if
03:29 - you feel like looking at
03:30 - looking at it doing it i should say
03:32 - because um
03:35 - as i've mentioned a lot of learning just
03:37 - occurs with sort of almost like muscle
03:39 - memory
03:40 - just by typing it again you've got a
03:42 - little little recipe here
03:44 - for how to execute a loop a certain
03:45 - number of times
03:47 - and i know at this point if you're new
03:48 - to programming you're going to probably
03:50 - still feel a bit confused
03:52 - uh quite possibly if you don't that's
03:54 - great but
03:55 - it would be normal to still feel
03:57 - confused we're going to be looking
03:59 - at all the different elements of this
04:00 - loop in more detail and in other
04:02 - contexts
04:03 - so you'll become familiar with them but
04:05 - even if you do feel confused
04:08 - by sort of learning this as a little
04:09 - recipe then
04:12 - you've got something you can use and
04:14 - then you can improve your understanding
04:15 - of it
04:16 - as time goes by okay uh so
04:19 - one important element of this is that we
04:21 - must increment or in other words
04:23 - increase the counter as we go through
04:26 - the loop
04:27 - otherwise it otherwise this will never
04:29 - be this condition will never be false
04:32 - and the loop will go on forever we have
04:34 - to remember
04:35 - to increment it increment just means
04:39 - increase usually by one and there's also
04:43 - decrement which means decrease by one
04:45 - and we're going to be looking at those
04:48 - in this case so we've got this
04:50 - expression which
04:51 - as i've noted previously can confuse
04:54 - beginners because it looks a bit like
04:56 - a mathematical equation expressing
04:58 - equality it looks like it's saying
05:00 - counter is equal to itself plus one
05:02 - that's not what it means at all
05:04 - it's really important to realize that in
05:06 - java and a number of other programming
05:08 - languages
05:10 - a single equal sign doesn't express
05:13 - equality it expresses assignment
05:16 - it's the assignment operator and with
05:19 - the assignment operator
05:20 - is it's typically best to look at the
05:23 - right hand side first and work out what
05:26 - that
05:26 - is going to amount to and then
05:30 - that's going to get a sign to whatever
05:32 - variable is on the left hand side
05:35 - so in this case we take the variable of
05:37 - counter whatever it happens to be at
05:38 - that moment
05:39 - we add one to it and then we assign it
05:43 - or we store that value in this variable
05:46 - on the left hand side which also happens
05:48 - to be counter
05:49 - but that doesn't cause any problems so
05:51 - it's like we're taking a value of
05:52 - counter adding one to it
05:56 - and but that doesn't actually change
05:58 - counter this bit doesn't change
06:00 - counter you just you're just using the
06:02 - value of counter and adding one to that
06:04 - and that's kind of stored in a
06:06 - computer's memory temporarily
06:09 - it's it's this assignment that actually
06:11 - takes that new value
06:12 - counter plus one and then stores it back
06:16 - in counter if you are still confused
06:19 - don't worry that's normal
06:20 - uh your confusion will gradually clear
06:23 - up
06:24 - i one thing i noticed was that there's a
06:27 - um with eclipse
06:30 - i've been using um working sets which
06:33 - i don't i don't use that much to be
06:35 - honest but i thought it would make
06:36 - things less confusing here
06:38 - when i create a new project uh it
06:41 - doesn't
06:41 - it doesn't seem to automatically add it
06:44 - to the working set i think that's a
06:46 - little eclipse bug maybe it won't
06:48 - happen in your version you know because
06:50 - when i go to new java project
06:52 - there's an option there to add project
06:54 - to working sets
06:55 - and the one that i'm using is selected
06:56 - by default but even so i'm
06:59 - finding that my project ends up
07:01 - invisible
07:02 - to see it i can click this little down
07:04 - arrow
07:05 - go to window working sets then i see all
07:07 - projects
07:10 - and if i don't do like if i just stay on
07:12 - the working set i'm in
07:14 - what i've what i'm finding i have to do
07:16 - is click the down arrow
07:18 - go to um uh
07:21 - let's see yeah go to edit active working
07:25 - set
07:25 - and then i can see the project i've
07:26 - created and i can add it
07:29 - to my existing working set
07:32 - the one i'm using at the moment the
07:33 - active one uh so you
07:35 - you hopefully won't have that eclipse
07:37 - bug but if you do if you if you're
07:39 - creating projects and they don't appear
07:41 - click the down arrow and go to edit
07:43 - working set and just
07:44 - add it with the add button here okay
07:47 - we'll leave it there for this video and
07:48 - what we're going to do in the next video
07:50 - is look at various ways of
07:52 - incrementing variables because it's such
07:54 - an important topic
07:55 - we're going to be using it over and over
07:57 - again and um
08:00 - gradually i'm going to introduce you to
08:01 - things like operator precedence but sort
08:03 - of bit by bit
08:04 - this is a complicated topic and pretty
08:07 - soon we're going to get on to
08:08 - looking at other fundamental building
08:10 - blocks of computer
08:12 - programs like the if construct and uh
08:15 - other types of loop this sort of thing
08:18 - okay
08:18 - so until next time happy coding