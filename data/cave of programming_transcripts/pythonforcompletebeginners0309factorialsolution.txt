00:00 - in this video we're going to look at a
00:02 - solution to the exercise I gave you last
00:04 - time how did you do with it I think it's
00:07 - a difficult problem for a beginner so
00:11 - don't feel bad if you couldn't finish it
00:12 - hopefully after you've seen this you
00:14 - will be able to firstly let's create a
00:18 - main so we'll have def Main and let's do
00:21 - pass here for the moment and I need to
00:24 - remember to call Main then we can define
00:27 - a function factorial
00:30 - which is going to accept some value so
00:32 - I'll just call that value I'll put pass
00:35 - there now we can already call this
00:37 - function what we want to be able to do
00:40 - is collect a result from it so result
00:43 - equals factorial and pass in some value
00:46 - here like three or whatever and then we
00:48 - want to be able to say print
00:51 - result and let's print result there so
00:56 - we can break this down into two steps
00:58 - really one step is to use a loop to
01:01 - obtain the actual numbers that we want
01:04 - to multiply together and the other step
01:07 - is to add in code that can collect those
01:09 - numbers by multiplying them all together
01:13 - so firstly let's have a loop here let's
01:15 - say four I in range now what should this
01:18 - Loop
01:19 - be well let's say we pass in three then
01:22 - we want to get the numbers 1 2 and three
01:26 - so the start of the range should be one
01:29 - ex except we're going to multiply the
01:31 - numbers together and multiplying by one
01:34 - makes no difference so we might as well
01:35 - start on Two And what should the end of
01:38 - the range be well remember the end of
01:40 - the range as we specify it here will not
01:43 - include the number that I actually write
01:46 - there so I don't exactly want value I
01:49 - want value + one so if value is three
01:53 - now the end of the range will be four
01:55 - and that means we'll get the numbers 2
01:57 - three let's actually check this by
02:00 - printing out I and see what it does so I
02:02 - haven't returned anything yet just to
02:05 - make this work let's just return zero
02:07 - for the moment then I can run
02:13 - it and you can see we've got the numbers
02:15 - two and
02:16 - three let's try a different number like
02:21 - five and then we've got 2 3 4 5 so if we
02:25 - multiply those numbers together we will
02:27 - get a factorial of five
02:30 - how can we multiply them all together
02:32 - well I need a variable up here let's
02:34 - call it result and set it initially
02:37 - equal to one and down here I'm going to
02:39 - return
02:41 - result now we can use result together
02:45 - with I to calculate a new result every
02:49 - time we go around the loop so I can say
02:51 - result equals result time
02:56 - I so to a beginner this often would look
02:59 - as though it's not legitimate it looks
03:01 - like we're saying for example 4 equal 4
03:05 - * 2 which clearly isn't true but of
03:08 - course this is not an equals sign as
03:10 - such well it is an equals sign but it
03:13 - doesn't mean equals in the mathematical
03:15 - sense it is an assignment operator it's
03:18 - taking the value that we calculate here
03:21 - and assigning it to this variable and
03:24 - you can use the variable itself to
03:27 - calculate a new result which will then
03:29 - assign back to the original variable so
03:32 - I think this will actually work if we
03:34 - run it we get 120 is that correct let's
03:37 - try a smaller number let's try zero for
03:41 - a start and see if it handles zero
03:44 - remember this should be one so we do get
03:46 - one so it handles this the factorial of
03:49 - zero let's
03:51 - try
03:53 - one and that should be one two that
03:58 - should be two
04:00 - three should give us
04:03 - six that's
04:05 - right four should be well 6 * 4 is
04:10 - 24 5 should be 24 * 5 which is
04:16 - 120 and we do factorial of 6 6 *
04:21 - 120 I make that
04:25 - 720 and if we try seven
04:30 - so 7 * 720 that's
04:33 - 4,900 + 140 which is 540 so factorial 7
04:39 - is 540 that's equal to 7 * 6 * 5 * 4 * 3
04:44 - * 2 times one which makes no
04:49 - difference so I think the trickiest bit
04:51 - here is perhaps this but it is a tricky
04:54 - problem as a whole if you couldn't
04:56 - figure out how to do it I would
04:58 - recommend look at this result a little
05:00 - bit don't spend too long looking at it
05:03 - and then put this code away and try to
05:06 - write this program yourself until you
05:09 - can get it working another thing you can
05:11 - do if that's still too difficult is just
05:16 - write out this code type it all out for
05:18 - yourself believe me that will usually
05:21 - help and then once you've got it working
05:24 - put the code away and see if you can
05:26 - write it again via a combination of
05:29 - remembering what was there and figuring
05:32 - out as you go along what you should
05:34 - write at each stage now that you've seen
05:36 - how I did it if you can get to the place
05:39 - where you can write a function like this
05:41 - that calculates a factorial and you
05:44 - understand how it works then I think
05:46 - you're doing very well at this stage
05:49 - hello you've been watching a free sample
05:51 - from my Python and machine learning for
05:54 - complete beginners course I'm uploading
05:57 - enough videos from the start of the
05:58 - course to get you started with python
06:01 - and machine learning the full course is
06:03 - absolutely massive if you're interested
06:05 - in it please click the link in the
06:07 - description the complete course covers
06:10 - not only basic python but also some
06:12 - fairly Advanced python even some desktop
06:15 - programming stuff and then goes on to
06:17 - machine learning and artificial
06:19 - intelligence until next time happy
06:22 - coding