00:00 - in this video we're going to look at a
00:01 - possible solution to the exercise I gave
00:04 - you last time so I've deliberately not
00:07 - prepared for this I've not written this
00:10 - program recently anyway yet and that's
00:14 - because I want to show you how I go
00:16 - about thinking about tackling exercises
00:19 - like this this is the sort of thing that
00:22 - you could easily get asked in an
00:24 - interview for a software job at the
00:26 - entry level at least and I think a lot
00:30 - lot of people who can write computer
00:32 - programs they do have a tendency to
00:35 - freeze when they're asked to tackle
00:37 - something like this there are even
00:39 - software developers who spent a lot of
00:41 - time trying to find bugs in programs but
00:44 - they very rarely write a program
00:46 - themselves from scratch and that's going
00:49 - to put you at a big disadvantage if you
00:51 - get asked something like this on a job
00:54 - interview so I would definitely
00:56 - recommend practicing making up exercises
00:59 - like this and trying to tackle them so
01:02 - my strategy here would be read through
01:06 - the specification basically make sure I
01:08 - understand
01:10 - it and then I want to find some bit that
01:13 - I can immediately tackle and I see well
01:16 - ask the user to enter a password I can
01:19 - already do that right so let's go
01:22 - ahead so I'm going to say here pass well
01:27 - actually maybe not pass because that's a
01:29 - python key word we'll see it later on
01:31 - let's call it password equals
01:36 - input enter a enter your
01:43 - password so that bit's got to work we've
01:45 - already done that lots of times now it
01:47 - wants us to ask the user three times at
01:50 - the maximum to enter their password so
01:53 - that's a loop right let's have a
01:55 - loop for I don't think I'm going to need
01:58 - the loop variable so I'm just going to
02:00 - use underscore for underscore in range
02:03 - three that's three
02:06 - times then we do this now of
02:10 - course we could run this as someone
02:12 - who's been programming a long time I
02:14 - wouldn't bother but if I were a beginner
02:18 - I probably would run this and check that
02:20 - it actually
02:22 - works ENT your password okay yeah it
02:26 - works so far now we need to check if the
02:29 - password is correct or not so we're
02:31 - going to need some hardcoded correct
02:34 - password let's use a constant for that
02:37 - so I could call this correct password
02:40 - but I'm quite fond of having uppercase
02:43 - versions of constants that I also have
02:45 - as a variable some people would say that
02:47 - was a bad habit but let's say password
02:51 - equals hello so that's what they've got
02:53 - to enter and now we need to check this
02:56 - and how do we check things well
02:57 - typically with an if so so let's say if
03:02 - password
03:04 - equals
03:06 - password in that case it's correct and
03:09 - if it's correct we want to just
03:13 - print something like
03:16 - this and then exit so if it's correct
03:20 - let's say
03:23 - print that stuff I'll just put it in
03:28 - quotes and then we
03:30 - quit the loop right so I need break to
03:34 - stop the loop
03:36 - iterating and we can have an else
03:38 - because if they don't enter it correctly
03:40 - we want to print access denied so else
03:45 - print access
03:48 - denied so this is one way to do it now
03:51 - because I've actually remade some videos
03:54 - from the start of the course because I
03:56 - have problems with my microphone level
03:58 - being too high and getting
04:01 - Distortion it's actually now a long time
04:04 - since I wrote the original version of
04:06 - this let's take a look at the original
04:08 - version slightly different right and I
04:10 - see what I did here was I wrote the
04:13 - program so that if you enter the wrong
04:15 - password it prints incorrect password
04:18 - and then if you enter the wrong password
04:20 - three times it prints access denied so
04:24 - actually I don't think I adhered to my
04:26 - own specification very strictly the
04:28 - first time I wrote this but this is also
04:31 - a program that works it's just a little
04:33 - bit more complex than this let's try
04:36 - this
04:38 - one enter your password access denied
04:42 - enter your password access denied there
04:44 - we go and it's quit and if I enter the
04:47 - right
04:50 - password
04:51 - hello we get greetings Professor
04:57 - Falcon so this works pretty nicely if
05:00 - you were able to do this exercise then
05:02 - that's great if you weren't able to do
05:04 - it now that you've seen well two
05:07 - possible solutions this one's a little
05:09 - bit more complicated because it sets a
05:11 - Boolean variable and then after the loop
05:15 - finishes uses that to detect if the
05:18 - right password was finally entered or
05:19 - not have another go at this task put the
05:23 - code away and try it again if you
05:25 - couldn't get it the first time you tried
05:27 - it a lot of people worry that they're
05:29 - not smart enough to do computer
05:31 - programming but I think that's pretty
05:34 - rare this is something which if you keep
05:36 - practicing eventually you will get the
05:38 - hang of it if you think about the stuff
05:40 - you already got the hang of like
05:42 - speaking your own language and figuring
05:44 - out how to operate in the modern world
05:48 - all that stuff's way more complicated
05:50 - than what you have to learn to be able
05:52 - to do this sort of thing so with
05:53 - persistence you can definitely write
05:56 - programs like this and soon you'll be
05:59 - writing stuff that's way more
06:00 - complicated than this one if you keep
06:04 - practicing hello you've been watching a
06:06 - free sample from my Python and machine
06:08 - learning for complete beginners course
06:11 - I'm uploading enough videos from the
06:13 - start of the course to get you started
06:15 - with python and machine learning the
06:17 - full course is absolutely massive if
06:19 - you're interested in it please click the
06:21 - link in the description the complete
06:24 - course covers not only basic python but
06:27 - also some fairly Advanced python even
06:29 - some desktop programming stuff and then
06:32 - goes on to machine learning and
06:34 - artificial intelligence until next time
06:37 - happy coding