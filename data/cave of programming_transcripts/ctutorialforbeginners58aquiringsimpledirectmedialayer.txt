00:16 - hello this is John from cave of
00:20 - programming calm in this tutorial we're
00:22 - going to put together a very very basic
00:25 - program using the STL graphics library
00:28 - so firstly let's thus take a look at
00:32 - what STL actually is so I'll go to a
00:34 - browser here what we need for this
00:37 - program is we need a basically a games
00:41 - programming library that at least lets
00:43 - us do graphics programming and in
00:46 - particular gives us pixel level access
00:49 - so if you search for c++ game library
00:53 - there are various options that are that
00:56 - are going to come up there's there's a
00:58 - whole list of them here list of game
01:00 - engines Allegro is a good one but there
01:04 - are lots of them I'm going to use one
01:06 - called STL so you can follow these
01:09 - tutorials using any games library
01:13 - basically the less you do pixel level
01:16 - access on the screen need to be able to
01:17 - manipulate individual pixels and
01:20 - although I'm going to show you this
01:22 - example using SDL using STL - if you're
01:26 - using some other version of SDL or you
01:29 - want to use a different library I'm
01:30 - going to try to give you the right kind
01:32 - of pointers that you could do that for
01:34 - yourself with some googling and should
01:37 - just mention that learning to Google
01:40 - effectively is a really really really
01:43 - great skill to have as a programmer I
01:45 - use it constantly to look for example
01:47 - code and look for any information I need
01:50 - and if you're if you dive into Google
01:54 - very very readily then it will help you
01:58 - a lot with your programming so I'm going
02:02 - to use this sto which stands for simple
02:04 - directmedia layer and this is a very
02:06 - kind of basic C++ games programming
02:10 - library it doesn't provide you with any
02:12 - 3d facilities or anything that I know of
02:15 - and I can mention actually you could
02:18 - also use probably open G OpenGL to
02:21 - follow this tutorial I think that gives
02:23 - you pixel level access plus
02:25 - the good library to use SDL doesn't give
02:28 - you 3d facilities or anything but i like
02:30 - it because it's been stable for a long
02:31 - time and it's reliable and I've had
02:35 - quite few problems compiling this for
02:39 - every different platform that I've
02:41 - worked with well that's basically yeah
02:45 - Mac Linux and Windows I had no trouble
02:48 - no significant trouble getting STL to
02:51 - work on any of those and I have to say
02:53 - that getting trouble having trouble
02:55 - getting api's to work particularly game
02:58 - api's that's application programming
03:01 - interface by which I mean basically
03:03 - libraries it's a common experience it's
03:07 - not always easy to get them to work but
03:09 - STL is it's one of the easier ones to
03:11 - work with so I'm going to use STL two
03:14 - for this tutorial now what we need here
03:18 - are we need the header files we need
03:21 - static libraries to link our program
03:24 - with an STL also uses dynamic libraries
03:29 - which the static libraries refer to so
03:32 - we also need a dynamic library which
03:35 - would have to be distributed with our
03:36 - program it's possible apparently to
03:39 - statically link an STL program so that
03:42 - you're not using any dynamic libraries
03:45 - at all you just got one file to
03:47 - distribute but then by the license terms
03:50 - you're obligated to distribute your
03:52 - source code as well so it's that's not
03:55 - really that convenient
03:56 - so either way you can't just distribute
03:58 - one single file you've got a distribute
04:02 - at least the DLL or the third iso or
04:07 - whatever with it but anyway that's
04:09 - that's not too bad and this is a common
04:11 - situation with c++ programs which is why
04:15 - unfortunately installers are often
04:17 - necessary to distribute programs but but
04:21 - for this program that we're developing
04:22 - you only have to distribute two files so
04:24 - it's it's not too bad your program plus
04:27 - the dynamic library so what we need is
04:29 - the header files the dynamic library to
04:32 - link with and the sorry the static
04:35 - library to link with and a dynamic
04:36 - library
04:37 - that the static library actually refers
04:40 - to so that's three things that we need
04:42 - basically here now if you go to the STL
04:46 - to downloads page we've got downloads
04:52 - for windows here 32-bit and 64-bit and
04:55 - we've also got actually these is the
04:59 - runtime binary so we're going to need
05:00 - actual stuff to develop with these these
05:03 - are just the files to run your program
05:05 - so if we look at development development
05:06 - libraries we've got V we've got long for
05:09 - visual c++ for windows you've got one
05:12 - for canoe for Windows for mingw here and
05:17 - now we've got this dmg packaged for Mac
05:20 - and Mac has its kind of own system of
05:23 - packaging programs involving something
05:25 - called frameworks which I don't fully
05:27 - understand and I although in theory we
05:31 - should be able to on a map we should be
05:32 - able to create use that STL framework I
05:35 - couldn't get that to work and a lot of
05:38 - other people as well as saying there at
05:40 - the moment that program just crashes if
05:42 - they try to use this framework so what
05:44 - I've done is I've I've used the kind of
05:47 - Linux version of STL to compile this
05:51 - program because Mac is a UNIX based
05:54 - system so we can use the Linux the Linux
05:57 - version of STL to compile programs which
06:00 - I didn't have too many problems getting
06:02 - working so you need to download the
06:07 - right file for your for your platform so
06:10 - if you're using Windows either the
06:12 - visual c++ version or mingw version
06:16 - there's I don't think there's really any
06:18 - other choice for actual compilers for
06:20 - Windows they were so even if using code
06:23 - blocks you're probably using the mingw
06:25 - compiler so hopefully either of those
06:27 - will do the trick if not if you're if
06:30 - you're using some other wacky compiler
06:31 - or one that's just not used much you
06:35 - could use a different library to follow
06:37 - this tutorial you just have to Google
06:39 - for some examples on how to do pixel
06:41 - access
06:42 - pixal yeah access but hopefully you
06:47 - could figure that out and so for my mark
06:49 - i use the linux version and on linux if
06:53 - you're using linux usually linux users
06:55 - are a bit more technically adept than
06:57 - the average windows user and hopefully
06:59 - you're comfortable with doing stuff on
07:00 - the command line if not you're going to
07:03 - have to get comfortable but you can use
07:05 - I think it's got app type and get to get
07:09 - the Linux STL you're going to have to
07:11 - Google for that though and what I did on
07:13 - my Mac was I installed something called
07:16 - Mac ports so Mac ports and then I use
07:23 - that to get lib STL two very important
07:27 - you get STL - and that downloaded SDL -
07:31 - for me the sto - development libraries
07:33 - and compiled them for me
07:38 - so either way the end target here is
07:43 - that you want to end up with if you're
07:45 - on Windows you're going to need a sta
07:47 - lip or sub STL to live it's probably
07:50 - going to be called and you're going to
07:52 - need STL to DLL probably as well on UNIX
07:59 - or Linux you're gonna need the static
08:02 - live at lib probably STL to die or
08:05 - something like that and you're also to
08:08 - distribute your program you're also
08:10 - going to need live STL to die so
08:13 - probably on the Mac if you if you're
08:19 - using a Mac instead of live XYZ so
08:22 - you're probably going to have X Y Zed
08:24 - eyelid but it is the same thing as the
08:27 - star so and as the dot DLL basically
08:31 - that they're all the same thing
08:34 - so try try to get that source code
08:39 - that's the next step you need to acquire
08:40 - these files you need to have the header
08:41 - files this the static library to link
08:45 - with and the dynamic library as well
08:48 - which you'll need to distribute your
08:49 - program and fill out manner to run it
08:51 - yourself I suppose now I've done that on
08:54 - the Mac as I described I use Mac ports
08:57 - to download Lib str2 and what I ended up
09:00 - with was this and of course this this is
09:03 - not going to be the same on Windows as I
09:06 - just described but if I go to see the
09:08 - slash user slash trying to remember here
09:15 - let's have a look yeah use a local slash
09:19 - in cludes include then I've got this SDL
09:25 - to folder and if we look in there here
09:28 - are all my STL header files so you need
09:31 - all of these whatever platform you're
09:33 - working on and then if I go to slash
09:35 - user slash local slash Lib courses is
09:38 - only relevant for Linux type systems and
09:43 - I go yeah and here we've actually got
09:46 - I've actually got Lib STR to dot a
09:49 - that's my static library which would be
09:53 - called probably STL to live on Windows
09:57 - and here's my dynamic library which I
10:00 - need to destroy with my program live STL
10:02 - to die Lib if we just take a quick look
10:06 - at the Windows one because a lot of
10:08 - people use Windows of course and it will
10:13 - reassure you to see that is as I say
10:15 - let's take a look for example at there
10:17 - and mingw one here I'll just unzip this
10:20 - download that I downloaded from the STL
10:22 - page you can see you've got an include
10:24 - directory here and you need to you need
10:27 - to copy this folder just to somewhere
10:30 - where you can access it so if you have a
10:33 - folder that you normally put your
10:35 - programs in or whatever you can put it
10:37 - there doesn't matter too much as long as
10:38 - it's somewhere you can find it and we've
10:40 - got this live folder here we've got a
10:42 - target for like 64-bit machine
10:45 - and also 436 for sorry for 32-bit
10:49 - machines the reason it's called x86 is
10:52 - because of course early computers were
10:56 - called you know like 286 386 486 and so
11:00 - on and they were 32-bit machines but so
11:05 - this is actually 32-bit in spite of
11:06 - being called 86 and it's a 64-bit if we
11:10 - look in neither of those folders again
11:11 - we've gotten a dll file that's the
11:13 - dynamic library we've got the static
11:15 - library Lib and we've also got the the
11:19 - header files here so once you've got
11:23 - those you can proceed to the next step
11:27 - which actually come to think of it I'll
11:29 - put in the next video because you're
11:31 - going to want a bit of time to acquire
11:33 - these libraries download them and check
11:36 - that you've got learning everything you
11:38 - need the header files and the two kinds
11:39 - of library especially if you're using
11:41 - Linux or map because then you've got to
11:43 - probably download them and compile them
11:45 - and you need to follow just Google for
11:48 - instructions basically if you go to
11:49 - google search for stuff like you know
11:54 - compile STL Linux that sort of thing
11:58 - then you'll find various instructions on
12:03 - there and I appreciate that it's easy to
12:05 - get overwhelmed with Google results but
12:07 - this is a this is really a vital skill
12:09 - to learn because if you're going to be
12:11 - doing C++ you are going to find yourself
12:13 - wanting to use Google a lot to figure
12:16 - out problems that you've encountered
12:17 - because usually other people will have
12:20 - encountered the same problem so Google
12:23 - is a really good things start getting
12:25 - into okay so that's it for this tutorial
12:27 - in the next tutorial I'll actually use
12:29 - the stuff I've downloaded to create
12:32 - finally a basic STL program which won't
12:35 - do anything yet but we'll check that we
12:37 - can actually get a program running so
12:40 - until next time
12:49 - you