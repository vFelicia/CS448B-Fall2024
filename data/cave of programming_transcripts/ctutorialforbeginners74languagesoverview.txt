00:00 - [Music]
00:12 - [Music]
00:18 - hello this is John from Cave of
00:22 - programming. comom in this tutorial
00:24 - we're going to take a look at uh well
00:26 - we're going to have a kind of overview
00:29 - of c c C++ C Objective C and also Java
00:34 - which Java doesn't have C in the name
00:37 - but um in a way it probably should so um
00:42 - back in 1973 I don't really keep these
00:45 - facts in my head not all of them anyway
00:48 - so I've relied somewhat on Wikipedia
00:51 - here but back in 1973 um a a American
00:56 - programmer by the name of Dennis Richie
00:59 - uh C a language called C I think there
01:03 - are languages floating around called A
01:05 - and B I'm not sure about that but C was
01:08 - created and it proved to be very popular
01:11 - now C is based on functions so if you've
01:14 - been following this course on C++ You'
01:18 - you've already seen functions but we've
01:20 - seen that in C++ we can also use classes
01:24 - C doesn't use classes um it uh classes
01:28 - were later development object
01:29 - orientation was a later
01:31 - development um so they weren't um maybe
01:35 - they were around I don't know when C was
01:37 - invented but they weren't incorporated
01:39 - into C at least and C is still used
01:42 - today and there are there are various
01:44 - reasons for that one reason is that c is
01:47 - even faster than C++ because the uh
01:51 - object orientation the
01:53 - classes they add some overhead to the
01:56 - language which isn't going to make any
01:58 - significant difference from most
02:00 - programs but nevertheless C programs can
02:04 - potentially uh run faster than C++ ones
02:08 - at least under some
02:10 - circumstances but of course a major
02:12 - determinant in the speed of your program
02:14 - is just how how well written it is so
02:17 - people are still using C especially for
02:19 - very lowlevel applications like device
02:23 - drivers and stuff like that also I
02:25 - suspect if you've been writing C code
02:28 - since the 70s um you don't necessarily
02:31 - want to go on and learn C++ you want to
02:33 - carry on using what you're using so uh
02:35 - sort of tradition and inertia also come
02:38 - into it but C does still have its
02:41 - place now moving forward to
02:45 - 1979 a um Danish guy whose name I can't
02:48 - properly pronounce so I'm going to call
02:50 - him bana
02:52 - stop develop the C++
02:56 - language C++ um added on classes to C so
03:02 - it turned C into an object oriented
03:04 - language object orientation was still
03:07 - around was around previously but um it
03:10 - didn't didn't exist in
03:12 - C so he he developed C++ and it became a
03:17 - great success um these these languages
03:21 - um they're all sort of continuously
03:23 - being upgraded and developed C++ new
03:26 - standards come out and people Implement
03:29 - those new standards
03:30 - but the the original version was um uh
03:34 - based was created by this straup guy um
03:38 - whose name I'm sure I'm
03:39 - mangling and uh it was uh it was like um
03:43 - classes had basically been added to
03:46 - se now no one seems to know exactly
03:49 - quite where the name C++ came from uh
03:53 - but there is a book by the British
03:55 - author George Orwell called
03:58 - 1984 and that was written in 1948 and
04:01 - orell envisages 1984 as being a sort of
04:05 - communist um highly controlled dystopian
04:10 - Society where the government even
04:12 - controls language and in 1984 if you
04:15 - want to say something's really good you
04:17 - add plus after it so ice cream plus is
04:19 - good ice cream if you want to really
04:22 - emphasize how great something is you add
04:24 - Plus+ so ice cream Plus+ therefore
04:27 - there's this idea that um C++ maybe got
04:30 - its
04:31 - name because uh it's uh it's C++ in the
04:36 - in the lingo of 1984 of course it's also
04:39 - true that there's the increment operator
04:42 - Plus+ in C++ which we've seen in this
04:45 - course so maybe it was even a
04:47 - conjunction of these two things that
04:49 - inspired the name um a thought occurred
04:51 - to me last night while I was thinking
04:53 - about this lecture can't Banis stra
04:56 - answer this question once and for all I
04:58 - don't know I don't know who gave C++ its
05:00 - name but I've never heard anyone give an
05:02 - answer with any certainty as to where
05:04 - the name came from so C++ is C with
05:08 - classes um and uh it it kind of changes
05:13 - a lot of things in C uh but um with with
05:17 - a few minor differences you can
05:19 - generally compile a c program using a
05:22 - C++ compiler you might need to enable
05:25 - some special options there but see is is
05:27 - really kind of like a strip down version
05:29 - of
05:30 - C++ in in many
05:33 - ways um I think uh I think there are
05:36 - some there are some things in C that
05:38 - don't exist in C++ some things you can't
05:40 - do but they they're very few so whereas
05:44 - we C we're using uh functions as the the
05:47 - kind of
05:48 - organizing uh entity in our programs in
05:51 - C++ we're bundling those functions into
05:55 - classes together with data um and we're
05:58 - using those to organize
06:00 - our programs and C++ has proved to be
06:04 - extremely extremely popular of course
06:07 - which is why I've made a course on
06:10 - it now U winding forward to um 1995 Sun
06:16 - Micro Systems which is now owned by
06:18 - Oracle developed this language called
06:21 - Java a lot of people felt that C++ was
06:26 - too hard basically and not only too hard
06:29 - but it was is really easy to create bugs
06:31 - in C++ and on top of that a C++ program
06:35 - has to be
06:36 - recompiled for every new platform that
06:38 - it's going to run on so if you take a
06:41 - computer program and um you want to run
06:44 - it on a
06:45 - different platform than what you wrote
06:48 - it on like for example maybe you wrote
06:50 - it on PCS and you want to run it on
06:51 - Apple Max often you have to make code
06:54 - changes there because you're you know
06:56 - for example creating windows in
06:58 - different ways or whatever
07:00 - uh but even more than that with C++ you
07:03 - you have to actually recompile the files
07:05 - to a binary format for your new Target
07:09 - system so Java addressed some of these
07:13 - problems by Java um has uh a thing
07:18 - called a virtual machine so there's kind
07:20 - of basically a simulated computer
07:23 - running on top of your existing computer
07:26 - and that means that the the Java
07:28 - binaries
07:29 - uh the Java class files um we call them
07:32 - Java compile sort of compiles to these
07:34 - class files they run actually on the
07:37 - virtual machine the simulated computer
07:40 - not directly on your computer so that
07:44 - means you don't necessarily have to
07:46 - recompile a Java program to get it to
07:49 - run on a new
07:51 - platform um there are disadvantages of
07:54 - that as well well actually I should
07:56 - mention another big Advantage which is
07:58 - that um
08:00 - Java is much less prone to bugs than
08:02 - C++ um because the virtual machine can
08:05 - do a lot of checking it can check if you
08:06 - run off the end of an an array and Java
08:09 - has a thing called the garbage collector
08:11 - that frees memory of' allocated so you
08:13 - don't have to deallocate memory yourself
08:16 - and memory deallocation is a big source
08:18 - of bugs in C++ but then you get
08:21 - disadvantages as well like the virtual
08:24 - machine means that uh Java runs more
08:27 - slowly than C++ program of course it's
08:30 - always possible to write a really bad uh
08:33 - badly coded C++ program that runs more
08:35 - slowly than a Java program but other
08:38 - things being equal Java runs more slowly
08:40 - than C++ whether you actually notice
08:43 - that in the application that you're
08:44 - using depends of course on how many how
08:47 - how what the kind of level of demand is
08:50 - that you're pulling on your machine but
08:52 - Java is is is inherently somewhat slower
08:55 - than
08:57 - C++ um so
09:00 - we get advantages with the virtual
09:02 - machine we can just take the class files
09:04 - often and just run them on a different
09:06 - computer because that computer will have
09:08 - an implementation of the Virtual Machine
09:10 - written I guess in C++ probably um but
09:14 - and then that the actual Java class
09:16 - files they just see that virtual machine
09:18 - and um they can just run on that without
09:21 - any change but then it's it's it's it's
09:23 - slower so Java is an easier language to
09:26 - learn than C++ I would say um I've got a
09:29 - huge free course on Java at Cave of
09:32 - programming.
09:33 - comom uh and it's easier to learn and
09:37 - it's it's become very very popular
09:38 - partly because of the portability partly
09:41 - because of the um ease of use of java
09:44 - it's it's really designed um to be easy
09:47 - for the programmer to work with I did a
09:51 - search on jobs serve.com a while ago and
09:54 - I think the results was something like
09:56 - in the US I turned up um something like
10:00 - uh I think it was like maybe 3,000 jobs
10:03 - for Java at a given moment and uh
10:07 - something like 2third as many jobs for
10:10 - C++ so um Java is not replacing C++ and
10:15 - we'll go go into that a bit more later
10:17 - but it it has taken over a lot of the
10:19 - things that C++ would have been used for
10:22 - at one
10:24 - time now C was developed um by another
10:28 - Danish guy who's name I'm also going to
10:30 - horribly mangle Anders
10:33 - halsberg um uh sometime around 2000 or
10:37 - so uh he's working for Microsoft and C
10:40 - is a is a Microsoft language
10:44 - basically so again CP um I believe uses
10:48 - a kind of virtual machine uh as well so
10:52 - it's it's not the fastest language in
10:55 - the world it's not got the speed of C++
10:57 - as far as I understand
10:59 - as far as I can tell from having written
11:01 - some programs in it uh and it's closely
11:05 - associated with Microsoft it's it's
11:07 - basically used for programming Microsoft
11:11 - Windows um or it can be used to create
11:14 - uh websites as well but it's it's tied
11:17 - pretty much to Windows although people
11:20 - have implemented um the net platform for
11:25 - uh Linux for example so you can write
11:30 - you can use cop on other platforms but
11:32 - it is very closely associated with
11:34 - Microsoft um on Microsoft if you want to
11:37 - write uh C programs you can use um
11:41 - visual C and there's a visual C Express
11:44 - at the moment at least which is which is
11:46 - free but a bit
11:48 - limited especially when it comes to
11:50 - creating installers Al my information on
11:52 - that could be could be out to date there
11:55 - and um a similar IDE mono has been
11:59 - implemented for other platforms but last
12:01 - time I checked it out a couple of years
12:03 - ago it's now uh towards the end of 2014
12:07 - mono was uh kind of a bit primitive
12:10 - looking uh so if you use C sh on
12:13 - Microsoft Windows and you're happy being
12:15 - tied to Windows you can use visual C and
12:19 - it's it's a beautiful IDE to work on to
12:22 - work in you can create um programs with
12:24 - a nice visual designer it's really great
12:28 - but you're stuck with Microsoft and um
12:32 - again cuz there's like a virtual machine
12:33 - in there some kind of virtual
12:36 - machine I'm not so sure that it's so
12:39 - easy to access lowlevel facilities of
12:42 - your computer in C and again that's
12:44 - another reason why you might want to use
12:46 - C++ in uh instead and yes you've got
12:51 - some issues of slowness which won't
12:53 - necessarily be noticeable in your final
12:56 - program but they they are kind of there
13:01 - Objective C I've I've never used at all
13:04 - um so I'm relying on Wikipedia uh for
13:07 - this but apparently in the 1980s Brad
13:09 - Cox and Tom love working for um Apple
13:13 - the Apple corporation developed a
13:17 - language um that was um I believe it's
13:21 - it's again kind of based on C++ so Java
13:25 - is strongly based on C++ this is
13:27 - something I don't think I mentioned but
13:29 - should have Java looks a lot like C++
13:32 - and if you learn C++ it's not a huge
13:35 - stretch to go on and learn these other
13:38 - languages similarly as far as I know
13:40 - Objective C is also ultimately based on
13:43 - C++ and it's closely associated with
13:46 - apple again I believe there are
13:48 - implementations of it for other
13:50 - platforms but basically you can pretty
13:53 - much think that you're tying yourself to
13:55 - Apple if you use Objective C which is
13:58 - which is
13:59 - fine Objective C um I believe use uses
14:03 - some kind of
14:04 - lightweight um virtual machine but I I'm
14:08 - not going to speak much more about that
14:09 - because I don't really know I don't
14:11 - really understand Objective C I haven't
14:13 - used it um so again you may you may even
14:18 - on Apple Mac you may well want to use
14:21 - C++ for the for the speed and the power
14:25 - but it's a good choice Objective C I
14:27 - guess if you want to write um kind of
14:30 - real Apple Mac uh programs that look
14:33 - like they''re being developed for the
14:37 - Mac so now you might be wondering we've
14:40 - got Java we've got um C we've got um
14:44 - Objective C we've got lots of other
14:46 - languages that I haven't mentioned is
14:48 - C++ some kind of anachronism that is is
14:51 - it something that's just hanging around
14:53 - because um out out of inertia because
14:56 - people don't want to learn new languages
14:58 - a while whatever and the answer to that
15:01 - is emphatically no uh there are um kind
15:05 - of almost as many C++ jobs around as
15:08 - Java jobs uh less I would say but still
15:11 - a lot of jobs for
15:13 - C++ and the reason for that is that we
15:15 - just can't do without it C++ is still
15:18 - being developed uh recently we've got um
15:21 - C++ 11 I believe that was developed in
15:24 - 2011 which is why where the 11 comes
15:27 - from um in this course so far I've been
15:30 - teaching basically C++ I guess
15:32 - 98 uh from 1998 onwards C++ hasn't
15:37 - changed that much and the as far as I
15:39 - know the 11
15:42 - version uh it's not a radical overhaul
15:46 - um but C++ is being continually revised
15:48 - and it's being still used and the
15:51 - reasons for that are the ones that I've
15:53 - mentioned if you want a program that
15:55 - runs as rapidly as it possibly can and
15:58 - can access all the facilities of your
16:00 - Hardware even in ways that no one's
16:03 - thought about before perhaps even if
16:05 - you're using completely new hardware
16:07 - that you may even have just invented
16:09 - yourself with your computer and if you
16:12 - don't want to use C you want to have the
16:15 - luxury of classes and object orientation
16:17 - then you need to use
16:19 - C++ and that's that's not looking like
16:23 - it's going to change anytime soon uh
16:26 - very high-end games are usually written
16:28 - in C++ very very powerful intive in
16:32 - Innovative artificial intelligence
16:34 - programs are Li liable to be written in
16:36 - C++ because um anywhere where you need
16:39 - to squeeze as much power out of your
16:41 - computer as possible anywhere where
16:43 - you're at The Cutting Edge of um
16:46 - software development you're going to
16:48 - think about using C++ it gives you that
16:52 - power it gives you that speed so C++ is
16:55 - well worth learning okay it's it's
16:57 - difficult uh but then an advantage of
17:00 - that is when you've learned it other
17:02 - languages sort of seem easy yes to learn
17:05 - Java after C++ requires certainly some
17:08 - effort you're going to have to put some
17:10 - effort in there to learn new syntax but
17:13 - um these other languages as we've seen
17:15 - are heavily based on
17:17 - C++ and um they're all I would say um
17:21 - kind of easier the ones I've used at
17:23 - least than
17:25 - C++ so U for all these reasons C++ is a
17:29 - very great and important language to
17:31 - learn and it's going to be
17:32 - important I suspect for a very long time
17:36 - into the Future Okay so that's it for
17:38 - this tutorial if you've been following
17:41 - this course so far and planning to add
17:43 - probably probably just one more video
17:46 - and if you have followed this course
17:47 - from the beginning uh this is a free
17:50 - course on C++ or if you're watching on
17:54 - um UD demio somewhere in the future I
17:56 - may well have bundled this with a more
17:58 - advanced course to create one massive
18:01 - non-free course um but if you followed
18:03 - it from the beginning then um yeah big
18:08 - congratulations uh and uh we're going to
18:10 - kind of wind up this course in the next
18:14 - tutorial so um I I've I've given you an
18:17 - overview here but I don't have an
18:19 - in-depth knowledge about how all these
18:21 - different languages work I Feel On Solid
18:23 - Ground pretty much with Java and uh C++
18:27 - but C sharpen stuff my knowledge is less
18:30 - good so if I've said anything in this
18:31 - video that jars with conflicts with what
18:34 - you already know it's quite possible
18:36 - that I'm just wrong but this this I
18:38 - think this is um basically a reasonable
18:41 - overview uh for someone who um uh is
18:45 - just wondering what the heck all these
18:46 - different languages are Okay so until
18:49 - next time happy coding
18:53 - [Music]