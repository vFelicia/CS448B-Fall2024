With timestamps:

00:00 - there are three ways to execute your
00:02 - JavaScript code the simplest way to
00:05 - start writing JavaScript is directly
00:07 - into the browser and this is possible
00:10 - because all modern browsers are able to
00:13 - interpret JavaScript and compare it with
00:16 - so-called developer tools so open either
00:18 - Firefox or Chrome browser if you don't
00:21 - have them you can just download them
00:23 - open a new tab and right-click and
00:26 - choose inspect and this will open this
00:31 - section which is called developer tools
00:34 - and here's the tab called console and if
00:36 - you open that and we can clear that with
00:39 - this button this is a place where you
00:43 - can write JavaScript directly and the
00:46 - browser will interpret and execute your
00:49 - JavaScript code right here so you don't
00:52 - have to setup anything and this is the
00:53 - easiest way to start especially if you
00:56 - want to try out some simple commands so
00:58 - let's actually write some JavaScript
01:00 - code there so you can create variables
01:03 - here or you can do some calculations and
01:08 - you can add number 1 and number 2 etc so
01:12 - you can do many things here however if i
01:15 - refresh the page of course all the code
01:18 - will be gone and also you can execute
01:21 - only one command at a time and usually
01:24 - when you're developing you want to save
01:27 - that code and execute the whole thing at
01:29 - once and not have it disappear every
01:31 - time you refresh the browser so for that
01:34 - you need to write JavaScript in a file
01:35 - and then give that file to browser in
01:38 - order to execute the code inside and the
01:42 - file that browser accepts to execute
01:44 - JavaScript code is HTML you can check
01:48 - out my other video where I explain
01:49 - exactly HTML CSS and JavaScript but
01:53 - since I just want to show JavaScript
01:55 - code execution here I'm gonna create a
01:57 - basic HTML outline so that our browser
02:01 - can execute the JavaScript code so how
02:04 - can I write the HTML file with
02:05 - JavaScript code in an editor so if you
02:09 - are on Windows you may have a notepad a
02:11 - simple text editor
02:13 - or I on make have a text edit and I can
02:16 - create a new document if I open that I
02:19 - can write just normal text here so I'm
02:22 - gonna write some simple HTML tags I'm
02:25 - gonna create a separate video where
02:27 - explain the HTML syntax but here we just
02:30 - leave it at the basics so maybe you're
02:33 - wondering if I'm writing HTML in the
02:35 - same edit or where I would write normal
02:37 - text how does browser know that it's an
02:41 - HTML file well when you save the file
02:44 - instead of text document I'm gonna
02:46 - choose HTML so dot HTML extension and
02:50 - I'm gonna call this Val index which is a
02:51 - standard or common name for the main
02:54 - HTML file so when I save this you also
02:58 - see the icon that has chrome logo in it
03:01 - or maybe some other browser logo that
03:03 - means it's a browser executable and
03:06 - since this is just HTML in order to add
03:09 - JavaScript code I'm gonna add take
03:11 - called script that's where JavaScript
03:14 - goes and and this is a part where we'd
03:18 - write all the JavaScript code so for
03:21 - example here I can create a variable
03:23 - called some name and so on now I said
03:30 - you can write the whole HTML and
03:31 - JavaScript in here but the problem with
03:34 - using the simple editor is that they
03:37 - don't help you in writing code so here
03:40 - you see they don't highlight the
03:42 - keywords they don't tell you you made a
03:44 - syntax error or any other tips so for
03:47 - example in browser when we wrote var
03:49 - name some name you get the highlighting
03:54 - of the keyword of the variable name of
03:56 - the data type for example if you have a
03:58 - number it has a different highlighting
04:01 - etc so you don't have any of that in
04:04 - simple editor and it also looks pretty
04:07 - ugly
04:08 - so instead there's special editors for
04:10 - different programming languages that
04:12 - help you with highlighting and other
04:15 - features to write the code and there's
04:17 - special editors to write HTML and
04:19 - JavaScript code one that I personally
04:22 - recommend is Visual Studio code it's
04:25 - free and you can download it very easily
04:27 - and you'll be set to start coding I'll
04:29 - put the link of Visual Studio code and
04:33 - browser download links in the
04:35 - description so you can quickly access
04:37 - them I already have Visual Studio code
04:39 - downloaded so I can just open it and
04:42 - this is the view so you can either
04:43 - create a new file here or you can open
04:46 - an existing one and edit them here so
04:50 - we're just gonna copy the contents of
04:52 - the index.html and we're gonna paste
04:56 - them here and if I save that and I'm
05:00 - gonna save it in the same destination
05:03 - and in the file name I'm gonna write the
05:05 - extension as well so I'm gonna replace
05:08 - the existing one and here you see the
05:10 - highlighting and you also see that I get
05:12 - my first error that is complaining about
05:14 - the quotes because the quotes from the
05:17 - simple edit or where ron's i'm going to
05:20 - delete them and write like this and this
05:23 - special editors have many different
05:26 - features and shortcuts that help you in
05:28 - programming so especially if you are a
05:30 - beginner you're gonna need that and this
05:33 - is the absolutely minimum required HTML
05:37 - contents in order for the browser to
05:40 - accept this so we can actually get
05:42 - started with it and write javascript
05:44 - already inside of course in reality it's
05:47 - not going to look like this but this is
05:49 - good for starting and to execute that
05:53 - index.html that we just wrote is
05:55 - actually super simple either you go to
05:57 - the file just drag and drop it on to the
06:00 - browser window and it loads it or you
06:03 - can simply go and double click on that
06:06 - index.html file and execute the script
06:08 - now we don't see anything because we
06:10 - haven't created any content in order to
06:13 - make sure that our file is working let's
06:16 - actually add something that we are gonna
06:19 - see which is console.log this is
06:23 - basically a command that prints whatever
06:27 - we provide here in the console the
06:29 - console where I showed you how to write
06:32 - JavaScript directly we can actually
06:34 - print out to it from our script so I'm
06:37 - gonna save this and go back to the
06:39 - browser and I am supposed to
06:41 - that message right here right now when
06:44 - whenever you make changes to your file
06:47 - you don't have to go back and double
06:50 - click or drag and drop it again because
06:53 - your browser already has the location of
06:56 - that file right here so it knows where
06:59 - the file is located so if i refresh this
07:01 - it will go and find that file again go
07:04 - through the contents again and show any
07:07 - changes so it printed our message here
07:09 - so after every change you can just
07:11 - refresh it okay so I showed you two ways
07:13 - to write an execute JavaScript code and
07:16 - the third way is instead of writing the
07:20 - JavaScript here creating its own
07:23 - JavaScript file and then linking that
07:25 - file inside the HTML so how it's gonna
07:28 - work is I'm gonna create a new file here
07:30 - and I'm gonna copy everything inside the
07:35 - script tags to that file so like this
07:40 - and I'm gonna save this as f dot J's so
07:47 - see the extension here is dot J s not
07:49 - HTML so it's gonna be a separate
07:52 - javascript file and F is again just some
07:55 - standard naming for the main JavaScript
07:58 - so I'm gonna save that and again I see
08:00 - my highlighting here and in this editor
08:04 - also I see the type of file that I'm
08:07 - editing so now in order to link the
08:11 - contents in this file inside the HTML
08:14 - you do that using the script tag but
08:17 - instead of writing anything inside that
08:19 - text we actually leave this empty and
08:22 - right here we're gonna write source
08:25 - double quotes and file name of the
08:29 - JavaScript that we want to link so I'm
08:32 - gonna write a dot J's here and this is
08:36 - just the syntax in HTML so now when I
08:39 - save this and go back to my file and
08:42 - refresh this I should see the same
08:45 - message so just to be sure
08:47 - so some message
08:52 - javascript file so save it again refresh
08:57 - and you see the changes so this is a
09:01 - third way to write an execute JavaScript
09:04 - and before I in this video there are two
09:07 - important things to understand the first
09:09 - one is that in real projects you have
09:12 - many files so you have multiple
09:15 - JavaScript files you have multiple CSS
09:18 - files and all these files belong to one
09:21 - project so how it works is usually you
09:24 - create a dedicated folder to group all
09:27 - these files together so for example
09:30 - somewhere on your filesystem you would
09:33 - create a new folder you would create you
09:35 - would call it the project name my
09:38 - project and you would put all your
09:42 - project files inside that folder and
09:44 - here you would have let's say another
09:47 - JavaScript file or a CSS file so when
09:51 - you have a big application obviously
09:53 - your code your HTML and JavaScript code
09:57 - will be much more than what we saw in
09:59 - this simple example so for example you
10:01 - would have a main javascript and then
10:04 - you would have own javascript file for
10:06 - the login code you would have own
10:09 - javascript file for the register code
10:11 - for the profile section etc you end up
10:14 - with multiple files each one containing
10:17 - hundreds of lines of code so inside of a
10:20 - project you create this here key where
10:23 - you group your files logically or per
10:26 - file type or in any other way so for
10:29 - example if I create it here and move
10:31 - another folder in I call it JavaScript I
10:34 - could put all my JavaScript files inside
10:39 - so I have index yep
10:41 - CSS an own JavaScript folder for all the
10:45 - JavaScript files so now that I have
10:48 - restructured or rearranged the locations
10:52 - of the files and go back and refresh
10:55 - it's not gonna work anymore because the
10:58 - file locations are wrong and that's the
11:00 - second point that I wanted to mention is
11:02 - that the locations
11:04 - where the files are living or files
11:07 - exist is very important in programming
11:10 - because everything is so linked you have
11:13 - to make sure the locations are correctly
11:16 - set so for example this location or also
11:19 - called path to the file is wrong because
11:22 - we moved index.html into a my project
11:25 - folder inside the demo project right so
11:29 - either you can again double click this
11:31 - and reopen the correct file or you can
11:34 - also adjust the location right here so
11:38 - we can actually do that my project but
11:43 - this will not work because we also
11:46 - change the location of JavaScript file
11:49 - before it was in the same folder as
11:53 - index.html so we could just provide the
11:57 - name of the file but this value here is
12:00 - actually the location of JavaScript file
12:03 - otherwise how would index.html know
12:06 - where to find that file it could be
12:08 - anywhere in the file system right so we
12:10 - have to tell it exactly where that app
12:12 - J's file is so now if you go back here
12:15 - you see that this is index.html in our
12:19 - JavaScript our app J's is inside
12:22 - JavaScript folder so I'm gonna add that
12:26 - folder path here and with slashes
12:29 - basically you separate the folders so
12:33 - inside JavaScript folder there's M J's
12:36 - file go and find it and note that I
12:40 - don't have to provide the whole path is
12:42 - here I just have to provide the location
12:45 - relative to the index.html file right so
12:50 - starting from this location where is
12:53 - that JavaScript file so if I go back and
12:55 - refresh this it's gonna work again and
12:58 - as I mentioned file locations and
13:01 - linking the files correctly using that
13:04 - location is very important concept in
13:07 - programming and understanding that will
13:09 - help you a lot at the beginning and the
13:12 - location is also important inside the
13:15 - editor because if I go here you see the
13:19 - my editor cannot find FJs deleted from
13:22 - disk because I moved that file so it's
13:25 - also important to update the editor and
13:27 - give it the new location of the file so
13:30 - to do that you can simply close the old
13:32 - one and then reopen the new file so that
13:40 - editor knows the location of the new
13:42 - file so to summarize you can execute
13:45 - JavaScript either directly in the
13:47 - console or you can write it inside the
13:51 - script tags in index.html file or you
13:55 - can link it as an external file again
13:59 - using script tags but defining source
14:01 - which points to the location of where
14:04 - the JavaScript file is located and this
14:06 - is especially important when you have
14:08 - HTML file that has 100 lines and
14:12 - JavaScript that has also hundred 200
14:14 - lines you want to keep things clearly
14:16 - separated so that you don't end up with
14:19 - one file that has a bunch of code just
14:22 - mixed in from HTML and JavaScript and
14:24 - CSS
14:25 - thank you for watching let me know in
14:27 - the comments if you have any questions
14:28 - and I'll see you in the next video

Cleaned transcript:

there are three ways to execute your JavaScript code the simplest way to start writing JavaScript is directly into the browser and this is possible because all modern browsers are able to interpret JavaScript and compare it with socalled developer tools so open either Firefox or Chrome browser if you don't have them you can just download them open a new tab and rightclick and choose inspect and this will open this section which is called developer tools and here's the tab called console and if you open that and we can clear that with this button this is a place where you can write JavaScript directly and the browser will interpret and execute your JavaScript code right here so you don't have to setup anything and this is the easiest way to start especially if you want to try out some simple commands so let's actually write some JavaScript code there so you can create variables here or you can do some calculations and you can add number 1 and number 2 etc so you can do many things here however if i refresh the page of course all the code will be gone and also you can execute only one command at a time and usually when you're developing you want to save that code and execute the whole thing at once and not have it disappear every time you refresh the browser so for that you need to write JavaScript in a file and then give that file to browser in order to execute the code inside and the file that browser accepts to execute JavaScript code is HTML you can check out my other video where I explain exactly HTML CSS and JavaScript but since I just want to show JavaScript code execution here I'm gonna create a basic HTML outline so that our browser can execute the JavaScript code so how can I write the HTML file with JavaScript code in an editor so if you are on Windows you may have a notepad a simple text editor or I on make have a text edit and I can create a new document if I open that I can write just normal text here so I'm gonna write some simple HTML tags I'm gonna create a separate video where explain the HTML syntax but here we just leave it at the basics so maybe you're wondering if I'm writing HTML in the same edit or where I would write normal text how does browser know that it's an HTML file well when you save the file instead of text document I'm gonna choose HTML so dot HTML extension and I'm gonna call this Val index which is a standard or common name for the main HTML file so when I save this you also see the icon that has chrome logo in it or maybe some other browser logo that means it's a browser executable and since this is just HTML in order to add JavaScript code I'm gonna add take called script that's where JavaScript goes and and this is a part where we'd write all the JavaScript code so for example here I can create a variable called some name and so on now I said you can write the whole HTML and JavaScript in here but the problem with using the simple editor is that they don't help you in writing code so here you see they don't highlight the keywords they don't tell you you made a syntax error or any other tips so for example in browser when we wrote var name some name you get the highlighting of the keyword of the variable name of the data type for example if you have a number it has a different highlighting etc so you don't have any of that in simple editor and it also looks pretty ugly so instead there's special editors for different programming languages that help you with highlighting and other features to write the code and there's special editors to write HTML and JavaScript code one that I personally recommend is Visual Studio code it's free and you can download it very easily and you'll be set to start coding I'll put the link of Visual Studio code and browser download links in the description so you can quickly access them I already have Visual Studio code downloaded so I can just open it and this is the view so you can either create a new file here or you can open an existing one and edit them here so we're just gonna copy the contents of the index.html and we're gonna paste them here and if I save that and I'm gonna save it in the same destination and in the file name I'm gonna write the extension as well so I'm gonna replace the existing one and here you see the highlighting and you also see that I get my first error that is complaining about the quotes because the quotes from the simple edit or where ron's i'm going to delete them and write like this and this special editors have many different features and shortcuts that help you in programming so especially if you are a beginner you're gonna need that and this is the absolutely minimum required HTML contents in order for the browser to accept this so we can actually get started with it and write javascript already inside of course in reality it's not going to look like this but this is good for starting and to execute that index.html that we just wrote is actually super simple either you go to the file just drag and drop it on to the browser window and it loads it or you can simply go and double click on that index.html file and execute the script now we don't see anything because we haven't created any content in order to make sure that our file is working let's actually add something that we are gonna see which is console.log this is basically a command that prints whatever we provide here in the console the console where I showed you how to write JavaScript directly we can actually print out to it from our script so I'm gonna save this and go back to the browser and I am supposed to that message right here right now when whenever you make changes to your file you don't have to go back and double click or drag and drop it again because your browser already has the location of that file right here so it knows where the file is located so if i refresh this it will go and find that file again go through the contents again and show any changes so it printed our message here so after every change you can just refresh it okay so I showed you two ways to write an execute JavaScript code and the third way is instead of writing the JavaScript here creating its own JavaScript file and then linking that file inside the HTML so how it's gonna work is I'm gonna create a new file here and I'm gonna copy everything inside the script tags to that file so like this and I'm gonna save this as f dot J's so see the extension here is dot J s not HTML so it's gonna be a separate javascript file and F is again just some standard naming for the main JavaScript so I'm gonna save that and again I see my highlighting here and in this editor also I see the type of file that I'm editing so now in order to link the contents in this file inside the HTML you do that using the script tag but instead of writing anything inside that text we actually leave this empty and right here we're gonna write source double quotes and file name of the JavaScript that we want to link so I'm gonna write a dot J's here and this is just the syntax in HTML so now when I save this and go back to my file and refresh this I should see the same message so just to be sure so some message javascript file so save it again refresh and you see the changes so this is a third way to write an execute JavaScript and before I in this video there are two important things to understand the first one is that in real projects you have many files so you have multiple JavaScript files you have multiple CSS files and all these files belong to one project so how it works is usually you create a dedicated folder to group all these files together so for example somewhere on your filesystem you would create a new folder you would create you would call it the project name my project and you would put all your project files inside that folder and here you would have let's say another JavaScript file or a CSS file so when you have a big application obviously your code your HTML and JavaScript code will be much more than what we saw in this simple example so for example you would have a main javascript and then you would have own javascript file for the login code you would have own javascript file for the register code for the profile section etc you end up with multiple files each one containing hundreds of lines of code so inside of a project you create this here key where you group your files logically or per file type or in any other way so for example if I create it here and move another folder in I call it JavaScript I could put all my JavaScript files inside so I have index yep CSS an own JavaScript folder for all the JavaScript files so now that I have restructured or rearranged the locations of the files and go back and refresh it's not gonna work anymore because the file locations are wrong and that's the second point that I wanted to mention is that the locations where the files are living or files exist is very important in programming because everything is so linked you have to make sure the locations are correctly set so for example this location or also called path to the file is wrong because we moved index.html into a my project folder inside the demo project right so either you can again double click this and reopen the correct file or you can also adjust the location right here so we can actually do that my project but this will not work because we also change the location of JavaScript file before it was in the same folder as index.html so we could just provide the name of the file but this value here is actually the location of JavaScript file otherwise how would index.html know where to find that file it could be anywhere in the file system right so we have to tell it exactly where that app J's file is so now if you go back here you see that this is index.html in our JavaScript our app J's is inside JavaScript folder so I'm gonna add that folder path here and with slashes basically you separate the folders so inside JavaScript folder there's M J's file go and find it and note that I don't have to provide the whole path is here I just have to provide the location relative to the index.html file right so starting from this location where is that JavaScript file so if I go back and refresh this it's gonna work again and as I mentioned file locations and linking the files correctly using that location is very important concept in programming and understanding that will help you a lot at the beginning and the location is also important inside the editor because if I go here you see the my editor cannot find FJs deleted from disk because I moved that file so it's also important to update the editor and give it the new location of the file so to do that you can simply close the old one and then reopen the new file so that editor knows the location of the new file so to summarize you can execute JavaScript either directly in the console or you can write it inside the script tags in index.html file or you can link it as an external file again using script tags but defining source which points to the location of where the JavaScript file is located and this is especially important when you have HTML file that has 100 lines and JavaScript that has also hundred 200 lines you want to keep things clearly separated so that you don't end up with one file that has a bunch of code just mixed in from HTML and JavaScript and CSS thank you for watching let me know in the comments if you have any questions and I'll see you in the next video
