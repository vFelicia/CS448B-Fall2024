With timestamps:

00:00 - if you want to finally understand how
00:02 - the seemingly mysterious thing called
00:04 - web development works and get an insight
00:07 - into the IT world without being
00:09 - overwhelmed by all these technical
00:11 - Woodward's then this is the perfect
00:14 - video for you in this video I'm gonna
00:16 - explain to you in a very simple language
00:18 - how web and web applications work and
00:21 - how all these technologies that you've
00:23 - heard about like JavaScript Java
00:26 - databases etc fit in the whole picture
00:29 - imagine this scenario you wake up in the
00:31 - morning get your coffee open your laptop
00:34 - and open Facebook in your browser so
00:36 - let's pause there what happened when you
00:38 - typed in Facebook in your browser and
00:40 - you saw a fresh new feed with all the
00:43 - new stuff that has happened while you
00:45 - were asleep what happened there in the
00:47 - background
00:48 - technologically so Facebook is an
00:50 - application that some developers sitting
00:52 - mostly in California are developing and
00:54 - these guys and gals are writing a bunch
00:57 - of code and all the code that makes up
00:59 - Facebook leaves in California so what
01:03 - happens when you open facebook on your
01:05 - laptop is that part of that code that
01:07 - lives in California travels all the way
01:11 - to your laptop to your location and ends
01:14 - up temporarily living on your laptop
01:17 - that's why sometimes when you refresh
01:20 - and see a blank page or loading and you
01:23 - become annoyed because you can't see
01:25 - your feed within three seconds that's
01:27 - when all the data is coming or traveling
01:30 - from somewhere to your laptop so it may
01:34 - meet some time so how does that travel
01:37 - there are internet cables everywhere in
01:39 - the world actual physical cables that
01:42 - let electricity travel through from one
01:45 - place in the world to another and so
01:48 - everything is connected everywhere so
01:50 - that's why some remote places in Africa
01:54 - or Asia where there's no internet and
01:56 - you're wondering wow like how is this
01:58 - possible now internet that's super crazy
02:00 - but that's pretty simple because nobody
02:03 - built those internal cables near those
02:06 - areas because it wasn't worth it
02:08 - so no internet now if you think about it
02:11 - it would be super inefficient if every
02:13 - time
02:13 - in Europe opened Facebook and all the
02:16 - data needed to travel to these places
02:18 - all the way from California so Facebook
02:21 - has built locations evenly distributed
02:24 - all around the world that store part of
02:27 - the code and data that doesn't change
02:29 - much so it can get to you much faster
02:31 - back to that part of code that just
02:34 - traveled to you that's HTML CSS in
02:37 - JavaScript so what are these when you
02:39 - see a website that just looks ugly so we
02:42 - just text no fun colors no styling
02:45 - that's a naked HTML it's necessary but
02:49 - no one wants to see some plain ugly text
02:52 - without any styling so what makes the
02:55 - text pretty and it colors and some fun
02:58 - to it is CSS it's like flesh on a
03:01 - skeleton now you have a flesh that looks
03:03 - good but it doesn't do anything it
03:05 - doesn't move it doesn't talk doesn't
03:07 - respond you can interact with it and
03:09 - it's the same way with HTML plus CSS
03:12 - page typical use cases are visit card
03:15 - websites where you can read text
03:17 - displayed in nice style but you can't
03:20 - leave a comment you can send a message
03:22 - you can do anything with the website so
03:25 - all that action comes purely from
03:27 - JavaScript so you want to upload a photo
03:30 - on Facebook
03:31 - that's JavaScript you want to send a
03:33 - message through messenger that's
03:34 - JavaScript you want to like your friends
03:37 - picture or leave a comment all
03:38 - JavaScript so everything that you
03:41 - interact with in the UI which stands for
03:43 - user interface is through JavaScript and
03:47 - the combination of these three HTML CSS
03:50 - and JavaScript is called
03:52 - front-end it's the Facebook code that
03:55 - everyone sees so it's in the front and
03:58 - as I said all these three files leave on
04:02 - your laptop when you open facebook so
04:04 - you can see and even edit them so I
04:07 - could go and change Facebook style like
04:10 - this and this won't affect anyone else
04:12 - in the world since everyone has their
04:15 - own copy of these files on their laptops
04:17 - but there is another part of the code
04:20 - that doesn't travel to you the back end
04:23 - code that is in the back and no one can
04:25 - see so you may be now
04:27 - wondering if I can do anything in front
04:29 - end like upload images message someone
04:33 - leave a comment like what's the
04:35 - back-and-forth what does it do well when
04:38 - you upload a picture on Facebook you
04:40 - surely want your friends to see that too
04:42 - or when you message someone you want to
04:44 - keep a history of these messages that
04:46 - means you want all these data to persist
04:49 - in other words the data to be saved over
04:52 - time now if javascript only lives on
04:54 - your laptop it wouldn't make sense to
04:57 - just have that photo only locally on
04:59 - your computer that's where the beckon
05:01 - comes in so what happens is that
05:03 - javascript takes that image that you
05:05 - uploaded puts it in an envelope and
05:07 - hands it over to internet saying hey can
05:10 - you deliver this to back-end at this
05:13 - specific location so now we can follow
05:16 - this delivery all the way to the backend
05:18 - and see what happens there or what what
05:21 - does back and do when it gets that image
05:24 - now back in code can be written in Java
05:27 - Python PHP or even Java Script so there
05:32 - are different technologies that you can
05:34 - use to write all that back in part of
05:36 - the code so let's say in our example
05:38 - it's Java so what does Java do it checks
05:42 - and examines the photo it sees is it a
05:44 - valid delivery there's no threat no
05:46 - danger I know the sender I trusted so
05:50 - I'll open the envelope since everything
05:52 - is fine and hands it over to database to
05:56 - save it for later so database is like a
06:00 - warehouse it's a big space where you can
06:02 - keep all the images messages likes
06:05 - comments that different users are
06:06 - producing it's all in there
06:09 - so to have a more specific understanding
06:11 - let's actually see how the location
06:14 - where back-end code and database leave
06:18 - quote-unquote actually look like so as I
06:21 - mentioned before Facebook has all these
06:23 - buildings distributed all around the
06:25 - world actual physical buildings with
06:28 - servers inside and I don't know what you
06:30 - imagine when you think about servers but
06:33 - whatever it is it's probably not very
06:35 - close to reality so let me show an
06:37 - example of a server building of a
06:40 - typical big company
06:41 - like Facebook so it's a location where
06:43 - machines they're interconnected with
06:47 - each other are running 24/7 in order to
06:50 - make sure that Facebook or this
06:52 - application is available for everybody
06:55 - in the world all the time and that's
06:58 - where beckon code and database actually
07:01 - leave so that's where all the magic
07:04 - happens so when that envelope gets
07:06 - delivered to your back-end that's where
07:08 - it ends up so the address that it sent
07:11 - to is one of those machines in among
07:15 - these hundreds or thousands of machines
07:17 - that will take your image validated and
07:21 - then save it into a database so it
07:23 - happens all inside there so now consider
07:27 - your friend logs into Facebook on our
07:29 - computer same way front-end code travels
07:32 - to her laptop along with new data like
07:35 - images messages from friends etc all
07:38 - coming from this servers so how does
07:41 - Facebook know what data you should see
07:43 - on your newsfeed now in the database
07:45 - warehouse Facebook creates isolated
07:48 - spaces for each user with their personal
07:51 - data images etc and obviously on
07:54 - Facebook you want to have some privacy
07:56 - meaning you want only a friends to see
07:59 - your posts so Facebook creates
08:02 - connections in the database between
08:04 - users that are friends and that's how
08:07 - Facebook decides what information to
08:09 - send to a user when they log into the
08:12 - application
08:13 - along with new data like images and
08:16 - messages from friends including the
08:18 - image that you just uploaded all coming
08:21 - from the servers so to summarize a web
08:24 - application is always made up of three
08:26 - components you have a front-end code
08:29 - back-end and database front-end is what
08:32 - you see and interact with in your
08:34 - browser in the user interface of the
08:37 - application back-end is the code that
08:39 - waits for new messages from front-end
08:42 - about the changes you make like new
08:44 - uploads new messages likes and handles
08:47 - them and database is where all these
08:50 - changes are stored for future usage like
08:53 - when you come back the next stage
08:55 - to use the application or when your
08:56 - friend opens the application most of the
08:59 - applications are written by teams of
09:01 - developers and not just a single
09:04 - developer and there are a lot of
09:06 - developers that are full stick meaning
09:08 - they know all three they can work with
09:11 - front-end back-end and database however
09:13 - each of these three areas alone is its
09:17 - own IT field so some developers actually
09:21 - choose to specialize in just one area
09:24 - and become for example a front-end
09:26 - developer so in big companies like
09:28 - Facebook you would have teams with
09:31 - specialized front-end developers
09:33 - back-end developers and database
09:34 - developers so what this means for you is
09:37 - that if you're just starting off as a
09:40 - web developer or you are thinking about
09:42 - becoming a web developer you should
09:44 - choose just one of these three areas as
09:47 - a starting point learn it well and then
09:50 - move on to other technologies and a good
09:52 - starting point is usually front-end
09:54 - because it's more visual and you can see
09:57 - the results immediately
09:59 - having said that I'm starting a
10:01 - JavaScript tutorial series for beginners
10:03 - on my channel so if you want to learn
10:05 - JavaScript from my videos then subscribe
10:08 - to my channel and you'll be notified
10:10 - whenever I upload new JavaScript videos

Cleaned transcript:

if you want to finally understand how the seemingly mysterious thing called web development works and get an insight into the IT world without being overwhelmed by all these technical Woodward's then this is the perfect video for you in this video I'm gonna explain to you in a very simple language how web and web applications work and how all these technologies that you've heard about like JavaScript Java databases etc fit in the whole picture imagine this scenario you wake up in the morning get your coffee open your laptop and open Facebook in your browser so let's pause there what happened when you typed in Facebook in your browser and you saw a fresh new feed with all the new stuff that has happened while you were asleep what happened there in the background technologically so Facebook is an application that some developers sitting mostly in California are developing and these guys and gals are writing a bunch of code and all the code that makes up Facebook leaves in California so what happens when you open facebook on your laptop is that part of that code that lives in California travels all the way to your laptop to your location and ends up temporarily living on your laptop that's why sometimes when you refresh and see a blank page or loading and you become annoyed because you can't see your feed within three seconds that's when all the data is coming or traveling from somewhere to your laptop so it may meet some time so how does that travel there are internet cables everywhere in the world actual physical cables that let electricity travel through from one place in the world to another and so everything is connected everywhere so that's why some remote places in Africa or Asia where there's no internet and you're wondering wow like how is this possible now internet that's super crazy but that's pretty simple because nobody built those internal cables near those areas because it wasn't worth it so no internet now if you think about it it would be super inefficient if every time in Europe opened Facebook and all the data needed to travel to these places all the way from California so Facebook has built locations evenly distributed all around the world that store part of the code and data that doesn't change much so it can get to you much faster back to that part of code that just traveled to you that's HTML CSS in JavaScript so what are these when you see a website that just looks ugly so we just text no fun colors no styling that's a naked HTML it's necessary but no one wants to see some plain ugly text without any styling so what makes the text pretty and it colors and some fun to it is CSS it's like flesh on a skeleton now you have a flesh that looks good but it doesn't do anything it doesn't move it doesn't talk doesn't respond you can interact with it and it's the same way with HTML plus CSS page typical use cases are visit card websites where you can read text displayed in nice style but you can't leave a comment you can send a message you can do anything with the website so all that action comes purely from JavaScript so you want to upload a photo on Facebook that's JavaScript you want to send a message through messenger that's JavaScript you want to like your friends picture or leave a comment all JavaScript so everything that you interact with in the UI which stands for user interface is through JavaScript and the combination of these three HTML CSS and JavaScript is called frontend it's the Facebook code that everyone sees so it's in the front and as I said all these three files leave on your laptop when you open facebook so you can see and even edit them so I could go and change Facebook style like this and this won't affect anyone else in the world since everyone has their own copy of these files on their laptops but there is another part of the code that doesn't travel to you the back end code that is in the back and no one can see so you may be now wondering if I can do anything in front end like upload images message someone leave a comment like what's the backandforth what does it do well when you upload a picture on Facebook you surely want your friends to see that too or when you message someone you want to keep a history of these messages that means you want all these data to persist in other words the data to be saved over time now if javascript only lives on your laptop it wouldn't make sense to just have that photo only locally on your computer that's where the beckon comes in so what happens is that javascript takes that image that you uploaded puts it in an envelope and hands it over to internet saying hey can you deliver this to backend at this specific location so now we can follow this delivery all the way to the backend and see what happens there or what what does back and do when it gets that image now back in code can be written in Java Python PHP or even Java Script so there are different technologies that you can use to write all that back in part of the code so let's say in our example it's Java so what does Java do it checks and examines the photo it sees is it a valid delivery there's no threat no danger I know the sender I trusted so I'll open the envelope since everything is fine and hands it over to database to save it for later so database is like a warehouse it's a big space where you can keep all the images messages likes comments that different users are producing it's all in there so to have a more specific understanding let's actually see how the location where backend code and database leave quoteunquote actually look like so as I mentioned before Facebook has all these buildings distributed all around the world actual physical buildings with servers inside and I don't know what you imagine when you think about servers but whatever it is it's probably not very close to reality so let me show an example of a server building of a typical big company like Facebook so it's a location where machines they're interconnected with each other are running 24/7 in order to make sure that Facebook or this application is available for everybody in the world all the time and that's where beckon code and database actually leave so that's where all the magic happens so when that envelope gets delivered to your backend that's where it ends up so the address that it sent to is one of those machines in among these hundreds or thousands of machines that will take your image validated and then save it into a database so it happens all inside there so now consider your friend logs into Facebook on our computer same way frontend code travels to her laptop along with new data like images messages from friends etc all coming from this servers so how does Facebook know what data you should see on your newsfeed now in the database warehouse Facebook creates isolated spaces for each user with their personal data images etc and obviously on Facebook you want to have some privacy meaning you want only a friends to see your posts so Facebook creates connections in the database between users that are friends and that's how Facebook decides what information to send to a user when they log into the application along with new data like images and messages from friends including the image that you just uploaded all coming from the servers so to summarize a web application is always made up of three components you have a frontend code backend and database frontend is what you see and interact with in your browser in the user interface of the application backend is the code that waits for new messages from frontend about the changes you make like new uploads new messages likes and handles them and database is where all these changes are stored for future usage like when you come back the next stage to use the application or when your friend opens the application most of the applications are written by teams of developers and not just a single developer and there are a lot of developers that are full stick meaning they know all three they can work with frontend backend and database however each of these three areas alone is its own IT field so some developers actually choose to specialize in just one area and become for example a frontend developer so in big companies like Facebook you would have teams with specialized frontend developers backend developers and database developers so what this means for you is that if you're just starting off as a web developer or you are thinking about becoming a web developer you should choose just one of these three areas as a starting point learn it well and then move on to other technologies and a good starting point is usually frontend because it's more visual and you can see the results immediately having said that I'm starting a JavaScript tutorial series for beginners on my channel so if you want to learn JavaScript from my videos then subscribe to my channel and you'll be notified whenever I upload new JavaScript videos
