With timestamps:

00:00 - in this video we will look at the basic
00:03 - building blocks of JavaScript first
00:05 - we'll look at Java scripts five
00:07 - datatypes and then I will show you what
00:10 - variables are and when you need them
00:13 - [Music]
00:17 - note that this two building blocks are
00:20 - the same for whatever programming
00:22 - language you learn so if I was doing a
00:25 - Java tutorial the concepts will be the
00:27 - same the difference is in the syntax and
00:30 - this is a good thing because I like
00:32 - learning natural languages when you
00:33 - learn one programming language it will
00:36 - be much easier to learn another one so
00:38 - with that said let's dive right in now
00:42 - the simplest way to start writing
00:43 - JavaScript is directly into the browser
00:45 - since as I mentioned in the previous
00:47 - video all modern browsers are able to
00:50 - interpret JavaScript and come packaged
00:54 - with so-called developer tools so open
00:57 - either Firefox or Chrome browser on your
01:00 - laptop if you don't have these browsers
01:03 - installed I suggest you install them
01:05 - because using browsers like Internet
01:06 - Explorer to run an execute JavaScript is
01:09 - not a good idea so I would download
01:12 - either Firefox or Chrome and in your
01:14 - browser right click somewhere on the
01:15 - surface and select inspect if your
01:20 - browser is in your native language then
01:22 - it would be called something else but it
01:24 - should translate to inspect and when you
01:26 - click that you see something like this
01:29 - and this space right here is called
01:33 - developer tools and here you should see
01:36 - a console tab and when you click on it
01:39 - you get this space where you can write
01:41 - JavaScript directly in the next video I
01:44 - will show you all the different places
01:46 - where you can write an execute
01:48 - JavaScript and which one you will
01:50 - usually use as a developer but in this
01:52 - video we're gonna use the browser
01:54 - console so that I can demonstrate some
01:56 - simple examples so the first data type
01:59 - that we're going to talk about is
02:01 - numbers obviously when you're writing an
02:03 - application you need numbers some of the
02:06 - examples are you tube displays number of
02:09 - subscribers for each channel or number
02:12 - of likes for each
02:13 - video or how many videos one has when
02:16 - you search something on web application
02:18 - like Google for example you usually see
02:20 - total hits etc so these are all use
02:24 - cases where you need numbers and these
02:26 - examples use whole numbers but for
02:29 - example when you have an online shop
02:31 - where you need to display prices prices
02:33 - obviously won't be whole numbers always
02:35 - but rather decimal numbers with send
02:39 - precision also Amazon ratings right they
02:41 - can be four point five for example and
02:44 - in JavaScript their own data types for
02:46 - whole numbers and for decimal numbers
02:48 - the whole number data type is called
02:50 - integer and these are numbers like 0 300
02:55 - minus 45 so positive negative numbers
02:58 - they're all integers and decimal numbers
03:01 - have a data type of decimal and again
03:05 - they are positive or negative or zero so
03:09 - zero point zero ninety point 777 - fifty
03:15 - point five they're all decimals the
03:19 - second data type is string the way I
03:21 - like to explain what string is is
03:23 - basically everything you see on your
03:26 - keyboard so obviously all the letters no
03:29 - matter what language they're in but also
03:31 - the special characters like m % % + -
03:35 - and also the space character on a
03:38 - keyboard also have numbers and numbers
03:40 - are characters or strings also so how
03:44 - does JavaScript know whether you mean a
03:45 - number like integer or decimal like 5
03:49 - for example or a character 5 it knows it
03:53 - using quotes so you tell JavaScript that
03:56 - you're using string by using quotes it
03:59 - could be single quotes or double quotes
04:02 - so these single characters or any
04:05 - combination of them is a string so let's
04:08 - say couple of examples so 3 in quotes is
04:11 - a string a with louts letters from non
04:16 - English alphabets combination of letters
04:20 - and numbers special characters like an
04:24 - email or in password and also an empty
04:27 - space character is also a string so just
04:31 - to mention here so difference between
04:33 - character and string so character is
04:35 - basically just one letter or one number
04:38 - one special character and string is a
04:41 - character or a combination of multiple
04:44 - characters so these are all strings and
04:47 - this single keys are characters another
04:52 - data type in programming languages is
04:55 - boolean now to understand this let's say
04:58 - you enter wrong password when logging
05:00 - into your application usually you get a
05:03 - message saying you provided a wrong
05:05 - password or you accidentally enter wrong
05:08 - credit card number
05:09 - when buy tickets or invalid email
05:13 - address when registering so in the
05:16 - background developers write JavaScript
05:18 - code that validates whether the
05:20 - information that you provided is wrong
05:23 - or right or correct and to express that
05:27 - wrong or correct state boolean are used
05:30 - so word true Express is correct state
05:33 - and false expresses wrong state so again
05:37 - just like with numbers you can write a
05:40 - simple string false with quotes and
05:42 - JavaScript know that you mean a string
05:45 - without quotes it will be a boolean
05:47 - expression false
05:48 - that's how JavaScript can differentiate
05:50 - between those two in addition to that
05:53 - true/false can also be used for simple
05:56 - yes/no situations like is the apartment
05:59 - on Airbnb available to book on this date
06:02 - yes no there will be true or false in
06:05 - boolean terms or is user logged in
06:08 - depending on whether logged in or not
06:11 - you will see different web page that's a
06:13 - boolean expression is it a premium user
06:16 - true/false also boolean expression etc
06:19 - another data type is array that
06:22 - expresses lists think of applications
06:25 - that display lists of the same kind of
06:28 - data like lists of friends on Facebook
06:31 - or lists of apartments on Airbnb or
06:34 - lists of comments for your Instagram
06:37 - picture lists have their own data types
06:40 - in all pro
06:41 - in languages in JavaScript it's datatype
06:44 - is an array for example list of friends
06:47 - names will look like this will be an
06:49 - array there's an array that includes
06:54 - multiple names and now the syntax of the
06:57 - array that encloses square brackets so
07:02 - that's how JavaScript knows or can
07:05 - interpret that it's dealing with an
07:07 - array or you could also have a list of
07:10 - ratings for Amazon products for example
07:13 - so this will be an array with numbers as
07:17 - you see array contains other data types
07:20 - so here we have list of strings and here
07:23 - we have numbers and in JavaScript you
07:26 - can mix different data types inside an
07:28 - array here we have integers and decimals
07:32 - in one array you can also write an array
07:36 - like this we have string integer and
07:40 - boolean expression and the last data
07:42 - type in JavaScript is an object now in
07:46 - the Amazon review for example you don't
07:48 - just see a list of ratings you also see
07:51 - the author's name next to the rating and
07:53 - text they wrote in addition so you need
07:56 - all this information grouped in one item
07:59 - in the array you express that using
08:01 - object data type so a single rating
08:04 - object will look like this and note the
08:07 - syntax of curly braces so as we saw
08:11 - array was expressed using square
08:14 - brackets an object is written using
08:17 - curly braces so that syntax is important
08:21 - so the JavaScript understands what data
08:23 - type you're writing another example is
08:26 - an apartment object on Airbnb which will
08:30 - include all the attributes it has like
08:32 - location price ratings description
08:35 - availability images etc so an object for
08:39 - that information will look something
08:42 - like this just with more information
08:43 - inside and here you see that the syntax
08:47 - highlighting of the browser is also
08:50 - helping to see that strings boolean's
08:52 - and numbers are
08:54 - colored in different way meaning that
08:57 - javascript understands the difference
08:59 - between them so as I see object has key
09:03 - value pairs so that you know which value
09:06 - stands for what
09:07 - so all this author named user twelve
09:10 - rating five these are key value pairs
09:14 - where the key basically describes what
09:16 - the value stands for and the name of
09:18 - that key is totally up to you you decide
09:21 - what that's going to be also you can use
09:24 - any data type as a value inside of an
09:26 - object so here we have a string integer
09:29 - boolean and array as a value and you can
09:34 - also use another object as a value
09:36 - inside of an object and finally we'll go
09:39 - back to the ratings you will have
09:41 - multiple rating objects so a list of
09:44 - rating objects so the final list of
09:47 - these rating objects will look like this
09:49 - so it will be an array with square
09:53 - brackets and we have a bunch of objects
09:56 - that are comma separated now this is
09:59 - probably the most complex structure you
10:01 - will deal with most of the time so it
10:04 - shouldn't get much more complex in this
10:09 - now we saw all these data type example
10:12 - values but how do you use them to write
10:14 - a so-called logic in JavaScript the
10:17 - simplest use case is some basic addition
10:20 - subtraction etc for numbers you can use
10:23 - simple arithmetic from elementary school
10:25 - to calculate basic things and here I
10:28 - will use the chance to break this common
10:30 - misconception and you have to be super
10:32 - good at math to learn programming which
10:35 - is completely hundred-percent wrong I've
10:38 - been a software engineer for many years
10:39 - and I have worked in a lot of different
10:41 - projects and I have barely used anything
10:45 - more advanced than simple arithmetic
10:47 - Slyke plus minus multiply and divide
10:49 - when writing web applications so in
10:52 - JavaScript you can do all of this you
10:56 - can do subtraction multiply divide and
11:01 - you can also combine them just like you
11:04 - would with a calculator and of course
11:07 - you can do the same with decimals some
11:09 - real-life use cases for these basic
11:12 - arithmetic are for example when you add
11:14 - multiple items to your shopping cart or
11:17 - Amazon you see the sum and you also see
11:19 - the price break down which is the item
11:21 - prices plus shipment costs or when you
11:25 - have product ratings based on all the
11:27 - individual ratings you display the
11:29 - average rating or on uber for example
11:32 - you see the distance from pickup
11:33 - locations to the destination in
11:35 - kilometers or miles and in minutes all
11:38 - these are simple calculations which are
11:42 - possible in JavaScript now obviously all
11:45 - these operators are meant for numbers
11:47 - but there is a case where we can use the
11:50 - plus operator for string datatypes
11:53 - so what will happen if I write string 12
11:59 - plus string 12 so we get 1212 so what
12:04 - happened here is that JavaScript knows
12:06 - that these two are strings and node
12:09 - numbers and instead of adding them it
12:12 - handles them as strings by gluing them
12:16 - to each other any programming that's
12:18 - called string concatenation and no you
12:21 - don't have to
12:22 - remember that word just so you know that
12:24 - there are weird names for simple things
12:26 - in programming the same way you can glue
12:28 - a string to any other data type so you
12:32 - can do bla 212 and the number will also
12:37 - turn into a string so to say or you can
12:40 - do the same with boolean values because
12:44 - Java Script interprets that as you want
12:48 - to create another string out of these
12:51 - two values and this examples probably
12:54 - don't make much sense but in the next
12:56 - section of this video I will show you
12:58 - some more real-life examples why this
13:00 - concept is actually very important
13:05 - to understand the concept of variables
13:07 - think about the following scenario you
13:10 - change your username on facebook so
13:13 - obviously your changed username is
13:15 - displayed on your profile but also all
13:18 - the comments that you wrote before the
13:20 - name change should now appear with your
13:22 - new username and also in all your
13:25 - friends lists your new username will
13:28 - appear right so this means if you had
13:31 - Facebook code where your username is
13:34 - written in all those different places so
13:38 - you have your username in the profile
13:39 - section you have your username in
13:42 - comment one comment two etc and in all
13:45 - your friends lists write written
13:47 - directly as is or let's consider another
13:50 - example think about online shop each
13:52 - product has a price and it's displayed
13:55 - in a list in the products own detail
13:58 - page and maybe also in combination to
14:00 - other products so if the store now
14:03 - offers a discount and the price changes
14:06 - obviously the price should be updated in
14:09 - each location where it's displayed so
14:12 - again in code it will look something
14:15 - like this obviously this is not a valid
14:18 - JavaScript code but just to give you an
14:20 - idea so somewhere in one javascript file
14:23 - you have the list of products where the
14:25 - product price is directly written as is
14:28 - and you'll have the same in detail page
14:31 - section of the product and combination
14:34 - now when the user name on products
14:37 - changes and those two scenarios all
14:41 - these variables need to be overwritten
14:43 - which means that you will have to go and
14:45 - change the price here and here and here
14:47 - and same with the user name change it in
14:50 - all places where it's used now that
14:53 - would be absolutely in convenient
14:55 - considering applications are so dynamic
14:57 - and things change a lot so that's where
15:02 - variables come in so instead of writing
15:05 - the actual value in ten different places
15:08 - you write the value once and then
15:11 - reference it ten times from ten
15:13 - different places and that reference to
15:16 - the actual value is called a vary
15:18 - and you give variables a name that makes
15:22 - sense for that value so for example
15:25 - product a price equals 50 so now you
15:30 - create a reference for the value 50
15:32 - which is called product a price or user
15:36 - name equals a p-- user a so you take the
15:40 - actual value which is string and create
15:43 - a reference to it but in addition to
15:45 - that you should also let JavaScript know
15:47 - explicitly that this random name that
15:51 - you just came up with is a variable and
15:53 - you do that using VAR keyword this and
15:58 - remember keywords are words that have
16:00 - special meaning to JavaScript and
16:03 - because of that if you noticed the
16:06 - coloring or the highlighting of the
16:08 - world changed once I added var in front
16:12 - of it so now JavaScript knows yeah this
16:14 - is a variable keyword and this is the
16:17 - name of that reference or variable or
16:20 - the same with product a price variable
16:22 - and in code it will now look like this
16:24 - so first you'll create that reference
16:27 - somewhere like this and then in all the
16:31 - locations or all the places in
16:33 - JavaScript code where you need that
16:35 - value that actual number value you use
16:39 - the reference instead of the actual
16:41 - value so you have your text and the
16:44 - reference to the number in all those
16:46 - different locations and here you know
16:49 - the plus operator that I showed you
16:51 - earlier this is an example of string
16:54 - concatenation meaning string is glued to
16:57 - another value and this is where this
17:01 - concept is very useful so when you run
17:04 - or execute this line what happens is
17:06 - that JavaScript in the background
17:09 - replaces this reference with the actual
17:12 - value so when I execute this I see
17:14 - product a price 50 and this is a real
17:18 - example where plus operator with strings
17:21 - is actually very important and you will
17:24 - use this a lot because you will use
17:25 - variables a lot in order to make this
17:28 - variable concept stick more let's
17:31 - consider
17:32 - additional use cases first consider
17:34 - multi-language applications on most
17:37 - applications you can select a preferred
17:40 - language and see all your navigation
17:43 - buttons etc in your language
17:45 - now if application supports ten
17:47 - languages obviously developers don't
17:49 - create ten different websites instead
17:52 - the same text is translated in ten
17:55 - different languages and reference using
17:57 - variables and depending on which
18:00 - language the user selects the correct
18:03 - reference is used in the second use case
18:06 - which is very important is user input so
18:09 - when you sign up for a web application
18:11 - you need to enter your name last name
18:14 - email password these are all user inputs
18:17 - so what you input in the application as
18:19 - a developer when you when you prepare
18:22 - that code for future usage you don't
18:24 - know what these values are gonna be
18:26 - because users can enter anything but
18:28 - what you know is the name of the
18:30 - variables that will reference these
18:32 - values and this way you can use the
18:35 - actual values without even knowing what
18:37 - they are now if you want to practice
18:40 - these concepts so that you can remember
18:43 - them better in the description of this
18:45 - video I will link some websites where
18:47 - you can do practical exercises on the
18:50 - JavaScript concepts that I explained in
18:52 - my videos

Cleaned transcript:

in this video we will look at the basic building blocks of JavaScript first we'll look at Java scripts five datatypes and then I will show you what variables are and when you need them note that this two building blocks are the same for whatever programming language you learn so if I was doing a Java tutorial the concepts will be the same the difference is in the syntax and this is a good thing because I like learning natural languages when you learn one programming language it will be much easier to learn another one so with that said let's dive right in now the simplest way to start writing JavaScript is directly into the browser since as I mentioned in the previous video all modern browsers are able to interpret JavaScript and come packaged with socalled developer tools so open either Firefox or Chrome browser on your laptop if you don't have these browsers installed I suggest you install them because using browsers like Internet Explorer to run an execute JavaScript is not a good idea so I would download either Firefox or Chrome and in your browser right click somewhere on the surface and select inspect if your browser is in your native language then it would be called something else but it should translate to inspect and when you click that you see something like this and this space right here is called developer tools and here you should see a console tab and when you click on it you get this space where you can write JavaScript directly in the next video I will show you all the different places where you can write an execute JavaScript and which one you will usually use as a developer but in this video we're gonna use the browser console so that I can demonstrate some simple examples so the first data type that we're going to talk about is numbers obviously when you're writing an application you need numbers some of the examples are you tube displays number of subscribers for each channel or number of likes for each video or how many videos one has when you search something on web application like Google for example you usually see total hits etc so these are all use cases where you need numbers and these examples use whole numbers but for example when you have an online shop where you need to display prices prices obviously won't be whole numbers always but rather decimal numbers with send precision also Amazon ratings right they can be four point five for example and in JavaScript their own data types for whole numbers and for decimal numbers the whole number data type is called integer and these are numbers like 0 300 minus 45 so positive negative numbers they're all integers and decimal numbers have a data type of decimal and again they are positive or negative or zero so zero point zero ninety point 777 fifty point five they're all decimals the second data type is string the way I like to explain what string is is basically everything you see on your keyboard so obviously all the letters no matter what language they're in but also the special characters like m % % + and also the space character on a keyboard also have numbers and numbers are characters or strings also so how does JavaScript know whether you mean a number like integer or decimal like 5 for example or a character 5 it knows it using quotes so you tell JavaScript that you're using string by using quotes it could be single quotes or double quotes so these single characters or any combination of them is a string so let's say couple of examples so 3 in quotes is a string a with louts letters from non English alphabets combination of letters and numbers special characters like an email or in password and also an empty space character is also a string so just to mention here so difference between character and string so character is basically just one letter or one number one special character and string is a character or a combination of multiple characters so these are all strings and this single keys are characters another data type in programming languages is boolean now to understand this let's say you enter wrong password when logging into your application usually you get a message saying you provided a wrong password or you accidentally enter wrong credit card number when buy tickets or invalid email address when registering so in the background developers write JavaScript code that validates whether the information that you provided is wrong or right or correct and to express that wrong or correct state boolean are used so word true Express is correct state and false expresses wrong state so again just like with numbers you can write a simple string false with quotes and JavaScript know that you mean a string without quotes it will be a boolean expression false that's how JavaScript can differentiate between those two in addition to that true/false can also be used for simple yes/no situations like is the apartment on Airbnb available to book on this date yes no there will be true or false in boolean terms or is user logged in depending on whether logged in or not you will see different web page that's a boolean expression is it a premium user true/false also boolean expression etc another data type is array that expresses lists think of applications that display lists of the same kind of data like lists of friends on Facebook or lists of apartments on Airbnb or lists of comments for your Instagram picture lists have their own data types in all pro in languages in JavaScript it's datatype is an array for example list of friends names will look like this will be an array there's an array that includes multiple names and now the syntax of the array that encloses square brackets so that's how JavaScript knows or can interpret that it's dealing with an array or you could also have a list of ratings for Amazon products for example so this will be an array with numbers as you see array contains other data types so here we have list of strings and here we have numbers and in JavaScript you can mix different data types inside an array here we have integers and decimals in one array you can also write an array like this we have string integer and boolean expression and the last data type in JavaScript is an object now in the Amazon review for example you don't just see a list of ratings you also see the author's name next to the rating and text they wrote in addition so you need all this information grouped in one item in the array you express that using object data type so a single rating object will look like this and note the syntax of curly braces so as we saw array was expressed using square brackets an object is written using curly braces so that syntax is important so the JavaScript understands what data type you're writing another example is an apartment object on Airbnb which will include all the attributes it has like location price ratings description availability images etc so an object for that information will look something like this just with more information inside and here you see that the syntax highlighting of the browser is also helping to see that strings boolean's and numbers are colored in different way meaning that javascript understands the difference between them so as I see object has key value pairs so that you know which value stands for what so all this author named user twelve rating five these are key value pairs where the key basically describes what the value stands for and the name of that key is totally up to you you decide what that's going to be also you can use any data type as a value inside of an object so here we have a string integer boolean and array as a value and you can also use another object as a value inside of an object and finally we'll go back to the ratings you will have multiple rating objects so a list of rating objects so the final list of these rating objects will look like this so it will be an array with square brackets and we have a bunch of objects that are comma separated now this is probably the most complex structure you will deal with most of the time so it shouldn't get much more complex in this now we saw all these data type example values but how do you use them to write a socalled logic in JavaScript the simplest use case is some basic addition subtraction etc for numbers you can use simple arithmetic from elementary school to calculate basic things and here I will use the chance to break this common misconception and you have to be super good at math to learn programming which is completely hundredpercent wrong I've been a software engineer for many years and I have worked in a lot of different projects and I have barely used anything more advanced than simple arithmetic Slyke plus minus multiply and divide when writing web applications so in JavaScript you can do all of this you can do subtraction multiply divide and you can also combine them just like you would with a calculator and of course you can do the same with decimals some reallife use cases for these basic arithmetic are for example when you add multiple items to your shopping cart or Amazon you see the sum and you also see the price break down which is the item prices plus shipment costs or when you have product ratings based on all the individual ratings you display the average rating or on uber for example you see the distance from pickup locations to the destination in kilometers or miles and in minutes all these are simple calculations which are possible in JavaScript now obviously all these operators are meant for numbers but there is a case where we can use the plus operator for string datatypes so what will happen if I write string 12 plus string 12 so we get 1212 so what happened here is that JavaScript knows that these two are strings and node numbers and instead of adding them it handles them as strings by gluing them to each other any programming that's called string concatenation and no you don't have to remember that word just so you know that there are weird names for simple things in programming the same way you can glue a string to any other data type so you can do bla 212 and the number will also turn into a string so to say or you can do the same with boolean values because Java Script interprets that as you want to create another string out of these two values and this examples probably don't make much sense but in the next section of this video I will show you some more reallife examples why this concept is actually very important to understand the concept of variables think about the following scenario you change your username on facebook so obviously your changed username is displayed on your profile but also all the comments that you wrote before the name change should now appear with your new username and also in all your friends lists your new username will appear right so this means if you had Facebook code where your username is written in all those different places so you have your username in the profile section you have your username in comment one comment two etc and in all your friends lists write written directly as is or let's consider another example think about online shop each product has a price and it's displayed in a list in the products own detail page and maybe also in combination to other products so if the store now offers a discount and the price changes obviously the price should be updated in each location where it's displayed so again in code it will look something like this obviously this is not a valid JavaScript code but just to give you an idea so somewhere in one javascript file you have the list of products where the product price is directly written as is and you'll have the same in detail page section of the product and combination now when the user name on products changes and those two scenarios all these variables need to be overwritten which means that you will have to go and change the price here and here and here and same with the user name change it in all places where it's used now that would be absolutely in convenient considering applications are so dynamic and things change a lot so that's where variables come in so instead of writing the actual value in ten different places you write the value once and then reference it ten times from ten different places and that reference to the actual value is called a vary and you give variables a name that makes sense for that value so for example product a price equals 50 so now you create a reference for the value 50 which is called product a price or user name equals a p user a so you take the actual value which is string and create a reference to it but in addition to that you should also let JavaScript know explicitly that this random name that you just came up with is a variable and you do that using VAR keyword this and remember keywords are words that have special meaning to JavaScript and because of that if you noticed the coloring or the highlighting of the world changed once I added var in front of it so now JavaScript knows yeah this is a variable keyword and this is the name of that reference or variable or the same with product a price variable and in code it will now look like this so first you'll create that reference somewhere like this and then in all the locations or all the places in JavaScript code where you need that value that actual number value you use the reference instead of the actual value so you have your text and the reference to the number in all those different locations and here you know the plus operator that I showed you earlier this is an example of string concatenation meaning string is glued to another value and this is where this concept is very useful so when you run or execute this line what happens is that JavaScript in the background replaces this reference with the actual value so when I execute this I see product a price 50 and this is a real example where plus operator with strings is actually very important and you will use this a lot because you will use variables a lot in order to make this variable concept stick more let's consider additional use cases first consider multilanguage applications on most applications you can select a preferred language and see all your navigation buttons etc in your language now if application supports ten languages obviously developers don't create ten different websites instead the same text is translated in ten different languages and reference using variables and depending on which language the user selects the correct reference is used in the second use case which is very important is user input so when you sign up for a web application you need to enter your name last name email password these are all user inputs so what you input in the application as a developer when you when you prepare that code for future usage you don't know what these values are gonna be because users can enter anything but what you know is the name of the variables that will reference these values and this way you can use the actual values without even knowing what they are now if you want to practice these concepts so that you can remember them better in the description of this video I will link some websites where you can do practical exercises on the JavaScript concepts that I explained in my videos
