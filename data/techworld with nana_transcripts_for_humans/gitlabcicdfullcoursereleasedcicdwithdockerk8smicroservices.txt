With timestamps:

00:00 - hi there i am super excited to welcome
00:02 - you to the gitlab ci city course
00:05 - getlab csd has become a very popular
00:07 - platform for creating release pipelines
00:10 - for your application so i created this
00:12 - course to teach you all the concepts and
00:15 - features to build real-life and modern
00:18 - cicd pipelines on gitlab
00:20 - so by the end of this course you'll be
00:23 - able to confidently use gitlab to build
00:26 - real devops pipelines in your projects
00:29 - since it's a cicd platform naturally it
00:32 - means that you need to know how to
00:34 - integrate it with other technologies so
00:36 - in this course i teach you how to use
00:39 - gitlab ci with technologies like docker
00:42 - docker compose kubernetes aws and so on
00:46 - because as an engineer if you get into a
00:48 - project where gitlab ci is used and you
00:51 - need to work with it you need a course
00:53 - where you can learn not only the basics
00:55 - and fundamentals of gitlab cicd itself
00:58 - like in most other courses but you need
01:00 - to know how to actually do real tasks of
01:03 - integrating it with deployment
01:05 - environments container registries using
01:08 - secret data et cetera and building
01:10 - pipelines not only for a simple
01:13 - application but for microservices
01:15 - applications which has its own specifics
01:17 - and challenges but you don't want to
01:19 - just learn to do it in any possible way
01:22 - like an inexperienced engineer just
01:24 - googling things and putting together
01:26 - something that just works instead you
01:28 - want to learn how to do things in the
01:30 - correct way with actual best practices
01:32 - like properly handling the sensitive
01:34 - data reusing pipeline configuration to
01:37 - avoid code duplication using a dedicated
01:40 - user to deploy to kubernetes environment
01:42 - parameterizing and using dynamic values
01:45 - in the pipeline to make them more
01:47 - flexible and reusable and so on if you
01:50 - have taken any of my other courses you
01:52 - know that you always get the best
01:54 - combination of theory and practice
01:57 - you learn every single concept and
02:00 - feature with engaging easy to follow
02:03 - demo projects but before each demo i
02:05 - explain the concept so you really
02:07 - understand exactly why a certain feature
02:10 - or concept is important and what purpose
02:13 - it has and again you learn not only
02:16 - gitlab specific things but also a lot of
02:18 - additional
02:20 - valuable information about docker docker
02:22 - compose kubernetes microservices etc so
02:26 - it's a well-rounded course with a lot of
02:29 - valuable knowledge for you as an
02:30 - engineer
02:31 - throughout the course i make sure to
02:33 - explain and highlight best practices and
02:35 - industry insights were relevant and this
02:38 - is an essential addition to teach you
02:41 - not only how to do stuff in any way but
02:43 - in the correct way making your knowledge
02:46 - even more valuable
02:47 - so equipped with this knowledge by the
02:50 - end of this course you will be
02:52 - absolutely confident that you really
02:54 - understand how gitlab cia city works and
02:56 - know exactly how to apply it in your
02:59 - real projects no knowledge gaps no
03:02 - insecurities so let's dive into the
03:04 - course curriculum to see what you will
03:06 - learn exactly
03:08 - we'll start with the basics of what ci
03:10 - cd is in general and comparison of git
03:13 - lapsity with other cicd tools
03:16 - then we'll go on to learn a very
03:18 - interesting topic of gitlab architecture
03:20 - and how it all works we'll learn about
03:23 - runners and executors and we will
03:25 - actually create and configure our own
03:27 - runners for the gitlab instance we will
03:30 - look at different ways of operating
03:32 - gitlab and see managed versus
03:34 - self-managed gitlab platform once we
03:37 - have the infrastructure set up we will
03:39 - move on to learn the core concepts of
03:41 - gitlab cicd like jobs stages the
03:45 - pipeline syntax in general how to use
03:47 - conditionals regular and secret
03:50 - variables and reusing configuration code
03:53 - to avoid duplication we will learn the
03:55 - concept of artifacts and how to generate
03:58 - test reports as well as share data
04:00 - within the pipeline using the artifacts
04:03 - we will see how workflow rules can be
04:05 - used to define when the pipelines should
04:08 - be triggered and we will also learn
04:10 - about gitlab's built-in docker registry
04:12 - and how to use it in the pipeline after
04:15 - that we'll move on to more advanced
04:17 - topics and learn how to speed up the
04:19 - pipeline using cache how to use the
04:22 - include feature and use gitlab's job
04:24 - templates in your pipeline
04:26 - and how to extract common pipeline code
04:29 - and build a job hierarchy with extends
04:31 - feature to make your pipeline
04:33 - configuration more maintainable
04:36 - and you will learn all these while
04:38 - building complete ci cd pipelines for
04:41 - demo applications
04:43 - in the first demo project we will build
04:44 - a real-life pipeline deploying a node.js
04:48 - application testing the application with
04:50 - simple unit tests and security tests
04:53 - incrementing and dynamically setting
04:56 - version for the docker image building
04:58 - and pushing image to gitlab's docker
05:01 - registry doing a multi-stage deployment
05:04 - to a deployment server with
05:06 - docker compose and promoting from
05:09 - development staging and production
05:11 - environments after that you will work
05:13 - through a demo of building a csd
05:16 - pipeline for a micro services
05:18 - application in a monorepo and then do a
05:21 - demo and compare
05:23 - building cicd pipeline for a polyrepo so
05:26 - you learn how to do both and throughout
05:28 - these demos we will use best practices
05:31 - of extracting and reusing configuration
05:33 - code for multiple services by creating a
05:36 - gitlab ci templates library here we use
05:40 - docker compose to deploy the services
05:43 - but in the final demo we will take this
05:45 - one step further and configure
05:48 - continuous deployment of microservices
05:50 - to a kubernetes cluster so with all this
05:53 - knowledge and practice you will be ready
05:55 - to implement real ci cd pipelines on
05:58 - gitlab at your work
06:00 - we took time and put a lot of effort in
06:03 - making this course as high quality as
06:05 - possible making all the concepts easy to
06:08 - understand and all the demos easy to
06:10 - follow as well as structure the course
06:12 - in a way that it stays engaging and
06:14 - interesting till the end so i really
06:17 - hope you enjoy it so if you want to
06:19 - learn all these check the video
06:20 - description for the link to the course
06:23 - where you get more information and you
06:25 - can get enrolled i'm very excited to
06:28 - welcome you there

Cleaned transcript:

hi there i am super excited to welcome you to the gitlab ci city course getlab csd has become a very popular platform for creating release pipelines for your application so i created this course to teach you all the concepts and features to build reallife and modern cicd pipelines on gitlab so by the end of this course you'll be able to confidently use gitlab to build real devops pipelines in your projects since it's a cicd platform naturally it means that you need to know how to integrate it with other technologies so in this course i teach you how to use gitlab ci with technologies like docker docker compose kubernetes aws and so on because as an engineer if you get into a project where gitlab ci is used and you need to work with it you need a course where you can learn not only the basics and fundamentals of gitlab cicd itself like in most other courses but you need to know how to actually do real tasks of integrating it with deployment environments container registries using secret data et cetera and building pipelines not only for a simple application but for microservices applications which has its own specifics and challenges but you don't want to just learn to do it in any possible way like an inexperienced engineer just googling things and putting together something that just works instead you want to learn how to do things in the correct way with actual best practices like properly handling the sensitive data reusing pipeline configuration to avoid code duplication using a dedicated user to deploy to kubernetes environment parameterizing and using dynamic values in the pipeline to make them more flexible and reusable and so on if you have taken any of my other courses you know that you always get the best combination of theory and practice you learn every single concept and feature with engaging easy to follow demo projects but before each demo i explain the concept so you really understand exactly why a certain feature or concept is important and what purpose it has and again you learn not only gitlab specific things but also a lot of additional valuable information about docker docker compose kubernetes microservices etc so it's a wellrounded course with a lot of valuable knowledge for you as an engineer throughout the course i make sure to explain and highlight best practices and industry insights were relevant and this is an essential addition to teach you not only how to do stuff in any way but in the correct way making your knowledge even more valuable so equipped with this knowledge by the end of this course you will be absolutely confident that you really understand how gitlab cia city works and know exactly how to apply it in your real projects no knowledge gaps no insecurities so let's dive into the course curriculum to see what you will learn exactly we'll start with the basics of what ci cd is in general and comparison of git lapsity with other cicd tools then we'll go on to learn a very interesting topic of gitlab architecture and how it all works we'll learn about runners and executors and we will actually create and configure our own runners for the gitlab instance we will look at different ways of operating gitlab and see managed versus selfmanaged gitlab platform once we have the infrastructure set up we will move on to learn the core concepts of gitlab cicd like jobs stages the pipeline syntax in general how to use conditionals regular and secret variables and reusing configuration code to avoid duplication we will learn the concept of artifacts and how to generate test reports as well as share data within the pipeline using the artifacts we will see how workflow rules can be used to define when the pipelines should be triggered and we will also learn about gitlab's builtin docker registry and how to use it in the pipeline after that we'll move on to more advanced topics and learn how to speed up the pipeline using cache how to use the include feature and use gitlab's job templates in your pipeline and how to extract common pipeline code and build a job hierarchy with extends feature to make your pipeline configuration more maintainable and you will learn all these while building complete ci cd pipelines for demo applications in the first demo project we will build a reallife pipeline deploying a node.js application testing the application with simple unit tests and security tests incrementing and dynamically setting version for the docker image building and pushing image to gitlab's docker registry doing a multistage deployment to a deployment server with docker compose and promoting from development staging and production environments after that you will work through a demo of building a csd pipeline for a micro services application in a monorepo and then do a demo and compare building cicd pipeline for a polyrepo so you learn how to do both and throughout these demos we will use best practices of extracting and reusing configuration code for multiple services by creating a gitlab ci templates library here we use docker compose to deploy the services but in the final demo we will take this one step further and configure continuous deployment of microservices to a kubernetes cluster so with all this knowledge and practice you will be ready to implement real ci cd pipelines on gitlab at your work we took time and put a lot of effort in making this course as high quality as possible making all the concepts easy to understand and all the demos easy to follow as well as structure the course in a way that it stays engaging and interesting till the end so i really hope you enjoy it so if you want to learn all these check the video description for the link to the course where you get more information and you can get enrolled i'm very excited to welcome you there
