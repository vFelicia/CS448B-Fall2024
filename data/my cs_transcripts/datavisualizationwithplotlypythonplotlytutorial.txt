00:00 - in this first video I want to talk to
00:01 - you about bar charts I'm here in my
00:04 - Jupiter notebook in side of Microsoft
00:07 - edge my web browser
00:08 - I have navigated to the folder that
00:11 - contains the files that I want to work
00:13 - with and in my case it's in my onedrive
00:15 - file I've created a folder called
00:18 - YouTube and inside of that data
00:21 - visualization with a plucky for Python I
00:23 - have a style sheet a cascading style
00:27 - sheet that will be uploaded to github so
00:29 - that you can use that as well I have a
00:32 - Python cheat sheet a PDF which I'll also
00:35 - download you can get that from the
00:36 - plucky website there's a style template
00:39 - which I just always save just to open up
00:41 - and it's got the bare bones of which I
00:43 - want to work with but here's the file
00:45 - we're looking for the simple bar chart
00:47 - let's open it up and there you go
00:54 - everything is ready you'll see the first
00:56 - cell that I have here is just the input
00:58 - of the cascading style sheet it's a
01:02 - Python code display and from that I
01:04 - import HTML I reference the file this
01:09 - cascading style sheet file and that
01:11 - lives in the same folder as this
01:12 - notebook and I just use the HTML
01:15 - function they open the CSS file in read
01:19 - mode and we read it and if I execute
01:21 - that you'd see that I have this new
01:24 - style I have my h1 color of the texture
01:28 - being blue h2 being this nice orange etc
01:31 - just styles the notebook for me so let's
01:36 - have a look at the simple bar chart now
01:38 - first of all I want to set up my plotly
01:41 - library and what we're going to use here
01:44 - is called notebook mode so I don't want
01:48 - to have these files uploaded to the
01:50 - plotly website to live in the cloud I
01:52 - just want to use them locally so I'm
01:54 - going to use the notebook mode so from
01:57 - plotly dot offline I'm going to import I
01:59 - plot and in it notebook mode as you can
02:03 - see here and I'm just going to call this
02:04 - function init notebook mode so if we run
02:07 - this that'll just import the
02:11 - I plot and initializing this netbook
02:13 - mode and we'll initialize this netbook
02:15 - mode so what do we actually want to
02:17 - import from pluckley what we're gonna
02:19 - start off with these high level charts
02:21 - so bar charged charged scatter charts
02:24 - etc these are high level and I can just
02:26 - use them as is so I can say import plot
02:30 - lead graph objects so graph underscore
02:33 - obj is as geo as go let's do that so
02:37 - let's start off with a very bare bones
02:39 - chart the first thing we want to set up
02:43 - is just what is called the the the trace
02:46 - we call it trace here is just a computer
02:50 - variable but that just creates on on top
02:54 - of the figure that we are creating this
02:55 - blank figure we're going to put on these
02:57 - elements and it's just a loom or to call
03:01 - them trace so go remember that's my
03:04 - graph objects dot bar so immediately the
03:08 - arguments here are specifically for a
03:11 - bar chart that's why we call this high
03:12 - level chart I didn't have to design
03:15 - every single little element most of it's
03:17 - already designed inside of this bar
03:19 - object and I just have to pass some
03:22 - arguments to it and I'm going to pass X
03:25 - arguments for the x axis and y arguments
03:27 - for the y axis so what is a bar chart
03:29 - for a bar chart is for categorical
03:32 - variables so anything that is not
03:38 - necessarily a number although numbers
03:40 - can also be categorical variables but
03:41 - they are not numerical and as such as
03:45 - the difference between them are not set
03:48 - and standard so I could call January
03:50 - February March one two and three for the
03:52 - first second and third months of the
03:53 - year but that does not make them
03:55 - numerical variables they are they are
03:57 - still in that instance categorical
03:59 - variables so bar charts are for
04:01 - categorical variables so my x-axis here
04:03 - I'm going to have the categories January
04:05 - February and March and on my y-axis I'm
04:08 - going to have numerical values so how
04:12 - many things whatever the situation might
04:15 - be and my instance here I'm gonna use
04:17 - use you'll see later on I'm gonna call
04:18 - him sales so in January there were ten
04:20 - unit sales in February
04:22 - March 14 so those are numerical values
04:26 - on the y-axis categorical variables on
04:28 - the x-axis now I'm going to introduce a
04:31 - second computer variable I'm going to
04:33 - call it data and I'm going to pass into
04:35 - that a list so it goes inside of square
04:37 - brackets I'm going to pass a list of all
04:39 - the traces these are these elements that
04:42 - go on top of my blank figure and in this
04:44 - case I only have one chase but I've got
04:46 - to put that inside of these square
04:48 - brackets I'm referencing trace here as a
04:50 - list element and element inside of this
04:52 - list third computer variable that I use
04:55 - ESS fig now these are the standard they
04:58 - used in pluckley all the time so might
05:01 - as well stick with those and I'm going
05:03 - to call another graph object called a
05:04 - figure that's a blank canvas a blank
05:06 - figure and figure with the capital F as
05:10 - you can see there it takes a couple of
05:12 - arguments in this instance when you're
05:13 - gonna use one argument and it's the data
05:15 - argument as you can see here and we're
05:17 - gonna set that equal to data which is
05:19 - this data which contains a list of chase
05:22 - and the chase is a bar so it just builds
05:25 - one thing on top of the others so inside
05:27 - of this data that I'm referencing
05:28 - there's a list and the first element in
05:31 - the list is Trace and in trace is this
05:33 - element called a bar chart finally I'm
05:37 - going to call I plot remember which we
05:39 - imported up here I plot this for
05:43 - plotting directly in the notebook not
05:45 - using online mode not going to the cloud
05:48 - and I'm going to plot this figure f IG
05:50 - think that I've created let's hold down
05:52 - shift and hit enter/return and there you
05:55 - go your first beautiful your first V
05:58 - beautiful plot a chart so again we can
06:01 - see the x-axis here January February
06:03 - March and we can see the y-axis the
06:05 - values that we put in 10 11 and 14 now
06:09 - I'm going to use my mouse on the left
06:11 - hand side look what happens when I hover
06:13 - over the text over this element this the
06:17 - cell the elements on this blank figure
06:19 - so the godot figure was this blank
06:22 - background and I put these elements on
06:23 - top of it which is on a high level with
06:25 - a bar chart I hover over it and you see
06:28 - that January at the bottom it gets
06:29 - highlighted and the number 10 at the top
06:31 - gets highlighted that's very nice
06:34 - I really
06:34 - that because if I give a presentation
06:36 - and I don't use PowerPoint for
06:38 - presentations I'm not a PowerPoint use
06:40 - or fan well I mean you've got to use it
06:42 - sometime but I try to stick with my
06:45 - triple notebooks and it's very nice to
06:47 - have this interactive plots as you do
06:50 - your presentations and look what
06:52 - happened at the top here as well I get
06:54 - quite a few little buttons here to place
06:58 - and then I really find very useful
07:00 - because I can download this plot as a
07:02 - PNG file directly on my hard drive and I
07:04 - can put that inside of a hard copy if I
07:07 - were writing a report and it's got to go
07:08 - inside of a Word document etc I can just
07:11 - do that I can save this for editing in
07:14 - chart studio that's online in your
07:16 - pluckley
07:16 - online account you can zoom you can pan
07:19 - you can select a box and we're going to
07:21 - see all of these because they become
07:23 - very useful I can zoom in I can zoom out
07:26 - and out even further not even further I
07:29 - can just go back home and let's just
07:31 - reset everything for me I can show the
07:34 - closest data on hover so if I do this
07:36 - you're only gonna see January being 10
07:38 - February 11 March 14 and a five-click of
07:43 - that you see the highlight happens at
07:45 - the bottom on the x-axis and instead of
07:47 - on top at the at the top there and then
07:50 - I can just open pluckley the website
07:54 - itself so very nice especially this
07:56 - download as PNG file so that is
08:00 - fantastic so let's add a little title
08:03 - because you can see at the top my chart
08:05 - has no title so I'm going to introduce a
08:08 - new variable called layout and this
08:10 - layout is going to be a Python
08:12 - dictionary so and goes inside of curly
08:13 - braces and it has the key value pair so
08:16 - the key : the value the key is title and
08:20 - these go inside of quotation marks so
08:23 - the title that's the key and the value
08:26 - for the dictionary for this key is sales
08:28 - for first quarter now I'm going to redo
08:32 - my fig from up here it's still going to
08:34 - have the trace it's still going to have
08:35 - the data all I'm changing is this fig so
08:38 - godot figure my data still is the data
08:41 - from our first one but the layout is now
08:43 - this dictionary called layout so this
08:47 - data and layout these are the argument
08:49 - names and argument values well we gave
08:53 - the computer variables they're exactly
08:54 - the same name don't worry there won't be
08:56 - any confusion for Python it'll
08:58 - understand pluckley this plot if a
09:00 - figure will understand what's going on
09:03 - so data just refers to the data that I
09:06 - created with a trace list and layout
09:08 - this layout refers to this layout so
09:11 - let's plug this shift enter shift return
09:13 - and now at the top I have sales for
09:15 - first quarter so a beautiful title now
09:19 - on the top of my figure what about some
09:23 - axis labels now with these categories
09:25 - that we put in January February March
09:27 - it's easy to see that these are months
09:29 - but I might want to specify that and
09:31 - more importantly I want to specify
09:32 - what's on this y-axis because what is
09:35 - one two three four you know you need to
09:37 - you need to know what these are so I'm
09:39 - going to just change my layout computer
09:41 - variable so going to be a Python
09:43 - dictionary title still gonna be first
09:46 - code elements now the x-axis that's the
09:49 - key it holds a value but the value is
09:52 - another dictionary and that dictionary
09:56 - is again a key and value pay so the
09:59 - title is going to be months and the same
10:02 - for y-axis
10:03 - the key is y-axis the value is another
10:06 - dictionary and that technique contains a
10:08 - key value pay the key being title and
10:10 - available units now I'm going to do
10:13 - something different
10:14 - remember up here we just say theta cos
10:17 - theta and lay articles layout but we're
10:19 - going to do something a bit different
10:20 - here so instead of creating a blank
10:23 - figure I'm just going to pass everything
10:25 - as a Python live as a Python Python
10:28 - dictionary so here we have I plot and
10:31 - inside of that dayss dictionary and the
10:34 - dictionary is just a key key value pay
10:37 - comma another key value pay so data is
10:39 - just data
10:40 - stole the data from upstairs and the lay
10:43 - artist is this new layout so let's shift
10:46 - an inter shift and return and now we can
10:49 - see that we have months yeah as our x
10:51 - axis title and units as our y axis title
10:54 - so that's how many units were sold in
10:56 - January February and March
10:58 - see the difference here between the two
11:00 - so I did not invoke the figure the Godot
11:04 - figure object here I just passed every
11:07 - everything to I plot as a dictionary and
11:09 - sometimes it gets confusing because
11:11 - there's many ways ompletely to do
11:13 - something you'll see more ways as we
11:15 - carry on so so when it comes to the
11:17 - layout and such I try to stick with
11:20 - these just to stick with the Python
11:21 - dictionaries when you think of the
11:23 - dictionaries become slightly less
11:24 - confusing and you can you can find
11:27 - something that's just you know stuck in
11:29 - your mind and it works for you and just
11:30 - carry on with that so I like just useful
11:34 - layout and then plotting just the this
11:36 - dictionary way of doing things although
11:38 - you don't have to stick with it as we
11:39 - could see here here we created this
11:41 - blank figure and we passed these
11:43 - arguments to it but I can also just use
11:45 - it as a pass to I plot just a dictionary
11:48 - and and as I say there are many things
11:51 - that I can do with this x-axis this
11:52 - x-axis being a key and the value pay
11:55 - there are many more things than just a
11:57 - title and we'll see some of them just in
11:59 - this in this tutorial so it just it
12:01 - lessens the confusing confusion for me
12:03 - but look at the website the plot a
12:05 - website and you might find other ways
12:07 - and we'll we'll look at some of these in
12:09 - future videos but stick I stick with
12:12 - this but look look what what works for
12:14 - you so let's just rotate these labels at
12:18 - the bottom you know jamieferry March it
12:20 - quite quite small here so they fit in
12:23 - with this big chart that we have here
12:24 - but sometimes you have long categorical
12:27 - variable names here data point values
12:29 - here and and we've also in plugs with
12:33 - these names actually you know stop
12:34 - printing on top of each other and the
12:36 - easiest way to get rid of that is of
12:37 - obviously to shorten the data point
12:39 - values these the your sample space
12:41 - values but sometimes it's not possible
12:45 - and you just want to rotate them and
12:47 - look at this and that's the reason why I
12:49 - like these dictionaries because look at
12:51 - this I have layout again which is a
12:52 - dictionary key value pay
12:54 - here's another key value pay but now I
12:57 - have to the elements here in this value
13:03 - side of the x-axis being the key and the
13:06 - value being another dictionary and
13:08 - inside of that dictionary they are two
13:10 - key value pairs
13:12 - title is months and the tick angle is
13:14 - minus 20 I then put that inside of
13:17 - quotation marks because it's not this is
13:20 - just a value numerical value so I'm
13:21 - going to say minus 20 and that rotates
13:23 - at negative 20 degrees and my y-axis is
13:27 - still all the same so let's run that and
13:29 - if we scroll down we see we have this
13:31 - negative 20 degree and from from the
13:34 - horizontal it's tilted down negative 20
13:37 - degrees so if you have these long words
13:40 - and sentences there you know they can
13:42 - all fit in because of that angle now
13:45 - let's color these bars the blue is
13:47 - fantastic I like this color but you're
13:49 - free to do what you want so I'm going to
13:51 - just change my trace here it's still a
13:54 - bar I live a bar chart I still have the
13:56 - x-axis values being categorical Jen if
13:58 - every March I still have my Y values
14:00 - being a miracle 10 11 14 but now I'm
14:03 - going to change the marker I'm going to
14:05 - introduce this marker and again it's a
14:08 - dictionary but this isn't another way
14:10 - just to do diction so I'm gonna call
14:12 - this dict here and the first thing I
14:16 - want to pass this color and the palate
14:18 - color is going to be a list and this
14:21 - list refers to the elements as you
14:24 - passed them on the x-axis so I have one
14:26 - two three elements January March I've
14:28 - gotta pass three colors here and I'm
14:30 - going to use this format note that I
14:32 - have these quotation marks they can be
14:34 - single or double they single in this
14:35 - instance but it's rgba e rgba means i
14:40 - can i can also pass a fourth value here
14:43 - which would be transparency zero being
14:45 - fully transparent one being completely
14:46 - opaque and anything in between so it's
14:49 - red green and blue channel and then
14:50 - opacity so RGB a and in parentheses 255
14:54 - that's maximum on the rate zero for blue
14:57 - green and zero for blue and full full of
15:01 - pinkness
15:01 - so value of one day the second one is
15:04 - 204 204 204 so this can be this light
15:07 - gray and it's gonna be totally opaque
15:09 - and again totally opaque so jenny is
15:12 - going to be this red color and March and
15:13 - April is going to be this light gray
15:15 - color and the data is still the trace
15:18 - now I can't just use the ones I used up
15:20 - before because data referred to too
15:24 - different trace and I've changed the
15:25 - trace yes I've just got to do data
15:27 - equals trace again as a list element and
15:30 - then the layout exactly the same and I'm
15:32 - passing this dictionary to I plot
15:35 - nothing new they and now you can see
15:37 - these beautiful colors because I can now
15:39 - have January being as red and the other
15:42 - colors beamless like grey fantastic now
15:45 - why is this one red and these ones J
15:47 - well I might want to indicate to my
15:49 - audience why this was done so I can
15:50 - actually change this hover text remember
15:53 - if I hit this one show closest data on
15:56 - hover it's going to do both the x-axis
15:59 - and y-axis in one little tooltip there
16:01 - January or hover text edge anything and
16:04 - if I do that it's just going to
16:06 - highlight them separately now hover text
16:09 - means I can individualize every element
16:13 - that I hover over to have its own text
16:16 - so we've had marker we see nets of
16:19 - introducing a new argument here to the
16:22 - bar to bar here text and I've got to do
16:27 - it individually so the red was going to
16:28 - be below target above target and above
16:31 - target everything else is the same let's
16:33 - run that and now if I hover I see this
16:35 - extra text appear in this hover so that
16:38 - was I put at in and let's below target
16:41 - and that one was above target and that
16:43 - one is above target so you can see you
16:45 - can build in this beautiful narrative
16:46 - here because you can put a lot of
16:50 - information in this text if you really
16:52 - want to to draw attention to what's
16:54 - happening here to inform your audience
16:56 - so that's fantastic
16:57 - so let's move things up just with a
16:59 - grouped bar chart and now I want to have
17:02 - two sets of elements on here and so I've
17:05 - changed my computer variable to trace
17:07 - zero and trace one and with a bar chart
17:11 - be careful now because we want the same
17:13 - sort of space for both I've got Jenny if
17:16 - every March and Jenny February March and
17:18 - I've got my y-values 10 11 14 as before
17:21 - and the second wife has 12 13 17 but now
17:25 - I'm going to add a name because I need
17:26 - to tell party that these two things are
17:28 - separate so I'm gonna say name equals
17:30 - last year and this name equals this year
17:33 - so you can well imagine that I'm just
17:34 - going to take this yes data and compared
17:36 - to last year
17:37 - that might be interesting and now look
17:38 - how data has changed are now passing two
17:41 - elements to this list still gotta be a
17:43 - list still inside of square brackets
17:44 - I've got trace zero and trace one the
17:47 - layout is going to be exactly the same
17:49 - but I'm introducing this new key value
17:51 - pair of bar mode and the bar the bar
17:54 - mode that I want you to use here is
17:56 - group so what it's going to do it's
17:58 - going to group January in January
17:59 - February in February March and March
18:01 - hints they've got to be the same and
18:03 - then I'm still gonna use this dictionary
18:05 - to pass to I plot and now they've been
18:08 - grouped and we see last year in blue and
18:11 - let's see an orange that would be the
18:12 - default colors and you see that they are
18:14 - indeed grouped so I've got this year and
18:16 - last year this year and last year this
18:18 - year last year
18:19 - a beautiful way just to do that now we
18:21 - need them group them like this we can
18:22 - stack them as well and you have exactly
18:25 - the same thing but instead of bar mode
18:27 - being group I've made bar mode being
18:29 - stacked as the key value pay here and if
18:32 - we run that we see that now we now have
18:34 - this step version of it but if I hover
18:37 - you know you can still see that this
18:39 - year's is 12 and last year was thin you
18:42 - don't have to go to the x-axis in your
18:43 - mind and your audience have to mentally
18:45 - try and see where's that top and
18:47 - subtract from the 10 you see that it
18:49 - actually gets to 12 no no pluckley makes
18:52 - it brilliantly easy with your hover you
18:55 - can give a beautiful presentation just
18:57 - do hover over these and explain so
18:59 - that's our first tutorial on plotting my
19:02 - all-time favorite library for plotting
19:04 - inside of Python but inside of other
19:06 - languages as well and a nice
19:10 - introduction for you start playing with
19:11 - us and we'll carry on with this playlist
19:14 - on YouTube and I'll introduce you to a
19:16 - lot more plotting using plotly for
19:19 - python before you do go there please
19:22 - subscribe to this channel all
19:24 - information that I'm trying to get you
19:25 - hit that notification button the little
19:27 - bell there to let you know when new
19:30 - videos are uploaded thanks a lot
19:43 - my name is Jean cava and I'm a surgeon
19:45 - at kritis care hospital in senior
19:47 - lecturer at the University of Cape Town
19:49 - now I run the copper research group we
19:52 - are really supported our postgraduate
19:53 - students in May research my main field
19:55 - of research is machine learning
19:57 - in the clinical setting in the support
19:59 - of research I have a lot of online
20:01 - courses here on YouTube but also on
20:02 - udemy and the massive open online course
20:05 - platform Coursera where I really teach
20:08 - biostatistics it's what it's all about
20:10 - now when we use Python locally one of my
20:13 - favorite parking libraries is plotly you
20:16 - can do pluckley online but you can also
20:18 - use it in Python and many other computer
20:19 - languages as well so this whole series
20:22 - is going to be about plot D and I'm
20:23 - going to start off with by just showing
20:25 - you the basics and the easiest way to
20:26 - get going is through a bar chart so
20:28 - subscribe to this channel hit that
20:31 - notification button every time a new
20:32 - lecture comes out a new tutorial comes
20:34 - out you'll be notified about it so
20:36 - please do that let's watch this first
20:38 - video on bar charts
20:47 - you
20:50 - so in today's tutorial we're going to
20:51 - talk about the humble histogram so in my
20:55 - first cell here in my Jupiter notebook
20:58 - I'm just importing my cascading style
21:00 - sheet as per usual just to get away from
21:02 - this blend looking black to do something
21:05 - a bit more interesting there we go
21:06 - if I run the cell we see these nice
21:09 - little colors and different funds for
21:11 - the markdown that is used so let's set
21:16 - up the library I'm going to import from
21:18 - plot lead off line my I plot so that I
21:21 - can plug directly in the strip the
21:23 - notebook and to the inert notebook mode
21:26 - just to English initialize the notebook
21:28 - we did that with the previous tutorial
21:31 - on the bar chart we're going to do
21:33 - exactly the same here and again we're
21:34 - going to make use of one of the high
21:35 - level charts so we're gonna do plot
21:37 - leeteuk graph objects as geo will do
21:40 - that import as well now for this case i
21:43 - just want to generate some random values
21:46 - so i'm going to import the random module
21:48 - the python a random module so that's
21:50 - very easy import random and i also want
21:54 - to import the numerical python library
21:56 - numpy and i'm going to use this
21:58 - namespace abbreviation so I'm going to
21:59 - say import numpy as in P now I'm going
22:03 - to just see this see the random number
22:05 - generator so that we get the same
22:07 - results every time we generate these
22:09 - random values and I'm just going to see
22:11 - that with a value of 1 2 3 4 and there
22:14 - we go so let's create a few random
22:17 - values my first variable here is called
22:20 - age and I'm going to just use a uniform
22:23 - distribution I'm so I'm gonna say in NP
22:25 - for numpy dot random so I'm doing the
22:27 - random module and thus numpy library and
22:30 - from there I want a uniform distribution
22:32 - my lowest value must be 21 my highest
22:35 - value is 75 and in the last argument
22:37 - here size meaning I want 100 values from
22:41 - that distribution the next one I'm just
22:44 - gonna use the computer variable salary
22:45 - again that's numpy dot random and this
22:48 - time from a normal distribution
22:50 - I want the mean which has the argument
22:54 - LOC to be 3000 I want a standard
22:58 - deviation which is the scale argument
23:02 - here to be a
23:03 - and again the size the number of samples
23:05 - I went wrong being a hundred now I'm
23:08 - just going to use a choice between just
23:12 - purely for the sake of simplicity use a
23:16 - gender binary gender here just for
23:19 - purely for the sake of simplicity we use
23:20 - and I'm going to create the the computer
23:23 - variable binary gender and I'm going to
23:25 - use from the random module I'm going to
23:27 - use random dot choices and what you can
23:30 - do with the this choices function is
23:32 - just to pass a list of all these various
23:36 - text the string elements that you want
23:39 - to choose from so I've got female than
23:40 - male and I'm going to say draw at random
23:43 - 100 of those and it is it is drawing
23:46 - that at random with replacement so the
23:49 - first one might be female outputs female
23:50 - back in the box chose another one
23:52 - blindly out of the box that might be
23:54 - female again throw it back so a hundred
23:57 - of those choices now I want to place
23:59 - these inside of a panda's data frame
24:01 - it's a beautiful thing to use I urge you
24:05 - to have a look at pandas I'm going to
24:06 - import pandas and use the abbreviation
24:08 - PD and I'm doing that because I want to
24:11 - create a data frame I'm gonna call my
24:12 - data frame DF and I'm going to call the
24:15 - data frame function here PD data frame
24:17 - and I'm going to grate this data frame
24:19 - art of using a dictionary so I'm gonna
24:23 - have this age column and underneath that
24:26 - each column think of a spreadsheet so
24:27 - the header in the first first row I have
24:30 - my header values my variables and I'm
24:32 - gonna call this first on age and down
24:34 - that column all the rows au can be
24:36 - populated by these 100 age values the
24:38 - salary is going to be the next column
24:41 - header and my spreadsheet basically
24:43 - which was what a day frame can be seen
24:46 - as in a simplistic way past all the 100
24:49 - salary values and in gender the spine
24:52 - agenda values of mine so let's run that
24:54 - and ask a to the data frame and I'm
24:56 - gonna split my data frame into one for
24:58 - female and one for male and the one that
25:00 - we're going to do how the way we're
25:01 - going to do that create these two
25:02 - computer variables female and male the
25:04 - first one says take this data frame and
25:06 - then we're going to use the square
25:08 - bracket notation because it wants to run
25:11 - down row by row so I'm just indexing
25:14 - this
25:15 - gender column so it's going to look down
25:17 - the gender column and only select those
25:19 - so this is a boolean double equal sign
25:21 - only the females and then male will only
25:24 - be continued to contain the male so I
25:26 - have two data frames now female in male
25:28 - so let's create our first babe ons
25:31 - histogram now that we have some data
25:32 - again per usual just by convention I'm
25:36 - gonna use the strace computer variable
25:37 - and it's go go because this was a graph
25:40 - object one of the high level graph
25:41 - objects and it's a histogram I'm gonna
25:44 - pass at the x value because this is stop
25:47 - there for moment what you know just to
25:49 - discuss what a histogram is where is a
25:50 - bar chart looked at categorical
25:52 - variables on the x axis the histogram is
25:55 - going to look at numerical variables so
25:57 - age is definitely a numerical variable
26:00 - ratio type numerical variable because
26:02 - there's a true zero and we have we can
26:06 - just split that up into little bins and
26:09 - if we just pass the age here pluckley
26:11 - will decide how large those buns are so
26:14 - what are bins well as soon as I show you
26:16 - the histogram I can show you what buns
26:17 - are again the computer variable data and
26:20 - pass the list of all these histogram
26:22 - elements I want to put in my figure and
26:24 - then instead of using go that figure I'm
26:26 - just going to use this dictionary
26:28 - notation so I plot and then data please
26:31 - and we see here look at the bottom this
26:34 - is these are numerical variables it's
26:37 - not categorical and what it's done is it
26:39 - seems to be having plot from 20 to 25 25
26:43 - to 30 30 to 35 35 to 40 and that's what
26:47 - I mean by these little bins so all it's
26:49 - going to do it takes those 100 values
26:50 - and it's and it decides how many are
26:53 - between 20 and 25 and it'll count them
26:56 - in it note that there was 8 and between
26:58 - 25 and 30 there was 30 between 30 and 35
27:02 - there was 5 sorry between 25 and 30
27:05 - there was 8 etc and so it goes on so
27:08 - that is why a histogram is not a bar
27:11 - chart and what you can see also there is
27:12 - really no spaces between these just to
27:15 - indicate that we're talking about a
27:16 - continuous a continuity here where is a
27:19 - bar chart by definition has these gaps
27:22 - in just recreate this visual impression
27:23 - that we are dealing with categorical
27:25 - variables that this is not a
27:26 - and yeah we do have a continuous random
27:29 - variable at the bottom called
27:31 - age now let's just change that to a
27:34 - frequency distribution otherwise known
27:36 - as a normalized histogram because what
27:38 - you can see on the top one here as we
27:39 - count we count how many was between 20
27:41 - and 25 but if we normalize that it gives
27:44 - us a frequency distribution and the way
27:47 - that we do that is just by in this
27:49 - histogram element that we create at the
27:52 - top we pass a new argument hiss known
27:54 - and we pass to it this equals
27:57 - probability I'm going to introduce a
27:59 - layout here by a format by a dictionary
28:02 - format i've title and it's frequency
28:04 - distribution of the age chain edge
28:06 - variable and my x axis I'm gonna bring
28:09 - in a title also a dictionary with a key
28:12 - value pay the value pair being a
28:13 - dictionary itself consisting of a key
28:16 - and a value and by I plot via a
28:20 - dictionary as well and now we can see
28:22 - frequency distribution of age
28:24 - I have age in five year increments here
28:26 - at the bottom but most notably you'll
28:29 - know now you'll see now that this is
28:30 - normalized so the area under this curve
28:32 - which is the area of this rectangle and
28:35 - this rectangle and this rectangle and
28:36 - this rectangle is going to sum up to be
28:39 - 1 it's mutually these these bins are
28:43 - mutually exclusive but collectively
28:44 - exhaustive so they are all here and the
28:47 - area under this stepwise curve is going
28:49 - to be 1 so it's a frequency distribution
28:52 - so I'll have to if I want to get how
28:55 - many they are this increment is 5 times
28:57 - 0.08 to get to to get to
29:01 - the value that we have there that we
29:05 - have well let's have a look so that was
29:07 - eight so remember these are now units of
29:10 - 1 so 0.08 times times 100 is going to
29:15 - say is going to give you that 8 so let's
29:18 - get to in an overlay fashion so to do
29:21 - that I'm going to grade two traces by
29:23 - convention calling them k0m trace 1 so
29:26 - go dot histogram and I have x equals
29:28 - female age and this time I'm going to
29:30 - give it a name so that we can have this
29:32 - little side bar that indicates what is
29:35 - what and the second one that I plotting
29:37 - it's going to lay them from the back to
29:39 - the front so the back one is going to be
29:43 - female the one in front is going to be
29:44 - male so I just want to lower the opacity
29:46 - of the front one so we can still see the
29:49 - bottom the bottom histogram the bottom
29:52 - trace through that I'm gonna set a
29:53 - pencil T equals 0.8 everything else
29:57 - being the same I'm bringing in my little
29:59 - layout there and now we can see I've got
30:01 - to plot C it's going to give me this
30:03 - little legend on the side and I've
30:05 - created a bit of a pasty here in the
30:07 - orange which is the male just so that
30:09 - this female at the black at the back
30:11 - Sunshine's through and but if we hover
30:14 - over them beautiful bit of its beautiful
30:17 - what pluckley does and you can see that
30:19 - it's still going to give you the values
30:21 - let's stack them so I don't have to do
30:24 - the Pesa T there and it is just going to
30:27 - stack them but it's talking to give me
30:29 - these values to say and male there was
30:32 - four and in the female there was 12 and
30:35 - look at one thing though a difference
30:37 - that it made it is now making these
30:39 - blocks of unit length of 10 years so
30:43 - I've put in that is 10 years that didn't
30:45 - that didn't influence that this was done
30:48 - I drew this first and so by you know
30:50 - automatically a chose 10 and I put the
30:52 - 10 in there after the fact so let's do
30:55 - that it's control the bun size and the
30:57 - way that we do that is by introducing
30:59 - inside of our traces here we introduce
31:01 - the X bins argument and I'm going to
31:04 - pass a dictionary for that in this
31:07 - format not the curly braces format so if
31:09 - start as 20 in that 80 so just the left
31:12 - hand side of the x-axis the right ends
31:14 - the x-axis and I want to bend size of
31:15 - five units I'm gonna do the same for
31:18 - male and I'm changing my title year to
31:20 - five because now I'm in control of it
31:22 - and if we run this we'll see that now we
31:26 - and we are back with us increments of
31:29 - five we back with this increments of
31:32 - five let's just do that again this time
31:36 - we're just going to stack them and just
31:39 - for argument's sake this time I'm
31:40 - looking at female dot salary and mail
31:43 - dot salary and we have introduced a bin
31:46 - size of 200 years starting at 500 inning
31:49 - and 5500 and because we do that from a
31:53 - normal distribution you can see this
31:56 - painting towards this normal
31:58 - distribution
31:59 - the last thing I want to show you just
32:01 - in this little tutorial is the
32:02 - cumulative histogram and when you do
32:06 - statistics you start looking at
32:07 - cumulative cumulative distribution
32:09 - functions etc this is important but
32:12 - we're not dealing with that at the
32:13 - moment this is just a histogram and the
32:15 - way that I do that inside of this
32:16 - histogram object that I've created I'm
32:18 - going to use the argument cumulative and
32:20 - pass through that a dictionary with a
32:22 - key value P of enabled being true and I
32:24 - part use the dict function instead of
32:26 - the curly braces notation here and if we
32:28 - just execute that we see this beautiful
32:31 - step wise and we can see the large steps
32:35 - here meaning we are dealing with a
32:37 - normal distribution you can see that
32:39 - from this cumulative distribution
32:40 - function so that is that for the humble
32:43 - histogram remember that is for numerical
32:46 - variables and we're just going to start
32:48 - counting them or putting them in a
32:49 - frequency distribution by creating these
32:51 - artificial little buns and we can
32:53 - control the bin size as I've shown you
32:56 - so that's the histogram I'll see you in
32:58 - the next lecture where we continue our
32:59 - look at this wonderful world of plotly
33:02 - and this wonderful library plotting
33:04 - memory that pluckley is please please
33:06 - please remember to subscribe and hit the
33:08 - notification button because that's going
33:09 - to allow you to know when new videos new
33:12 - tutorials do come out I'll see you again
33:23 - another tutorial on plotly using Python
33:26 - so here we are in interpreter notebook
33:28 - I'm going to execute this first cell as
33:31 - per usual importing on cascading style
33:33 - sheet so that we have a bit of a better
33:37 - looking notebook here so distribution
33:40 - plots let's start off by just importing
33:43 - plotly library as per usual importing I
33:46 - plot because I want to plug right inside
33:48 - of my notebook and I've got to
33:51 - initialize this notebook mode so let's
33:53 - do that and then I'm going to import the
33:56 - high level graph objects as geo so
33:59 - import plot a graph underscore obj is
34:02 - for objects as go but something new I'm
34:06 - also going to import the figure factory
34:08 - as FF let's do that let's create but of
34:13 - data firsts for working with on this
34:17 - netbook so I'm going to import there and
34:19 - a module and I'm going to import numpy
34:22 - using the abbreviation the standard
34:24 - abbreviation in P and I'm also going to
34:26 - seed the pseudo-random number generator
34:30 - so let's create three computer variables
34:32 - I'm going to call them age salary and
34:34 - binary gender so for age we're going to
34:36 - do a uniform distribution so n P dot
34:41 - random dot uniform the low must be 21
34:44 - the high 75 and I 1000 data point values
34:47 - in that uniform distribution and that
34:50 - domain from 21 375 next the salary I'm
34:54 - taking from a normal distribution and
34:56 - you see the three arguments here
34:59 - LOC means the mean scale means the
35:03 - standard deviation and science just a
35:04 - number of values I won so from a mean of
35:07 - 3000 with a standard deviation of a
35:09 - thousand I want a thousand data point
35:12 - values from this normal distribution and
35:14 - lastly from the random module we're just
35:17 - going to do random choices and purely to
35:20 - keep things easy
35:21 - see here and easy to explain at least
35:24 - we're going to stick with this binary
35:27 - distribution binary values sample space
35:32 - for my pipe for my gender variable here
35:34 - so only female amount just to make
35:36 - things easy and a thousand of those
35:37 - please I'm going to import pandas
35:40 - because I just want to create a data
35:41 - frame and here we have the computer
35:43 - variable DF and I'm going to do a
35:45 - panda's data frame and I created by key
35:48 - value pairs for a with a Python
35:50 - dictionary so I have age as my column
35:53 - header and then the age variable that we
35:56 - created a salary with salary and gender
35:58 - with a binary gender and I'm just going
36:00 - to to clay to sub data frames there so
36:03 - if we look down the gender column only
36:05 - include female and down the gender
36:07 - column only include male and I'm gonna
36:10 - call those subterra frames female and
36:12 - male so let's run that and then just
36:15 - let's look at the first five rows so we
36:16 - just call the head function a female dot
36:20 - head method day and we have the first
36:22 - five rows we see the age there and the
36:26 - gender column we'll only find female say
36:28 - and we find the salary column lace you
36:30 - can see that with these pen Estelle
36:32 - frames they actually look like just flat
36:35 - spreadsheet kind of files and let's look
36:37 - at the last five rows of the male and
36:41 - again just to make sure that gender
36:42 - column will only contain males so let's
36:46 - create our first pair bonds distribution
36:48 - plot and in the way that we're going to
36:50 - do that is this create a computer
36:51 - available called fig and let it's going
36:54 - to be FF for our figure Factory date dot
36:56 - one of the methods a as they create just
37:00 - plot and it takes a couple of arguments
37:02 - the first one is histor data and that's
37:04 - the data we want in this distribution
37:06 - plot now this this distribution plots
37:08 - going to look like a histogram it's
37:09 - nothing other than a special kind of
37:11 - histogram so we've got a given a list to
37:14 - work with and what we going to do is
37:16 - take the whole data frame go down the
37:19 - salary column and we say the values
37:22 - Annette and in to list the to list
37:25 - function lay we call on this on the
37:27 - values of the salary because we just
37:29 - want to create this the sir
37:31 - list to work with and you see it is
37:34 - there inside of the square brackets the
37:38 - group labels well we're only going to do
37:40 - one group here and I'm just going to
37:41 - call it salary you sell a salary
37:43 - distribution and as with a histogram we
37:44 - have to have a bun size and for each we
37:48 - have to have its own bun size but we
37:50 - only have one here so in our list we'll
37:52 - only have 200 so that might not make a
37:54 - lot of sense until we actually see what
37:56 - the distribution what looks like so
37:58 - let's run that and there we have our
38:00 - distribution plot we have the nice
38:04 - histogram down the bottom here and
38:07 - indeed the bun size is 200 and we also
38:11 - see this kernel estimate kernel density
38:14 - estimate is tries to draw this this
38:17 - distribution line here and there is our
38:21 - group label we only have we only
38:23 - plotting one thing and that's the salary
38:25 - distribution so there we go this is
38:26 - called the rug plot underneath and each
38:29 - of these little vertical lines is
38:30 - actually one of our salary values and
38:33 - you can see the distribution there you
38:35 - can also see that we took this from a
38:36 - normal distribution and you can see the
38:39 - Gaussian type bell-shaped at least that
38:42 - it attempts to take there so let's just
38:45 - add a title and we're going to do that
38:47 - by just using one of the ways to do it
38:52 - at least and let us just call Fink
38:53 - layout update so I've created my figure
38:58 - just as above and I'm going to update
39:00 - the layout so just another way of doing
39:03 - it instead of doing it via dictionary as
39:05 - you've seen before and I'm just going to
39:07 - add a title and that title is just gonna
39:09 - be salary distribution there we go we've
39:11 - got a beautiful beautiful title up above
39:15 - so that's not too much fun
39:18 - let's just create two data sets so now
39:20 - my hist atuh
39:21 - i'm going to make a list of those so
39:25 - this is so many ways of doing things and
39:27 - in pluckley and you might find it
39:29 - confusing to start off with but it also
39:31 - creates a lot of power and you can find
39:33 - the way that works for you so here I'm
39:34 - going to take his data create a computer
39:36 - variable and I'm gonna pass a list of
39:38 - values the first list times I'm going to
39:40 - take the female sub their frame the
39:42 - salary column the value
39:43 - my column and then create a list of that
39:45 - so the to list they and in same for the
39:48 - mail my group labels are now going to be
39:50 - female salary and male salary and now
39:53 - I'm going to grade my fig and let's
39:54 - create this plot to the his theater and
39:56 - I just passed the history to this I'm
40:00 - not saying his data equals his data
40:01 - because these are just keywords the
40:04 - normal statement keywords and we
40:05 - actually don't have to use them and then
40:07 - group labels is going to be that list
40:08 - and in my bin size I want 200 and 200 so
40:11 - the same band size which which means you
40:14 - can make the button sizes different for
40:15 - each of those let's do that I plot and
40:18 - now we can see we have male salary in
40:21 - orange day in female salary in this
40:23 - bluish color and you see the rug plot
40:25 - for each of those beautifully done let's
40:30 - change the colors of this so everything
40:33 - exactly the same but I'm gonna bring in
40:35 - a new argument to my create this plot
40:37 - here and colors I'm going to do an RGB
40:40 - with with the opacity here and 0.8 0.8
40:44 - for the peso tea you can see 20 20 20 so
40:47 - that's going to be very dark green 150
40:48 - 150 150 it's like sort of a middle gray
40:51 - color let's run that and have a look and
40:53 - there we go you can see the light
40:56 - colorful mail the darker color for
40:57 - female layer and because we set the peso
41:00 - tea so you can see the one shine through
41:02 - the other now instead of this kernel
41:04 - density estimate plot here we can
41:06 - actually just use the data that comes
41:08 - out of that it create a mean and a
41:09 - standard deviation so that we can create
41:11 - this normal distribution as as instead
41:16 - of this kernel density estimate that we
41:17 - see they we again have our history our
41:21 - group labels we create this this plot we
41:23 - have the his state her the group labels
41:24 - the bin sizes but now the curve type is
41:27 - new it's a new argument and we're just
41:28 - gonna set it to normal and yes just one
41:30 - other way that we can update this layer
41:34 - to create this layout I'm going to call
41:36 - figured layouts instead of inverted in
41:38 - the quotation marks and square brackets
41:41 - a miss Kolling dot layout and dot update
41:43 - and I'm passing yeah I'm passing this
41:46 - dictionary to it so key value pay the
41:49 - title fitted so just another way it just
41:51 - makes it so powerful and easy to use you
41:54 - can use whatever way fits you
41:56 - so now we can see this normal curve that
41:59 - it took from the data just doing the
42:01 - mean and the standard deviation so that
42:03 - we can draw this normal distribution
42:04 - here and you can see the two values
42:08 - there for male and female so in case you
42:11 - want to omit some things there's three
42:13 - things here that's our curve our
42:15 - histogram in our egg plot so we're going
42:16 - to met a few things so we're going to
42:18 - say show histogram as being false and
42:20 - show the rug plot also as false
42:23 - everything else exactly the same except
42:27 - that we've added an x-axis inside of our
42:31 - update to our layout here as a key value
42:33 - pair the key being x-axis the value
42:35 - being another dictionary and that
42:37 - dictionary having two key value pairs
42:39 - title being salary and the domain being
42:41 - a thousand to five thousand so we can
42:43 - even bring that in and there we go we
42:46 - just have these two very nice smooth
42:48 - curves there so you can see with this
42:50 - distribution plot you can do so much and
42:52 - you can well imagine some data that look
42:54 - beautifully if represented with these
42:56 - distribution plots I'll see you in the
42:58 - next tutorial
43:07 - you
43:09 - debris on the next tutorial we're going
43:11 - to look at the scatter plot first of all
43:14 - my cascading style sheet let's run net
43:16 - and we have this notebook that looks a
43:18 - bit better scatter plots let's set up
43:20 - our plucky library as per usual we're
43:22 - going to import I plot so that we can
43:24 - plot right inside of the netbook and
43:25 - we've got to initialize this notebook
43:27 - mode so we can import it and then we
43:29 - going to execute that function with
43:31 - these parentheses there I should say
43:44 - we also going to import the high-level
43:46 - chart objects so plot click graph
43:48 - objects as Gogi oh there we go
43:51 - indeed we're gonna import the numerical
43:54 - Python library so numpy and we can use
43:56 - the abbreviation NP and then we're going
43:58 - to see this cedar number generator so
44:01 - let's go lump ID or denim seed let's get
44:04 - a bit of data with some data point
44:05 - values for us to work with we can have 1
44:07 - 2 3 4 and then 5 6 7 8 computer
44:10 - variables here female age male age we
44:12 - can stick to just for the sake of ease
44:15 - of explanation just to this binary way
44:17 - of looking at gender so only female and
44:18 - male and we are going to have female so
44:32 - let's create these data points we're
44:33 - gonna have female age and male age we
44:36 - just for the sake of ease of explanation
44:38 - here I'll stick to the spidery view of
44:39 - gender so any female and male we have
44:42 - the age there we have salary and we have
44:44 - debt so female age is going to be from a
44:46 - random integer with a low of 20 high of
44:48 - 65 and 100 values and then the same for
44:52 - males the salary we just going to play a
44:56 - bit so we're gonna take female age and
44:57 - we're gonna add to that random uniform
44:59 - value from negative 10 to 10 and add
45:02 - another thousand so this is going to be
45:04 - element wise so for each element in the
45:06 - list of 100 values that we have yen does
45:08 - numpy array we're gonna add the
45:11 - corresponding your value in this uniform
45:14 - value of 100 and add another thousand
45:16 - and we're gonna do the same to male
45:18 - salary there and then we're gonna as
45:20 - female debt equals male debt so that's
45:22 - the way to make two computer variables
45:23 - and they make them exactly the same as
45:25 - each other and that's going to be a
45:26 - random integer from 15 to 30 with 100
45:30 - values so instead of using the keyword
45:32 - name saying low equals high equals
45:34 - because these are normal keywords you
45:36 - don't actually have to use the names and
45:38 - so it's 15 30 100 and then the text
45:41 - we're gonna create some of those and
45:43 - again just add 10 to each of those
45:46 - values so let's run that let's do a babe
45:50 - owned scatterplot that's what it's all
45:51 - about so we're gonna go go dot scatter
45:53 - scatter being this highly
45:56 - plot that we can use when it's created
45:58 - on top of our figure and we're going to
46:01 - use x equals female age y equals female
46:03 - salary so what can you see here with a
46:05 - scatterplot it's numerical variable
46:07 - against numerical variable and each one
46:09 - of them will be dot that we create in
46:11 - the scatter plot will be part of a pay
46:13 - and the mode that we're going to use is
46:15 - just markers and data equals trace so
46:20 - just this trace part of a list and we're
46:23 - going to use this key value pair of a
46:25 - Python dictionary to pass it to the eye
46:27 - plot and let's run that and there we can
46:30 - see the way that we created it by adding
46:33 - those values that there's some sort of
46:34 - correlation between what we have at the
46:36 - bottom age and the salary on the left
46:38 - hand side the y-axis that we can see
46:40 - here so those are quite small dots we
46:42 - can really do something about that so
46:44 - let's change these markers so I'm gonna
46:47 - have mode still be markers but then for
46:49 - marker we're gonna pass a dictionary our
46:51 - values so the dict function here in
46:54 - Python so the size being 12 and the
46:56 - marker being this orange color with a
46:58 - bit of a peso T they're only 90% of the
47:01 - peso T and let's change the layout so
47:04 - the way that I'm going to use layout
47:05 - here is again as a Python dictionary so
47:09 - we're gonna have title being correlation
47:11 - between female agent salary the x-axis
47:14 - is the key the value is another
47:16 - dictionary with a couple of key value
47:18 - pairs title being age and zero line
47:20 - being false
47:21 - and with the y-axis title being salary
47:24 - and the zero line being false as well
47:26 - and I plot the data as data and the
47:29 - layout is layered as be usual there we
47:31 - go so now we have an x axis title here a
47:34 - y-axis title we have a title here at the
47:37 - top correlation between female agent
47:39 - salary and we see these much larger
47:41 - orange dots and if I just hover on one
47:45 - you can see that the value for then for
47:49 - that one was 1039 and the age was 34
47:52 - that we can see at the bottom we can
47:55 - change that and now we can see them
47:57 - plotted the hover there being 31 age and
48:01 - 1021 being the salary 0.16 one so let's
48:06 - do more than one data set
48:08 - so for that I'm going to try to separate
48:10 - traces and one being the female one
48:13 - being male and again its age against
48:15 - salary I think you know what's going on
48:17 - here now data will be the list of the
48:19 - two traces and the data I'm going to
48:22 - just pass the data that I've created
48:24 - here this list of the two traces to the
48:26 - data key value my dictionary here and we
48:29 - can I plot that so there we go we've got
48:32 - female and orange in the male in this
48:33 - blue and we can see all the values as we
48:37 - go up we can see this beautiful
48:38 - correlation between age and salary there
48:40 - so let's add a third variable in this 2d
48:43 - space and that's what scatter plots are
48:45 - all about and I can do that in a few
48:47 - ways one is by marker size and and the
48:51 - other one is by marker color so let's
48:52 - start with us with this marker color and
48:55 - let's do introduce a color scale and you
48:57 - can see all those color scales that are
48:58 - available grays and this is Annette
49:01 - Annette Annette Annette etc we can use
49:03 - Portland as Portland Lea so in a greater
49:06 - trace in its x equals female age y
49:08 - equals female salary mode being markers
49:10 - the marker being addictive the size of
49:13 - 10 the color is color is going to be the
49:17 - female death and the color scale is
49:20 - Portland so we have age salary and debt
49:23 - all in the same t 2d plot and let's
49:26 - create a scale on the right hand side a
49:28 - color scale and we want that scale to be
49:30 - true look at the layout what we've done
49:32 - there let's do the eye plot there we go
49:34 - and now we've added this third variable
49:37 - because we've got age and salary but
49:39 - this color is also going to be this
49:42 - color that we introduced here as the
49:44 - debt level so down from 16 up here 28 so
49:48 - these red ones have more debt say than
49:51 - these blue markers here so that's one
49:53 - way to introduce a third variable the
49:55 - other one is just by way of what we
49:57 - would know as a bubble chart actually
49:59 - but that's just the marker size so what
50:02 - we're going to do here is just change
50:03 - from female to male and the marker is
50:06 - going to be the size of the marker as
50:08 - passed as a part of a dictionary here
50:11 - and we give it a color let's have a look
50:13 - at at this so now we see that
50:18 - this debt is now the size of these so
50:22 - the larger the size the larger the debt
50:24 - so that's one extra way of of bringing
50:27 - in this filtered variable so that means
50:30 - we can actually have four variables that
50:31 - we plot in 2d space because we can just
50:33 - combine we can just combine the color
50:36 - scale and the size so yeah I've made the
50:39 - size the debt and the color the tax so
50:43 - that I have four variables actually
50:45 - drawn right here in my two-dimensional
50:48 - scatter plot and that's actually quite
50:49 - fantastic to do so we've added this four
50:53 - variables just in this flat file by just
50:56 - looking at this bubble size the marker
50:58 - size and then this color scale and you
51:01 - can see the the size with the debt and
51:03 - the scale here was the text so I had the
51:08 - text value here the more Brown these
51:09 - values are and we've again used earth
51:12 - this time we've used earth just as the
51:15 - color scale that we have on the right
51:16 - hand side so I have a lot of fun with
51:18 - your scatter plots you can merely convey
51:20 - a lot of interesting information just
51:23 - using scatter plot so I'll see you in
51:25 - the next in the next tutorial please
51:29 - remember to subscribe and hit the bell
51:31 - so that you can receive notification of
51:34 - all the tutorials that I do upload to
51:38 - YouTube
51:48 - so welcome to this new tutorial we're
51:50 - going to look at line charts something
51:53 - that you might want use quite often so
51:54 - first cell of course we're going to just
51:56 - run cascading style sheet there we have
52:00 - a header one and a header to setting up
52:02 - our plotting plot the library and SP job
52:06 - we're going to import I plot and
52:07 - initialize the notebook mode so let's
52:10 - just do that initialize the notebook
52:12 - mode and then we're going to import plot
52:14 - a graph objects graph underscore obj is
52:17 - as geo and there we go let's create some
52:19 - data point values I'm going to go to
52:21 - computer variables they're gonna be days
52:22 - and sales and day is gonna go from
52:25 - Monday through Sunday and sales I'm just
52:27 - gonna have these seven values 11 14 11
52:30 - 14 10 11 10 and that's it let's run that
52:33 - to execute and we now have our two
52:34 - computer variables let's just do a
52:36 - simple line chart so to do a line chart
52:40 - we're actually gonna use the scatter so
52:42 - scatter is in scatter plots so what
52:45 - we're gonna power sisters these three
52:47 - arguments X being the day is wiping the
52:49 - sales but the mode just being lines so
52:51 - our data space and we're gonna use this
52:54 - key value pair diction Python dictionary
52:56 - here to do the eye plot and let's run
52:58 - that and we see that we have the lines
53:00 - and we go from 11 up to 14 down to 11 up
53:04 - to 14 down to 10 up to 11 and entertain
53:08 - for Sunday so beautiful there what we
53:11 - can also do is just to fill up the the
53:16 - area under this curve under the lines
53:18 - that we have here so we have full and
53:21 - we're gonna fold to 0 x so whatever the
53:23 - lowest line here is we're gonna fall
53:25 - today the full color I'm using a hex
53:27 - code in this instance my mode is still
53:29 - lines and let's plot that and we see
53:31 - it's just going to use the default color
53:33 - and it's gonna to 0 meaning this bottom
53:36 - line of the y value here is gonna fill
53:38 - up everything below that now they're
53:41 - different line types that you can try
53:42 - this actually dash dot and dash dot so
53:45 - let's do mode as well as the lines again
53:47 - in the line we're gonna pass to that a
53:50 - dictionary because it has these sub key
53:54 - words that I can use of color we're
53:55 - gonna stick to this color the width we
53:58 - can't win
53:59 - to do with the four and the type we're
54:00 - just gonna do a dash and what we're also
54:02 - going to do is just to lay out the
54:05 - x-axis key value pair keeping x axis the
54:08 - value being another dictionary with a
54:10 - key value pair zero line being false we
54:12 - don't want to have the zero line at the
54:14 - bottom and there we go we see this
54:16 - orange color we see it's quite thick
54:18 - with a four and everything is still
54:21 - there we just change this line type now
54:24 - we can also add some markers so instead
54:25 - of the mode testing lines we can have
54:27 - lines plus markers and we can give the
54:31 - size to these markers and markers marker
54:35 - we're going to equal a dict
54:36 - with one of the arguments being size and
54:38 - the size being 16 and this time I'm
54:41 - gonna add a layout the layout I'm going
54:43 - to do as a just as a Python dictionary
54:47 - here so it's gonna have a title and an
54:49 - x-axis so the key value pairs title and
54:52 - the title sales for last week but what
54:55 - you can see here I've got some HTML code
54:57 - in here so I for italics and close to
54:59 - italic so we can even do that as far as
55:01 - titles concerned an x-axis key its value
55:05 - is another dictionary with a key value
55:06 - paid the zero line being false again and
55:08 - then for I plot I'm just using this
55:12 - dictionary way to do it and as I say
55:15 - mention before there's so many ways to
55:18 - do things and plotly which might make it
55:19 - confusing initially but actually makes
55:21 - it much more powerful and you can
55:22 - actually choose you know what works for
55:24 - you so there we go we've added the sales
55:26 - for last week so we've got this title we
55:29 - can see the last week is in italics and
55:31 - now we've added these markers that might
55:33 - give it a bit more clarity as to what is
55:36 - going on here now we can also do some
55:39 - interpolation these are the straight
55:41 - lines so let's do a spline interpolation
55:44 - so what we've got use mode again being
55:47 - lines plus markers the marker having a
55:49 - size but the line we're going to do one
55:52 - of its arguments they're being shaped
55:54 - and we're gonna make the shape a spline
55:57 - so let's run that and there we go we can
56:03 - see instead of these straight lines we
56:04 - have the spline curve in between these
56:07 - values we can also do vertical and then
56:10 - horizontal
56:12 - the shape is vh vertical and main
56:15 - horizontal so let's run let's say that
56:17 - you can see so what it would do from
56:19 - this value it will go vertical
56:21 - vertically first until we get to the
56:24 - level of the second one and then go
56:26 - horizontal this is going to go vertical
56:27 - to the level of the next one and then go
56:29 - horizontal as opposed to HV which is
56:32 - horizontal and then vertical so now it's
56:36 - going to go vertical to this line of a
56:39 - second one and horizontal I mean and
56:41 - then vertical up so horizontal first and
56:44 - then vertical so you can play with those
56:45 - two and there's actually a few more ways
56:47 - that you can go about this filling of
56:49 - the gaps so let's do that let's take the
56:52 - third value there for sales remember
56:54 - it's actually fourth because it's Python
56:56 - and it comes from zero and we're just
56:58 - going to make that value in the list
56:59 - being none and if we were to plot this
57:02 - we see that we have this gap so there
57:05 - was nothing for Thursday and this gap
57:08 - they exists this gap now and we can
57:10 - actually just fill in that gap by this
57:12 - connect gaps keyword in our scatter plot
57:17 - here and everything else being exactly
57:20 - the same what it'll do now is it'll just
57:23 - fill that gap beyond this data point
57:25 - which does not exist that's none now and
57:27 - it'll just fill that gap so you can see
57:30 - line charts quite a bit of fun and quite
57:32 - a few useful things something that we
57:34 - use quite often and there we go
57:36 - line charts or line plots I'll see you
57:38 - in the next tutorial
57:49 - so here we are in another tutorial we're
57:51 - going to talk about the box and whisker
57:53 - plot and it is a very common type of
57:55 - plot to use and quite informative now
57:58 - we're going to import the cascading
58:00 - style sheet style that CSS as we usually
58:02 - do and let's set up our pluckley library
58:06 - here so from platy dot offline we import
58:09 - I plot and initialize notebook mode and
58:12 - we actually call that function init
58:13 - notebook mode so that we can plot
58:15 - directly inside off the trip the
58:17 - notebook and again we're gonna use high
58:20 - level charts the box plot is a high
58:23 - level chart so from plot a graph objects
58:25 - or graph underscore OBJ's we're gonna
58:27 - import that as go so let's import
58:31 - numerical Python because we can use that
58:34 - and we gets going to sita cedar and a
58:36 - random number generator so that we can
58:38 - get the same random values every time so
58:41 - I'm going to create three computer
58:43 - variables here let's just increase the
58:45 - screen size here so you can see properly
58:47 - we have group a group b and the control
58:50 - group and I'm going to draw 500 values
58:53 - each time as you can see the size
58:55 - argument here from a normal distribution
58:57 - with a mean of 100 in the first instance
59:00 - and a standard deviation of 10 so the
59:02 - keyword arguments they all LOC and scale
59:05 - the mean of 110 and the standard
59:08 - deviation of 15 in the mean of 105 and a
59:11 - standard deviation of 20 so we're just
59:12 - creating these three lists or raise at
59:16 - least of 500 numbers each each so let's
59:19 - do a simple box plot again we can have a
59:21 - trace and our high level chart is this
59:23 - box so it's geo dot box and on the y
59:27 - axis we want the groups the data is then
59:31 - a list of all the traces we only have a
59:33 - single trace and we use this key data
59:36 - per key value P here an addiction area
59:40 - just to the I plot and there we go and
59:43 - it's because we said y equals group a so
59:46 - on the y axis here we have all the
59:48 - levels and that gives us this vertical
59:52 - box plots so if I hover over there we
59:57 - can see a maximum we can see a minimum
59:59 - we can see the whiskers the upper and
60:02 - lower fences there we can see the medium
60:04 - and the first and third quartile values
60:07 - there we can also see these outliers
60:10 - that are beyond the whiskers and I can
60:12 - actually hover over them and we can see
60:14 - those values as well so let's just do
60:17 - more than one data set and the way that
60:19 - we're going to do that is in a Python
60:22 - equation so this is I mean new I haven't
60:24 - shown you before let's increase the size
60:26 - one more time so it's nice and clear so
60:28 - I'm going to have this empty list here
60:32 - called trace and I'm going to have
60:33 - values inside of a less the Python let's
60:36 - group a group b and control group those
60:38 - are the arrays that i created above and
60:41 - in groups I'm going to have this list of
60:44 - strings Group a group B and Group C so
60:47 - I'm going to use a little for loops I'm
60:49 - going to say for I in range 0 to the
60:51 - length of the groups so the group's here
60:54 - is 1 2 3 so it's going to go from 0 to 3
60:58 - which in Python language means 0 1 & 2
61:01 - so it's going to loop through 0 instance
61:04 - of one instance in a to instance so I'm
61:06 - going to append to the strace empty list
61:09 - a box and the Y's going to be valves I
61:15 - so the first one is valves of 0 well 0
61:17 - is group ie so I'm gonna say y equals
61:19 - group a and the name equals the first
61:22 - one or the 0 with 1 here in this groups
61:26 - list so they'll be group a and my data
61:29 - is going to be a trace now I'm going to
61:31 - run through this three times so I'm
61:33 - actually gonna have just have three
61:34 - traces and this trace is a list it's
61:36 - inside of square brackets so I'm just
61:38 - gonna have all of them there so I hope
61:39 - you can see what's going on with us for
61:41 - loop it's a pythonic way of handling
61:43 - this instead of making three traces I'm
61:46 - making one single I'm doing it once in a
61:49 - for loop so if I were to run that well
61:53 - let's let's run three values day three
61:58 - computer variable say and then run our
61:59 - for loop and now we can see we've got
62:01 - three traces name Group a group B and
62:03 - Group C and we've plotted each of them
62:06 - no problem
62:08 - now let's go through this again and what
62:11 - we're going to say yeah the only
62:13 - difference we're going to make is that
62:15 - we're going to do box plot equals
62:19 - outliers so it's another argument that
62:22 - I'm adding to this box chart that I am
62:26 - creating here and although it's no
62:30 - different from what we've seen there
62:31 - we've just explicitly said that we want
62:33 - these outliers now to be identified
62:36 - properly I can also say I met the
62:38 - outliers and then these will disappear
62:40 - they won't be shown here at all now the
62:43 - more than one ways of doing horizontal
62:45 - box plots but the easiest way is just to
62:47 - change from the y axis to the x axis so
62:50 - that's the only thing that I'm changing
62:52 - here is to say that this must now be on
62:54 - the x axis and we see these values of my
62:59 - variables are now on the y axis making
63:01 - these box plots horizontal no problem
63:05 - whatsoever now instead of just these
63:08 - outliers we can actually have all the
63:09 - box plots in Leh and another argument
63:12 - I'm going to add here is box points and
63:14 - I'm gonna say all I'm going to add a
63:16 - jitter of 0.2 in a point position of
63:19 - negative 1.5 let me show you what that
63:22 - ends up being there we go it just shows
63:26 - all those 500 points in here the jitter
63:30 - means it's not down a straight line
63:32 - which means usually can't see them I'm
63:34 - making them left right left right left
63:37 - right there's a bit of jitter on the XS
63:39 - here just too so that they can see them
63:42 - all and the point position is negative
63:44 - 1.5 so that means on the left just move
63:47 - them slightly away from this little box
63:50 - plot that we have here and now we see
63:54 - all the Box points all the values
63:57 - plotted there I can add a mean so
64:01 - another argument that I'm adding here is
64:03 - box mean because remember what we see
64:06 - here in the middle is the median we can
64:07 - also add the mean let's do that and
64:10 - that'll draw this little horizontal line
64:12 - I hope you can see it there which
64:14 - because we've taken this from normal
64:16 - distributions there's not going to be
64:18 - much difference between the mean and
64:19 - median for all three of these we can
64:22 - also do the mean and the standard
64:23 - deviation by setting box mean equal to
64:26 - this is d if we run that we can see that
64:30 - we have the mean and we have the
64:32 - standard deviation not here on this
64:35 - dotted line let's play with the line
64:37 - colors so nothing really changed I'm
64:40 - going to introduce a line and let's a
64:42 - dict with a color and we're going to
64:44 - make this black zero comma zero comma
64:47 - zero
64:48 - there we go that's us black with a width
64:50 - of one we're not going to show the
64:52 - legends so I can also take away the
64:55 - legend that we have here on the side
64:57 - let's run that and there we see that
65:00 - everything is now in this gray scale
65:02 - which perhaps is a better way to submit
65:05 - for publication we can actually have a
65:08 - lot of control over what happens and in
65:11 - this instance I'm making my line black
65:14 - again my full color is just I'm going to
65:18 - iterate over the with us for loop and
65:20 - every time I'm going to change that so
65:22 - that's a Darkrai middle gray and a
65:24 - lighter gray so that is the full color
65:27 - for this line which I didn't specify
65:28 - there and I'm also going to have the
65:32 - marker the outliers I'm going to
65:36 - specifically change the color of the
65:38 - outliers and this is a bit of an orange
65:39 - and I'm going to use this open circle
65:42 - circle one of the key value pairs inside
65:45 - of this dictionary assemble and then
65:46 - also the size so a lot of things that I
65:49 - can really play with and if we look at
65:51 - this this is actually quite beautiful we
65:53 - have our dark gray our middle gonna
65:54 - light ray as I said they and our
65:56 - outliers here are these 10 points eyes
66:00 - open circles that are colored in orange
66:03 - so really a lot that you can play with
66:06 - when dealing with with these with these
66:10 - box plots
66:18 - you
66:20 - here we are in another tutorial and this
66:23 - time around we're going to look at
66:24 - subplots how can we add a few more plots
66:27 - to the same figure let's run our first
66:31 - cell they just importing our cascading
66:33 - style sheet there we go we're going to
66:35 - import a plot and in it notebook mode
66:39 - from placket offline and we're going to
66:42 - initialize this in that book mode I'm
66:44 - also going to import the the high level
66:47 - chart objects as Gio go and a new one we
66:52 - are also going to import tools just from
66:55 - the plotly library also importing
66:58 - America Python and then we're going to
67:00 - see the serial number generator just
67:02 - with a value of 1 2 3 4 first of all two
67:08 - plots on the same row so I'm going to
67:12 - create two traces they both going to be
67:14 - scatter plots now we've created this
67:17 - data they tell that we've seen before
67:19 - just a random integer chosen from a low
67:23 - of 20 a high of 65 and 100 of those
67:25 - we're going to call that female age then
67:27 - male age female salary male salary and
67:30 - now we have depth and we have female
67:32 - text equals male text just a bunch of
67:34 - random data that we've created we've
67:36 - looked at it before so trace 0 is a
67:39 - scatter plot on the y axis we can have
67:43 - the female salary on the x axis I should
67:46 - say and on the y axis a female age we
67:49 - have markers as the mode so not lines or
67:52 - lines and Marcus just markers we're
67:55 - gonna call this female and the marker
67:57 - size gonna have a certain color in a
67:59 - certain size we're gonna have trace 1
68:02 - also scatter exactly the same thing here
68:06 - comes the new part I'm going to create a
68:07 - figure a figure object here just going
68:09 - to call it fig and that's going to be
68:11 - tools dot make underscore subplots and
68:14 - that's how you do those and I want one
68:17 - row in two columns if you think about it
68:19 - if there is a single growing two columns
68:20 - these plots are gonna be next to each
68:22 - other and I'm going to give each subplot
68:26 - a title so I'm also gonna use the
68:27 - arguments up plot underscore titles and
68:30 - I'm going to use this list of female and
68:32 - male
68:32 - now we need to append the traces to this
68:36 - figure so weenus a fig dot append
68:39 - underscore trace chase zero goes in
68:42 - position Row one column one and trace
68:45 - one goes in Row one column two so very
68:49 - easy to figure out how this is going to
68:50 - work
68:51 - figure dot layout update can also update
68:55 - a few more things in this instance just
68:56 - a title let's run this and see what it
68:59 - looks like and there we go we see the
69:02 - two plots side-by-side the subplot with
69:06 - the name drawn from the name in the
69:08 - trace mail on the side the colours we've
69:11 - drawn in and we see the plots
69:13 - side-by-side
69:15 - so our first subplot now if we look at
69:20 - it the y-axis here exactly the same
69:22 - twenty and twenty thirty and thirty we
69:24 - might as well just have one on the
69:25 - left-hand side so let's look at how to
69:27 - share that y-axis again the two traces
69:30 - nothing has changed the twos the
69:33 - subplots I've created one note two
69:35 - columns female and male have now added a
69:38 - new argument called shade underscore
69:41 - y-axis yes and when I set that to true
69:45 - everything else is exactly the same and
69:47 - if we run this we see indeed that the
69:51 - X's on this right-hand side the male
69:54 - side has disappeared we are now shading
69:56 - the same y axis
69:59 - okay what about two rows in one column
70:01 - so or we introduced us to shift us
70:04 - around with make underscore subplots
70:06 - here we're going to have two rows on one
70:08 - column and we're gonna say a shared
70:10 - x-axis and you've got to think about
70:13 - this these two traces that you are
70:14 - creating or the number of traces
70:16 - educating they've got to have the same
70:18 - domain and range here otherwise this
70:20 - might not make a lot of sense so you've
70:23 - got to think about that and if we run
70:24 - that we see we have two rows in one
70:27 - column and also we should be sharing
70:30 - this single x-axis and no matter where
70:33 - we are we can still get all the data
70:35 - because this is plot Lee you know no
70:38 - matter where we hover we're still going
70:39 - to get our
70:41 - so what about constraining the
70:43 - proportions now this one gets a bit more
70:45 - difficult and we need to pay a bit of
70:47 - attention here we still going to create
70:49 - our trace
70:50 - that's a scatter but our trace the
70:53 - second one we trading a trace one I'm
70:55 - going to put two new arguments and let
70:58 - us x-axis equals x2 as a string and
71:02 - y-axis equals y2 telling pluckley that
71:06 - this goes on a different axis altogether
71:08 - now we don't need to do that if we're
71:10 - not doing anything fancy as we've seen
71:12 - before
71:13 - but here we want to do something so I'm
71:15 - going to use a different way of creating
71:17 - the data that's a Python less tracer and
71:20 - taste one and I'm going to have a
71:22 - separate layout as we've had before and
71:25 - all the other tutorials that we've had
71:28 - so let's go out I'm still going to have
71:30 - a title I'm going to have an x-axis and
71:33 - I'm going to pass a dictionary to that
71:36 - in that dictionary is a domain and think
71:38 - about this x-axis going from 0 to 1 so 0
71:44 - to 100% of the width of what you have
71:46 - available and yet the domain we're
71:48 - saying use the leftmost 70 percent of
71:51 - the area of our figure for our first
71:54 - trace so the x-axis goes from 0 to 0.7
71:59 - x-axis to remember which comes in this
72:02 - one here we said x axis to equals x2 so
72:05 - exactly x axis to goes from 80% to 100%
72:08 - so that 20% on the right hand side and
72:11 - we just have to say that Y X is 2 so the
72:15 - second plot is anchored to x2 so it will
72:18 - know that it has to anchor the second y
72:21 - axis to this part that we've specified
72:23 - appear so go and method about and put it
72:25 - in the first one and then figures go dot
72:29 - figure so we've done it this way around
72:31 - remember you could just say I plot and
72:32 - use the standard dictionary format that
72:35 - we've seen before so let's run that and
72:38 - now we can see we constraining this like
72:40 - right hand side to the last 80 percent
72:42 - and 70 percent on this side and this
72:45 - y-axis was told to fit with this little
72:49 - one on the right
72:50 - side okay let's customize the axis a
72:53 - little bit more here's a long one for
72:55 - you we're just creating these four
72:58 - traces they're all histograms we're
73:00 - gonna make a subplot and we're gonna say
73:02 - we want two rows and two columns we give
73:04 - a name to each of those you don't have
73:06 - to but we're going to kind of call it
73:08 - figure ABC and D and I append each of
73:10 - those to the position that I won't draw
73:12 - one column 1 Row 1 column 2 Row two
73:14 - column 1 Row 2 column 2 so it's always
73:17 - very first to name column and it's got
73:19 - to line up with what you specified up
73:21 - here so fig dot layout x-axis one update
73:27 - its title x axis to update its title x
73:29 - axis 3 and 4 and then YX is 1 2 3 4
73:33 - these are all gonna line up with a
73:35 - number of plots you've created day and I
73:37 - can give each of the axis its own
73:39 - separate title we're just going to
73:42 - update to the main title and one new
73:45 - thing here I'm just gonna say show a
73:46 - legend equals false because I'm building
73:48 - in all the detail into each of these
73:50 - little subplots
73:53 - let's run there and there we go we get
73:55 - our four histograms that we created here
73:57 - figure ABCD they've all got the X's they
74:00 - all nicely labeled no problem what's all
74:03 - whatsoever so you can see female agent
74:05 - frequency male agent frequency female
74:07 - salary frequency male salary frequency
74:09 - so I can individually name each of these
74:12 - X's so we know what it's all about this
74:15 - is look lastly at the odd pairing so I'm
74:18 - going to introduce a new argument here
74:21 - to the tools that makes up lots and one
74:24 - mm two columns but you can see I've only
74:27 - listed three things here that's because
74:29 - I want the bottom two to be combined and
74:33 - I wanted to make up one single long plot
74:36 - so two at the top the first row will
74:39 - have two columns the second row just a
74:41 - single column so it's going to go all
74:43 - the way across so I've got to introduce
74:44 - the specs now look at it we see it's a
74:47 - list and it's a listing two parts the
74:51 - first part is going to be for this first
74:53 - row just showing the Tuesday and the
74:55 - second one we're going to say the column
74:57 - span spans both of the columns and then
75:01 - none because
75:03 - it is just a full thing that we won't
75:05 - because we only want these three figures
75:07 - otherwise everything is exactly the same
75:08 - as we've seen before and there we go see
75:11 - what we did it spans the whole the third
75:14 - when here Spain's this whole row on both
75:16 - sides so look and play around with this
75:19 - spec specs argument but you can clearly
75:23 - see how that was built up for the two
75:25 - rows and we want those two in the first
75:28 - row but we want a single one in the
75:31 - second row there and that is subplots
75:35 - have some fun enjoying your subplots it
75:37 - really helps to be able to do subplots
75:40 - and specially created reports or
75:42 - manuscripts for publication to have more
75:46 - than one element in this same plot
75:48 - remember to subscribe and hit that like
75:50 - button if you want to hit the
75:53 - notification button though that's
75:55 - important so that you can get notified
75:56 - if new material is released remember
75:59 - that you can also find all of these
76:01 - files on get up a link is in the
76:04 - description below speak to you next time
76:14 - you
76:17 - in this tutorial I want to show you how
76:19 - easy it is to import images into a
76:22 - collaboratory notebooks I'm on my Google
76:24 - Drive here I've navigated to I keep my
76:26 - YouTube tutorials and I'm going to
76:28 - simply say new scroll down to more and
76:31 - then collaboratory after a few seconds
76:36 - it opens a jupiter notebook for me let's
76:38 - change the name of this notebook I'm
76:40 - just going to highlight untitled 0 and
76:42 - we can just say display images as the
76:48 - title for for our Jupiter notebook so
76:50 - we've got our first cell here and I'm
76:53 - going to import two things I'm going to
76:56 - say from Google Doc collab you can just
77:01 - say import files be important because
77:05 - we're going to use that files to
77:06 - actually import our image and then to
77:09 - display the image in a notebook I'm
77:11 - going to say from I Python dot display
77:16 - import image so those two lines of code
77:22 - and we're going to use them SSA to
77:24 - import our image and then to display our
77:26 - image will add a new code cell and in
77:31 - here we generate a computer available
77:33 - called uploaded and that is going to be
77:37 - files got upload file start upload so
77:40 - we're gonna call this upload and we can
77:47 - now choose a file it's going to open the
77:50 - browser that is putting into our
77:54 - operating system and I'm going to choose
77:57 - from one of those files it's going to
78:00 - upload now as you can see 0% 18% 35%
78:10 - and there you go 100% now you'll notice
78:13 - it says saving kog logo dot light PNG to
78:17 - kog logo light space - so I've got two
78:21 - other netbooks open and I've already
78:22 - loaded these logos they and an instance
78:26 - of that will exist and it is this name
78:28 - that I now have to use to display
78:30 - whatever it was called during the upload
78:33 - is what I'm now going to use so let's
78:35 - use image and inside of image we're now
78:38 - going to use KRG logo light and then -
78:45 - dot PNG and I just want to add one more
78:49 - argument because it's a quite a large
78:51 - image that I'm importing here so its
78:54 - width let's set the width here in my
78:57 - case - 1200 let's run that and there we
79:03 - go we can see the logo being displayed
79:05 - there beautifully so that is how you
79:07 - import an image and how you display an
79:10 - image in a collaboratory jupiter
79:12 - notebook
79:13 - in this tutorial i want to talk to you
79:15 - about using plotly inside of googles
79:19 - collaboratory so I went to my Google
79:22 - Drive and I've opened a new jupiter
79:25 - notebook as a collaboratory file here
79:29 - I've given it a name and imported my
79:33 - research groups image so let's talk
79:36 - about importing or using plotly inside
79:39 - of collaboratory now it is one of the
79:41 - libraries that has already been loaded
79:44 - so it is no problem just to use plotly
79:47 - you can just import it as you would
79:49 - usually do so you can import numpy as NP
79:54 - from Sify I'm going to import stats just
79:57 - so that we can simulate some data and
79:59 - then from plotly got offline i'm going
80:01 - to import i plot and init notebook mode
80:04 - and I'm also going to import plot a
80:06 - graph objects as Geo
80:09 - now notice carefully I'm not
80:12 - initializing the notebook mode right now
80:14 - so to run this we click on the little
80:17 - arrow to the left hand side and that
80:19 - cell executes
80:21 - you'll notice on the top right-hand
80:23 - corner it has connected and it is
80:25 - connected to the Google engine as far as
80:30 - Python is concerned now you can pause
80:33 - the video here and copy this function
80:35 - you've gotta create a function that you
80:38 - then call in every cell that you want to
80:40 - use plotly in so I've called it
80:43 - configure underscore plotly underscore
80:45 - underscore state and we're going to
80:47 - import ipython and we're going to write
80:50 - this display script as I said you can
80:53 - just copy and paste it it's running and
80:59 - now let's get to simulating some data so
81:02 - I'm just going to see the pseudo-random
81:03 - number generator they just with the
81:05 - number 1 and I'm going to create a
81:07 - computer available call WCC for instance
81:10 - white cell count and I'm going to take
81:12 - that from a normal distribution with a
81:14 - mean of 15 standard deviation of 3 and I
81:17 - want 1000 of these data point values and
81:20 - now we can plot now as I mentioned here
81:24 - it's required in every cell that you
81:26 - want to run a plot the graph in so
81:28 - you've got to use these two lines of
81:30 - code so we're going to call this
81:32 - function and then we're going to
81:33 - initialize the notebook mode with
81:35 - connected equal false so you can copy
81:39 - and paste that as well that is got to go
81:41 - in every cell and now it's just normal
81:44 - plot ly I'm going to use trace 0 as is
81:46 - the log out histogram my xx is going to
81:49 - be the white cell count my data object
81:51 - it's going to hold the trace is a single
81:53 - list element and I'm just going to make
81:56 - the plot look a bit better by
81:58 - introducing some layout and then I can
82:00 - call I plot and I use as always the
82:02 - dictionary format so data being data and
82:05 - layout being layout let's run that and
82:08 - there you go we have a plot the graph
82:11 - right inside of a collaboratory Python
82:14 - notebook beautiful so copy and paste the
82:17 - definition and remember to call that the
82:20 - function and to call that function in
82:22 - every cell that you are going to use
82:25 - today the plot egg off