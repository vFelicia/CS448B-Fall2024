00:00 - I was going everybody its bro here hope
00:02 - you're doing well and in this video I'm
00:03 - going to give you guys a demonstration
00:05 - of the benefits of using nameless
00:07 - objects in Java so let's get into it
00:12 - if you find this video helpful please
00:14 - remember to Like comment and subscribe
00:17 - your support will help keep this channel
00:19 - running alright guys we're gonna be
00:21 - discussing nameless objects also known
00:23 - as anonymous objects so you know when we
00:26 - instantiate an object for example let's
00:28 - say a jlabel we would type in something
00:31 - such as jlabel then come up with a
00:33 - unique name for this J label such as
00:36 - label 1 equals new J label so what if I
00:39 - told you that we don't necessarily need
00:41 - to give this object a name we could just
00:44 - pass in something like this and this is
00:46 - available to you in certain situations
00:48 - and the reason that I thought of this is
00:50 - that I was working on a card game
00:52 - project and it was kind of inconvenient
00:54 - to come up with names for all the cards
00:56 - so what we can do is actually create
00:58 - anonymous J labels or other objects that
01:02 - we can use elsewhere in our program so
01:04 - this is going to be more of a
01:05 - demonstration instead of a walkthrough
01:07 - because I have this folder full of
01:09 - playing cards that I made and let's take
01:11 - a look at a few of these so this is card
01:13 - number 1 and it's just the ace of clubs
01:16 - card 0 is just the back of all the cards
01:20 - that I designed and it goes all the way
01:21 - up to 52 with the last card being the
01:25 - King of Spades so I'm going to give you
01:28 - guys a demonstration of how anonymous
01:30 - objects can actually be really useful so
01:33 - these are the three imports that I'm
01:34 - going to need everything related to
01:36 - java.awt everything related to Java dot
01:40 - util and everything related to Java X
01:42 - dot swing so the first thing that I'm
01:44 - going to make is a jframe so we'll call
01:47 - this J frame frame equals new J frame
01:53 - and then we're going to create an
01:55 - ArrayList of J labels to hold all of the
01:58 - cards that we have so we're gonna type
02:02 - in array list and this ArrayList is
02:06 - going to store J labels and this will
02:09 - function as a deck a deck of cards
02:11 - because it's going to hold all of the
02:13 - car
02:13 - that we have equals new array list then
02:18 - with an angle brackets J label alright
02:26 - that looks good
02:26 - now I'm going to create the frame so
02:30 - type in the name of the frame dot set
02:33 - default close operation jframe dot exit
02:39 - on close then let's set the size frame
02:44 - dot set size I usually pick 4 20 by 4 20
02:50 - if I don't really have a size idea in
02:52 - mind and then I'm actually going to set
02:55 - a layout manager so frame dot set layout
02:59 - manager and I usually don't I usually
03:01 - set this to null but I'm actually going
03:03 - to use a flow layout this time so new
03:06 - flow layout and then we need to set this
03:11 - frame visibility to true so frame dot
03:14 - set visible true and that is it for
03:19 - frame so let's add the first card to our
03:23 - deck so we're going to do this the long
03:26 - way first by actually creating a named
03:28 - object and then I'll show you the
03:30 - shortcut of using nameless objects so
03:33 - let's say that we want to create an
03:36 - image icon and the first card in our
03:38 - deck is number 1 and that is the ace of
03:42 - clubs so for this first example we're
03:45 - going to create a named object first and
03:47 - then I'll show you the shortcut right
03:48 - afterwards so if we're doing this the
03:50 - long way the difficult way we're going
03:52 - to type in image icon and we need a name
03:55 - for the ace of clubs maybe AC ac/dc and
04:00 - I'm just kidding
04:02 - new image icon then within parenthesis
04:06 - we need to place the file path within
04:08 - here so this is within a folder called
04:12 - cards within my source folder so the
04:15 - file path for this will be SRC two
04:18 - backslashes cards two backslashes again
04:22 - and this specific card is one dot PNG so
04:27 - one dot PNG now the second line is that
04:31 - we're going to add this image icon to a
04:33 - jlabel
04:34 - so J label this will be called maybe AC
04:39 - label equals nu J label a/c and then
04:48 - with our deck we're going to add our
04:52 - jlabel AC label and then we just need to
04:59 - add this card to our frame so frame dot
05:03 - ad deck dot get and this is index 0
05:09 - because it's the first card okay
05:12 - let's see what we have so far yeah
05:15 - here's our first card it is the ace of
05:18 - clubs now let's say that we want to add
05:20 - the second card and we're still doing
05:22 - this the long way by using named objects
05:25 - well we would have to repeat these three
05:27 - lines all over again so for our second
05:30 - image icon this would be the two of
05:32 - clubs so we would probably name this
05:34 - like to see for two of clubs change the
05:38 - file path to two dot PNG and we'll call
05:41 - this to see label and then we would need
05:45 - to change it here as well to see and
05:48 - then deck dot add to see label and then
05:53 - we need to add it on our frame as well
05:54 - so frame dot add but this is gonna be it
05:57 - deck dot get one and then there we are
06:04 - we have two cards so this is gonna be a
06:07 - lot of work especially if we have it
06:08 - fifty more cards to add so there's going
06:10 - to be a shortcut that we can use and
06:12 - that is by creating a nameless object so
06:15 - this is what we can do to create a
06:16 - nameless object we can actually for this
06:18 - first line chop this name off along with
06:21 - the equal sign and now since we're
06:25 - passing this name to our jlabel instead
06:28 - we can just take all of this and pass it
06:32 - within the constructor for the jlabel
06:33 - kind of like that alright and let's
06:37 - repeat the same process for our jlabel
06:39 - we have a nameless image
06:41 - within our jlabel and let's repeat this
06:45 - process again so we're going to get rid
06:47 - of all that take all of this copy it and
06:50 - then paste it within Dec dot ad and we
06:55 - can do all of this with just one line of
06:57 - code basically and let's see if this
06:59 - works which does so what we have here is
07:03 - a nameless image icon that we have added
07:07 - to a nameless J label and then we added
07:10 - this nameless jlabel to our deck which
07:13 - is an ArrayList of j labels and then if
07:16 - you need to fetch a certain J label from
07:18 - this ArrayList you can just call it by
07:20 - its index instead of the name and in
07:22 - this case the first one is index 0 if
07:25 - you need the first J label so now let's
07:28 - say that I want to add all 52 cards well
07:31 - we actually don't need to repeat this
07:33 - line of code 52 times with what I have
07:36 - set up here all these cards have a
07:37 - certain number in their name so it
07:40 - begins
07:40 - well technically at 0 but zeros just the
07:43 - back of the cards so we want cards 1
07:45 - through 52 so what I plan on doing is
07:48 - replacing this number with an index and
07:51 - we're going to use a for loop to iterate
07:54 - through this 52 times so I'm going to
07:57 - surround this line with a for loop
07:59 - and I'm going to set int I equal to 1
08:02 - our first card will continue this as
08:05 - long as I is less than or equal to 52
08:08 - and then we're going to increment I by 1
08:12 - each time and then for the file path I'm
08:15 - just going to change one thing we're
08:18 - going to replace one with I so after
08:22 - each iteration this is going to go up by
08:25 - one all right that looks good
08:29 - and one other thing that we can do is
08:31 - that we can take this line where we add
08:33 - the first index of our deck to our frame
08:37 - we can actually take this and paste it
08:40 - within here and change the index to I so
08:43 - it matches the for loop but for my
08:46 - example I probably need to change this
08:48 - to I minus one because the first index
08:51 - in this deck is 0 and the
08:54 - starts at one so let's run this now and
08:58 - here we have all of the cards well you
09:01 - can't see the rest of them because the
09:02 - screen is only so big so those are a few
09:05 - of the benefits of using nameless
09:06 - objects you can usually use a nameless
09:08 - object if you're passing it into a
09:10 - constructor for something so in this
09:13 - example we created a nameless image icon
09:15 - that we passed into the constructor for
09:18 - a jlabel and the straight labels also a
09:21 - nameless object that we passed into an
09:24 - ArrayList that is named dec and if you
09:27 - do use nameless objects when available
09:28 - well you could write your program
09:30 - involving less lines of code so for
09:32 - example if we actually used named
09:35 - objects for this project it's three
09:39 - lines of code for each card in the stuck
09:41 - so if we repeated this 51 more times
09:44 - that's over 150 lines of code just for
09:47 - this portion but we wrote this portion
09:49 - with just three lines of code for all
09:52 - the cards in this deck so if you want a
09:54 - copy of all this I'll post this in the
09:56 - comments down below but yeah those are a
09:58 - few of the benefits of using nameless
10:00 - objects in Java hey you yeah I'm talking
10:04 - to you if you learn something new then
10:06 - you can help me help you in three easy
10:09 - steps
10:10 - by smashing that like button drop a
10:12 - comment down below and subscribe if
10:14 - you'd like to become a fellow bro
10:17 - [Music]
10:31 - [Music]