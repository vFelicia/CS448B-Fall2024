00:00 - hey welcome back today I will be
00:02 - explaining the union operator the union
00:04 - operator combines the results of two or
00:07 - more select statements I have created
00:09 - two additional tables I'm only going to
00:11 - be using them temporarily I'll delete
00:13 - them once we're done with this example I
00:15 - have a table of income
00:17 - we have two columns an income name and
00:19 - an amount I've just made up some numbers
00:21 - they're probably not realistic I also
00:23 - have a table of expenses
00:28 - here's my table of expenses we have an
00:30 - expense name and some amount again I
00:33 - just made up some numbers suppose that
00:35 - our boss wants us to print a list of all
00:37 - of our different income versus expenses
00:39 - all in one window well we can easily do
00:43 - that with the Union operator after our
00:46 - first select statement delete the
00:48 - semicolon add Union
00:51 - we now have a window with the results of
00:54 - these two select statements we have
00:56 - income and expenses let's perform a
00:59 - similar operation with our employees and
01:01 - customers table I'm going to drop these
01:03 - tables though they were only temporary
01:06 - drop table income
01:10 - drop table expenses
01:13 - let's begin Mr Krabs our boss he wants
01:17 - us to create a list of everybody that
01:19 - enters the store all employees and all
01:22 - customers while we can join together
01:24 - those select statements with the Union
01:26 - operator but first let's take a look at
01:28 - each of these tables
01:30 - select all from employees
01:37 - we're going to have one problem our
01:39 - employees table has six columns whereas
01:41 - our customers table
01:46 - our customers table has three columns
01:48 - if you're combining two different select
01:50 - statements that have a different amount
01:52 - of columns a union isn't going to work
01:55 - we have a problem the used select
01:58 - statements have a different number of
02:00 - columns in order to join two select
02:03 - statements together they need the same
02:06 - number of columns my employees table has
02:08 - six columns my customers table has three
02:12 - well we could select distinct columns
02:14 - all I need is the first name and the
02:16 - last name of each of these tables
02:19 - first name last name
02:25 - and look at that that works we have now
02:28 - created a list of all of the different
02:30 - people that enter our store both
02:32 - employees and customers
02:34 - there is a different variation of the
02:37 - Union operator that is Union all that
02:39 - would include any duplicates if more
02:41 - than one value is found within each
02:43 - table
02:44 - just temporarily I'm going to insert
02:46 - Plankton into our customers table
02:49 - insert into customers
02:55 - some values
02:57 - customer ID 5 first name Sheldon
03:02 - last name plankton
03:07 - select all from customers
03:12 - Plankton is both in our customers table
03:18 - and our employees table
03:20 - now what would happen if I add a union
03:22 - to those two select statements
03:32 - with just Union by itself union doesn't
03:35 - allow duplicates Sheldon Plankton is
03:38 - only within our list once
03:39 - with Union all you would include
03:42 - duplicates
03:43 - now Sheldon Plankton is in this list
03:45 - twice
03:47 - so use whatever is more fitting for your
03:49 - situation
03:50 - I'm gonna go ahead and delete Plankton
03:52 - from this table of customers
03:56 - all right yeah so that's a union
03:57 - everybody a union combines the results
03:59 - of two or more select statements in
04:02 - order to do so those two or more select
04:04 - statements need the same number of
04:06 - columns but yeah that is the union
04:09 - operator in MySQL