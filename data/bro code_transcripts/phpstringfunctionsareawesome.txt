00:00 - hey welcome back everybody in today's
00:02 - topic I'm going to explain a few useful
00:04 - string functions you might be interested
00:06 - in let's begin with creating a username
00:10 - assign this your first and last name
00:14 - the first function I'll discuss is the
00:16 - string to lower function
00:18 - I'm going to reassign our username and
00:21 - use the string to lower function then we
00:24 - will pass in our username as an argument
00:27 - then let's Echo our username after we
00:30 - make it lowercase Echo username there my
00:33 - username is all lowercase
00:35 - alternatively there's string to Upper
00:40 - string two
00:42 - upper
00:43 - my name is all uppercase
00:46 - then we have trim
00:48 - will remove any white spaces before or
00:51 - after your string
00:53 - there there's the string pad function we
00:57 - can pad a string up to a certain amount
00:59 - of characters with a character we
01:01 - specify let's say I would like to pad my
01:04 - username to a Max size or 20 characters
01:07 - with zeros
01:09 - here's my new username
01:12 - or maybe we could use forward slashes or
01:14 - something
01:16 - then we have string replace
01:19 - string
01:20 - replace
01:22 - within our string we can replace one
01:24 - character with another you know what
01:26 - let's create a new variable how about a
01:28 - phone number
01:30 - let's say phone phone equals make up
01:33 - some phone number 123-456-7890
01:38 - here are the order of arguments what
01:40 - would we like to replace let's replace
01:43 - any dashes that'll be the first argument
01:46 - the second argument is what we're
01:48 - replacing the dashes with let's use an
01:51 - empty string
01:52 - then third is our string or variable
01:55 - containing a string
01:57 - we are reassigning our phone number
02:02 - here's a new phone number with all the
02:03 - dashes removed or we could replace them
02:06 - with something else like a forward slash
02:09 - that is the string replace function
02:12 - then we have string reverse s t r
02:17 - rev let's reverse our username
02:21 - then Echo our new username
02:23 - there it is it's all backwards
02:27 - then we have String Shuffle
02:30 - we can shuffle a string
02:35 - compare s-t-r-cmp
02:39 - we can compare a string or a variable
02:42 - against another Stringer variable
02:48 - I'll assign this to a new variable let's
02:49 - say equals so if these two strings are
02:53 - the same
02:54 - then this function will return zero if
02:58 - they're different
02:59 - we'll either return one
03:01 - or negative one
03:03 - think of it as if these two strings are
03:06 - the same string compare returns zero it
03:08 - returns false so that's how to see if
03:10 - two strings are equal
03:12 - then we have the string length function
03:14 - string length
03:17 - let's create a new variable count
03:20 - how many characters are within our
03:22 - string in my string we have eight
03:24 - characters
03:25 - one two three four five six seven eight
03:28 - let's do that with our phone number
03:31 - our phone number has 12 characters that
03:34 - is the string length function
03:36 - we can use the string position function
03:39 - to find the position of a character with
03:42 - my username let's find the first
03:45 - position of a space
03:47 - the character or string you're looking
03:49 - for is the second argument
03:51 - I'll create a new variable index
03:55 - so the index of the first space within
03:58 - my username is three zero one two three
04:02 - let's do that with our phone number
04:06 - then let's find the position of the
04:08 - first Dash which would be three as well
04:12 - zero one two three
04:15 - then we have the substring function
04:17 - sub string
04:20 - we can create a new string from a
04:23 - portion of another string with my
04:25 - username I'll take the first three
04:27 - characters and create a new string I'll
04:30 - create a variable named first name
04:34 - here are the order of arguments take
04:37 - your original string let's say our
04:38 - username
04:42 - the second argument is the starting
04:43 - index I would like to start at the
04:45 - beginning the index will be zero
04:48 - then an ending index
04:50 - I would like to end at this space in my
04:52 - name but if you're using your own first
04:54 - and last name you're going to have a
04:56 - different position
04:57 - so for me I'd like to end at the third
04:59 - index
05:00 - then I will echo my first name
05:04 - we have created a new string from an
05:07 - original string but we have to specify
05:09 - the beginning and ending index
05:11 - this time let's take the last four
05:13 - characters I'll create a new variable
05:15 - last name
05:18 - we'll use the substring function again
05:23 - username now you can list a beginning
05:25 - index and then don't specify an ending
05:27 - index then you'll create a new string
05:29 - all the way up to the end if I set my
05:31 - index to be 4
05:33 - we'll create a new substring with
05:35 - everything after the index of four no
05:38 - matter how long the string is
05:40 - so let's Echo our last name
05:43 - and there's my last name in my example
05:45 - so to get everything after the beginning
05:47 - index just don't list a third argument
05:49 - okay now we have the implode and explode
05:52 - functions with your username add your
05:55 - middle name or maiden name or whatever
05:57 - or a nickname doesn't matter just
05:59 - something
06:00 - we can use the explode function to
06:02 - assign each of these portions of our
06:04 - name into an array let's create an array
06:07 - named full name we will use the explode
06:10 - function
06:12 - we are exploding our username
06:14 - however at which character or characters
06:16 - do we separate each element in our array
06:18 - we'll do so by any spaces in this
06:20 - example so that will be the first
06:22 - argument
06:25 - explode our username let's see if this
06:28 - is actually an array let's Echo our full
06:30 - name
06:31 - warning array to string conversion
06:34 - so that's a good sign that means that
06:36 - our full name is an array you know what
06:38 - let's use a for each Loop to demonstrate
06:41 - for each
06:43 - take our array full name
06:46 - as name
06:48 - then I will Echo each name
06:55 - there here's my array
06:57 - and I've taken each portion of our name
07:00 - and placed them as elements within a new
07:02 - array now we have implode which takes an
07:05 - array and creates a string out of them a
07:07 - single string let's say our username is
07:10 - an array
07:11 - so type your full name
07:18 - then we will use the implode function
07:22 - username equals implode
07:26 - what are we imploding let's implode our
07:29 - username
07:32 - then you can add characters between each
07:34 - element I will add an empty space
07:36 - between each element when we implode it
07:39 - then let's Echo our username
07:42 - Echo username
07:44 - my array is all one long string now or
07:47 - maybe I can separate each element with a
07:49 - dash
07:51 - it's still one string all right
07:53 - everybody so those are a few useful
07:55 - string Methods I think you might be
07:57 - interested in in PHP