00:00 - today I'm going to show you how we can
00:01 - create push button widgets in pi qt5 to
00:04 - begin we will need the following Imports
00:07 - Q push button as well as Q label for
00:12 - this
00:12 - demonstration during the previous topic
00:15 - on layout managers within our
00:17 - Constructor for our main window we
00:19 - defined a method of initialize UI for
00:22 - user interface let's be sure that we're
00:24 - calling that method within our
00:26 - Constructor within this method is where
00:28 - we'll be handling managing the user
00:29 - interface
00:30 - to create a button we will call the push
00:32 - button Constructor normally when
00:35 - creating widgets we would want to prefix
00:37 - that widget with self then follow the
00:39 - name of the widget for example button
00:42 - however I'm going to demonstrate what
00:44 - happens when we don't do that because
00:46 - without self we're declaring a local
00:48 - variable we'll get back to that in just
00:50 - a moment let's create a local button
00:53 - object by calling the Q push button
00:56 - Constructor we can pass in some text
00:59 - such as as click
01:01 - me we will add this to our window self
01:04 - self refers to our window
01:07 - object let's set the geometry of the
01:09 - button button. set
01:13 - geometry we could use a layout manager
01:15 - but I do want to keep this lesson as
01:17 - simple as possible so let's pick some
01:19 - coordinates I've picked the following
01:22 - for the X and Y coordinates 150 and 200
01:26 - for the width 200 and the height 100
01:29 - here's is our button currently the font
01:31 - is a little small so I'm going to set
01:34 - the style
01:35 - sheet set style
01:39 - sheet I'll just increase the font size
01:42 - we could use Q font but that might be
01:45 - overkill for this
01:46 - demonstration let's just say the font
01:48 - size will be 30
01:51 - pixels now we can read it so we have our
01:55 - button we're going to be connecting our
01:57 - button to a function but we need to
02:00 - Define that function we'll do so within
02:02 - our main window
02:03 - class so we will Define a function of
02:08 - onclick there are no parameters besides
02:10 - self when we click on the button what
02:13 - would we like to do let's print a test
02:17 - message let's say button clicked and
02:21 - that's
02:24 - it when we click this button nothing
02:27 - happens we have to set up a signal and
02:30 - slot for the button here's
02:32 - how we will take our button do list of
02:37 - signal a signal is emitted when a widget
02:40 - is interacted with we have to list the
02:43 - type of signal so the signal we're
02:45 - looking for is
02:47 - clicked when we click this button we
02:50 - will perform a slot an action we will
02:53 - take the signal of clicked connect it to
02:56 - a slot connect is a method
03:00 - the slot will be self do the name of the
03:03 - method on
03:06 - click when we press this button we
03:09 - perform this slot this method of
03:13 - onclick each time I press the button we
03:16 - perform that
03:17 - action not only should we print a
03:19 - message for this demonstration let's set
03:22 - the text to the
03:24 - button so we have
03:26 - button. set text let's change the text
03:31 - to
03:33 - clicked so this actually isn't going to
03:36 - work because we're not prefixing self
03:39 - let me demonstrate what
03:42 - happens we print button clicked but then
03:45 - we have a problem we have an exit code
03:48 - our program was
03:49 - interrupted button is considered local
03:52 - to our initializer method our onclick
03:55 - function doesn't recognize what our
03:57 - button is that's why we're going to
03:59 - prefix our button with self so it
04:02 - belongs to the class of main window and
04:04 - not this method any instance of button
04:06 - we're going to prefix with
04:11 - self and now this should work the text
04:14 - on my button is going to change when I
04:16 - click it
04:20 - clicked you don't have to do this but
04:23 - with my personal coding style whenever I
04:25 - create a variable or an object within a
04:27 - class I like to do so within the
04:29 - Constructor even py charm is giving me a
04:34 - warning when we declare this button I'm
04:37 - going to move it to the
04:40 - Constructor and let me just rearrange
04:44 - everything self. button equals a q push
04:48 - button widget within my initializer
04:51 - method that's when I like to rearrange
04:53 - everything and style it we can also
04:55 - disable buttons when we click on them to
04:58 - do that we will take self. button call
05:03 - the set disabled method then pass in
05:07 - true when I click the button it will be
05:10 - disabled I can no longer click on
05:14 - it for the last part of this
05:16 - demonstration when we click on our
05:18 - button let's change the text of a
05:21 - label let's declare self. label within
05:25 - our Constructor equals a q label
05:29 - the text of the label will be hello we
05:33 - will add this label to self the window
05:36 - when we set up the user interface let's
05:38 - set the geometry of the
05:41 - label self. Lael do set
05:46 - geometry we could use a layout manager
05:48 - but just to keep things simple I'm going
05:50 - to set some coordinates 150 for X 300
05:54 - for y the width will be 200 and the
05:57 - height 100
06:00 - let's change the font
06:01 - size self.
06:04 - label. set style
06:08 - sheet I will set the font size to be
06:14 - 30 maybe
06:16 - 50 better all right within our onclick
06:21 - function let's instead take self.
06:25 - label. set text method then pass s some
06:30 - new text to display we're saying hello
06:34 - but when we click the button let's say
06:37 - goodbye so now when I click the button
06:41 - we will change the text on a separate
06:43 - widget my label which now says
06:46 - goodbye so with buttons you need a
06:49 - signal that's connected to a slot the
06:52 - signal is an event the slot is an action
06:55 - that this widget is going to take when
06:57 - this signal occurs
06:59 - and well everybody that is an
07:00 - introduction to push buttons in pi qt5