00:00 - hey it's bro hope you're doing well and
in this video we're going to be
00:03 - discussing V and as well as the or
logical operators in C++ let's get into
00:09 - it
logical operators allow a program to
00:13 - make a decision based on multiple
conditions so for example we can create
00:18 - an if statement with more than one
condition and for this video we'll be
00:22 - talking about the and as well as the or
logical operators let's begin with the
00:26 - and logical operator we can check to see
if one condition and some other
00:32 - condition is true if both conditions are
true as in one and the other one is true
00:38 - then the entire expression is true if
just one of them is false then the
00:42 - entire expression is false so let's
create a program where this might be
00:46 - useful then let's create a program that
will ask for somebody's temperature and
00:51 - if it falls within a certain range we
will display a message so let's create a
00:55 - double value so we can store a decimal
portion depending on what temperature
00:59 - they type in and let's just create a
variable named temp short for
01:03 - temperature and we'll create a prompt to
ask for the user's temperature enter
01:09 - your temperature and perhaps we'll put
this in Celsius and then we'll want to
01:16 - assign this variable temp all right so
then let's create an if statement and
01:23 - this will display a message if it falls
within a certain range all right so
01:27 - let's begin with if our temperature is
greater than or equal to 35 degrees
01:34 - Celsius then we'll display a message
such as your temperature is normal all
01:45 - right
but what if somebody's temperature is
01:47 - like 200 degrees Celsius that's
obviously not normal
01:51 - so we would want this to fall within a
certain range so we can use the and
01:55 - logical operator to check one more
condition so we can say if temperature
02:00 - is greater than or equal to 35 and temp
is perhaps less than or equal to 37
02:08 - point 5 then we will display this
message else we can do something else
02:13 - such as display a message like go to the
hospital
02:22 - but I spelled it wrong okay let's run
this enter your temperature I have a
02:31 - temperature of 150 degrees Celsius and
it says go to the hospital because that
02:37 - is obviously not normal so if we want
this if statement to execute it needs to
02:43 - fall within this certain range this
condition has to be true as well as this
02:48 - condition has to be true since we said
our temperature is 150 degrees Celsius
02:52 - this portion is true it evaluates us
true but this portion evaluated is false
02:59 - because 150 is not less than or equal to
30 7.5 so in order for us to execute
03:05 - this if statement it has to have both
portions of this expression become true
03:12 - so let's try it again but we'll have it
fall within this range then so perhaps
03:17 - my temperature is 36 degrees Celsius
your temperature is normal and with
03:23 - these and logical operators you can add
more than one for example we can put
03:27 - this portion within its own set of
parentheses and we can check something
03:32 - else such as temp does not equal zero I
guess it wouldn't really make sense for
03:39 - this example since we're already
checking to see if temperature is less
03:43 - than thirty seven point five but this is
one way that you can check a total of
03:48 - three things or maybe even four things
if you add another and logical operator
03:53 - but that's basically how the and logical
operator works you can check to see if
03:58 - one condition and some other condition
is true if just one of them is false
04:02 - then the entire if statement or entire
expression is false then let's clear
04:08 - what we have and move on to the or
logical operator so the or logical
04:12 - operator is somewhat similar to the and
logical operator but it will check at
04:17 - least two conditions if one of the
conditions is true and the other is
04:21 - false then the entire expression is true
the only way that the entire expression
04:26 - will evaluate as false is if both
conditions are false then so let's
04:32 - create another similar example it's
going to be a program
04:36 - that will ask if you have a cough so
let's write a perhaps let's declare a
04:41 - string variable named cough alright and
we will ask for a prompt do you have a
04:50 - cough then we'll write within
parentheses like the answer that we
04:55 - expect like yes or no all right and then
we will assign the answer to our
05:04 - variable Koff which can hold a string
but I'm forgetting a semicolon okay then
05:12 - let's write an if statement if and I
think the best way to handle this that
05:19 - uses an aura logical operator is that we
can say if our string cough and we're
05:23 - going to use the apt method and we're
going to check to see if the character
05:30 - at position 0 index 0 of our string Koff
is equal to the character perhaps why
05:39 - all right so that means somebody is
responding with yes or maybe a yeah and
05:44 - then we will say see out you are sick
and then let's write an else statement
05:54 - else you are probably fine all right so
here's a scenario
06:07 - what if somebody types in a capital y
for when they type in the word yes let's
06:13 - try it
alright so maybe for this first run
06:17 - let's just type in yes just to be sure
that this is working all right
06:21 - do you have a cough yes you are sick now
let's type that in again with a capital
06:26 - y yes all caps
you are probably fine but that's not
06:32 - what we expected so why don't we check
to see if some other condition is true
06:37 - within our if statement and we can
actually use the or logical operator
06:42 - which is two of these vertical bars and
we will also check to see if cough at
06:47 - index 0 equals
the capital y a capital y so as long as
06:54 - one of these conditions is true then
this entire expression is going to
06:59 - evaluate it's true even if one of these
conditions was false as long as one of
07:04 - them is true then this entire expression
is going to be true then and we will
07:08 - execute whatever is within the code
block of this if statement so let's try
07:11 - this one more time do you have a cough
then we'll just type in all caps yes you
07:21 - are sick which is what we wanted then so
then just like the end logical operator
07:26 - we can check to see if another condition
is also true or not so you can just add
07:32 - another set of these vertical bars if
there's one more thing you want to check
07:35 - so you're not limited to just to
surprise we're going to be talking about
07:40 - one more topic and we've discussed it
previously in another lesson and that is
07:44 - the not logical operator and basically
what this operator does is that it will
07:51 - inverse an operand it will reverse the
true or false outcome of an expression
07:58 - and I know we've talked about this
previously but it would be a good point
08:02 - to touch base with this just because
this is technically a logical operator
08:06 - and if there's anybody new to this
channel and they didn't see the previous
08:10 - videos they'll actually be informed
about this now so let's just touch base
08:14 - with this real quick so let's create a
program that will ask for a user's name
08:19 - and depending on what they type in it
will either display a welcome message or
08:24 - it will display a message such as you
did not enter your name if somebody just
08:29 - skips the prompt so let's create a
string variable named name all right and
08:34 - then we'll create a prompt to ask the
user for a name so see out enter your
08:40 - name and then we will use the get blind
function and within here we'll type in C
08:48 - and name so this is in case somebody
types in a first name and a last name it
08:55 - will actually assign the entire line of
input alright so we'll use an if
09:00 - statement and then within the if
statement will check
09:03 - see if our string name is empty and
we'll use the empty method that we
09:09 - learned about so we'll just type in a
name dot empty so if the name is empty
09:15 - they must have skipped it and we will
display a message such as perhaps we'll
09:19 - yell at the user you did not enter your
name
09:25 - frowny face all right so then if the
name is not empty then they must have
09:30 - typed into something so we'll display a
message like a welcome message that says
09:34 - welcome whatever the user's name is all
right so let's try this and then after
09:41 - this run we'll try and use the not
logical operator in action so enter your
09:46 - name I'm just going to hit enter to skip
you did not enter your name all right
09:51 - with this program there's another way to
write this and we can use the not
09:54 - logical operator so this will basically
inverse the operand if it's false it's
10:01 - going to flip it to true if it's true
it's going to flip it to false so if we
10:05 - place this not logical operator before
this name dot empty method if the name
10:10 - is empty and this pops up as true this
is going to flip it to false and the
10:16 - inverse of that too so if basically our
name is not empty we can actually
10:23 - display this welcome message so if the
name is not empty we will display our
10:29 - welcome message else the name must be
empty then so we will have our message
10:34 - that says you did not enter your name
let's try this and see if it works just
10:39 - like before so enter your name I'm just
going to hit enter you did not enter
10:44 - your name let's try it one more time but
let me fix some syntax here all right
10:50 - and to your name this time I will type
in my name and just type in bro and it
10:56 - says welcome bro well those are three
logical operators that you would find
10:59 - useful the and the or and the not
logical operators I'll post the code
11:05 - that we worked on in the comments down
below and pin it to the top if you want
11:09 - to take a look or you'd like a copy for
yourself but yeah those are how logical
11:14 - operators work in C++ hey you
if you enjoyed this lesson then you can
11:19 - help me help you in three easy steps
by smashing that like button drop a
11:25 - comment down below and subscribe if
you'd like to become a fellow bro