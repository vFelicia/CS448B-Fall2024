00:02 - hey everybody in this topic i'm going to
00:03 - show you how we can pass a struct to a
00:06 - function in c plus suppose we have a
00:08 - struct the identifier of the struct will
00:11 - be cars
00:12 - then we'll create some members related
00:14 - to cars how about a model standard
00:18 - string model
00:20 - a year interior
00:22 - then a color standard string color
00:26 - then let's go ahead and create two car
00:28 - structs how about car
00:31 - car one
00:33 - car
00:34 - car two
00:36 - then we'll assign the members
00:39 - car one dot model pick a model of a card
00:42 - that you like
00:46 - then a year
00:50 - and a color
00:55 - let's do the same thing with card two
01:02 - car two dot model car two dot year car
01:05 - two dot color
01:06 - let's pick some different data
01:12 - that'll work
01:14 - suppose we have a function to display
01:15 - the members of a car
01:18 - void
01:19 - how about print
01:21 - car we're printing the members
01:23 - we'll need some
01:24 - parameters the data type of what we're
01:27 - passing in
01:28 - are car structs so we'll list that as
01:31 - the data type
01:32 - then some nickname for the argument that
01:34 - we receive how about just car
01:37 - then i will display the members standard
01:40 - output
01:41 - car
01:42 - dot model
01:44 - should probably add a new line too
01:48 - then do the same thing with year and
01:50 - color
01:53 - car.ear
01:55 - car.color
01:56 - let's test this by printing car 1
01:59 - print car 1 we will pass the name of a
02:02 - struct as an argument
02:05 - then i think we're just missing a
02:06 - function declaration so if you're
02:08 - missing that be sure to add that
02:10 - there
02:11 - now let's run this
02:14 - okay here's our car
02:16 - mustang 2023 and the color's red
02:19 - now with structs they're passed by value
02:22 - rather than pass by reference if we pass
02:24 - a struct as an argument what we're doing
02:26 - is creating a copy of the original
02:28 - struct to demonstrate that let's display
02:30 - the address of car 1 before and within
02:33 - the function
02:34 - standard
02:35 - output
02:37 - address of operator car1
02:40 - i'll add a new line
02:44 - then let's do that within the function
02:45 - too
02:48 - the parameter name is car not car one
02:51 - there so let's try that
02:55 - so these addresses are different
02:57 - when we pass the struct to a function
02:59 - the function will create a copy of it
03:01 - it's passed by value we're displaying
03:03 - the members of the copy rather than the
03:05 - original if you need to work with the
03:07 - original struct you can use the address
03:09 - of operator we're passing a reference to
03:11 - the original car struct
03:13 - then be sure to change that within the
03:15 - function declaration as well
03:17 - so let's take a look at the addresses
03:18 - now
03:21 - yeah these addresses are the same
03:24 - car 2 is feeling pretty lonely so let's
03:26 - print car 2 as well
03:28 - print car
03:30 - pass in car 2 as an argument to this
03:32 - function
03:34 - so we should have car 1 and car 2.
03:39 - this time let's change one of the
03:40 - members within a function
03:44 - let's create a function to paint car
03:46 - paint it a different color
03:48 - paint
03:49 - car
03:50 - there will be two arguments
03:54 - an address to a car
03:56 - as well as a color which will be of the
03:59 - string data type
04:02 - be sure to add a function declaration if
04:04 - you're missing it
04:08 - then within this function we will take
04:11 - our car
04:12 - dot color
04:13 - equals
04:15 - the new color that we receive
04:18 - now before we print our cars let's paint
04:20 - them a different color
04:22 - paint car
04:23 - we have two arguments this time a car
04:26 - struct
04:27 - and a new color let's paint our mustang
04:29 - silver
04:33 - then let's paint cartoon maybe gold
04:37 - then let's display this
04:40 - okay our mustang is now silver and our
04:43 - corvette is now gold so if we didn't use
04:46 - the addressov operator when painting our
04:48 - car
04:49 - let me show you what happens
04:54 - our cars are still the original colors
04:56 - red and blue
04:58 - what we did within this function is that
04:59 - we created a copy of our car strucks
05:02 - and changed the color of the copies
05:04 - rather than the originals so if you need
05:06 - to make any changes to the original you
05:08 - would want to use the address of
05:10 - operator so that's how to pass structs
05:12 - to functions
05:13 - you can pass by value which can be
05:15 - expensive or you can pass by reference
05:18 - your assignment if you choose to do so
05:20 - is to post a function that accepts a
05:22 - struct as an argument and that's how to
05:24 - pass structs to functions in c plus