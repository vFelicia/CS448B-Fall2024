00:00 - yo what's going on everybody it's bro
00:02 - hope you're doing well
00:03 - and in this video i'm going to
00:04 - demonstrate the tree view control in
00:07 - java fx
00:08 - so sit back relax and enjoy the show
00:13 - okay tree views a tree view is a control
00:16 - that displays
00:17 - hierarchical data in a tree-like
00:19 - structure so
00:20 - this control is found underneath the
00:22 - controls drop down menu
00:24 - just drag and drop it place it anywhere
00:26 - and i'm going to give this tree view a
00:28 - unique id
00:29 - let's call it tree view now when we
00:31 - select tree items
00:32 - from our tree view we still need to
00:34 - populate our tree view
00:36 - but we would like to invoke a method
00:38 - whenever we select an item
00:39 - so underneath the code drop down menu go
00:42 - all the way down
00:43 - to on context menu requested and we can
00:47 - call
00:47 - a method when we select an item so we'll
00:49 - need to place a method name here
00:51 - and here on mouse clicked now that will
00:54 - take care of setting up
00:55 - our tree view control however we still
00:58 - need to populate our tree view with data
01:00 - and this data is known as tree items
01:03 - and these tree items will be arranged in
01:05 - a hierarchical structure
01:07 - so let's save and then head to our
01:09 - controller class as always refresh your
01:12 - fxml document and we need to declare
01:14 - a select item method so let's do so
01:17 - within our controller class
01:19 - public void select item
01:22 - okay and let's run it currently we just
01:25 - have an
01:26 - empty tree view with no data within it
01:29 - so we need to populate our tree view
01:31 - with data and possibly one of the best
01:33 - places to write that code would be
01:35 - within our initialize method
01:36 - but we need to implement the
01:38 - initializable interface
01:40 - so controller implements initializable
01:44 - interface and be sure to add any
01:46 - unimplemented methods
01:48 - and i'm just going to move this to the
01:49 - top because i like it at the top
01:52 - okay let's use some fxml injection to
01:56 - inject our tree view private tree view
02:00 - tree view at this point we need to
02:03 - create
02:04 - tree items to add to our tree view let's
02:07 - begin with a
02:08 - root item so let's declare a tree
02:11 - item and we're going to list a generic
02:14 - data type
02:14 - of strings if you're working with files
02:17 - you'll probably list files here but
02:19 - let's just work with strings because
02:20 - they're easy
02:22 - so let's call this tree item root
02:25 - item equals new
02:29 - tree item and we are going to pass in
02:34 - the text of this tree item let's say
02:37 - files like it's some sort of
02:39 - big directory of some sort okay then we
02:41 - need to add
02:42 - this root item this tree item to our
02:45 - tree view
02:46 - and let's take care of that near the
02:47 - bottom so at the bottom we'll type
02:50 - tree view dot set
02:54 - root and pass in a tree item we will
02:57 - pass in our
02:58 - root item now when we run this
03:02 - we should have our tree item within our
03:04 - tree of view
03:05 - of files now here's the plan we're going
03:07 - to create
03:08 - more tree items and add these tree items
03:11 - as
03:11 - children to our root item maybe think of
03:14 - these
03:15 - like branches if files is the root we'll
03:17 - have
03:18 - a root branches and then leaves so let's
03:21 - create
03:22 - more tree items i'm just going to copy
03:23 - this to save some time and paste it
03:26 - let's create a branch item i'll call
03:29 - this branch
03:29 - item one and what type of file should we
03:32 - have let's say we're working with
03:34 - pictures let's create maybe two more
03:37 - branches
03:39 - so branch item one two and three these
03:42 - will be kind of like different folders
03:44 - so we have a folder for pictures how
03:46 - about
03:47 - videos and music
03:50 - now we need to add all of these branches
03:53 - to our
03:54 - root item and here's how type the name
03:57 - of your root item
03:59 - dot get children
04:03 - followed by dot add or add
04:06 - all and we will pass in branch item one
04:10 - two and three
04:20 - now after running this within our files
04:22 - tree item we have
04:24 - pictures videos and music but why stop
04:27 - there
04:28 - these children can have their own
04:29 - children so let's create
04:31 - more tree items so let's copy all these
04:34 - and paste them
04:36 - let's call these leaf item
04:39 - then give them a number
04:44 - so one through six would be good
04:49 - okay so within pictures let's say we
04:52 - have
04:53 - picture one and picture
04:56 - two within videos we could have
05:00 - video one and video two
05:05 - and within music music one music two
05:13 - now we need to add these leaf items to
05:16 - each
05:16 - branch item so it's kind of the same
05:18 - process as before really
05:24 - okay we have branch item one two and
05:26 - three
05:31 - okay within branch item one let's add
05:34 - leaf item one
05:35 - and two
05:38 - and we can get rid of that okay within
05:41 - branch item two we'll have leaf item
05:44 - three and four
05:49 - then within branch item three leaf item
05:52 - 5 and 6.
05:54 - and that should be good for this example
05:57 - so we're adding
05:58 - a bunch of leaves to our branches and
06:00 - adding the branches to our root it kind
06:02 - of resembles a tree
06:03 - that analogy so let's try it
06:08 - so we have files then pictures videos
06:11 - and
06:12 - music now when i select one of these
06:14 - tree items we will invoke
06:15 - this select item method but we need to
06:18 - get
06:18 - the current value of the tree item that
06:20 - we select here's how
06:22 - we'll declare a tree item to store the
06:25 - current tree item that we select
06:27 - so type tree item list your generic type
06:29 - that you're working with we're just
06:31 - working with strings for this example
06:33 - let's call this item equals
06:36 - tree view dot get
06:39 - selection model followed by
06:42 - dot get selected item
06:46 - so whatever item that you select we will
06:48 - store within item
06:50 - and let's display the value
06:53 - system.out.printline
06:54 - item dot get value method
06:59 - now there's one issue that we're going
07:00 - to run into now here's the problem if i
07:03 - was to navigate through
07:05 - my tree view by clicking these arrows we
07:07 - will encounter a
07:08 - null pointer exception however if i was
07:11 - to click
07:12 - on these tree items this will work as
07:14 - intended we will get
07:16 - the current value of each tree item that
07:18 - we select
07:19 - now the reason that we ran into a null
07:22 - pointer exception
07:23 - is because when we select these arrows
07:26 - we are still
07:26 - invoking the select item method after
07:29 - invoking the select
07:31 - item method if there's no item to get we
07:34 - will store
07:34 - null with an item then by calling the
07:37 - get value method of item this will cause
07:41 - a null pointer exception so let's check
07:44 - to see if
07:44 - item does not equal null with an if
07:47 - statement before calling the
07:48 - get value method so let's write an if
07:51 - statement
07:52 - if item does not equal no
07:55 - then we will call the get value method
07:59 - of item and let's try it again
08:04 - now if i was to navigate through this
08:05 - tree view we do not run into that null
08:08 - pointer exception and we can select each
08:10 - tree item from our tree view and
08:12 - get the current value stored within you
08:15 - can also add icons to each of these tree
08:17 - items i'll just show you one for files
08:19 - but you can copy the process for the
08:21 - rest
08:22 - so within my source folder i have this
08:24 - png
08:25 - file named folder icon and it's about 25
08:28 - by 25 pixels so you'll need something
08:30 - small
08:31 - now when you construct a tree item you
08:33 - can also pass in
08:34 - an argument for a new image view so
08:38 - after we create files
08:40 - let's pass in a new image
08:43 - view and then within the constructor of
08:46 - our new image view
08:47 - i will pass in a new image and
08:51 - list the file name or the file path this
08:54 - is folder icon dot png
08:59 - next to this tree item i have the
09:01 - intended image that i would like to use
09:03 - so to add an image to a tree item when
09:06 - you construct your tree
09:08 - item you can pass in a new image view
09:10 - then an image
09:11 - then the file name or the file path
09:14 - here's one last
09:15 - trick for you all so to initially hide
09:17 - this
09:18 - root item and display each of these
09:20 - children
09:21 - we can use the set show root method
09:24 - of tree view so type treeview dot
09:27 - set show root and we can pass in
09:31 - false now when we display this tree view
09:34 - the root item is hidden and all of its
09:37 - children
09:37 - are instead displayed so that's another
09:39 - option available to you too
09:41 - well everybody that is the tree view
09:43 - control it is a control that displays
09:46 - hierarchical data in a tree-like
09:48 - structure if you would like a
09:50 - copy of all this code i will post this
09:51 - to the comment section down below
09:53 - but yeah that is the treeview control in
09:59 - javafx