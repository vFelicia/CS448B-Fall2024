00:00 - hey everybody so today I'm going to
00:02 - explain the position property in CSS
00:04 - there's five possible values relative
00:07 - fixed absolute sticky and static let's
00:11 - begin by creating a div section
00:14 - I'll give this div an ID of box one
00:18 - within my style sheet we will select the
00:21 - ID of box one
00:23 - I'll set the width to be 200 200 pixels
00:28 - height to be 200 pixels as well
00:32 - and a background color background Dash
00:34 - color let's go with the blue color we
00:37 - haven't picked blue for a while
00:41 - that's pretty good all right the
00:44 - position property
00:45 - with a position set to relative
00:50 - relative positions and element relative
00:52 - to where it normally should be
00:55 - with our position property set to
00:57 - relative we can move this element to the
00:59 - right to the left upwards or downwards
01:02 - we do have the properties of top bottom
01:05 - left right to push this element down
01:07 - relative to where it normally is I can
01:10 - set top to some value
01:12 - we can do that in pixels if I set top to
01:15 - be 100 pixels this element will be
01:18 - pushed downwards by 100 pixels relative
01:22 - to where it normally is in the top left
01:24 - corner another property is left I will
01:27 - push this element to the right by 100
01:30 - pixels by setting left to be 100. so now
01:34 - this element is pushed to the right by
01:36 - 100 relative to where it normally is
01:39 - it's down and to the right by 100 pixels
01:42 - negative 100 would move this element up
01:46 - left set to negative 100 would move the
01:48 - element to the left
01:51 - it's kind of backwards this element is
01:54 - positioned relative to where it normally
01:56 - should be
01:58 - then we have fixed with fixed an element
02:01 - is positioned relative to the viewport
02:03 - meaning the web browser for this example
02:06 - we're going to need a whole lot of
02:08 - paragraphs like 20 of them
02:10 - I'll type lorem hit tab to generate some
02:13 - text copy this line and paste it like 20
02:16 - times
02:22 - all right that's good enough
02:25 - let's get rid of these properties I will
02:28 - set the position to be fixed
02:31 - this element is now fixed within the
02:33 - viewport it's stuck in the top left
02:35 - corner if I were to scroll down this
02:38 - element is still in the top left corner
02:39 - of my web browser
02:41 - this element can be fixed to the right
02:44 - by setting the right property to be zero
02:47 - pixels
02:48 - zero works as well
02:51 - so now this element is in the top right
02:53 - corner
02:55 - with the bottom property if I were to
02:58 - set that to be zero pixels well now this
03:01 - element is in the bottom right corner
03:02 - this might be good for an advertisement
03:04 - if you had a banner
03:06 - for the bottom left corner that's left
03:08 - zero bottom zero
03:10 - that is the fixed position this element
03:13 - is fixed in my viewport my web browser
03:17 - then we have absolute with absolute an
03:20 - element is positioned relative to its
03:22 - nearest ancestor
03:24 - think of an ancestor as a containing
03:27 - class
03:27 - within box 1 we'll create box two
03:33 - change the ID to box two
03:36 - with box one let's set box one to be
03:39 - relative then get rid of these
03:41 - properties
03:42 - we'll create box two by copying box one
03:46 - change the ID to box two the width will
03:49 - be 100 the height will be 100 but we'll
03:52 - pick a different color something red is
03:54 - good
03:55 - the position for Box 2 will be absolute
04:01 - since Box 2 is contained within box 1
04:04 - box 1 is its nearest ancestor
04:08 - if I were to move box 1 Box 2 is still
04:11 - going to stay in the top left corner of
04:13 - box one let me demonstrate
04:16 - I'll set the top property to be 100
04:19 - pixels
04:22 - then left to be 100 pixels as well
04:26 - so even though we're moving box one box
04:28 - two it's positioned absolutely it's
04:31 - still going to stay within its container
04:33 - let's try and put Box 2 right in the
04:35 - middle of box one
04:37 - I will set the top property to be 50
04:41 - pixels
04:43 - and the left property to be 50 as well
04:47 - now Box 2 is right in the middle of box
04:49 - one we can move box one anywhere let's
04:52 - set the position of box 1 to be fixed
04:56 - so box two is still gonna stay right in
04:59 - the middle of box one no matter where it
05:01 - is
05:02 - so that is the absolute position an
05:05 - element is positioned relative to its
05:07 - nearest ancestor
05:09 - then they're sticky a sticky element is
05:12 - positioned based on the current scroll
05:14 - position meaning our scroll bar so to
05:16 - say
05:17 - with box one box one will be sticky
05:21 - let's set top to be zero pixels
05:24 - what happens now is that when I scroll
05:26 - down our web browser is going to catch
05:29 - this element
05:33 - sticky is kind of similar to fixed with
05:36 - sticky we reserve some space for the
05:38 - original element
05:39 - if I were to change that to fixed
05:43 - this element is just basically stuck to
05:45 - the top of my viewport
05:47 - with sticky it's going to be in the same
05:49 - place until we scroll past it
05:53 - alright then lastly their static static
05:56 - is the default position for an element
05:58 - in the future we will have the
06:00 - capability of changing these positions
06:02 - dynamically to set a position to the
06:05 - default which is static you just change
06:06 - it
06:08 - so those are the five position types
06:10 - relative fixed absolute sticky and
06:12 - static we'll have more practice with
06:14 - this in the future so don't worry this
06:16 - is more or less just an introduction and
06:19 - those are CSS positions