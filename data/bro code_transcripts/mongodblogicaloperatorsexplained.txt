00:00 - hey everybody today I need to explain
00:01 - logical operators logical operators
00:04 - return data based on Expressions that
00:07 - evaluate to be true or false there's
00:10 - four and or nor and not let's begin with
00:15 - and using the and logical operator we
00:17 - can check to see if two expressions are
00:20 - true
00:20 - let's begin with DB dot students that's
00:23 - the name of the collection we'll use the
00:25 - find method pass in a document object we
00:29 - will use the and logical operator it's
00:32 - preceded with the dollar sign it's an
00:34 - operator then a colon
00:36 - whatever Expressions you would like to
00:38 - check you will place within an array
00:41 - list as many Expressions as you would
00:43 - like let's return any document where the
00:46 - student is a full-time student and their
00:49 - 22 years or younger usually most
00:52 - students when they start college they're
00:53 - between the ages of 18 and 22. so let's
00:56 - find all those students we'll have two
00:58 - conditions we need two document bodies
01:00 - our first condition is full time true
01:05 - give me any student that's a full-time
01:07 - student and our other condition is give
01:11 - me any student that's age is less than
01:15 - or equal to 22 we'll use the less than
01:19 - equals comparison operator
01:21 - colon 22 and that's it
01:25 - we have one student Gary
01:28 - he's 22 and under and a full-time
01:30 - student so with the andological operator
01:33 - you can have more than one condition
01:35 - this condition needs to be true and that
01:39 - condition needs to be true we were given
01:41 - the results of Gary He's the only
01:43 - student that passes these two filters
01:45 - they both evaluated to be true let's
01:48 - copy this method we'll reuse it
01:51 - let's discuss or change and to or
01:56 - with the orological operator at least
01:59 - one of these conditions need to be true
02:00 - give me anybody that's a full-time
02:03 - student or anybody that's 22 or younger
02:06 - that will give me two documents Sandy
02:09 - she's older than 22 but she's a
02:12 - full-time student
02:13 - Gary is 22 and under and a full-time
02:16 - student so with the or logical operator
02:19 - at least one condition needs to be true
02:22 - so again let's copy this method we'll
02:25 - reuse it then we will talk about nor
02:28 - so with the neurological operator nor we
02:33 - will return any document where these
02:34 - conditions are false this needs to be
02:37 - false as well as this needs to be false
02:40 - it's kind of like and but instead of
02:42 - both conditions being true it's the
02:44 - opposite they both need to be false
02:47 - so that would give me three results
02:49 - SpongeBob he's above 22 he's a part-time
02:53 - student Patrick is 38 he's a part-time
02:56 - student Larry he's 32 he's a part-time
02:58 - student with the neurological operator
03:01 - we need both of these conditions to be
03:04 - false that gave us these three documents
03:06 - for SpongeBob Patrick and Larry
03:08 - lastly we have not suppose I have this
03:11 - query DB dot students dot find
03:16 - find any student that is not above 30. I
03:20 - could write something like this age
03:22 - colon we'll use the less than comparison
03:26 - operator colon
03:28 - 30. find any student under 30. normally
03:31 - this would give me Sandy and Gary you
03:34 - know this does work but what if somebody
03:37 - doesn't have some information for their
03:39 - age like let's change Gary's age to null
03:42 - because in SpongeBob lore Gary is a pet
03:45 - snail his age is in cat years
03:48 - just to make this easy and Compass I'm
03:50 - going to edit Gary's age to be null
03:55 - let's write that query again give me any
03:58 - student whose age is less than 30.
04:01 - well that only gives me Sandy Gary's age
04:04 - is null so another way in which we could
04:06 - return all students that are not 30 or
04:10 - above we can use the not logical
04:12 - operator
04:13 - the not logical operator reverses what
04:16 - you're looking for so let's enclose this
04:19 - document body within another document
04:21 - body
04:23 - then we will use the dollar sign not
04:26 - logical operator
04:28 - but we will change the comparison
04:30 - operator to be greater than equals give
04:34 - me any student that is not greater than
04:37 - or equal to 30. so that should give me
04:40 - both Sandy and Gary even though Gary's
04:43 - age is null in many circumstances you
04:46 - could use less than but a benefit of the
04:49 - not logical operator is that it would
04:51 - give you null values return any document
04:54 - that doesn't fit this condition
04:56 - basically speaking not just does the
04:58 - opposite alright everybody so those are
05:00 - logical operators they return data based
05:03 - on Expressions that evaluate to be true
05:06 - or false and those are logical operators
05:08 - in mongodb