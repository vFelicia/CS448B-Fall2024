00:00 - hey what's going on everybody today I'm
00:01 - going to show you how we can handle
00:03 - basic file detection using python this
00:06 - topic is the first of many involving a
00:08 - minseries on file handling using python
00:10 - first we'll need to cover file detection
00:13 - before we read and write files to work
00:15 - with files using python we will import
00:18 - the OS module OS means operating system
00:21 - this module provides a way for python
00:23 - programs to interact with the operating
00:25 - system be sure to import the OS module
00:28 - at the top for my demonstration within
00:31 - my project folder I'm going to create a
00:33 - new file new file I will name this file
00:38 - test and this will be a plain text file
00:41 - it will have the file extension of
00:44 - txt this file really doesn't need to say
00:46 - anything I'm just going to type I like
00:48 - pizza because I
00:50 - do the context doesn't matter we're not
00:53 - going to be reading files in this video
00:55 - for convenience I'm going to assign a
00:57 - variable of file path
01:00 - this will be a string for file detection
01:03 - we can either use a relative file path
01:06 - or an absolute file path we'll cover
01:08 - relative file paths first these two
01:11 - files are right next to each other my
01:13 - main python file and my test file if
01:16 - we're using a relative file path I only
01:18 - need the file name including the
01:20 - extension test.txt
01:23 - we'll be passing in this string of file
01:26 - path as an argument to check to see if
01:29 - this file exists exists I will use an if
01:31 - statement if access the OS
01:34 - module access the path there is a
01:38 - built-in method of
01:41 - exists we'll pass in our file path as
01:43 - the
01:44 - argument this method returns a Boolean
01:47 - value of true or false if this file
01:50 - exists so if this file does exist
01:54 - test.txt let's print the
01:57 - following I'll use an F string
02:01 - the
02:01 - location I'll add a
02:04 - placeholder
02:07 - exists I will place my file path within
02:10 - that
02:10 - placeholder and I'll surround it with
02:13 - single quotes to make it look nice if
02:16 - this method returns true do
02:19 - this else we'll do something else I will
02:24 - print that
02:26 - location doesn't exist
02:30 - all right let's see what
02:33 - happens the location test.txt
02:37 - exists now what if I get the extension
02:39 - wrong let's say that I'm looking for a
02:42 - PDF but it's really a txt
02:45 - file well that location doesn't exist
02:49 - you do have to be sure to get the file
02:50 - extension
02:52 - correct what if this file was in a
02:55 - folder within my python project I will
02:58 - create a new directory
03:01 - I will name this directory
03:03 - stuff then I will place my test file
03:06 - within the stuff
03:07 - folder py charm wants me to refactor my
03:10 - code because the location changed I'm
03:13 - not going to do that I'm going to be
03:15 - sure that this box is unchecked and
03:17 - press refactor we're using a relative
03:20 - file path that test file is no longer
03:22 - next to my main python file here's what
03:25 - happens that location doesn't
03:28 - exist with our relative file path we'll
03:31 - have to navigate to our stuff folder
03:33 - then find the test file so preceding
03:36 - this file name I will access the stuff
03:39 - folder stuff SL the name of the file
03:42 - test.txt
03:44 - and now we can locate that file the
03:47 - location stuff SL test exists when
03:51 - working with relative file paths you may
03:54 - need to open up a folder then find your
03:57 - file you also could work with absolute
03:59 - file paths so for this demonstration on
04:03 - my desktop I'm going to create a new
04:05 - file
04:07 - new text
04:09 - document
04:12 - test if I were to look at the properties
04:15 - this is a txt file a text
04:18 - document I'm going to copy the
04:23 - location within my file path I will
04:25 - paste it then list the name of the file
04:28 - test. TX
04:30 - T this is an absolute file path one
04:34 - problem we're running into when working
04:36 - with strings a backs slash does serve as
04:39 - an escape sequence python thinks we're
04:41 - trying to print a tab character we can
04:44 - solve this with double back
04:47 - slashes or we could use a forward
04:51 - slash either one works all right let's
04:54 - see if that file
04:56 - exists that
04:58 - does the location of that absolute file
05:00 - path does
05:02 - exist if I were to get the extension
05:04 - wrong let's say this is a
05:08 - PDF well that location doesn't
05:11 - exist there is a built-in method of is
05:14 - file to check to see if that file is in
05:16 - fact a file and not a directory let's
05:19 - add the
05:21 - following after we detect this file
05:24 - we'll write a nested if statement if
05:27 - os. paath do
05:30 - is
05:32 - file then pass in our file path as an
05:35 - argument if this file is in fact a file
05:39 - and not a
05:40 - directory I will
05:42 - print that is a
05:46 - file the location of that absolute file
05:49 - path does exist that is a file what if
05:53 - it was a directory a
05:55 - folder I'm going to delete this go to
05:57 - new
06:00 - folder I will name this folder
06:04 - test to check to see if a location is a
06:07 - directory let's add an elseif statement
06:10 - else if
06:12 - os. paath do is D meaning is
06:17 - directory this is a method we'll pass in
06:20 - our file path if this is a directory a
06:24 - folder I will print that is a
06:30 - directory let's run this again that
06:33 - location doesn't exist oh we have to get
06:35 - rid of the file
06:37 - extension it is not a plain text
06:42 - file the location of that absolute file
06:45 - path exists that is a directory a
06:49 - folder all right everybody that's basic
06:52 - file detection in the next few videos
06:54 - we're going to be reading and writing
06:56 - files and well everybody that is basic
06:58 - file detection using python