00:00 - hello everybody today I will be
00:01 - explaining the group by Clause the group
00:04 - I Clause will aggregate all rows by a
00:07 - specific column it's often used with
00:10 - aggregate functions such as the sum
00:12 - function Max Min average count just to
00:16 - name a few for my example I have a table
00:18 - of transactions now if you've been
00:20 - following along in my video series I did
00:23 - add an additional column named order
00:25 - date and filled in a few dates as well
00:28 - as two additional rows if you would like
00:30 - to follow along I would recommend
00:32 - pausing the video adding a new column
00:34 - for order date add these order dates
00:37 - then add to additional rows that's all
00:39 - the data that we'll need in this topic
00:41 - now our boss Mr Krabs he needs us to
00:45 - tell him how much money he made per day
00:47 - what is the sum of all of the amounts
00:50 - per day we have three different dates
00:52 - January 1st January 2nd January 3rd what
00:56 - is the sum of every amount on these days
00:59 - so we can use the group I Clause that
01:01 - would help us
01:02 - we will select
01:04 - the sum
01:06 - of every amount
01:09 - as a column we will also display the
01:11 - order date from
01:15 - transactions
01:17 - then we will Group by we are grouping by
01:21 - our order date
01:23 - Group by order date column
01:27 - yeah look at that there we are here is
01:29 - the sum of every amount that is grouped
01:32 - by these dates here's the total amount
01:34 - we made January 1st the total amount
01:37 - January 2nd the total amount January 3rd
01:39 - let's try a different function how about
01:42 - the max function what was the maximum
01:45 - amount on each day
01:47 - these are the maximum transactions that
01:50 - have occurred on these dates what about
01:52 - men
01:54 - these are the minimum amounts grouped by
01:57 - order date
01:58 - what's the average order every day
02:01 - you're the averages
02:03 - maybe count
02:05 - how many transactions have taken place
02:07 - each day we have two orders on the first
02:09 - two orders on the second three orders on
02:11 - the third let's try a different column
02:16 - let's Group by customer ID this time how
02:20 - much has each customer spent total we
02:23 - will select
02:24 - the sum of every amount
02:28 - we will also need a column for customer
02:31 - ID
02:33 - from our table
02:35 - transactions then we will Group by the
02:40 - customer ID column this time
02:43 - here is the sum of every amount that
02:46 - each customer has ever spent we do have
02:49 - some rows that don't have a customer ID
02:51 - so we would sum those amounts as well so
02:54 - far the customer with an ID of three
02:56 - they have spent the most amount of money
02:58 - at our establishment what about the max
03:01 - here is the maximum order that each
03:03 - customer has placed
03:06 - the min
03:08 - the average
03:12 - then count
03:14 - here is the amount of times that each
03:16 - customer has ever visited our
03:18 - establishment what if we would like to
03:20 - use a where Clause well using a where
03:22 - Clause along with the group I Clause
03:24 - normally doesn't work for example I
03:27 - would like to display all customers that
03:29 - have visited more than once who are the
03:31 - repeat customers
03:33 - so if I attempt to use a where Clause
03:35 - where
03:37 - count
03:38 - our amount column is greater than one
03:42 - well we would run into an error if you
03:45 - need to use a where clause and you're
03:47 - using the group by Clause you would want
03:49 - to instead use the word having that
03:52 - would do the same thing Group by
03:54 - customer ID where the customer ID has
03:57 - made more than one purchase
04:00 - we are also aggregating all of the
04:02 - customer ideas that are null let's use
04:05 - the and logical operator to remove that
04:08 - and customer ID is not null
04:15 - there we are the customer that has an ID
04:18 - of three they have visited our
04:20 - establishment two times they meet the
04:22 - requirements of this having Clause they
04:24 - have visited our establishment more than
04:26 - once and their customer ID is not null
04:29 - so if you ever need to use a where
04:31 - Clause if you're already using the group
04:33 - I Clause you would instead use having
04:37 - so in conclusion the group by Clause
04:39 - will aggregate all rows by a specific
04:42 - column it's often used with aggregate
04:44 - functions such as sum Max Min average
04:47 - count
04:48 - for example you could Group by an order
04:51 - date what are the total sales per date
04:53 - or by a customer ID how many times has
04:57 - each customer visited our establishment
04:59 - those are just a few examples and well
05:01 - yeah that is the group by clause in
05:04 - MySQL