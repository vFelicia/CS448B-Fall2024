00:00 - hello again so today I got to talk about
00:02 - membership operators in Python they are
00:05 - the operators in and not in they're used
00:08 - to test whether a value or a variable is
00:10 - found within a sequence which include
00:13 - but are not limited to Strings lists
00:16 - tles sets or dictionaries here's an
00:18 - example I'm going to create a word a
00:21 - secret word let's say
00:24 - apple I'm going to turn this into a game
00:27 - I will have a user guess a letter I will
00:30 - accept some user
00:33 - input guess a
00:35 - letter in the
00:38 - secret
00:41 - word what I would like to do is check to
00:43 - see if my letter is found in my word I
00:48 - can write the following statement if our
00:51 - letter in our
00:54 - word in is going to return a Boolean
00:57 - value of true if that letter is found or
01:00 - false if it's not so if our letter is
01:03 - found I'm going to print the following
01:05 - statement I'll use an F
01:07 - string there is a at a placeholder
01:12 - insert our
01:15 - letter else let's
01:18 - print I'll use an F string our
01:22 - letter was not
01:26 - found Let's test this guess a letter in
01:29 - the SEC secret word I will guess a
01:31 - capital A so all these letters are
01:34 - uppercase do take note of that is there
01:37 - an a there is an a let's guess a letter
01:41 - that's not within this word such as z z
01:45 - was not found the in membership operator
01:49 - will test to see if a value or a
01:51 - variable is found within a sequence if
01:54 - it is it returns true if not it returns
01:57 - false or for the inverse you could say
02:00 - not in if letter is not in word we would
02:05 - have to flip these statements
02:13 - around if this value or variable is not
02:16 - found in this sequence it returns true
02:20 - otherwise false so it does the opposite
02:22 - of in guess a letter in the secret word
02:26 - is there an e there is an e
02:29 - is there a q q was not found depending
02:33 - on the statement you're trying to write
02:35 - you can use either in or not in
02:37 - whichever makes more sense in that
02:39 - context let's go over another example we
02:42 - were searching for a value or a variable
02:45 - found within a string let's try a set
02:48 - list tles and sets are going to behave
02:50 - similarly I will create a set of
02:54 - students for a set you need a set of
02:56 - curly braces let's add a few student
02:58 - names such as
03:01 - SpongeBob
03:03 - Patrick and
03:07 - Sandy I will have a user type in a
03:10 - student to search
03:12 - for we will accept some user
03:15 - input enter the name of a
03:20 - student we're going to check if our
03:24 - student is
03:26 - in our sequence of students
03:30 - if in returns true let's print the
03:33 - following I'll use an F string insert
03:36 - our
03:38 - student is a
03:42 - student else we will print I'll use an
03:46 - FST
03:47 - string insert that
03:51 - student was not
03:54 - found enter the name of a
03:57 - student let's search for SpongeBob
03:59 - SpongeBob is a student enter the name of
04:02 - a student let's attempt Squidward
04:05 - Squidward was not
04:07 - found and much like the first example we
04:11 - can do the opposite see if a value or a
04:14 - variable is not in a
04:16 - sequence we would have to switch these
04:18 - statements
04:23 - around enter the name of a student is
04:26 - Sandy a student Sandy is a student enter
04:30 - the name of a student is Laria student
04:33 - Laria was not
04:35 - found now we'll cover dictionaries I
04:38 - will create a dictionary of grades
04:41 - student grades like a grade
04:43 - book let's say that the student of
04:46 - Sandy she will be a key has a value of
04:52 - a
04:55 - Squidward the key of Squidward has a
04:58 - value of B
05:01 - SpongeBob he is also a
05:04 - key SpongeBob has a grade of
05:08 - C then
05:10 - Patrick Patrick has a grade of
05:17 - D here is my dictionary of
05:21 - grades then we'll search for a student
05:24 - student equals
05:28 - input enter the name of a
05:32 - student we'll check if let me close this
05:37 - if our
05:38 - student is found within
05:41 - grades then I will print the
05:43 - following we're looking for keys is
05:46 - there a matching key if we find that
05:48 - student I'll make this an F
05:50 - string let's display the associated
05:53 - value of that
05:55 - key student
06:00 - students grade is I'll add a
06:04 - placeholder once we find a student we
06:07 - have to get that value at the given
06:10 - key to do that we'll take our dictionary
06:13 - of grades at index of student this will
06:18 - retrieve the value at a given
06:20 - key if we don't find a student we'll
06:23 - output the
06:25 - following again I'll use an FST
06:28 - string student
06:31 - was not
06:32 - found so now if I search for a student
06:36 - such as SpongeBob we're given a grade
06:38 - we're given the value at that key that
06:41 - we're searching
06:43 - for Let's test Sandy Sand's great as a
06:49 - Squidward Squidward's great as B and
06:53 - Patrick Patrick's great is D but Larry
06:57 - is not a student if I search for him
07:00 - well Larry was not
07:02 - found let's go over one last
07:06 - example we're going to create a variable
07:08 - of email it's going to be a string type
07:11 - in whatever your email is brocode
07:16 - gmail.com I would like to see if this
07:18 - email is valid does it contain at and a
07:22 - period I will write if our value of at
07:27 - that character is is in our
07:32 - email and a period is in
07:36 - email we have two conditions check if at
07:39 - is an email and check if a period is an
07:42 - email if so it's a valid email then
07:46 - we'll
07:47 - print valid
07:50 - email else we will
07:54 - print invalid email
07:59 - is my email valid that email is
08:03 - valid I'll get rid of the
08:06 - at invalid
08:08 - email I'll get rid of the period
08:10 - following
08:13 - Gmail that email is also
08:16 - invalid in this example we're checking
08:19 - two
08:20 - conditions if this value is found within
08:23 - this sequence and this value is found
08:25 - within this
08:26 - sequence all right everybody so those
08:29 - are membership operators in and not in
08:33 - they will return a Boolean based on
08:35 - whether a value or a variable is found
08:38 - within a sequence which include but are
08:40 - not limited to Strings lists TPP sets or
08:44 - dictionaries and well everybody those
08:46 - are membership operators in Python