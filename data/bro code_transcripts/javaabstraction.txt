00:00 - hey what's going on everybody to bro
00:02 - hope you're doing well and in this video
00:03 - i'm going to teach you guys about the
00:05 - abstract keyword in java so sit back
00:08 - relax
00:08 - and enjoy the show
00:11 - make sure you like comment and subscribe
00:15 - one like equals one prayer for the
00:17 - youtube algorithm
00:19 - all right let's talk about the abstract
00:21 - keyword so this is a keyword that can be
00:23 - applied to both
00:24 - classes and methods when you define them
00:26 - let's begin with abstract classes
00:28 - an abstract class cannot be instantiated
00:31 - but they can have
00:32 - a subclass that can be and here's an
00:35 - example i have two additional classes a
00:37 - class called
00:38 - vehicle and a class called car that
00:41 - extends vehicle
00:42 - so car is the subclass also known as the
00:45 - child class of the vehicle class
00:47 - and we can create objects from both of
00:49 - these classes and let's try that
00:51 - so first let's create a car car car
00:54 - equals new car
00:55 - and let's also create a vehicle object
00:57 - because we can
00:58 - so vehicle vehicle equals
01:02 - new vehicle
01:05 - so we can create instances of both of
01:07 - these classes
01:08 - just fine but we may not want to be able
01:11 - to do so
01:12 - so adding the abstract keyword to a
01:14 - class adds a layer of security
01:16 - so here's an example let's pretend that
01:18 - we walk into a
01:19 - car dealership and we ask a salesperson
01:22 - for a vehicle and they might reply with
01:25 - well what
01:26 - kind of vehicle are you looking for are
01:28 - you looking for a car
01:30 - a motorcycle a truck and we just say no
01:33 - we want a plane generic vehicle and they
01:36 - might think you're crazy because
01:38 - a vehicle is too generic it's an idea
01:41 - it's abstract well at least it should be
01:43 - abstract we need a
01:44 - certain type of vehicle so what we could
01:46 - do to prevent somebody from creating
01:48 - an instance of a class that is too vague
01:51 - or abstract
01:52 - we can use the abstract modifier when we
01:55 - declare this class
01:56 - so with vehicles let's add the abstract
01:59 - modifier
02:01 - and we can no longer create an instance
02:03 - of this class and it says cannot
02:05 - instantiate the type vehicle
02:07 - so this adds a layer of security to this
02:10 - program
02:10 - so in order to get this to run we cannot
02:13 - declare
02:13 - a vehicle object we have to pick a
02:16 - certain type
02:17 - of vehicle a child class of the vehicle
02:20 - class
02:21 - whether it's a car a bike a truck
02:24 - whatever now we can also create an
02:26 - abstract method too
02:28 - so let's declare this within the vehicle
02:30 - class and an abstract method
02:32 - is declared without an implementation so
02:35 - that means without a body
02:36 - so let's say that all vehicles should
02:38 - have a method to go
02:40 - because that's the point of a vehicle so
02:43 - all vehicles
02:44 - should go this is going to be an
02:46 - abstract method we're going to use the
02:47 - abstract keyword
02:48 - we need a return type we'll just make
02:50 - this void and this will be go
02:53 - and we do not need a body for this
02:55 - method and if we attempt to add a body
02:58 - a set of curly braces well we're going
03:01 - to have a problem and this says
03:03 - abstract methods do not specify a body
03:08 - so what this does is that it forces us
03:10 - to
03:11 - implement this method in one of the
03:13 - child classes
03:15 - that our vehicle class has so if we
03:17 - attempt to run this
03:19 - actually you can see that it's popping
03:20 - up already the type car must implement
03:23 - the inherited abstract method
03:25 - vehicle.go so what we could do is add
03:29 - unimplemented methods and what we're
03:30 - doing is actually method overriding
03:33 - so we can add our own implementation of
03:36 - this go method more specifically for
03:38 - cars so let's say
03:40 - maybe the driver is
03:43 - driving the car and that should be fine
03:46 - so we can no longer create an instance
03:49 - of the vehicle class because it's
03:51 - abstract
03:51 - and a vehicle object is too vague so we
03:54 - would like to force a user
03:56 - to pick a certain type of vehicle a
03:59 - class that inherits from the vehicle
04:00 - class
04:01 - and we can also use the go method that
04:03 - is found within the vehicle class too
04:05 - but we are forced to override it or
04:07 - implement it
04:08 - in each of the child classes that our
04:10 - vehicle might have
04:12 - and it's just the same as what we would
04:14 - normally do with calling a method
04:15 - so car dot go and this will print
04:20 - the driver is driving the car so that's
04:22 - the whole point of the abstract keyword
04:24 - it adds a layer of security to your
04:26 - program and this can be applied to both
04:27 - classes and methods
04:29 - if it's applied to a class a user cannot
04:31 - instantiate
04:32 - an instance of an abstract class and
04:35 - with abstract methods
04:36 - they are declared without an
04:38 - implementation but a subclass or child
04:40 - class
04:41 - has to implement that somewhere well
04:43 - that's the basics of the
04:44 - abstract keyword if you would like a
04:46 - copy of all this code i will post all of
04:48 - this in the comments down below but yeah
04:50 - that's the basics of the abstract
04:52 - keyword
04:53 - in java hey you yeah i'm talking to you
04:57 - if you learn something new then you can
04:59 - help me help you
05:01 - in three easy steps by smashing that
05:03 - like button
05:04 - drop a comment down below and subscribe
05:06 - if you'd like to become a fellow bro
05:13 - [Music]
05:29 - you