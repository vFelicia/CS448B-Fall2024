00:00 - hey everybody so today we got to talk
00:01 - about both multiple and multi-level
00:04 - inheritance we'll begin with multiple
00:06 - inheritance that's when a child class
00:09 - inherits from more than one parent class
00:11 - for example a class of C can inherit the
00:15 - traits from both class A and B in Python
00:18 - you can have more than one parent
00:20 - multi-level inheritance we'll talk about
00:22 - near the end of this topic so in this
00:25 - example we're going to create two parent
00:27 - classes
00:28 - prey I'll write pass for
00:31 - now and
00:36 - Predator we'll create a class of
00:41 - rabbit a class of
00:45 - Hawk then class
00:51 - fish rabbit Hawk and fish are going to
00:54 - be children classes prey and Predator
00:58 - will be parents if one of these classes
01:01 - rabbit hawk or fish inherit from prey
01:04 - they get the ability to flee we will
01:07 - Define a method of flee all we'll do in
01:10 - this example is print the following
01:13 - text this animal is fleeing if you're a
01:18 - predator you get the method to hunt
01:22 - Define
01:23 - hunt we will
01:26 - print this animal is
01:31 - hunting rabbits they will inherit from
01:34 - the prey class they're typically not
01:36 - Predators except that one rabbit and
01:38 - montypython in the Holy Grail that's the
01:40 - exception rabbit will inherit the prey
01:43 - class then it gets access to a flea
01:46 - method Hawks are predators they will
01:50 - inherit the Predator class now fish they
01:54 - will hunt smaller fish and flee from
01:57 - bigger fish you could consider fish both
01:59 - prey and predators so they will inherit
02:02 - both classes we will use multiple
02:05 - inheritance they will inherit everything
02:07 - from the prey class and the Predator
02:10 - class now let's see if this does in fact
02:12 - work now we'll create a rabbit object
02:14 - rabbit equals rabbit there are no
02:17 - parameter setup we don't need to send
02:18 - any arguments to the
02:20 - Constructor Hawk equals
02:23 - Hawk and fish equals
02:27 - fish so let's take our rabbit object and
02:30 - they should have a flea method rabbit.
02:32 - flea method this animal is fleeing but
02:35 - they do not have a hunt method because
02:37 - they're not
02:39 - Predators rabbit object has no attribute
02:42 - hunt Hawks can
02:45 - hunt they're Predators they inherited
02:48 - that method this animal is hunting but
02:51 - they can't flee they're not prey Hawk
02:54 - object has no attribute flea fish can do
02:57 - both they inherit from the prey class
03:00 - and the Predator
03:02 - class fish. flee this animal is fleeing
03:07 - fish.
03:08 - hunt this animal is hunting children
03:12 - classes can inherit from more than one
03:13 - parent which is what we did for fish
03:16 - they are both prey and predators whereas
03:19 - in rabbits are just prey Hawks are just
03:21 - Predators if you need to inherit from
03:24 - more than one parent you just add that
03:26 - additional class to The Inheritance list
03:30 - with multi-level inheritance a parent
03:33 - can inherit from another parent we will
03:35 - create a
03:36 - class of
03:38 - animal and for now I'll write pass prey
03:42 - and Predator are going to inherit from
03:44 - the animal class so we need to add
03:47 - animal to each inheritance
03:50 - list let's say if you're an animal you
03:54 - get a method to eat all animals will eat
03:58 - print
04:00 - this animal is eating and you can sleep
04:05 - Define
04:08 - sleep
04:10 - print this animal is
04:15 - sleeping so think of rabbit Hawk and
04:18 - fish as children classes prey and
04:21 - Predator are those classes parents and
04:25 - animal is the grandparent prey and
04:28 - Predator will inherit everything that
04:29 - the animal class has rabbit Hawk and
04:33 - fish will inherit everything the prey
04:35 - and Predator classes have so now our
04:37 - rabbit Hawk and fish classes should have
04:40 - the ability to eat and sleep and we'll
04:43 - test that rabbit.
04:46 - eat this animal is eating rabbit.
04:50 - sleep this animal is sleeping let's
04:53 - check out fish fish. eat this animal is
04:57 - eating fish. sleep
05:00 - this animal is
05:02 - sleeping okay we're going to expand upon
05:04 - our example a little bit let me zoom out
05:08 - each of our objects is going to have a
05:10 - name our rabbit will have a first name
05:13 - of bugs Hawk will be Tony as in Tony
05:17 - Hawk our fish will be
05:21 - Nemo within our classes we don't have
05:24 - any Constructor set up in which class
05:27 - should we assign the name attribute
05:30 - let's do so within our animal
05:33 - class so we will Define a
05:36 - Constructor to assign these
05:38 - attributes we will receive a
05:42 - name we'll assign self. name equals name
05:47 - now with these other classes if you're
05:50 - not assigning any attributes or if you
05:52 - don't need any other initialization
05:53 - logic you don't need a Constructor we'll
05:56 - implicitly use the Constructor we
05:58 - inherit from the parent
06:01 - let's convert each of these print
06:02 - statements to an F
06:07 - string replace animal with
06:10 - self.
06:19 - name now let's have our rabbit use the E
06:25 - method oh we should get rid of this
06:32 - there we go bugs is eating rabbit. sleep
06:38 - bugs is sleeping rabbit.
06:42 - flee bugs is fleeing let's check out our
06:45 - Hawk Hawks don't have a flea method
06:47 - because they're Predators not
06:51 - prey let's eat Tony is eating let's
06:56 - sleep Tony is sleeping let's hunt
07:00 - Tony is hunting let's check our fish
07:03 - next our fish can eat Nemo is eating our
07:07 - fish can
07:08 - sleep Nemo is sleeping they can
07:12 - flee Nemo is fleeing and
07:16 - Hunt Nemo is
07:18 - hunting okay everybody that is both
07:21 - multiple and multi-level
07:23 - inheritance with multiple inheritance a
07:26 - child can inherit from more than one
07:28 - parent class you just add each
07:31 - additional class to The Inheritance list
07:34 - with multi-level inheritance a child can
07:37 - inherit from a parent which inherits
07:39 - from another parent Class C can inherit
07:42 - from B where Class B inherits from a
07:46 - think of C as the child b as the parent
07:49 - and a as the grandparent c will have all
07:52 - the attributes and methods even
07:54 - available within the grandparent class
07:55 - of a and well everybody that is both
07:58 - multiple and multi level inheritance in
08:00 - Python