00:00 - hey what's going on everybody it's you
00:01 - bro hope you're doing well
00:03 - and in this video i'm going to explain
00:04 - inheritance in python so
00:06 - sit back relax and enjoy the show
00:11 - if you find this video helpful please
00:13 - remember to like
00:14 - comment and subscribe your support will
00:17 - help keep this channel running
00:18 - let's talk about inheritance the term
00:20 - inherit means to receive derive or be
00:23 - left with and we can apply this concept
00:24 - to programming
00:25 - classes can inherit something usually
00:27 - attributes and methods from another
00:29 - class
00:30 - these classes can form parent-child
00:32 - relationships
00:33 - where a child will receive everything
00:35 - that the parent class has
00:36 - much like you inherit jeans from your
00:38 - parents and classes can have children
00:40 - and give whatever they own
00:42 - to their children and in today's video
00:44 - we'll be creating a parent class called
00:46 - animal
00:46 - and children of the animal class will
00:48 - inherit the common attributes and
00:49 - methods
00:50 - that all animals might have to kick off
00:52 - this video i think what we'll do is keep
00:54 - all of our classes within the same file
00:56 - just so that it's easier for us to read
00:57 - and
00:57 - understand let's begin by creating a
00:59 - class called animal so at the top
01:02 - type class animal and what are some
01:04 - attributes and methods that all animals
01:06 - should have
01:06 - let's say we have a class variable
01:08 - called alive and we'll set this to true
01:11 - if you're an animal you begin by being
01:12 - alive and what are some methods
01:14 - how about an eat and sleep method so
01:17 - let's define those
01:18 - def eat what are we going to do when we
01:21 - call this method
01:22 - let's print something let's print this
01:24 - animal
01:25 - is eating let's also create a sleep
01:28 - method def
01:29 - sleep what are we gonna do when we call
01:31 - this method let's print something as
01:32 - well
01:33 - this animal is sleeping and we now have
01:37 - our animal class
01:38 - now let's create separate classes for
01:40 - specific
01:41 - types of animals let's say a class for
01:43 - rabbit
01:44 - a fish and a hawk so we can make objects
01:46 - of those classes
01:48 - so let's begin with a rabbit class class
01:52 - rabbit now to use inheritance with the
01:54 - class that you intend to be the child
01:56 - class after the class name add a set of
01:58 - parentheses
01:59 - and then pass in the name of the parent
02:01 - class in this case it's going to be
02:02 - animal
02:03 - so we will add that to the parentheses
02:06 - so now
02:07 - rabbit is the child class and animal is
02:09 - the parent class
02:10 - so the child class is going to inherit
02:12 - everything that the animal class has
02:15 - so for the time being i'm going to type
02:16 - pass so this rabbit class will have
02:19 - access to a class variable called alive
02:21 - and an eat and sleep method so let's
02:24 - define
02:25 - a fish and hawk class and i'm just going
02:27 - to copy what i have here
02:28 - and just change rabbit to fish and then
02:31 - do so again
02:32 - and change rabbit to hawk this is our
02:35 - family tree
02:36 - animal is the parent class and it has
02:38 - three children
02:39 - a rabbit class a fish class and a hot
02:42 - class and for the time being we're just
02:43 - going to write pass as a placeholder
02:45 - so i bet we can create objects from
02:48 - these classes so let's do so let's say
02:50 - we have an object called rabbit
02:52 - rabbit equals rabbit let's do the same
02:54 - thing for fish and hawk
03:00 - all right we now have three objects
03:02 - rabbit
03:03 - fish and hawk and let's take a look at
03:06 - their
03:06 - class variables i bet they have in a
03:08 - live variable let's check that
03:10 - so i would like to print rabbit dot
03:13 - oh would you look at that this rabbit
03:16 - class has a class variable called alive
03:18 - even though there's nothing within this
03:19 - class
03:20 - well that's because we used inheritance
03:22 - so each of these
03:23 - three children classes inherit
03:25 - everything from their parents
03:27 - all of these attributes and methods i
03:29 - bet they have eaten sleep functions as
03:31 - well so let's check that
03:32 - with fish let's have fish use its eat
03:35 - method
03:37 - and hawk will use its sleep method
03:39 - hawk.sleep
03:42 - so the rabbit is alive the fish is
03:44 - eating and the hawk is sleeping now even
03:47 - though we have nothing written within
03:48 - each of these
03:49 - specific types of animal classes all of
03:52 - these animals have access to these
03:54 - attributes and methods because of
03:56 - inheritance
03:57 - and another benefit of inheritance is
03:59 - that we don't need to keep on
04:01 - copying and pasting this code for
04:03 - example let's say we were not using
04:04 - inheritance so we would not need an
04:06 - animal class
04:07 - we could write our code this way where
04:09 - we would just copy and paste everything
04:12 - underneath each of our classes so what
04:14 - if we need to make a change to one of
04:16 - these methods
04:17 - as in your boss says you know what let's
04:19 - change sleep to
04:20 - slumber okay well we would have to go to
04:23 - each of these classes and make the
04:24 - change manually
04:25 - it's not too bad if you have like three
04:27 - classes but what if you have hundreds
04:29 - that's going to take a lot of effort so
04:31 - wouldn't it be nice if we just
04:33 - list everything that each of these
04:34 - classes has in common
04:36 - and then have all of these classes
04:38 - inherit from one common class
04:40 - and then if you need to make any changes
04:42 - you can do so just within this class
04:44 - and this change will apply to all of the
04:46 - different child classes
04:48 - so that's another benefit of inheritance
04:50 - and not only does it make any changes
04:52 - easier but each class can have their own
04:54 - unique attributes and methods as well
04:56 - along with the attributes and methods
04:58 - that they inherit from their parents
05:00 - so for rabbit fish and hawk let's have
05:02 - each of these classes have their own
05:04 - unique method as well
05:05 - so for rabbit let's define a run method
05:08 - if you're a rabbit then you can run so
05:11 - let's print
05:12 - this rabbit is running
05:15 - and i'm just going to fix some of the
05:17 - spacing here all right if you're a fish
05:20 - then you can swim def
05:23 - swim let's print
05:26 - this fish is swimming
05:30 - and lastly we have hawk if you're a hawk
05:33 - then you can fly
05:34 - def fly let's print
05:40 - this hawk is flying
05:43 - like i said before not only do these
05:46 - specific types of animals have access to
05:48 - all of the attributes and methods that
05:50 - they inherit from their parents
05:52 - but they can have their own attributes
05:53 - and methods as well so let's test some
05:55 - of these methods
05:56 - so we have our rabbit fish and hawk
05:59 - objects
05:59 - let's have rabbit use its run method
06:04 - fish we'll use its swim method and
06:07 - hawk will use its fly method
06:12 - and here we go this rabbit is running
06:15 - this fish is swimming
06:16 - and this hawk is flying so in conclusion
06:19 - classes can have children
06:21 - the children classes will inherit
06:23 - everything that their parent class has
06:25 - all of the parents attributes and
06:27 - methods but not only that the children
06:29 - classes can implement their own
06:31 - unique attributes and methods as well so
06:34 - that is inheritance if you would like a
06:35 - copy of this code
06:36 - i will post all of this in the comment
06:38 - section down below but yeah that's the
06:40 - basics of inheritance
06:42 - using python hey you
06:45 - yeah i'm talking to you if you learned
06:47 - something new then help me
06:48 - help you in three easy steps by smashing
06:51 - that like button
06:52 - drop a comment down below and subscribe
06:54 - if you'd like to become a fellow bro
07:02 - [Music]
07:14 - so
07:18 - you