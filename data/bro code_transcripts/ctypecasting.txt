00:00 - oh yeah typecasting
00:03 - typecasting is the ability to convert a
00:05 - value to a different data type
00:07 - it's useful when we accept user input
00:09 - because when the user types in something
00:12 - it's going to be a string and strings
00:14 - can only do so many things
00:15 - and different data types can perform
00:17 - different things
00:18 - so it may be necessary to convert from
00:20 - one data type to another
00:22 - like for example we can't use strings
00:24 - for any sort of math we would need to
00:25 - convert a string
00:26 - to an integer or double to be able to
00:29 - use a
00:30 - string representation of a number so
00:32 - let's begin let's say we would like to
00:34 - convert
00:34 - a double to an integer let's create a
00:37 - double
00:37 - variable named a and i'll assign this a
00:40 - value of 3.14 the first few digits of pi
00:43 - so what we could do
00:44 - if we wanted to convert this number to
00:46 - an end we could store this within a
00:48 - separate variable let's say
00:50 - int b equals now to convert this value
00:53 - to an integer we can use the convert
00:56 - classes 2
00:58 - and 32 method so convert dot
01:01 - 2 into 32 parentheses semicolon
01:04 - and within the parentheses i'm going to
01:06 - place what i want to convert
01:07 - i'm going to convert the value stored
01:09 - with an a and then assign it to
01:11 - variable b and then let's display this
01:13 - variable with a rightline statement
01:15 - so console.writeline and then i will
01:18 - display whatever b
01:20 - is then let's try it and
01:23 - the value stored within a b is three
01:26 - so if we convert a double to an integer
01:28 - it's going to truncate
01:30 - any decimal portion if there is any so
01:32 - since we wrote this program this way
01:34 - it's not going to get rid of the value
01:35 - within
01:36 - a so if i were to display a it's going
01:38 - to be 3.14
01:41 - all we did is that we took the value
01:43 - stored with an a
01:44 - and created a copy of it then converted
01:47 - it to an integer and stored it within b
01:49 - it's also possible to display the data
01:52 - type of whatever variable that we're
01:53 - working
01:54 - with so after a within our rightline
01:56 - method
01:57 - type dot get type
02:00 - then add a set of parenthesis this is
02:02 - the get type
02:03 - method so this will display instead of
02:06 - the value stored within
02:08 - a it's going to display the data type of
02:10 - whatever a is
02:11 - so the data type of a is currently
02:15 - a double now let's change this to b
02:18 - b dot get type and our variable b
02:21 - is an integer into 32.
02:25 - so if you need the data type of a
02:28 - variable follow
02:29 - that variable with dot get type then a
02:32 - set of parenthesis this is a built-in
02:34 - method of variables
02:36 - let's convert an into double this time
02:38 - let's create
02:39 - int c equals what about one two three
02:43 - and we'll create double d equals
02:47 - convert dot 2 double
02:50 - then parenthesis semicolon within the
02:53 - parentheses
02:54 - we will convert c so place that within
02:56 - there
02:57 - and within a rightline statement we will
02:59 - display
03:00 - whatever d is console.writeline
03:03 - d so if your
03:07 - double doesn't contain like a decimal
03:09 - portion it's not going to display like
03:11 - point zero
03:12 - but if i were to add like 0.1 to the end
03:15 - of this
03:16 - then it will display a decimal portion
03:19 - so 123.1 and the data type
03:23 - of d let's follow this with the get
03:26 - type method so the data type of d
03:29 - is in fact a double okay now let's
03:32 - convert
03:33 - an integer to a string we'll need int
03:36 - what about e
03:37 - e equals three two one and i'll create
03:41 - string f equals convert
03:44 - dot to string are you beginning to see a
03:48 - pattern here
03:49 - then parentheses semicolon then pass in
03:52 - e
03:52 - so place that within the parentheses and
03:54 - we will display whatever
03:56 - f is console.writeline
04:00 - the value stored within f and that will
04:03 - be
04:05 - three two one so a string we can't use
04:08 - for any arithmetic but with ins and
04:10 - doubles we can
04:11 - so if we convert an integer to a string
04:14 - we can no longer use this for any math
04:16 - but if we converted a string to an
04:18 - integer then we can use it for any sort
04:20 - of math
04:21 - so let's follow this with get type
04:24 - method
04:24 - f dot get type and the data type
04:28 - of f is in fact a string okay
04:31 - exercise number three let's convert a
04:34 - string
04:34 - to a char hr is just a single character
04:38 - string g equals so a string is always
04:42 - within double quotes what about the
04:44 - dollar sign
04:45 - and a char is always within single
04:48 - quotes we treat strings and
04:50 - chars differently you can store a single
04:52 - character within a string
04:54 - however strings are different from chars
04:56 - there's different things that we can do
04:58 - so let's say char what comes after g e f
05:01 - g
05:01 - h char h equals
05:05 - convert dot 2
05:08 - char then of course parenthesis
05:11 - semicolon within the parentheses we will
05:13 - place
05:14 - g
05:17 - and then display whatever h is
05:20 - so console.writeline
05:23 - h so h will still be a dollar sign
05:28 - but we treat it different because it's a
05:30 - character there's different things that
05:31 - we can do
05:32 - then let's get the type of whatever h is
05:37 - and h is hr
05:40 - a single character okay last but not
05:42 - least let's convert
05:44 - a string to a boolean string
05:47 - i equals true within double quotes
05:52 - so this is different from true without
05:54 - double quotes
05:55 - because this is a boolean and right now
05:57 - we're getting an error
05:59 - so represents a boolean true or false a
06:02 - string is always within double quotes
06:04 - so we would treat this string different
06:06 - from
06:07 - this boolean even though they say the
06:09 - same thing okay
06:11 - then let's convert this string to a
06:13 - boolean type bool
06:15 - not cool bool j
06:18 - equals convert dot to
06:22 - boolean parenthesis semicolon
06:25 - pass in i then we will display
06:29 - whatever j is console.writeline
06:32 - j and this will display
06:36 - true then let's get the type of this
06:39 - variable
06:40 - so j dot get type method
06:43 - and the data type of j is a boolean now
06:48 - all right everybody so that's how to
06:50 - typecast we can convert
06:51 - a value to a different data type and
06:54 - it's really useful when we accept user
06:56 - input because it's always going to be a
06:58 - string
06:59 - and there's different things that we can
07:00 - do with different data types so it may
07:02 - be necessary to convert from one data
07:04 - type to another
07:06 - so if you would like a copy of all this
07:07 - code i will post this to the comment
07:09 - section down below
07:10 - and well that's typecasting in c sharp