00:00 - hey how's it going everybody it's you
bro here yet again and in this video I'm
00:04 - going to walk you through how you can
design your own quiz using Java let's
00:08 - get into it
my goal is to create a program that is
00:13 - not necessarily the most sophisticated
or advanced but one that is more or less
00:17 - easiest to understand if this sounds
like something you'd be interested in
00:21 - then let's get started it's always a
good idea to plan on how you want a
00:25 - program to function before you actually
begin coding anything otherwise you may
00:29 - be backtracking if you make any changes
halfway through and there's a lot of
00:33 - potential for something to go wrong
you're not function as you intended so
00:37 - it's always good to plan ahead before
you actually begin to code anything this
00:40 - is what I'm planning a text field for
the number question that you're on a
00:44 - text area for the question itself for
buttons that will submit a response a
00:49 - through D respectively a label for each
possible answer and a timer that will
00:55 - count down from 10 and when it reaches
zero it's going to skip to the next
00:59 - question
after you submit an answer by clicking
01:02 - on one of the buttons all wrong answers
will be colored red or if the timer
01:07 - reaches zero all wrong answers will also
be colored red and the correct answer
01:12 - will continue to stay the screen color
once all questions are complete it's
01:17 - going to tally the results and display
what you got for a score let's get
01:20 - started the first thing we'll want to do
is to create a new project if you're
01:24 - using Eclipse as an IDE just go to file
new Java project and I will call this
01:30 - perhaps quiz game and let's click finish
01:37 - don't create all right then under the
quiz game underneath the source folder
01:43 - we're going to go to file new class and
I'm going to make a main class and we'll
01:51 - check box this public static void main
so we can begin the program here all
01:58 - right I'm going to get rid of this
comment and let's create a new class so
02:03 - we'll only have two classes for this so
we're going to click on the source
02:07 - folder then go to file new class and I
will call this quiz and finish all right
02:18 - all we need to do within main is we're
gonna type this quiz quiz
02:24 - equals new quiz parentheses semi-colon
all right now we no longer have to use
02:31 - this main class for anything we're going
to do everything else within the quiz
02:34 - class before we get too ahead of
ourselves we need to import a few things
02:38 - so outside of your quiz class near the
top we're going to import java.awt dot
02:45 - event dot asterisk there's a few more
import Java dot AWT dot asterisk
02:56 - semicolon and this is the last one
import Java X dot swing dot asterisk
03:06 - semicolon and that's all the imports
that we'll need the best way to handle
03:11 - this next part is to break up our quiz
class into different sections will
03:15 - include a constructor and some methods
and we'll fill these things in as we go
03:20 - along the first thing that we'll need is
the constructor so public quiz
03:24 - parentheses and a set of curly brackets
we'll need a method in order to move to
03:30 - the next question
so public void next question whenever we
03:36 - want to move to the next question we
just called this method and do whatever
03:40 - is within this method now we'll need an
action listener to handle button
03:45 - clicking events so we need to include
all implement an interface implements
03:51 - action listener so this is going to yell
at us because we need to add
03:58 - unimplemented methods so if you don't
get that notice you can just type this
04:03 - in to public void actionperformed
anything related to button clicking is
04:09 - going to go within this actionperformed
method we'll want to include a method to
04:14 - display the correct answer so public
void display answer parentheses set of
04:22 - curly brackets and lastly we want a
method to display the final results
04:28 - public void results parentheses and a
set of curly brackets we'll be filling
04:35 - in these methods as we go along so
these are all the methods that will need
04:39 - will need a constructor for the quiz a
method for next question a method for
04:45 - action performed a method for display
answer and a method for the results so
04:50 - there should be a total of five methods
okay well step one is complete we now
04:55 - have the framework or skeleton of our
program and we're going to start filling
04:59 - things in we're going to be initializing
and declaring a few things within the
05:04 - quiz class but before the constructor
the first thing that we're going to add
05:07 - is an array of strings that will hold
all of the questions that we want to ask
05:12 - so this will be of the string datatype
it's going to be an array so we need be
05:16 - straight brackets and let's call this
questions equals then a set of curly
05:22 - brackets then add a semicolon at the end
and I'm going to line these up because
05:28 - it bothers me if they're not lined up
and we can start asking some questions
05:32 - just put them within double quotes so
pick whatever questions you want to ask
05:36 - but then here I have a few picked out
for myself which company created Java
05:43 - and then separate each question that you
want to ask with a comma and then you
05:49 - can ask another which year was Java
created and then I'll ask one more
05:58 - there's not really a limit to how many
you can ask this is going to be a
06:02 - dynamic program so it's going to adjust
based on how many questions you want to
06:06 - ask and I'll ask one more we'll keep it
simple at 3 what was Java origionally
06:15 - called all right and then on the last
question you don't need to add a comma
06:22 - so these are all the questions we're
going to ask we're going to store them
06:26 - within an array of strings the next
thing that we'll need is a 2d array of
06:32 - strings to hold all the different
possibilities for answers for every
06:36 - question that we have so this is going
to be able to string datatype and we
06:40 - need two sets of straight brackets
because it's a 2d array and let's call
06:45 - this options these are all the different
options for answers equals and then a
06:50 - set of
curly brackets and then add a semicolon
06:53 - at the end I'm going to line these up
and then we can start filling this in
06:58 - this 2d array is basically an array of
arrays so our first array is going to be
07:05 - all the different answers for our first
question so we need a set of curly
07:11 - brackets that will function as the first
array to hold all of the different
07:16 - answers for the first question so I'm
just going to start typing in some
07:20 - company names for our first question so
one of them was Sun micro systems and
07:27 - then separate each string with a comma
Starbucks
07:35 - let's see Microsoft and alphabet all
right so this is our first array we need
07:50 - to create another array for the next
question and then we'll have a total of
07:54 - 3 for this example so we need to
separate each array with a comma and
07:59 - honestly I'm just going to copy this and
change a few things so this next array
08:06 - is for the second question which year
was Java created and I'll start filling
08:11 - this in with a few answers
so 1989 1996 1972 well let me fix that
08:27 - 1972 and 1492 and let's create the last
array for the last question that we have
08:37 - what was Java originally called the
answers I have listed were apple latte
08:49 - oak and coughing and then we do not need
this comma for the end of the last array
09:00 - all right so we have our 2d array of
strings that
09:04 - holds all the different answers while
options for answers for all the
09:09 - different questions that we have now
what we'll need is an array of
09:13 - characters or you can do strings to hold
all the different correct answers so
09:18 - this will be an array of characters so
charred then a set of straight brackets
09:24 - then we'll call this answers and they
will hold the correct answers and this
09:30 - will be an array so we need this within
a set of curly brackets I'm going to
09:35 - line this up all right and then if we're
assigning char values these are within
09:46 - single quotes and I will list the first
correct answer so it's going to be
09:51 - option a sun microsystems we'll need to
separate each with a comma B is the
09:58 - second correct answer for the second
question 1996 and the last question is C
10:05 - for what was Java originally called and
it was originally called oak so just to
10:10 - verify everything we have an array of
questions a 2d array of different
10:15 - options and then an array of characters
that will hold all of the answers and
10:20 - another cool thing with this program is
that it's dynamic if we were to either
10:24 - take out answers or questions and added
some in it's going to function just the
10:28 - same so actually let's add another
question here who is credited with
10:35 - creating Java so make sure that if
you're adding another question you need
10:43 - to make sure that you have a comma we'll
need another array for our options and
10:49 - let's start filling some of these in
Steve Jobs Bill Gates James Gosling and
11:03 - the last one Mark Zuckerberg and we'll
also need to add in one more answer and
11:13 - the correct answer for the last question
who is credited with creating Java that
11:17 - is
gosling if you've written your questions
11:21 - options and answers and have them picked
out we can continue on with the rest of
11:25 - this program so we're going to be
declaring and assigning a few things so
11:29 - make sure that you write these within
the quiz class but before the
11:32 - constructor the first thing that we'll
declare is a guess and let's make this a
11:37 - chart data type
this will hold whatever our guess is
11:41 - going to be another chart value to hold
the answer we'll need some sort of index
11:48 - so this will be of the int data type
we'll need an int value to hold the
11:53 - correct number of guesses that we've had
and let's assign this value right away
11:59 - of 0 will need a total number of
questions so I'll write total underscore
12:06 - questions and we can actually set this
to questions dot length and this will it
12:14 - just depending on how many questions
that we have within our array of strings
12:19 - named questions so if we were to add
another question this questions dot
12:24 - length would change from four and go to
five so this adjusts dynamically we'll
12:29 - need an integer to hold a result will
also be implementing a timer so we'll
12:36 - want an integer to hold the current
amount of seconds and we can count down
12:42 - from a number such as ten but if we want
to adjust this weekend now for this next
12:47 - part still within the quiz class but
before the constructor we're going to be
12:51 - creating and initializing some GUI
components so the first thing that we'll
12:56 - need is a frame to actually hold
everything so I'm going to type J frame
13:01 - frame equals new J print parenthesis
semicolon will create a jtextfield this
13:08 - will hold the current question that
we're on so J text field you might have
13:13 - to watch the capitalization here text
field equals new J text field
13:20 - parentheses semicolon
we'll need a text area to hold the
13:25 - current question so J text area text
area you
13:33 - Will's new J text area parentheses
semi-colon
13:40 - we're going to create a few buttons so J
button I'll call this first one button a
13:46 - equals nu J button parentheses then a
semicolon and I'm going to copy this and
13:54 - paste this a few times I'll include
perhaps four buttons so a button a
14:00 - button B button C and button D and we'll
create a few labels to hold all of the
14:08 - different answers so J label and I'll
call this answer underscore label a
14:16 - equals nu J label parenthesis semicolon
so this is the label for answer a I'm
14:25 - going to copy this and paste it a few
times I'll change this to answer label B
14:31 - answer label C and answer labeled D I'm
going to create two labels for the timer
14:38 - so J label and I'll call this first one
time label all this will do is just
14:46 - display the word timer or something so J
label print the seas semicolon and we'll
14:54 - create another label and this will be
called seconds underscore left so this
15:00 - will function as a display for the
countdown timer so new j label
15:07 - parenthesis and then a semicolon
alright these are the last two these
15:12 - will appear after we calculate the
results so it's going to be a J text
15:18 - field number underscore write equals nu
J text field parentheses semicolon and
15:30 - this is the last one it's also a
jtextfield so J text field and this is
15:36 - called percentage and this will display
what you got for a percentage on your
15:41 - score nu J text field
sieze semicolon the last thing that
15:49 - we'll need to initialize before the
constructor is the timer but I think
15:53 - we're going to do that last we want to
be sure that everything else is working
15:57 - first and with these variables and these
GUI components since we declared these
16:02 - outside of the constructor but within
the quiz class they're more or less
16:06 - acting as global variables so we can
access these and make any changes to
16:11 - them anywhere within our program which
we will be doing within each of these
16:15 - individual methods okay the next step is
that within the constructor of the quiz
16:20 - class we're going to start designing
some of these GUI components that we
16:24 - have so let's begin with the frame so at
the very top we're going to type frame
16:30 - dot set default close operation and then
within this within the parentheses we're
16:38 - going to type J frame dot exit on close
all right we need to set a size for this
16:46 - frame so frame dot set size parenthesis
and then a semicolon and then feel free
16:53 - to adjust some of these values depending
on how you want to design your own quiz
16:57 - I'm just going to use a few that I liked
so 650 by 650 is a decent size for me
17:02 - and at the very end of our constructor
we're going to type frame dot set
17:08 - visible then put true within the
parentheses and I'll give us some room
17:16 - because we're going to be filling in a
lot between these two lines so let's
17:20 - test this out all right here is our
frame it is 650 by 650 you can change
17:27 - the background color
well type frame dot get content pay in
17:33 - parentheses and then dot set background
parentheses and then within here I'll
17:42 - type new color and then a set of
parentheses now within the parentheses
17:48 - of this color
these are RGB values so you can pick
17:52 - whatever color you want if you know how
they work if you pick 50 50 50 this is
17:57 - like a nice dark color so
let's try it all right yeah and the
18:02 - background of our frame is now this
darkish black gray color
18:07 - feel free to mess with these colors and
change this to whatever you want this is
18:12 - just what I prefer this dark ELA looking
color theme it's because I feel like I'm
18:17 - gonna pretend to lead hacker now I do
not want to use a layout manager so I'm
18:21 - just going to type frame dot set layout
and then within parenthesis I'll just
18:30 - type null because I want to size
everything and place them on the frame
18:34 - by hand and this next part is optional
you can save frame dot set resizable
18:42 - false if you do not want people to
adjust the size of your frame so let's
18:47 - run this and try it alright here's our
frame it's that color we wanted and we
18:53 - cannot resize this window okay well we
have our frame let's create our text
18:58 - field that's going to hold the number
question we're currently on so we'll
19:02 - type text field and we're going to set
the bounds first so set bounds will
19:08 - determine where this text field is going
to be placed as well as the height and
19:13 - the width of our text field so if I want
this in the top left corner we're going
19:17 - to put the x-coordinate at 0
y-coordinate is 0
19:21 - I want this to be 650 pixels long and
for the height perhaps 50 pixels let's
19:28 - set the background color text field
actually I think I'm just gonna copy
19:32 - this to save a little bit of time text
field dot set background okay then
19:41 - within here new color another set of
parentheses and this is again another
19:45 - RGB value if I want like a blackish
color I'll just type 25 25 25 but feel
19:52 - free to place whatever color you want
here
19:54 - next is the foreground color and that is
set foreground and it's gonna be the
20:02 - same process as what we did with the
background so new color and I think for
20:08 - the RGB value I'm going to pick like a
green color so perhaps 25
20:14 - - fifty five and zero so that's going to
look green let's change the font so text
20:20 - field dot set font parentheses semicolon
at the end and within the parentheses
20:26 - we're going to type new font parentheses
and there's three parameters that we can
20:31 - fill out the first is the font type and
I like the font ink free it's like it's
20:37 - handwritten
okay in the next field we can type some
20:41 - sort of style like if we want just plain
text we can type let's see it's font dot
20:47 - plain otherwise you can change this to
italic or bold but I think I'll keep a
20:55 - bold and then the third is the font size
and I think I will pick 30 next line
21:02 - let's set the border so text field dot
set border parentheses semicolon within
21:10 - the parentheses we're going to type
border factorio dot then there's a bunch
21:17 - of different borders that you can pick
from this is one that I like it is
21:21 - create bevel border and within
parentheses I'm just going to type one
21:29 - next line we can set the horizontal
alignment so let's Center the text on
21:35 - our text field so text field dot set
horizontal alignment I'm just going to
21:42 - click on this because I don't want to
type the whole thing so I'm lazy and
21:45 - then within parentheses J text field dot
Center you can also have this centered
21:53 - someplace else as well make sure to get
the capitalization right so the J T and
21:58 - F are capital okay then we do not want
people to edit this so we're going to
22:03 - type text field dot set editable within
parentheses false and let's add our text
22:11 - field to our frame just to try things
out so frame dot add within parentheses
22:16 - text field okay let's see what this
looks like so far okay here's our text
22:23 - field it's this black bar at the top of
our window and let's add
22:28 - sample text so text field dot set text
parentheses semi-colon within the
22:35 - parentheses we're going to type just
some testing text or something we're
22:40 - going to get rid of this right after so
I just want to be sure that this works
22:44 - yeah looks good enough to me
everything's working fine
22:47 - well it's delete this and move on to the
next section all right well since I'm so
22:52 - lazy I'm actually just going to copy
this and we're going to paste it and
22:56 - then change a few things so this was our
text area so this is going to hold the
23:01 - actual question well at least display it
so let's change text field to text area
23:07 - and just make a few other minor changes
so we have the balance but we're going
23:13 - to want to change these so let's move
this down perhaps 50 pixels so this is
23:18 - going to be displayed right under the
text field 650s are good with same with
23:24 - the height all right now we need to set
line wrap so text area dot set line wrap
23:35 - so in case the text goes off the screen
or off the text area it's going to wrap
23:40 - around to the next line we're going to
set this to true we're also going to set
23:48 - wrap style word and set this to true I'm
going to change the font size slightly
23:58 - let's bring it down to perhaps 25 and we
cannot actually align text areas so I'm
24:04 - going to get rid of this line then let's
add our text area to our frame so frame
24:09 - dot add text area and let's see what we
have so far okay here's our text area
24:19 - it's this second black bar let's add
some sample text so text area dot set
24:26 - text and let's add some sample text and
we're just going to delete this right
24:34 - away
24:36 - all right we know that this is working
this is going to display our question
24:41 - I'm going to get rid of the sample text
and actually I think I'm going to change
24:47 - the font type another font that I like
is MV boliya it's a little bit easier to
24:55 - read than ink free but I like ink free
just because it looks handwritten and I
25:00 - am going to keep this at 25 okay it
looks like everything's good for the
25:05 - text area let's move on to the buttons
so let's create the first button and
25:09 - that was called button a and we'll set
the bounds set bounds the first field is
25:18 - the starting position that's the x
coordinate so let's set this to zero the
25:24 - second position is the y coordinate so
let's start this where y equals 100
25:29 - let's make the button 100 by 100 pixels
all right then let's set the font so
25:38 - button a dot set font new font
parentheses and then we can pick a font
25:49 - within here I think I'm going to keep
this MV Boley I'm actually going to copy
25:53 - this to save a little bit of time
alright
25:57 - so MV Bohle font bold and I will make
this 35 because this is only going to
26:03 - contain one letter all right let's say
button a dot set focusable false
26:13 - sometimes when you click a button it's
highlighted this will prevent that then
26:18 - we need to add a action listener to this
button so button a dot add action
26:25 - listener and we're going to type this
the word this within parenthesis all
26:32 - right let's copy this and just make a
few changes so this is button B now okay
26:42 - and we will want to change the balance
so it's in a slightly different location
26:47 - so let's move this down 100 pixels
alright let's copy this and make button
26:53 - C
so this is all button see now and we'll
26:59 - move this down 100 pixels and lastly
button D and let's move this down to
27:08 - where Y is 400 and then we need to add
all these buttons to our frames so frame
27:13 - dot add button Hey
I'll copy this and do the same thing for
27:21 - B C and D so frame dad button a button B
button C and button D let's run this and
27:30 - see if it actually appears okay here are
our buttons we just need to set the text
27:35 - going back to button a we're going to
type button a dot set text and this will
27:43 - appear on our button whatever we type
within double quotes and we're just
27:46 - going to type a for button a let's copy
this do the same thing for button B but
27:52 - we're going to put the letter B and
button C and we'll put the letter C and
27:59 - lastly D so button indeed that's set
text D let's see if it actually displays
28:06 - now yep here are our labeled buttons a B
C and B after the buttons we need to add
28:15 - our answer labels so answer underscore
label a dot set bounds so we'll place
28:25 - this at 125 where Y is 100 we'll make
this 500 pixels long and for the height
28:32 - 100 pixels so I'm going to copy this
portion answer label a dot set
28:41 - background then within parenthesis new
color I'm actually going to pick a color
28:49 - that matches the frame background so
that was 50 50 50 answer label a dot set
28:59 - for ground new color within parenthesis
and I'm going to use that green color
29:07 - that we had
four so that was let's see it was
29:11 - twenty-five to fifty five and zero okay
one more thing let's set the font set
29:18 - bond parenthesis semicolon then within
parenthesis new font then within the
29:27 - inner set of parenthesis same process as
before we can pick a font so I'll pick M
29:33 - V bully again and I will say font dot
plain and I will make this for a font
29:42 - size thirty-five okay I'm going to copy
this and do the same thing for the other
29:47 - labels we just need to change a few
things so answer labeled B and I am
29:56 - going to move the y-coordinates down by
100 so this is two hundred and let's
30:03 - make answer label C and we'll move this
down to three hundred answer label D
30:16 - this will be 400 all right then let's
add these labels to our frame so frame
30:25 - dot and answer underscored label a then
I'm going to copy this and paste this
30:36 - then we'll change it to B C and D now
let's add some sample text just to see
30:44 - if everything's working so answer label
a let me copy this dot set text and I
30:54 - will type testing label one and I'll do
the same thing for the others answer
31:03 - labeled B dot set text answer label C
dot set text I should probably change
31:11 - these numbers no big deal we're going to
get rid of these okay let's see if this
31:18 - actually displays now I'd be really
disappointed if it did
31:22 - that was a lot of work okay yeah here is
where our options for answers are going
31:27 - to be displayed so let's get rid of
these just because we want like a fresh
31:32 - start once we boot up this program all
right so that is our answer labels let's
31:41 - create the timer for the seconds left
this will be the countdown timer so
31:45 - seconds left dot I'm just going to copy
this real quick and let's set bounds
31:53 - parentheses semi-colon and I will place
this this is going to seem somewhat odd
31:59 - I actually measured this out so where X
is 535 where Y is 510 and it's going to
32:06 - be a box so it's gonna be 100 by 100
okay seconds left dot set background new
32:17 - color and I'm going to pick that dark
black color that was 25 25 25 then
32:27 - foreground set for oh I did spell it
right
32:36 - okay new color I think I'm going to have
this be red so if you want to read color
32:42 - for the RGB value just type in 255 0 0
32:49 - okay then let's set the font Seiken its
left dot set font then within the
32:59 - parentheses new bond I typed too fast
sometimes alright and then within the
33:07 - new font we're going to type Inc free or
whatever font you want to use then if we
33:14 - want this to be bold or italic we can
change that so I'll have this be bold
33:20 - like it's a big red ugly number that
counts down to how many seconds you have
33:24 - this is going to be like a really large
font it's going to be 60 it's a big
33:28 - countdown timer ok seconds left dot set
border parentheses semi
33:35 - : within the parentheses we're going to
type border factory dot create
33:42 - Belleville border or whatever kind of
border you want then I'll just put one
33:47 - within here
seconds left dot set opaque I'll set
33:55 - this to true seconds left dot set
horizontal alignment J text field dot
34:13 - Center all right am I missing anything
oh we should probably set the text set
34:22 - text all right so this is what we're
going to do we can't just put seconds
34:29 - seconds was an integer variable so we
actually need to convert this to a
34:35 - string so we can display it as text so
what we're going to do is type in string
34:42 - with the capital S dot value of and we
need to put oops all right we need to
34:50 - put our seconds within parenthesis so
this will take whatever the seconds
34:55 - currently is and convert it to a string
and display it on the screen we'll need
35:00 - to add this to our frame so frame dot
add seconds left okay let's see what
35:08 - this looks like so far
yep this is going to be our countdown
35:11 - timer and it's already displaying ten
because at the top of our program we set
35:17 - seconds to ten but that's going to
change when we use our timer all right
35:22 - moving on let's display the time label
so this isn't exactly necessary I just
35:29 - want to put the word timer above our
seconds timer so if this part is
35:34 - optional but I'll type in time
underscore label dot set bounds and I
35:43 - actually measured this already
it was 535 475 100
35:49 - 25 okay I'm just going to copy this
okay next was the background I am going
35:59 - to copy this and change these values to
50 so it matches the frame color then we
36:09 - have the foreground so time label dot
set for ground new color let's see I
36:25 - think I'll pick red so 255 0 and 0 ok
time label dot set font new font
36:41 - I will pick M V boli again so be font
dot plain and let's pick 24 a size okay
37:03 - then let's set horizontal align meant
and that was J text field dot Center
37:21 - okay then let's set some text set text
37:30 - and I will place the word timer within
here and perhaps like an evil smirky
37:36 - face to countdown timer okay then we
need to add this to our frame frame dot
37:43 - ad time underscore label well make sure
you put it within parentheses label okay
37:54 - let's see what this looks like
37:58 - yep here's our timer label but I'm going
to change the font slightly to perhaps
38:05 - 16 totally not necessary but I just
think it's a funny message okay we only
38:14 - have a few more things to add this is
going to be for the results we're going
38:17 - to display the number of questions that
we got right out of the total amount so
38:23 - that will as number right and I'm going
to copy this we're going to set bounds
38:30 - and this won't be visible right away
this is going only going to be visible
38:34 - at the end so I'm going to pick 225 for
the x coordinate where this is going to
38:40 - begin and where the y coordinate is 225
I'll make it 200 pixels wide and the
38:47 - height 100 pixels okay number right dot
set background I promise you're probably
38:55 - going to be an expert at setting
background colors and fonts after this
38:59 - because we do it so often all right new
color and this will be a dark color so
39:06 - at 25 25 25 number right dot set for
ground new color parentheses and let's
39:20 - see we want a green color so that was 25
to 55 and 0 let's set the font number
39:29 - right dot set font new font and you know
the drill now I will pick let's see
39:41 - Inc free this time to have that
handwritten style font dot come up bold
39:50 - and for the size fifty we're displaying
the results so we want like a big font
39:57 - okay then let's set border parentheses
then we're going to type border factory
40:07 - dot create then I will pick bevel border
type one and let's set the horizontal
40:17 - alignment said horizontal alignment and
I will type J text field dot Center okay
40:30 - this last part is important number right
dot set editable false because we don't
40:36 - want people to edit what the number
right you got was it's kind of like
40:40 - you're cheating on your test or
something by changing the numbers it's
40:44 - kind of funny though alright then
let's display the label that's going to
40:48 - display the percentage we got right in
this is the last one so percentage I'm
40:55 - going to copy this real quick percentage
dot set bounds I will place this where X
41:02 - is 225 325 it's going to be two hundred
pixels long and 100 pixels tall
41:10 - percentage dot set background I'm
actually going to copy those so a set
41:19 - background new color 25 25 25 let's see
then foreground I'll copy the same thing
41:27 - so we'll change this to percentage dot
set foreground new color and that should
41:35 - be green then 25 to 55 and zero for the
font I will pick the same thing as what
41:44 - we had here for number right but I'm
going to change this to percentage
41:53 - same thing with Porter honestly I could
have just copied this whole thing
41:56 - basically so percentage dots at border
border factory create bevel border then
42:05 - set horizontal alignment percentage dot
set horizontal alignment jtextfield
42:11 - Center and the last one set editable
false so percentage set editable false
42:20 - all right that should be all of them
good work all right with this number
42:24 - right and this percentage we are not
going to add this to our frame quite yet
42:29 - but let's just test this just to be sure
that they're working so frame dot add
42:34 - number underscore write and frame dot
add percentage okay let's just see if
42:46 - they display okay so when we calculate
the results it's going to display this
42:52 - box in the middle the top is going to be
the number of questions we got right out
42:56 - of the total amount and the bottom box
is going to be our score percentage
43:00 - that's going to be calculated but let's
get rid of these for now we're not gonna
43:05 - display these and add these to the frame
until the end now there's just one last
43:09 - thing we're going to do for this
constructor after our main method
43:13 - instantiates a copy of our quiz it's
going to initialize and declare
43:18 - everything and at the very end of the
constructor for the quiz what we're
43:23 - going to do is we're going to call the
next question method to actually begin
43:28 - our quiz so we're going to type next
question parentheses semicolon and the
43:35 - next phase of this project is to
actually begin this quiz all right we
43:40 - are now within the next question method
the first thing that we're going to type
43:44 - in here is that we're going to check if
our index and this is going to act as a
43:49 - counter to determine which question
we're on is greater than or equal to
43:53 - total underscore questions then we need
a set of curly braces and if the index
44:01 - is greater than or equal
two total questions what we're going to
44:04 - do is call the results method and we'll
actually code this part later on okay
44:11 - so else what we'll do is that we're
actually going to populate the screen
44:17 - with the question number the question
and the answers so the first thing we'll
44:22 - type in is text field dot set not that
set text and within the parentheses
44:34 - we're going to type something like
question okay
44:38 - then plus our index which is currently
set to zero plus one so it's going to
44:46 - change the text field to question one
and then the next time we call next
44:51 - question this index is going to increase
and it's going to be question number two
44:55 - then now we need to set the text for our
text area and this will actually display
45:02 - the question being asked
so text area dot set text parenthesis
45:07 - and a semicolon at the end and within
here what we're going to display is our
45:12 - array of questions but it's going to be
at a certain index so questions then
45:19 - you're straight brackets and then put
the index within here so this is going
45:24 - to begin at zero since arrays always
start at zero when we increase our index
45:29 - it's going to retrieve the next question
whenever we increase our index and
45:34 - recall this next question method and we
need to display and set the text for our
45:40 - answer labels answer label a dot set
text and what we're going to type in
45:49 - here is that we're going to use our 2d
array called options and there's two
45:54 - sets of straight brackets within the
first set of straight brackets here
46:00 - we're going to type index so this is
going to start at think of it like row
46:05 - zero and here we're going to retrieve
whatever is within the first array the
46:12 - first element of the first array so
let's copy this
46:16 - and paste it a few times one for each
label so that's B C and D let's just
46:22 - change these so answer label B
set text at our index and then we're
46:28 - going to change this 0 to 1 so we're
going to change answer label the third
46:33 - one to C and this index to 2 and answer
label D and we're going to change the 0
46:43 - to 3 that's everything for this next
question method for now let's test this
46:48 - out and see what we have okay yeah
everything is populated for our first
46:53 - question now let's move on to the action
performed method this action performed
46:58 - method is going to trigger when somebody
clicks a button so the first thing that
47:03 - we'll want to do is that if somebody
clicks a button they're submitting an
47:07 - answer so the first thing that we'll
want to do is actually disable all the
47:11 - buttons just temporarily at least so
we're going to say button a dot set
47:16 - enabled and we're going to put false
within here and let's copy this and do
47:21 - this for the other few buttons so button
B button C and button D the next thing
47:30 - that we'll want to do is to determine
which button is being pressed and check
47:34 - to see if that's a matching answer to
what we have within our array called
47:39 - answers so the first thing that we'll do
is if e dot get source parenthesis is
47:47 - equal to button a so if somebody clicks
button a what are we going to do we will
47:55 - assign our answer a character value
so our answer equals a then and we're
48:02 - going to check if our answer is equal to
that array of answers but at a
48:10 - particular index okay so if our answer
equals the one that's stored in our
48:17 - array of answers at a certain index
depending on which question we're on
48:22 - we're going to increase our correct
guesses by one but you can just put
48:28 - correct guesses plus plus
all right let's do the same thing for
48:32 - each of these buttons so I'm just going
to copy this and paste it we're going to
48:36 - change a few things we're going to
change button a to button B answer B and
48:41 - that's all we need to change then so
let's do the same thing for button and C
48:46 - and cersei and lastly button D and
answer D I'm anticipating some people
48:55 - might have this problem for our answer
this is declared as a char value so it
49:00 - holds a single character so make sure
that this is within single quotes but if
49:04 - you decided you want your answer to be a
strength and make sure it's within
49:07 - double quotes and her now all we need to
do within the actionperformed method is
49:13 - that we're going to call the display
answer method and we can move on to this
49:21 - next section the first thing that we're
going to want to do with display answer
49:26 - since this is going to be executed
regardless if somebody actually submits
49:31 - an answer or clicks a button we probably
want to disable all the buttons again
49:36 - just in case so I'm going to copy these
methods where we disable all the buttons
49:42 - and just place it first within the
display answer method so with any answer
49:49 - label that is incorrect we're actually
going to change the font to red so this
49:54 - is how you can do that we'll use an if
statement and we'll put within your
49:58 - answers at whatever index we're
currently on our current question
50:03 - basically does not equal let's begin
with a that's the character it so if the
50:11 - answer is not a what are we going to do
50:15 - answer underscore label a and we're
going to change the font color so set
50:21 - for ground new color and perhaps we'll
change this to red so that is 255 0 and
50:32 - 0
ok let's copy this and make a few
50:35 - changes
so answers index well the answers at
50:41 - this index does not equal B the
we're going to change answer label B
50:46 - same thing for C answer label C and
lastly D answer label D let's see what
51:01 - we have so far so this is the first
question so which company created Java
51:08 - the correct answer is Sun Microsystems
but I'm going to guess the wrong answer
51:12 - and let's submit the answer of Starbucks
all right any wrong answer is now in red
51:19 - so what we'll want to do before we go on
to the next question is revert these
51:24 - colors back to what they were originally
and then move on to the next question
51:28 - but the difficult part about this is
that we'll want to add maybe a second or
51:33 - two delay after flipping the colors to
red we'll want to flip it back to green
51:38 - after a second or two so we'll need to
create a timer in order to do this so
51:44 - this is going to be the most difficult
part of this video but if you can get
51:48 - through this then you're on the
homestretch to completing this we're
51:51 - going to create a timer within the
display answer class so we're going to
51:57 - type in timer the capital T and let's
name this timer paused all it's going to
52:02 - be doing is adding a pause after we
display the answer the correct answer
52:07 - that is so timer will call it pause
equals new timer this part is going to
52:13 - be really tricky all right but hang in
there
52:16 - so after this left parenthesis this is
what we're going to type we're going to
52:21 - type 2,000 if we want like a 2,000
millisecond Paws that's the same as two
52:26 - seconds if you want a shorter pause you
can change this to a lesser number well
52:31 - let's stick with two seconds all right
then comma and then type in new action
52:38 - listener then add a set of parenthesis
now we're going to add a set of curly
52:44 - brackets and we're going to be putting a
few things in here the first is that
52:48 - we're going to override a method so
let's type in override and what we're
52:53 - going to be overriding is the action
performed Matt
52:56 - so public void action performed then
within parentheses action event II then
53:11 - a set of curly brackets so this is what
you should have so far but let me bring
53:17 - these together so it's easier to see so
when our timer reaches 2,000
53:22 - milliseconds to seconds we're going to
perform whatever is within this action
53:27 - performed method and we'll actually flip
the colors back to green and then move
53:32 - on to the next question after that pause
so the first thing that we'll want to do
53:36 - is that we're going to take these answer
labels and change these back to green so
53:41 - I'm just going to copy this and paste it
within here and let's change this to
53:45 - what we had originally I think that was
25 and then 255 so that's like a green
53:52 - color again
alright so let's copy this and do the
53:55 - same thing for the other labels
let's see B C and D so you might have
54:06 - like a red line under one of these curly
brackets we just need to finish closing
54:11 - this whole timer instantiation so at the
end of this curly bracket here we're
54:17 - going to add a right parenthesis and
then a semicolon and that error should
54:21 - go away now we have a few other things
that we need to fill in with the
54:24 - actionperformed method so the first
thing well the next thing is that we'll
54:29 - want to reset our answer and we'll just
set this as like nothing basically just
54:37 - like a blank space that works just fine
and then seconds we're going to set this
54:41 - back to 10 because it's going to be
counting down it's going to be a lesser
54:45 - number after the countdown seconds left
that's that display for the seconds set
54:54 - text then that was seconds but since
this is an integer variable we need to
55:03 - convert this to a string so string dot
value of and then we need to surround
55:09 - this with a set of
this is there we go
55:14 - we need to re-enable our buttons so
button a set enabled true and we'll do
55:23 - the same thing for the other buttons so
a B C and D we're going to increase the
55:35 - index by one so then we can go to the
next question and then we're going to
55:39 - call the next question method alright so
this is what you should have so far for
55:46 - this timer feel free to pause the video
if you're missing anything last thing
55:52 - that we'll need to add to this display
answer method so make sure that you put
55:57 - it in the right spot is that we'll want
to start this timer so the timer was
56:01 - named pause and we'll use the start
method okay
56:07 - one problem though this timer the
actionperformed method within the timer
56:13 - is going to execute every two seconds so
we only want it to repeat once or
56:20 - activate once basically there's actually
a method that can help us with that it's
56:24 - the set repeats method and we're going
to set this to false so this will only
56:31 - execute once then whatever is within our
actionperformed method all right
56:36 - so that's everything for the display
answer method okay let's test to see
56:41 - what we have so far okay one thing I've
noticed is that we still need to work on
56:48 - the timer for the countdown but let's
check to see if everything else is
56:51 - working so which company created Java
that is Sun Microsystems and you can see
56:56 - that it's momentarily paused before it
moves to the next question
56:59 - so which year was Java created that is
1996 what was Java originally called and
57:07 - that was called oak who is credited with
creating Java I'm going to guess Mark
57:14 - Zuckerberg and that is wrong it is James
Gosling next on our agenda is that we'll
57:19 - want to calculate and display the
results of the quiz and then lastly
57:23 - we'll work on
this timer at the very end so let's move
57:26 - on to the results then now within the
results the first thing that we'll want
57:30 - to do is to disable all buttons so
people will not continue to press the
57:34 - right answer for the button after the
quiz is finished
57:37 - so we'll say button a dot set enabled
false and we'll copy this and do the
57:44 - same thing for the other buttons so B C
and D button B button C and button D now
57:55 - we'll want to calculate the result if we
want to display some sort of percentage
57:59 - I actually used an int value to truncate
the decimal portion but you can always
58:05 - change this to a double value or a float
value if you want that decimal in so
58:11 - what we'll do is that we'll take the
correct underscore guesses divide this
58:18 - by total underscore questions with this
equation we're actually performing
58:24 - integer division so we're going to lose
that decimal portion normally so what
58:29 - we'll want to do is actually cast one of
these as a double value so then we can
58:34 - retain the decimal portion all right so
let's surround these with parentheses
58:38 - and then we're going to multiply this
result by 100 and then lastly what we
58:44 - can do if you do not want the decimal
portion in your answer let's say you get
58:49 - two out of three questions right and you
don't want the sixty six point six six
58:54 - percent you could just cast this as an
integer at the very end let's add a
58:59 - semicolon but you know edit this however
you want alright so then we have a
59:05 - result percentage next what we'll want
to do is change our text field and we're
59:11 - going to set the text to display
something like results because we really
59:17 - don't need that place for answers
anymore or questions so results and then
59:23 - we're going to clear out pretty much
everything else so text area dot set
59:30 - text parenthesis and then you could just
put in nothing basically just to set a
59:36 - double quotes and that's all
all right and sir underscore label a set
59:43 - text basically the same thing just an
empty set of double quotes let's do the
59:48 - same thing for all answers so B C and D
we're going to display the correct
59:59 - guesses that we got right out of the
total questions so we're going to take
60:03 - the number right I think this was a text
area if I remember or a text field one
60:10 - of them set text then within parenthesis
we're going to type maybe correct
60:19 - underscore guesses plus and let's add
like a slash here a forward slash plus
60:28 - total questions I'm going to do a little
bit of formatting like I want to add a
60:37 - left parenthesis before this and then
finish it with a right parenthesis but
60:44 - format this however you wish all right
then we're going to display the
60:49 - percentage that we got right the result
so percentage dot set text we're going
60:59 - to display the result plus like a
percent sign okay then what we'll do at
61:09 - the very end is that we'll add all of
this to our frame to display so add
61:15 - percentage and add number underscore
right it really doesn't matter what
61:26 - order you put these in you can switch
these around if you want doesn't matter
61:30 - okay let's see what we have so far okay
I'm crossing my fingers that everything
61:35 - works here which company created Java
Sun Microsystems which year was Java
61:42 - created 1996 what was Java originally
called it was originally called oak
61:51 - who is credited with creating Java I'm
still convinced that it was Mark
61:55 - Zuckerberg but that's wrong and here is
the results of our quiz we got three
62:00 - questions out of four right and our
score was 75% so we know that everything
62:06 - here is working so the last thing that
we need to do well it's optional if you
62:10 - want this we can activate the timer so
that adds a little bit of danger to our
62:15 - quiz then so when our timer reaches zero
after each question it's going to skip
62:20 - it and go to the next question and it's
basically going to be marked wrong so
62:24 - this is entirely optional I'll show you
how you can activate the timer then so
62:28 - we're going to need to create another
timer but I really do not want to type
62:32 - all of this again so I'm just going to
copy all this up to this point and we're
62:36 - going to paste it and then make a few
changes so I'm going to place this after
62:43 - all of these gooey component
initializations
62:47 - we'll put it right here and we're going
to get rid of everything within here and
62:51 - we'll name this timer perhaps timer
instead of pause okay then we have a few
62:59 - more things that we need to add within
here don't worry it's not that much now
63:02 - we'll change this to thousand two one
thousand we want this actionperformed
63:06 - method to execute every one second every
1000 milliseconds and after each second
63:14 - we're going to take our second variable
which is normally set to ten and
63:19 - decrement this by one so after each
actionperformed method that executes
63:24 - every one second we're going to subtract
one from the variable seconds and then
63:29 - we're going to take our seconds
underscore left display and we're going
63:34 - to set the text to display whatever the
seconds currently is but since this is
63:40 - normally an integer variable we need to
convert this to a string in order to
63:44 - display this so we can't just put
seconds we need to put string dot value
63:50 - of and then we can surround a seconds
with in parentheses to convert this to a
63:55 - string okay lastly what do we want to do
if our timer runs out when it hits zero
64:02 - we can check to see if
our second variable is less than or
64:07 - equal to zero so if the timer runs out
and hits zero we're going to call the
64:13 - Display answer method so this will
display the answer and disable all
64:18 - buttons and basically when you get that
question wrong then ladies and gentlemen
64:23 - we are almost at the end so we need to
start this timer so where you can add
64:27 - this line of code is within the next
question method and add this at the end
64:33 - of your else block so we're going to
type timer dot start and then
64:39 - parentheses semicolon we're going to use
the start method of our timer object
64:43 - that we have made and we also want to
stop this timer after we answer a
64:48 - question so we can just put this within
the display answer method then so timer
64:55 - dot stop and we can just add this at the
very top all right I'm crossing my
65:00 - fingers that everything works let's try
it out then okay looks like our timer is
65:07 - counting down just like we intended so
let's see what happens if we just don't
65:11 - do anything one zero
all right we got the question wrong then
65:16 - and it displayed the right answer so
let's just finish the rest of this quiz
65:20 - then which year was Java created 1492
65:25 - what was Java originally called latte
who is credited with creating Java you
65:33 - know what I'm still convinced it's Mark
Zuckerberg he's hiding something
65:37 - hooray we got zero percent all right
with how this program is written it's
65:43 - actually dynamic so if we want to add
any questions or take any questions away
65:48 - we actually don't really need to change
much we only need to change our arrays
65:52 - of questions options and the correct
answers like if I wanted to ask another
65:57 - question the only real change that I
need to make to this program is just to
66:01 - add another question like does pineapple
belong on pizza and then I would just
66:09 - need to add another set of options and
then add another answer but that's
66:14 - really yet that's all the changes you
have to make if you want to update this
66:17 - quiz
you just have to update whatever is
66:20 - within these arrays if you want the
source code for this quiz I'll post it
66:24 - in the comments down below and pin it to
the top so I put in a lot of work to
66:28 - create this video so I have one last
quiz for us to take and it has one
66:33 - question can you help me out by
subscribing and the answer to this is
66:36 - yeah sure bro which is obviously the
correct answer but yeah that is how you
66:43 - can make a simple quiz in Java
hey you if you enjoyed this lesson then
66:49 - you can help me help you in three easy
steps
66:52 - by smashing that like button drop a
comment down below and subscribe if
66:57 - you'd like to become a fellow bro