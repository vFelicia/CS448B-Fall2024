00:00 - hey how's it going everybody it's bro
00:01 - here hope you're doing well and in this
00:03 - video I'm going to teach you guys all
00:04 - about timer tasks in Java and at the end
00:07 - of this video we're going to work on a
00:09 - project where we can have a countdown
00:11 - timer that will display a Happy New Year
00:13 - on New Year's Eve so let's get into it
00:18 - if you find this video helpful please
00:20 - remember to Like comment and subscribe
00:22 - your support will help keep this channel
00:25 - running alright everybody I have two
00:27 - definitions here for you
00:28 - the first is timer and this is a
00:30 - facility for threads to schedule tasks
00:33 - for future execution in a background
00:35 - thread and basically what this means is
00:37 - that it keeps track of the time in a
00:39 - background thread and then we have timer
00:41 - tasks and this is a task that can be
00:43 - scheduled for one-time or repeated
00:45 - execution by a timer so this is a class
00:49 - that contains an abstract method called
00:51 - run and when our timer reaches a certain
00:54 - point a certain time it will execute a
00:57 - task either once or repeatedly and we
01:00 - can have that task be whatever we want
01:02 - so we're going to have a timer task that
01:05 - is linked to a specific timer so let's
01:07 - begin by creating an instance of a timer
01:10 - so we're going to type in timer and
01:12 - let's just call this timer with a
01:13 - lowercase T equals new timer and this
01:16 - will just keep track of the time but
01:18 - we'll need an import so let's add that
01:19 - now so import Java dot util dot timer
01:23 - now we're going to create a timer task
01:25 - so let's add that to the next line so
01:28 - timer task and let's call this task
01:31 - equals new timer task then a set of
01:35 - parenthesis then we'll need an import
01:37 - for this as well so make sure that you
01:40 - have these two imports now an easy
01:43 - implementation of the timer task is to
01:45 - add an anonymous inner class so with
01:48 - this timer task we're just going to add
01:49 - a set of curly braces after this and
01:51 - then we need to add unimplemented
01:54 - methods and it's just the run method so
01:57 - this timer task is going to be linked to
02:00 - this timer so when time is up it's going
02:02 - to execute this run function here so
02:05 - when our timer reaches a certain point
02:07 - it's going to execute this run function
02:09 - of our timer task instance so you can do
02:12 - whatever you want with
02:13 - in this run function but let's just
02:15 - start with something simple for this
02:16 - demonstration so I'm just going to
02:18 - create a simple print line statement
02:20 - that says task is complete now what
02:26 - we'll want to do is link this task to
02:29 - this timer so we can use the schedule
02:32 - function of this timer instance so I'm
02:34 - going to add that after our timer task
02:37 - so type in the name of the timer dot and
02:40 - we can use the schedule function and
02:42 - there's a few options here if you have
02:44 - intellisense there's a few variations
02:46 - and different ways to do this but we're
02:48 - gonna start with something simple so
02:49 - this schedule function has two arguments
02:53 - a task and a time and you can see that
02:55 - it filled in the tasks that we're gonna
02:57 - use within this first argument and the
02:59 - second is a time so this is normally in
03:02 - milliseconds so if you were to set this
03:04 - to zero and we ran our program this run
03:07 - function is going to execute immediately
03:09 - so let's try it and our task is complete
03:12 - now this is a delay the second argument
03:15 - so if we were to set this to 3,000
03:18 - milliseconds there would be a
03:20 - three-second delay so you can see that
03:22 - it's not doing anything right now
03:23 - because it's waiting and once that delay
03:25 - is over then it executes our task so for
03:28 - our next example I just turned this line
03:30 - into a comment so you don't have to
03:33 - necessarily just pass in only a numeric
03:36 - value we can pass in a date here if we
03:39 - want this task to be completed at a
03:40 - certain date in the future so we can
03:43 - actually do that utilizing the calendar
03:45 - class so let's create an instance of the
03:48 - calendar class and set the date so we're
03:50 - gonna type in calendar and let's call
03:52 - this date equals calendar dot get
03:57 - instance and then we're going to set
04:00 - things such as the year the month the
04:02 - day the hour so on and so forth so we're
04:05 - going to type in the name of this
04:06 - instance dot set and then within
04:12 - parentheses we're going to type in
04:14 - calendar dot and there's a few
04:17 - recommendations here if you have in the
04:19 - intellisense setup so let's set the year
04:22 - and this is all in caps and then we're
04:25 - going to add a comma and we'll
04:27 - this for 2020 and then we're gonna do
04:30 - the same thing for like the month the
04:32 - day of the month the hour so on and so
04:34 - forth
04:35 - but I'm also gonna change the clock on
04:38 - my computer just to demonstrate this so
04:41 - let's have this task perform at like
04:44 - midnight this day basically so we're
04:47 - gonna do the same thing here and let's
04:50 - set the month so month and let's set
04:55 - this to June
04:56 - so that would be calendar dot June and
05:04 - let's set the day of the month so day of
05:10 - month and we'll set this to June 20th
05:15 - and then we'll do our of day so this is
05:24 - in military time so if you want midnight
05:26 - that's going to be zero
05:29 - so it's zero through 24 basically and
05:32 - let's set the minutes so calendar dot
05:36 - minute and we'll set this to zero then
05:44 - you can do seconds as well so ii will
05:49 - set that to zero and that milliseconds
05:56 - okay so this task is going to execute at
06:01 - midnight june 20th of the year 2020 so
06:05 - I'm actually going to fast forward the
06:07 - clock on my computer to demonstrate this
06:09 - but first we actually need to have this
06:11 - task so we'll add that after here so
06:14 - timer that scheduled task and then for
06:19 - the time what we're going to write is
06:21 - date dot get time and that's it so let's
06:28 - run this okay so here I changed the
06:31 - clock on my computer to just a minute
06:34 - before midnight so once it hits midnight
06:36 - it's going to execute this task so we
06:38 - got three seconds to
06:41 - u10 task is complete now birth they're
06:44 - an example we're going to use a
06:46 - different method of the timer class and
06:48 - that is the schedule at fixed rate
06:51 - method and what this allows us to do is
06:53 - to repeat a task every so often and I
06:56 - think this would be good for some sort
06:58 - of like countdown timer so let's create
07:01 - something like that so timer dot
07:04 - scheduled at fixed rate so this will
07:08 - take a task the time or delay of the
07:12 - first instance or when you want this to
07:14 - be executed and we're going to set this
07:16 - to zero for now and this third value is
07:19 - how often do you want this repeated
07:21 - let's say that we want this to repeat
07:23 - every one second so we'll put 1000 here
07:25 - for 1000 milliseconds so this run method
07:29 - is going to execute every second so
07:31 - let's create a countdown timer so we'll
07:35 - create a variable within here and let's
07:37 - call it counter and set this equal to
07:39 - ten and within this function let's
07:43 - create an if statement in place of this
07:44 - so if counter is greater than zero
07:51 - what we'll do is that we will just
07:54 - display whatever our counter is and then
07:58 - maybe add seconds and then we want to
08:02 - decrement our counter by one so counter
08:05 - - - alright so this is just going to
08:08 - keep on running so we'll want some
08:10 - weight to cancel our timer so we'll add
08:13 - an else statement and then within here
08:15 - why don't we display something such as
08:17 - Happy New Year so will system that out a
08:20 - print line happy new year and then in
08:25 - order for our timer to stop we type in
08:28 - the name of our timer dot cancel all
08:34 - right so since there's no delay on this
08:36 - this is going to begin immediately when
08:38 - we run this so let's try it so it began
08:43 - at ten seconds and it's gonna keep on
08:44 - going down until it reaches zero and
08:47 - then display happy new year so two one
08:51 - happy new year now let's take this
08:54 - even further so let's have this task
08:56 - begin right before New Year's Day like
08:59 - 10 seconds before New Year's Day on New
09:02 - Year's Eve and then we'll have a
09:03 - countdown timer and then once it hits
09:07 - zero midnight of New Year's Day it's
09:10 - going to display Happy New Year so we
09:12 - can use schedule at fixed rate and for
09:15 - the delay we're going to use date get
09:17 - time so I'm just going to copy this
09:20 - paste underneath for our next example
09:22 - and we're going to use date get time in
09:25 - place of our delay here and then we're
09:28 - going to set the day that we want this
09:30 - to begin so let's set this to let's set
09:34 - it to 2020 calendar dot December date of
09:39 - the month the 31st hour of the day so
09:42 - this is in military time so 23 minutes
09:46 - 59 and then seconds let's put 50 here
09:50 - okay so I'm going to move the clock on
09:54 - my computer ahead to just before this
09:56 - time hey you know what why don't I show
09:58 - you guys how to change the time on your
10:00 - computer so I'm currently doing this
10:02 - with Windows so I'm going to hover over
10:04 - the time right click adjust time and I'm
10:09 - going to set the date and time manually
10:12 - and let's change this to December 31st
10:16 - of the year 2020 11:59 p.m. and let's
10:25 - change it and run this okay so let's see
10:30 - the time right now okay so we have about
10:34 - a minute I'm just going to fast forward
10:35 - this video all right everybody our task
10:39 - is about to begin right about now so ten
10:43 - seconds nine seconds eight seconds I'll
10:45 - shut up now so four three two one
10:51 - happy new year alright everybody well
10:54 - that's the basics of timer tasks so you
10:56 - can execute some block of code either
10:58 - once at a specific time or immediately
11:01 - or repeatedly either immediately or at a
11:04 - set date in the future so if you want a
11:07 - copy of all this code
11:08 - I'll post this in the comments down
11:09 - below and yeah that's the basics of
11:12 - timer tasks in Java hey you yeah I'm
11:16 - talking to you if you learn something
11:17 - new then you can help me help you
11:21 - in 3 easy steps by smashing that like
11:24 - button drop a comment down below and
11:26 - subscribe if you'd like to become a
11:28 - fellow bro
11:29 - [Music]