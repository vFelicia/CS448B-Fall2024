00:00 - hey what's going on everybody today I'm
00:01 - going to show you a basic Website Layout
00:04 - using HTML and CSS all right let's begin
00:07 - so we should know what semantic tags are
00:10 - semantic tags they include but are not
00:12 - limited to headers nav elements main
00:16 - section aside articles and Footers
00:19 - you'll want to use semantic tags because
00:21 - they keep your content organized they're
00:23 - better for search engine optimization
00:25 - and they assist with screen readers and
00:28 - other technology for accessibility so
00:30 - I've already written some HTML markup I
00:33 - just want to describe this first headers
00:35 - are used for introductory content such
00:37 - as a title a logo or author information
00:40 - nav elements they're used for navigation
00:43 - bars or other links sometimes you may
00:47 - find a set of navigation Links at the
00:48 - bottom of your page but having a
00:50 - navigation bar is fairly common now the
00:53 - main content which is all of this it can
00:56 - contain one of many sub-elements such as
00:59 - sections as side elements articles and
01:02 - generic developments so sections which
01:05 - is what I've created here in the middle
01:06 - this is for dependent content you would
01:09 - typically put anything you want within a
01:11 - section it's typically used for
01:13 - dependent content if I were to take this
01:15 - section out of the web page then put it
01:17 - on another web page it might not
01:19 - necessarily make sense like what is it
01:21 - for that's why it's dependent and a side
01:24 - element is meant for side content this
01:26 - can include author information fun facts
01:29 - quotes external links comments or really
01:32 - any other related content that's related
01:34 - to a section now an article this
01:37 - represents independent content this
01:40 - could include news articles job posts or
01:43 - blog posts articles are really similar
01:46 - to sections with articles it's meant for
01:48 - independent content for example a news
01:51 - article if I were to take this news
01:53 - article cut it out and put it on a
01:55 - different website it would still make
01:57 - sense it's independent content it's not
02:00 - reliant on the context of the website
02:02 - whereas in a section would be and then
02:05 - lastly we have Footers a footer is for a
02:07 - closing content this could include
02:09 - author information copyright information
02:11 - and sometimes navigational links there's
02:14 - really no one-size-fits-all approach
02:16 - really the design is up to you but this
02:18 - is a really common format now that we
02:21 - know the basics let's actually design
02:23 - this alright so we will create our
02:25 - semantic elements we have a header
02:28 - a nav element
02:31 - a main element
02:33 - and a footer element
02:37 - within our header element let's just add
02:40 - an H2 element
02:41 - that says header
02:45 - so let's go to our style sheet I'll take
02:48 - our header element
02:50 - let's change the background color
02:53 - background Dash color let's pick a light
02:55 - gray color
02:57 - I'll use hsl values because I like them
03:01 - 84 or 85 is good
03:04 - then let's text align Center
03:09 - and add a little bit of padding
03:12 - 25 pixels
03:14 - okay let's work on our navigation bar
03:16 - it's not going to be a fully functioning
03:19 - navigation bar we've done that in a
03:20 - previous video Let's just allocate some
03:23 - space for navigation bar it is common to
03:25 - have more than one navigation element
03:27 - per web page if we're creating a
03:29 - navigation bar we should set the class
03:32 - to be something like navbar so it's
03:35 - descriptive let's go to our CSS style
03:37 - sheet I will select our navbar class
03:42 - then change the background color
03:45 - let's go with the darker color
03:49 - I'll add some height
03:51 - 50 pixels
03:54 - and that should be good we're just
03:57 - allocating some space we're not creating
03:58 - a full navigation bar there's a little
04:01 - bit of margin around the body of our
04:02 - document I'm going to remove that by
04:05 - selecting our body element
04:07 - then set the margin to be zero or zero
04:10 - pixels that should get rid of the margin
04:14 - all right then we have our main element
04:16 - our main element can include any
04:19 - combination of
04:20 - a side
04:23 - sections
04:25 - articles
04:27 - or even just some generic developments
04:30 - but we won't be working with div in this
04:32 - video really you can see any combination
04:34 - of a side section article or div or
04:38 - maybe even none of them it's up to you
04:41 - in this topic we'll stick with one aside
04:43 - element one section and one article
04:46 - these elements are kind of like sub
04:49 - elements within our main element our
04:51 - main element is going to be the main
04:52 - stake and potatoes of our web page
04:54 - so with our side element I'll include an
04:57 - H2 element for a header
04:59 - this is a side
05:02 - let's do the same thing for Section this
05:05 - is a section
05:09 - then this is an article
05:16 - let me separate these just so that
05:18 - they're easier to see
05:20 - just to take up some space I'm going to
05:21 - create some sample paragraphs
05:25 - our side element will have one
05:28 - our section will have two paragraphs I'm
05:31 - just copying and pasting
05:33 - and our article will have two as well
05:38 - I don't want this top to bottom layout
05:40 - we can change that with some CSS
05:42 - properties so let's work on our side
05:44 - element first
05:46 - with our side element I'll set the width
05:49 - to be 20 of the width of the web page
05:52 - RSI element only takes up 20 percent of
05:55 - the space available
05:57 - the following elements can float we have
06:00 - to set the float property to be left
06:02 - then in this case
06:04 - all right let's copy aside change aside
06:07 - to B section that's our next element
06:10 - I'll set the width to be 40 percent
06:14 - then we have article
06:18 - change section to article
06:22 - and the width will stay at forty percent
06:24 - these three elements can all fit within
06:26 - the web page the total width is under
06:29 - 100 we have our three elements within
06:31 - our main element
06:33 - so if you would like to add a little bit
06:35 - of padding this is what you're going to
06:36 - do
06:38 - let's add 10 pixels of padding
06:42 - to each of these elements
06:46 - when we calculate the width we don't
06:48 - take into account any padding
06:50 - so one change we're going to make
06:53 - is that at the top of our CSS style
06:55 - sheet we can select all elements with an
06:58 - asterisk then a set of curly braces
07:01 - we will set the Box
07:04 - sizing property to border Dash box
07:10 - what we're doing with this property is
07:12 - that when we calculate the width factor
07:15 - in the padding all three elements should
07:16 - be lined up now
07:18 - alright then lastly we have our footer
07:21 - So within our footer element I'll just
07:24 - add an H2 element that says footer
07:27 - then I will style it
07:30 - let's copy what we have for our header
07:33 - paste it change header to be footer
07:37 - now what we need to do is clear our
07:39 - float because we're still floating the
07:42 - elements that come after
07:44 - let's display our footer as a block
07:47 - level element
07:48 - to clear a float you can set clear
07:51 - than both
07:53 - and that should clear that
07:55 - alright so here is a basic Website
07:57 - Layout for a desktop
07:59 - this isn't a good format for a mobile
08:02 - device though with a mobile device you
08:04 - would want each of these elements to be
08:05 - on top of each other so you can scroll
08:07 - down
08:08 - we can add an at rule
08:11 - so at
08:13 - media screen
08:16 - and
08:18 - Max width
08:21 - 600 pixels
08:23 - so what we're doing here is that if the
08:26 - width of our screen or window is 600
08:30 - pixels or below we can change some CSS
08:33 - properties
08:35 - with a side section and article
08:38 - let's select those aside comma section
08:43 - comma article
08:46 - we'll just change the width to be 100
08:49 - percent
08:51 - if a user is on a mobile device and or
08:54 - the width is 600 pixels or below
08:58 - then we'll switch to a mobile version of
09:00 - the web page each of these elements are
09:03 - a side section and article elements are
09:05 - taking up 100 of the width available
09:07 - then if we were to expand this web page
09:10 - or we're viewing on a desktop we switch
09:12 - to the desktop version this is also
09:15 - known as responsive CSS
09:17 - all right everybody I know I covered a
09:19 - lot today but that is a basic Website
09:22 - Layout using HTML and CSS