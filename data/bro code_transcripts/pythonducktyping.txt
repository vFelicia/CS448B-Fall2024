00:00 - hey what's going on everybody it's bro
00:02 - hope you're doing well
00:03 - and in this video i'm going to explain
00:04 - duck typing in python so
00:06 - sit back relax and enjoy the show
00:11 - if you find this video helpful please
00:13 - remember to like
00:14 - comment and subscribe your support will
00:16 - help keep this channel running
00:18 - i hope you all like ducks because that's
00:20 - the topic of this video
00:22 - duct typing is the concept where the
00:24 - class
00:25 - of an object is less important than the
00:27 - methods and or attributes that that
00:29 - class might
00:30 - have the class type is not checked if
00:32 - the minimum
00:33 - methods and or attributes are present
00:36 - it's based off of a popular phrase
00:38 - if it walks like a duck and it quacks
00:40 - like a duck then it must be a duck
00:42 - here's an example i have two classes
00:44 - class duck
00:45 - and class chicken both duck and chicken
00:47 - have walk and talk methods
00:49 - but they print something different with
00:51 - the duck class the walk method will
00:53 - print
00:54 - this duck is walking and the duck talk
00:56 - method will print
00:58 - this duck is quacking the chicken class
01:00 - has the same named methods walk and talk
01:02 - but they print something slightly
01:04 - different a slightly different variation
01:06 - the print method will print this chicken
01:08 - is walking
01:09 - and the talk method will print this
01:11 - chicken is clucking
01:12 - now let's say we have a third class a
01:14 - class called
01:15 - person
01:19 - now there is one method within our
01:21 - person class
01:22 - let's say we're attempting to catch a
01:24 - duck
01:26 - we'll pass in self and we need to pass
01:29 - in a duck
01:30 - object as an argument so let's type duck
01:34 - now within this method we'll have our
01:37 - duck use
01:38 - its walk method as well as its talk
01:41 - method
01:43 - duck dot walk and duck dot talk and then
01:46 - maybe we'll print something
01:49 - such as you caught the
01:53 - critter now let's create an object from
01:56 - each of these classes
01:57 - let's create a duck object duck equals
02:00 - duck
02:01 - a chicken object chicken equals chicken
02:05 - and lastly person person equals person
02:08 - now if we would like our person to use
02:10 - the catch method
02:12 - we need to pass in a duck as an argument
02:14 - so with our person let's type person
02:17 - dot catch and we need to send a duck
02:19 - object
02:20 - because that's a required parameter here
02:22 - so we're passing in our duck object that
02:24 - we created
02:25 - and as soon as we catch the duck it's
02:27 - going to use its walk and talk method
02:29 - and then we'll print you caught the
02:31 - critter so as you would expect this will
02:33 - print
02:33 - this duck is walking the stuck is
02:35 - quacking you caught the critter
02:37 - now with duct typing we can pass in
02:40 - a different type of object as long as it
02:43 - has
02:44 - the same methods and or attributes as
02:46 - our duck
02:47 - we could pass in a chicken because a
02:49 - chicken can also walk and talk
02:51 - so this time let's pass in our chicken
02:54 - as an argument
02:55 - and this will still work even though our
02:57 - parameter is set up to take a duck
02:59 - object
03:01 - this chicken is walking this chicken is
03:02 - clucking you caught the critter
03:04 - in layman's terms think of it like this
03:06 - python is examining this chicken object
03:09 - it's using its walk method it's using
03:11 - its talk method which are required and
03:12 - python is saying
03:13 - well that's close enough remember if it
03:15 - walks like a duck and it quacks like a
03:17 - duck
03:18 - then it must be a duck so duct typing is
03:20 - the concept where the class of an object
03:23 - is less important than the methods and
03:25 - or attributes that it might have
03:27 - the class type is not checked if the
03:29 - minimum methods and or attributes
03:31 - are present now let's say with our
03:33 - chicken object our chicken can no longer
03:35 - walk
03:37 - well we cannot pass in our chicken
03:39 - object anymore
03:40 - we have an attribute error chicken
03:42 - object has no attribute walk
03:44 - so python took a look at this chicken
03:46 - and noticed that it does not have a walk
03:48 - method
03:49 - well it's not walking like a duck but
03:51 - it's talking like a duck
03:52 - so it doesn't count as a duck because it
03:54 - doesn't have its walk method
03:56 - in conclusion the class type of an
03:58 - object is not as important as the
04:00 - methods and or attributes that that
04:02 - class might have when using duct typing
04:04 - the class type will not be checked if
04:06 - the minimum methods and or attributes
04:08 - are present
04:09 - since chickens can both walk and talk
04:11 - like ducks
04:12 - then they can be a substitute for ducks
04:14 - when we pass in
04:15 - our duck object to this method so if you
04:18 - would like a copy of this code i will
04:20 - post all of this in the comment section
04:21 - down below
04:22 - but yeah that is the basics of duct
04:24 - typing in python
04:26 - hey you yeah i'm talking to you if you
04:29 - learned something new
04:30 - then help me help you in three easy
04:32 - steps
04:33 - by smashing that like button drop a
04:35 - comment down below
04:36 - and subscribe if you'd like to become a
04:38 - fellow bro
04:42 - [Music]
05:00 - you