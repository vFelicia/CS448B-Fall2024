00:00 - hey everybody in today's video I'm going
00:01 - to show you how we can update the state
00:03 - of an array of objects if you're able to
00:06 - comprehend this lesson and you've
00:07 - watched previous topics we'll be ready
00:09 - to make a few projects in react so let's
00:12 - get started like we've done in Prior
00:14 - lessons be sure to import the UST State
00:16 - hook in this topic we're not going to
00:19 - create one state variable but
00:22 - four const cars cars is going to be an
00:26 - array of objects then we need a Setter
00:29 - for our array of cars equals use
00:33 - state I'm going to set the initial state
00:36 - to be an empty
00:37 - array then we will create a state
00:40 - variable for the cars year and a Setter
00:45 - for car
00:47 - year use
00:49 - state if we're going to be adding car
00:51 - objects to make it easier for me I could
00:54 - set the initial state to be a year like
00:58 - 2024 something that's kind of recent but
01:01 - I think it would be a lot cooler if we
01:03 - use JavaScript to get the current year
01:05 - right now I'm filming this video in
01:07 - December 2023 for the initial state I'm
01:10 - going to create a new date object then
01:14 - get the full year method for me this is
01:18 - going to return
01:20 - 2023 but depending on when you're
01:22 - watching this video it might be later
01:24 - we'll create a state variable for our
01:26 - cars make who manufactured the car
01:30 - set car make equals use State I will set
01:36 - the initial state to be an empty
01:39 - string then we need the model I'll just
01:42 - copy this because I'm lazy change make
01:44 - to be
01:45 - model set car model the initial State
01:50 - for the model will be a
01:52 - string all right now we're going to
01:54 - declare all the functions we'll need
01:55 - throughout this
01:56 - application we'll create a function to
01:59 - add a car remove a car change the year
02:02 - change the make change the model five
02:04 - functions total we'll declare a function
02:08 - to handle add
02:13 - car then a function to handle remove car
02:19 - there is one parameter an
02:22 - index what is the index of the object
02:25 - that we're removing from this
02:27 - array we need a Handler for year make
02:30 - and
02:31 - model function
02:34 - handle year
02:36 - change there is one parameter an event
02:40 - that will be provided to us through the
02:42 - onchange event handler we need a
02:45 - function to handle make change handle
02:49 - make
02:50 - change and handle model
02:54 - change so we should have five functions
02:57 - total add car remove car change the year
03:00 - change the make change the
03:03 - model let's create our HTML elements So
03:07 - within our return statement I will
03:08 - create a div to enclose
03:12 - everything let's create an H2 element
03:15 - for a heading list of car
03:20 - objects afterwards I will create an
03:23 - unordered
03:24 - list we will populate this unordered
03:26 - list
03:28 - later
03:30 - we will create three input elements for
03:33 - the year the make and the model of our
03:35 - car that we're trying to add we will
03:37 - begin with input that has a type of
03:44 - number I will set the value to equal the
03:49 - state of car year and for me that's
03:53 - 2023 that's because I'm creating a date
03:56 - object of the current date and time then
03:59 - returning the the year depending on what
04:01 - year you're watching this it might be
04:02 - different I will set the onchange event
04:06 - handler equal to a call back to handle
04:09 - year
04:11 - change I'll add a break
04:16 - afterwards okay let's copy this input
04:18 - element including the break the type of
04:21 - the second input element will be
04:23 - text the value will be the cars make who
04:27 - made the car the on change event handler
04:30 - will be a call back to handle make
04:32 - change we should add a placeholder to
04:35 - tell the user what we want them to type
04:37 - in it's not very apparent I'll put this
04:40 - on a new line for readability I will set
04:42 - the placeholder attribute equal
04:45 - to enter car
04:48 - make let's copy this element paste it
04:53 - for the third input element the value
04:55 - will be car model the onchange event
04:58 - handler will be a callback to handle
05:00 - model
05:01 - change the placeholder will be enter car
05:05 - model then we'll create a button to
05:08 - submit our car
05:10 - object
05:12 - button the text on the button will be
05:14 - add
05:16 - car we will set the onclick event
05:20 - handler equal to handle
05:26 - Adar all right now we have to fill in
05:28 - these functions
05:30 - we'll begin with handle year change
05:31 - because it's easy we will use the setter
05:34 - for set car
05:37 - Year we will pass in Access our event
05:40 - object that's provided to us access its
05:44 - Target access its value then we have to
05:47 - do this with make and
05:49 - model set car
05:52 - make access the value of the target of
05:55 - the event pass it as an
05:58 - argument set car
06:00 - model again take our event access its
06:04 - Target access its value so now we should
06:07 - be able to update these values let's try
06:15 - it when I click on the button I would
06:17 - like to add this object to my array of
06:20 - objects within our handle Adar function
06:23 - we have a few things to write it's not
06:25 - as complicated as what you think it
06:27 - might be using these State variables of
06:29 - year making model we will create a new
06:32 - car const new car equals a JavaScript
06:38 - object with these properties the year
06:41 - will equal the current state of car
06:44 - year the make will equal the current
06:47 - state of car make the model will equal
06:51 - the current state of car model then just
06:55 - for readability I'm going to put all
06:56 - these properties on a new line not
06:58 - necessary but but I find it easier to
07:00 - read we will use the setter for our
07:03 - array of car
07:05 - objects we will use an updator function
07:08 - we will take
07:10 - cars Arrow create a new array use the
07:15 - spread operator on cars we need to copy
07:18 - the previous elements over to the new
07:20 - array we don't want to lose them then we
07:23 - will add a new element our new car
07:26 - object so we don't want to use the
07:29 - current state of cars but rather the
07:31 - previous state with this updator
07:33 - function a common naming convention for
07:36 - your parameter is to use the first
07:38 - letter of that state variable let's
07:40 - rename cars as
07:43 - C so what we're going to do now is go to
07:46 - our unordered list we need to populate
07:49 - it with list items I will embed some
07:51 - JavaScript take our array of cars use
07:55 - the built-in map method to return a new
07:57 - array we're providing with two arguments
08:01 - an element and an index with the map
08:03 - method but I'm going to rename element
08:06 - as car so it's more understandable what
08:09 - would we like to do I'll use an arrow
08:12 - function we will return a list item
08:15 - element and for readability I'm just
08:17 - going to place these on a new
08:19 - line react wants us to add a key to each
08:22 - list item element so let's take care of
08:25 - that I will set the key of each list
08:28 - item element to be our index that's
08:31 - provided to us within each list item
08:34 - element I will display the cars year
08:37 - followed by The Cars make and the cars
08:43 - model all right let's see if this works
08:46 - let's add a 2023 Ford Mustang and that
08:51 - worked how about a
08:54 - 2024
08:55 - Chevrolet
08:58 - Corvette and and a
09:00 - 2022 Dodge
09:05 - Challenger one thing I'm going to add to
09:08 - the handle Adar function after
09:10 - submitting a car I would like to reset
09:13 - these values at the end of this function
09:16 - let's use the Setters I will set the car
09:20 - year when we're done with it to be the
09:22 - current year we'll create a new date
09:25 - object get the full year update the
09:27 - state to whatever values turned we'll
09:30 - use the setter for the car make and
09:32 - reset it to be an empty string same
09:35 - thing with the car
09:41 - model all right let's see if this resets
09:44 - 2023 Ford Mustang and it
09:49 - does
09:52 - 2025
09:54 - Chevrolet
09:56 - Camaro and that does reset
09:59 - you can see that my year went back to
10:01 - 2023 even though I adjusted it to 2025
10:04 - the make and model were both replaced
10:06 - with empty strings now I would like to
10:08 - remove a car when I click on one of
10:10 - these list item elements we make one
10:13 - change to the opening list item tag I
10:17 - will set the onclick event handler to a
10:21 - callback to handle remove
10:25 - car we do have to pass in an argument
10:28 - though to the function we have to pass
10:30 - in an index what is the index of the car
10:33 - we're trying to
10:35 - remove if I attempt to pass in an
10:37 - argument we will call this function
10:39 - right away we will convert this call
10:42 - back to an arrow
10:43 - function that has no
10:48 - parameters So within the handle remove
10:50 - car function there's not a lot to write
10:54 - we will use the setter for our
10:58 - cars
11:00 - we'll use an updator function we don't
11:02 - want to use cars but we'll use the first
11:04 - letter to indicate we're working with
11:05 - the previous state
11:07 - arrow take the previous state of our
11:10 - array of cars represented as C use the
11:13 - built-in filter method we will filter
11:15 - any cars that don't meet a certain
11:17 - criteria the filter method provides us
11:20 - with an element and an index but we do
11:23 - have a naming conflict we already have a
11:25 - parameter with the name of index let's
11:28 - rename the index of each element within
11:30 - our array as
11:32 - I then do this with an arrow function
11:36 - we'll write our condition check to see
11:38 - if the index of the current element I is
11:43 - not strictly equal
11:45 - to the index we would like to
11:47 - remove we'll filter out that element
11:50 - when we create a new array so we're not
11:53 - working with the current element even
11:55 - though it's provided to us so what
11:57 - people do is a convention if you have a
11:59 - parameter you're not using people will
12:01 - change the name of that parameter to be
12:02 - an underscore that tells other people to
12:04 - ignore this parameter and that should
12:07 - work let's run and test everything let's
12:10 - add a 2023 for Mustang but feel free to
12:13 - pick some different
12:14 - cars
12:16 - 2024
12:18 - chevret
12:22 - Corvette
12:24 - 2022
12:26 - Dodge Challenger and I should be able to
12:29 - remove a car when I click on it that
12:31 - list item element our Corvette is gone
12:34 - our Mustang and our challenger all right
12:38 - everybody so that is how to create an
12:39 - array of objects and update their state
12:42 - using
12:46 - react