00:02 - we have a big topic today i need to
00:04 - discuss arrays an array is a data
00:07 - structure that can hold multiple values
00:10 - values are accessed by an index number
00:13 - think of an array as kind of like a
00:15 - variable that holds multiple values it's
00:18 - a little more complicated than that but
00:20 - that's a good way of thinking about them
00:22 - perhaps we have the name of a car
00:24 - this will be a standard string i will
00:26 - name this car
00:28 - assign this a value of whatever card
00:30 - that you like one card that i like is a
00:33 - corvette
00:35 - then i will display whatever our car is
00:37 - standard output
00:40 - car
00:44 - so of course this car is a corvette we
00:46 - can transform this variable into an
00:49 - array by making the following changes
00:51 - after the variable name add a set of
00:54 - square brackets
00:56 - then enclose your values with a set of
00:57 - curly braces
01:00 - there we now have an array my variable
01:02 - car is now an array now this variable
01:04 - can hold multiple values multiple cars
01:07 - kind of like it's a parking garage
01:09 - separate each value with a comma
01:12 - this time i'll add a mustang
01:16 - then a camry
01:17 - now take a look at this i will display
01:19 - car
01:22 - now what the heck is this so this is a
01:24 - memory address of where our array is
01:26 - located like one two three fake street
01:29 - if i need one of these elements one of
01:31 - these values that's found within the
01:33 - array in order to access it i have to do
01:35 - so by an index number
01:37 - after the array name i will add a set of
01:40 - square brackets
01:42 - then an index number
01:43 - the first element in an array has an
01:45 - index of zero because computers always
01:48 - start with zero
01:49 - and we have our corvette it's kind of
01:51 - like a parking spot number that's why i
01:53 - went with this example of cars if i need
01:56 - the next element within my array i would
01:58 - access element number one then i should
02:00 - probably add a new line just to separate
02:02 - these
02:03 - new line
02:08 - we have our corvette and our mustang
02:11 - then we have our third element which
02:13 - would have an index of two so we have
02:15 - our three elements our corvette our
02:17 - mustang and our camry you can reassign
02:19 - values too i'm going to change the first
02:22 - element within this array take the array
02:24 - name
02:25 - select an index number i'll set the
02:27 - sequel to
02:29 - a camaro a chevy camaro
02:31 - now at parking spot number 0 we have
02:35 - our camaro then our mustang then our
02:38 - camry i'm going to rename car as cars
02:41 - just so people know that it's plural
02:43 - although it's not necessary one thing
02:45 - with arrays is that they can only
02:47 - contain values of the same data type
02:50 - like i'll try and stick a number within
02:51 - here number one
02:56 - so our compiler doesn't like it that
02:58 - there's a number in here with all these
02:59 - strings
03:01 - so arrays should all be of the same data
03:03 - type now if you don't know what you want
03:05 - to place within an array you can simply
03:08 - declare an array then assign values
03:09 - later
03:11 - i'm going to declare an array of cars
03:13 - and then later assign some values
03:17 - cars at index one
03:19 - will have our mustang
03:22 - cars at index two
03:27 - will be our camry
03:30 - see we still have an error though
03:32 - array size missing and cars
03:35 - you can declare an array then assign
03:37 - values later we need to set a size to
03:40 - this array it's a static data structure
03:43 - if i'm only going to place three cars
03:44 - within this array
03:46 - i'll set the size to be three so within
03:48 - the square brackets you can set an array
03:50 - size and this would work the same
03:53 - you can declare an array be sure to set
03:55 - the size and then assign values later
03:58 - let's try one last example i'm going to
04:01 - create an array of prices
04:03 - these will be of the double data type
04:06 - prices add a set of square brackets
04:09 - i'll go ahead and assign these values
04:10 - right away so i don't need to declare a
04:12 - size explicitly make up some prices
04:16 - five dollars seven dollars and fifty
04:19 - cents
04:21 - nine dollars and ninety nine cents
04:23 - then fifteen dollars
04:26 - i'll display these prices standard
04:28 - output
04:29 - prices i'll list an index number of what
04:31 - element i'm trying to access
04:33 - the first would be zero
04:35 - then i'll add a new line
04:38 - let's copy this line of code
04:40 - and paste it a couple more times
04:42 - we have prices at index zero that is the
04:45 - first element
04:46 - then one
04:47 - two and three
04:51 - and here are the prices so yeah that's
04:53 - an array think of it as a variable that
04:56 - can hold multiple values it's a little
04:58 - more complicated than that it's a type
05:00 - of data structure but that's a good way
05:02 - of thinking about them to change a
05:04 - variable into an array after the
05:06 - variable name add a set of square
05:08 - brackets place your values within a set
05:10 - of curly braces that's if you're
05:12 - assigning values right away or otherwise
05:14 - you can set a size and then assign
05:16 - values later that's another option so
05:19 - yeah those are arrays your assignment is
05:22 - to post an array in the comments section
05:24 - down below and well yeah those are
05:26 - arrays in c plus plus