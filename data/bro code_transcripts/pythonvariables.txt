00:00 - hey what's going on everybody it's bro
00:02 - hope you're doing well and in this video
00:04 - i'm going to explain how
00:05 - variables work in python so sit back
00:08 - relax
00:09 - and enjoy the show
00:12 - if you find this video helpful please
00:14 - remember to like
00:15 - comment and subscribe your support will
00:18 - help keep this channel running
00:20 - all right let's do this a variable is a
00:23 - container for a value it behaves as the
00:25 - value that it contains
00:27 - it's much like in algebra lessons back
00:29 - in the day where we had to solve for
00:31 - whatever value x was
00:33 - and then we can reuse x and it behaved
00:35 - exactly as that value
00:36 - well with programming we can do that
00:38 - plus we can assign variables of
00:40 - different data types
00:41 - so they are not limited to just numbers
00:43 - we can assign whole words
00:45 - numbers and even these things called
00:47 - booleans which are either true or false
00:49 - but i'll get more in depth into data
00:51 - types a little bit later on in this
00:52 - video
00:53 - so let's create a variable and this is
00:54 - how to do so we need a unique name for
00:56 - this variable
00:57 - let's say name name equals some value
01:00 - now the first data type that we'll cover
01:02 - is strings a string is a series of
01:05 - characters
01:06 - so to create a string we can either use
01:08 - single quotes or
01:09 - double quotes in python and we can
01:11 - assign this a value of whatever your own
01:14 - name is
01:14 - so i will assign this variable name a
01:17 - value of bro
01:18 - now this variable will behave exactly as
01:20 - if it was
01:21 - this value this name and then we can
01:23 - reuse this variable for something so
01:26 - let's print whatever our name is print
01:29 - name and this will print whatever your
01:31 - name is to the console window
01:33 - now when you print your variable make
01:35 - sure you don't put it within quotes
01:37 - because what we're doing then is
01:39 - literally printing
01:40 - the word name as you can see here so
01:44 - if you need to use your variable for
01:45 - something make sure it's not within
01:47 - quotes
01:48 - now we can combine our string variable
01:51 - with another string so within our print
01:53 - statement let's print
01:54 - a string literal such as hello space
01:58 - plus name so we are combining strings
02:01 - and then we're printing the results to
02:02 - the console window so this will print
02:05 - hello bro now you can actually check the
02:08 - data type of a variable
02:09 - so i'm going to turn this line into a
02:11 - comment so what you'll do
02:13 - is take the name of the variable
02:15 - surround this with a set of parentheses
02:17 - and then precede the set of parentheses
02:19 - with the type
02:20 - function and this will print the data
02:22 - type of this variable to the console
02:24 - window
02:25 - and you can see that it says class str
02:28 - short for string
02:29 - a string is a series of characters a
02:31 - name is a good example of a string a
02:33 - series of characters
02:34 - so that is how to check the data type of
02:37 - a variable just use the type function
02:40 - now you can actually combine
02:41 - variables together as long as they're of
02:43 - the same data type
02:45 - so let's change our name to maybe first
02:47 - name and we'll create a second variable
02:49 - called last name
02:50 - now a common naming convention with
02:52 - variables if it has
02:54 - two words separate each word with an
02:56 - underscore
02:57 - it's not necessary but it's common
02:59 - practice for python and honestly i
03:00 - sometimes forget about that but don't
03:02 - tell anybody
03:03 - so let's create another variable called
03:05 - last name last
03:06 - name equals whatever your last name is
03:10 - and then let's create a third variable
03:12 - called full name
03:13 - full underscore name and let's combine
03:17 - first name plus last
03:20 - name and let us display full name
03:24 - along with hello plus full name
03:28 - now these two names were combined
03:29 - together to create a
03:31 - whole new variable actually what i think
03:33 - i'll do is add a space
03:35 - within my variable so i'm doing a bunch
03:38 - of string concatenation i'm combining
03:40 - the variable first name plus a space
03:42 - character plus
03:43 - last name so the result is hello
03:45 - whatever your first name and last name
03:47 - is
03:48 - so that is a variable of the string data
03:51 - type it is a series of characters
03:53 - now with strings we cannot normally use
03:56 - these for any sort of math
03:58 - that's where the next data type comes in
04:00 - for the time being i just turned all of
04:01 - these lines into comments and we are
04:03 - going to move on to the
04:04 - int data type short for integer this
04:07 - time let's create a variable called
04:09 - age and we will assign this a value of
04:11 - whatever your age is
04:12 - let's just say that i'm 21 now when you
04:14 - assign
04:15 - a value of the int data type make sure
04:18 - that it is
04:19 - not within quotes because then
04:21 - technically it would be a string then
04:22 - and you can see that the color scheme
04:24 - for this number actually changed
04:26 - so if this was a string we would treat
04:28 - it different
04:29 - than an int data type because with
04:31 - strings we cannot normally use them for
04:33 - any sort of math
04:34 - so we now have a variable called edge
04:37 - and we can actually
04:38 - increase or decrease or do whatever we
04:40 - want with the edge let's increase our
04:42 - age by one let's say it's our birthday
04:44 - to do so we would say age
04:46 - equals edge plus one and then let's
04:49 - print our
04:49 - age to the console window print edge
04:52 - and you can see that it says i am 22.
04:55 - now there's a shorthand way of writing
04:56 - this
04:57 - what you'll do is type age plus equals
05:00 - one
05:00 - so that's kind of like a shortcut and
05:02 - this would work the same too
05:03 - now let's print the data type of our age
05:06 - variable because we can within a print
05:08 - statement i will print the edge
05:10 - and add my edge variable to this type
05:13 - function and this will print the data
05:16 - type of my edge variable to the console
05:17 - window
05:18 - and i will turn this line into a comment
05:20 - just so that it doesn't get in the way
05:22 - now if i were to print the data type of
05:24 - my age variable
05:25 - as you can see it is of the int data
05:28 - type short for integer
05:29 - it only stores a whole integer number
05:33 - now what if this was a string so what
05:36 - i'm going to do
05:37 - is surround my value within a set of
05:39 - quotes
05:40 - and i will turn this line into a comment
05:42 - so that it does not get in the way
05:43 - you can see that the data type of my age
05:45 - variable is now
05:46 - a string and with strings we cannot
05:49 - normally use them for any sort of math
05:51 - so let's attempt to increase our age
05:53 - variable by one
05:54 - and we ran into an error a type error
05:57 - can only concatenate string
05:59 - to string not end now the point being is
06:02 - that
06:02 - it's important to use the appropriate
06:04 - data type because
06:06 - with strings we cannot normally use them
06:08 - for any sort of math you'll want to use
06:09 - a data type of a numeric value
06:12 - an int or a float which we'll discuss a
06:14 - little bit later now here's a situation
06:16 - to consider
06:16 - what if we would like to display our
06:18 - edge variable along with a string
06:20 - literal much like what we did with this
06:22 - line involving a string literal such as
06:25 - hello
06:25 - plus the user's full name so let's
06:27 - attempt to do so and this is not going
06:29 - to work and i'll explain why
06:31 - so within our print statement let's say
06:33 - something such as
06:34 - your age is plus
06:38 - edge now we're going to run into a type
06:41 - error
06:41 - that's because we attempted to use
06:43 - string concatenation with a string
06:45 - literal
06:46 - and a variable of a different data type
06:49 - a variable of the
06:50 - int data type in order to display our
06:53 - edge
06:53 - along with the string we would need to
06:55 - convert our edge variable to the string
06:57 - data type and one way in which we can do
06:59 - that is by type casting
07:02 - and we'll cover this more in the next
07:03 - video so we're going to surround
07:05 - our age variable that is of the in data
07:08 - type with a set of parentheses
07:09 - and precede this with str short for
07:12 - string
07:12 - and this will convert our variable to a
07:15 - string that will allow us to display it
07:17 - with another string
07:18 - now if we were to run this program this
07:20 - way this will now display
07:22 - your age is and in this case 22 so if
07:25 - you need to display a variable of a
07:27 - different data type
07:28 - along with the string you would just
07:30 - need to use a string cast to convert
07:32 - that data type to a string
07:34 - but we'll cover this more in the next
07:35 - video on typecasting
07:37 - so that is the int data type it stores a
07:40 - whole integer number and the next data
07:43 - type is the float data type
07:45 - and i'm going to turn these lines into
07:46 - comments and we can move on
07:48 - now the float data type is a numeric
07:50 - value that can store
07:51 - a number that includes a decimal portion
07:54 - an int data type cannot store a decimal
07:57 - portion
07:58 - that's why it's in short for integer it
08:00 - only stores a whole number
08:01 - this time let's say we have a height and
08:04 - i will assign this
08:05 - a perfectly normal height of maybe 250.5
08:09 - centimeters so this decimal portion is
08:11 - important
08:12 - that's indicating that this is a
08:14 - floating point number a float for short
08:16 - so let's print our height to the console
08:18 - window print
08:20 - height and this will print whatever my
08:22 - height is and now
08:23 - let's check the type of our height using
08:26 - the type function
08:27 - so within a print statement i'm going to
08:30 - add my height
08:31 - surround this with another set of
08:32 - parentheses and precede this
08:35 - with the type function and the data type
08:38 - of my variable height is a float short
08:41 - for a floating point number
08:42 - a numeric value that contains a decimal
08:44 - portion and now for practice
08:46 - let's print our height along with a
08:48 - string literal
08:49 - so let's create a string literal such as
08:53 - your height is
08:56 - plus height but guess what we're going
08:58 - to do some type casting
08:59 - so surround height with a set of
09:01 - parentheses and precede this with str so
09:04 - that we convert
09:05 - height to a string so that we can use
09:07 - string concatenation within this print
09:08 - statement
09:09 - and this will print the message your
09:11 - height is
09:12 - 250.5 actually let's add centimeters to
09:15 - the end so
09:16 - plus cm
09:20 - and there we go and that is what a
09:22 - floating point number is
09:23 - float for short it is a numeric value
09:25 - that contains a decimal portion
09:27 - now the last data type that we're going
09:29 - to cover is the boolean data type it is
09:32 - a variable that can only store
09:34 - true or false let's say we have a
09:36 - variable called human
09:38 - if we were to assign this a boolean
09:40 - value this would be either true
09:42 - or false and we can print whatever this
09:45 - value is
09:46 - let's print whatever human is and this
09:48 - will display false
09:50 - now the reason that you may want to use
09:52 - booleans instead of strings
09:53 - even though you can still store a string
09:56 - representation of the word false or true
09:58 - is that these are very useful when we
10:01 - get to if statements
10:02 - we can check to see if some statement is
10:04 - true so that is a good use of
10:07 - boolean values now let's check the data
10:10 - type
10:10 - of my human variable so let's print
10:14 - type human and this will print to the
10:18 - console window
10:19 - bool short for boolean now make sure
10:21 - you're not putting this within quotes
10:23 - because then it's technically a string
10:25 - and they behave differently
10:26 - now the data type is a string and you
10:28 - may have noticed as well that the font
10:30 - color has changed between
10:32 - strings and boolean values so that's
10:34 - another good indicator
10:35 - now what if you need to display your
10:38 - value along with a string using string
10:40 - concatenation
10:41 - well guess what we're going to typecast
10:42 - again so let's print something
10:47 - are you a human
10:51 - so we need to use string concatenation
10:53 - so i will convert
10:55 - my boolean variable of human to a string
10:58 - and i have been programmed to inform you
11:01 - that
11:02 - yes i am in fact a human that is true
11:04 - well everyone
11:05 - that is the basics of variables it is a
11:08 - container for a value and they behave
11:10 - as the value that they contain there are
11:12 - four basic data types
11:14 - strings which store a series of
11:16 - characters ins
11:17 - which store a whole integer floats which
11:20 - are floating point numbers a numeric
11:22 - value with a decimal
11:24 - and booleans which only store true or
11:27 - false
11:28 - and they're very useful with if
11:29 - statements so
11:31 - that is it for variables if you would
11:32 - like a copy of all this code
11:34 - i will copy and paste all of this to the
11:36 - comments section down below
11:37 - but yeah that is how variables work in
11:40 - python
11:42 - hey you yeah i'm talking to you if you
11:44 - learned something new
11:45 - then help me help you in three easy
11:48 - steps
11:48 - by smashing that like button drop a
11:50 - comment down below
11:52 - and subscribe if you'd like to become a
11:53 - fellow bro
11:58 - [Music]
12:16 - you