00:00 - yo what's going on people so today I got
00:02 - to explain Dom navigation in JavaScript
00:05 - Dom navigation is the process of
00:07 - navigating through the structure of an
00:09 - HTML document using JavaScript HTML
00:13 - elements include but are not limited to
00:16 - the following properties for Dom
00:17 - navigation we can get the first child
00:20 - the last child the next sibling the
00:21 - previous sibling a parent or all the
00:24 - children of an element so for this
00:26 - exercise within our HTML document we're
00:29 - going to create a few unordered lists of
00:31 - course these unordered lists are going
00:33 - to be for food because I like food the
00:36 - first unordered list will have an ID of
00:39 - fruits let's create a few list item
00:42 - elements an
00:45 - apple an
00:47 - orange and a
00:51 - banana we'll need a few unordered lists
00:53 - to work with let's copy this unordered
00:56 - list and paste it twice the second list
00:59 - will be for
01:01 - vegetables pick some vegetables I'll
01:04 - pick
01:05 - carrots
01:07 - onions
01:09 - potatoes the third unordered list will
01:12 - be for
01:14 - desserts I'll pick
01:17 - cake
01:19 - pie ice
01:22 - cream that is good enough for now
01:25 - heading back to our Javascript file I
01:27 - will now discuss the property of first
01:30 - element child our unordered lists are
01:33 - elements they each have their own
01:35 - children a child element is any element
01:38 - found within this element our unordered
01:41 - list of fruits has three children Apple
01:45 - orange banana vegetables has three
01:48 - children carrots onions potatoes
01:50 - desserts has three children as well cake
01:53 - pie and ice cream let's say that our
01:55 - unordered list of fruits is a parent
01:58 - well Apple which would be the firstborn
02:01 - orange would be the middle child and
02:03 - banana would be the last born if these
02:05 - were actual children so think of it that
02:08 - way so I'm going to create a constant of
02:11 - element I'll be using this as a
02:14 - reference document. getet element by ID
02:18 - I will get that unordered list of
02:21 - fruits I'm storing this unordered list
02:24 - within this
02:26 - element I will create a reference for
02:28 - the first child equals take our element
02:33 - access the first element
02:37 - child if I was to take this element
02:40 - change its style access its background
02:44 - color set it to be
02:47 - yellow which element is going to be
02:50 - highlighted Apple if I selected a
02:53 - different element like my ID of
02:55 - vegetables the first child would be
02:58 - carrots then dessert
03:00 - s the first element child of desserts is
03:04 - cake they are the firstborn children
03:07 - they're at the top Within These
03:09 - unordered lists if you used query
03:11 - selector all I'll give you a
03:13 - demonstration I will select all
03:16 - unordered lists const UL
03:20 - elements equals
03:23 - document do query selector all select
03:29 - all unordered
03:32 - lists this will return a node list node
03:35 - lists do have their own built-in for
03:37 - each method take all UL elements use the
03:41 - built-in for each method what do we want
03:44 - to do iterate over every unordered list
03:49 - element do this let's create a reference
03:53 - to the first
03:56 - child equals take our unordered list
04:02 - element access its first element child
04:07 - then store it as a
04:08 - reference let's take our first
04:11 - child access its style access its
04:15 - background color property set it to be
04:20 - yellow that will highlight all of the
04:22 - first element children of all the
04:25 - unordered lists so that's how you can
04:27 - use Query selector all to select all of
04:30 - the first children of all matching
04:32 - elements now we're going to access last
04:35 - element child with our unordered lists
04:38 - if we're selecting our elements of
04:40 - fruits vegetables and desserts this
04:43 - would return the last child banana
04:46 - potatoes or ice cream depending on what
04:48 - we're selecting if these were actual
04:50 - children these three elements are the
04:53 - last born they're the youngest I'm going
04:56 - to create a reference to an element
04:59 - equals access the Dom get element by ID
05:04 - I will get my ID of
05:07 - fruits I will create a reference to the
05:10 - last child
05:13 - equals take our
05:15 - element get the last element
05:20 - child take our last child
05:24 - element access its style access its
05:27 - background color set it to
05:30 - yellow so that will highlight banana if
05:34 - I change the selected element to
05:37 - vegetables that would select
05:39 - potatoes if I selected desserts that
05:42 - would select ice cream they are the last
05:45 - element children found within each of
05:48 - these elements if I were to use Query
05:50 - selector all to select all unordered
05:52 - lists let's create const UL
05:56 - elements equals document do query
06:02 - selector all select all unordered
06:06 - elements this returns a node list they
06:10 - have their own built-in for each
06:12 - method take our node list of unordered
06:15 - elements use the built-in for each
06:18 - method take each unordered list
06:22 - element use an arrow function to do this
06:25 - I will create a reference to the last
06:28 - child
06:30 - equals take each unordered list element
06:34 - access the last element
06:37 - child take the last child during each
06:41 - iteration access its style access its
06:44 - background color set it to be yellow and
06:47 - that will select banana potatoes and ice
06:51 - cream select all unordered lists take
06:54 - each of their last children change the
06:57 - background color to be yellow so that is
06:59 - the last element child property in this
07:02 - next example I'll demonstrate next
07:05 - element sibling but we're going to make
07:07 - a few changes going back to our HTML
07:09 - file we will give each of these list
07:11 - items a unique ID so let's start with
07:14 - the first the ID will be Apple for the
07:17 - first list item element I'll copy this
07:19 - ID for each of these elements and then
07:22 - change them in a
07:27 - moment so we have apple followed by
07:29 - orange banana carrots onions potatoes
07:35 - cake pie then ice
07:40 - cream if I'm selecting my unordered list
07:43 - of fruits Apple orange banana or the
07:45 - children they are all siblings to each
07:48 - other if I were to select Apple then get
07:50 - the next sibling that would be orange if
07:53 - I select carrots the next sibling would
07:55 - be onions if I selected cake the next
07:58 - sibling would be pie
08:00 - so let's create a
08:01 - constant of element equals document.
08:06 - getet element by ID the ID that I'm
08:09 - going to select is
08:12 - Apple I will create a reference to the
08:14 - next sibling equals take our element
08:19 - access its next element
08:23 - sibling take our next
08:26 - sibling access its Style access its
08:29 - background
08:31 - color set it to be
08:34 - yellow if I'm selecting Apple the next
08:37 - sibling to that would be orange if I
08:39 - were to select orange the next sibling
08:42 - would be banana if I were to select
08:44 - banana well banana doesn't have a next
08:46 - sibling it's the last in line we
08:49 - wouldn't be selecting anything there is
08:51 - no next sibling for banana if I were to
08:54 - select carrots the next sibling is
08:56 - onions if I selected onions the next
08:59 - sibling is potatoes if I selected cake
09:02 - the next sibling is pie if I selected
09:05 - pie the next sibling is ice cream what
09:08 - if I selected fruits vegetables or
09:10 - desserts what would be highlighted I
09:13 - will select the ID of fruits that would
09:17 - highlight my unordered list of
09:19 - fruits these three unordered lists of
09:22 - fruits vegetables and desserts they're
09:24 - all children of the body they're all
09:28 - siblings to one another
09:30 - it's kind of like if the list item
09:32 - elements of Apple through ice cream are
09:34 - all children the unordered lists of
09:36 - fruits vegetables and desserts are the
09:38 - parents and the body is the grandparent
09:41 - if I select the unordered list of fruits
09:44 - the next sibling would be
09:46 - vegetables by accessing the next element
09:49 - sibling of my unordered list of fruits
09:52 - that selects my unordered list of
09:55 - vegetables if I selected vegetables then
09:58 - get its next sibling that would give me
10:00 - this unordered list of
10:02 - desserts all right then we have previous
10:05 - element sibling if I select an element
10:08 - we'll get the previous element sibling
10:10 - so if I were to select orange that would
10:12 - give me Apple if I selected banana that
10:15 - would give me orange if I selected
10:16 - onions that would give me carrots I will
10:19 - create a constant for element equals
10:23 - document. getet element by ID I will
10:27 - select Orange
10:31 - const prev meaning previous sibling
10:35 - equals take our element access the
10:39 - previous element sibling if I were to
10:43 - take my previous sibling access its
10:46 - style access its background color set it
10:49 - to be
10:51 - yellow the previous sibling of orange is
10:54 - Apple the previous sibling of banana is
10:58 - orange
11:00 - if I selected onions the previous
11:02 - sibling is
11:04 - carrots the previous sibling of
11:09 - potatoes is
11:11 - onions the previous sibling of pie is
11:14 - cake the previous sibling of ice
11:18 - cream is
11:19 - pi if I selected the first sibling then
11:22 - attempt to get the previous
11:26 - sibling well we don't select anything
11:28 - the previous sibling of a first child
11:30 - doesn't exist if I selected the previous
11:33 - sibling of my unordered list of
11:37 - vegetables that would select my
11:39 - unordered list of fruits if I selected
11:43 - the unordered list of desserts that
11:46 - would give me
11:48 - vegetables now we have the parent
11:50 - element property whichever element I
11:52 - select we'll get the parent the parent
11:55 - is the element that contains it
11:59 - const element equals document. getet
12:05 - element by ID I will select
12:10 - Apple const
12:12 - parent equals access our
12:15 - element access the parent element let's
12:21 - take our parent access its style access
12:24 - its background color set it to be yellow
12:28 - that will highlight
12:29 - my unordered list of fruits if I
12:32 - selected orange well that wouldn't
12:34 - change the parent is still fruits same
12:37 - thing goes with
12:38 - banana if I selected carrots well the
12:41 - parent is vegetables that unordered list
12:45 - if I selected ice cream well the parent
12:48 - is
12:49 - desserts so that's how to get the parent
12:51 - of an element you can access the parent
12:54 - element
12:55 - property the last property we'll discuss
12:57 - is children we we can return all of the
13:00 - children of a selected element I will
13:03 - create a const element equals
13:06 - document. getet element by
13:09 - ID I will select my ID of
13:12 - roots I would like all children of this
13:15 - element I'll create a reference to
13:18 - Children equals take our element access
13:22 - the children property if I was to
13:26 - console.log
13:27 - children this is what we're working
13:31 - with by accessing the children of an
13:33 - element that returns an HTML
13:36 - collection this HTML collection has
13:39 - three list item
13:41 - elements HTML collections don't have a
13:43 - built-in for each method I would need to
13:46 - typ cast it as an array using the from
13:48 - method of arrays let's take all of our
13:51 - children convert it to an array then
13:54 - method chain the for each
13:57 - method let's let's take each child from
14:02 - children then do this take each child
14:05 - during each iteration access its style
14:08 - access its background color set it to be
14:13 - yellow so this will highlight all
14:15 - children of a selected element Apple
14:19 - orange then banana if I selected
14:23 - vegetables that would highlight carrots
14:25 - onions
14:27 - potatoes if I select
14:29 - desserts that would highlight cake pie
14:32 - then ice cream you can even access these
14:34 - children by an index
14:39 - number let's say you would like to
14:41 - highlight a middle sibling orange onions
14:44 - or pie let's take our children it's an
14:47 - HTML collection access it by an index
14:50 - number so let's access children at index
14:53 - one of desserts that would highlight
14:56 - Pi let's select vegetables
14:59 - that would highlight onions then fruits
15:02 - would highlight
15:03 - orange all right everybody so that is an
15:06 - introduction to Dom navigation it's the
15:08 - process of navigating through the
15:10 - structure of an HTML document using
15:12 - JavaScript there are several different
15:14 - properties that you can use to navigate
15:16 - through HTML elements and well everybody
15:19 - that is an introduction to Dom
15:20 - navigation in
15:25 - JavaScript