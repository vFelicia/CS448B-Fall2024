00:00 - hey what's going on everybody in today's
00:01 - video I'm going to get a little more in
00:03 - depth with creating components and by
00:05 - the end of this topic we will be
00:06 - creating our own card component so sit
00:09 - back relax and enjoy the
00:12 - show in today's topic I'm going to get a
00:15 - little more in depth with react
00:16 - components as we've discussed in the
00:18 - previous topic a component is a section
00:20 - of reusable jsx code it's HTML like code
00:24 - that can contain JavaScript I thought
00:26 - today we could create some card
00:27 - components card components are fairly
00:30 - popular with react applications
00:32 - typically they involve a picture a title
00:34 - and a description you can use cards for
00:36 - all sorts of things in the previous
00:38 - topic we did delete all of the contents
00:40 - within our app function let's go ahead
00:42 - and do that now if we haven't already
00:44 - and we'll delete these Imports we will
00:46 - not need them for this lesson in the
00:48 - previous topic we did have a stylesheet
00:50 - for our app component we can delete this
00:53 - too we are now ready to begin within our
00:56 - source folder we will create a new file
00:59 - the name of the compon component will be
01:01 - card this is a jsx file jsx meaning
01:05 - JavaScript XML our components will be
01:07 - function based function type the name of
01:10 - the component card parenthesis then
01:13 - curly
01:15 - braces we will be exporting this
01:17 - component so that we can import it
01:19 - elsewhere so type export default the
01:22 - name of the component
01:24 - card within our card function we will be
01:27 - returning some HTML like
01:31 - code we'll begin with the div
01:36 - element we will be applying some CSS
01:39 - Styles we will need to set the
01:42 - class however with jsx class is a
01:45 - reserved keyword to set an element's
01:47 - class we have to instead use class name
01:50 - do pay attention to the capitalization
01:53 - the N is
01:54 - uppercase okay we will set this div
01:56 - section equal to card
02:01 - so cards typically have an image we'll
02:03 - include an image element we'll set the
02:05 - source
02:07 - later they usually have a title we'll
02:09 - use an H2 element and a description
02:12 - we'll include a
02:14 - paragraph for our H2 title why don't you
02:16 - go ahead and type in your name I'll type
02:18 - in my YouTube channel name but feel free
02:20 - to use your own
02:22 - name then let's add a description for
02:25 - the description of Year card type in
02:27 - what you do for a living or if you're a
02:29 - student what are you studying for me
02:32 - personally I make YouTube
02:37 - videos and add a hobby of yours I make
02:40 - YouTube videos and play video
02:45 - games so far so good let's import our
02:48 - card component just to be sure that it's
02:50 - working within our app component I will
02:53 - at the top import the name of the
02:56 - component card from a file location
03:00 - these files are right next to each other
03:03 - so I will
03:04 - type SLC card.
03:09 - jsx within our app component we will
03:12 - return within the return statement list
03:16 - the component we would like to return we
03:18 - will return our card component to
03:20 - include a component within angle
03:22 - brackets type the name of the
03:24 - component these are typically in
03:27 - pairs you need an opening tag and a
03:29 - closing tag and there's our card so far
03:33 - we'll be applying some CSS styling
03:35 - momentarily there is a shortcut in place
03:37 - of using an opening and closing
03:39 - tag take the opening tag end it with a
03:43 - forward slash that's also valid let's
03:46 - head back to our card component we'll
03:48 - include an image within our opening
03:51 - image tag it is good practice to set the
03:54 - alt attribute just in case this image
03:56 - can't be displayed or if somebody is
03:58 - using a screen reader the alternate
04:00 - textt will be displayed or read out loud
04:02 - will include a profile picture for us
04:05 - let's set the alternative text to be
04:08 - profile
04:10 - picture we're going to set the source
04:15 - attribute now I recommend pausing the
04:17 - video and finding a profile picture of
04:19 - yourself from you know Facebook or
04:22 - Twitter or whatever you use for social
04:23 - media pick a smaller picture something
04:26 - around 200 x 200 pixels would be decent
04:29 - if you don't want to follow along you
04:31 - can include a placeholder image just for
04:33 - this lesson which you can get from this
04:35 - site this will be an external URL https
04:39 - colon 2 slashes via
04:44 - placeholder doc
04:47 - sl150 that will give you a placeholder
04:49 - image otherwise if you have an image you
04:51 - would like to use I'm using the profile
04:53 - picture from my YouTube channel all we
04:56 - got to do is place this image within our
04:58 - assets folder
05:02 - from our card class we will import that
05:07 - image
05:08 - import then we need a name for this
05:11 - import I'll name my import profile pick
05:17 - from a
05:19 - location so we need to navigate to the
05:22 - assets directory then get our
05:26 - image slash the assets directory
05:30 - slash the name of the image so mine is
05:32 - profile and it's jpeg yours is likely
05:35 - going to be different do pay attention
05:36 - to
05:37 - that
05:39 - profile.
05:41 - jpeg for the source
05:44 - attribute I will set the SQL to a set of
05:47 - curly braces then we will include our
05:49 - profile pick that we're
05:52 - importing there's my profile picture
05:55 - depending on the dimensions of your
05:57 - profile picture it might be fairly big
05:59 - you may want to choose a smaller image
06:02 - or otherwise within our CSS file we can
06:04 - change the dimensions of the picture
06:07 - okay let's head to our CSS stylesheet we
06:09 - already do have some Global CSS
06:11 - properties already applied but I'd like
06:13 - to start fresh let's delete everything
06:16 - within the CSS stylesheet that should
06:18 - eliminate all CSS within our web
06:20 - page we will select the name of the
06:23 - class card remember that with jsx we use
06:27 - class name not class
06:30 - within our index CSS stylesheet let's
06:32 - select our card class I'm going to go
06:35 - through these CSS properties real quick
06:37 - we should already have some experience
06:39 - with CSS okay let's add a border border
06:43 - one pixel
06:45 - solid I'll set this to be
06:47 - black I do like using hsl values I'll
06:51 - pick a light gray
06:53 - color let's set the lightness to about
06:56 - 80 for the
06:58 - Border I'll set the Border radius to be
07:01 - 10 pixels to round the corners the
07:04 - corners should now be rounded as you can
07:05 - see here I'll add a box
07:10 - Shadow the first value is for the
07:12 - horizontal offset the second is for the
07:15 - vertical offset the third value is for
07:17 - the blur
07:19 - radius I'm going to pick a lighter color
07:21 - though so I'm going to select black
07:24 - change this to an hsl
07:27 - value but I'm going to change the
07:29 - transparency to be
07:33 - 10% so 0.1 that is not bad
07:37 - looking okay let's add a little bit of
07:40 - padding 20
07:42 - pixels padding is found between the
07:45 - elements and the border so if I were to
07:48 - increase this we have more padding but
07:51 - let's stick with
07:52 - 20 I'll add some
07:54 - margin margin is for the space outside
07:57 - of the Border let's go with 10 pixel
08:00 - pixs I'll text align Center to Center
08:03 - the elements
08:04 - within text align
08:07 - Center I'll set a Max width for the
08:10 - card to be 250
08:14 - pixels then I will set the display to be
08:17 - an inline
08:19 - Block in case we have more cards they'll
08:22 - at least flow within our container if we
08:24 - have
08:24 - more because normally divs are Block
08:27 - Level elements okay so let's work on the
08:30 - card image next we'll head back to our
08:32 - card component
08:34 - class We'll add a class name to the
08:37 - image element class name
08:43 - equals let's say card image go back to
08:48 - our CSS stylesheet we are accessing our
08:51 - card class then access the card image
08:54 - class
08:56 - within I will set a Max width I will set
09:00 - a Max width to be 60% of the width
09:03 - available I will set the height to be
09:06 - Auto to automatically resize if you
09:10 - would like a circular image you can set
09:12 - the Border radius to be
09:16 - 50% I'll add a little bit of margin on
09:19 - the bottom with margin bottom 10
09:24 - pixels all right let's work on our title
09:26 - next going back to our card component it
09:30 - let's add a class
09:33 - name the class name will be
09:37 - card-
09:39 - title going back to our CSS
09:42 - stylesheet we will select our card class
09:45 - then select the card title
09:49 - class with my card title I will set a
09:52 - font family to be pick a font I like
09:55 - Ariel I'll set a backup of son serif in
09:59 - case aial can't be displayed for some
10:01 - reason I'll set margin to be zero to
10:05 - remove any
10:07 - margin I'll set the text color to we'll
10:10 - set the color property to be pick a
10:13 - color again I'm using hsl
10:16 - values I'll set the lightness to be
10:20 - 20% now let's change our card text going
10:23 - back to our card
10:25 - component within our paragraph element
10:27 - we will set the class
10:29 - name to equal card-
10:34 - text going to our CSS
10:37 - stylesheet we will access the card class
10:40 - then access the card- text
10:44 - class I'll set the font family to be
10:46 - aerial as
10:49 - well and I will change the
10:52 - color I'll set the lightness to be 40%
10:55 - again I'm using hsl
10:56 - values H maybe 30
11:00 - I would say that looks decent enough we
11:02 - have now created and styled a card
11:05 - component within our app component we
11:07 - can reuse the card component however if
11:10 - I were to add
11:11 - another Well jsx elements must be
11:14 - wrapped in an enclosing tag our return
11:17 - statements are only designed to return a
11:19 - single element you can enclose all
11:22 - elements within what is known as a
11:23 - fragment it's an empty set of angle
11:27 - brackets then technically we're only
11:29 - returning a single element we now have
11:31 - two cards however they are identical
11:34 - though and we can use this card
11:36 - component whenever we want I can include
11:37 - four if I would like all right everybody
11:40 - so that is us making a card component in
11:43 - the next video I'll discuss props where
11:46 - each component can have different values
11:48 - because we don't want all of our
11:49 - components to look the same and that was
11:51 - some react practice by making a card
11:57 - component