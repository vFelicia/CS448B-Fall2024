00:02 - hey yeah welcome back so we have to talk
00:04 - about for loops a for loop repeats a
00:08 - section of code a limited amount of
00:10 - times here's an example let's say that
00:13 - we would like to count the numbers 1
00:15 - through 10. so we can actually write a
00:17 - for loop to do that for us and here's
00:19 - how to create one type 4
00:21 - a set of parentheses then a set of curly
00:23 - braces anything within this set of curly
00:26 - braces we can repeat a limited amount of
00:29 - times but before we do so there's a few
00:31 - statements we have to add to our for
00:33 - loop there are three the first is that
00:35 - we need some sort of counter or index
00:38 - and we can actually declare that within
00:40 - the for loop so we will declare an index
00:42 - int
00:43 - index and set this equal to some number
00:46 - let's say one so we will start at one
00:48 - and count to ten and then finish the
00:50 - statement with a semicolon now a common
00:53 - convention is that a lot of people will
00:55 - shorten index to i because it's easier
00:57 - to work with so this is the first
00:59 - statement there's two more and the
01:01 - second statement is a condition how long
01:04 - should we continue repeating this code
01:05 - so let's continue this for loop as long
01:08 - as i our index is less than or equal to
01:12 - 10
01:12 - and then add a semicolon at the end so
01:15 - that is the second statement and the
01:17 - third statement is that we can increment
01:19 - or decrement our counter
01:21 - so let's take i and increment it by one
01:24 - after each iteration by using i plus
01:27 - plus so let's just test this so printf
01:32 - i'll just print the word test
01:34 - so this should print the word test 10
01:37 - times
01:38 - then we should add a new line character
01:40 - at the end
01:43 - that's much better okay now let's
01:45 - replace test with a format specifier
01:48 - we're displaying an integer
01:51 - and let's display i our index and this
01:54 - should count from one to ten
01:57 - yep just like that one through ten so
02:00 - with this third statement we can
02:01 - increment or decrement by one or a
02:04 - greater number so this time let's count
02:06 - by two so we can set this to i plus
02:09 - equals two
02:11 - and we will now count up by two starting
02:13 - from one one three five seven nine or
02:17 - how about three
02:18 - one four seven ten you can also
02:20 - decrement this time let's count from 10
02:23 - to 1
02:24 - so let's set i to equal 10
02:26 - and we will continue this as long as i
02:29 - is greater than or equal to 1
02:32 - and we will decrement i minus minus so
02:36 - this will count from ten to one and then
02:38 - stop or we could count down by two
02:41 - i minus equals two
02:44 - then we have ten eight six four two
02:47 - or even three or a greater number
02:50 - so yeah that's a for loop it repeats a
02:53 - section of code a limited amount of
02:55 - times there's up to three statements
02:57 - that we can add we can declare an index
02:59 - a counter so to say some condition that
03:02 - we check after each iteration and then
03:05 - some way to increment or decrement our
03:07 - index and then place any code you would
03:09 - like to repeat within a set of curly
03:11 - braces so yeah that's a for loop if you
03:14 - would like a copy of this code i will
03:15 - post this to the comment section down
03:17 - below and well yeah those are for loops
03:20 - in c