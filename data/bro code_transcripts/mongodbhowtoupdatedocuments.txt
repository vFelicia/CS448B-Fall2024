00:00 - well hello again everybody today I will
00:02 - be explaining how we can update
00:03 - documents in mongodb to do that we would
00:06 - type DB the name of the collection we're
00:08 - working with in this case students we
00:10 - can either update one document or update
00:12 - many let's update one we will use the
00:16 - update 1 method there are two parameters
00:19 - set up
00:20 - filter
00:22 - and update
00:24 - filter is the selection criteria for the
00:27 - update So within a set of curly braces
00:30 - we will pass some criteria let's update
00:33 - anybody's name that's SpongeBob
00:40 - it's basically just selection criteria
00:43 - the second parameter it's another
00:45 - document body is the update parameter
00:48 - what are the modifications we would like
00:50 - to apply
00:51 - we will utilize the set operator which
00:55 - is preceded with the dollar sign the set
00:58 - operator replaces the value of a field
01:00 - so after the set operator add a colon
01:04 - then another set of curly braces yes
01:06 - there's a lot of curly braces in mongodb
01:08 - So within this set of curly braces after
01:12 - the set operator that's where we can
01:14 - make our changes you can add or change
01:16 - the value of a field Spongebob doesn't
01:19 - have a full time field
01:22 - we can add that with the set operator if
01:25 - this field already exists we would
01:27 - update it so let's say SpongeBob is a
01:30 - full-time student
01:31 - let's execute this command it was
01:34 - acknowledged that's true we have a
01:36 - matched count of one and a modified
01:38 - count of one let's take a look at
01:40 - Spongebob
01:41 - DB dot students dot find
01:46 - name
01:47 - SpongeBob
01:49 - and here he is he is now a full-time
01:52 - student
01:53 - with your filter argument if you're
01:55 - working with a large data set it is
01:57 - possible that two people can have the
01:59 - same name it would be safer if we were
02:01 - to update by an object ID these IDs are
02:04 - unique for each document let's update
02:06 - but with the filter we will search by
02:08 - object ID
02:10 - so again that's Stevie dot students dot
02:14 - update one
02:16 - first is the filter parameter
02:19 - within a document body let's select
02:21 - underscore ID colon then paste that
02:25 - object ID for SpongeBob for every
02:28 - document the object ID is unique just in
02:31 - case there's two people named SpongeBob
02:32 - we won't update it uh looks like I have
02:35 - double underscore ID let me fix that
02:37 - real quick
02:38 - otherwise we'll get a syntax error so
02:41 - select the document that has this object
02:43 - ID then the second argument which is
02:46 - comma separated will be the changes to
02:48 - be made
02:49 - so we will set colon another set of
02:53 - curly braces
02:54 - let's set full time to be false
02:57 - SpongeBob already Works a full-time job
03:00 - he'll just be a part-time student
03:03 - okay that was acknowledged let's take a
03:04 - look at Spongebob again using the find
03:06 - method
03:07 - db.students.bind
03:11 - ID colon the unique object ID
03:15 - and here's SpongeBob
03:17 - the full-time field is set to false
03:20 - before it was true but we updated it
03:23 - now you can unset a field too let's get
03:26 - rid of the full time field for SpongeBob
03:28 - DB
03:29 - dot students
03:31 - dot update one
03:35 - we will search by ID
03:38 - then for the second argument we will use
03:41 - the unset operator which will remove a
03:44 - field so within another set of curly
03:46 - braces let's take our full time field
03:50 - colon now to remove a field for the
03:54 - value just set it to be an empty string
03:56 - let's take a look that was acknowledged
03:59 - let's select SpongeBob again
04:01 - db.students.find
04:07 - all right and here's SpongeBob again
04:09 - that full-time field is gone now you can
04:11 - use the unset operator to remove a field
04:14 - now let's talk about update many
04:17 - using the update many method we can
04:19 - update many documents at once
04:21 - DB dot students dot update many this
04:27 - method has the same parameters as update
04:29 - 1. if I would like to select every
04:32 - document I will use an empty set of
04:34 - curly braces what are the changes we
04:36 - would like to make
04:37 - let's use the set operator
04:40 - let's set everybody's full-time field
04:44 - to be false
04:46 - if they don't have this field one will
04:49 - be created for them
04:51 - all right let's find every student that
04:53 - was acknowledged
04:54 - db.students.find everybody
04:57 - should have a full-time field that's set
04:59 - to false
05:01 - full time is false
05:03 - here as well yeah and that applies to
05:06 - everybody
05:07 - all right let's unset the full-time
05:09 - field for Gary and Sandy
05:12 - TV DOT students dot update one
05:17 - let's select name
05:20 - Gary
05:22 - we will use the unset operator
05:27 - then add the changes to be made
05:29 - full time then we'll remove it by
05:32 - placing an empty string
05:34 - I'm going to copy this line we'll reuse
05:36 - it later
05:37 - that was acknowledged
05:42 - then let's remove full time for Sandy
05:46 - that was acknowledged as well
05:49 - so let's double check DB dot students
05:52 - dot find
05:55 - so SpongeBob and Patrick both have this
05:58 - full-time field
06:00 - Sandy and Gary don't
06:02 - they were on set with the update many
06:05 - method we can check to see if a field
06:07 - exists or doesn't exist within the
06:10 - selection criteria if any student
06:12 - doesn't have a full time field let's
06:14 - update it
06:16 - DB dot
06:18 - students.update many
06:21 - what is the selection criteria
06:24 - let's say the selection criteria is full
06:27 - time field
06:29 - does it not exist we will use the exists
06:33 - operator
06:34 - exists preceded with the dollar sign
06:37 - then add false does this full-time field
06:40 - not exist
06:42 - that's the selection criteria if a
06:45 - document doesn't have the full-time
06:47 - field we'll give them one so the second
06:50 - argument will be the changes to be made
06:52 - we will use the set operator colon
06:55 - another set of curly braces
06:58 - anybody that doesn't have the full-time
07:01 - field let's set that to be true full
07:04 - time true
07:05 - press enter that was acknowledged let's
07:08 - take a look at our students
07:09 - db.students.find
07:12 - all right so Sandy and Gary are both
07:15 - full-time students now SpongeBob Patrick
07:18 - and Larry are not full-time students
07:20 - they're part-time students that's how to
07:23 - update documents in the mongodb Shell
07:25 - you can use update 1 or update many
07:27 - let's do the same thing with compass
07:29 - hello again everybody in compass to
07:32 - update a field of a document you can
07:34 - press the pencil icon to edit the
07:37 - document to remove a field next to the
07:39 - field name you can press the trash can
07:41 - icon to remove it then update
07:44 - to add a field go to the pencil icon
07:47 - again
07:48 - after a field you can add a new field by
07:51 - pressing the plus button to add a field
07:53 - let's add a full time field
07:58 - for the value I will set that to be
08:00 - false for SpongeBob
08:02 - then you can change the data type here
08:04 - we'll change that to be a Boolean
08:07 - then update
08:08 - to change a pre-existing field again go
08:11 - to the pencil icon select your field
08:13 - then you can change one of the values
08:16 - but I'll keep this as false
08:18 - that is how to update documents in
08:20 - compass it's fairly easy and
08:22 - straightforward
08:23 - alright everybody so that is how to
08:25 - update documents in mongodb you can use
08:28 - the update 1 method or update many you
08:31 - pass in a filter for the selection
08:32 - criteria then the modifications within
08:35 - the update parameter and that is how to
08:38 - update documents in mongodb