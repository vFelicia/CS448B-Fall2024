00:00 - hey what's going on everybody it's your
00:01 - bro here hope you're doing well and in
00:03 - this video i'm going to teach you guys
00:04 - how the key listener interface works in
00:06 - java so
00:07 - sit back relax and enjoy the show
00:11 - if you find this video helpful please
00:13 - remember to like
00:15 - comment and subscribe your support will
00:17 - help keep this channel running
00:19 - okay everybody let's get started now
00:21 - within my project folder i have
00:23 - two classes one class called main and it
00:25 - contains an instance of my other class
00:27 - called
00:28 - my frame my frame extends jframe so it
00:31 - behaves exactly like a jframe
00:33 - and within the constructor for my frame
00:35 - for this class
00:37 - i have four lines of code this dot set
00:39 - default close operation jframe makes it
00:41 - on close
00:42 - i'm using a size of 500 by 500 this next
00:45 - part's important i'm using
00:46 - no layout manager this dot set layout is
00:49 - set to null
00:50 - because we're going to be manually
00:52 - moving components within the frame
00:54 - by using some keystrokes and lastly this
00:56 - dot set visible is set to true
00:58 - one of a few ways in which you can use a
01:00 - key listener interface
01:02 - is just to add that after the class
01:04 - definition
01:05 - my frame extends jframe implements the
01:08 - key
01:09 - listener interface and with interfaces
01:11 - you need to add any unimplemented
01:13 - methods
01:14 - and for key listeners there's currently
01:16 - three key typed
01:17 - key pressed and key released and in just
01:20 - a moment i'll explain the difference
01:21 - between the three
01:22 - but we need to add a key listener to
01:24 - this frame so we can type in the name of
01:26 - the frame
01:27 - which is just this add key
01:30 - listener and since we're implementing a
01:33 - key listener interface
01:34 - we can simply just pass in this so
01:38 - this frame will now respond to key
01:40 - events
01:41 - and we have key types key pressed and
01:44 - key released
01:45 - and let me explain the difference
01:46 - between these three i've added just a
01:48 - few short descriptions underneath each
01:50 - of these methods
01:51 - let's begin with key typed key typed is
01:53 - invoked when a key is typed
01:55 - this uses a key chart or key character
01:58 - it gives us a character output depending
02:01 - on the key that is pressed
02:02 - key pressed is invoked when a physical
02:05 - key is pressed down
02:06 - this uses a key code it gives us an
02:09 - integer number depending on the number
02:11 - of the button that is pressed down
02:13 - each button on your keyboard has an
02:14 - associated number and
02:16 - key code gives us the number of the
02:18 - button and key released is fairly simple
02:20 - it's called whenever a button is
02:22 - released so let's actually display what
02:24 - the difference between a key char and
02:26 - key code is so within our key release
02:28 - method this is going to be called
02:30 - whenever we release a button
02:32 - so let's actually display some key
02:34 - characters as well as some key codes so
02:36 - let's begin with some key characters
02:38 - so let's add a print line that says
02:42 - u released
02:46 - key character and we can get
02:50 - the key character of this event by
02:52 - typing e dot
02:53 - get key char
02:58 - and let's try this so i'm going to press
03:02 - q and it says your released key
03:04 - character q
03:05 - w e r t y
03:09 - one two three four five now you can
03:12 - actually
03:13 - use capital letters so i'm going to hold
03:15 - down shift and type in
03:16 - q q-w-e-r-t-y
03:20 - so those are key characters now key code
03:23 - is the number of the button you released
03:26 - key code and this is e
03:30 - dot get key code so each of these
03:33 - buttons
03:34 - has a number
03:37 - actually let me turn this line into a
03:39 - comment for now
03:41 - so i'm going to type in q and the number
03:44 - of the button
03:45 - of the q button is 81. w
03:48 - is 87 e is 69
03:51 - r is 82. t is 84 and y is 89.
03:56 - so lowercase q is 81 but uppercase q is
04:00 - also 81 because i'm holding down the
04:01 - same button
04:02 - and 16 is shift and i just released it
04:05 - so that's why this was triggered
04:07 - so let's actually display these together
04:08 - now
04:12 - so q the button that contains the q
04:15 - symbol produces a character a key
04:18 - character of q
04:19 - and the button number the key code is
04:22 - 81.
04:23 - now if i were to hold down shift and
04:25 - then press the same button
04:27 - this is producing a different key
04:28 - character capital q
04:30 - but the key code is still the same
04:32 - because it's still the same button
04:34 - so that's the difference between a key
04:35 - character and a key code
04:37 - and then i'm still holding down shift if
04:38 - i were to release it it's going to give
04:40 - us the
04:41 - key character in the key code well shift
04:43 - doesn't produce any key characters
04:45 - that's why it's confused
04:46 - but it has a certain key code of 16
04:50 - and what we're going to be doing in this
04:52 - video is creating a simple label and
04:54 - we'll move the label around
04:55 - the frame by using either key typed or
04:58 - key pressed
04:59 - so let's declare a label and then define
05:01 - it
05:02 - so jlabel and let's call this label and
05:05 - within the constructor
05:06 - let's instantiate this label label
05:10 - equals new j label
05:15 - and let's set the bounds for this label
05:17 - label dot
05:18 - set bounds we're setting the bounds
05:20 - since we're using no
05:21 - layout manager let's say we want this to
05:24 - start in the top left corner of the
05:25 - frame that is where
05:26 - x is zero y is zero let's make the width
05:29 - 100 and the height 100
05:32 - and let's set a background color label
05:35 - dot
05:36 - set background why not
05:39 - red i guess
05:42 - and in order to display the background
05:44 - color we need to
05:45 - label dot set opaque and set this to
05:48 - true
05:49 - because the background color doesn't
05:50 - like to display if you don't set the
05:53 - opacity set opaque to true all right and
05:56 - then we need to add this label to the
05:58 - frame
05:58 - this dot add we're adding our label
06:03 - and we should have a simple label in the
06:06 - top left corner
06:07 - now this is our label we're going to
06:09 - move this label around
06:11 - the frame depending on the key that we
06:13 - press or the key that we type
06:15 - let's begin by filling in the key typed
06:17 - method we can evaluate
06:19 - the key character that is being produced
06:22 - and
06:22 - this would be best by using a switch you
06:25 - could write this with a bunch of if
06:26 - statements but it's not as efficient so
06:28 - let's use a switch
06:29 - and what we're going to be passing into
06:31 - the switch to examine
06:32 - is e that get key character this will
06:35 - produce
06:35 - a character and then we can use the
06:37 - switch to determine
06:39 - what character is being used so let's
06:41 - set different cases
06:42 - let's have a case for a
06:46 - a to move to the left w to move up s to
06:49 - move down and d
06:50 - to move right so if the key character
06:53 - that is being produced is a
06:55 - if somebody types in the character a we
06:57 - want to move our label to the left
06:59 - and one way in which we can do that is
07:01 - by using the name of our label
07:03 - label dot set location and we pass in
07:06 - some coordinates some new coordinates of
07:08 - where we want to place this label
07:10 - on the y axis we want to keep this the
07:12 - same so we can use
07:14 - label dot get y
07:18 - and we're going to do the same thing for
07:20 - x but we're going to adjust it slightly
07:23 - label dot get x
07:28 - but if we want to move to the left we
07:29 - want to subtract
07:31 - a number from this let's say just one
07:33 - pixel we'll keep this small
07:35 - and let's try this
07:38 - so we have our label if i were to press
07:41 - a
07:42 - this is slowly moving to the left but we
07:45 - need to set this for the other
07:46 - directions as well
07:48 - so i'm going to add a break after this
07:50 - case
07:51 - and i'm just going to indent this
07:53 - slightly
07:55 - just so it's easier to read so let's
07:56 - have a case for
07:58 - ws and d so
08:01 - case w we want
08:05 - x to stay the same but we want to move
08:07 - up so we subtract
08:10 - a number from y
08:13 - and then we need s and d
08:18 - s will move down so this is
08:21 - plus one and then x stays the same and
08:24 - lastly
08:26 - d
08:31 - x will just add one and y we will keep
08:34 - the same
08:35 - and now we should be able to move up
08:37 - down left and right
08:40 - down right
08:43 - up left so this is moving fairly slow we
08:47 - can actually increase the amount of
08:49 - pixels this is moving after
08:50 - each key character so let's change this
08:53 - from one to ten
08:54 - and this is going to be more drastic
09:01 - all right this is moving much faster now
09:04 - but yeah you get the idea
09:05 - now let's do the same thing but use the
09:08 - arrow keys on the keyboard
09:09 - the arrow keys do not produce a key
09:11 - character
09:12 - but you can use key pressed for this so
09:15 - let's actually
09:16 - copy the switch that we have and paste
09:19 - it within here
09:20 - and this time we're going to be using
09:22 - the keycode
09:25 - so let's pass in the keycode underneath
09:28 - keypressed
09:30 - and the case will be actually we need to
09:32 - see what these buttons are first
09:36 - okay so left is 37
09:39 - up is 38 down is 40 and right is 39
09:45 - so we're going to pass in or use these
09:47 - numbers
09:48 - for the cases so let's begin with left
09:52 - that is 37
09:55 - 37 we're going to be moving to the left
09:58 - minus 10 pixels
10:02 - case 38 we're going to be moving
10:05 - up by 10 pixels by 10.
10:09 - 39 is down
10:12 - actually that's right uh so
10:16 - we're going to move to the right by 10
10:21 - and then 40 should be down
10:26 - and this is x is going to be the same
10:30 - and y is plus 10 all right
10:34 - i'm not going to use wasd i'm using the
10:37 - arrow keys on my keyboard so down
10:40 - right up and then left
10:45 - now i have a special treat to show you
10:47 - guys before you go
10:48 - instead of moving our boring red label
10:51 - on the screen let's move an image i have
10:55 - an image of a rocket
10:57 - that i want to use in place of this red
10:59 - square
11:00 - so i'm going to add this icon to the
11:02 - label but first we need to create an
11:04 - icon
11:04 - so if you want feel free to pause the
11:06 - video and download an image that you
11:07 - want to use
11:08 - so i'm going to create an image icon
11:10 - we'll call this icon
11:12 - first let's declare it and then within
11:13 - the constructor we'll instantiate it
11:16 - icon equals new image
11:21 - icon and then i'm going to list either
11:23 - the file path or the file location
11:25 - since this is within my project folder i
11:27 - can just list the file name
11:29 - and that is rocket.png
11:32 - and i am not going to use the background
11:34 - color and i am not going to
11:36 - set this to opaque i'm going to add this
11:39 - icon to the label
11:40 - label dot set icon and then i'm going to
11:43 - pass in
11:44 - my icon that i want to use
11:47 - and now i have a rocket ship on here
11:51 - and i'm going to change the background
11:52 - color because why not
11:54 - so to change the background color of the
11:58 - frame that is
11:59 - this dot get content pane
12:03 - dot set background and we'll just pass
12:06 - in color
12:07 - dot black to represent outer space
12:11 - and now we have the very beginning of a
12:14 - simple game
12:16 - so maybe you can do like invaders or
12:17 - something where you can move your
12:19 - character left and right and dodge
12:20 - bullets or something
12:22 - but yeah i just wanted to show you guys
12:23 - that before you go so that's the basics
12:26 - of the key listener interface if you
12:28 - want a copy of all this code i'll post
12:29 - all of this in the comments down below
12:31 - but yeah that's the basics of the key
12:33 - listener interface in java
12:36 - hey you yeah i'm talking to you if you
12:39 - learn something new
12:40 - then you can help me help you in three
12:43 - easy steps
12:44 - by smashing that like button drop a
12:46 - comment down below
12:47 - and subscribe if you'd like to become a
12:49 - fellow bro
12:55 - [Music]
13:10 - you