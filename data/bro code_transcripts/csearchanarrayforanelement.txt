00:01 - hey welcome back so in this video i'm
00:04 - going to show you how we can search an
00:06 - array for an element let's create an
00:08 - array of numbers something simple int
00:11 - numbers this will be an array
00:13 - then assign some numbers i'll just
00:15 - assign the numbers one through ten
00:17 - because i'm basic like that
00:21 - there one through ten we'll probably
00:23 - need this later i'm going to calculate
00:25 - the size of the array
00:27 - and size equals size of
00:31 - my array numbers divided by the size of
00:35 - one of the elements
00:37 - i'll just pick the first element
00:41 - we'll need to keep track of an index
00:42 - like what index did we find something
00:44 - that we're searching for
00:46 - int index i'll declare this variable but
00:50 - we don't need to assign it
00:52 - as well as int
00:54 - mynum mynum will be the number that
00:56 - we're looking for
00:58 - let's accept some user input we'll
01:00 - create a prompt
01:01 - standard output
01:04 - enter
01:06 - element to
01:08 - search
01:11 - i'll for a new line because i can
01:15 - standard
01:17 - input
01:19 - my num
01:22 - i'm going to create a function that will
01:24 - search an array for us let's define that
01:26 - function outside of the main function
01:28 - this function will return an integer
01:31 - that will be our index
01:32 - the return type isn't
01:34 - i'll name this function
01:36 - search array
01:39 - there's a couple parameters
01:41 - we'll have three parameters
01:43 - an array of integers
01:45 - integer
01:46 - array
01:48 - the size of the array and size
01:51 - then some element that we're searching
01:52 - for
01:54 - int element
01:56 - then we should probably add a function
01:58 - declaration at the top
02:01 - that's good
02:02 - this function will return an integer the
02:05 - index of the element that we're
02:06 - searching for
02:07 - we will take our index variable
02:10 - set the sql to then i'm going to invoke
02:12 - the search array function that we just
02:14 - declared
02:15 - but we need three matching arguments for
02:17 - the three parameters that we have set up
02:20 - an array a size and an element
02:23 - we'll pass in our array numbers
02:26 - the size of the array that we already
02:28 - calculated
02:30 - and the element that we're searching for
02:32 - we're searching for mynum
02:35 - within the search array function we will
02:37 - iterate from the beginning of the array
02:39 - to the end and see if there's any
02:40 - matches we can do that with a for loop
02:45 - we'll begin at zero into i equals zero
02:49 - that's our index
02:51 - i will continue this as long as i is
02:53 - less than the size of the array that
02:56 - we're passing in as an argument
02:58 - then increment our index by one
03:01 - this would be technically a linear
03:03 - search we'll start at the beginning
03:06 - and check every value until we reach the
03:08 - end
03:10 - so let's check using an if statement
03:12 - within the for loop
03:13 - if
03:14 - our array we did name this array numbers
03:16 - but remember that you can rename
03:18 - parameters
03:19 - numbers is technically our array
03:22 - if our array that we receive
03:25 - at index of i
03:27 - that's our counter
03:29 - is equal to the element that we're
03:31 - searching for
03:33 - we will return whatever the index is i
03:37 - if we search through this entire array
03:39 - and don't find that element that we're
03:40 - searching for
03:42 - we'll return negative one in programming
03:45 - negative 1 serves as a sentinel value if
03:48 - you see negative 1 that typically means
03:50 - that something wasn't found we'll return
03:52 - either i or negative 1
03:54 - then assign it to this index variable
03:56 - within the main function
03:58 - using an if statement we'll check to see
04:00 - what that value is
04:03 - if
04:04 - our index does not equal negative 1
04:08 - that means the element that we're
04:10 - searching for is somewhere within our
04:11 - array
04:13 - let's display the index standard output
04:18 - my num
04:21 - is at
04:23 - index
04:26 - whatever the index variable is
04:31 - else
04:34 - standard output
04:37 - my num
04:40 - is not in the
04:43 - array
04:46 - okay let's see if this actually works
04:48 - enter element to search for let's search
04:51 - for one
04:53 - one is that index zero remember that
04:55 - computers always start with zero
04:58 - enter an element to search for
05:00 - let's search for ten
05:02 - ten is at index nine
05:04 - enter an element to search for four
05:06 - twenty sixty nine
05:08 - four twenty sixty 69 is not in the array
05:12 - for additional practice let's search
05:14 - through an array of strings such as food
05:17 - we'll create an array of strings
05:20 - i'll rename numbers as foods then think
05:24 - of some food that you like
05:27 - pizza
05:29 - hamburger
05:32 - hot dog
05:35 - end size equals the size of foods
05:39 - divided by
05:40 - one of the elements of foods let's
05:43 - rename my num as my food that's the food
05:46 - that we're searching for
05:48 - and that will be of the string data type
05:52 - in place of cn when working with strings
05:54 - let's use getline because the user input
05:57 - may contain spaces
05:58 - standard
06:00 - getline
06:03 - standard
06:05 - input
06:07 - my food
06:09 - within the search array function that we
06:11 - created we will pass our array foods
06:15 - the size can stay the same
06:17 - then pass in my food that's what we're
06:19 - searching for
06:20 - within the if else statements replace my
06:23 - num with my food
06:27 - then we'll need to change the data types
06:29 - of this function
06:30 - we're accepting an array of strings
06:33 - replace int with string
06:35 - do that with your element as well
06:38 - then we need to change the function
06:39 - declaration at the top of our program
06:43 - okay we can now search through an array
06:45 - of strings
06:47 - enter element to search for let's search
06:48 - for pizza pizza is at index zero
06:52 - hamburger hamburger is that index one
06:57 - hot dog
06:59 - hot dog is that index two then let's
07:02 - search for something that's not within
07:04 - this array
07:07 - what about sushi
07:09 - sushi is not in the array
07:11 - yeah everybody that is how to search
07:13 - through an array this would technically
07:16 - be a linear search
07:17 - you begin at the first element of an
07:19 - array check to see if the values are
07:21 - equal if they're not equal you move to
07:23 - the next element until you reach the end
07:25 - and that's basically it if you would
07:27 - like a copy of this code i'll post this
07:29 - in the comment section down below and
07:31 - well yeah that's how to search through
07:33 - an array in c plus