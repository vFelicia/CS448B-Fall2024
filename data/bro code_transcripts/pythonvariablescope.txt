00:00 - hey what's going on people it's your bro
00:01 - hope you're doing well and in this video
00:03 - i'm going to show you how
00:04 - variable scope works in python so sit
00:07 - back
00:07 - relax and enjoy the show
00:11 - if you wouldn't mind please like comment
00:14 - and subscribe
00:15 - one like equals one prayer for the
00:17 - youtube algorithm
00:19 - all right let's do a thing people let's
00:21 - discuss the scope of a variable
00:23 - now the scope of a variable is the
00:25 - region that a variable is recognized
00:28 - a variable is only available from inside
00:31 - the region
00:32 - that it is created let's say that we
00:33 - have a function and i just gave this
00:35 - function a name of display name
00:37 - i created a variable inside of this
00:39 - function named name
00:41 - and you can assign this a value of
00:43 - whatever your name is
00:44 - preferably a last name for this example
00:46 - and what i'll do is just print
00:48 - whatever my name is so this variable is
00:51 - known to have
00:52 - a local scope because it's declared
00:54 - inside of a function
00:56 - and a variable is only recognized inside
00:59 - of the region
01:00 - that it is created this variable of name
01:03 - since it's created inside of this
01:05 - function
01:05 - it is known as a local variable that has
01:08 - a local scope it's only available inside
01:12 - of this function
01:13 - that it's created now let's attempt to
01:15 - access this variable from
01:16 - outside of our function so i'm going to
01:19 - print my
01:20 - name variable but we'll have an issue
01:22 - though
01:23 - so name name is not defined so
01:26 - local variables are declared inside of a
01:29 - function
01:30 - and they have a local scope they are
01:32 - only
01:33 - available inside of this function in
01:34 - which they're created
01:36 - on the other hand a global variable is a
01:39 - variable that
01:40 - is declared outside of any function but
01:42 - within your module that you're working
01:44 - with
01:44 - a global variable is known to have a
01:47 - global scope
01:48 - they are available inside and outside of
01:50 - any functions
01:51 - now if i was to print my name variable
01:54 - this is going to print
01:56 - bro or whatever your first name is and
01:58 - it is entirely possible to have both a
02:00 - global and local version of the same
02:02 - named variable
02:04 - so we have both a global version of name
02:06 - as well as a local
02:08 - version of name if i was to print my
02:10 - name variable from outside of this
02:12 - function
02:13 - it's going to print my global version
02:15 - however if i print
02:17 - my version of name inside of that
02:19 - function in which it's created
02:21 - we're going to first use the local
02:23 - version before
02:24 - the global version of name and let's try
02:26 - that
02:27 - so i'm going to call my display name
02:30 - function and this will print my
02:34 - last name code and then my first name of
02:36 - bro
02:37 - so it is possible to have a global and
02:40 - local version of the same
02:41 - named variable now if i was to remove
02:44 - this line where we declare a local
02:46 - version of name
02:47 - well then the next best available name
02:50 - to us would be
02:51 - the global version of name so if you use
02:53 - a variable inside of a function
02:55 - you'll first use a local version of that
02:58 - variable
02:59 - if it's available if not you'll use a
03:01 - global version instead
03:03 - and python will follow this rule known
03:05 - as the legb rule
03:07 - you use any local variables first then
03:10 - enclosed variables
03:11 - then global and then any built-in
03:13 - variables in that order
03:15 - so that's the main difference between
03:17 - local scope and
03:18 - global scope the scope of a variable is
03:21 - the region in which it's available
03:23 - and it's limited to the region in which
03:25 - it's created a local scope
03:27 - is available only inside of the function
03:29 - in which that variable is created
03:31 - a global scoped variable is a variable
03:34 - that is available
03:35 - inside and outside of any functions but
03:37 - within your module that you're working
03:39 - with
03:40 - so that's variable scope in python if
03:42 - you would like a copy of this code i
03:44 - will post this code to the comment
03:45 - section down below
03:46 - and well yeah that's how variable scope
03:49 - works in python