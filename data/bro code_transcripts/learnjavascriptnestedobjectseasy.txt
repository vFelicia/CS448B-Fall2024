00:00 - so uh yeah we're doing a thing today
00:02 - today I got to explain nested objects in
00:04 - JavaScript nested objects are objects
00:07 - inside of other objects they allow you
00:09 - to represent more complex data
00:11 - structures a child object is enclosed by
00:15 - a parent object by using nested objects
00:17 - we have the capability of creating some
00:19 - very complex data structures for example
00:22 - a person object could contain an address
00:25 - object as well as a contact info object
00:28 - or a shopping cart object each item in
00:30 - your shopping cart is an individual
00:32 - object such as a keyboard a mouse or a
00:34 - monitor each of these child objects
00:37 - would have their own properties and
00:38 - methods for example a price a name
00:41 - specifications on the item a shipping
00:44 - method nested objects are just objects
00:46 - inside of other objects let me give you
00:48 - a basic example we'll create a person
00:51 - object const person equals an object we
00:55 - need a set of curly braces a person
00:57 - might have a full name property
01:00 - I will set that to be SpongeBob in this
01:02 - example SpongeBob
01:06 - SquarePants and age of
01:09 - 30 is SpongeBob a student is student
01:14 - he's in boating school so let's say
01:15 - that's true objects can also contain
01:18 - arrays we'll create an array of
01:20 - hobbies to declare an array you need to
01:23 - set a straight brackets what sorts of
01:25 - hobbies does SpongeBob have he knows
01:28 - karate he does
01:32 - jellyfishing I need one more uh let's
01:35 - say that he enjoys
01:38 - cooking now we're going to create a
01:40 - nested object this person object will
01:43 - have an address
01:45 - object so we need a set of curly braces
01:49 - a few of the properties of the inner
01:51 - address object could be a street
01:54 - SpongeBob has an address of 124 con
01:58 - Street
02:00 - his City will be bikini
02:04 - bottom and a country we won't do a full
02:07 - address but I think this is good enough
02:09 - for this example so SpongeBob lives in
02:11 - the ocean let's say that his country is
02:13 - international waters I'll just
02:16 - abbreviate International our person
02:18 - object has a nested address object
02:21 - inside of it taxes some of these
02:23 - properties of our person
02:24 - object we would type the name of the
02:27 - object use the property accessor which
02:29 - is dot then the name of the property
02:32 - full name SpongeBob
02:35 - SquarePants let's print his
02:39 - age
02:41 - 30 is SpongeBob a student that is true
02:45 - I'm going to display the array of
02:48 - hobbies person. Hobbies this will give
02:51 - you an array but if you need individual
02:54 - elements you have to list an index
02:56 - number so Hobbies at index zero would be
02:58 - karate
03:00 - one is
03:01 - jellyfishing index two is cooking let's
03:06 - console.log our person
03:09 - object dot the address
03:13 - object this would return an entire
03:15 - object if you need one of the properties
03:18 - within this object that's within the
03:20 - person object you would have to follow
03:22 - the inner object with the property
03:24 - accessor again that dot person. address.
03:28 - Street which would give you 124 con
03:33 - Street the city person. address. city
03:36 - Bikini
03:37 - Bottom person. address. country
03:41 - international waters so when accessing a
03:44 - property within a nested object you have
03:46 - to use the property accessor twice that
03:49 - dot if you would like to Loop through
03:51 - the properties of a nested object you
03:53 - can write a for Loop like
03:56 - this
03:57 - for const
04:00 - property in person.
04:05 - address
04:08 - console.log take our person object
04:11 - access the nested object address then
04:14 - use the index of operator the straight
04:17 - brackets give me the current
04:21 - property and there we are all right
04:24 - let's make something a little more
04:25 - complicated we're going to create a
04:27 - class that utilizes objects so we will
04:31 - begin with
04:32 - class
04:35 - address our class will have a
04:39 - Constructor for an address we need these
04:42 - three things feel free to add more if
04:44 - you would like a street City and
04:51 - Country then we'll assign these
04:53 - properties this. Street equals
04:56 - Street this. City equals
05:01 - City this. Country equals
05:06 - country now we'll create a person
05:09 - class class
05:12 - person our person class will also have a
05:18 - Constructor we'll need a name age and an
05:22 - address for the address I'm going to use
05:25 - rest
05:26 - parameters we can pass in different
05:28 - parts of an ADD address and store it
05:30 - within an array when we create a person
05:32 - object we will assign this.name equals
05:36 - name this. AG equals age now for the
05:40 - address we're going to construct an
05:42 - address
05:43 - object this. address equals a new
05:48 - address we're going to call the
05:50 - Constructor of our address class and
05:53 - pass in our
05:54 - address I'm going to utilize the spread
05:57 - operator to spread our address
06:01 - we'll send our address object a street
06:04 - City and
06:05 - Country all right let's construct some
06:07 - of these person
06:08 - objects const person one equals a new
06:13 - person this will call the Constructor
06:15 - but we have to pass in arguments to
06:17 - match the
06:18 - parameters a name we'll just do a first
06:20 - name to keep it short and age SpongeBob
06:23 - will be 30 we also need an address a
06:27 - street City and Country
06:32 - 124 con
06:34 - Street City will be Bikini
06:38 - Bottom his country will be international
06:44 - waters and just for readability I'm
06:46 - going to put the address on a new
06:51 - line let's create person
06:56 - two person two will be Patrick
07:00 - Patrick age
07:03 - 37 Patrick will live on 128 con Street
07:08 - you'll have the same city and the same
07:10 - country then let's make person
07:16 - three person three will be
07:20 - Squidward age
07:23 - 45 Squidward will live on 126 con Street
07:31 - all right let's see if this all
07:33 - worked
07:35 - console.log let's start with person one
07:38 - person one. name which is
07:41 - SpongeBob age 30 let's get his
07:44 - address address and this returns an
07:47 - object which is good that's what we
07:49 - wanted we have a nested object an
07:51 - address object for some of the
07:53 - properties within that address object we
07:55 - have a street City and Country we use
07:58 - the property accessor again
07:59 - of dot give me the street 124 con Street
08:05 - the city bikini bottom and the
08:08 - country international waters all right
08:11 - let's confirm this with person three
08:13 - just to be sure it all works person
08:15 - three give me the name
08:19 - Squidward age
08:22 - 45 address gives me an object we'll use
08:25 - the property accessor again give me the
08:28 - street
08:30 - 126 con Street the city bikini
08:34 - bottom and the country international
08:37 - waters this will also all work for
08:40 - person two if it worked with person one
08:42 - and three all right everybody so those
08:44 - are nested objects they're objects
08:46 - inside of other objects they allow you
08:48 - to represent more complex data
08:51 - structures a child object is enclosed by
08:54 - a parent object in this example our
08:57 - address is the child object of the
09:00 - person object we're creating a new
09:02 - object within our person object and well
09:06 - everybody those are nested objects in
09:12 - JavaScript