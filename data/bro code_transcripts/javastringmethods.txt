00:00 - hey what's going on everybody it's your
00:01 - bro hope you're doing well and in this
00:03 - video i'm going to teach you guys about
00:04 - a few useful methods of the string class
00:06 - so
00:07 - sit back relax and enjoy the show
00:11 - make sure you like comment and subscribe
00:15 - one like equals one prayer for the
00:17 - youtube algorithm
00:19 - hey welcome back my good people in this
00:21 - video i'm going to explain a few useful
00:23 - methods of the string class
00:25 - now as you know a string is a reference
00:27 - data type that can be used to store
00:29 - one or more characters and reference
00:31 - data types have access
00:33 - to some fairly useful methods let's
00:35 - begin by creating a string
00:37 - variable called name string name equals
00:40 - and let's assign this a value of
00:41 - whatever
00:42 - your name is so let's type our name
00:44 - variable
00:45 - dot and here are all the methods that we
00:47 - have access to
00:48 - i'll describe and explain a few of the
00:50 - more useful methods that you might be
00:52 - interested in
00:52 - at this level so let's begin with the
00:55 - equals method
00:56 - this will compare two strings to see if
00:58 - they are equal
00:59 - so within the equals method let's type
01:01 - another string i'm just going to copy
01:03 - what i have for my name to make this
01:05 - easy this will return a boolean
01:07 - value and we can do something with that
01:08 - boolean value such as use it for an if
01:11 - statement or
01:12 - anything else so i'm going to store the
01:14 - result within a boolean value
01:16 - let's call this result boolean result
01:20 - equals
01:20 - name dot equals and then type in a
01:23 - string
01:24 - and let's display what the result is
01:27 - so our equals method is going to compare
01:30 - my two strings
01:31 - my name variable and whatever string is
01:33 - within here
01:34 - and this will return true however it is
01:37 - case sensitive though if i made the b in
01:39 - my name
01:40 - lower case this will now return false
01:43 - but i could instead use the equals
01:45 - ignore case method
01:50 - and now both of these strings according
01:52 - to my equals ignore case
01:54 - method is now true next on my list is
01:56 - the
01:57 - length method and just to keep things
01:59 - simple i'm going to turn
02:00 - this line into a comment and i am going
02:03 - to create a new variable
02:05 - so the length method is going to return
02:07 - an integer based on the length of a
02:09 - string
02:10 - int result equals
02:13 - name dot length
02:19 - and this will return a value of
02:22 - three because we have three letters in
02:24 - my name but your name might be different
02:27 - we also have the char at method this
02:29 - will return a single character
02:32 - char result equals name
02:35 - dot char at and we list an index
02:39 - if we would like to access the first
02:42 - character in our string
02:44 - that would be index zero and the second
02:46 - position
02:47 - would be one the third position would be
02:49 - two then you just continue on in that
02:51 - pattern
02:52 - so the character at index zero of my
02:54 - name
02:55 - is capital b
03:00 - then we have index of this will return
03:04 - an integer int result equals
03:08 - name dot index of this will find
03:12 - a character and return the index of
03:14 - where
03:15 - the method finds that character so let's
03:18 - say i would like to find an index
03:20 - of capital b so this will return the
03:23 - position
03:24 - and we have a capital b at index zero
03:28 - if this was oh lowercase o that is at
03:31 - index
03:32 - two we can also check to see if a string
03:37 - is empty this will return a boolean
03:39 - value
03:41 - boolean result equals
03:44 - name dot is empty
03:49 - so currently my name is not empty and
03:52 - this will return
03:53 - false now if i got rid of my name and we
03:56 - just have an empty
03:58 - set of quotes here this will return true
04:01 - because my name variable
04:03 - is now empty so let me reverse that and
04:05 - move on to the next method
04:08 - we also have the two uppercase method we
04:10 - can change
04:11 - all of the letters in a string all to
04:13 - uppercase
04:14 - so this will return a string string
04:18 - result equals name dot to
04:21 - uppercase
04:26 - now my name is all uppercase and there
04:29 - is also to a lowercase
04:31 - actually i'm just going to copy most of
04:33 - this paste it
04:34 - and change upper to lower
04:38 - this will change all of the characters
04:40 - in my name all to lowercase
04:42 - and now the b in my name is now
04:45 - lowercase
04:48 - we can also trim some empty space before
04:52 - and after the string string result
04:56 - equals name dot trim
05:00 - so this will remove all of this empty
05:02 - space that i just added
05:05 - the trim method will remove all of this
05:07 - empty space before
05:08 - and after my characters that i have and
05:11 - the last method i have to show you guys
05:13 - is the replace method this will return a
05:15 - string
05:17 - and we can replace a character with
05:19 - another within a string
05:21 - name dot replace and there are two
05:24 - values we need to place
05:25 - within the replace method an old
05:28 - character and a new character that we
05:30 - want to replace the old character with
05:32 - let's say we would like to replace all
05:35 - os
05:36 - with is
05:39 - so this will replace the o in my name
05:42 - with a
05:42 - and now my name is bra well guys and
05:45 - gals that is a few of the more useful
05:48 - string methods but not all of the
05:49 - methods entirely available to you if you
05:52 - type in a string variable type
05:54 - dot at least with the clips this will
05:56 - prompt an entire list
05:57 - and you can always read through some of
05:59 - the descriptions to see what some of
06:00 - these methods will do
06:02 - so those are a few of the more useful
06:04 - string methods
06:05 - if you would like a copy of all this
06:06 - code i will post all of this in the
06:08 - comments down below
06:09 - don't be afraid to help me out and smash
06:12 - that like button drop a comment down
06:13 - below
06:14 - and subscribe if you'd like to become a
06:16 - fellow bro