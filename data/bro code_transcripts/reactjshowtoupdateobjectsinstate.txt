00:00 - hey everybody so in today's video I'm
00:01 - going to show you how we can update the
00:03 - state of objects be sure that you're
00:05 - importing the UST State Hook from react
00:08 - so we'll Begin by creating a constant
00:11 - use AR to structuring our object will be
00:14 - a state variable of car then we need a
00:16 - Setter variable for this car set car
00:20 - equals the use State hook you can set
00:24 - the initial state with you state so what
00:26 - we're going to do in this lesson is
00:28 - create a JavaScript object we're going
00:30 - to create your favorite car with three
00:32 - properties a
00:35 - year a make who manufactured the car and
00:38 - a model so pick a carard that you like I
00:42 - like a
00:45 - 2024
00:47 - Ford
00:49 - Mustang if you would like although not
00:52 - necessary you can put each of these
00:53 - properties on a new line for
00:56 - readability personally I find that
00:58 - easier to read so so car is going to be
01:01 - an object with these three properties
01:04 - but later on we're going to update these
01:06 - properties with a few text boxes within
01:09 - our return statement we will create a
01:11 - development to wrap
01:13 - everything I will create a paragraph
01:16 - with some text your favorite car is so
01:21 - we have that text currently We'll add
01:24 - our cars year followed by The Cars make
01:30 - then the cars
01:34 - model so for me my paragraph States your
01:38 - favorite car is a 2024 Ford Mustang
01:43 - after our paragraph element we're going
01:44 - to create three input elements one for
01:47 - year make and model so let's do that I
01:51 - will create an input
01:53 - element the type of this input element
01:56 - will be number for the year so we should
01:59 - should have some arrows on this input
02:01 - element to increment or decrement I will
02:04 - set the initial value to equal the year
02:09 - of our car car
02:12 - doe I'll add a break
02:17 - afterwards let's copy this input element
02:20 - paste it twice the second input element
02:23 - is going to have a type of text for a
02:26 - string the initial value will be the
02:29 - make of our car in my case Ford the
02:33 - third input element will have type text
02:36 - the value will be model I have a 2024
02:40 - Ford Mustang when I interact with these
02:42 - input elements I would like to change
02:45 - the property of my object we'll need to
02:47 - use the onchange event handler the
02:50 - onchange event handler is going to
02:51 - accept a call back to some
02:54 - functions function handle year change
02:59 - there will be be one parameter an
03:01 - event the event object is going to be
03:04 - provided to us through the onchange
03:06 - event handler when we add that in in a
03:09 - moment let's copy this function we'll
03:11 - fill it in
03:13 - later then we will have a function to
03:15 - handle make
03:17 - change then handle model
03:20 - change we have our three functions to
03:23 - change the year the make and the model
03:25 - properties of our object with our input
03:27 - elements we will set the on change event
03:31 - handler equal to a call back a call back
03:34 - to handle year
03:36 - change so let's set the onchange of an
03:38 - Handler to the other two input
03:41 - elements onchange handle make
03:44 - change on
03:47 - change handle model
03:50 - change the last thing we got to do is
03:53 - finish filling in our functions we'll
03:55 - begin with handle year change if I want
03:57 - to change the state of my car object I
04:00 - will use the setter function that's
04:02 - provided to us with use
04:04 - State set car set a
04:07 - parentheses we will be using an updator
04:09 - function but there's something I want to
04:11 - explain first we're going to set our car
04:13 - to be a JavaScript object if I were to
04:16 - take the year and set it equal to
04:19 - 2025 this is what happens if I interact
04:22 - with this input element let's say I
04:24 - decrease this input element well the
04:27 - value changes to 2025 that worked but
04:30 - the make and the model of our car
04:32 - disappeared these properties no longer
04:34 - exist what we've ended up doing is
04:36 - replacing the initial object that has
04:39 - these three properties with a new object
04:42 - that has this one property of year we
04:45 - need some way to retain the make and
04:47 - model of our car the previous properties
04:49 - that we not updating that's why we're
04:51 - going to precede this property to be
04:53 - changed with the spread operator of our
04:55 - car when we update the state of our car
04:59 - we're going going to be creating a new
05:00 - object spread all of the current
05:02 - properties of our car and add a year
05:06 - after using the spread operator it's
05:07 - going to look like
05:14 - this we'll have a year make model and
05:17 - year again if you have an object with
05:20 - two properties with the same name you'll
05:22 - end up using the later one and
05:23 - disregarding the first JavaScript
05:25 - doesn't allow for duplicate Keys that's
05:28 - why we're going to be using the operator
05:30 - on our car object then updating the year
05:33 - that should allow us to retain the
05:34 - previous properties if I were to
05:37 - interact with the year we'll retain the
05:39 - previous properties they won't change
05:42 - currently the setter is only set to
05:44 - change the year to 20125 we're going to
05:47 - access the event object provided to us
05:49 - from the onchange event handler behind
05:50 - the scenes I will change the year to be
05:54 - access our event object access its
05:56 - Target access its value
06:00 - when I interact with this input element
06:02 - the year property is going to change
06:04 - accordingly but a better practice with
06:06 - use state would be to use an updater
06:09 - function which we learned about in the
06:10 - last video we don't want to modify the
06:13 - current state of car but rather make a
06:15 - reference to the previous state this
06:17 - allows for safe updates we're going to
06:19 - turn this object to be part of an arrow
06:21 - function so let's create our Arrow
06:23 - function we will take our car Arrow do
06:27 - this so with an AR function if you have
06:30 - a set of curly braces after the arrow
06:32 - function JavaScript thinks you're trying
06:34 - to write a multi-line statement but
06:37 - that's not the case we're trying to
06:38 - create a JavaScript object what you
06:40 - could do is surround your set of curly
06:42 - braces with a set of
06:43 - parenthesis that will allow you to
06:45 - create an object within an arrow
06:47 - function since we're working with the
06:50 - previous state of car and not the
06:51 - current state we would want to name this
06:53 - to something else one common naming
06:55 - convention is to take the first letter
06:57 - of the state variable and use that to
06:59 - indicate that this is the previous state
07:02 - so c will be our parameter we will use
07:05 - the spread operator on the previous
07:07 - state of car represented as
07:09 - C and that should work this allows for
07:13 - safe updates especially if you're
07:15 - updating the state of your car more than
07:17 - one time within a function see my video
07:19 - on updator functions if you'd like to
07:20 - learn more about that all right then we
07:23 - have to handle make change we will use
07:26 - our setter set car we're going to to be
07:29 - replacing the initial object with a new
07:31 - object we will use the spread operator
07:34 - on our
07:35 - car access the make set it equal to
07:40 - access our event parameter that's
07:41 - provided to us access its Target access
07:45 - its value we'll upgrade the statement so
07:48 - that it's an updator function let's take
07:50 - our car Arrow do
07:54 - this then we will rename car assc to
07:58 - indicate that we're working with the
07:59 - previous state of car not the current
08:02 - state I can change my year and I can
08:05 - change the
08:07 - make and that should
08:09 - update we have one last function to work
08:11 - with handle model change again set
08:16 - car we're creating a JavaScript object
08:19 - use the spread operator on our car to
08:21 - spread the properties so we don't lose
08:23 - them update the model with our access
08:27 - our event access its Target access its
08:31 - value then we'll change this to be an
08:32 - updator function we have parameter of
08:35 - car Arrow do this since we're creating a
08:39 - JavaScript object within an arrow
08:40 - function we need to surround it with a
08:42 - set of
08:43 - parentheses and then rename car as C to
08:47 - indicate we're working with the previous
08:49 - state and that should work I will change
08:52 - the
08:53 - year the
08:55 - make and the
08:58 - model
09:00 - all right everybody so that is how we
09:02 - can update the state of an object using
09:08 - react