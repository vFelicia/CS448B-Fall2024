00:00 - hey what's going on everybody in today's
00:01 - video I'm going to discuss objects in
00:03 - JavaScript an object is a collection of
00:06 - related properties and or methods
00:09 - properties are things that an object has
00:12 - such as a first name or an age a method
00:15 - is a function that belongs to an object
00:18 - for example I have a person object our
00:20 - person can say hello and they can say by
00:23 - methods are just functions that belong
00:25 - to an object what can this object do
00:28 - objects can represent Real World objects
00:31 - such as people products or places in
00:33 - this example we'll be creating some
00:35 - people objects people from the show
00:37 - SpongeBob we'll start from scratch
00:40 - though we'll create a person object I'll
00:42 - use a constant although it's not
00:44 - necessary const person equals then add a
00:49 - set of curly
00:50 - braces we'll start with any properties
00:53 - you can add as many properties as you
00:54 - would like they're in key value pairs
00:57 - this person will have a first name key
00:59 - key colon then some value this person's
01:03 - first name will be SpongeBob separate
01:06 - each key value pair with a comma let's
01:09 - include a last name property last name
01:12 - colon space will be Square Pants add a
01:16 - comma when you're done with this key
01:17 - value pair We'll add an age property of
01:21 - 30 age has a different data type it's a
01:24 - number the first two in my example were
01:26 - both strings SpongeBob and Square Pants
01:30 - let's add a Boolean is
01:33 - employed colon space I will set that to
01:36 - be true he has a job at the K crusty
01:38 - crab okay that's good enough for now I
01:41 - would like to access these properties
01:43 - let's
01:44 - console. log if I need one of these
01:47 - properties take the object you're
01:49 - referring to in this case person dot the
01:52 - name of the property let's do first name
01:55 - person. first name property that would
01:58 - give me SpongeBob let's do this with
02:00 - last name take the object name dot the
02:03 - name of the
02:04 - property person. last name is
02:08 - SquarePants let's do this with age
02:11 - person. AG is
02:14 - 30 person do is
02:17 - employed is set to true all right let's
02:20 - create another object we'll create an
02:22 - object for
02:24 - Patrick const person now objects can't
02:28 - have the same name objects need
02:30 - different names for example I can't have
02:32 - two person objects they can't have the
02:35 - same name syntax error identifier person
02:37 - has already been declared I will rename
02:40 - our first person as person one our
02:43 - second person will be person two then
02:46 - any place in which I'm referencing
02:47 - person will now need to be person
02:51 - one let's reuse these same key value
02:54 - pairs person two's first name will be
02:58 - Patrick his last last name will be star
03:02 - Patrick will be I don't know how old he
03:04 - is according to the TV series let's say
03:06 - he's
03:07 - 42 is Patrick employed no he just
03:11 - watches TV all day now I would like to
03:14 - access person 2's
03:16 - properties okay well
03:18 - console.log person 2's first name Person
03:22 - 2's last name Person two is age person
03:25 - two is
03:27 - employed okay for person two we have
03:29 - Patrick
03:30 - star 42
03:32 - false so those are properties of an
03:35 - object they key value pairs add as many
03:38 - as you would like in this example these
03:40 - properties mimic real world attributes
03:42 - that a person might have like a first
03:44 - name last name age whatever you can
03:47 - think of but not only that objects can
03:49 - have dedicated functions that we refer
03:51 - to as methods what sorts of actions can
03:54 - these objects perform for example a
03:56 - person could eat they could drink they
03:59 - could sleep what sorts of things do
04:01 - people do so just to keep this simple I
04:03 - am going to create a function to say
04:06 - hello we'll start with person
04:08 - one say
04:11 - hello colon space this will be a
04:14 - function
04:15 - expression what are we going to do when
04:19 - we invoke this function let's
04:23 - console.log what would SpongeBob say if
04:25 - he's greeting somebody hi I'm
04:28 - SpongeBob
04:31 - be sure you're not including a semicolon
04:33 - at the end that should work let's test
04:37 - it I'm going to have person one invoke
04:42 - their say hello
04:44 - method hi I'm SpongeBob let's add a say
04:48 - hello method to Patrick person
04:52 - two we'll change the output of say hello
04:55 - what would Patrick
04:56 - say
04:58 - hey
05:01 - I'm Patrick dot dot dot now we'll have
05:04 - person two use their say hello method
05:07 - hey I'm Patrick you can add as many
05:10 - methods as you would like so with these
05:12 - functions we're using a function
05:14 - expression if you prefer you could even
05:16 - use an arrow
05:17 - function list your
05:19 - arguments Arrow then the code you would
05:22 - like to
05:23 - perform this would work
05:25 - too let's add an eat method eat
05:31 - function we'll use a function expression
05:33 - for
05:35 - SpongeBob let's
05:38 - console.log what is SpongeBob eating I
05:42 - am eating a crabby
05:45 - patty we'll include a neat function for
05:48 - Patrick as
05:49 - well what's Patrick going to eat Patrick
05:52 - is
05:53 - eating I am
05:56 - eating roast beef chicken
06:00 - and
06:01 - pizza and if you would like you can use
06:03 - an arrow function for this
06:05 - example list your parameters Arrow then
06:09 - the code you would like to
06:11 - perform it's not necessary but I do like
06:14 - Arrow functions person one SpongeBob
06:17 - will use his eat method same thing goes
06:20 - with Patrick person two so SpongeBob is
06:23 - eating a crabby patty Patrick is eating
06:26 - roast beef chicken and Pizza all right
06:29 - everybody so JavaScript objects are a
06:32 - collection of related properties and or
06:35 - methods properties are what an object
06:37 - has methods are functions that an object
06:40 - can perform they can represent Real
06:43 - World objects such as people products or
06:46 - places properties are key value pairs
06:49 - methods are functions that belong to an
06:51 - object and well everybody that is an
06:53 - introduction to object-oriented
06:55 - programming in
06:58 - JavaScript