00:00 - hey so we got to talk about this this is
00:02 - a keyword it's a reference to the object
00:05 - where this is used the object depends on
00:08 - the immediate context if we had a person
00:11 - object and we're accessing their name
00:13 - property we could replace person with
00:16 - this as long as we're within the context
00:18 - of that person object we'll create an
00:21 - object const person
00:24 - one let's add a property for name the
00:28 - name will be SpongeBob
00:31 - and a favorite food property fave food
00:35 - SpongeBob likes hamburgers more
00:38 - specifically crabby
00:39 - patties I will give SpongeBob a say
00:42 - hello method this will be a
00:46 - function all we're going to do is
00:49 - console.log I'll use a template
00:52 - string hi I am I'll use a placeholder
00:57 - let's attempt to use person one's name
01:00 - let's see what
01:02 - happens let's take our object of person
01:05 - one I will invoke their say hello method
01:09 - let's see what happens hello I am and
01:13 - there's nothing here for the name inside
01:15 - of this object of person one if I would
01:18 - like to access one of these properties
01:20 - I'm going to precede the property with
01:23 - this this dot the name of the property
01:27 - and that should work hi I'm SpongeBob
01:30 - we're using this within the context of
01:33 - person one it would be like us saying
01:36 - person one. name there would be no
01:39 - difference this is a reference to the
01:41 - object we within if I said this do
01:45 - favorite food well fave food for short
01:48 - hi I am
01:49 - hamburgers it would be like us saying
01:52 - person onef food let's add another
01:56 - method I will add an eat
01:58 - method
02:03 - let's
02:05 - console.log I'll use another template
02:08 - string add a
02:10 - placeholder
02:13 - this.name is eating add another
02:17 - placeholder this. fave
02:21 - food let's have person one use their eat
02:25 - method SpongeBob is eating hamburgers
02:29 - the cool thing about the this keyword is
02:31 - that if we create a new object with
02:33 - these same methods we'll use the second
02:35 - object's properties let's copy person
02:39 - one paste change person one to person
02:42 - two the name for person two will be
02:45 - Patrick favorite food will be
02:48 - Pizza let's have person two use their
02:52 - eat
02:53 - method SpongeBob is eating hamburgers
02:56 - Patrick is eating pizza since we're in
02:58 - the context of person 2 now imagine
03:01 - we're replacing this with person
03:04 - two person 2.n name Person 2. fave
03:08 - food if you were to use this outside of
03:11 - any objects I'm going to console.log
03:16 - this what we're returned with is a
03:18 - window object basically we're returning
03:21 - the window to see our website
03:24 - technically we're inside of an object
03:26 - already our window object and we have
03:29 - all of these
03:31 - properties but since we're using the
03:33 - this keyword inside the context of
03:35 - person one and person two we'll instead
03:37 - make a reference to those objects hey
03:40 - one thing I forgot to mention the this
03:42 - keyword doesn't work with arrow
03:44 - functions for example with person two
03:47 - let's convert this to an arrow
03:54 - function blank is eating undefined when
03:57 - you use this within an arrow function
04:00 - it's making a reference to that window
04:01 - object still our window object does have
04:04 - a name that's why it's appearing empty
04:06 - but fave food is undefined because our
04:08 - window object doesn't have a favorite
04:10 - food property all right everybody so
04:12 - that is the this keyword we will be
04:14 - using this keyword a lot all it is is a
04:17 - reference a reference to the object
04:19 - where this is used and that is the this
04:22 - keyword in
04:25 - JavaScript