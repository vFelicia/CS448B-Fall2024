00:00 - all right what's going on everybody it's
00:02 - you bro hope you're doing well and in
00:04 - this video i'm going to help you get
00:05 - started with html so sit back relax and
00:08 - enjoy the show
00:11 - if you wouldn't mind please like comment
00:13 - and subscribe one like equals one prayer
00:16 - for the youtube algorithm
00:18 - i'm gonna tell you why you should learn
00:20 - html html is an acronym for hypertext
00:24 - markup language it's the most basic
00:27 - building block of the web it allows you
00:29 - to add change and remove website content
00:32 - and that's a good thing to know it's
00:33 - mandatory to know for web developers if
00:35 - you would like to enter that career
00:37 - field it's useful for software
00:39 - developers marketing and sales
00:41 - professionals if you need to edit a
00:42 - listing for your company business owners
00:45 - you could make your own website and
00:46 - freelancers people would pay good money
00:48 - for a good website heck you might as
00:50 - well add html to your resume can't hurt
00:52 - and learning html is super easy this
00:56 - full course is only going to be about an
00:58 - hour anybody can learn html even you yes
01:01 - whoever's watching this video learn html
01:04 - it's super easy what do you have to lose
01:06 - building a website is a lot like
01:08 - building a house first we need a solid
01:10 - foundation and we need to build a
01:12 - skeletal structure that's where html
01:14 - comes in it's the most basic building
01:16 - block of the web then after that we can
01:18 - add css css is cascading style sheets
01:22 - with css we can style color and change
01:24 - the appearance of a webpage and lastly
01:27 - there's javascript javascript adds
01:29 - functionality to a webpage so in a house
01:31 - this could be like plumbing heating and
01:34 - air conditioning and electricity so it
01:36 - adds functionality and when you combine
01:38 - these three levels you have a good
01:40 - functioning webpage but you need to
01:42 - start somewhere so that's why you're
01:43 - gonna learn html first what will you
01:45 - need you'll need a web browser use
01:47 - whatever web browser that you like just
01:49 - please do not use internet explorer and
01:52 - we'll also need a text editor to write
01:54 - html code you can use vs code sublime
01:58 - text heck you can even use notepad but i
02:00 - prefer vs code so i'll show you where to
02:02 - download that head to
02:05 - code.visualstudio.com and download the
02:08 - correct version for your operating
02:09 - system i'm running windows so i'm going
02:11 - to install the windows version then i
02:13 - will open when done
02:15 - accept the agreement
02:17 - yes i actually did read it that fast i
02:19 - would recommend creating a desktop icon
02:22 - and make sure add to path is selected
02:24 - next and install and then you might as
02:27 - well launch this bad boy so finish we
02:30 - are now within vs code the first thing i
02:32 - recommend is to download the live server
02:35 - extension so that after saving an html
02:37 - document we can immediately refresh a
02:40 - web page so underneath the search box
02:42 - for extensions we are looking for live
02:45 - server and install this version then
02:48 - after downloading the live server
02:50 - extension we will create a new folder
02:52 - under the explorer tab open folder
02:55 - wherever you want create a new folder
02:57 - i'll create this on my desktop just for
02:59 - convenience i'm going to create a new
03:02 - folder i'll name this website
03:04 - or whatever you want doesn't matter
03:06 - then select folder and within our
03:09 - website folder we're going to create a
03:10 - new file name this index.html
03:15 - whatever file you would like to be the
03:17 - home page of your website you'll want to
03:19 - name that as
03:20 - index.html when a connection is made to
03:23 - a website without a specific file in the
03:26 - url most servers by default will return
03:29 - the
03:30 - index.html file as a landing page so
03:33 - this index.html file will be the home
03:36 - page the landing page of our website at
03:38 - the top of our document we're going to
03:40 - type this within angle brackets
03:42 - exclamation point doc type html
03:46 - html documents should start with this
03:48 - declaration to be compliant with basic
03:51 - html standards it lets a visitor's web
03:54 - browser know that this is an html5
03:57 - document and following this text will
03:59 - create a pair of html tags tags are the
04:02 - keywords within angle brackets that a
04:04 - web page uses to define how your web
04:06 - browser will format and display content
04:09 - and usually these come in pairs so we'll
04:11 - need an opening html tag and a closing
04:14 - html tag all of our html code will be
04:17 - within these html tags so the html
04:20 - element represents the root of an html
04:23 - document and there's two major sections
04:25 - head and body so let's create a pair of
04:28 - head tags head represents information
04:31 - about a web page and there is also body
04:34 - as well so create a pair of body tags
04:37 - the body is what you would like to
04:39 - display to a user the head is
04:41 - information about the web page one thing
04:43 - that we can add to the head of our
04:44 - document is a title so we'll need a pair
04:48 - of title tags
04:51 - and let's create a title for our website
04:54 - my
04:55 - first website and then let's save let's
04:58 - open this document so i'm going to right
05:00 - click open with live server so the title
05:02 - of this web page is my first website and
05:05 - you may have noticed that this web
05:07 - browser was opened with edge so you can
05:10 - actually change that to a different web
05:12 - browser and here's how go to file
05:15 - preferences
05:16 - settings
05:17 - underneath extensions head to
05:20 - live server config
05:22 - custom browser and select a web browser
05:25 - of your choosing so right click open
05:27 - with live server and we are now using a
05:30 - different web browser so i'm just going
05:31 - to put my web browser and vs code side
05:34 - by side
05:36 - now let's add some text to the body of
05:39 - our webpage type whatever you want i
05:41 - like pizza
05:43 - then i'm going to save
05:45 - there we go we added some text to the
05:48 - body of our html document and we can
05:50 - also use a pair of header tags so
05:53 - surround some text with h1 this is the
05:57 - largest header tag and then make sure to
05:59 - close it afterwards okay so then we have
06:01 - h2 which is smaller
06:04 - we have h3
06:07 - h4
06:10 - h5
06:13 - and the last one is h6
06:16 - so if you need some sort of title for
06:18 - your web page you can always play some
06:20 - text within a pair of h1 header tags
06:23 - before i discuss p tags we should
06:26 - discuss what elements are elements
06:28 - embody the opening tag any content
06:30 - within and the closing tag so for
06:33 - example this is a opening title tag and
06:36 - a closing title tag and all of these
06:39 - together including any content within is
06:41 - known as the title element so that's the
06:44 - difference between tags and elements
06:46 - tags make up a portion of elements and
06:49 - with that out of the way we can move on
06:51 - to paragraph elements paragraph elements
06:54 - are made up of p tags we need an opening
06:56 - p tag and a closing piece egg and we can
06:58 - type some text within these paragraph
07:01 - tags
07:02 - this is some sample text browsers
07:06 - automatically add a blank line of before
07:09 - and after any paragraph elements also if
07:11 - you need some longer sample text there
07:14 - is a shortcut type lorem then tab
07:17 - and that will create some sample text
07:19 - for you and let's create another
07:21 - paragraph element so we need an opening
07:23 - p tag and a closing p tag i would like
07:26 - some more sample text i will type lorem
07:28 - then tab and we now have two paragraph
07:31 - elements if you need a paragraph of
07:33 - information to display with blank lines
07:36 - before and after you can always surround
07:38 - some text within a pair of p tags now
07:41 - there's also a br element and these do
07:44 - not need closing tags it's only an
07:46 - opening tag wherever you would like to
07:48 - add a line break just add a br element
07:52 - so let's say i would like to space out
07:53 - these header tags well i can add a line
07:56 - break between each of these
07:58 - if you ever need a line break just use a
08:01 - vr element and like i said there's no
08:03 - closing tag with these elements there's
08:06 - also an hr element and i do not mean
08:09 - human resources i mean horizontal rule
08:12 - if you ever need to divide your page
08:14 - section by section you can always add a
08:16 - horizontal rule let's say that we have a
08:18 - title to this webpage i'll create an h1
08:20 - header tag this is my website
08:25 - and then i'm just going to close this
08:26 - what if i would like to divide this
08:28 - webpage section by section i can always
08:30 - add a horizontal rule by using an hr
08:33 - element and there is no closing tag with
08:36 - this element you just type hr with an
08:38 - angle brackets and this will divide a
08:40 - section of your webpage and add a
08:42 - horizontal rule which looks pretty nice
08:44 - so that is the hr element and the last
08:47 - thing we're going to discuss for this
08:49 - topic is comments comments will not be
08:51 - displayed within the body of your
08:53 - document it's more or less a note for
08:56 - yourself or other developers to create a
08:58 - comment we need an angle bracket
09:00 - exclamation point then two dashes and
09:02 - this will create the ending of your
09:04 - comment which is an arrow pointing to
09:06 - the right so anything between these two
09:08 - arrows will be a comment i'll leave a
09:11 - comment for i don't know myself
09:13 - this is the best website ever
09:18 - so as you can see this will not be
09:20 - displayed within my webpage it's
09:22 - basically used as a note for yourself or
09:25 - for other people looking over this html
09:27 - document so yeah those are comments well
09:30 - everybody that is the basics of html so
09:33 - yeah if you liked this video please give
09:34 - this video a thumbs up leave a random
09:36 - comment down below and subscribe if
09:38 - you'd like to become a fellow bro
09:40 - hey what's going on everybody it's you
09:42 - bro hope you're doing well and in this
09:44 - video i'm going to show you how we can
09:45 - have some fun with hyperlinks and html
09:48 - so sit back relax and enjoy the show
09:53 - if you find this video helpful please
09:55 - remember to like comment and subscribe
09:58 - your support will help keep this channel
10:00 - running
10:01 - sup people so hyperlinks we can apply a
10:04 - hyperlink to text buttons images
10:07 - elements of that nature whatever you
10:09 - would like to turn into a hyperlink
10:11 - surround with a pair of a tags
10:14 - there's an opening a tag and a closing a
10:16 - tag and within the opening a tag there
10:19 - is an href attribute that you can set to
10:21 - a url of your choosing so if i want this
10:24 - hyperlink to take me to google then i
10:26 - will fill out the url for google
10:30 - so after saving if i click on this link
10:33 - it takes me to google easy enough right
10:35 - now there is a target attribute you can
10:38 - open a web page in a new tab or window
10:40 - by setting this to underscore blank
10:44 - so this should open in a new tab or
10:46 - window
10:47 - but the default is self
10:50 - so that this will open in the same
10:52 - window there is a title a title is a
10:55 - small pop-up box that will appear when
10:57 - you hover your cursor over this link we
10:59 - could write a message like this
11:01 - takes you to google
11:04 - and that box should appear after you
11:06 - hover your cursor over this hyperlink
11:09 - this takes you to google let's say you
11:11 - have another webpage and you would like
11:12 - this link to take you to your second
11:14 - page let's change the text
11:17 - uh go to page two i'm going to create
11:20 - another html file real quick i'll go to
11:23 - new file let's call this page two dot
11:25 - html
11:26 - if you need to generate the necessary
11:28 - body of an html document if you're using
11:30 - vs code you can type exclamation point
11:33 - and then tab
11:35 - and let's write a message
11:37 - this is page two
11:40 - if i set the href attribute equal to the
11:43 - relative file path of whatever page i
11:45 - would like to go to then this hyperlink
11:47 - will take me there so these files are
11:49 - right next to each other i only have to
11:51 - list the file name so i would like this
11:53 - hyperlink to take me to page2.htm
11:56 - so if i click on this hyperlink
11:59 - it will take me to my other html file
12:02 - this is useful if you have a navigation
12:04 - bar so depending on the link that
12:06 - somebody clicks on your navigation bar
12:07 - that can take you to a different page
12:09 - and lastly you can send an email to
12:11 - somebody within the href attribute type
12:13 - mail to colon then some email address
12:17 - let's say fake123 gmail.com
12:20 - let's say email me instead
12:23 - and then when you click on this link it
12:25 - will begin the process of sending an
12:26 - email
12:28 - but we won't actually complete it so
12:30 - yeah everybody those are hyperlinks you
12:32 - can apply hyperlinks to text buttons
12:34 - images which we'll have some practice
12:36 - with in the future so yeah those are
12:38 - hyperlinks and html
12:43 - all right people here's how to add an
12:45 - image to a web page find or download an
12:47 - image of your choosing i just so happen
12:49 - to have a picture of shrek within your
12:50 - folder containing your index.html file
12:53 - you're going to move or paste that image
12:56 - within the same folder and within the
12:57 - body element we're going to create a new
12:59 - element an image element within angle
13:01 - brackets type img for image this is a
13:05 - self-closing tag and many elements have
13:07 - different attributes that we can change
13:09 - we need to change the source attribute
13:12 - of this image element the source
13:13 - attribute is src and we will set this
13:17 - equal to within double quotes the name
13:19 - of our image mine is shrek.png and then
13:22 - save
13:23 - what i like to do if i'm working with
13:25 - the webpage that has a lot of images i
13:27 - like to create a separate folder for my
13:29 - images this isn't necessary but if your
13:32 - image is located within a separate
13:34 - folder we need to find the file path
13:36 - relative to your index.html file so i'm
13:39 - going to create a new folder and let's
13:41 - name this images it will contain all the
13:43 - images from my webpage then i will move
13:45 - my image to my images folder so we can
13:47 - no longer locate this image we need to
13:49 - find the file path relative to the
13:52 - index.html file to look within my images
13:55 - folder i will precede the image name
13:57 - with
13:58 - forward slash the name of the folder
14:00 - images slash the name of the image and
14:03 - there it is personally if i'm working
14:05 - with a lot of images i like to place all
14:07 - of my images within one folder if you
14:10 - decide to do that as well you just need
14:12 - to precede the file name with the name
14:14 - of the folder that it's in here's my
14:16 - image but it's fairly massive we can
14:18 - change the width and height attributes
14:20 - if we need to i will change the height
14:22 - attribute height equals maybe 200 and
14:26 - that's a lot smaller maybe 300 that's a
14:29 - little bit better the height and the
14:30 - width will scale proportionately with
14:32 - each other but you can change them
14:34 - individually let's change the width
14:36 - width equals
14:38 - let's say 100
14:41 - what we get is an extra skinnyshrek and
14:43 - if i change this to maybe 600 well shrek
14:47 - is extra thick now so i will just only
14:49 - change the height attribute so that the
14:52 - width attribute scales proportionately
14:54 - now if somebody is visually impaired
14:56 - they may be using a screen reader to
14:58 - navigate a web page it would be good
15:00 - practice to add some alternative text
15:02 - that is read out loud by a screen reader
15:04 - so that is the alt attribute within
15:06 - double quotes i'll type a brief
15:08 - description of this image
15:10 - this is a picture of shrek so when you
15:14 - add an image it's considered good
15:15 - practice to add some alternative text
15:18 - you can also add a title too a title
15:20 - will be a small pop-up box that appears
15:22 - when you hover your cursor over an image
15:25 - to add a title set the title attribute
15:27 - equal to some text
15:29 - uh shrek is
15:31 - shrek see
15:32 - and then i'm going to save hover my
15:34 - cursor over the image and we can see a
15:37 - small pop-up box that has my title shrek
15:40 - is shreksy we can also turn an image
15:42 - into a hyperlink to turn this image into
15:45 - a hyperlink we need to surround our
15:47 - image element with an opening and
15:49 - closing a tag
15:50 - so open and close within the opening a
15:53 - tag there is an href attribute that we
15:55 - can set to a url of our choosing i think
15:58 - i'll set this hyperlink to the wikipedia
16:00 - page for shrek so just type in the url
16:03 - between these double quotes save then if
16:06 - i were to click on my image this will
16:08 - take me to the wikipedia page for shrek
16:10 - or some other url depending on what you
16:12 - type here so yeah that's how to add an
16:14 - image to a web page within the body
16:16 - element you need to add an image element
16:19 - and then set the source equal to the
16:21 - image name if you found this video
16:22 - helpful please remember to smash that
16:24 - like button leave a random comment down
16:26 - below and subscribe if you'd like to
16:27 - become a fellow bro
16:32 - if you do need an mp3 file to work with
16:34 - for this video i recommend heading to
16:36 - the youtube audio library and then you
16:39 - can search and download a song of your
16:40 - choosing so after you find an mp3 file
16:43 - you can use a wav file too just drag and
16:46 - drop it to your folder containing your
16:48 - index.html file and then we can head to
16:51 - vs code now to add audio to our web page
16:53 - we need an audio element
16:56 - so within angle brackets audio and list
16:59 - the source equal to the name of your mp3
17:02 - or wav file we're going to need some
17:04 - controls so this is a boolean attribute
17:07 - we don't need to set the sql to anything
17:09 - it's either true or false and to set it
17:11 - equal to true you just type the name of
17:13 - the attribute so within the audio
17:15 - element type controls and up top here we
17:18 - have our controls for our mp3 file with
17:21 - these controls we can play some audio
17:22 - file of our choosing
17:25 - [Music]
17:29 - we can fast forward
17:31 - [Music]
17:37 - and we can mute here's a couple other
17:38 - boolean attributes we can have our audio
17:41 - autoplay by using the autoplay boolean
17:43 - attribute
17:47 - if you would like this to be muted
17:49 - originally type muted so this is playing
17:52 - but you can't hear it because it's muted
17:55 - if you need this to loop just type loop
17:58 - yep and it's looping you can have backup
18:01 - audio files just in case your web
18:02 - browser doesn't support a given format
18:05 - so if you would like some backup audio
18:06 - files we're going to change this around
18:08 - a little bit so let's get rid of our
18:10 - source and we'll create an audio closing
18:12 - tag
18:13 - and we will create multiple nested
18:15 - source elements
18:16 - type source
18:18 - source equals the name of one audio file
18:21 - you would like to use primarily if you
18:23 - have a backup let's say we have the same
18:26 - song as a wav file you can do that too
18:28 - if for some reason the browser using
18:30 - doesn't support these first two audio
18:32 - files you can always display a message
18:35 - this browser does not support
18:39 - html5
18:41 - audio so yeah everybody that's how to
18:43 - add audio to a web page you just have to
18:46 - use this audio element and set the
18:48 - source equal to an audio file of your
18:50 - choosing and there's a bunch of boolean
18:52 - attributes that you can add to if you
18:54 - would like some controls if you need to
18:56 - set this to autoplay if you need it
18:57 - muted and if you need it to loop so yeah
18:59 - that's how to add audio to a webpage if
19:01 - you found this video helpful please be
19:03 - sure to smash that like button leave a
19:05 - random comment down below and subscribe
19:07 - if you'd like to become a fellow bro
19:12 - all right welcome back everybody in this
19:14 - video i'm going to show you all how we
19:15 - can add a video to a web page you'll
19:18 - need a video of one of these file types
19:20 - when i was in tokyo some number of years
19:22 - ago i saw a real-life mario kart racing
19:25 - down the street so what i'm going to do
19:26 - is place this mp4 file next to my
19:29 - index.html file and then within vs code
19:32 - we need a video element
19:34 - and we will list the src attribute equal
19:37 - to the name of our file that we're
19:39 - working with
19:40 - and in my case it's racing.mp4 now this
19:42 - video is massive so let's change the
19:45 - width of this using the width attribute
19:48 - width equals what about
19:51 - 500
19:52 - that's a lot better but we'll need some
19:54 - controls to actually play this video i'm
19:56 - clicking on this and nothing's happening
19:58 - controls is a boolean attribute we only
20:00 - have to list the attribute name to add
20:02 - controls
20:04 - there we go we now have some controls
20:08 - [Music]
20:10 - now if you want this to play maybe in
20:11 - the background and you do not want
20:12 - controls you can always set this to
20:14 - autoplay
20:17 - [Music]
20:21 - so i'm going to add the controls back if
20:23 - you need this muted just add the muted
20:25 - boolean attribute
20:28 - so it's playing but we can't hear
20:29 - anything
20:30 - and if you need this to loop just add
20:32 - the loop boolean attribute and this
20:35 - should loop
20:36 - yeah there it is here's another thing
20:38 - that we can try let's get rid of our
20:39 - source attribute and we're going to
20:41 - create a video closing tag
20:45 - and we will create nested sources within
20:47 - our video element
20:51 - source src equals our video file so just
20:54 - in case your browser doesn't support an
20:56 - mp4 video file you can always create
20:59 - another source
21:01 - let's say that we have a web m file as a
21:04 - backup just in case that this browser
21:07 - doesn't support an mp4 file and if for
21:09 - some reason that no other sources work
21:11 - you can always add a note
21:13 - this browser does not support
21:17 - html5
21:18 - audio so you can write it either way but
21:20 - if you have multiple sources you can
21:22 - always have backups just in case this
21:24 - primary source doesn't work so yeah
21:26 - everybody that's how to add a video to a
21:28 - webpage if you found this video helpful
21:30 - please be sure to smash that like button
21:32 - leave a random comment down below and
21:34 - subscribe if you'd like to become a
21:35 - fellow bro
21:39 - all right welcome back everybody so in
21:41 - this video i'm going to show you all a
21:43 - few useful text formatting tags that you
21:45 - may be interested in we'll need some
21:47 - sample text to work with this is normal
21:50 - text we'll create additional lines of
21:52 - text so i'm going to surround this text
21:55 - with a pair of paragraph tags just so
21:57 - that when we add additional text they
21:59 - will be added to a new line let's copy
22:01 - this line and paste it nine additional
22:03 - times let's say
22:06 - there we go first set of text formatting
22:08 - tags that i'll show you is bold any text
22:10 - that you need to bold just surround that
22:13 - text with a pair of b tags we need an
22:16 - opening b tag and a closing beats egg
22:18 - this is normal text and you can see that
22:21 - the word normal is bold uh let's change
22:24 - that to bold just so that it's more
22:26 - descriptive of what it does
22:28 - okay so any text you need bold just
22:30 - surround with a pair of b tags the next
22:32 - set of tags is italic surround any text
22:34 - that you need italic with a pair of eye
22:37 - tags this is italic text we have big
22:42 - this is big text
22:44 - we have small
22:47 - this is small text sub for subscript
22:53 - this is subscript text superscript
22:57 - the tag name is sup like you're saying
22:59 - sup to somebody
23:01 - this is superscript text we have
23:03 - inserted inserted is just underlined
23:06 - ins for inserted
23:09 - this is inserted text
23:12 - there is deleted deleted will create a
23:15 - line through some text
23:17 - this is deleted text and there's one
23:20 - more it looks like i miscounted there's
23:22 - also marked
23:24 - so we use a pair of mark tags
23:27 - any text that is marked is highlighted
23:30 - so yeah those are a few text formatting
23:32 - tags that i thought you should know if
23:34 - you found this video helpful please be
23:35 - sure to smash that like button leave a
23:37 - random comment down below and subscribe
23:40 - if you'd like to become a fellow bro
23:44 - hey welcome back in this video i'm going
23:47 - to show you all how we can create lists
23:48 - in html there's three lists we're going
23:50 - to talk about unordered ordered and
23:53 - description lists let's begin with
23:55 - unordered lists to create an unordered
23:57 - list we need a pair of ul tags for an
24:00 - unordered list and between these ul tags
24:04 - we can create individual list items and
24:06 - we use a pair of li tags for each item
24:09 - we would like to add to our list so
24:11 - what's an example of an unordered list
24:13 - one thing that comes to mind is a
24:15 - shopping list like a grocery list
24:17 - because well i'm kind of hungry right
24:18 - now it's breakfast time let's say that
24:20 - we're going to bake a pizza and we need
24:22 - a list of ingredients we need pizza
24:24 - dough so add an item between this pair
24:27 - of li tags and we now have one bulleted
24:31 - item within our unordered list and let's
24:33 - create another item so we can just copy
24:35 - and paste this pair of li tags and
24:38 - create a new list item
24:39 - what about tomato sauce
24:42 - and then maybe cheese
24:45 - and toppings
24:46 - point being to create an unordered list
24:48 - you need a pair of ul tags and with each
24:52 - list item you would like to add to your
24:54 - unordered list you just place within a
24:56 - pair of li tags for list item an ordered
24:59 - list is very similar except we use ol
25:02 - tags so we need an opening ol tag and a
25:05 - closing ol tag so by default each list
25:08 - item is going to be numbered so let's
25:10 - say that we have a to-do list
25:13 - to add a list item we need to use a pair
25:15 - of li tags perhaps this is a schedule of
25:18 - what we have to do in the morning we
25:20 - have to eat breakfast
25:22 - that could be one list item
25:24 - so to add another item we need another
25:26 - pair of li tags
25:29 - then maybe we need to take a shower
25:32 - so each of these is numbered and they're
25:34 - in ascending order
25:36 - and then we want to what about
25:39 - leave for work okay so yeah that is an
25:42 - ordered list the order of the list items
25:44 - does matter and we can change the type
25:47 - too within the opening oil tag there is
25:49 - a type attribute we can set each list
25:52 - item to a number a letter or roman
25:54 - numerals if i would instead like letters
25:57 - i can just set the type equal to a and
25:59 - our list items are now marked with the
26:01 - letter and we have description lists we
26:03 - need a pair of dl tags for description
26:06 - lists
26:08 - and instead of using an li tag for each
26:10 - list item we use a pair of dt tags for
26:14 - description term and dd tags for
26:18 - description definition so for a term
26:21 - that is dt and then we add a definition
26:24 - to this term let's say we have a list of
26:26 - web dev languages for a term we need an
26:29 - opening dt tag and a closing dt tag
26:33 - and then we can add a definition to this
26:35 - term so that would be dd description
26:38 - definition between the opening and
26:40 - closing dd tags we can add a definition
26:43 - to this term
26:45 - let's say that this adds
26:48 - structure to a web page
26:52 - and then to create another term and
26:54 - definition pair we can just copy this
26:59 - let's add css this adds style to a web
27:03 - page
27:04 - then javascript
27:08 - this adds
27:09 - functionality to a webpage with
27:12 - description lists each list item is a
27:15 - pair of terms and definitions the last
27:18 - thing i'm going to show you you can
27:19 - create a nested list within a list so
27:22 - let's say i would like to add a sub list
27:24 - of individual toppings to our unordered
27:26 - list within the list item we just create
27:29 - a new list let's say that i would like
27:31 - another unordered list so i need a pair
27:34 - of ul tags
27:37 - and what are some toppings we can place
27:39 - on our pizza so we need a list item
27:42 - what about pepperoni
27:44 - so we have a sub list going if you take
27:46 - a look on the webpage right now oh then
27:48 - maybe
27:49 - what about mushrooms next i like
27:51 - mushrooms
27:53 - and
27:54 - peppers i guess all right people those
27:57 - are how to create lists there's three
27:59 - types unordered ordered and description
28:01 - lists just use a pair of appropriate
28:04 - tags depending on the list you want to
28:06 - use so yeah everybody that's how to
28:08 - create different lists in html if you
28:10 - found this video helpful please remember
28:12 - to smash that like button leave a random
28:14 - comment down below and subscribe if
28:16 - you'd like to become a fellow bro
28:18 - hey it's you bro hope you're doing well
28:20 - and in this video i'm going to show you
28:22 - all how we can create a table using html
28:25 - so sit back relax and enjoy the show
28:30 - everyone i'm going to show you all how
28:31 - we can create a table using html let's
28:34 - say that we have a store not an online
28:37 - store but a brick and mortar store and
28:39 - our job is to create a table of the
28:41 - hours of operation for our store
28:44 - which we can best represent with the
28:46 - table on our website so to create a
28:48 - table we'll use a pair of table tags
28:50 - there's an opening table tag and a
28:52 - closing table tag to add a row to our
28:54 - table we can use a pair of tr tags for
28:57 - table row and let's say that we'll have
28:59 - two rows one for the days of the week
29:02 - and the other for the hours of operation
29:04 - so within this first row let's add some
29:06 - headers using th tags for table header
29:10 - and i'll list the days of the week so we
29:11 - have sunday through saturday so to add
29:14 - another header just use another pair of
29:16 - th tags
29:18 - sunday
29:19 - monday
29:21 - tuesday
29:23 - you get the rest
29:32 - table headers are inherently bold if we
29:35 - would like to add some data to the
29:37 - second row we'll add that between the tr
29:40 - tags for the second row
29:42 - so we would like some data which is td
29:45 - we need an opening td tag and a closing
29:47 - td tag for each cell let's pretend that
29:50 - our store is open monday through friday
29:53 - nine to five and closed on the weekends
29:55 - saturday and sunday this first cell is
29:58 - for the first day sunday the first
30:00 - column
30:01 - so we are closed this day let's copy our
30:04 - table data element and copy it this will
30:06 - be for the second row monday and we are
30:08 - open nine to five and let's fill this in
30:12 - for the days monday through friday
30:15 - and then saturday we are closed
30:18 - all right let's color in these cells
30:20 - i'll make the first row a dark gray
30:22 - color so to change the color of the
30:24 - first row within the opening tr tag for
30:28 - the first row there is a bg color
30:30 - attribute which means background color
30:32 - and i will set the sequel to gray and
30:34 - our second row let's make this light
30:36 - gray so within the opening tr tag for
30:39 - the second row let's set the bg color
30:41 - attribute equal to a different color
30:43 - like light gray pick whatever color you
30:45 - want it doesn't necessarily have to be
30:47 - gray so within the opening table tag i
30:50 - will set the bg color equal to what
30:54 - about black
30:55 - cool these cells are left aligned we can
30:58 - center them to center the cells within a
31:00 - row within the opening tr tag there is
31:04 - an align attribute and let's set this
31:06 - equal to center and the text is now
31:09 - centered and lastly let's make all of
31:11 - these cells the same size this wednesday
31:14 - cell is taking up a lot of space let's
31:16 - set the width equal to maybe 100 pixels
31:20 - and i will just copy this
31:24 - and with the opening table element i
31:27 - will set this equal to the width of each
31:29 - cell times the number of cells that we
31:31 - have so if each cell has a width of 100
31:35 - and there's seven cells i will set the
31:37 - width equal to 700.
31:41 - and well there we go all of these cells
31:43 - are now aligned so yeah that's how to
31:45 - create a table in html just use a pair
31:48 - of table tags for each row add a pair of
31:52 - tr tags if you need a row to function as
31:55 - a header such as the days of the week
31:57 - use th tags if you're filling in data
32:00 - for a cell use td tags for table data so
32:05 - yeah that's how to create a table in
32:07 - html if you found this video helpful
32:09 - please be sure to smash that like button
32:11 - leave a random comment down below and
32:13 - subscribe if you'd like to become a
32:14 - fellow bro
32:16 - hey uh what's going on everybody in this
32:18 - video i'm going to show you how we can
32:20 - add color to a webpage so sit back relax
32:23 - and enjoy the show
32:26 - all right now here's how we can add
32:28 - color to a web page we'll be talking a
32:30 - little bit about css but we'll cover
32:32 - this more in depth in the css series i
32:35 - thought this would be a good place for
32:37 - us to introduce colors because we'll be
32:39 - able to color things like buttons and
32:42 - forms and whatnot here's how to add some
32:44 - color to a webpage within the opening
32:46 - tag of an element of your choosing
32:49 - there is a style attribute and within
32:51 - double quotes we can add css properties
32:54 - for my website i would like to change
32:56 - the background color to black because i
32:59 - think it would look cool so within
33:00 - double quotes list the css property you
33:03 - would like to change background color
33:05 - after the colon you can either add a
33:07 - color name rgb values or hexadecimal
33:11 - values let's just say the color black
33:13 - there we go we can no longer see my
33:15 - website let's change the font color of
33:17 - these individual h1 header tags again
33:20 - it's the same process as before
33:22 - style equals
33:25 - within double quotes list the css
33:27 - property you would like to add
33:29 - i would like to add color this time to
33:31 - change the font color and i will pick
33:34 - red there we go this time let's use rgb
33:38 - values
33:40 - so again style attribute equals the css
33:43 - property would like to change
33:45 - to instead use an rgb value type rgb
33:49 - parenthesis then i would recommend
33:51 - looking up a color picker
33:54 - and you can pick a color of whatever you
33:56 - would like uh what about blue
33:58 - perhaps that shade of blue so rgb values
34:02 - are in a group of three a triad
34:05 - so i will copy these three numbers and
34:07 - paste them within the parentheses of rgb
34:11 - and the second h1 header tag is now that
34:14 - specific shade of blue i tend to prefer
34:16 - to use rgb values or hexadecimal values
34:20 - over color names because you have more
34:22 - variety now let's use hexadecimal values
34:25 - style equals the css property
34:28 - of color
34:30 - so hexadecimal values always start with
34:33 - a hashtag
34:34 - what about green
34:36 - so we'll have red blue and green and i
34:39 - will copy this number they are in groups
34:41 - of six and well yeah it's green now cool
34:44 - right okay now let's change both the
34:47 - font color and the background color of
34:49 - this paragraph within the opening tag of
34:52 - this paragraph element
34:54 - we will set the style attribute equal
34:57 - to any css properties within double
35:00 - quotes
35:01 - let's change the background color first
35:04 - background
35:05 - dash color
35:06 - colon space
35:08 - i'll set this to
35:10 - dark gray which is
35:12 - 2 2 2
35:13 - 2 2 2 then to add multiple css
35:16 - properties separate each with a
35:18 - semicolon and this time i will change
35:20 - just the color and i'll use the same
35:23 - shade of green all right well there we
35:25 - go so yeah everybody that's how to add
35:28 - some colors to your webpage there's more
35:30 - advanced things we can do when we reach
35:31 - the video series on css but what you can
35:34 - do for now within the opening tag of an
35:37 - element of your choosing set the style
35:39 - attribute equal
35:41 - to whatever css properties you would
35:43 - like to add within quotes so yeah that's
35:46 - how to add color to webpage if you found
35:48 - this video helpful please be sure to
35:50 - smash that like button leave random
35:52 - comments down below and subscribe if
35:54 - you'd like to become a fellow bro
35:58 - hey welcome back in this video i'm going
36:01 - to explain the span and div tags let's
36:04 - begin with span span adds markup to text
36:08 - or portion of a document anything that i
36:11 - surround with a pair of spam tags i can
36:13 - apply markup or some effect to so in my
36:16 - example document i have a header and
36:19 - three paragraphs what if i would like
36:22 - this specific sentence to be i don't
36:24 - know red well what i could do is
36:25 - surround this sentence in my document
36:28 - with a pair of spam tags
36:30 - so i need an opening spam tag and a
36:33 - closing spam tag
36:34 - and that sentence ends right here and
36:37 - within the span tag i can change some of
36:40 - the attributes of this sentence um so i
36:42 - would like to change maybe the style
36:44 - i'll set the style color equal to red
36:48 - now you probably do want this closing
36:50 - tag if you do not have this closing tag
36:53 - your span will take up this entire
36:55 - section
36:56 - so basically that's what span is it adds
36:59 - markup to text or a portion of a
37:02 - document div is very similar except it
37:05 - divides a division of a document so what
37:08 - if i would like to change the background
37:10 - color of these three paragraphs well
37:13 - what we learned in the last video on
37:14 - colors is that we could set the style
37:18 - background
37:20 - color equal to some shade of gray maybe
37:24 - this value this does work and i could
37:27 - just copy this and paste it for each of
37:29 - these paragraphs
37:31 - or another way of doing this is that i
37:33 - can surround these three paragraphs with
37:36 - a pair of div tags
37:38 - so we need an opening div tag
37:40 - and a closing div tag
37:43 - and then i will apply this style
37:46 - attribute to the opening div tag
37:49 - and it will apply
37:50 - this attribute to anything between these
37:53 - div tags so yeah that's basically what
37:55 - the span and div tags do span adds
37:58 - markup to text or portion of a document
38:01 - div defines a division of a document so
38:04 - yeah that's span and div in html
38:09 - yeah let's begin so meta tags the meta
38:13 - element represents various kinds of
38:16 - metadata that cannot be expressed using
38:19 - the title base link style and script
38:21 - elements metadata is data about data we
38:25 - can add metadata to the head of our
38:28 - document and this tells the web browser
38:30 - what our web page is about with the meta
38:32 - tags we place them within the head not
38:34 - the body so we can tell the web browser
38:37 - some information about our web page meta
38:39 - tags are self closing we do not need a
38:41 - closing tag meta tags do have a name
38:44 - attribute that we can set to one of many
38:46 - settings let's say we would like to add
38:48 - a description to this webpage and the
38:51 - web browser is going to read this
38:53 - description after setting the name equal
38:55 - to description i can set the content
38:58 - equal to a brief description of my
39:00 - webpage
39:02 - uh perhaps free
39:04 - html tutorial for beginners
39:08 - okay so that's one example of a meta tag
39:10 - so let's create another so meta again
39:12 - these are self-closing tags and i can
39:15 - add some keywords for search engine
39:17 - optimization
39:18 - so name keywords
39:21 - content
39:22 - and i'll explain my web page in just a
39:24 - few keywords uh perhaps html separate
39:27 - each of these with a comma
39:29 - tutorial
39:30 - beginners
39:32 - that'd be good we can add a author
39:34 - meta name
39:36 - equals author
39:39 - content equals and then type your name
39:44 - so if somebody is viewing your web page
39:46 - on a mobile device you can have your web
39:48 - page scale to their mobile device by
39:51 - adding this meta tag name equals
39:54 - viewport
39:56 - content
39:58 - equals
40:00 - and this will set the width of our web
40:02 - page
40:03 - equal to device dash width
40:07 - then comma we can set the initial
40:10 - scale
40:11 - equal to 1.0 so by adding this meta tag
40:15 - if you were to view this webpage on a
40:16 - mobile device this web page will scale
40:19 - proportionately with that mobile device
40:22 - another meta tag is a char set
40:26 - we can tell a web browser what sort of
40:27 - character encoding that we're using
40:29 - so authors are encouraged to use utf-8
40:32 - for unicode
40:34 - so if you want to use basic ascii
40:36 - encoding you would write ascii here
40:37 - although that's discouraged authors are
40:40 - encouraged to use utf-8 for unicode
40:43 - all right and the last thing i'm going
40:44 - to show you is that we can set our web
40:46 - page to automatically refresh after a
40:49 - given amount of seconds
40:51 - so meta
40:53 - http
40:54 - dash equiv is the attribute name
40:58 - equals
40:59 - refresh
41:01 - and the content equals how many seconds
41:04 - you would like to wait to have your
41:05 - browser refresh
41:07 - uh perhaps 30.
41:09 - okay so i'm going to open this with live
41:11 - server so if i set this to 30 seconds
41:14 - it's not going to be that visible you're
41:16 - gonna have to wait until we see this
41:18 - refresh let's set this to something more
41:20 - drastic like two seconds let's crank
41:22 - this up yep see it's refreshing every
41:25 - two seconds uh but let's set that back
41:27 - to 30. two seconds was just an example
41:30 - so yeah those are meta tags they
41:32 - represent metadata
41:34 - is data about data by adding meta tags
41:37 - we can tell a web browser information
41:39 - about our website such as a brief
41:41 - description keywords author we can set
41:44 - the viewport for mobile devices you can
41:47 - set a refresh rate stuff like that and
41:49 - then be sure to add meta tags to the
41:51 - head element of your document so yeah
41:54 - those are meta tags if you found this
41:56 - video helpful please remember to smash
41:58 - that like button leave a random comment
41:59 - down below and subscribe if you'd like
42:01 - to become a fellow bro
42:03 - hey what's going on everybody it's you
42:05 - bro hope you're doing well and in this
42:07 - video i'm going to explain how we can
42:08 - use iframes to embed web pages and other
42:12 - documents within your website so sit
42:14 - back relax and enjoy the show
42:18 - hey welcome back iframes the iframe
42:21 - element is used to embed content from
42:24 - another source into an html document
42:27 - they're commonly used for advertisements
42:30 - and they're easily abused with many
42:32 - hacking techniques so basically using an
42:34 - iframe we can embed another web page
42:36 - within our webpage or we could embed our
42:39 - current html document with another html
42:42 - document here's how we can create an
42:43 - iframe this is a self-closing tag and we
42:46 - set the source equal to this can be an
42:49 - external website such as a url or we can
42:52 - place a relative file path to a file of
42:55 - our choosing so this doesn't work with
42:57 - many websites and i'll demonstrate that
43:00 - so let's set the source equal to
43:02 - google.com and then save and reload so
43:06 - google.com refused to connect that's
43:09 - because a lot of major websites have
43:11 - disabled the use of iframes since we're
43:13 - embedding another web page within our
43:15 - webpage a common hacking technique is
43:18 - that you can have this embedded webpage
43:21 - take up the entire frame of your html
43:23 - document your website could pose as
43:25 - another website and that could be
43:27 - considered dangerous let's say that you
43:29 - embed a banking website like bank of
43:31 - america so if somebody visits your
43:33 - website it's actually a facade and
43:35 - somebody will type in their banking
43:37 - information like their login credentials
43:39 - and you could capture that so a lot of
43:41 - major websites have disabled the use of
43:43 - iframes so you cannot pose as their
43:46 - website one website that i checked that
43:48 - does work is bing
43:50 - so let's switch our url to that save and
43:53 - reload
43:55 - yeah see we have embedded the home page
43:57 - of bing but let's change the width and
44:00 - height attributes because this is fairly
44:01 - small let's say the width is
44:04 - 750 pixels and for the height let's say
44:07 - maybe 250.
44:09 - so save and reload
44:12 - cool yeah we have embedded bing within
44:14 - our webpage and you can use this
44:16 - normally
44:17 - bro
44:17 - code
44:20 - now let's embed another document so
44:22 - let's create a new file
44:24 - let's pretend that this is an
44:25 - advertisement we would like to display
44:27 - within our webpage i'll name this
44:29 - add.html so if you're using vs code to
44:33 - generate an html document a plain one
44:35 - type exclamation point then hit tab
44:38 - so let's say something
44:40 - i'll use an h1 header tag
44:42 - this is an advertisement
44:45 - and then close it uh let's change the
44:48 - background color too using the style
44:50 - attribute
44:51 - and i will pick the background color
44:54 - property and set this to maybe i don't
44:56 - know that color uh then let's change the
44:59 - width and height for the height maybe
45:01 - 100
45:03 - then make sure to change your source as
45:05 - well so we need to list the relative
45:07 - file path since these files are right
45:09 - next to each other i only have to list
45:11 - the file name
45:13 - add.html save reload
45:16 - cool and there is my fake advertisement
45:19 - embedded pages do have a border this is
45:22 - how to remove that set the style
45:24 - attribute
45:26 - equal to the border css property and set
45:30 - this to zero so i'm going to save reload
45:34 - and this no longer has that border so
45:37 - yeah everybody those are iframes they're
45:40 - used to embed content from another
45:42 - source into an html document they're
45:45 - useful for advertisements and they're
45:47 - easily abused with a lot of hacking
45:49 - techniques so yeah those are iframes if
45:52 - you learn something new be sure to smash
45:54 - that like button drop a random comment
45:55 - down below and subscribe if you'd like
45:57 - to become a fellow bro
45:59 - what's going on everybody it's you bro
46:01 - hope you're doing well and in this video
46:03 - i'm going to show you how you can create
46:04 - a button using html so sit back relax
46:08 - and enjoy the show
46:11 - hey in this video i'm going to show you
46:13 - how we can create buttons using html
46:16 - we'll need a pair of button tags there's
46:18 - an opening button tag and a closing
46:20 - button tag here's our button to add some
46:23 - text between the button tags we can add
46:26 - whatever text we want to the button like
46:28 - click me
46:29 - you can set this up as a hyperlink when
46:31 - you click on the button to do so just
46:32 - surround your button element with a pair
46:34 - of a tags
46:36 - there's an opening a tag and a closing a
46:38 - tag
46:39 - and i will set the href attribute of the
46:42 - opening button tag to a url or relative
46:45 - file path of my choosing to make this
46:47 - simple let's set the url to google.com
46:54 - and then when i click on this button it
46:56 - takes me to google you can disable a
46:58 - button by adding a disabled boolean
47:01 - attribute to the opening button tag and
47:03 - we can no longer click on this button
47:05 - if you know a little bit of css you can
47:08 - add some css properties directly to a
47:10 - button by setting the style attribute
47:13 - equal to and list some css properties of
47:16 - your choosing let's change the
47:18 - background color
47:20 - you can pick a color name
47:24 - you can use rgb values
47:27 - or you can use hexadecimal values
47:31 - i think i'll set this to a dark gray
47:34 - color so maybe
47:35 - 6 3s
47:37 - for rgb values and hexadecimal values
47:39 - you can always use a color picker online
47:42 - so if you would like to add multiple css
47:45 - properties separate each css property
47:47 - with a semicolon and next i will change
47:50 - the color that's the font color and
47:53 - maybe i'll pick green one color i like
47:55 - is zero zero ff zero zero that's just a
47:59 - bright green color you can also round
48:01 - these borders too by using the border
48:04 - radius property so again separate each
48:07 - css property with a semicolon
48:09 - and i will set the border radius
48:12 - property to 5 pixels just around the
48:15 - corners
48:16 - okay cool
48:18 - that's a pretty fancy looking button if
48:20 - i do say so myself and yep it still
48:22 - takes us to google just by us using html
48:25 - this adds structure to a webpage but it
48:28 - doesn't necessarily add functionality
48:30 - that's where a language like javascript
48:32 - comes in when we click on a button we
48:34 - can have this button execute some
48:36 - function from a javascript file i'll
48:38 - show you how we can create a very simple
48:41 - javascript program but of course we'll
48:43 - cover this more in the javascript series
48:46 - so let's get rid of this hyperlink
48:48 - and have our button do something else
48:51 - there is an on
48:52 - click attribute that we can set to a
48:55 - javascript function
48:57 - so we just place the name of the
48:58 - function between a set of double quotes
49:01 - we haven't created a javascript function
49:03 - yet but let's say that we'll have a
49:05 - javascript function named do something
49:08 - and then follow that name with a set of
49:10 - parentheses and let's create a paragraph
49:12 - element
49:14 - and we will say hello and then close it
49:18 - with this paragraph element i'm going to
49:20 - set the id attribute equal to let's say
49:24 - test here's how we can code a very
49:26 - simple javascript program you're going
49:29 - to create a pair of script tags there's
49:31 - an opening script tag and a closing
49:33 - script tag
49:35 - and within the script i will say
49:38 - function
49:40 - do something
49:41 - parentheses curly braces
49:44 - so this function will perform some
49:46 - subsection of code so when we click on
49:49 - our button what do we want this program
49:51 - to do we will take document dot
49:54 - get
49:55 - element
49:56 - by id
49:59 - parentheses
50:00 - list the id of our paragraph element
50:03 - test
50:04 - dot
50:05 - inner
50:06 - html
50:08 - and i will set the sequel to
50:11 - goodbye
50:12 - then add a semicolon at the end okay so
50:15 - when we click on this button it's going
50:17 - to execute this function do something
50:20 - and then perform whatever code is
50:22 - between this set of curly braces
50:24 - so you may need to save
50:26 - refresh your web page and if done
50:28 - correctly when you click on this button
50:31 - it will change this text
50:33 - from hello
50:35 - to goodbye
50:36 - so that is a very small javascript
50:39 - program so there is an on click
50:41 - attribute that you can set equal to a
50:44 - javascript function but of course we'll
50:46 - cover more about javascript well in the
50:49 - javascript playlist but that's one way
50:51 - in which you can add functionality to a
50:53 - button in this video we were more
50:55 - focused on actually creating the button
50:57 - itself so yeah if this video helped you
50:59 - out you can help me out by smashing that
51:01 - like button leave a random comment down
51:03 - below and subscribe if you'd like to
51:04 - become a fellow bro
51:08 - hey everyone i'm going to try and
51:09 - explain everything i can about forms in
51:11 - about eight minutes to create a form
51:13 - element we'll need a pair of form tags
51:16 - there's an opening form tag and a
51:17 - closing form tag and depending on the
51:19 - user input that you need there is an
51:21 - input element and you can set the type
51:23 - attribute to whatever you need let's say
51:26 - we need some text from a user like a
51:28 - first name within our form there is a
51:30 - text box where we can enter in some user
51:32 - information so we should probably let
51:33 - the user know what we want them to type
51:35 - in i will precede this input element
51:38 - with a label
51:40 - let's say first name and a user can type
51:44 - in their first name now it is considered
51:46 - good practice to fill out a for
51:48 - attribute within the label and set this
51:51 - to whatever you want let's say fname and
51:53 - within the associated input elements i
51:55 - will set the id also equal to fname
51:59 - whatever's within the four attribute
52:01 - this does a couple things one if i was
52:03 - to click on this label this will select
52:06 - my input box it's also helpful for
52:09 - people that are using screen readers so
52:11 - that they can easily navigate your form
52:13 - there is also a name attribute when we
52:16 - submit this data what sort of name do we
52:18 - want to give that data think of it like
52:20 - a variable i will also name this fname
52:22 - as well within the input element there
52:24 - is a placeholder to display some default
52:27 - text to a user by setting the
52:29 - placeholder attribute equal to some text
52:32 - like spongebob so if i was to click
52:35 - within this input field and type
52:37 - something that will get rid of my
52:38 - placeholder let's create an input field
52:40 - for a last name and really we can just
52:42 - copy this and make a few changes to it
52:45 - so copy both the label and the input
52:47 - element uh let's change this from first
52:50 - name to last name
52:52 - change four as well to lname
52:54 - id will be lname and let's make name l
52:57 - name as well
52:58 - and the placeholder how about square
53:01 - pants
53:02 - these labels and input elements will
53:04 - appear on the same line to separate them
53:06 - and treat them as block level elements i
53:08 - will add each of these pairs to their
53:10 - own div element
53:16 - perhaps i'll add a line break as well
53:19 - okay now with forms there are built-in
53:21 - buttons too
53:24 - we will set the input type equal to
53:28 - reset so if i were to type in some text
53:31 - and click reset that will reset
53:33 - whatever's within my form and there is a
53:35 - submit button as well
53:38 - i will set the type equal to submit so
53:41 - currently our data doesn't have any
53:43 - place to go to so if i were to click the
53:46 - submit button this data is not going to
53:48 - go anywhere so if i need to send this
53:50 - data to a page i will list that page
53:53 - within the action attribute of my
53:55 - opening form element
53:57 - so we'll need the help of a dynamic
53:59 - programming language php for example
54:02 - we're not going to focus on
54:03 - functionality in this video but rather
54:04 - the structure of a form so if i need to
54:07 - send this to
54:08 - a php page i will list that php page
54:11 - within the action attribute there is
54:13 - also an associated method attribute two
54:16 - common values are get and post
54:20 - get is considered insecure it's going to
54:22 - append your data to the url of your web
54:25 - page so for example if i set the method
54:27 - to get and type in some information
54:30 - and click submit it's going to append my
54:33 - data to the end of my url so it's going
54:35 - to add a question mark then all of my
54:37 - data if you need to submit some secure
54:40 - information like a password do not use
54:42 - get i would say that this is useful for
54:44 - things like search boxes if a user needs
54:46 - to navigate your web page for maybe some
54:48 - sort of keyword so it's better to use
54:50 - post to submit some secure information
54:53 - but this isn't going to do anything
54:54 - obviously because we do not have a
54:56 - server set up now there is a required
54:58 - boolean attribute you can add if
55:00 - somebody needs to submit some
55:02 - information they are required to fill
55:04 - out any input elements that have this
55:06 - boolean attribute of required so if i
55:09 - just attempt to submit this without
55:10 - typing in anything there is a small
55:12 - pop-up box that says please fill out
55:14 - this field all right i'm going to go
55:16 - kind of quick through these next input
55:18 - elements just because i think we have
55:20 - the hang of the general context of input
55:22 - elements so next we have password fields
55:25 - you set the type equal to password so if
55:28 - somebody types in characters they will
55:30 - be hidden if you need to set a max size
55:32 - of your password there is a max length
55:35 - attribute let's set this to maybe 12 so
55:38 - we can type in no more than 12
55:40 - characters for a password and you can
55:41 - also add that required boolean attribute
55:44 - too
55:45 - for an email element set the type equal
55:48 - to email
55:51 - in order to submit an email we need an
55:53 - at character within our email otherwise
55:56 - we cannot submit this information and
55:58 - perhaps i'll add a placeholder as well
56:00 - placeholder equals s
56:03 - pants
56:04 - at gmail.com
56:06 - so there is our placeholder for a
56:09 - telephone number you're going to set the
56:11 - type equal to tell
56:13 - and i do have a placeholder as well if
56:16 - you need the user to type in a date like
56:18 - a birth date there is a type date which
56:22 - includes an interactive calendar to
56:24 - select a date
56:26 - a user can type in a number if you set
56:28 - the type equal to number let's say that
56:30 - the user is buying something from a
56:32 - store there are some arrows where they
56:34 - can increase or decrease the quantity
56:36 - but we should probably place some limits
56:38 - they can type in basically whatever
56:39 - number they want they want negative one
56:42 - billion items
56:43 - so we can set the min and the max i'll
56:45 - set the min equal to 0 and of the max
56:49 - equal to what about 99
56:51 - and you can also set a default value too
56:54 - i'll set the default value equal to 1.
56:56 - next we have radio buttons with radio
56:58 - buttons we can only select one radio
57:00 - button from any one group perhaps we'll
57:02 - have the user select a title are they a
57:05 - mr a miss or a doctor
57:08 - so i'm going to create a pair of labels
57:10 - and input for each option that we have
57:13 - so we will have a mr option
57:16 - miss
57:17 - and
57:18 - phd okay i will set the input type equal
57:22 - to radio and then do that with each of
57:25 - these pairs
57:27 - so we can select more than one because
57:30 - these are all not within the same group
57:32 - to set them all within the same group we
57:34 - will all have them have the same
57:36 - matching name
57:37 - let's say that the name will be title
57:40 - so therefore we can only select one now
57:42 - since they're all within the same group
57:44 - and that's kind of the idea behind radio
57:46 - buttons you can only select one and we
57:48 - will set an associated value of let's
57:51 - say mister for the first value
57:54 - misses for the second
57:56 - and doctor for the last one
57:59 - then i'm just going to precede all of
58:01 - these with a separate label
58:04 - uh let's say title
58:07 - and i will set the four attribute equal
58:10 - to title and within each of these radio
58:12 - button labels when i click on one of
58:14 - these labels i also want to be able to
58:16 - select one of these radio buttons so i
58:18 - will set the for attribute equal to a
58:20 - unique id so let's say mister
58:23 - the id will be mister
58:26 - and repeat the same steps
58:33 - okay so when we click on these labels we
58:35 - should be able to select our radio
58:37 - buttons
58:38 - nice with drop down menus instead of a
58:41 - type we are going to use a pair of
58:43 - select tags so there's an opening select
58:46 - tag and a closing select tag and we list
58:48 - individual options within the select
58:50 - element
58:53 - we'll give our user three options from
58:55 - this drop down menu they can pay with a
58:57 - visa a mastercard or a gift card
59:01 - and i will give each of these a value
59:07 - okay we now have a payment field and the
59:10 - user can select an option from this drop
59:12 - down menu
59:13 - and the last input type i will explain
59:15 - in this video is the checkbox type so
59:18 - let's say we have a subscribe button and
59:20 - you can go ahead and smash that
59:22 - subscribe button so just set the type
59:24 - equal to checkbox for well a checkbox
59:27 - well yeah everybody that's how to create
59:29 - an html form there's still some more
59:31 - advanced input types we did not cover
59:33 - but these are the very basics i would
59:35 - say if you found this video helpful
59:37 - please remember to smash that like
59:39 - button leave a random comment down below
59:41 - and subscribe if you'd like to become a
59:42 - fellow bro
59:59 - you