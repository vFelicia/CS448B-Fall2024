00:00 - how's it going everybody its bro here
hope you're doing well and in this video
00:03 - we're going to be discussing at key
bindings in Java so sit back relax and
00:08 - enjoy the show if you find this video
helpful please remember to Like comment
00:14 - and subscribe
your support will help keep this channel
00:18 - running alright everybody we're gonna be
discussing key bindings what this does
00:22 - is that this binds an action to a
certain keystroke so for example let's
00:27 - say that within certain games you might
be able to move your character forward
00:30 - by clicking the W button or a for left s
for down or D for right so this is very
00:37 - similar to key listeners but there's a
few subtle differences so with key
00:42 - bindings they actually don't require you
to click a component to give it focus
00:46 - and all swing components at least all
swing components that I know of actually
00:50 - are capable of using key bindings and
the reason that you might want to use
00:55 - key bindings over key listeners is that
they give you more flexibility and you
01:00 - can actually assign different keystrokes
to individual swing components so let's
01:05 - say that you have player 1 and player 2
you could have player 1 have a certain
01:10 - set of keys on the keyboard and player 2
could have a different set although one
01:15 - downside to using key bindings over key
listeners is that they tend to be more
01:19 - difficult to utilize and set up but I'll
give you guys just a quick demonstration
01:23 - of how these could be useful so if
you're ready let's begin I'm going to
01:27 - create a new class within my project
folder so file new class I'll call this
01:32 - maybe just game not any specific game
just a game and then let's create an
01:37 - instance of this class so game game
equals new game then let's create the
01:45 - constructor for this game okay so we can
actually bind actions to keystrokes so
01:55 - if we want to create an action we can
actually create an inner class for a
01:59 - specific action so we're going to create
an action for an up action down action
02:05 - left action and right action so I'll
make this public this will be a class
02:10 - not a method
and we'll call this up action and it's
02:15 - going to extend abstract action so we
need an action performed method within
02:25 - here so add unimplemented methods and
then we're going to create a separate
02:32 - class for down left and right so we have
left action let's add up down action as
02:43 - well maybe right here so up down left as
well as right so let's head back to the
02:54 - top before our constructor we can
actually create an action object so it's
03:01 - going to look like this action is the
data type and we can list a specific
03:05 - action like up action this is an
instance and then action down action
03:13 - action left action and action
right action so there'll be more on this
03:26 - in just a moment let's just create the
frame so let's declare AJ frame called
03:32 - frame as well as a label we'll be able
to control the movement of this label so
03:37 - J label and we'll call this label then
we'll need to import this and I'm just
03:44 - going to import everything related to
Java X dot swing and AWT dot event so we
03:52 - don't have to worry about those okay
let's begin by setting up the frame so
04:01 - frame equals new J frame let's call this
key binding demo although it's not
04:10 - necessary and then frame dot set default
close operation J frame exit on close
04:20 - let's set aside so frame dot set size
for 20 by 40
04:26 - is a decent-size and then I do not want
to use a layout manager so set layout no
04:34 - and then at the end let's set the
visibility for the supreme to true set
04:40 - visible true then let's create our
jlabel so let's instantiate this
04:49 - instance label equals nu J label let's
set a background color label dot set
04:57 - background how about red color dot red
let's set the bounced label dot set
05:07 - bounce these are the coordinates let's
place this where X is 100 y is 100 the
05:13 - width will be 100 and the height will be
100 so it's going to be a square and we
05:18 - need to set opaque true and then add
this label to our frame frame dot add
05:33 - label let's run this and take a look
05:38 - okay here is our label what we're going
to be doing is actually binding some
05:44 - keystrokes to these specific actions and
we'll have this label either move up
05:49 - down left or right what we've done
previously is that we declared these
05:55 - actions but we need to finish
instantiating them so let's do that
05:59 - within our constructor and I'll just do
this after our label so we need to
06:04 - instantiate the up action down action
left action as well as the right action
06:08 - so up action equals new up action then
let's do the same thing for down left
06:20 - and right so down action equals new down
action left action equals new left
06:31 - action and then right action equals new
right action
06:38 - now let's head back to each of these
inter classes and let's begin with the
06:42 - actionperformed method within each of
these inner classes let's begin with up
06:47 - action so when the up action occurs what
we'll do is set a new location for our
06:54 - label so it's going to appear to move so
one easy way to do that is to take our
06:59 - label and use the set location method
and we can give a pair of coordinates as
07:06 - arguments so we can actually get the
current location get X and then label
07:15 - dot get Y and if we want to move up
we can just say label dot get Y minus 10
07:25 - so that will move this label up by 10
pixels let's do the same thing for down
07:31 - left and right so this will stay the
same label dot set location we'll keep X
07:38 - the same as it is however label dot get
Y we'll want to increase by maybe 10
07:43 - pixels to keep it consistent and let's
repeat the process for left action as
07:48 - well as right action so we're actually
going to keep Y the same for this but
07:53 - we're going to either increase or
decrease our x-coordinate so if we're
07:57 - moving left let's decrease X by 10 and
then for right action we will increase X
08:04 - by 10 and that is it for all of these
inter classes let's head back to our
08:10 - constructor
now with Swing components in Java each
08:14 - component is able to have its own unique
mapping of key events to actions so
08:19 - let's take our label for example this is
a swing component so it's a candidate so
08:24 - if we want to associate some keystrokes
with events these are the steps
08:28 - type in the name of the component that
you want to use so in our example it's
08:32 - label and first we're going to use the
get input map method and then after
08:39 - we're going to map and chain so dot put
and put has two arguments within here a
08:46 - keystroke as well as an action map key
so let's associate
08:52 - yup keystroke with moving our character
up so within this argument we're going
08:57 - to type key stroke dot get key stroke
and then a key character so let's say up
09:10 - and these are the arrows on your
keyboard
09:13 - not wsad but we'll try that next and now
we need an action map key name and
09:19 - honestly it doesn't really matter what
you call this just name it something
09:22 - memorable because we're only going to
use this once in the next line of code
09:26 - so I'll call this up action and that's
it for this line now step two is we're
09:33 - going to get action map so type the name
the component so label dot get action
09:41 - map and then method chain by adding dot
put and this has a key as well as an
09:49 - action so this key is going to be
whatever this is in the first line our
09:53 - up action and then we need an action so
one of these so let's take our up action
10:03 - and that's it so when we click up on our
pad on our arrows on our keyboard it's
10:11 - going to trigger this action performed
method it's going to move our label up
10:17 - by 10 pixels on the y-axis so let's do
the same thing for down left and right
10:25 - so we just need to change up to down and
let's change this here as well changing
10:33 - these are easy to forget about so down
down down then two more so this is going
10:42 - to be a left
10:48 - and then right
11:01 - and that's it let's run this okay so
using the arrow keys I'm clicking
11:10 - up-down left-right although you can't
really see it but I guess we'll just
11:16 - have to believe me now let's change
these two different keys
11:19 - let's associate the up action with the W
key so since this is a single character
11:26 - make sure that these are within single
quotes so W / up s / down left will be a
11:34 - and right will be D and let's try this
again so W s a D we are good alright so
11:51 - that's the basics of key bindings
there's still a lot more you can do with
11:55 - key bindings so I might make a second
video in the future no promises though
12:00 - yeah if you want a copy of all this code
I'll post all of this in the comments
12:04 - down below and that's the basics of key
bindings in Java hey you yeah I'm
12:10 - talking to you if you learn something
new then you can help me help you in 3
12:16 - easy steps by smashing that like button
drop a comment down below and subscribe
12:21 - if you'd like to become a fellow bro