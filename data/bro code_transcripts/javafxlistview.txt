00:00 - hey what's going on everybody it's bro
00:02 - hope you're doing well
00:03 - and in today's video i'm going to
00:04 - explain list views in javafx
00:07 - so sit back relax and enjoy the show
00:12 - all right we're back at it again today
00:14 - we're talking about list views a list
00:16 - view
00:16 - is a horizontal or vertical list of
00:19 - items from which a user may select
00:21 - or interact with so let's go over some
00:24 - of the properties
00:25 - you can make your list view editable by
00:27 - checking this checkbox
00:28 - there's also a fixed cell size if you
00:31 - keep this as the default
00:32 - each cell is no larger than what it has
00:35 - to be but you can set a size
00:37 - so if i were to set this to 50 then each
00:40 - cell within my list view is going to
00:42 - have a height of 50 and i believe that's
00:44 - in pixels
00:45 - but i'll just keep this as the default
00:47 - of negative one so that each cell is no
00:49 - larger than what it has to be
00:51 - you can disable this change the opacity
00:53 - you can change the orientation
00:55 - the default is vertical so this list
00:57 - will go up and down
00:58 - if you were to change this to horizontal
01:00 - each item will move
01:01 - left to right when you add items i'll
01:03 - keep this as vertical for now
01:06 - and i think that's anything really
01:07 - worthwhile let's head to the code
01:09 - section
01:10 - and give this list view a unique id
01:13 - let's call it my list view
01:14 - what we'll do in this example is that we
01:16 - will populate our list view with
01:18 - a bunch of different food items like
01:20 - it's an interactive menu
01:22 - so there's no on action section so we'll
01:24 - need to add a change
01:25 - listener to our list view but we'll need
01:27 - a label we'll change the text of the
01:29 - label
01:30 - to reflect the food item that we select
01:32 - so let's add a label
01:34 - place it anywhere let me increase the
01:35 - font size
01:37 - to whatever is decent that's not too bad
01:40 - let me center this
01:44 - alignment center and let's change the
01:47 - text
01:48 - select a food and we need to add
01:51 - a unique id let's call this label my
01:55 - label
01:55 - so add your controller class save and
01:58 - then head to your controller class
02:00 - make sure that you update your fxml file
02:03 - within your controller class our
02:04 - controller class is going to
02:06 - implement the initializable interface
02:08 - and add any unimplemented methods
02:11 - so we should have this initialize method
02:13 - so that we can populate our list view
02:15 - with data
02:16 - so let's use some fxml injection to add
02:18 - our list view as well as our label
02:21 - so private list view we will list
02:24 - a generic data type of string because
02:27 - we're going to be working with strings
02:28 - names of different food items my
02:32 - list view and we need our label
02:35 - at fxml private label
02:38 - my label now we'll need some data so
02:41 - let's create an array of strings
02:43 - string array we will call this food
02:46 - and let's populate this array with some
02:49 - different food items
02:50 - i like pizza i like sushi
02:54 - and i like ramen but pick whatever food
02:56 - that you want
02:57 - also i'm going to create a separate
02:59 - string variable to hold the current
03:01 - food item let's say string current
03:04 - food and we don't need to assign this
03:06 - anything we will declare it but not
03:08 - assign it quite yet
03:09 - at this point we're going to add our
03:11 - collection our array of strings
03:13 - to our list view here's how so we will
03:16 - type
03:17 - my list view followed by the get
03:20 - items method followed by the
03:24 - add or add all method and we can add a
03:27 - collection
03:28 - the collection that we're going to add
03:29 - is our array
03:31 - so let's type add all and then pass in
03:33 - your array of food
03:35 - now our next step is that when we select
03:37 - one of these food items
03:38 - let's change the text of our label but
03:40 - we need to add a change
03:41 - listener to our list view here's how we
03:44 - can do that
03:45 - type my list view again
03:48 - dot get selection
03:52 - mode dot then
03:55 - selected
03:58 - item property
04:01 - followed by dot add listener
04:04 - and we're going to pass in an anonymous
04:06 - change listener
04:08 - new change listener
04:12 - list a generic type of string
04:15 - followed by a set of parenthesis and
04:17 - then curly braces
04:19 - and we're going to create an anonymous
04:21 - change listener and we need to add any
04:23 - unimplemented methods
04:24 - so after adding any unimplemented
04:26 - methods we should
04:28 - have a changed method within our
04:30 - anonymous change listener
04:31 - so whenever we select one of these items
04:33 - from our list view
04:35 - we will call this changed method so what
04:38 - do we want to do exactly
04:39 - let's set our string of current food
04:42 - equal to my list
04:46 - view dot get selection model
04:51 - dot get selected item
04:56 - so current food will store the name of
04:59 - the item that we selected
05:00 - and we're going to take my label dot set
05:04 - text and pass in our current
05:07 - food item and this should work
05:13 - so select a food pizza sushi
05:16 - ramen in conclusion a list view displays
05:19 - a horizontal or
05:20 - vertical list of items that a user may
05:23 - select
05:24 - if you would like a copy of all this
05:25 - code i will post this to the comments
05:27 - section down below
05:28 - but yeah those are list views in javafx