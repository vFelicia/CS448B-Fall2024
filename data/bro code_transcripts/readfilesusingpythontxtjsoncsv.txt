00:00 - what's going on everybody today I'm
00:01 - going to show you how we can read files
00:03 - using python we'll cover plain text Json
00:06 - and CSV files in the previous topic we
00:09 - have created some sample files to work
00:11 - with here is my plain text
00:14 - file my Json
00:17 - file and my CSV file they're all named
00:21 - input they each have a different file
00:24 - extension for convenience I will create
00:26 - a variable of file
00:28 - path we can list a relative file path or
00:31 - an absolute file path I'll use an
00:34 - absolute file path I'm going to right
00:36 - click on the file I would like to read
00:38 - go to properties copy the
00:42 - location then paste it then add the file
00:45 - name including the extension input and
00:48 - this is a txt
00:50 - file within the context of a string
00:53 - backlashes or Escape sequences for
00:56 - special characters we would either need
00:58 - to use double backs slashes or a forward
01:02 - slash here is the absolute file path to
01:05 - the file I would like to
01:07 - read to read this file I will add a wi
01:11 - block wi is a statement it's going to
01:14 - wrap a block of code within a context
01:16 - manager and it'll close a file if we
01:19 - open it it is good practice to close a
01:21 - file if you do open it if you don't it
01:24 - can lead to unexpected Behavior we will
01:26 - use the open function the open function
01:29 - has two arguments our file
01:32 - path and a
01:34 - mode to read a file we'll set the mode
01:37 - to be R for
01:39 - read the open function is going to
01:41 - return a file object which we will give
01:44 - a nickname of
01:46 - file as
01:49 - file when we read our file object it's
01:52 - going to return one long string which we
01:55 - will assign to a variable named content
01:58 - content equals file use the read method
02:02 - and assign it to this
02:04 - variable then I'm going to print the
02:07 - content print our content the content of
02:10 - the file here's the
02:13 - result that is the content of my file I
02:16 - like pizza it's really
02:20 - good let's say we can't find this file
02:23 - perhaps I forget the file
02:25 - extension we'll run into a file not
02:28 - found error this this will interrupt our
02:30 - program we can catch exceptions when
02:33 - they happen any dangerous code that may
02:35 - cause an exception we can wrap within a
02:38 - tri
02:39 - block if there's an exception we will
02:42 - catch them by stating accept the name
02:46 - the exception in this case File not
02:48 - found error instead of our program being
02:51 - interrupted let's take a different
02:53 - course of action we will print that file
02:58 - was not found found let's try this
03:03 - again that file was not found at least
03:07 - our program isn't being
03:08 - interrupted let's add the file extension
03:11 - back what if we don't have permission to
03:13 - read this
03:15 - file to demonstrate that I'm going to
03:17 - right click on that file go to
03:20 - properties go to
03:22 - security edit the
03:25 - permissions I will deny any sort of
03:28 - control I will attempt to read this file
03:31 - and we get a permission error permission
03:33 - denied we could handle this exception as
03:37 - well if we encounter a permission error
03:41 - I will print the
03:43 - following you do not have
03:47 - permission to read that file let's run
03:52 - this again you do not have permission to
03:54 - read that
03:56 - file those are a few exceptions we can
03:58 - handle in case they appear file not
04:00 - found errors and permission errors let's
04:03 - say we would like to read a Json file we
04:06 - will need the help of the Json module I
04:08 - will import the Json module at the top
04:11 - of my
04:12 - program I need to get the file path of
04:15 - this Json
04:16 - file it's pretty much the same as before
04:19 - in this
04:22 - case the file extension is a Json file
04:27 - there's only one change we're going to
04:28 - make we will assign our variable of
04:31 - content equal to access the Json module
04:36 - use the load method and load our file
04:40 - and that should read the contents of my
04:42 - file here's my Json file name SpongeBob
04:46 - ag30 job
04:49 - cook with the data of your Json file you
04:52 - could access a value given a key I will
04:56 - access our content by its key of name
05:00 - that will return the value of
05:02 - SpongeBob age
05:05 - 30
05:07 - job
05:08 - cook now here's how to read a CSV file
05:12 - we will import the CSV
05:14 - module the file extension is going to be
05:17 - CSV again this is on my desktop in the
05:19 - same location as the previous files my
05:23 - content will equal access the CSV
05:26 - module access the reader method and pass
05:30 - in our
05:32 - file here's the content currently we're
05:35 - given a memory
05:37 - address with the CSV file what we need
05:40 - to do is read the CSV file line by line
05:44 - all of the data is within a collection
05:46 - which we need to iterate
05:49 - over so to do that we're going to create
05:52 - a for Loop for every line in my content
05:57 - I will print each line
06:02 - that's much better the format resembles
06:05 - a spreadsheet like an Excel spreadsheet
06:08 - there's
06:11 - rows and
06:14 - columns to get a specified column we can
06:17 - access an
06:18 - index in my example our line at index of
06:22 - zero would give me the First Column name
06:25 - SpongeBob Patrick Sandy
06:30 - the next index would be all the ages of
06:32 - each person 30 35
06:35 - 27 and index 2 would be the job
06:38 - positions cook unemployed and
06:42 - scientist if you need a specific column
06:45 - of data from a CSV file you can use an
06:47 - index as one possibility all right
06:50 - everybody so those are a few ways in
06:52 - which we can read files using python