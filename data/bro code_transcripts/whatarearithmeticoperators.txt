00:02 - all right everybody welcome we are going
00:04 - to discuss arithmetic operators
00:05 - arithmetic operators return the result
00:08 - of a specific arithmetic operation such
00:10 - as addition subtraction multiplication
00:13 - and division let's say we have 20
00:15 - students int
00:16 - students equals 20. if a new student
00:19 - joins our class we would like to add one
00:21 - student well if we're working with the
00:23 - variable we could say students equals
00:26 - whatever students is plus one then we
00:29 - could display this
00:30 - standard output i will display
00:33 - students the current number of students
00:35 - that we have
00:37 - are 21. there is a shorthand way of
00:39 - writing this too in place of saying
00:41 - students equal students plus one we
00:43 - could shorten this to
00:45 - students plus equals one that would do
00:48 - the same thing
00:50 - 21 if we need to add two students
00:53 - this would be students equal students
00:56 - plus two
00:57 - or students plus equals 2.
01:01 - then we have 22 students if you need to
01:03 - add 1 to a variable you could also use
01:06 - the increment operator this is another
01:08 - option and the preferred way if you only
01:10 - need to add one you would say
01:13 - students plus plus
01:15 - we now have 21 students you tend to see
01:18 - this in a lot of loops which we'll cover
01:20 - later okay now we have subtraction
01:23 - students equal students minus 1.
01:27 - there are now 19 students
01:30 - we could shorten this to
01:32 - students
01:33 - minus equals 1.
01:36 - there are 19 students if you need to
01:38 - subtract 2 we could say either students
01:40 - equals students minus 2 or
01:43 - students minus equals 2.
01:46 - that would do the same thing
01:48 - there are 18 students another option is
01:50 - the decrement operator if you need to
01:52 - decrement a variable by 1 you would say
01:55 - students minus minus
01:58 - this only subtracts 1 from a variable
02:01 - there are 19 students so that's
02:03 - subtraction to use multiplication you
02:06 - use an asterisk i'm going to double the
02:08 - amount of students that we have
02:10 - students equals students times 2
02:15 - there are 40 students
02:17 - or we could shorten this to
02:20 - students
02:21 - times equals 2
02:23 - and again there are 40 students
02:26 - for division you use a forward slash
02:30 - i'm going to divide our class in half
02:32 - students equal students divided by two
02:37 - there are ten students
02:39 - the shorthand way is students
02:42 - divided by equals two
02:45 - there are ten students now check this
02:48 - out we have twenty students what if i
02:50 - divide students by 3
02:55 - we're working with an int variable so
02:57 - this variable can't hold any decimal
02:58 - portion 20 divided by 3 that is 6. so
03:03 - any decimal portion is lost it's
03:05 - truncated
03:06 - but if we change students to be a double
03:09 - well then that decimal portion is
03:11 - retained
03:11 - 6.66 repeating students if you need the
03:14 - remainder of any division you can use
03:16 - the modulus operator let's create a new
03:18 - variable int remainder
03:21 - equals students
03:23 - modulus 2. we'll divide our group of 20
03:26 - students into groups of two then i'll
03:28 - display the remainder
03:30 - okay 20 divides by two evenly so there's
03:32 - no remainder but what if we divide
03:34 - students by three and get the remainder
03:37 - our class of students is being divided
03:39 - into groups of three for maybe like a
03:41 - project but 20 doesn't divide by three
03:43 - evenly therefore our remainder is 2.
03:46 - there will be six groups of three
03:48 - students and one group of two students
03:50 - now using the modulus operator is a
03:52 - great way to find out if a number is
03:54 - even or odd take some value or variable
03:56 - you would like to check modulus 2. if
03:59 - that number divides by 2 evenly where
04:01 - the remainder is 0 well it's even if the
04:04 - remainder is 1 well then it's an odd
04:06 - number
04:07 - 21 doesn't divide by 2 evenly so that is
04:10 - the modulus operator it gives you the
04:11 - remainder of any division these
04:13 - arithmetic operators have an order of
04:15 - precedence we resolve any arithmetic
04:17 - operations that are first within
04:19 - parentheses
04:20 - then multiplication and division then
04:23 - lastly addition and subtraction
04:25 - perhaps we have this
04:26 - formula students equals
04:30 - six
04:32 - minus five plus four
04:36 - times three divided by two so what do we
04:39 - solve first in this equation we would
04:41 - check any parentheses first which there
04:43 - aren't any of
04:45 - then we resolve any multiplication and
04:47 - division
04:48 - so let's go through this so we have some
04:50 - multiplication here we would resolve 4
04:52 - times 3 first that is 12
04:54 - then we have some division 12 divided by
04:56 - 2 is 6
04:58 - then any addition and subtraction
05:01 - 6 minus 5 is 1
05:03 - 1 plus 6 is 7
05:05 - and let's check to see if that's right
05:07 - so students should be
05:09 - yep students is seven now you can force
05:12 - operator precedence by surrounding some
05:14 - part of your equation with parentheses
05:16 - i'll surround this part of the equation
05:18 - with the set of parentheses the new
05:20 - result is negative seven
05:22 - well yeah everybody those are some basic
05:24 - arithmetic operators they return the
05:27 - result of a specific arithmetic
05:29 - operation hey if you would like a copy
05:30 - of this code i'll post this in the
05:32 - comments section down below and pin it
05:33 - to the top and well yeah those are some
05:36 - basic arithmetic operators in c plus