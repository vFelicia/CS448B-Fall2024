00:00 - hey everybody in today's video I got to
00:01 - explain Mouse events in JavaScript so
00:04 - sit back relax and enjoy the show the
00:07 - first thing I need to discuss is event
00:08 - listeners an event listener listens for
00:11 - specific events to create interactive
00:14 - web pages a few types of events we'll
00:16 - discuss are click events when we click
00:18 - on something Mouse over is when we hover
00:20 - over something and mouse out is when
00:22 - we're hovering over something and then
00:24 - leave that element to add an event
00:25 - listener you'll use the add event
00:27 - listener method pass in an event type
00:30 - including but not limited to this could
00:32 - be clicking on something hovering over
00:35 - something or leaving the confines of an
00:36 - element and then a call back to a
00:38 - function what do you want to do when you
00:40 - interact with something for example I
00:43 - could use the click event and then
00:45 - change the color of something when I
00:47 - click on it going to our HTML file I
00:49 - will create a development for a box the
00:53 - ID of this development will be my box
00:56 - the text on the box will be click me
01:00 - then for fun I'll add an emoji because I
01:03 - like emojis let's apply some CSS styling
01:06 - cuz it's kind of small let's select the
01:08 - ID of my box change the background
01:12 - color to light green or some other color
01:15 - of you're choosing set a width of 300
01:20 - pixels a height of 300
01:23 - pixels I'll increase the font size to
01:27 - something large like 4 5
01:30 - RM I'll set the font weight to be
01:35 - bold I'll use flexbox display
01:39 - Flex align items in the
01:43 - center and text align
01:48 - center that is good enough for now be
01:50 - sure to save everything we're going to
01:52 - select the ID of my box we'll store that
01:55 - as a constant const my box equals we'll
01:59 - need to select it by accessing the Dom
02:02 - document. getet element by ID I will
02:06 - select the ID of my box and then we can
02:10 - work with it easily we'll take my box
02:14 - add an event listener that's a built-in
02:16 - method my box. add event
02:21 - listener we need to pass in an event
02:23 - type and a call back to a function I
02:26 - want to do something when I click on
02:28 - this box the event type is going to be
02:31 - click and now we need to call back to a
02:34 - function we'll Define a function to
02:36 - change the background
02:37 - color function change color there's
02:42 - going to be one parameter an event then
02:45 - we will pass in a call back to change
02:47 - color now the event parameter event is
02:50 - an object it's provided to us
02:52 - automatically by the web browser when
02:55 - something happens when an event occurs
02:57 - like when I click on something event is
02:59 - an object that contains information
03:01 - about something that happens that event
03:04 - for this demonstration temporarily I'm
03:06 - going to console.log my event so let's
03:10 - click on the box then go to
03:13 - inspect console and here's my event when
03:17 - we clicked on that box the web browser
03:19 - provided us with an event object it's a
03:22 - pointer event this object contains
03:25 - details about what happened
03:28 - exactly for example we have the target
03:31 - what did we click on WE clicked on the
03:33 - div element with an ID of my box and
03:35 - here are all the properties and methods
03:36 - of that box that's the target we have a
03:39 - Tim stamp of when the click occurred the
03:42 - type of the event click which matches up
03:45 - with the event type and coordinates of
03:47 - where we clicked on the
03:49 - screen event is an object that's going
03:51 - to be provided to us through the web
03:53 - browser automatically we don't need to
03:55 - explicitly pass in an event object with
03:58 - this call back it's provided to us
04:00 - behind the
04:00 - scenes I'm going to change the
04:02 - background color of our box when we
04:04 - click on it we will access our event
04:07 - object that's provided to us access the
04:09 - target the target is what we clicked on
04:12 - there's information about our Target
04:14 - within the event object then I will take
04:17 - the style of the target set the
04:19 - background color property to be a
04:21 - different color I will set it to be red
04:24 - but I prefer the shade of tomato because
04:26 - I like that color now when I click on
04:29 - the butt
04:30 - the background color
04:32 - changes but why stop there let's also
04:34 - change the text content I'll add one
04:37 - more statement to the change color
04:38 - function again we will access our event
04:42 - access its Target access the text
04:45 - content of the target to be
04:49 - ouch and then I'll add an
04:53 - emoji that's a good
04:56 - one when I click on this box not only
04:59 - does the color change but the text too
05:03 - now you don't necessarily need to pass
05:04 - in a call back you can also pass in an
05:07 - anonymous function or even an arrow
05:09 - function so let's copy these two lines
05:11 - of code we'll reuse it later we no
05:14 - longer need to define a
05:16 - function within the event listener
05:18 - instead of passing in a call back we'll
05:20 - pass in an anonymous
05:23 - function we have one parameter an event
05:27 - that's going to be provided to us when
05:29 - we click on my box do this change the
05:32 - background color and the
05:34 - text now we could even use an arrow
05:37 - function I have a preference for Arrow
05:38 - functions because they're concise with
05:40 - their syntax with an arrow function we
05:42 - have one parameter an event if you have
05:45 - a single parameter you don't need to
05:47 - enclose it within a set of
05:49 - parentheses we have one parameter of
05:51 - event then do this do all this code and
05:55 - that should still work when I click on
05:57 - the box the color changes as well as the
06:00 - text so when you add an event listener
06:03 - you can pass in a call back or an
06:05 - anonymous
06:07 - function or an arrow function it depends
06:11 - on what your preferences are personally
06:13 - I like Arrow functions we have a few
06:15 - other Mouse events to discuss Mouse over
06:18 - and mouse out Mouse over is when you
06:20 - hover your cursor over something so
06:23 - let's take my
06:24 - box add a new event listener an element
06:27 - can have more than one event listener
06:30 - add event
06:32 - listener we have an event and a call
06:35 - back as arguments the event is going to
06:38 - be Mouse over for the call back I'll use
06:43 - an arrow
06:45 - function we have one parameter of event
06:48 - Arrow do this let's copy these two lines
06:52 - of code I'll change the background color
06:55 - to be yellow like it's a warning and the
06:58 - text cont content to be don't do
07:03 - it that's a good face when I hover my
07:07 - cursor over this element the background
07:09 - color and the text is going to
07:10 - change the event that occurred is mouse
07:13 - over it's when you hover your cursor
07:15 - over something Mouse out is when you
07:17 - leave a specified element so when I
07:19 - leave the box I would like to change
07:22 - back the background color and the text
07:24 - content We'll add an additional event
07:26 - listener my box add
07:30 - event
07:32 - listener the event type is going to be
07:35 - Mouse out then I'll write an arrow
07:38 - function we're provided with an event
07:41 - Arrow do this let's change the
07:44 - background color and the text content I
07:46 - will revert the background color to be
07:48 - light
07:49 - green and the text to be click
07:53 - me whatever the text content originally
07:56 - was when I hovered my cursor over this
07:58 - element
08:00 - we get that Mouse over event but when I
08:02 - leave we get the mouse out
08:04 - event when I click on this box we get
08:08 - the click event when I leave the Box we
08:11 - get the mouse out event again to reset
08:13 - it essentially for the last part of this
08:15 - demonstration we're going to create a
08:16 - button when we click or interact with
08:19 - the button then we'll change a separate
08:21 - element this box so within our HTML file
08:24 - let's create a
08:26 - button with text of click
08:30 - me I will give this button a unique ID
08:33 - of my
08:35 - button and I'll increase the font size
08:37 - with CSS we will select my
08:40 - button I will increase the font size to
08:44 - be three
08:46 - RM just so it's not so
08:49 - small let's select the ID of my
08:53 - button const my button equals document.
08:57 - getet element by idid
08:59 - my button I'll add the event listener to
09:03 - my button not my
09:06 - box if I was to interact with this
09:08 - button with the way it is now when I
09:10 - hover over the button we've created a
09:13 - mouseover event and the button changes
09:15 - when I click on the button we're
09:17 - changing the HTML and CSS of the button
09:20 - because the button is what has the event
09:22 - listener we're selecting the target of
09:24 - the event to change which is the button
09:26 - that is what we interacted with when we
09:28 - interact with our box it doesn't do
09:29 - anything it doesn't have any event
09:31 - listeners the button does though we're
09:33 - going to replace the event Target with
09:35 - my box when we interact with the button
09:39 - change the background color and the text
09:41 - content of my
09:45 - box so then when I hover over the button
09:48 - the Box changes when I leave it reverts
09:51 - back to normal when I click on the
09:53 - button then we've created a click event
09:56 - all right everybody so that is an
09:57 - introduction to Mouse related events
09:59 - you'll need to add an event listener an
10:01 - event listener listens for specific
10:03 - events to create interactive web pages a
10:06 - few events we've covered include click
10:08 - Mouse over and mouse out to add an event
10:11 - listener take an element use the
10:13 - built-in ad event listener method pass
10:16 - in an event type and a call back
10:18 - Anonymous function or an arrow function
10:20 - to do something and well everybody those
10:22 - are Mouse related events in
10:28 - JavaScript