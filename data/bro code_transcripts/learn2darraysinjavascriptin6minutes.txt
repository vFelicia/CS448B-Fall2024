00:00 - all right before we begin everybody just
00:01 - so you know this is an optional lesson
00:04 - if you're ever interested in making any
00:05 - sort of games in JavaScript I would
00:08 - recommend learning about 2D arrays but
00:10 - there are a few other uses too a 2d
00:12 - array also known as a multi-dimensional
00:15 - array stores a matrix of data in rows
00:18 - and columns it's useful for games such
00:21 - as tic-tac-toe chess Sudoku or any game
00:24 - where you need a matrix or grid of data
00:27 - to keep track of spaces mostly it can
00:29 - also be us used in spreadsheets think of
00:31 - excel Excel has rows and columns or
00:34 - representing images an image is a matrix
00:37 - of pixels our 2D array is going to look
00:39 - something like this each row is an
00:42 - individual array we're going to end up
00:44 - storing all of these rows within an
00:49 - array let's create one let's name our
00:52 - grid this will be a constant but it
00:55 - doesn't need to be Matrix we'll create a
00:58 - matrix of data our 2D array is going to
01:01 - store individual arrays in each
01:04 - element our first array let's say we
01:06 - have the numbers 1 through
01:09 - three each row should be comma separated
01:13 - the next row will be four five and
01:16 - six then 78
01:21 - 9 so what we got to do is store all of
01:23 - these rows within an
01:26 - array and there's our 2D array to give
01:30 - you a better visualization I'm going to
01:32 - place each of these rows on a new
01:36 - line there hopefully that makes sense
01:39 - our Matrix is a 2d array each inner
01:42 - array represents a row each element
01:45 - within the inner arrays represent a
01:47 - column 1 147 would be the first 2 58
01:51 - would be the second 3 69 would be the
01:53 - third if we need to print the elements
01:55 - of this array here's one way in which we
01:57 - can do that let's use a for Loop this
02:00 - will be an enhanced for Loop let we need
02:04 - some sort of counter our counter is
02:05 - going to be Row for every row of our
02:10 - Matrix let's begin by
02:13 - console.log each row to see what we're
02:15 - working with each element in the 2D
02:18 - array is an array
02:20 - itself however I would like to print the
02:23 - individual
02:25 - values we're going to create a row
02:28 - string like let's use const row
02:32 - string we will join all of the elements
02:35 - together in each
02:37 - row row doj
02:41 - jooin join each element but separate
02:44 - them with a space
02:45 - character then console.log each row
02:49 - string there's our grid we have 1 2 3 4
02:52 - 5 6 7 8 N9 all arranged in rows and
02:56 - columns if you need to access an
02:58 - individual element within this Matrix
03:00 - you have to use two indices for example
03:04 - let's take our 2D array of
03:08 - Matrix the first index is for the row
03:12 - the second index is for the column you
03:14 - would think that Row one column one
03:16 - would be 1 one but arrays they start
03:19 - with zero the element at the first row
03:22 - at the First Column would have indices
03:25 - of 0
03:26 - 0 let's change that to be an X like
03:29 - we're playing Tic-Tac
03:31 - toe now we have x 2 3 so on and so forth
03:36 - for the element at Row one column
03:39 - 2 that would be again our Matrix with
03:43 - two
03:44 - indices row 0 column
03:48 - 1 let's set that to be an
03:51 - O there we are again our arrays start
03:54 - with zero Row one column 2 would
03:58 - translate to 0 1
04:00 - let's do this with the others I think we
04:02 - see a pattern now
04:05 - 02 Matrix at row 0 column 2 let's set
04:09 - that to be an
04:10 - X would be three now to move on to a
04:13 - different row we have to increment our
04:16 - first
04:17 - index Matrix Matrix at row two would be
04:22 - one column one would be zero let's set
04:26 - that to be an
04:28 - o that did change we're now within the
04:31 - second
04:34 - row 1 one would be row two column
04:40 - 2 row two column 3 would be 1
04:44 - two okay last row again to move down to
04:48 - the next row you got to increment the
04:49 - first
04:51 - index
04:53 - Matrix Row three would be
04:55 - two column 1 would be
04:58 - zero we'll set seven to be an
05:05 - X row three column 2 would be 2 1 that
05:09 - will be an
05:14 - O Row 3 column 3 would be 22 we'll set
05:18 - that to be X there we are with the
05:22 - length of your rows they don't
05:23 - necessarily need to be all uniform for
05:26 - example with my first row I'll add Z to
05:29 - the
05:30 - beginning so now we have 0 1 2
05:35 - 3 maybe I'll remove the last element in
05:38 - the last
05:39 - row where we just have
05:43 - 78 you can also mix and match data types
05:46 - let's add a new row our Matrix will
05:49 - represent a telephone number
05:52 - pad we need a new row I'll add an
05:56 - asterisk
05:58 - zero and a a pound
06:01 - sign there our Matrix represents a
06:04 - telephone number pad all right everybody
06:06 - so that's a 2d array it's a
06:09 - multi-dimensional array that stores a
06:11 - matrix of data in rows and columns it's
06:14 - useful for games spreadsheets or
06:16 - representing images we won't be using
06:18 - these again until we start making some
06:20 - games later on in the series and well
06:22 - everybody that is an introduction to 2D
06:24 - arrays and
06:28 - JavaScript