00:00 - hey what's going on everybody in this
00:02 - topic I'm going to explain variables and
00:04 - data types in python as well as give you
00:07 - a few useful tips and tricks at the end
00:09 - of this topic so why don't you sit back
00:11 - relax and enjoy the show
00:15 - let's talk about variables a variable is
00:18 - a reusable container for storing a value
00:20 - a variable behaves as if it were the
00:23 - value it contains think back to algebra
00:25 - class back in the day we have an
00:27 - equation that contains x x is some
00:30 - representation of a value wherever we
00:32 - use x it behaves as if it were a certain
00:35 - number that's kind of the same thing
00:36 - with programming now when we create a
00:38 - variable we would like to give a
00:39 - descriptive and unique name of what that
00:41 - variable contains suppose I'm working
00:43 - with a user's Edge I could declare a
00:46 - variable named age age equals then some
00:50 - value let's say my age is 21 not anymore
00:52 - but I like to think it still is guys I'm
00:54 - getting old I can use this variable age
00:56 - and it will behave as if it were the
00:59 - number 21. to print a variable you can
01:01 - place it within a print statement
01:03 - print age
01:05 - my age is 21. if you're printing a
01:08 - variable you don't need to put it within
01:10 - quotes
01:11 - because what we're doing then is
01:12 - literally printing the word age and not
01:15 - the variable if you need to display a
01:17 - variable along with some text such as
01:20 - you are age years old what we could do
01:24 - is shrink concatenation wherever you
01:26 - would like to include a variable let's
01:28 - say here where ages we can separate this
01:31 - line of text into different strings you
01:34 - are
01:36 - plus age plus the text years old
01:41 - so we do have an error here type error
01:43 - can only concatenate string not into
01:46 - Strings we can't add numbers to Strings
01:48 - directly we would need to do what is
01:50 - called typecasting to display a number
01:52 - along with subtext we would need to cast
01:55 - this variable which is a number into
01:57 - text a string to do that we can precede
02:00 - the variable name with s t r then
02:03 - surround the variable with a set of
02:05 - parentheses
02:07 - if I were to run this again this will
02:09 - display you are 21 years old but you do
02:13 - have to pay attention to your spaces I'm
02:15 - going to add a space after r as well as
02:18 - before the word years run this again you
02:22 - are 21 years old another way to display
02:24 - a variable along with some text is to
02:27 - separate the text and variables in two
02:29 - separate arguments
02:31 - print then write our text within quotes
02:35 - you
02:36 - you are
02:38 - wherever you would like to add a
02:39 - variable add a comma then the variable
02:42 - name if you have more text that follows
02:44 - add another comma
02:46 - then add some additional text you are
02:49 - age years old
02:54 - so what we've done is separated our
02:56 - strings and variables into different
02:58 - arguments each separated with a comma
03:00 - but if you separate your variables and
03:02 - text into separate arguments you'll
03:04 - include a space automatically so I'm
03:06 - going to get rid of the space after R
03:09 - and before the word ears
03:12 - so spacing is pretty important depending
03:14 - on which method you use these two print
03:17 - statements will output the same thing
03:18 - you are 21 years old the third way to
03:21 - print a variable along with some text
03:22 - and this is becoming the more popular
03:24 - way of doing things is to use what is
03:26 - called an F string
03:28 - print a set of quotes precede your
03:31 - quotes with f
03:33 - u r wherever you would like to insert a
03:36 - variable add a set of curly braces the
03:39 - curly braces are acting as a placeholder
03:42 - for a value or variable we will place
03:44 - our variable age within the curly braces
03:47 - so yeah those are three different ways
03:49 - to Output a variable along with some
03:51 - text as of the filming of this video
03:53 - fstrings are becoming much more popular
03:55 - for output for the rest of the series we
03:58 - will be using fstrings but you should
04:00 - still be aware of the existence of these
04:02 - other two methods as well I need to
04:05 - discuss different data types there's
04:07 - four basic data types in Python there's
04:09 - still more but these are four for
04:11 - beginners we have integers floats
04:14 - strings and booleans let's begin with
04:17 - integers
04:18 - we'll create three integer variables for
04:22 - example we have age
04:24 - another whole number could be maybe
04:26 - players or users you're not going to
04:29 - have half a player right
04:31 - or nine tenths of a player it's going to
04:33 - be a whole number you have one two three
04:36 - or more players all whole numbers then
04:39 - maybe quantity maybe somebody is buying
04:42 - something quantity equals five you
04:45 - wouldn't have like half a product right
04:47 - it would be a whole number
04:49 - then let's display some of these
04:51 - variables
04:52 - print we'll use fstrings because we like
04:55 - fstrings
04:57 - you
04:58 - are
05:00 - age years old this is the same from the
05:03 - previous example
05:05 - let's use players
05:08 - there are
05:12 - players
05:13 - than the word players
05:15 - online
05:17 - then quantity let's use this
05:22 - you would like to buy
05:26 - our variable quantity
05:30 - items
05:33 - let's run this
05:35 - you are 21 years old there are two
05:38 - players online you would like to buy
05:40 - five items
05:42 - so those are integers they're just whole
05:44 - numbers
05:46 - I'm going to turn these lines into
05:47 - comments and then we can continue
05:51 - let's move on to floats
05:54 - a float is a number that contains a
05:57 - decimal portion for example maybe a GPA
06:00 - that's usually a decimal
06:02 - my GPA is 3.2
06:06 - what about a distance this could be
06:08 - kilometers miles whatever
06:12 - 2.5 kilometers
06:15 - um price price could be afloat price
06:18 - equals 10.99
06:21 - let's display some of these
06:25 - let's print our GPA
06:27 - your GPA is
06:31 - GPA
06:34 - let's print distance
06:36 - you ran
06:40 - distance then I'll add km for kilometers
06:44 - print
06:49 - the price is
06:51 - I'm going to add a dollar sign
06:54 - then our placeholder with price
06:57 - and that should be good
06:59 - your GPA is 3.2 you ran 2.5 kilometers
07:03 - the price is 10.99 so those are floats
07:08 - they're numbers that contain a decimal
07:10 - portion even if the decimal had point
07:13 - zero it would still be considered a
07:15 - float whereas this would be an integer
07:17 - so those are floats I'm going to turn
07:19 - these lines into comments then we can
07:21 - move on now we have strings a string is
07:24 - just a series of text for example maybe
07:27 - a username name equals type in your
07:30 - first name it's just a series of
07:33 - characters those are strings how about
07:35 - food what's your favorite food I like
07:38 - pizza
07:39 - I'll add that to my variable food then
07:42 - what about an email email equals make up
07:45 - some email
07:46 - bro123 gmail.com
07:49 - now with strings they can contain
07:52 - numbers but we treat them differently
07:54 - than integers and floats integers and
07:57 - floats we can use with arithmetic
07:58 - equations here they're more or less just
08:00 - characters so a string is just a series
08:03 - of characters within quotes these can be
08:06 - single quotes or double quotes then
08:08 - let's display these for practice
08:11 - let's say
08:14 - hello
08:17 - our variable name
08:21 - you like our variable food
08:30 - your email
08:32 - is
08:34 - our email variable hello bro you like
08:37 - pizza your email is bro123 gmail.com so
08:42 - those are strings it's a series of text
08:45 - okay then lastly we have booleans a
08:48 - Boolean is either true or false it's
08:50 - binary it's kind of like a light switch
08:52 - a Boolean variable can have only one of
08:54 - two states true or false typically
08:57 - booleans are used internally within a
08:59 - program for example maybe we have a
09:01 - Boolean variable named online if
09:04 - somebody is online this can be set to
09:06 - true if they're offline it could be
09:08 - false let's set that to true
09:11 - what if something is for sale four sale
09:15 - if it's available we could say true if
09:18 - not it's false it only has two states
09:21 - then what about running is some process
09:24 - running running equals true or false
09:28 - then let's print these
09:30 - print
09:33 - what could we say with online
09:36 - are you online
09:41 - then let's print our variable online
09:46 - print
09:49 - is the
09:51 - item for sale
09:57 - for sale
10:02 - perhaps running refers to a game is the
10:04 - game running game running colon space
10:10 - our running variable
10:13 - so are you online true is the item for
10:16 - sale false game running true typically
10:19 - with booleans you use these internally
10:22 - it's not common to print them directly
10:24 - usually we would use these with if
10:27 - statements
10:28 - such as if then the Boolean if some
10:32 - process is running print the game is
10:36 - running
10:39 - else
10:41 - print
10:43 - the game is over
10:47 - I'm just going to turn these into
10:48 - comments
10:49 - so if running is true the game is
10:52 - running if it's false
10:54 - you would do something else the game is
10:56 - over but I'll discuss this more when we
10:58 - reach if statements you don't need to
11:00 - know them at this point in time just
11:01 - understand for now a Boolean is either
11:03 - true or false oh here's another thing a
11:07 - common mistake that people do with
11:08 - booleans is that they may put them
11:10 - within quotes
11:12 - you can see that the color scheme
11:14 - changed this is technically a string
11:16 - it's within quotes so that's a common
11:19 - mistake that people might make if you're
11:21 - writing a Boolean make sure it's not
11:22 - within quotes and the first letter is
11:25 - capital
11:26 - before I wrap things up I'm going to
11:28 - show you a few tips and tricks with
11:30 - variables suppose we have three
11:31 - variables x equals one y equals two Z
11:36 - equals three then I'll print these
11:38 - variables directly print X
11:41 - print why
11:44 - print Z this would result in one two
11:48 - three another possibility in place of
11:50 - assigning these variables on separate
11:52 - lines you could do so all on one line we
11:55 - could write X comma y comma Z equals one
12:01 - comma two comma three that would do the
12:03 - same thing and it only takes one line of
12:06 - code this is referred to as multiple
12:08 - assignment if you ever need to set
12:10 - multiple variables to the same value
12:12 - this is what you could do I need to set
12:16 - X Y and Z all to zero maybe they are
12:18 - coordinates or something
12:20 - what I would instead type is x equals y
12:24 - equals z equals zero or some other value
12:30 - so x y and z are all zero if I were to
12:33 - change this number to one well they all
12:36 - equal one that's how to set multiple
12:38 - variables to the same value variable one
12:41 - equals variable two equals however many
12:44 - more variables you have all right
12:46 - everybody those are variables a variable
12:48 - is a reusable container for storing a
12:51 - value a variable behaves as if it were
12:54 - the value it contains we discussed four
12:56 - data types integers which are whole
12:59 - numbers
13:00 - floats which are numbers that contain a
13:03 - decimal portion
13:04 - strings which are a series of text like
13:07 - a name or an email and booleans which
13:10 - are either true or false they're binary
13:13 - so yeah that's an introduction to
13:15 - variables in python in the comments
13:16 - section why don't you post four
13:18 - variables an integer a float a string
13:22 - and a Boolean try and think of a unique
13:24 - example that I didn't cover already so
13:26 - yeah those are variables in Python