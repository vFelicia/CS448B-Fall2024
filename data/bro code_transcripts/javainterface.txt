00:00 - hey what's going on everybody it's your
00:01 - bro hope you're doing well and in this
00:03 - video i'm going to teach you guys about
00:05 - interfaces in java so sit back relax
00:08 - and enjoy the show
00:11 - make sure you like comment and subscribe
00:15 - one like equals one prayer for the
00:17 - youtube algorithm
00:18 - well let's talk about interfaces think
00:21 - of interfaces
00:22 - as a template that can be applied to a
00:25 - class
00:26 - it's similar to inheritance but it
00:28 - specifies what a class
00:29 - has or must do classes can apply
00:32 - more than one interface so that's a key
00:35 - thing to take away from this
00:36 - whereas an inheritance is limited to
00:39 - just one direct
00:40 - superclass here's an example i have
00:43 - three additional classes
00:44 - i have a class called rabbit a class
00:47 - called hawk
00:47 - and a class called fish we're going to
00:50 - be creating some interfaces
00:51 - too for this example one called prey and
00:54 - another called predator
00:56 - and we're going to have some of these
00:57 - classes implement these interfaces
01:00 - depending on what the animal is
01:02 - so this is how to create an interface go
01:04 - to file
01:05 - new interface and let's call the first
01:08 - one prey
01:12 - click finish all right so we have an
01:15 - interface called pray
01:16 - public interface pray let's create
01:19 - another interface
01:21 - file new interface this will be
01:24 - predator
01:28 - okay so we have two interfaces prey and
01:30 - predator
01:31 - with interfaces you can declare
01:33 - variables normally like you can do with
01:35 - inheritance
01:36 - you can also declare some methods and
01:38 - you do not need to
01:40 - create a body for these methods so when
01:43 - a class
01:44 - is implementing one of these interfaces
01:46 - they need to
01:47 - implement and define what this method is
01:50 - going to do
01:51 - so let's begin with pre let's write just
01:53 - one method
01:54 - so what's a method that prey will do
01:56 - well pray flee from predators
01:58 - so let's create a method called flea
02:01 - this will be void flea and that's it we
02:05 - do not need a body
02:08 - so void flea that's it there is no body
02:11 - to this
02:12 - and let's say that our rabbit is going
02:14 - to use
02:15 - this interface now to implement an
02:17 - interface
02:18 - when you define the class just type
02:22 - implements then the name of the
02:24 - interface we would like to
02:26 - implement the prey interface
02:30 - implements prey so one thing with
02:33 - interfaces if you declare
02:35 - a method it works like an abstract
02:37 - method we need to define what this
02:39 - method is going to do
02:41 - so within the rabbit class we need to
02:43 - add any unimplemented methods
02:45 - so we're basically overriding this flea
02:48 - method so what do we want our
02:50 - rabbit to do when we call the flea
02:52 - method so maybe just a simple
02:54 - system.out.printline
02:56 - that states the rabbit
02:59 - is fleeing and let's test this let's
03:02 - create a rabbit object
03:04 - rabbit rabbit
03:08 - equals new rabbit
03:11 - and let's see if we can call that method
03:13 - rabbit dot
03:16 - flea
03:20 - there it is the rabbit is fleeing now
03:22 - let's apply
03:24 - the predator template well interface
03:27 - to the hawk class because hawks are
03:29 - predators
03:30 - they are very rarely prey well i could
03:33 - be wrong
03:34 - all right so public class hawk
03:38 - implements predator and we should
03:41 - probably create a method within predator
03:44 - for this example
03:45 - so if a animal is a predator they should
03:48 - have the ability to hunt
03:50 - so let's create a method called hunt
03:53 - void
03:53 - hunt and we do not need to declare a
03:56 - body
03:57 - so within our hawk class we need to add
04:00 - any
04:00 - unimplemented methods and define what
04:02 - this does within
04:04 - this implementation so let's say if
04:07 - the hawk object is going to use the
04:10 - hunts method
04:11 - we will display
04:14 - the hawk is hunting
04:19 - and let's create a hawk object this time
04:22 - so
04:22 - hawk hawk equals new
04:26 - hawk
04:36 - the hawk is hunting now since we're
04:39 - implementing the predator interface
04:42 - there is going to be no flea method for
04:45 - hawks because we're not using the prey
04:47 - interface we're using the predator
04:49 - interface so just to prove that we'll
04:52 - attempt to use hawk
04:53 - dot flea and it doesn't appear that
04:55 - there's a method for that
04:59 - yep method fleet is undefined for the
05:02 - type hawk
05:03 - all right now we can apply more than one
05:05 - interface to a class
05:06 - so with fish fish can be both prey and
05:08 - predators depending on their size
05:10 - bigger fish tend to eat smaller fish so
05:13 - let's add
05:14 - two templates two interfaces to our
05:16 - class fish
05:18 - and this is how to do that implements
05:21 - prey comma predators
05:24 - so we're applying both of these
05:27 - templates these interfaces to our class
05:30 - fish so we're implementing
05:32 - prey and predator but we need to add any
05:34 - unimplemented methods and we have two
05:37 - this time
05:37 - one hunt from the predator interface and
05:40 - another
05:41 - flea from the prey interface so let's
05:43 - define these
05:44 - so system.out.printline within hunt
05:47 - we'll just state
05:49 - that this fish is hunting
05:54 - smaller fish
05:57 - and with the flea method system that out
06:00 - top print line
06:02 - let's say this fish is
06:05 - fleeing from a larger
06:08 - fish and let's try this so let's create
06:11 - a fish object
06:13 - fish fish equals new fish
06:17 - fish dot hunt
06:22 - so our fish has a hunt method the fish
06:25 - is hunting smaller fish
06:26 - and it has a flea method fish dot flea
06:32 - the fish is fleeing from a larger fish
06:34 - so in conclusion
06:35 - an interface think of it like a template
06:38 - that can be
06:39 - applied to a class it's similar to
06:41 - inheritance but it specifies what a
06:43 - class has
06:44 - or must do and classes can apply more
06:47 - than one interface
06:48 - and we did that with our fish class it's
06:51 - implementing both the prey
06:53 - and the predator interfaces so it has
06:56 - access to both of these methods
06:58 - but it needs to actually implement these
07:01 - methods by overriding
07:02 - these methods so that's the basics of
07:05 - interfaces in java if you'd like a copy
07:08 - of all this code i will post all of this
07:10 - in the comments down below
07:11 - but yeah that's how interfaces work in
07:14 - java
07:16 - hey you yeah i'm talking to you if you
07:18 - learn something new
07:19 - then you can help me help you in three
07:22 - easy steps
07:23 - by smashing that like button drop a
07:26 - comment down below
07:27 - and subscribe if you'd like to become a
07:29 - fellow bro
07:31 - [Music]
07:50 - you