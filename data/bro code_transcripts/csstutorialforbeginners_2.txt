00:00 - hey it's your bro i hope you're doing
well and in this video i'm going to
00:03 - teach you guys all about css
so let's get into it
00:09 - so what is css css is an acronym for
cascading style sheets the purpose of
00:15 - css
is to customize the elements of a web
00:18 - page to be displayed
and we can even use css to style
00:22 - multiple pages at once by linking
separate independent html files to a
00:27 - single style sheet
so i've described our house analogy for
00:31 - building a web page in the past
but here it is one more time for any of
00:35 - you new people
so instead of building a web page
00:38 - imagine that we are constructing a house
while html adds structure to a page such
00:44 - as
flooring roofing walls support beams
00:48 - the skeletal structure of the webpage
css
00:52 - is like the decorations it's the styling
like
00:55 - paint furniture interior decorating
and javascript adds functionality to our
01:01 - house
we can include things like lighting
01:04 - plumbing
heating cooling basic utilities things
01:08 - that add
functionality to a house so this is a
01:11 - very good analogy i would say
for a web page but i'm a little biased
01:15 - because i made it up
there's three ways to include css for a
01:19 - web page
the first is inline which we actually
01:22 - have some experience with already from
the
01:24 - html tutorial it's really only useful
for adding a few
01:28 - custom elements internal we create a
pair of
01:32 - style elements in the head of our html
document useful for
01:36 - a single page website and external
in my opinion which is the best we can
01:41 - link a css file
to our html file to style one
01:46 - or all pages of a website useful if you
make a site with
01:50 - many many pages but don't worry i'll
give you a demonstration
01:54 - of how we can use each of these three so
there's a set of rules for declaring css
01:58 - properties first you'll want to identify
the
02:01 - html element that you want to customize
with css
02:05 - this is an internal and external example
this wouldn't apply for inline it's
02:11 - slightly different but i'll give you a
demonstration on that later
02:14 - so here we have a css property that we
want to change
02:18 - so we need to list this followed by a
colon and
02:22 - the value that we want to give this
property and then if you want to add
02:26 - multiple properties you just separate
each line
02:29 - with a semicolon so it's simple as that
if you have an html document ready then
02:35 - we can begin
let's create some sample text first
02:38 - let's create a title for this page
and perhaps we'll use an h1 header and i
02:43 - will type in the text
css demo and close this
02:49 - and let's create a sample paragraph if
you're using sublime text you can just
02:53 - type in
lorem and hit tab and i would like to
02:56 - surround this with a pair
of paragraph elements
03:02 - let's save reload all right that's good
enough so far
03:06 - so let me give you a demonstration of
the inline way of using css
03:11 - which we have a little bit of experience
with already now with the inline style
03:16 - of using css is that we can find an
element that we want to customize then
03:22 - we'll just type in
style equals double quotes and then we
03:26 - can place our css properties and values
between these double quotes for style
03:31 - let's say i want to change the
background color i will type in
03:35 - the property of background dash
color colon and then i can set a color
03:41 - you can either just
use the name of one or you can use a
03:44 - hexadecimal value
and let's say that i want this
03:47 - background to be
black well that would be all zeros then
03:52 - so
that would be six zeros all right now we
03:55 - can add another css property but we need
to separate each with a semicolon
04:00 - and i want to change the font color so
all text will have this colored font if
04:07 - it's within the body
so color then colon
04:11 - and then perhaps i'll just type in the
word green because i don't remember the
04:14 - hexadecimal
value for green so let's save this
04:18 - reload the page
all right the background color is black
04:22 - and the text is green just like we
wanted
04:24 - now you can adjust these values too
let's say that i want a slightly
04:29 - lighter shade of black well i'll
increase these
04:32 - hexadecimal values to perhaps all ones
i'll refresh the page
04:36 - and the background is like a grayish
black no it just got slightly brighter
04:40 - and i'll change the color to i believe a
green color would be
04:45 - let's see zero zero then perhaps
a a zero zero i think that should be
04:53 - green you can always look these up too
just go to hexadecimal color picker or
04:58 - just look that up in a web browser
so that's like a slightly brighter shade
05:03 - of green then
which i think is better so you can
05:06 - adjust these values however you want or
pick a custom color if there's a color
05:10 - theme you like
now for this example let's target a
05:13 - different html element instead of
targeting the entire body of the
05:17 - document so i'm just going to copy this
and place it somewhere else
05:20 - let's say that we want to place this
within our h1 header well we would just
05:24 - put it within the
opening header tag it's the same process
05:28 - as before really
for inline you just type in style equals
05:32 - then list the
css properties you want to change and
05:35 - give it a value
so let's save this reload and now what
05:38 - you see here
is that only anything between these
05:42 - specific
h1 header tags is affected by this css
05:45 - styling
leaving the rest of our web page clean
05:48 - and pristine then
now pay attention to this if we were to
05:52 - create another
pair of h1 header tags save this and
05:56 - reload the page you'll notice
that this pair of h1 header tags is
06:01 - left untouched basically by css and
that's because when you use
06:05 - inline css styling it only
effects anything between these two tags
06:11 - no more
no less and that's a perfect transition
06:14 - into our next topic which is internal
css styling
06:18 - so with internal css styling we can
target
06:22 - all instances of a certain tag that is
used
06:25 - and it will be affected by whatever css
properties we list there
06:30 - this is what we do for internal styling
you need to write
06:34 - a pair of style tags between your head
tags
06:37 - so we're going to write style and then
we'll need to close this as well
06:42 - all right next we need to list the html
element that we want to target with css
06:48 - let's say that we want to target any
instances
06:52 - of us using paragraphs so we're going to
write the
06:55 - html element that we want to target so
in this case it's p
06:59 - for the paragraph tags then we need a
set of curly brackets
07:03 - and within these curly brackets we're
going to list our css properties
07:08 - so let's say that we want to change the
background
07:12 - color and we will change that to
the hexadecimal value of all ones so six
07:19 - ones now if we want to add another
property
07:23 - we'll need a semicolon and we can add
another property on the next line so
07:27 - color and i liked the color zero zero
a zero zero which is green so now if we
07:34 - save this
reload the page now any instance of us
07:38 - using a pair of paragraph tags
will be affected by css now if i were to
07:44 - copy this paragraph and paste it
directly underneath
07:48 - then this paragraph would also be
affected
07:51 - now you can also target html elements
that have
07:54 - a particular id that you identify so
let's give each of these paragraphs
07:59 - their own id
attribute so i'll call this
08:04 - paragraph one and for the next paragraph
i will call this
08:09 - paragraph two all right
so let's save this and reload the page
08:15 - alright
so with our css styling we're still
08:19 - targeting all paragraphs but you can
also target
08:22 - something with a specific id so in order
to do that you just use
08:26 - the number symbol and then type in the
id that you want to target let's say
08:31 - that we want to target paragraph
one we'll use the number symbol and type
08:36 - in paragraph
one so let's save this reload now only
08:41 - paragraph 1
is targeted and it's leaving paragraph 2
08:45 - alone because it has a different id
and we cannot change this to paragraph 2
08:50 - and now only paragraph 2 is affected by
css
08:54 - leaving paragraph 1 not affected by css
then
08:58 - there's also a similar attribute to id
but it's called
09:01 - class and this is reserved for a unique
grouping for parts of your web page so
09:08 - for our h1 header let's create a class
and perhaps we'll call this maybe top
09:14 - like the top of the web page
and maybe we'll throw in i guess uh the
09:19 - first paragraph
within this class as well alright so now
09:24 - we can actually target an entire class
but you need to
09:27 - put a dot here than the name of the
class so we want to target anything
09:32 - with the class of top so let's save this
reload and now our internal css
09:39 - is targeting anything with the class of
top then so that's useful if you want to
09:45 - target a specific
section of your web page and it includes
09:49 - many different
types of elements then and you can take
09:52 - this a step further too
although this is a little more complex
09:56 - you can
list a specific html element and you can
10:00 - have it
target something within a certain class
10:04 - right here we typed in
p dot top we want to target
10:09 - any paragraph tag that also falls
within the top class so what ends up
10:15 - happening
is that it only targets this paragraph
10:19 - with our css we're only targeting
this specific paragraph because unlike
10:24 - this paragraph
it has this class of top then which we
10:27 - listed
as a target any paragraph tag that
10:32 - has the class of top and one other trick
available to you
10:35 - is that if you want to have multiple
html elements with these same exact
10:40 - properties
you can just list all of them but you
10:42 - have to separate each element with a
comma
10:45 - let's say that we want to target any
instances of h1 tags
10:49 - as well as paragraph tags we would just
list these here
10:53 - separate each that you want to add with
a comma so
10:56 - this will target all h1 tags and
paragraph tags
11:00 - and last but not least is the external
method of css styling
11:05 - so we're actually going to create a
separate css
11:09 - file where we're going to list all the
different
11:12 - elements that we want to target and the
css properties that we want to apply
11:16 - so if you're using sublime text you can
just go to file
11:20 - new file and i'm immediately going to
save this
11:23 - so file save as name this whatever you
want
11:27 - you can place this within the same
folder that contains the web page you're
11:31 - working on
if it's in a different location you just
11:33 - have to know the file path
and you can name this whatever you want
11:37 - i'll just call it
maybe something simple as style but you
11:40 - have to make sure it's
a css file so i'm just going to add dot
11:45 - css otherwise you can always change the
save as type too
11:49 - alright and now it's the same process as
before with internal styling
11:54 - but we don't actually need to include
those pairs of style tags we can just
11:58 - list
all the html elements that we want to
12:01 - target let's say that we want to target
any
12:04 - h1 tags we'll just type in that there
and then use a set of curly brackets
12:08 - and then we list all of our css
properties here so let's change the
12:12 - background color to
whatever we want i liked the color
12:17 - one one one one one one that was like a
lighter shade of black as well as the
12:24 - font color and i liked the color
zero zero a zero zero all right
12:30 - and then let's do the same thing for
the paragraph tags perhaps i'll choose a
12:37 - slightly different color though for
the font color um maybe let's make this
12:43 - a brighter green so that's
zero zero maybe ff00
12:48 - okay now we'll want to link our web page
to this css file so what we're going to
12:55 - do
between the head tags is use this link
12:59 - tag
and there's a few attributes that we
13:01 - need to include within this link tag the
first
13:03 - is rel which is short for
relationship this states the
13:09 - relationship between
this document and the mentioned linked
13:13 - document
and we're going to type in style sheet
13:17 - all right next we're going to type in
the type attribute and this specifies
13:24 - the media type
it's not required but it's considered
13:27 - good practice to include this
and we're just going to type text slash
13:32 - css
and then lastly we're going to type in
13:37 - href
which stands for hypertext reference
13:41 - we will place either the file name or
the file path or the url of the css
13:48 - file that we want to link here so
that was style dot css
13:55 - let's save this reload and boom
we have css now the external method of
14:01 - css styling is extremely useful
because all you would need to do is have
14:06 - a single
css file and all you would need is just
14:10 - to include
this link to each webpage that you want
14:14 - to style with
these css properties so imagine you have
14:18 - a website with like
50 different pages you wouldn't have to
14:23 - type all of this
in on every single page you can just
14:26 - link
each of these 50 pages to this one
14:30 - specific css file so that will conclude
this primer to
14:35 - css if you would like a copy of each of
these documents we worked on today
14:39 - i'll post all of this in the comments
down below and pin it to the top
14:44 - if you would like to take a look but
yeah that is your
14:47 - introductory lesson to css hey you
if you enjoyed this lesson then you can
14:52 - help me help
you in three easy steps by smashing that
14:57 - like button
drop a comment down below and subscribe
15:00 - if you'd like to become a fellow bro
15:24 - you