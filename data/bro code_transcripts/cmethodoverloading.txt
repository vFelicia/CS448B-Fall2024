00:00 - let's go bros okay it looks like we're
00:03 - talking about method overloading now
00:05 - methods they can actually share the same
00:07 - name
00:07 - but you need a different set of
00:09 - parameters a method's name
00:11 - plus its parameters equals a methods
00:14 - signature
00:15 - and methods must have a unique method
00:17 - signature
00:18 - let's take this method for example
00:20 - called multiply so this returns
00:22 - a times b so what if i would like to
00:24 - multiply more than two numbers
00:26 - like three numbers well this method is
00:29 - only set up for
00:30 - two arguments so one thing that we could
00:32 - do is method overload
00:34 - so we can use the same name like we can
00:36 - reuse it but we need
00:37 - different parameters so to solve this
00:39 - problem i'm going to create a second
00:41 - multiply method
00:42 - and this will have a different set of
00:44 - parameters giving it a different
00:46 - method signature so let's create a
00:49 - method that has
00:50 - three parameters a b and c return
00:53 - a times b times c and you can see that
00:57 - that problem went away and this should
00:58 - work so 2 times 3 times 4
01:01 - equals 24 and i can just keep on
01:04 - creating more methods
01:05 - so basically that's method overloading
01:07 - methods can share the same name
01:09 - but they need different parameters if
01:11 - they do share the same name
01:12 - a method's name plus its parameters
01:15 - equals the method signature
01:17 - and methods must have a unique signature
01:20 - so yeah that's method overloading if you
01:22 - would like a copy of this code i'll post
01:23 - this to the comments section down below
01:25 - if you can smash that like button drop a
01:27 - random comment down below and well yeah
01:29 - that's method overloading in c
01:31 - sharp