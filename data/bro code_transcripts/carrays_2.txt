00:00 - hey what's going on everybody it's you
00:02 - bro hope you're doing well
00:03 - and in this video i'm going to explain a
00:04 - raise in c sharp so
00:06 - sit back relax and enjoy the show
00:11 - all right everybody so arrays think of
00:13 - an array
00:14 - as a variable but it can store multiple
00:17 - values not just one so i have the string
00:20 - variable named car and it contains the
00:22 - name of a car bmw
00:24 - so what we could do is turn this
00:26 - variable into an array
00:27 - so it can store multiple values and this
00:30 - is all you have to do
00:31 - after the data type add a set of square
00:33 - brackets
00:34 - and then surround all of the values with
00:37 - a set of curly braces
00:39 - boom you got yourself an array and
00:40 - that's all there is to it so
00:42 - you can add multiple values to this
00:44 - array named car
00:45 - and actually i'm going to rename this as
00:47 - cars so it's plural so that we know that
00:49 - there's multiple values within here
00:52 - so let's separate each value with a
00:54 - comma
00:55 - so let's say we have a bmw a mustang
00:59 - as well as a corvette
01:02 - okay then let's display what cars is
01:05 - with a right line statement
01:06 - console the right line cars
01:11 - so this is what appears we have the data
01:13 - type of our array instead of the values
01:16 - within the array
01:17 - so if you need to access an element that
01:20 - is an item from an array
01:21 - you need to add after the variable name
01:23 - well the array name
01:25 - a set of square brackets and then the
01:27 - index
01:28 - so computers they always start with zero
01:30 - the first element would be
01:32 - zero so place that number within the
01:34 - square brackets
01:35 - cars at index zero and the first element
01:39 - would be bmw so let's display the other
01:42 - elements
01:43 - let's just copy what we have okay let's
01:46 - display
01:47 - cars at index one that will be this
01:49 - value because
01:50 - this is index zero
01:55 - and that is mustang
01:58 - then the next value cars at index
02:02 - two
02:05 - and that is corvette so let's take a
02:08 - look to see what happens if i attempt to
02:10 - access
02:10 - an element that doesn't exist so cars at
02:13 - index three so that would be something
02:16 - beyond corvette
02:22 - so we'll actually run into an error we
02:25 - ran into
02:26 - an index out of range exception so
02:29 - arrays do have a fixed
02:30 - size you have to make sure that you're
02:32 - not accessing an element that doesn't
02:33 - exist
02:34 - now if you need to update an element
02:37 - within an array all you have to do is
02:38 - type the array name
02:40 - in this case it would be cars straight
02:42 - brackets and list
02:43 - the index so if i need to change the
02:46 - first element within my array
02:48 - i will say my iran name cars at index
02:51 - zero
02:51 - equals let's place a tesla there instead
02:56 - and then run this
02:59 - so instead of a bmw in the first
03:01 - position
03:02 - index zero we have a tesla so if you
03:05 - need to
03:05 - access or update an element within an
03:07 - array type the array name
03:09 - straight brackets and then the index and
03:11 - remember that these only start with zero
03:13 - so what we've done here to display the
03:15 - elements of an array is that we wrote
03:18 - a writeline statement for each
03:19 - individual element
03:21 - so a much better approach would be to
03:23 - iterate over
03:24 - our array using a for loop and later on
03:27 - i'll explain the for each loop
03:29 - so to display all of the elements of our
03:31 - array easily
03:32 - let's create a for loop so we'll say
03:35 - into i
03:36 - equals 0 will continue this as long as i
03:39 - is less than now arrays have a length
03:42 - property so type the name of the array
03:44 - dot length then i
03:48 - plus plus to increment our index okay
03:51 - with our right line statement
03:53 - let's display cars straight brackets
03:56 - and the index is going to be i so i
04:00 - is 0 for the first iteration then during
04:02 - the next iteration it will be 1
04:04 - then 2 and then it will stop because
04:07 - this statement will no longer be true
04:09 - ok let's try this again
04:13 - so we have tesla mustang and corvette so
04:16 - an easy way to display the elements of
04:18 - an array
04:18 - is to write a for loop and set the index
04:21 - equal to i
04:23 - whatever you have right here but we'll
04:25 - have to discuss the
04:26 - for each loop coming up in a later video
04:28 - one thing that you should know with
04:30 - arrays
04:30 - is that they have a fixed size if you
04:32 - would like to declare an array and then
04:34 - assign values later
04:35 - you'll need to declare that array with a
04:37 - fixed size of how many elements you're
04:39 - planning to place within that array
04:41 - so that would look something like this
04:43 - let's turn this line into a comment
04:46 - and this is how to declare an array so
04:48 - type the
04:49 - data type square brackets the name of
04:52 - the array
04:53 - equals new the data type again square
04:56 - brackets
04:56 - and then within this set of square
04:58 - brackets we will list a size
05:01 - so if i plan on adding no more than
05:03 - three elements to this array
05:04 - i can place three here but you can make
05:07 - this a larger size
05:08 - to accommodate more values and if you
05:10 - don't use those values they'll just
05:11 - remain empty no big deal
05:13 - and this will work the same as before
05:16 - and then we'll just have to update some
05:17 - values
05:18 - so cars at index zero one and two
05:21 - zero is a tesla one is a mustang
05:24 - and two is a corvette and this will
05:27 - pretty much work the same as before
05:29 - instead of just in one step declaring
05:32 - and assigning an array
05:33 - we have done it in two steps we declared
05:35 - the array and then assigned some values
05:37 - later
05:38 - well okay then everybody that is an
05:40 - array it's a variable that can store
05:43 - multiple values and they have a fixed
05:45 - size so that's something you need to pay
05:47 - attention to
05:48 - if you would like a copy of this code i
05:50 - will post this to the comment section
05:52 - down below and well those are arrays in
05:54 - c
05:55 - sharp