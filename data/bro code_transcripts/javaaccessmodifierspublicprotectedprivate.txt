00:00 - hey what's going on everybody it's your
00:01 - bro hope you're doing well and in this
00:03 - video i'm going to teach you guys about
00:04 - different access modifiers in java so
00:07 - sit back
00:07 - relax and enjoy the show
00:11 - if you find this video helpful please
00:13 - remember to like
00:14 - comment and subscribe your support will
00:17 - help keep this channel running
00:19 - all right everyone so axis modifiers add
00:22 - a layer of security to our programs and
00:24 - there are three
00:25 - axis modifiers i'm going to cover
00:27 - besides the default which is none
00:30 - they are public protected and
00:33 - private so to best demonstrate this
00:35 - we're going to need some packages
00:37 - this time so within your project folder
00:40 - we're going to create
00:41 - two packages i do have a separate video
00:44 - on packages
00:45 - somewhere within this playlist so let's
00:47 - call this first package
00:48 - package one and all a package is is a
00:51 - collection of classes
00:52 - whereas a class is a collection of code
00:55 - so
00:56 - we'll call this package one and click
00:57 - finish we'll create a second package
01:00 - called
01:00 - package2 file new package and this will
01:03 - be
01:04 - package 2 and click finish
01:08 - we're going to create two classes within
01:10 - each package
01:11 - so let's click on package 1 then go to
01:13 - file
01:14 - new class we will call this class a and
01:17 - check public static void main
01:20 - let's create a second class called b
01:23 - file new class
01:24 - and this is also going to be within
01:26 - package one name
01:28 - is b then within package two we're going
01:31 - to create a class called
01:33 - c file new class c
01:36 - and lastly file new class
01:40 - make sure that this is within package
01:41 - two and this is going to be
01:43 - a sub this is going to be a subclass
01:46 - of the a class so a sub
01:50 - extends a in order for us to
01:53 - inherit everything from the class a from
01:56 - package one we'll need to include an
01:58 - import
01:59 - so import package1.a but i'm just going
02:02 - to change this to an asterisk to import
02:04 - everything
02:05 - so we'll include some imports within
02:07 - each of these classes
02:09 - so let's begin with class a we're going
02:11 - to import everything
02:13 - from package 2 class b
02:16 - import everything from package 2 class c
02:19 - import everything from package one this
02:21 - time
02:22 - so with our a sub class we can now
02:25 - inherit everything from the a class
02:28 - within package one
02:29 - so let's begin with axis modifiers and
02:32 - we're first going to discuss
02:33 - the default access modifier so i'm going
02:36 - to create a string variable within
02:38 - my c-class let's say that this is a
02:41 - string variable called
02:43 - default message
02:46 - and this will display or hold this is
02:50 - the default so currently i'm using
02:53 - no access modifier and i would like to
02:56 - see
02:57 - who or which classes can see this
03:00 - default message that has
03:01 - no access modifier the default access
03:04 - modifier let's head back to
03:05 - our a class within package one and let's
03:08 - create an instance of our c class
03:10 - well i suppose we also could have made
03:12 - this a static variable but
03:14 - hey too late so let's create an instance
03:17 - of the c class
03:18 - c c equals new c
03:21 - and i'm going to attempt to print the
03:25 - default message variable
03:26 - of the c class so c dot
03:30 - default message and i'm just going to
03:32 - copy this
03:33 - paste it all right but we're going to
03:35 - have a problem though and this states
03:37 - that the field
03:38 - c dot default message is not visible
03:41 - that's because anything using the
03:43 - default axis modifier
03:44 - is only visible to anything within the
03:47 - same package
03:48 - so anything within package 2 is going to
03:50 - be able to access this default message
03:53 - variable
03:53 - but anything within a different package
03:55 - such as our a class
03:57 - and b class cannot so let's attempt to
03:59 - do this again but within our a
04:01 - subclass so i'm going to copy
04:04 - everything i have here including the
04:06 - main method and just paste it within
04:08 - our a subclass so we now actually
04:12 - have access to our default message
04:15 - variable within the c class
04:17 - because these are both within the same
04:19 - package
04:20 - all right well for now i'm going to move
04:22 - this main method
04:23 - back to our a class within package one
04:26 - so let's create another variable and
04:28 - this is going to be a
04:30 - public variable so let's use the public
04:33 - modifier public this is going to be a
04:36 - string and let's call this
04:38 - public message and this will
04:41 - hold a string of this
04:44 - is public all right
04:47 - now i'm going to attempt to access this
04:50 - variable
04:51 - public message from the a class which is
04:54 - in
04:54 - package one so c dot
04:58 - and you can see it right here public
05:00 - message and this will display
05:02 - this is public that's because anything
05:05 - that uses
05:06 - the public keyword is visible to
05:09 - any package within the project folder so
05:12 - even though this is in package two
05:13 - it's still visible to anything within
05:15 - package one and a lot of other classes
05:17 - use this
05:18 - such as class c this is public a sub is
05:21 - public
05:22 - b is public and a is public now check
05:25 - this out we have created an instance of
05:27 - our c class within class a but what
05:30 - would happen
05:31 - if we removed the public axis modifier
05:34 - from the class definition of c
05:36 - well now currently c is using the
05:39 - default
05:40 - access modifier so our class c
05:43 - is only visible to classes within the
05:46 - same package
05:47 - as class c if we go back to class a
05:51 - while now class a can no longer create
05:53 - an instance of class c
05:55 - because the visibility of c has changed
05:58 - class a
05:58 - is within package 1 and we can no longer
06:01 - access class c
06:02 - because class c is only available to
06:05 - classes within the same
06:06 - package so let's change the visibility
06:09 - of c
06:10 - back to public so that's all what the
06:12 - public access modifier is
06:14 - anything that is public is available or
06:16 - visible to other packages
06:18 - our next access modifier is the
06:20 - protected
06:22 - access modifier so let's create a
06:24 - protected variable
06:26 - let's call this string protected message
06:30 - and let's change the string to this is
06:33 - protected
06:35 - here's how the protected axis modifier
06:37 - works so
06:38 - something that is protected is
06:40 - accessible
06:41 - to a different class in a different
06:43 - package
06:44 - as long as that class is a subclass
06:48 - of whatever class contains this
06:50 - protected member
06:51 - so for this example let's copy this line
06:54 - of our protected message
06:56 - and paste it within the a class we're
06:59 - going to take our main method
07:01 - cut it and then copy this within our a
07:04 - subclass let's
07:07 - remove this instance of our c class and
07:10 - we're going to create an instance of our
07:12 - a
07:12 - subclass so a sub let's call this a sub
07:15 - lower case equals new a sub
07:21 - so a sub extends a even though a
07:24 - is in a different package we have access
07:27 - to this protected variable because
07:30 - something that is protected
07:31 - is accessible to a different class in a
07:34 - different package
07:35 - as long as that class is a subclass
07:38 - of whatever class contains that
07:40 - protected member
07:42 - so we have an instance of our a subclass
07:44 - and we should be able to
07:46 - access this protected message variable
07:49 - so system.out.printline a
07:52 - sub dot and here is our protected
07:57 - message
07:58 - and it just states this is protected and
08:00 - our last access modifier
08:02 - is private so let's create a private
08:05 - variable
08:06 - private let's copy what we have for our
08:08 - default message
08:09 - and change default to private so this
08:12 - will be
08:13 - private message and the string will be
08:16 - this
08:17 - is private all right now let's copy all
08:20 - of this
08:21 - and paste it within class beep so
08:24 - something that is private is only
08:26 - visible to
08:27 - the class that it contains itself so
08:30 - only class b has access to this private
08:33 - message
08:34 - so i'm going to revert everything that i
08:37 - changed for class a so let's put this
08:39 - main method back in
08:41 - remove the main method from a sub and
08:44 - let's create an instance of
08:45 - our b class so b b
08:48 - equals new b and i would like to
08:52 - access this private message found within
08:55 - class b so system.out.printline
08:59 - b dot but it doesn't appear that we can
09:02 - actually see that
09:03 - so let's attempt to actually print this
09:06 - b dot private message
09:08 - but this states the field b private
09:10 - message is not visible
09:12 - that's because something that is private
09:15 - is only visible to the class that it
09:17 - contains and
09:18 - nothing else even if it's within the
09:20 - same package well that's the basics of
09:22 - access modifiers we have public
09:24 - protected the default access modifier
09:27 - and private
09:28 - so if you would like a copy of all this
09:30 - code i will post all of this in the
09:31 - comments down below
09:33 - but yeah that's the basics of access
09:35 - modifiers
09:36 - in java hey you yeah i'm talking to you
09:40 - if you learn something new then you can
09:42 - help me help you
09:44 - in three easy steps by smashing that
09:46 - like button
09:47 - drop a comment down below and subscribe
09:50 - if you'd like to become a fellow bro
10:06 - [Music]
10:12 - you