00:00 - hello what's going on everybody it's bro
00:02 - hope you're doing well and in this video
00:03 - i'm going to show you guys how we can
00:04 - assign a function to a variable in
00:06 - python
00:07 - so sit back relax and enjoy the show
00:12 - if i could have just a moment of your
00:14 - time please like comment
00:16 - and subscribe i would greatly appreciate
00:18 - it
00:20 - hey all in today's video i will show you
00:22 - all how we can assign a function to a
00:24 - variable
00:25 - this video will be a prerequisite for a
00:27 - few videos i have coming up regarding
00:28 - functions
00:29 - now let's say we have a function named
00:31 - hello and all we'll do is print the word
00:33 - hello
00:34 - and as you know to call this function
00:36 - you would type the name of the function
00:37 - followed by a set of parentheses
00:39 - and this will print the word hello the
00:41 - set of parentheses that comes after a
00:43 - function's name
00:44 - is the portion that will call the
00:45 - function if you were to remove
00:47 - that set of parentheses afterwards we
00:49 - would not in fact call that function
00:51 - now with python python will pretty much
00:54 - treat everything as objects including
00:55 - functions
00:56 - so there's something i want to show you
00:58 - guys if i was to print
00:59 - the name of my function hello what will
01:02 - be displayed
01:03 - is the memory address of this function
01:06 - this is the memory address of where this
01:08 - function is located within my computer's
01:10 - memory
01:10 - and it's in hexadecimal think of it like
01:12 - a street address such as
01:14 - 123 fake street this is the address of
01:16 - where this function is within my
01:18 - computer's memory
01:19 - and each time that i run this program
01:21 - this number can change as you can see it
01:23 - here
01:23 - now one thing that we could do we could
01:25 - assign this address to a variable
01:27 - let's say hi equals hello and be sure
01:29 - that you're not adding that set of
01:30 - parentheses afterwards because
01:32 - then you would be calling the hello
01:33 - function and returning the result to
01:35 - high
01:36 - so high equals hello no parentheses
01:39 - and if i was to print hi well
01:42 - the address of hello and hi will be at
01:44 - the same memory address
01:46 - both of these numbers are the same now
01:49 - what do you imagine would happen if i
01:50 - was to
01:51 - call the high function after we assign
01:53 - the memory address of hello
01:55 - to hi well then what we'll end up doing
01:57 - is calling the hello function
01:59 - even though we're listing that we would
02:00 - like to call the
02:02 - high function even though it doesn't
02:03 - exist so it's as if
02:05 - this hello function has two names you
02:07 - can either use hello
02:09 - or you can use hi and let me demonstrate
02:11 - that so you can call either
02:13 - hello hi or both for this example
02:16 - that's because we're assigning the
02:17 - memory address of hello to this variable
02:20 - of high
02:20 - so we could treat high as a function
02:22 - it's kind of like
02:23 - an alias where this function has two
02:25 - names now here's another demonstration
02:28 - let's say that we would like to assign
02:30 - our built-in print function to
02:32 - a variable so let's say maybe say
02:36 - say equals print and when i say print
02:39 - i'm referring to the print function and
02:41 - be sure you're not adding that set of
02:42 - parentheses afterwards
02:43 - now if i need to print something to the
02:45 - console window i can either use
02:47 - print like what we've previously been
02:49 - doing or i could use
02:51 - say because say has the same memory
02:53 - address let's say
02:54 - perhaps whoa i can't
02:58 - believe this works
03:02 - surprise face all right so
03:05 - we can call the print function by saying
03:07 - the word say
03:08 - say all of this text and this will print
03:11 - all of this text
03:11 - well say all of this text to the console
03:14 - window
03:15 - under normal circumstances i'm not sure
03:17 - why or when you would need to assign
03:19 - the print function to a variable but you
03:21 - can and well that's kind of cool so i
03:23 - thought i'd show you guys that
03:25 - so everybody that's how to assign a
03:27 - function to a variable
03:28 - like i said we'll be building upon this
03:30 - topic so you want to be sure that you
03:32 - understand this
03:33 - all right then well if you would like a
03:34 - copy of this code i will post all of
03:36 - this to the comment section down below
03:38 - but
03:38 - yeah that's how to assign a function to
03:41 - a variable
03:42 - in python