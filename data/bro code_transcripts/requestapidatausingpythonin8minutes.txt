00:00 - hey everybody in this video I'm going to
00:01 - show you how we can connect to an API
00:03 - using python in this demonstration we're
00:06 - going to connect to the Poke API to get
00:08 - some information on a Pokémon of our
00:10 - choosing I'm assuming that most of us
00:12 - are familiar with Pokémon I thought it'd
00:13 - be a fun example so according to this
00:16 - API we can look up a Pokémon such as
00:21 - Pikachu then we can get the stats for
00:24 - Pikachu such as Pikachu's
00:27 - name height ID number and all sorts of
00:31 - moves and abilities that a Pikachu may
00:33 - have we will need this URL but we'll
00:36 - handle that
00:39 - later our first step is that we're going
00:41 - to import the requests library to make
00:44 - an API request however when I run this I
00:48 - have a module not found error no module
00:51 - named requests requests is one package
00:54 - will have to install it's not normally
00:56 - included with the standard python
00:57 - download if I was to go to my folder go
01:01 - to my virtual environment library site
01:04 - packages there is no package for
01:07 - requests we'll have to download that
01:10 - with pycharm and vs code there is a
01:12 - built-in terminal that we can
01:13 - use to download the request package we
01:16 - can use pip pip is a package manager for
01:19 - python it's normally included when you
01:21 - install python we'll type pip install
01:26 - requests it'll take just a second
01:31 - and now we have that package of requests
01:32 - within our project
01:34 - folder if I run this
01:36 - again that error goes away process
01:39 - finished with exit Code Zero that means
01:42 - there were no
01:43 - errors going back to our Pokemon API we
01:46 - will need this
01:48 - URL let me zoom in so you can see
01:54 - it I'm going to store that as a base URL
01:58 - so it's easier to work with
02:01 - for convenience I'm going to create a
02:03 - function name get
02:07 - Pokemon
02:08 - info to get some info on a Pokémon we'll
02:11 - have to pass in the name of a Pokemon
02:13 - for now I'll write pass outside of this
02:17 - function let's say we have a variable of
02:20 - Pokemon
02:21 - name pick a
02:23 - Pokemon I will pick Pikachu for now then
02:27 - I will call the get Pokemon info
02:29 - function
02:30 - then pass in my Pokémon
02:32 - name remember that your parameters can
02:35 - be named different than your arguments
02:37 - when you send data to a function you can
02:39 - rename it to something else
02:41 - temporarily now that we have the name of
02:43 - the Pokémon we would like to look up we
02:45 - can complete the
02:47 - URL this will be an F
02:50 - string so with our Pokemon API we have
02:53 - the base URL followed by the word
02:56 - Pokemon then the name of a Pokemon
03:00 - so we have the basee URL I'll add a
03:03 - placeholder and insert it forward slash
03:06 - the word
03:07 - Pokemon slash the name of that
03:11 - Pokémon in this example it's going to be
03:14 - Pikachu we now have the full
03:17 - URL we'll access the request module use
03:21 - the get method and pass in that
03:24 - URL this method is going to return a
03:27 - response object which I will assign to
03:30 - response response is a response
03:33 - object and I'm just going to print our
03:36 - response just to see what we're working
03:40 - with here's our response object it has a
03:43 - status code this is an HTTP status code
03:46 - of 200 200 means the response was
03:50 - okay here's a few examples of response
03:53 - codes you're probably familiar with 404
03:57 - not found
04:00 - so we are looking for 200 the response
04:03 - is
04:05 - okay after we get our
04:08 - response I'll add an if
04:10 - statement if our response our response
04:14 - object does have an attribute of status
04:16 - code to read what the status code is if
04:19 - this status code is equal to 200 that
04:23 - means the response is okay but for now
04:26 - I'll write
04:27 - pass else I'm going to print the
04:30 - following else I'm going to print failed
04:35 - to retrieve
04:38 - data and I will print the status code of
04:41 - the response
04:45 - object so temporarily I will print data
04:49 - retrieved if it was
04:53 - successful I can't spell
04:56 - okay we have our data data was retrieved
05:01 - if our status code of our response
05:03 - object is equal to
05:05 - 200 I will take our response object and
05:09 - use the Json
05:10 - method our response is a Json format
05:14 - using this method we'll convert it to a
05:15 - python dictionary it will consist of key
05:18 - value pairs much like a Json file but
05:21 - I'm going to assign that to a variable
05:24 - of Pokemon data so it's easier to work
05:28 - with
05:31 - then I will print our Pokemon
05:37 - data so here's the data on Pikachu it's
05:41 - really difficult to read all
05:43 - this you can see some keywords we have
05:46 - abilities base experience this is an
05:49 - extremely large
05:52 - dictionary once we have our dictionary I
05:55 - will return that dictionary of Pokemon
05:58 - data back to the place where we called
06:01 - this
06:01 - function and I will store that as a
06:04 - variable Pokemon info equals get Pokemon
06:09 - info pass in a Pokemon's
06:12 - name and now we should have a dictionary
06:15 - that we can work with let me zoom
06:19 - out if our dictionary exists we can use
06:22 - the if
06:23 - keyword if Pokémon info if that's true
06:27 - if it exists this will be true
06:30 - I will print the following I'll use an F
06:34 - string to access the value of a
06:36 - dictionary we can access it by a key
06:39 - we'll take our dictionary of Pokemon
06:41 - info access the key of
06:45 - name let's see what happens
06:48 - exactly we get Pikachu let's get
06:51 - Pikachu's ID
06:53 - number we will access the key of ID the
06:57 - given value is 25 Pikachu is the 25th
07:01 - Pokemon in the
07:05 - franchise let's get Pikachu's
07:09 - height Pikachu's height is four I don't
07:12 - know what unit of measurement they use
07:13 - in that franchise 4et or 4 Ines I don't
07:17 - know let's get Pikachu's
07:22 - weight Pikachu's weight is 60 60 lb 60
07:27 - kog I don't know just to make this look
07:30 - nice I'm going to add
07:32 - Name
07:36 - ID
07:38 - height and
07:41 - weight that looks much better let's pick
07:45 - a different Pokemon I will pick my
07:47 - favorite Pokemon of
07:54 - tyion failed to retrieve
07:57 - data does that have to be a lowercase
08:01 - yes it does okay so name
08:04 - tyan I'll follow the name with the
08:06 - capitalize method to make it
08:12 - capital there we go so my favorite
08:15 - Pokemon is
08:16 - tyan ID is 157 Ty loan's height is 17
08:21 - and weight is
08:23 - 795 all right everybody that is one way
08:26 - in which we can connect to an API using
08:28 - python also tell tell me what your
08:29 - favorite Pokémon is in the comment
08:31 - section down below