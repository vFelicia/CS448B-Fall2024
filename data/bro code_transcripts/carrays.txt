00:02 - hey everybody let's talk about arrays an
00:04 - array is a data structure that can store
00:07 - many values of the same data type here's
00:10 - an example let's say i have a variable
00:12 - named price and i have the price of
00:14 - maybe one item in a fictional store of
00:17 - ours so by using an array we can
00:19 - actually store more than one value but
00:21 - it has to be of the same data type so i
00:24 - can turn this variable price into an
00:26 - array and i can do that by following the
00:29 - name of the variable and add a set of
00:31 - straight brackets and then any values i
00:33 - would like to add to this array i will
00:36 - surround with a set of curly braces and
00:38 - there we go we have turned our variable
00:40 - price into an array but i'm going to
00:43 - change the name to prices because i
00:45 - think it would be more descriptive
00:47 - because we can store more than one value
00:49 - now so we can add multiple values each
00:52 - separated with a comma so let's say we
00:54 - have another price that is 10.
00:57 - 15
00:58 - 25 and maybe 20. now you may have
01:02 - noticed some parallels when we create a
01:04 - string it's really an array of
01:06 - characters so if i need a name we would
01:08 - say the data type is char
01:10 - and we will create a name array followed
01:13 - by a set of square brackets and i will
01:15 - set this equal to some amount of
01:18 - characters a string is really just an
01:20 - array of individual characters and with
01:23 - my name here i have three individual
01:25 - elements three individual values now if
01:28 - i need to access one of these values i
01:31 - need to use an index number so let's
01:33 - print one of these numbers
01:35 - so printf
01:37 - i'm going to use the format specifier
01:39 - for a double and i'm going to list my
01:42 - array name
01:43 - prices then follow this with a set of
01:45 - straight brackets then i need an index
01:48 - number so each spot within an array is
01:51 - known as an element so we have five
01:53 - elements within our array and to access
01:56 - one of these elements i need to list an
01:58 - index number the first element has an
02:00 - index number of zero because computers
02:03 - always start with zero so if i display
02:05 - prices at index zero this contains the
02:08 - number five i'm actually going to format
02:10 - this let's display it two digits after
02:13 - the decimal and i'll precede this number
02:15 - with a dollar sign
02:17 - much better all right so then if i
02:19 - display prices at index one that is
02:22 - technically our second number of ten
02:24 - dollars
02:25 - so prices at index two
02:27 - is fifteen three
02:30 - is twenty five
02:32 - and four which is our last element
02:35 - is 20. so arrays they have a fixed size
02:38 - we can't change the size after we
02:40 - compile and run our program another
02:42 - thing that you can do too if you do not
02:44 - know what values you would like to
02:46 - initialize your array with you can
02:48 - always just set a size let's say i would
02:49 - like a size of five elements but then
02:52 - i'll assign some values later
02:54 - so later on in our program we can say
02:56 - prices
02:58 - at whatever index let's say index zero
03:00 - i'm going to assign with five and i'll
03:03 - do the same thing for the other elements
03:06 - so prices at index one is maybe ten
03:11 - prices at index two is fifteen
03:16 - three will be 25
03:20 - and 4 will be 20.
03:23 - that's another way in which you can
03:24 - initialize an array you can always set a
03:27 - size and then add elements later another
03:30 - option is that you could combine the two
03:32 - we could set a size right away so maybe
03:34 - prices will have a size of 10 and we can
03:37 - right off the bat assign some values
03:39 - right away so we have five elements that
03:42 - are currently filled but then the other
03:44 - five are empty so there's a few
03:46 - different ways in which you can
03:47 - initialize an array so yeah that's
03:49 - basically an array it's a data structure
03:51 - that can store many values of the same
03:54 - data type initializing an array is much
03:56 - like creating a variable except you will
03:58 - add a set of straight brackets after and
04:00 - then you can either add some values
04:02 - right away or later on in your program
04:04 - but you need to list an index number of
04:06 - where you're placing a value within the
04:08 - array and then to access a value within
04:11 - your array you type the array name
04:13 - followed by an index number kind of like
04:15 - a parking spot number so yeah those are
04:17 - arrays in the next video i'm going to
04:19 - show you how we can iterate over the
04:20 - elements in an array using a for loop if
04:23 - you would like a copy of this code i
04:24 - will post this to the comments section
04:26 - down below and well yeah that's an
04:28 - introduction to arrays in c