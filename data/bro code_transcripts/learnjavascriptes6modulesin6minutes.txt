00:00 - hey what's going on everybody so today
00:01 - I'm going to explain es6 modules in
00:04 - JavaScript a module is an external file
00:07 - that contains reusable code that can be
00:10 - imported into other JavaScript files
00:13 - let's say you write a really difficult
00:14 - program well any part of that program
00:17 - you can import into a different
00:18 - application if you don't feel like
00:20 - rewriting it modules can contain
00:22 - variables classes functions and more es6
00:25 - modules were introduced as part of the
00:27 - ecmascript 2015 update using modules we
00:30 - can create some reusable code that can
00:32 - be used in different programs different
00:34 - JavaScript files so what we'll do in
00:37 - this example we will create a new
00:40 - file I'll create a module for some math
00:43 - utility functions this file will be math
00:47 - u. JS it's a separate Javascript
00:51 - file from our index file we will import
00:55 - this module math
00:57 - u.j but in order to do so within our
01:00 - HTML file we have to set the type
01:04 - attribute equal to
01:07 - module we'll now treat our index file as
01:09 - a module we can Import and Export other
01:12 - modules freely but we have to be sure to
01:14 - include this attribute and set it equal
01:16 - to
01:18 - module So within our math util module we
01:21 - can write some reusable code for other
01:24 - programs so let's define what Pi is Pi =
01:28 - 3.14
01:31 - 4159 we'll create a function to get
01:34 - circumference you have to pass in a
01:36 - radius though that's going to be the
01:38 - parameter function get
01:43 - circumference we need a
01:46 - radius we will
01:49 - return 2 * pi *
01:55 - radius then we'll create a function to
01:57 - get
01:58 - area
02:00 - get area we still need a
02:04 - radius we will return Pi * radius time
02:11 - radius then get volume to get the volume
02:14 - of a
02:15 - sphere function get
02:18 - volume again we need a
02:21 - radius we will
02:23 - return 4 * PK * radius * radius
02:31 - I can reuse these variables and
02:32 - functions for any JavaScript program
02:34 - that I have I can import them in order
02:37 - to do so though we need to be sure that
02:38 - we prefix each variable function or
02:41 - class or anything else with the export
02:44 - keyword so that we can import it
02:46 - elsewhere so let's be sure we do
02:51 - that all right be sure to save
02:53 - everything we can close out of this
02:55 - module then from our index CSS file I
02:59 - will import then we're going to use
03:02 - object destructuring we need a set of
03:03 - curly
03:05 - braces from the location of that module
03:09 - so these files are right next to each
03:11 - other relatively speaking they're right
03:13 - next to each other I would need slash
03:17 - the name of that file math util and this
03:21 - is a Javascript
03:23 - file now anything I would like to import
03:26 - I'll place within the set of curly
03:27 - braces we're going to be using object
03:29 - structuring from this JavaScript module
03:32 - I would like Pi comma separate each
03:36 - entity then I would like get
03:41 - circumference get area get
03:46 - volume I can now use these variables and
03:49 - functions as if they were already part
03:51 - of my Javascript file for example I'm
03:54 - going to
03:56 - console.log Pi and pi does have a value
04:00 - because we imported it let's get the
04:03 - circumference but we do need to pass in
04:05 - a radius this is a function that we have
04:08 - imported from that mathutils module I
04:11 - will store the result within a
04:17 - variable const circumference equals
04:21 - we'll invoke the get circumference
04:23 - function from that module I'll pass in
04:25 - 10 then we're going to display the
04:27 - circumference I'll use console
04:30 - log I'll use a template string include a
04:33 - placeholder display their circumference
04:36 - plus a unit of measurement like
04:38 - centimet 62. 8318 CM this isn't
04:43 - necessary but I'm going to round this
04:44 - number to two decimal places using the
04:47 - two fixed method of numbers let's round
04:50 - to two decimal places let's create an
04:53 - area variable const area equals get area
04:59 - I'll pass in 10 for the
05:01 - radius let's copy this line and paste it
05:04 - because I'm lazy let's display our area
05:07 - variable with cm
05:10 - cubed
05:12 - 31416 cm cubed then we'll create a
05:16 - volume variable const volume equals get
05:21 - volume I will pass in
05:24 - 10 and then we will display the
05:28 - volume
05:30 - volume cm cubed and our volume if we
05:34 - pass in a radius of 10 would be
05:37 - 1,256 64 cm cubed all right everybody so
05:41 - those are modules they're external files
05:44 - that contain reusable code that can be
05:47 - imported into other JavaScript files you
05:49 - can write variables classes functions
05:51 - and more that can be reused in other
05:53 - programs you just have to be sure to
05:55 - import them and well everybody those are
05:58 - es6 modules in
06:03 - JavaScript