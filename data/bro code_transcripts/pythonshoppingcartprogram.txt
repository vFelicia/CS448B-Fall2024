00:00 - hello everybody today we will be
00:02 - creating a shopping cart program this
00:04 - program will be an exercise to follow
00:06 - the previous lesson on lists sets and
00:09 - tuples the more that we practice with
00:11 - those collections the better we'll be at
00:13 - using them so I thought we'd create an
00:14 - exercise to get the hang of it before
00:16 - moving on in this program we will have
00:18 - two lists Foods these lists will be
00:22 - empty we'll declare them but not use
00:23 - them quite yet
00:25 - and prices
00:27 - then a total
00:29 - total equals zero
00:31 - the reason that I'm not using tuples is
00:34 - that tuples are unchangeable we're going
00:36 - to ask a user what food they would like
00:38 - to buy we can't depend any elements to a
00:41 - tuple we're not using sets because sets
00:44 - are unordered I mean I guess technically
00:45 - you could but at the end of this program
00:48 - I'm going to print our shopping cart in
00:50 - order so I think lists would probably be
00:52 - the best we have an empty list of foods
00:54 - and an empty list of prices we'll use a
00:57 - while loop while true
01:01 - if our condition is set to True we'll
01:03 - need some way to break out of the while
01:05 - loop we'll need a break statement
01:07 - somewhere
01:08 - we'll get to that later we will ask the
01:10 - user what food would they like to buy
01:13 - let's declare variable food equal to
01:16 - input
01:18 - enter a food to buy
01:23 - to exit the while loop you need to press
01:26 - q q 2 Quit
01:32 - then let's check
01:33 - if
01:35 - food is equal to Q lowercase Q
01:39 - then we will break
01:41 - we're not done with the program but
01:42 - let's at least test it
01:45 - Pizza
01:47 - hamburger
01:49 - hot dog cue to quit okay it looks like
01:52 - it works
01:54 - now what if somebody types in uppercase
01:56 - q
01:57 - Pizza
01:59 - hamburger uppercase q
02:02 - well we can't actually quit
02:05 - after accepting our user input if food
02:08 - dot lower method this will take our
02:11 - input make it lower case just for a
02:13 - comparison
02:15 - let's try that again
02:18 - Pizza hamburger
02:21 - I'll type capital Q to quit and that is
02:24 - valid
02:25 - follow food with the lower method to
02:28 - temporarily make the user input
02:29 - lowercase
02:31 - just in case they type in capital Q
02:34 - if the user doesn't want to quit let's
02:36 - add an else statement
02:39 - else let's take our Foods use the append
02:42 - method then add whatever food the user
02:45 - typed in
02:46 - we'll also need a price
02:48 - let's ask a user for the price
02:51 - price equals
02:54 - input
02:56 - enter the price of let's use an F string
03:03 - a
03:04 - whatever food the user types in
03:07 - pick a unit of currency I'll pick
03:09 - dollars
03:10 - we are working with numbers we should
03:13 - Typecast our input as a floating Point
03:15 - number
03:16 - since we're working with prices
03:19 - so we will accept a price add our food
03:22 - item to our list of foods do the same
03:25 - thing with prices prices dot append
03:28 - whatever the price was
03:31 - and that is the while loop
03:33 - Let's test this program again to be sure
03:35 - that everything's working
03:37 - Pizza
03:39 - will be 5.99
03:42 - enter a food to buy
03:44 - hamburger hamburgers will be 350.
03:48 - hot dog hot dogs will be 175 I would
03:52 - like to quit I will type either capital
03:53 - Q or lowercase Q both will work and we
03:57 - have escaped the while loop so the while
03:59 - loop is now complete outside of the
04:01 - while loop let's display our shopping
04:03 - cart let's print some decorative text
04:08 - maybe five dashes
04:10 - your cart then another five dashes
04:14 - I will then iterate over all of the
04:16 - elements found within my Foods list
04:19 - for every food in my list of foods
04:25 - let's print
04:26 - each food item
04:29 - let's take a look so far again we have a
04:31 - pizza the price was 5.99
04:34 - hamburger the price was 350.
04:38 - hot dog 175 cue to quit
04:42 - okay your cart
04:45 - that will display the individual list
04:47 - items if you would rather have these
04:49 - list items arranged horizontally in one
04:52 - line
04:53 - you can add this keyword and equals this
04:57 - end keyword will replace the new line
04:59 - character at the end of a print
05:00 - statement with some other character like
05:02 - a space
05:03 - let's try that again
05:05 - I'll try not to take too much time
05:08 - Pizza
05:10 - 5.99
05:13 - hamburger
05:15 - 350.
05:17 - hot dog
05:20 - 175.
05:22 - you to quit
05:24 - yeah that's much better we are
05:26 - horizontally listing all of the
05:28 - different items within our list you
05:30 - could revert back to the vertical list
05:31 - if you'd prefer that I'll keep my output
05:33 - like this then we will need to iterate
05:35 - and add up all the prices
05:38 - for every price and prices
05:41 - we do have a total variable that we
05:43 - declared let's utilize that
05:46 - total equals total plus price
05:50 - otherwise we could shorten this to plus
05:53 - equals price that would do the same
05:55 - thing
05:56 - then we will display the total
06:00 - print I'll use an fstring
06:02 - your total is
06:06 - I'll add a unit of currency I picked the
06:08 - dollar sign
06:10 - whatever the total is
06:12 - okay let's run this program one last
06:14 - time
06:17 - enter a food to buy
06:18 - Pizza which was 5.99
06:21 - hamburger
06:23 - which was 350. hot dogs
06:27 - they are 175
06:30 - Q to quit
06:32 - here's your shopping cart I'm just going
06:34 - to add one new line real quick right
06:36 - before we display the total
06:38 - just an empty print statement
06:49 - here are the results your cart Pizza
06:52 - hamburger hot dog your total is 11.24
06:55 - cents
06:57 - all right everybody well that is a
06:59 - shopping cart program I thought this
07:01 - would be a fun exercise to follow the
07:03 - previous lesson on lists sets and tuples
07:06 - and well yeah that is a shopping cart
07:08 - program in Python