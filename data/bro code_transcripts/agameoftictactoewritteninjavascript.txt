00:00 - hey what's going on everybody it's you
00:01 - bro hope you're doing well and in this
00:03 - video we're going to create a game of
00:04 - tic-tac-toe using javascript so sit back
00:07 - relax and enjoy the show
00:11 - well all right everybody let's create a
00:13 - game of tic-tac-toe let's create a div
00:15 - element to contain our game
00:17 - div
00:18 - this will have an id of what about game
00:23 - container
00:26 - let's close it
00:30 - i'll add a title
00:32 - this will be an h1 header tag
00:34 - the title will be
00:36 - tick
00:36 - tack toe
00:39 - we'll create a div section for a grid
00:42 - div id equals let's name this cell
00:47 - container
00:48 - it will contain nine cells for each of
00:50 - the spaces
00:52 - then let's close it
00:55 - within our cell container div we're
00:57 - going to create nine div tags
00:59 - div
01:01 - we'll create an attribute named cell
01:04 - index
01:05 - i'll set the first equal to zero
01:08 - add them to a class the class will be
01:10 - cell
01:12 - then close the div tag
01:14 - let's copy this development and paste it
01:17 - eight additional times so we should have
01:19 - a total of nine
01:24 - we have cell index zero one two three
01:28 - four five
01:30 - six
01:31 - seven
01:32 - eight
01:33 - outside of our cell container that ends
01:35 - right here it looks like
01:37 - we'll create an h2 header tag to display
01:40 - some messages like whose turn it is who
01:43 - won
01:44 - so let's close this h2 header tag i will
01:47 - give this an id of
01:49 - what about status
01:52 - text then we'll need a button
01:57 - button
02:00 - the id will be restart button
02:04 - add some text
02:06 - restart
02:07 - okay that should be everything within
02:08 - our html file let's head to our css
02:11 - style sheet be sure to save everything
02:13 - let's begin with the cell class this is
02:16 - a class so use dot the name of the class
02:18 - cell
02:19 - i'll set a width of 75 pixels
02:23 - a height
02:24 - of 75 pixels
02:28 - i'll add a border
02:31 - 2 pixel solid is good
02:36 - okay here's our div elements so far we
02:38 - but we got to put them in a grid they're
02:40 - all in a single column i'll select our
02:42 - cell container
02:44 - we're selecting this by an id cell
02:46 - container
02:49 - the display
02:50 - will be grid
02:53 - grid
02:55 - template
02:56 - columns
02:59 - repeat
03:01 - 3
03:02 - auto
03:05 - then we gotta set a width
03:07 - width
03:08 - 225 pixels
03:12 - margin
03:13 - auto
03:15 - yeah
03:16 - let's head back to our cell class
03:18 - let's add a box shadow
03:20 - box
03:21 - shadow
03:23 - zero zero zero two pixels
03:27 - all of these lines should have an even
03:29 - thickness
03:30 - i'll add a line height
03:33 - of 75 pixels
03:38 - just to test the x's and o's i'm going
03:40 - to add an x like right here and an o
03:43 - here
03:44 - let's edit the font
03:47 - font
03:48 - size
03:50 - 50 pixels
03:52 - when i move my cursor over these cells i
03:54 - would like my cursor to be a pointer to
03:56 - indicate that we can click on something
03:58 - so cursor pointer let's test that yeah
04:02 - there's our pointer okay let's select
04:04 - our game container i'm going to center
04:06 - everything and change the font
04:08 - game
04:09 - container
04:11 - i'll add a font family
04:15 - i'll select
04:16 - permanent
04:19 - marker i like that font
04:21 - and a backup of cursive
04:25 - then we just got to center everything
04:26 - within this container
04:28 - text align
04:31 - center
04:32 - yeah and that's our css style sheet
04:35 - so let's get rid of this exyno that we
04:36 - have i was just writing that there to
04:38 - test it
04:40 - okay so our html file is done our css
04:43 - file is done let's head to our
04:44 - javascript file
04:47 - okay now we're within our javascript
04:49 - file let's declare all of the variables
04:51 - that we'll need
04:53 - const
04:54 - cells
04:55 - equals document dot
04:58 - query
05:00 - selector
05:02 - all
05:03 - we're selecting a class
05:05 - the cell class dot cell
05:08 - then let's select status text const
05:11 - status text
05:13 - document dot query selector
05:16 - not query selector all
05:18 - we are selecting
05:21 - status
05:23 - text
05:25 - then our restart button
05:29 - const
05:30 - restart
05:32 - button
05:33 - id
05:34 - restart button
05:36 - we need a constant of all of our wind
05:38 - conditions
05:40 - const wind
05:42 - conditions
05:44 - when conditions will be a
05:46 - two-dimensional array of indices
05:48 - if three cells all have the same
05:50 - character we would need to check that
05:52 - but we'll have to know what cells to
05:53 - check
05:54 - let's begin with the first row these
05:56 - would have indices of 0 1 2 so let's add
06:00 - that 0 1 2
06:04 - then the second row
06:06 - three four five
06:12 - six seven eight
06:16 - then columns
06:18 - zero three six
06:26 - one four seven
06:33 - two five eight
06:38 - then the diagonals
06:41 - zero four eight
06:47 - two four six
06:53 - and that's it
06:54 - we'll need an array of placeholders i'll
06:56 - name this options let options equals
07:00 - options will be originally
07:02 - an array of empty strings
07:05 - we'll need nine of them
07:07 - one for each cell
07:14 - okay let's make sure we have nine
07:16 - one two three four five six seven eight
07:19 - nine
07:21 - we'll need to keep track of the current
07:23 - player let
07:25 - current
07:26 - player equal x
07:30 - then we'll need a boolean variable to
07:31 - keep track if our game is running
07:33 - let running equals
07:36 - false
07:37 - we'll switch this to true when we
07:38 - initialize our game
07:40 - let's create all of the different
07:41 - functions that we'll need
07:43 - function
07:45 - initialize
07:48 - game
07:52 - function
07:54 - cell clicked
08:00 - function
08:02 - update cell
08:04 - there will be two parameters cell as
08:07 - well as index
08:10 - function
08:12 - change player
08:17 - function
08:18 - check
08:19 - winner
08:23 - function
08:25 - restart game
08:29 - okay and that's the functions
08:31 - when we begin our game let's initialize
08:33 - the game
08:36 - we'll use this function initialize game
08:38 - to take care of any setup before we need
08:40 - to start
08:41 - we'll have to add some event listeners
08:43 - to our cells
08:45 - take our cells
08:48 - then use the for
08:50 - each method
08:52 - we'll use an arrow function expression
08:54 - for each cell
08:57 - we will take our cell
09:00 - add
09:01 - event
09:02 - listener
09:04 - the event will be click
09:07 - we will add a callback of cell clicked
09:12 - the second line will add an event
09:13 - listener to our restart button
09:16 - restart button
09:18 - dot add event
09:20 - listener
09:22 - when we click
09:25 - we are going to invoke the restart game
09:28 - function
09:31 - for the third line let's update our
09:34 - status text
09:36 - status text dot text
09:40 - content
09:42 - set the sequel to i'll use the template
09:44 - literal
09:46 - current
09:47 - player
09:49 - it's their turn
09:52 - okay it looks like we have one problem
09:56 - looks like i accidentally capitalized
09:58 - that l in current player okay let's work
10:00 - on the cell clicked function
10:03 - when we click on a cell what are we
10:04 - going to do
10:05 - i'll create a local variable
10:08 - const
10:09 - cell
10:10 - index
10:11 - i will set the sql to
10:13 - this
10:15 - this refers to whatever cell that we
10:17 - click on we will get an attribute get
10:21 - attribute
10:23 - the attribute that we're getting is cell
10:30 - index we have an index number what we
10:33 - would like to check to see is if that
10:35 - index number within our options our
10:38 - placeholders
10:39 - are not empty
10:41 - we'll only want to update a cell if
10:43 - there's nothing there
10:46 - if
10:46 - our options
10:48 - at index of cell index
10:52 - does not equal an empty space
10:55 - or if the game is not
10:58 - running
11:01 - then we will return not do anything
11:04 - otherwise
11:06 - we will invoke the update
11:08 - cell function
11:10 - pass in this as an argument as well as
11:13 - cell index
11:16 - followed by
11:17 - check
11:18 - winner
11:19 - function
11:21 - okay let's head to the update cell
11:23 - function
11:25 - take
11:26 - options at index of the index parameter
11:32 - set the sequel to the current player
11:36 - so we're updating our placeholders
11:39 - then change the text content of one of
11:42 - these cells
11:43 - whatever cell that we click on
11:44 - originally
11:45 - cell dot text
11:48 - content
11:49 - equals current player
11:51 - now we should be able to click on at
11:53 - least one of these cells
11:56 - oh i forgot one thing when we initialize
11:58 - our game we have to set running to true
12:01 - running equals true
12:04 - there
12:05 - so we can click on one of these spaces
12:08 - x
12:09 - x x x
12:11 - then we just need to change the player
12:14 - take our current player
12:17 - then we will set the sequel to then use
12:19 - the ternary operator our condition is if
12:23 - change player
12:25 - is equal to x
12:27 - if current player is equal to x we will
12:29 - reassign our current player with
12:32 - o
12:34 - otherwise
12:36 - x
12:38 - then take status
12:40 - text
12:42 - dot
12:43 - text
12:44 - content
12:46 - set the sequel to i'll use the template
12:48 - literal
12:50 - current player
12:52 - it's their
12:54 - turn
12:55 - yeah just temporarily i'm going to
12:56 - invoke this function after updating a
12:58 - cell
13:00 - now we should be able to alternate
13:01 - between x's and o's
13:03 - x o x o x xoxo yeah we're good i'm going
13:07 - to remove this i was just testing it to
13:09 - make sure it works okay then head to our
13:11 - check winner function we have a lot to
13:13 - do here we'll create a temporary
13:15 - variable of round
13:17 - one
13:19 - i will set the sequel to false if
13:21 - somebody wins we'll flip this to be true
13:24 - we'll use a for loop we haven't used
13:26 - those for a while
13:28 - we will iterate over all of the win
13:30 - conditions within our two-dimensional
13:32 - array the first statement will be let i
13:35 - equal zero
13:36 - we'll continue this as long as i is less
13:39 - than
13:40 - our win
13:41 - conditions
13:43 - dot length property
13:45 - increment i by one
13:47 - we will iterate over each inner array
13:49 - within win conditions but let's store
13:52 - each of these arrays within a temporary
13:54 - variable
13:55 - const
13:57 - condition
13:59 - equals
14:00 - when condition at our current
14:03 - index of i
14:05 - each row has three indices
14:08 - const cell a
14:11 - equals
14:12 - our options
14:14 - but at what index while the index is
14:16 - going to be our condition
14:18 - at index 0 then we have cell b
14:23 - cell b
14:25 - condition at 1
14:29 - cell c
14:31 - condition index of two let me explain
14:33 - how this is gonna work
14:34 - let's head to the top we're iterating
14:37 - over all of these inner arrays
14:39 - we'll begin with the first we have three
14:41 - indices zero one two we're going to
14:44 - check within our options at these three
14:46 - indices
14:47 - zero one two at least that row to begin
14:50 - with
14:51 - if these three are not spaces and
14:54 - they're all the same that means somebody
14:56 - won if there is no winner we'll check
14:58 - the next set of win conditions three
15:00 - four and five
15:01 - these are indices within our option at
15:04 - these three indices
15:05 - three four and five if there are no
15:08 - spaces and they're all the same
15:10 - character that means somebody won we'll
15:12 - repeat this process for each set of win
15:14 - conditions
15:16 - so heading back down to our check winner
15:18 - function we'll need to check if there's
15:20 - any empty spaces
15:21 - if
15:22 - cell a
15:24 - is equal to an empty space
15:26 - or
15:27 - cell b
15:29 - is equal to an empty space
15:31 - or
15:32 - cell c
15:33 - is equal to an empty space if there's an
15:36 - empty space
15:37 - we'll continue and skip this iteration
15:40 - so if there are no empty spaces that
15:42 - means all the spaces are full let's make
15:44 - sure they're all the same character
15:47 - if
15:48 - cell a is equal to
15:50 - cell b
15:53 - and
15:54 - cell b
15:55 - is equal to
15:57 - cell c
15:58 - that means we have a winner we'll take
16:01 - our local variable of round one set the
16:04 - sequel to true
16:06 - then break we don't need to continue
16:07 - this for loop anymore we can break out
16:09 - of it
16:10 - outside of our for loop
16:12 - if
16:14 - round one is equal to true
16:17 - let's update our status text right here
16:21 - status text
16:23 - dot text
16:25 - content
16:26 - is equal to i'll use a template literal
16:30 - current
16:31 - player
16:34 - wins
16:36 - running
16:37 - equals false the game is over
16:40 - else if
16:42 - so if there's no spaces left it's a draw
16:45 - we could check that with this condition
16:47 - take our options then use the includes
16:51 - method
16:52 - we'll check for any spaces
16:54 - does our array include any spaces
16:56 - precede this with the not logical
16:58 - operator if our options does not include
17:01 - any spaces if this is true then we will
17:04 - update our status text
17:08 - to equal
17:10 - draw
17:11 - running equals false
17:14 - else
17:15 - we can change player
17:17 - change
17:18 - player
17:20 - okay let's try this
17:23 - x o x o
17:25 - x o
17:27 - uh we should have a winner here yeah x
17:29 - wins
17:30 - let's work on this restart button to
17:32 - restart the game
17:33 - we'll take current
17:36 - player
17:37 - set the sequel to x
17:41 - take our options
17:43 - i'll just copy this we're going to reset
17:45 - them
17:47 - so they're all empty spaces
17:50 - status text
17:52 - dot
17:53 - text
17:54 - content
17:56 - equals
17:57 - i'll use a template literal
18:01 - current players
18:03 - turn
18:04 - we'll have to clear each cell
18:07 - take
18:08 - our cells
18:09 - use the for
18:11 - each method
18:12 - use an arrow function expression
18:15 - for each cell
18:16 - we will take that cell
18:18 - update the text
18:20 - content
18:22 - equal to an empty space
18:25 - then set running equal to true
18:29 - okay let me make sure the game's a draw
18:31 - first
18:36 - okay draw i'm going to restart and we
18:38 - have a new game
18:40 - so yeah everybody that is a basic game
18:43 - of tic-tac-toe if you would like a copy
18:45 - of all this code i'll post this in the
18:46 - comment section down below underneath
18:48 - the original video in this playlist and
18:50 - well yeah that's a basic game of
18:53 - tic-tac-toe using javascript