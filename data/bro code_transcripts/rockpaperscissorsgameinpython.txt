00:00 - hey everybody in today's topic I thought
00:02 - we would create a game of rock paper
00:04 - scissors now that we know how the random
00:06 - module Works let's begin by importing
00:08 - the random module we will create some
00:11 - options
00:12 - we will use a tuple we're not going to
00:15 - be changing the options so a tuple would
00:17 - be better than a list we have three
00:19 - options Rock
00:22 - paper
00:23 - or scissors
00:27 - I'll create a variable named player to
00:29 - store the Player's Choice
00:31 - for now I'm going to set this to be none
00:33 - as well as a computer
00:36 - our computer is going to pick a random
00:38 - Choice from these options rock paper or
00:41 - scissors in order to do so we can use
00:43 - the choice method of the random module
00:46 - random dot choice
00:49 - pick a random Choice from options
00:54 - let's have the player enter in some
00:57 - input
01:00 - enter a
01:03 - choice
01:06 - Rock
01:08 - paper
01:10 - scissors
01:13 - then we will display the Player's Choice
01:15 - and the computer's choice
01:17 - I'll use an upstring
01:21 - player colon space
01:24 - the variable player
01:27 - it's copy that paste it
01:30 - then change player to computer
01:35 - let's see what we have so far
01:38 - enter a choice rock paper scissors
01:41 - so I pick Rock the computer picks
01:44 - scissors
01:45 - let's try it again just for good measure
01:46 - I pick paper this time the computer
01:49 - picks scissors
01:52 - I pick scissors the computer picks paper
01:54 - okay we know that the computer is
01:56 - successfully picking a random Choice
01:58 - from our options now what if the player
02:01 - picks something that's not within this
02:03 - Tuple such as the gun well we would want
02:07 - to stop that right we need the user to
02:09 - pick a valid option only rock paper or
02:12 - scissors I think what we'll do is that
02:14 - when we accept user input let's place it
02:16 - within a while loop so indent this line
02:20 - while this condition is going to be kind
02:23 - of weird while our player variable is
02:27 - not in
02:29 - our Tuple options
02:31 - let's try this again to see what happens
02:33 - I pick the gun
02:35 - enter a choice all right well if I can't
02:38 - pick a gun how about a sponge
02:41 - well I can't pick that either Rock
02:43 - that works our condition is while the
02:47 - player variable is not found within our
02:50 - options if the player doesn't pick one
02:53 - of these options this while loop will
02:55 - continue forever once we pick something
02:58 - that's within our options we then escape
03:00 - the while loop let's check some win
03:02 - conditions
03:03 - now if the player is equal to computer
03:08 - that means it's a tie I will print
03:13 - it's a tie
03:15 - I'll add a few lcip statements else if
03:19 - the player
03:20 - is equal to rock
03:23 - I'll use the and logical operator
03:26 - and the computer
03:28 - is equal to scissors
03:31 - that means you win
03:33 - let's print
03:35 - you win
03:37 - let's add another condition else if
03:40 - the player
03:42 - picks paper
03:44 - and the computer
03:48 - picks Rock
03:52 - then you also win
03:53 - you win
03:57 - L Sif
03:58 - the player
04:00 - picks scissors
04:03 - and
04:04 - the computer
04:07 - and the computer picks paper
04:11 - then we will print
04:13 - you win
04:16 - else
04:18 - if the Player's Choice is not the same
04:21 - as the computers and we don't meet any
04:23 - win conditions that must mean we lose
04:27 - print you lose
04:31 - let's see if this works
04:33 - enter a choice rock paper scissors I
04:35 - pick the gun nope I can't pick that I
04:37 - pick Rock
04:38 - I pick Rock the computer picks scissors
04:41 - you win
04:42 - let me see if I can lose I'll pick paper
04:45 - you win again
04:48 - scissors
04:50 - I need to stop winning I need to see if
04:52 - the loose condition works
04:54 - okay it's a tie at least but I need to
04:56 - lose
04:58 - all right there we go I pick Rock the
05:00 - computer picks paper you lose
05:03 - what if the user would like to play
05:04 - again
05:05 - let's place all of this code within a
05:08 - while loop
05:09 - let's do so right about here now I'm not
05:12 - going to write while true like I
05:14 - normally do
05:15 - this time I'm going to create a variable
05:18 - let's say running is our game running I
05:21 - will set that to be true
05:24 - while running
05:27 - equals true or we could shorten this to
05:30 - just while running that's simpler
05:34 - I will place all of this code within the
05:37 - while loop to mass indent some code just
05:39 - highlight all of the code and then press
05:41 - tab
05:42 - hey everybody this is bro from the
05:44 - future I forgot to explain something the
05:46 - reason I'm not setting the condition of
05:48 - my while loop to be true is that if you
05:50 - have a lot of code within a while loop
05:52 - it can be really difficult to find where
05:54 - the break statement is if I set my
05:57 - condition to be a Boolean variable such
05:59 - as running
06:00 - it's a lot easier to find any instance
06:03 - where I use this variable if I were to
06:04 - highlight it we can see that running is
06:07 - found down here if I need to change any
06:09 - instance of this variable and rename it
06:11 - to something you can refactor let's
06:13 - rename running as maybe playing
06:17 - then I will refactor so my variable
06:20 - running is now playing and that change
06:22 - was made down here too so it's a coding
06:25 - preference every time we start a new
06:27 - game I will reset the player as well as
06:30 - the computer
06:31 - let's move these two lines into the
06:33 - while loop at the beginning
06:35 - so when we start a new game we will
06:37 - reset the player the computer will pick
06:40 - a new random choice so let's see what we
06:42 - have so far
06:44 - Rock
06:46 - I pick Rock the computer picks Rock it's
06:48 - a tie then we have to play again so
06:51 - paper
06:52 - you lose
06:54 - scissors it's a tie now what if we would
06:57 - like to escape the while loop after our
06:59 - win conditions I'm going to create a
07:01 - temporary variable let's name this play
07:04 - again
07:05 - then we will ask for some user input
07:09 - play again question mark
07:14 - y slash n
07:16 - meaning yes or no
07:18 - if the user types in something that's
07:20 - capital I'm going to use the lower
07:21 - method to make it lowercase
07:24 - so if our play again variable is equal
07:28 - to y
07:30 - we would like to escape what I would
07:33 - like to do is I would like to see if the
07:35 - player types in something that's not why
07:38 - I will precede this condition with the
07:42 - not logical operator if the user does
07:45 - not want to play again
07:48 - then let's take our Boolean variable
07:50 - running normally it's true
07:54 - and set that to be false running equals
07:56 - false
07:58 - that means we will escape the while loop
08:01 - once we escape the while loop I will
08:03 - print
08:05 - thanks for playing
08:08 - now I'm going to change this momentarily
08:10 - I just want to test it Rock
08:13 - play again yes
08:15 - paper play again yes
08:18 - scissors
08:19 - you lose play again nope thanks for
08:23 - playing this is entirely optional I try
08:25 - and create as few variables as possible
08:27 - I would personally rather avoid creating
08:30 - a variable here another way in which I
08:33 - could write this is that I can get rid
08:35 - of this variable
08:41 - let's move if not in front of the input
08:46 - and follow our input here then use the
08:50 - comparison operator
08:53 - then add a colon
08:55 - if the user's input after making it
08:57 - lowercase
08:59 - does not equal a y for yes
09:03 - set running to be false so that should
09:06 - work the same
09:08 - Rock play again yes enter a choice
09:12 - paper
09:13 - play again no thanks for playing this
09:16 - line would work the same but it's a
09:18 - little more complex for beginners to
09:20 - read or you can use the other method
09:22 - that I showed you alright everybody well
09:24 - that's a game of rock paper scissors