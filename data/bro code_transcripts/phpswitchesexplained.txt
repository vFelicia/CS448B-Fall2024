00:00 - hey what's going on everybody so in
00:01 - today's video I need to explain switch
00:03 - statements a switch is a replacement to
00:07 - using many lcif statements switches are
00:10 - more efficient and take less code to
00:12 - write compared to using many else if
00:14 - statements here is an example
00:17 - I have a letter grade
00:19 - a student's grade can be a b c d f or if
00:24 - their grade is invalid we have an else
00:26 - statement that states that letter grade
00:29 - is not valid depending on what our grade
00:31 - is we will execute one of many
00:33 - statements if our grade is a then we
00:36 - will Echo you did great if it's B you
00:40 - did good
00:41 - see you did okay
00:43 - d
00:45 - you did poorly
00:47 - F you failed if we have a grade that
00:50 - isn't valid such as Pizza well that's
00:53 - not a grade Pizza is not a valid grade
00:56 - using many else if statements is fairly
00:59 - inefficient and it's a lot to write to I
01:02 - would like to propose a better solution
01:04 - and that is by using a switch which is
01:07 - the topic of this video to create a
01:09 - switch we will type switch add a set of
01:12 - parentheses then add a set of curly
01:14 - braces
01:15 - within the parentheses of the switch
01:17 - what would we like to examine let's
01:20 - examine our letter grid then we'll
01:22 - probably want to change our letter grade
01:24 - to something valid like a
01:26 - within the switch we're going to create
01:27 - cases one case for each match that we're
01:30 - looking up
01:32 - type case
01:34 - what are we comparing our grade to let's
01:37 - compare our grid to the letter A
01:40 - then add a colon
01:42 - if our grade matches this case we'll
01:46 - write some code what do we want to do
01:49 - let's Echo
01:53 - you did great
01:56 - after all of your code add break to
01:59 - break out of the switch
02:02 - this is the first case let's copy this
02:04 - case underneath it after the break
02:06 - statement
02:07 - let's paste it
02:10 - then we will have case b you did
02:14 - good
02:15 - let's copy this again
02:19 - k c
02:21 - you did okay
02:25 - then d
02:28 - you did
02:30 - poorly
02:34 - case f
02:37 - U
02:39 - failed
02:41 - our grade is currently in a
02:45 - you did great
02:46 - Let's test out case b
02:49 - you did good
02:51 - see
02:52 - you did okay
02:54 - d
02:55 - you did poorly
02:58 - F you failed what if we have a grade
03:01 - that isn't valid like pizza again
03:04 - well nothing happens there were no
03:07 - matching cases we simply exit the switch
03:11 - if none of these cases match you can add
03:14 - a default case type default
03:18 - I can't spell it right today
03:21 - if there are no matching cases what are
03:23 - we gonna do
03:24 - let's Echo some sort of message
03:28 - I'll add a placeholder
03:30 - our grade variable is not
03:34 - valid
03:36 - so Pizza is obviously not a letter grade
03:39 - Pizza is not valid there were no
03:42 - matching cases therefore we resulted to
03:45 - the default case the default case is
03:48 - kind of like the else statement now the
03:50 - reason that you have break in here let
03:51 - me demonstrate is because you will break
03:53 - out of the switch
03:55 - what if we were missing these break
03:57 - statements temporarily I'm going to
03:59 - remove them
04:02 - let's say that our grade is B
04:07 - you did good you did okay you did poorly
04:09 - you failed B is not valid
04:11 - you need the break statement to break
04:13 - out of the switch
04:14 - wherever there's a match we will execute
04:17 - the code followed underneath then any
04:19 - subsequent code followed after
04:22 - so be sure to include those break
04:24 - statements
04:26 - unless you want to execute every
04:27 - statement afterwards in some cases that
04:30 - could be helpful but not for this one
04:32 - let's go over another example
04:35 - we're going to get the current date
04:37 - I'll create variable date
04:40 - to get the current date we will use the
04:42 - date function
04:44 - within the parentheses of the date
04:45 - function within a set of quotes Type L
04:49 - just to be sure it's working fine let's
04:51 - Echo our date for testing
04:55 - L will give you the day of the week
04:57 - currently for me it's Monday
05:00 - so let's place our date within a switch
05:05 - we'll create a switch parentheses curly
05:08 - braces we are examining our date
05:12 - then we'll need a case case
05:15 - Monday
05:19 - if today is Monday let's Echo
05:24 - I hate Mondays
05:29 - then break
05:35 - so it's Monday
05:36 - I will Echo I hate Mondays
05:40 - so let's copy this case paste it change
05:44 - Monday to Tuesday
05:47 - what can we say for Tuesday
05:51 - it is Taco Tuesday
05:56 - So currently for me it's still Monday
05:59 - just for testing purposes I am going to
06:01 - change our date
06:04 - after we get the current date
06:07 - I just want to be sure that our switch
06:08 - is working
06:10 - what if our date was Tuesday it is Taco
06:13 - Tuesday
06:14 - what if it's Wednesday
06:24 - the work week is half over
06:30 - let's change our case to be Wednesday
06:33 - the work week is half over
06:37 - Thursday
06:44 - it's almost the weekend
06:49 - change our date to be Thursday
06:52 - it's almost the weekend
07:00 - Friday
07:03 - the weekend is here
07:11 - the weekend is here
07:13 - Saturday
07:20 - time to party
07:26 - time to party
07:32 - then Sunday
07:35 - time to
07:37 - let's relax on Sunday
07:42 - time to relax it's optional but we could
07:45 - add a default case if there are no
07:47 - matching cases
07:49 - let's Echo
07:55 - our variable date is not a day
08:02 - let's change our date to something like
08:05 - pizza
08:07 - well Pizza is not a day so I'll remove
08:10 - this line depending on what day you're
08:12 - executing this code it will display a
08:15 - custom message depending on the day of
08:16 - the week
08:17 - like I said today for me it's Monday so
08:20 - my message prints I hate Mondays
08:23 - alright everybody in conclusion a switch
08:25 - is a replacement to using many lcip
08:28 - statements they're more efficient and
08:30 - take less code to write I would
08:32 - recommend a switch if you're checking
08:34 - some value or variable many times over
08:37 - and well everybody those are switches in
08:40 - PHP