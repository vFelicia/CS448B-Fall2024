00:00 - hey everybody today I'm going to be
00:02 - explaining self joins a self-join is
00:04 - really just any type of join where you
00:06 - join together another copy of a table to
00:09 - itself they're used to compare rows of
00:12 - the same table they really help with
00:13 - displaying a hierarchy of data so a self
00:16 - join you just joined another copy of a
00:18 - table to itself so here's an example I
00:20 - have a table of customers I'm going to
00:22 - create another column named referred by
00:24 - if a customer refer somebody and they
00:27 - register as a new customer maybe they
00:29 - get like a free meal or something let's
00:32 - create a new column within our customers
00:33 - table
00:35 - alter table
00:37 - customers
00:39 - add
00:41 - referral ID
00:43 - the data type will be int
00:46 - then select all from customers
00:49 - now let's populate this column
00:53 - update customers
00:56 - set
00:57 - referral ID
01:01 - equal to one
01:03 - where customer ID equals to
01:09 - our first customer Fred fish he was not
01:12 - referred by anybody that value will be
01:14 - null however Larry Lobster was referred
01:17 - by Fred fish
01:18 - we'll set the referral ID for him to be
01:21 - won
01:21 - Larry Lobster was referred by Fred fish
01:24 - so Fred fish gets a free meal at the
01:27 - Krusty Krab now Larry Lobster he's going
01:29 - to refer both bubble bass and Poppy puff
01:32 - so he'll get two free meals set referral
01:35 - ID equal to two where customer ID equals
01:39 - three
01:40 - and four
01:42 - Fred fish referred to Larry Lobster
01:44 - Larry Lobster referred bubble bass and
01:46 - Poppy puff it makes me think of a
01:48 - pyramid scheme I'm going to use a
01:50 - self-joint to replace our referral ID
01:52 - column with the first and last name of
01:55 - the customer that referred one of these
01:57 - people
01:58 - so I'm going to select all
02:01 - Now when using a self join
02:03 - we'll take from our table customers
02:06 - than inner join
02:09 - customers basically we're just joining
02:12 - another copy of a table to itself but
02:14 - we'll need to give these tables what's
02:16 - known as an alias a nickname let's say
02:18 - from customers as maybe a that's the
02:21 - nickname
02:23 - inner joint customers as b the original
02:26 - copy of our customers table will be
02:28 - referred to as a the copy will be B they
02:31 - are the exact same table but we have two
02:34 - of them and we'll stitch them together
02:35 - with a join to link these Tables by the
02:38 - referral ID and the customer ID I'll add
02:41 - this additional line on
02:44 - referral
02:45 - ID
02:47 - equals customer ID let's take a look to
02:52 - see what we have so far
02:54 - column referral ID in on Clause is
02:57 - ambiguous
02:59 - am I referring to the referral ID of
03:01 - table a or table B I'm referring to the
03:04 - referral ID of table a what I'll do is
03:07 - prefix this column name with the name of
03:09 - my table followed by dot a DOT referral
03:13 - ID equals I need the customer ID from my
03:16 - table copy which is known as B I will
03:19 - prefix B to this customer ID column
03:22 - the referral ID of table a is linked to
03:26 - the customer ID of table B
03:29 - oh yeah look at that we have joined
03:31 - these two tables the referral ID of
03:33 - table a is linked to the customer ID of
03:36 - table B
03:37 - I don't necessarily need all of these
03:39 - columns we're displaying everything
03:40 - let's select only specific columns I
03:43 - would like a customer ID
03:46 - first name
03:49 - last name
03:51 - now we have one problem with our first
03:53 - name and last name do we mean the first
03:55 - and last name Columns of table a or
03:58 - table B let's prefix these columns with
04:01 - the name of our table the Alias we're
04:03 - using I would like the first name from
04:05 - table a the last name from table a
04:08 - followed by I'm going to put this on a
04:10 - new line just for readability
04:13 - the first name
04:14 - of table B
04:17 - then the last name of table B
04:23 - then be sure to include that within the
04:25 - customer ID too so the customer ID of
04:27 - table a
04:29 - okay we're getting somewhere customer ID
04:31 - first name last name first name last
04:34 - name okay so if somebody were looking at
04:36 - this table they would think why are
04:38 - there two columns for both first name
04:39 - and last name let's concatenate these
04:41 - two columns
04:43 - concat
04:45 - first name last name I'll add a space in
04:48 - between the first name and last name
04:50 - I'm going to give this column an alias
04:53 - as
04:55 - referred by
04:59 - all right there's our table we have all
05:02 - of our customers who were referred by
05:04 - another customer Larry Lobster was
05:07 - referred by Fred fish
05:08 - bubble bass and Poppy puff were both
05:10 - referred by Larry Lobster
05:12 - you could use a different type of join
05:14 - besides an inner join we could use a
05:16 - left join
05:18 - what we're telling MySQL is to display
05:20 - all of our customers on the left table
05:22 - if one of these customers was referred
05:24 - by another customer join those rows as
05:27 - well you can see that with the left join
05:28 - that Fred fish is still within our table
05:30 - but he wasn't referred by anybody that
05:32 - value is null so that's one example of a
05:35 - self-join we're creating another copy of
05:37 - the same table then joining it together
05:39 - to the original but you'll need to give
05:41 - each table an alias a unique nickname
05:44 - here's another example of a self-join
05:46 - let's select all from our employees
05:49 - table
05:52 - in our employees table Mr Krabs is a
05:55 - manager Sandy Cheeks is an assistant
05:57 - manager let's add an additional column
05:59 - named supervisor ID to who does each of
06:02 - these employees report to Squidward
06:04 - SpongeBob and Patrick and Sheldon they
06:07 - will all report to Sandy who's an
06:09 - assistant manager
06:10 - Sandy will report to Mr Krabs he's the
06:13 - main manager and Mr Krabs doesn't report
06:15 - to anybody let's add another column
06:19 - alter table
06:22 - employees
06:24 - add
06:26 - supervisor ID
06:29 - the data type is int
06:32 - and there's our new column
06:36 - update employees
06:40 - set
06:42 - supervisor ID equal to five that would
06:47 - be Sandy she's the assistant manager
06:50 - where
06:51 - employee ID equals two that would be
06:56 - Squidward
06:59 - Squidward is now supervised by Sandy
07:03 - three
07:05 - that's for SpongeBob four is Patrick
07:09 - six is Sheldon Plankton
07:12 - now Sandy her supervisor idea is going
07:15 - to be one she is supervised by Mr Krabs
07:18 - set supervisor ID equal to one where
07:21 - employee ID equals five
07:25 - and here we are
07:27 - using a self join we are going to
07:29 - display the first and last names of all
07:31 - of our employees along with the full
07:33 - name of the person that's supervising
07:35 - them because currently we only have
07:37 - supervisor ID let's utilize a self-join
07:41 - first let's select all
07:43 - from our table employees
07:46 - we'll need to give this table an alias
07:49 - as a that's the original Let's do an
07:52 - inner join inner join
07:54 - employees as b b will be the copy how
07:59 - are we going to link these
08:02 - on the supervisor ID
08:06 - of table a
08:08 - equals the employee ID
08:12 - of table B
08:16 - all right we still have one massive
08:18 - table but we can see here that Sandy
08:20 - appears in multiple rows which is a good
08:23 - start we don't necessarily need all of
08:25 - this let's select the first name
08:28 - and last name
08:30 - of table a a DOT first name
08:33 - a DOT last name
08:36 - then I'm going to concatenate the first
08:38 - and last name of table B so concat
08:42 - B DOT first name
08:46 - I'll add a space between the first name
08:47 - and last name
08:49 - B dot last name
08:52 - I'm going to give this column an alias
08:54 - that's really ugly
08:56 - as
08:58 - reports to
09:01 - that's much better all right we have our
09:03 - hierarchy of data Squidward SpongeBob
09:05 - Patrick and Sheldon Plankton they all
09:08 - report to Sandy Sandy she reports to Mr
09:12 - Krabs that Mr Krabs doesn't report to
09:14 - anybody if you would like all of your
09:16 - employees even if they don't report to
09:17 - anybody you could instead use a left
09:19 - join
09:21 - because a left join we will display all
09:23 - of the rows from our table on the left
09:25 - so Eugene Krabs is here but he doesn't
09:27 - report to anybody so yeah basically
09:30 - speaking that's a self join you can use
09:32 - any type of join but the tables you use
09:34 - are the same one you use the original
09:37 - table then a copy of that table but
09:39 - you'll need to give them an alias to
09:41 - distinguish them when we're selecting
09:43 - the first and last names of our tables
09:44 - are we referring to the original table
09:46 - which I named as a or the copy because
09:49 - that makes a difference with self-joints
09:52 - they're great if you ever need to
09:53 - display a hierarchy of data involving
09:55 - the same table but yeah that is a
09:57 - self-join in MySQL