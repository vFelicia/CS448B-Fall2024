00:00 - hey what's going on everybody it's bro
00:02 - hope you're doing well and in this video
00:03 - i'm going to teach you guys how we can
00:05 - accept some user input in python so
00:07 - sit back relax and enjoy the show
00:12 - if you wouldn't mind please like comment
00:14 - and subscribe
00:15 - one like equals one prayer for the
00:17 - youtube algorithm
00:19 - ladies and gentlemen this is where the
00:21 - fun begins in this video i'm going to
00:23 - explain how we can accept some user
00:24 - input in python
00:26 - and we do so by using the input function
00:28 - and then we type in
00:29 - our input to the console window but it
00:31 - would probably be good practice to let
00:33 - the user know what we want them to type
00:35 - in exactly
00:36 - so let's ask for somebody's name within
00:38 - quotes inside the input function i'm
00:40 - going to type
00:42 - what is your name and now our program
00:46 - will wait for us to enter in some user
00:48 - input so you can use your own name for
00:50 - this example i'm going to type bro
00:52 - now to submit some user input you just
00:54 - type or press
00:55 - enter now you can see that my process
00:58 - finished with exit code 0 that means the
01:00 - program is done running
01:01 - so we should probably do something with
01:02 - this value we can actually assign it to
01:04 - a variable so we can use it elsewhere in
01:06 - our program
01:07 - so to do so we precede input with
01:10 - a variable like name works name equals
01:13 - input
01:13 - and when we accept some user input we
01:16 - will assign it to this variable that we
01:17 - called them
01:18 - and now we can do something with it so
01:20 - let's print a message
01:22 - involving our name variable that we have
01:24 - so how about
01:25 - hello plus name
01:28 - now when i run this program we can
01:30 - accept some user input
01:31 - and then do something with that input
01:33 - such as display message that says
01:35 - hello bro and then you can type in
01:37 - whatever you want for your name
01:38 - let's say i'm dude what is your name
01:41 - dude hello dude
01:42 - now this next part is very important
01:44 - when we accept user input it is always
01:47 - of the string data type a series of
01:50 - characters
01:51 - what if we need to accept a number well
01:53 - you can but you can't normally perform
01:55 - any math on it because it's of the
01:57 - string data type
01:58 - we would need to cast it as either of
02:00 - the integer data type
02:02 - or of the float data type so here's an
02:04 - example of why we can't perform any math
02:07 - on a string let's say we have a variable
02:10 - called edge
02:11 - age equals input and let's ask how old
02:14 - somebody is
02:15 - how old are you
02:19 - now i will add one to somebody's age
02:21 - let's pretend it's their birthday
02:23 - age equals age plus one this will add
02:25 - one to their age
02:26 - now let's try and run this what is your
02:28 - name bro
02:30 - how old are you let's say that i'm 21.
02:33 - okay we ran into an air a type error
02:36 - can only concatenate string to string
02:39 - with what i mentioned previously we
02:41 - cannot normally use
02:42 - strings for any sort of mathematical
02:44 - equation or operation
02:46 - we'll want to cast it to the integer or
02:48 - the float data type
02:50 - so let's cast our user input to the
02:53 - integer data type
02:54 - and we will surround our user input with
02:56 - a cast
02:58 - surround your input with a set of
02:59 - parenthesis and precede this with int
03:02 - and now we can use this user input in a
03:04 - mathematical operation
03:06 - so let's try it even though this won't
03:08 - display age yet so
03:10 - what is your name bro 21 and our program
03:13 - finished with an x account of zero there
03:15 - were no problems
03:16 - now let's attempt to display this age so
03:19 - i will print
03:22 - u r plus
03:25 - age plus years
03:28 - old we're doing some string
03:30 - concatenation here
03:32 - what is your name bro how old are you 21
03:35 - alright we ran into a type error again
03:38 - can only concatenate string to string
03:40 - you cannot normally display a variable
03:43 - of the integer data type
03:45 - along with strings because we're doing
03:47 - string concatenation we're adding
03:49 - strings together
03:50 - we would need to convert this variable
03:52 - back to the string data type
03:54 - so we can cast it we'll surround our
03:56 - edge variable with a cast
03:58 - now this is what's gonna happen we will
04:00 - accept some user input
04:01 - it will be of the string data type and
04:03 - then we will immediately cast it to be
04:05 - of the integer data type so that we can
04:07 - treat it
04:08 - as a number instead of a character and
04:11 - then if we need to display this age
04:13 - we will need to convert it back to a
04:15 - string so that we can use some string
04:17 - concatenation
04:18 - and display all of these strings
04:19 - together and now let's try this theory
04:22 - so what is your name bro how old are you
04:24 - let's say i'm 21
04:26 - hello bro you are 22 years old here's a
04:28 - situation
04:29 - what if we enter a number that contains
04:31 - a decimal portion
04:33 - so let's try this again let's say i'm
04:35 - 21.5 years old
04:38 - well now we ran into a different issue a
04:40 - value error
04:41 - invalid literal for int with base 10
04:44 - that means if we cast a string as an
04:47 - integer
04:48 - it can only be a whole number a portion
04:50 - that does not contain
04:51 - a decimal and that is where the float
04:54 - data type would come in
04:56 - it is a data type that can contain a
04:58 - decimal portion
04:59 - for this example let's create a third
05:02 - variable called height and we will ask
05:04 - for somebody's height
05:06 - input we'll create a prompt that says
05:09 - how
05:10 - tall are you
05:14 - and we will cast this to be of the float
05:17 - data type
05:18 - so that our string our user input can
05:21 - contain a decimal portion and then we
05:24 - can treat it
05:25 - as a number instead of a series of
05:27 - characters and i think i will delete
05:29 - this line we won't really need it
05:30 - anymore
05:31 - and then let's print their height along
05:33 - with a message
05:35 - u r plus then
05:38 - height but we need to cast this back to
05:40 - being a string
05:43 - so we'll surround our height with a cast
05:47 - plus let's say cm
05:50 - tall all right let's test this
05:54 - what is your name bro how old are you
05:57 - let's say i'm 21 how tall are you let's
06:00 - pretend that i'm 250.5 centimeters tall
06:05 - i'm adding the 0.5 just to test to see
06:07 - if this will accept a floating point
06:09 - number
06:10 - hello bro you are 21 years old you are
06:14 - 250.5 centimeters tall
06:16 - not really all right everybody so that
06:18 - is the basics of
06:19 - user input in python normally with user
06:22 - input it will give you
06:23 - a value of the string data type if you
06:26 - need to use that value for any sort of
06:28 - math
06:29 - you'll probably need to cast it to be of
06:31 - the integer or the float data type so if
06:34 - you would like a copy of this code i
06:36 - will post this in the comment section
06:37 - down below
06:38 - but yeah that's how to accept user input
06:41 - in python
06:43 - hey you yeah i'm talking to you if you
06:45 - learned something new
06:46 - then help me help you in three easy
06:49 - steps
06:49 - by smashing that like button drop a
06:51 - comment down below
06:52 - and subscribe if you'd like to become a
06:54 - fellow bro
07:02 - [Music]
07:14 - so
07:17 - you