00:00 - hey how's it going everybody it's bro
00:02 - here hope you're doing well and in this
00:03 - video we're going to be discussing
00:05 - overloaded constructors in C++ and at
00:09 - the end of this video we're going to be
00:10 - creating a project where we're going to
00:12 - be ordering some pizzas so let's get
00:15 - into it before you reach the end of this
00:19 - video make sure to LIKE comment and
00:22 - subscribe so that we together can
00:24 - challenge and defeat the mighty YouTube
00:27 - algorithm everyone so this video is
00:30 - dedicated to overloaded constructors and
00:33 - just as a quick reminder a constructor
00:35 - is defined as a special function that is
00:38 - automatically called when an object is
00:40 - instantiated and this is useful for
00:42 - assigning arguments to variables right
00:44 - away when we create an object of some
00:46 - sort so a good example of this would be
00:49 - pizza objects pizzas have varying
00:52 - amounts of ingredients so I have for
00:54 - example for different pizza constructors
00:56 - here and this is legal you can reuse the
00:59 - same constructor name as long as there
01:01 - are different sets of parameter setup so
01:04 - for the first constructor I have four
01:07 - string parameters set up a bread a sauce
01:10 - a cheese and a topping the third just
01:12 - has three a bread a sauce and a cheese
01:14 - then two a bread and a sauce and lastly
01:17 - just a bread so we can create pizza
01:19 - objects and we will use a matching
01:22 - constructor when we instantiate an
01:24 - object depending on how many ingredients
01:26 - we send our constructor so let's
01:28 - actually work on a program where we're
01:30 - going to construct some pizzas and order
01:32 - them so to begin let's create a pizza
01:35 - class so class pizza but make sure you
01:39 - spell it right because I didn't and then
01:41 - we'll want to make these members public
01:44 - so we can access them from our main
01:46 - method so we'll create the first pizza
01:49 - constructor honestly I shouldn't have
01:51 - deleted everything but too late I
01:52 - already did so we'll pass in a string
01:56 - bread string sauce string cheese and
02:04 - string topping
02:10 - and then what we'll do is just assign
02:12 - these values right away so this bread
02:18 - equals whatever bread we receive and
02:21 - we'll do the same thing for sauce cheese
02:29 - and topping
02:41 - all right now we'll actually want to
02:44 - declare these variables so we're going
02:47 - to do that before our constructors so
02:49 - string bread but we're not going to
02:51 - assign them string sauce string cheese
02:56 - and string topping all right so this is
03:02 - our first constructor but I misspelled
03:04 - sauce there so this is our first
03:06 - constructor we can actually create
03:08 - another constructor with different
03:10 - parameters so I'm just going to copy
03:11 - this and paste it we're going to get rid
03:14 - of our topping and then we'll get rid of
03:19 - this line too we'll copy this and make
03:23 - another constructor so this one's just
03:25 - going to be bread and sauce and the last
03:30 - one is just bread okay we have our
03:36 - constructors made up so let's create an
03:39 - order function maybe we'll call this
03:42 - order pizza and this doesn't return
03:49 - anything so we'll put void here all
03:52 - right let me think of something okay I
03:53 - thought of an idea we're going to
03:55 - display a message that says here is your
03:58 - then list all of the ingredients that
04:00 - are not empty and then just add the word
04:02 - pizza at the end kind of like somebody's
04:05 - delivering it to us or we're delivering
04:07 - it to somebody so within our order pizza
04:10 - function here we will just see out here
04:14 - is your and then the next step is we're
04:21 - going to check to see if our bread is
04:23 - not empty so if bread dot empty function
04:29 - but we're going to put the not logical
04:32 - operator here so if our bread is not
04:35 - empty what we'll do is see out whatever
04:39 - our bread variable is and then maybe
04:42 - we'll just add a dash after it now we're
04:46 - going to do the same thing for sauce
04:48 - then cheese and then what was it topping
04:51 - at the end yeah
04:53 - so if sauce is not empty well display
04:58 - whatever the sauce is same thing for
05:01 - cheese and lastly topping all right and
05:13 - then we'll just add the word pizza at
05:14 - the end so see out pizza but maybe I
05:22 - should turn this last one into his space
05:27 - then end of line okay we're good to go
05:31 - then let's construct some pizza objects
05:33 - now to instantiate an object we first
05:36 - need to list the class as the data type
05:39 - so this is going to be a pizza object
05:42 - and you can see that we have it right
05:43 - here for the class name so next we need
05:46 - a name for this pizza let's call this
05:49 - maybe first underscore pizza and then we
05:56 - can pass in some ingredients as
05:58 - arguments so let's pass in a type of
06:01 - bread so maybe thick crust and let's
06:07 - pass in a sauce I'm not sure what the
06:09 - standard sauce Pizza uses it's some sort
06:11 - of red sauce it's a mystery to many and
06:14 - then what about mozzarella I'm probably
06:21 - misspelling that I always do and then
06:24 - you know what that's it let's just stick
06:26 - with these three ingredients and then
06:30 - we'll call the order pizza function so
06:33 - we'll type in the name of our pizza
06:35 - first underscore pizza and then we will
06:40 - order pizza and let's run this
06:51 - okay here is your thick crust red sauce
06:55 - mozzarella pizza now let's create a
06:58 - second pizza with different ingredients
07:00 - now so pizza I'll call this second pizza
07:05 - and I want flat bread and I don't know
07:15 - Alfredo and that's it and then we will
07:21 - order our second pizza so ii underscore
07:26 - pizza order pizza function here is your
07:33 - flatbread alfredo pizza now that's one
07:37 - of the benefits of using overloaded
07:39 - constructors is that they allow us to
07:41 - instantiate different objects with
07:44 - varying arguments and this works great
07:46 - for constructing pizza objects because
07:49 - pizzas can have varying different types
07:52 - or amounts of ingredients depending on
07:54 - the pizza so for the first pizza this
07:57 - has three arguments and the second one
07:59 - has two now if we were to take these out
08:02 - and we only had this one constructor
08:05 - that needed four ingredients well this
08:08 - actually wouldn't work anymore because
08:09 - if we were to construct a pizza we need
08:12 - at least four ingredients but if we put
08:15 - these back in we can have between one to
08:18 - four ingredients but you know you can
08:20 - have more than this two you can have a
08:22 - pizza constructor with five ingredients
08:24 - six ingredients so on and so forth well
08:27 - that's the basics of overloaded
08:29 - constructors so if you would like a copy
08:31 - of all the code here I'll post this in
08:33 - the comments down below if you're
08:35 - looking for additional practice then
08:37 - your assignment is to create a set of
08:41 - overloaded constructors and then post it
08:43 - in the comments but yeah that is the
08:45 - basics of overloaded constructors in C++
08:49 - hey you yeah I'm talking to you if you
08:53 - learn something new then you can help me
08:55 - help you in 3 easy steps by smashing
08:59 - that like button
09:00 - drop a comment down below and subscribe
09:02 - if you'd like to become a fellow bro
09:05 - [Music]