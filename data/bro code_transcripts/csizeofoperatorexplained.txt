00:01 - you guys ready all right let's talk
00:03 - about the size of operator the size of
00:05 - operator determines the size in bytes of
00:08 - a variable data type class objects etc
00:13 - whatever you would like to find the size
00:15 - of you stick within the parentheses of
00:17 - the size of operator here's an example
00:18 - let's create a double
00:21 - double gpa
00:23 - our gpa will be
00:25 - a solid 2.5 to determine the size in
00:29 - bytes of my variable or a data type i
00:32 - will just place within the set of
00:33 - parenthesis
00:34 - i'll display this
00:36 - standard
00:37 - output
00:39 - size of operator i would like to return
00:41 - the size of my gpa variable
00:44 - then i'll just add a string
00:47 - bytes
00:48 - new line
00:50 - let's take a look the size of my gpa
00:53 - variable is 8 bytes that's the maximum
00:56 - size allocated to my double variable if
00:59 - i was to replace gpa with a data type
01:02 - such as double well this would be the
01:04 - same 8 bytes this will be helpful in the
01:06 - future when we begin working with arrays
01:08 - so let's try a couple other variables
01:10 - i'll create a string standard string
01:13 - name
01:14 - assign some name
01:16 - then i will find the size of the string
01:19 - size of name
01:22 - the size of a string is 32 bytes because
01:25 - a string really just holds an address to
01:28 - where some text is located the address
01:30 - of where the string of text is located
01:33 - is 32 bytes even if i were to change the
01:35 - size of the string bro code is awesome
01:39 - well this size is still going to be the
01:41 - same 32 bytes because a string is a
01:44 - reference data type let's try a couple
01:46 - other examples how about a character
01:49 - char grade
01:52 - my grade will be an f
01:54 - i will find the size of this character
01:57 - grade
01:58 - the size of a character is one byte
02:03 - let's try a boolean boolean student
02:06 - is somebody a student true or false
02:09 - i'll play student within the size of
02:11 - operator
02:13 - a boolean variable also takes one byte
02:15 - of memory this time let's find the size
02:17 - of an array in bytes i'll create an
02:20 - array of characters
02:22 - char
02:23 - grades this will be an array
02:26 - i'll set the sequel to some grades
02:29 - a
02:30 - b
02:32 - c
02:34 - d then f
02:37 - i'll place my array within the size of
02:39 - operator
02:41 - the size of this array grades is five
02:44 - bytes remember that characters take up
02:47 - one byte of memory an array of five
02:49 - characters would be well five bytes
02:51 - we can use the size of operator to
02:53 - calculate how many elements are within
02:55 - an array if we have the total size of
02:58 - our ray we could divide this by the size
03:00 - of one element
03:03 - size of
03:05 - grades
03:06 - at index of zero or otherwise we can
03:09 - find the data type
03:11 - we'll divide the size of my array grades
03:14 - divided by the size of a character
03:18 - so i should have these many elements
03:21 - five elements within my array of grades
03:24 - if i were to add one more grade like an
03:26 - e even though that's not a typical grade
03:29 - well then the total elements within that
03:31 - array would be six elements that's a
03:34 - useful trick to calculate the size of an
03:36 - array how many elements are within that
03:37 - array one more this will be a bonus
03:40 - question
03:41 - i'll create an array of strings
03:44 - i'll name the students
03:47 - we'll enter in some student names
03:50 - such as spongebob
03:55 - patrick
03:57 - then
03:58 - squidward to calculate how many strings
04:01 - are within this array how many students
04:03 - we have we can find the size of my array
04:06 - students divided by the size of a string
04:15 - i have three elements within this array
04:17 - of students then i could add one more
04:20 - and this equation should calculate that
04:22 - i'll add sandy
04:25 - size of students divided by the size of
04:28 - a string
04:29 - would give me
04:31 - four elements so yeah that's the size of
04:33 - operator everybody it will return the
04:36 - size and bytes of a variable data type
04:39 - class objects all sorts of things it
04:42 - will be really helpful when working with
04:44 - arrays because we can determine the size
04:46 - of an array but we'll get some practice
04:48 - with that in the future and well yeah
04:50 - that's the size of operator in c plus