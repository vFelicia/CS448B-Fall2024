00:00 - hey what's going on everybody it's your
00:01 - bro hope you're doing well and in this
00:03 - video i'm going to teach you guys about
00:04 - polymorphism in java so
00:06 - sit back relax and enjoy the show
00:10 - if you find this video helpful please
00:12 - remember to like
00:13 - comment and subscribe your support will
00:16 - help keep this channel running
00:18 - polymorphism this is a greek word for
00:21 - poly meaning many
00:22 - and morph meaning form or forms it's the
00:25 - ability of an object to identify
00:27 - as more than one type think of it as
00:29 - being identified as more than one
00:32 - data type here's an example let's say
00:34 - we're going to have a race
00:35 - and we can enter in all different sorts
00:37 - of vehicles into this race they don't
00:39 - all have to be the same
00:40 - so we have a few additional classes a
00:42 - class called vehicle
00:44 - vehicle is going to act as the parent
00:45 - class for my class car
00:47 - so car extends vehicle bicycle bicycle
00:51 - extends vehicle
00:52 - and boat boat extends vehicle so car
00:55 - bicycle and boat are all subclasses or
00:57 - children classes of the vehicle
00:59 - superclass
01:01 - so let's create an instance of our car
01:03 - bicycle and
01:04 - boat luckily through the magic of
01:06 - copying and pasting i have done that
01:07 - already we have a car object
01:09 - a bicycle object and a boat object so
01:12 - let's store
01:13 - well at least attempt to store all of
01:15 - these objects within an array called
01:16 - racers
01:17 - bracers equals and then we will place
01:21 - our car
01:23 - bicycle and boat within this array so
01:25 - what's the data type of this array going
01:27 - to be
01:28 - well we're going to have a problem could
01:30 - we make this cars
01:32 - well we can store our car object within
01:34 - an array of cars but not our bicycle and
01:36 - our boat
01:38 - the same thing goes for bicycle we can
01:39 - store our bicycle but not the car in the
01:41 - boat
01:42 - and lastly with the boat data type we
01:45 - can store the boat but not the car and
01:46 - the bicycle
01:47 - and to solve this issue we can use the
01:49 - power of polymorphism
01:51 - so for example our car identifies as a
01:54 - car
01:54 - but since it extends the vehicle class
01:57 - it also identifies as a vehicle
01:59 - same thing goes with our bicycle and our
02:01 - boat so
02:03 - one thing they all have in common is
02:04 - that they are all vehicles
02:06 - so we can change the data type of this
02:08 - array to vehicles
02:10 - and therefore we can store our car our
02:12 - bicycle
02:13 - and our boat because all of these
02:15 - objects also
02:16 - identify as vehicles so if you're going
02:18 - to store objects within an array
02:20 - and they're all different object types
02:22 - you would have to find what they have in
02:24 - common
02:25 - and make an array of that type so that's
02:27 - how to store
02:28 - different objects within an array using
02:30 - polymorphism and now for our wrists
02:32 - we're going to call
02:33 - a go method that we're going to define
02:35 - within each of our classes car
02:37 - bicycle and boat so let's begin with car
02:39 - let's create a go method
02:40 - so let's make this public void it's not
02:43 - returning anything
02:44 - and this will be called go so when we
02:47 - call this method
02:48 - all we'll do is have a print line
02:50 - statement system.out.printline
02:53 - let's say something like the car begins
02:57 - moving okay let's repeat the process for
03:00 - bicycle and boat
03:02 - let's change car to bicycle
03:07 - and within the boat class car to boat
03:10 - so each of these methods well each of
03:13 - these classes
03:14 - has their own go method and we could
03:16 - call them individually kind of like this
03:18 - car.go bicycle.go
03:23 - and boat.go
03:26 - so this would work but there's actually
03:28 - a better way to write this
03:30 - and what would be better is if we were
03:31 - to create an enhanced for loop to
03:33 - iterate through all of the elements of
03:35 - this array of vehicles
03:37 - so the data type for this enhanced for
03:39 - loop is going to be vehicle
03:40 - we'll use x as our counter colon and
03:43 - then the name of the array which is
03:45 - racers so this is going to iterate once
03:47 - through all of the elements of this
03:49 - array of vehicles called racers
03:51 - x represents the vehicle we are
03:53 - currently working with
03:55 - so x dot and we would like to use the go
03:58 - method
03:59 - so our enhanced for loop doesn't care
04:01 - what kind of vehicle you are
04:02 - if you're a car a bicycle or a boat it
04:05 - cares
04:05 - that you're a vehicle and if you're a
04:07 - vehicle use your go method whatever kind
04:09 - of vehicle you are
04:10 - so there's one more step to this too the
04:13 - method go
04:14 - is undefined for the type vehicle so we
04:16 - need to make sure we have
04:17 - this go method within our class of
04:19 - vehicle
04:20 - and i just generated that here so what
04:23 - we're doing is actually
04:24 - method overriding within the car the
04:26 - bicycle and the bulk class
04:27 - so this isn't necessary but it's
04:29 - considered good practice to add the
04:31 - add override annotation to each of these
04:33 - methods
04:34 - and then our enhanced for loop is going
04:36 - to iterate through all of the elements
04:38 - of our array of vehicles called
04:40 - racers so it doesn't care what kind of
04:42 - vehicle you are
04:43 - if you're a vehicle use your go method
04:45 - well luckily our car
04:46 - our bicycle and our boat all also
04:49 - identify as a vehicle
04:50 - so that's all that polymorphism is it's
04:53 - the ability of an object to identify
04:56 - as more than one type think of it as
04:58 - identifying as more than one data type
05:00 - our car does identify as a car but it
05:03 - also identifies as a vehicle
05:05 - same thing can be said with our bicycle
05:07 - and our boat
05:08 - but not only that all objects are
05:11 - children classes of the
05:13 - object class so they also identify as
05:16 - objects so you could write this using
05:19 - the object data type but there's a few
05:20 - other changes that we would have to make
05:22 - so that's all that polymorphism is it's
05:25 - the ability of an object to identify as
05:27 - more than one type
05:28 - so if you would like a copy of all this
05:29 - code i will post all of this in the
05:31 - comments down below
05:32 - but yeah that's the basics of
05:34 - polymorphism in java
05:37 - hey you yeah i'm talking to you if you
05:40 - learn something new
05:41 - then you can help me help you in three
05:44 - easy steps
05:45 - by smashing that like button drop a
05:47 - comment down below
05:48 - and subscribe if you'd like to become a
05:50 - fellow bro
05:52 - [Music]
06:11 - you