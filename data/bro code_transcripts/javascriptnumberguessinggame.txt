00:00 - hey what's going on everybody in this
00:01 - video we're going to create a number
00:03 - guessing game using JavaScript so why
00:05 - don't you go ahead and sit back relax
00:07 - and enjoy the show all right let's get
00:09 - started everybody so the first thing
00:11 - that we're going to need is to set the
00:12 - minimum and the maximum numbers in our
00:14 - number guessing game so we'll create two
00:17 - constants const minum for the
00:21 - minimum I will set my minimum to be one
00:24 - but feel free to pick a different number
00:25 - if you would like then a maximum const
00:29 - Maxum
00:30 - I will set my maximum to be 100 so what
00:33 - we got to do is generate a random number
00:35 - between our minimum and our maximum
00:38 - inclusively so let's create another
00:40 - constant const answer then we'll
00:44 - generate a random number between one and
00:46 - 100 our minimum and our maximum to do
00:49 - that we can type math.
00:51 - random the random method of math will
00:54 - generate a random number between zero
00:56 - and one we will multiply this by within
00:59 - a set of parentheses the range between
01:02 - our maximum minus our
01:05 - minimum then add plus
01:07 - one let's see what we have so far just
01:10 - to test everything I'm going to
01:13 - console.log our
01:16 - answer okay let's inspect go to console
01:20 - here's my answer currently 56 point and
01:23 - then a bunch of decimal places after I
01:25 - will round our answer by enclosing this
01:28 - equation with math. to round
01:31 - down okay let's see what we get again 39
01:36 - 899 20 71 27 17 46 okay that seems like
01:41 - it's working what if we have a higher
01:44 - minimum let's say between 50 and
01:49 - 100 well I have 7 22 43 numbers that are
01:54 - below our minimum so if we have a
01:56 - minimum besides one I will add to the
01:59 - the end of this equation our minimum
02:02 - again okay let's see if that works so if
02:05 - I need a random number between 50 and
02:07 - 100 this equation should work 97 80 79
02:12 - 52 all right that seems like it's
02:14 - working so this is the equation you'll
02:16 - need to generate a random number between
02:18 - your minimum that you set and your
02:20 - maximum but let's change our minimum
02:22 - back to one and make sure our maximum is
02:25 - 100 all right let's move on to step two
02:28 - we'll create a variable name attempts to
02:31 - keep track of the attempts it takes a
02:32 - user I will set attempts to be zero and
02:36 - let
02:38 - guess I will declare this variable but
02:40 - not assign it quite yet we'll take care
02:42 - of that later I will also create a
02:44 - Boolean variable named running and I
02:46 - will set this to be
02:48 - true the reason that we have the Boolean
02:50 - variable running is so that we can exit
02:53 - the game when it's over we'll set
02:55 - running to equal false so to keep the
02:57 - game running we'll use a while loop
03:00 - while running equals true now if this is
03:04 - a Boolean variable you don't necessarily
03:06 - need this portion equals true you can
03:09 - just set this to be while
03:11 - running while this Boolean is true keep
03:15 - the game going then when we want to exit
03:17 - the game we will set running to equal
03:21 - false so that will be at the
03:23 - end now we need to accept some user
03:26 - input I'll do this with the window
03:28 - prompt we will set our guest to equal
03:33 - window.
03:35 - prompt I'll use a template
03:39 - literal guess a
03:41 - number
03:43 - between I'll add a
03:45 - placeholder our
03:48 - minimum through add another placeholder
03:51 - our
03:53 - maximum all right to test this I'm going
03:55 - to
03:58 - console.log
04:00 - the type of
04:02 - guess as well as what guess is there's
04:04 - something I need to show you guess I
04:06 - number between one and 100 I'll guess
04:08 - something right in the middle 50 let's
04:11 - inspect go to console so my user input
04:14 - of 50 is a string data type we'll need
04:17 - to convert it to a number for
04:20 - comparisons so after we get our guess
04:23 - let's reassign it and typ cast it as a
04:26 - number
04:28 - type let's let's try that again guess a
04:30 - number between 1 and 100 I'll type 50
04:33 - okay inspect console we have our guess
04:37 - of 50 and it's a number data type what
04:39 - if you were to type in something that
04:41 - wasn't a number like a string of
04:43 - characters such as
04:45 - Pizza here's the
04:48 - result if you type cast some characters
04:50 - that are non-numeric you know the number
04:53 - 0 through 9 you'll end up with not a
04:55 - number Pizza can't be converted to a
04:57 - number unfortunately I will delete this
05:00 - line of code we no longer need it I'll
05:02 - add an if statement there's a function
05:05 - to check to see if something is not a
05:07 - number is not a number
05:10 - function if our guess is not a number if
05:14 - this evaluates to be true let's add an
05:17 - alert window.
05:21 - alert please enter a valid
05:26 - number guess a number between 1 and 100
05:29 - What if I type
05:30 - pizza please enter a valid number now
05:33 - what if somebody types in a guess that's
05:35 - below our minimum or above our maximum
05:38 - I'll add an else if
05:40 - statement else if our guess is below our
05:46 - minimum or our guess is above our
05:52 - maximum will window. alert please enter
05:56 - a valid number again guess a number
05:58 - between 1 and 100 what if I type in 150
06:02 - that's above our maximum please enter a
06:04 - valid
06:05 - number please enter a number between 1
06:07 - and
06:08 - 1001 please enter a valid number if the
06:11 - user's guess is a number and it's
06:15 - between our range between the minimum
06:16 - and the
06:19 - maximum we'll execute an L statement if
06:22 - they reach the L statement that means
06:24 - they have a valid number we'll increase
06:26 - our attempts variable by one attempts
06:29 - Plus plus to increment
06:32 - it if the
06:35 - guess if the guess is less than the
06:39 - answer then will window.
06:44 - alert too low try
06:52 - again else if the guess is greater than
06:56 - the
06:58 - answer will window.
07:01 - alert to high try again if the guess
07:05 - isn't lower than the answer and the
07:07 - guess isn't higher than the answer that
07:09 - means the guess must equal the answer
07:12 - within an else
07:14 - statement we'll congratulate the user
07:17 - they have the right answer
07:18 - window.
07:22 - alert
07:25 - correct the
07:28 - answer was
07:30 - and I should probably use a template
07:32 - literal for this if we're inserting
07:34 - variables the
07:38 - answer we'll let the user know how many
07:40 - attempts it took it took
07:44 - you the variable
07:46 - attempts then the word
07:52 - attempts at the end of our lse statement
07:54 - we'll move running equals false to
07:57 - within the lse statement at the end to
07:59 - ex at the game we no longer want to play
08:01 - once we have the correct answer all
08:03 - right and this should work let's try it
08:06 - guess a number between 1 and 100 I'll
08:09 - guess something right in the middle 50
08:11 - too low try again okay so the answer is
08:14 - between 50 and 100 75 too high so it's
08:19 - between 50 and
08:20 - 75
08:22 - 62 too
08:24 - low
08:26 - 68 too high so it's between 62 and
08:31 - 68
08:33 - 65 too
08:35 - high 63 too
08:38 - low
08:40 - 64 yeah correct the answer was 64 it
08:43 - took you seven attempts and we can exit
08:47 - all right everybody so that is a number
08:49 - guessing game in
08:52 - JavaScript