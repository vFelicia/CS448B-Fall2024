00:00 - hey what's going on everybody it's your
00:01 - bro hope you're doing well and in this
00:03 - video i'm going to teach you guys how we
00:04 - can copy objects in java so
00:06 - sit back relax and enjoy the show
00:11 - if you find this video helpful please
00:12 - remember to like
00:14 - comment and subscribe your support will
00:16 - help keep this channel running
00:18 - alright everybody i'm going to teach you
00:20 - all how we can copy objects
00:22 - in java here's an example of the setup
00:24 - that i have so far
00:26 - we're going to be copying some car
00:28 - objects and i have an additional
00:30 - class called car and we're going to be
00:32 - using some encapsulation in this video
00:34 - based on the last video on encapsulation
00:37 - so we have some private variables
00:39 - a private make model and year we have a
00:42 - constructor for this car
00:43 - and when we receive each of these
00:45 - arguments we're going to call the
00:46 - appropriate sutter method
00:48 - to assign each of these values and we
00:50 - have some getter methods as well for
00:52 - each of these values in case we want to
00:54 - get them here's what i'm doing within my
00:56 - main method i have created
00:58 - two cars carb one and car two car one is
01:01 - a chevy camaro the year is 20 21.
01:03 - car 2 is a ford mustang the year is 20
01:06 - 22.
01:07 - i'm going to be first printing the
01:09 - addresses of car 1 and car 2
01:12 - where these objects are stored in memory
01:14 - as well as all of car 1's attributes
01:16 - that make the model and the year using
01:18 - the getter methods
01:19 - and car 2s make model and year using the
01:22 - getter methods as well
01:23 - so this is what we have these are the
01:25 - addresses of these two objects
01:27 - car one has an address of this in memory
01:30 - car two has an address of
01:32 - this in memory here are all of car ones
01:35 - attributes it's a chevy camaro the year
01:37 - is 2021
01:38 - which we stated here and our second car
01:41 - is a ford mustang the year is 2022
01:44 - and we just displayed all of the
01:45 - attributes using the appropriate getter
01:47 - methods
01:48 - let's say that we would like to copy the
01:50 - values from car 1
01:52 - over to car two and a common
01:54 - misconception that people might do
01:56 - or write is that they would write
01:58 - something like this
02:00 - car two equals car one and you do not
02:03 - want to do this
02:04 - here's why so with these two addresses
02:07 - of these cars
02:09 - they now have the same address and it
02:11 - appears
02:12 - that these values copied over well
02:15 - that's because
02:16 - car 2 and car 1 are now the same exact
02:19 - car because
02:20 - they have the same address what we
02:22 - actually did
02:23 - was give car one two different names for
02:26 - all intents and purposes
02:28 - car one is referred to as both car one
02:30 - and car two
02:31 - because they share the same address in
02:33 - memory so even though it appears that
02:35 - these values have copied over
02:37 - they're really just pointing to the same
02:38 - car in memory so we're not going to be
02:41 - stating car 2 equals card 1
02:43 - we're going to be creating a copy method
02:45 - within our car class
02:46 - to assign the values from car 1 and
02:49 - apply
02:50 - them to car 2. so let's create a copy
02:53 - method but first we'll want to call this
02:55 - so this will look something like this
02:57 - car 2
02:58 - dot copy and we're going to pass in the
03:01 - object that we want to copy
03:02 - we would like to pass in car1 so we're
03:05 - sending a car
03:06 - object as an argument to this method now
03:09 - we need to set up this method within the
03:11 - car class
03:12 - so let's go to our car class and create
03:14 - a copy method
03:15 - public void it's not returning anything
03:17 - and we will call this copy
03:19 - and this takes one argument this will
03:22 - take a
03:22 - car object as an argument so we'll just
03:25 - call this
03:26 - car x and what we have to do within this
03:29 - method
03:30 - is copy the attributes from car one
03:33 - over to car two and this is how we can
03:35 - do that
03:36 - so we can use the this keyword right now
03:38 - we're referring to
03:39 - car two because car two is
03:42 - the object that has called this method
03:45 - so this
03:46 - refers to cartoon
03:49 - this and we're going to use the setters
03:51 - set make set model and set here
03:53 - so this dot set make
03:59 - this dot set model
04:02 - and this dot set here
04:07 - now we need to get the values of car
04:10 - x that's the car that we passed in car
04:12 - one
04:13 - so within the arguments of each of these
04:16 - methods
04:16 - we're going to state x dot
04:19 - get make as well as
04:23 - x dot get model
04:26 - and lastly x dot get ear
04:31 - and that's all there is to it so if we
04:34 - head back to
04:34 - our main method and run this these cars
04:38 - now have two different addresses and
04:40 - memory so they are both different cars
04:42 - but they have the same attributes
04:44 - they're both chevy camaros and the year
04:46 - is 2021.
04:48 - here's a scenario so what if we would
04:50 - like to copy the values
04:51 - from one car and apply them to another
04:54 - but this time we'll do it
04:55 - when we instantiate the car instead of
04:57 - after the fact
04:59 - so for this example let's turn these two
05:01 - lines into
05:02 - a comment and what we're going to be
05:04 - doing is creating something called a
05:05 - copy constructor
05:07 - so let's instantiate cartoon like we
05:09 - normally would so car
05:11 - car 2 equals new car but within the
05:15 - constructor
05:15 - of our car we're going to pass in car 1
05:19 - as an argument and make a copy of this
05:21 - so we're going to be using some
05:23 - overloaded constructors and the second
05:25 - constructor is going to be the
05:27 - copy constructor so car
05:31 - the parameter is a car object so we
05:34 - passed in
05:35 - a car as an argument and we have to set
05:37 - up the parameter for
05:38 - our car copy constructor so this will
05:41 - take a car and we'll call this
05:42 - x so we would like to take the values of
05:45 - car x
05:46 - and apply them to the values of our new
05:48 - car when we construct it
05:49 - luckily we already have a copy method to
05:52 - take care of that
05:53 - so it's just a matter of calling this
05:55 - method from within the constructor
05:57 - so this dot copy and we're going to make
06:00 - a copy of car x that we receive
06:03 - when we call the car constructor so this
06:06 - will do the same thing as it did before
06:09 - these are two different cars but they
06:10 - all have the same values
06:12 - the difference is that we assigned the
06:14 - values from car 1 and applied them to
06:17 - car 2
06:17 - when we constructed this car object well
06:20 - ladies and gentlemen that's the basics
06:22 - of copying objects
06:23 - in java if you would like a copy of all
06:25 - this code i will post all of this in the
06:27 - comments down below
06:28 - but yeah that's how to copy objects in
06:31 - java
06:32 - hey you yeah i'm talking to you if you
06:35 - learn something new
06:36 - then you can help me help you in three
06:39 - easy steps
06:40 - by smashing that like button drop a
06:43 - comment down below
06:44 - and subscribe if you'd like to become a
06:46 - fellow bro
06:47 - [Music]
07:07 - you