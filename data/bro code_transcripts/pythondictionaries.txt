00:00 - hey what's going on everybody it's you
00:02 - bro hope you're doing well
00:03 - and in this video i'm going to explain
00:05 - how dictionaries work in python so
00:07 - sit back relax and enjoy the show
00:12 - if you wouldn't mind please like comment
00:15 - and subscribe
00:16 - one like equals one prayer for the
00:18 - youtube algorithm
00:20 - all right let's get down to business a
00:22 - dictionary is a
00:23 - changeable unordered collection of
00:26 - unique key value pairs they're fast
00:30 - because they use hashing and they allow
00:32 - us to access a value quickly
00:34 - now to create a dictionary it's very
00:36 - similar to creating
00:37 - a set based on the last video except
00:40 - we're going to store unique
00:41 - key value pairs let's create a
00:44 - dictionary
00:44 - of countries and their capitals we can
00:47 - store those
00:48 - as key value pairs so let's call this
00:51 - dictionary
00:52 - capitals capitals equals then we need a
00:55 - set of curly braces much like what we
00:57 - use
00:57 - with sets now we need a key
01:00 - and a value let's say we have the usa as
01:03 - a key
01:04 - and the capital of the usa would be
01:07 - washington dc
01:08 - so in order to associate a value with
01:11 - the key we'll follow
01:12 - the key with a colon and then add some
01:14 - value and the data type really doesn't
01:16 - matter but in this case we're just using
01:18 - strings
01:18 - so the capital of the usa would be
01:21 - washington
01:22 - dc and to add another key value pair
01:25 - we'll separate each with a comma and
01:28 - let's add a few others for good measure
01:30 - so let's say we have india next as a key
01:33 - and the value would be new
01:36 - delhi and we'll add two more let's say
01:39 - we have china
01:42 - and the capital of china is beijing
01:45 - and lastly let's add russia
01:50 - and the capital of russia is
01:53 - moscow and there you have it ladies and
01:55 - gentlemen we now have a
01:57 - dictionary called capitals that has
01:59 - unique
02:00 - key value pairs so remember with
02:02 - dictionaries
02:03 - they are unordered in order to access
02:05 - one of these values
02:06 - instead of using a numbered index we're
02:08 - going to use the associated key with
02:10 - that value
02:11 - here's an example let's say i would like
02:13 - to print the capital
02:15 - of russia so i need to use this key of
02:18 - russia
02:19 - so in order to do this type in the name
02:21 - of the dictionary
02:22 - followed by a set of straight brackets
02:24 - and then instead of an index number like
02:26 - 0 or 1 2 3 i'm going to use
02:30 - the key so i would like to print the
02:32 - value
02:33 - that's stored or associated with the key
02:36 - of
02:36 - russia so when i run this this will
02:39 - print
02:40 - that value which is moscow so this isn't
02:43 - always safe
02:44 - let's say we have a key that doesn't
02:46 - exist like germany
02:47 - germany is not currently within my
02:49 - dictionary so if i were to run this
02:51 - well then my program is going to
02:53 - encounter an error
02:55 - and this will interrupt the normal flow
02:57 - of my program
02:58 - a much safer way to access a key
03:01 - to check to see if it's there or not is
03:03 - to use the get method
03:05 - of dictionaries so i'm going to turn
03:07 - this line into a comment and let's try
03:09 - this again but this time we'll use the
03:10 - get method
03:11 - so type in the name of the dictionary
03:13 - dot get
03:16 - and list the key that you want to use
03:19 - so i would like to see if germany
03:22 - is within my dictionary currently there
03:25 - isn't so this will return
03:27 - none and we will not encounter an error
03:29 - so this is a much
03:30 - safer way of checking to see if there is
03:33 - a key
03:33 - within your dictionary here's a few
03:35 - other useful methods
03:36 - there is a method to print only the keys
03:39 - so we type in
03:40 - the name of the dictionary capitals and
03:43 - here's a listing of all of the methods
03:45 - that we have access to
03:47 - i'm looking for the keys method and this
03:49 - will print
03:50 - only the keys and not the values we can
03:53 - also print
03:54 - just the values and not the keys so type
03:57 - in the name of the dictionary again
03:59 - capitals dot values
04:03 - and this will print only the values or
04:06 - you could print everything
04:07 - both the keys and the values and you do
04:10 - so by using
04:11 - the items method capitals
04:14 - dot items
04:19 - and this will print your entire
04:20 - dictionary one other way in which we can
04:23 - display
04:23 - all of the key value pairs in a
04:25 - dictionary is to use a for loop
04:27 - so at the end let's create a for loop
04:29 - for
04:30 - key comma value in
04:34 - capitals dot items
04:37 - this is going to iterate once for each
04:40 - key value pair
04:41 - in my dictionary for each key value in
04:44 - capitals
04:45 - dot items print
04:48 - key comma value
04:51 - and this will print my entire dictionary
04:54 - a feature of dictionaries
04:56 - is that they are mutable that means we
04:58 - can change them or
04:59 - alter them after the program is already
05:01 - running so
05:02 - one way in which we can do that is to
05:04 - use the update method of dictionaries
05:07 - so let's add germany as a key and give
05:10 - it a value
05:11 - of berlin so type in the name of the
05:14 - dictionary capitals
05:15 - and we'll use the update method and
05:18 - within the parentheses of this method
05:20 - we'll add a set of curly braces and now
05:22 - we can add a new
05:23 - key value pair so let's add germany
05:27 - and a value of berlin so if i were to
05:31 - run this and display
05:32 - all of the key value pairs found within
05:34 - my dictionary we now have
05:36 - germany as a key and berlin as its value
05:40 - not only can you use the update method
05:42 - to add a
05:43 - new key value pair but you can update an
05:45 - existing one
05:46 - let's say we would like to change the
05:48 - capital of the usa
05:49 - so capitals dot update
05:53 - parentheses curly braces list the key
05:57 - usa colon and then we can give the usa
06:00 - a new value let's pretend that the
06:02 - united states government has decided to
06:05 - relocate
06:06 - their capital to las vegas
06:09 - so this will now update our key of usa
06:13 - with a new value and if i were to print
06:15 - all of the key value pairs
06:17 - found within my dictionary of capitals
06:20 - the usa
06:20 - has a new value of las vegas so
06:23 - the last two methods i'm going to cover
06:26 - are both pop
06:26 - and clear you can use the pop method to
06:29 - remove
06:30 - a key value pair so capitals
06:33 - dot pop parentheses and list the key
06:37 - of the key value pair that you would
06:38 - like to remove so let's say we would
06:40 - like to remove china
06:41 - so we'll list that key and then when we
06:44 - use the pop method
06:45 - that will remove this key value pair
06:48 - from my dictionary
06:49 - and then of course we have clear as well
06:51 - which will just remove everything
06:53 - capitals dot clear
06:56 - and this will clear my dictionary
06:59 - alright everybody
07:00 - so in conclusion a dictionary is a
07:03 - changeable
07:04 - unordered collection of unique key value
07:07 - pairs
07:07 - they're fast because they use hashing
07:09 - and they allow us to access
07:11 - a value quickly well that's the basics
07:14 - of dictionaries in python if you would
07:16 - like a copy of all this code i will post
07:18 - all of this in the comments down below
07:20 - but yeah that's how dictionaries work in
07:22 - python
07:25 - hey you yeah i'm talking to you if you
07:28 - learned something new
07:29 - then help me help you in three easy
07:31 - steps
07:32 - by smashing that like button drop a
07:34 - comment down below
07:35 - and subscribe if you'd like to become a
07:37 - fellow bro
07:43 - [Music]
08:00 - you