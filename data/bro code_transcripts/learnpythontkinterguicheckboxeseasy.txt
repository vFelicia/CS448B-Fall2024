00:00 - hey how's it going everybody it's your
00:01 - bro here hope you're doing well and in
00:03 - this video i'm going to teach you guys
00:04 - how we can create and customize our own
00:06 - check buttons in python so sit back
00:08 - relax and enjoy the show
00:12 - if you find this video helpful please
00:14 - remember to like
00:15 - comment and subscribe your support will
00:18 - help keep this channel running
00:20 - all right my fellow bros in this video
00:22 - we're going to be creating and
00:23 - customizing our own
00:25 - check buttons in python i sometimes
00:27 - refer to these as check boxes
00:29 - so in case i do that's what i'm
00:30 - referring to as always we'll need a
00:32 - window
00:33 - window equals tk followed by window.main
00:36 - loop
00:37 - and let's call this button just check
00:40 - button and in order to create this check
00:42 - button
00:43 - we type in the name of the check button
00:45 - equals
00:46 - check button and within the constructor
00:50 - what are we adding this check button to
00:52 - we're adding this to our window
00:54 - and also within the constructor we can
00:56 - set the different options
00:58 - for how we want to customize this check
01:00 - button let's begin with the text
01:02 - text equals i agree
01:06 - to something and last but not least we
01:10 - need to add
01:10 - this check button to the window one way
01:13 - in which we can do that
01:14 - is to use the pack function of this
01:16 - widget so follow this with
01:18 - check button dot pack when we run this
01:21 - we have
01:21 - our check button within our window and
01:23 - we can toggle this on
01:25 - or off right now i'm agreeing to
01:27 - something i'm not sure what i'm agreeing
01:29 - to but hopefully it's not anything bad
01:31 - now currently this doesn't do anything
01:33 - so we'll need to associate a variable
01:35 - with this check button
01:36 - so we'll add that as an option variable
01:39 - equals and let's create a variable
01:41 - called x
01:42 - and we'll need to define this within the
01:44 - window so
01:46 - after we create our instance of our
01:48 - window let's say
01:49 - x equals now with check buttons
01:52 - they store a 1 or a 0 by default within
01:56 - our variable our variable that we call x
01:59 - so with x we're going to set this equal
02:02 - to a
02:03 - int var if this were to return a string
02:07 - we would say string bar but normally by
02:11 - default
02:12 - this returns a 1 or a 0 and we can
02:15 - actually change that
02:16 - using the on value and off value options
02:19 - so the on value is what's going to be
02:22 - stored
02:23 - within our variable if it's toggled on
02:26 - so by default this is one and the off
02:29 - value
02:30 - is the opposite this is what is stored
02:32 - within our variable
02:33 - if this is toggled off all right now
02:36 - let's have some fun with this
02:38 - so let's associate a command with this
02:40 - check button
02:41 - command equals and let's create a
02:44 - function called
02:44 - maybe display and then let's define this
02:48 - before the window
02:49 - def display
02:52 - and we're going to check the value of x
02:54 - to see if
02:55 - it's one or zero so within our display
02:59 - function we're going to check to see
03:01 - if x and to get
03:04 - the value of x we're going to use the
03:06 - get function
03:08 - so if x dot get is equal to 1
03:11 - that means that somebody clicked on the
03:13 - checkbox or toggled it on
03:15 - so if they check the check box
03:18 - or check the check button then they
03:21 - agree
03:22 - so print you agree
03:27 - if it's zero and we can do this with an
03:29 - else statement
03:30 - else print
03:33 - you don't agree frowny face
03:38 - and let's test this theory so we have
03:41 - our
03:41 - check button when we click on this it's
03:43 - actually going to
03:44 - call our display function i agree to
03:47 - something
03:48 - and it says within our console window
03:50 - you agree and if i were to toggle this
03:52 - off
03:52 - it says you don't agree let's change the
03:55 - font of our check button
03:56 - so we'll add that as an option font
03:58 - equals and we can pass
04:00 - in a font that we want i'll say maybe
04:03 - ariel
04:04 - and then a size of 20
04:07 - and now this should be readable i agree
04:10 - to something let's also color this
04:12 - because well i like coloring
04:14 - let's begin with the foreground color so
04:17 - that is
04:17 - fg for short fg equals and then we can
04:21 - pass
04:21 - in a color name or a hex value i like
04:24 - hex values so i'm going to stick with
04:26 - those
04:26 - i want a green foreground color so that
04:29 - is
04:30 - zero zero f zero zero
04:33 - but feel free to adjust these values
04:35 - however you want so
04:37 - our text should now be green that is a
04:40 - very bright green and it hurts my eyes
04:42 - so i'm also going to change the
04:43 - background color which is bg
04:45 - and i'm going to set this to black so
04:48 - we'll have green text on
04:50 - a black background okay now
04:53 - when you click on this it flashes that's
04:55 - kind of annoying
04:56 - that's the active foreground and active
04:58 - background
04:59 - if we click on this or hold this down
05:02 - the color scheme switches to
05:04 - our active foreground slash background
05:06 - and we can change those too
05:08 - so i'm going to set those options active
05:11 - foreground i'm going to set this the
05:14 - same as my foreground color
05:17 - and the active background will be the
05:20 - same as
05:21 - our normal background so that's active
05:24 - background equals
05:27 - black and this should no longer flash
05:31 - when we click on it
05:33 - not too bad not too bad let's add some
05:36 - padding
05:38 - pad x i'll set this to 25
05:42 - and pad y i'll set this to 10.
05:47 - we have a little more padding around our
05:50 - check button
05:51 - one feature that's available to us is
05:53 - that we can add
05:54 - an image next to our check button i
05:57 - downloaded
05:57 - an image of the python logo that i want
06:00 - to add
06:01 - so we'll use the image option to add
06:04 - a photo image to this check button but
06:07 - first
06:07 - we need to create a photo image from our
06:11 - image file
06:12 - so within the window let's call this
06:15 - python photo but you'll probably use
06:18 - something different for your project
06:20 - python photo equals photo
06:23 - image and within the constructor for our
06:26 - photo image
06:28 - we can set the file path or the file
06:31 - name
06:31 - since this image is within my project
06:34 - folder i only have to list the file name
06:37 - and this photo of mine is python.png
06:41 - and now we set the image equal to
06:45 - our photo image that we have image
06:48 - equals
06:49 - python photo but when we run this
06:52 - it's going to overlap the text we still
06:54 - have our image though
06:56 - and this still works as intended so in
06:59 - order to display
07:01 - the image as well as the text we're
07:03 - going to need to use the compound option
07:06 - and let's add that at the end compound
07:09 - is where we're adding this photo
07:12 - relative to the text
07:13 - i want this photo on the left hand side
07:15 - of the text
07:16 - so i'm going to set this to left and now
07:19 - when we run this
07:20 - surprise surprise our image is on the
07:23 - left hand side
07:24 - one thing that you should know is that
07:25 - with the on value and the off value data
07:28 - type
07:28 - if you were to change this to a
07:30 - non-integer value
07:32 - let's say we're going to replace the on
07:34 - value with a boolean
07:35 - value of true and the off value is
07:38 - false with this variable make sure to
07:42 - change the data type as well to reflect
07:44 - what you're storing within it
07:46 - so with our int var variable we want to
07:49 - change this to
07:50 - a boolean var value so replace int
07:54 - with boolean and this will work much the
07:56 - same
07:57 - now with this display function we'll
07:59 - need to account for that
08:01 - so within the if statement here we'll
08:03 - say if x
08:04 - dot get we don't need to say is equal to
08:07 - one
08:07 - this will return true or false and this
08:11 - will work
08:11 - just the same as it did before and if
08:14 - you replace this with a string
08:15 - let's say the on value is
08:18 - yes all caps and the off value is
08:22 - no this is now a string bar
08:27 - and we'll change our display function to
08:29 - say if x
08:30 - dot get is equal to yes
08:36 - and this should work you agree you don't
08:38 - agree you agree you don't agree
08:42 - and i'll change that back to one so one
08:44 - and zero is the default for this but you
08:46 - can edit these based on what you need
08:49 - all right so that's the basics of check
08:51 - buttons in python if you want a copy of
08:53 - all this code
08:54 - i'll post all of this in the comments
08:56 - down below but yeah that's the basics of
08:58 - check buttons in python hey you
09:02 - yeah i'm talking to you if you learn
09:04 - something new then you can help me
09:06 - help you in three easy steps by smashing
09:09 - that like button
09:10 - drop a comment down below and subscribe
09:13 - if you'd like to become a fellow bro
09:24 - [Music]
09:35 - you