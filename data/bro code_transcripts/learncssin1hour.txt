00:00 - hey what's going on everybody it's you
00:02 - bro hope you're doing well and in this
00:04 - video i'm going to teach you guys
00:05 - everything you need to know to get
00:06 - started using css so sit back relax and
00:10 - enjoy the show
00:13 - if you wouldn't mind please like comment
00:15 - and subscribe one like equals one prayer
00:18 - for the youtube algorithm
00:20 - okay let's do this css css is an acronym
00:24 - for cascading style sheets it's defined
00:27 - as a style sheet language used for
00:29 - describing the presentation of a
00:31 - document written in a markup language
00:34 - such as html i stole that definition
00:36 - from wikipedia i like to think of
00:38 - building a website very similar to
00:40 - building a house we need three things
00:42 - structure style and functionality we can
00:45 - use html for structure this would be
00:48 - like the skeleton the frame of our house
00:51 - with css we can add styles such as
00:54 - colors decorations lighting and with
00:56 - javascript we can add functionality in
00:58 - our house analogy this would be similar
01:00 - to plumbing heating electricity but in
01:04 - this video we're going to focus on style
01:07 - now to work with css you'll need a text
01:09 - editor i just so happen to be using vs
01:12 - code so let's jump over to that here we
01:15 - are within vs code or some other text
01:17 - editor that you prefer so you'll need an
01:20 - html document to work with if you don't
01:22 - have one just go to new file and then
01:24 - you can create one just make sure the
01:25 - extension ends with html there are three
01:28 - ways in which we can apply css
01:30 - properties to html elements inline
01:33 - internal or external external works the
01:37 - best especially if you have a large
01:39 - website we'll need some sample text to
01:41 - work with so let's create a title for
01:43 - this webpage using a pair of h1 header
01:46 - tags
01:48 - this is my website
01:51 - and let's create maybe four paragraphs
01:53 - as well
01:54 - so these are in pairs of p tags and
01:58 - we'll need some sample text if you need
01:59 - some sample text type lorem and then tab
02:02 - to generate some sample text so let's
02:04 - copy that line and paste it three
02:06 - additional times
02:08 - okay there we go so we can apply css
02:11 - inline so whatever element you would
02:14 - like to apply css properties to within
02:17 - the opening tag you would set the style
02:20 - attribute equal to some css properties
02:23 - within quotes let's say that i would
02:25 - like to change the background color of
02:27 - my webpage so within the opening body
02:30 - element i will set the style attribute
02:33 - equal to one or many css properties
02:37 - let's change the background color so
02:39 - type background color colon and then end
02:42 - it with a semicolon and then we will
02:44 - list either a color name like black
02:48 - you can use rgb values and these come in
02:50 - groups of three so black would be three
02:53 - zeros
02:54 - so depending on what values you have
02:56 - here this will change the color or
02:58 - there's hexadecimal values hexadecimal
03:01 - values are preceded with a hashtag and
03:04 - there are six digits that follow so
03:07 - black is 60 rows
03:10 - where white is six f's
03:13 - but you can always look up a color
03:15 - picker and then just copy the values
03:17 - after you find a color that you like
03:19 - it's a lot easier perhaps we would like
03:21 - a black background so i'll just keep
03:23 - this simple and use color names instead
03:25 - but you can use rgb values and
03:27 - hexadecimal values okay now i would like
03:30 - to make my h1 header tag white so i will
03:33 - set the style attribute equal to the
03:36 - color property this time color is for
03:39 - the font color background color is for
03:41 - well the background color
03:43 - so color white now with our paragraph
03:46 - tags let's apply more than one css
03:48 - property
03:49 - so let's set the style equal to and list
03:53 - whatever properties you would like to
03:54 - apply within double quotes and then
03:57 - separate each with a semicolon uh let's
03:59 - begin with the background
04:01 - color
04:02 - let's make this maybe gray
04:05 - and let's change the color to
04:08 - what about white
04:11 - then i'm just going to copy the style
04:13 - attribute and paste it for each of these
04:15 - paragraphs
04:17 - this is somewhat redundant but there's
04:18 - an easier way of doing this with
04:20 - internal style sheets
04:22 - to apply an internal style sheet within
04:25 - the head of your html document you'll
04:28 - need a pair of style tags
04:32 - whatever element you would like to apply
04:34 - css properties to you will list that
04:37 - element for example the body
04:39 - then follow that with a pair of curly
04:42 - braces
04:43 - then you will type the name of a css
04:45 - property like background color and set
04:47 - it to some value like black
04:50 - and then we no longer need this style
04:52 - attribute there we go you may need to
04:55 - save and refresh this time let's apply
04:57 - css to the h1 header tag via an internal
05:01 - style sheet uh so let's copy this value
05:04 - and get rid of it
05:06 - okay this time we would like to change
05:08 - our h1 header tags so list that here
05:11 - within our style element h1 curly braces
05:15 - list any css properties within the curly
05:17 - braces color white and we'll do the same
05:20 - thing with our paragraph tags
05:23 - so let's get rid of these
05:29 - so type p
05:30 - curly braces
05:32 - and then we will paste the css
05:34 - properties
05:36 - so you can apply more than one css
05:37 - property just place them within the
05:40 - curly braces
05:41 - so there we go and you can see that this
05:43 - is a lot less redundant instead of
05:45 - making all of the changes in line you
05:47 - can place them within an internal style
05:49 - sheet now the last method which i think
05:51 - is the best method is an external style
05:54 - sheet so we will create a new css file
05:57 - so i'm going to right click go to new
06:00 - file let's name this style.css
06:05 - i'm going to copy everything within my
06:07 - style element and then get rid of our
06:10 - style elements tags
06:12 - and within the style sheet we will paste
06:15 - everything that we just copied now we
06:17 - just need to link our html file with our
06:20 - css file and to do that within the head
06:23 - tag
06:24 - we will type
06:26 - link
06:27 - rel equals rel is an attribute that
06:31 - names a relationship of the linked
06:33 - document to the current document
06:36 - so rel will be
06:38 - stylesheet
06:40 - then set the href attribute equal to the
06:43 - relative file path of your css file
06:46 - they're right next to each other i only
06:47 - need to list the file name there we go
06:50 - we have applied css properties via an
06:53 - external style sheet and this is the
06:55 - preferred way of doing things so you can
06:57 - reuse this one style sheet for many
06:59 - different html pages so let's say that
07:02 - we create a new html document like
07:04 - page2.html
07:08 - by the way if you need to generate the
07:10 - body of your html document if you're
07:12 - using vs code you can type exclamation
07:14 - point and then tab let's create a really
07:17 - quick html document for page two
07:20 - this is page
07:22 - two
07:24 - and then i'll create two paragraphs
07:26 - let's say
07:32 - okay i'm going to open page 2 with live
07:35 - server and take a look page 2 does not
07:37 - have any css filing but we can reuse the
07:41 - same css file all we have to do is link
07:44 - our html file with our css file within
07:48 - the header element i am just going to
07:49 - make that link so this is really
07:52 - convenient if you have to make any
07:53 - changes to your website let's say that
07:55 - you need to make all of the pages on
07:57 - your website instead of the background
07:59 - color black let's say maybe gray well
08:01 - you can just make that change here and
08:03 - that one change will apply to all of
08:05 - your html documents so you only need to
08:08 - make that change in one place that's why
08:10 - external style sheets are really useful
08:13 - one unique feature of css is that we can
08:16 - target any specific element by id or a
08:19 - class that they may be in any element
08:22 - that has these names will have these
08:24 - styles but what if i would like maybe
08:27 - one of these paragraphs to have a
08:28 - different font color i can give one of
08:31 - these paragraphs a unique id so within
08:34 - the opening tag i will set the id
08:36 - attribute equal to a unique identifier
08:40 - let's say p1 because it's well the first
08:42 - paragraph so then to target that
08:44 - specific id i will type hashtag
08:48 - that id
08:49 - and let's set the color equal to
08:52 - what about tomato
08:55 - now for practice let's give each of
08:56 - these a unique id
08:59 - let's say p1 p2
09:01 - p3
09:02 - and p4
09:04 - if we need to change p2's color to
09:07 - tomato well then we target
09:10 - p2
09:12 - what about p3 just change the id to p3
09:16 - and then p4
09:18 - so you can target a specific element by
09:21 - id you just have to be sure to fill out
09:23 - that id attribute
09:25 - or you can target anything within the
09:27 - same class a class is like a group
09:30 - in this example let's say that all odd
09:33 - numbered paragraphs should be read all
09:35 - even-numbered paragraphs should be blue
09:38 - so i'm going to instead give these each
09:40 - a class
09:41 - you can keep the ids if you want to
09:44 - so type class equals the first paragraph
09:47 - will be
09:48 - odd class odd the second paragraph will
09:52 - be class even
09:55 - then odd
09:56 - and even
09:58 - so to target elements by a class you
10:01 - type dot the name of the class
10:03 - so anything within the odd class
10:06 - let's say we'll have a color
10:08 - of red
10:11 - and i'm going to get rid of this tomato
10:13 - color
10:14 - our first paragraph is within the odd
10:16 - class the same applies with our third
10:18 - paragraph and then i would like to make
10:21 - any elements within the even class blue
10:24 - color
10:25 - blue
10:27 - so our second paragraph is blue and our
10:30 - fourth paragraph is blue so yeah
10:32 - everybody that is a quick introduction
10:34 - to css it means cascading stylesheets we
10:38 - can apply css properties in one of three
10:40 - ways
10:41 - inline internal or external in this
10:44 - series we will be using external style
10:47 - sheets so yeah that's a quick
10:49 - introduction to css if you found this
10:52 - video helpful you can help me out by
10:54 - smashing that like button leave a random
10:56 - comment down below and subscribe if
10:57 - you'd like to become a fellow bro
11:00 - hey it's you bro hope you're doing well
11:02 - and in this video i'm going to
11:03 - demonstrate how we can change font
11:05 - styles using css so sit back relax and
11:08 - enjoy the show
11:12 - if you find this video helpful please
11:13 - remember to like comment and subscribe
11:16 - your support will help keep this channel
11:18 - running hey uh let's get started with
11:21 - fonts to change the font family there is
11:24 - a font family property now with fonts
11:28 - sans serif fonts tend to look better on
11:30 - the web there is a generic sans serif
11:33 - font that you can use now what you
11:35 - commonly see with font families many
11:38 - people list more than one value for
11:40 - their font family and there's a good
11:41 - reason for this
11:43 - so i'm going to list two fonts one font
11:45 - that i'm fond of is consoles
11:48 - so in case a web browser doesn't support
11:51 - this font it will use the next best font
11:54 - available
11:55 - so people tend to list either two or
11:57 - three fonts for a font family these are
12:00 - sort of like contingencies in case the
12:02 - first one doesn't work now a good
12:04 - resource for open source fonts is
12:08 - fonts.google.com let's take a look at
12:10 - this so you can search for any fonts
12:12 - that you may want to use one font that i
12:14 - do like is press start to p
12:19 - if i would like to use this font i just
12:21 - need the style sheet so i will select
12:23 - the style otherwise you can download the
12:25 - family go to view your selected families
12:29 - and copy this link
12:33 - then within the head of my html document
12:35 - i will paste that link let's head back
12:38 - to our style sheet so i will change the
12:41 - header of my webpage so within my h1
12:44 - header tag i will list the font family
12:47 - property and set this to the name of
12:50 - this font
12:52 - press start
12:54 - to p
12:56 - and you don't necessarily have to use
12:57 - this specific font you can really use
12:59 - whatever fonts that you like
13:01 - and if i take a look at my web page it
13:03 - now is using that font and just as a
13:05 - contingency if a web browser doesn't
13:07 - support this font i can list a backup
13:10 - let's list console us for the
13:12 - contingency
13:14 - then maybe sans serif
13:16 - so you can list more than one font
13:18 - family just in case the first one
13:20 - doesn't work then a web browser will use
13:22 - the second one if that doesn't work then
13:24 - the third one here's a couple other
13:26 - things you can do with fonts you can set
13:27 - the font style to
13:30 - italic
13:32 - you can change the font weight
13:35 - there's bold lighter you can select a
13:37 - value let's pick bold
13:41 - you can set a text decoration this is an
13:43 - underline
13:45 - uh let's pick underline and there's
13:48 - various adjectives you can add to your
13:50 - underline like wavy
13:53 - or dotted
13:55 - you can also select a color for the text
13:57 - decoration like maybe cyan
14:00 - so you can also change the font size as
14:02 - well let's pick maybe 18 pixels for the
14:05 - font size
14:07 - well ladies and gentlemen that is how to
14:09 - change the font of your web page using
14:11 - css if you found this video helpful you
14:13 - can help me out by smashing that like
14:15 - button leave random comments down below
14:17 - and subscribe if you'd like to become a
14:19 - fellow bro
14:22 - hey uh welcome back in this video i'm
14:25 - gonna show you how we can add borders to
14:27 - html elements so to create a border we
14:30 - need to set a border style well the
14:32 - default is none but let's set this to
14:34 - maybe solid for a solid line there's a
14:37 - couple other styles too like dashed
14:41 - dotted
14:42 - double ridge
14:45 - groove
14:47 - inset
14:48 - and outset
14:50 - we can change the border width by
14:52 - setting the border width property to
14:55 - some amount of pixels
14:57 - maybe five
14:59 - you can change the border color border
15:01 - dash color and pick a color i like gold
15:05 - let's stick with gold
15:07 - you can round to the corners by setting
15:09 - a border radius
15:11 - border dash radius the higher the number
15:14 - the smoother the rounding
15:16 - and i would like to add a little bit of
15:17 - spacing between my letters and my border
15:20 - so i can add some padding
15:25 - so we have a little bit of spacing
15:26 - between our text and our border
15:29 - now let's change our h1 header tag
15:33 - you can specify a border side such as
15:36 - top bottom left right
15:39 - border so we have bottom top left right
15:43 - i will set the border top
15:45 - style to maybe dotted
15:48 - i'll do the same thing with the bottom
15:50 - because i think it'll look cool
15:53 - and maybe the left side as well border
15:56 - left style
15:58 - let's make this
16:00 - i don't know double
16:02 - with the width color and radius you can
16:03 - also specify a side as well so let's
16:06 - change specifically the left border
16:09 - border dash left
16:11 - width and i'll set this to 10 pixels and
16:14 - i'll change the color to border left
16:17 - color
16:18 - i like silver let's pick that
16:20 - so yeah that's how to add borders to
16:23 - html elements whatever element you would
16:25 - like to add a border to you can set a
16:27 - given style and we covered a few of them
16:29 - solid is a very basic border you can
16:32 - change the width color radius and you
16:35 - can add padding and you do have the
16:36 - capability to change specific sides of
16:39 - the border such as top bottom left right
16:42 - so yeah everybody that's how to
16:45 - customize borders using css if you found
16:48 - this video helpful you can help me out
16:49 - by smashing that like button leave a
16:51 - random comment down below and subscribe
16:53 - if you'd like to become a fellow bro
16:56 - hey what's going on everybody it's you
16:58 - bro hope you're doing well and in this
16:59 - video i'm going to show you a few useful
17:01 - things we can do with backgrounds using
17:04 - css so sit back relax and enjoy the show
17:09 - hey welcome back so in this video i'm
17:12 - going to show you how we can change the
17:14 - background color set a linear gradient
17:17 - and how we can set an image as our
17:19 - background so like we discussed in
17:21 - previous videos you can set the
17:23 - background color by changing the
17:24 - background color property and set this
17:27 - to some color of your choosing
17:29 - now another option is to set a linear
17:32 - gradient the property name is background
17:35 - and the value is linear gradient
17:38 - and within the parentheses you can add
17:41 - two or more colors
17:42 - perhaps sky blue and light
17:47 - green
17:48 - that's kind of nice but unfortunately
17:51 - this background repeats itself once it
17:53 - reaches the last element so we can
17:55 - actually change that with another
17:56 - property and to change that we can set
17:59 - the background
18:01 - repeat property to a value of no
18:05 - repeat
18:07 - here's another issue now we have all of
18:09 - this white space after our last element
18:12 - so there is another property if we would
18:14 - like to stretch this background
18:18 - background
18:19 - attachment
18:21 - and the value is fixed
18:24 - so we can resize this window
18:26 - add the background will adjust
18:28 - dynamically
18:29 - we can change the direction in which the
18:32 - colors head
18:33 - so we will precede our colors with two
18:36 - either top bottom left or right so two
18:40 - top would reverse these colors so green
18:43 - is at the top blue is at the bottom
18:45 - or to left
18:47 - or to right
18:50 - pretty cool right so this time i'm going
18:52 - to apply these colors to the h1 header
18:55 - tag as well as the ptag
19:02 - so the background of these elements is
19:04 - this linear gradient but not the
19:07 - background of the body of our html
19:09 - document i'm gonna change this color
19:11 - from light green to white for both
19:14 - and with the p tag let's say two left
19:17 - instead okay now this is how we can set
19:19 - an image as our background
19:21 - so find an image that you like here's a
19:24 - picture of central park and i placed
19:26 - this image along with my index.html file
19:29 - as well as my css file
19:32 - so i will set the background image
19:35 - to a value of url
19:38 - you can place an external url in here
19:41 - but since these files are right next to
19:42 - each other i only have to list the file
19:44 - name
19:45 - my
19:46 - background
19:48 - dot
19:48 - jpg
19:50 - but this is probably going to be a
19:52 - different name for you okay so this
19:54 - image is gigantic i'm going to copy
19:57 - background repeat and background
19:58 - attachment
20:00 - and i will set the background
20:03 - position
20:06 - to center
20:08 - but then i would like this image to
20:10 - expand and shrink based on the size of
20:12 - the window so there's one more property
20:14 - that we need and that is background size
20:19 - and we will set this to cover
20:22 - okay now if i resize this window
20:25 - this image will resize dynamically
20:28 - so yeah everybody that's a little bit
20:30 - about backgrounds using css you can set
20:32 - a background color you can set the
20:34 - background to a linear gradient and you
20:37 - can even set an image as your background
20:40 - so yeah those are a few things you can
20:41 - do to change the background using css if
20:44 - you found this video helpful you can
20:45 - help me out by smashing that like button
20:47 - leave random comments down below and
20:49 - subscribe if you'd like to become a
20:50 - fellow bro
20:54 - hey welcome back margins margins are the
20:58 - space around an element here's what
21:00 - we're gonna do we're going to create two
21:02 - boxes i'll use a div element
21:04 - and give this development an id of box
21:07 - one
21:09 - and let's do the same thing for box two
21:11 - but change one to two and within each
21:13 - box we will generate some random content
21:16 - so type lorem and then tab to generate
21:18 - some sample text and do the same thing
21:20 - for box two
21:22 - okay that's everything we'll need within
21:24 - our html document within our css
21:26 - document let's style both of our boxes
21:30 - so let's begin with box one and we'll
21:31 - just copy everything over to box two
21:34 - so i would like a border of five pixels
21:37 - solid
21:39 - a width of 250
21:42 - a height of 250.
21:45 - let's change the font size to 22 pixels
21:49 - and change the background
21:51 - pick a background color that you like
21:54 - okay let's copy this and paste it for
21:57 - box two so change box one to box two and
22:00 - i would recommend picking a different
22:02 - color
22:03 - okay we have box one and box two margins
22:06 - are the space around an element you can
22:08 - see that we naturally have a little bit
22:10 - of margin between these boxes the body
22:13 - element of our document has about 8
22:15 - pixels worth of margin and let's take a
22:18 - look at that so i'm going to style our
22:20 - body and add a border
22:22 - maybe 2 pixel solid this is the boundary
22:25 - of our body wherever this border is so
22:28 - we have 8 pixels of margin outside of
22:30 - our border we can actually get rid of
22:32 - that so that these boxes are touching
22:35 - the sides of the viewport by setting
22:37 - margin within our body to zero pixels
22:41 - and these boxes are now touching the
22:43 - sides of our viewport so margin is the
22:46 - space around an element but margin is
22:49 - easily confused with padding padding is
22:52 - the space between the content and the
22:55 - border for example i'll add 10 pixels
22:57 - worth of padding to box one
23:00 - this space between the content and the
23:02 - border is padding
23:03 - and i'll just casually increase the
23:05 - padding just so it's more visible
23:08 - this space between the content and the
23:10 - border is padding it's easily confused
23:12 - with margin now margin is the space
23:15 - outside of a border we can select margin
23:18 - top bottom left right let's begin with
23:21 - top margin top i'll set this to 50
23:24 - pixels
23:27 - so we're saying at the top of this
23:28 - element add 50 pixels worth of margin
23:32 - this element along with any elements
23:34 - underneath it will be pushed down by 50
23:37 - pixels
23:38 - likewise i can apply this to the left
23:42 - and this will push this element 50
23:44 - pixels to the left same thing goes with
23:46 - the bottom
23:48 - any elements underneath this margin will
23:50 - be pushed by this amount
23:52 - and there's also margin right but
23:54 - there's nothing to the right of this
23:55 - element because it is a block level
23:57 - element
23:59 - if i need to apply some amount of margin
24:02 - all around an element i can just say
24:04 - margin
24:06 - then that amount 50 and then we don't
24:08 - need four separate lines this would do
24:10 - the same thing in one line you can use
24:13 - percentages instead of pixels so that
24:16 - way when you resize this window
24:18 - it resizes dynamically so if i were to
24:21 - set margin left to 50
24:25 - this margin will use up as much space as
24:28 - 50 of the width of our window
24:31 - okay one trick if you need this element
24:34 - to stick to the right hand side of your
24:36 - window you can set margin to auto
24:39 - and the margin on the left hand side
24:41 - will be automatically calculated so it's
24:44 - going to push this element to the right
24:46 - this will all be margin
24:48 - and likewise you can do the same thing
24:50 - with margin right then this element will
24:53 - stick to the left-hand side because the
24:55 - margin on the right is taking up all the
24:57 - space on the right side of this element
25:00 - here's a trick if you set both margin
25:02 - left and margin right to auto then this
25:06 - element will stay horizontally centered
25:09 - in the middle of your document so yeah
25:11 - that's a little bit about margins and if
25:13 - you ever forget how margins work if you
25:15 - right click on an element then go to
25:17 - inspect there will be a diagram right
25:19 - here so it shows that our content is 250
25:22 - by 250
25:24 - any padding if there is any the width of
25:26 - the border and the width of the margin
25:29 - and here are the values so yeah that's a
25:31 - little bit about margins it is the space
25:33 - around an element so yeah those are
25:35 - margins if you found this video helpful
25:37 - you can help me out by smashing that
25:39 - like button leave a random comment down
25:41 - below and subscribe if you'd like to
25:42 - become a fellow bro
25:46 - hey uh let's talk about the float
25:48 - property the float property positions an
25:50 - element to the left or right side of a
25:52 - container it's popular for wrapping
25:54 - elements around images in this brief
25:57 - example i have three images and two
25:59 - paragraph elements i think this would
26:01 - look a lot better if this text wrapped
26:04 - around these images so what i could do
26:06 - is that whatever element i would like to
26:08 - select i can apply a float property any
26:11 - elements that are floating are taken out
26:13 - of the normal flow of a document and all
26:16 - elements that follow after will wrap
26:19 - around them by setting my images to
26:22 - float left all images will gravitate
26:25 - towards the top left corner of my
26:27 - document it's as if we're reading them
26:29 - from left to right
26:31 - or we could float right then we're
26:33 - reading this right to left let me give
26:35 - you a different example images are
26:37 - inline elements here's a different
26:39 - example with block level elements this
26:42 - time we will create three boxes using a
26:44 - pair of div tags
26:47 - let's set the class equal to box we will
26:50 - have box one box two and box three
26:56 - and let's create some sample text
26:58 - create a pair of paragraph tags
27:01 - i'll type lorem and then tab to generate
27:03 - some sample text
27:05 - copy this paragraph and paste it two
27:07 - additional times let's say
27:09 - okay let's style our boxes
27:12 - so to select a class type dot then the
27:14 - name of the class
27:16 - so let's create some boxes
27:18 - the width will be 100 pixels
27:20 - the height will be 100.
27:22 - let's give this a border of 1 pixel
27:25 - solid
27:26 - change the font size to something
27:28 - readable like 40 pixels i'll text align
27:31 - center
27:33 - and let's change the color
27:35 - background select a color
27:38 - i'll pick tomato because i like tomatoes
27:40 - divs are block level elements after each
27:43 - element the entire width of our viewport
27:45 - is reserved to display this element
27:48 - so if i give our class box the float
27:51 - property it will be taken out of the
27:54 - normal flow of a document and all
27:56 - elements that follow after will also
27:58 - follow that pattern so they will float
28:01 - and wrap around any elements from left
28:03 - to right top to bottom if we're using
28:05 - left or this was float right it will be
28:08 - red right to left top to bottom if you
28:11 - would like a stopping point where your
28:13 - elements are no longer floating you can
28:15 - use the clear property
28:17 - so let's say with our paragraph tags i
28:19 - would like this text to stop floating i
28:22 - will use the clear property
28:24 - and set this to left if we're floating
28:27 - left
28:28 - or to the right if we're floating right
28:33 - or you can set this to both
28:35 - so yeah basically speaking with the
28:37 - float property it positions an element
28:40 - to the left or right side of a container
28:42 - and it's popular for wrapping elements
28:44 - around images if you need to stop
28:46 - floating you can use the clear property
28:49 - which is what we did here so yeah that
28:51 - is the float property if you found this
28:53 - video helpful you can help me out by
28:55 - smashing that like button leave random
28:56 - comments down below and subscribe if
28:58 - you'd like to become a fellow bro
29:03 - hey yeah let's talk about css
29:05 - positioning let's begin by creating two
29:07 - boxes i'll use a div element let's name
29:10 - this first box box one and create a
29:12 - second box box two
29:15 - let's also create a whole lot of
29:16 - paragraphs because we'll want a scroll
29:18 - bar
29:20 - so if you need some sample text you can
29:22 - type lorem and then tab
29:24 - okay so copy this line and paste it
29:26 - maybe like 10 times
29:28 - that should be good enough and let's
29:30 - copy all of these paragraphs and paste
29:31 - them underneath our boxes
29:34 - doesn't really matter how many you have
29:36 - we just need a lot of room to work with
29:38 - okay let's design these two boxes now
29:41 - that we have a lot of sample text let's
29:43 - begin with box one
29:44 - i'll give this a border of one pixel
29:47 - solid
29:48 - a height of 300 pixels
29:52 - a width of 300 pixels
29:56 - and pick a background color any color is
29:58 - fine
30:00 - now let's style box two
30:03 - and we'll make this smaller
30:05 - 100 by 100 and a different color
30:09 - i like tomatoes so there is a position
30:12 - property
30:13 - where we can format the layout of an
30:15 - element there's five that we'll discuss
30:17 - absolute fixed relative static and
30:20 - sticky static is easy that's the default
30:23 - any element that is positioned
30:25 - statically is in its normal state so
30:27 - there's no change here now relative
30:30 - we can move this element relative to
30:33 - some point of origin the point of origin
30:36 - of box one our blue box is the top left
30:38 - corner and there are offsets top bottom
30:42 - left and right if i would like to
30:43 - displace this element down and to the
30:46 - right by 50 pixels i can set the top
30:49 - offset to 50 pixels or some other unit
30:52 - of measurement
30:53 - and then
30:54 - offset it from the left by 50 pixels as
30:57 - well so this does create an empty vacuum
31:00 - of where this element was so think of
31:01 - this as a reserved space take a look at
31:04 - this what if i were to set top and left
31:06 - to an even greater number like 150 this
31:09 - element will cover other elements
31:11 - underneath so that's something you need
31:13 - to take into consideration or we could
31:15 - do the same thing with box two
31:18 - now box two is displaced and this corner
31:21 - the top left corner is the point of
31:23 - origin okay now let's discuss absolute
31:25 - positioning any element that is
31:27 - positioned absolutely will be taken out
31:30 - of the flow of the document so with box
31:32 - 2 let's set the position to absolute
31:37 - so you probably noticed that all of this
31:39 - text is running underneath this element
31:42 - it's as if our document is ignoring box
31:44 - two it's kind of like it's ethereal or a
31:47 - ghost or something and if i were to set
31:49 - a position
31:51 - i'll set the top to zero
31:54 - then this box appears at the top of our
31:56 - document and here's the reason why any
31:58 - element that is absolutely positioned
32:01 - will search for any parents that are
32:03 - positioned non-statically if it does not
32:06 - have a parent it will instead use the
32:08 - viewport we're setting the point of
32:10 - origin for box 2 to the top left corner
32:14 - of our webpage because it doesn't have
32:16 - any direct parents that are positioned
32:18 - non-statically now if i set top to 150
32:22 - pixels
32:23 - then the point of origin is the top left
32:24 - corner still and it will be pushed down
32:26 - by 150 pixels
32:28 - and maybe to the left by 150 pixels as
32:31 - well what if i would like box 2 to be
32:34 - positioned in the center of box one okay
32:36 - what i'm going to do is make box 2 a
32:39 - child of box 1 by placing box 2 within
32:42 - box 1.
32:44 - however box 1 is positioned statically
32:47 - that's the default so i will set the
32:49 - position to maybe
32:52 - let's say relative
32:54 - and let's uh set top to 100 and left to
32:57 - 100
32:58 - there box 2 is now within the center and
33:01 - the cool thing about this is that if i
33:03 - move box 1 box 2 will follow and stay in
33:06 - that same place it's positioned
33:07 - absolutely so let's set the left offset
33:10 - to
33:11 - maybe 250 there and box 2 is staying in
33:14 - the same place then maybe the top by 250
33:17 - as well
33:19 - that's kind of the idea behind absolute
33:20 - positioning it searches for a parent
33:23 - that is positioned non-statically such
33:25 - as relative or some of the other
33:27 - positions i'm about to discuss if it
33:29 - doesn't find a parent it uses the
33:31 - viewport
33:32 - so we'll keep box 2 right there next we
33:34 - have fixed
33:36 - fixed will stay in position of your
33:38 - viewport
33:40 - so even when you scroll it's going to
33:42 - stay wherever you set it uh let's set
33:44 - this in the top right corner
33:47 - so top
33:48 - zero pixels
33:50 - and right zero pixels
33:54 - so this box will stay in the top right
33:57 - corner of my viewport
33:58 - so that is fixed
34:00 - and lastly we have sticky
34:03 - anything that has a sticky position will
34:05 - stick to an edge of your viewport when
34:07 - you scroll past
34:10 - so if i set this to top
34:12 - then this element is going to stick to
34:14 - the top when we scroll down past it but
34:17 - currently it's in its normal place but
34:19 - when i scroll past it will stick to the
34:22 - top of my viewport
34:23 - and then when i scroll up past it it
34:25 - will snap back into place
34:28 - or we can set this to the bottom
34:30 - when i scroll up past this element it
34:32 - will stick to the bottom then snap back
34:35 - into place or we could combine them both
34:38 - so if i scroll down past this element it
34:40 - will stick to the top if i scroll up
34:42 - past the element it will stick to the
34:43 - bottom
34:44 - so that is the sticky position
34:47 - so yeah everybody those are a few
34:49 - positions in css if this video helped
34:51 - you out you can help me out by smashing
34:53 - that like button leave random comments
34:55 - down below and subscribe if you'd like
34:57 - to become a fellow bro
35:01 - hey pseudo classes a pseudo class is a
35:04 - keyword added to a selector that
35:06 - specifies a special state of the
35:08 - selected elements what the heck does
35:10 - that mean so with elements elements can
35:12 - be in a special state like if you hover
35:15 - over them you click on them things of
35:18 - that nature so let's create a hyperlink
35:20 - for this first example let's create a
35:21 - hyperlink that will take us to google
35:24 - because i can't think of anything else
35:25 - at the moment
35:26 - so let's set the href attribute equal to
35:29 - the url for google
35:34 - by default this hyperlink is blue but we
35:36 - can actually change that type the
35:38 - element you would like to change the css
35:40 - properties of
35:41 - followed by a colon and then we have
35:43 - access to all of these pseudo classes so
35:46 - a pseudo class is a special state so
35:48 - anything that is a link let's change
35:51 - maybe the color
35:53 - color what about
35:55 - lawn green i guess anything that is
35:57 - using an a element that is a link is now
36:00 - lawn green
36:01 - so if i click on this link it takes me
36:03 - to google anything that's visited is
36:05 - also another state a pseudo class and
36:08 - the default color is purple let's change
36:10 - that to a colon the pseudo class is
36:14 - visited
36:15 - maybe gray for the color
36:18 - like it's been disabled so the color is
36:21 - now gray since we've already visited
36:22 - this link what if we hover our cursor
36:24 - over this link
36:26 - that is another state a
36:28 - hover
36:30 - color
36:31 - what about
36:33 - tomato i like tomatoes
36:35 - so by hovering my cursor over this link
36:38 - the state of this element is now hover
36:41 - and these css properties will apply when
36:44 - this element is within this state and
36:46 - there's another useful one for
36:48 - hyperlinks and that is active
36:51 - if we were to hold down our mouse over
36:53 - this element then let's change the color
36:56 - to what about
36:59 - i don't know yellow so with active if i
37:01 - hold down the mouse then this link is
37:04 - active it's within the active state now
37:07 - let's create a button this time
37:10 - button
37:11 - click me
37:14 - so anything that's a button we'll use
37:16 - the pseudo class of hover this time
37:19 - and let's change the color to
37:23 - light
37:24 - gray
37:25 - so by hovering my mouse over this button
37:28 - it's going to change the color let's
37:30 - make that background color actually
37:33 - background color
37:36 - if you have a navigation bar or menu bar
37:39 - setup it's actually fairly useful to
37:40 - have the background color change based
37:43 - on what the user is hovering over to let
37:45 - them know that they can select something
37:47 - let's change the active pseudo class
37:49 - four buttons as well
37:50 - uh let's say if we click on this then it
37:52 - will be white
37:56 - cool all right here's another we'll need
37:57 - a list it doesn't matter what kind of
37:59 - list i'll just make an unordered list
38:01 - and let's add 10 list item elements
38:13 - this next pseudo class is really useful
38:15 - it is the m child pseudo class
38:18 - so with these list items i would like to
38:20 - change the background of selected
38:22 - elements think of a child as an element
38:25 - within an element so these list items
38:28 - are all siblings and what we're going to
38:29 - do is change the background color of a
38:32 - few selected elements we will select our
38:35 - list item and say that the nth child
38:39 - will be
38:40 - will have a background
38:42 - color of yellow as if we're selecting
38:45 - something so place a value as an
38:47 - argument within these parentheses these
38:50 - list items are all siblings so let's say
38:52 - that the first child will have a
38:54 - background color of yellow so i will
38:56 - pass in a one
38:58 - or two
38:59 - three
39:00 - four
39:01 - five you get the idea this is really
39:04 - useful with javascript because you can
39:06 - place a variable within here and then
39:08 - increment or decrement to the variable
39:10 - so you can select a given item from a
39:12 - list i'm just going to turn this into a
39:14 - comment real quick
39:18 - now with this next one let's say that
39:20 - the color will be sky blue
39:23 - and i would like to apply this css
39:25 - property to all even siblings
39:29 - and let's do the same thing with all odd
39:31 - siblings
39:34 - and let's make the color what about
39:36 - powder blue so in this way we can
39:39 - alternate the highlighting of our
39:40 - elements so that they may be easier to
39:43 - read this next value is going to be
39:45 - somewhat strange it's a formula that we
39:47 - can pass in as an argument so what if i
39:49 - need every third element highlighted i
39:53 - would say 3n n is the current number
39:56 - that we're on
39:57 - so elements three six and nine are
40:00 - highlighted
40:02 - if we change this to four n every fourth
40:05 - element is highlighted
40:07 - five n is every fifth element you can
40:09 - place an offset too if i need this to
40:11 - start at one
40:13 - i would add plus one
40:14 - or plus two
40:16 - plus three
40:17 - plus four so yeah you can pass in a
40:20 - formula as an argument to the nth child
40:23 - pseudo class and this is useful if you
40:25 - need some sort of pattern so yeah those
40:28 - are pseudo classes it's a keyword added
40:31 - to a selector that specifies a special
40:34 - state of the selected element so yeah
40:37 - those are pseudo classes if this video
40:39 - helped you out you can help me out by
40:41 - smashing that like button leave random
40:43 - comments down below and subscribe if
40:45 - you'd like to become a fellow bro
40:49 - hey let's talk about shadows there are
40:52 - two varieties of shadows we'll discuss
40:54 - text shadows and box shadows in this
40:57 - example i have a basic h1 element let's
41:00 - begin with text shadows
41:03 - with this css property there are three
41:06 - numbers and a color that follow
41:09 - the first three are in pixels and then
41:11 - pick whatever color you want for a
41:13 - shadow maybe gray the first number is
41:15 - for the positioning on the x-axis a
41:18 - positive number will result in the
41:20 - shadow being moved to the right a
41:22 - negative number to the left
41:24 - the second number is for the y axis
41:28 - a positive number will move your shadow
41:30 - below your text
41:31 - a negative number and your shadow will
41:33 - appear above the text
41:35 - and you can combine these two if i need
41:37 - the shadow to the bottom and to the
41:39 - right i will set these first two numbers
41:42 - to be positive the larger the numbers
41:44 - the greater the displacement of your
41:46 - shadow this third number is for the
41:48 - spread a higher number results in a
41:50 - further spread so if i set this to 15 we
41:53 - can barely see our shadow anymore
41:56 - maybe let's set that to five that's a
41:58 - decent looking shadow
42:00 - okay you can also add more than one
42:02 - shadow i'm thinking for this example
42:04 - we'll create a sort of fire effect
42:06 - around our text
42:07 - so maybe i'll set the color to be yellow
42:09 - and i would like the shadow to appear
42:11 - directly around our text so i will set
42:13 - the first two values to zero
42:16 - and the spread to five or some other
42:18 - number
42:19 - so this kind of looks like our text is
42:21 - glowing so separate each individual
42:24 - shadow with a comma
42:27 - and i would like a red shadow this time
42:31 - and i'll place this directly above our
42:33 - text
42:34 - and set a spread to maybe five
42:36 - yeah there we go that's not a bad
42:38 - looking effect okay now let's discuss
42:40 - box shadows
42:42 - it's the same values as before there's
42:44 - three numbers and a color
42:46 - except this shadow will appear around
42:49 - our entire element
42:51 - let's set this to black i would like the
42:53 - shadow to appear to the bottom right of
42:55 - this element
42:56 - so five five and a spread of five works
43:00 - that's not too bad remember with box
43:02 - shadows the entire element is going to
43:05 - have that shadow effect so you may want
43:07 - to consider setting width and height
43:09 - properties of your elements we can set
43:11 - this so that a shadow appears when you
43:13 - hover your cursor over this element but
43:15 - you need to use the hover selector so h1
43:19 - colon hover
43:20 - so if i were to hover my cursor over
43:22 - this element
43:24 - then
43:25 - this shadow will appear
43:27 - so it's kind of like a 3d pop-out effect
43:30 - so yeah those are shadows we discussed
43:32 - text shadows and box shadows if you
43:34 - found this video helpful please be sure
43:36 - to smash that like button leave a random
43:38 - comment down below and subscribe if
43:40 - you'd like to become a fellow bro
43:45 - hey yeah everybody in this video i
43:47 - thought we could do something a little
43:48 - bit different in this video i'm going to
43:50 - direct you to a useful resource in which
43:52 - you can use free icons for your websites
43:55 - the name of this website is font awesome
43:57 - this isn't a sponsorship or anything
43:59 - like that i just tend to like to use
44:01 - this website for free icons so there is
44:03 - a free version i'm going to start for
44:05 - free and you just need to set up an
44:07 - account so enter an email address
44:10 - and then create and use this kit
44:13 - then it's just a matter of verifying
44:15 - your email address to create an account
44:18 - after signing in you'll need to add your
44:20 - kits code to a project this is a small
44:23 - script so i'm going to copy this kit
44:26 - code
44:27 - and within the head of my html document
44:30 - i'm going to paste it
44:32 - and now we can search for some icons
44:34 - at the top menu of this website we'll go
44:36 - to icons
44:38 - and we can search a lot of these you do
44:40 - need a paid account but there's a lot of
44:41 - free icons as well so let's look up any
44:44 - free icons let's look for a home
44:48 - so click on an icon
44:50 - you can select a size
44:52 - and a background color and choose this
44:54 - icon click on start using this icon
44:57 - all you have to do is copy this html
45:00 - code
45:01 - and then someplace within the body of
45:02 - your document you can paste it
45:06 - and we now have that house icon so let's
45:08 - search for a few more
45:10 - how about twitter
45:12 - select a size and a background start
45:15 - using this icon
45:17 - copy the html code
45:19 - and then paste it
45:22 - okay one more how about youtube so again
45:25 - select an icon select a size select the
45:28 - background start using this icon copy
45:30 - this code
45:32 - and paste it okay let's style some of
45:34 - these elements let's change the color of
45:37 - our twitter icon
45:39 - so this portion here is the class name f
45:42 - a dash twitter so type dot for classes f
45:46 - a dash twitter and let's change the
45:48 - color property i think aqua is fairly
45:51 - close to the original logo color
45:54 - and let's do the same thing with youtube
45:57 - so dot fa
46:00 - youtube and i will change the color to
46:03 - red
46:05 - and you can add really any css
46:06 - properties we can also turn these into
46:08 - hyperlinks so i will surround one of
46:11 - these elements with a pair of a tags
46:15 - then i will set the href attribute equal
46:18 - to a url
46:21 - then when i click on this icon
46:24 - it takes me to youtube it wouldn't be a
46:26 - bad idea to play some of these within
46:28 - the header or the footer of your webpage
46:30 - so yeah those are font awesome icons and
46:33 - how to style them using css so if this
46:36 - video helped you out please be sure to
46:38 - help me out by smashing that like button
46:40 - leave a random comment down below and
46:42 - subscribe if you'd like to become a
46:43 - fellow bro
46:47 - hey uh here's a few transformations that
46:49 - you may be interested in let's begin by
46:51 - creating a simple box i'll use a div
46:54 - element and assign this a unique id of
46:57 - box one and within this box we'll say hi
47:00 - within my style sheet i will select box
47:03 - one i'll give this a border of
47:06 - 4 pixels solid
47:09 - a width
47:10 - of 250 pixels
47:12 - and a height of 250 pixels as well
47:16 - let's change the font size to something
47:19 - larger like 225 pixels we will change
47:22 - the text alignment
47:25 - to center
47:27 - and change the background too pick a
47:29 - color that you like
47:32 - to work with transformations there is a
47:35 - transform property
47:37 - and you can select a transformation that
47:38 - you like let's begin with translate x
47:42 - you pass in an amount of pixels to
47:44 - translate your element on the x-axis
47:47 - if i set this to 50 pixels
47:50 - this element will be translated to the
47:52 - right by 50 pixels or a negative number
47:55 - for a left translation
47:57 - okay let's select translate y
48:00 - and do the same thing
48:02 - this transformation moves elements up or
48:05 - down on the y-axis
48:07 - or you could combine them both
48:09 - and that is just simply translate but
48:12 - you pass in two numbers between the
48:14 - parenthesis
48:17 - so this combines both an x and y
48:20 - translation
48:21 - we can rotate on the x-axis you pass in
48:24 - an angle
48:25 - like
48:26 - 180 degrees
48:30 - so that is a rotation on the x-axis
48:35 - there is also a y-axis rotation
48:39 - and a z-axis rotation
48:43 - we can scale on the x-axis scale x
48:47 - one is the default
48:49 - two means two hundred percent so this
48:51 - image will stretch twice as wide
48:54 - or three times as wide
48:56 - there is scale y
48:59 - and that will stretch on the y-axis
49:03 - or you could combine them both with
49:04 - simply scale
49:08 - if i set both of these values to 2 our
49:11 - image is twice as big we can skew on a
49:14 - given axis
49:16 - skew x and then pass in an amount of
49:19 - degrees
49:20 - like 45 degrees
49:23 - we can skew on the y axis
49:26 - or we can do both
49:28 - pass in two values within skew
49:31 - let's say 20 degrees for both
49:34 - there's also matrix matrix is a little
49:37 - more complex
49:39 - there are six values that we can pass in
49:41 - and they start in this order the first
49:43 - value is for scale x the second is for
49:47 - skew y
49:48 - skew x
49:50 - scale y
49:51 - translate x and translate y the first
49:54 - number is for scale x and the fourth
49:56 - numbers for scale y so i'm going to set
49:59 - this to one for one hundred percent so
50:01 - if these are both zero or at least one
50:04 - of them is zero then this image is going
50:05 - to disappear so matrix combines the
50:08 - following scale x skew y skew x scale y
50:12 - translate x translate y
50:15 - so using matrix you can add more than
50:17 - one transformation let's say i need this
50:19 - scaled twice as big
50:21 - and translated
50:24 - let's make that a little more drastic
50:26 - maybe 250
50:29 - or i could skew this too so yeah those
50:32 - are some simple transformations whatever
50:34 - you would like translated just place
50:36 - this property within an element and you
50:38 - can select one of these based on what
50:40 - you need so yeah those are some simple
50:43 - transformations in css if this video
50:46 - helped you out you can help me out by
50:48 - smashing that like button leave a random
50:50 - comment down below and subscribe if
50:51 - you'd like to become a fellow bro hey
50:54 - it's you bro hope you're doing well and
50:56 - in this video i'm going to demonstrate a
50:58 - few simple animations using css so sit
51:01 - back relax and enjoy the show
51:05 - hey y'all let's create some very basic
51:08 - animations i'll create a simple box i'll
51:11 - use a div element and give this element
51:13 - a unique id of box one
51:16 - and within this box let's say hi and
51:18 - within our style sheet let's set the box
51:22 - 1 element to have a width of 250 pixels
51:27 - same thing goes with the height
51:30 - let's change the background to maybe red
51:34 - i'll give the font a size of 225
51:39 - and text
51:41 - align
51:42 - center
51:43 - to use an animation we first well have
51:46 - to create an animation
51:48 - and we can do that by using the key
51:50 - frames rule
51:52 - so at keyframes and then follow this
51:55 - with a unique name for your animation
51:57 - for this first example let's have this
51:59 - element slide into place from the right
52:02 - i'll name this my slide something unique
52:06 - two keywords that we can add to our
52:08 - animation are from
52:10 - and two and follow each with a set of
52:12 - curly braces from will be any properties
52:15 - you would like to apply to this element
52:17 - when you begin the animation the two
52:19 - keyword are the ending properties
52:22 - let's have margin left
52:25 - begin at one hundred percent
52:27 - so the margin on the left of our element
52:29 - is going to take up 100 of the width of
52:33 - our window and this animation will end
52:36 - with margin left
52:39 - being 0
52:41 - there will be no margin on the left of
52:43 - this element
52:44 - this will be a gradual transition
52:46 - between these two properties but we have
52:49 - to set a length of time that this
52:50 - animation is going to take but before
52:53 - that we have to specify an animation
52:56 - by setting the animation property to the
52:58 - name of your animation
53:00 - mine is my slide
53:03 - and we need to set a duration
53:05 - animation
53:07 - duration
53:08 - let's say that this entire animation
53:10 - will take 5 seconds
53:12 - 5s and there we go with our keyframes
53:16 - there is a gradual change between these
53:19 - properties anything within from and2 we
53:23 - can repeat this animation as many times
53:25 - as what we would like animation
53:29 - iteration
53:31 - count
53:32 - you can set this to 1
53:34 - 2 3
53:35 - or infinite
53:37 - so this animation will loop when you set
53:40 - the animation iteration count to
53:42 - infinite a couple other things you can
53:44 - do too you can add animation
53:47 - play
53:48 - state
53:50 - and the default is running
53:53 - but you can set this to paused
53:56 - and the animation will pause in place
53:59 - but let's keep that at running
54:01 - you can add a delay
54:03 - animation
54:04 - delay
54:06 - maybe we'll have this begin after one
54:07 - second so it's been one second then the
54:10 - animation begins i'll keep that at zero
54:13 - okay this next one
54:15 - is animation
54:16 - timing
54:17 - function
54:19 - so right now our animation is occurring
54:21 - linearly we could have this e is
54:24 - in
54:26 - so this accelerates
54:28 - but doesn't slow down
54:30 - ease out
54:32 - where we begin quickly and then slowly
54:35 - decelerate
54:37 - ease will do both it accelerates and
54:40 - then decelerates near the end
54:42 - or linear
54:45 - where it's a constant animation
54:50 - there is a shortcut where you can apply
54:52 - all six of these properties
54:54 - and just to demonstrate i will place all
54:56 - of these within one giant comment block
54:59 - so beginning in this order we begin with
55:01 - the duration
55:03 - this time let's say three seconds then
55:06 - the timing function
55:08 - linear
55:09 - a delay if you need one i will keep that
55:11 - as zero
55:13 - the iteration count
55:15 - that will be infinite
55:17 - the place date
55:19 - running then the animation
55:21 - my slide so this is a shortcut where you
55:24 - can combine all six of these separate
55:26 - properties
55:27 - you can also place this animation within
55:30 - a pseudo class
55:32 - in this next example i would like this
55:34 - element to only be animated while i have
55:37 - the cursor over this element
55:40 - so i can use a pseudo class for that
55:42 - so box one and the pseudo class of hover
55:46 - and i will place my animation within
55:48 - that pseudo class
55:50 - and then we should probably switch these
55:52 - margins around so that it slides to the
55:54 - right instead this animation will begin
55:57 - if i place my cursor over this image or
56:00 - we can set this to active
56:03 - it's going to play if i click on it box
56:06 - 1
56:07 - colon
56:08 - active
56:09 - and then let's place our animation
56:11 - within it so nothing's happening until i
56:14 - click down on this image but once i let
56:16 - go the animation ends
56:17 - so you can combine animations with
56:20 - pseudo classes
56:21 - let's create a couple more animations
56:23 - how about a rotation let's name this my
56:27 - rotate so you can use percentages too
56:30 - you don't necessarily have to use both
56:32 - from and two let's say that once this
56:35 - animation reaches 100
56:38 - i would like to apply the transform
56:41 - property
56:42 - and we will perform
56:44 - an x rotation
56:46 - of 360 degrees
56:50 - so let's set the animation to my rotate
56:54 - so that is an x rotation
56:57 - let's do this with y
57:02 - and let's get rid of that
57:06 - here is a y rotation
57:08 - and a z rotation
57:10 - let's change the opacity
57:12 - so at keyframes
57:15 - my opacity
57:19 - okay this time we will set this to 50
57:23 - then your animation will have these
57:25 - properties revert to what they
57:27 - originally were when you began the
57:28 - animation so at fifty percent let's set
57:31 - the opacity
57:33 - to zero
57:36 - so this will fade out then fade in
57:38 - see if i set this to 100
57:41 - this will fade out slowly
57:43 - and then snap back into place but if you
57:46 - set it to 50 there will be a gradual
57:48 - transition and then it's going to revert
57:51 - back after 50
57:52 - let's change the scale of our element
57:55 - at
57:56 - keyframes
57:58 - my scale
58:01 - let's have our image shrink
58:03 - and then grow back in place using
58:06 - transform
58:08 - scale
58:11 - 0.5 to 0.5
58:17 - so this will shrink
58:19 - and then grow
58:20 - and lastly let's change the colors this
58:22 - will be a challenge round
58:25 - keyframes
58:26 - my color change
58:29 - we'll go through the colors red orange
58:31 - yellow green blue and purple
58:34 - so let's have this begin at
58:36 - zero percent we will have the background
58:40 - color
58:41 - be red then at 20
58:45 - this will be orange
58:50 - 40 will be yellow
58:53 - 60 will be green
58:56 - 80 will be blue
58:59 - and 100
59:01 - will be purple
59:04 - actually since our element is beginning
59:06 - as the color red we don't necessarily
59:08 - need this specific portion
59:10 - okay let's try this my color change
59:14 - so we should be able to go through these
59:16 - colors
59:18 - and then it becomes red again at the end
59:20 - so yeah those are some simple animations
59:23 - in order to use an animation you have to
59:25 - create an animation so you use at
59:27 - keyframes and then come up with a unique
59:30 - animation name and then set some
59:32 - properties on what you need exactly so
59:34 - yeah those are some very basic
59:36 - animations in css if this video helped
59:39 - you out you can help me out by smashing
59:41 - that like button leave random comments
59:43 - down below and subscribe if you'd like
59:44 - to become a fellow bro