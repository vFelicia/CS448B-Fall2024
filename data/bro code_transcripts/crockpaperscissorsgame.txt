00:00 - hey what's going on everybody it's you
00:01 - bro hope you're doing well
00:03 - and in this video we're going to create
00:04 - a game of rock paper scissors
00:06 - in c-sharp so sit back relax and enjoy
00:09 - the show
00:12 - all right everybody let's create a game
00:14 - of rock paper scissors what i like to do
00:16 - is declare all the things that we'll
00:17 - need at the top of our program
00:19 - we'll need a random object to generate a
00:21 - random number for the computer's choice
00:24 - so we'll say that one equals rock two
00:26 - equals paper
00:27 - and three equal scissors so we'll need
00:30 - to create a random object
00:31 - random random equals new random and
00:34 - we'll create a
00:35 - boolean variable named play again and i
00:38 - will set this
00:39 - to equal true so if the player decides
00:42 - to
00:43 - exit they would not like to play another
00:44 - game we can set this to be false
00:47 - and we'll need a string variable to hold
00:49 - the player's choice
00:51 - i will declare this but not yet assign
00:53 - it so this will store
00:54 - rock paper or scissors and we'll need a
00:57 - string variable for the computer's
00:59 - choice as well
01:00 - okay that's all of the different
01:01 - variables that we'll need so let's
01:03 - create a while loop
01:05 - while play again equals
01:08 - true now if we're working with boolean
01:11 - variables we
01:12 - technically don't need this equals true
01:14 - portion
01:15 - because this by itself would evaluate to
01:17 - be true or false
01:19 - so you can just say while play again and
01:21 - that would work as well
01:22 - and then if the player decides to quit
01:23 - we can change that to false
01:25 - okay now let's ask for some user input
01:27 - console
01:28 - that right enter
01:32 - rock paper
01:35 - or scissors
01:39 - and we will store the user's input
01:41 - within string
01:42 - variable player player equals console
01:46 - dot read line
01:50 - now strings are case sensitive what i'm
01:52 - going to do is take the player's input
01:54 - and make it all uppercase just so that
01:56 - everything is consistent
01:57 - player equals player dot
02:00 - 2 upper i guess you could make this all
02:03 - lowercase 2.
02:06 - okay now let's display the player's
02:09 - choice with a right line statement
02:11 - so what if the player decides to choose
02:13 - something that isn't rock paper or
02:15 - scissors
02:15 - we would want some way to enforce that
02:22 - so let's say that i choose the gun and
02:25 - that's a valid response so we should
02:27 - probably prevent the player from doing
02:29 - so
02:30 - so what we'll do is use a nested while
02:32 - loop
02:33 - so while then surround this section of
02:35 - code within
02:36 - a set of curly braces and we will
02:39 - continue to prompt the user to type in
02:41 - something that is valid a valid choice
02:43 - so this is our condition while player
02:46 - does not equal rock
02:51 - and i'm just going to copy this
02:55 - player does not equal paper
02:59 - and player
03:02 - does not equal scissors
03:05 - so we'll need to assign player and
03:08 - computer a value
03:09 - let's do that at the top of our while
03:11 - loop for play again
03:13 - so player equals an empty string
03:16 - and computer equals an empty string so
03:19 - this is kind of nice when we do play
03:21 - another round we can reset player and
03:23 - computer
03:24 - okay let's try this
03:29 - enter rock paper or scissors i pick the
03:32 - gun
03:33 - enter rock paper or scissors how about a
03:35 - bomb
03:37 - fist nope okay so we have to choose
03:39 - either rock paper or scissors
03:41 - what about rock cool so that is a valid
03:44 - response
03:45 - okay so let's get rid of this right line
03:47 - statement we won't really need it
03:48 - anymore
03:49 - now we'll need to generate a random
03:51 - number for the computer player
03:52 - one two or three and i will use a switch
03:58 - so we will place the random number that
04:00 - is generated within
04:01 - the parentheses we could say like
04:05 - i don't know int random
04:08 - num equals random
04:12 - dot next and the range is going to be
04:15 - one through four so remember that this
04:18 - number is exclusive this will generate a
04:20 - random whole number between
04:22 - one and three okay then what i'm going
04:25 - to do is technically we don't need this
04:27 - portion
04:27 - like we could place random num within
04:30 - switch
04:31 - but what i like to do is kind of shorten
04:32 - and condense my code so i'm going to
04:34 - take
04:35 - this method of random.next and place it
04:38 - within the switch itself
04:39 - and that would work as well so let's
04:41 - examine some cases
04:43 - case one that will be rock
04:46 - computer equals rock
04:50 - all uppercase then break
04:53 - and we'll need case two in case the
04:55 - random number is two
04:57 - case two computer
05:00 - equals paper
05:04 - then break and
05:08 - case three
05:11 - computer equals
05:15 - scissors
05:20 - then break what i'm going to do after
05:22 - our switch
05:23 - is display the player's choice along
05:25 - with the computer's random choice
05:27 - so let's use a redline statement so
05:30 - player
05:31 - colon space plus variable player
05:35 - then let's create another right line for
05:37 - the computer
05:40 - computer plus computer
05:45 - and let's run this
05:50 - okay i will choose rock
05:53 - player rock computer scissors let's play
05:56 - again
05:56 - i will choose paper player paper
05:59 - computer paper
06:00 - and scissors player scissors computer
06:04 - scissors okay now we just need to
06:06 - examine our choices and see who wins
06:09 - that's the next step
06:11 - now what we'll do at this point is
06:12 - create a switch to examine
06:14 - the player's choice versus the
06:16 - computer's choice and we can decide who
06:17 - wins
06:18 - so let's create a switch and we will
06:21 - examine
06:22 - the variable player against many
06:25 - different cases
06:27 - so the first case will be rock
06:32 - and for now we'll just break we'll fill
06:34 - this in a little bit later
06:36 - case paper
06:41 - break and case
06:46 - scissors
06:48 - and break all right we're going to
06:52 - check to see what the computer picked so
06:55 - if computer
06:59 - is equal to rock
07:03 - then it's a draw so let's write
07:12 - it's a draw i think i'm missing a break
07:15 - statement
07:17 - all right then else if
07:22 - computer equals paper
07:25 - that means that we lose else if computer
07:30 - equals paper then we will write
07:35 - you lose
07:39 - else technically we don't need a
07:42 - condition because the only choice
07:44 - left is scissors for the computer
07:49 - else you win
07:52 - so let's copy these statements paste it
07:55 - underneath paper
07:58 - if we choose paper and the computer
08:00 - chooses rock that means that we win
08:03 - so let's change this to you win
08:08 - if we choose paper and the computer
08:10 - chooses paper that means
08:11 - it's a draw
08:16 - else you lose
08:20 - let's copy this again paste it
08:22 - underneath scissors
08:24 - so if we pick scissors and the computer
08:26 - picks rock
08:27 - you lose
08:32 - if we choose scissors the computer picks
08:34 - paper then we win
08:38 - you win else
08:44 - it's a draw all right let's test it
08:50 - all right enter rock paper scissors
08:52 - let's go with rock
08:53 - rock paper you lose let's choose paper
08:56 - this time
08:57 - paper scissors you lose again and let's
09:00 - try scissors
09:03 - scissors rock you lose man i kind of
09:05 - suck at this game
09:06 - let's try it again paper paper rock okay
09:09 - i finally won one
09:11 - cool now at this point we're going to
09:13 - let the player decide if they would like
09:14 - to play another round
09:15 - so place this code at the end of our
09:18 - outer while loop
09:19 - so i'm just going to follow the dots
09:20 - here so that would go
09:22 - right here alright so let's use a write
09:25 - statement
09:29 - would you like to play
09:33 - again y slash
09:36 - n so y for yes
09:40 - and for no actually i think i'm going to
09:42 - create another variable so let's do so
09:44 - at the top
09:46 - string answer
09:50 - and we should probably reset this to
09:54 - answer equals an empty string
09:57 - okay so we will add one more variable
10:01 - okay answer equals
10:06 - console dot read
10:09 - line then let's make it uppercase
10:13 - in case the player enters in something
10:15 - that is lowercase
10:17 - we'll still count it answer equals
10:19 - answer
10:20 - dot to upper
10:25 - then let's check to see what the player
10:27 - enters in
10:28 - if answer is equal
10:32 - to y
10:35 - then play again
10:38 - equals true
10:42 - else play again
10:45 - equals false
10:50 - all right then outside of the while loop
10:54 - we will display a goodbye message
10:57 - maybe we'll say thanks for playing
11:02 - all right let's try it one last time
11:08 - okay onto rock paper scissors always
11:11 - choose rock
11:13 - player rock computer paper you lose
11:15 - would you like to play again
11:16 - yes let's pick rock again rock paper you
11:19 - lose okay maybe you don't always pick
11:21 - rock would you like to play again
11:23 - no because this is a dumb game thanks
11:25 - for playing
11:26 - well okay then everybody that is a game
11:28 - of rock paper scissors
11:30 - if you would like a copy of this code i
11:32 - will post this to the comment section
11:33 - down below
11:34 - if you can smash that like button leave
11:36 - a random comment down below
11:38 - and well that's a game of rock paper
11:40 - scissors for c sharp