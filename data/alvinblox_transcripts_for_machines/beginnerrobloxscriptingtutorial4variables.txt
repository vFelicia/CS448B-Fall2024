welcome back to the fourth video in the scripting series now in the previous video we used what we'd learnt throughout the series so far to create a quick little dice game where you could roll dice and I get a get a number but today we're gonna be learning about variables now I did touch upon that in the previous video very very briefly but we're gonna go deeper on what variables are in roblox scripting so let me give you an example first before I tell you how they work so we've got our dice game here okay and each time that we want to change a property of of the dice we have to say game don't workspace dice one okay now if we had our dice and they were inside a folder sorry if they were inside a model if we group them together and we named this model dice and then maybe if it was in another model called game parts okay you would see that in order to reference the dice we would have to say game dot workspace dot game parts dot dice and then dice one okay game parts dice dice one okay yeah just make sure I got that right so you'd have to say that every time that you wanted to change a property or even if it was just still in the workspace you would still have to work right out game dot workspace dot dice one every time and if you wanted to change lots of properties of a dice say you wanted to change its color as well then you'd have to say the same thing again game dot workspace but game parts dot dice dice two dot brick color equals brick color dot new and we could say real red okay so you can see even though this works and it still goes red you you can you can tell that this is really really long it's boring to have to write out every time you want to change a property now this is where variables come in and a variable can be thought of kind of like a shortcut okay a variable is used to so let me show you it's used to hold some information so instead of saying dice game to workspace that game passed up dice all the time I could create a shortcut for that and I could say I could make a variable for this dice and whenever I just said the name of that variable let's imagine we called it dice and it would do the exact same thing as saying game don't work space dot game parts dice okay and just to show you so to create variable you have to say local first now you can say it without local but it's good practice to always put local before your variables and I'll explain why in a future video so we say local and then we cover our variable and name so the name of this variable can be anything as long as you haven't got a variable that's name the same thing so I'm going to call my variable dice okay and so I've given it a name and now I need to give my dice about variable a value okay so this dice name is going to be equal to a value it's going to hold some information so think of it of like a storage box and then you put the information inside of it okay so dice is equal to game dot work space dot game parts dot dice okay so instead of saying game dot work space game passedout dice we can now just say dice and if I copy this and I paste it instead of endor Y space no game parts dot dice every time okay you can see that it has greatly shortened our code okay and we've only had to say dice twice we haven't had to write out game dot words based on game parts dot and dice every single time so now that we are using dice for these two lines I could change the contents of this variable and it would update for both of these lines I wouldn't have to update them one by one but we'll get into that a little bit later on but let's test this out and see if it still works we should still have the same result and they should both be unanchored there we go they still get an anchored it works just as fine but we've saved ourselves from having to write out the same thing twice and that is what a variable is it's a shortcut because it holds information under a name and then we can use that name of that variable time and time again instead of having to write this instead of writing the same stuff out again and we can shorten this even more we could change our variable to be called dice one and then we could just add dot dice one onto the end of this and then we could copy and paste this variable for dice two and just change the dice one to dice two and then instead of saying dice dice one we could just say dice 1 dot anchored equals false and dice to the anchored equals false we've referenced to dice once at the tomorrow once for each dice at the top of our script we've made the variable and then later on we are basically referencing the variable name which are writing the variable name which substitutes for the contents of the variable so whenever this script goes to run is going to look it's gonna look up this variable we've written and it's going to think of it as if he's replacing the name of the variable with the contents of the variable so we've written dice 1 but there is no such thing as dice 1 in the game inside of game when it goes and looks for dice 1 as a service it's not gonna find anything it knows that we've got a variable in our script and so it looks at this variable it sees that it's equal to game that works based off game parts dice dice 1 and then in those and what we're talking about so we can just say dice one but and equals false dice to junk it equals false and again the same thing happened we've got the same action happening in the game but what we've done is we've shortened the amount of code that we have to write and again if we want to change more properties off of dice we don't have to write out the whole structure of having to reference it we can just say dice 1 dot brick color equals brick color dot new red for example I stood a brick color equals brick color don't new really blue you can see this is gonna save time in the future when you want to keep referencing the same parts okay and that that's white because the decal background is is white and it go and overlaps the the blue if you're wondering so that is a variable it lets you save time if you're writing the same things out over and over again you can assign values or content to a variable name and then use that name instead of having to to write the same stuff out again and that was a very very brief introduction introduction to variables but we we've set our variables here to the object the value of each variable here isn't as an object because we're saying dice 1 and dice these are these are both objects and you know because they're parts so a variable could be anything you could have a variable for the workspace so local workspace equals game or workspace even though you wouldn't really need a workspace variable because you can say workspace anyway that's like a roblox defined variable which the script already knows about but you could create a variable for other services so if you wanted to get replicated storage you could say all lighting for example you could say local lighting equals game dot lighting okay so instead of having to say game dot lighting all the time in future you could just say lighting so that's one way variables can be used to save you time but as I said a variable doesn't always have to be an object or path to something a variable could also well it could be any data type and you know we have the four main datatypes in roblox we have a string we have number we have a boolean value which can be true or it could be false what's the other datatype oh yes an object as well so again to workspace dot camera for example that is an object so these are the four main data types okay and a variable can be any of these so we could say local local text that could be the name of our variable and then we could set this text we could assign a string to it okay because a string datatype is some text and inside of here we could write the quick brown fox jumps over the lazy dog okay and now I I think I've gone over this before the print command if you don't know about it the print basically puts a message in the output so I could print hello there okay I could print hello run the game and it prints hello there don't worry about these errors by the way so that's what print does okay what we could do is you could write the quick brown fox jumps over the lazy dog okay and that would print it out we could print out ten times okay let's try this again so you can see it prints out quick quick Ram Fox ten times um and then what if you wanted to change the the text okay or you made a spelling mistake in the mall and you'd have to update them one by one right every time but instead of doing that you could say print text and you could then print it out even more times you could bring it out twenty times if you wanted to okay and you're gonna get the same output if we run the game again it's going to print the quick brown fox jumps over the lazy dog and so it's printing this because it knows that text is a variable if text wasn't a variable then there would be an error because the text it just prints nil because the text isn't in quote marks because it's not a string okay if it was a string it would be it would be pink like that but it's not so what the variable does is when we go to print it looks up this variable okay we found the variable text it's found that it's equal to the quick brown fox jumps over the lazy dog and so basically substitute text with this strip okay for all of them so when you print texts it's going to print the value that it's assigned to text so again if we clear the output and go again it prints out the quick brown fox and now because we are using text every time and we're just printing out the contents of whatever the text variable is we can change the text of this variable you could change to hello once and it's going to change it well it's gonna print it out 20 times you don't need to change they print because you've only changed text once and then it will just look up text again and then the variable and it will see that text is equal to hello so variables they can be also used to store text like that's probably not the best example but we will come up we will go over more examples of where variables are used in the future like this text can also be in sorry we can variables can also be a number so we could call it my number equals 30 and then you could print out what my number is okay you could also say print print 30 and that will do the same but you could say print my number but then he changed the my number variable it's gonna print out whatever whatever is equal to so it will look up what the variable is okay set to 500 and it's going to print out 500 because we've assigned we've assigned 500 to this variable now we have to define a variable first before you print it or use it so if we moved this print above the when we define this variable we're gonna get an error because scripts okay we got new and nil means nothing okay because scripts they run stepbystep so the first command the first line is going to execute is this print but it's like well hold on I don't know what my numbers you haven't defined it yet because we haven't got to that stage yet because we're defining it down here where we've got the local my number and the equal sign tells us that we're setting it to two something so my number let's move it back down what we can also do is we can do mathematics on this number so we could say print my number at 10 and that's gonna look what my number is so it's gonna be 500 it's gonna take that number I'm gonna add 10 to it so you should have 510 there we go 5 10 so we can do all kinds of maths on the numbers you could do divide 500 divided by 10 that's 50 there we go and you can see how you put the name of the variable but it substitutes it in pretty much all right and you may be wondering what why can't you just say 500 instead well that's because variables are useful for when you're using the same number over and over again okay so say we had another line that did my number and we wanted to add 50 to it we could say my number equals my number at 50 so we're getting the current value of my number which is 500 and then we're setting it to what it currently is 500 with 50 I'd gone to it so it would become 550 and then we would be taking my number which is now 550 because we added 50 to it here and it's working in steps and it's dividing it by 10 so we should get 55 there we go so a variable would be useful when you want to store why not store we'll keep a number say in like temporary storage so for example you could have the number of time left before a new game starts and then you might keep tell you you might keep subtracting one from it every second and then you'd be able to check when my number has got down to 0 that's something that we'll be looking at in a future video but what you should know is that variables they use to store information will not store more like hold information okay we can assign values to a variable name and then instead of having to write out the same value again or if you wanted to keep track of a certain value we would use a variable now if we didn't use a variable in this case okay we got rid of the definition and we said five hundred equals and we just did five hundred plus fifty okay and then we did five hundred and fifty divided by ten you can see how actually you can't see but one misses you can't keep track of a number as you go along and you can't just say five hundred plus 50 you have to use variables so you can go into steps if you know I mean because with variables so you can firstly define it to be one number you can do something to that same number and then you know dude lots of different math calculations on it and then you can get an end result and you can store that value as a variable and keep track of it look it up up to it subtract to it etc so that's what variable is it's kind of contemporary store in your script this video has gone on far longer than I'd hoped for it to have gone on for and we haven't gone over variables fully yet but just think of a variable as like a temporary store of information that you need in your script which you can use to save time okay you go back to the original example you can set it to an object and then don't have to keep saying the reference to that object over and over again so that was variables let me know if you have any questions I'll probably make a second video on this leave any questions you have in the in the comment section and I'll also have another quiz in the description on variables and probably some more videos covering it again coming soon in the description make sure you subscribed to the channel for more scripting videos there'll be an athlean blox logo on the screen now with an arrow pointing to it and also the next video in this series is on screen now you can see the thumbnail for it towards the right go ahead and click it and I'll see you in the next video thanks for watching