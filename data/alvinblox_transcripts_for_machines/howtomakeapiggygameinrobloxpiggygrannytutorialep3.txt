okay welcome back to the third episode in my piggy series so in this episode we will be working on the round loop to detect when things happen so we can end the game if the piggy kills everybody and also we'll be working on getting the keys and the tools working so you can click them to pick them up and also drop them again well done for making it this far we are now over halfway through the series and keep going and if you do encounter any bugs as I've said in the last episode try your best to fix them the piggy game is working fine for me so it's going to be you that's made a mistake or an error and as I've said I've got that page on my website with some help details if you stuck but keep going and you'll get there I promise as always don't forget to Like and subscribe to my channel if you're enjoying the series so far and you can also get that piggy kit in the description box alright let's get straight into episode 3 okay so now we're gonna look at how to script the keys which will open up doors because obviously we've got the doors which we've scripted earlier which can swing open to open and close them but we've also got the doors which needs to be unlocked by a key and that's what we're going to be scripting in this part but the this is a little bit confusing but you should be able to get your head around this the map which i've got in the replicated storage for every single map that you've got you're going to need to have you're going to need to put the items in here that you want the players to find so if we have a look in this map which I've already created we've got the items folder which I've been talking about and inside of here we've got a load of items we've got two crossbows we've got a different coloured Keys blue key green key orange key purple key and red key as well as the white key the white key is used to escape at the end so it's going to be the last thing that you find but these keys are going to be picked up by a player so when the map spawns in there will be items such as keys we've also got hammers and wrenches as well and they'll already be in the map because we've already put them in the items folder so they're already littered around the map but when it spawns in and they get spawned in when the map gets spawned in as well but these are not tools they are instead just parts or models as you can see there's no tool objects and that's for a reason the reason that they are not tools are because if you step on a tool then you'll automatically pick it up a regardless of who you are in the game and we do not want this to happen because then the piggy could step on the tools and pick them up by accident and then they could just keep all the tools and the piggy will have taken all the keys and nobody will be able to escape so we don't want the piggy to be able to equip the tools so we can't just have tools around the map tool objects are not going to work and another reason why tool objects won't work is because we want the player to only be able to equip one item at a time and so you can't check when somebody steps on a tool whether they've already got something in there in their backpack or not so you can just step on at all because roblox have coated it themselves and you will equip it no matter what no matter who you are whether you're the piggy working through the contestant and you can see the issues around this so I've come up with a different solution so we've got two types of items key handles and tools and you will have seen the key handles in the server storage now the tools are going to be put into your your inventory of course when you click on them but what I've done is I've separated them so you can see we've got the handle in the tool so the handle for the key is like the part that you will hold the main part that you were hold so we've got these parts in the map and each of these parts which which are basically just the handles which have been taken out of the tool they're just parts but they've got a click detector and they've got an item script inside of them and when you click on this key what's what's going to happen is we're going to create a key module script which when you click on a key it will look up the name of the key or the name of the tool in the service storage tools folder so if you click on the red key it will look up the red key in the tools folder in server storage and it will copy it and it will put it in your backpack so it looks like you've equipped it but then it will destroy it will destroy this red key like ham part objects so it looks like you've clicked it to pick it up but what's actually happened is you've just deleted this red key which makes it look like you've taken it and then it's cloned the actual tool from the server storage into your backpack so that what's happened is we because we're using a click detector when you click it we can use a script to see who is trying to pick up the item so we can check to see if you're the piggy or whether you're a contestant and also whether you've got something in your backpack already and if you do have something in your backpack already then we can look up the the key handle which is the part which we just destroyed and know which is the part that you already sorry the part of the tool with the same name which you are already holding and we can look it up in the key handles so let's say you had the green key and you've just picked up the red key so it would take this key handle and it would put it into the items folder at the same position here so it's kind of like swapping it out ok now I hope that makes sense to you but the the premise of this the reason that we're doing it is because I'll try and word it in a different way so when you click one of the the items it will delete the item that's on the screen so the red key but it will clone out the tool with the same name from the server storage tools folder and put it into your backpack so we've got two things going on it's deleting that red key part which you've just clicked it's not at all it's just a part and then it's actually taking the tool with the same name because the red key is gonna have the same name as the red key tool so we just need to look it up in the service service tools folder and I clone it into your backpack but then it will delete that key part but say you already had something equipped such as a hammer and you wanted to drop the hammer to pick up the red key then what would happen is it would take everything in your backpack and put it on the floor so it would take the one thing that's in your backpack put it on the floor and then it would look up the hammer in the tools folder because that's the key part that you're going you lost the key handle you're going to click and it's going to take that hammer it's gonna put it into your backpack so it does sound a little bit confusing but hopefully when we get into the coding of this it will make more sense and I'm sure it will so what we're gonna do is we're gonna create a new module inside of the game logic scripts so insert a module script and I'm going to call it this module key module just like so now what we're going to do is we're gonna create a function inside this module which is going to run when you click on one of those key handles ok so we've got the key handles which will be registering when you click them and then from that we'll create another function to drop all of your items which we can call from that collect function ok so if you have a look inside of the the key handles you can see I've already put scripts in there called item script and what it will do is it will actually look up this key module which we've only just created and it will it will do all the click detector Mouse events so when you click on the item the for example the blue key is going to trigger that clicked function that I've just told you about ok and we're going to script that function right now so function module got clicked and we need to pass two things this function the player that is going to have clicked the tool but also the key which they have clicked so if they have clicked then they would have clicked we will know which key they've clicked now you'll see in the item script we're sending the player that clicked the click detector but also script the parent and script the parent is the blue key now if you're working with a model where and so for example the script is in a handle in the model you would have to say scripts parent operon because you want to send the object that has the name of the tool so because this item scripts parent is called handle we don't want that we want to send the model itself because if it's a model we'll do some checks to see if it is a model because it's all to do with the positioning so if you are creating a handle but it's made up of lots of different parts put it in a model and put the item script in one of your parts preferably the handle doesn't really matter though but change the item script to be the second argument to be script doctoring got parent okay I just have to say that for the models but if it's a part and you've got the if it's just a part by itself just do script that parent okay so I know I'm saying key by the way because you will be able to click other items so yeah I will change out the set to be items the item that you click because you could pick a hammer for example I just said key because when I started creating this game all right there were only keys at first but what we want to do want to firstly check if it's a real player and the play is still here so if player then we need to check if they have a character so if player character and they are not the piggy so this is how we're checking to see if the person that clicked the tool is not the piggy so we can say and not player curl find first child piggy what this basically means is if they don't have the piggy an object called piggy inside of their player then we know that they can't be the piggy can they now what we need to do is we need to check to see if the item is a model that you've clicked so if item is a model this is a great way to check if it's a model use the is a function built into our blocks by the way and then we're going to need to have a variable here for the position we're going to grab the position of the item so if it's a model if one of your key handles is a model you need to set any primary part property and what the farmerie part is because you can't move a model by saying model dot position we have to designate a part that will move for us and when that part moves all the other parts will move with it so just select one of the primary parts so click it and then click one of the parts inside your model I've selected the handle okay but that's what you need to do I'll do it again it says its handle and you set the primary part so what you need to do is make sure you've got that primary part out it's not going to work then we're gonna say position set this position variable to be the keys primary part sorry the items primary part position but if it's not a model we know it's just a part so we can say position equals item dot position can't we because position is a property of a part whereas a model doesn't have a position property so we have to get the position of its primary path and what we're doing with this position is we're just collecting the position in a variable so when we drop the tallit you can only have we can drop it in the same location of where the old tours so that we can you know if you have a if you trying to pick up a hammer but you have the red key equipped we want to drop that red key at the same position of where the hammer is so someone else can pick it up and we can swap out your tools and now what we need to do is we need to look up the the item name in service stores you we want to get the actual tool right because we want to equip this tool you've clicked on the part which looks like the tool and we're going to delete it but first we need to actually equip that item in your inventory so to do that very very simple we're gonna say if game got service storage dot tools cut off fine first child because it might not be there so we use fine first charge to be safe but instead of doing string we're just gonna say item got name because as I've said the items name is going to correspond to the tools name so if you click on the blue key part then this is going to be a blue key that's why you need to have your tools your key handles the key handles are these things named the same again so that they correspond with each other if they're not named the same it's not gonna work so if you have a red key tool you're gonna need a red key key handle parts which you can click on it needs to be named the same thing so we're looking for it in service storage tools and if it's not there it's not gonna work so make sure your tools and your handles are named the same thing I'm just not gonna work that's vital so if it is in the tools folder then we're gonna clone it out so very very simple we're gonna do the same thing again pretty much so we're gonna say local cloned tool I'm going to crack it create a variable for that tool we're gonna clone out of service storage so game door self storage tools and then in square brackets I'm gonna say item name and then we're gonna do clone that's going to create a clone of the tool from service storage so that we can put that in the players backpack so we can say clone tool dot parent equals PLR so the player the player that clicked the tool because we passed that to our clicked function and we can say player dot backpack so backpack is where their tools are located so remember earlier with the picky bat I said if you put it in player character they'll automatically equip it whether you put it in player dot backpack it will just sit in the inventory at the bottom of the screen which is where we want it to go but they probably will equip it because it's the only tool that they're going to have so it'll automatically become equipped but you put it in the backpack because that's where you put most of the tools okay then we're going to a.m. we have to put it in the backpack because to make a play equip the tool which we're about to do we're gonna manually make them equip it it has to be in the backpack first so we say player lock character got humanoid Curran equip tool and this forces them to pick up the tool and then we can just say cloned tool but it has to be in backpack for that to work and now once that we have cloned the actual tool into their backpack we can now delete the key handle because we don't want anybody else to be able to pick it up because somebody else has already taken it so we're gonna say item destroy and now can you kind of see where this going so when the player clicks on the tool handle or the key handle this part well when it's clicked we're firing the function clicked in the key module for the player that clicked it with the item that they clicked ok and then what's going to happen is we're going to look up in server storage tools we're going to find the tool object with the same name so imagine they've clicked on the red key we're gonna look in server storage tools for the tool called red key here it is then what's going to happen is it's going to get copied out and cloned into that players inventory their backpack and then when that's done we're going to delete from the items folder in the map that's key so that it looks like it's been taken all that we've done is deleted that key parts and which they can click on and we've put the tool with the same name into their backpack two different things have happened but it looks like one thing has happened the two things that have happened is that we've clicked on the tool and we've clicked on the key handle sorry which is the part on its own which isn't at all and the second thing that's happened is we've cloned out the tool object from server storage into their backpack but it only looks like one things happened it looks like we've just swapped them but we haven't in fact it just looks like you've picked up which is the one thing but it's two things actually so what you really need to be aware of is that we have two different parts we have the part what you can click on to pick it up that's the key handle and that's the thing that's going to be in the map so for every single map you need to go into server storage and you need to pick out the things you want in your map you don't have to have every single key so if I made a new map for example and I only wanted the green key orange key purple key and the wrench I would just copy them out I'd go into my map and I'd paste them into the items folder okay now the reason we have them the items in the maps items folder but also in the key handles folder in server storage is because when you pick up the first item let's say red key it will get destroyed okay now that's because it's gone into your inventory now what if you want to swap out that red key for a hammer well we need to get that red key handle key handle back again to place down where the hammer is so someone else can come over and click on it so we've already deleted it from the map so we need to get it back from server storage so we're gonna make a clone of it from server storage from the key handles folder I'm gonna put it back into the maps items folder because when it goes into the maps items folder it's available for someone else to pick up again because they can click it okay so I'm gonna put that red key back I was just showing you how it works and hopefully you are happy with how that works okay so what we've done here is we've set up the clicked function so that when you click on a key is going to delete it but it's going to put the tool into your backpack so it looks like it's gone and you've picked it up okay and no one else can pick it up next thing we need to do is work on a function to drop your tools okay when you click on an item if you already have something equipped such as a hammer we need to remove that from your backpack and we need to put it back on the ground back in the items folder and that's what we're gonna do now we're gonna work on a drop tools function to make you drop your tool so to do this we're going to stay in the key module which in a create a separate function which we can call from an external scripts and but actually we're going to call this function from the module itself because when you click on an item we want you to drop your tools so this function is going to be called module dot drop tools and things were going to pass to this function it's going to be firstly the player whose tools we're going to drop secondly the map which were currently on and thirdly the position of where you want the tools to be dropped now I say drop tools you're only going to have one tool to drop but it's actually going to clear your entire inventory now if you've got one item in your inventory it's still gonna clear all that's why I've called it drop tools and just by some weird bug you somehow have two tools it's still gonna get rid of everything in your inventory so first things first I'm going to make a table cool tools and this table is going to contain any tools that we do find in your inventory for example if you have three tools for some reason they're all going to go into that tools a table and then we can loop through that tool table and destroy of hang in there now firstly what we're going to do is so firstly what we're gonna do is we're gonna look for any tools that are in your backpack to begin with because remember you could have tools sitting in your backpack or the tool could be currently equipped when it's currently equipped it's in your players character so we need to also look for any tools that are in your character so let's get started with the backpack first thing we're gonna do is going to loop through everything inside your backpack to do that we're gonna use the for loop just we've as we've done earlier on so for I comma and then tool tool is going to be the the object that we're looping through currently so if we loop through everything in your backpack in pairs gay sorry player backpack how long to get children to so think of if you have if you have three items in your backpack it's going to loop three times and each time it loops pool is gonna be a different tool that's in your backpack okay so what we're gonna do is we're first you can the check to see if it is an actual tool and in case you don't have any other objects in there that aren't tools so if tool colon is a tool then and also we need to check that it's an actual tool the Tauri that there's a key handle corresponding to that tool so if you if you have got the hammer we just need to make sure that there is an actual key handle that we can clone out so if it's a tool and game dot server storage dot key handles fine first child tool dot name so if there is an item with the same name as the tool inside server storage key handles if we've got that key handle that we can clone and put in the same place as where the tool is going to be then we're going to do is crack line of it so local clone equals and it's gonna be the same thing again it's gonna be this key handle we're gonna make a clone of it so code on clone on the end here so what we're doing is for every tool this inside your backpack if there's a corresponding key handle that we can clone we're gonna clone out of the key handles and what we're gonna do is we're going to change its position to be the same position as where you're currently standing okay so obviously we don't know the position yet but when we call module look drop tools we're going to pass through a position and guess what it's the position that we've just got down here so we're gonna call it that function from the module dot clicked and we're gonna pass through the position of where the key or the item lead just clicked it so if you just clicked hammer we're gonna pass the position of that hammer to this drop tools so what's gonna happen is the key that you're currently holding or the item currently holding that's tool that's in your backpack if there is a key handle of that tool so for example the hammer yeah in the key handles folder if there's a part that we can clone out we're gonna clone it but we've got to set its position so we're gonna say firstly if it's a model so if say for example we've cloned out the crossbow well the crossbow is a model and we can't just set the position of the model we have to set the position of his primary part so if clone is a model then we're gonna say clone curran sets primary see frame sorry set primary part see frame really importantly you get the capitalisation correct as well so you've got a capital S P P for primary P for parts and capital C F for C frame so you've got a capital C and a capital F really important because it won't be correct it won't work if you don't get the capitalization right so make sure you've got the capitalization the same as mine throughout all the scripts it's really important when you're coding so C frame is a position with a rotation and when you are setting the position of a model you have to use set primary part C frame okay you just can't say you can't say model dot position or cloned opposition so we say seek clone come on set primary part see frame and then we need to actually put in these brackets the C frame where we wanted to go so kind of like the position value where we want it to go so we're going to say C frame new and then in brackets we're just going to put position okay and that's going to convert the vector three position into a C frame so that we can position this model to be at the same position as where the item that we clicked and got rid of was obviously though if it wasn't a closed if it wasn't a model and the the key handle is just a part on its own like any of these we can just simply say clone dot position equals position okay we don't need to bother with any of that C frame stuff just because when you're moving a model you have to use C frames I mean you have to use set primary part C frame if it's a model but what this will do is it will put the key handle clone so again this part which you can click at the same position of where where the tool that you picked up is so back the key module then we're going to do is we're going to put the clone into the maps items folder so map items so if it's chapter one it's gonna go in chapter 1 dot items but of course when the map is loaded into the workspace as I said earlier we're going to rename it to be map because we don't know if the map is going to be chosen is going to be chapter 1 chapter 2 chapter 3 chapter 4 they all have different names so we can just rename it when we load it in as being map and then any other scripts we can reference it as being workspace dot map so when we do call this function we can say game dot workspace map and that will be our map but because we're in a function and with dealing with arguments we can just say map the items over here because we're gonna pass that data to the function and now if it does sound confusing do stick with me we were nearly finished with this part and hopefully it will make more sense when we test it out last thing to do is now that we've dropped the tool we've dropped the actual clone the key handle which you can click and that's now available to pick up you should no longer be holding that tool so we're going to say tool colon destroy through move it from your backpack now pretty much the same thing for your character so we're gonna just copy all of this code and paste it down here okay only thing we're gonna change though is play it up backpack we're gonna change that to player dot character okay and that should be everything you need because if you're holding a tool it will be in your character it gets removed from your backpack and it gets put into your character when you're holding it so we need to run the same for loop through your character just to remove any tools that you're currently holding and I'm just going to make sure it's nicely indented like that so we've just written the drop tools function which will drop any tools that you're holding and it will put their key handle clones which you can click into the map into the same position where you clicked the tool that you're now going to pick up so we now need to call this function to do this what we're going to do is we're just going to put in our module door clicked function we can say module dot drop tools now we need to tell it the player that we're gonna drop the tools for which is going to be player because it's gonna be the player that clicked the clicked detector that we passed through to our module clicked function from the item script so we're firstly getting the player that click the click detector that click the item we're passing that to the key module dot clicked function then in the clicks function we're picking it up and then we're passing it onto the drop tools function later on so we can identify the player who wants to drop the tools it's going to be the same player that clicks the tool that is gonna drop all their tools so we've got the player then we've got to give it the map so games or workspace dot map only obviously there's no map in workspace yet with a name map but by the time this runs and you click the items there will be and then the next thing the next argument that we're going to send to the drop tools function is going to be the position we just got here and logged as a variable the position of the key handle which you just clicked and then what that's going to do is we fired that function so it's firstly gonna drop the tools that you're holding we can drop the key handle version not the tool version the key handle remember I said it has to be the key handle because if you click it sorry if it was a tool and you just stepped on the tool anybody would be able to pick it up so the piggy could pick it up we don't want that but down here because we'll check in when you click on an item because we using click detectors we can track when you click it if you're the piggy or not because you will have this if you have this piggy value stored inside your player will know that you are the pig e which is why it's so important the earlier in the game logic scripts in the round module that we inserted those tags to tell whether you're the contestant or the piggy because when it comes to other scripts we can easily tell if you're the piggy or not so that's why you got to do those tanks okay and then very very simply we just drop those tools and then we copy the tool object out of surf server storage into your backpack and we make you equip the tour now you may be a little bit confused by this and I don't blame you if you are because it is a little bit hard to get your head around but I'm gonna we're gonna go into the game I'm gonna show you how it works okay I'm gonna do some printing to show you so we're gonna print out dropped key handles and then we're gonna say yeah hold on yeah drop tools yeah that's fine so drop the key handles and then we can say print equipped the new tool quips equip the tool object so if we print that out then we'll be able to look in our output and we send a message so that we can check it out and it will actually tell us that it's dropped the key handles and it's equipped the tool objects so let's open up a test server now just to recap make sure you've got all of your items that you want to be placed the key handle versions not the actual tools themselves in your map now if you're still wondering what a key handle is it's basically all the parts that were in the tool so if we look in a tool here okay blue key it's just the handle part or any other parts that are in there which are in this key handles folder if you want to add your own key handle that's fine but just make sure that you've got a click detector and an item script in there okay and if it's a model make sure that the item script is inside one of the parts so that you can actually click the part or the objects and the clip detectors in there as well and also in the item script the second argument is going to be the actual model itself so script parent parent so the model that you're sending which has the same name as the tool now I'm really sorry if you're confused by this it is hard to get your head around but if you do have any questions leave a comment and we'll try to help you as best as we can now let's go ahead and test the game out all right so a new round is starting and oh by the way guys each time you run the game make sure that you've taken your map from the workspace and you put it back in replicated storage ok the map has to be in replicated storage so they can be chosen by the script ok if you have if you keep it in the workspace it's gonna cause an error so in like a index nil with clone error so make sure that your map is in replicated storage in that chapters folder before you start the game again alright so we're in the map and it's a little spawned in now let's go and click on all that you can see because we've got that click detector in the key handle we can hover over and we can click it so let's click on the green key and boom you can see we equipped it and it said drop the key handle so obviously we didn't have any key handle to drop because it's the first item that we equipped but it printed out anyway because it it looked it it went and looked to see if we could do it and it's also said equipped the tool object now did you also see that the door just unlocked when I touched the key against it that's because the door module that I wrote and I gave you in the piggie kit has worked and it has set up the event for when you touch a key against the door that's pretty awesome right but now if we go and unequipped the tool first and we select another tool just the hammer is going to swap it out so you can see it's dropped the key handle which is just the part not the tool but it's actually looked in server storage and it's equipped the tool objects for me that it's got the hammer out of serve storage and it's put it from the tools folder into my backpack and you can see it's working perfectly we can swap the tools out so how awesome is that so now we have pretty much a feasible game that we could play if you using the map that I use we can walk up to the next room which is going to be the red door up here at the top and hopefully that door will unlock as well now I haven't really showed you the door module yet and I will be publishing another video on how I made that but you can see it's working really well we're getting this red key and then we take the blue key we take that to the shed so we go all the way outside of the shed here and we unlock it and there we go we now get access to the wrench but we can't use the wrench because we need to get over the plank don't we so we need to use the wooden plank and we'll take that all the way to the top again and then I can equip the wooden plank and just click on the wood plank and because I coded all of these tools for you and put them in the piggie kit they're already there for you to use although as I said I will be publishing more videos so that you'll be able to learn how I create those tools and I really do recommend you you watch them you can also see we've got the crossbow now that's a model but you can still pick it up and again that's another tool which I've coded where you can click the piggy and you'll be able to stun him and that's what we're gonna be working on as soon as well it doesn't quite work yet but that's because we haven't set up everything else that's needed to make it work and most the tools should be working so the wrench for example is used to turn generators on or off so you just click it to enable it and then you'll need also hammers as well the hammer which we can get from the green room so you can see with Connor got a working functional game but there are things that still aren't working that we have encoded yet such as the things that could end the game so for example we can't detect whether the piggy has killed everybody so we can end the game or we can't detect whenever we has escaped so that's what we need to work on next so the question is how do we know when somebody has died so that we can count the number of players who are left in the game and it's a great question and you remember earlier when in the round module we created the insert tag function which inserted either a or insert the value into your player object which was either called contestant or piggy well what we're going to do is we're into constantly every second of the for loop we're going to loop through all of the contestants or sorry all the players in the game and if they have a contestant value in that player then we're going to count them as a player that's alive so example if we had four players with that contestant tag we would say that there's four players left who are currently alive but when they die we're going to remove that tag from their player because we're going to set up an event which will trigger when somebody dies and if they do have one of those tags inside of them we will remove that tag from their player and so the next time that we loop around and see if there is a player with the piggy tag or and we count how many players were are with a contestant tag will be able to work out whether there are more than zero people out with the tag so if there's zero people that have the contestant tag we know that everybody's died and that the piggy is one but if we loop through everybody and find out that there's nobody with a piggy tag we know that the piggy has either left the game or they've died so there are two things there that will cause us to end the round and we can manually end the round by using the break statement in a in a for loop and that will stop it and stop the round so what we're going to do is firstly going to create another table for the contestants and every second we're going to update this we're going to create a blank one every second and then we're going to fill it up with all of the players that currently have a confessed value in their player and then what we'll do in in another script it's will handle the deleting of those values okay so firstly let's just do local contestants to create that blank table and then what I'm going to do is we're gonna do a simple for loop so for I comma player in pairs game players curl on get players do so this is going to loop through every player that's currently in the game so what we're gonna do is win a check to see if they have a contestant value inside of them so if player curl I'll find first child contestant then if they do have that contestant value we're going to insert into the contestants table that player okay so we're going to say table dot insert into contestants we're gonna put player okay now you may be asking well hold on didn't we have a contestants table earlier on what we did but it was in the game logic script and the reason why we also need a new contestant table in the start round is because it's going to be changing the players that have the contestants tab you know somebody gets killed then is gonna change it's gonna be different contestants than there were when the round first started which is why we constantly need to be updating that table with the only the players that do have that contestant value because we know that they're still alive because if they do die then we will write some code to delete that value okay we're just doing the detection first detecting if they have died what detects me if they have lost that value and if they don't have a value then they won't be inserted into the contestants table so we're doing elsif so if they don't have the contestant table contestant value well maybe they have the PE value so else if player find first child piggy because they could have that piggy tag couldn't they so if they are the piggy and they have that piggy tag we know the piggy is still alive so let's create a variable called local is piggy here now we'll set it to false to begin with and before we head into this for loop but if we do find the piggy is still in the game and is still alive still has that value inside of them which which will also be deleted if they die or if they leave the game they leave the game will automatically be deleted because their player will just be removed so if we do have the piggy in the game then we will set is piggy here to be true but if we don't come across the pickety well is piggy here it's just gonna stay as false so by the time we reach the end of the for loop well it's either going to have changed to be true and the piggy will be here or it won't have changed at all so it will still be false so the piggy won't won't be in the game anymore they've either died or they have left the game so what we can do now is we can have an if statement outside of this for loop which checks to see if if not if the piggy is here or not so if not is piggy here and then that's basically the same as saying if is piggy here is equal to false so is the piggy dead or left the game okay so if the piggy has died or they've left the game well firstly we need to break out of this for loop because if we don't break out of this for loop it's going to keep on counting down all the way to zero even though the game's over so we need to say break and that will immediately stop the for loop and it will move on to the next piece of code underneath it and it just happens there is no code underneath it but there will be very soon okay what else could stop the game well there could be no contestants left so if the number of contestants member hashtag before a table name will give you the number of items in that table and if there's no players left there will be no contestants in that table so the length or the number of items in that table will be zero so if the contestants is double equals double equals in a for loop if it is equal to zero and there's no contestants left then we're also going to break and also we're also going to break out of the for loop if the time is up you may be asking okay but won't the forloop finish when it gets the end anyway that's a great point and you'll see why we're doing this very very soon so if I is equal to zero then we're going to break as well now now that we've broken out of the for loop if we get down here how do we know what's happened we we want to update the status value to tell people that you know either the piggy won or the contestants escapes or time ran out or everyone got killed so what I'm gonna do is we're going to create a variable at the top here we're gonna call it outcome okay we're gonna leave it blank for now but when we do break out of the for loop just before the break because you have to write the code before the break statement because if you think about it if you have any code after the break well it's already broken out of the for loop and it won't get to that line in time it will just break out of the for loop so any code that you do want to do has to be done before the break and of course we've got code underneath this first break but this break is only in the if statement so it will break and it won't carry on with any of these other checks okay if the piggy was here it wouldn't break because it wouldn't get to this part in the if statement say the contestants was zero okay well obviously the piggy hasn't died so we'll move on to the next check is there no one left in the game oh yes nobody's left contestants is zero okay we're gonna break and then it's not gonna get to this if statement because it's already broken out of this for loop it's not gonna get to the next if statement because we've told it to immediately stop the for loop and just move on to anything underneath it okay and the thing underneath it is it's gonna be this code here any code that goes here because we've broken out of this for loop here but what we also need to do is we need to keep a log or we need to keep on record what actually entered the game because if we just break and we get to this part down here and we want to print something out like you know player one or sorry the piggy one or the contestants one well how do we know that because we've just we've broken out the script we haven't said break because piggy has died we haven't given ourselves a way to know what's ended the game so we can keep a log of that by setting the outcome variable to something so if the piggy is not here anymore then we could set the outcome to piggy left okay I and it can be whatever you want okay it could be piggy gone piggy left it could be hamburger right but to make it so that we can understand what it is I'm gonna set it to be a string called piggy left then in the contestants equals zero well we'll set the outcome to be piggy killed everyone I am using hyphens to separate my words you don't need to do that you could have spaces you could have no spaces you could have dots whatever you want as long as it's something that just tells you what happened okay doesn't matter what the text is as long as it just it's different for each outcome and if I equals zero then obviously the outcome is going to be time and time up okay so I've got my three outcomes here and outside of this for loop I can then check to see okay well if the outcome is piggy killed everyone then I'm gonna set the status value to the piggy has killed everyone okay but what if it is something else so else if outcome is time time up then status value it's going to be time up contestants win but what if the outcome is piggy left if the piggies left the game well then we can set the status value to be piggy has died slash left contestants win okay now you may be asking well why don't you just set the status value here right where you've got the outcome instead of settings outcome value and then doing it later on well that's because if you want it to set the status then you'd have to do a weight in this if statement and you'd have to wait for the for loop to break that's not good practice we want to break out the forloop straight away and then once we're out of that for loop we can deal with all these outcomes okay so when we've set the status value we're gonna wait for five seconds just so that we can have the status on the screen for at least five seconds so that people can read it okay and then what's going to happen is it's reached the end of the function so the game logic will print out this hello that I said earlier will only print when the start round function has finished and by this time when the wait five is finished while we've got to the end of the function so it's finished running okay so you can see that the for loop is basically containing the game for 600 seconds or however long it is until something happens when something happens such as the piggy leaves or the contestants all die or the time runs out we are using the break statement and the break statements will stop the four loops it will stop it from running and it will either it will set the outcome variable to be something okay and then we can check what the outcome was and depending on what it was we could set these status values accordingly and if you wanted to do something else such as I don't know play some music then you would do it outside of this for loop somewhere like here before this wait five so that the wait five basically stops the function from ending straightaway and the game from moving on to the next thing so it would wait five seconds and then it would finish running the function so the game logic would move on to the next line of code which would be hello and so after this we would work on the code to end the round for example deleting the map removing everybody's tags teleporting everybody back to the lobby etc that's what we're going to do next but we've now got the game loop and all of the different eventualities which would happen lots of different eventualities you know players dying pickiest people escaping time running out they are all the eventualities and we have to cover all bases by having code that will run when those things happened which is why we have to set the outcome variable so that we know once you've broken out that for loop what has actually happened okay and that we can do certain things when certain outcomes happen okay maybe you want to have a fanfare of like a triumph sound when you escape you know because everyone's happy and that's what you would do if the outcome was everyone escapes and that's what we'll do later on as well we're gonna do an outcome if everybody has escaped but we currently have no way of detecting who has escapes so that's why we're gonna do it later on but what we still need to do is we still need to delete those tags for the players when they leave the game okay we still need to delete the contestant tag and the Piggy tag if somebody dies and that's what we will be doing next so we're gonna create an event which will fire when a player dies so we're gonna go into the event handling script and we've got our player added events here now what we're gonna do is we're going to insert a character added event and this character added event will fire whenever your character respawns so we're gonna say player dot character added curl on Connect function and we're gonna have a argument of the player's character which I'm gonna call car you can call it whatever you want though make sure you've got that bracket on the end though and then inside of here I'm gonna create a humanoid died event so this will fire whenever you die as soon as you you die or you get killed it's going to fire so car got humanoid got died Connect function okay and so inside of here again close it off with a closing bracket parentheses inside of here what we're going to do is we're going to see if you are contestant so if player curl on find first child contestant you have that contestant value in your player then we are going to delete it so player dot contestant curl on destroy so the next time that we loop through in the next second that we loop through all the players in the game in that round module this player will no longer have their contestant value or the player that dies will no longer have that contestant value so there's going to be one less person alive in the game and so if everybody dies then there's gonna be no contestant values in any player so there's it's gonna get added to that contestant table in there and module and so when we through the hashtag contestants it's gonna be equal to zero so there's gonna be no players left and that is where it's going to break out with the for loop so we've just deleted that contestant that contestant value now what we also need to do when you've died is we need to drop your tools because if you're holding something like the hammer or an important key and then you die well it would just be gone so we need to drop your tool so that somebody else can pick it up so we're gonna do is we're going to get the key module swings a local key module and we have to require it remember equals would require and then in there we'll say scripts got parents come on wait for child and then we're gonna wait for the game logic script like that and then we're going to say dot key module like this okay and that's our key module now we can access the functions in there and one of the functions was the drop tools function so we can say key module dot drop tools and we're gonna have to supply the player who's who want to drop from the map which will be gained or workspace map because we know that's gonna be its name and then also we need to give the humanoid root part position because that is where the key we want this the the item that you're gonna drop to go so we can say car dots humanoid root part drop position just like that and let's just also wrap this in a if statement to make sure that you have got you have got a humanoid root part and so that it won't error if it isn't there maybe you've died or something or you've left the game so if car find first child humanoid roots parts then tab that and end and so that will only run if you have got a humanoid root part so just a little bit extra security there to stop it from erroring and if you want you can prints tools drops just so that you know it happened so we've just managed to drop the tools when a player dies and also we are deleting the contestant value from their player so that we can detect in the round module that's a player has died now of course you may be the piggy so let's go into this if statement here and do an else if player cut off fine first child piggy and so if you do have that piggy tag inside of you then we can delete it if you have died colon destroyed like that so that we know let's add an end on here so we know that if you're the piggy then we can delete that that tag so that then in the round module we can detect that the piggy has either left the game or died okay if they have left the game then it will automatically delete because their character will get destroyed but sorry that player object will get destroyed it but if they die you know maybe they reset then we're gonna delete that piggy value and now our round module should work perfectly so if we go and test it out and we make an eventualities happen so we could let the clock run down we could kill the piggy or we could kill all the contestants then it's going to end the game so what we should be seeing here is that the round should start as normal and then the piggy will get released but what we'll do is we'll just test everything so firstly I'm gonna kill mice the contestant so let's just reset and see if it's yeah there we go it says the piggy has killed everyone so it's ended the round it stopped counting down and obviously we haven't worked on the cleaning up off the round next thing that I'm going to try is I'm going to kill the piggy and see if it says that the piggy has died and that the contestants will win so here we go on the piggy on the left so we're gonna reset and it says piggy has died contestants win so it's obviously breaking out of the for loop setting the outcome variable and then we are finding out what the outcome is and setting least a his bar accordingly and the final thing to test is the clock running down so to test this I'm gonna go back into the round module I'm going to change the weight one to a much smaller number so that we can see it count down really really quickly okay so we've got the round starting it's gonna count down really really quickly and whoops wait for that okay we're getting really close to the end final minutes and hopefully it should just say time up and end the round there brilliant so we've just tested it and we can see that everything's working perfectly if it isn't working for you then you've probably made a mistake when you've typed out your code so make sure that you're checking the output window for any bugs obviously we do have quite a lot of books still right now because we haven't set up a lot of things but you've probably made a typo in one of your scripts so make sure that you've got the capitalisation correct and you've copied down everything correctly and you've put everything from the piggie kit in the right place as well so we'll leave it there for part three well done for getting so far and I do recommend that you go straight to the next episode episode 4 which if is released should be on your screen now the thumbnail so go ahead and click that and I'll see you in the next part in episode 4