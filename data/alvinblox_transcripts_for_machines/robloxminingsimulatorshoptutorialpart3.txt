if you new to my channel make sure to subscribe and click on the notification bow so you never miss out when I upload a brand new video so let's just go ahead and make that folder right now so we can go back into the studio back into our main script and that we're gonna do we're gonna create another script just to keep it just to keep our data saving and I'm on our remote events function scripting a separate gonna create another script and we're going to call this script saving okay and in the scripts we're just going to quickly create a player added script which looks like this and inside of this what's going to happen is we're going to create a folder in their in their player sorry in play tools and we can later on in the tutorial we all scripts it so that it can save and load their data so what we're just gonna do is we're gonna create a folder by saying a local player tools folder equals instance new folder and then we could say a game it's gonna go into game dot service storage in fact we're gonna do we're just gonna end it there then we can say player tools folder name equals player dot name and we can say player tools folder lock parent equals game got server storage dot player tools now if we go and play the game a folder for us should be created in there tools so let's go check it out there we go we've got our folder so if we try and run the open shop event hopefully there we go you can see that the script which we just did earlier we just zoom in here you can see that it has printed out all five values from the table so it's looked in the tool models it's looked in the information it's got the cost of 550 and it's printed that out it's printed out in order so we've got the title first we've got the description then we've got how much it costs and then we've got the cost type and then we've got our false value so that tells us that we haven't bought the item yet which is true because it's not in our player models so you can see we've been able to loop over the table here we've been able to loop over it and we're printing each value from that table so all the ice all the variables are together so what we're gonna do now is we're going to update our GUI elements with this data so what we can do is we can start off with the title and we can say title text because don't forget we defined a variable for our title you say title text equals data and then in square brackets one okay so this is the first element or for first object in our table which we said was going to be the the title text because we put the title at position 1 so the title will be the first index of data and we're just getting that we also need to convert it to a string so we need to say to string and put brackets around it like that so now it's a string and it can go in the text field now that we've done that we can do the exact same thing by popping and pasting it for the description we say description text equals data 2 because it's the second index and we said in the server script that the description would come second and what we want to do now is we want to we want to check to see if it's bought or not right so we need to say if data 5 remember that's the true or false value whether it's bought or not equals equals false so if it's equal to false then we know that they haven't bought it yet so we need to set the text of the Buy button to how much this item costs so we can say by dot text because remember we've got a variable called by text equals and then we have a dollar sign in in quote marks and then we can do double dot to concatenate the string with how much it costs so we can't set the value with a dollar sign because it's an integer and we can't have a a string character with an integer so we put our dollar sign as a string and then we use the two dots to concatenate it with a number and that number is going to be data so it's gonna be two string because we are combining it to a string and we can say data three because the third index in our script was the cost so we're gonna have the dollar sign whoops and then the cost so else so if it has been bought we need to see whether it's equipped or not okay so what we can do is we're going to we're gonna insert a value in the player called equipped and that value is going to be updated whenever a tool which we own gets equipped so whenever we click the equip button the equipped value is going to be updated and then we can check to see if at all which we're working on the minute is already equipped and if it is and we will say unequip but if we know it isn't equipped we can set the text to say equip so it's a bit like an on/off system to toggle the equipping of a tool so we're gonna go into our service script now and just have a look and see if we can do that so let's head into the server script called saving and we're gonna want to create this value called equipped now it's very simple we just need to say a local equipped equals instance new so we're creating a new object here we're giving it the class name of a string value because we're updating this value with the name of the tool that's currently equipped and now we're gonna give it a name so we say equipped dot name equals whoops equipped with a capital e and we're not gonna set a value because when they join the game no tools are going to be equipped so now if we head back into the local scripts here and we go back what we're going to do is we're going to check to see if the tool is equipped or not so you can say if Claire doctor equipped dot value is equal or double equals if it is equal to model dot name then if it's so if the model that we're currently working with is currently set to the equipped value we know that the player has equipped and they're using it at the moment so we can set this the by text to say equipped but if it's not the equipped value we know that it's not equipped so we can say by text equals equip so that when they click the button instead of buying it they'll be equipping the item instead and we'll work on that later on when we script the Buy button and that is all we need to do for the initiate shop event so this is what we just worked on we've defined a variable for our current box value and we've set it to zero because when the shop opens up the camera will be pointing to the the first box which is called box zero we're setting the back button to be the disabled color so that it looks gray ish and the forward color will be the enabled color which we defined up here and then we're creating a variable called model which we're setting to nil because over here we're looping through everything inside our box which are currently on we're checking to see if the object inside of the box is a model and if it is we know that we found our tool objects and we can use this model to set our model name value okay which is in the shot in the shop frame here which we'll use later on then so this for loop is basically getting the name of the tool from the specific box so it's kissing the corresponding tool to the box and then we're getting the data for that specific tool by using a remote function to get the information and send it back so they can't be exploited by a hacker because it's taking place on the server and a client can't interact with the server well then just looping through the data to print out so we can see that everything went okay and then we're setting the title text the description text and the by button text to whatever that data is so we set in the title we sitting the description and then we're seeing if the item has been bought or not and if it is then we're setting the Buy button text so that's what we've done for the initiate shop event and now what should happen is if we try this out I think the GUI might hold some data let's go and just a zoom out from the input here the output sorry let's fire the events and you can see what's happened is we've got the super power drill which is the title we've got the description you can see the back button is sort of darkened out and the forward button is looking good so it's looking like proper user interface or we can click it and you can see that the Buy button has got the price of the item as it's text so it doesn't work yet none of the buttons actually work but you can see we're making some good progress towards the end and I'm not too sure why there are two tools in the box I'll have a look and see if we can sort out hi so I think I accidentally left a copy or a super power drill in box zero from earlier when I was showing you yep there we go when I was showing how it's gonna work so if we go into item roller and box zero I delete the super power drill we should be good to go with the next part let's just test it again now you let's just go and have a behindthescenes look here now if we weren't a player if we weren't currently in the shop this is what it would look like so we've got our backdrop here and we've got our four boxes which have been generated now each box has got the tool inside of it because we set the primary part C frame of each tool and what's happening is when we fire the event I'm just going to fire it in the command bar it fades the camera position is set to that box and the GUI is just added in so it's a bit of an illusion because your camera is being set there and you see we can walk into the box so our players still in the game it's just that the backdrop and everything else will be in another part of the game world and we can cut to it so there we go okay so I think now is a good time to switch from the clientside coding to the serverside now we've done a lot to do with the camera and the GUI and we need to add some important values into our player when they join the game so that we can script the rest of this shop so what we're going to do is we're going to head back into the saving script and we're going to define a few more values to go inside the player now eventually we'll be working on datastore we'll leave that towards the end there are a few more important things we need to insert into the player so at the top of the script we're going to start off by inserting some leader stats so we can say local leader stats equals instance got new and then we're going to give a folder okay I'm gonna call this folder lead a startup name with the leader stats and it has to be spouts leader stats like this with a lowercase L everything in lowercase for the leader starts now that we've done that we can insert our currency into these leader stats and we can call it coins so local coins or cash we can call it cash if you want cash equals instance new we're gonna insert an int value we're gonna call this cash value so cash don't name equals cash and we're not gonna give it a value in fact the end let's go on and give it a value for now let's give it a value of a 5,000 cash or there when we get on to the data store we won't be giving it a value because it will be saving and loading these saved value so now that we've done that we need to create another value so we can just copy this code for the cash and paste it in again but this time we're gonna call it in shop and so in shop so a capital S for shop everything asked me lowercase so this is what it looks like and then we're just gonna call it in shop okay now I've called my variable in shop with a lowercase I but with a capital S but that I've named it with an uppercase I in an uppercase s so just be wary of that that's what we're calling it I guess I could change it to in shop it really doesn't matter but we're going to change in shop value to false because this value is going to be used to see if the player is already in the shop looking at browsing items to buy so when they join the game there are C not going to be in the shop so we can set this to false okay so I think it's everything we need to do for now all the values so we can carry on with the rest of the scripting so there's a few things left that we need to do we need to script the back and forward buttons what you're going to do now we also need to script saving we need to script the exit button and we also need to script the transactions so that when a player actually clicks the Buy button we can check to see if they have enough money to buy the item and if they don't then we won't allow them to purchase the item so what we're going to focus on now is the back button so we're going to go into the back button the image put in in the shop frame and we're going to insert a local script whoops we insert of the localization table we're going to insert a local script so when we click this button we are going to move the camera along to the previous item if there's one there so the first thing we're gonna do is declare a few variables first so we're gonna declare the GUI for the entire shop so we're gonna say local GUI equals script parent dot parent dot parent now we can use the GUI to help reference our other variables now so we can say a local frame because GUI dot shop frame you can say local buy equals for in fact we can just say GUI wait for child shop frame over here we can say local bike equals frame wait for child buy and then we can just copy this line of code or the title description and the forward button so we can do title and just update the names we that we have meet other variable description just changed description and don't forget the forward now the variables I am writing in lowercase but the actual names of the items have a capital letter so make sure to be aware of that so that's all the variables that were going to need and we're going to want to have a mouse button one click event which looks like this and any code inside of this event it's going to run whenever the button has been clicked so actually this is an image button so we can actually use the activated event instead so inside of this event we're going to want to have the current box which is which we're looking at right so this is going to be whatever the current box value is set to so we can say local so box name is going to be script doctor and parent dot parent got current box okay so this is going to be our int value so it's not really the name of the box it's the number of the box so is it it's 0 or 1 would say what if it's box 0 or box 1 so you get how it works but the box that we want to move to because when we click this button the back button you we're moving backwards so we're going the other way so the local box to move to is going to be the box name got a value minus 1 so for it box 1 the box to move 2 is going to be box 0 if we're on box 500 the box to move 2 is going to be 499 because it's 1 previous than the current box so we're gonna have to actually check to see if there was a box to go to if we flick the button because obviously we wrote a box zero we can't go to box 1 because box 0 is the starting point so we can say if game dot workspace the item roller curl on find first child and then we can save Fox dot box to move to then we know that there is a box for when we click the back button so there's a box where we can go to there's a box for us to move the camera to so what we want to do is now that we know that the button will actually work if we press it because we can go to an item previous we can make this button active okay so we can we can change the color of the image so you can say scripts dot parent dot color 3 so image color 3 equals and then we're gonna want to have our disabled and enabled colors so we can go back to our local script and just copy these variables and put them into our scripts and we're gonna want to set the image color three of our back button to the enabled button color because if there was a box to move to we know that the the image the the back button is going to be enabled so we want to set it from that darkened image to that bright image telling the user that the button is able to be clicked what we're going to want to do the same for the forward button because of course if you're going back one you're also gonna be able to go forward to the one that you were on before so once a forward lock image color 3 equals enabled button color so they're both going to be enabled and they're both going to be able to be clicked well then gonna want to interpolate the camera now if you are listening earlier remember that interpolating the camera is smoothly moving it between two points and we moved it between the same points so that there wasn't actual any animation it just jumped to that point however this time we have two different points the point that we're at now and the point of the next box which we're going to so we want to interpolate the camera to the next box so we can say game drop workspace up current camera rah cut on interpolate and then in brackets we're giving the starter position which is going to be the cam part of the box we're currently on so we can say game dot workspace dot item or roller and in square brackets we're gonna say box dot dot box to move to dot camp art dot C frame so this is this is this is where we're going to okay this is the box where the camera is going to be looking at okay so this is the next box because we've got box and then we're concatenating it with the number which is the box to move to so if if the box name is one and box to move to it's going to be zero so it concatenates the zero with the box to form box zero which is the name of the box and the model which has the camp art which we're going to be interpolating to so that's why we're going to we also want to set this we want to set the other camera position which is going to be the item roller box box to move to which is the same thing if they gamed at once where's the item roller and then we say box dot dot box to move to dot cam part so we need to close the square brackets doctor cam part dot C frame and then we're going to give a time of 0.5 actually no interplay is you you you don't have to specify where the camera is currently you have to specify where you're going to first and then you supply the focus of the camera so what it's focusing on so the cameras going to be moving to the new part but we're gonna stay focused on that part as well so that the camera doesn't look anything different it just keeps looking in the orientation of that part so we've kind of got a position to go to and an orientation it's not two of the same parts we're just using the same see frame one for the position and one for the rotation so there we go we've got our interpolate done and I'm just going to zoom out so you can read that you might want to pause the video so that you can copy that down so now let's carry on let's continue with the rest of the act button now that we have tweened the camera interpolated the camera to the previous item we want to update the Box name so we'd say box name value equals box name value one differ on box one will now be on box zero what we want to do is we want to do the exact same thing that we did in the local scripts and that was getting the information in the issue in the initiate shop we're getting the information about the specific object so we can just copy all of this code which we did earlier copy it with ctrl C and then we're going to want to in fact we want to copy all of it we just want to copy the parts leading up to here okay well we'll use the title text and the description text so we're going to copy this code and I'm going to go back into the back button and we're going to paste it into this if statement and let's just make sure it's all indented so we're gonna select the data and it's all reset the code and then tick using tap and what we're gonna want to do is we're gonna have to change a few things here we haven't got item roller defined as a variable so we can say a local item roller equals game dot workspace item roller we're also gonna want to make sure that the frame is changed to the shop frame has changed to frame and we can also just define a replicated storage up here so local replicated storage equals game doctor replicator a game gets service replicated storage now i've spelt replicated storage with a lowercase R and uppercase s okay so now that we've done that we just want to handle the part where we display the price of the item because we're not going to handle the equipping here will we handle that with the initiate shop event so we can say if beta 5 equals equals false then and we're going to say bye dot text equals now dollar sign dot dot to string data 3 so if the is so data 5 is whether it's been bought or not so if it hasn't been bought then we want to display the price otherwise we will display the equip flush and equip messages because they will already be be there now what we now want to do we can now exit out of this this if statement here and we want to want to check to see if there is a previous box for the next one so if we if we start off at box to add so if we start off at box one and we click on the back button and we'll be at box zero but we want to check to see whether we can go back another one to see whether we can we can change the color of the whether the darkness of the button or the brightness well that user interface to show whether it's disabled or enabled so what we can do outside of the if statement we can see if game dot workspace item roller come on find a first child and then in brackets we can say box box to move to minus one and because remember box to move to is already the current box about box name value minus one but what what we're doing is we want to go another one you want to go another one from what it's currently at so we're kind of going to and back to but because it's already been it's been negative is had one taken off it we're just taking another one off it to check so we can say then and then we can say script lock parent dot image color three equals and then we can say the enabled button color else we can do the exact same thing image / three equals is say board button color sure if there is an item before the one that we're currently at we can make the image clip set to the enabled color else we can make it the disabled color so that is everything that we need to do or the back button what we're gonna do now is we're gonna take this local script copy it and paste it into the forward button but there's a few changes which we need to make all we're going to do is we're going to change the negative signs to a positive sign because we're going forward so make sure that you change all of those even at the bottom and then what we're going to do is we're going to at the bottom of or near to the bottom of the scripts just after the ifstatement checking to see if data 5 is equal to false we're going to say else and then we're gonna have another end here and inside of this else statement we're going to do script doctoring image color 3 equals and then we can just do our disabled button color and we're gonna set back wouldn't change forward up here where it says forward we're going to copy up and just do a paste I will miss it back sorry we're going to change forward to back I'm gonna change order back here and then we can change back so wherever it says forward we can change to back here so let's have a look oh so we can do a find find all forward just to see if there's any forward in here nope just wherever there was a forward change that to back and then what we can do down here is save back got image color three equals and we can set that to enabled so if there's no if there's nothing more if there's no box left we can't go forward anymore we're gonna make the back button enabled and we're just changing board to back because we're on the forward button not the back button anymore we're inverting it all that's why we did the plus until the I'm setting the back to the four just to save some time so that we don't have to write this all out again it's pretty much the same thing just with a few changes so if we go and have a look now and play the game it should work although you might have a couple of issues but hopefully not and so let's go ahead and run the event trigger it in a replica storage open shop you can see that the back button is disabled because we're on box zero and if we click the forward button and see that the camera tweens but we have some issues so it interpolates but we have a little a few issues with the with the camera and where it's being positioned so we're going to sort those out now okay so the reason for those black issues was because we I said here the first parameter in this interpolate function is the position okay so the position of where you want the camera to be the second one is the orientation of the camera and we've accidentally pointed it to the camper instead of the hitbox because we want it to be looking at the hitbox which is a m which is the big box in the center of of the box here it's a big part in the center of the box so we want it to be looking at this and not looking at the the camper which caused a few issues with the the orientation a/c frame of the cam part was looking into something which was was black was hence why we saw the camera went to that black screen so if you go into the forward button and we change cam part to hitbox over here but keep cam parts for the position what are we going to the back button do the same thing and if you run the game hopefully it should smoothly interpolate between the two boxes so we've got our first one we click on the forward button and there we go we get to see some smooth animation between the different products and you see when we get to the end of the list the forward button turns to darkness and you can see the back button does the same when we get to the front and as we move they change really well so that's another part of the video done we've got some really good progress now we've got the we've got the currency system in we've got the animation for the camera we've got the boxes done and there's only a few more things to go until we have our mining simulator shop complete you