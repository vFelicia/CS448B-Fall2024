okay everyone it's the part you've all been waiting for how to add a shop GUI to your piggy game on roblox so you'll be able to buy skins traps you'll be able to save them equip certain ones and you get them showing up in the GUI as well and different traps we'll be able to do different things be able to keep you trapped for longer some can be invisible you can create your own traps your own skins load them into the shop sell things for piggy tokens save it all it is gonna be brilliant so you don't want to miss this tutorial now I just want to say before we begin if you are going to make your own piggy game try and be original okay don't go using the piggy name because there's already a pig again buy mini tun the original try and make it into something else you know if you're using my maps try and make them different don't don't just use them ups I've made try and make your own you know make it original and make it fun because if your game isn't original nobody's going to want to play it and also this is going to be the last video in my piggy series all things have to come to an end and you know no matter how many more videos I do there's always going to be people who want me to make videos on a certain feature you know at the end of the day you're gonna have to start learning how to script yourself and although you shouldn't you know just stop watching because this is the end of the series you're gonna learn how to make an awesome shop and how to use data stores and things like that in this tutorial you know I can't keep on making this series so this is gonna be the final one so you know I'm sorry about that but I have got a full 23 parts and counting beginner series which you are going to want to check out and I've also just started on an advanced series as well so there's a lot for you to dig into if you want to learn how to code yourself so you can code features yourself and start making your own roblox games because this is a great way to get yourself into making roblox games but then also if you want to develop on that and advance the scripting knowledge so that you can make your own games from scratch without my support then you can watch those series so let's just get straight into the actual shop GUI development its so to speed up the tutorial I've created the shop GUI we're gonna have to script it though so that's what you've got to watch the video for but if you go to the description of a link to the model go and take that model and then when you're inside your pick a game go to the toolbox click on the four squares icon go to my models and then click on the admin blocks piggy shop now this will insert a frame and a text button into probably your workspace so take these two elements and drag them into the main GUI ok main GUI and you will see that it appears what we need to do is we need to start scripting this shop and so firstly we're going to begin by scripting the piggy tokens or the clicker half the cash or the currency in the game which will be used to purchase the items so in the event handling script just at the top here just before the in menu part inside the player added event we're going to create our piggy tokens so you can call them whatever you want and I recommend that you call them something different to piggy token piggy tokens and just like you calling your game something different because we don't want every game to be a clone of piggy we want to be original so name your variable I've just said Paquito can see what's instance not new in value in fact we can say yeah we can say Piggy's own name and then said it as tokens as a string and then set the value of it to a thousand just so we have some tokens to test our shop with and we under parent it to the player so it's created that currency int value which will hold the amount of currency that we have next we're going to want to insert a folder into the player and this is going to be where we're going to keep their traps and their skins skins at their port we can put a value in there with with the name of the skin so we have a collection or like an inventory of a player skins so we know what skins and traps they have so trap inventory equals instance dot new folder trap inventory name equals trap inventory I've had a capital T and after I before trap and inventory so make sure that you got the capitalization correct and trap inventory parent it was player now because we need to do the same thing for the skins we can copy and paste that code and we're gonna change it so that this time it creates a skin inventory so skinning inventory because interest on new folder skin inventory don't name he calls skin inventory again capital s and capital I and then skin inventory dot parent equals player so we've inserted the two folders which are going to hold the traps and the skins that we've bought we also need to track the skin or the trap which is currently equipped so we're gonna have to have a value in the player which will hold the name of the currently equipped trap or skin so let's create the first one local equipped trap equals instance not new string value string value will hold and text and because text is a string a datatype that's why it's a string value so a string value will hold text in this case the name of the trap which is equipped equipped trap dot name equals a quit trap again a couple to ian capital t and equipped trap door parents equals plot equals player and we can do the same thing we did before just copy it and paste it but change the equipped trap to equipped skin so we now have five new things which we've inserted into the player the tokens the trap inventory the skin inventory and the equipped trap and equipped skin so if you play the game and you go into players and you find your player you will see that we now have the skin inventory trap inventory equipped skin equipped trap and tokens now they don't have to be called exactly equipped skin a quick trap for a reason that's just the name that i've decided to call this value and it's a good idea that you use the same names beakers in other scripts when we're referencing these values you might get confused if using if you've named your something different so they are the main things we need to have because now we have a way to track the amount of tokens or coins that a player has so we can use that in the shop when they buy something for now I'm going to set the shop frame its visibility I'm going to set that to invisible so that we can just work with our map because we need to know and create some more characters and a lot of people have been asking how do you create more characters it's very simple so what I do is well there's two ways you can do it really you could make a clone of the piggy and if we take the piggy here and bring it into the workspace what you can do is open it up and you can see we've got these parts for the head and now if you wanted to change the head well you could delete everything inside the head like that okay and the piggies head is currently invisible and it's and it's just a square so let's say I wanted to insert a hat onto the piggy well what I could do is I've got a plugin called insert assets from the toolbox and if you go to toolbox plugins you should be able to find it if not you can search for it I'll leave a link to it description as well so I'll leave a link to it in the description if you take the plugin it will then be in my plugins and you'll be able to insert it okay so inserts asset you then put the asset ID of the Hat so you go to the hats page on roblox and in the web bar there's going to be the the string of numbers that's the ID of the hats you put the Hat ID in there click confirm it's going to insert it okay into the workspace so if I just make the head in this book for now and I take the apostille shadi and I'm going to use the rotate and scale tools to make it bigger I might actually need to use go into the handle and change the scale of the mesh there we go I'm going to turn around like that okay you then need to put it inside of the piggy like that and let's see if it works whoops we forgot to put the piggy on here so he doesn't fall off okay it seems to be working okay let's just rotate to make sure it doesn't fall off nope so now you can see because it's an accessory it's it's stuck itself kind of welded itself to the piggy now if I wanted to remove the dress I could get rid of the torso mesh and then the right arm right leg all the body parts I'm going to make sure transparency is set to zero so we can see them so you can see now I'm starting to edit the piggy so play around with it my piggy here isn't the best cuz I haven't taken much time to improve it but you can see where this is going if you want to create more characters so I'm going to name this shaggy man and I'm gonna put him so we're gonna move our skins from server storage we're gonna create two folders one folder it's going to be called skins and the other one is gonna be called traps okay it has to be in replicated storage then I'm gonna put my shaggy man into the folder as well as the normal piggy and I'm going to take my bear trap and put that into replicate storage traps as well now once I've done that we're going to need to start working on the shop GUI but before we do that we need to actually have some information in our skins and traps because we need to have a cost for each skin so inside the piggy skin I'm going to insert an int value I'm going to call this value cost and you can change the value to however much however many tokens you want the skin to cost so if I want it to cost 52 tokens or change it to 52 just make sure you copy and paste the cost into every skin and every trap and then you can individually edit the cost of each skin okay so I've now got a cost value in each skin and each trap okay let me show you how this shop air frame works so inside of it we've got two frames which cover the whole of the GUI one's called skins and one's called traps now inside each frame there's a folder with a UI grid layout and we're going to have some we're gonna have a basically like a template frame for the skins and they're going to go in here and the grid layout is going to make it look like a grid so you've got like one here and then you've got another one next to it and a little next to it then you go into a new line so when you click on the skins button it will make the skins frame visible and the traps frame will go invisible and when you click on the traps button the traps frame will go visible and the skins frame will go invisible so what we will do is we will write a script which will get all of the skins all of the traps out of replicate the storage and we will create these template frames for them now in your shop you should actually see the local script called client shop and the template should be inside of that because I've put it inside of there but the script currently has nothing in it but if we take this template and we put it inside skins in the folder you can see what happens it becomes a luck it's one of your shot frames is one of your items and if you were to duplicate them you can see the grid layout is putting them in order so I'm gonna have one of them and inside of here we've got a viewport frame so we can actually see the skin a button that you can click a cost text label our title as well for the name of the item so we're gonna just put this template back into the local script because we don't want to have it visible when there's nothing currently in our shop we need to clone it out for each item there is so firstly let's go and make some variables variables are quick references to things that we will be using in our script so firstly you want a variable for the shot which is going to be script dot parent because it's the parent of the local script the shop frame then we're going to want to get the skins frame so skins equals shop wait for child skins we have to say wait for child because these scripts may be running before that frame has loaded into the game and we don't want any errors then we're going to do another one for the traps frame so traps equals a shop wait for child traps and then we're gonna create two variables for the two buttons skins button and the traps button so local skins BTN for button equals shop and you can call your variables whatever you want again but you might get confused when I start using my variables and you're using yours you might write one of my variables when you've not defined it yourself you defined as something different so that's why I just recommend that you write your variable names the same as mine just so that we're on the same page so skins button is shop wait for child skins button and the same thing again local traps and button equal shop wait for child wraps button we're then going to also need a variable for template frame which we just saw and that's inside of the script so local item template equals script weight child not script or parent just script because it's inside of the script we can say scripts wait for child template because the script is the current local scripts and the template is inside of it right next we're going to code the skins button and the trap button so that when we click them we can make either the skins frame or the traps frame visible or invisible so skins button dot mouse button one down sorry mouse button one click when you click the left mouse button this event will wear firstly going to hide the traps menu so traps dot visible equals false and then we're going to want to show the skins menu so we're gonna say skins not visible equals true and if you wondering these are comments with the two hyphens they're ignored by the script but they're just there so that we can understand what the code is doing like a little note to ourselves we can then just copy this events and paste it but we need to change a couple of things because this is going to be for when you click the traps button so we'll change skins button to traps button just down here and then when we do click the traps button we want the we want to firstly hide the skins menu so its skins dot visible is false but we want to show the traps menu so traps don't visible equals true so now we won't be able to see it but because there's nothing in the frames yeah but when we click one of the buttons it's going to appear and the other one would disappear next we need to get all of our items so we can show them in our shop and because we put them in the replicated storage that means that they're visible to the clients which is our local scripts and our player but it's also visible on the server so we can or because the server can edit them we can't change them but we can see them so we can see all of the items and tramps so we can easily get them in our local script so local skins data equals game not replicated storage got skins get children this is going to return at table of all the skins and we'll do the same thing for the traps data local traps data equals game got a replicated storage got traps get children and again this will return a table of all of the traps in the game and if you were to loop over these with a for loop and you print out the name of each item it would print out the name of every skin in the game so this is just a simple way of getting all of the skins and all of the traps so that we can create a item template we can wear we can create a frame for each item for each skin and for each trap and we can put it inside either the skins frame or the traps frame now we're going to create a function which will clone the item template and fill in the information for one of our skins or one of our traps and then we can call it multiple times for each again so function create frame and this function make sure it adds the end on we're gonna have some arguments parameters actually so we're gonna need some data for each skin or trap so that you can create the frame we're gonna need its name we're gonna need its cost we're gonna need the actual object itself if we want to show it in a viewport frame and we also need we also need its parent where it's going to be parented to so the whether it's the skins frame or the traps frame so we will pass this data to the function when we call it but what we'll do is we'll just create a variable for the frame that's going to be cloned so frame equals item template kernel clone frame name equals gonna be the name of the skin or the trap frame dot title text and if you look in the template we've got a title and text label and that is because it's gonna show the title of the the name of the skin at the top so that will just be name again but frame dot cost of text is going to be the cost of the item which we will pass to the function now then we're going to set up well no we won't set up yet but we will just parent the frame to either these skins or traps frame so we will pass that to the function so for now we can just say parent and then we're going to return the frame to wherever we called the function from so if we were to call the function like this the frame would then be held in the new frame value so the new frame if we were to later call it or use that references sorry it would it wouldn't be calling the function it would be the frame which we made so if I wanted to change the visibility of that frame I could then say new frame doctors have all equals true and it would change for that frame because we've returned it so now that we've created the function to create that frame we can loop through all of the skins in the game and create the frame for each skin or trap now what I'm gonna do is on create a function called add skins and we'll also have another function called add traps but in each function we're going to loop through the skins data or the traps data and we're going to create the frame for obviously but then we're going to set up an event when you click that the frames button to see whether you've already bought it or whether you need to equip it so if you need to buy the item whether you need to equip the item so when in the add skins function we're going to have some we're gonna have a parameter called data and that will be the skins data which we will pass to it but then we will say we'll loop through the data so for I V in pairs data do and we're doing we're looping through everything in that folder in the replicated storage so for every skin inside of here we to create a frame for it so local frame equals create frame we're going to pass the name of the model of the skin the value of the cost the cost values value inside that skin and the object itself and also skins folder because the third argument was the object itself which we're passing but the fourth object is going to be where it's going to be parented to so because it's a skin it's going to go into these skins frame so skins here but it's gonna go into the folder because that's where the UI grid layer houses so it's going to go in there and that's how it's going to be added into the GUI and that's how it's going to appear in that grid so if you were to then call the add skins function and pass the skins data to it down here let's just do a wait five seconds so we can see it happening and we play the game right five seconds you can see they get added in and you can see that the cost is there the title is there and each one has its own cost and title we haven't done the traps yet we haven't coded that function and we haven't done the clicking yet off the button to make you buy the item or equip the item but good start so far in fact for now I'm going to remove the add traps function because we're we're just gonna be working with the skins for now so the next thing we need to do is we need to set up the events for when you click the button in the frame so frame dot button dot mouse button one flick curl on connect function so when the button gets clicked any code inside of here is going to run and we need to call a remote event which is going to by the skin for us it's going to complete the transaction I'm gonna check if we have enough money to buy it on the server so that it's secure and can't be exploited so we're gonna go to the replicator storage I'm going to insert a remote events I'm gonna call this remote events in fact no we're not gonna do remote event we're gonna do a remote function remote function because a remote function will allow us to send data back to the client in this case we need to send back whether the purchase was successful and whether the item was equipped because they really own it whether it was bought because they don't own it yet so I'm gonna call this remote function by skin okay and we're going to say game inside of this mouse button one click events we're gonna say game dot replicated storage sorry local results Vic is going to return something so something will return return to the result variable equals game replicated storage dot by skin color on invoke server and then we need to pass the name of the item we're going to buy to this remote function so we can look it up on the server so it's going to just be feed name because if we're creating these events for every single item that we're looping through is going to pass the name of that specific item when it's clicked ok so V dot name is going to be the name of the current item that they've clicked so what we can then do is start coding the transaction stuff on the server right so I've actually decided that I am going to rename the by skin to by item because I thought we can consolidate the buying off the traps and skins into one remote function because then that way we would just it we've got there having to because he's just more efficient and it will require less code so I'm gonna call my remote function by item and now let's go in and do the server coding right so in the event handling script I'm going to hold on my scrolling seems to have broken in these scripts that's open it back up there we go so at the bottom here I'm going to say game dot replicate the storage dot by item because that's our remote function dots on server invoke equals function okay and no and bracket needed on the end of that and so inside of the brackets the parentheses we need some parameters and the first one is automatically sent that's the player that invoked the remote function then we're going to have the item name and also we need to have the item type so whether it's a a skin or a trap now what we can do is and by the way when we do call this and invoke server we will pass the player which gets passed first automatically so we don't write it so this will be the second argument the name of the item and then when we call it we will either say skin or trap and that will that way we can check whether the third argument is skin or trap and if it is we know that we are going to be buying or equipping a skin or a trap so in here firstly we need to have a variable called local item then what we'll do is we'll check to see if the item type is a skin or a trap so if item type equals equals skin then we know it's a skin else else if item type equals trap then we know it's a trap and what we'll do inside of this if statement is if it's a skin will look in the skins fold it in replicates storage for the item so game two replicated storage lot of skins weight sorry not wait for child find first child in case it isn't there it won't error if we use find first child and we'll just say item name like this so when we if we find the item will set it we'll set item to be equal to the that object and I haven't put the local here because I've defined it outside the if statement I've done that because if I was to use the local and define it inside the if statement it would be limited to this if statement so I wouldn't be able to look at its value or reference it from outside the if statement which is why I've declared it within the events but not within the if statement so it can be accessed inside the if statement and also outside of it if it's a trap we're going to do the exact same thing we're just going to look it up but instead of it being game that replicates storage dot skins make sure that it is game dot replicated storage dot traps okay so make sure skins traps is different on on each line so what this is doing is checking if we are buying a skin or a trap based on the item type which we provided to the remote function when we invoked it from the clients so we are going to say skin or trap and then it will find the item for us okay then we need to check to see if the item is already equipped sorry not if it's equipped if you already own it so that we can equip it because you already own it and you fired this for most events you're also going to want to equip it but if you don't own it yet you're going to want to buy it so we need to check to see if the item is either in your skin inventory or it's in your trap inventory now we have to do a if statement inside each of the ifs here so one here and one here to check if it's in the skin inventory or if it's in the trap inventory so if player dot skin inventory curl on find first child item name so if it's in your inventory because when you buy it will put it into your inventory very soon then what we'll do is we'll create another variable just like we did with item and we'll call it in inventory so we'll just declare it there first and then if it is in your inventory we'll say in inventory it's true and we'll just copy this line and put it over here as well in the trap section but we'll change the skin inventory to be trap inventory so if the trap name so if we're gonna put a value into your trap inventory or your skin inventory a value object like a string value which is set to the name of the trap or the skin and so we can check so we use it as a way to see what skins or traps you currently own so we can check that folder to see if you own it and if you do we'll set this variable to be true so that later on we can check if if if in inventory is true and if it is we have you've already bought it so you can later equip it instead of buying it again so now that we've done that what we'll do is outside of the big if statement there we're gonna check to see if the item is an actual real item because we could to call it or an exploiter could try and call it with a fake item name so if the item is there and it's not it's a real item it's definitely there then we need to see if you have enough money to purchase it so we'll say if item find first child cost then and then inside of there because it has to have a cost value don't forget because we put a cost value inside each skin and each trap called cost and we should set its value to its price so that's how we're going to set the price of objects so if it has got a cost value then we're able to check if we have enough money to buy it now we're also just going to quickly check if it is not in your inventory because we only want the players to be able to buy it if it's not already in their inventory if they already do have it then they've already bought it so what's the point in buying it again so because we create that in inventory variable we now know whether the item is is already bought by somebody because we've checked the Zips if it's in their inventory so if the variable in inventory is true we know they already own the item so a way to check if the item is not true so if it's false is by saying if not in inventory so if not in inventory so not means so so not inventory will mean if in inventory is equal to false so it's the same as saying if in inventory is equal to false so we'll just say if not in inventory because it makes more sense if it's not a new inventory then we'll check to see if we can buy it with enough points but else if it is new inventory we know you already own it so we want to equip it we'll get onto that later but what we want to do is we want to now check if it is not in the inventory we want to check if you have not if you have enough money to buy it so we can say if item cost because that cost value inside the item which we added value is less than or equal to player tokens value if you named your token something different maybe you named it cash you'd say cash but I've called mine tokens so if the items cost is less than or equal to the amount of money we currently have so if the item cost 50 and we are 60 then this would be true because 50 is less than or equal to 60 so if you have enough money then we're going to print you can buy this and then we need to subtract the money from your balance so we save player dock tokens value equals player tokens value minus item cost star value we're taking the cost of the item away from your current tokens balance and again change the tokens to the name of your currency if you've named it something different to mine so you change the tokens there's something like cash or whatever or whatever you've called it but I'm going to keep mine tokens because that's what I've called mine now that we've taken the money away I said earlier we're going to put a value into the trap inventory or the skin inventory that's what we're gonna do now so local string value going to create a variable for this string value we create the value by saying instance dot new creating a new objects we're going to insert a string value that's the class name string value dot name we're going to set the name with a string value to be the same name as the thing we've just bought so we can say item dot name then well because we know whether it's a skin or a trap we can do another if statement check to see if item type equals skin so if it's a skin then we'll say string value dot parents equal player dot skin inventory but else if the item type is a trap trap we're gonna put the string value screen with string value at parent into player dot trap inventory so depending on the item type it's either going to go into the skin inventory or the trap inventory so if you try to buy it again we'll check to see if you have this item already in your inventory and if you do then it won't let you buy it again because this if statement here if not in inventory will only that you buy the item if it's not already in your in either your skin or trap inventory so adding that value just helps it just basically only allows the player to buy an item once so they don't keep losing money once we've done that we're going to return back to the client because it's a remote function not a remote event we're using a remote function so we can send a message back to the client back to our client shop local script to say whether it was a success and we bought the item or whether we equip the item instead because if you already own the item we're going to want to equip it not buy again so he can tell the local script what happened did the player buy the item successfully did the purchase fail because we didn't have enough money or the item wasn't a proper item or did they just equip the item so he can return a message a string he can turn any data but in this example in this case we're going to return a string message and then we can check that message on the client and if it said equipped we could change the GUI to say it got equipped but if it was bought we could change the GUI to say it's now owned you go I'm saying so we can return ok you can return what if you like I'm gonna return the message board and I recommend that you do the same and you return the same values as me because if you check for something else and you check you don't do what I've done of course you can be but some people will have will make their own values and then they'll make mistakes because they're trying to check what I'm checking for even though they've changed their values from what I've said so I'm going to return bought and I recommend you do as well and that's just we can check to see if it was bought then we know that it was a success um elves in this if statement here else if you don't have enough money we can return failed because the purchase 'obviously didn't go through because you didn't have enough money and over here in the your the own it part for the else statement for if not in inventory we know that you already have this item in your inventory so we can print out we can print you already own this item ok and what we can do is because if you've clicked the button and you already own the item you're going to want to equip it if you already own it and you've clicked the button you want to equip the item so firstly we need to check again whether the item type is a skin or a trap so if item type equals equals skin then we can equip the item by setting the players equipped skin value to the item name because it's a string value and it will take text only we can set the value of that string value which is the equipped skin value to the name of the item which we're going to equip else if item type is a trap then we're gonna say player dot equipped trap dot value equals item name so what we're doing is we're setting the player's equipped value so that we can know which item they currently have equipped and then we can just return back to the client in a string the word equipped and it doesn't have to be the words bought failed or equipped it's not like you only have the choice you could return or if you want so you could return transaction success or one two three four five soon it loads in numbers but the so that we know what we're doing and we can just return simple messages which tell us whether it was a success or not so we know that when we invoke this remote function it's going to return back to the client this result a variable is either going to be equal to the word the string bought failed or equipped okay and also if the item is not there we'll also just failed and that there was no skin no skin / trap of such name found in case we accident in case we call the remote function with a item that isn't there for some reason so what happened is we will invoke the remote function and if everything goes well it will return the board or if it doesn't go well and something fails weed after we don't have enough money it will return failed and if we equip the item it will return equipped and that one of those messages will be will be the result so the result variable will be one of those messages because whatever gets returned is set to this variable that calls it so if we were to print result and we test it out and we wait for the shot to be populated because it takes five seconds there we go let's open up the output and if we click on shaggy man for example by the way let's have a look at our cash our tokens are sorry watch the value when I click the Buy button so it says you can buy this and then it says bought and it's taken the money away we don't see anything in the shop though that's because we haven't coded it yet to show the result but the good thing is that it's printed out you can buy this so it knows it's not ready an iron entry we haven't already bought it and then it takes the money away and then it returns bought and then because we returned it and we print out the result the result is now equal to bought whereas it could it could have been failed or equipped so we can use those messages that we've returned to tell us what happened and what we know what happened on the client we can show something on the GUI so we could show that a tick you know a tick on the on the template button and we could change the text on the the cost to say that we now own the item or we now have the item equipped so to do that we can say if results equals equals bought then we know that the purchase was a success else if results is equal to acquit then you equip the item okay and we're not going to bother with and purchase power because if the purchase failure we don't need to show anything on the screen so if they've bought the item we are going to set the frame there's a button inside the frame if you have a look here shop client shop if I drag this template into the skins I'm into the folder here this is the button the person has an image and currently that image is a shopping cart or if we wanted to make it a green tick though I've uploaded a green tick I've taken a green tick from the roadblocks library and I'm going to create these two variables that's off of my client shop script and these are the two assets IDs for the shopping cart and the green tick so I'm going to put these in the description for you so you can copy them and put them into your local scripts just at the top here in the client shop script now because these are roblox assess IDs we can update the image over the button with them so when the purchase is bought and it was at sorry when the result is bought and when it was a success and you've now bought the item we can set the image property of a button to the green tick and then we can set the text of the kosst so this here this cost text we can change it to say owned because you now own the skin or the trap because you've bought it it was a success now if you click the button again and it's equip the item for us we want to again set the image to a green tick in case it wasn't already a green tick and set the text of the kosst text label to equipt like this so if you click it again it will change from a from saying owned to equipped okay so now let's check it again I'm gonna take the templates make sure we do this take the template out of skins out folder make sure it's always in the client shop local Swift house it's not going to work you might have forgotten and it and there might be might not be working for you and that might be why I've also got a video on my channel about how to fix bugs or errors if you encounter bugs in your piggy don't be disheartened by them everybody's gonna get bugs at some point on some project so check out that video on my channel when you finish this one if you have a book and don't give up so if I click the Buy button now on shaggy man you can see it's changed to a green tick and it now says that I own it I can do the same thing on the piggy and I've I own that one as well now let's go into the our player in game two players and we currently have nothing equipped now if I click on Shaggy man again it says equipped and now my equipped skin value is the shaggy man if I was to equip the piggy now the piggy says equipped but you can see shaggy man still says it's equipped so we need to clear the other GU eyes we need to get rid of this equipped text when we equip a new item so in order to do that in the equipt section here what we can do is we can change the other frames in the in these skins and so in the skins or traps folder so what we'll do is we will say for I know we won't do that because we will do a for loop going we will say for underscore comma objects in pairs and we will loop through skins dot folder color and get children do if object is a frame and the object has a cost text inside of it so if it's a template and has a cost to text label inside of it then we know it's not the UI grid layout we don't want to delete that or tour chain try and change a property that it doesn't have so if it does have a cost value inside of it then we can check oh sorry object not obj and if it does have a cross folio inside of it then we can see we want to check to see if it's in your inventory in your skin symmetry so if game dot player's dot local player got skin inventory cannot find first child object dot name because we could have a skin in there which we don't own but we're still trying to update it anyway so we don't want to update these skins that we don't own so if if we own that skin then we can we know that we own it so we want to change it from being equipped back to being owned so we could say objects dot cost text equals owned and that way it will only update the ones that we haven't bought so instead of setting them all back to be owned because you know you can't really tell which ones are currently owned where you could but it would take a bit more code a good way to just update the ones that we know already owned or just by checking if we own the name of each objects in our skin inventory now because this is for adding the skins not the traps and we'll have a separate function that just the trust which is kind of the same thing so what this will do is again yep sets the other frame templates in the skins folder if they are equipped because we've just equipped the new item we're basically setting the them to look like that unequipped because they are because we've got a new equipped value and then that's all we need to do for the equipping so if we go and try it out again we'll have to wait five seconds of course for the items to be loaded in because that's the weight that we've put on our local script for now we will fix that later on because we will only load the items once your data has been loaded from the data store so we need to wait for the data store to be finished so we can load those items and we haven't coded the data store yet so if we click on an item we own it we now we can again oh it doesn't seem to be what it doesn't seem to be working coming up as equipped some reason okay let's check that out so it says you already own this item if not in inventory so it's setting the equipped skin valuereturning equipped oh I know what's happened because we've set it to equipped before this if before this for loop it's immediately setting the new equipped frame to say equips but then it's instantly changing its back because we're looping through them all so we need to loop through them all first and then change the this frame the specific frame which we now have equipped to say it quits it's just going to instantly be reverted back so let's try that once again but if debugging for you there so even I make mistakes so if you make a mistake don't you know don't feel down or anything so we click it we now own it we click it again and it's now equipped ok and we can tell because it's our equipped skin but if we now buy another skin and we click equipped you can see it's switched because now the pig is equipped it says owned on the shaggy mane and you can do it again I can try and click it again but it won't take your money because it knows that you already own it so that's great so we now are able to equip our skin so soon we'll be able to in another script in a server script when we choose the piggy we'll be able to check their equipped skin value and look it up in the skins folder and load in their piggy so to make them look like they're the piggy or the character that they've chosen now let's do the same thing with the traps so I'm going to copy this function and I'm going to paste it underneath and I'm gonna change it from add skins to add traps and we're gonna change nice is very important watch what I'm doing so I firstly change the name of the function to our traps I'm then changing in the by item invoke I'm changing the second argument from skin to trap that's really important and then down here where we've got the forloop to clear the other items from the to use to change them from equipped to owned in the skins folder we're gonna change the skins to be traps and apart from that there is everything so now if we call our traps with a traps data and play the game again it should be working for the traps so click on play and we've got the skins ah but it is adding the trap to the skins for some reason so let's check this out let's see what we can weave off obviously missed something so AB traps and is here we are on the local frame equals create frame in our traps we're parenting it to the traps folder we need to parent it to the stories we've parented it to the skins folder but we should actually be powering it parenting it to the traps folder so change the name of the front trim to our traps change the skins or folder to traps the folder only in the add traps function leave the add skins function as it is change the second argument in the replicated storage drop by item in work server to be a trap change the for loop to be looping through the traps folder not the skins folder and also one last thing remember down here where you're checking game dot players that local player change that from skin inventory to trap inventory because we're now checking the players trap inventory so quite a few things to change there but this is going to add the traps to the traps folder instead so wherever you've got skins change it to traps only in the up traps function though so you should have two functions one for adding the skins one for adding the traps okay and there you go so let's try it once more and wait for them added so there should be only two skins here yep and if we click on traps you can see we've got our bear trap so let's go into our player Alvin blocks and equip the bear trap there we go and let's equip a skin as well let's equip the shaggy man so we now have an equipped skin the shaggy man and the bear trap the equipped trap now you can see if we try and buy them again multiple times it won't take on money but it will change the equipt values so very very cool and that seems to be working perfectly now right next I'm going to show you how you can load the traps and the characters into the game when you get chosen so let's start by loading in your trap okay so if you're the piggy and you get your traps etc how do we give you your own chosen trap because there could be a yellow traffic blue trap how do you get given that trap instead of the normal bear trap so let me show you so we know that when you place a trap we are going to be in the event handling script so in this script here in the place trap events what we're doing is we're going into the server storage getting the bear trap out and cloning it but the bear trap no longer lives in the server storage because we've now put it into the replicator storage so what we need to do is we need to firstly get the player's equip the trap value if they have one so let's just get rid of this for now this local trap but keep the other two lines for the C frame and the parent but we're going to say if player got equipped trap got value is not equal so one of this squiggly lines so shift and hashtag and then equals and then an empty string because when it when it's a string value to check if it's empty you just put two speech marks like that and because it's an empty string so if there is no so so so if the equipped trap is not equal to nothing so if it's not blank and there is actually something that is equipped and there is an equip trap then we're going to see if there is a trap in replicated storage dot traps with the same name so if game got replicate the storage got trap's come on find first child and inside of here we're going to say player got equipped trap dot value so if there is a trap in replicated storage with that name then we're going to let's have this variable good local trap we'll define it outside the if statement so we can reference it later on down here outside of that a statement so if there is a trap in replicated storage with that name we're gonna set the trap variable to be that trap so game got replicated storage doc traps and then in square brackets could be no longer need find first child because we know it's there for sure play out dot equipped trap dot value then outside of the square brackets curl on clone so it's going to make a clone of the trap with our name that we need and that name is going to be the value of your equipped trap so we've now managed to get the trap out of replicated storage by cloning it and we found it by giving the name and that name is actually the the value of your equipped trap which is why we're setting the value of equipped trap to the name of the GUI that you clicked sorry the frame that you clicked and that way because we've set it with we've stored it in a value in the player we can access it from different scripts which is why the equipped trap and equipped skin things are so important and that's how we can get the trap and the skin that you the player selected from other scripts by storing it like this so now the trap that they will have selected will be see framed and it will be placed underneath their character on the floor and it will also be parented to the map just like any other trap would be so let's test that out and see if it works in fact no that wouldn't work yet because we've also taken the piggy out of service storage total error so let me show you how we can set the piggy character to be the one that they've chosen as well and then we'll test it oh actually I forgot as well if the player doesn't have a trap equipped so in this else statement we need to give them the default trap don't we so we need to say trap equals game but replicated storage and for me the default trap that you're gonna get is going to be the bear trap so game to one of case storage dog traps basically choose the trap that you want to be the the free one right so in this case my trap is going to be the bear trap so I'm going to set the cost to be zero and yeah I'm gonna say trap stop bear underscore trap clone so even if you haven't bought one or equipped one you're gonna get the bear trap anyway because that is some free so in fact what we could also do is if you don't want this one to appear for sale you could put this into server storage you could keep the bear trap in server storage and change this to server storage and that's gonna be the default one that you get it just won't show up in the shop so I'm still gonna have some traps in the traps folder and we'll make that very soon but I'm gonna show you how you can make the piggy become the character that you've selected so in the game logic and around module we are going to go to the dress piggy section okay dress piggy and what we currently do is we get the character from server storage obviously it's not there anymore so let's get rid of this local character line keep everything else but for now we're gonna create the variable local character but keep it blank because we're defining out outside of the if statement we're about to make so that we can access it from later on in the same function because if we were to define it in the if statement we wouldn't be able to access it could be it would be local to that scope the scope of the if statement so we're gonna say if piggy dot equipped skin because piggy is still the player is that player object we just named them piggy so if piggy either equipped skin dot value is not equal to nothing so a blank string so if it is equal to something then we're going to check in the replicated storage in this gimmes folder here to see if it is an actual skin that's in there so to do that very simple all we need to do is say game if game don't replicate this storage dot skins come on find first try old piggy dots equipped skin dot value then so if you do have that if that skin is there in the replicator storage in the skins folder and it's a proper skin it's a real skin we can update the character variable to be games or replicate storage dot skins and square brackets piggy equipped skin dot value so we're getting the skin out of the replicated storage using the name of the skin they have equipped in their equipped skin value so we can clone it out like that and then in this first if statement if we need an elf don't we because if they don't have a piggy skin equipped if they're equipped skin is black which it could be if they're a new player we need to give them the normal piggy skin so again if you wanted to if you wanted the default skin not available to purchase you can put it into service storage and that's what I'm gonna do I'm gonna put it back in our in server storage okay I'm only gonna put the piggy in the self storage if you wanted the piggy to be available to purchase free even though they will already have it as the defaults you could put it in there and I'm just gonna keep the cost at zero because you're not gonna be able to buy those two so these two are they gonna be the defaults so I'm gonna keep them in server storage but for anything else that you want to buy okay that would go in replicated storage okay so now that we've done that we will be able to spawn the piggy and as your skin let me show you so I'm what I'm going to do is I'm going to hide the shop frame we're going to set the shop frames visibility to be false then I'm gonna go into the client shop I'm gonna go into the client shop yeah I'm gonna go in in fact well I'm going to actually only go into them the client main because that's all we've done the rest of our button coding and I'm just gonna code the white shock button to open the shop so I'm gonna say scripts doc parents wait for child shop BTN because that's the name of the shop button which is here inside of the main GUI dot mouse button oneclick curl on connect function then when you click it will say script doc Barents wait for child sharp dot visible equals not and copy that so what it's going to do is when you click the shop button it's going to invert the shops visible property so the shop has a property called visible and it can be either true or false and so when it's false and you click the button the opposite is of force is true so it's going to make it visible and when it's true you click it again the opposite of true is false so it's going to make it false again so you can't see it it's a very simple way of how to make the button work anyway let's go into a test mode with an actual server and player ok so I'm going to quickly if I can I might be able to do it in time I will be able to do in time don't worry ok I've bought and equipped the shaggy man on both accounts so whoever gets chosen as the P should be the shaggy man and the reason you're only seeing one don't forget is because we've taken the bear trap and the piggy out of the shop because they're the default so I'll show you in a minute how you can add your own characters to the shop but let's hope this works look at that shaggy man is the piggy is now shaggy man the character that we designed earlier and but also one thing to note is that the animations will not work with other characters in fact they might work I'm not sure I don't think they will though especially if it's a different character to the piggy beakers you have to animate each character for the bat okay it does work this one because I think the piggy is wearing he's wearing the same package as the piggy was and this was a very small reskin of the piggy but for some you might have to redesign the animation for that one but it seems to be working very well so I will show you now how to add your own characters and I've actually just realized that as well if you wanted to unequip the skin and you wants to go back to the piggy then it's probably a good idea to leave the piggy in service door in replicated storage I forgot about that so I'm going to put the bear trap back into the traps fold it in replicate the storage I'm going to do the same with the piggy and we're gonna go back to the play strap I'm going to change the replicate the serve storage to replicate this storage okay for the traps and the same thing in the round module in the dress piggy we're going to change that to replicate storage so I totally forgot if you wanted to equip your skin there's currently no way of doing that so an easy way to unequip and go back to the default is to just allow the piggy and the bear trap to be bought for free so that if they equip something but they want to go back to the default they have that choice so that's why I'm going to keep the cost of the piggy and the cost of the bear trap at zero but how do you add your own new traps well it's very very simple you're probably gonna want your traps to do different damage and to sorry to keep people stuck for longer or shorter so if you want to add a new trap what I'm going to do is I'm going to just right click and duplicate the bear trap I'm gonna give it a new name I'm gonna call this one invisi trap okay now this trap is gonna be fully transparent so you won't be able to see it so I'm going to just bring it into the workspace so we can see it I'm gonna set its transparency to one or in fact it's going to be very very faint so you can only just see it like this then I'm going to go into the death scripts and because you can't see it it's got to have a gonna have like a con so the perk is that you can't see it but the con is that it's going to only keep people stuck for a short amount of time maybe two seconds so if you want it to last for a different number of seconds just go into the death script inside of it and change the weight here to we're not any number you want if you wanted to last for 3 seconds change to 3 you want it to last for two seconds change it to 2 not this one here because this is a this is one to make sure that you walk into the trap fully before it disables your walking but this one here after the humanoid walk speed you changed this it will change the amount of time that you get stuck for you could also change the speed if you didn't want people to get stuck but you maybe just wanted them to go slow for a while you could change their walk speed but I'm going to keep it as zero so now that I've made my invisi trap make sure it's got a different name to anything to any other traps you can't have to trust with the same name and just put it into the traps folder like that that's all you need to do and then if you play the game again I'm gonna play the game and so here in the shop I'm going to equip the invisi trap or both players and also this shaggy man because why not everybody loves the shaggy man in fact let's make sure the university trap is equipped yep I'm gonna buy the bear trap as well but I'm going to only equip the invisi trap so whoever gets chosen to pigley should have their invisi trap hmm seems to be a book ah piggy it's not a valid member of replicated storage I know exactly what's gone wrong here so the problem is we went into the replicated storage dot traps which was good for the trout's but for the piggy we just said game dat weren't kids storage got piggy doc clone we should have said game thought replicate his storage got skins got piggy colon clone okay so in the ran module in the dress piggy you should be in the else statement character equals game don't replicate this storage got skins docked piggy karana clone we forgot the skins let's try again so again we're going to equip the invisi trap for both players in case one of us is chosen as the piggy so I'm going to own it but I'm also going to equip it next round begins in zero seconds it's going to ask all the map voting which we learned in a previous video in the previous episode actually so make sure you go in and check that out and once this map votes is over hopefully our piggy will load in and they'll be able to place the invisi trap I'll also equip the Shanghai man because why not okay let's see if we get teleported here we go and now if I just wait to be spawned we can you can see the I just spawned a trap in the waiting area and you can hardly see it but it is our invisi trap very hard to see but it is there if you look closely at the bottom of the screen it is there so it's spawning now let's just place a trap here and if I walk into it one two you can see I was only I was only frozen for two seconds so it's a different trap it's a different trap it doesn't it doesn't get us for five seconds any guesses for two seconds so very very easy to add more traps I'm gonna add a few more I'm gonna do a red trap that's gonna be fully transparent but it's going to be red we'll do a yellow trap which is half transparent but yellow and the yellow trap will keep you for ten seconds but the red trap will only keep you for half a second okay so lots of different traps now and if you try again go into the shop you will see in the traps section there is now lots of different routes but they all have zero they all cost zero so I'm going to go and change the cost of I'm gonna keep the bear trap cost at zero but the others are going to cost fifty there yeah let's let's set this one to fifty I'll set the other one to seventyfive actually so they're a bit different so we now have lots of different traps available which is awesome so that's how you add more traps to the game very very simple just put them into the traps folder give them a different name you know change their properties if you want to change how they look there we go we've got our difference traps now you can equip a certain one perfect and you can also go back to the bear trap if you want to so same thing goes for the PE of course if you want to add a new character let's just let's go another new character why not so going to paste copy and paste into the workspace this has changed the colors in fact we can make can make a a ghost you could have a fully white make it neon no we'll make it marble and transparent like this will remove the Shaggy and will go in the head we'll set a special mesh called head set the scale to 1.5 1.5 1.5 perfect and I'm going to change the name to ghost pig or just ghost like that the cost for this one though is going to be 100 so you need a hundred coins or tokens for that and what I'm gonna do you just put it inside skins play the game and I can play shop skins with them to load because it takes five seconds and there you go you can now buy the ghost and you can equip it if you like and you can see the equipped skin is now ghost you equip the trap however is not selected but if I equip the yellow trap there you go so I've split this shop tutorial into two parts so this was the first part and you can go straight to the second part now by clicking the thumbnail on your screen that is going to be the last video in this series so go there now to learn how to finish your piggy shop thanks I'll see you there