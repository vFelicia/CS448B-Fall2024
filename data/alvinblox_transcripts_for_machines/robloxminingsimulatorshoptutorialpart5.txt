if you new to my channel make sure to subscribe and click on the notification bow so you never miss out when I upload a brand new video so there's only a couple of things left to do now in the shop we've got to code it so that if the player accidentally resets while they're in the shop we reset everything for when they respawn we need to open up the shop whenever you walk up to the shopkeeper then we're gonna have to code an event when you reset so you can get your tools back and then we're gonna have to work on these saving of your items so what we're going to work on first is we're gonna work on the player resets event we've got this remote event called player reset so let's go back into our local script here and at the bottom what we're gonna do is we're going to just create one last event on the client and that's gonna be cooled now we're gonna say just replicate storage dot player reset Connect throw on to player receptor on client event Curran connect function now we're going to be firing this from the server when they reset and we're just going to be doing the same thing as we did with the exit button really we're gonna be setting Lee shop brain it's visibilityvisible to force we're gonna be setting the current box value to zero we're gonna be setting the shop write the model name value to zero as well we're then just going to set the border backward buttons to enabled color so you can say shop frame dot board in fact I think we have a variable for forward yep we can just say forward not image alert 3 equals the enabled button color and the back button image color 3 equals enabled button color and then we just need to set the camera a camera type back to custom a camera subject objects back to the players humanoid the playercharacter humanoid and we need to set there in shop value back to false so there we go if they reset when they're in the shop hopefully everything should be all good so let's test this out so they're in the shop so they buy something and they reset booth and what's going to happen is once they re join okay the camera did not go back to normal but everything else did so let's have a look if anything's wrong and nothing seems to be wrong so let's have a look in this script yes of course because we haven't actually fired this event yet it's not gonna work so that's what we're gonna do now we're gonna go into the saving script and at the top here we're gonna create a character added event swings a player got character added cut them connect function car with a character you can call this whatever you want so the car or ammeter is just their character okay so the model which has their humanoid and all their body parts so when they reset this is going to run when they're when the player is respawned so we want to firstly fire off this event so game dot replicate a storage dot layer a reset along fire client we want to fire this event for that specific player and we want to set their in shock value back to false just in case the event doesn't reset it for some reason and then we need to make sure that when something has been added to their character okay this is when they join the game as well if something gets added into that into that to their character so in other words when a tool gets added that means that they've equipped at all so we're just updating the equip to value to that tools name so we can say car child added so that's when something's been added connect function and then the parameter the argument here is going to be child so the child is the object which was added into their character so if child come on is a if it's tall then when a set the players equipped value to the child's name and that's just basically going to update the equipped value and then we want to give their tool back because at all might have been lost if they reset without that if they reset then they'll lose the tool we can say if game server storage got tools curl on find first child player or wait for child equipped dot value then because remember we need to wait for it to be added into the game because it might not be there we can just do player wait for child in shop up here as well so if that tool is a valid member of the tools holder over here and we're going to want to clone that tool so we can say local tool to equip oops this is what they're going to equip equals game dot server storage dot tools and square brackets hey equipped value and we can do curl on clone on this and we say talk to a quip dot parent equals player wait for child and backpack and that will give their tool back to them when they reset or rejoin so this is which unless they give the tool back like that so that is the character added event done you're going to test this out again we should everything should reset perfectly when when we click on the reset one let's open up the shop buy something and let's click on reset so we're just gonna die we respawn cameras come back to us the GUI is gone away and everything is back to normal and we still have our drill which we equipped so I've got the better power drill I'm gonna go back into the shop because I don't want this tool anymore and instead we're gonna get a normal power drill so we exit the shop we've been teleported back and we have got our normal power drill you see it's a different tool looks the same but it is a completely different tool so what we need to do now is script it so then we walk up to our good friend the shopkeeper over here nako we're going to open up the shop and one obviously one we click on the exit button will get teleported back to here which really works so only a few things left to do and then our shop will be perfectly ready so what we're gonna do we're gonna go over to the shopkeeper over here and there should be a union now whenever the player steps within this boundary there is going to be a script which detects the hit and then it's going to fire off the remote event so you can change this however you want you can move this because say if you moved it closer then it would be detected just as you hit the as you hit the the inner part but if you just put it a little bit closer to the the desk here and then after the play we'll have to walk in a little bit before the screen begins to fade it gives that nice illusion is like when you walk into this into this zone then you're going to have the shop open up so you can put it where you want I'm going to put it a bit close to the desk so that it doesn't trigger right away and then we're going to insert a script into this union okay and inside the script is where we're going to do the hit detection and open up the shop so what we're going to do we're going to define a variable or our event called the closed shop so open shops are opening the shop and say local event equal game but replicated storage and then we can say wait for child open shop because that's what we trigger on we want to fire the event and I pimp the shop when I'm going to do a touched event so script up parent got touched code on connect function hit and anything that goes inside this event is going to run or be executed whenever the part of the brick gets touched and hit is going to be the object which touch the brick we're going to check to see if the object which hit the brick is actually a real player and it's not just a random object so you can say if it's got parent fine first child and I'm going to say humanoid in quote marks and game drop players and we want to see if they have a player model to make sure that they didn't leave the game we say game the players get player from character and in the brackets we can say hit doctor parent then we know that it's a legitimate player and what we can do is we can insert our code which is going to check to see if they're already in the shop so if you actually want to get the player the players actual object so that the player where their leader starts and everything else is stored so it's a local player equals game and dot player's column gets a player from director its dot parent so this is the player in game dot players we want to check to see if they're in shock value is set to false which means they're not currently in the shop if player dot in shock value equals equals false and we will allow them to go into the shop and we'll set it to true player in chopped at y equals true and then we will fire the event for this client so you can say event fire client player just like that then we want to set their walk speed to zero so they can't walk away on the shop area or walk back in to re trigger this script you can say hit dot parent dr. humanoid duck walk speed equals zero just so that they're bound to the shop and they can't walk away so they're within that circular or semi circular boundary so now that that's done if we go and test this out we should be able to walk up to nako eighty eight and he should be able to open up the shop for us so let's go and run over now I am able to run because I have a plugin which allows me to sprint or leave a list all my plugins in the description below cuz they really makes we're rocks to do a lot easier so I'm here gonna walk into the boundary and nothing happens so let's have a look see why that does not work and try and debug it so we're back in the script we're just gonna doula we're testing to see what's wrong here we're gonna print test to actually see if the touched event is running in a play here and just jump straight in okay so it's printing a test so the touched event is definitely running now let's move this test to the if statement to see if that's executing I don't think it will be for some reason so that's what we're going to be looking at and if we just go again okay it's printing test so we know that it's going to be breaking because the if statement sorry so the if statement is true but something seems to be breaking here with the get player from character so let me just move the test further on down to see if it's breaking at this line by the game back in okay so it's not breaking at this line so I think the players in shock value must be equal to true because if this if statement does not seem to be executing so let's go into our saving scripts and have a look here so in shop is set to false and it's in the player hi there we go it there's our issue in shop is an int value when it should be a ball value so if you're watching and you've you've done the same and you've set you're in shop to an int value it needs to be a ball value okay it must be a ball value because either true or false so make sure that you set it to a ball value and if we go and test this again hopefully it's gonna work now if we go over here and there we go the shop is opened and you can see we have the ability to buy a super power drill we can buy the better power drill at the power drill or the normal one so we're going to click to buy it I've got the item but what if I want to get a different type of drill and go back into the shop and if I try and press the arrow keys to move here I'm just pressing down on s to move me backwards or should be away from the the area now but no because I stayed in that same position and I got teleported away so it's all good it's all working and my player is freezing when we get into that boundary of the semicircle so is the shop opening script all good or working so that is another part of the video done and it's looking more like a shop now it's looking really good just a few more things left to go actually the last thing we have to do is we have to work on datastore to save our tools save our currency and then this video will be completely finished and you will have your own mining simulator shop so let's get straight in to the data saving so to scrape the saving what we're gonna do going to go into the saving script here and we're going to make it so that we can save our currency and our equipped value as well as the tools currently in our player tools folder so that when we rejoin the game we can load these in and we will have all of our tools back in our inventory ready for us to equip in the shop so the first thing that we're going to do at the top of the savings script we're gonna say local data store equals game come on get service data store service in quote marks then we're gonna say get data store and you can call this data store whatever you like I'm just gonna call mine tools but if you change it all of your players data is gonna get lost because it's it's attributed to that data store name so I'm calling mine tools because we're saving tools and a few other things but we'll just keep it tools and what we're gonna do is we're gonna have to create some keys to save this data so below all of your different values which you've created at the bottom we're gonna want to create two keys first key is going to be for the tools that we're going to save so we're gonna say local tools equals and then our key is gonna be tools as a string dot player dot user ID so the way datastore works is that you have a key each specific player and then you write data to that key and then when they join the game you can check to see if there's any data attributed to that key and if there is you can load in and when they leave the game you can save data to that key so we're just getting this players key because it starts off with tools and it has their unique player ID I'm gonna do the same thing for the equipped value so local equipped equals equipped dot dot layer dot user ID I do have some data store tutorials coming out on my child soon to do watch out for those so we've got our two keys and now we want to check to see if there's any data for our tools key so you can say local data equals datastore turn on get a sync and then we can put tools in here because that's our key and local equips data equals datastore get a sync and we can just put equipped in here because that is the key or our equipped data now we're gonna do the equipped first so we're gonna check to see if there is some data in this key so we can say if equipped data is not equal to note that means if there is some data then then we can just say equipped dot value in fact this is not going to work because we have a well in fact it is gonna work I guess we can just put we could just say equipped key here because we were defining equipped appear and we're defining another equip so let's just change this to equip equipped key and we can change that here so equipped a City Hall stay still get a sync equipped key and then down here after we then we can say equipped key throwing say equipped dropped value equals and then we can just say equips data we were loading in the what the equipped was last time into the players current value so we've loaded in the equipped value now we just need to load in their tools into their inventory so what we're gonna say is if data is not equal to nil if there's some tools then what's going to happen is the we're gonna save the tools as a table and we can loop through that table and add each tool into their inventory so what we're going to do is we're gonna say for I comment tool in pairs data because that's what we're looping through do let me drop a few lines and inside of here what we're gonna do is we're gonna check to see if that tool is in service in tool models and it is so it's right isn't the tools folder then we know it's a real tool I'm gonna clone it into the players player model folder so we can see if game dot server storage not tools curl find first child tool then and inside of this for loop if the tool is a legitimate tool in the game we can just clone this tool by saying local pool equals game dot server storage got tools find first child at all so we're just getting that tool objects and then we're going to clone it so local in fact we can just say local clone tool local clone tool equals game itself storage tools find first child tool clone we can clone it and then we can say cloned tool dock parent to equals game but server storage got two models throw player tools and then square brackets we're gonna get their folder which is called that which is their player name so we put player dot name in square brackets and then let's have a look clone to up we spelt it wrong cloned tool so there we go we have cloned the tool into the players player tools folder in fact let's just do let's just do a find first child instead just in case it has not been created or accidentally gets deleted or something so there we go we have cloned the tool into their player tools folder and we should have successfully loaded the data now if they don't have any data and we know that there must be a new player or there might have been some date loss but usually it's a new player but what we're gonna want to do we just cannot want to wrap this in a peak or okay something goes wrong this get a sink doing say local success an error message equals he call function like this Piko function aha you just like this so we're wrapping this in a function and as P cool so that if something goes wrong your data stores are down it won't throw an error and it won't mess up the rest of the script it will just contain an error and we can check to see the if success then print data or the tools was successfully received what was successfully so we've got the data so we can say found and if it wasn't a success we can print or we can warn there was an error and we say error message so this just prevents any errors from occurring which could break the script maybe if data stores were down that's why we wrap it in a P cool we're gonna want to do the same thing for our equipped data you did the same thing local success error message equals P cool function and we have an end and a closing bracket and we want to just copy this and paste it below it now we're gonna want to define equipped data just before just before this P cool I'm gonna set it to nil so that we can update it and if something went wrong then we would still have this variable declared but it would be nil so we know that something went wrong okay we're gonna do the same thing for data we're just gonna get rid of this local and above it we're gonna say local data equals nil so there's no data yet but if everything goes well that data is going to be updated with the current tools table so we have wrapped our get a sinks in P equals which would prevent it from erroring and we also added an else just in case the data isn't found reverse a new player that should be everything done or getting the later the last thing we need to do is set it up so that when the player leaves the game we can save their data so this part is relatively simple all we need to do is just go outside of this player added event and at the bottom of our script we're gonna say game and dot players dot player or removing connect function and then we can drop a few lines make sure that the end with the closing bracket is added in and then we're going to create a table called tools this is the table which we're going to save and what we're going to do is we're going to loop through everything inside our inventory so in player tools before I comma object sorry tool not objects well though it can be called object if you want in pairs and inside of these brackets we're going to be looping through player tools folder so we can say game dot so storage got player tools and square brackets we can say the player's name don't forget to put player as an argument here a player dot name into our brackets and then say get children just like that then we're gonna say do and inside of this loop will you're just gonna add each tool into that table swing say table dot insert and then we can say tools and then come at all dots and name just like that and I've done that we just need to set a sink so set the data store values for each key so what we can do is we can say in a peak or local success error message equals P call function and inside of this function we can say datastore turn on set async and then if they tools because that's our key don't forget that actually what we can do is to make the keys a little bit readable we can add a hyphen after the after the word in the string and then we can have our user ID come after that just so it makes it a little bit easier to read instead of having your alright your aids dorky looking like this like this it could look something like like this which is a little bit easier just to see so up to you but make sure that you're keeping it the same names when you're setting a sink and getting a sink else we'll have some data loss so we're setting the the tools and we just want to give we want to pass that tool table so we're saving this table to the players data store with a specific key and then we can do the same things little earlier if success then print later saved else wouldn't print that there was an error and we can give that error message so we're gonna do the same thing now just copy and paste this but this time we're gonna change tools to equipped and because that's what we did earlier we called the datastore equipped that's what I key is called and then instead of tools we're just gonna give the players equipped value so player not equipped dot value just like that and we're gonna copy the same thing again with our success and our error message and there we go that's all done what we can then do is print at the end of this later successfully saved and then our side of this player moving you have to do a bind to close function so that when the last player leaves the game the game server doesn't shut down immediately just so we can make sure that everyone's data has been saved especially if the game shuts down as well save everyone's data you can say game curl on buying two clothes and then in brackets we can save function and inside of here we're just gonna say for I what player you win a loop through each player and kick them so the data gets saved or icon a player in pairs game doc players column get players Open bracket close bracket there's another bracket because we're ending that pairs bracket do drop the line and then we going to say if player then player kick and then the message we're going to do but give to them is that this game is shutting down and what move done that what we can do is outside of the for loop we can wait we can wait for the data to be saved I'm just going to wait about 10 seconds you could do a bindable event and wait for that event to be fired when the data say for example but to keep it simple we're gonna say for 10 seconds because that should be enough time for the data to be saved so I think that is everything so what we're going to do is we're just going to go and take this backdrop here and I'm just gonna go and place it underneath the base plate so we can't see it but I'm also gonna do because obviously we can't really see it because underneath the base plate when you go into lighting and set the ambient to quite bright and then we're gonna go up here and I'm gonna place a spawn location just next to my shop next to nako so that we can just quickly go in and test and let's go in and see if this works they click on Play and you can see that we do not have any cash that might be could be because of the saving and the access yes that's right because we need to publish this game first to be able to test the data stores in roblox to do so we're to go ahead and publish it so you can click on file or you can press alt P to publish it and then we'll go into a roblox game and test this out once you've published your game then you're gonna want to make sure that you go to configure game by clicking on the three dots next to the title and then you want to check the box next to the text which says enable API access to studio services and that's if you want to test it in place solo but you don't have to do that if you want to test it in game like me so we're gonna head into roblox now test this game out see if the shop works to see if it saves my data let's hope that it does and that shall be the end of this video one thing that we need to quickly fix which I found earlier on before we go and test this out you need to go into the local script and you need to make sure that over here we've got player door character humanoid that you just say wait for child and then we put the humanoid in these brackets just so that this humanoid we can wait for it to be loaded into the game before we start working with it so go ahead and publish your game and let's go ahead and check it out so I'm in the game and we're gonna walk up to our good friend Nico who's gonna give us the shop and you can see we're in here the back button is disabled and we can click forwards and go forwards and backwards so that's all good the cameras working perfectly so let's go ahead and try and buy an item now and you can see it's equipped and we can try buy another item and that one's equipped now we can go back and equip other items get our super power drill so you can see the equipping works perfectly fine so we've got the epic power drill I'm gonna exit the shop and I've got my drill over here and go back into the shop if we wanted to change that I'm currently got the epic power drill equipped and if I try and take it multiple times nothing happens and we can equip the better power drill now and there we go we've got our better power drill and you can see the money is being taken from my balance when we're buying all of these different drills so now let's go ahead check the output and see what's being reported my stained console and here we go so you see it's printing out every time we are looking at a new item it's printing out all the information from that table but let me go and leave the game and let's see if our data gets saved I'm currently on let's have a look 2800 cache and I've got the better power drill now let's go ahead and leave the game now I'm going back into the game and you can see our data did not save some reason so let's go ahead and work out why that did not happen so I'm back here in the game and you can see that my data has successfully been saved however the cache has not saved us because we didn't actually script the cache to save but I will show you how to do that later on at the end of the video but you can see we've got the better power drill still and that was the item that we left the game with let's go back to nako and go back into the shop and if we go over to the epic power drill it says that it's equipped and you can see that we have the ability to equip all of these other tools we do not have to buy them anymore because it has remembered and saved that we bought them all so there you go we have our mining simulator shop working perfectly just how we want it to be totally thought of and able compliant saves the data and it works 100% just awesome so that is the end of this tutorial on how to make a mining simulator shop now if you want to learn how to save your cash ingame and don't worry because I did a video on how to make a currency system just like the one we've done and also how to save it I'm gonna leave a card to that video which can you can go and check that in the top right corner of the screen I'm also gonna leave links down in the description to that I'm gonna leave links to all of my plugins that you can use to install because they really do help with a roblox development and I'm also going to leave the code in the description for this video so you can take it if it doesn't work for you I'm also going to give you a copy of this game and all of the objects which you need to put into the game as well as a little tutorial a written guide how to insert this into your game and that is everything so thank you for watching this series it has been a very very long day of recording I have spent all day recording this video you can see on the bottom left corner on my screen I have been recording this video for over for over six hours I've been planning it for many weeks making sure everything works seamlessly this is a lot of scripts that come together in this tutorial book fixing making the code much better I've put a lot of work into this I'd appreciate if you subscribe to my channel like the video and share it with anyone else who you think would like to make a roblox mining simulator shop just like this one so I hope you enjoyed it if your code doesn't work some reason then please do try the come in the description for a debug itself I've tried to make this as easy as possible to copy out and explain I hope you learned something from it and make sure to subscribe turn on the notification about be notified when I upload new video and this is Alvin blocks telling you to keep scripting