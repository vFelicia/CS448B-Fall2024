hello everyone welcome to episode number 18 in the scripting series we are progressing along now at a good rate with these videos and I am trying my best to get as many out as possible to finish this series off so for anybody requesting videos in the comments section I will just say this now I am currently focusing on the beginner videos and I will not be doing I probably will be doing some but all of my efforts are going into this series at the moment although I am working on many more projects many more video series which will be coming out soon but this takes priority first because it's been going on a while and we need to get this series over with so we can get into the more advanced content but doesn't mean that we're gonna rush through anything and today we're actually focusing on a topic that a lot of you have requested I've been seeing in the comments everybody's been asking for a tutorial on this because they can't find much about it anywhere online and it's quite confusing so don't worry you've come to the right place I'm going to explain everything you need to know about in pairs for loops alright so if you haven't learned about tables already and you just stumbling on this video I do recommend you check out the previous video in this series episode number 17 I'll leave a link in the description all about tables because basically for loops are an extension from tables you need to know all about tables because for loops are actually used on tables and there they used to manipulate tables so this has no purpose or meaning if you have no clue about tables but luckily I made a video going through everything you need to know about tables and that's what we will be basing this tutorial on today so going on from that video this is where we left it we left it at this example here where we have players who are in around and we've just got Alvin Bob and Alan and we have a great comment question in from lure programmer in the comments who said so what if we don't know the position of a value and want to remove it now this is a great question because right now if we want to remove something from the table if we wanted to remove you know Bob for example we would have to give the index position value of that player so we would have to say table don't remove would have to give the list which would be players in round boot then would have to say the number so the the position in the list where the player is that we want to remove so in this case it's Bob and Bob's index is 2 so he would remove him okay so what if we didn't know this index number because we could be adding loads of things to the table when the games running because when the game is running we can't see the table for ourselves so we don't know and we can't predict we can't guarantee that the players will be in a set index we can't just say oh yeah well this player is going to be at position 30 because we're not going to know the index position of every player and for loops is just what makes these tables so great because what a for loop does is it lets us loop through a table now we'll come back to this example in a bit but I'm going to now talk to you and explain what four loops are and why they are so useful so a four loop is used so an in pairs loop here so there's two types of for loop your normal for loop which we'll be looking at in a future video and the in pairs type in which we're talking about today so the when I say for loop I'm talking about for IV in pairs and you've probably seen it before this is what it looks like so you've got your four I comma V in pairs then you've got a pair of brackets then you've got do on the end of that then you can drop a line and you've got your end in here so kind of look very confusing here but really it isn't okay it's not confusing at all because when I explain this to you right now you're going to think oh yeah that's what it's for and it's all gonna become clear so this is quite a table let's have some things in there all right we've got quite a love quite a few different data types and hair guitar string numbers and a boolean so this is our table now as I've said before the for loop is going to loop through every object in the table every item in a table is going to loop through and every time it loops through the table it will loop around so if we've got or if you've got here we've got four items on the table one two three four so the for loop is going to run four times it's going to loop around four times just like a while loop will run forever as long as the condition is true the for loop is going to run there's many objects you have so it will loop around and it will perform some code so if we had just a code to print hello in here what would happen is because we've got four items in this table is going to print hello four times if there were five items it would print five times okay so firstly you have to put the name of your table in here so that the script knows what to loop through so when we say loop through it will run this code for each index so it will go through will go to the first item and it will run whatever code is inside of will which is in between these two lines so in this case it will run the print and it will run it and then when it gets to the end well we're not at the end of our table yep so we've now moved on to the second index which is three so we're just gonna run the for loop again and it's gonna print hello again so that's the second time now go to the end now we're going to move to the fourth index and the table and it's gonna print hello again so now it's printed out three times and then it's gonna go to the false which is still an item in the table and it's going to print hello again so the four in pairs loop is is repeating for isn't for the for the same amount well the number of times it is repeating is the same as the number of items in the table it's dependent on how many items there are in the table so if there was just one item in the table it would only run this code once okay so that's the very basics the four in pairs loop will run code for the items in the table depending on how many items are in that table so once again if there were two items in the table it would only run this code twice and I will prove that to you let's run this code and it should print hello four times now let me just disable the other script so we don't get confused you can see it has printed out hello four times like this you can see the the X 4 x 4 meaning that the same message is being printed four times so just as I've said the for loop is printing it is running the code in between these two lines the code inside of this for loop will run for as many items there are in the table so for items means it will run four times and again if we were to add another piece of data into this table so there are now five objects you can see it has changed and it is running five times it is printing five times so that is crucial you need to know that for your for loop now you might be thinking well this is a bit pointless it's just running code a set number of times how is that useful to me and how is that useful to the table and genuine concern lays but we haven't learned about what I is these and what this whole impaired stuff means well that's because a forloop doesn't just run code a set number of times based on how many items there are on a table because here comes the good stuff and everybody's saying well what does the I mean what does the V mean and everybody saying well I don't understand it because I keep seeing this I and V everywhere but actually you don't have to write I and V you could write whatever you want and firstly though I'm gonna explain why we use I and V and what these things actually are so we've said before that the for loop will loop around or run x times and that x is going to be the amount of items in the table so we've got five items now in the table so this is going to run five times and every time it does run or loop around I've said that it's running for that index so I said the first time round it's gonna be running for this hello so it will be running the code that's inside this for loop for this index hello so what's happening when it is running the code for this index is the I down here is our index value okay now don't get confused by the word index because we have got index in the table and we've got index down here so the the table index value is its position right so this would be position one this would be positioned this would be position three this would be positioned four and position five that's the table index and it's basically the same thing every time this for loop runs for each item in the table this I it's a variable basically and this variable holds the index of the current item so the first time that this loops around I is going to be equal to one cuz that is the index of the item that we are currently looping through so on the first time around the first pass I is going to be one because that is the position in the table for this item so what the for loop is doing is running the code every time for a specific item in the table and so we pass the index value which is one in this case to the for loop and as it loops on as the code finishes and we get to the end and we loop around this index will change to the next position of the next object because once the code is executed for the first item in the table I said it moves on to the next one so it move on to index number two and the value of index number two is three so I is now going to be two because that is the index of the second item and now you might have realized what this V means the V stands for value so just like the index is going to be the position value of the item that we're currently looping through the V stands for value the value of the item that we're currently looping through so the value of that index so let's imagine that we're on position we're on index 3 so we've looped around two times already we've done the hello we've done the 3 and now the third item in the table is being looped through so the I four index is 3 because 3 is the position value or index of the third item in the table but the value of index 3 well it's 4 because the held value at the third position so the value that is stored in the third position of the table is four so the value of index three the value of the third position in the table I'm trying to be as clear as I can is four so we're taking this four and we're making it the value of V so just like a variable is a reference to something the V here is a reference to the value of the current index the current item of the table so if we are on index three then the value is going to be four okay and if we just give ourselves another example here let's say that we were on the first item the first time that we're looping through well we're going to start off with index one so what happens is that the I variable here has the index value of one and the V has because it is that it is the value variable that will hold reference or that will be equal to hello because that is the value stored at that position so in a table we have indexes and we have values the values are the actual pieces of data that are being stored so in this case hello or Phi or any data could be true or false like we outlined in the tables video the V is that data it's the value held at a certain position so we have the index so you could just write out index value because these are variables they can take any name it's just that they're called I and V because I is short for index via short for value and when you're coding you just want to be you you want to make things short because you don't do loads of typing but it's up to you you could call it you know hamburger call my fries as long as you know that the first variable here is always going to be the index and the second one is going to be the value but we're just gonna keep them at inv because that's what everybody seems to be you nowadays so we've just made clear that the for loop this is a recap if you're not with us if you've lost us a little bit so we're gonna go just back from the start very quickly so the for loop is used to loop through a table when we say loop through we mean perform some code for each item in the table so it could just be a simple print and so any code in between these two lines it's going to run a certain amount of time and the amount of times that it runs is determined by how many items are there are in the table so if there are three items then the code in between these two lines will run three times and every time that the four loop runs this code we call it like looping through so the first time it loops through will be looping through for hello the second time we will be looping through for bye and the third time we will be looping through for false now every time we loop through and we get to the end while we go back to the start and when we go back to the starts here to this four line well the I value and the V value are updated to the current piece of data the current item that's being looped through so the first time round we will be on hello which is the first item in the table so the we immediately enter the for loop and the script automatically because we've told it to loop through my tab it's automatically it automatically got the index for us and the value so if we were to print out what I was and we were to print out what he was it would print out the position index which would be one and would print out hello then it would get to the end it would go to the top again and we would now be on the second item in the table so the eye has been updated too because the second position and the V has been updated to by because by is the value held at that position is the data held at that index okay so we should get printed out for us one and then hello let's have a look and see if that happens brilliant so we can see that it has printed out one which is the index for hello because don't forget this is index 1 this is index 2 this is index 3 so it's printed out the index for hello which is 1 and then it's printed out with V and remember we said that V holds the value of that data so that the data held in index 1 is hello so that will be equal to V so V has printed out hello then it's got to the end it's gone round again and it has updated the variables I and V to the index and value of the second item in the table so I is now 2 and V is now by as you can see it has then printed out the new I which is 2 then it's printed out the new V which is by and again you can expect this part here we go around again I and V automatically are updated because we have moved on to the next item in the table which is the third index so I is now 3 and V is going to be the value held at that index so the data that is held at that index at the third position which is a boolean value false so it will print out 3 which is I and then we'll print out a V which is false but all you can see here is that it is it is printing out the same things right sorry it's doing the same code for each thing in the table so for every single index in a table it is it is doing the same action too so it is printing its index and it's printing its value and it's doing that for everything in the table so another comment I got was well how do we print everything their table because you can't just go prints my tap you just can't do that if you were to do that if you were to print my tab you'd get an error and what well not an error but it would print this out for you it would print table and this memory location of where the table is at that does nothing to help us we can print out certain indexes in a tables and you know values but we can't print out the entire table itself and this is where for loops come in handy because when we use a for loop it is going to whatever code we put in between these two lines here is going to be applied is going to be executed for every item in the table you can guarantee that because it is looping through the entire table so for every item in a table we are going to run this code and we've also got references we've got we're able to access the current index and its value so we can basically perform any action to the table so if you want to print the table well okay we're not actually printing the entire table we're being a bit crafty and we're printing out the index and value of each item in the table so it's not like you're you're saying to the scripts can you print me the the whole table you actually it's like it's going I tuned by item and it's printing out each thing in the table now that sounds really confusing but you can't just expect the script to print out this in brackets with commas so what you're doing is you're actually using this for loop to access each item in a table you're basically printing value and then you're moving on to the next one printing out his value moving on to the next one so you have printed out the table but you've not actually printed out the table by just doing one piece of code because you're actually printing each index and each value over and over again using this for loop you're not actually like you would print a variable you can't just say print my tab like this you have to use a for loop and the for loop is printing each sub item of the table but because you're printing every serve item yeah you're printing the whole contents of the table so the for loop is repeating code for each item in the table so if I wanted to let me think of a good example here if I had a table full of numbers right and halfway through the game I want to give everybody double points okay so just imagine this is the table of everybody's points in the game if I wanted to give everybody double points I wanted to increase their points by by table or I want to double their scores if I wasn't using a for loop I would have to go write my tab one equals my tab one times two my tab it calls my tab two times so as you see this is getting very long and if I have to do it for every single one in the table it's gonna be like this it's you know it's gonna be really long and I have to update every single one with the index of the table and it's not good it takes too long too long to write if something goes wrong if there's an error and I've made a typo I'm gonna have to go back and update every single line and then later on if I want to change this I have to change it all it's just not a good way of handling it but there's a better way for loop because we know the for loop is going to loop through every single item in the table so whatever we do to one will be done to all so if I was to if I wanted to double every value in this table well because the for loop loops through every item in the table surely I could just say if V is the value held for each item for each index sophie is basically the data in the table so for the first index right V is going to be one for the second index V is going to be two because that's the value held so I could just say shortly V equals V times to fool me that would work let's have a look so what I'm going to do is I'm going to print out a piece of data from the table just to show you so we'll do the second index because that's two for now so we'll print that out then we'll do the for loop which is going to just come along and do all everything and then we'll print it again and see the change that it has had so we'll do it we'll do a little weight as well wait so what going to happen is we're going to print out the second index which is currently we're then going to run our for loop which is going to hopefully double everything on the table and then we're going to print out the value of index two again and hopefully it should be four let's have a look see what happens so it's but then the for loop comes along and it's still mmhmm so what's gone wrong here let's have a look so we have doubled the value but we need to write it to the table so let's say my tab I let's try this again perfect okay now you may be wondering or what have you doing here what I have done is we have gone to the table so we've gone up to the table just like we have here and I've indexed I've gone to the the value of the index we're currently on so everyone if we're on the second index here we're looking at the table we are then putting in the current index so if we're running for the second time we'd be on indexed too so we've now accessed this value and we're setting it to two times the current value so because V is variable and it's it's it's just the variable that holds the value currently stored here so it's not actually a direct link to the to that piece of data in the table it's kind of like a copy it just holds the same value that's held at the second at the second value sorry at the second because it's a two right if you were just to put two in here two equals V times two it's not going to do anything because we're not actually telling it it's not actually a location in the table it's just a number so we can't set that number to something else very confusing I know but what I'm saying is you can't just say well if you just say to here the script doesn't really know what to update and it's not going to save but if you look up in the table and the index is going to be the I value because it's going to be like two or two if we're on the second item we're looking up the table at that index and we can then set the value of that index to whatever its current value is x by 2 so again let's just show you it was 2 and how it's four okay so what we've done is this code has executed itself 10 times for each item in the table so when we first got into the for loop when we first started I was 1 and V was one as well because it's the value stored and it's the same as the index I'm counting up to 10 but we located it in the table using its I its index just like we did here so we grabbed that reference to it in the table and we said ok you see this here we want this to be equal to its current value because V holds the value multiplied by 2 so that would now be 2 then it moved on to the second index which is 2 and it said okay so we're gonna look up in the table the second item because eyes now and we've got the item and we've said I want to set this to V so that's going to be 2 which is the current number so 2 times 2 is 4 so I want to set this to 4 and it's done it then it would go to 3 and I would now be 3 v would also be 3 because that's the data held at that position it just so happens that they're both the same because they're both counting up 1 to 10 so we're looking up in the table and then we're basically doubling it here because V holds the number that is that is stored so 3 3 times 2 is 6 and it would keep going on and on until the whole table is doubled and when it gets to 10 and it doubles it and it makes it 20 and this line has completed we would finish because we've got to the end of the table and then it prints out the new value of the second index which we've asked it to do so I know that will be quite confusing as well and that that error that were not error but where it actually didn't double don't worry too much about that but what you need to know is that the for loop will run for however many things there are in the table so if there's 10 items it will run 10 times if there's one item it will only run once and every time it loops around again and it gets to the end if there is another item in the table then its index value we updated to the index of that of that new item that we've moved onto and the V will be its value so the value stored at that index so basically the data which is in that position so the in pair stuff this is all syntax this is what we need to rise to tell the script that yes we want to do a for loop we want to loop through one by one through this table so you can see now why I was talking about the table wasn't wild are so important and again if you haven't checked out the video on tables please do go ahead and check that out because it will be a massive help to you and tables that are used all the time in in roblox for for all sorts of things let's go ahead and give a practical example here okay so the example that I'm going to give you is a bit similar to something that you might have seen in a game such as jailbreak or another town and city game so let's imagine that these are these squares here are buildings in a game okay and let's make them a bit bigger so they actually look like buildings there we go so let's imagine that these are all buildings and when it gets to night time in the game so it's really dark they get you know it's quite hard to see them especially if you are far away so what if we wanted to turn them all on at night well what you would obviously do is you would go game dot workspace building you know dot and to turn them on I'm gonna set their material to neon okay that way they'll be nice and bright but what you have to do is first we've got one I know twenty twenty buildings so you'd have to repeat the same code over and over again twenty times and if you wanted to change the material in future maybe you'd have to go all the way back and change all the materials one by one and when you have code to turn them on in the day and code to turn them off at night then you're gonna have double the amount of code so that's forty lines of code and what if I told you we could use a for loop to loop through every single building and just quickly change them all at once I'd only have to write one line of code to update the material property and then the script would apply that for every single building well firstly the buildings need to be in a table because we know that in pairs loops only loop through tables that's the whole point of them so so we need to somehow put them in table form so how do we do this well you'll be pleased to know that roblox actually does this for you now remember that in your table we can have objects objects or a data type so that's for example let me just show you we could have an object in the table like this and we can have multiple objects in a table as well we could have game data where it's based base plate love game do a space terrain we can have any objects in a table now the good news is that there's a really quick way of getting objects in a table now in this case what I've done is I've gone ahead and put them all into a folder because that is the sensible thing to do so I'm gonna call this folder buildings and that way it just contains all the buildings nothing else so we know that everything in this folder is gonna be a building so what you can do is firstly let's create a variable I'm just gonna call the variable building's table now instead of creating a table like this I'm going to use a method called get children so I'm gonna firstly reference my folder game door workspace top buildings but then I can say and you can see all these methods come up in built functions I've got a video on inbuilt functions you should have already seen it it's earlier on in the series really useful but the inbuilt function that we're gonna be using today is get children and what get children does is if you don't know what a child is in robot scripting context a child is something inside of an object so this building is the child of the folder because it is inside of the folder so when we're saying get children we're asking the script to get all of the objects that are inside of this folder called buildings and it's going to return them all to us in table form so we should get something returned to us like this we should have a table with all of these different buildings in but because there's lots on lots of buildings we don't want to have to spend the time looking through them all and so get children will basically take all of these building parts put them in one big table and it will now be we can now just you know we can reference it we can we can easily now use it because it's this variable we've got it stored in this variable so buildings table is now a table full of objects of all these buildings so now we can use our for loop to loop through each one so we say for I comma V in pairs put the building's table in here like that and then we say do drop a line and now the index and values will automatically update when the script runs so we don't need to pay attention to the index values because we have no use for them here all we need is the value and so the value of each index is going to be that object so it's a direct reference to each building in the folder because if we think about it our buildings table will actually look like this when it will be game that workspace dot buildings dot building and we'll have lots of these so you know rough twenty or so of these so the same principle applies it will have index one here index two here and there will be loads and loads of indexes so we've probably got 20 buildings at least so at least 20 index values so 20 items at least in the table so that will be 20 or more indexes but the we don't need to pay attention to the indexes we could print them out and it would print out one to 20 basically we're interested in the value the actual data here the data the value same thing but the value for each item will be the path to that part basically so that object so we can now do whatever we like with that object if we wanted to delete them all we could say V destroy just like you would usually do on a part or an object and guess what it will delete all of the buildings and if you don't believe me just watch don't believe me just watch there you go it's gone and if we look in the workspace the buildings folder has got nothing inside of it because they've all been deleted so what happened was the scripts basically looped through every single building now if you slowed it down to you know fractional seconds even quicker than that because the script runs so quickly if you did slow it down to a point where it is slow enough to see this happening you would see one building go then the next one would go and to prove this to you further if I added a weight here of say one second because it's destroying a building but then it's delaying the script by one second so we're not going to move on to the next building until this one second is up so if you watch we slowed it down here but you can see that blocks are disappearing every second because once that one seconds up it's moving on to the next building in a table and it's removing that and then that one's getting removed and eventually you will run out of blocks so this is essentially a slowed down version of what we've just seen but by the time that the game had started well they'd already been deleted because the script runs that fast so just keep watching and they'll all get to destroy there we go so they all got deleted and again if we were to get rid of this weight they would just all be gone instantly so there you go so what we want to do here is actually turn turn the buildings on we want to make them bright and shining so we could just say V because the value variable here is referencing the the object so it will you know eventually reference all parts it will do the same thing to all of the building parts so we can just change their material property to neon and that's going to do it and we can do a little print as well just to show you that it happened a load of time so we can say material updated for index and we can then do dot dot you can concatenate the the string and you can print out these values as well you could print out the inv values if you ever need to debug or test or you want to make sure that it worked you can print it out and this will now print out material update it and it will print out with every index value so it should print out one two twenty or even more so let's check it out so there we go and it's done it and they've they've all gone neon so you can see it updated it for the first one then it moved on to the second one then the third one fourth fifth sixth seventh all the way up to it were even over 20 so this 31 blocks here so it updated the material 31 times because there are 31 blocks if you don't believe me pause the video count them all up I guarantee you and million row books that there are 31 objects and you can see after 31 it stopped so as I said earlier it will only run for the number of items you have on the table so there's obviously 31 bricks buildings here so that means 31 items in the table which means the for loop is going to run 31 times no more no less so there you go let's conclude the video here I think we've gone through quite a lot and a quick recap so a for loop is a loop which will loop through every object in a table so if you've got ten items in a table the for loop will run ten times if you've got one item it will only run once but essentially you can perform code you can run code for a set number of times based on how many things are in your table and if you want you can access that specific item or index that index on the table based on the inv value so if you wanted to change everything in the table then you could update every index by using the V here and because it's in the for loop the same code will be applied to everything in the table so if you change the material of V to neon you're basically changing the material of every part in the folder because that part is in your table and you're looping through everything in your table and you're basically any code you go in here will isn't you're not actually you know updating the material of one thing you're updating the material of everything in your table but it's just updating one by one because as we saw earlier if we were to add a weight in here and essentially slow down the scripts this is what it would look like so you can see it's going through the table we're on out on the fourth one it's made neon now the fifth now the 6th 7th 8th you know ninth you can see it's printing out as well that it's now updated it for index 11 but every time that you loop through and you get to the end it is updating the high value the index to the next index the next item in the table because when it's finished with this one it's moving on to the next one and it's not going to stop until you reach the end of the table which is about to do with the final block and it makes it neon and then it stops printing and it will end the for loop and if you were to print something at the end here saying reach the end just to show that we actually got out of this four loop finally and let's just change this way because we don't know wait here all day let's make it ten times faster so it goes along and when it reaches the end it says it prints out so we now know that it when it finishes when the four loop is done when it's got when it's basically performed the code here for every item in the table is going to print out this message here because is moving on to the next instruction in the code so unlike a while loop it's not going to run forever based on a condition which a while it can do a while loop can run forever this for loop is only going to run for the items in your table and it's going to perform code it's going to perform an action each item in your table based on what you've put here so what you write in here will be done to everything in your table and that is for loops now people do think they are confusing but really they are not it's just a quick way of looping through things if you have you know if you want to quickly loop through all the players in your game that's another way it can be used you can give everybody ten coins because you can just loop through everyone in the game so if you wanted to loop through everyone in the game you could say for IV in pairs and then game dot players and a bit like get children there's an inbuilt function to get all the players in the game it's called get players don't forget you need these two brackets on the end as well because it's a function that we're essentially calling or a method and just like get children get players will return back to us a table of all the players in their game in the game so their player objects so it could be like Alvin underscore blocks or Newt so it will return back objects of players currently in the game so only currently in that game server and then that way you could loop through all the players so if you had that table again let's just them maybe this table here so we will still have our indexes so the first time it loops around let's imagine I was first in the table then one would be the value of I because that's my position in the table and then V would be this object path so it would be game dot players to Alvin blocks so if I wanted to kick however and blocks out of the game I could say V Curran kick and that would kick me from the game then we would reach the end and we would go back to the start because we've still got another object in the table so I would now update to two because that is the second index here and the V the value would update to be the path will be the reference to newts in the in the game here because it's the object so game dot players Newt so it would be the same as saying game to players new code on kick you would get kicked as well then we would reach the end and we would be finished so let's check this out let's do a little weight here weights five just so we can get into the game let's play and after five seconds we should hopefully be kicked there we go you were kicked from this game so what happens is it would kick everybody out of the game but you can see how it is performing it would perform the action for every player in the game because everybody everybody would be in that table because the game has created the table its given it us and everybody who's currently in the game would be in that table and because a for loop applies the same code to every index in the table everybody would get kicked so that is what a for loop is but you can also do some checking so if you only wanted a certain player to get kicked so for example if we had loads of players in the game but I only wanted to kick a player if they had I don't know and if they have let me think okay I've got an example so if the player was a new player for example so let's say M V dot count age is less than 15 so if they're less than if their account is less than 15 days old then I could kick them now because this is the player object each player object has a property called account age so we could check every player's account age because this is going to ruin for everybody so for each player we would check their account age and if it is under 15 days then we would kick them but obviously not every player is going to be under 15 days old so for some players we would get this a statement well and that would not be true so we would not run this code we would just move on to the next player but if somebody joined who was under 15 days old we would kick them now I'm gonna change this to 9 9 9 and 9 and run this and we'll see if I get kicked ok I did get kicked because obviously I haven't been on roblox for that length of time we're very very long but if I changed it to 15 days obviously I've been on roblox for more than 15 days so it won't kick me now let's run this again and it's a pretty bad bad example to be honest because there's only one player in the game but if you had a full server of people and then you suddenly run that code it would kick quite a few people out probably so you can see how I didn't get kicked here but a for loop will loop through everything in a table so because game drop players get players is a table of everyone in the game it is a for loop is a good way of looping through players so example was include if you want to give everybody in the game ten cash or you know if you want to give them a money at the end of a round a forloop is great if you want to teleport every player in your game to a certain location a forloop is great because you could be like the block character dot humanoid route parts dot C frame equals vector three you if you don't know what this means when you say doc character on a player object is getting there the character and when you say humanoid root part see frame when you move there humanoid root part you're moving a player basically so the humanoid root part is a central part in the player when you move that the whole body moves with it so it's like teleporting a player to a certain location so if I was to just get a position over here this is what this get this position if I was to put this position in here what would happen is it would teleport all the players into the game in a sari in that game to this position here which is at the end of the map and if we have a full server of people which we will we will assemble that right now let's so they'll load up a server of people whoops and my bad this needs to be a C frame not a vector3 in fact we can just say position because we haven't learned about C frames yet my apologies so if I just wrote if I publish this game I get loads of people in it you should expect everybody to be teleported to the side of the map okay so here we are in game with a few people that have joined me and we've got a countdown in the bottom left corner of when the for loop is going to start and hopefully it teleports everybody to the end of the map so what's going to happen is is going to get that table of players the game is going to give us that table which we have put in the for loop game DUP players call and get players and it's going to loop through every single player and teleport them one by one but it's going to happen so quickly but it's gonna look like everybody get teleported at the same time so 3 to 104 loop is going to run and boom we all get teleported to the end of the map so there you go that is what a for loop is a for loop loops through a table and it runs code on each item in that table now it doesn't have to perform there's enough to run code that changes that's able it could just print out a message like I show you at the start but we can also use those I and V values index and value we can use them to edit the table or to do things with the tables data so in this case we are changing we are using the data in that table so the players object which we've gotten from the table each item and we are moving the players characters so we're using that data from the table but you could also increment a player's cash value which is in their player by using the game curl and get players thing also you can use it to change properties of you know different objects like bricks like we changed the property of the material we also deleted the bricks so a full loop can be used for anything really if you're looping through lots of things at once and if you want to change lots of things at once you can use a for loop and it will make the code more efficient because you haven't got loads and loads of lines which are doing the same thing for just different objects because you put all those objects in the table you either create table yourself or you use something like get children or get players to give you that generated table which the game makes and we make use of those inbuilt functions like get children and get players which will return that table to us and we use those tables we loop through them and we're able to do things with with those tables and we can edit them and we can edit we can edit the tables we can edit their values we can use the values to access different things so very very useful stuff and it's something that you will be using a lot in roblox so is one of the most important things need to know just like if statements just like functions one of those things you're gonna use all the time you can't expect to be able to script the game without using for loops now if you are still confused please do put comments in the description I will most likely be making a followup video from this one where our answer your questions we might do a bit more on them in the future but this is all we need to know really this is pretty much what anybody whose scripts needs to know about a for loop and how to use them because you're not going to get any more advanced than that we're over the hardest stuff and it probably was easier than you thought it would be because everybody gets confused by those i/v values and what's the brackets for why why we using tables so again it's very important you learn those tables watch the previous video on tables very very useful video and I do recommend you check it out and wildin as well if you've reached the end here because 55 minutes very very long for a video but I know you guys do like the content when you get a nice long video I know you guys like to to watch those so I like making them as well so any questions you have put them in the description do try searching up on the Internet as well for for loops because there there's a lot of helpful stuff out there as well and if you look on the roblox website roblox developer hub as well there's some good examples I might link those in the description as well anyway thank you for watching do subscribe if you enjoyed the video do like the video if you want to see more of them again leave comments with any questions and you can click the album blocks logo in the middle of your screen subscribe you can also check out the rest of the series the thumbnail should be on screen now thank you for watching Cheers bye