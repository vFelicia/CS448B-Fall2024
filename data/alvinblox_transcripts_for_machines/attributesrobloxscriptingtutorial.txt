in this video I'm going to show you how to use attributes to set your own custom properties in roblo so we have lots of properties here all to do with different things about the appearance or behavior of an object but what if you wanted to store your own data about an object perhaps you wanted to store its health value or an object's price it's really really simple all you have to do is create an attribute so to create an attribute you can either do it manually or do it with a script uh I can click on this plus button down here and it would prompt me to add an attribute and set its type you can do that uh but personally I prefer to set them via script I mean it's up to you but let's just create a variable for a part I'm going to say gamew workpace part just to set it as my variable here and then I can say part set attributes I need to give my attribute a name so in this case we could call it health and I'll just set that to 100 and click on run select our little part down here and you'll see it has an attribute called Health which is now set to 100 now if I click on stop we can get an attribute so we can get the value of an attribute by saying part get attribute and we provide the name of the attribute and since we want to deal with this somewhere in the future we will probably store it as a variable so we now have access to the parts health and if we wanted to subtract from their health or change the health all we'd have to do is say part set attribute health and let's say we want to modify its current value we could just say health minus 100 okay because we've got the attribute already or we could just put part get attribute Health minus 100 either of these will work but what this will do is it will now deduct 100 from our health meaning when we click on run we should have zero Health on our part which we do there we go now that's not everything we can also detect when an attribute has changed so to do this we say part colon get attribute changed signal and we want to give the name of the attribute and then we can connect that event to a function and if you want to get the latest value of the health attribute we could just copy and paste our get attribute here and we can print Health attribute has changed to and we'll just set the health to a string so it doesn't error if it isn't there and this will print out when the attribute has changed and if we click on run and we go down to our attribute and we just change it in the properties panel you can see it's printing out that the attribute has changed if you wanted to get all of an object's attributes you could say part get attributes and this will return a dictionary of the attributes so you could then Loop through it you'll have the name of the attribute you'll have the value of the attribute like this and you could print out the name and the value just like this now I'll just set this to a string as well uh and we'll just set a couple more attributes I will just copy and paste up here yeah we could have a cost which could be you know 50 or whatever you could have an ID which you just might want to set to hello I don't know um but if we click on run you will notice that it's printed out all of our attributes here and finally I'll give you a quick example of how it works so let's imagine you had a function to buy an item okay and um let's say you just called it and you know and the object was called um staff I don't know and then you wanted to look up the object in replic at in server storage sorry okay and we'll just create our little staff item and we'll give it an attribute to call it price I'm just going to you won't you can't see this UI because it's not covered by my um recording software but I've just created a price attribute down here in the bottom right and we want to know whether the player can afford the item so let's just imagine they have an imaginary amount of coins and we're going to say if object get attribute price is or we'll say if coins is greater than or equal to the price then we'll print you can buy this item else we will print you cannot buy this item okay and we'll click on run and we have a little error it says attempt to call missing methods oh yes okay we will just instead of saying game instead of saying staff we'll say replicated storage. staff because it's an object and if we go to the output it says we can buy this item because we obviously have more than 100 coins but if we set coins value variable to 99 you'll notice that we can't buy this item because it's just done a little check so yeah that's just a simple example to show you how attributes can be used in a game really really useful for tracking stuff um and I recommend you give them a try yourself so let me know if you enjoyed the video uh like comment and subscribe as always and I'll see you in the next one