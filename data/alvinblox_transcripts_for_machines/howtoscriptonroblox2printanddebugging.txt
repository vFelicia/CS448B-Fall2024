hello everyone and welcome back to your second roblox scripting tutorial now in the previous video which i recommend you go and watch if you have not already it was on properties and in that video we encountered an error and the error was that we were writing some code which set the transparency property of a part which was named part in the workspace but actually we had then gone on to rename the part before we run the script and so it threw an error in our code now i'm going to show you how you can debug these errors because sometimes you'll be thinking well you know why is this script not working sometimes it might not even throw you an error message so how do you figure out the line where your script stopped working so imagine we've got lots of lines of code here all right let's just set this one to alvin block so it will actually work let's put this at the top here let's just do a couple of these right so in these lines of code one of them is not going to work so let's imagine we didn't know which one was going to cause the error what we could do is we could use printing so if we print we can print a message to this output window which i spoke about yesterday yesterday in the last video so we can print out a message and that message could be a number like 32 and it will appear in the output window here there you go can you see that it's printed out 32. now you can also print out text but like i said in the previous video you can't just go writing out text like this you know hello guys that's not going to work and then you've got these lines underneath because the script is confused so what you need to do is because it's text we need to wrap it in a string by using speech marks so if we use speech marks it goes pink that tells us it's a string and now if we run the code is going to print my text hello guys so this is just printing a message to the script so you can see the potential uses of printing you could print out to say that a certain line has ran so we could do a print saying the script has started running and we can do another one after the the second line to say executed line two and let's do another one saying we've executed line four so we've we've got past line four and we could do another one to say we've got past line six and let's do another one at the end to say we have finished running now you don't have to do prints you know they're not you don't have to have a print to make your script work this is just to um tell you to give you messages to make sure that your script has operated and ran correctly right you don't have to do this for every script i would only do this when we encounter an error so let's run the code again and see what happens right so we've got our error here and we can see that the script had started to run printed the first print and then it's set the transparency of the part alvin blocks to zero that worked fine no errors there and then we go on to line three you see it's printed out executed line two so we've got here and then uh it doesn't print out this one so it doesn't print out executed line four instead we just get this error so you can see it works in order so script started running that's line one then it's executed line two because it's got this far but then we've got an error on line four so the script has totally stopped so when you get an error the script just uh grinds to a whole it stops in its tracks so it doesn't go any further it's got to this line and it's thought right okay game dot game.workspace.part so i'm going to look in the workspace for an object that's called part oh it's not there there's no object called part in the workspace i don't know what to do now so it's going to just stop right there and it's going to say right that's it i've had enough and that's the end of this script so it's not even going to print executed line 4 it's not going to do any of this even though this code is correct because we had an error up here this script has stopped and you can already see why errors are such a problem in scripting because imagine if this script was your main game script which was like controlling your game loop so you had a murder mystery game and then you get an error right it's gonna just stop the game everyone's going to crash out the game and leave so errors are really bad and most of the time they're caused due to typos and in this case they are indeed caused by a typo because we called this part part instead of alvin blocks so if you see an error in the output window don't fear just try and use printing to identify where the problem happened if your script didn't work your script when you get an output message like this an error message it should usually say which line it fails on in this case it said line four and it gives us the script name it tells us that it was a server script we'll get into what server scripts are in a later video but it gives you a decent error message saying part is not a valid member of workspace you can interpret that as the script saying i looked in the workspace for an object called part but it wasn't there so i stopped running and now that i fixed the problem let's run the script again and here you go so again ignore this error here it's completely unrelated you can say you can see here the script started to run executed line two executed line four executed line six and we have finished running so there you go the script ran perfectly without any errors and once it gets to the bottom of the script with no more lines of code to go it will just stop running so this script is no longer running it says executed it is at the end of its life thanks for watching drop a like if this was useful to you don't forget to subscribe and turn on your notifications so you don't miss any future scripting videos and i'll catch you in the next one