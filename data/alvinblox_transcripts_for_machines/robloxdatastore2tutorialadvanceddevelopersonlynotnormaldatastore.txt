in this video I'm gonna be showing you how to use a datastore which is an alternative to normal data stores and hopefully it will prevent data loss in your game so let's get started welcome back to another video my name is Alvin blocks if it's your first time on my channel make sure that you've clicked on the subscribe button and you've hit the notification bar so you never miss out when I upload a new video so today we will be looking at this data store so I've got this deform post on my screen and I'm going to leave a link this in the description of the video because this is a really useful module and the point of it is it's it's similar to what its datastore it will save your data you can tell it what data to save and it's more reliable in case of data stores going down this data store system will make a backup of your data store to prevent data loss as you can read down here it says data stores will fail through the fault of roblox there's nothing you can do about it data store now has something to deal with it you can use backup API so up here you can see there's some backup in the API section here you can see this backup but where is it actually it's down here okay so backup set backup their backup it allows you to make a backup of data in case it gets lost which is pretty cool and it's also a bit easier to understand if you find data stores a little bit confusing so we're going to be going over this today how to use it a bit of an example setup because there are few people who don't really understand how it works so first things first you're going to want to go to roblox studio and you're going to want to firstly get the module now I'm going to leave a link to the module in the description of this video you want to take it as a free model and insert it into your game through the toolbox and then it should appear in the workspace here I'm just going to put mine in service script service now we're not actually going to be requiring the module in game we're going to be actually downloading it from from the web by saying require and then the asset ID but if you wanted to test this studio it'd be much easier to use the main module objects because there might be a little bit of a delay while the module is downloaded and it may not work but we'll get onto that later on so we're going to create a a system which will save a player's points and load them into the game when you rejoin so let's insert a script into service script service I'm gonna make it a little bit bigger and I'm gonna show you how this data store system works so first thing that we need to do is require the module so we can say local data store 2 equals require and then you want to get the asset ID of the module and this is actually in the dev forum post which we just shared so I'm gonna go get that for you all right here we are and we're just gonna copy this this require and we're going to just paste it back into studio and we have now got the module so all I want to do now is define a default value okay so whenever our player joins the game if they're a new player and we want to try and load their points but they've never actually played the game before we want to give them a default amount of cash for them to start off with so let's give them 100 cash so if you want to give them 500 you could change this to 500 it's it's up to you now how this works is you have to define a key in the datastore so we need to insert a player added event here so whenever a new player joins the game we can set up their key and we can check to see if they've got some data so we're gonna say it local points data store for this player equals and then we can just get the module datastore and we can just say inside these brackets we can say points because that's the name of our key comma PLR so this is the name of our key for this player now if you've done normal data stores you'll know that you'll have to have a key which is unique to each player so for example the key may look something like this so user and then it may have their user ID like this so it looks something like that well with this data store system the module actually you can actually name the keys the same thing for each player and the module will deal with making it independent for each player making it unique so we don't actually have to we shouldn't make this unique to each player it needs to be the same so we can just call us points for this player and all other players in the game their key can be called points and the module will deal with each key being separate which is pretty cool I like that with this module so we're going to insert some leader stats into the game you should be able to do this already but if not this is how it works so I'm just gonna just copy these in to make it a little bit quicker just insert some leader sites into the player and creates a points value so how this data store works it's quite different to normal data stores because usually we update a value so we could update a points value in our player and then whenever the player leaves the game we'll save that value so we so we saved the current value of the points to the data store well the difference with data store two is that from what I've from what I've been playing around with it what happens is you update the data store the value which is stored in the data store and then whenever this that value gets changed the script will update your points value so it's actually the data store getting changed first not the actual value which is going to be saved if that makes sense so we don't actually want to say you know points value equals datastore.get async as you usually would I'm gonna show you how it how it works so when we want to update players points for example we can either set the the points to a complete new value or we can increment their current value by a specific number so say they had 50 points saved and then we incremented 500 their points would change to 550 because 500 got added on to the current balance but if we if the points were currently set to 50 and we set 500 the points would just change to 500 set to a brand new value now the way that we do this is we want well I'm gonna actually insert part into the game and this is just an example so let's just make a part we're gonna make it red and I'm gonna insert a click detector into this part and what we're gonna do in this script is when this click detector has been clicked so we can say game and it works very sweet child part dot mouse not not so I mean click detector but mouse click connect function okay so this is an event which is going to connect this function and run it whenever the player clicks on that red brick we say player has clicked the red brick and we want to pass the player actually clicked this brick okay so player so we've got the player object now and we want to do when they click this we want to increment their currency by 50 so we want to add 50 on to their current points balance so instead of just saying player don't need a stat stop points dot value equal played up new stats are you just 50 for example or 60 all right 60 pips so instead of doing this and just updating the points value we want to actually increment their data store value which is which is being saved and then whenever this data store value gets updated we can what whenever dated we can change the the points value so instead of doing that we're going to get their key so we can say local points data store equals data store I never want to get their key which is points and we want to pass the player objects so we're getting the points key for this specific player and then what we're gonna do is we're just going to say because what we want to do want to increment their at their points we can say points data store so this will be the current data which is stored for this player that key we can say increments and inside of here what we can do is we can put a value inside of here okay so 50 so we want to increment it by 50 and we also want to put a comma and a default value okay so we can just say default value okay so in case there's no data there we can just make sure that they have a default value of 100 points otherwise we can increment that their data store by 50 points so that will have increased the saved data in that key by 50 what we need to do now is create a callback function which is going to run whenever the data store has been updated and inside that function we can update the players points value to to what has just been updated in the data store so we can do local function and we can call this function of points updated and we want to pass here I want to put in the brackets we want to put the updated value so this is what the data store is going to be worth now okay so this is what we want to update their points to so we can just say points value equals points data store and we can say get updated value so what we're doing here is we're doing a little get request on this data store so we're getting the data store with that key and we're saying whoops we're saying get ok and that's getting the latest value from that data store but if there is no if there's no value there what we can do why should we want to get that value from the data store and the default value if not if so if there is no data there we will pass a default value to begin with so we're going to say points data note once they point update and then we just want to give the default value just like this so the first time the player joins the game this this is gonna call the local function here and it's going to check to see if they've got any data and if they haven't we're passing through this default value of 100 so if they haven't got any data their points will be set to 100 so instead of having to check to see whether the data is it not equal to nil and then if it is then we can supplier if it isn't then we can supply it a default value we can just pass through the default value here and it does it for us now we want to we want to make this function trigger whenever the date has been updated so currently it's only going to run once when they join the game so we want to say points data store then we want to say curl on on updates and we can pass through points updated here points updates there we go so this is the function which is going to run whenever the points have been updated and if you look on the dev forum post it actually says it says on on updates adds a callback function used every time that the cached about you updates so basically when the value has updated in your data store we'll call that function and update the points value so let's just go over this script again and I can tell you everything that's going on so at the top we're getting the data store module no this is not our we're not actually getting the data store service will enter finding a default value which will be given to the player if they've never played before or if no data can be found we're then getting the data store for this specific player using the key points but we can use the same key name for different players because the module handle will handle the making it unique for each player which is pretty cool we're then inserting some leader stats and points so that we can see if they save and load and then we've got a local function here called points update and whenever this function is called it will get the latest value from the data store and set it to the players points value and you can see we are passing the argument of updated value and that will be the current amount of points that they have but if they don't if no date has been found then we can we can give them a default amount of cash which is 100 so if the get request does not find anything we'll just give them 100 cash and then we are just binding this function up to this this event here on update so whenever the data store has been updated we can call this and it will get the latest amount of points from the data store so what's happening is which we're not actually updating the points value we're dating the data store and then we're getting the latest value from that datastore and setting it to the points value so we're not updating the points and then saving it were updating the datastore and then loading the value from that datastore so that is how you do point saving with this module let's go and test it out in a game and that actually brings me on to a point here now if you're watching this video just after it is been released so in the first week maybe you actually won't be able to use this in studio it doesn't actually work in see you at the moment well it kind of does work but it just doesn't save the data when you leave because of some issues which is going to be patched in the next studio update so if you're watching this a few months after don't worry about this what you can do to make this work in studio is you can go into the module here and you can you can create a value in server storage called saving studio needs to be a bull value save in studio and it needs to be true and this will tell the script that you want it to save in studio as well as in game so you'll want for this you'll want to use the main module you want to insert into your game don't use require because because if you use require and you try out in studio it might not be downloaded fully by the time the players in the game so you could either add a weight which would be kind of like a hacky solution because the service may be slow but I recommend instead of using this ID for play solo you just insert the module to your game and say game dot service script service I cannot wait for child main module just like this and then it should work but if you just want to test it in a real game want it to work in your real game servers just use the the asset ID but beware if you test the module in studio and you save an item and then you test it in the real game you could override people's data so just be a bit cautious of that just to be on the safe side you don't have to test it in studio and if you want to turn on the same in studio you have to edit the mod so that is how it works let's go and test out in a real game and see if everything's all right all right so we're in the game now and you can see I actually have four hundred cash and not one hundred that's because I just joined the game and accidentally forgot to click on record and I started pressing the button so I did have one hundred when I started don't worry but we should be able to test that out because I've just asked some people to come join the game so all should be good with that so I'm just going to click on the button and can see that it is incrementing my datastore and then it's updating the it's updating the points for you as well you see some ones during the game and you can see they have 100 points let's see if they go and click the button and hopefully their points will increase or maybe they're afk but we're gonna leave the game in a minute and we're gonna see if our points are save so let's just keep clicking on this button and wait for some more people to join and hopefully it should save our data so if we look in the console and nothing should be going wrong nope everything looks good to me and you can see oK we've got some people clicking the button and what I'm gonna do is I'm gonna shut down the server let's just remember these guys and see how many points they had I'm going to shut down the server and see if it saved so I'm just gonna say stop clicking please okay remember your money amount okay we're gonna shut down the server and we're gonna see if they have the same amount of data so I've got 1,400 now 1450 let's leave the game rejoin and see if it loads my money all right I just shut down all service so everyone just got kicked from the game let's see if their money got reloaded there we go I've got my 1450 Sonic Lua has got his 52,000 and got on lightning has got 850 so at the minute everything looks good and auto whitey has got his 46,000 back as well so it's safe for everyone that is pretty cool how it's saved with the datastore too so you can see it works really good and it should work with a ton of players in the game as well there are quite a few games which use this datastore in in their games was quite reliable and so I recommend using it's really good so whenever you want to increase a player's amount of cash say for example if they put a developer product or they won the game instead of saying player dot points or value you want to get their data saw and you want to increment it okay so instead of of updating their their value and waiting for it to be saved you want to update your data store that is that is vital and you also don't want to save this via player moving because the module already already does that and if you did it again it might mess everything up so don't worry about that just increment the value whenever you want to update their currency do not do not update their points value and you should be all good I will be putting up a few more videos more advanced on this topic so make sure to leave me a like so you know that you want to see some more I'm gonna leave a link to this module in the description of the video or you should require it I'm gonna leave a link to the D form thread as well so you can have a read of that this was a basic tutorial on how to make a point system I'm gonna be made more videos on the system soon it's really cool it's by camp Karen who made it I think that's how you pronounce the name there's also gonna be like a tips link if you want to send him something as a thankyou if you use this system so check that out thank you very much for watching if you like this video please click the like button make sure to subscribe and I'll see you in the next video