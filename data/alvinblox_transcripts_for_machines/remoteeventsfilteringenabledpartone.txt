hello this is a video on how to script with filtering enabled on roblox by using remote events and remote functions so what is the purpose of filtering enabled while filtering enabled is used to prevent people from hacking your game let me give you an example right now so let's imagine I'm a hacker and I'm in a game what what could be done by hacker is a hacker could run some code on their machine using the thirdparty program to do something malicious to the game so for example they could remove everything in the map okay if you look in the top right corner of the screen I've just set up a mock command bar to show what they could potentially do if it was turned off so I could say game don't workspace and I could play all children ok and that will wipe out the map for all players in the game and so someone would have just hacked the game and has just got rid of all the fun ok but what the fill tool enabled does is instead of deleting it for all players if we go back in again and we run the same code a filtering enabled is now turned on if a hacker decides to try and hack the game and deletes the base plate Oh deletes everything in the game in the workspace it will only delete for them ok if we go into the server alright and this will this is what it will look like for everyone else so for this player the the world is gone but for everyone else in the game and on the server everything is perfectly fine now this is because uhm filter enabled whenever a player tries to alter something in the game say in the workspace or tries to delete something or change something or a property of something the server will block any requests so anything that a player tries to do to change the game will be blocked by the server and only they will see whatever they try to change so in this case they try to delete everything and only they see that only they see the result and the game is unchanged so Feltham enabled it helps to protect everyone else in the game and it means that people that hack the game are only hacking themselves and ruining the fun for themselves so that is a quick explanation of philtrum enabled but filter enabled can create some problems okay so because filtering enabled basically means that a client basically by the way a client is a player in the game and the server is a massive computer which is owned by roblox and it runs all the scripts and and runs the game and clients connect that server when they join a game and children abled because it blocks any players from changing anything in the game it means it breaks our local scripts ok I've got a script here in a GUI a local script and when this text button is clicked it will lift this barrier which is in the workspace okay now this barrier all the parking gates is stored in the workspace which is on the server ok but our lift barrier GUI and this text button the local scripts which runs the code this code is running in the local script so it's running locally on my computer so it means that my client whenever this button is clicked is going to try and make a change on the server for all of the other players by trying to lift the gates so if we go and try this out and try and lift the gate and see when I click the lift button it says clicked so it's printed clicks so we know that the event has fired and only and the button script is working fine but you can see the barrier isn't lifting and that's because the server has seen that we're trying to raise the bar which is in the workspace but because filtering enabled is turned on and what it's not turned on here but I assure you it is forced by roblox that's just how roblox games work nowadays because filtering enabled the server has blocked us from making any changes to the to the gate or to to the rest of the game so photo enabled it creates a problem it stops the hackers which is good but it also breaks a lot of scripts and especially old scripts in roblox games and but there's a way to fix it and that is remote events so remote events we set them up beforehand before we you know we make our games live and we set them up in studio and what they do is when we click the button we can fire our remote event it's kind of like a man in the middle I hear like a messenger and when we click the button we can fire our remote event and the remote event is stored in replicated storage ok so I'm just gonna insert a remote event here we store the remote event in replicated storage because replicated storage it can be accessed it can be viewed by both the server and any clients ok so we can see the remote event on on our local GUI here which is on our client we can see it and we can fire that remote events but also once we fired it we can pick up that that remote event request on the server and as I said the server has control over everything in the game so the server has the power to be able to lift the barrier ok because as I said client if a client tries to change it they get blocked in case they're doing something that's malicious and we don't want to hack the game so only the server which is owned by roblox and runs all of our scripts which we make in roblox studio can can change the game world but if we have a remote event and we fart and we fire it from the client which is locally on our computer we can pick it up on the server and then whenever we get that request from a client we can run predefined code which we've already written in server scripts so in our server script here in cell script service we can set up an event listener which is going to basically wait until our remote event has been fired and once we have fired our remote events we will pick it up okay on the server script and then we will run code immediately after it's been picked up to lift the barrier okay so what we'll do is we'll head into our local script here and instead of trying to alter the parking gate we're just gonna copy this code for now so let's just cut it out of this script and instead we'll say game dot replicated storage where our remote event is stored dot remote event and now to fire this remote event so fire basically means send a signal and trigger it so that we can pick it up on the server side we're gonna say fire server so a colon and then fire server okay now what this is gonna do it's gonna fire that remote event off and now that we fired it we can set up our event listener so the listener you should be pretty good with events by now this is quite sir this is intermediate advanced scripting so an event listener will just listen out for until that that remote events being called so we can say game's replicated storage dot remote events dot now it's called dot on server events okay so whenever you're firing something from the client and you want to pick it up on the server you use on server event if it's the other way around and you're firing something from the server because you want to change something in the player GUI and which you can't view on the server then you have to use on client event but we're going to be dealing with on server event for now you'll say connect function and we'll have our arguments here as well which get passed from the client to the server so when we fire this phone from a client the server will which player should get this remote event okay it's automatically passed as an argument so we have a argument of the player that fired okay so I always include player as your first argument because automatically sent over and if you're gonna have any other arguments such as I don't know one two three okay you always when you're doing your event listener you have to put the player argument first then you'll have your one two and three arguments which come after it if you need it so we'll just get rid of those and you don't need to put player in the brackets here for fire server but two in our event listener we can now just paste the code which will lift the barrier I'm going to copy this variable as well which we had and now when that remote event has been triggered we can just walk print as well remote event picks up on the server and that it will lift the gates like this okay so what we've done just to recap is we have we have created an event in the local script in this GUI because the local script is running on our computer on our clients once it's been clicks we're going to fire a remote event which will basically send a signal to the server and it will trigger some code which is already written and we've got our event listener here which when the event has been fired we pick it up and we will run any code inside of here okay and again the remote event it's in replicated storage because you can see it from the client and you can also see it on the server okay but if a client tries to change anything replicate a storage again like the workspace the things that they change if they do something malicious it will only change for them and no harm will be done so let's go back and play the game again and we're gonna click lift the barrier and there we go you can see the blue in the output signifies that it was printed on the client that it was clicked and then it must have fired through a motor vents and then on the server we picked it up and it obviously ran the code to lift the barrier let's do that again and we go there it goes up it goes and it's gonna wait five seconds and it's gonna come back down again so there we have it a quick little demonstration on filter enabled and how remote events work in the next video I'll go over how remote functions worked let me know how you think this video went I think it went quite well first video in a while more coming soon and I definitely want to do some more filtering enabled video so make sure you drop a like and subscribe to the channel if you are excited for those I'll see you next time thanks for watching