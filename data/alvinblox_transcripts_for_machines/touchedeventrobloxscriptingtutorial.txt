how to use the touched event to detect when a player steps on a part in Roblox so firstly we're going to insert a part and then we'll just move it over here and we'll insert a script inside of the part the script doesn't have to go inside of it but just for Simplicity we'll put it there so in that case we will have to reference the part by saying script. parent. part sorry script. parent s just script. parent uh and then we'll say script. par. touched code on connect function and this will now fire when something steps on the part or touches it now this could be anything right it could be another part that just Falls onto the part for some reason uh it could be the spawn it could be the base plate it literally could be anything so how do we work out whether this is a player well we know that the the part that touches this main part here is going to get passed to this event okay so we could call this other parts you might see it sometimes referred to as hit because it's the thing that hit the part but you can name it whatever you want right but we're just going to call it other part and this is definitely going to be um a part okay this will only fire if another part touches it it could be a body part of another player okay it could be a part inside a model so we've now got the part how do we actually detect that this is a player well we know that that if it is a player if it is a body part of a player let me just show you here let me insert a uh rig into the game so we have this character here this is a typical Roblox Avatar and let's imagine that the right hand okay this blue right hand is the thing that touches our part well if this is a player we know that the player has a humanoid in their character so this is the first thing we could do we could say okay so does the model of that character if other parts parent so we've now got the model if it has a humanoid then we know it's a player or do we because this would pass as a player in this case but this is just an NPC it's got the same makeup as a player but it's a static NPC we're just assuming that this is a real player because it's got a humanoid inside of it so whilst this is a good way of working out if this is an NPC or if it's a player it's not the best way so let me show you another way and that other way is called get player from character so there's a builtin function to Roblox which lets us pass a character's model object and if a player exists for that character it will return it to us so we'll create a variable because it's going to either return the player or it's going to return nil so we'll just store that as a variable we're going to say game do players colon get player from character and as you can see it says Returns the player whose character matches the given instance or nil if one can't be found so we're going to pass other parts. parent okay and then we can say if player then and by the time we get to here we know for certain that a player exists and that a player has touched our part so from here you can do whatever you like okay you can then get that character by saying player. character alternatively you could say other part. parent but since we've got the player we can just say player. character and then you can do whatever you want so if you wanted to kill the player for example you could say character uh do head col on Destroy and because that disconnects the head and kills the player so let's just give this a little test let's click on play here and here we are now I just want to show you look what happens if let's just keep the output window open as well just in case we get any errors but look look what happens when I put already Pro onto my part okay so there's now an NPC touching my part but nothing's happening the the NPC hasn't been killed because it is not a real player because the script attempted to do that get player from character check and it returned nil because if you look in the players's service there's only my player and this is the distinction between a player and a character because a player is what is stored in the player's service however the character is stored in the workspace so the get player from character is looking for a player in the players service which has the character connected to it and since this is an NPC it's not a real player it has no objects in the player's service however if I try and step on this part because I'm a real player it kills me okay and just ignore these errors here uh that's just because it is firing multiple times okay when I step on this part it's firing for every single body part that touches this part right it's for my lower legs my upper legs my hands might touch it and it's touching it over and over and over again but after the first time it's touched well the head has already been destroyed so it's not there anymore hence why is returning an error which says head is not a valid member of model but if you wanted to prevent this you could do something called a debounce and that essentially lets your function here only execute the code once every couple of seconds to prevent it from spam uh executing and printing all the time or throwing errors and to do that we just create a variable called debounce we'll set it to false for now and then in the function we can simply say um in fact we do it inside our if statement because by that point we know it's an actual player and we'll say if debounce then return end and that just prevents the script from going any further if the debounce value is true so this condition if you just say debounce that just means okay if it's true so after that we have to set it to be true and then down here we can just do a simple task. we of say 3 seconds set the debounce to false again and once that debounce variable turns false it will it will let us run this code again because the next time the the the Brick is touched the debounce value will be false so this condition will not run so the the function will not return it will carry on and it will let us kill the player so let's just head straight back in and try this one more time and I'm going to step on the brick and you can see it's killed me once it's executed once it's not tried to run that code again but since 3 seconds have now passed it will let me step on it again so that was a brief introduction on how to create a part that you can step on using the touched event in Roblox studio and also a brief look into get player from character and also DB bounces if you found this video useful please leave a like Please Subscribe let me know any more videos you'd like to see and I'll see you in the next one