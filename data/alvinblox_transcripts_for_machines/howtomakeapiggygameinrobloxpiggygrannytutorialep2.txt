welcome back to episode 2 in my piggy series now I just want to say that if you've been struggling with the first part or maybe in the future episodes your game doesn't work for some reason probably what most likely due to the fact that you have typed it out incorrectly and you haven't noticed that you have made a typo then I have created on my website a FAQ frequently asked questions section I'll leave a link to it in the description and I'll probably be answering some of your questions with this link to the page because there's some great answers to the most frequently asked questions such as my status bar isn't working and I can confirm that it does work because I have actually followed this tutorial myself and yes it does work so make sure that you have put your status value in replicated storage and you've given it the name status make sure that you are calling your intermission function from your game logic scripts that you've supplied the number of seconds to count down from and you have not put a space between the function name and the brackets afterwards you also need to make sure you've got the capitalization correct so for example a lot of people have been saying status not value but in lower case you can't do this you have to have a capital v for value and this is the sort of thing that the script it might not say that you forgot to capitalize something so you need to make sure that you've got your capitalization just as I have done it in my video okay because a lot of people will just go straight to the description say it didn't work when it does work and they've just not capitalized something or they've made a typo but they haven't realized it so you really need to check your script over to debug it but do check out this page on my website for more information on how to fix those books if you've got if you've got one I'm just trying to give you the best learning experience possible so that you can create your piggy game with ease I know there's also a lot of people who want to know how to make their custom piggy avatar I will be uploading a separate video showing people how I made the piggy character but today we will be choosing the piggy we will be loading in that avatar to the Piggy's character so they look like the piggy and also teleport them to their little hideout room before the round starts then teleporting them into the round after twenty seconds so they wake up and finally we will activate the doors we will make the doors work so that you can click them to open them up and move around the map the reception to the first video has been phenomenal you guys have been loving it we've got nearly 20,000 views in the first 24 hours which is absolutely incredible so if you are enjoying the series so far don't forget to like the video and click the subscribe button and much appreciate it now let's get straight into the second episode so if the player does not have in menu in their character or in their player objects then we're going to insert that player their player object into the contestants table and now after that for loop is finished running our contestants table should be full up of all of the players that are ready to play so it could look something like this so we've got three players player objects not names because it's actual objects in game door players so Alvin blocks selects key and nacho 88 there are three players for example that are in the game now we can choose one of those players to be the piggy so let's create a function inside the round module and we're going to call it choose piggy so again you've seen it before function module choose piggy and then the parentheses on the end and then the end at the bottom now very very simple what we're going to do is we're going to pass to this function a table and that's hey what was gonna be the contestants so let's just call it players here you can call the argument whatever you want is the data that is path to that argument variable there so let's just call the function and say round dot selects sorry choose piggy and then we're gonna pass the contestants table which now will be full up with all the players in the game then let's go back to the round module and now because our players are gonna be that contestants table we're gonna do the same thing again that we did with the map so we're going to firstly create a random a random seed you can call it whatever you wanna call it random objects rendom new waiting another seed and then what we're gonna do choose a random player to be the piggy so we're gonna choose a random item out of that table so a local chosen piggy equals the players table and then we're gonna select with the square brackets again random object next integer and it's gonna be between 1 comma and however many players there are so hash plug players and that's going to pick a random player a player object so it could be for example album blocks game that works with to album blocks there there player objects so then what we need to do is need to return that object back to the script so return chosen piggy and we've now just chosen our piggy and we're returning their object back to this function so we have to have it as a variable so local chosen piggy let's say local chosen piggy equals round dot chosen picky and that's calling the function to choose around a piggy we're passing the contestants and it's returning to us the object of this chosen piggy so chosen piggy is going to be an actual player in the game that is in that contestants table now we want to separate that piggy from the other contestants because for example we want to teleport all of the contestants to the map for 20 seconds before we teleport the piggy so we need to separate them so what we're gonna do is we're going to remove the chosen piggy from the contestants table so the only people in the contestants table are gonna be the people aren't the piggy ok the other players so we're going to use another for loop we're going to loop through all the contestants in the rack in the game ok and so for IV in pairs and we're looping through the contestants if the player object V is equal to the chosen picky so if if the current player that we're looping through is the same player as the chosen piggy that we just chose then we're going to remove from the table contestant so we're gonna remove the object that's the index I because remember I said the tables have indexes so the first objects can be index 1 this can be indexed it's gonna be index 3 so we're gonna if we loop include the third player and we found out that they're the piggy then we want to remove from the table the third object so I is going to be 3 so we're removing the third object from the contestants table using table don't remove but so again what we're going to do is going to loop through all the contestants in the game so this time we're not looping through game drop players get players we're looping through the contestants because we've now got our list of players who aren't in the menu so we're gonna say 4i comma V in pairs contestants we don't need to use get children because it's a natural table object whereas get players will convert the players into a table itself and because the in pairs loop will only loop through a table so think of it as we're looping through all of these players here in this table this is an imaginary table and the players in it could be different of course so I is gonna be their index because each object in the table will have its own index like its own number so this is the first object so I would be one this is the second object this is the third object so the index is just the number of where the the object currently is in the table so this would be the second item and V is the value so it would actually be game dot players to have in blocks or game to play so let's key so for that player which is gonna be V we need to see if V is equal to the chosen piggy so if they are the piggy then we're gonna remove them from the table so table don't remove we're going to remove from the contestants table the their index so if they're the third player we're going to remove from the contestants if they're the third object in the table we're going to remove the third object from the table because you can't just remove a certain person from a table you have to remove that their index so that will remove them from the table okay so we've looped through all the contestants check to see if they're the piggy and if we have found the piggy in the contestants table we're removing them because we only want the contestants that aren't the piggy to be in that table because we've now got our own reference to the piggy in this chosen piggy variable okay next we're gonna dress up the piggy to put them in there nice piggy outfit so we're gonna create another function in the round module it can be very very simple so I'm calling it module dress piggy and I'm then passing through the chosen piggy because we need their player object so that we can change the character what we need to do is firstly get that character for the piggy out of service storage so local character equals game loss server storage I'm gonna say dock piggy dot so I sort clone cut on clone like that so if you want to have a different picking outfit then you will need to source your own piggy player sorry piggy like NPC or yeah character like this I will have a video explaining how you can create your own P character and how I made this one check the description for bats so follow that video if you want to learn how to make your own piggy but we've got this template one which just look like the piggy that I showed at the start so we're cloning that NPC or that character Alice's server storage then we're gonna give it a name so character name I'm going to set that to the name of the chosen piggy so if the chosen piggy is Alvin blocks this character is going to be called album blocks then we're gonna have to set the current piggies character to be this new one here okay this new one that we just created as a variable and when we set the character is basically setting up all the movement or the camera stuff so that that character can move okay and then we say character dot parent equals workspace the order that you do this in is very very crucial because you have to firstly clone it and change the name then you have to set the player's character to be the new piggy character so that all the camera scripts and everything can can go in there and start up and then you put the character in the workspace so it's kind of just respawning you but ask the piggy this time because we've changed what your character looks like and we changed it to this piggy model and we could create a clone of it so that we can use it again now that we've done that we can call it from the game logic script so we can say round dot dress piggy but we need to actually pass through our chosen piggy player okay and this will dress the piggy up okay watch this we're gonna go into the game we're going to test it out let me see if it works okay so it's this next round starts in one second zero seconds and it has to be me because I'm the only player in the game but it has set my character to be the piggy okay and the reason I found out the map was respawned me and it didn't actually teleport me anywhere it didn't put me on a normal spawn that's because we need to teleport the piggy to be somewhere to actually go to their little hiding room and that's what we're gonna do next so we're gonna create another function inside the round module so we're gonna say function module dot teleports piggy and again you need to pass through the piggy that he's going to be teleported so we'll just say player the player that is going to be teleported we could have called them piggy but doesn't really matter so I'm going to say if player got character because we first need to check that they have a character in case they've left or they've died or whatever in the character has been destroyed for some reason and then basically but by the way player characters like their their model in the workspace so then we can set their walk speed to begin with because we want to make them slower than the other players so player character got a humanoid that walk speed equals 1416 at the default so the other players will have a walk speed of 16 whereas the piggy will be a little bit slower and then we're gonna we're going to give them the bat I'm gonna give them their bats which they can hold so local bats equals game dot server storage dot tools dot piggy bats if you have changed your bat make sure that you've put the name here something different my one is by default called piggy bats so make sure that you've got it right if it says something like piggy bat isn't a valid member of tools or tools isn't a valid member of server storage make sure that you've actually ungroup the kit correctly so you've got your folders like mine so you've got the tools folder in self storage so game dock service or tools dot piggyback Curran clone we want to make clone of that bats and we want to put that to cloned bats but parent we're gonna put it into their character when you put a tool into a players character like this it makes them immediately equip it instead of putting it into their backpack if you put it into their character they will immediately start holding it then we need to actually teleport them don't we so we're gonna say if player character cut on find first child humanoid root path just to make sure they've got they've got it and because in some cases they might not have a humanoid root part it's basically a part in your character which you can change the position of and that will move the entire player play a doc character dot humanoid root part dot C frame what we're going to do is we're going to select a random spawn sorry no no not we're gonna put them into the waitingroom aren't we now what we need to do is we need to set the C frame which is position with a rotation of the humanoid root part to be inside this waiting room where the piggy will wait whilst the other players are in the round so inside of this waiting room I've created a part called piggy waiting spawn so we're just gonna set there C frame to be the same as this part so they get teleported into this room so back to the round module we're gonna say player doc character a humanoid root parts dot C frame equals game dot work space dot waiting room make sure it's called waiting room you don't change the name of it else it won't work dot piggy waiting spawn dot C frame but then just to make sure they don't get stuck stuck in the ground we're gonna position them about five studs off the ground or above that part so game dat works place that waiting room drop piggy waiting swarm dot C frame prospector three dot new zero comma 5 comma zero that's going to add five studs in the upwards direction to that that C frame position so they're going to be teleported to the C frame please firm is basically position the position value with a rotation of that spawn and they will get teleported there so let's go ahead and test it out we're gonna go to the game logic and we're going to say round dots teleport piggy again we're going to pass in the chosen piggy variable because that variable is the player that has been selected and we can always reference that so we know who the piggy is let's go ahead and test it out alright five seconds four seconds three seconds two seconds one second we should get dressed as the piggy and boom look at that we are put into the room with our piggy bath which is automatically being equipped awesome and of course if you want to learn how I made this piggy batt and scripted it you are going to want to check out my video which I'll put in the description on how to make the bats we're also going to need to animate this bat so that when you click you'll be able to hit people with it but the only limitation is that we can't share animations with you guys so we need to teach you how to make your own animation probably do that later on but at the moment it will work fine without an animation okay we're making great progress with this PE game so far so if you're enjoying it please do leave a like on the video and if you haven't already please do subscribe to my channel for more roblox scripting videos because this this series took me ages to create I worked out for seven days straight making this game from scratch for you guys rigorous testing and everything so I really appreciate all the love and support you've put on the video so far much appreciated so next thing we're going to do is we're going to teleport all of the other players all the contestants into the map so to do this we're gonna need another function in the round module and it's gonna be called teleport players by the way you make sure that you've saved your project so far by pressing ctrl s or command S on a Mac just in case anything happens and your project might get destroyed or not saved now you can see created the function module teleport players and I've got two arguments I've got the players so it's going to be a table of all of the contestants that were going to need to set to teleports that we're gonna send we also need to send another table which is gonna be the map spawns so the map the chaps that we've loaded is going to have a folder inside of it every single map needs to have a folder called player spawns with parts put in different locations where you want a player to spawn okay so we're gonna need to send a table of all of these spawns inside of that folder to our function and we'll send that when we call the function very very soon but just imagine that the map spawns is a table full of parts part objects which we can set the players humanoid route policy frames to just like we set the piggies humanlike route Part C frame to that teleport room we're gonna set it to a random one of those map spawns so again this is very simple we just need to loop through all of those players using a for loop so for I comma V in pairs and in fact by the way did you know that the I and V values don't have to be I envy all the time you can change them to whatever you want just know the first value is going to be the index the second one however is going to be the the object that you're looping through so in this case the player so you can call it whatever you want so you call it player if you want to do so for I comma player in pairs players do cuz we're looping through that player's table we don't need to get children because it is couldn't get table object and then we're gonna see if they firstly have a character so if they have a character in their alive then let's create a variable for that character so you don't have to keep saying player door character all the time now we need to check if they have a humanoid root part so if character come on find first child humanoid root part I said before a humanoid root part you use that fine first trial just in case it isn't there and it won't cause an error but if they do have a humanoid root part then we can teleport them of course but before that let's just firstly set their walk speed player character humanoid dot walk speed equals 16 if you want the players to have a different walk speed make it a higher or lower value but I recommend 16 which is the default anyway it's just good to set it to 16 because if you have been the picky last round then we'll set you back to default speed then we're gonna change your humid route Part C frame so player got character got humanoid route path dot C frame and this is where the magic happens so remember I said that map spawns it's gonna be a table of all of the different spawn parts so we can just say map spawns and then in there in square brackets again because we need to choose a random one so a random number between one and however many there are we are going to create that random object again so we're gonna be a little bit sneaky and we're gonna firstly copy a little bit of code here I'm gonna copy this this round next integer let's put it in here we need to create our around our random seed again don't we serve local Rand equals random Don you okay so now that we've got our Rand which is just crazy we can do next integer to choose a number between one and the number of not chapters but maps spawns okay so we're choosing a random map spawn part here and we need to get the C frame property of that spawn don't we because it's the position of that spawn plus vector 3 dot new 0 10 0 okay so this is just placing the player 10 studs above that spawn part and the reason it tends to us and not 5 studs is just because I've tested it and some players would still get stuck in the ground whereas the piggie wouldn't but you can mess around with these values it's just a number of studs that you're placed above the spawn point which you will fall down onto so you don't get stuck so that will teleport all of the players to our random spawn in that spawns folder ok we now just need to call this function from the game logic so we can say round doctor teleport players and we just need to pass in the contestants to begin with but also the actually the folder of spawns don't we so to do this very simple we just need to get our cloned at chapter so clone chapter and we'll say dot player spawns get sure okay so if you get an error it's probably because and it's to do with your teleport place it's probably because you haven't added this player spawns folder into your map really important that you have this folder into each map called player spawns has to be spelled correctly with the capitalization with all of your player spawns inside of here make sure they're anchored make sure that can collide is set to false on them so you can't collide with them and it's also recommended to make them transparent what we can do is we can do a little check say if cloned chapter cut on find first child player spawns then just to check if you have that folder in there we'll put this teleport players line in there and we'll say else warn fatal error you didn't add a player spawns folder into your map end and if you have if you've forgotten to put your player spawns into your map and you start playing it and if you check the output and it doesn't find this place born it's gonna print out that it couldn't find the player spawns and that would prevent it from airing this is called error handling it's useful in programming where if you if you might make a mistake somewhere you think so you could make a mistake where you forget to put the player spawns folder in there instead of it causing an error we can check to see if that folders there first using fine first child which won't error if it doesn't find it but if it because if it doesn't find it then this condition will be false so the else statement will run and so it will warn you that you didn't add a player spawns folder into your map so you can just check the output and it should help you with your debugging if you find an error but just make sure you have that player spawns folder added in there and by the way just because of testing I'm going to change the length of the intermission down to eight seconds just so it gives us enough time to get into the game but also so we have to be waiting all the time that we test it for a new round to start I remember don't or if you have these errors in the output is because we haven't coded those parts yet so round starts and zero seconds and obviously I'm not gonna get teleported because I'm the piggy I won't get teleported to the map now if you want to test the game with more than one player so two players for example if you want somebody to be the piggy and somebody to be a player to test what it's like for both you will want to open up a test server now a test server will open up a server window and also two players player 1 and player 2 if he had up you can have up to 8 players and the more players you have the more players you're controlling but it can take more of a strain on your computer now if you are going to do a test like that I recommend putting the intermission back up to a number like 30 because it can take up to 20 seconds to load this server and by which time you only have 10 seconds left on your intermission so let's open it up and let's control a piggy and also a player to see what happens to both of them because you're gonna want to be testing this game a lot but you're also not going to have you might not have enough people on hand to keep testing and publishing all the time so here you can see we have player 1 and player 2 so one of them will get chosen to be the piggy that a piggy will get removed from the contestants table and then the other player or players if you have more than two players would get teleported to them to the map brilliant so the player on the Left player 2 has been teleported through a random spawn in the map whereas the piggy has been teleported to his little hideout whilst we whilst they get started now obviously we haven't scripted the round yet do teleport piggy back but that's something that we'll be doing next the really exciting part and by the way what a lovely map this is smasher like if you're enjoying it and Jenna forget you guys are getting this map for free so shout out to my friend Linda for building this map much appreciated okay brilliant so we're almost ready to begin scripting the main round loop but before that we need to create a function which will insert some tags into the players so that from other scripts just like the in menu tag which was able to tell us whether a player was currently in the menu or not we need to insert tags for the contestants and also the piggy so that we can check in other scripts where we don't have access to the contestants table or the chosen piggy variable because remember those variables in that table is only at accessible from the script so we need to be able to tell if a player is the piggy or is a normal contestant from other scripts for example in the piggy batt script you would need to tell whether the person that you are touching and that you've clicked with your bat is a is a contestant or whether if a person steps on a trap is that player the piggy if they are then we won't slow them down but if they are a contestant we want to stop them right in their tracks so we need to insert a tag called piggy into the chosen piggy but we also need to insert a tag called contestant into the other contestants that are not the piggy but are also playing the game so to do this we're going to go back to the round module where we create our functions and we're gonna create a function called module dot insert tag okay so drop a line let's get this end in here and in this function what we're gonna need to firstly pass through the the table of players that will get the tag so we'll just say I'll say contestants although it could when we do it for the piggy we will just pass a table with just the piggy in it okay so that's going to be the table of players that will get the tag and then we need to have the tag name that we're gonna give to them so when we call the function not only will we supply the table of players who will get that tag we're also going to supply the name of the tag so that we can specify whether we want the tag to be called piggy or contestants all that's left to do is to loop through every single player in that contestant table and give them the tag and that's similar to what we've done before so we've got another for loop here so for I comet player in pairs remember I said the player value can be whatever you like you used to be V of course so we're looping through the contestants table and then for every single player in that table we're firstly going to insert a user instance not new to insert a string value into the game we're giving that tag we're setting its name property to the tag name argument and then we're putting the tag inside the players object in game dot players so other scripts will be able to see if they've got that tag just by looking at their player objects and doing a quick find first child check to see if there is that tag inside their player and if they have the Piggy tag then they'll be that they will be called uno the piggy if they have a contestant tag will know that they'll be the contestant and obviously they will not have both will only give them one tag and that's what we're going to do next because we need to fire this we need to figure this function we need to execute this function from the game logic script so very very simple we're gonna say round dot insert tag firstly going to call this function for the actual contestants that aren't the piggy so we'll just pass the contestants table that we've got in this game logic script which we've already inserted the players into up here we can pass through those players and then the second argument as I said will be the name of the tag and that's going to be contestant okay so not contestants contestant and it's going to be a as a string because it's text so we've done that's for the contestants now we need to do that for the piggy so just the same thing again round dot insert tag but this time as I said because we need to pass a table that's the first argument because that's what we manipulate in the round module we treat it as a table we need to firstly create a blank table but inside there we're just gonna put our one player which is gonna be the chosen piggy because we only want to give the piggy tag to that one player the piggy and their name the second argument the name of the tag just gonna be piggy now if you go and play the game after your intermission I'll just put that make that five again what if you looked in the game dot players and you looked at your player you would either get the contestant tag or you would get the piggy tag okay so you can see that a new round is starting in two seconds and if we look at the Explorer panel on the left in the server window you can see that in player 1 the piggy tag was inserted into their player only contestant tag was inserted into player 2 so let's imagine that we are looking at a we're in a different script we need to quickly check to see if a player is B piggy or whether the contestant well we can easily tell can't we we can see that player 1 on the right is the piggy and a player 2 is the contestant but we've got those values which will tell us whether they are the piggy or not without even having to look in the game and obviously because of the scripts they can't just look and tell whether you're the piggy or not that's why we need to have those tags to tell the other scripts whether you are the piggy or not and it's worked perfectly so all of the contestants will get the contestant tag and only the piggy is gonna get the pig attack but they're not going to have both because we are giving the piggy tag to that chosen piggy and then all the other contestants that are still in that contestants table will only be getting the contestants brillian we've got to the good part now we're about to start coding the actual round script so which will begin the round and then we'll have all that good stuff to count down from 10 minutes the releasing the piggy after 20 seconds and the detection for things happening so detecting when there are no players left or when everybody's escaped so that's what we're gonna do right now and again we're just gonna call a function from the game logic script which will kick off the round and we'll do all the coding inside of our round module so let's create a another function and this function is going to be called function module dot start around okay so let's at the end in here and there's a couple of arguments we're going to pass to this function we're firstly going to pass an argument giving us the length of the round so that's going to be the length in seconds it's gonna add a little comment there so we remember so we've got the length we're also gonna need to tell this function who the piggy is because we're calling this function and inside of this function we might need to what we will need to be checking things like is the piggy alive you know have they died etcetera so we're gonna need to pass that piggy through to the function because obviously this module this function is running inside the module script and we can't just access the variables and such that we declared in the game logic script so we have to pass them to the function okay and the last thing that we're going to pass to the start round function it's going to be the map the map that we're currently playing with so chapter and map okay so what we'll do is firstly we're gonna create a for loop and if you don't know what a for loop is we used it in the intermission a for loop is going to count down from the length so it's the length or was ten minutes well ten minutes we know is 600 seconds and because it's 60 seconds times 10 so we're gonna count down from 600 to zero and we're gonna have a wait one second in that for loop and it's what's gonna do is gonna count down all the way from 600 to zero and when it hits zero it's going to end so it's perfect for things like game loops so to create this for loop is very very simple we're just gonna say for I which is our countdown variable equals and we're gonna go from the number that we're gonna count down from which is gonna be the length we want to count down to zero and we want to decrease by one each time we want to decrease I by one every single time and I is going to be the like the time left long as they do and now what we can do is we can change the status remember the status up here which when we change it it gets the GUI status bar changes to its value we can set that status object's value to be the the length so we could say I now what's would do is it would go six hundred five nine nine five nine eight five nine seven five nine six and it would count down from 600 which is a big number but what if we wanted to count down like an actual clock saying you know ten minutes sorry nine minutes 59 seconds nine minutes 58 seconds well what we're gonna have to do is we're gonna have to convert it to minutes and seconds now luckily that's not too hard but before we do that let's just add our weight one in here so that it delays by one second every single time it runs if we didn't have that white one it would just do it would go down to zero straight away because there's nothing delaying it from counting down and decreasing by one so it just immediately go down to zero and that would be the end of the round so this white one will delay us from decreasing one from the I value for every one second so really it's counting down from 600 to zero but to do the whole minutes seconds conversion we're gonna have a little function window to Clarets here I'm gonna call it it can be a local function because we're not going to be using it in the game logics we're just using it in the module script so local function to m/s so two minutes seconds and we're gonna pass to that function the number of seconds what we want to convert and then all we need to do is just return back and then what we'll do is I'm gonna show you I'm gonna copy it and put it in here so what this will do is it's going to take you what number of seconds and then do this calculation up I think it's dividing by 60 mod 60 and then it's also doing it again to work out in the rural second so the part of highlighted is working out the number of seconds it is doing a modulus calculation on the number of seconds and it's then dividing the number of seconds by 60 mod 60 to find the minutes and then what it's doing is it's going to format it as a string so that you've got your minutes over here and you've got your seconds over here so it's going to return a string that instead of looking like this it looks more like this okay so it's going to convert it to minutes and second for now instead of saying status top value equals I here we're gonna say MS and put the I in the brackets we're going to pass it to this function up here and that is going to convert it into minutes and seconds okay so if you want to get this symbol you press shift and five okay to get the percentage symbol I'll also put that function in the description too you have to type it out for yourself but now that we've done that it will look like a proper timer and it will count down from ten minutes down to zero when it runs out and only then will it finish when it's finished counting down will it break out of this for loop and it will end the function so if we were to call from the game logic we were to call around dot start round and let's do 600 seconds as I said and we have some code underneath it such as a print hello or this hello would only print once the function has finished and the function will only finish when the for loop finishes so when the for loop gets down to zero after 600 seconds is it going to finish the function so only then will hello print so the game logic script is going to be stuck on the round dot start round function it won't go any further than that and so that function has finished so basically when the for loop is finished and if you went and check this out you would see that it would just keep counting down all the way from ten minutes down to zero now I will also say if you're testing the game at this point make sure that your intermission is long enough for the players to join the game and if you don't click the play button in time before that intermission runs out if you if you click the play book so you don't click the play button before that you're gonna get an error because it's trying to find players to teleport but there's zero players available because none of you know them have clicked the play button yet so you'll get an error so if you do just retry it and make sure that you you've clicked play by then now so both players are spawned in and you can see that the timer is now counting down now we could sit here for 10 minutes and we could see it countdown all the way to zero but you can trust me that it will work okay if you wanted to what we could do is go back into the round module and you could change this wait one two be a much smaller number and then it would count down a lot quicker and don't worry about the book which I just mentioned if you haven't clicked the menu play button in time because we will be adding some logic code later on which will check to see if there's enough players ready to start the round well you can see here that is counting down brilliantly we're doing it much faster and it's counting down from 10 minutes all the way down so you'll see it go down to zero but we have got the map now and then some of the map doesn't work yet so for example we don't have the things like the doors working yet or things like that but we will have it working don't worry and you can see it's gone down to zero so that's good now speaking of the doors in the map I'm just going to show you how they work and I'm gonna bring the chapter 1 map out of the replicated storage to show you because if you want to make some of your own Maps that's fine but you just need to listen to this now inside of each map you need to make sure that you've got a folder called doors okay and you've also got to make sure you've got a folder called items and player spawns as we said we'll get to the items later on but the doors forward it is absolutely essential you need to have all of your doors in that folder okay and the way it works is that when the map is inserted we are going to use this door module here and what this door mantra will do is on by the way all of your doors if you want them sorry never mind all your doors just make sure that they are can collide is true and hankered is also true again and the same goes for these doors with the keys we'll get those later on as well but your doors you need to make sure you have that folder in there chapter in the model of your map okay because in this door module what happens is we have I've created a function in this module and it's called activate doors okay and what you do is you pass your door folder in the map to it and then what it will do is it will loop through every single door on that folder and if it's a key door then it will set up everything you need to detect whether a key touches the door and when the key does touch the door then it will open the door okay if it's a locked door if it's not a locked door then what it's going to do is it's going to insert a click detector so it can be clicked and then it's setting for an event when you so that when you click the door it will be able to swing open okay so I'm going to show you how you can set this up so if you go into the game logic script all you need to do is make sure you have the door module inside your game logic script we're then going to need to require that module just like we did with a round module so local door yeah you can call it door if you want I called it door so local door equals require script door module because again it's inside of the game logic script and then we need to set up all of these click detectors and events for every single door in the map so it will be listening out and waiting for somebody to click the door so that when you do click it it swings open now all that has been taken care of in the module we just need to set it up so we can tell the script which doors to activate so to do this we're going to say after we have inserted the map which is what where's the map insertion here it is so when we've said when we've inserted the cloned chapter we're then just going to do a quick check to see if there is a doors folder so if cloned chapter find first child doors then we're going to say door which is our module dot activate doors and we can say clone chapter dot doors because that's the folder isn't it that's the folder which has the doors inside and we're not going to say get children we're not going to say doors get children because we're actually looping through it here and so we're saying get children actually in the module so we need to pass the folder whether doors are stored so when the maps loaded it will be the cloned chapter and it will be cloned chapter find first child doors so it's looking for that doors folder inside your map which it's why it's so important if you to have that folder called doors in your chapter so many people will come to me saying they've got they've got an error that doors aren't working and then they they will realize that they haven't added that doors folder and they haven't got their door parts inside that folder it's even more important to have the actual doors themselves in your doors folder and that doors folder is inside your chapter map model okay so when we say door dang to make doors that is going to set up all the click detectors all the events which will open the doors when you click on them now let's just do an else in case you forgot at that folder and we can just warn that the fatal error you forgot to add the doors folder to your map okay and that's just in case you add a future map and you forget at the doors in there but now if we go and play the game okay here we are so next rounds gonna start in two seconds it's gonna select who the piggy is gonna teleport us but if we have a look over here you can see if we hover over the door now it's clickable and that's because the click detector has been inserted into the door and that allows us to be able to click things and the event has been set up with the click detector so that when we click it it opens the door and it's wings are open like this okay now there are some doors which do look a little bit funny when you open this one looks realistic and fine but the one that we tried first it kind of looks like it's them it's not opening and closing in the right direction now I think if you have a tinker with the script if you can have a look in the door module but I think it's to do with the way that some doors are rotated okay because some of them are perfect but what the door module does is it finds the hinge of the door okay and it's and it's on one side for every single door so I think if you mess around with rotation off the parts of the the door parts you'll be able to figure that out but it's a minor thing but the good thing is that the doors will open okay and of course you can look into creating your own door module if you like but I've and that this one is good enough okay does the job so we've got doors that open and doors that close but when they're closed you can't walk through them you have to open up and the good thing with these doors is because they're clique detector based the piggy can get stuck so if you close the door on the piggy well they have to first unequip their bats so that they can click it and then they have to open the door and they have to equip their bat again so it's a nice way to kind of slow the piggy down in my opinion so there we go with just in the doors so as I've said you guys got the door module absolutely free from my piggy kit so I hope you enjoy that now after 20 seconds of passed we want to teleport the piggy into the round as well so we're going to do that in the round module in the in the start round script in the sort of start round function so what we'll do is inside the for loop we need to check to see if twenty seconds have passed so to do this we can say if I which is the current tie at the counter so like which keeps track of how long has left remember it's still in seconds because we're only converting it to minutes and seconds when we're setting the value of the status so I itself is still going to be that the big number so like six hundred for nine five nine eight so we can check to see if I is equal to the length minus 20 so if the length is 600 seconds then we want the piggy to be released after 20 seconds so they would be released after think about it so 600 seconds is the length so it would be 580 so when I is 580 which is 600 takeaway 20 then we want to teleport the piggy so we can do then drop a line and inside of here we just need to do the teleports player's function when instead of saying round because we're actually in the module script itself which contains all of these functions in the module table okay we just need to say module dot teleports players okay now the reason we have to pass the piggy in this function is because we need to teleport the piggy don't we so we need to say we need to create a blank table because remember teleport players it's thinking that we're gonna send a table offer lots of players whereas just for this one we're sending just the piggy so we need to put the piggy in their own table and the reason we're not using the teleport piggy function is because that function only teleports the piggy to their waiting room whereas now we want to teleport them to the map so we're gonna say the second argument they were gonna send if we look at the teleport players function it wants the table of all the spawns so we're gonna have to send the player spawns just like we did when we teleported the players but we're gonna have to say chapter map because that's the map that all the players that are on and that's been loaded which will get which we with we were gonna pass to the start round function chapter map got player spawns get children and remember that's why I said it's so so important that you have the player spawns folder in your chapter here okay because we're looking right at that player spawns chapter and if isn't there if isn't in your map you're gonna cause an error because it's looking for it but it cannot find it so make sure you've got your player spawns folder your items folder and your doors I know as I said we'll get to the items later on in in the in the video so that's going to teleport the piggy to the map so that they can start killing people we're then going to set the status value to say piggy has woken up so that the players know that the Piggy's coming after them and we're gonna do two second delay so wait two seconds and that's just going to keep the status on the screen before it gets updated to the time left again and obviously this won't happen again because the eye is constantly counting down and it will never be 580 again because it will just go 580 and then I will be five seven nine because it decreases by one every single time Eclipse around so it will only run once and it will only run it will only run this if statement when the eye the time left it's 580 or that or 20 seconds or the length take away 20 seconds so after 20 seconds have first passed because the length could be 1,000 it could be 30 seconds it's up to you and that's what you do that's what you write when you start the round so when we start the round you also need to pass the piggy so chosen piggy and also the cloned chapter because that's our map object okay let's just check we got the order right yep so the piggy and the chapter map it's really important that you get the order right with your arguments so the chosen piggy go second the length goes first and the cloned chap that goes third the reason it's in that order is because it's the order that we've written our arguments in okay so now the piggy will get teleported to the map after 20 seconds now I'm also going to just go back to the round module and I'm going to change this weight back to 1 second so that it goes at normal speed and if you want to you can test it out now you'll see that the next round is going to be starting very soon and so the player should get teleported in straightaway and you can see the piggy is being held in this little room until 9 minutes and 40 seconds so let's see if the piggy does spawn at that time and whilst we do that we can let the player on the Left get a head start but the piggy should be on his way here we go let's see if he gets teleported yes he does and there we go we can see him now the piggy batt isn't going to work yet because we haven't scripted that we're gonna script it in a future episode there are some things that it depends on so it won't work yeah and also I know the animation isn't very good that's because you're going to have to create your own but animation because we can't share them so I thought what's the point in making it detailed if you're not gonna be able to copy it because you're gonna replicate it yourself so I'll show you later on how you can make your own animation in a future episode and that's why I said earlier the piggy kit will not give you the finished game because you need to watch along to see us write the code for it and the extra stuff so we're going to leave it there for the second part now I do recommend that you go straight to the next part which is gonna be episode 3 the thumbnail is gonna be on your school right now in the middle so go ahead and click that and I will see you in the next part and don't forget to check the link in the description to my website FAQ page if you've got any problems or bugs