hello and welcome to episode number 9 in my scripting series today we are looking at builtin functions so we already know how to create functions if you don't already then make sure you check out the previous videos I'll leave a link in the card in the top right corner or in the description because we've covered functions parameters arguments all that good stuff and it will be useful for you to know so a function we already know is a predefined bit of code that we can run later on in the script to save time to you know be efficient etc but there are also some functions which are predefined we don't need to define them they're already there because roadblocks have coded them in the backend and they are used to make life easier for us so let's imagine that they're just built into roblox Lua ok so behind the scenes already made the script knows what they mean but we can call them on in our scripts to do things which will just simply make life easier for us so I've picked out a couple here and if you wanted to find some builtin functions you can go to view click on the object browser select an object from the Left panel here and then on the right you will see these pink little icons and then what they mean is that that is a builtin function so the pink icons are builtin functions and then we've also got some blue ones and yellow ones but don't worry about those yet we're only interested in the builtin functions which are the pink ones and each object has its own builtin function there will be some builtin functions that only apply to certain objects and we can call them to do things and some of them are quite selfexplanatory you won't need to know all of them you only need a couple for now some of them will you will not understand so don't worry about it but we're gonna take some easy ones today such as clone and destroy I'll let you work out what they do quite selfexplanatory so we've got the destroy builtin function which we can use on an object we all it on a certain object say for example this part that we have in the workspace we could call our builtin function called destroy on it and guess what is going to delete the part from the game we've got the clone builtin function that is going to create a duplicate of the object which we call it on and you can see where this is going to go so we're going to focus on the first two probably the easiest builtin functions out there so how do we use these builtin functions obviously we've not defined them and to call a normal function we just say destroy right so maybe you're thinking that we we put the parts reference in here so we say game dat or its place Lockhart no that's not how it works because we can't pass any arguments to this function because it doesn't take any what we're gonna do to destroy an object and now this is this this type of function there are two types of builtin functions so our destroy and clone and clear all children which we'll get to later but these ones here are all about doing something to a particular object so for example we are trying to destroy this part so what we're doing is we are calling this function on a specific object so in that case it's called a member function now these ones down here aren't to do with any objects or anything we can just we can just literally say waits or prints we don't have to call wait on a part or on objects because they're there their purpose is not related to any objects in the game so they are just global functions global builtin functions so we have two types but they're all builtin functions so to use the member functions the ones like destroy clone and clear all children that are actually going to do something to an object so either destroy it clone it etc we can just firstly get the get the item get the objects reference in the game so in this case the game got workspace got parts okay that is the reference to the object in the game we have now accessed that part but what we gonna do we want to destroy it so we say and now you can see that we've done that that just basically means that we're gonna do something we're going to a function on this part a builtin function and the Swift has seen that we've put the colon in there and then the intellisense which is basically finding trying to determine what you're going to say and try to prefill your next or what you're trying to write it shows up all of these different builtin functions so we're just going to destroy and you can see it's added destroy with our brackets on the end you have to have the brackets on the end you can't just say destroy we say we have the brackets on the end because it tells the script that we are running a builtin function on it so you get your reference of the parts or your objects once you've got your objects you can then call a builtin function on it so if we run this script look at this part hopefully it will get destroyed there we go it's gone we run the game and immediately as we as the game started this script ran itself and it basically got the part and destroyed it so simple very very easy stuff so same goes for the clone as well we can just say clone and our pair of brackets on the end so it knows it's and we're running a function on this part run the game and what do you think is gonna happen there is actually two parts now in the game you just can't see them and that is because what's happened is it's created a clone of this part we've ran the the inbuilt function but what's happened is the the script has cloned it's done the right thing but it doesn't know where to put this clone so we've cloned in objects and it's probably out there somewhere it just doesn't know the script doesn't know where to put this so it's not going to put it in the workspace because we haven't told it to we haven't told the clone of this parts where to go so what we need to do is we need to set this as a variable so this function what it's going to do and we learn about this in previous videos we can return data from a function so let's say we had a function to create a part okay we would run the function it would create the parts but then if you wanted to do something to it afterwards like change of property we would we wouldn't be able to because we haven't got that part that we created in the function so we can return it and return it back to where we called it from and when we do that we then have a reference to that part and it's the same thing here we've cloned the parts but we haven't actually saved a reference to that part that part is you know it sits outside of any service it's not in the workspace because we don't know the script doesn't know where to put it so what we need to do is we need to save it will not save it but tie it to a variable so we could have a variable called myclone and then what's happening is we're calling the clone function and what's the what's happening is it's making a clone of this part and then it's automatically gonna get returned back to this variable because the clone inbuilt function returns the cloned part the cloned object back to where you called it from automatically because you can't say clone it and then dot parent equals workspace or I want the clone to have transparency of one you can't do that for loads of property you can't just set its properties like that so you have to set it as a variable it creates a copy of this part returns it so that we now have a variable reference of the cloned part because we can't just clone it and say game don't work space dot part too it's gonna have the same name and it's not even gonna be in the workspace yet so we have to have it referenced as a variable and now that we've done that we now have a way to access this cloned part and we can say my clone dot parents equals work space or games or work space so what's happened is it's cloned it alright but it just doesn't know where to put it so it's outside of the game currently so now if we run it again again you'll see one part but that's because it's been cloned and a clone of the part is an exact replica an exact duplicate so it's going to be in the same position right let's open up the workspace and we have two parts an exact clone or the other in the same position you can drag them away we now have two parts so whenever you're saying clone on an object you have to have it stored as a variable and that way you can then set its parent property to wherever you want it to go so yes it creates a clone but it doesn't know what to do with it so that's why you have to have it as a variable you don't have to do that with destroy you'd you have to do that at all it's just with the clone function because obviously you're creating a new object from this part and then you just need to tell the script where it goes so we've done destroy we've done clone congratulations you now know two builtin functions so not as hard as you think so we've got one more member function to go one that I'm just gonna show you and you're probably not going to use it yet but good to know anyway and it's called player all children and what this is going to do is when you call it on a part or an object because it's a member function so we call it on an object let's say for example we have a part and inside of this part I don't know why we've got to weld in there let's get rid of that but inside of the part we had loads of things in it okay so we had maybe a texture or a decal or a clip detector or maybe we even had a fire particle right or some awesome smoke okay all of these things the click detector the fire the smoke the decal on the texture they are children of the part because we have put them inside of it you can see here in the hierarchy in the Explorer we can see that the clip detector fire smoke and all these thick children are gonna like indented you can see it there inside that part we can collapse it we can open it we can see that these things are inside this part so in that case these things are the children of that part and the part is the parent of all of them the think of it like a like a parent and a child right the these are the children these are the things that this part is looking after the the things that are inside that part whenever we move the parts it goes with them because they're inside of them these things are inside at the part so there are children and the part is the parent of them so when we say clear all children on an object so what we're saying is delete anything that's a child of this object so delete anything inside the part so when we say game got workspace dot parts and then colon because it's an inbuilt function the calling of function on this part when we say clear all children it's going to delete everything inside of the pot so the click detector the fire at the smoke the decal the texture and the weld let's run the game and see what happens so as soon as it runs as soon as the script starts boom all the particles are gone and you can see the part has no more children have all been destroyed because we have called clear all children so that was another interesting inbuilt function for you we're just going to go over the last two now and these are the global ones so weight weight is probably the easiest one off them all what it does is you can take an argument in this one so when we say you can take an argument we can pass some data to this function and that's going to change or impact the way it works so in this case we can pass a number of seconds to the weight function and then it's going to delay the script for that amount of time so if we set 5 seconds so wait 5 it's going to pause the script for 5 seconds and it's not going to run anything that comes after this weight statement until 5 seconds are up now let's test this out and if we were in the game we can see we've got our children but after 5 seconds you can see they all get deleted so what's happened is the script has waited for 5 seconds before it has carried on and that is what weight allows you to do it allows the script to stop and wait for a number of seconds before it continues so it's a nice way to have some delays or to you know if you had loads of lines of code ring at once and you want wanted to see a difference or wanting to see something change that's where you would use a weight function or even he had around he might want to wait 50 seconds each round and that's gonna be the length around you get around coming from so that is the weight builtin function and we have one last builtin function which you probably don't know why we use it but it's used all the time in scripting and it's called print it allows you to print a message to the output window down here you may be thinking it's a bit pointless but if we have a script that isn't working and we want to determine where it's breaking where it's where it's erroring and what's not working we can use printing to send messages to the output at certain times to see where the script stops working or where you know it does work so printing it lets you send a message to the output and you can send data type so if you wanted to send some text we would send a string and I would have it in in speech marks so we could say hello guys and then after the wait five seconds it's gonna print out hello guys in the output so let's have a look you should be doing it around about now there we go is printed it out so it's a way to send a message from the script but you have to say print you can see how it's also in in blue the weight and the print because they are global functions that it's printing out these messages you can also print out numbers but you can't print out things like games or workspace top part because that's an object it's not a piece of text if you wanted to print out game dot workspace dot part you'd have to put it in a string but there we go we've done five in built functions builtin functions however you want to call them in this video probably the most important ones and the ones you're going to be using the most in scripting there are way more builtin functions but you don't need to know them yet we'll be going over them another day so there you go and don't forget to use star code Alvin blocks when you buy premium or ro books on roblox and that way I'll make five percent of your purchase is a great way to support the channel at no extra cost if you want to become a member as Y you can click the join button underneath the video you get loads of cool perks at different tiers though check that out the next video will be on your screen and now and also the playlist as well if you want to go back and see some more videos don't forget to subscribe click the album locks logo in the middle of your screen like and share the video with anybody who you think this would be beneficial too and I'll see you in the next video thank you for watching