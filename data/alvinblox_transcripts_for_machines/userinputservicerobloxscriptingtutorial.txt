so in Roblox you can get user input by using the user input service and when I say user input I'm talking about when the user presses keys on the keyboard when they click the mouse when they Press buttons on a controller when they tap the screen on mobile all of this is input from the user hence user input service now because this user input is coming from the user therefore it's coming from the client it can only be used in local script on which which is client running code so I'm going to go into start GUI going to insert a local script and to get the user input service we'll create a variable for it user input service equals game get service user input service and to detect input there's an event called input began so user input service do input began you write connect we'll give it a function which will run when some input happens and then we have two arguments we have the input and we have game processed event okay also known as gpe and input here lets us get some information about the type of input so we can see if the player has uh pressed a key by saying if input. key code equals equals and then we'll say enum do keycode and then after the dot you can select from a list of all these different key codes so if you wanted to detect when the player presses e then you would just write e and then do then and you could print out user has pressed e right and if we go and test it okay I'm pressing e on my keyboard and it keeps on printing user has pressed e now if you wanted to detect when they click the mouse then you could instead say if input. user input type equals equals enum userinput type Mouse button one then print user has clicks and you can do the same thing of course for Mouse button two which is the right Mouse button uh if there's a if there's a middle Mouse button You' do mouse button three and again when I click my mouse you can see it's saying user clicked when I press we get the same thing but for the uh the other statement so how can we detect when a player uh touches on a mobile device well it's the same thing really just another if statement and rather than saying Mouse button one we say touch and that will print out that the user has touched the screen I'm not going to keep on testing these things because you get the idea by now of course there are other key codes such as the space bar backspace enter or return sorry should I say uh so have a look at the list and give it a try for yourself that's not it though there's also an event called input ended and that will fire when the key press or the mouse click or the touch finishes so when it stops so you'd say the same thing really but this time it would be input ended connect function and again it passes the input so it's an input object which just gives us that information about whatever the input is and we have this game processed event variable as well so you could just copy and paste all of this code and change we'll change the prints to say you know released click has stopped touching and this should all work the same way now the last thing to talk about is this game processed event what does it mean well let's just go back into the game and I'll show you here there are some inputs which we don't want to register for example if we're detecting when you press a key maybe we want to show a GUI when you press e we don't necessarily want to do that and by the way you can see it's saying I've released click when I stopped clicking but anyway we don't necessarily want the player to register that eess at certain times for example if we're typing a message and we keep pressing e we don't want things like a GUI appearing to happen because it will disrupt our view and it will get in the way we're trying to type a chat message so sometimes when the user is interacting with a Roblox GUI so a core GUI such as the uh chat menu here or perhaps uh there's there's a few other occasions where you wouldn't necessarily want the key press or the action to go through that would be called a a game processed event because the key press is going through a roblo GUI first before it's going through our input here so we could just check to see if game processed events and if it's true then we want to return we want to K this function we don't want to go any further because we're interacting with a Roblox UI or another part of the game so if we now test this one more time if we press e or click around on the screen it's printing which is great if I just clear this and I start typing and pressing e in the chat window you can see it's not registering anymore because this is a game processed event so hopefully I've explained that uh in a way that's understandable for you this is really all you need to know about the user input service however I'll just show you one last thing if you have some other code and you want to quickly check to see if a uh a button is being pressed down you can say uh well you say user input service colon is key down like this and then you you'd pass through the key code uh enum like this so if you wanted to check at a certain point in time whether the a key was being pressed down you would say this it would then return a true or false value which you could store as a variable like this and then you could print out is a key down now this is going to be false because we won't be pressing the key once we first join the game but you might want to use this at other points in in your game so I just wanted to make you aware of that so that was the user input service and how to handle user input it's really really cool let me know if you have any more ideas for tutorials don't forget to subscribe if you found it handy and I'll see you in the next one thanks for watching