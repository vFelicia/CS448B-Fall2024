hello everyone Alvin blocks here and in this advanced roblox scripting tutorial we're going to make our own admin commands from scratch yep you heard it right this is the video that a lot of people have been waiting for and it is an advanced video so if you do find it a little bit confusing then do check out my beginner scripting series so that you're up to scratch with everything else related to scripting so I've got a script in here and this is just the outline of the the admin commands that we will be making I've got that open in the window just so that we make sure we don't go wrong so you don't need to worry about that script what you do need to do is insert a script into server script service I'm going to call it admin commands and the first thing that we need to do is we need to create a table and that table is going to have all of our commands in so local commands equals and then table now we're going to create a basic command and that's going to be a teleport command so firstly to create a new open command we're going to insert a table or a function into that table and that function is going to be the command so firstly say commands which is the table and then when you want to insert something into it you can either way you can just say dot and then you put the name of the command so if you wanted it to be teleport you just say teleport like this okay so I'm gonna say TP because it's short for teleport so commands dot TP so this is the command name this is what we'll have to say to run the command so commands dot T P equals function okay so we've created this function here and then we'll drop a line and have an end here okay so just like so and that is our admin command so any code that goes in here will run when you say the command TP ok so this is the function that we're going to run when we say TP now what would also do is have a we'll have a little slash or you know prefix so if you want you can make a function for that so look sorry a variable so local prefix equals and it's gonna be a a forward slash and that's that's what our prefix will be let's see in fact ya gon will have it will have a four slash but you could do whatever you want you could do a colon or a semi colon or a whatever put your prefix in there so now we need to detect when someone sends a message so that we can run the function so we need to have a player added event which will run when a player first enters the game and again I'm not going to much detail on on on you know things like events and functions because you should know that from the beginner series so when the player is first joined we have to create a chatted event so this will fire when they chat in the chat window so player got chatted connect function so this event will run when obviously they chatter message and we've got two arguments here which give us information about that chat message we've got the message contents so that's the first argument and the second argument is the recipient so if the recipient if it was a whisper to somebody then the recipient would be the player that got that message so what we can do is we can take their message which they're sent and we need to convert it into lowercase and you'll see why we do this but basically because if they were to say TP they could all say it like that in lowercase or they could say in uppercase or they could say you know T in lowercase P in uppercase or like this there's lots of different ways of saying TP or our command so in order to make the command work for every variant of saying TP then we can just convert it to lowercase so if they did say TP well then we can just convert it to lowercase so it's going to be TP okay so we can just get the message and we can update it to be the lowercase version and to do that we say string got lower so when you put a string inside of this string lot lower function it will convert it into lowercase so that T P will become TP in lowercase so we've now just converted it to lowercase and updated it next we need to split the message up because they've what they're going to do they're going to write it like this so it's going to be like this okay so this is going to be their message now what we want to do is we want to split it up so wherever there's space we want to split it up into three different words so this will be its own word this will be its own word and this will be its own word and so what happens is it gets split into a table like this so you'll have the first message and then a new item in the table so a comma to separate it like this okay so each word or you know set of characters that are that are together and set not separated by space will be in their own table object like this okay so to do that to split them we need to create a variable first for the split string so the string that has been split up and we can say message because that's the string that we're going to split up splits okay and inside of these brackets we need to tell the scripts how it should split it so when should it split the string should it split the string when it sees a space and if so then we'll just have a space in there like that so whenever there's a space is going to split the string up and whenever there is a space it will add a new item to the table like this okay so all that's doing is converting it into table form so that we've got each individual part of the command so we've got firstly here the command that they're saying and then we've got the player that they want to teleport and then the player that they want them to teleport to and obviously if you have more arguments so maybe you need to put I don't know another play it's just gonna keep splitting up because there's a space so you could have infinite arguments and it would just split them up so as long as there's a space it will split it up into table form now we need to get the command we need to check whether they've said the teleport command because they might be asking for another command so we need to get the first item out of that table which is going to be the slash and command so to do that we can say local another variable I'm just gonna call this one slash command because we've got the slash and then their command and that is going to be the first item in this split string table isn't it's going to be this one here because it's the first item in this table when we split it up and it converted the message into table form so this is what split string you're going to be it's going to be this table and for the slash command we are just getting the first item in that table which is gonna be this /tp so this is gonna be a /tp part whereas this is gonna be our table like this okay so now what we need to do now that we've got that slash command is we need to split it again so we need to get rid of this slash okay we just want the name of the command so that we can check what the command is so local CMD for command equals and again you can call these variables whatever you like but just keep them on topic so CMD our command is going to be the slash command we can close the slash but we're gonna split it again now whenever there is a forward slash or our prefix in fact let's say prefix because that's the variable whoops oh by the way I have a really dodgy X key on my keyboard recently it's just been playing up so that's why how that happened so whenever we see a prefix so our forward slash we need to split it up so it's gonna look like this so it's giving us another table but the first item in the table is going to be the slash and the second item is going to be the TP because we've separated it we've now split it up wherever there's a slash so the first object in this table is going to be the slash and the second object in the table it's going to be the name of the command so if you wanted to get the name command command name equals CMD is gonna be the second object isn't it because this table split up we want to get the name of the command and that's going to be the second one so we've now got the name of that admin command brilliant so what next but we need to check the command right we need to see if it is a natural command so because we put all of our commands into this table by saying commands TP that TP function is going to be inside of this table so we can easily check if it's or if it's a real command by saying if commands and then we're gonna do square brackets and put the command name in there so if the command is in that table it's a real command then we need to fire that function don't we so we can say commands command name and that's going to be the function and then we need to you know start this function we need to execute it and we all know to run a function we have to give the name of the function which is going to be this and then we do the pair of brackets so we've just called a function the only difference is that instead of actually saying TP you can't just say that because TP isn't a global function it's a function inside of the commands table and so to get it you have to say commands TP but obviously we don't know the name of the command that is going to be executed because what we had 50 commands we can't just say commands dot TP we'd have to give the name of the command so instead of saying dot TP we say in square brackets the command name okay and we can't say dot command name like this because what if we had a function or command that was actually called command name it would run that instead of having the instead of running the designated function so we have to say it into our brackets so there we go we've just fired our TP function so what I want to do now is I want to run run the game let's play the game and see what happens and hope that we don't have any errors yet but we should get that print the output telling us that the command around so let's do /t p and just run it and there we go so it said it's printed outs from the function the TP function this will run when you say the command TP and so it did so what happened was we chatted and it converted our message into lowercase and then we split it up into a table for each part of the message so the first one being the teleport command and the second one being any other arguments that we have in this case we only said /tp so there weren't any other arguments but TP was still the first argument in the table the command so we then got that TP the first item in that table and then we split up that's smash and TP we split it up into the slash and the TP and then we managed to get the name of the command from that and then we could check if it was a real command in the table which it was because we inserted it at the start of the scripts and then we fired the function so when we fired that function it printed that this will run when he said the command TP now that's great but how do we actually teleport the player well we need to send data to this function every we need to send the what we're going to send the sender we're gonna tell the function who who sent the message I'm also going to have our arguments so we need to send the player that's going to be teleported and the player that we're going to teleport them to so firstly let's send our first argument and that's gonna be the player the player that send the message then up here in the function we will pick it up and we will just give them an argument name of sender okay so if we were to run again and we print it out send it or name it would print out your name because you chatted to initiate the command and there we go it prints out our in underscore blocks as it should do so now we need to get if there are arguments in the message like Alvin Bob we need to get that out and send it to our function so to do that we're going to create a table and this table is going to be our arguments that we're going to send we're gonna send them in a table form so anything that goes in this table is going to contain the next things that we've said then the next split parts of the message so for example the players that you want to teleport so now now that we've got our arguments in a tech a walk we just created the table we need to put the players names from the message if there are any into the arguments table so to do this we can do an if statement okay so sorry not an if statement what am I saying a for loop so so for I equals two and this will make sense in a minute hashtag split string one do table dot insert I'm gonna explain all in a minute so we're gonna insert into the table called arguments split string I now you may be very confused as to what's happening here but let's go back to the split string now let's imagine that we sent the message with two players that are going to be teleported so this is the first item in that table isn't it so this is the second one now because we only want to get the names of the players that are going to be teleported they're going to be from the second argument on words only because this is the first item this is the second item this is the third so we only want to insert into the arguments table the second and third items from that table because we only want the players names so we are doing in a for loop which will start off at two and it will go on for as many arguments that we've said so if there are five arguments then we will go from two to five so hash tag split string going to be the length of the of the table so how many splits there are so in this case there are three splits so it's going to go from two to three and what's going to happen is it's going to insert into the table the second item because that's split string I he's going to start it for two so it's going to insert the second item into the arguments table so I'll insert Alvin and then it will loop around and increase by one so that I is now three and it will insert into the arguments table the third item so it will insert Bob so we've just inserted Alvin and Bob into the arguments table because we don't want to insert the first item that's why we started off at two and we've got the one here because it's increasing by one every single time okay so what we've done there is just basically put the players into the arguments table like that so we have the key parts of the message that sir that we need to send to the function don't we because we need these players in order to teleport to each other we need to teleport the first player to the second player so that's what it's going to look like so with then we don't we just going to get rid of that that was just an example but now what we need to do is we need to send that arguments table to the function we've put our data in there and we now need to send the arguments to this teleport function so let's create a second argument and call it arguments and it's going to be a table gonna be in table form so the sender is gonna be an object and the argument is going to be a table okay so what we now need to do is head back up to this function and we need to loop through all of those arguments so let's just remove this code here I will now need to loop through that table so for I comma player in pairs in fact so let's let's do in pairs arguments okay do so we're looping through everything inside of this arguments table and obviously it's going to be a player player name sorry so yeah it's gonna be a player name because it's a string remember so the players name what we need to do for each player name in this table let's just print them out to make sure that it got sent to the function correctly so if we run this what's going to happen is if we do TP and then we write Alvin blocks we write Bob you can see what happened it's it got the second and third indexes from our split message and it sent them to the server and we've printed it sorry it since it sent it to the function and it's printed it from the function okay so that's great we've got the arguments in our teleport function so now what we need to do is because they're players they're player names we need to actually get those players somehow because we need we need their player objects in order to you know move them and we can't just deal with our names so let's firstly create two variables the first variable is going to be the player to teleport so play it's a teleport name so the first person is the person that will get teleported that will get moved so that will be the first item in the argument table the second player is going to be the player to teleport to name equals arguments too so these are just variables for the two players names we then need to check to see if they are not near the values if we've actually been passed the player names because the player could might have only sent one so one of them will be blank so let's do an if statement so if player to teleport name and player to teleport to name so if they're not nil then we need to find the player objects for these two players so let's create a function that will do that for us so at the top here we're going to create a function so local function find player and we're going to take an argument of their name what we're going to do is we're going to find the player in the player's service so we can say and we're going to send the name of the player as an argument to this function and then we can return the player object so we're going to loop through all the players in the game so for I comma player in pairs game dot players Curran get players so this will get all of the players currently in the game and then we're going to say if we need to remember because the the name that we're sending the name that we have got here these two names because we made them lowercase we need to also make the player's name lowercase so we need to say string dot lower player dot name is equal to the name of the player that we want then we've managed to find their player object so we can just return it so we've now returned a player object and it's an object because it's inside of game dot players ok so now that we've got their player we can access their character and obviously if we get to the end of this for loop and it hasn't returned yet then it will just carry on and so if it just carry on we want to return nil to tell the to tell the wherever we call it from that no player was found so let's create two more variables for the actual player objects for these two so we'll do local PLR just to make it shorter to T P equals find player and we can use player to teleports name and local player 2 tp2 equals fine player player to teleport to name ok so we are calling this function twice to get the player objects of the two and player names that have been sent to our teleport function that the player has put in their message so we've now got their characters ok we just need to make sure that the characters are there so let's just check that because they could be nil or they could have left the game we don't want that so now that we have got them and we are certain that they're in the game we need to move the player to teleport to wherever the player to teleport to is okay so we can say player to TP dot character dot a humanoid root part dot C frame equals player 2 tp2 dot character got humanoid root part dot C frame so what we're doing is we're moving the player to teleport to we're setting the C frame of the humanoid arute part to be wherever the player to teleport to is okay so we're moving them to the second player and now let's just do a print to say successfully moved and um let's just do a print up here as well just to say TP function fired by sender name okay so now we should have a working admin command let's go and test it out okay so here we are in a test server and I'm going to test this out I'm going to say /tp and I'm going to write the name of my player which is player two and I'm going to teleport them to player one let's click enter and see what happens boom I've been teleported to player ones location so excellent and we can do the viceversa opposite way around so we do TP player one to me okay it and they got teleported to me so our admin command is working perfectly now the next thing that we need to do is we need to have a list of admins and we want to only allow a player to run a command if they are an admin so to do that we're gonna make a second table at the top here called local admins and what you need to do inside of this table is put the name of your admins in in a string like this so Alvin underscore blocks and if you want to add another outside of the string you do a semicolon or a comma and then you put the next person on another line like this okay so just the names of the players okay so when you've done that we now need to actually create another function to check if the player is an admin so local function is admin and we're going to send the player object so we'll just declare up here as well just to make it easier for us to remember that name is a string but down here the player argument is going to be an object that's what we're going to send to our function so all we need to say is for underscore because we don't need the I a comment in fact you could make this an underscore as well if you want there we go and to do that I'll do that so you set it to an underscore when you don't need the I index that's just good practice so for underscore comma V in pairs or player now we'll do V because it's the admin table it doesn't really matter it's just the value inside of the table for lunch coffee in pairs admins so we're looping through every single name in the admins table and as it's a string we need to compare it to the player's name so if V so the string is equal to player dot name then if we have found the player's name in the admin table then we can return true but if we get to the end of the for loop and it hasn't returned true and stop the function yeah we know that obviously we haven't found the player in the admins table so they can't be an admin so we just return false and now it's returning us a true or false value so we're guaranteed to receive a boolean value back because wrong either returning true or a returning false and so one down here in our player dot chatted event at the top here we can say if player sorry if is admin player then and add an end down here and then indent all of our code inside of it by pressing tab because the function is admin will return a true or false value it would either it will turn our if statement into if true or if false then so if they are in admin it will be true so that the if statement condition will run but if it's false then the condition will not run so simple if statement there which will basically run it if we're an admin if we're not it won't work so let's go ahead and remove myself off the admins list like this and if we try to do a command ok you can see nothing happened ok even though I spelled the person's name wrong it doesn't matter you can see it didn't print to say that the function was fired it didn't do any of that so it didn't even fire in the first place because I am not an admin I'm not on the admins list but if I add myself back even though we don't have any other players in the game that's alright we just need to see if it fired that print and that will tell us whether the TP function fired or not there we go so it said TP function fired by Alvin blocks so because we were on the admins list it did fire that's TP function so we have just managed to create admin commands in roblox in under 30 minutes in one script now you may be wondering well how do I add more commands because we've just made a teleport command but really all you need to do is create your command and we call it I don't know speed for example and then equals just create a new function and don't forget all the time we'll have sender and we'll also have our arguments and the only thing that you can send in our arguments table is going to be player names so just a list of player names that come after our prefix and command name because you say speed me and then you say where you either say a player name don't you and then you or then you say a number so in this case you're going to say a number okay so what's going to happen is the arguments are just going to be it's going to look like this if you say if you want it to be flash speed me 30 then the arguments table is going to look like this because it's just taking out the slash speed command it's going to be me comma 30 like this okay and the 30 is going to be a string because it's all a message it's a string datatype so what we can do is we can say let's let's think about this so we so local player to give speed to equals in fact we're not going to do me by the way it's gonna be a player name we're not that advanced yet to to use the me command because I won't work so player to give speed to will be the first argument on it now you could do it your way around if you wanted to have the number first that's up to you then you'd want the player name to be second just change it to arguments to so you can manipulate the arguments it's it's all good the arguments table is just the next pieces of text that come after the command name so you can manipulate it all you want so we've got the player to give speed to and the local amount of speed to give and that's going to be arguments to the second argument in this case because it's the 30 so what we need to do is again find the player so a local player equals find player player to give speed to because we've put in a string the name of the player to give the speed to here and this function is going to return to us that players player object if they are a real player and let's just check if the player to give speed to is not nil and it's not a blank value so if it is if it is an actual you know a string it's got some text in there then we're going to find that player and if the player is a real player object as well then we can save player got character got humanoid got walk speed equal amount of speed to give but because it is a string we need to convert it to a number so we can say to a tune number I think two number here two number and we put the string in there and it's gonna convert it to a number and then we can update the players walk speed to that number so let's prints player name or player to give speed to was given walk speed dot dot amount off speed to give we didn't need to worry about converting it to a two number here because it's already in string four and we're printing out a string so let's see if this works so we're gonna do print speed command fired by sender dot name because the sender object of course it's an object so let's test this out so I've just showed you how you can make a new command from scratch and you see how easy it is to add a new command once you've done that so speed Alvin underscore blocks fifty so it says Alvin blocks was giving a walk speed fifty and that the speed command was fired by me and there we go my speed has indeed increased to 50 so I could say speed Alvin underscore blocks five hundred and it's in it again so how cool is this we've just made our own admin commands and because we coded the mainframe the the main function down here to you know fire the function the command name we haven't actually fired a specific function because we've designed it like this we don't need to edit any of this again we just need to add a new command up here and we've got our command in there how awesome is this and again let me just show you this let's do some error testing so if we call a command that isn't valid nothing is going to happen so that's good because it's not inside of the commands table and because we've got this validation checking if the command is in the commands table obviously it isn't so it's not going to run this code unless it's a file to command so that's good let's just try giving the wrong name of a player or a player isn't here okay so it has fired the command but let me just show you that again it fired it but it didn't apply the walk speed to the player because the player to give speed to it was not an actual player it was nil so it returned no so it didn't return the player object they returned nil and if it's nil it won't run where I was in the if statement and one more time let's just check to see what happens when you don't give it enough arguments okay so again fired the speed command but because there was no amount of speed to give in fact that's a good idea actually what we could do is just check that and amount of speed to get so if there is an amount of speed to give there that isn't nil then it's going to run the code so awesome guys we've just made admin commands in roblox in 35 minutes which is awesome so you can add as many commands as you like because we've designed it in a way that just makes it really easy to do so you just do the commands table dot and then you put the name of your command if you want to change the name of the command you can do so very very simple admin commands advanced scripting you guys have been asking for an advanced scripting tutorial so I've delivered and I've given you one so if you've enjoyed the video please give a like don't forget to subscribe to my youtube channel Alvin blocks for more roblox scripting videos share it with a friend who maybe you know who may want to see this video in the future if you would like to take the source code from this project you can become a channel member a premium member for four dollars 99 and that way you'll get access to the source code but if not you can just copy along from the video and it will help you learn I do want to give a shout out to emerald slash on the developer forum who inspired me to make this tutorial I saw he posted a tutorial of his own so I thought yeah why don't I changed myself to make my own admin commands and I can share it with you guys so shout out to you and thank you everybody for watching I'll see you in the next video Cheers bye