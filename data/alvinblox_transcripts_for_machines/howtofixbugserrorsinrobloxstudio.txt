you're probably watching this video because I've replied to one of your comments on my videos with it or because you want to learn how to fix your books faster now unfortunately bugs are just something that you will come across sooner or later in roblox to do and it's not something that you'll be able to avoid learning to script is one thing but learning how to fix bugs is another and that's the most important part in my opinion a lot of people will come across a bug after watching one of my videos or when they're writing their own code and I think to themselves that they aren't capable of fixing it and that the whole code is broken and there's no chance of being able to fix it and they will give up straightaway now I am a human not a machine and outside of my roblox videos I have other things to do in my life such as making my own games and currently I've got one hundred and eighty six thousand subscribers so on average I get seven hundred and fortythree comments per day that's from my YouTube analytics so 743 questions in come in comments every single day so assuming that at least 40% of them are comments asking for help and not people saying you know thank you or whatever because trust me it's a bigger number than 40% the actual help questions but assuming that 40% are comments of people asking for help that's 296 comments and problems which I would have to look into every single day and so if we assume that each problem would take me at least five minutes to solve and it usually takes a lot longer to solve them as one thousand four hundred and eighty minutes of my time which is twenty four point six hours and guess what that's longer than a day and I'm asleep for at least half of that so it's mathematically impossible for me to answer everyone's comments and that's forgetting everything else I do in my day so you can't rely on me to fix your problems and my channel is only gonna grow larger so that's more comments and problems I'm just not able to look into I'm really sad when I see people give up straight away because I think of the opportunity that they've just wasted it could have been a book that was easily fixable but they just didn't notice because they didn't have the time or didn't take the time to debug it and if they had they might have stuck with roblox scripting and they could have become a successful develop think about it imagine all of the books that I and all of the other roblox developers out there whose games you play have had to solve we're here today and you're playing our games because we've not given up because we know that every bug is solvable if we put our minds to it that's my motto there's no such thing as an unsearched thing as an unsolvable book because if we can't solve it then we can enlist the help of others and if they can't solve it well then we'll just rewrite the code in a better way I want you to be that person who doesn't give up at the first hurdle because there are going to be some people watching this video who don't take my advice you don't decide to learn how to fix their booth they don't put the time in and they won't be the ones that become a successful roblox developer and I want you to become a successful roblox develop there are gonna be winners and there are gonna be losers and the losers are the ones who thinks themselves that the bugs are bigger than them and they're gonna let them get the better of them but the winners are the ones who are going to learn to debug learn to solve their problems and this is what makes them successful because they know that no bug will be able to stop them on their path to becoming a successful roblox developer and yes of course the bugging can be a real pain but it is part and parcel of being a script er it's just something that you have to accept and get on with so what's the best way to fix your code easily and quickly well the first thing to do when you realize that your script isn't working properly is to check the output window when your script doesn't works intended it might have printed out an error message automatically to your output window these messages tell you where the script stopped working and why sometimes these messages can be a little bit vague but they can give you a lot of cute clues as to what is working such as telling you these specific script and line number where the error occurred so read this error message carefully then go to your scripts to your scripts and look up the line the error message told you about if you have a function and sometimes multiple code lines will be printed in your error because it's telling us where the function we're in the function and the script broke but also the line where that function was called from originally if you still don't understand the error try googling it there are going to be lots of others who have had the same error message as you pop up but of course they weren't have had the same code as you so it might be a little bit different usually that should find some useful in on how to fix it because most error messes are quite generalized and it's due to something such as a spelling mistake you can look you can also post on forums such as the roblox developer forum if you don't have access to that search on the forum for your error and see if anybody else has posted about it before it's likely that they have and you can also try other forums online as well as just searching on Google as I said most of the time errors happen when you've forgotten to write something in your code or if you've made a typo or a spelling mistake however it is possible that your script could break without printing an error message and this is where your debugging skills really come into play your scripts could be written completely errorfree and without any mistakes but it still might not work a reallife example of this is if you were coding your own physical coffee machine you could have scripted it to do everything correctly but if there's no coffee granules or water in the machine it's not going to be able to make your coffee you might be wondering why your coffee machine doesn't work and doing all sorts of checks in your system code until you realize that there's no coffee or water inside and you have to just refill it you might be looking all sorts of things for a while before you realize your silly mistake and obviously that's a physical analogy but you can see where it applies to robot scripting as well when you have these types of bugs in your code that don't show any error messages is useful to write print statements on different lines to see how code how far your code is getting before it doesn't do what's intended sometimes you might think it's a book but it's because one of your if statements isn't executing the code because your condition that you've put inside of it might be wrong or written them correctly so for example if you're checking to see if a number is bigger than five but you've used the wrong operator so it's actually checking if it's less than five but you only realize that when you check over your code and see that you put the wrong operator in it's not an error it's not going to print an error message you're just checking for the wrong thing so that's why it's a good idea to use print statements because if you write prints on each line then you'll see that the code inside the if statement wouldn't print out so you know that it's something to do with that if statement condition it helps to narrow down your focus so you know where to look now breakpoints are also useful because they allow you to stop your code at a certain point before the next line executes and then you can also then choose to execute the next line and pause before you then execute the next line so you can see what's happening it allows you to stop your code at a certain point so that you can review what's going on you just have to keep looking over your code and think logically imagine that you're the script running from the top going down and go line by line to figure out what it's doing and where it might be going wrong I do this all the time and it's a useful way of working out what went wrong so we're going to go through some examples now which I've got a friend of mine to write some code with some bugs in so I don't know what the bugs are and we're going to go through it together and to fix the code so you can learn how I deeper okay as I said I've got my friend Nico 88 to write this code he hasn't told me what the bugs are but this code should add up numbers in a list so all of these numbers inside of this table they should be added up and we'll print out the total at the end so let's run it and see if it works it should print out the total and it prints out 55 but if we add up the numbers ourselves we'll add 4 add 8 at 3 add 6 at 12 at 5 at 7 at 3 at 2 you'll see that it's actually 51 so we've gone wrong somewhere so let's try and work out what's happened here so firstly the total is 0 as we go into the code then we're going to jump into this for loop so it's going to loop through every number in the table so n is going to be the index number so 1 2 3 4 5 because it's the first second third fourth fifth item in the table and BC is going to be its value so that one the 4 the 8 3 6 so it's going to loop through the table that looks good and then it's going to get the value of the total and it's going to set its value to being the current total add and okay I found the bug already so you can see what it's doing is it's adding the index number so the first one first index number is gonna be one so it's gonna add one to the total then it's gonna add the second index number which which will be two so we don't want to add up to we want to add the four we want to add the values of the numbers in the table so we need to change it from n to C and you can see how it didn't print out an error message there it printed out at 55 because it added up all the table indexes so if you were to add up let's have a look here one add to add 3 add 4 at 5 at 6 at 7 at 8 up 9 at 10 at 11 oops sorry my dad there's only 10 items in there so take off 11 there we go you can see it's 55 so the problem was that it was adding up the table indexes so because the table index is the position and not the value it was adding those together but if we now add it up add up the C and we run it again it's 51 which is the correct value so there we go that's the first bug fixed and you could see there was no error message there so that's the sort of error where you just need to go through your code from the top and imagine that you're the script working it out okay so what I did I visualized what the numbers were going to be I knew that n was going to be 1 on the first goround but on the second goaround is the second index there's gonna be 2 not 4 and that's what helps me work out the problem okay the next piece of code is going to set the base plate color to purple and it's going to update a color property so let's see if it works and it set it to yellow let's just have a look at this color though and see if it's the actual color that we wanted so I'm gonna insert a frame or D count matter just so I can check the color 3 value so I wanted it to become purple you see but it's made it yellow instead so what's gone wrong here because the color 3 value is purple so it should be setting it to 98 37 209 but it's not working so why is this I've giving it an RGB value red green and blue but it's not made it purple it's made it yellow so what's gone wrong here now I don't know why this has happened so I'm gonna go and search it on the Internet so I'm gonna go online I'm going to say color three dot new giving wrong color here we go color three not working so let's check it out on the deaf or somebody else is already made a report about this okay so their codes a little bit different to mine but they're trying to set the color three value let's have a look okay color three new expects the red green and blue values to be numbers between zero and one instead of numbers being between zero and 255 like color dot from RGB ah okay so if we wanted to use color three new we'd have to use three numbers between zero and one but because we're using RGB values we need to say color dot from RGB let's try that the house so we're going to go in here and we'll say color three but we'll say dot from RGB okay and now let's try it boom there we go fix another book and you can see again there was no errors in the output and that's because it did what we told it to it set the color to a color three value it's just that we didn't supply it as a number from zero to one so we gave the color three new function the wrong values when we should have been using the color three dot from RGB function and you can see how I went online and found the answer really really quickly if the first answer didn't work then I would have gone to the next one you can see we've got loads of different links here on Google I would try each one until there there comes an a right answer and if there wasn't a right answer then I would post myself on one of these forums okay and the last one we are creating a int value we're putting it in the workspace naming it cash and we're setting its value to 500 so if we load up a game it should be added yep there we go oh hold on there's an error cash is not a valid member of workspace and it's on okay so it's told us the error and it says cash is not a valid member of workspace that is saying that the if it thinks there's no value called cash in the workspace even though there is so this error is a bit vague bit confusing we don't know what it means and sometimes it can give you an error message that doesn't really help to fix your problem and it's told us the time in which it happened it even goes down to fractional seconds and it says script and it tells us the script it's the one in server script service called scripts and it's on line eight so let's just click it to go to the line so it's happening on this line so we're doing something wrong here okay cool I see the problem so very very simple what we've done is we haven't specified the value property because we want to set the cashes value property if I'll just insert an in value in value has a property called value and that stores the the number but instead of saying cash value we've just had the the object itself we haven't told the property so it's trying to change the cash object to be a number and we can't do that so we need to say cash value and you can see that's the the error didn't tell us that that it was the didn't see it didn't say you forgot to say that value on the end it said a different error message which was a bit vague and so this is why sometimes your error messages won't make sense because the scripts it can't work out what's wrong with your code it's not that smart so it just tells you where it went wrong and when you see an error message if it doesn't make sense and it's likely that you've done something wrong on that on that line anyway and it's something that you need to look into so that's what I said said when the error message can be vague so now that we fixed this bug let's try again oh hold on we got another one value is not a valid member of in value okay so okay I've seen what I've done I forgot to put a capital letter for value so again really important that you get the spelling and the capital at capitalization correct so when you're saying a property name such as value you need a capital V and again it didn't say that you forgot a capital V it just said that value is not a valid member of int value which means that there's no such property called value with a lowercase so I knew straight away I'd forgotten the V or value and that's just the sort of thing that will come with experience it might take somebody 10 minutes to work that one out but for me it only took me 20 seconds that's because I've been doing a lot of debugging I've been doing scripting for a while so the more you do it the better you'll become at it and it's also a great way of solving helping to improve your problemsolving skills so let's try it once more and now you can see we've got a lot of delete my old value but I was using as an example we'll run the game and you can see the cash now has a value set at 500 so there we go so now you can see some of the steps that I've taken when debugging my code and as I said at the start you're going to be debugging a lot when doing scripting because no programmer will go through their career without having books it's how you decide to tackle these problems that will help you become a better programmer every developer will find bugs annoying and hard to fix but the more you fix these bugs the more you're building up your problemsolving skills and these skills are useful outside of coding as well so you'll be glad in the end that you have had these books to provide challenges to you I for one like book that might come as unexpected but I like them because they give you an extra challenge and the feeling when you finally fix one after a while is awesome and you never forget that feeling once you fix their book so it will motivate you to keep searching for your solution as I've said there's no such thing as an impossible bug the answer is there somewhere you've just got to look hard enough to locate it so that you can fix it and the worst case scenario is that after a while and I mean after a really good while of trying to fix it not just after a couple of minutes but after a couple of hours or days I've devasted your friends whatever and that's usually when you have advanced code and really big code bases bases you have to rewrite that bit of code it might be that you designed your code in a bad way so that if you rewrite it and take other people as the device then it will run better and become more reliable anyway I hope you found this video useful please give it a like if you enjoyed don't forget to subscribe to my channel for more roblox scripting videos and I'll see you in the next one Cheers and all the best in fixing your books