in this video I'm going to show you how to deal with errors and why you should use PE call in Roblox so we do get a lots of errors in our code sometimes and when we do get an error it breaks our script it prevents it from running so just to give you a little look here okay if we have Hello World Goodbye World and then we have some code in between that doesn't work for example if I spell the workspace incorrectly it's going to throw an error so if we click on run boom we have an error you can see it prints hello world but it doesn't print Goodbye World now this is a typo okay it's an error that's obvious but a lot of the time there are cases where most of the time us our code should work but there are some cases where it might not work which are out of our control for example if we are referencing a service such as the marketplace service the data store service right and Roblox has some kind of outage or mini outage right and and some of those Services go down then they might throw an error when we try to um call some of their functions and we don't want that one small outage to impact the rest of our code so we don't want to stop our scripts it would essentially just bring our entire game to a ho because all of the servers would be poing the Roblox Services some of them might not be responding they might be throwing errors and it would just stop the script and the script would no longer be listening to any events they'd no longer be able to run the game if we had a game Loop they might break so in the event of these issues how can we sort of when we get an error how can we prevent it from breaking the entire script because it's not really productive to stop an entire script for a small error like this well what you can do is you can wrap it in a PE call by saying PE call and then you put your code in a function like this and that P call and that function gets wrapped inside this P call here and when you see p call it essentially runs the code in a in a separate place right it doesn't it when we run our code normally it goes through step by step okay and it waits until this line is done before it moves on to another line okay and this is called creating a new thread when we do the PE call it is is essentially taking the code in this function and it's running it alongside the rest of our code so you can almost think of it as breaking it out into a new script that's running side by side in parallel so we're not waiting for this code to finish before we move on and the advantage of that of moving it into a new thread is that if this code errors if it you know because it will error because this has got a spelling mistake if this code returns an error it's not going to prevent the rest of our script from running because it's going to be isolated it's going to be isolated to this one function which is in a separate thread so it will just end that thread but we have this other thread for the rest of our code right which is for the script so when we do a PE call it's like branching your code off into another thread uh into another separate protected environment and if it breaks it's it's no bother because the rest of the scripts is going to run so let's click on the run and you can see despite the fact we have a typo which would have thrown an error the rest of the code has successfully run so that is PE call and what you can also do is you might want to know you still might want to know that your code is thrown an error so how can we still print the error message without stopping the script we we can peo returns two values it returns a success value which is whether it's true or false and it's whether all of the code inside the function executed successfully without any errors and if that's the case then the success value you don't have to call it success some people call it this some people might just you know do this but I like to call it success because it makes sense in in English terms so we have the success value it's either true or false and then we also have an error message now if you try to call this error it will appear in blue that's because it's a Roblox uh core word right which is used in in in in core scripts so it's used by lure so so we can't use the word error so I just like to call it e for ER and that will be the error message if there is one now of course if it's a success and this value is true there will be no error message so this will be nil so we can then check to see if it's a success by saying if success then we can print PE call threads worked fine whatever you don't have to print anything at all if if it's gone well what we're looking for is if it was not a success so if not success then we're going to warn the error message you can do a print I like to do a warn because it makes it appear in Orange like this so if we click on run you can see it now prints out our error message problem is it doesn't print out the line okay it's printed out line8 but that's where we're print we're doing the warn from it it hasn't told us specifically that it's online for and this is one of the disadvantages of using a PE call it's not really a disadvantage because you'd want to have a PE call anyway because you know not knowing the line on which your code is failed is better than having the code break the entire script so you know if you wanted to debug it though you could just get rid of the PE call and suddenly you'd realize whereabouts the error in the code is because the actual error message would tell you but with a PE call you can't do that okay um so that's it essentially it essentially isolates part of your code from the rest of the script so that if a part of it breaks then it won't stop the entire script it will just kill the current thread where that code is is being executed inside of so yes if you ever do any data store calls Marketplace service calls calls to external apis by roblocks which have a high chance of going down you know over the span of of a year or whatever you'd want to put in a PE call and there's lots of other times where you might want to use a PE call it's it's one of those where you tend to just use it out of caution right if there's a chance the script could break you know if there's a chance the player you're looking for might have left the game things like that you would just wrap it in a peac call I mean look it's two lines right and if you had all of your code in one script which isn't best practice but you know let's not kid ourselves uh at times our scripts can get very long we have you know different things in in in the same script why run the risk of breaking all of that code just wrap the most important things that that could go wrong in a in a PE call and that's not me saying put every single function into a PE call because that's going a little bit over the top but definitely for the things that that definitely could break and it's useful to look in your error report if you've got a game that's out there and and you don't know and you might have some errors have a look in the error report in your games dashboard and then just isolate those errors in a p call because whilst it might not fix the error it will prevent it from stopping the code from running in the rest of your scripts um however just one other thing to know if you have code in an event for example in a player added event uh and if any code in that event was to in in the function of that event was to fail or throw an error that's not going to break the rest of your script because the the the event itself the function from that event is is its own separate thread okay so we're just talking about code where it's it's in that script it's not in its own thread already uh but even if it was in its own thread already you'd probably want to wrap it in a PE still to prevent any other code in that thread from from not executing so I hope this video was useful on how to use PE call if you enjoyed it please leave a like let me know if you have any other videos you'd like me to cover and don't forget to subscribe to the channel for more scripting tutorials and I'll see you in the next one thanks for watching