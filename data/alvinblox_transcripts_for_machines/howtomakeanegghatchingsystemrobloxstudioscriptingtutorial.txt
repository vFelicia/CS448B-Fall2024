hey everyone Alvin blocks here in this roblox scripting tutorial I'm going to show you how to create your own awesome egg hatching system where you click on the dispenser it will take your money away and then the egg will expand and hatch to reveal the pet which you selected and in future videos I'll be showing you how to save your pets and create an inventory so you'll be able to equip different ones and also the pet will follow you around so keep watching don't forget if you want to support my channel at no extra cost you can use the star code Alvin blocks when buying Roy books or roblox premium thank you so firstly I need to show you how to create pets and I found a really good kit which are full of under 100 and quality simulator quality pets if you go to the link which I've put in the description here you'll be able to go and take this pack and you'll be able to insert it into your game through the toolbox so I'm gonna go click on the four squares click on my models and click on pet pack shoutout to lure very good and goof a one two three four publishing these models for free and allowing us to use them what you'll need to do is pick a couple of these pets to use so I'm gonna go into the pet pack and I'm just going to pick a few out okay right click and copy them all I'm gonna delete the pet pack I'm gonna paste them into the game now you can create your own pets if you want it's quite simple all you need to do is get a few parts together make it look like a pet for example if I just make a really quick basic one here I imagine this is like a bee or something what you need to do is just group them all together and then you'd need to articulate a name and you need to instant use one of the parts to be like the main part and I'm going to insert a weld constraint not a weld a weld constraint into it and the each of the part well firstly you need to set part 0 to be the part that the world is inside of and part 1 can be any of the other parts but you need to have a world constraint between the main part and every other part so make sure that you've set up a world constraint all of the parts in which are linked to all of the parts so if you've done that correctly when you select them all and hold down alt you should see this green line and that's showing that this middle part here has a weld that's welded to this part and this part so that when they're moving they won't fall apart so when is forced to the ground the parts aren't gonna uncle they're not going to separate because they're welded together now so when you've done that you need to insert a hitbox so a hitbox is a part which will cover the entire space of the pet so you can see when I click on one of these models you can see there's a blue outline the hitbox is going to cover that entire space and the reason we need a hitbox is because when we code the pets well we need to tell it with the pet needs to know the direction to face when it's moving and what it will do is it will take the front surface of the hitbox now if you insert a part and you go to the surface properties and click on front surface you'll see that it's this surface here the yellow outlined surface so we're going to put a hitbox into the pets we're going to make the front surface be facing the pets face so it's looking this way and that way the the pet will be facing forwards in the same direction as our character so what you need to do for each pet is insert a part name it hitbox and make sure that it is not anchored and that can collide is unselected so ungood and can collide of both false and then move the part so that it's in the pet and route and scale it down so it's only covering the pet so it's covering the whole of the pet like this okay when you've done that it doesn't have to be exact just make sure you're covering the pet so you can't see it so the block is covering it and when you've done that set the transparency to one and then drag this hitbox into the pets model so this is the the this is the bear so I'm going to drag the hitbox into the bear then you need to change its primary parts to the hitbox okay and in this pet kit most of the pets already have weld constraints in them okay this specific one seems to have normal welds so what I will do is I will just convert them all to weld constraints okay so I'm going to get rid of them I'm going to get rid of the previous welds we're inside the hitbox I'm going to add those world constraints part 0 will be the hitbox and then I'm just going to set part 1 to all of the other parts and I'm going to keep duplicating them weld constraint until all of the other parts have been welded to the hitbox so that's going to be for world constraints to weld the other four parts to the hitbox and now this this pet here the bear is ready to go so you need to do that for all of the other pets that you want in your game okay and I'm gonna skip now to the next part of the video remember it's really important that when you're doing this the hitbox part you need to make sure that it's front surface is facing the same way as the pets face right otherwise it won't be looking in that direction it might be backwards or looking a different way so you need to make sure the hitbox front surface is looking the same way as its face okay now I'm using some pets that I created earlier instead cuz I already added the hitbox to them next what you need to do is we're going to insert a script into service script service and we're just going to quickly make a leader stats folder and a cache value so that we can get a leader board and some cash to use later on when we buy the pets okay so this is a very simple script all we've got to do is have a player added event which is going to fire when a new player joins the game we've got the argument and that is the player roblox has given us the player that will join the game so whatever we do to this player will be done to whoever joins the game so we're inserting a folder into the player we're calling it leader stats it has to be called leader stats if you want it to show up on the leader board and then inside of that folder we're inserting a int value because it takes a number an integer and we're calling it cash we're giving a value of 10,000 to begin with so that should cover enough cash for us to buy the pets and we're putting it inside of that leader sacks folder so if you now play the game you will see that we have the leader board showing up here and now we also have the leaders house fold it in our player and the cap so we are able to edit our cache and that will take effect on the leader board but just remember guys when you're changing the amount of cash you have you have to change it on the server so go to server mode and change it there because your changes will only take effect if you edit it on the server ok so now I'm gonna put all of these pets into a folder in the replicated storage so click on the + click on folder and I'm going to set this folders name to pets then I'm just going to select all of the pets that I have and put them into the replicated storage also I forgot to mention make sure that the primary part of all of your pets is the hitbox else they will not work this is because we need to position the model and you can only position a model if you set its primary part next we need to set up a module scripts now this is where we're going to keep all the information about the different pets Rarity's so whether a pet is legendary rare common uncommon etc so insert a module script into the server script service now what I'm going to do is I'm just going to rename this module variable to pet module just because it gives a little bit more description as to what this module is and if you're not too familiar with module scripts I'll just quickly summarize them they hold code and we can execute the code from other scripts so when we return we can require the module from other scripts and when we do that the contents of this pet module table will get sent to our script so anything we put in the pet module will get sent to a script we call it from because we're probably going to be calling functions to choose random pets from other scripts for example when we click on the click detector in our dispenser which we are yet to create so inside of this pet module table I want to insert a another table and that table will have a list of all of the different rarities and which pets are a part of that rarity of each rarity so what we can say is pet module dot pets equals and then a blank table like this and because I've said pet module at the start is gonna put that table called pets inside the pet module now I'm going to insert four different rarities okay so I'm gonna have legendary and you need to put them in to where brackets also in speech marks and each this is called an index so a key sorry and we after her we have to give a value to each key so the value in this case is going to be another table and inside of that table there we're going to put in all the object paths of the pets they're legendary so for now I'm just going to do a semicolon and you have to separate them with a semicolon or a comma I'm gonna do a semicolon and I'm going to just copy this and paste in for my other Rarity's now if you wanted to have more rarity than I do because I'm only gonna have legendary rare uncommon and common just feel free to add another few rarities you know you can have as many as you like just change the name something different maybe like ultra rare doesn't matter the order also doesn't matter you could have legendary at the bottom so inside of here inside of each table we need to write a path to the pets so I'm going to expand each table a little bit just so we have some more space to write our pets in there and so for example if I wanted the B to be a legendary pet I would put its path in this table so I would just say game dot replicated storage dots pets V okay and just put it in there now now our B is going to be recognized as a legendary pet so I'm gonna do this for all of the other pets in the folder now make sure that you have a semicolon at the end of each object path as well to separate them from the others I also have to mention if your pet name has a space in it such as this lava Lord then you need to do square brackets like this don't put a dot just do square brackets then do speech marks and put the name of your pet in there larvae Lord that way you can have a space and it won't cause any problems okay now that we've got all of our pets in there in their respective rarities then we need to now set up another table which tells the script how rare each rarity should be so what the chances of each rarity being picked so to do this we're going to use something called weighted selection and what that means is we can give a number to each rarity and the higher the number the more chance of it being selected so to do this we're going to create another table and it's going to be inside the pet module so pet module and we're gonna call it rarity so pet module dot rarities equals an another blank table now because in this table we need to have the same rarity names as we have put here so use the same names okay so we're just going to expand this table and we're going to put the rarity names in there so the legendary equals I'm gonna set them to zero for now so the same thing as we've done before we need to have the name in square brackets in speech marks as well and it's gonna be equal to a number so I'll just put it as zero for now with a semicolon at the end so just copy and paste this in four times i'm gonna i'm doing it four times because i've got 4 rarities and change the names to each of your rarity so uncommon and common okay the order again does not matter now what i'm gonna do is the rarities are going to be out of a hundred so that so the total weight sorry the total weight because this is random weighted this is weighted selection we have a total weight and weight is going to be distributed throughout these four rarities so we can give we've got a hundred total weight okay and let's give common and let's give it fifty white okay and let's give uncommon 25 weight so we have 25% left to distribute so if there's a 50% chance of getting common then there's gonna be a 25% of getting uncommon and we've got 25% weight or percentage leftover to use here so let's gear let's get 15% too rare okay that gives us 90 and will give 10% to in fact that will give we've 1230 we've will give 30 to uncomment so 30% chance for uncommon so that leaves 20 after over for these two so we'll give 15 for rare and five for legendary okay so the way I've set this up is because the total weight the total sum of these numbers here is now 100 this means that there's a 5% chance of getting a legendary 15% chance of rare 30% chance of uncommon and 50% chance of getting a common okay now what we can do is very soon we can choose a random number between 1 and 100 and then we can loop through all of the rarities and keep adding the weight on to a counter which starts at zero and we can stop when the counter is greater than the random number which we've selected and when we do that we can stop at the current rarity and that will give us the chosen rarity for our pets okay it sounds confusing but I will go over it with you very soon so now we've got the rarity set up let's create a function which is going to select a random pet for us so we can say Pet module because this function again it's going to be part of our pet module table that gets returned to a script when we require the module pet module dot choose random pets equals function it's going to be equal to a function and a ban ending at the bottom like this now what we need to do is we need to select that random number because we've got 100 total weight so we need to choose a number between 1 and that total weight of 100 so local random number equals math.random 1 comma 100 so 1 is the start number 100 is the end number it's gonna pick a random number in between 1 and 100 so what we'll do is we're quite a for loop to loop through this Rarity's table so for rarity comma weight in pairs and we're gonna loop through the pet module dot rarities table you do now because this is a dictionary the rarity is going to be the name here so legendary rare uncommon common and the weight is going to be the value so the the weight here the number of weight and what we're going to do is every time we loop through the rarity we're going to we're going to have a counter I'm gonna call this local counter equals and it's gonna be set to zero at the start and every time we loop through a rarity we're going to increase the counter so we're going to do counter equals counter plus weight so every time it loops through it's going to increase the counter by this weight value here and every time we do that we want to check if the random number which we've generated which is between 1 and 100 we want to check if that random number is going to be less than or equal to the counter and if it is then we're going to stop at that rarity and we're going to choose a random pet of that rarity now this sounds confusing but if you think about it it works because if we have if a random number gets chosen and it's equal to or less than 5 right so if you get chosen 1 2 3 4 5 then that's a 5% chance if any of those numbers get selected then that would give you a legendary because if we were to begin and go into the for loop and we add the first weight to the counter which is 5 ok it just so happens that it is 5 then we would see that the random number which is either let's say it's 3 for example it is less than the counter of 5 and it doesn't matter if it went through the common first because it would see that the counter would become 50 and it would still be less than 50 so it would go to the next one which would be 30 so you can see it would still be less and less and less so whichever number gets picked this for loop here will determine the rarity that you're on because as soon as it gets the the random number is lower than the counter then it's going to stop and use the current rarity that we've chosen ok so when it does find the rarity or the first rarity that is lower than the counter sorry where the random number is lower than the counter then what we will do is we need to get the rarity table out of the pets table here so what this is done is it's chosen a rarity for us legendary rare uncommon or common okay what we now need to do because we know the name of the rarity is stored here because it's the name of the sub table whatnot so table with the index is the index name here of the weight we know that this rarity name we can get the table out of the pets table okay so we can say local rarity table equals pet module dot pets and we can just get the name we can get the table from its name using the rarity variable here so now that we've got that table it could be this one this one this one or this one we know that it has got the the object paths inside of it so what we need to do now is just choose a random pet out of that table so local chosen pets equals rarity table and we can just get a random index out of that so math dot random we're choosing a random number between one and the total amount of objects in there so hashtag rarity table so if there are five pets in this table hashtag rarity table would be five and we pick a random number between one and five and it would get that index out of the table so it's chosen a random pet from our rarity table all we now need to do is return chosen pets and whenever we do call this choose random pet function the chosen pet will get returned it will be stored as the variable that caught the called the function as you'll see very soon and we'll be able to you know put that pet in their inventory in the future or you know reveal something because we've now got that pet so I'm just going to go over what we've just done so firstly we created a table called pets and inside we had sub tables for each rarity and inside of there we've put the object paths or the references to each pet okay then what we did is we created a second table called rare and we set up a weight a total weight of 100 so it could be a percentage because it's out of a hundred and we gave each category its own weight its own percentage chance okay and then we set up a function which would generate a random number between one and a hundred and depending on that number we would use this for loop to determine what rarity it came under so the basically the way to see it is if the random number was 98 for example what we'd do is would enter the for loop the counter would be 0 to begin with and then we'd add on the first weight which is the legendary one so the weight would be 5 but 98 is not less than 5 so we'd have to go around again and add on the next weight which would be 15 taking the total counter up to 20 so is 98 less than 20 no it's not we'll go around again we're going to add on the next weight which is 30 then we're going to ask ourselves again it's 98 less than 50 and there it's not and then we're going to go around again add on the last weight and it's going to be common so it's going to add on 50 and then we'll say okay it's 98 less than 100 ah yes there we go so the current rarity that we're on is common so we're going to stop there and we're gonna give them a common pet whereas if it was a lower number such as 2 we would say okay is so we're added on the first counter which is 5 so the counter is now 5 is 2 less than 5 yes it is so they obviously got lucky they got on number less than 5 so we're gonna give them a legendary pet because straightaway the counter was 5 but they had a number less than that if that makes it any clearer hopefully it does right now we're going to set up our dispenser and the click detector on there so we can actually buy the pet so you can build your own dispenser I've got one here which I'm just going to copy and paste into the game here we are and inside of here I've just got an egg mesh you can easily find those by going to the market place clicking on meshes and searching for an egg you'll be able to find out and I've just put it inside of the dispenser now inside of here what I have done in fact I will show you again I've just created a little you know parts which I'm going to put some text on inside of it I'm going to insert a surface GUI and I'm going to inside of there insert a text label then I'm going to just find the surface which is facing me so it is the top surface I'm going to go into this surface GUI and set the surface to the top you always might be different and I'm going to set the size of this text label to 1 comma 0 comma 1 comma 0 so it takes up the entire part then I'm going to set text scale to be true and I can change the font if I like and I can change the text to say egg and a few spaces to get on the next line 500 cash okay there we go so now I'm going to insert a click detector inside of here and then I'm going to insert a script the click detector allows it to get clicked because it's a part right then I'm just going to set up a very simple mouse click event so Swift's got parents dots click detector but mouse click connect function and inside of here we're going to say player because player is the argument that roblox automatically passes to this function which will tell us the name of the player who clicked the click detector make sure you add on a end and closing bracket here and now what we need to do is just check if the player has enough money to buy the cash so we can say if player got leader stats cash not value if you named your currency something different you'd change cash to whatever you you've named it if it is greater than or equal to 500 that's how much I want this to be to cost if you want it to cost something different change this number so if they have enough money then we need to deduct the money from their account so player dot leader starts cash value we're gonna set it to its current value take away 500 okay now if you wanted to you could set up a variable called cost and set it here and then if you change the 500s here to cost you'd only have to change it once so now what we need to do is choose the random pet now that they've bought it so we need to require our pet module so we can say and we'll give it a name so I'm going to name it pet module in the service script service and then I'm gonna say local pet module equals require game dot server script service curl on wait for child pet module okay make sure you add the require in there and you have the closing bracket on the end that is crucial so it downloads kind of downloads the functions and the tables which we declared in the in the module so we can now call up the choose random pet function by saying well firstly because we're returning from the function the chosen pet we need to have this as a variable so we can pick whatever is it returned up and we can use it again so local pet equals pet module dot choose a random pets okay like this with the two brackets on the end so it's because it's a function and we have to call it so what we can then do is print out pets dot name dot dot select it so it will print out the name of the selected pet and if it does we will know that it worked so let's go into the game and see if it works let's open up the output and oh we just still run over to the box let's click it oh we've got an error okay no need to worry let's just go into the pet module because it's saying service script service dog pet module on line 48 Oh whoops my bad we forgot to say pets X then he made a typo and I said pet module dot pet but we have to say pet module dot pets because that's the name of the table let's try once more I'm gonna go and play here soon have to walk over there again and at this time if we click on it you can see bear selected so it's selected a pet and it took my money away we do it again it's taken away another 500 so it's working perfectly brilliant ok so now I'm going to show you how to make a really awesome reveal so that when you buy the egg it will like as if hatch the egg okay so what I've done is I've built a studio now this is is just a room with pink walls and ceiling and inside of it I've called the model studio by the way because it's kind of like a movie studio or a set so we've got loads of pink walls in here we've got three invisible parts which have spotlights in them so sorry surface lights which are pointing light up in the top face so that it's light coming up and you can see the egg we've also got a camp part you can see there now that's where we're going to position the camera to be now you can add your own camp art just click on parts you know everyone in drag it in and call it camp art with a capital C in capital P and make sure that the front surface though which is this one is facing towards the egg because when we set the C frame of the camera it will be looking in the direction of the front surface I've also got a confetti parts with some particle emitters inside and when you enable them they will just spew out confetti this was actually a free model so just search for confetti and I'm sure you'll find one and then we've got the egg I've just got a mesh of the egg and we'll be able to skip this so that the egg gets bigger and then when it eventually reaches a certain size then we can make it explode and then what we'll do is we'll spawn in the pets around about here and then we'll make the egg go transparent so that we can make the the pet appear and we'll also have an explosion so what I'm going to do is I'm going to move this studio underneath the map so we can't really see it make sure you put it underneath the base plate because the base plate is quite thick you might actually get it stuck in the base plate so move it underneath the base plate what I'm going to do is I'm going to create a remote event in the replicated storage I'm gonna call this remote events hatch egg okay and what we'll do is in the in the script inside the egg dispenser when we choose our random pets I'm going to say game dots replicate storage dot hatch got hatch egg curl on fire client and I'm going to put the player inside of here what this is going to do is it's going to file the remote events for the specific player who bought the egg and then what we can do we can set up a local script in the start GUI which will pick up when this remote event gets fired and then we can do all the cool coding for the camera etc to reveal the egg so what we'll do is we firstly need to create a variable for the camera so local camera was game dot workspace dot camera then what we need to do is set up the remote event handler so game the replicated storage hatch egg dot on client event colon connects function and drop a line should get this end added in here so when we fire the remote events to the client we need to also send the pet which they've just chosen so because we returned the chosen pet to this variable I can just do comma and then send the pet over to the room so it can be picked up in the local script so we can have an argument for the pet so we now know the pet that they have bought so all we need to do now is for firstly position the camera to be in the studio so I want to create a second variable for that studio so a local studio equals game dot workspace studio if you're building your own studio then make sure you name it studio or something else and if you do name it something else change it here so how do we set the camera to be looking at the cam part well it's very simple firstly we need to set the cameras camera type to be scriptable that just allows us to edit the cameras see frame with a script so camera got camera type equals enum so an enum is a predefined list dot camera type dot scriptable when you've done that we can set the cameras C frame to be looking at that part we can say camera dot C frame equals studio.com part dot C frame that's why I told you to name the cam part cam part so now that we've done that we can make the egg get bigger we can do this with a four loop so for I equals one count up to fifty we'll do it 50 times and we'll increase by one each time and then inside of here we can just make the egg get bigger so we could say studio egg dot size equals studio egg size so we want to get its current size but then add on a vector3 value so that we can add on noir point one so we can say not point 1 not point one or point one and that's going to increase the exercise by oh not point one studs on each axis fifty times but each time we'll have a short weight of naught point naught one seconds so we can actually see it getting bigger now what I'll do is I'll add a weight here around one point five seconds just though we can actually see the egg before it starts to get bigger and any code that's underneath this will only run once the for loop is finished so by now the the egg will be huge and it will be ready to hatch so to hatch it we could make a massive explosion so we can say local explosion equals instance new we're going to insert an explosion object a roblox explosion and we can say explosion blast blast radius equals ten that's how big the explosion will be so ten studs explosion blast pressure we want the blast pressure to be zero so it doesn't cause any damage we just want the effect explosion position we need to position the explosion to be where the egg is so studio got egg dot position we then need to set the explosion type and again we don't want it to cause any damage or craters in the map so explosion dot explosion type equals enum again enum is a data type which allows us to select from a predefined list so explosion type dot no craters because it can either be craters or no craters so we want no craters and then explosion not destroy a joint radius percent again we want to set that to zero so it doesn't do any damage or destroys any joints or anything that are already in the map so this way the explosion won't do any damage we'll see the visual effect of it so we can then parent the explosion we can put it inside of the egg so explosion to parent equals studio egg and then we can set the X transparency to be one so studio got egg but transparency transparency equals one when it's one it's completely transparent you won't be able to see it and that way it just makes the effect that it blew up even though we want it back in a few seconds to go back to normal size etc so now that the egg has been hidden we can clone our pet into the studio so we can say local pet clone will make a variable for it for the cloned version equals pets curl on clone and what we want to do is we want to anchor the pet now I think I forgot to mention this earlier but if you go into your pets in replicated storage just make sure that all of them are not anchored because if they're anchored they won't move with your character but they will also fall if they're not being if their position isn't being set and we'll have a script that will set the position but when they're in the studio they'll just fall to the ground so we need to set all of the parts inside of it to be anchored so to do this we can have a for loop that will loop through all of the children of the pet clone so pet clone get children for IV in pairs is the index we're going to worry about that V is going to be each individual part or object firstly we need to check that it's natural part so we say if he is a base part because it could include a mesh part normal part et cetera but these are all base parts so if it is a part then we'll set its anchored property to be true and the next thing we need to do is set the transparent sort not transparency set the confetti in the studio to go off so if you don't have any confetti in your studio don't worry about this but what I'm going to do I'm going to create a for loop that will loop through all of the particle emitters inside of the studio so if we look in the studio here in my confetti all of the children my particle emitters we can just check to see if that child really is a particle emitter and if it is offset it's enabled property to be true and when I do that when I do set the property to be true then it start spewing out confetti so if we go back here to the local script the next thing we need to do now that we've set the pets anchored properties to be so it's anchored and fully anchored and ready to go we can now parent it to the studio we are parenting at last so that it doesn't start falling or anything we need to know that is totally anchored before we do that and the last thing to do is to set its primary Part C frame so we can actually position the pet to be in the studio so pet clone curl on sets primary Part C frame we need to position this to be and around the same location as the egg so to do this we can create a new C frame C frame dot new and inside of here inside of these brackets let me just make it a little bit easier to see inside of the C frame got new brackets we want to say studio not egg drop position so we're positioning it where the egg was but we also needed to be looking and facing the cam part so the second argument in a C frame will tell at the script where it should be looking at so where it should be positioned and facing so we want it to face the studio got cam part but position you want it to face the camera so that will make it face the camera and be in the right location next I'm going to animate the camera so it bounces and looks directly it starts to zoom in at the pet so to do this we need to setup a tween using the tween service so let's go ahead and add between service at the top local tween surface equals game color on get service between service okay now when we've got this we can set up some properties for our tween we need to give it a tween info so local tween info equals it's going to be tween info dot new because tween info is the data type which contains lots of data about a tween so the information we have to give it is the time so time the easing style direction where it's going in or out the repeat counts whether it reverses and the lay time okay so the time is how long it's going to animate for so I'm going to say two seconds the style is one from a predefined list any of these so it could be linear if it just keeps going animating at the same speed but I want it to be balanced so it bounces into the pet the direction is either in or out this doesn't really matter it's just about the easing style and how it plays is indirection for me though I want it to be out because it's animating outwards the repeat count I don't want it to repeat once it's done and whether it reverses I don't want it to reverse that's going to be false and the delay time again zero no delay is needed because it's not going to repeat itself right once I've done that I'm gonna create the tween so local tween this is the animation where we tell it what we want to change what we want to animate so tween equals tween service creates we want to animate the camera which we've set as a variable already and we we now need to give it the tween info oops between info variable like this so make sure it doesn't go blue and then the last thing we need to do is give it a table and this table will contain all of the properties of the camera which we're going to change and we're going to change its C frame so say C frame equals C frame dot new and inside of this we're going to set it to the we want it to be looking at the pet so pet clone and because you can't get the position of a model we have to get its primary part position which is why I said earlier make sure that you set the primary part of each pet to be the hitbox so pet clone dot primary part and I'm going to zoom out of it here pet cloned up primary parts dot position but because we need to be a few studs out so we can actually see it because the position is in the middle of the pet we need to say plus and then in brackets will say pet clone dot primary part dot C frame dot look vector because look vector is a property of the C frame let's just give a bit of space here look vector at times five so it will be the direction the forward direction x five studs so it's going to position the camera five studs from the pets okay so we can actually look at it and then we want it to also be positioned a couple of studs higher so we can actually get a nice view of it from the top down so I'm gonna add on vector 3 new 0 comma not 0.75 comma 0 so we're gonna add on a roundabout not 0.75 studs to this so that it's just above the pet looking down on the pet then the second argument which is after the comma is going to be worth looking at and we want it to look at the pet so we want it wanted to look down at the pet position so the second argument will be pet clone dot primary parts but position C frames are definitely confusing if you're new to them but I am having a video put up on my channel this week about how to use them so I recommend checking out what's will do though is it will position the camera to be looking at the pets just from slightly higher slightly higher up so you can see the top of it as well so we'll be looking down to it so the first piece of data we gave to it the first position is telling the camera where to be positioned so just just five studs out from the pet but looking but no point seven five studs above it and the second position here is where it will be facing so it's going to face the pet okay so now that we've done that we can play the tween so we can say tween curl on play and that will animate the camera to be looking at it then we can wait some time so maybe delay five seconds wait five and then we can reset everything back to normal so we can say camera camera height equals enum camera type dot custom so it can go back to looking at the player we can set the studio egg transparency back to zero so it can be used for next time and we also want to reset the studio exercise back to normal because don't forget we've made it bigger so studio egg dot size equals vector three dot new and the original size of the egg if you look in the studio it is four point seven three two comma 6 comma four point seven three two so this might be different for you so change it if you wish we then need to destroy the pet clone because this isn't the actual pet it's just the pet that we are showing on your screen to show that which pet you got and then all last thing we need to disable the particle limiter so I'm going to copy this code again you don't need to add this if you don't have any confetti but basically the same thing I'm gonna set the enable property to be false okay let's go ahead and check this out so let's just double check we call the hatch egg fire clients from the server so that's telling our specific player because we we we have that we input the player that we're going to fire this for so we can pick it up on the local script and you know do all this great stuff to show the pet that you've got anyway let's go and test it out we're gonna click on play here and wait for it to load and then if you click on the egg look hopefully it works the egg gets bigger and there's an explosion and it works but the only thing that doesn't is the camera movement so let's see what happens here we have a slight error it says unable to cast a dictionary on line 56 so we'll check that out go to the line 56 and okay it's to do with our tween let's just check this out oh I know it's because we've forgotten a closing of brackets I believe yes we've actually we've put one before our second position when it should actually be at the end there so this does look a bit confusing I will just add some spaces to try and make it a little bit easier to read so we've got the first brackets for one for the tween service create which were ending here we've then got the swiggity brackets for our properties we're changing the C frame and then the you've got the other close the bracket pair for the C frames here which we're closing there so I was just a typo on my end we click on the play button again and let's see if it will work this time so the egg gets bigger and boom it animates the camera to be looking at our pet and okay after a couple of seconds it resets and this time it's the B so it should have reset and this time we get to be so excellent so that is awesome I've just shown you how to make an egg hatching system on roblox in my next video I'll be showing you how to add an inventory so you can equip and equip your pets and also how to save them so look out for that video if you new on my channel make sure that you're subscribed and click the like button so you so I know that you've enjoyed them and don't forget to also check out my twenty20 beginner scripting series it will work in the future as well so it's not just 2020 but it will teach you how to script on roblox especially if you found this video a little bit confusing you stick with it because I'm sure you'll be able to learn how to script anyway thanks for watching and I'll see you in the next one Cheers