welcome to part 6 of my piggie series in this episode I'm going to teach you how to add a map voting system to your game so firstly you're going to need to create a GUI for the map voting now to save some time again I'm going to publish this as its own model so head to the description take the model and then you'll be able to insert it via tool box so into the tool box click on the grid head to my models and insert the map voting kit which you should have taken then if you just drag this into your main GUI and I've closed the core tool box so make sure it's in main GUI and then what you need to do is for all of the maps that you have if you go inside of the map voting frame and you go inside the grid frame you'll see that we've got a UI grid layouts and that arranges all of the GUI elements inside of the grid into a grid so I've got two two buttons in here because I've added a second map now this will only work obviously if you have more than two maps so he's only got one map at the minute I wouldn't suggest adding this although you can do and you can use the second model as a test so the more maps that you add just duplicate another image button and it will add it to the grid and the more you add then what the more it will put together so when you create a new map you need to name the image button so this image button it needs to be the exact same name as your map so if you've got a map which you've added I need to actually add a second one called chapter two but if you were to add another one you wanted to call it epoch chapter then you'd have to name your image button I pick chapter so you need to have these in place before you start the game or publish the game these need to be in place and then you don't need to do anything else keep the names of the text labels the same but you can change the chapter name Tech to the name of your your map so epic chapter and we can say that that is Chapter three okay so once you've done that we're going to select map voting and set the visible property to force now we're going to create another local script in the main GUI and this is going to be for our map voting I'm gonna name this clients map voting and inside of here I'm firstly going to loop through all of the image buttons in our grid frame so um we're gonna create a variable for that grid frame I'm gonna call it local vote grid then I'm going to loop through everything inside that folder so for I be in pairs vote grid come on get children do we need to make sure that we're selecting only the image buttons and not the UI grid layouts so if V colon is a image button and also that there is a map in the chapters folder of the same name and replicated storage dot chapters find first child V dot name because the name of the image button needs to be the same as the name of the map then and what we'll do is we'll set up a mouse button one click event so when the image button is clicked connect function we're going to fire a remote event to tell the server that we've placed our vote so going to replicate the storage insert the remote event and call it place votes then we're gonna say game got replicated storage dot place votes fire server and we need to tell the server the name of the map that we're voting for so the name of the image button V dot name when you've done when you've done that we can now head into a server scripts to handle the voting part so I'm going to go into service script service into the event handling in fact we're gonna go into the game logic into the round module and I'm going to edit the map selection script okay so again he's only got one map at a minute I would leave the random selection until you've got another map so this is only going to work well if you have more than one map everyone's gonna be voting for the same one but to make the map voting work we're going to remove that and we're going to firstly create a big table to contain all of the votes for each map then we're going to loop through all of the chapters in the game and create a sub table inside that big table for that specific map so the final table will look something like this and inside each table will be the names of the people that voted like this and then you can see which table has the most votes so what we'll do is we will say for I V in pairs game got replicated storage of dot chapters get children so looping through all of the chapters in the game and we're going to create a sub table inside the big table and that's very simple we just say votes and in square brackets the name of the map which is going to be the name of the sub the sub table and we're going to set it to a blank table then when we get a place vote request from the client through that remote event we can add the player's name to that table so very simple we just need to set up a connection an event connection called local place votes connection we're creating a connection so we can disconnect it when the voting time is up so that we can stop the votes from coming in and we're going to create that to write events . so game doors rad k storage up place votes when we get a fire server we can pick that up with the player and the map name which we got sent as a parameter then we're going to end it with the closing brackets and after 15 seconds we're going to disconnect that connection so people won't be able to send in their votes because we're no longer listening to the remote event now when we get that place vote we need to firstly check if there is an actual table in the big table with the maps name so if the votes map name then if there is that table for that map then we're going to loop through the all of the different map tables in that big table to see if they've voted before and we're going to remove their votes so the V value will be the player votes tab for each map in pairs we're looping through the votes table so the player votes tab will be the individual table for each map so the chapter 1 table chapter 2 table etc so we need to then loop through that player votes table we're gonna use a different high value so we don't overwrite it for X well it's not over right but just yeah just so that we can have a different name so we don't get confused for those values so for X and then player name is going to be the value in that table that we'll be looking at for each player in pairs player votes tab do we're going to need to check to see if the player name that's in that table is equal to the player object's name so player dot name so if we found the player that's trying to place a vote if we found that they've already placed a vote in another table we need to remove it so we're going to say table dot remove player votes tab will remove from the current player votes table we're going to remove that index value of that player because X is the index value the counter of where that players votes is stored within the chapter votes table and we're removing it then we're going to break out of the for loop because we're no longer looking for it with breaking out of this for loop here and that will run for the rest of the chapters in case for some reason they have another vote somewhere else so that will remove their votes from the table if they're already voted for a certain map now we need to add their vote into the new table that they want to vote for so very simple table dot insert and we're going to say the votes table we want to insert it into that specific map table and we're gonna insert the players name like that and there we go now when somebody is voted we need to update the GUI to show the new number of votes for all players so we're going to create another row height event I'm going to call this remote events website is a folder I'm going to insert a remote event I'm gonna call it update votes count okay and then if we go into the clients script again we can just set up a very simple connection event for this so we will say game bottle replicated storage dot update votes counts dot on client events connect function and we're going to send the votes table to the player and we'll just pick it up with an argument called data and if we just go back to the round module what we can do is we can say game replicate that storage dot updates vote counts fire all clients and we're going to send the big votes table so we can decode it and get the information about the number of votes for each map on the client next what we need to do is create a value in replicated storage and this value is going to be a ball value and it's going to be called map voting and this is so that if you're in the menu and because we don't want to show the the voting GUI if you're in the menu so when you press the menu button we can check to see if a map voting is currently happening and if it is currently happening then we can show you the map votes GUI we'll get to that in just a little bit later on but what we'll do is before the wait 15 starts we'll set this value to be true and then after 15 seconds we'll set it to be false so that we can tell it other scripts that the map voting has now finished now we need to workout after 15 seconds which map got the most votes so we're going to need to loop through the big table but we're going to create two variables one for the most votes the number of most votes and the most voted map so local most votes I'm going to set that to nil for now and local most voted it's also going to be now then we're going to loop through the big map table so for I and then each individual table within that votes table sorry will be called map table and so for each individual table for each map we need to count the number of votes that they've had so the local votes are going to be the number of objects within that map table so because we're inserting the players name into each table then there's going to be two objects if there's two votes for a map so this is this votes variable will tell us how many votes that map has had now we need to check if most votes is nil to begin with because it could be the first map that we're checking so if it is we'll set the most votes to the current amount of votes and the most voted will obviously be the index of this table because it's the first one we've checked but if there currently is a map with the most votes it might be the next time that loops round we need to check if the number of votes is greater than or equal to the current most votes and if it is then we're going to change the most votes to be the vote count of this map and the most voted will be the index of this map table so we have updated the map the most votes value to the map because we've seen that it's got a greater vote count than the one that currently has the most votes so now what we can do is outside of this for loop we need to firstly check to see if after we've gone through all maps that most votes if it's nil or if most voted is nil then so if there is a so if no votes has been recorded then we're just going to select the map randomly which is what we've been doing before so we can just firstly create a chosen chapter variable and if there are no votes we will select a random map which is the code that we've done before taking a random map out of replicated storage else if there have been votes recorded then we're going to just say chapter chosen chapter equals game dot replicated storage got chapters and we're going to get the most voted because this I it's not actually going to be an index count it's going to be the name of the map because it's it's the key now when you have a table inside when we've set it up like we have here and if we go this week what we can't go back but the eye part is going to be the name of the map because when we inserted all of the sub tables we gave the table its name was going to be the name of the map so the eye part is the name of the map so the most voted is going to be the name of the map so we can just say game to write weekend storage dot chapters and in square brackets put most voted and most voted will be the name of the map with the most votes and then what we can do is say status dot value equals chosen chapter name has been selected wait da twostring most votes to print out the amount of votes that they got we can do a wait five seconds and then we'll return the chosen chapter back to the game logic script so what we've got to do now is we need to code the remote event which is going to make the GUI appear and then go off screen again so we'll insert another remote event here and I'm gonna call it toggle map those now if you go back to your client map voting and we'll leave this update vote count for a second but we're gonna create the we just want to copy this line and put it in again we're going to change update vote count to say toggle map votes and we're going to have an argument to be the visibility so whether it's true or false so then we can firstly check to see if the player isn't in the menu because we don't want to show it if they're in the menu so if not game dot players got local player find first child in menu then scripts the parent map voting invisible equals visibility because script the parent is the main GUI and we've now got this map voting frame in there so if you get an error check that you've got the map voting frame in your main GUI so this will now make the GUI appear or disappear when we call it from the server so we need to go back to the round module and now we can firstly at the top of the scripts at the top of the function we can say game look replicate storage got toggle map votes curl on fire old clients and true to make it visible and then later on just after the 15 seconds when we set the map voting value in replicated storage back to false we're going to fire again but set it to false so make sure you've changed the true to the false now all that's left to do is to loop through the data that we've sent to the update vote count function and then we will just update the votes text label in the chapter image button so I'm going to show you how you can do that right now so so if you think the data argument is going to be the main votes table then the eye is going to be the name of the map and the V is going to be the value attached to it which is gonna be that table full of players so we can firstly check to see if the there is a image button in our vote frame grid with the chapter name so there is obviously chapter 1 chapter 2 and epoch chapter so if there is a image button there then it's going to set the text of the votes text label to the number of objects within that table so so if there are two in that table for chapter one then we're going to update the image buttons votes text to be two lastly if we go into the client main script just so that we can make the the voting do I appear when you click the play button so let's imagine someone's in the game and they've joined after the map voting screen has shown up for all players but they then press the play button midway through voting and we need to make it show up for them so what we're going to do is in the intro to play function event we're going to say if game got replicated storage dot map voting dot value equals equals true so that we know that a vote is currently in progress so if there was a vote currently in progress then we're going to say scripts got parent got map tile so you got map voting not visible equals true and we should be good to go okay here we are and we are the voting has started so miss a vote three so hopefully he'll change his vote to Chapter three go and it says epic chapter has been selected with one vote brilliant and then the round begins I'm going to actually run some code to kill everybody so we can start a new round okay cool awesome so we can just start another round and this time we're going to vote for a chapter two so hopefully everyone votes for chapter two here it does keep thee it just keep the stats from the previous round so if you if you voted for chapter 3 it will start off saying one vote for chapter three but then when someone votes it will reset so there we go it says chapter two has been selected with four votes brilliant now let's try and balance the votes now if we can oh okay hopefully it stays balanced and it selected epic chapter and if there are two maps with the same amount of votes it will basically just randomly choose the them because it will just be the first one it finds which has them the most it will be the last one I think actually that it loops through if it has the same amount of votes because it will update the most voted to that map so it doesn't really matter because if they have the same amount of votes anyway it will be random so shout out everyone that just came along and helped me test it out so kayo Hana Sione Dyna mr. keleti ggd savage log P one two three four six mr. crazy GG one two three Nick through seven seven swag fam TTFN and as I perk you alright so now what you could do as a way to stop the votes appearing and to reset them when the map voting GUI comes back on the screen is doing something like this so in their toggle map vote you could say for I comma V in pairs scripts got parents sorry the votes grid come on get children do if V find first child votes then the votes dot text equals zero but in a string like this and then whenever you fired from the server and toggle map votes votes you watch closely there was five votes imagine that was the old votes when that next got fired if we just open up their map voting again it gets reset so there we go so that's how you add map voting to your piggy game now there won't be any more uploads on this series for a while because I've pretty much finished it off now might add some more features in the future and I will keep supporting it but as I said where I take a break and do some other videos so thanks for watching hope you enjoyed the theory so far and hopefully I'll see you in the next one Cheers bye