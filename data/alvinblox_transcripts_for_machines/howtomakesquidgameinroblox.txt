today i'm going to show you how to make a game like squid game on roblox if you didn't know squid game it's an insanely popular netflix show at the minute and loads of similar games are appearing on roblox so we're going to be making the red light green light game in this episode now if you want to get the finished project with all included scripts instead of having to write out the code and watch the entire tutorial you can get them by becoming a premium member of my channel so you all you need to do is click the join button below the video if you're on mobile there'll be a link in the description now i'm also going to be giving you the map and the characters as a kit now i decided to instead of use the original squid game doll i've decided to use something a bit better than that but in my opinion anyway i'm using a bacon hair but if you want to use your own squid game doll don't worry in the roblox toolbox there are plenty here for you to choose from all you need to do is configure them just as i'll show you in the tutorial right let's get into it right then if you've never made a roblox game before we're going to be using roblox studio this is what all roblox players use to create games now if you haven't got it don't worry i'm going to leave a link to the description you should be able to go to roblox.com forward slash create be able to click a download button from there just install it into computer once you load it up it'll ask you to log into your roblox account go ahead and do that and you should see this screen now we're gonna go ahead and click faceplate once you've done that you should see a base plate like this now what we need to do is we need to go ahead and get that kit so go to the link in the description where it says the squid game kit and then go and click get okay so you should see this click on get and get now and now this is in our inventory so let's go back to roblox studio okay now back in roblox studio let's click on the home tab and select toolbox now if we click on these four squares and then select my models you'll see the alvin blocks squid game kit so go ahead and click on that and it will insert it into the game now let's close the toolbox okay what i'm going to do is i'm going to select the squid game kit in the explorer i'm just going to move my camera up to find it alternatively you can just press f on the keyboard so now we've got our kit what we need to do is we need to put everything that's in the kit in the right location so i'm going to right click on the squid game kit and i'm going to click on ungroup okay now we've got four different objects which have appeared we've got a thumbnail camera and this is just nothing to do with the game so we're going to delete that so right click delete the next thing is saying ungroup in the workspace so it's already in the workspace so we're just going to right click on it and select ungroup this is our map then i'm going to take the second model which says ungroup in server script service drag it into the serverscript service right click and ungroup this is our ragdoll script so that when a player dies they'll just fall flat into the ground and next we're going to drag the third one into the starter gui then right click and ungroup now you'll see two guys one is for our squid game to say red light or green light and this one is just a warning for anybody who is using the kit but isn't watching the video so you can just select the warning gui make sure you select warning and not the client select this one here right click and delete all right we're ready to start coding okay so i'm going to show you how to set up a custom character now we've got a doll here but i said i was going to be using my bacon hair and if you're using the kit you will see a bacon hair not this doll so if you want to get your own doll go to the toolbox click on this little shopping basket and select and type in squid game doll okay and then you can take one for your own okay i think this one should be perfect and what you want is you want to have a model called doll and you want to have it with a body and a head okay you just want to have a body part and a head part you can have multiple parts just make sure you've got a head part in here and one called body and then put it in a model and make sure it is called doll so i'm going to remove the doll because i'm going to be using my own bacon hair because i want mine to be more original still with that squid game theme to it and what i'm going to do is i'm going to search for a bacon hair okay bacon hair there we go i'm going to insert into the game now i'm going to name this model doll okay and i'm gonna then inside the model what i'm gonna do is i'm just going to get rid of any of these scripts because we don't need these scripts and i'm just going to do a quick check to make sure there's no viruses in this model it looks good to me there's no scripts or anything we don't need to have scripts in this npc so delete any scripts and then i'm going to click on the humanoid and i'm going to select display distance type in the properties tab if you don't see these two windows by the way click on view and click on explorer and properties i'm going to select the humanoid display distance type and set it to none that removes the name above the head then i'm going to take the uh where is it where is it we're going to go to the head nope we're gonna go to the humanoid sorry and we're going to insert actually we can scrap that we can just take our doll and we can resize it like this and hold down shift and it will just resize okay so now we've got a large bacon hair character i'm going to move it over here and i'm going to rotate it like this okay cool so we've got our bacon hair and what i'm going to do is i'm just going to make sure we've got the head and that is the main part we just need a head so that we can turn it around so now that we've got our doll what i'm going to do is i'm going to set up our script but i'm going to take this doll i'm going to put it in the map okay so inside of our map we should now have a doll and inside that doll we should have a head part i'm going to select all of these body parts here and i'm going to set the anchor property to be true this is just so that the bacon hair doesn't fall apart when we play the game so if we play it you can see our bacon hair here uh the head the hair has fallen in let's try and work that one out okay i'm just going to move i'm going to the power hair i'm going to select the handle and i'm going to make sure that is anchored as well okay so let's try it once more click on run and now our bacon hair is perfect right let's get coding then what i'm going to do is i'm going to close the map for now i'm going to insert a script into the server script service i'm going to call this script server okay but you call it whatever you want this is just a server script that's going to handle everything to do with the game so firstly let's define a couple of services that we're going to need we're going to need to get the tween service so we're going to say local tween service equals game code on get service tween service like this okay and what this will do is it will allow us to move parts such as the player's head the the doll's head next we're going to get the players service so this has some handy functions which we can use to get players in the game we'll need this for when we are getting our contestants when the game starts so local players equals game code on get service players like this and don't forget you can pause the video at any time to copy out the code if i'm going a little bit too fast okay you can also turn the speed down as well so next i'm going to get the map and we're storing these things as variables so we can quickly access them later on so localmap dot equalsgame.workspace.map then we're gonna get our doll local doll equals map dot dot and then we're going to get our uh ui for the timer you can see in the map here that we have a timer and if we go into the map and we go to our timer part here it's got a surface gui that lets us put text on a brick and inside of it it's got a time label and you can actually change that to have any text you like so i'm just going to keep it at three minutes for now but um we will code this in our server script so let's say local timer ui equals and since it's inside the map we can say dot timer dot ui okay next let's create a variable to store uh the amount of seconds that our game round will be so i'm gonna say local round underscore duration underscore seconds okay this is just the way that we write our variables it's like the common practice of writing a variable uh you don't have to have underscores it's up to you but i just prefer to so i'm going to set this to 60 seconds so this is going to be one minute and by the way these two hyphens indicate a comment so it's like you can add your own notes so you don't forget things so i'm just noting down that's one minute and you can change this to however many seconds you like it's just going to increase the length of the round next we're going to create a tween and this tween is going to spin the head so what we can do is we can say local spin tween info and this is just setting up the information for the tween so we're telling it how long is it going to take to spin the head is there going to be a specific animation style like an easing style so we're going to say tween info don't new and you can see we've got the time on the screen first so we put the time in seconds so one second the easing style so that's like the the the kind of animation so will it be bouncy will it be a linear style uh you'll see later on if you change them you swap out the easing styles you'll see how the head turn might be a little bit different so we're just going to say enum dot easing style dot linear then we're going to do a comma and we're going to say enum dot easing direction dot in out again this is just telling the script the style of the animation and then what we're going to do is we're just going to add a closing bracket here okay so now that we've done that what we need to do is we also need to um we need to create two tweens using this information so one for when it uh it goes so the head goes to face the character so it turns like this and then when it turns back like this okay all right you get it so we're gonna need two tweens one for when there's a red light so when it's red it's gonna go this way when it's green it's going to go back to facing the wall so let's set up our green light between so we can say local green light head equals tween service colon create and in here we firstly need to say the object that's going to be tweened so the object is going to be animated and that's going to be the doll's head so this is why it's important to have a part in your doll called head now i'm going to leave the two dolls in there the bacon hair or the uh squid game one so you can choose but just make sure it's called doll and it has a part in there that is anchored called head so we're gonna say doll dot head whoops like this then we're going to do a comma and we're going to pass our spin tween info to this function so it's just telling us how the tween is going to what it's going to be like how it's going to be animated and then finally we need to tell the script what things we want to change during the animation so we want to rotate the head so i'm going to put a table here which is a pair of squiggly brackets and then inside of here we're just going to say that we want the c frame we want to change the c frame so that is the position and the orientation of the head and we need to set this to a new c frame so let's create two variables uh in fact let's create one variable because we only need one for the original head position so the original head c frame is going to be the doll dot head dot c frame so the current position and rotation of the head which is facing the wall so we can say c frame equals our original head c frame like that and that is our tween created now let's do the same thing but for the red light between so we can take this code here these three lines we're going to copy and paste them control c control v or command c command v if you're on a mac and we're going to say red light head equals tween service colon create we're going to keep these two things the same but we're going to change our c frame we want the c frame to be rotated the other way we need to rotate it by 180 degrees so to do this we can take the original head c frame and then multiply it by c frame dot angles okay and then we're gonna put in three zeros zero comma zero comma zero but we're gonna change the middle zero from zero to math dot rad and then in brackets we're gonna put 180 so what this is doing is it's rotating it by 180 degrees but we don't give the rotations in degrees here we have to give them in radians which is a different type of of angle of measuring angles so we convert it from degrees into radians by saying math.rad and putting 180 degrees in here so this is going to do a 180 degrees rotation okay so now that we've created our two tweens we'll be able to move the head of the doll okay now let's make the function for the round um logic which is going to repeat over and over again so we're going to create a function and let's call it start game okay and then let's just create a while loop at the bottom here this is going to be our main game loop so a while loop just runs forever that's what lets you have a round system because it's just going to keep on going over and over and over until the server shuts down until no one's in the game anymore so we can say while true do now this is really important we need to add a weight in here to make sure that this doesn't run it doesn't run basically without a delay otherwise it will crash our computer so we're going to say task dot weight and inside these brackets we're going to put 10 so there's going to be a 10 second interval in between each round and then we can just say start game after those 10 seconds and that's going to call this function and then inside that function we can put all of our code to run the game you know to um to set up all of the players and put them into the round to um to make the tween for the head play so we can have our green light red light changing we're going to do that in this function here right then so what we're going to do first is we are going to create some variables for the game so we're going to need to get all of the players that are going to compete in this round to do this we can say local players in round equals players colon get players this will return a table of all of the players currently in the game okay we're also going to create a table to hold the winners so these are the ones that will get to the end of the course over here get to the safe zone pretty much and when they do get to that safe zone they're going to touch a part an invisible part that's here called the end barrier so we will put them into this table when they touch that then we're going to have a spin delay so this is going to be the delay in between the head moving so the time that you get to move before the next red light and we will make this decrease over time so maybe the first time you'll have five seconds the second time enough four three two one etcetera so it's always decreasing so you never know when the head is going to turn next and then we will just create a variable for the last spin and we're going to set this to tick okay you might be wondering what is this but tick is just a number of seconds since january the 1st 1970. so you can compare those ticks so if i took a tick now and took a tick in 10 seconds the second tick would be 10 more than the first so you can subtract them to work out the amount of time since the last head spin so we can work out how long it's been since the head last turned and then finally what we're going to do is we're going to dress all of the players so to do this we're going to say 4 underscore comma player in pairs i'm going to say players in round so we're looping through all the players in the game that are playing we're going to respawn them so we're going to say player colon load character like that and then we need to actually put the characters suit on them so how do we do this well let's create a function above this called dress character in suit and we're going to have a parameter and the parameter is going to be the player's character and we will pass this to the function so let's just call dress character in suits and we can pass player.character up here so what we're going to do is we're going to get rid of their existing clothes so we can say for underscore comma and let's say object in pairs character colon get to children and have a closing bracket here do we're going to say if object colon is a shirt okay or object is a pants or object is a shirt graphic then we're going to say object colon destroy so any of these objects we want to remove from the character and then we're going to add their tracksuit so to do this we can say local shirt equals incense dot new shirt we'll say shirt dot shirt template equals and then we're going to put a string using quote marks or speech marks and i'm going to paste in the asset id for these shirts i'll leave it in the description for you and we're gonna say shirt dot parent equals character and then we're gonna do the same thing we're gonna copy these three lines with ctrl c or command c and then press ctrl v or command v and we're going to change shirt to pants so anywhere where we see shirts we're going to put pants so we're just going to replace it here and here and where it says shirt template we'll put pants template then we're going to replace this asset id again with the pants so we're going to just go here we're going to right click or just press ctrl v like that okay so like i said shirt and pants will be in the description okay so now that we've put the pants and the shirt on the character let's go ahead and test that it works now i'm going to just change this task.weight to five seconds so we don't have to wait as long and now let's click on play in the scripts menu tab click on play and let's see let's see how this is going to work so we're going to wait the five seconds and there we go our shirt and pants were placed on our character now if it's not working for you click on view click on output and it should log any error messages there which should indicate that you've probably made a typo or done something wrong okay let's move on so the next thing that we're going to do here is we're going to set up the invisible barrier here for when you get to the end so i'm going to create a variable because we have to set up a connection and a connection is a link to a event an event is something that is checking for an action so in this case we want to check when something touches that end barrier and we only want to check it for a limited amount of time whilst the game is running so we're going to store that events connection as a variable so once we're finished we can disconnect it and that will reduce lag so let's create a variable called end touch i'm going to put this variable up here with my other ones just so that we can be consistent here and then i'm going to say end touch equals map dot end barrier so make sure if you're making your own map you've got a part called end barrier and it covers the entire span of the map towards the end of that so map.end barrier dot touched colon connect and if you're using my kit don't worry we've got these parts already created connect function and then a pair of brackets after that and then drop a line and you should get this end with a closing bracket here now what i'm going to do is i'm going to put a argument here for the object that touched the barrier so i'm going to call it toucher okay so this is the object that will touch the barrier so what we want to do is we want to make sure that the toucher is actually there that something actually did touch the brick and it's not been deleted and it's actually got a parent so let's say if not toucher or not toucher dot parent then return end okay and then outside of that if statement we now know that anything that's touching it is live and in the game so let's get the character of the thing that touched it okay so we can say local touch character or let's say touch car equals toucher dot parent because if it's a body part of a player then it's going to be inside their character because all body parts are stored inside a character model so we can say touch dot parent to get their character so now we can say we can get that player so we can say local touch player equals players colon get player from character this will get their actual player object from their character so we can put touch car inside of here and if it is a player which we've just verified using this function it will return a true or false value true if it is a player so we can say if touch player then we want to put the player into the winner's table because they're finished the course so we will say table dot insert we want to put them in the winners table so we'll write that first that's our list then comma and then we want to put touch player in there okay so now that we've put them into the winners table we want to take them out of the players in round because they finished the round so let's try and find them in that table so we'll say local player index equals table dot find and inside of here we can put players in round sorry let's do players in round this will look up the player in that table so we're going to put touch player so if it can find it then we can say if player index then table dot remove and we can remove them from the players in round table we want to remove the player index because the player index is their position in the table so if it does find my player on the table let's say perhaps it's the third object in the table we're saying okay let's remove the third index from players in round and that will remove me from the table and then what we need to do is i'm just going to remove this white space here because we're now finished with the touch barrier that will make us a winner you could do other things in this um part of the script such as giving a player some sparkles if they win for example or i don't know um whatever but we've got them in the winner's table so later on we could give them cash or something etc but now i want to move on to the actual game loop and incrementing the timer etc so i'm going to create a simple for loop which counts down from the number of seconds for the round all the way down to zero so i can say for i equals round underscore duration underscore seconds comma zero comma minus one do end this is going to count down from 60 seconds which is our variable down to zero and it's going to go at a rate of minus one each time so it's counting down by minus one now what we're going to do is every time this for loop runs sorry it's going to loop 60 times basically so down from 60 to zero so any code that's inside of it will run 60 times so every time it loops we can change the timers uh ui it you can change its text labels text so timer ui dot time label dot text equals but we need to change the seconds to an actual time okay so for example it will go 60 59 58 57 we want it to be like a timestamp so let's create a function and i'm going to call it seconds to timestamp and we're going to take the seconds as a parameter here i'm going to drop a line and inside of here what we're going to do is we're going to uh just do a check to make sure that there's no negative seconds or it doesn't go into overtime we only want it to make sure that it's so i'll give you an example if for some reason the timer went down to zero minus one minus two we don't want that okay so we can just say seconds equals math.max seconds comma zero and then it will make sure that if seconds does go underneath zero then it will just default it to zero okay and we wanna get the number of minutes so we wanna convert this into minutes and seconds so let's say local minutes equals math.floor and then in brackets we can say seconds divided by 60 and this will give us the number of minutes and it will round it down as well so it's not going to be a decimal and then we need to make that a string because we're going to concatenate it in a minute with some text and you can't have two data types that are different it has to be either a string or a number so let's convert that into a string here and then we're going to get the amount of leftover seconds because like i said we're rounding it down but we're also losing some seconds that are left over so it might be one minute and 41 seconds we need to get those leftover seconds back so local left over seconds equals to string and inside of here we can say seconds mod 60 and that will give us the remainder the remainder amount of seconds left and then what we can do is do a quick check just to make sure that if the amount of leftover seconds is one we need to add that extra zero on otherwise it would just have it would only have one zero we need two zeros there actually that's a my bad on my part what i mean is say we get to 10 seconds right you've got two uh numbers right as part of you you've got a one and a zero okay but if you go to nine you just have one number okay so it would say it would be like this it would go from like ten zero zero but then it would go to like nine fifty nine we don't want that we want it to be oh nine fifty nine so we're compensating for that extra leading zero so we're gonna say if hashtag leftover seconds equals equals one so the number of numbers in that leftover second if it's just one then we want to change the leftover seconds to be what it is currently leftover seconds but we want to have a extra zero at the start here and then we can have dot dot left over seconds so that will add a zero on so that we can then return the minutes uh let's let's do two string minutes dot dot and then we can have a colon in between and we can have our leftover seconds here okay so this will just make sure that if it goes to ten seconds and then it goes down to nine and eight it will have that extra zero on the end here okay so now that we've converted our seconds into a time stamp we can then scroll back down here and we can call that function so let's say seconds to timestamp and let's put i in there because i is the number that will be counting down it will be that that number so we're taking those seconds and converting it into a timestamp okay the next thing we need to do is we need to make sure we need to do a check to see if it's a red light so every time that this loops every second we're gonna check and we're gonna say okay have we got a red light and if you've got a red light we want to get the positions of the players and check them to make sure that they haven't moved so to do this we first need to store whether it's a red light or not so i'm going to go into the replicated storage and i'm going to create a ball value i'm going to call this ball value is red light okay and we can update this when the light changes and then in this for loop we will be able to check that and we'll say okay is it a red light if it is let's get the players positions let's then store that position and let's check to see if they've moved by a stud okay and if they haven't moved by stood let's kill them so for now let's just do a quick if statement here called if is red light in fact we need to make a variable let's make a variable to store our red light here so at the top of our script we're going to say local red light equals replicated storage let's create a variable for replicated storage here local hold on local replicated storage equals game get service replicated storage okay now we can say replicated storage dot is red light just like that and now we go back down here we can say if is red light dot value equals equals well you could just say if it is red light dot value that will check if it is true so if there is a red light then we're just going to add a comment we can come back to this later let's store the positions of players and check if players have moved okay so what we will do is we will store the players positions when this changes and we haven't done that yet we haven't we haven't written the code to change the red light but when we do that we will store the positions of the players so we will get the position positions of players okay and then we will check the players have moved so what we'll do is before that let's do the actual code that's going to make the red light change so i said earlier how we are going to see when the last spin was when the tick happened so we're going to compare ticks so ticks is just the amount of seconds uh since a specific point in time and we can use it to work out how much time has gone by so we're going to check every single second to make sure that the delay has been passed the delay of five seconds and if that has been passed and we have waited five seconds we're going to change the red light value so outside of this if statement we're going to say if tick so the current amount of seconds so since january 1st 1970 take away last spin so this now becomes the amount of seconds since the last spin since the last head turn since the last red light so we want to say if that time is greater than or equal to the spin delay so this is essentially the same thing as saying has five seconds gone by since the last turn and if it has then let's set the is red light value to the opposite of what it currently is so if is red light dot value so if it is true then we want to make it a green light otherwise it's obviously got to be false so let's make it a red light okay so let's just do the green light part first we will say uh is red light dot value equals false and we can make the head turn so we can say green light head which is our tween we just made up here at the start we're gonna play that tween and then we can do the same for our red light tween so we'll say is red light dot value equals true and we will say red light head colon play and now what we want to do is we want to wait until the head is finished turning before we lock the player's positions so the way it's going to work is let me show you an example here with an npc let me just get an npc up here here we go so let's say this is our npc right and when there is a red light we're going to store that position right and then what we'll do is maybe they'll move say they move for example when there's a red light they shouldn't be doing that so we stored their position as being here but then we've noticed that they've moved well we're going to say okay we've got this stored position of when the red light came into effect and this is where they've moved to so let's compare the distance between these two players and we might work out that they've moved five studs and we will only allow them a minimum of one stood movement before they die so we'll notice that five studs is greater than one and we will kill them okay so let's go back to our server script and in here what we're going to do is we're going to create a function another function at the top here so let's create a function and i'm going to call it log player positions and we're going to take a parameter of the players that are in the round so log player positions i'm going to get a parameter i'm going to call it players drop a line make sure this end is added in here and what we want to do is we want to loop through every single player that's in this player's table so we're going to pass that that players in round table to this function i'm going to say for underscore comma player in pairs players do and we're going to say if player bot character then we want to make sure they've got a character loaded into the game then we're going to say they're going to get their humanoid root part which is just a part in their player which we can use to get the position and we're going to say fi player dot character find first child humanoid root part and we can say if humanoid root part i'm going to make sure they've got one it's all loaded then what we can do is we can log their position their position in a table so let's create a table here at the very top of our script and i'm going to call it saved player positions like this and it's just going to be an empty table but this is where we're going to be logging all player positions when there is a red light so we can later check their movements so we go back down here we can say saved player positions and we can create an entry in this table for that player so in square brackets i'm going to put player and that creates their own key in this table and we can assign a value to that key and that value is going to be their humanoid root part position okay so we have logged the position of every single player that is playing the game now we just need to call that function from down here so what we're going to do is we're going to say log player positions and we're going to pass the table called players in round so we have now logged the positions of everybody in the game so up here we can get those positions that we just logged and we can check if they've moved since then so let's go back up here and let's say let's loop through all of those saved player positions now since this is a dictionary and it has a key and a value we can utilize that first variable in the for loop so let's say for player because we stored their player object as the key and the value was their saved position so for player comma save position in pairs saved player positions do we'll say if player dot character to make sure they're still here their character is loaded etc we will say local humanoid route part equals player dot character colon find first child humanoid root part so we're doing the same as we just did before getting their position let's check if their humanoid root part is here and now what we can do is we can compare their current position with that save position and we can get the distance between the two so if the distance is more than one stood then we'll kill them since it's obvious that they've moved otherwise we won't kill them so let's say in brackets if humanoid root part dot position minus saved position because that's the value stored in this table you see here we store it as the value and this is the key so if the saved position sorry human group position minus safe position dot magnitude this is the distance between this the distance between the two positions is greater than or equal to one then we're going to kill the player so we're going to say player dot character colon break joints this is just a super quick and easy way to kill the player and now what we want to do is we want to remove them from that saved player positions table because they're now out of the round so saved player positions we'll use the key of the player object and we'll set it to nil so we're going to set this to nil because we no longer need to check if they have moved since they're out and finally we will remove the player from the round table so we will say local player index equals table dot find we're going to look in the players in round table for our player and we're going to get their index their position in the table so if player index then table dot remove we're going to remove them from the players in round table and we're going to pass their player index like that okay so now that we have basically checked the position of every single player in the game we have now made a way to eliminate players they should be killed if they are moving in a red light zone now the next thing we need to do is we need to reset the last spin so if the time is ready for us to turn it again five seconds has gone by then we need to set the last spin variable to the current time so that we can keep checking to see if five seconds has gone by so we're basically setting this as our base baseline it's like our benchmark to see how much time has gone by so this this if statement will only be satisfied again in five seconds time because we just reset the last spin variable to be the current time and since we're comparing the times here five seconds has to have gone by since the last spin and so last spin gets updated to the current time so we now need to wait five more seconds for the next spin but like i said we don't want to wait five seconds every time we want that element of chance of not knowing when the head is going to turn so we can say spin delay equals spin delay times 0.9 and that will just make it spin 10 faster each time because what it's doing is it's removing it it's decreasing the spin delay by 10 so you're waiting less each time for the head to turn so now that we've done that let's just do some checks to make sure the round can still can still keep going because for example all players might be out so let's say if hashtag players in round equals equals zero then we obviously want the round to end because all players have died so we can say break and that will break out of this for loop here because we're still within this for loop which is controlling the game so we want to break out of that loop if all players have died and then the final thing we need in this for loop is a a weight because otherwise it would just count down from 0 60 to 0 instantly we would need to have some kind of delay so that we can actually notice the changes each time it loops so let's say task.wait and put a 1 in there but this is really important make sure you add a task wait okay otherwise you won't notice the game working you need to have this for a delay and then outside of this for loop okay you can see i can close it here there we go you don't want to have those red things by the way so you just click there to get rid of them you don't want those they're break points we don't need them so outside of this for loop when the time is up or the players have died or whatever the game will be over by this point so by this point by this point the game is over so firstly we want to disconnect this event for the end touch because we no longer need it until the next round so let's just say end touch colon disconnect and this will prevent the barrier from working until next time okay it's just a simple way to avoid a memory leak so our game stays optimized and next let's reward our winners so you might have leader stats in your game or you want to reward the players somehow so i'm going to show you how to do that so we say 4 underscore comma winner in pairs i'm going to loop through the winners table that we created and we actually did put the players into the winner's table if they touched the end barrier so the winner is basically the player object of anyone who got to the end so you could do if winner dot character then maybe you want to apply some effect to their character okay you could do that in there or you might want to give them some money or you could do that by saying winner.leaders.money.value if you've got some leader stats set up if you haven't got leader stats or anything set up then don't do this i'm not gonna do this um for now i'm actually just gonna comment all of these lines by selecting them and clicking toggle comment because i have nothing to give to a winner uh but maybe that's something we can do in a future video maybe but then i'm just gonna print round over like this and then what will happen is it will that's our function done and then it will loop over again it will wait five seconds and it will start the game again so i'm just going to print at the top of this while loop waiting five seconds before starting a new game and then it will do this start game function all over again now we're nearly done we just got one more thing to do we need to make our gui uh our client ui actually show red light or green light because we've got this light status text label it's got no text in it so we want to make it so that when there's a green light it shows green light when there's a red light it will say red light so how do we do this well i'm going to insert a local script into the client ui here and i'm going to call this control but you can call it whatever you want now inside this local script we're going to say local players equals game column get service players and then we're going to say the same thing but for replicated storage because we need to get that is red light value out of the replicated storage and then we're going to say local label equals script dot parent dot light status that's the text that will appear on the screen the text label and then we can just check to see when that is red light value which we change in our server script we want to check when that changes so we can say replicated storage dot is red light dot changed colon connect function and then we're going to have a an argument which will tell us whether it went red or not so we can just call that is red light and this is red light is going to be it's going to be true or false so if it's true we can just say if is red light here if it is red light then so we know it's true we can say label dot text equals red light and we can set the label text color three to be completely red so color three dot from rgb two five five comma zero comma zero and that will be the red color else is going to be false and then we know that it's a green light so we can say label dot text equals green light and we can say label dot text color three equals color three but from rgb zero comma two five five comma zero and that will make the text color three green and what this will do is whenever it notices that the is red light is changed and we change it from our server script here we're changing it right here then it will update the gui okay so before we go ahead and test i'm going to change a couple of things now the timer does say three minutes to begin with what i'm going to do is i'm going to go into my time label here i'm just going to set the text to be nothing for now so it only appears when the game starts one other thing i noticed is that my bacon hair the head will move but the hair won't move with it so how do we fix that well what i'm going to do is i'm going to take the pal hair handle i'm just going to put it into the doll so i'm removing that pal hair head accessory then what i'm going to do is i'm going to take my head i'm going to insert a weld constraint okay i'm also going to unanchor my handle so my head sorry the handle is the hair okay so i'm going to unanchor it then in the world constraint i'm going to set the part one to be the head and the part zero to be the handle and that should connect them so that when the head moves the hair moves with it okay so let's go ahead and test this thing out i'm going to take the spawn location as well that's from my base plate you see this base plate here you can delete that if you want you can delete the base plate of the game and i'm going to take the spawn location and i'm going to press move and press f to go to where it currently is located i'm going to move it all the way over here uh in fact let's see if we have any spawn locations okay we don't so i'm going to take the spawn location i'm going to drag it above here i'm just going to make it so that it covers the entire width of the base like this just so that we have a good place for people to spawn in and then i'm going to set the transparency to one i'm going to scroll down and set can collide to false make sure it's anchored and i'm going to select the decal inside of it and remove it so it basically is becoming invisible and then what i'm going to do is i'm going to uh basically go and try the game let's see if it works so like i said if you're using a squid game doll that's fine you probably won't have to do the changes i did there uh you'll just want to make sure that everything's anchored though and if you have any extra hair or things on top that you weld them to the head using a world constraints okay let's go and test this out no idea if this will work or not let's click on view and open up the output here and let's click on home and let's click on play so everything looks good so far waiting five seconds before starting a new game i'll make this a little bit bigger here and we've got 57 seconds on the clock i got a red light and there you go my noob is moving its head so if i try to move i got killed and you can see i ragdoll that's because that ragdoll script which came with the kit we're not going to go into specifics on how that works because it's fairly advanced and this tutorial would probably go on for hours if i explained it but it's just a nicer way to die i say nicer i mean you're dying is it nice or not but it's just better than boom there we go it's better than just your body parts going everywhere um so let's see there you go the round restarted you've got to be very quick uh oh oh you can see there we got a bug we got a book i'll explain it in a minute but you can see when the round started he was facing us and it didn't say red light let's see if it let's look let's just try and complete the game first oh i also died oh we got a couple of bugs here let's try and fix these bugs i'm sure we'll fix them but let's try and work out what the bugs are so the bug is that he turns his head towards the wall when the game starts and then when it's a red light we get killed so let's go and work out why these bugs are happening so the first bug is that we didn't reset the player's head from the previous round so to do this let's just go into our start game function and let's say green light head colon play so it makes them face the wall again then we can set is red light to be false like this and that should fix it might fix the second problem as well i'm not sure but we'll see and then we need to change the saved player positions to be an empty table again otherwise it's going to use our saved position from last time and i think this is what is causing the second book so we might have just killed two birds with one stone knocked out two bugs in one in one test so let's click on play again and test it out so you know you get bugs in everything even i get bugs but if you're if you just have a quick look through your code and work out what's going wrong you can see there that um he was facing the wall and that the character was facing the wall as soon as the game started and you can see when it goes to red light oh we got killed again let's let's let's we'll go back and try and fix the the second book then here okay so i've done a bit of debugging and i'm pretty sure i've worked out why this bug is happening so i think it's because we're logging the player's position um without waiting we need to wait before we log we need to wait until the player's head has spun around before we lock the position otherwise they're just going to get killed instantly we need to give them a little bit of time for the head to spin before we actually say uh before we actually start killing players just give them that time to stop so if we say red light head dot completed colon weight with a pair of brackets on the end that is going to wait there until the spin has finished until the head has turned around so that we are only logging the positions once that they are frozen once they've stopped moving and then if they move again we'll be able to tell how far they've moved so let's click on play again and work and see if this is working so we're going to get put into our outfit and the timer starts and we're counting down counting down red light turn around bacon boy oh red light nope we didn't move nobody moved and green light dude hey we got to the end okay so we are at the end and you can see it says round over so we won so i think everything is working here very very good and just to show you if you did want to give the player some cash then let's create another scripts i'm just going to speed run through this so i will come back to you when i have a leaderboard okay so we just created a leader stat script so if i play the game you'll see that in the right corner over here i've got a leaderboard with cash so i wanted to give some cash to all the winners what we could say is in our server scripts we can untoggle the comments over here and we can say winner dot leader stats dot cash value plus equals five for example and then if you win you will get plus five cash so i'm gonna be a bit cheeky here i'm gonna go into the server i'm gonna go into my player i'm gonna go into my humanoid i'm going to set my walk speed to be 150 okay and when it's when it goes to the next green light it goes to the next red light i'm going to stop i'm going to speed run my way to the end here when it's a green light okay here we go ready watch my cash okay the round ended and oh i got 90 cash 90 cash okay okay that is because we don't have a d bounce on this toucher so my character has probably touched this ten times so it's added loads of cash to my to my uh character because i'm in the winner's table lots of times so to prevent this we can just say uh local in winners table now we will say winners index equals table dot find winners and we'll say touch player and then let's just say if not winners index then return end okay and that should prevent us from entering the winner's table more than once so let's go ahead and try it out once more so i've purposely left in the debugging um to an extent in here so you can see how debugging works in a roblox game because it's an important skill to have so let's set the walk speed to 190 wait for the green light and let's speed on our way to the end here let's see if that works i don't think it registered us touching the the detector here let's try again hmm doesn't want to doesn't want me to touch the detector for some reason come on there we go i don't know why that's not working ah my bad we want it to be if winners index not if not because if you're already in the table then we don't add you again but if you're not in the table then sure go ahead we'll add you so let's try this one more time i promise this will be the last time hopefully all right we'll go back in workspace i'm in blocks and humanoid and 200 walk speed and we'll speed on our way to the end here wait for the red light there we go we got our five cash so there we go we only added ourselves to the winners table once so we got five cash and then we have another round here and our walk speed got reset now there's one small thing i wanted to point out at the end of the video and that is that during the game the head which we coded to reduce the delay every single time you can see the head in my game here is moving back and forth really quickly so we go green light red light green light red light really really fast and that's because since it's decreasing the delay between turning the head by 10 each time eventually the delay is going to be really small so there might only be half a second delay so if you want to change this then what you can do is you can edit the number which we multiply that spin delay by and i'll show you how to do that now just so that the head doesn't keep turning back and forth really quickly so i'm going to change mine to 0.95 and it's over here in the server script where we say spin delay equals spin delay times 0.95 if you make the number bigger then that's going to decrease the amount which it's it goes down by each time so if it's 0.95 then instead of going down by ten percent it's going down by five percent okay so just increase that number between zero and one some number between that and that should fix it and don't forget you can also change the round duration seconds so make sure that you've got a a decent number which won't make the head spin back and forth really quickly which is which works with your round duration because if you had a round duration of five minutes then obviously you'll need to increase this number here otherwise it's going to spin back and forth really quickly at some point because it's constantly decreasing by five percent now one final thing if you don't want the players to die once they've reached the end so when they move you know we don't want to kill them what you can do is if we go into the server script and in this part here where we have the round loop and we're checking the saved positions let's firstly check to see if each player is in the witness table so we can say local winner index equals table dot find winners and we can put the player in here and then what we can do is we can say if winner index then continue and what this will do is it will just move on to the next player in the for loop because we don't want to carry on with this person we just want to continue to the next loop so it's going to stop here and just move to the next player because we don't want to kill the player if they're already a winner so let me go and show you this in action and don't forget as well you can change the original starter spin delay at the top of the function here okay here we go oh i died straight away we got a couple of people reaching it and would you look at that they're not dying because they are a winner and i'll just prove it as well when we get to the end here oh hey we are a winner okay so there you go that proves it then if you beat the course you no longer will die but there you go that is how you create a squid game on roblox so if you enjoyed this tutorial please do leave a like please do subscribe to the channel if you're new and turn on your notifications so you never miss an episode and don't forget if you want to get access to this project with the full code everything um then you can become a channel member a premium channel member for 4.99 by clicking on the join button underneath the video next to the subscribe button there'll also be a link in the description you get all sorts of cool perks uh including the source code as i said and like i said we might do more episodes on this in the future so let me know what you'd like to see and don't forget you can get the kit and all information you need will be listed in the description so thank you so much for watching and i'll see you next time