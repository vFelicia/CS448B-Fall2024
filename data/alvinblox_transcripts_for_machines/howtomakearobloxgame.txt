in this video I'm going to show you how to create a stud jumps Obby on Roblox where your jump power gradually increases and your goal is to make it to the top of the tower let's get started so here we are in Roblox studio and from this screen we're going to select base plate so click on the new in the top left corner and choose base plate here now this is going to give us a brand new place to work in we can just dismiss these windows here and we're going to make sure that we have the Explorer panel as well as the properties panel enabled so if you don't see these two panels click on The View tab up here and then make sure that Explorer and properties are both selected now what we can do is click on the home button and we can insert a part from this insert menu so click on part and you can see that a brick has been added into the game this is going to be the first platform for our stud jumps Obby so let's click on the model tab let's make sure that the move box under snap to grid is checked and let's set it to one stood now we'll be able to constrain the movement of our part to this grid on our base plate and it will help for when we scale the parts which we're going to do now so under the model tab if we click on the scale tool this will allow us to resize our block so we can drag these handles to create a platform now that we've got this platform we can give it some color so in the properties panel if we just click on the brick color property we can choose a color from this palette so I'm going to choose really red and now what I want to do is I want to add some text onto my brick to show how many studs the size of the part is to do this I'm going to click on the part to select it and then in the Explorer panel I'm going to click on this plus icon next to the selected part and then I can search for an object and I'm going to search the surface GUI click on it and now we have a surface GUI which can display text or images on our part so inside of this surface GUI just click on it select the plus icon and click on text label you might have to search for it if you don't see it so just type in text label and then it should be inserted on one of the faces of your parts so just move around until you can see it if you can't see the text label click on the surface GUI select face and just choose a different face from the list until you can see it what we want to do is we want to select our text label and we want it to fill the entire span of this part's face so to do that we can click on the text label in the Explorer panel and then in the properties window underneath size we can set this to one comma zero comma 1 comma zero and that is going to fill the entire width and height of this face now if we scroll down a little bit further we can select text scaled and set that to be checked and this will size the text to be as big as it can be within this this part so if we were to make this part bigger you can see that the label increases in size now let's go back to our text label we'll scroll up again in the properties window and let's set background transparency to be one now I'm going to scroll down again and if you like you can edit the color of your part of your text sorry click on OK and you can also change the font I'm going to select frodoka1 and finally we can just give it some text so I'm going to say one stood because the size of this part is currently set to one stood on the yaxis and if you want to check the size of your part just select it in the Explorer and in the properties window underneath where it says size you can see it's 16 studs on the xaxis which goes across across this way one stood on the yaxis which is the Green Arrow going up and down here and 16 studs along the zaxis which is the blue axis now we've created our first platform but what we need to do is we need to make sure that it stays fixed in position and it's not going to move with any physics operations or when someone jumps on the part or we don't want anyone to push the part around either just by walking on it so to do this we can just make sure the part is still selected and if we scroll down to the part section here in the properties window there is a property called anchored and that means that when checked it will stay fixed and Frozen in its position so we'll just make sure that that is checked and now we're good to carry on making more platforms so our stud jump hobby is going to be made up of lots of different platforms with varying Heights and the player will have to wait and build up their their jump power gradually so they're able to jump over the next platform and obviously they're going to increase in size as they duplicate so let's just take our spawn location and just move this out of the way and we can select our platform here and we can then right click and select duplicate or you can press Ctrl D on your keyboard which is what I'm going to do if you're on a Mac you can press command and D so I'm going to press Ctrl and D and you can see in the Explorer panel that we now have a second part selected here so it's just created a clone almost it's done a copy and paste of this platform and we now have a new platform that we can move over so I'm going to select the move tool and I'm going to drag this Arrow to move it in this direction now you might have to drag a different Arrow depending on where you've placed your platforms but once you've done that all you need to do is then take the scale tool and drag it upwards for your next platform so this could be five studs for example let's just go and check our size property so this is actually 10 studs okay so 10 studs is what we've set it to and I'm just going to drag this off the ground slightly so so the actual height that the player will have to jump from here up to here will be 10 studs so we've created our first platform for 10 studs okay now let's do another one so let's just Ctrl D or command D to duplicate again we're going to move it over and then we're just going to move it up into the air so we've got another 10 studs here but since the player will already have completed the 10 studs we're going to change this to 15 studs so let's just take the scale tool and then we can drag upwards and as you can see as we drag you can see this y number this 11 here is going to increase in size up to 12 13 14 15. Okay so we've now got our 15 studs don't worry about it still saying one stood over here we can uh we can change those in a few moments and what I'm going to do is I'm just going to keep on doing this for 20 studs 25 studs 30 studs all the way to 50 studs so I'll just speed up this part of the video but I'm just doing the exact same thing okay so I've got all of my platforms created all that's left to do now is to change the text on each of them and I'm also going to give them some color so I'm just going to change the color of each part to be a rainbow so I'm going to select this five stud part down here sorry 10 studs and I'm going to go to the brick color and I'm going to change that to a nice orange and we're going to do the same over here the brick color can be yellow this one can be green this one can be light blue there are all of our platforms and what we can do is we can if you want you can now go and change the text on each one so we'll go all the way to the bottom here and we'll just select our platform then we'll click on its children by clicking on this Arrow also we'll then do the same thing for the surface GUI and we want to select the text label so you can see there's a slight blue outline now across the face of this part which means the text label is selected and we can set this to 10 studs there you go the text has changed so I'll just now select the next platform right at the very top we've got our 50 studs now obviously it's hard to see this text because it's on a white background so we can change the text color 3 to 50 at 50 thirds to something like a gray or black it's up to you okay there we go so we've now created our stud jumps Obby all that's left to do is to write some code which will gradually increase the player's jump power so to do this click on the server script service in the Explorer this is where we will store all of our code and click on the plus icon and then just choose a script you may have to search for it make sure you choose just a script not a local script not a module script just a script now let's just zoom in here and I'm going to just hide this spanner and what we want to write is a event for when a new player joins so we can say game dot players dot player added colon connect and then in a pair of brackets we're going to write a function we're then going to need another pair of brackets and then we're going to drop a line right here so you should have your function a pair of brackets an end and then a closing pair of brackets afterwards okay and make sure that you've got everything spelled correctly and everything capitalized as well just like I have so we've got a capital P here another capital P capital A you've got to make sure it's totally correct because if you had a lowercase then it would break the script okay so you've got to make sure that everything is capitalized correctly now inside of these brackets is going to be an argument called player and what this will do is when a new player joins the game we will now have a reference to their player object so we can now wait for their character to be added into the game so we want to set their jump power which is a way to control how high a player can jump uh through their humanoid but to get their humanoid we need to get their character and since there can be a delay in between the player joining the game and their character spawning and being loaded we have to use another event called character added so we can say player dot character added colon connect and then again in Brackets we'll have function another pair of brackets and we'll drop a line so now any code inside of here will run when a character has spawned okay so the first event would run when a player had joined the game but the player's character may not have been loaded yet so he had to use the player object to then use the character added events to wait for their character and we can then pass the arguments of the character so we have a reference to it so anything we do to this character will be done to the character of any player who joins the game so we can then say character dot humanoid the humanoid you can think of it as is like a settings window where you can you can change things for a specific player because loads of different Roblox games will have different needs for a player some games you might want the player to be able to jump higher than you can in other games some games the player may want to walk faster than you can in other games right so that's what the humanoid is it's sort of like a settings panel for a character so we can say character.humanoid dot use jump power equals true and this is acting as like an override it's basically saying to Roblox okay we don't want the player to be able to jump at their just at their default height we want to provide a custom height for them to jump at because we want them to be able to jump at zero studs when they first join and then maybe 10 minutes later we want them to have a hundred studs of jump power so in order to allow us to use that jump power we have to say character dot humanoid dot use jump power equals true and now that we've done that we can set their jump power to zero because when they first join the game we want them to have zero jump power so they can't beat the hobby straight away so character.humanoid dot jump power equals zero and don't forget really important to have that capitalization for the J the P the H wherever you see me using a capital letter just make sure you do as well because this is the syntax of the Roblox luau language so now we have set the character's jump power to be zero when they join the game let's have a go at joining our game and seeing what happens so make sure you've got the spawn point close to your first uh platform if you don't have a spawn point you can simply just click on the Home tab underneath the test section click on this little arrow and just select play here and that will position your character wherever the camera is currently pointing if we just press the space bar you can see nothing is happening okay you're gonna have to trust that I'm actually pressing the spacebar okay I'm pressing it my character isn't jumping though that's because my jump power has been set to Zero by the script and if you wanted to just double check this you could see in the workspace if you find your character you find the humanoid and you scroll down you'll see that jump power is set to zero so I can't jump any higher than this first platform now what we want is we want to increase this jump Power by one every single second so if my jump power was one we can change it dynamically from the properties menu just for testing here you can see I'm starting to slightly jump maybe if I set it to five I can go a little bit higher if I go to 10 can see I can jump a little bit higher now let's change it to 50. okay now I can jump kind of high now jump power doesn't represent how many studs you can jump I'm also just the power of the force which is lifting you upwards which is acting Against Gravity so the higher this value the higher you're going to jump you can see now I've set it to 100 we can go quite high but eventually we're not going to be able to get past this one okay so what we're going to want to do is increase this jump power every single second and it's really easy all we have to do is create a loop that runs every one second we then will need to Loop through all of the players currently in the game so that we can increment their jump power one by one that's all we have to do so firstly this is a comment by the way these three lines are comments they're just that we signify a comment with two hyphens and it's just like a note to ourselves the script just ignores it so to create our Loop we are just going to say while task dot weight and then in Brackets we'll put one and do and this is going to create an endless loop where any code inside of here will run every one second forever whilst the server is is running when all the players leave the game the server will shut down and this will stop running but whilst the server is active any code inside of here will run every second so we've created our Loop that's done now we want to Loop through all of the players currently in the game to do this we use a for Loop and a for Loop allows you to search through a list so we want to get our players let's firstly write out our for Loop by saying for underscore comma player in pairs do and a pair of brackets after the pairs and then do drop a line and you've got this end here so what this is going to do is if we provide this for loop with a list in this case it's going to be the list of players in the game currently so to do that we can say game dot players colon get players and then a pair of brackets after that that's going to return a list of all of the players currently in the game so any player that's in the game gets parented to this player service and by calling a function called get players on the player's service it will automatically return us a table or a list of all players and all this for Loop is doing is just looping over that list so whatever we do to this player here will be done to every single player in that list so firstly we want to get a character of each player and we can say player dot character but this character may not exist yet because I said earlier there's a delay between the player joining the game and their character spawning so let's add an if statement to make sure the character does exist so that in case it doesn't we're not going to get any errors so we can say if player dot character then drop a line and then any code inside of here will it only run if the character exists so if the character does exist we can say player dot character dot humanoid dot jump power we want to take the current value of their jump power which could be zero it could be one two three it could be any number because each player will have a different jump power depending on when they joined we can say plus equals one that will take the current value and it will add 1 onto it we have to say plus equals because if we just said plus the script would get confused it's getting that the current jump power which could be two and it's adding one onto it and then this would just become three and then the script just sees the number three and it gets confused so we have to say plus equals and that tells the script to increment this value by one so we've now created the code which will increase the player's jump power so now we should be able to complete the hobby but what I want to do is I want to just do a final finishing touch by displaying the player's jump power in a GUI a GUI is an element that goes on the screen so to create one head to the starter GUI click on the plus icon and select screen GUI now select the screen GUI click on the plus and insert a text label you can see we've now got some text on our screen so I'm going to select this text label and in the properties window I'm going to set at Ground transparency to 1. that will remove our background we can then scroll down and we can select text scaled and set that to be checked I'm going to set the text color 3 to be white and I'm going to select the font as being fredoka1 similar to the one that we selected for our platforms now I'm going to scroll up and I'm going to go to the position and I'm going to set this to 0.5 comma 0 comma 0.5 comma zero this will put it in the middle of our screen almost but because the position is being taken from the top left corner and not the middle it's not in the exact middle of our screen so to fix that we can go to the Anchor Point and set it to 0.5 comma zero there we go all that's left to do is go back to the position and because I don't want it to be in the middle of the screen I want it to be further down here let's change the third value 0.5 to 0.8 there we go Okay so we've now created our label all that's left to do is write some code which will in which will change the text of this label when our jump power changes so we can remove this text that says label because we don't want anything to display straight away it's still here it's just not got any text in it and we can click on the plus we can insert a local script into our text label and now all we need to do is say a local player in fact yeah we'll say local player equals game.players.localplayer and so this is the play our our local player so every player will have a local script running inside of them and we want to get their character now and the character may not be loaded yet so what we can do is we can say repeat task dot weight and then we don't need to put a number in here it will just use a default value of 0.3 until player dot character okay and that will just repeat endlessly until the player's character has loaded and then we can say script dot parent dot text equals player dot character dot humanoid dot jump power and that will set the text of the label to the jump power now let's just add some text before that which says jump power with a colon like this then we can do a pair of dots to concatenate the number the jump power to our text here and finally let's just before the jump power let's write to string and we'll put the jump power value in Brackets that's because whenever we're working with text we have words and characters which is a string data type and we're combining it with a number so we can just convert this number into a string before we concatenate it concatenating is when you take two strings and you put them together using the Dots here and that will set the jump that the label text to our jumper power finally we want to update this whenever the jump power changes because it's only going to set the text when the player first joins so if their jump power changes we'll need to reflect that in the GUI so we can say player dot character dot humanoid colon get property changed signal so whenever a property of the humanoid changes we're going to tell the script that we only want to listen for when the jump power changes we can connect that to a function and then inside of this function we can paste the line from earlier which will now update the labels text whenever the jump power changes it's always a good practice to comment your code so let's just exit out of our two scripts and let's click on play here okay here we are and you can see the jump power is slowly increasing by one every second you can see we're starting to to get off the ground when we press the space bar I'm just going to speed up this part of the video until we can get over the net lock okay our jump power is now 50 and there we go we got over the orange block and now we're working our way towards the 15 studs Yellow Block and you can see the jump power is being reflected here in our GUI because every single time the property of the humanoid called the jump power changes that's going to update in our text label on our GUI thanks to our get property change signal events which is constantly checking out and waiting for that to change and now my jump power as it gets closer to 100 you can see I'm jumping higher and higher I should be able to get over this one but it's going to be a while before I get to the very top of the stud jumps over here so there you go you've just created your own stood jumps Obby in Roblox but how do you publish your game firstly go to the file Tab and then select publish to Roblox as now this is going to open a popup where you can either choose to overwrite a current game that you may have or you can create a new game which we're going to do so select create new game in the bottom left now give your game a name I'm going to call it stood jumps Obby you can give it a description if you'd like set the Creator to be yourself or one of your groups select a genre if you'd like and I'm going to disable team create because we don't need it that's only if you're working with other players so I'm going to click on create this is going to create our game and publish it onto Roblox and finally just click on game settings go to permissions and then either select friends or public depending on whether you want just your friends to be able to play your game or anybody on Roblox I'm going to select public and click on Save now you should be able to go to the top right click on this little link icon which is share and then you can copy the link to your game now open up your web browser head to the game and you'll be able to play it now just a heads up any games that have been published on Roblox won't be visible in the recently played section for seven days I believe this is just a way to get around any spam or scam games from appearing there but after that period it should start to show up in your recently played however you can still share it with your friends you can change your own thumbnail if you'd like by going to the three dots and selecting configure this place is completely up to you you can also find your place by going in the create tab up here and then under Creations experience you'll see your game here if you click it you can go view on Roblox and that will take you back here if you ever want to make changes to your game then to publish an update all you'll have to do is go to file and just click on publish to Roblox so to jump into your game just click on the green play button and you'll be good to go and here we are we're in a Roblox server playing my stud jumps on so I hope you enjoyed this tutorial if you did please leave a like and don't forget to subscribe for more and if you'd like to take the source code from this project you can become a member of my channel by clicking on the join button and selecting premium membership so thank you for watching and I'll see you in the next one