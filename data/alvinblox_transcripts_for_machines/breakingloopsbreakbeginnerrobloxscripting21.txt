hey everyone Aven blocks here and just a short video here episode number 21 in my scripting series about breaking a loop now this is probably going to finish off the whole loops section of this series for now so here's an example that I've just created so we've got our while loop I've set the condition to be true because this is imagine this is our game loop for a running game so kind of like a murder game and it will only stop when well it won't stop with a minute so we've got the number of players left so we're just using this hashtag to give us the number of items in this table and this get children will return a table of all of the children in game dot players so we've got three to start off with so it will print out three every second and it will keep doing that for 60 seconds until well it will keep on going forever actually so we want to stop this while loop when either the timer so when time left gets to zero or when there's no players left so what we could do is have a condition like this so while time left is greater than zero and players left it's not equal to zero but what we can also do and this wouldn't work because you need to have all here because you'd need either the timer to be ended or for there to be no players left so we're just going to keep that there but if we wanted to break the while loop ourselves when the number of players gets to zero or we can just have an if statement so if players left equals zero then we can just say break and whenever the while loop gets to this break statement so it just it start the while loop we will then get the number of players left in the game and we will check ok are there zero players left because this will tell us the amount of players left and if there's no players left then we will get to this line which is break and when the script sees a break inside of a while loop you can only use a break inside of a loop so if you write break outside of a loop it's going to arrow the script but if you if you have a break inside a loop it will just completely stop that that while it won't run any of this code underneath it it will literally just stop the while loop at that line and carry on with the rest of the script so if there was code that was down here after line 18 what happens when we get to that break the script is just going to carry on with any code inside of where outside of this wire loop is just going to forget about the rest of the code inside so it's not going to if we do break at this point it's not going to print the amount of players left it's not going to subtract one from the timer variable and it's not going to wait one and it's not going to restart because we've broken out of the while loop we've broken out of that continuous looping which would have looped forever so let's try it out unless add some code underneath here as well to say loop finished carrying on with the rest of the scripts okay the output and run the game so we've currently got three players and let me just clear that again for you so we've got three players and you can see it's constantly printing out that because you've got the times five times six which is telling us how many times it's printed out but if we were to then remove a player from the game and this is simulated I've simulated having players in the game you can see we've now got two players left but it's still enough to keep the while loop running because we only want to break out of the while loop if it is equal to zero so if there's no players left so let's delete another player and now we have a one player left and what should happen is when I delete alg√∫n blocks the next time it loops around and gets the number of players left in the game and it will be equal to zero because there are no children there will be no children anymore in the players service then it should just break out the while loop so what we'll do is we'll try and we'll do it we'll try and clear the output in fact we weren't clearly out but we'll just delete it and let's just zoom out a little bit and look what happened so it's no longer printing out one but what it did was it said it got to this part obviously it broke out of the while loop so instead of just looping on forever we've skipped the rest of this code it didn't print out a zero it would have printed out a zero but it didn't because we broke the script before that how do we have put these lines of code before this if statement it would have printed out the zero players left subtracted one from the time left and waited one second but because this break came before it and when we call a break statement it won't carry on with the rest of the code in the wire loop it will just stop where it is and move on to any code underneath this while loop so that's what it did it printed out the next statement after this world loop which was to print out that the loop had finished and that is carrying on with the rest of the script so there we go so while loop for loop in pairs loop you can all use break in there and it's very useful actually you will come across times where you just need to stop a while loop from running forever another good example here is if you have some code and you you don't want to run this code until you've got enough players in your game where you could do something like this and you could say let's just change this variable name so we could say if num players is greater than or equal to two then let's break out of this while loop and actually start the game so let's imagine you had an intermission down here and you could say game starting right so and this could go in its own wire loop as well because we want this to this game loop to keep on running we want to just just run over and over again but we only want to start the game I'm actually gonna put that wire loop inside of this one and you'll see why because now this is getting a bit confusing but it's teaching you as well that you can have nested while loops so you could have one wire loop inside of another and what's going to happen when you have a nested while loop is well firstly we're going to start the script we're going to enter the first while loop and then what will happen is this code down here will only run until we've broken out of this while loop because we've entered this while loop then we're entering another one so it's going to count the number of players it's going to check if it's greater than or equal to two if it is it's gonna break out of this while loop so it so when we use a break and we have nested while while loops or a nested forloops it's only gonna break the basically the one while loop the nearest what the while loop that it's inside of so when we call break here it's only gonna break out of this while loop we'd have to call another break statement after this one to break out of this first one loop but yes it will learn it will keep we will just keep looping through this while loop until this first one is broken and when it is broken we can carry on with the rest of this code but if this was our main game script every time a new round finished we'd want to enter this while loop and not carry on until we are sure that there are enough players in the game so if there are greater than two players look what to two or more players then the game will start and this is just some dummy code which which you know it would be your actual game code but we're not making up an actual game script today but let's add a weight in here so it doesn't crash you still need a weight inside of your nested while loop and you can see it's saying game starting because we've got three players already in the game but if I was to actually only have one player to start with here and we run it again it's going to say ooh doesn't seem to have done anything I don't think that's big yeah we haven't printed anything but what's actually happening is let's add an else here and say not enough players now you can see what's actually happening it's it's it's entered the first while loop we're now in the second while loop and we are staying in this while root for now because we're constantly checking the number of players in the game but there's only one so that's not greater than or equal to two so it's not going to break the while loop it's just going to print there's not enough players and it's going to keep going round and round again but if we insert another player we now have two so you can see it's now broken out of this while loop and we've managed to get down here where it said intermission game starting we've waited one second and then we've gone back up to the top of the first while loop because we're still looping through that one then what we're entering the nested while loop again because every time this first loop runs we're gonna enter that this second while loop because it's the first thing that happens and it's just gonna check the number of players in the game again well this two players so that's enough to satisfy our for loop sorry our if statement here so it will break out of this while loop and then we'll just be able to print intermission game starting again so every time you see it printing intermission and game starting we can tell it has entered the second nested while loop we call it a nested while loop because it is inside of another while loop so it's calling us it's entering that second while loop but then immediately breaking out of it because our condition was met in this if statement so we can just break out of it you could also just do a while loop where instead of having all this break stuff you could just say while num player's is less than two that would work as well but I'm using this to demonstrate breaking so breaking will just stop the while loop that the break statement is called inside and it will move on to the next thing in your script so in this case because we've got two while loops one inside of another one it's only going to break out of this one that it's inside of and if you wanted to break out of this of this first while loop you'd have to call another break statement to break out with them both so starting to get a bit confusing maybe but all you need to know is that the break statement will stop a while loop at the current line that the break is on when it gets to it you can you're able to only break a while loop if if an if statement is is met so you only want to break a while loop on certain conditions you don't want to break it all the time so in this case when there's greater than two players or more in the game then that will break this while loop so it's something that you do need to know about you will use it especially if you're making game round scripts you know like care anyway any round game and even any round based game is going to use the break statement very very important for while loops because you probably don't want them to loop forever and ever so that we go and they do also apply to the for loops and for in pairs loops it will just stop the entire loop when you call it that rate statement so thank you for watching this video really do appreciate it make sure to share the video with your developer friends so they can get the knowledge as well that I've shared here don't forget to subscribe to my channel you can click the album blocks logo in the middle of your screen like the video as well so that I know you want more and I will see you in the next one thanks for watching Cheers bye