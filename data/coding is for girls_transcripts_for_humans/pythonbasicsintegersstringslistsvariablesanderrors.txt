With timestamps:

00:00 - hello everyone I'm Ola and this is how
00:03 - it is for girls today we will learn very
00:18 - basic of Python programming language if
00:21 - you haven't installed it yet check my
00:23 - previous video where I explain what is a
00:26 - programming language and how to install
00:28 - by them why we use language why we speak
00:33 - obviously we do that to communicate with
00:36 - other people but to do that effectively
00:38 - we use the language the person
00:41 - understands and if we have a closer look
00:44 - at the languages we'll discover that
00:47 - there is special words they're the
00:49 - special grammar we follow some words
00:52 - have a special function like noun verbs
00:56 - adjectives language also in contextual
01:00 - so depending on the context of the
01:03 - conversation some things can mean
01:05 - something else like your math teacher is
01:09 - a different teacher than your friends
01:10 - one but we'll find all these things in
01:14 - programming languages too special
01:16 - grammar keywords and context in our
01:20 - variables
01:21 - let's open command line or terminal on
01:24 - your computer if you don't know how to
01:26 - do that check my previous video about
01:28 - command line and you know everything you
01:31 - need to know at this point in command
01:33 - line who will type titan-3 after running
01:36 - that the prompt changes from dollar to
01:39 - free greater than signs it means we are
01:42 - no longer giving orders to our operating
01:45 - system from comment line but now we are
01:48 - inside Python interpreter and only write
01:51 - needs to be written in Python language
01:53 - so writing things we learned in comment
01:56 - line videos like alas or city will fail
02:00 - actually let's try ha it will fail
02:03 - invite them find an interpreter will
02:06 - tell us that there is nothing called LS
02:08 - will get name error ok
02:11 - time to see that Python is not number
02:14 - then let's say the Sigma's calculator
02:16 - out there then struck if item could ask
02:19 - numbers like 2 plus 3 we type 2 plus 3
02:24 - and hit enter the result appears
02:27 - immediately and it's correct is file so
02:30 - by the nose map but let's check if it
02:32 - can multiply divide and subtract so for
02:37 - multiple 5 yes it's 25 minus one correct
02:42 - answer it's for 40 / - yes it's 20
02:46 - perfect numbers and in this scenario
02:50 - integers are one of the Python so-called
02:54 - built-in types one of the main things
02:57 - that a programming language needed to
02:59 - deal with is answer the question how you
03:02 - should represent data so the language
03:04 - will understand what you try to achieve
03:07 - is it a number is it text or is it
03:10 - something else how could you tell - your
03:12 - programming language then what's your
03:14 - name for example to do that you need to
03:17 - use the format that your programming
03:19 - language is expecting in Python we have
03:22 - a number of building types that allows
03:24 - us to communicate with computer
03:26 - effectively numbers we just use are one
03:30 - of the building types in Python that's
03:33 - the representation of integer numbers
03:36 - but what if you want to tell peyten
03:38 - what's your name
03:39 - this is obviously not integer your name
03:42 - is a text type in your named Python
03:45 - interpreter like this will result in
03:47 - error so it's not good
03:50 - well here comes next building tire
03:53 - called string to write a string we need
03:55 - to wrap text we want to write with
03:57 - quotes okay so let's try double chords
04:01 - this time it worked by two recognized
04:04 - your name as a text you could also use
04:06 - single pots too like this
04:10 - yeah let's try we're faces in between
04:13 - for example like saying hello world the
04:15 - interesting thing in programming
04:17 - languages like Python is that he put out
04:20 - two texts using plus operator like this
04:22 - in Python we could even in multiply text
04:25 - so if you want your name to be repeated
04:28 - three times you could type it us your
04:31 - names multiply by three okay but what if
04:36 - we want to actually have text with
04:38 - quotes inside like my name is in quotes
04:41 - hola well in fluent type it like this
04:45 - there is an error again
04:46 - syntax error if you want to use double
04:49 - quotes inside the string defined with
04:51 - double quotes we simply could use single
04:54 - quotes instead throughout our string and
04:57 - it works perfectly all right okay but
05:00 - let's make it even harder but if we want
05:03 - to have a text that contains both double
05:05 - quotes and single quotes well item can
05:08 - deal with that and to do that in the
05:10 - problematic word so if we wrap our text
05:13 - with single quotes and we have a single
05:16 - quote inside the text we can use
05:18 - backslash just before the single quote
05:21 - inside our text it's called escaping and
05:25 - it's nothing more than telling fightin
05:28 - hey this is not the end of our text yet
05:31 - okay let's try it first we found
05:34 - backslash to see an error so I type my
05:36 - name is Ola and I am a programmer
05:41 - yes heightened complaints that there is
05:44 - a syntax error that basically means that
05:47 - item does not understand what we tried
05:49 - to tell
05:49 - now let's escape a single quote that is
05:53 - a problem here
05:54 - by using backslash just before it so my
05:57 - name is Ola and I backslash single quote
06:01 - m8 programmer
06:05 - this time it's perfectly okay and to
06:08 - have it nicely displayed we could type
06:10 - print and the text we've escaped single
06:13 - quote now let's move to something more
06:17 - complicated building types could have
06:20 - some special superpowers they called
06:22 - methods and they could do some magic
06:25 - with your object in this scenario the
06:28 - text for example let's say we want to
06:31 - make a text uppercase there is a method
06:35 - our magic spell called upper that could
06:38 - be run on any text to make it work we
06:41 - type dot after our text than upper and
06:45 - opening and closing parentheses like
06:48 - this our methods our magic spell worked
06:52 - we'll talk a little bit more about
06:54 - methods later on in this series next
06:57 - videos so don't worry about it in Python
07:00 - there is also something called function
07:02 - and we'll talk much more about it also
07:05 - in next videos but now let's see some
07:08 - very easy function that we can use with
07:10 - text let's say we want to know how many
07:13 - letters the text we just typed have we
07:16 - can use their function Len so let's type
07:20 - this then open parenthesis our name and
07:24 - close parentheses and it karateka
07:26 - counted number of letters make sure to
07:29 - play with built-in types just learn
07:32 - about integers in text see what's
07:35 - possible see what costs the errors and
07:37 - actually this brings us to the next
07:40 - thing I want to talk about the errors we
07:43 - already serve some of them right we
07:46 - serve syntax errors and neighbors so
07:49 - let's have a closer look now but first
07:52 - let's generate some error so let's use
07:55 - function land with not text but integer
07:58 - like 200 now we try to count characters
08:02 - of something that is not text but it's a
08:04 - number
08:05 - so it'll resulted in an error if you
08:08 - want to learn how to code it's very
08:11 - important to learn that errors are your
08:14 - best friend and they will tell you
08:16 - what's problematic
08:17 - what
08:18 - it's not working yet they are important
08:20 - so we need to learn how to read them
08:23 - this time we get type error might assess
08:26 - that object of type integer has no
08:30 - length in the line above it it says
08:32 - where there ever happened in nine one
08:36 - errors are important and I think it's a
08:39 - worthwhile to create a little cheat
08:41 - sheet for you like the look of notebook
08:43 - so you take all the errors you see and
08:46 - write them down and write a little
08:49 - explanation what the error means like in
08:51 - case of syntax error
08:52 - Python is telling you that it does not
08:55 - understand what's going on so there is a
08:57 - problem with the syntax so you for
08:59 - example miss type something or in case
09:01 - of name error Python says that it does
09:04 - not know what something means so it's
09:07 - not miss type but there is something
09:08 - unknown which is different so for
09:11 - example when you have a variable that is
09:14 - not defined yet then Python will throw
09:17 - this error yes but what is the variable
09:20 - you ask and this brings us to the next
09:24 - point I want to talk about today
09:27 - variables are one of the most important
09:30 - concepts in all programming languages
09:32 - remember all this map formulas for
09:36 - example for area of the square
09:38 - containing letters instead of numbers
09:41 - thanks to this formulas for example for
09:44 - area of square no matter how big the
09:47 - other square was one meter or 2 meters
09:49 - or 100 meters you know how to calculate
09:53 - the earlier of that so our formula a
09:57 - multiple a contains a variable a is a
10:01 - variable so it is a name name for a
10:05 - concept like a member of the side of our
10:08 - square sense of variables it's extremely
10:12 - important in computer science it allows
10:14 - you to define the certain formulas or
10:18 - steps you need to follow no matter what
10:20 - its actual value for example if we would
10:23 - like Python to say hi to the user no
10:26 - matter who is daser and was the same at
10:28 - the user we could do that we could
10:30 - create a formula
10:31 - that does that so far to make items say
10:34 - hi to you we need to type the whole text
10:37 - like hi Ola Atwood if I want to make it
10:40 - work for any name like Mary or release
10:43 - its Allah is the same then what we
10:47 - really want to do is say hi and then the
10:49 - name so we could split our text in hi +
10:53 - oh now let's replace all that with
10:56 - variable name we'll have 5 + name her
10:59 - name is the variable we actually could
11:02 - run it for any value that is stored in
11:04 - variable it will be beliefs Mary Barbara
11:08 - or Sonia or anything else we created
11:13 - something abstract something credible
11:16 - and this is quintessence of computer
11:18 - science create formulas create steps
11:22 - that could be reused with different
11:25 - values we provide to our computer ok but
11:28 - let's try it in our Python interpreter
11:30 - if we type now hi + name there is an
11:35 - error it's name error that means that
11:37 - variable name is undefined what does it
11:41 - mean it means that there is no value
11:44 - provided in name variable yet variable
11:48 - is empty it's there is nothing there
11:50 - to run it properly without error we need
11:52 - to define value for the variable we need
11:55 - to put some actual value to the variable
11:58 - name let's do that we do that by
12:01 - assigning the value using equal sign so
12:05 - we type name equals hola so no name
12:09 - stores value hola
12:10 - we could run a now our code PI plus name
12:13 - and it worked obviously good question
12:17 - why writing name equals hola and then hi
12:20 - first name is better than to simply this
12:23 - hi hola variables similarly to their
12:27 - usage in macro millas will be extremely
12:30 - useful later on when we talk about
12:32 - methods and function will be able to
12:35 - extract many steps many things in one
12:38 - function and use that no matter what is
12:42 - the value want to operate on one of the
12:44 - side
12:45 - which is very very important is also
12:48 - readability of the code if we use good
12:51 - names for our variables we actually know
12:55 - more what we try to do in our code for
12:58 - example if you would like to calculate
12:59 - area of a square
13:01 - we could have in code simple to multiple
13:04 - to which means nothing to us it's just
13:07 - two numbers we multiply so it could be
13:09 - anything but if we have this area equals
13:12 - side multiple by side we actually know
13:16 - that we are calculating area of
13:19 - something using formula for re L square
13:21 - that is why one of best practices for
13:24 - all the programmers to name variable
13:27 - nicely it's very hard at times and a lot
13:31 - of programmers struggle with that but
13:33 - make sure to take some effort and name
13:35 - variables in some meaningful way but
13:39 - wait what happens with the variables
13:42 - that already have some volume for
13:44 - example we have their names that
13:46 - contains text hola
13:48 - can we reassign that can we put
13:51 - something else there the answer is yes
13:54 - okay so let's type name is Ola now when
13:57 - we check what is the value of the
13:59 - variable name its hola let's try to
14:01 - redefine which means change volume of
14:04 - the variable we use equals sign and to
14:08 - assign the value so name is Liz now the
14:11 - current value of the variable is this
14:13 - and the previous name
14:15 - hola is gone so the value of the
14:17 - variable is the last thing we assigned
14:19 - using equal sign that means that this
14:22 - name equals hola main equals sonia name
14:27 - equals marie will result in named
14:29 - variable containing the last name so
14:32 - name will be Chris Mary time to learn
14:35 - next building type in Python we already
14:39 - learned about integers and texts now
14:42 - it's time for lists to create empty
14:44 - lists we open and close square
14:47 - parentheses emptiness is not very
14:50 - interesting so let's create a list of
14:53 - notary numbers we will put our list in a
14:56 - variable so we don't
14:57 - to write the lottery numbers every
15:00 - single time we want to use that summons
15:02 - define lottery s we open square
15:05 - parentheses and then free comma 42 comma
15:08 - 12 the 1913 59 lottery variable contains
15:15 - our first non-empty list now we can do
15:18 - number of things with this list for
15:20 - example check how many numbers we have
15:23 - in this list by using a function you
15:25 - already learned then we could also use
15:28 - some methods the magic powers of the
15:31 - given building type this for example
15:33 - could be sorted if you want our numbers
15:36 - to be sorted from the lowest to highest
15:38 - number we could do that with sort method
15:41 - like this lottery dot sort wait but it
15:46 - does not print anything right the thing
15:49 - is that our list under the motor is
15:52 - variable to change in place so it would
15:55 - print lottery now with print from
15:57 - lottery you will see that our list have
16:00 - been nicely sorted for us what do you
16:02 - want to have our list reversed and we
16:05 - have next handy method next superpower
16:08 - of list building time and it's called
16:11 - rivers let's see this in action which I
16:14 - have lottery don't reverse and then
16:16 - print the variable lottery it's
16:19 - perfectly reversed you could also add
16:21 - something in the end of the list there
16:23 - is another method for it called happened
16:26 - so let's try it
16:28 - lottery dot append 100 and let's print a
16:32 - lottery number 100 is added at the very
16:35 - end of the list
16:39 - okay all these methods all the special
16:42 - powers of building types aren't very
16:45 - handy but how do you know what's
16:47 - possible and what's not to know all
16:49 - methods that Python as a language
16:51 - provides for all built-in types you just
16:55 - need to go to their Python documentation
16:57 - and just visit this page and check the
17:01 - documentation okay so once back to our
17:03 - list one of the most important abilities
17:06 - of each list is to being able to refer
17:10 - to the elements of the list by its index
17:13 - what is that index it's the number that
17:16 - says what is the position element in the
17:20 - sequence so remember I would not very
17:23 - variable right if you would like to see
17:25 - only the first element of the list we
17:28 - could print it with this print rotary
17:31 - index zero
17:34 - why zero well in computer science we
17:38 - index things from zero instead of one so
17:41 - the first element is under zero the
17:44 - second under one and so on it might be
17:47 - very confusing
17:48 - just follow the sputter and it will be
17:51 - natural for you it's some time okay so
17:54 - we already said that we can add 11 to
17:56 - the least what do you want to delete the
17:58 - element and not any element but a
18:00 - certain element given index you would
18:04 - like to delete for example 40 from the
18:06 - list which is a third element so we've
18:09 - indexed to we'll do it like this del
18:12 - notary index 2 now when we print our
18:17 - lottery variable will have the list not
18:20 - containing 13 now let's play a little
18:24 - bit more with lists what if we try to
18:26 - print the element of the lottery
18:28 - variable that has index that is too high
18:31 - for example 1000 only has now 6 elements
18:35 - but let's try to ask feyten what is the
18:37 - element under index 1000 so we will
18:40 - print lottery with index 1000 you get a
18:43 - new type of error
18:44 - this is index error if you get this
18:47 - error
18:48 - it means you try to access something
18:49 - what is not there and your list is not
18:52 - big enough
18:53 - of course list could contain not only
18:56 - numbers we could have lists of text like
19:00 - this names is all our list and Sonja or
19:04 - list of elements of different types like
19:07 - mix is a la 7 and the list of 1 2 3 ok
19:13 - we learned a lot I'm sure you are
19:16 - totally exhausted it's a lot a lot of
19:19 - knowledge in one go there will be much
19:22 - more in next video and don't be afraid
19:24 - just practice whatever you learn today
19:27 - play with Python interpreter see what
19:30 - you can do with integers if texts
19:33 - see different kinds of errors and now
19:36 - that just sum up what we learned so far
19:39 - we learn how to start by the interpreter
19:42 - from command line we also learn there is
19:44 - something called building types
19:46 - and they are used represent values for
19:50 - example tax for numbers
19:52 - we also learned free building types so
19:55 - far integers strings and lists
20:00 - we also learned what is the variable how
20:03 - to use that and how we can print it
20:05 - finally we learned that feyten informs
20:09 - us that something is wrong and we
20:11 - learned how to read errors in Python
20:13 - it's a lot of knowledge so make sure you
20:16 - feel comfortable with whatever we
20:19 - learned so far if you want to learn more
20:21 - about python basics make sure to
20:24 - subscribe my channel and stay tuned have
20:27 - a lovely day and see you

Cleaned transcript:

hello everyone I'm Ola and this is how it is for girls today we will learn very basic of Python programming language if you haven't installed it yet check my previous video where I explain what is a programming language and how to install by them why we use language why we speak obviously we do that to communicate with other people but to do that effectively we use the language the person understands and if we have a closer look at the languages we'll discover that there is special words they're the special grammar we follow some words have a special function like noun verbs adjectives language also in contextual so depending on the context of the conversation some things can mean something else like your math teacher is a different teacher than your friends one but we'll find all these things in programming languages too special grammar keywords and context in our variables let's open command line or terminal on your computer if you don't know how to do that check my previous video about command line and you know everything you need to know at this point in command line who will type titan3 after running that the prompt changes from dollar to free greater than signs it means we are no longer giving orders to our operating system from comment line but now we are inside Python interpreter and only write needs to be written in Python language so writing things we learned in comment line videos like alas or city will fail actually let's try ha it will fail invite them find an interpreter will tell us that there is nothing called LS will get name error ok time to see that Python is not number then let's say the Sigma's calculator out there then struck if item could ask numbers like 2 plus 3 we type 2 plus 3 and hit enter the result appears immediately and it's correct is file so by the nose map but let's check if it can multiply divide and subtract so for multiple 5 yes it's 25 minus one correct answer it's for 40 / yes it's 20 perfect numbers and in this scenario integers are one of the Python socalled builtin types one of the main things that a programming language needed to deal with is answer the question how you should represent data so the language will understand what you try to achieve is it a number is it text or is it something else how could you tell your programming language then what's your name for example to do that you need to use the format that your programming language is expecting in Python we have a number of building types that allows us to communicate with computer effectively numbers we just use are one of the building types in Python that's the representation of integer numbers but what if you want to tell peyten what's your name this is obviously not integer your name is a text type in your named Python interpreter like this will result in error so it's not good well here comes next building tire called string to write a string we need to wrap text we want to write with quotes okay so let's try double chords this time it worked by two recognized your name as a text you could also use single pots too like this yeah let's try we're faces in between for example like saying hello world the interesting thing in programming languages like Python is that he put out two texts using plus operator like this in Python we could even in multiply text so if you want your name to be repeated three times you could type it us your names multiply by three okay but what if we want to actually have text with quotes inside like my name is in quotes hola well in fluent type it like this there is an error again syntax error if you want to use double quotes inside the string defined with double quotes we simply could use single quotes instead throughout our string and it works perfectly all right okay but let's make it even harder but if we want to have a text that contains both double quotes and single quotes well item can deal with that and to do that in the problematic word so if we wrap our text with single quotes and we have a single quote inside the text we can use backslash just before the single quote inside our text it's called escaping and it's nothing more than telling fightin hey this is not the end of our text yet okay let's try it first we found backslash to see an error so I type my name is Ola and I am a programmer yes heightened complaints that there is a syntax error that basically means that item does not understand what we tried to tell now let's escape a single quote that is a problem here by using backslash just before it so my name is Ola and I backslash single quote m8 programmer this time it's perfectly okay and to have it nicely displayed we could type print and the text we've escaped single quote now let's move to something more complicated building types could have some special superpowers they called methods and they could do some magic with your object in this scenario the text for example let's say we want to make a text uppercase there is a method our magic spell called upper that could be run on any text to make it work we type dot after our text than upper and opening and closing parentheses like this our methods our magic spell worked we'll talk a little bit more about methods later on in this series next videos so don't worry about it in Python there is also something called function and we'll talk much more about it also in next videos but now let's see some very easy function that we can use with text let's say we want to know how many letters the text we just typed have we can use their function Len so let's type this then open parenthesis our name and close parentheses and it karateka counted number of letters make sure to play with builtin types just learn about integers in text see what's possible see what costs the errors and actually this brings us to the next thing I want to talk about the errors we already serve some of them right we serve syntax errors and neighbors so let's have a closer look now but first let's generate some error so let's use function land with not text but integer like 200 now we try to count characters of something that is not text but it's a number so it'll resulted in an error if you want to learn how to code it's very important to learn that errors are your best friend and they will tell you what's problematic what it's not working yet they are important so we need to learn how to read them this time we get type error might assess that object of type integer has no length in the line above it it says where there ever happened in nine one errors are important and I think it's a worthwhile to create a little cheat sheet for you like the look of notebook so you take all the errors you see and write them down and write a little explanation what the error means like in case of syntax error Python is telling you that it does not understand what's going on so there is a problem with the syntax so you for example miss type something or in case of name error Python says that it does not know what something means so it's not miss type but there is something unknown which is different so for example when you have a variable that is not defined yet then Python will throw this error yes but what is the variable you ask and this brings us to the next point I want to talk about today variables are one of the most important concepts in all programming languages remember all this map formulas for example for area of the square containing letters instead of numbers thanks to this formulas for example for area of square no matter how big the other square was one meter or 2 meters or 100 meters you know how to calculate the earlier of that so our formula a multiple a contains a variable a is a variable so it is a name name for a concept like a member of the side of our square sense of variables it's extremely important in computer science it allows you to define the certain formulas or steps you need to follow no matter what its actual value for example if we would like Python to say hi to the user no matter who is daser and was the same at the user we could do that we could create a formula that does that so far to make items say hi to you we need to type the whole text like hi Ola Atwood if I want to make it work for any name like Mary or release its Allah is the same then what we really want to do is say hi and then the name so we could split our text in hi + oh now let's replace all that with variable name we'll have 5 + name her name is the variable we actually could run it for any value that is stored in variable it will be beliefs Mary Barbara or Sonia or anything else we created something abstract something credible and this is quintessence of computer science create formulas create steps that could be reused with different values we provide to our computer ok but let's try it in our Python interpreter if we type now hi + name there is an error it's name error that means that variable name is undefined what does it mean it means that there is no value provided in name variable yet variable is empty it's there is nothing there to run it properly without error we need to define value for the variable we need to put some actual value to the variable name let's do that we do that by assigning the value using equal sign so we type name equals hola so no name stores value hola we could run a now our code PI plus name and it worked obviously good question why writing name equals hola and then hi first name is better than to simply this hi hola variables similarly to their usage in macro millas will be extremely useful later on when we talk about methods and function will be able to extract many steps many things in one function and use that no matter what is the value want to operate on one of the side which is very very important is also readability of the code if we use good names for our variables we actually know more what we try to do in our code for example if you would like to calculate area of a square we could have in code simple to multiple to which means nothing to us it's just two numbers we multiply so it could be anything but if we have this area equals side multiple by side we actually know that we are calculating area of something using formula for re L square that is why one of best practices for all the programmers to name variable nicely it's very hard at times and a lot of programmers struggle with that but make sure to take some effort and name variables in some meaningful way but wait what happens with the variables that already have some volume for example we have their names that contains text hola can we reassign that can we put something else there the answer is yes okay so let's type name is Ola now when we check what is the value of the variable name its hola let's try to redefine which means change volume of the variable we use equals sign and to assign the value so name is Liz now the current value of the variable is this and the previous name hola is gone so the value of the variable is the last thing we assigned using equal sign that means that this name equals hola main equals sonia name equals marie will result in named variable containing the last name so name will be Chris Mary time to learn next building type in Python we already learned about integers and texts now it's time for lists to create empty lists we open and close square parentheses emptiness is not very interesting so let's create a list of notary numbers we will put our list in a variable so we don't to write the lottery numbers every single time we want to use that summons define lottery s we open square parentheses and then free comma 42 comma 12 the 1913 59 lottery variable contains our first nonempty list now we can do number of things with this list for example check how many numbers we have in this list by using a function you already learned then we could also use some methods the magic powers of the given building type this for example could be sorted if you want our numbers to be sorted from the lowest to highest number we could do that with sort method like this lottery dot sort wait but it does not print anything right the thing is that our list under the motor is variable to change in place so it would print lottery now with print from lottery you will see that our list have been nicely sorted for us what do you want to have our list reversed and we have next handy method next superpower of list building time and it's called rivers let's see this in action which I have lottery don't reverse and then print the variable lottery it's perfectly reversed you could also add something in the end of the list there is another method for it called happened so let's try it lottery dot append 100 and let's print a lottery number 100 is added at the very end of the list okay all these methods all the special powers of building types aren't very handy but how do you know what's possible and what's not to know all methods that Python as a language provides for all builtin types you just need to go to their Python documentation and just visit this page and check the documentation okay so once back to our list one of the most important abilities of each list is to being able to refer to the elements of the list by its index what is that index it's the number that says what is the position element in the sequence so remember I would not very variable right if you would like to see only the first element of the list we could print it with this print rotary index zero why zero well in computer science we index things from zero instead of one so the first element is under zero the second under one and so on it might be very confusing just follow the sputter and it will be natural for you it's some time okay so we already said that we can add 11 to the least what do you want to delete the element and not any element but a certain element given index you would like to delete for example 40 from the list which is a third element so we've indexed to we'll do it like this del notary index 2 now when we print our lottery variable will have the list not containing 13 now let's play a little bit more with lists what if we try to print the element of the lottery variable that has index that is too high for example 1000 only has now 6 elements but let's try to ask feyten what is the element under index 1000 so we will print lottery with index 1000 you get a new type of error this is index error if you get this error it means you try to access something what is not there and your list is not big enough of course list could contain not only numbers we could have lists of text like this names is all our list and Sonja or list of elements of different types like mix is a la 7 and the list of 1 2 3 ok we learned a lot I'm sure you are totally exhausted it's a lot a lot of knowledge in one go there will be much more in next video and don't be afraid just practice whatever you learn today play with Python interpreter see what you can do with integers if texts see different kinds of errors and now that just sum up what we learned so far we learn how to start by the interpreter from command line we also learn there is something called building types and they are used represent values for example tax for numbers we also learned free building types so far integers strings and lists we also learned what is the variable how to use that and how we can print it finally we learned that feyten informs us that something is wrong and we learned how to read errors in Python it's a lot of knowledge so make sure you feel comfortable with whatever we learned so far if you want to learn more about python basics make sure to subscribe my channel and stay tuned have a lovely day and see you
