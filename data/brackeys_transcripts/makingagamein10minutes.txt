00:00 - the reason the address asked me how much
00:01 - time do you need to make a game feeling
00:04 - a bit bold I confidently said 10 minutes
00:06 - I mean it's not like you would have any
00:08 - way of finding our of course he
00:10 - responded with great let's make a video
00:12 - on that after which my confidence was
00:14 - gone but I've now have time to adjust to
00:16 - the idea and think it sounds really fun
00:19 - also doing game challenges like this is
00:21 - always a great way to practice I'm gonna
00:23 - try and replicate super hexagon which is
00:25 - a really cool mobile game so without any
00:27 - more introduction let's make a game in
00:29 - 10 minutes all right so all the cameras
00:33 - are rolling there are so many cameras
00:35 - here there's one there one there one
00:37 - there and this even one up there so it's
00:40 - pretty exciting and I think we're all
00:42 - ready so let's just start the timer and
00:44 - let's get started
00:45 - so the first thing that we want to do
00:46 - here is probably just sketch out our
00:48 - level so I'm just gonna select my main
00:49 - camera and I'm gonna give it some kind
00:51 - of fairly vibrant red color I think this
00:53 - looks pretty good you can always play
00:55 - around with this later I'm also going to
00:57 - go ahead and create a 2d sprite and for
00:59 - this party I'm gonna select a knob I'm
01:01 - also going to reset the transform and
01:02 - set the scale some to something like 3.8
01:05 - by 3.8 I'm also going to set the color
01:08 - to black and make it transparent and
01:10 - this is just going to mark the center of
01:11 - our screen let's then go to the object
01:13 - sprite and create all players so let's
01:15 - rename this to player again reset the
01:17 - transform on this and for the sprite
01:19 - that's also just choose to knob here we
01:21 - are on a limited time let's set the Y to
01:24 - point 6 to move him up and now we can
01:25 - have him rotate around the knob of
01:27 - course in order to do that we need a few
01:29 - components we first of all need a
01:30 - rigidbody 2d that we're going to mark as
01:33 - kinematic because we only want to move
01:34 - it through script and not by forces
01:36 - let's also create a circle Collider 2d
01:38 - and mark it as a trigger because we
01:40 - don't want collision we just want to
01:41 - know when he collides with something and
01:43 - let's then also create a player script
01:45 - and this is of course what is going to
01:46 - move around a player so let's double
01:48 - click that this to open it up in visual
01:50 - studio and hope the visual studio opens
01:52 - quickly today please wasting valuable
01:56 - time alright so let's get rid of our
01:58 - start function here and instead let's
02:00 - create a public float and since we're
02:03 - going to be moving our player we of
02:04 - course want to know how fast let's
02:06 - create a move speed by let's say 600 by
02:09 - default then inside of our update min
02:11 - method we can get some input used
02:13 - get access wrong because we don't want
02:15 - any input smoothing here and I'm going
02:17 - to get the horizontal axis so that is
02:19 - the AMD keys or left and right on the
02:21 - keyboard that's actually store this in a
02:24 - variable because we don't want to do the
02:25 - movement itself instead of update let's
02:28 - do movement equals zero and it set it
02:31 - equal to on input and now we can create
02:33 - a separate fixed update method which
02:35 - much bit much better to do our input
02:37 - when use transform that rotate around
02:39 - and this is pretty cool method because
02:40 - it allows us allows us to rotate around
02:42 - a certain point and I want to rotate
02:45 - around the center of our screen or knob
02:46 - so vector 3.0 and the axis is going to
02:49 - be viktor 3.4 with this set axis and the
02:52 - angle is going to pend on our movement
02:54 - multiplied with time dot fix delta time
02:57 - multiplied with our move speed and i
03:00 - believe that we need to reverse this so
03:02 - I'm gonna put a minus here but I might
03:04 - be wrong so let's say that heading to
03:06 - unity and hit play and hopefully
03:08 - hopefully yes we can move around our
03:11 - player that's good player movement done
03:12 - yay so the next thing that we need to do
03:15 - is of course add in a hexagon so that we
03:17 - have stuff to avoid and there we could
03:19 - do this by opening up Photoshop and
03:20 - quickly creating a sprite but that would
03:22 - mean that when we scale the hexagon the
03:23 - width of the line would scale as well so
03:25 - instead let's create a line renderer
03:28 - here and I'm just going to reset the
03:29 - transform on this and inside the
03:31 - physicians array we can now start to use
03:34 - a line that's set the C to zero we
03:35 - always wanted that to be zero but you
03:37 - can see here that we can now create this
03:39 - line and I'm gonna try and approximate a
03:42 - hexagon using this method so a hexagon
03:44 - has six positions or six points and six
03:48 - sides and the first one is going to be
03:50 - something like negative 0.5 by negative
03:53 - point-eight just point eight that's two
03:55 - point eight and then the second one here
03:57 - is going to be negative point nine 500
04:00 - point nine five don't have time for
04:03 - errors by zero you could also just do
04:07 - one but I think this is going to be
04:09 - better because it's not a round number
04:10 - if I have my math right which is very
04:13 - much in my head right now point eight
04:16 - point five oh this is stressful to do
04:20 - negative point eight again yes it's
04:23 - looking like something
04:25 - 0.95 now in Syria
04:27 - and finally it's going to be 0.5 and
04:30 - negative point-eight no just point 8
04:33 - funny yeah alright that that actually
04:36 - looks like a hexagon might want to bring
04:38 - in the sides a bit more it's just an
04:40 - approximation bear with me guys so we
04:42 - now have a hexagon and the cool thing is
04:43 - that when we scale this the line
04:45 - thickness remains the same so we can go
04:46 - in here and set the width to something
04:47 - like 0.2 and it's always going to there
04:49 - cool awesome
04:50 - we then name it something like X are
04:52 - gone and of course we need to a few
04:55 - things on this first of all we need a
04:56 - colliders that's going here and create
04:58 - another object I'm gonna put this on a
05:00 - subject separate object so that we can
05:03 - mess with it and you'll see why in a sec
05:05 - and let's do an edge Collider 2d and we
05:08 - want this to have all the same points we
05:09 - want it to follow the shape so let's go
05:11 - ahead and lock this layer and let's go
05:13 - and add another inspector not lock the
05:16 - layer oh hi too many inspectors in here
05:18 - now so we have two inspectors now and we
05:20 - can select the hexagon because this one
05:22 - is locked and we can go into the line
05:23 - render and now we can see all the
05:24 - positions and simply copy them in really
05:27 - cause I'm just gonna do this quickly
05:28 - because like I don't think I can do this
05:30 - while talking alright I think that's
05:37 - right so we can now close this inspector
05:39 - here and also unlock this inspector here
05:43 - and now we should see that when we
05:44 - select our Collider dice indeed a green
05:46 - line that goes around and the cool thing
05:47 - is because it's on a separate layer
05:49 - means in this scale it in a bit and it's
05:51 - now on the inside only of our hexagon
05:54 - which is where we want to register
05:55 - collisions so that's perfect and now on
05:57 - our hexagon we can go ahead and create a
05:59 - few components we want a rigidbody 2d
06:02 - again this is going to be kinematic and
06:04 - it's also creating a hexagon script cool
06:10 - and yes I do want to open that but
06:11 - please open it quickly there we go
06:13 - awesome so inside of our hexagon script
06:15 - we of course need a reference to a rich
06:17 - body so let's create a public rigidbody
06:18 - 2d and it's called it RB we also need to
06:22 - define some kind of shrinks play speed
06:24 - so let's do float shrink speed equals 3
06:27 - and then inside of our start method we
06:29 - can start by setting a random rotation
06:31 - for rigid body so we can do rotation
06:34 - equals random that range between 0 and
06:38 - 360 degrees
06:40 - and we can also set our scale
06:41 - transformed not locally to the angles
06:44 - local scale equal to vector 3.1
06:48 - multiplied with some large number that's
06:50 - just 210 hopefully that works out the
06:51 - inside of an object method we need to
06:53 - always shrink it so Doku again local
06:57 - scale please - equals vector 3.1
07:01 - multiplied with shrink speed multiplied
07:04 - with time.deltatime I think that's gonna
07:07 - work and then we can check that if our
07:09 - transform that local scale maybe we use
07:12 - any coordinate I'm just going to use X
07:14 - gets below 0.05 we probably want to
07:18 - remove it so destroy game object alright
07:23 - I think that's gonna work so if we now
07:24 - go in and we need to remember to link up
07:28 - our rigidbody now it's about to forget
07:29 - that so link up the red body here hit
07:32 - play we should see that our Higgs again
07:34 - gun becomes really big and then so it
07:36 - slowly shrinks and then disappears
07:38 - awesome it works so we can now take our
07:40 - hexagons and move it down here in order
07:42 - to create a prefab out of it and of
07:44 - course we need to now spawn in some
07:46 - hexagons so we'll create some kind of
07:47 - spawning let's just call it spawner and
07:50 - we'll also create a component called
07:51 - spawner and spawn a spawner spawner open
07:55 - this up spawn it there we go and this is
07:58 - actually fairly simple we need to create
08:00 - some kind of spawn rate so public float
08:02 - spawn rate spawn rate equals 1 and we'll
08:07 - also need to create a public game object
08:09 - hexagons prefab and a public float
08:14 - private float doesn't really matter but
08:17 - it does next time to spawn so this marks
08:20 - the next time that we want to spawn in a
08:22 - hexagon and then inside our update
08:25 - method we can check that if time that
08:27 - times our current time is greater than
08:28 - the next time to spawn well then we want
08:31 - to go ahead and spawn in a hexagon so
08:32 - we'll instantiate a hexagon prefab at
08:36 - the centre of a world vector 3.0 with no
08:41 - rotation so quaternion that identity and
08:43 - we also want to set the next time to
08:45 - spawn equal to time that time our
08:47 - current time plus 1 divided by our spawn
08:50 - rate awesome I think that's your work
08:52 - again
08:53 - I guarantee so in doing things this fast
08:54 - oh no no no I hit play
08:57 - yeah that's an arrow because we need to
09:00 - link our hexagon prefab oh my god so
09:02 - stressful and that's hit play and now it
09:05 - spawns in hexagons amazing of course
09:08 - nothing happens when we actually collide
09:09 - with them so to fix that let's go into
09:12 - our player script a player script let's
09:14 - add a quick method here and this is just
09:16 - going to be a void ontriggerenter 2d
09:19 - something something interests our
09:20 - trigger let's restart our level in order
09:22 - to restart a level we need to be using
09:26 - engine dot scene management there we go
09:29 - and then down here we can go a scene
09:31 - manager that loads scene and we want to
09:34 - reload the currently active scene so
09:36 - seeing manager don't get active scene
09:39 - dot build index and there we go we can
09:42 - also print some kind of message or slow
09:45 - the game down or show some kind of game
09:48 - over but for now we'll just restart it
09:49 - so now we should see that if we hit the
09:51 - sign here yes I'm so happy that work and
09:55 - the final thing that super hexagon does
09:57 - I think we have time for this I have no
09:59 - idea the final thing that super hexagon
10:00 - does is that it kind of rotates the
10:03 - camera constantly in order to give this
10:04 - pretty cool nauseating confusing but
10:07 - cool effect and to do this fairly easily
10:11 - is just add a script on our main camera
10:14 - called something like rotator nut row
10:16 - ADA rotator and if we open this up
10:20 - inside for update method we simply want
10:22 - to do transform rotate by victor 3.4
10:27 - word again around woops around the set
10:30 - axis and our rotation should be
10:32 - time.deltatime multiply it with some
10:35 - speed I'm gonna go 30 and again I want
10:38 - this to move in a counterclockwise
10:42 - direction I believe just going from the
10:45 - hunch and I think that should be it so
10:49 - now when we play this yes our camera is
10:51 - constantly rotating and we now have a
10:53 - game that's it we did it that super
10:56 - hexagon not quiet it's not super hexagon
10:58 - it's an amazing game and it takes more
11:01 - than this but we have something and I
11:03 - believe it's within the time frame
11:05 - someone tell me
11:07 - that's amazing so hopefully you guys
11:10 - like this sort of format I think it's
11:12 - it's really fun to be challenged and to
11:15 - to do something that you want usually do
11:18 - it's it's always fun to make a game
11:19 - where you don't get caught up in how
11:21 - pleased the code is or optimization and
11:25 - all these bigger thoughts and just
11:27 - adding lots and lots of features that
11:28 - sometimes it's fun to just sit down and
11:30 - do a game really quickly and hopefully I
11:33 - don't know what camera to speak to here
11:34 - but hopefully you guys kind of will try
11:37 - this out yourselves so I am now
11:40 - challenging you guys to do this
11:43 - yourselves that's right
11:45 - I want you to grab your mouse and
11:47 - keyboard and try to make a game in ten
11:49 - minutes and if you want to be a super
11:51 - badass you can even film it and share
11:53 - the video and game on discord we've gone
11:54 - ahead and created a channel specifically
11:56 - for the 10 minute game challenge of
11:58 - course I completely understand that
11:59 - creating a game in ten minutes might
12:01 - seem really scary and hard and it is but
12:04 - it's also a really great way to improve
12:06 - and force yourself to just make
12:08 - something after all who cares how good
12:10 - the end result is you only had ten
12:11 - minutes also make sure to let everyone
12:13 - know that you're participating by
12:14 - tweeting with the hashtag 10 minute game
12:16 - and I would actually like to challenge
12:17 - Sam psyche who is specifically to do
12:20 - this challenge also if you don't already
12:21 - know Sam's channel you should definitely
12:23 - check him out also make sure to leave a
12:25 - comment to help encourage him on that I
12:27 - wish you the best of luck with the
12:28 - timeline and game challenge and I really
12:30 - look forward to seeing your submission
12:32 - thanks for watching I'll see you in the
12:33 - next video thanks of the awesome patreon
12:35 - supporters who donated in September and
12:37 - especially thanks to enter kononenko art
12:39 - arming true VR systems simmer IO
12:41 - extended player Cheeta 3d Jeff Johnson
12:44 - infinity PBR
12:45 - Sybok mummy Dennis Sullivan Chris
12:47 - Sheriff Abdullah pizza Murphy thanks
12:49 - alone Leela set Vincent and skewer
12:51 - shreya ste Dirk Eames Kirk Ronan Chima
12:53 - polar bear Bruins cat now akiva sake
12:55 - brother appears Larry tweet James Rogers
12:57 - Rob Baron pecan Vania Erasmus Robert
13:00 - bond car Jackson James P Anthony Patton
13:02 - q Swedish key and a brief see you guys
13:05 - Roth