00:00 - for the last couple of years pretty much
00:01 - everyone have been talking about PBR and
00:04 - for good reason PBR plays a huge part in
00:07 - modern graphics so in this video we'll
00:09 - take a look at what PBR is and how you
00:11 - can use it to make beautiful materials
00:13 - but first up this video is sponsored by
00:15 - Skillshare Skillshare is an online
00:17 - learning community and they have more
00:18 - than 19,000 quality classes on design
00:21 - photography Tech and more if for example
00:23 - you want to learn how to use unreal I
00:25 - recommend the crash course in 3d game
00:28 - design this awesome course is made by
00:29 - Elfa Chen and it will teach you how to
00:31 - quickly create a 3d game level using the
00:33 - Unreal Engine a premium skill share
00:35 - membership gives you unlimited access to
00:37 - all classes for less than $10 a month so
00:40 - to get started simply click the link in
00:41 - the description and the first 500 people
00:43 - will receive their first two months for
00:45 - only 99 cents also special thanks to
00:48 - encode we trust patrick mckinley diego
00:50 -  frank tristan town dan gyein passio
00:53 - infinity PPR and yo Ryoma for their
00:56 - support on patron so what is PPR well
00:59 - everywhere we look light is bouncing
01:02 - around interacting with objects where
01:04 - light hits a surface complex processes
01:06 - determine what happens and while trying
01:08 - to simulate all those interactions on a
01:10 - physical level would be impossibly
01:12 - taxing on the computer having a grasp on
01:14 - the principles makes shading and
01:16 - renewing objects a lot easier and more
01:18 - beautiful
01:19 - in fact graphics rendering in games used
01:21 - to involve a lot of weird and almost
01:23 - random algorithms to try and cheat your
01:26 - way to a good looking result but with
01:28 - the introduction of physically based
01:29 - rendering or PBR we're now able to base
01:32 - these calculations on actual physical
01:34 - principles PBR is essentially using what
01:37 - we know about the physical behavior of
01:39 - light to render natural looking
01:40 - materials in unity we can use the
01:43 - standard shader to do exactly this the
01:45 - standard shader allows you to take
01:47 - advantage of our knowledge of how light
01:48 - interacts with materials in the real
01:50 - world to get really realistic results
01:53 - and because it's based on real-world
01:54 - physics calculations the standard shader
01:57 - will also keep the look of materials
01:58 - consistent under different lighting
02:00 - conditions so let's take a look at how
02:02 - light behaves in the real world when
02:05 - light hits an object some portion of the
02:07 - light will be reflected off the surface
02:09 - in computer graphics we often talk about
02:11 - specularity or specular reflection
02:13 - which is the amount of reflectivity a
02:15 - surface has when light gets reflected it
02:18 - leaves the surface in the opposing angle
02:20 - of the surface normal but with the
02:22 - exception of a perfect mirror all the
02:24 - light is not reflected directly off of
02:25 - the surface a portion of it will enter
02:28 - the material where it can either be
02:29 - absorbed or diffused diffuse reflection
02:33 - refers to light being tossed around
02:34 - inside an object until eventually
02:36 - leaving the surface in different
02:38 - directions this is what makes the
02:40 - material itself visible to our eyes now
02:43 - staying on the subject of diffuse
02:45 - reflection versus specular reflection we
02:47 - can see that the more specular a
02:49 - material is the less diffuse it should
02:51 - be if you think about this logically it
02:53 - makes sense when looking at a mirror it
02:55 - takes on the colors of the environment
02:57 - but the color of the mirror itself isn't
02:59 - really visible if we look at a brick we
03:02 - don't see much of the environment
03:04 - instead we see the brown orange color of
03:06 - the material itself this is due to one
03:08 - of the most important principles in PBR
03:10 - the concept of energy conservation this
03:14 - means that an object cannot reflect more
03:16 - light than it receives another example
03:19 - of this is when talking about the
03:20 - smoothness of a surface while the
03:22 - smoother surface creates a stronger
03:23 - highlight the area of the highlight also
03:26 - gets decreased now one of the things
03:28 - that are really interesting to look at
03:30 - are metals this is because the physical
03:32 - properties of metals are very different
03:34 - from just about any other material
03:36 - firstly they tend to be much more
03:38 - reflective than nonmetals this is
03:40 - something that can easily be recognized
03:41 - metals are shiny in fact they will
03:45 - usually reflect as much as 60 to 90% of
03:48 - incoming light well as nonmetals
03:50 - generally reflect zero to twenty percent
03:52 - another property of metals is that their
03:54 - reflections can appear tinted a good
03:57 - example of this is copper or gold and
03:59 - speaking of gold another golden term to
04:02 - know is Fornell fernell refers to the
04:04 - fact that the amount of light that gets
04:05 - reflected varies at different angles in
04:08 - the real world at the very edge of an
04:10 - object the amount of light reflected
04:12 - will be 100% the amount reflected at the
04:15 - center of the object is what we refer to
04:17 - as the base reflectivity with a PPR
04:19 - workflow Fornelli supplied automatically
04:22 - when rendering based on the reflectivity
04:24 - you input on the material the Finelli
04:26 - effect becomes less
04:27 - as the surface becomes less smooth but
04:29 - it applies to every single thing around
04:31 - us which in turn speaks to the fact that
04:33 - even the roughest materials have a
04:34 - reflection now another thing that
04:36 - applies to all objects is that all
04:39 - objects actually have small
04:40 - imperfections cracks and bumps in their
04:43 - surface they might be too small to see
04:45 - but they're definitely there this is
04:48 - referred to as the micro surface and it
04:51 - can play a big role in how light is
04:53 - reflected and later perceived the more
04:55 - uneven and rough the micro surface gets
04:57 - the more diverged and blurry the
05:00 - reflected light looks the roughness of
05:02 - our material is often referred to as
05:04 - glass or in the case of unity as
05:06 - smoothness so that's a quick overview of
05:09 - how these things work in the real world
05:11 - but how about in unity well as mentioned
05:13 - earlier unity has a built in standard
05:15 - shader that automatically sets up a lot
05:17 - of this for you the standard shader
05:19 - gathers all the calculations needed to
05:21 - create realistic looking materials using
05:23 - PBR a good thing about the standard
05:26 - shader is that even though it has a
05:27 - bunch of features it discards all unused
05:29 - properties when it's built which really
05:31 - helps optimize it the standard shader is
05:33 - also very versatile because you can
05:35 - choose between multiple workflows each
05:37 - workflow represents a different way of
05:39 - thinking about PBR but all of them can
05:41 - achieve the same realistic results the
05:43 - standard shaders default workflow is
05:45 - metallic this has nothing to do with the
05:47 - material necessarily having to look like
05:50 - metal instead it means that this
05:51 - approach to physically based rendering
05:52 - is based on defining how metallic or
05:55 - nonmetallic the surface of the material
05:57 - should be the specular workflow is also
06:00 - really common this lets you have direct
06:01 - control over the brightness and tint of
06:03 - specular highlights in a metallic
06:05 - workflow this gets calculated
06:07 - automatically so for the sake of
06:09 - simplicity let's focus on the metallic
06:11 - workflow and go through the shader
06:12 - properties to see how they affect the
06:14 - material some of the properties we can
06:16 - adjust our color metallic Ness and
06:18 - smoothness but for most assets we don't
06:20 - want these values to be uniform across
06:22 - the entire model instead we use
06:24 - something called texture Maps to change
06:26 - them for different points on the surface
06:28 - so what is a texture map a texture map
06:31 - is basically an image for each pixel on
06:34 - the image we can specify a color each
06:37 - color consists of a red green and
06:39 - value these are cold channels however
06:42 - each pixel actually has a fourth channel
06:44 - the Alpha Channel normally this is used
06:47 - to define transparency but as you'll see
06:49 - further down the line we can use it for
06:50 - all kinds of things all right but that
06:53 - in place the first thing that we have to
06:54 - select is a rendering mode this allows
06:56 - you to choose whether the object uses
06:58 - transparency and if so which type of
07:00 - blending mode to use the default setting
07:03 - is opaque which means no transparency to
07:05 - make your object transparent select
07:07 - either cut out transparent or fade which
07:10 - one to choose depends on the look you're
07:11 - going for the difference between them
07:13 - are on the screen now you can choose the
07:15 - level of transparency on different parts
07:16 - of the object using the Alpha channel of
07:18 - the albedo map and speaking of albedo
07:20 - this is the first property that we can
07:22 - adjust on the shader this defines the
07:24 - color of diffused light meaning the raw
07:26 - color of the material itself this
07:29 - property works as a base for your
07:31 - material as with all the properties you
07:32 - can either choose to use a single color
07:34 - or you can specify a texture map in that
07:37 - case changing the color will simply tint
07:39 - the texture the metallic property
07:41 - defines the metallic nests of the
07:42 - material as we talked about earlier when
07:44 - the level of metallic nests increases
07:46 - the albedo will become more and more
07:48 - obscured by the reflections of the
07:50 - environment the smoothness property lets
07:52 - you adjust how smooth or rough the micro
07:54 - surface should be as mentioned earlier
07:56 - if the micro surface is rough it will
07:58 - scatter light more evenly smooth
08:00 - surfaces tend to look glossy while rough
08:02 - surfaces look matte if you assign a
08:05 - texture to the metallic parameter both
08:07 - the metallic and smoothness sliders
08:09 - disappear this is because a metallic
08:11 - texture map controls both it controls
08:13 - metallic nester the red Channel and
08:16 - smoothness through the Alpha Channel
08:17 - next we can use a normal map to add
08:20 - surface detail to our model without
08:22 - adding extra geometry this is great for
08:25 - stuff like bumps crevices and scratches
08:27 - because the changes how light reflects
08:29 - off the surface to simulate exactly this
08:31 - kind of detail hide maps are a similar
08:34 - concept to normal Maps but the rendering
08:36 - technique is more complex and therefore
08:38 - more performance intensive hard maps are
08:40 - generally used together with a normal
08:42 - map for showing larger changes in
08:44 - surface level the occlusion map is a way
08:46 - to add ambient occlusion using a black
08:48 - and white texture this is a cheap way of
08:50 - creating detailed shadowing in the play
08:52 - of your model where light might have a
08:54 - hard time escaping finally you can make
08:57 - your object emit light by using the
08:58 - emission property here you can also
09:00 - specify an emission map if you only want
09:02 - to apply a mission to part of your
09:04 - object to learn more about how to use
09:06 - emissive materials in your game check
09:07 - out our video on simple lighting in
09:09 - unity and that pretty much concludes
09:11 - this video from here it's up to you to
09:13 - get creative and start using these tools
09:15 - in your creative workflow
09:16 - I suggest having a look at this handy
09:18 - chart before you get started now I'm
09:20 - sure that we'll see a lot of
09:21 - improvements to the standard shader with
09:22 - the introduction of the new scriptable
09:24 - rendering pipeline so definitely stay
09:26 - tuned for that on that thanks for
09:28 - watching and I will see you in the next
09:30 - video thanks of the awesome patreon
09:32 - supporters who donated in February and a
09:34 - special thanks to encode we trust
09:35 - Patrick McKinley Diego Frank
09:38 - Tristan town tank guy and Buffy o
09:39 - infinity PPR yaaaaay Omer and soft tune
09:42 - sighs mommy Durkheim's Kirk face on
09:44 - Murphy beard or die DoubleTap 45 James P
09:47 - J delay Superman the great John ProGuard
09:50 - Dennis Sullivan
09:50 - Jason Lotito Alex wicket ski beyond
09:52 - photo ops wetlands villain of Jin Sasha
09:55 - hafsteinn Sunni Arabs and Gregory Pierce
09:57 - James Rogers Robert bond
09:59 - derman Rob fan and Erasmus you guys Rock