00:00 - thanks for tuning in at brakus everyone
00:04 - and welcome to video number eight in the
00:06 - how to make a 2d platformer course I
00:09 - know it's been quite a while since the
00:11 - last one but I've been I've been working
00:13 - on some pretty awesome stuff first off
00:16 - some of you might know that I've started
00:18 - a new course where I teach c-sharp so if
00:22 - you want to become really sharp on that
00:25 - please go ahead and visit the course and
00:28 - have fun so it's on the screen and also
00:32 - it's gonna disappear from the screen now
00:35 - because here is the all new brackets
00:37 - developer forum I showed it off in the
00:39 - last video also in the c-sharp course
00:42 - but I just quickly want to show you
00:44 - what's going on so if you go to forum da
00:47 - Braccio calm you can join now and and
00:51 - become a part of this quickly expanding
00:54 - community there's an answer section so
00:57 - if you find anything difficult please
00:58 - just go ahead and ask your question
00:59 - there's plenty of discussions there are
01:03 - possibilities for showcasing your work
01:05 - and getting feedback and collaboration
01:08 - also just recently launched a resources
01:11 - section so there's plenty of cool assets
01:14 - and place to go to learn and use in your
01:18 - game and also the tutorial ideas
01:21 - category if there's something you want
01:23 - to suggest to me so instead of writing
01:26 - me an email this is much better because
01:28 - both I and of the other users can answer
01:31 - you and other people can see the answer
01:33 - too
01:34 - cool so let's just get started with
01:37 - today's video as always I've opened up
01:41 - unity and today we are gonna be looking
01:44 - at shooting finally we're gonna do some
01:47 - shooting so to go ahead and get started
01:51 - let's go ahead and look at the player
01:53 - here so right now you can see that he
01:56 - has some different objects attached to
01:58 - him and we can be focusing on the arm
02:01 - here and we're gonna put a weapon on so
02:03 - that we're going to be doing some ray
02:05 - casting to to actually fire some bullets
02:11 - which we're not going to get really
02:13 - graphical with with yet but we can delay
02:16 - the foundation so yeah let's just go
02:19 - ahead and get started so to do this
02:21 - first off we want to get a cool sprite
02:24 - so go to the astronaut sprite Atlas and
02:26 - let's expand this let's find the pistol
02:31 - and let's just drag it into the
02:33 - hierarchy so that it is the pistol let's
02:37 - Center the transform here if it isn't
02:40 - already and you can see it's lying right
02:42 - here now we can put that on to the arm
02:45 - and we can drag it over and position it
02:50 - on the arm here something like there
02:54 - looks pretty good I think we can live
02:57 - with that maybe just pull it down a tiny
02:59 - bit
03:00 - there looks pretty much perfect and it's
03:04 - of course up to you whether or not you
03:05 - want to want to have it in front of the
03:07 - arm or behind the arm in front of the
03:10 - player and all that you can see if we
03:12 - select our arm it's on the player
03:14 - sorting layer and it's all in layers -
03:16 - and the players is zero so we've made
03:20 - room for weapons actually so we can go
03:22 - ahead and select the player here and
03:24 - just type in one and so it will be
03:26 - between the arm and the player which I
03:28 - find it took pretty great for weapons
03:31 - cool so now it will follow when we hit
03:35 - play you can see that our gun is
03:37 - following our arm around and that's just
03:40 - what we want but what we also want to do
03:43 - is create an empty object from where we
03:46 - will draw out the raycast we will draw
03:50 - the line the sort of the place where we
03:53 - are going to spawn particles in a later
03:55 - video to make cool graphics it's
03:57 - basically just the place that we're
03:59 - going to shoot from so let's just go
04:01 - ahead and hit create a game object
04:03 - create empty or you can just do ctrl
04:06 - shift and and let's rename this to let's
04:12 - do fire point and let's drag this under
04:17 - the pistol let's reset the transform and
04:21 - now let's drag it up here
04:23 - let's try 0.05
04:27 - we're gonna need a little more so let's
04:28 - do cero 5 8 it's too much 6 0.056 book
04:34 - works pretty great and now let's just
04:37 - drag it over you don't have to be all
04:39 - that accurate
04:40 - I just wanted to type it in so you could
04:42 - follow along and and this will will do
04:46 - just fine
04:47 - great so always make sure that it's the
04:50 - value is 0 cool so now that we have done
04:54 - that we can go ahead and create our
04:55 - weapon script and that will do stuff
04:58 - like amid the raycast it will probably
05:02 - also do some graphics work it will
05:03 - handle handle the fire rate and then
05:06 - later apply damage to the enemy so let's
05:10 - go ahead and click on the pistol here
05:13 - hit add component and you can see I've
05:15 - already made one here so let's just go
05:17 - ahead and delete that and that was just
05:19 - for testing purposes so let's go ahead
05:21 - and click on the pistol hit add
05:23 - component new script of course of type C
05:26 - sharp and let's call this weapon and now
05:30 - when we double click this to open it up
05:33 - in monodevelop we can go ahead and
05:36 - create our weapon script so first off
05:42 - let's declare some variables what are we
05:44 - going to need here well first off we are
05:46 - going to need a fire rate so we're gonna
05:48 - make a public float so we can edit it
05:50 - inside of unity called fire rate and
05:53 - we're gonna set this equal to 0 by
05:56 - default because we both want the player
05:59 - to be able to hold down the mouse button
06:01 - and then it will fire in intervals but
06:04 - we also want the player to just or we
06:07 - want some weapons to be just a single
06:11 - burst meaning that you have to click for
06:13 - each time for the weapon to fire and
06:15 - instead of making a boolean that we
06:18 - check for called single burst we will
06:21 - just check that if the fire rate is
06:23 - complete zero then it's going to be a
06:26 - single burst weapon so this right here
06:29 - is going to be single burst then we have
06:32 - a public float which is going to be the
06:35 - damage that our weapon is going to do
06:37 - and we're just gonna set
06:40 - 2:10 then we have it's actually yeah
06:49 - let's make that a capital D and then we
06:53 - want our last public variable which is
06:57 - going to be our layer mask and you're
06:58 - going to see what we will need this for
07:00 - later later let's call this not to hit
07:05 - and it's basically gonna do it's
07:11 - basically gonna tell us what we want to
07:14 - hit so we when we make this variable
07:18 - actually let me just go ahead and show
07:20 - you so when we save this layer mask it's
07:23 - probably not a type that you've seen
07:25 - before you can see just like we have a
07:27 - fire rate and damage appear we also have
07:29 - this layer mask variable appear and it's
07:33 - basically just a list of all the
07:35 - different layers inside of unity where
07:38 - we can check off if there's something we
07:40 - don't want our laser to head and that
07:42 - definitely is we don't want the laser
07:44 - and when I say later I mean the raycast
07:48 - to hit our own player we only wanted to
07:51 - hit everything else so I'm gonna go
07:53 - ahead and select the player and also we
07:56 - don't want it to hit the ignore ray cast
07:59 - layer where we might put something late
08:01 - later it's an automatically generated
08:03 - layer where you put all of the stuff
08:05 - that you don't want to be head of course
08:09 - when we do this we also may need to make
08:11 - sure that when we go into the player and
08:13 - look at the layer that the player layer
08:16 - is actually selected so you can go ahead
08:18 - and change this for children also I'm
08:21 - not going to do that because we only
08:23 - have colliders attached to the the
08:28 - player object and not all of the child
08:30 - objects so if you don't have this layer
08:33 - already you can just of course go ahead
08:35 - and add a layer and write it in here and
08:37 - then go back and change it cool so
08:41 - heading back into the script we are
08:43 - gonna need some private variables also
08:45 - you're gonna need a float that is
08:48 - clinically called time to fire equals
08:53 - zero so we're going to
08:55 - you fold that to zero and then we are
08:59 - gonna go ahead and create a transform
09:02 - that will store our fire point like this
09:07 - so in the start function here actually
09:12 - let's make that the awake function which
09:16 - is also sometimes used for
09:17 - initialization we are going to go ahead
09:20 - and type fire point equals transform dot
09:27 - find child so we're simply going to
09:30 - search for the fire point as a child of
09:33 - this object you can see that our fire
09:36 - point is a child of pistols so we can
09:38 - simply just search for the child and the
09:41 - children of pistol and just instead of
09:43 - using get game object which will search
09:47 - for everything so find child and then
09:51 - just input the name which is in our
09:52 - cases fire point and then we're going to
09:55 - go ahead and just do something that is
09:58 - great to do whenever you're creating
09:59 - larger scripts are working multiple
10:02 - people together or I mean it's just
10:04 - generally good practice and we're gonna
10:06 - go ahead and do what is called a null
10:08 - check and that is making an if statement
10:11 - like this and then we're gonna check if
10:13 - the fire point variable is equal to null
10:16 - and when is it equal equal to null
10:19 - whether it's going to be equal to null
10:21 - if it didn't find a fire point and then
10:24 - we're gonna go ahead and make ourselves
10:25 - a little error message so we know so we
10:29 - we know what's going on if if we get
10:33 - this error instead something might just
10:35 - not work in the script and we don't know
10:37 - what's going on or it could give us some
10:39 - weird error message that we don't quite
10:41 - understand instead we're going to go
10:43 - ahead and to make sure that we we we get
10:47 - good errors here so you're gonna type
10:50 - debug dot lock error and inside of this
10:56 - we are gonna type no fire point
11:01 - what like this so freaked out basically
11:08 - they're cool and now we know what's
11:12 - wrong
11:13 - so in the let's go ahead and make B
11:17 - start with the update function here yeah
11:19 - so update is called once per frame we
11:21 - know this so what we can use the update
11:25 - function for here is to handle all of
11:28 - this stuff with the fire rate so first
11:30 - off let's make the logic if our gun is
11:36 - burst fire or just was a what's it
11:41 - called single fire
11:42 - so if our gun is single fire meaning
11:46 - that if we press the mouse button it
11:49 - will only fire once we are going to
11:52 - check for this to say by saying if fire
11:56 - rate is equal to zero meaning it's
12:01 - single burst
12:04 - we will then check if we get a button
12:09 - down down cold fire so we going to check
12:12 - if we actually are pressing a button so
12:15 - input that get button down and the
12:21 - button we're gonna be using is fire one
12:24 - if this is not set up on your unity
12:27 - instance sometimes it's just not set up
12:29 - it should be by default but things
12:32 - happen so if it's not you could either
12:35 - go ahead and set it up in the input
12:37 - manager or you could just do input that
12:40 - get key down and then use key code and
12:45 - then dot whatever you want to fire with
12:48 - that's something I often do just to make
12:50 - sure that things will work but it is
12:53 - generally better to use to get button
12:56 - down because you can have multiple
12:58 - layouts and it's more flexible so we're
13:01 - gonna do fire one and then we're gonna
13:04 - open up some curly brackets and inside
13:07 - of those we're simply gonna call a shoot
13:09 - function which we're going to do in a
13:11 - second so we are just going to call our
13:14 - shoot
13:15 - there then we're gonna have another for
13:20 - an elf statement
13:22 - so if our fire rate is not equal to zero
13:25 - then we want to check for a button input
13:30 - and then shoot with intervals so that's
13:35 - what we're going to do so if it's not
13:37 - single burst its automatic and we do
13:41 - this by first checking if we are holding
13:44 - down the button so we're checking get
13:46 - button and not get button down and we're
13:50 - gonna do the same button so fire one but
13:53 - we are also going to check if time that
13:57 - time it's larger than the time to fire
14:04 - okay so this might be a little bit hard
14:08 - to understand but I will explain it in a
14:11 - sec let's just first write out the code
14:13 - and then I will explain it so the time
14:17 - to fire is going to be equal to time
14:21 - that time plus 1 divided by fire rate
14:29 - and then we're gonna shoot cool oops
14:40 - space too much there awesome
14:45 - so that said : okay so what are we doing
14:50 - here well we are first checking is it a
14:53 - single fire weapon if it's single burst
14:57 - we're just going to check if we get a
14:59 - button down and then simply shoot if
15:01 - it's not single burst we're gonna check
15:04 - if we are holding down the button so
15:06 - we're gonna check for the button call
15:07 - and then we're gonna also check if the
15:11 - time the time is speaker than time to
15:13 - fire so the time to fire variable we are
15:17 - using as basically the place in time
15:21 - where we are going to have our next shot
15:23 - and we are setting this by doing this so
15:27 - we are setting the time too
15:28 - fire to be equal to the current time
15:31 - plus the fire rate or 1 divided by fire
15:35 - rate but that's so we can make it a rate
15:37 - and not a delay mmm it's that you don't
15:42 - even need to think about that just know
15:45 - that this is how it's done so that's
15:48 - what we're doing we're saying that the
15:50 - next time you're going to fire is going
15:51 - to be the time plus the rate or plus the
15:54 - delay and then we're gonna wait and when
15:58 - the time is past that delay meaning the
16:02 - next time so fire we're gonna shoot so
16:04 - that's basically it for that and now we
16:07 - can go ahead and make our actual
16:09 - shooting function
16:18 - you