00:00 - hello everyone welcome to this our
00:01 - tutorial on creating a fruit ninja
00:03 - replica inside of unity this is a live
00:05 - stream recording so if there's any
00:07 - mess-ups along the way you know why all
00:10 - right this is what we're going to be
00:12 - making today it is of course fruit ninja
00:17 - inside of unity and you can see that it
00:19 - can slice through these watermelons and
00:21 - it looks pretty decent that's of course
00:23 - a lot of needs for some fruit variants
00:25 - some particle effects all that fancy
00:27 - stuff especially maybe a score calendar
00:31 - but you can see the base mechanic is in
00:33 - here we have the cutting we have the arm
00:35 - cutting into which is basically what the
00:38 - game is all about this set of satisfying
00:40 - feeling of get to getting to slice some
00:42 - fruits and that's what we're going to be
00:45 - doing today so without further ado let's
00:48 - actually just jump right into it and
00:49 - towards the end we'll do a Q&A that's
00:52 - going to be super fun all right let's
00:55 - get into it so ah whoops that's the
00:57 - wrong mode what I want to do is go ahead
00:59 - and create a new unity project and I'm
01:03 - just going to call this one your fruit
01:05 - ninja replica and let's make this do I
01:12 - want three here or two D I'm actually
01:14 - going to select 3d because our graphics
01:16 - are 3d but I've actually made all the
01:19 - colliders in 2d and so yeah let's just
01:23 - select 3d for now and we're going to
01:25 - create project and this is just going to
01:27 - boot everything up the version of unity
01:30 - I'm using right now is five point six
01:32 - point two I believe yep you can
01:34 - definitely do this in 2017 dot one and
01:38 - probably dot X we aren't going to be on
01:40 - using that advanced functionality so it
01:44 - shouldn't change I don't think so cool
01:47 - so the first thing that we want to do
01:48 - here is to go to our main camera and
01:50 - change from skybox to solid color and
01:53 - maybe just get some kind of solid brown
01:55 - in here and of course brown isn't the
01:58 - most pretty color but it I believe
02:00 - that's kind of what we associate with
02:02 - the game so that's what we're going to
02:04 - put there and then we can also create
02:06 - right-click go 3d object and create a
02:09 - sphere and this is of course going to be
02:11 - our watermelon so
02:13 - can go in here and call this the
02:14 - watermelon and by default we definitely
02:18 - just want to reset this on the transform
02:21 - and we can maybe actually I think the
02:24 - scale is fine here maybe go down to
02:25 - point eight point eight point eight see
02:28 - that in the game view that looks fine on
02:30 - our main camera I want to go out of
02:32 - perspective mode and instead go to or or
02:35 - orthographic and that's because we
02:38 - aren't going to have any perspective on
02:40 - this we're going to be viewing
02:41 - everything from the side and really it's
02:43 - going to be pretty much like a 2-d game
02:45 - except the individual fruits are
02:48 - rendered in 3d and that will allow for
02:50 - some nice rotation and make it look
02:52 - pretty good when we slice them I believe
02:54 - that's what is being done in the
02:57 - original game as well so that's why we
02:59 - will be doing things in orthographic
03:01 - we'll be having all of our colliders be
03:03 - two-dimensional colliders will be using
03:05 - 2d rigid bodies having all the code and
03:08 - 2d everything is going to be have AZ
03:09 - position of zero but the graphics are
03:13 - indeed going to extend into 3d space so
03:16 - we can also switch into 2d mode here to
03:19 - have a look at everything and it's
03:21 - actually take our camera here and zero
03:23 - that on the Y as well so that now I want
03:26 - a melon is in the direct center of our
03:28 - screen and what I want to do here is
03:31 - basically just get rid of pretty much
03:34 - everything what I want to do is separate
03:36 - out our gameplay from our graphics so
03:40 - let's actually just call this one our
03:42 - graphics let's right click and create
03:45 - another empty that's reset this as well
03:47 - and actually this is what I want to
03:50 - scale so that's two point eight point
03:51 - eight point eight on this one and then
03:53 - this one can be one one one we can drag
03:56 - our graphics under our game object we
03:59 - can remove our sphere Collider on the
04:01 - graphics and now in the game object we
04:03 - can add all of our game pre-play related
04:06 - code so we'll call this one the
04:08 - watermelon and under our watermelon
04:10 - we'll have the graphics with only a mesh
04:12 - renderer then on a watermelon oops and
04:15 - we have to reset the transform here okay
04:17 - so this is one one one and this is
04:19 - pointing cold see this is what happens
04:21 - in as iostream reader
04:23 - confuse things a little bit and change
04:25 - our minds but that's okay so now we can
04:28 - add a component here and what I want to
04:29 - add is a rigidbody 2d and I do want this
04:33 - to be simulated so right now if we hit
04:35 - play we can see that this drops and
04:37 - that's totally fine and we also want to
04:40 - go ahead and add a circle Collider 2d
04:42 - now we can see this in our scene view I
04:45 - believe you can see there's a tiny green
04:47 - line here but especially if we go to
04:49 - game and enable gizmos we can see the
04:52 - green line being drawn here and that's
04:54 - our circle Collider and we can see that
04:56 - has a matching radius all ready so
04:59 - that's all fine and dandy the next thing
05:02 - that we want to do is add some kind of
05:04 - slicing some way to kind of create a
05:08 - blade that starts where we click and end
05:11 - when we release our mouse button and
05:14 - anywhere in between we want to have this
05:16 - cool trail that follows it around but we
05:20 - don't want to just be able to click on
05:21 - an object and have it disappear we want
05:23 - to have to slice it so we need some way
05:26 - of also checking for velocity so these
05:29 - different things will try and define as
05:32 - we go in the beginning let's just start
05:34 - by creating an empty game object let's
05:36 - reset the transform on this and let's
05:38 - call it our blade here we can go add
05:41 - component and create a blade and um wait
05:46 - a second I'm just seeing someone saying
05:48 - the screen is black okay I think it's
05:52 - only a single person that's good so um
05:55 - we'll create a script called blade here
05:57 - and we'll choose C sharp hit create an
05:59 - ad let's double click this to open it up
06:02 - in Visual Studio and while that's
06:04 - opening we can actually go in and also
06:08 - save no we can't do two things at once
06:11 - we have to be patient so this is what
06:13 - okay so this is on the script in Visual
06:16 - Studio I just want to go in and save our
06:18 - scene here as main because I'm going to
06:21 - be saving all the time so it's nice to
06:22 - have it in a saved team now inside of a
06:25 - blade script here we want to delete our
06:27 - start method but we do want to keep our
06:30 - update
06:31 - that's because we'll use our update to
06:33 - check for input so inside of update here
06:36 - we'll see if
06:37 - we get a mouse button down so if input
06:39 - get mouse button down and the mouse
06:42 - button that we want to check for is the
06:44 - left click so that means zero zero for
06:47 - left one for middle lighting and two for
06:50 - right so we'll do zero for left here and
06:53 - when we press our button well then we
06:55 - want to start cutting and this is a
06:58 - method we'll create in just a second
07:00 - then we can do elsif input get mouse
07:04 - button odd and that means we've just
07:07 - released the mouse button again we want
07:09 - to check for the left Mouse and if we
07:12 - have with them we want to stop cutting
07:14 - code and we can now go ahead and create
07:18 - these two methods we'll create a void
07:20 - start cutting and a void stop cut and
07:29 - basically what we want to do here is
07:30 - have some kind of variable that
07:32 - determines whether or not we're
07:34 - currently cutting so let's create a
07:35 - boolean up here a bold call is cutting I
07:39 - will default that to false then when we
07:41 - start cutting with it is cutting to true
07:44 - and when we stop again we said is
07:46 - cutting back to false that means now
07:50 - that if we go and select our blade and
07:52 - we switch into debug mode here to allow
07:56 - us to see a private variable we now hit
07:59 - play and when I click we can see that it
08:02 - changes to true when I release it
08:04 - changes back to false awesome so what we
08:09 - can do now is make sure to update the
08:11 - position of a blade to follow our mouse
08:13 - around whenever we're currently cutting
08:16 - to do that inside of our update we'll
08:18 - check if we're currently cutting so if
08:21 - is cutting well then we want to say
08:23 - update our cutting to do that or update
08:28 - our cut or update our blade I don't know
08:32 - the terminology here update cut is fine
08:34 - I think so we'll do a void update cut
08:37 - and in here we'll set our current
08:40 - position equal to that of our mouse
08:42 - button but one thing that people often
08:45 - do as key is they change the position of
08:48 - an object without having a rigid
08:50 - yawning and even though you're not using
08:53 - on the built-in functions for adding
08:56 - force and all that it's still really
08:59 - nice to add a rigidbody to any object
09:01 - that you're moving it's actually
09:03 - something that unity themselves
09:05 - recommend you do because it allows unity
09:08 - to know this object is going to be
09:10 - moving and therefore will apply some
09:12 - optimizations behind the scene to
09:14 - because we now know that this object
09:15 - will move so we'll go ahead and add a
09:17 - component here a rigidbody 2d component
09:20 - and we'll use this to move around our
09:24 - blade but also make sure to change the
09:26 - body type to kinematic just to make sure
09:28 - that it won't fall and be affected by
09:30 - forces or anything like that so now
09:33 - let's get a reference to a rigid body
09:35 - will go rigidbody 2d and call it RB then
09:39 - we'll create a start method and in here
09:40 - we'll set our be equal to get component
09:43 - of type rigidbody 2d so now that we have
09:47 - a reference to a rigid body we can
09:49 - actually change the position of it by
09:51 - going our V dot position and set this
09:54 - equal to whatever now we want to set
09:58 - this equal to our current mouth position
10:01 - to do that we'll go input dot oh I'm
10:04 - sorry
10:04 - we'll go on yeah input dot mouth
10:08 - position awesome
10:09 - this is our current mouth position but
10:11 - this is in screen coordinates so this is
10:15 - actually going to be much much larger
10:16 - values than what we want we want to
10:19 - current convert this into world
10:22 - coordinates to do that we use camera god
10:26 - screen to world point but in order to
10:29 - use that function we need a reference to
10:32 - our main camera let's go up here and
10:34 - let's create a camera let's call it cab
10:38 - and you know start method where we also
10:40 - caching our rigidbody will set cam equal
10:43 - to camera dot main then down here we can
10:46 - said we can call cams screen to world
10:50 - point and we'll give it our input dot
10:53 - mouse position and that should actually
10:56 - fix everything
10:58 - for so if we now hit play here hit play
11:02 - and try and click you can see that our
11:06 - blade is moving around at least if we
11:08 - have a look at our transform up here but
11:11 - we can't visibly see it so let's take
11:12 - our game view and dock it to the side
11:15 - here of our scene view
11:16 - let's switch into the movement tool here
11:20 - by hitting double use and now we can see
11:21 - the current position of our blade and
11:23 - you can see as I click and drag around
11:25 - the screen this object will follow our
11:28 - mouse so we've actually already created
11:31 - a very very big part of the
11:33 - functionality of our game we can now
11:34 - move around this object and that means
11:36 - that we can easily apply effects to it
11:39 - we can add a trail to it right away
11:41 - there's only one problem of that and
11:43 - that is we want sometimes to display
11:45 - multiple trails on-screen because we
11:48 - might have an instant have an instance
11:49 - where we do a slice and begin another
11:52 - one before the other slides have stopped
11:54 - animating meaning that the trail is
11:56 - still visible on the screen and so we
11:59 - actually want to instantiate in a trail
12:01 - each time but just while testing here we
12:04 - can put a trail on our blade let's say
12:07 - our component let's create a trailer
12:09 - create a trail renderer and actually an
12:14 - even better idea here is create another
12:15 - empty under our blade here so we
12:18 - separated out into game objects and this
12:20 - is going to be our blade trail played
12:24 - trail and here we'll add a trail
12:27 - renderer component then on this trail
12:29 - renderer we can actually configure some
12:31 - different properties let's just hit play
12:33 - here let's try moving around our blade
12:35 - and you can already see our trail
12:37 - drawing and let's now pause the game you
12:40 - can also hit ctrl shift P to pause it
12:43 - and let's go over here and have a look
12:45 - at some of these parameters the first
12:46 - one we want to change is the width we
12:48 - can bump this down to save point one we
12:51 - also want a bit of rounding towards the
12:53 - edges here and we can change that by
12:56 - going to end cap vertices and bumping
12:59 - that up to three you can see that kind
13:01 - of rounds it off then we also definitely
13:03 - want to change the color here let's go
13:05 - and create a new material and we'll call
13:08 - this one our blade trail and we can then
13:13 - select our blade trail and under the
13:15 - materials
13:16 - we can drag in a blade trail material so
13:18 - you can see now it's not drawing in this
13:20 - purple no material assigned color we can
13:23 - also change the shader of our material
13:26 - to say a sprite default that will just
13:29 - make it drawn with a single color of our
13:32 - choosing and we can now change the color
13:34 - down here but before we do that we might
13:36 - want to decrease time because right now
13:38 - the trail stays active for a long time
13:41 - as you can see here we probably want to
13:44 - bump this down to something like point
13:45 - one now you can't see it on the screen
13:47 - let me just show you what that looks
13:49 - like that's already a lot better let me
13:52 - just create a quick trail here and let's
13:55 - also try and maybe fade it out a little
13:58 - bit so here under our color on the d
14:01 - gradient editor let's make sure to add
14:03 - actually let's just have it fade from an
14:07 - alpha zero to an alpha of 255 let's have
14:11 - this one be 0 and this one be 255 and
14:15 - you should now see that it fades out The
14:18 - Closer or the farther away from the
14:21 - mouse it is and we now get this nice
14:24 - slicing effect that's pretty fast
14:26 - actually to do because of unity is off
14:29 - central linear so let's now right-click
14:31 - on this hit copy component let's stop
14:33 - playing right-click again and hit paste
14:36 - component component values and we now
14:38 - have every time we play the game this
14:40 - awesome trail you can also see that
14:43 - actually this is fairly visible but you
14:46 - will sometime have some weird rendering
14:48 - if we click really quickly like this it
14:51 - might not be too visible but it's
14:53 - definitely noticeable and I don't like
14:55 - it one bit so what I think we should do
14:58 - instead is instantiate in these play
15:00 - trails to do that let's drag them out of
15:03 - a blade object and let's make a prefab
15:07 - out of it by dragging it into a project
15:09 - panel let's remove it from a scene and
15:11 - now inside of our blade script here
15:14 - we'll open that up and when we start
15:16 - cutting we want to create a blade trail
15:19 - so at the top here we first off want to
15:22 - create a public game object where we can
15:25 - reference all blade trail prefabs or
15:27 - blade trail prefab
15:30 - and then down here we can instantiate it
15:32 - so instantiate played trail prefab and
15:37 - we want to parent it to our current
15:39 - blade object so we can just set the
15:41 - parent here to our transform now we
15:45 - definitely don't want this to stay
15:47 - parented of course we wanted to be
15:49 - removed at some point and in fact we
15:52 - want to deep end it a stop as soon as we
15:54 - stop cutting so to do that we need first
15:58 - a reference to the object that we
15:59 - instantiated we can get that very easily
16:02 - by going up here and creating a private
16:05 - variable will also make this of child
16:06 - game object and let's just call it the
16:08 - kind blade trail and then down here we
16:12 - can set current lay trail equal to the
16:16 - instantiated object then when we stop
16:18 - cutting we can set current blade trail
16:20 - dot transform dot set parent to no and
16:26 - now we should see that um when we save
16:30 - this and go into unity we get a field
16:32 - for the blade trail prefab let's drag in
16:34 - our prefab here and when we now save
16:37 - this and when we do a slice you can see
16:39 - that it's quickly parented as long as I
16:42 - hold down the mouse button here it's
16:43 - parented to our object and as soon as I
16:46 - let go it disappears so it's unparent it
16:49 - again however it currently just stays in
16:52 - the scene I mean the more slices we do
16:54 - the more objects we're going to have
16:56 - cluttering our scene and that's not
16:58 - really wanted so let's just make sure to
17:00 - remove this again after X amount of
17:03 - seconds so when we stop cutting we D
17:05 - parent it immediately and then we
17:07 - destroy current blade trail after say
17:10 - two seconds and now we should see that
17:14 - when we hit play and create a bunch of
17:17 - trails after X amount of setting saying
17:21 - seconds if after two seconds in fact
17:24 - each blade will disappear awesome so now
17:30 - we have this cool graphic but we
17:32 - currently have no way of detecting
17:34 - whether or not we sliced our watermelon
17:37 - in order to do that we need to also have
17:39 - some kind of Collider let's go in here
17:42 - and add a Collider and what
17:43 - we want to add is a circle Collider 2d
17:46 - again remember we're doing everything
17:48 - when it comes to physics in 2d and I'm
17:51 - going to decrease the radius here to say
17:52 - point one so it has the same width or
17:55 - around the same width as our trail I
17:58 - think that works pretty well then what
18:01 - we can do is make sure to disable this
18:04 - circle Collider and then only enable it
18:08 - when we're actually slicing so inside of
18:11 - our script
18:11 - we'll need a reference to it here we'll
18:14 - create a another private variable here
18:18 - which we'll call our circle Collider 2d
18:20 - we'll just call it circle Collider and
18:24 - then in the start method will set the
18:26 - circle Collider equal to get component
18:28 - of type circle Collider 2d then when we
18:32 - start cutting we set circle Collider dot
18:36 - enabled to true and when we stop cutting
18:39 - with that circle Collider dot enabled
18:42 - back to false so now we should see that
18:46 - when we hit play we currently cannot see
18:48 - our circle Collider because it's
18:50 - disabled as soon as I start cutting you
18:52 - can see it gets enabled over here you
18:54 - can also see it in the scene view if we
18:57 - expand this here and then when I stop
19:00 - cutting it disappears again so that's
19:02 - already closer to what we want so now we
19:05 - can only actually hit objects or detect
19:08 - collision them on objects whenever we
19:10 - are cutting but there's a slight problem
19:12 - and that is no matter the speed that
19:15 - we're currently cutting with this circle
19:17 - Collider is always going to work and
19:20 - also if we just click we can see the
19:26 - circle Collider appearing and we don't
19:28 - want that we only want this circle
19:30 - Collider to be enabled when we are
19:32 - actually slicing so when we've actually
19:34 - done a gesture and when we actually have
19:37 - some velocity on our mouse to do that we
19:41 - need to go in here and define or some
19:43 - define some way of checking our velocity
19:46 - and rigidbody actually has a method for
19:49 - this if we go our b.com velocity we can
19:53 - get the current velocity of the rigid
19:55 - body but
19:57 - our rigidbody is set to kinematic and as
20:01 - far as I know at least a kinematic
20:02 - rigidbody will always have a velocity of
20:06 - zero so we have to define our own way of
20:10 - doing this I will do that in just a
20:12 - second I'm just going to have first of
20:13 - all a sip of water and I'm also going to
20:15 - have a look in the chat see here
20:22 - everything is good
20:28 - couldn't you now get rid of your is
20:31 - cutting variable and just check for
20:32 - activity of the collider definitely
20:35 - that's totally something that you could
20:36 - do but again the collider here is going
20:40 - to be enabled in a different way now and
20:42 - so that wouldn't work too well and also
20:45 - it's sometimes cleaner to add a bit more
20:46 - code for in or in exchange for
20:50 - readability that's at least something
20:52 - that I like to practice when I'm coding
20:54 - for myself with this live stream be on
20:58 - YouTube yes it definitely will and yeah
21:01 - everything is looking good
21:03 - so let's go ahead and continue so we
21:05 - need some way of checking of velocity
21:07 - and but what velocity or speed has it
21:10 - sometimes referred to but velocity is
21:12 - the more correct term what velocity
21:14 - really means is distance traveled over
21:18 - time so what we can do is keep a
21:21 - variable or have a variable keep track
21:24 - of our position on the last frame and
21:26 - then compare that to the position in our
21:30 - current frame and then multiply that
21:32 - with time that does a time because we're
21:34 - doing this in the update method and what
21:36 - that will essentially do is give us our
21:38 - current velocity it's going to give us
21:41 - the speed at which we're moving because
21:43 - we are having a look at our distance
21:46 - traveled over a certain amount of time
21:49 - so let's go up here and create a
21:52 - variable that's called this R let's say
21:56 - we'll put it here and we'll make it of
21:59 - type vector tube and we'll call this our
22:01 - previous position then inside of our
22:06 - update cut method here we can get our
22:09 - new position
22:11 - so let's actually store this here in a
22:13 - victim - called new position and we can
22:19 - then set our bdub position equal to new
22:22 - position and then we can say um or we
22:25 - can get our velocity so float velocity
22:29 - by going on new position - our previous
22:37 - position yes and then dot normalized
22:44 - know that magnitude of course yeah all
22:48 - right great fought I'm sorry everyone so
22:51 - here we are getting a vector which is
22:54 - the difference between our new position
22:56 - and our previous position and we're
22:58 - getting the length of that vector and
23:00 - that is going to be the speed at which
23:01 - we're traveling so we'll store that in a
23:04 - variable of type float called velocity
23:06 - and we can then check if velocity is
23:08 - greater than some kind of number so if
23:11 - we are traveling or if a mouse is moving
23:14 - faster the previous frame - now then
23:17 - some kind of fixed value well then we
23:20 - can go ahead and slice I mean if it's
23:22 - not well then we probably shouldn't do
23:24 - the slicing so we can here make some
23:26 - kind of float let's create a public
23:28 - float up here which we'll call the min
23:31 - our cutting velocity and we can set that
23:35 - equal to some very small number here
23:37 - which is going to say point zero zero
23:40 - one I think it's going to be kind of the
23:43 - area we're looking for might be off with
23:45 - the factor ten but that's okay and
23:48 - inside of our if statement here we can
23:50 - now check if velocity is greater than
23:53 - our our main cutting velocity and if it
23:57 - is well then we want to slice but
24:00 - remember we also have to multiply here
24:03 - with time.deltatime because we're doing
24:05 - this inside of the update method and we
24:07 - don't and we want our velocity to scale
24:09 - we don't want our velocity to change
24:11 - just because of our framerate so yeah so
24:16 - now if this is indeed true well then we
24:19 - have judged
24:23 - that our velocity is great enough for us
24:25 - to do some cutting up some fruits and
24:27 - that means that we can enable a Collider
24:29 - so we can set circle Collider dot
24:32 - enabled to true if it's not well then
24:35 - it's not fast enough and we want to set
24:38 - our circle Collider to dot enable to
24:41 - folks so else here circle Collider dot
24:43 - enabled equals false then right when we
24:47 - start cutting we want our circle
24:49 - Collider to not be enabled because we
24:52 - don't want it to be enabled on the very
24:54 - first frame right when we click we're
24:56 - not going to have a velocity so we'll
24:57 - just disable it and we'll do the same
24:59 - thing down here when we stop cutting we
25:01 - also want to make sure that circle
25:03 - Collider that enable is false now we
25:06 - should see if we save that and go into
25:08 - unity and hit play and hopefully if I
25:10 - don't have any errors we should see and
25:16 - we're not seeing just making me mad
25:19 - we're not seeing what I want here maybe
25:23 - it's just because of I'm off by a number
25:26 - definitely doesn't look like it so we
25:29 - can see that it is correctly disabling
25:31 - but it's also enabling as soon as we
25:33 - click and that is annoying if I go ahead
25:36 - and bump up this value what do we get
25:39 - okay so it's working if I bump it up so
25:42 - it was probably just because of phase
25:44 - zero too much somewhere let's see now
25:47 - here so I click and here it's with some
25:50 - reason right away alright guys this is
25:53 - chat time please let me know what's
25:56 - wrong with my code let's see here so so
26:01 - we're going here we said circle Collider
26:03 - done enabled to false we arm do the same
26:06 - thing when we stop cutting then every
26:08 - arm frame every time we update our cut
26:11 - we said our velocity equal to the
26:13 - difference in position so our new
26:16 - position minus or previous position
26:18 - which should be fine that magnitude we
26:21 - multiply that with time to does a time
26:23 - and that means that we get arm to check
26:28 - if our velocity is greater than our
26:30 - minimum cutting velocity if it is we set
26:32 - our Collider to true
26:34 - and we if it's not we set it to false I
26:39 - don't see the problem here
26:40 - oh of course I'm not setting previous
26:43 - velocity Jesus okay so instead of an
26:46 - update cut here we have to then after
26:48 - doing all this stuff we have to set
26:50 - previous position equal to neon and
26:53 - there we go of course we always have to
26:56 - update our previous position or it's
26:57 - just going to be the same value which is
26:59 - just zero zero zero and so it was
27:01 - working all the time so now we should
27:03 - see that yes so you can see here right
27:06 - when I click it's disabled and when I'm
27:09 - moving it at a slower speed it's not
27:12 - enabled but then as soon as I shake it
27:14 - really quickly you can see that I get an
27:17 - enabled Collider so we just have to bump
27:20 - this number down here so to make it
27:22 - easier to do the cutting so now we
27:24 - should see and this is actually a pretty
27:26 - good value I think so at this slow pace
27:28 - it's not working but then as soon as I
27:31 - go a bit faster we can see that it's
27:33 - enabling so now it will only be enabled
27:36 - when we do actual cutting yes it's
27:39 - working hahaha that's awesome
27:43 - alright sale-a-bration okay I can't do
27:47 - too much Danny singing here because I
27:48 - don't want my audio to get ripped out of
27:50 - the thing but hey that's awesome
27:54 - so um yeah so now that this is working
27:57 - now one thing that we do have to be a
28:00 - bit careful about I think is that right
28:04 - when we click in one place and go to
28:06 - another it quickly enables in the
28:09 - previous location so what can we do to
28:13 - fix that
28:13 - well then inside of our start cutting we
28:16 - want to kind of reset our previous
28:17 - position because we're using the
28:19 - previous position of a previous time we
28:22 - cut and that's not a good idea instead
28:24 - we want to have a previous position
28:26 - start at the place where we start
28:27 - cutting and so here we can simply set
28:30 - previous position equal to and then we
28:34 - do the cam dot arm screen to world point
28:39 - and we take in our mouse position and
28:42 - there we go it's not the prettiest of
28:44 - code but if we hit play now we should
28:46 - see that if we cut over here and then
28:48 - click here our circle Collider doesn't
28:51 - teleport in a weird way it just it just
28:54 - snaps over and that's just fine so now
28:58 - our cutting should actually be working
29:00 - and all we have to do now is create
29:01 - fruits that register whenever this
29:04 - circle Collider meets them and then gets
29:06 - cut in half so that's kind of the
29:08 - exciting part I guess but yeah it's also
29:11 - probably the easiest so before we do
29:14 - that I'm just going to check the chat
29:15 - here what version unity five point six
29:18 - point two as it says in the corner here
29:20 - and let's see you can definitely do this
29:26 - in 2017 um which is an awesome version
29:30 - by the way and using it a little bit
29:32 - it's it's great and yeah I think most of
29:36 - the contents of the chat here will have
29:38 - to wait to are we get to Q&A and some
29:42 - guys saying exploding fruit yeah you
29:46 - could definitely make the fruit explode
29:48 - just add in some nice forces and cool
29:51 - particle effect and you can have the
29:53 - exploding watermelons all day cool so
29:57 - what we want to do here is probably
29:58 - bring in a bit nicer of a graphic let's
30:02 - do that now
30:03 - so I have prepared a 3d model that's
30:07 - right guys I did some 3d modeling and
30:09 - myself and I think it's um I wouldn't
30:13 - necessarily call it triple-a but I would
30:16 - call it really really good so let's drag
30:19 - in the models folder here and I will
30:21 - make sure to upload this on github for
30:23 - you to have a look at when I also upload
30:26 - the entire project which I will do when
30:29 - the livestream is done don't worry I
30:31 - will have it available for you to have a
30:33 - look at but this is basically just a
30:35 - sphere with the colored but just in case
30:38 - you know you want you for some reason
30:39 - you want to use my models so by default
30:43 - here we can see that we have two models
30:44 - we have a watermelon and we have a
30:46 - watermelon sliced the watermelon is a
30:48 - sphere the watermelon sliced is two half
30:52 - spheres let's select these two let's go
30:55 - and odd on the rake hit none we don't
30:58 - want any animation and on the model here
31:01 - we can
31:02 - set the scale factor of both of them to
31:04 - 0.5 and I do believe we have to do this
31:07 - one at a time don't ask me why
31:09 - apply and now if we drag in a watermelon
31:12 - here and let's actually just drag it
31:14 - right under a watermelon object you can
31:17 - see that that snaps to the exact same
31:18 - size as our graphics I'm just going to
31:21 - remove our graphics now and here is our
31:24 - watermelon glorious watermelon and then
31:27 - our sliced version is right here and I'm
31:30 - just going to set the scale of this to
31:32 - 0.8 0.8 0.8 as well and you can see here
31:36 - that it consists if I snap out of 2d
31:39 - mode here up to watermelon slices a see
31:43 - almost Triple A and I'm just going to
31:47 - disable this now and then we'll return
31:49 - to that one later for now we just have
31:52 - to first off kind of register some input
31:54 - also going here and maybe play around
31:56 - with the lighting a bit I definitely
31:57 - want to bump up the ambient light to two
32:00 - and then maybe the directional light
32:02 - down to say point seven let's just try
32:05 - maybe even point six that's nicer just
32:08 - to give a bit more fill light so we
32:10 - don't get that much we don't really need
32:12 - to have the big lighting effects here we
32:15 - just have everything be kind of katooni
32:18 - so we have a watermelon and we'll just
32:21 - rename this to graphics again and then
32:24 - this is our watermelon call on our
32:27 - watermelon object we already have a
32:28 - circle Collider let's go ahead and set
32:30 - this to trigger let's go ahead and add a
32:33 - component called fruit it's going to be
32:36 - a new c-sharp script create an ad and
32:38 - reload on that one and it's open it up
32:42 - English's studio now here we want to
32:44 - have a method that is called whenever we
32:48 - detect something entering our trigger
32:50 - unity has a call the callback method for
32:53 - that of course called on trigger enter
32:57 - and this is a 2d collider so we put 2d
32:59 - then we can get some information about
33:01 - the collider that we hit by going
33:03 - Collider and calling it coal and we can
33:07 - check if coal
33:08 - tag is equal to some kind of tag let's
33:10 - just check for a blade tag here and it's
33:14 - just going and add this right away so
33:16 - like our blade let's under tack go add
33:19 - tag list is empty here we'll go blade
33:22 - and we'll add that back to the object
33:26 - and I think
33:28 - oh of course yes this has to be a
33:30 - Collider 2d code so if the object that
33:35 - we hid has a tag of type blade well then
33:38 - we can throw the debug deadlock message
33:40 - saying something like we hit a what time
33:44 - alone and we can also destroy it so
33:48 - destroy game object hit play do some
33:54 - quick slicing oh I've barely hit it we
33:57 - hit a watermelon and it got destroyed
33:59 - let me just try that once more Oh
34:02 - awesome so that's already working now we
34:05 - just have to do the actual slicing into
34:07 - and that's all about just instantiated
34:09 - in these slices and having them kind of
34:12 - do some physics eat stuff so in order to
34:15 - do that we'll create a public game
34:20 - object and this is going to be our water
34:23 - add let's call it the fruit sliced free
34:27 - fat because we want to have multiple
34:28 - types of fruits here and right before we
34:32 - destroy this object we go ahead and
34:34 - instantiate our sliced fruit so modal
34:36 - instantiate fruit sliced prefab awesome
34:43 - and that should actually be it so now
34:45 - when we hit of course we also need to
34:48 - reference this so on our watermelon we
34:51 - now can put in a fruit slice prefab
34:53 - let's just disable a watermelon here
34:55 - let's have a look at our sliced
34:57 - watermelon instead so what we want to do
35:00 - here is first of all probably rotate
35:02 - this a bit so we want to rotate it in
35:05 - such a way that our forward vector here
35:09 - so if we just point that up with so now
35:11 - a forward vector the blue arrow points
35:14 - upwards well then our watermelon our
35:18 - slice is here woops
35:19 - what am i doing our slices
35:25 - Jesus this is all messed up this needs
35:28 - to be negative 90 cool so now they are
35:31 - aligned we can now rotate this around
35:34 - the X negative 90 cool so now it points
35:38 - upwards that means that our slices
35:40 - should or our cut should do that as well
35:43 - so we'll switch into pivot and global
35:47 - and now we can groups can rotate why
35:51 - does it keep doing this I'm sorry I keep
35:55 - messing up this rotation please so now
35:58 - we are I messed it up local good so
36:05 - these so the cut here okay it should be
36:07 - rotated this is not working guys that's
36:15 - why okay we need it to be in center and
36:17 - not in pivot mode cold so what I was
36:20 - trying to say is if we select our
36:22 - watermelon have a look at the forward
36:24 - vector this is currently pointing up we
36:26 - want our cut to be aligned with that
36:28 - like we sliced it down from above or
36:31 - from above to below or the other way
36:34 - around because then we can simply make
36:37 - sure to always orient our watermelon in
36:39 - such a way that it points towards our
36:42 - mouse and that means that it should in
36:44 - most cases have be sliced in the
36:47 - direction that we cut and that looks a
36:49 - lot better than just instantiating a
36:51 - random position and have it kind of not
36:54 - line up so that's what we'll try and do
36:57 - there's a slight issue with this and
36:59 - I'll show you what that is but it
37:00 - shouldn't matter too much especially not
37:02 - if you put in some particles later so
37:05 - now that we have our sliced watermelon
37:07 - here we can actually turn this into a
37:08 - prefab so let's drag this down into a
37:12 - project and let's remove it from our
37:14 - scene we can then take our watermelon
37:16 - add it back in and now we'll reference
37:19 - our fruit slice prefab as the watermelon
37:23 - sliced however if we just go ahead and
37:25 - throw in a watermelon slice here and hit
37:28 - play you can see not much happens we
37:30 - want this to be more exciting one way to
37:33 - do this is using simple physics so let's
37:36 - go under our two spheres
37:38 - here and let's add a rigidbody to each
37:42 - and yes now I am using a three
37:44 - dimensional rigid body that's because I
37:46 - want the physics interaction of these
37:47 - different slices to be in 3d space I
37:51 - think that looks a lot cooler and allows
37:53 - us to use other types of colliders that
37:55 - also means that we can now add a box
37:58 - Collider there we go and we can now
38:01 - maybe move these two spheres a bit
38:04 - closer to each other
38:06 - that should mean that automatically now
38:08 - when we hit play a they clash together
38:11 - and they kind of open up the fruit in a
38:15 - way that it would do if we just sliced
38:17 - it and we didn't have to do any coding
38:19 - whatsoever you can of course also
38:21 - animate this statically but I think it's
38:24 - a lot cooler to have this be part of the
38:26 - physics system because that now means
38:27 - that if you slice fruits close to each
38:29 - other they might collide and do weird
38:31 - stuff which looks super cool and it's
38:34 - also what we see in fruit ninja' so if
38:37 - we now apply these changes to the prefab
38:39 - hit play and oops of course we also have
38:44 - to re-enable our watermelone let's also
38:47 - drag this up hit play and if we now
38:50 - slice it yeah nothing nothing did happen
38:54 - there did it let's try that one more
38:56 - time
38:57 - okay so something definitely happened so
39:00 - we're definitely instantiating this
39:02 - fruit slice prefab but we also have to
39:05 - do that at our current position so we're
39:07 - going here and set transform or set the
39:11 - position to our composition which is
39:12 - transformed a position and we can also
39:15 - for now just set the rotation to our
39:16 - current rotation so now when we hit play
39:19 - and slice it Jesus okay I have to make
39:24 - this static guys I'm sorry but I cannot
39:26 - fricking aim so let's put that to you
39:29 - kinematic and now when we should play
39:31 - and slice it you can see that it
39:33 - instantiates our watermelon sliced but
39:36 - the direction in which we slice it
39:38 - doesn't really matter so we definitely
39:41 - have some weird behavior there to fix
39:44 - this what we'll do is um
39:49 - we'll do that in a second first I
39:51 - actually want to instantiate in the
39:52 - fruits so that we have them jumping
39:54 - around and then we can fix the other
39:56 - issue because I do believe that kind of
39:59 - make things a lot easier no let's do it
40:04 - now yeah that's right now one second
40:09 - just have a bit of water Sophia just
40:12 - looked at me being like you should do it
40:14 - now
40:16 - so how to do that which is also a much
40:19 - better idea because we can see it more
40:21 - clearly from here okay so um basically
40:26 - what we want to do is rotate this
40:28 - watermelon or this sliced version of the
40:31 - watermelon to point towards our cursor
40:34 - because when we are sliding this here so
40:37 - right when we impacted that would
40:38 - normally be here we can instantly rotate
40:41 - if I take the watermelon sliced here so
40:44 - if we are hitting it here we can then
40:46 - simply have it rotate so that our blue
40:49 - arrow points in this direction so in our
40:51 - case that would look something like this
40:53 - and so we would be slicing it in the
40:55 - correct direction if we try and do that
40:58 - what we can do is use the Collider info
41:01 - we have right here this is the current
41:03 - position of our mouse because the
41:06 - collider that is hitting this fruit is
41:08 - at the same position as our mouse so
41:11 - what we could do is get the direction
41:13 - from our collider or from this fruit
41:18 - here to the collider so we can go in
41:20 - here and create some kind of vector to
41:23 - direction and set it equal to our
41:26 - colliders actually we should probably do
41:28 - victor 3 here click the three direction
41:30 - and set it equal to the fruits position
41:34 - - our kaleidos position and if we want
41:36 - to point from the fruit to the collider
41:39 - we'll have to reverse it so called
41:41 - transform dot position - our transformed
41:47 - up position this is now the direction
41:49 - and we do definitely have to normalize
41:52 - this that will just wrap it in some
41:53 - parentheses and called dot normalized
41:56 - then we can use quaternion dot look
42:01 - rotation and this
42:02 - makes in a direction to look at and it
42:05 - outputs a rotation so the direction we
42:07 - want to look at is our direction vector
42:09 - and we can simply store this in a
42:12 - quaternion called rotation then instead
42:17 - of inputting transform that rotation
42:18 - will input our rotation cool let's save
42:23 - that go into unity and hit play and we
42:27 - should now see that when we slice
42:28 - through it that definitely did not work
42:33 - so I think we have a we're kind of off
42:36 - by a 90-degree angle here and that's
42:39 - just because of the way that that loop
42:44 - rotation Orient's everything so I think
42:46 - all we have to do is kind of rotate this
42:48 - around the I put around the Y by 90
42:51 - degrees and I this is only a theory so
42:54 - let's try it out yes awesome so we
42:59 - should now see that when we hit play and
43:01 - choose a direction to slice it from
43:03 - let's just try this one that the cut
43:06 - goes the right way that's the same thing
43:08 - if we slice from the other side here
43:09 - that our cut is somewhat look somewhat
43:14 - precise this is great because it really
43:18 - makes everything feel more realistic one
43:21 - thing that is off is if we slice right
43:24 - at the edge here you can see the cut
43:27 - still lies in the center and it will
43:29 - actually put the cut in reverse
43:32 - direction and the reason why is that if
43:35 - we are slightly I'm just going to zoom
43:37 - in here if we are slicing right at the
43:40 - right through the edge of our Collider
43:42 - here the point of impact is actually
43:44 - going to be here and so when we get a
43:47 - direction from the center to here we
43:50 - actually get a cut this way that's why
43:53 - this is not the optimal way to do things
43:55 - however I do think this is not a huge
43:58 - issue when you're going through and
44:00 - slicing a lot of fruits you probably
44:02 - aren't going to be noticing this a whole
44:03 - bunch
44:04 - especially after you add effect but if
44:07 - you want to fix this the way would
44:09 - probably be getting or using this same
44:14 - technique that we do for getting or
44:16 - velocity because this here says
44:18 - something about how a mouth is traveling
44:20 - when we are subtracting our previous
44:23 - position from our new position we're
44:26 - actually getting a vector pointing from
44:28 - our new position to our previous
44:31 - position yes and that means that you can
44:35 - actually use that as the direction
44:37 - vector for the fruit to face I'm just
44:40 - not going to be doing that here because
44:41 - it's a longer explanation and this is a
44:44 - live stream and I wanted to get this to
44:45 - work and we still have more stuff to do
44:47 - but that is probably the way to go about
44:50 - it get the general direction in which
44:52 - your mouse is traveling and use that as
44:54 - the direction for the cut but this is
44:56 - kind of a hacky way and it looks pretty
44:58 - nice most of the time cool so we'll just
45:01 - use that for now one thing that all also
45:04 - want to do is probably just take a
45:05 - watermelon slice here and actually
45:07 - rotate it all the way around there we go
45:13 - just because I noticed that it was more
45:15 - often falling to the other side and I
45:18 - want that effect so that's just trying
45:20 - now it opens up more nicely so we can
45:22 - actually see what's inside cool so let's
45:25 - take our watermelon let's change it back
45:27 - to dynamic and let's make a prefab out
45:29 - of this now it's time to create a
45:31 - spawner for these for these fruits let's
45:35 - right-click go create empty and let's
45:37 - call this our fruit spawner and let's
45:40 - reset the transform on it and before we
45:42 - do it I'm going to have a look in the
45:44 - chat okay so people actually still shear
45:48 - even through that slicing explanation I
45:51 - kind of surprised with me and sorry that
45:53 - got a little hairy but it's kind of an
45:56 - essential part of the game so I guess I
45:58 - had to leave it in there but yeah you
46:02 - guys enjoying the stream looks like it
46:03 - that's awesome
46:04 - I'm looking forward to the QA hope that
46:07 - you guys have some interesting questions
46:08 - prepared for this time and also want to
46:11 - talk to you a bit about kind of what
46:13 - we're doing on the press the the past
46:17 - couple of weeks and what's been going on
46:19 - so let's get back into it so let's
46:22 - select a fruit spawner
46:23 - that's it add component let's create a
46:25 - fruit spawner script it create an ADD
46:28 - let's open this up and the first thing
46:33 - that we want to do here is create a
46:35 - reference to our fruit so for now this
46:38 - is just going to be a simple fruit or a
46:40 - single fruit and that's going to be our
46:42 - watermelon but you can easily turn this
46:44 - into an array and simply get a random
46:46 - element in that array I'll show you how
46:48 - to do that with spawn points it's going
46:50 - to be the exact same thing with fruits
46:52 - so a public game object and we'll call
46:55 - this our fruit then we also have a
46:57 - public game object array and this is
47:00 - actually going to be a transform array
47:02 - called spawn points in plural then at
47:08 - the start of our game we're going to go
47:10 - ahead and call a co-routine so we'll
47:12 - create a coding an eye enumerator and
47:15 - we'll call this something like spawn
47:18 - fruits yes and in here we'll create a
47:23 - wild statement and we'll continue as
47:25 - long as while it's true and this is
47:28 - always going to be true so this will
47:30 - continue infinitely and of course break
47:32 - out of this at a later point if needed
47:35 - but for now while true we want to go
47:38 - ahead and spawn and again when one thing
47:41 - that you want to mention this here
47:42 - doesn't make too much in Georgica sense
47:44 - because we're basically just saying loop
47:46 - into infinity so be careful with these
47:49 - loops if you don't put anything in here
47:51 - this is going to for sure crash unity
47:54 - and that's not fun maybe even crash your
47:56 - computer so what you want to do here is
47:58 - make sure to add a delay in between in
48:01 - between each of these while iterations
48:04 - if not again crashing that's not what we
48:07 - want so don't run this until we have
48:10 - finished writing it it's good so
48:13 - basically we wanted what we want to do
48:15 - here is spawn some fruit and then we
48:19 - also want to wait so we're going and say
48:21 - yield return new wait for seconds and we
48:28 - could definitely just wait a fixed
48:30 - amount of seconds you could wait one
48:31 - second spawn a fruit go back wait one
48:35 - second spawn a fruit and continue but
48:38 - it's a lot more fun if base variants to
48:40 - the game let's go up and create
48:42 - a public float called our min delay and
48:47 - we'll set that to say 0.1 we'll also
48:49 - create a public float max delay let's
48:52 - set that to say one that's going to be a
48:55 - lot of fruits but it's fun and then down
48:58 - here we don't want to wait just one
49:00 - second instead we want to create a float
49:02 - called the delay and set that equal to
49:05 - random range where we get a random
49:07 - number between our minimum delay and our
49:09 - maximum delay and then instead of
49:12 - waiting the one second we wait
49:14 - according in in accordance with that
49:16 - number then we can spawn a fruit and we
49:20 - want to do this by simply calling
49:21 - instantiate and we are spawning our
49:25 - fruit that's actually called this peach
49:27 - fruit prefab think that's more clean and
49:31 - we also have to determine where we want
49:34 - to spawn our fruit and we'll do that by
49:36 - picking a random spawn point so to do
49:39 - that we'll get an integer with the spawn
49:41 - index which we'll set equal to random
49:44 - range and we'll go between zero and our
49:47 - spawn points dot length then we can get
49:52 - the corresponding or the spawn point
49:54 - corresponding to this index so we'll
49:56 - create a transform called spawn point
49:59 - and set it equal to spawn points at the
50:03 - spawn index and then we can now use that
50:07 - spawn point so we are randomly getting a
50:09 - number between zero and the length of
50:12 - our spawn point array we are then taking
50:15 - that index and getting an element in the
50:17 - spawn point array which is going to be a
50:19 - random spawn point and we're storing
50:21 - that in the spawn point barrel we can
50:23 - then set the position of our fruit
50:25 - prefab to our spawn point spawn point
50:30 - position and the rotation to spawn point
50:33 - dot
50:34 - rotation cool that should actually be
50:38 - all for spawning fruit of course we also
50:40 - have to make sure that we start this
50:41 - Kuro team so inside of our start method
50:43 - we'll go start corroding spawn fruits
50:47 - there we go let's say that going to
50:50 - unity and now we have to make sure to
50:52 - fill out these variables here so first
50:54 - off we need a
50:55 - fruit prefab will drag in our watermelon
50:57 - we also need some spawn points so that's
51:00 - right click go create empty and this is
51:03 - going to be our spawn point let's also
51:06 - give this a nice little icon and let's
51:10 - actually duplicate this and move it over
51:13 - and duplicate it again and move it over
51:15 - to the other direction and maybe take
51:19 - these two on the sides here switch into
51:22 - 2d mode here and rotate them a tiny bit
51:25 - so they're pointing in towards the
51:27 - screen
51:27 - they don't just shoot up but they will
51:30 - shoot kind of inwards now we can take
51:32 - all three spawn points and move them
51:35 - down below our screen and we can go to a
51:38 - fruit spawner we can change the size to
51:40 - three and we can drag in all three spawn
51:44 - points of course I recommend creating
51:46 - more spawn points than this or creating
51:48 - some kind of procedural positions or you
51:51 - create a random position between two
51:54 - between two points and you create a
51:57 - random rotation in angles that can vary
52:00 - by about say 20 degrees that's one way
52:03 - to do it but I think spawn points is
52:05 - actually just fine especially if you add
52:08 - say 10 spawn points or so no one is
52:10 - really going to notice that you aren't
52:11 - doing it procedurally and that you're
52:14 - just picking from a list because so much
52:16 - is going to be going on anyways so now
52:18 - we have our spawn points and a fruit
52:20 - spawner and we should be able to hit
52:21 - play and right away we should see these
52:23 - watermelons spawning from random points
52:26 - however of course they're currently
52:28 - spawning down here and then just falling
52:30 - down that's not really something we want
52:32 - instead let's go in here and let's or
52:36 - let's go into our fruit and in the start
52:38 - message here we want to add a force that
52:41 - shoots them upwards so we'll create a
52:44 - reference to our rigidbody create a
52:46 - rigidbody 2d RB and instead of our start
52:51 - we'll set our be equal to get component
52:53 - of type rigidbody 2d then we can call
52:56 - add force on a rigidbody so RP does add
52:59 - force and we want to add a force in the
53:01 - direction of transform up so the current
53:05 - upwards direction that our fruit is
53:08 - pointing it that means that if the
53:11 - fruits get spawned down here we want to
53:16 - point it this way and shoot up if you
53:18 - get spun over here we want to point it
53:22 - this way and shoot it up that's why
53:25 - we're using transform that up when then
53:27 - multiply this with some kind of force
53:30 - and we can go up here to define that
53:32 - public float and we'll call this the
53:34 - start force and set it equal to say 15
53:38 - by default we'll multiply with the start
53:40 - force here and finally we want to set
53:42 - the force mode 2d to impulse we don't
53:47 - want to set it to false to follow us
53:50 - because we're not adding a force over
53:52 - time we want to say to impulse because
53:54 - we're only adding it once and that's in
53:56 - the start method so now if we save this
53:59 - go into unity hit play we should see
54:02 - right away that our watermelons are
54:04 - spawning and shooting up into the screen
54:07 - yes
54:08 - it's working awesome man and now we can
54:12 - go to a fruit spawner oh actually a
54:14 - fruit here and maybe bump it down a tiny
54:18 - bit to start for you to say 13 let's try
54:21 - that yeah that's a little better so now
54:25 - we can slice some fruits that's awesome
54:27 - the next thing that I want to do is just
54:29 - make sure that these get removed when
54:31 - they go outside of the screen then we'll
54:32 - do that by just using a fixed timer so
54:35 - after our spawning a fruit here we'll
54:39 - get a reference to it game object and
54:42 - we'll call this D spawned fruit set it
54:45 - equal to or instantiated object and then
54:48 - we destroy the spawned fruit after say
54:51 - five seconds just to make sure that it's
54:55 - off the screen at this point so now we
54:57 - play some fruit shoot up we can slice
55:00 - them and you can see that looking pretty
55:03 - good in any way that we want to and if
55:06 - we let one of them escape it should get
55:11 - destroyed and indeed it does that's
55:15 - awesome
55:15 - one thing that isn't getting destroyed
55:17 - is our sliced watermelons let's just go
55:20 - and clean those up as well
55:21 - so inside of our fruit here when we
55:24 - create some sliced fruit so gameobjects
55:27 - sliced fruit we said that equal to our
55:31 - instantiated sliced fruit we destroy
55:34 - sliced fruit after let's say three
55:40 - seconds that should hopefully be fine
55:43 - actually this might be a problem when
55:45 - we're destroying this game object as
55:46 - well I don't know let's figure that out
55:52 - nope looking good things are getting
55:55 - destroyed that's perfect awesome that's
55:59 - pretty much all I wanted to show you in
56:01 - this livestream tutorial I do think that
56:03 - we could play around with having these
56:05 - watermelons phase in all the directions
56:07 - we definitely want some more
56:08 - explosiveness to slicing them but this
56:11 - is the very foundation of fruit ninja
56:14 - and I think from here you can definitely
56:16 - expand upon this to make it more fun so
56:19 - I hope that you enjoyed the tutorial
56:21 - part of this live stream guys and unless
56:24 - you have any really big complaints I
56:27 - think we will kind of transition into a
56:30 - more Q&A type format that means that I
56:34 - do have to talk even more and I'm
56:36 - getting really really sore here so make
56:39 - sure you can to get some water going and
56:44 - yeah let's let's check it up bring me
56:46 - your questions guys and probably do a
56:49 - bit more spicing because this is so
56:50 - satisfying
56:51 - actually let me fullscreen this so we
56:53 - can see all of the intricate detail on
56:57 - this rendering this is definitely HDR
57:01 - PBR triple a workflow do you see how
57:06 - nice this is deferred linear rendering
57:09 - okay cool so questions let's transition
57:15 - into chat mode chat mode engaged
57:19 - such a nerd cool let me bring this up on
57:23 - screen and I will try and answer
57:25 - whatever you throw at me I'm glad you
57:28 - guys are like beyond like the tutorial
57:31 - so um
57:33 - did I prepared this livestream and how
57:38 - long did it take me yes I did
57:39 - I prepared it earlier today it took me
57:41 - about two hours to kind of get
57:44 - everything to get there I always kind of
57:46 - prepared the project for these live
57:47 - streams beforehand
57:48 - in fact I do that for my tutorials as
57:50 - well make sure to go through all the
57:53 - steps both so I know that I can that I
57:56 - have a proper explanation ready but also
57:58 - just to kind of minimize friction once I
58:00 - sit down and record um let's see um
58:10 - would I be interested in a card game
58:13 - tutorial that's actually something that
58:14 - could be really really fun I don't know
58:17 - how much it works for a full tutorial
58:19 - format but it's something that I would
58:21 - like to do at some point in a Ludum dare
58:23 - that could be pretty fun also really
58:26 - sorry for not participating in the I in
58:28 - the last Ludum dare we weren't able to
58:30 - attend um but both Sophie and I really
58:33 - really wanted to do it so I'm really
58:36 - looking forward to the next one which I
58:38 - believe is in December I hope I can make
58:41 - it for that one I don't have too many
58:42 - plans in December but if it's really
58:44 - early December it might be a problem
58:47 - actually um let me know and chat when
58:50 - the next ah when the next one I'm
58:53 - driving I really want to do it um let's
58:58 - see how would I choose the fruits
59:02 - particles yes lots of particles how long
59:07 - did it take you to get this good
59:09 - encoding thank you for thinking I'm good
59:11 - I like to think that I'm I'm not really
59:14 - an expert but um my current skill level
59:17 - I've been programming for quite a few
59:21 - years now
59:22 - programming immunity for about six years
59:24 - I think is the correct answer um will I
59:29 - teach a stealth tutorial I don't exactly
59:32 - know what it is you're referring to when
59:34 - it comes to stealth tutorials please
59:36 - make a tutorial about car physics car
59:39 - physics is definitely on the list but
59:41 - it's also just so freakin annoying to do
59:43 - I always have so many issues whenever
59:45 - try to do something with car
59:47 - in unity it never ever works and as I
59:50 - write it from the very bottom and that's
59:52 - very code intensive so um yeah but it's
59:55 - it's something that I've been wanting to
59:57 - do for sure what tutorials am I going to
60:00 - make on unity mm 17.1 well pretty much
60:04 - all of my future tutorials are going to
60:05 - be in 2017 that one so a lot of
60:08 - different stuff I hope I don't know with
60:11 - stuff introduced in 2017 that one
60:13 - particularly but I definitely have a lot
60:15 - of stuff introduced with related
60:17 - versions of unity that I haven't covered
60:19 - yet definitely stuff like all the new
60:22 - particle stuff and that mesh is on the
60:25 - roadmap also I am or we are currently
60:28 - working on a how to make good graphics
60:33 - in unity video which is kind of also how
60:37 - to make unity look like unreal where we
60:40 - talk about a lot of the rendering
60:42 - techniques that Triple A games use stuff
60:45 - like using deferred rendering what it is
60:47 - using a linear color spaces versus
60:50 - chemical spaces and what that means
60:52 - stuff like lighting how you can use
60:55 - lining the same way that bigger studios
60:57 - though do to make your game really pop
60:59 - how you use post-processing effectively
61:01 - a lot of confusing around the confusion
61:04 - around HDR and tone mapping to get
61:06 - everything really look good and some of
61:08 - the post-processing that unreal applies
61:10 - by default that makes everything looks
61:12 - look really really good so that's a
61:15 - video that we we just got done arm kind
61:19 - of doing a first draft on and we're
61:21 - almost I would say finishing it up but
61:25 - it's not going to be out before next
61:27 - month but I think in the very beginning
61:28 - of next month's actually I think the
61:30 - third is when we'll release that if
61:33 - everything goes according to plan so
61:34 - definitely stay on stay tuned for that
61:38 - how long is my hair it is this long it's
61:45 - very long let's do a test I'll undo it
61:49 - well answer some other questions can I
61:53 - do a shader tutorial I haven't already
61:56 - done one and that's definitely something
61:58 - that I also want to do I think there's a
62:01 - out of this long to answer the question
62:04 - I think there's a lot of demand for
62:08 - shader tutorials out there and I think
62:11 - there are some good tutorials already
62:14 - covering the subject probably better
62:16 - than what I could do however most of
62:20 - them are written so I think I definitely
62:22 - want to do something in a video format
62:24 - kind of showing how kind of an
62:27 - introduction to shaders and how they
62:29 - work it's just not something I've gotten
62:31 - around to yet especially because I'm
62:33 - comfortable with writing some things in
62:34 - shaders but if I have to teach it I need
62:36 - to be much more comfortable and so I
62:38 - would have to actually do some research
62:40 - myself um I have people talking about my
62:46 - hair would you make mobile game
62:47 - tutorials this is something that people
62:49 - have been asking me pretty much since I
62:51 - started the channel and I think it's
62:53 - something that I've kind of been
62:55 - reluctant to do the reason why is what I
62:58 - do now is mostly stuff that can be done
63:01 - for both mobile and standalone games
63:03 - effects in game's menus different UI
63:07 - elements covering basic stuff in unity
63:10 - and this is something that applies to
63:12 - pretty much everyone as soon as I say
63:13 - this is a mobile game tutorial it's a
63:15 - huge part of my following that it's no
63:17 - longer interested and I don't really do
63:19 - why want to divide people too much so if
63:22 - I do something on mobile it's going to
63:23 - be a standalone tutorial maybe just a to
63:26 - three part series which I would
63:28 - definitely be open to doing but again I
63:30 - haven't had too much experience with
63:32 - mobile in unity so I would definitely
63:35 - have to do some research there as well
63:37 - maybe it's on the roadmap I think but
63:40 - not in it's not something that I've
63:43 - planned within the next few weeks um
63:46 - thanks for the people who are so
63:48 - thankful you guys are really amazing
63:50 - um can I make a tutorial on how to make
63:54 - power-ups power-ups is something that's
63:56 - very specific to your game it works in
63:58 - the exact same way as a collectible coin
64:00 - would it's very easy you have a Collider
64:02 - it's a trigger you check if the player
64:04 - walks into it and if it does you remove
64:07 - the collider or power up and you spawn
64:09 - some particles instead from there on it
64:12 - completely depends on your game because
64:14 - do you want to add currency do you want
64:16 - to change damaged values you want to
64:18 - change the level do you want to change
64:21 - the graphic for of your play what's
64:22 - going to happen when you collect this
64:24 - powerup and that's that's that's not
64:27 - really something that can be generalized
64:28 - so I could definitely do something on
64:30 - creating a generic powerup but that
64:32 - would be very simple the actual
64:34 - difficult part of it depends on the game
64:37 - so let's say maybe actually did a I
64:42 - worked a bit on a project recently that
64:45 - I really want to show you guys soon had
64:48 - some fun on it which was inspired by the
64:53 - Super Smash Bros and more in more in
64:58 - particular what is it called the wait
65:03 - the Nintendo 64 game where you fight
65:06 - with different Nintendo characters
65:08 - what is the name ah it's escaping me
65:13 - please tell me in chat I'm googling as
65:17 - far as I can please I need to know yeah
65:27 - so yeah Super Smash Bros I said it yeah
65:29 - okay okay I was thinking of mine it was
65:31 - inspired by Super Smash Bros thank you
65:34 - okay
65:34 - brain fart again and because I really
65:37 - like the idea of kind of sitting down
65:40 - with friends having a controller each
65:42 - and kind of going against each other and
65:44 - battling that was something that I
65:46 - thought was really fun and I wanted to
65:48 - create something similar because most of
65:49 - the games that I've been making are kind
65:51 - of one person or one player experiences
65:54 - and also wanted to gain some more
65:56 - experience with using or controlling
65:58 - programming controller input so that was
66:01 - really fun to do um it doesn't have
66:03 - different characters but it's basically
66:04 - these floaty bowls that you fly around
66:08 - and then you shoot balls after other
66:10 - players and a friend of mine wanted to
66:12 - call it ball wars because so many balls
66:15 - everywhere of spheres is probably the
66:18 - term that I should be using and this I
66:20 - want to be kicked off YouTube and yeah
66:23 - that was really fun to do and I want to
66:25 - show you guys um
66:27 - at soon so I still have to do a bit of
66:30 - rounding up I'm actually using some cool
66:32 - acids from a pack that I want to get up
66:34 - on the acid store soon and that's why
66:36 - I'm not showing it to you yet because
66:38 - that acid is not available but as soon
66:41 - as it is I will show you sorry for the
66:43 - teasing we'll move on with it how do you
66:45 - spell your name would it really help the
66:51 - head told you I mean it's there on the
66:53 - screen it's right there that's how I
66:56 - respond your name how can I place wrote
66:59 - on a map so they are crush in a coherent
67:02 - line I have no idea I'm sorry would you
67:05 - consider create a discord channel for
67:07 - the community now it's already a discord
67:09 - channel for the community if you go to
67:11 - farm practice calm I believe the top
67:14 - thread links to a discord created by
67:16 - some awesome community members
67:19 - definitely check that out it's it it's
67:23 - really fun to hang out there I'm sorry
67:25 - I'm not there too often but I know a lot
67:29 - of people from the community I acted
67:30 - there it looks super fun and I'm sure
67:32 - yeah Sophie has a link there good work
67:35 - awesome and excuse this good of the blah
67:40 - on what PC am i programming this is a
67:44 - Windows computer with two Xeon
67:47 - processors and a I think it's a 780
67:50 - graphics card but I don't remember I
67:53 - think it has 32 gigabyte ram with 21,000
68:00 - megahertz ah SSD yeah I think the thing
68:08 - that's it um if you want to know more
68:11 - about that I do have a video on my set
68:13 - up that also go through all the hard
68:15 - hardware specs and have them listed in
68:17 - the description so if you go search for
68:18 - brekkie set up video I do have one check
68:21 - that out that's the video I used to both
68:23 - the court stream pretty much do anything
68:26 - on this on this computer are used to
68:28 - edit on it as well but now sophia has
68:30 - her video that very used for that
68:32 - instead and we actually just build a
68:34 - custom one which is super cool this on
68:36 - black and red
68:37 - we call it the dragon super awesome
68:40 - custom
68:41 - we had a lot of fun building it was her
68:43 - first time kind of putting all the parts
68:44 - together so that was really fun and
68:48 - let's see your face is missing I don't
68:55 - know if that's a compliment it doesn't
68:57 - feel like one via tutorial that would
68:59 - require me to have some VR goggles I
69:01 - currently do not have any in my
69:03 - possession no I'm sorry we're going to
69:07 - upload to YouTube yes it's impossible to
69:10 - make a shader that is transparent and
69:11 - have shadows yes um let's see can you
69:17 - make a tutorial on a realistic
69:19 - ammunition system no I already have a
69:25 - tutorial on shooting and adding ammo and
69:29 - I don't think we're going to go much
69:31 - further than that I think it sounds
69:33 - something that's too narrow for a tutor
69:36 - at least for now will you continue with
69:39 - the multiplayer series I'm sorry I will
69:41 - not continue with the multiplayer series
69:42 - it is square these is already too much
69:46 - demand for this stuff and yeah I'm sorry
69:48 - if you're sad about it but that's just
69:51 - how it is
69:54 - would you make a platform game like
69:56 - LittleBigPlanet
69:57 - I mean 2.5 D kind of game that's exactly
70:00 - what I just did with this super smash
70:01 - thing it's it's also 3d it's platforming
70:05 - and it's you have three jumps I there's
70:09 - lots of weapons and there's lava
70:11 - everything so oh I wish I could show you
70:13 - this can you make a subnautica replica
70:16 - that's it's maybe uh maybe a pretty good
70:22 - deal um yeah maybe maybe some point but
70:27 - it's pretty content heavy I feel and 3d
70:30 - so probably maybe can you do a monument
70:34 - value valley
70:35 - replica now that's a cool game don't
70:39 - feel it like it's something that can
70:41 - pretty easily be replicated either I'm
70:46 - looking for more simple stuff I think um
70:49 - there are AI tutorials coming yes they
70:53 - are in the making
70:55 - yeah that's what I can say this diamond
71:02 - thing is feel bad for spamming but
71:04 - that's never a great thing to start a
71:06 - message with can you make a stud game
71:08 - where you can sneak by a person who can
71:10 - either detect you by sight or sound the
71:13 - sneak skill on player and perception on
71:14 - the person or blah blah blah blah okay I
71:16 - see what you get there on these this
71:20 - kind of stealth behavior is something
71:22 - that again is dependent on how your game
71:24 - works it's a 2d or 3d what's the angle
71:28 - of the camera
71:28 - how do your handle stats all these
71:31 - different things if you want to learn
71:32 - about this kind of advanced AI in terms
71:38 - of smell perception perception these
71:40 - different things I would definitely
71:42 - recommend you check out rain indie and
71:44 - are there by rival theory they have a
71:49 - lot of more advanced stuff when it comes
71:51 - to AI it's an AI solution and it has
71:54 - built into it some of these more human
71:56 - characteristics and they have support
71:59 - for Union I haven't checked it out in a
72:00 - long time but I know at least a few
72:02 - years ago this was the place to be if
72:04 - you wanted to really emulate realistic
72:07 - human-like characters in AI cool um can
72:13 - you make a tutorial on a 3d space game
72:15 - oh that would be so cool I really want
72:18 - to do with more space stuff I did the it
72:21 - did the gravity simulation tutorial if
72:23 - you haven't seen it yet that was so much
72:25 - fun I love simulating things in gravity
72:28 - in unity especially because I think you
72:30 - can get it to look so beautiful if you
72:32 - just use the right shaders and some
72:34 - simple lighting a bit of post-processing
72:36 - man it's so good um yeah I would love to
72:41 - will you continued the C sharp beginner
72:43 - series not right now I don't see much
72:46 - need to delve into more advanced
72:48 - subjects but at some point I might pick
72:50 - it up again some peeing as some people
72:53 - are saying that it already needs a
72:55 - remake that might be something to do at
72:57 - some point but I think right now it
72:59 - stands fine as is um I'm going to make a
73:04 - dynamic navmesh tutorial yes um
73:07 - [Music]
73:10 - why do you use get mouse down and get
73:12 - mouse up instead of get Mouse same with
73:14 - buttons because get mouse down allows
73:16 - you to then enable something right when
73:18 - something is clicked get Mouse down
73:20 - allows you to do the opposite
73:22 - get Mouse just does something every
73:25 - single frame and so you have to check if
73:27 - it's already enabled don't do it again
73:29 - but now you have to add extra logic
73:31 - that's why I used verbs can you make
73:33 - another appearance multiplayer series
73:35 - with unity 2017 I love the first one but
73:37 - I had some problems in unity 2017 I
73:40 - could imagine um I would definitely love
73:43 - to do something with multiplayer again
73:45 - if I do it's probably not going to be
73:47 - another FPS series but I definitely do
73:50 - want to cover some more unit stuff
73:52 - especially because I haven't checked it
73:53 - out lately and I hope that a lot of the
73:56 - stuff that was driving me absolutely
73:57 - crazy the first time has been fixed so
74:00 - that would be really really nice um I
74:03 - had so many issues and that series was
74:06 - so hard to make because a lot of the
74:09 - stuff that I wanted to cover hadn't been
74:11 - written about almost at all I mean so I
74:13 - was figuring out everything on pretty
74:15 - Spartan I'm just going to say bad
74:18 - documentation on which was not easy so
74:23 - doing something with networking again
74:25 - and the future would definitely be be
74:28 - fun and I think I could do something
74:29 - more informative and scalable than what
74:33 - we did um can you do it to her about
74:35 - projective trajectory with a line
74:38 - renderer using an angle bullet speed
74:40 - bullet weight and start position that is
74:42 - something that could be fun and I
74:43 - definitely wanted to do some more
74:45 - advanced shooting stuff at some point so
74:47 - I'll keep that in mind it's always
74:49 - something that I've been wanting to do
74:52 - hmm battleship tutorial that is actually
74:58 - not a bad idea thanks for suggesting
75:01 - that can do is tutorial about inverse
75:03 - kinematics that could be fun really mad
75:05 - heavy I actually ah something says to me
75:10 - that Sebastian has a video on inverse
75:13 - kinematics but I'm not going to promise
75:15 - you anything so I would definitely go to
75:16 - his channel and
75:18 - look but I'm sorry if he doesn't and
75:20 - it's just me brain farting sorry guys
75:23 - alright I think that is pretty much all
75:28 - of the stuff that we're going to be able
75:31 - to cover in this livestream I'm sorry
75:33 - but I think we're going to round it off
75:34 - now before I completely lose my voice
75:36 - and also we have to kind of get on with
75:38 - arm processing the recording and
75:42 - uploading everything and I also have to
75:45 - get the project up yes I think it's time
75:48 - to rev it up to wrap it up but thanks so
75:53 - much for tuning in guys I had a lot of
75:55 - fun as always these live streams are
75:57 - they're just amazing to do because the
75:59 - amount of support that you give it's
76:01 - just it's amazing it's it makes this
76:04 - piece of work really really fun so I'm
76:09 - really thankful for that thank you so
76:10 - much everyone if you want to support
76:12 - these videos and the live streams you
76:13 - can go to patreon.com/crashcourse I see
76:17 - a lot of new supporters coming recently
76:19 - that's really awesome thank you so much
76:21 - for your support
76:21 - it's a really nice community to be part
76:23 - of so if you want to join you can go
76:25 - right now to patreon.com/scishow case
76:28 - with a monthly donation of your choosing
76:30 - cancel it at any time if you want to
76:32 - it's just a really really good way to
76:35 - kind of keep everything going so thank
76:37 - you so much guys I'll see you soon
76:40 - thanks for watching a lot of fun 5
76:43 - thanks to of the awesome patreon
76:44 - supporters who donated interline and a
76:46 - special thanks to hence often Derrick
76:48 - Eames Kirk face Tamara Phi yes for
76:49 - Mickelson Stone gamer summers volley
76:51 - Sybok Marine corporal Jason Lotito Erin
76:54 - Robert Burns and kudamon if you want to
76:56 - become a picture in yourself you can do
76:58 - so a pigeon comm flash bracket you guys
77:00 - Rock