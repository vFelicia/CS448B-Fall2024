00:00 - this video is brought to you by our own
00:01 - Metta thank you so much for donating if
00:03 - you want to support breakage yourself
00:04 - you can go to patreon.com/scishow geez
00:06 - thanks for tuning in at brakus so this
00:11 - is the recording of yesterday's monthly
00:13 - livestream I had so much fun and I
00:15 - really hope that you will enjoy it if
00:17 - you want to follow along with the
00:18 - project and maybe downloaded for
00:19 - yourself you can go to github.com I have
00:22 - a link for that in the description and
00:23 - the project will be there also towards
00:26 - the end we do a quite a long Q&A session
00:28 - and my girlfriend also joins the stream
00:30 - to test out the game with me so have fun
00:32 - and I hope you enjoy hello everyone to
00:34 - the people who have joined we are going
00:36 - to start the tutorial on creating a
00:37 - curve fever replica and this is going to
00:40 - be without multiplayer but it it's going
00:43 - to be with local multiplayer we're not
00:44 - going to do any unit stuff that's too
00:46 - much for a single tutorial and um
00:48 - basically and we're going to be using
00:51 - unity five point five and that's
00:53 - currently in public beta so if you want
00:56 - to follow along you will have to go and
00:58 - download that beta and I'm just going to
01:00 - show you how to do that right away so
01:02 - let me jump into unity here and you can
01:05 - see this is five point four or five
01:07 - point five it says so in the left hand
01:09 - corner and I've downloaded this from
01:13 - going to Chrome and going to unity 3d
01:16 - comm slash unity slash beta and then
01:19 - scrolling down here to unity five point
01:21 - five or you can just of course type in
01:23 - unity five point five in google and it
01:25 - will be the first one and you can run it
01:27 - like any other installer so I will also
01:29 - say that if something goes terribly
01:31 - wrong with unity which I hope it does
01:33 - not we will make Mac have to improvise a
01:36 - little bit but we'll see how that goes
01:38 - so um this is the project that we're
01:41 - going to be creating I have two players
01:43 - in here with a movement and this kind of
01:47 - snake effect and you can see how they
01:50 - are generated over here in the left side
01:53 - here how we are actually generating the
01:55 - mesh and that is using the line renderer
01:57 - and if I select one of these whoops if I
02:00 - let the game play a bit here and select
02:02 - one of them you can see that we actually
02:04 - have an edge Collider going all the way
02:06 - through here so I'll show you how to do
02:08 - exactly that so let's go ahead and
02:10 - create a new project so let's go to
02:13 - file and then new project and it's going
02:17 - to load here and I want to say save this
02:19 - in my projects folder and I want to call
02:22 - this something like curve fever replica
02:26 - and then we'll turn this into a 2d scene
02:30 - and we'll will we will disable our unity
02:33 - analytics that's no reason for us to
02:35 - include that and then hit create project
02:37 - and unit is going to do its magical
02:39 - thing where it boots up our project here
02:42 - and just see how did I make my unity
02:48 - black that is on unities paid version
02:51 - but I really think that with their
02:54 - current subscription plan there's really
02:55 - not much reason to upgrade to unity paid
02:59 - unless that you're a full-time developer
03:02 - and almost working in the team I mean
03:03 - you can really publish a full of that
03:05 - game just using the free stuff so the
03:08 - only difference that you're going to be
03:10 - seeing here is really the color off of
03:12 - the editor cool so what I want to begin
03:16 - by doing is finding our main camera and
03:18 - changing the background color to a more
03:20 - soothing black they're just completely
03:23 - black and let's go in here and create
03:26 - some empty object here and we'll reset
03:29 - the transform and we'll call this one
03:31 - trail or tail or whatever you add
03:34 - actually let's do tail that's better
03:36 - and let's add a new component on to this
03:38 - and this is going to be a line renderer
03:40 - and we are going to have a lot of fun
03:42 - with this line renderer so let me just
03:46 - show you what is new with this well if
03:48 - we are you can already see it on some of
03:50 - the settings maybe so if we change our
03:53 - positions array here and this is just a
03:55 - series of points each point being a
03:58 - place that our line will go to so right
04:01 - now you can see that it's going from
04:02 - zero on the z2 one on the Z and that
04:05 - means that we cannot see it in the 2d
04:06 - view because it's only going in the
04:08 - depth here and you can see I've changed
04:09 - my scene view to wireframe you can also
04:12 - change it to shade it but there's not
04:14 - much to see currently so let's change
04:16 - back to wireframe to get this on view of
04:19 - it and let's change back to 2d and
04:21 - instead of going on the Z here we'll go
04:24 - up let's say on one on the wall
04:26 - and let's create a third point here
04:29 - let's go up on one on the X and one on
04:32 - the Y there we go
04:33 - and you can see it's currently a huge
04:35 - arm a huge line here so what we can do
04:39 - is just edit the width to something like
04:40 - 0.1 I think that's more suiting and you
04:43 - can already now see the difference if
04:45 - you were to make this inside the old
04:47 - editor this would look super wonky and
04:50 - that's because the old line renderer was
04:52 - really bad if you wanted to do fast
04:54 - turns like this it would twist in odd
04:56 - ways and look really really bad but you
04:58 - can see here it's preserving the width
05:00 - of the line all the way which is so nice
05:02 - and what we can then do is we can add
05:05 - some corner vertices actually I'm going
05:07 - to go in here and write maybe three or
05:09 - five I'm just going to do five on the
05:11 - corner and five on the gaps and that
05:13 - will just insert some extra vertices you
05:16 - can see what it's done here to round off
05:19 - the line and that's just going to make
05:20 - it look so much more nice so um
05:24 - essentially what we can then do is have
05:27 - this tail here where we then change the
05:30 - array of positions here so our position
05:33 - array and then just add a bunch of
05:36 - points each time we get far enough away
05:38 - from the previous point and this way we
05:41 - can get these kind of curving lines that
05:43 - does mean that if we will play for a
05:45 - very long time say we doing a half hour
05:48 - long session and for some reason no one
05:51 - dies um this positions array will be
05:54 - totally cluttered and overpopulated and
05:57 - that will slow down that game so this is
05:59 - not something they can do if you want to
06:02 - have a million players in there and want
06:03 - them to play for a long time but it is
06:06 - definitely something you can that you
06:07 - can do if you just want and normal like
06:09 - a couple of minutes play sessions top
06:12 - play session tops with say three to four
06:16 - players that is going to be just fine so
06:19 - um in order to actually edit this
06:21 - through script let's find let's actually
06:25 - just create a new script here let's just
06:27 - call this one on the tail script and it
06:30 - create an ADD and on there we go so
06:33 - let's double click on that to open it up
06:34 - in visual studio and we'll have a look
06:36 - at actually coding this and I'm just
06:39 - going to look
06:40 - at the chat here if I can bring that up
06:43 - and to see if anyone is um asking some
06:47 - questions so what is curve fever
06:48 - um curve fever is a very snake-like game
06:52 - but a bit more modern in that it's it
06:55 - can move in more than just these very
06:57 - fixed directions and um yeah some
07:02 - comments about my Danish accent that I'm
07:04 - going to exclude for the video cool
07:08 - so you can see Visual Studio opened up
07:10 - on my secondary monitor here and here we
07:13 - go so what we can do is just remove
07:15 - system data collections but we are going
07:18 - to be using system data collections
07:19 - generic because we want to store it on
07:22 - some things in a list and we'll also
07:24 - import up here system link I like this
07:29 - and that is handy for a few methods like
07:32 - getting the last element in a list so
07:35 - that's why we'll be importing that and
07:37 - we want to require component up here and
07:39 - the component that we want to require
07:41 - this of type line renderer just to make
07:45 - sure that we have a line renderer XM
07:47 - attached to the same script which is the
07:49 - game same game object as this script and
07:52 - this way we can safely store a reference
07:55 - to that and it's not a rigidbody it's a
07:57 - line renderer and we can call that just
07:59 - line and then in our start method we can
08:01 - set line equal to equal to get component
08:05 - of type line renderer awesome so now we
08:10 - have a reference to our line what I then
08:14 - want to do is create some kind of array
08:17 - or some kind of list is what we're going
08:20 - to be using which is basically just a
08:21 - resizable array so some kind of list of
08:24 - items um and more specifically we want a
08:27 - list of points in space so we are going
08:31 - to create a list of vector tools because
08:34 - it's a two-dimensional game and this is
08:36 - going to be our points that both our
08:39 - line renderer will follow it's point
08:41 - that we have been in space and that our
08:44 - Collider when we added later will follow
08:46 - as well so we'll create this on point
08:49 - array here and we'll also create a
08:52 - public flare
08:53 - and this is going to be up point spacing
08:56 - so this is how far between we want up
08:59 - our points to be and we want to set that
09:03 - to something like maybe 0.1 units is
09:05 - going to be definitely enough and yeah
09:08 - so I think that everything there is fine
09:12 - so what we can then do is go down here
09:14 - into our update and we could basically
09:17 - just set a point here create some method
09:20 - for setting a point every single frame
09:22 - but that is not very efficient so what
09:24 - we'll do instead is we will check
09:26 - whether or not we're far away enough
09:28 - from the last point and that we want to
09:31 - create a new point or else it will look
09:33 - weird so we'll create that check in a
09:36 - second but let's first have a look at
09:37 - how we would actually set down a point
09:40 - so this is where we'll axe actually
09:44 - access our line renderer so let's start
09:47 - by adding our current position to our
09:49 - points arrays and we do that by simply
09:51 - pressing points add and what we want to
09:54 - add is our current position so
09:56 - transformed up position and that's
09:59 - pretty easy then what we can do is we
10:01 - can say that we want our line dot number
10:04 - of positions to be equal to the length
10:07 - of our points array so points are a dot
10:11 - count so basically imagine that when we
10:14 - start off the game out we are going to
10:16 - have zero points so um and then we are
10:19 - going to go through and is going to draw
10:21 - a frame you're going to be somewhere and
10:23 - it's going to set the first point that
10:25 - means that our points array will add our
10:27 - transformed up position and we will now
10:30 - have one point that means that our
10:32 - number of positions on the line should
10:34 - be equal to one and then what we can do
10:36 - is we can see say line that said
10:39 - position and we can use an index which
10:42 - is going to be points count minus one
10:45 - because if we have one element and want
10:47 - to access that element it has the index
10:50 - of zero and so one minus one equals zero
10:53 - and again if we have three elements once
10:56 - two we want to access the last one
10:58 - that's going to be an index of two so we
11:00 - go to minus or three minus one equals
11:04 - two so that's why we have to put the
11:06 - minus one in there
11:07 - and of course we just want to use
11:09 - transform a dot position again here cool
11:15 - so now we have that in there and we also
11:18 - want to make sure that we on our line
11:20 - here or our that we actually instantiate
11:23 - our points array here so at the very
11:25 - beginning we want to set up points array
11:27 - or our points list equal to a new list
11:30 - of vector twos and then we can start off
11:32 - the game by setting our first point so
11:36 - now it's going to set a bunch of points
11:38 - and if we go in here you will see that
11:40 - happening so if I hit play and try and
11:43 - move around this tail here you can see
11:45 - that it sets a bunch of points but this
11:48 - is really Rea too much you can see our
11:50 - positions array just going completely
11:52 - nuts and once it goes this far you can
11:55 - see some weird behavior starts happening
11:57 - so let's control this a little bit and
12:00 - we do that by going in here and adding a
12:02 - simple check so all we want to see see
12:05 - is whether or not our distance so we use
12:08 - vector three distance between the last
12:11 - point and our current position so we do
12:15 - our points that last and this is a
12:17 - function that is only available to us
12:19 - because of system that link between our
12:22 - last point and our current position if
12:25 - that is greater than some number which
12:29 - is going to be our point spacing well
12:33 - then we want to set a new points so
12:36 - always saying here is that we only want
12:38 - to set a new point in case we've moved
12:41 - far enough away from the old one in
12:43 - order for it to make sense and we do
12:45 - that by checking the distance between
12:47 - the last point and our point and seeing
12:49 - whether or not it's greater than the
12:51 - amount or the distance that we want to
12:53 - see and that is our point spacing so if
12:56 - that makes any sense to you we should
12:58 - now see that when we hit play here it
13:00 - inserts just a single one right at the
13:02 - beginning and you can see here in the
13:04 - position to rate it has only one and
13:06 - then when I start moving it we can see
13:09 - it starts to add new points so that's
13:13 - awesome
13:14 - whoops and I've did something weird with
13:16 - the mouse mouse there but you can
13:18 - actually see it working it will or don't
13:20 - also notice that it
13:21 - just look to smooth when it adds new
13:24 - points here but that's okay because the
13:26 - front of our line here is going to be
13:28 - covered by the head of our player we're
13:30 - going to create a little player head
13:32 - there so that is actually not going to
13:34 - be noticeable so how about we now create
13:38 - our player head or actual snake and how
13:41 - about we also make some better-looking
13:44 - graphics for this line here so let's
13:47 - start by maybe making this line look a
13:50 - tiny bit nicer and one thing too one way
13:53 - to do this is by actually inserting a
13:56 - material so the reason why it's pink
13:57 - right now is because the material array
14:01 - is completely empty and just like any
14:03 - other object our line needs some way to
14:07 - draw on colors on the scene whether or
14:10 - not to use lighting if you want a
14:11 - texture or just a solid color so that's
14:14 - what we're going to add and this is
14:15 - where this is where I'm going to just
14:18 - have a look in the chat to see if you
14:20 - guys are right and are able to follow
14:22 - along here so um you see here um do I
14:28 - work with programming yes that brakus is
14:32 - my job so I definitely work with
14:34 - programming and yeah nothing too
14:39 - pressing as far as I can see so I think
14:44 - we'll just go ahead and continue cool so
14:47 - um what we want to do here is go down
14:50 - into a project and right click and go
14:52 - create material to create a new material
14:54 - and this is going to be our tale
14:56 - material so I'm just going to do tail
14:58 - matte and we can take our tail here and
15:01 - drag our tail matte into this empty
15:04 - material slot you can now see it turns
15:06 - gray and that's because we're using this
15:08 - standard shader what we in fact want to
15:10 - use is the sprites default shader and
15:14 - this is just going to draw us some our
15:16 - color in this case just told white
15:19 - without applying any lighting and
15:21 - because we don't have any lighting on in
15:23 - our scene so we just wanted to draw a
15:25 - flat color and you can tint this color
15:28 - on the material but we're not going to
15:30 - be doing that because we want two
15:32 - different players and so we want to
15:34 - change the color
15:35 - independently for each player and
15:36 - therefore we want to go to the color
15:38 - parameter here under the line renderer
15:40 - and this is in fact a gradient so we can
15:42 - go in here and change the color on one
15:44 - end and have it like smoothly transition
15:47 - from one end to another and we can do
15:50 - the same with the opacity so this is
15:52 - actually super fun to play around with
15:54 - and if you want some very funky looking
15:56 - snakes I definitely recommend you spend
15:58 - some time in here but for now I'm just
16:00 - going to undelete the last key here to
16:03 - make the color totally solid and then
16:05 - I'm going to edit this first parameter
16:07 - here and we're going to make it some
16:10 - kind of light cyan blue like this very
16:13 - lazy and I think that looks pretty nice
16:16 - it's it's what acting the curve our
16:18 - curve fever definitely uses and more
16:22 - water there all right cool so now we can
16:27 - cover this up with a head to our snake
16:29 - but first let's save our level here and
16:31 - this is just going to be main level and
16:33 - I just hit ctrl s or command s to do
16:35 - that I also go to file save scene and
16:38 - let's create a new object for this let's
16:42 - create and to the object sprite and
16:44 - let's reset the transform on this and
16:47 - this is going to be our snake or our
16:49 - head you can call it whatever you want
16:51 - actually I think I'm going to call it
16:54 - let's just call it snake and um we can
16:57 - then choose a sprite for this and I'm
16:59 - just going to use the default unity
17:01 - building an OP sprite but you can of
17:03 - course just serve search for any kind of
17:05 - circular sprite on the web or create one
17:08 - yourself but I just thought this was
17:09 - pretty fitting and wanted to use that
17:12 - and I don't know about the Kali huge you
17:15 - could choose a color you could just go
17:17 - completely white I'm just going to go
17:19 - white with this but of course s always
17:21 - spend more time on the graphics than I
17:23 - do
17:23 - they are super important so now we can
17:29 - create a script on our snake here and to
17:33 - make it move however what we want to do
17:35 - is of course link up our tail to our
17:38 - snake because currently we are using
17:40 - transform top position on in side of our
17:43 - tail script here and to actually move
17:46 - this line around however
17:48 - if we put our tale as a prefab or as a
17:52 - prefab as a child of our snake on things
17:55 - should immediately work as soon as we
17:57 - move our snake here we should see the
17:58 - tail updating but this is not actually
18:01 - going to work whenever we create an edge
18:03 - Collider for our tail because our edge
18:05 - Collider will move along with our tail
18:08 - that doesn't have these worldspace
18:10 - positions that is relative to our tail
18:13 - so we actually want our tail to stay in
18:14 - place so in order to do this what we'll
18:17 - do is we'll go inside of our tail and
18:20 - we'll create a reference to our snake so
18:23 - will go public game object and call this
18:26 - one snake or snake head or whatever and
18:29 - we'll simply go on and that's this is
18:32 - not going to be a game object this is
18:33 - going to be a transform and then instead
18:36 - of doing transform that position we do
18:38 - snake that position there and down here
18:41 - so snake that position both places and
18:43 - that should just fix that right away as
18:46 - long as of course we remember to drag
18:49 - our snake into that slot so now when we
18:52 - hit play nothing happens when we move
18:54 - our tail but lots of stuff happens when
18:56 - we move our snake that's awesome and I
18:59 - can see the array going crazy here and
19:01 - the reason why is we need to change it
19:03 - one more place and that is up here so we
19:06 - need to do snake that position there as
19:07 - well in order for this to work and now
19:10 - we should see that when we move around
19:12 - the snake here things just work and I
19:16 - think it's super exciting to see how
19:18 - unity draws on the geometry over here
19:21 - and I actually think that this works
19:23 - pretty well in fact if you want to
19:24 - create a painting program well here you
19:27 - go
19:27 - that was pretty easy so that's pretty
19:33 - cool and um let's actually create some
19:35 - controls for our snake so um again
19:40 - looking in the comments here because
19:41 - I've got some requests last time to look
19:43 - at more comments how old am i I am 19
19:46 - years old um so are we making a snake
19:51 - game yes we are making a replica of
19:54 - curve fever um and I think
19:59 - we can just move on here circulate um
20:02 - awesome so let's create a new script for
20:07 - this so let's find our snake
20:08 - let's hit add component and let's call
20:11 - this one our snake or you can do
20:13 - movement or whatever he create an ad and
20:15 - let's double click this to open it up in
20:17 - Visual Studio there we go
20:20 - and you can see up here that it imports
20:23 - systems are collections and system data
20:25 - collection start in Eric we're not going
20:27 - to be using those in this script instead
20:29 - we are going to be using updates and we
20:34 - are not going to be using stock and we
20:37 - are also going to be using a new
20:39 - function called fixed update awesome so
20:44 - the idea here is to have the snake
20:46 - always move so at any time we want our
20:50 - snake moving forwards on at a speed that
20:53 - we determine with a variable so let's
20:55 - start by creating that speed bear one
20:57 - this is of course going to be a public
20:59 - float and we are just going to call this
21:02 - one speed and maybe the folded to
21:04 - something like three then we'll have the
21:08 - ability to rotate this snake and we'll
21:11 - do that using another variable another
21:13 - public float and this is going to be our
21:15 - rotation speed or our turn speed or
21:19 - whatever and this is going to be a lot
21:20 - higher this is going to be something
21:22 - like two hundred and yeah so what we'll
21:26 - do is we'll use our update method to
21:28 - capture input so we can go in here and
21:31 - say input dot get access wrong and the
21:36 - reason why I'm using get get access raw
21:38 - is because we really don't need any
21:40 - smoothing on this movement and get
21:42 - access raw will make sure that we don't
21:44 - get that if you want some more slow and
21:47 - clunky controls but that might allow
21:49 - players who are better to do more
21:52 - fine-tuning you can go ahead and use get
21:53 - access but I think that get access raw
21:56 - works better for the game and what we'll
21:59 - do here is we will get the axis called
22:02 - horizontal and what we will do with this
22:04 - is we'll store it in a private variable
22:07 - up here and we'll call this one our just
22:11 - let's just call it
22:12 - horizontal and defaulted to serum and
22:14 - then we can say here that horizontal
22:16 - equals that input.getaxis and we can
22:20 - then use this to move so let's begin by
22:23 - making our snake move forward so in
22:26 - order to do this we want to say
22:27 - transform dot translate this is going to
22:31 - allow us to move using this translation
22:34 - which is how far we want to move on the
22:36 - XY and Z and in our case we want to move
22:39 - vector R 2 dot ops so we want to move
22:44 - upwards which is following this green
22:46 - arrow that's going to be our steering
22:49 - point that is going to be a forward
22:51 - point for a snake and we want to do that
22:53 - using our speed so multiply that with
22:56 - our speed and multiply this world with
22:59 - time fixed Delta time to make it
23:01 - independent on the rate of our fixed
23:04 - update so our fixed update runs at a
23:07 - fixed rate that means that we have a
23:09 - fixed amount of iterations over this
23:12 - loop each second and on that rate it's
23:16 - on stored in this variable so this is
23:18 - the amount of time since the last time
23:21 - this loop ran and we're going to
23:23 - multiply that in so that if one computer
23:25 - runs on a different
23:26 - fixed rate than another computer that is
23:29 - going to be evened out by multiplying
23:31 - this variable and therefore we are going
23:34 - to move and at the same pace on all
23:37 - computers cool and we want to orient
23:41 - ourselves using space dot cell so we
23:43 - want this movement to be local and not
23:46 - on the world because if we always moved
23:48 - up no matter of our rotation the game
23:51 - would be pretty boring we want to move
23:52 - up and then if we rotate we want to move
23:55 - towards the new up cool and so that
23:59 - should work already and if we actually
24:01 - save that and hit into unity we should
24:04 - see that our snake just moves up so
24:06 - that's perfect
24:07 - and all we really need to do now is use
24:09 - this horizontal movement here too as a
24:13 - rotation so we do transform dot rotate
24:16 - and we basically want to rotate around
24:19 - vector three dot forward so if we have a
24:22 - Logan I've seen here switch to 3d mode
24:25 - here
24:26 - you can see that we have this blue
24:28 - z-axis and this is in fact our forward
24:31 - axis so when I say that we want to
24:33 - rotate around this what I mean is that
24:35 - we rotate this way here so in these
24:38 - directions and you can see that is
24:40 - exactly what we want to do is rotate
24:42 - around the z axis and how much we want
24:45 - to rotate is going to depend on the
24:48 - exact same things as it did up here so
24:50 - it's going to depend on our our rotation
24:53 - speed and time dot fixed Delta time Cole
25:00 - except this will not work because if we
25:05 - save this now we're just going to keep
25:07 - rotating here you can see that we're
25:09 - just rotating in a circle look a perfect
25:11 - circle isn't that nice if only my math
25:14 - teacher would have been able to draw
25:15 - this I should have shown him this
25:18 - program so um this is just going to spin
25:21 - infinitely what we want to use in order
25:23 - to orient where we want to rotate is our
25:25 - horizontal variable here because
25:28 - input.getaxis raw gives us a value a
25:31 - float variable value between minus 1 and
25:33 - 1 0 being no movement minus one being to
25:37 - the left and one being to the right
25:39 - so what we can do here is we can
25:41 - multiply that in as well down here so if
25:44 - we multiply that in to our
25:46 - multiplication chain here that means
25:48 - that if we press to the side things are
25:52 - going to be or to the left we are going
25:54 - to reverse this to the right we're just
25:56 - going to let it be and if we don't
25:58 - change or if we don't press any buttons
26:00 - meaning does it this will be 0 we're
26:03 - going to rotate zero degrees there you
26:05 - go so it's that easy and one thing that
26:07 - I want to do here that I only know
26:10 - because I've done this before is that we
26:11 - want to put a minus in front well as our
26:13 - controls will be reversed but if you
26:15 - want to have reversed controls that's
26:18 - all you have to do is change this little
26:20 - minus right here and now we should be
26:22 - able to jump inside of unity hit play
26:25 - and accurately move around just like in
26:30 - curve fever so I actually think that
26:32 - this is kind of exciting and it's really
26:34 - fun to play around with it feels awesome
26:35 - with this tail being rendered right
26:39 - after you and I
26:40 - they think that we can easily bring up
26:41 - the rotation speed to something like 250
26:44 - that works a little better makes it some
26:47 - somewhat harder to move around but also
26:50 - feels more fast-paced so you can play
26:53 - around with these variables and it's
26:54 - very easy to add pickups to this you
26:57 - simply change the speed of rotation
26:58 - speed if you want to do opposite
27:00 - movement all you do is you put a
27:02 - negative sign in front of the rotation
27:04 - speed and there you go you have flipped
27:05 - the direction of movement you can do all
27:08 - sorts of stuff if you want to clear out
27:10 - the tail here all you do is that you set
27:13 - the position to right here or your own
27:15 - list inside of the script you just
27:18 - simply use dot clear it will clear out
27:20 - the entire array and it will start from
27:22 - new so you can very very easily
27:24 - implement all of these different
27:25 - power-ups that are in the original curve
27:27 - fever but which are but I don't have
27:30 - time to really implement in in this
27:33 - stream so I'm just going to see here how
27:36 - the chat is doing so um thanks for all
27:41 - of the people saying that you like it
27:43 - I'm really glad that you do I'm trying
27:45 - my best here and um let's see here um
27:53 - not too many questions that might mean
27:57 - that I'm doing something right ok cool
28:07 - so right so will I ever do a c-sharp
28:11 - scripting tutorial this is a c-sharp
28:13 - scripting tutorial it one dedicated to a
28:17 - c-sharp I have a series on that if you
28:20 - mean if I'll ever do another one I
28:23 - definitely hope to but I'm not going to
28:25 - do one until I have some subject that I
28:26 - really think is necessary and I really
28:29 - did all that I wanted with that series
28:31 - but I'm not closing it out either
28:33 - because that's definitely more to
28:35 - explore with the c-sharp language but
28:37 - the original thought was just to kind of
28:39 - have it be a introduction to the
28:42 - language with and it really turned into
28:44 - everything you need to know to create a
28:46 - pretty good game actually so I already
28:50 - went further with it than I thought I
28:51 - would
28:52 - but maybe I want to do more that's kind
28:56 - of unknown so how am i doing I'm doing
28:59 - great
29:01 - can I show till that C is code yes it's
29:04 - right here there you go what I'll do is
29:07 - I'll put this up on YouTube if you want
29:09 - to see any of it and I will also um make
29:13 - sure to upload this project to probably
29:16 - github just as we did with the last
29:17 - livestream so everything will be
29:19 - available and of course guys I cannot
29:22 - answer it every question right now
29:23 - because things are crazy but at the end
29:26 - we'll do some Q&A so don't worry about
29:27 - that what if you make a game developer
29:33 - starter kit tutorial series on I'm not
29:36 - exactly sure what do you mean I have a
29:39 - series called make a game that goes from
29:43 - the very beginning of development like
29:44 - from installing unity to actually
29:47 - getting something in the scene but you
29:50 - could definitely use that as a starter
29:52 - series it's exactly meant for that so
29:55 - you can use that um so the set point
29:59 - method works like this so this is how we
30:02 - add points so we add a point to the
30:05 - array using snake type position we then
30:07 - set the amount of positions on in a line
30:10 - array to how many positions we have
30:12 - stored locally and then we set the last
30:14 - position in that array to snake that
30:16 - position so there you go that's what
30:18 - we're doing there what's my name of the
30:21 - theme in Visual Studio it's mono Kai
30:24 - I've edited a bit but I will just put
30:27 - that in chat it's mono Kai there you go
30:29 - you can download that and import it into
30:32 - your projects as well we all know that
30:34 - if there's something more important that
30:36 - than skills or anything it is our
30:39 - programming colors it's what makes us
30:41 - look professional so make sure to get
30:44 - that right so yeah
30:48 - I think we're just going to continue the
30:50 - video here so um the next thing that I
30:53 - want to do is add in some collision on
30:55 - detection and then after that we'll add
30:58 - in another player and then maybe some
31:00 - boundaries to a map so Adam at the
31:03 - moment here you can see that no neither
31:05 - our snake or our tail has any kaleidos
31:09 - on them whatsoever so let's go ahead and
31:11 - change that let's begin by adding a
31:13 - Collider to our snake so we're going
31:16 - here and hit add component and we'll
31:18 - create a physics 2d and circle Collider
31:24 - now go and let's shift back to shaded
31:26 - mode here and let's bring in the radius
31:29 - just a bit we definitely don't want to
31:31 - have this be too large and one nifty
31:34 - trick that I'll show you here is if you
31:36 - are editing something some variable like
31:37 - dragging in here in unity and then hold
31:40 - down alt that will allow you to
31:42 - fine-tune so that's a really handy
31:45 - shortcut that I use pretty much all the
31:47 - time just holding down alt and you can
31:49 - fine-tune any number and that looks
31:53 - pretty good
31:53 - and I'm just going to shift back to 2d
31:55 - mode here makes more sense and then what
31:59 - we can do is turn this into a trigger
32:01 - because we're not going to have any
32:03 - unity physics in here we are going to do
32:06 - all of the physics ourselves I mean
32:09 - we've done the movement independent of
32:11 - the unity physics system and we're not
32:13 - going to have any flying objects or
32:15 - anything like that so I really don't
32:17 - think there's any reason to use it
32:18 - however whenever we are moving and
32:20 - collided remember to attach a rigidbody
32:22 - 2d anyways and then just mark it as
32:25 - kinematic and you can see here how this
32:27 - has changed in 5.5 there's a lot of cool
32:29 - stuff in here I'm not going to go into
32:31 - any of it right now but that is
32:34 - definitely something that you should
32:35 - check out overall I'm really enjoying
32:39 - this beta I think it's the best one that
32:41 - they've shipped for a while there's also
32:43 - a bunch of improvements on the particle
32:45 - system that is super exciting so um yeah
32:48 - make sure to change that to kinematic so
32:50 - that it won't act on its own its own it
32:52 - will only act if we tell it to and there
32:55 - you go so we're still moving around the
32:56 - scene and now we need to do now is add a
32:59 - Collider to our tail so how do we do
33:01 - this well um one way or actually the
33:05 - best way I would say is adding a
33:07 - component here on the physics 2d called
33:09 - the edge Collider and the nifty little
33:12 - thing about the edge Collider is that it
33:14 - works exactly the same way as our line
33:17 - right
33:18 - and that's awesome because basically it
33:21 - just has an array of points just as we
33:25 - have up here um that we want this line
33:28 - to go through so you can see here if I
33:30 - set the same point as we have up here so
33:34 - I create three points here and we have a
33:36 - 0 1 we have a 1 1 and a 0 0 you can see
33:42 - now that our line goes through there we
33:44 - have this Collider it might not be too
33:46 - visible on the screen and this on the
33:49 - stream there I can just maximize here by
33:51 - the way maximizing a window shift space
33:54 - you can do it with anything in unity
33:56 - it's super handy so you can see that it
33:58 - just goes through there so all we really
34:01 - need to do is modify our script a tiny
34:03 - bit to actually change these points so
34:06 - let's go into our tale let's require new
34:08 - component so require component type of
34:11 - and then we do and we're going to call
34:14 - this one edge Collider 2d and we create
34:18 - a new private variable here so it it's
34:21 - Collider 2d and this is just going to be
34:23 - our coal for Collider and up here we
34:26 - want to set coal equal to get component
34:29 - of type edge Collider 2d cool so that
34:34 - allows us to down here change some
34:39 - things about this Collider so if we
34:41 - don't do coal dot I believe it's just
34:45 - points here we can set that equal to our
34:48 - points list and all we need to do is
34:52 - take this here you can see and convert
34:55 - it from a list into an array and to do
34:59 - that we just use dot to array of type
35:03 - vector 2 and then round it off with some
35:07 - parentheses so that is really really
35:10 - easy to do so we just feed that right in
35:13 - there one thing that you will notice is
35:15 - if we now hit play we will get an error
35:18 - right off the bat here and other than
35:20 - that things are going to be working so I
35:22 - will just make sure to play the game a
35:25 - bit better here so let's just play the
35:27 - game a little bit we can pause the game
35:29 - we can take a look at our snake here
35:31 - and you can see out of our at our till
35:34 - and you can see that we have this line
35:36 - at a pretty good resolution actually so
35:38 - that's pretty pretty damn accurate and
35:41 - of course we get this error so it says
35:44 - invalid points assigned to 2d edge
35:46 - Collider and the reason why is that the
35:49 - first time that we call this set point
35:51 - we only have one point and the edge
35:55 - Collider does not like to have less than
35:57 - two points because well frankly it makes
36:00 - sense you cannot make a line out of a
36:02 - single point so that's why it throws out
36:04 - an error here and you could just ignore
36:06 - it because it doesn't really have an
36:08 - impact on the gameplay it doesn't stop
36:10 - the the game or anything but it looks
36:12 - bad to ignore stuff like that so what
36:14 - we're going to do here is going to add
36:16 - it or just move this line up here
36:21 - actually we'll do that in a second and
36:23 - I'll show you why but what we can do is
36:25 - just add in here an if statement where
36:28 - we say that if points dot count is
36:31 - greater than one so we only want to do
36:34 - this if we have more than a single point
36:36 - inside of our list and that should get
36:39 - rid of that error there and everything
36:42 - else should be working just fine cool
36:44 - and next why I wanted to actually move
36:50 - this you will see in a moment and it has
36:53 - to do with colliding with your own tail
36:54 - so if we now take a look and add our of
36:59 - course we want to change this to trigger
37:01 - that's important at our snake script so
37:03 - let's open up a snake script in Visual
37:05 - Studio oh and we are going to um let's
37:13 - see here right so we are going to add a
37:15 - function void on trigger enter to D and
37:20 - of course this is a callback method just
37:23 - like start or update by unity so you
37:26 - need to name it exactly as I've done
37:28 - here and basically all it does is that
37:31 - whenever we hit another trigger or hit
37:34 - another Collider with a trigger this is
37:36 - going to be called and it's going to
37:38 - give us some information about what we
37:40 - hit and that information is going to be
37:43 - of type Collider 2d
37:45 - and it's going to be let's just call it
37:47 - call for Collider you could also do call
37:49 - info let's just do call and it's really
37:54 - important that you put 2d here both
37:56 - places let's just call this call and
37:58 - what this allows us to do is for example
38:00 - debug deadlock what did we just hit so
38:04 - the name of the collider that we just
38:06 - hit so if we do this now we should
38:09 - expect that nothing happens until we
38:12 - collide with our tail but what really
38:15 - happens is we collide with our tail a
38:18 - lot actually we collide every frame so
38:21 - what is happening here for each time
38:24 - we'd make a new point at least so what's
38:27 - happening here well the reason why and
38:29 - you will see this very obviously is if
38:32 - we pause the game zoom in on our snake
38:34 - head and then select our tail you can
38:37 - see that our edge Collider and again
38:39 - this might be hard to see but we have
38:41 - this green line going here and it
38:43 - actually moves all the way in here
38:46 - meaning that we are colliding with the
38:47 - very tip of our tail each each time each
38:51 - frame so how can we change this well
38:54 - it's really easy what we do is we simply
38:56 - allow ourselves to ignore that first
39:00 - point in the array so we just don't add
39:04 - the first point of on our with that I
39:08 - should see say the recently added point
39:11 - will just not add that to the array so
39:14 - we'll go in here we'll move this code up
39:17 - here and let me walk you through what's
39:20 - happening so we are on far enough away
39:23 - from our last point that we want to set
39:24 - a new one we go down here and we say if
39:26 - we have more than one point we want to
39:28 - add some points to our Collider you're
39:31 - going here and add what we currently
39:33 - have then we add a new point and then we
39:37 - add that to our line so we will draw the
39:40 - tail all the way up to the tip all the
39:43 - way up to our head but we will not
39:45 - actually draw that last point that we
39:48 - just inserted before the next loop so if
39:52 - we now go here and hit play we should
39:54 - see this fixed and actually we had two
39:57 - collisions there
39:58 - of the bad and I believe and the reason
40:01 - why is how we set up a circle Collider
40:03 - here so that's just or on our edge
40:06 - Collider here so let's just take these
40:07 - points here change them back to two and
40:09 - move them way off so let's just do on
40:12 - nine hundred nine nine nine nine nine
40:14 - nine nine nine nine nine nine okay
40:20 - that's just to 100 on those there you go
40:22 - just move them completely off the scene
40:24 - and that should fix that error there we
40:26 - go
40:27 - so if I now hit play and zoom in you can
40:30 - see that our Collider here is only drawn
40:33 - on to the previous point and therefore
40:35 - we'll never be able to touch our head
40:37 - however if we then go in here and
40:39 - collide you can see it says tail each
40:41 - time you cross awesome so what we can do
40:46 - with this is of course make some logic
40:49 - for well stopping the game every time we
40:53 - hit a tail and this is well just have a
40:55 - look at the chat again so let's see here
40:58 - if everyone has some have some questions
41:01 - and that requires more elaboration I
41:04 - definitely recommend you to go to the
41:06 - practice forum because there's well a
41:09 - whole place where you can submit your
41:10 - code and your project files and
41:12 - everything and people are awesome in
41:14 - there
41:14 - and I will also MIT video point out that
41:19 - this live stream is made possible by the
41:22 - awesome supporters over at patreon so if
41:25 - you go to patreon.com/scishow can choose
41:28 - to support me with a monthly donation of
41:30 - any amount and in return you can get
41:32 - some cool rewards so if you want to see
41:34 - more of this stuff and that is really
41:36 - the way that you can help me make it so
41:38 - thank you so much to people to the
41:40 - people who are already donating I'm
41:42 - having so much fun doing these live
41:44 - streams and being able to do this
41:46 - full-time so that is freaking amazing so
41:49 - let me see what is going on here umm
41:54 - funfair there you go umm yep it would be
42:03 - awesome if every time the game started a
42:05 - German with the deep voice said the name
42:07 - of the game could I do that octo
42:10 - they're cool I don't know why but I
42:14 - think like every German person sounds
42:16 - really angry I think I've watched like
42:19 - too many world war movies why not move
42:23 - position instead of translate you can
42:25 - definitely use move position but that's
42:27 - really no reason to unless you want it
42:30 - to be part of the physics system and
42:31 - with that I mean that if you want to do
42:34 - like if you want to do collision
42:37 - detection while moving which we don't
42:39 - want to do we only want to do it when we
42:41 - have moved or right before moving so if
42:44 - you want a Collider to actually be able
42:46 - to stop you in your translation then you
42:48 - would use a rigid body move position but
42:51 - we just want to move no matter what and
42:53 - then we will handle what happens if we
42:56 - actually collide with something and
42:57 - that's why we use transform dat
42:58 - translate and I'm sorry to all of the
43:01 - German people who had just offended I
43:04 - really did not mean to do that
43:07 - and the tail is made up of a bunch of
43:10 - arrays not a bunch of arrays it it's
43:13 - made up of one array with a bunch of
43:17 - points in it that's correct but you can
43:19 - really limit the amount of points
43:21 - especially because unity is doing such a
43:23 - great job of smoothing the curve and if
43:25 - you want to do even more with this you
43:27 - can use Bezier curves and get a maybe
43:30 - pick up an asset on the story or learn
43:32 - the math yourself which is an awesome
43:33 - way to blend or do these smooth curves
43:36 - so that's something you could check out
43:38 - and now I think it's time to kind of
43:40 - continue this video we're getting
43:41 - towards the end of it so that's awesome
43:44 - and again stick around because at the
43:47 - end we are going to do a Q&A and we are
43:49 - going to advise invite Sophie back onto
43:51 - the screen as well so it's going to be a
43:54 - lot of fun and you don't want to miss P
43:57 - your time I say even more stump stuff
43:59 - when it's beer time
44:02 - who knows what nationality I will offend
44:05 - next stick around to know or to find out
44:09 - cool so um what we're going to do now is
44:13 - um maybe add another player so let's go
44:16 - in here and this is really really easy
44:18 - to do all we want to do is create an
44:20 - empty object reset the transform and
44:22 - this is going to be our player
44:24 - and we can then take our tail and our
44:26 - snake and move those under our player
44:27 - because both of them have well if we
44:31 - just Center our player it's not going to
44:33 - matter because all of the positions will
44:34 - work out so what we can then do is take
44:37 - our player here drag it into a project
44:39 - to turn it into a prefab then duplicate
44:41 - it and rename the first one to player
44:43 - one and the second one to player two and
44:48 - that should be fine
44:50 - and then we can maybe move this over so
44:52 - our first snake here if we focus in on
44:55 - this we'll start at a position of two
44:57 - and actually let's do negative two
45:01 - native two and two and we want this to
45:05 - be facing downward so let's rotate this
45:07 - 180 degree degrees on the z so that it
45:11 - will move this way when the game starts
45:13 - our second snake here is going to start
45:16 - ad 2 and then negative 2 on the Y and
45:20 - this is going to be moving upwards when
45:22 - we start the game again a super awesome
45:24 - improvement to this game would be
45:26 - spawning in these players and then
45:28 - having them spawn at random positions
45:30 - just make sure that they are a bit
45:32 - further away from each other that would
45:34 - mean that would make the whole thing
45:36 - feel a lot more random and give more
45:37 - variety to your game so that's one thing
45:40 - that you can definitely do then what
45:43 - we'll do is we'll take the our first
45:44 - tail here and just leave the color but
45:46 - the second tail we want to change the
45:48 - color and let's see if we can see that
45:50 - updating currently the two tails on top
45:53 - of each other so what we'll do is just
45:54 - disable this tail really quickly and
45:56 - then edit the other one here and I just
45:59 - want to remove the last part here and
46:01 - change the cool the color here to maybe
46:04 - an orange color could be pretty cool
46:06 - something like that I actually really
46:08 - like the color here and then we can
46:10 - re-enable the other tail as well and you
46:15 - will notice that these two players
46:16 - should actually be working out so if we
46:19 - the play here and move around they will
46:21 - move around and they will do so ah but
46:25 - they will um oh there we go and you can
46:28 - see the collision works for both of them
46:29 - so they will move around and they will
46:31 - do so just on a mirrored axis that's
46:34 - fine if you fit find that that's funny
46:37 - but
46:38 - that what we will do is we will map them
46:41 - to two different parts of the keyboard
46:42 - so I want to do this let's go under edit
46:44 - and then project settings input and
46:47 - let's open up the axis here and we can
46:49 - find the one called horizontal this is
46:51 - the one that we are using you can see
46:53 - that there's also a horizontal down here
46:55 - but this is for handling joystick input
46:57 - and we're not going to be dealing with
46:59 - that at all but you could definitely use
47:01 - that as well if you want to allow for
47:03 - using a joystick so in our case here the
47:06 - name is horizontal and we have a
47:07 - negative button and a positive button
47:09 - and this add the left and right arrow
47:11 - keys
47:12 - however it also allows us to use a and D
47:15 - so let's split this up into different
47:17 - ones so let's delete a and D from this
47:19 - let's create a new one by simply
47:21 - duplicating the array element and
47:23 - calling this one horizontal two and then
47:26 - instead of going left and right here we
47:28 - go a and D so now we have one with left
47:30 - and right and we have one with a and D
47:32 - and now all we need to do is inside of
47:36 - our script for our snake is add a public
47:39 - variable and this is going to be a
47:41 - public string and it's going to be the
47:43 - input axis and you can put a name there
47:47 - but I'm just going to do input axis and
47:49 - it's going to default to horizontal and
47:52 - then we can go into unity oops
47:55 - of course we need to put our input axis
47:57 - down here no use hard-coding it when you
48:00 - want to use the variable so input that
48:01 - down there then we can go into unity
48:03 - take our player to here and find the
48:07 - snake and then we can input something
48:09 - else here so instead of horizontal we
48:11 - can now input horizontal too and that
48:13 - will now be wired to that input axis so
48:17 - this is a allows us to a play and
48:19 - control them completely separately which
48:22 - my brain for the life of me cannot do
48:25 - Jesus Christ this is hard but you can
48:28 - see that the collision and everything is
48:29 - working awesome
48:32 - mmm so on the very last thing on that I
48:35 - kind of wanted to do in this game is
48:37 - have a game over I want to have some
48:40 - walls because frankly now you can just
48:42 - go off the screen and then that way you
48:44 - can like you can never lose frankly and
48:46 - I also wanted to show you how you can
48:49 - maybe check
48:50 - down here whether or not it is actually
48:52 - a player you've hit so that you want
48:55 - dice a if you wanted to add pickups to
48:57 - your game those wouldn't kill you that's
48:59 - kind of a good idea to not have them do
49:01 - that so let's actually do this so let's
49:05 - create the game over state so in order
49:07 - to do this let's create a new script on
49:08 - a new empty game object so reach set the
49:11 - transform that and let's call this one
49:13 - the game manager let's add a component
49:16 - called game manager hit create an ad
49:19 - there and let's open it up in Visual
49:22 - Studio there we go and we want to use
49:27 - none of these and not none of these and
49:32 - then we can have a public method in here
49:35 - called end game and um this is going to
49:40 - end the game so we're just going to
49:41 - write debug lock game over something
49:48 - like that
49:49 - and you could of course display what
49:50 - player has lost and stuff like that in a
49:52 - moment we'll reset the scene but I
49:54 - really encourage you to add some UI to
49:56 - let the user know what's really going on
49:58 - but for now we'll just throw a debug
50:00 - deadlock there and then we'll call this
50:02 - from inside of a snake so here we go if
50:05 - something hits us we'll go if collider
50:08 - tag is equal to and then we can go like
50:14 - killable or a death object or whatever
50:19 - so you want to add some kind of tag for
50:22 - all of the objects that could
50:23 - potentially kill the players so kills I
50:26 - don't know you can add whatever you want
50:29 - you could also have different tags so we
50:31 - could have something like a player tail
50:33 - and we could have something like a wall
50:36 - and have their happens different stuff
50:38 - if you collide it for now I'm just going
50:40 - to add a tag something like kills player
50:44 - and then if the object is tagged as
50:48 - kills player will then find our game
50:51 - manager by going game object dot find
50:55 - object of type game manager and again
50:58 - whenever we do this sort of stuff I
51:01 - encourage you to use a singleton pattern
51:03 - or
51:04 - some way that's a bit better because
51:06 - finding an object of a certain type is a
51:08 - very sloppy call and it is taxing on the
51:11 - computer so if you want to check out how
51:13 - to really do that you can check out one
51:15 - of the tutorial series so pretty much
51:16 - implement a single ton in all of them at
51:19 - least in the 2d platformer course and in
51:21 - the multiplayer FPS course it will
51:23 - definitely see me do that but maybe the
51:26 - 2d platformer of course is the best
51:28 - place to go if you want to see stuff a
51:30 - bit more advanced programming patterns
51:32 - and stuff like that so find game object
51:37 - of type game manager and then of course
51:39 - because we made this a public method we
51:41 - can then go in game and it's going to
51:43 - end the game right away awesome but one
51:45 - thing that we do want to happen because
51:47 - we might have a slight delay on when the
51:50 - game ends is to have the player who
51:52 - collided with the other player and of
51:55 - course now we need to tag them so let's
51:56 - find our player one and two tag their
51:59 - tails as new tag here and we'll create a
52:04 - new tag to the list cold and it was a
52:08 - kills player I believe oh I doubt myself
52:13 - there you go kills player and of course
52:15 - we need to go back in here and actually
52:16 - tag that there you go and now we can see
52:20 - that if we play and I run into one of
52:23 - the players too it just keeps going it
52:24 - says game over and then it just keeps
52:26 - going so on what we'll do is we'll just
52:29 - in here change our speed to zero and our
52:33 - rotation speed to zero as well so that
52:36 - will just make sure and I'm actually
52:38 - going to do this right above the other
52:40 - hole here no particular reason I just
52:43 - find it a bit clear to do the local
52:45 - stuff first and then go to other objects
52:47 - it's just an OCD thing really so now you
52:50 - can see that I can hit the guy here and
52:51 - he will stop moving and the other player
52:53 - will not stop moving so if we go in here
52:55 - and hit play the other guy will continue
52:58 - there you see awesome so on the player
53:02 - who dies is pacified and then we can go
53:04 - into a game manager and I want to add a
53:06 - slight delay and whenever we talk about
53:08 - waiting inside of a method adding some
53:10 - kind of delay what I'd like to use and
53:13 - what you should use is a kuroh team so
53:17 - we go up here
53:18 - import system dark collections generic
53:20 - not not generic just system dark
53:22 - collections and we go down here and
53:24 - create an i enumerator and this is the
53:27 - Kuro team and we call this the play end
53:32 - game animation and I'm not going to have
53:35 - any animation in here for now we're just
53:37 - going to wait I'm going to throw out a
53:39 - debug deadlock and then just wait I'd
53:41 - really encourage you to create some UI
53:44 - that comes on the screen says this
53:46 - player one persecutor play again or just
53:49 - plays again on whatever just let the
53:51 - user know what's going on but for now
53:53 - because this is of course a limited
53:55 - amount of time we have I also want to do
53:57 - the QA and we also have some walls I'm
53:59 - just going to write game over here and
54:03 - then we will wait a certain amount of
54:06 - seconds so we'll do yield return new
54:08 - waitforseconds and in here we will input
54:10 - the amount of seconds that we want to
54:12 - wait and our case we're just going to
54:14 - wait one second and then we can on
54:16 - transition or reload the scene so we can
54:19 - do using Unity engine dot scene
54:24 - management and down here we then go
54:27 - scene manager dot our load scene and the
54:31 - scene that we want to load is the
54:32 - currently loaded scene so we just want
54:34 - to reload that scene and we do that by
54:36 - getting the currently loaded scene by
54:38 - going scene manager dot active scene or
54:42 - get active scene there we go and then we
54:45 - want to use either the name or the build
54:47 - update in build index of that scene and
54:49 - I'm just going to use the build index
54:51 - there we go so if we write that out and
54:54 - hit play we should see that if one of
54:57 - our players dies it waits one second
55:00 - wait something is not working here and
55:02 - the reason why is of course we need to
55:04 - call this method so you can't just go
55:06 - like this because it's a Kuro teen
55:08 - instead we have to do start co-routine
55:10 - and then input the method and there we
55:13 - go close that off make sure you have the
55:15 - correct number of parentheses that
55:17 - should be four in total and then we can
55:19 - hit play and let's now see if this is
55:21 - working there we go game over and one
55:25 - second after it restarts so we have the
55:29 - very central logic in play so now it's
55:31 - as easy
55:31 - expanding the level we're just going to
55:33 - make some walls but you can really go
55:35 - crazy here and add all sorts of stuff
55:37 - and that the player should avoid or pick
55:40 - up and stuff like that and add some you
55:42 - eyes to let the you some UI to let the
55:45 - user know what's going on a menu a pause
55:47 - menu stuff like that and all of this
55:50 - stuff is something I show how to
55:51 - implement in other tutorials again if
55:53 - you find that this is the correct kind
55:55 - of level for you kind of level of
55:58 - difficulty I definitely suggest you
56:00 - check out the 2d platformer course a lot
56:02 - of the stuff that you see here will be
56:04 - repeated in there but with a lot new
56:07 - stuff as well and I'll show how to
56:10 - create menus and all that stuff that
56:12 - this game could definitely need after we
56:15 - finish up the livestream so just wanted
56:17 - to plug that I think hopefully I'm
56:19 - allowed to do that and without further
56:23 - ado let's just add the walls so I can
56:25 - get on to answering your questions um I
56:27 - think there's no reason to stop now
56:29 - we're so close so let's open up
56:32 - Photoshop and I'm going to use Photoshop
56:35 - you can use anything really doesn't
56:37 - matter you can use a white square and
56:39 - build it inside of unity you can search
56:42 - for this you can use skimp whatever I'm
56:44 - just going to be using Photoshop and I'm
56:46 - just going to create a new I don't even
56:49 - know what it is canvas or whatever a new
56:51 - file and we're going to call this on
56:53 - walls and the pixels here we'll just
56:56 - have it be 1080 by 1080 that's
56:59 - definitely too much but we'll just use
57:01 - that and double click that call it BG
57:04 - let's remove it let's now create a new
57:07 - square shape here drag from one corner
57:11 - to the other hit ctrl T just drag this
57:14 - to make sure that it snaps to the edges
57:17 - hit enter to apply that transformation
57:19 - let's and then instead of having this be
57:21 - filled out with white let's remove the
57:23 - fill and instead add a stroke so I'm
57:25 - just going to add a red stroke here so
57:27 - you can clearly see what's going on and
57:29 - I in fact i think this stroke might be
57:32 - pretty good
57:33 - excuse me so we can maybe make it a bit
57:37 - tinier something like 10 points I think
57:41 - it's going to be fine and let's make
57:43 - this completely white so that we can
57:45 - control the color inside of unity
57:47 - because whenever you have something
57:48 - totally wide it allows you to tend it
57:50 - into any color if you have something
57:52 - black you can't end it at all if you
57:54 - have something red it's difficult to
57:55 - tend it in opposite colors such as green
57:57 - it's just going to be a weird brown
57:59 - because of the way the colors are added
58:01 - together so whenever you want to change
58:03 - stuff inside of unity just make it white
58:05 - and you can do it inside of unity so
58:07 - let's now save this and I'm just going
58:09 - to save it directly in as a Photoshop
58:12 - file and that's going to work fine but
58:14 - you can also export to PNG not jpg
58:17 - because you want transparency here so
58:19 - let's go into projects and find our
58:22 - curvy replica assets and this is going
58:25 - to be a walls okay and there we go
58:32 - set the yoga and then we can find a wall
58:35 - subject down here and set our pixels per
58:38 - unit to something like 120 yeah so that
58:42 - is absolutely perfect we can maybe go
58:45 - 115 even yeah just make the map a tiny
58:50 - bit on larger and are not all we need to
58:53 - do inside of unit itself is select the
58:55 - walls object and add a polygon Collider
58:57 - to this and that just makes sure that
59:00 - unity will automatically fit a Collider
59:02 - onto that and we will make sure to tag
59:04 - it a skills player as well if you want
59:07 - to have the functionality where some
59:09 - player teleports from one end of the
59:13 - screen to the other so the player can
59:15 - really just go through the wall and will
59:17 - come out on the other side that's not
59:20 - something we're going to be doing today
59:21 - but that is definitely possible for what
59:23 - we are doing what I would then recommend
59:25 - is you having multiple line renderers
59:27 - and instantiating them in so that
59:30 - whenever you want a line renderer to end
59:33 - you just stop putting in more points in
59:36 - that one create a new one and then start
59:38 - putting points on the opposite side of
59:40 - the screen and you can of course just
59:41 - slap the position of the player over to
59:44 - the other screen but that is a bit more
59:47 - complicated and frankly would take some
59:49 - time to get working so it feels really
59:51 - nice so um today we're just going to
59:53 - make the walls kill the players and I
59:56 - think I think in fact that
59:59 - this is working now so one thing you
60:00 - will notice is that we can get multiple
60:02 - gay mobile screens here so you can get
60:04 - two ones and that's not something that
60:06 - we want so inside of Visual Studio let's
60:08 - just correct this by adding some kind of
60:11 - private boolean variable and by the way
60:15 - the reason why I write private here it's
60:17 - just a habit you don't have to do that
60:20 - you can just write bull this well I just
60:22 - like to be very explicit with what I'm
60:24 - doing and sometimes I do it in a
60:26 - tutorial even though I haven't done it
60:28 - any of the other places don't tell
60:31 - anyone
60:31 - there you go so private ball and we will
60:34 - call this one has ended start by setting
60:37 - that to false and then if the game ends
60:40 - here we'll say has ended equals true but
60:43 - we will only do this if we haven't ended
60:46 - so if has ended we just want to return
60:49 - out here there we go so that should make
60:52 - sure that we only end the game once so
60:54 - we play now and go in here you can see
60:57 - only one game over the other guy will
61:00 - stop moving as well but we only get one
61:02 - game over coal all right so that's
61:05 - pretty much all I wanted to show in the
61:08 - stream we made it through that's amazing
61:10 - so I think it's kind of time to invite
61:14 - Sophie Bob onto the screen come here and
61:18 - and we should test out the game since we
61:25 - are creating a two-player game say hi
61:28 - say hi all right let's try that again
61:32 - okay so this is the official one I just
61:34 - have to get the control thing you can
61:37 - see that's what happens when when I open
61:39 - a beer man make some space I forget
61:41 - everything yes
61:42 - no I'm not good no you can say Carl you
61:49 - can say whoops that works sure do want
61:52 - to do it what a wuss
61:54 - okay let's do this I'm gonna
61:55 - yeah again I'm orange she's sayin let's
61:58 - do it if you go one more time over
62:03 - I just say if this was acting in their
62:07 - powers and stuff I would definitely yeah
62:10 - you would kick my ass I know awesome
62:12 - thanks for playing
62:16 - so um I'll switch over to this UI you
62:19 - can keep sitting if you want you could
62:20 - you could also change over whatever
62:22 - suits you and we'll do some questions
62:24 - how about that so first of all cheers
62:28 - everyone it's beer thank you yes pretty
62:35 - good so that when will um yeah so come
62:41 - with all of your questions personal
62:43 - questions or about the project or
62:45 - whatever and we'll figure something out
62:48 - let's see here let me see so much stuff
62:55 - here ah I'm just scrolling through to
63:03 - find is there big difference between
63:04 - c-sharp and C++
63:06 - yes that's kind of a big difference in
63:09 - at the same time that's not um they're
63:10 - both object-oriented programming
63:12 - languages they're both both ARM based on
63:16 - C so that makes them very similar but
63:19 - C++ needs you to do a lot of stuff that
63:22 - c-sharp doesn't that also allows you to
63:24 - do stuff that c-sharp does not but it
63:27 - you definitely need to be more careful
63:29 - with doing stuff like mimic memory
63:32 - management that's something that c-sharp
63:35 - does on its own on the garbage collector
63:37 - you have to be careful with that stuff
63:38 - on single spot so you get a memory leak
63:42 - and by no means that C means the C++
63:45 - expert but in average you have to write
63:48 - more code to get the same features
63:51 - working do I know any Swedish no I do
63:54 - definitely not know any Swedish I suck
63:57 - at Swedish and it's funny because people
64:00 - always expect like Danes and Swedes to
64:02 - understand each other but every time a
64:05 - sweet ovince it smells like Oh like what
64:08 - I can redo English or something yeah
64:13 - yeah it's the fiercest I'm the only one
64:15 - who doesn't but alright why would your
64:21 - colors of the lines be grey even though
64:23 - you've set the color so I'm just going
64:25 - to switch into unity here and there are
64:27 - a few things that could allow that to
64:29 - happen one thing is if you have set the
64:32 - gradient wrong here make sure to delete
64:34 - both ends here so that you only have a
64:37 - single one and make sure to set the
64:39 - color on that make sure to also have the
64:42 - opacity the Alpha here set completely
64:45 - all the way up to 255 and finally on
64:48 - your material here the material you add
64:50 - up here make sure that's only one and
64:52 - that the shader on that material is set
64:55 - to sprites default with a tint of
64:57 - completely white there you go those are
65:00 - all the things that I can kind of think
65:02 - of that could go wrong and what about
65:05 - German I had a little bit of German in
65:07 - school but I was embarrassingly bad so I
65:11 - am NOT going to speak anymore German I'm
65:14 - sorry I am Danish yes
65:19 - you're also Danish but live in France
65:21 - that's cool I've never lived in France
65:25 - I've been to France that was fun
65:27 - where can I start learning to create 2d
65:29 - sprites environments players NPCs I'm
65:32 - really new a noob when it comes to game
65:34 - design alright so if you want to do like
65:37 - 2d graphics it's really I know this is
65:41 - annoying to say but 2d graphics is one
65:43 - of those things that are pretty easy to
65:46 - get the basic stuff you don't need many
65:48 - tools to get started but you need so
65:50 - much practice when it comes to like
65:52 - making things beautiful because it's
65:54 - such an artistic platform and it's
65:56 - frankly one with some very simple tools
65:58 - I mean it's just a pen instead of using
66:02 - a paper and pen and paper you're just
66:03 - using your mouse there's really not much
66:07 - of a barrier there between what you want
66:09 - to do and what comes on the screen but
66:12 - it would definitely recommend just
66:14 - practicing a lot I would recommend maybe
66:16 - if you're just starting out to do some
66:18 - pixel graphics pixel art can be a bit
66:20 - less frightening because
66:22 - you don't have to know as many
66:23 - techniques you just have to kind of fill
66:25 - in the holes actually they have a acid
66:28 - store package called UPA toolkit where
66:29 - you can download that and you can do
66:33 - pixel graphics inside of unity but you
66:35 - could also use some internet tool or
66:38 - Photoshop or if you're just
66:40 - starting out I like Photoshop a lot but
66:43 - if that is kind of with not within your
66:44 - price range is just fine I would
66:47 - recommend not watching some basic
66:49 - tutorials and then just get going try
66:51 - and create something and very quickly
66:52 - import it into your game and try and see
66:55 - if it works because making something
66:56 - look good is not necessarily the same as
66:58 - making it look good once it's in the
67:00 - game so that's kind of all I got
67:02 - I'm by no means a grade 2d artist um
67:08 - awesome so uh yeah do pix a lot if
67:12 - you're a beginner I totally agree that's
67:14 - a great place to start but it really
67:16 - depends on what you want to do I don't
67:17 - think that's like one thing to do um
67:22 - what was my first game and first
67:25 - language oh that's that's a hard one to
67:29 - remember I'll have a sip yeah think so
67:35 - so actually my entire I've been making
67:39 - games and I'm doing stuff on the
67:43 - computer since I was little so one of
67:46 - the very first things that I did I
67:48 - believe that was in Visual Basic and it
67:53 - was so old and so bad that I don't even
67:55 - want to talk about it then I begin to
67:57 - use the blender engine quite a bit once
68:00 - it was very young and I used it to
68:05 - actually actually use the internal
68:06 - engine to do a very simple a cube game
68:09 - where you would avoid some cubes and
68:11 - other cubes would fall onto you and it
68:14 - was kind of fun but sucked and then I
68:18 - transitioned over to unity because I
68:19 - wanted to do a game called your game and
68:22 - the idea was it was going to be an iOS
68:25 - and iPad application I don't initially
68:28 - an iOS application because the iPad
68:30 - wasn't fully announced at the time and
68:33 - what I wanted to do was just have the
68:36 - player be able to create small levels
68:38 - inside of the app and have them
68:40 - experience what it's like to be a
68:41 - developer but like with a very small
68:44 - entry barrier and very small learning
68:47 - curve and that's why I started to use
68:51 - unity actually and that's also why I
68:54 - started the brackish channel is because
68:56 - I thought well I have no way as a
68:59 - totally young developer to get this out
69:01 - into the world and let people see um
69:03 - what's it all what it's all about so I
69:06 - started the tutorial channel kind of to
69:08 - get people to recognize the name of
69:11 - Brett keys and to pimp out the game and
69:13 - then I the game didn't turn out too well
69:16 - and I thought that during tutorials was
69:19 - really fun and so I just transitioned
69:21 - over to doing that and exclusively that
69:23 - um but of course I've made the game
69:25 - since but that has always been my main
69:28 - focus since then and that's I don't know
69:30 - five six years ago all right so what
69:36 - software do I use that's an extremely
69:39 - vague question I use so much software um
69:43 - I used unity I use Visual Studio I use
69:48 - Photoshop Adobe Audition Adobe Premiere
69:51 - okay I'm going to say what I actually
69:53 - use them for Photoshop for 2d artwork
69:56 - some vector graphics illustrator for
69:58 - only vector graphics Adobe Audition for
70:01 - recording some sound OBS for recording
70:03 - everything like now and for streaming
70:06 - and stuff like that I use Premiere Pro
70:07 - for editing After Effects for editing
70:09 - more advanced stuff if you want effects
70:11 - and stuff like that and I can't remember
70:15 - all of the other ones I use source tree
70:17 - for syncing stuff through github and a
70:20 - variety of other programs I'm really a
70:23 - software nerd right so let me see here
70:28 - will you continue the survival game
70:30 - series so the survival game series is
70:33 - currently in a kind of annoying State
70:35 - and I will have a sip of the beer here
70:39 - the survival game is currently in a kind
70:42 - of annoying state because um I feel that
70:46 - I didn't finish it I didn't write round
70:48 - off the series probably
70:50 - but I also got to a point where I didn't
70:51 - have too much fun making the videos
70:53 - because I wanted to start other projects
70:55 - and people were really asking for a lot
70:57 - other stuff and not so much for more
71:01 - videos on the series and so I stopped
71:04 - with the intention of returning to it
71:06 - for a while
71:07 - and now it's just gotten to the point
71:09 - where those videos are so outdated and
71:11 - so many of them are created at a time
71:14 - where I didn't have as much as
71:16 - experience as I as I do now and whenever
71:19 - you kind of evolve a certain develop
71:22 - brand as a video maker you look back at
71:24 - old works and think what was I doing and
71:27 - I think that all the time when I look at
71:29 - that series so it's kind of when people
71:31 - ask me about it I just do this I just
71:33 - turn away I didn't hear that
71:36 - don't tell anyone so yeah but what I
71:42 - want to do is I definitely want to
71:43 - address it at some point I would like to
71:46 - do that but I don't think that I'm going
71:48 - to return and spit out more videos
71:50 - because they're just so old and I would
71:52 - have to redo the entire series if you
71:54 - like to make it something that I was
71:56 - really proud of but if a ton of people
71:58 - request me to of course I'm going to do
72:00 - that so it's really on you guys to
72:02 - request it but it's really not what I
72:05 - feel like people want to see right now
72:07 - so it's all on you so how to start in 3d
72:12 - design alright so 3d design is something
72:16 - that I'm really not good at so just for
72:19 - the disclaimer in there I've used a
72:21 - bunch of different software whenever it
72:23 - comes to 3d because I'm so bad I always
72:25 - thought well the software has got to be
72:28 - the problem
72:29 - and it never was I've used cheetah 3d
72:33 - I've used a blender I've used Maya
72:37 - 3dsmax Mudbox ZBrush I even used what
72:44 - was it called wings 3d I knew a guy I
72:47 - know a guy who is really fun of that
72:49 - software even though it's kind of wonky
72:52 - um and I've never used sketchup but a
72:55 - lot of people are really like that and
72:57 - so what I would recommend is just
72:59 - picking up some software have a video
73:01 - called what modeling software to choose
73:03 - something like that it's on the channel
73:05 - just search for modeling software
73:06 - picking up one of those and just keep at
73:09 - it I think becoming really good and in
73:11 - one of those programs is some is one of
73:13 - the best things that you can do so just
73:15 - pick one stick to it and again practice
73:18 - a lot find some basic tutorials on it
73:20 - and and just go from there
73:21 - and as always whenever you want to do 3d
73:24 - modeling stuff like that just as with
73:26 - the 2d try and put it into your project
73:29 - try and integrate it into some kind of
73:31 - production pipeline to use a fancy term
73:34 - because if you're just creating the
73:36 - models for yourself you're going to be
73:38 - disappointed when it doesn't work when
73:40 - you want to build a game so just try and
73:42 - and and bring things into unity and play
73:44 - around with them and you're going to
73:45 - have a lot of fun alright so let's see
73:49 - what else do we have here um please
73:52 - continue the survival game series all
73:54 - right I have noted your request why did
73:58 - you choose unity are not Unreal Engine
74:00 - have you ever thought about switching to
74:01 - unreal after it became free I've never
74:04 - thought about like switching to unreal
74:07 - I mean um the thing about game engines
74:09 - is and really any technology when it
74:12 - comes to power in your game or it comes
74:14 - to making good assets or whatever it's
74:17 - all about choosing what you find suits
74:20 - your projects so um what you want to use
74:23 - what software you want to use is a
74:26 - question of what do you know and what
74:28 - are you able to learn and what suits
74:31 - your project it should never be about
74:33 - what software is just superior to the
74:37 - other quiz or a period it should always
74:40 - be a matter of what do you want to
74:43 - achieve with your project what are your
74:44 - requirements how large is your team so
74:47 - if I was in a team of maybe five to ten
74:50 - people more towards ten I would
74:53 - definitely pick up unreal and I would
74:55 - play around with it of course depends on
74:57 - what I wanted to make if I wanted to
74:58 - make a 2-d game put it on mobile I would
75:01 - not use unreal if I wanted to create the
75:03 - next Unreal Tournament I would probably
75:05 - use unreal so it really depends on what
75:08 - you're going to do with it I think
75:10 - learning both is a great idea and I
75:12 - might do some unreal tutorials at some
75:13 - point but I really think that my target
75:15 - is primarily new
75:17 - developers and developers who aren't
75:18 - necessarily part of a larger team and I
75:21 - think in general that unity is better
75:23 - suited for those kind of people so that
75:26 - is why that I have such a love towards
75:28 - unity and so many other smaller reasons
75:30 - as well but really choose what you want
75:34 - to use and what suits your project while
75:37 - I'm rambling more more beer you'll join
75:43 - my team really appreciated I will get in
75:48 - touch if I decide to create one what are
75:51 - the settings on the Colitis I'm just
75:53 - going to show you that really quickly
75:55 - let's jump in here so here's the tale
75:58 - and the settings are the same edge
76:00 - Collider huge just a trigger nothing in
76:02 - here that's going to be set through the
76:04 - script and the player here or the snake
76:07 - has a circle Collider also a trigger and
76:09 - that it has a rigidbody of type
76:11 - kinematics so those are the collider
76:14 - settings the gorgeous demo unity made
76:19 - was in the current unit version yes that
76:21 - is correct and it was freaking awesome I
76:24 - really liked that I hosted it on my
76:26 - channel as well so that was fun they
76:29 - reached out to me and said hey do you
76:30 - want to show this and I was like show me
76:32 - the demo when I just thought it was
76:34 - amazing so of course I wanted to show it
76:37 - can we have a video on changing weapons
76:39 - and changing maps on your FPS series
76:41 - also the ability for people to add their
76:43 - own maps would be cool like make it
76:46 - mountable a multi is not on a part of
76:51 - the scope of that tutorial at least not
76:53 - yet I think that's kind of without the
76:56 - reach of the tutorial at least for now
76:59 - but I think the other requests could be
77:02 - really fun whenever it comes to like
77:04 - adding the ability to create different
77:07 - Maps well you have to make more maps and
77:09 - frankly I spent so long getting the
77:12 - arena to look just right and seeing how
77:16 - we could easily implement it in like an
77:18 - hour-long video and still have a really
77:20 - cool-looking level and the whole model
77:23 - was created by Simeon Ivan awesome guy
77:25 - you can check him out
77:26 - and it just it took him so long so I
77:28 - don't think necessarily that we
77:30 - going to be creating a second map but I
77:33 - might add some functionality for it and
77:35 - I might do some weapon switching I
77:36 - definitely want to have a look at some
77:38 - new exciting mechanic that we can add to
77:41 - the this series because I think the last
77:43 - one was bug fixing and we've been so
77:45 - caught up in the whole login account
77:47 - civilized data serialization system we
77:50 - need some more exciting features on that
77:52 - but I haven't totally planned out what
77:55 - yet but you very welcome to suggestive
78:02 - this has become the game of spaniel
78:04 - Christian so it's answered I'm sorry
78:06 - about that I will I'm doing my best here
78:14 - how would you recommend how would I
78:17 - recommend to learn code much practice
78:19 - tutorials um
78:20 - decide to make a game and learn the code
78:22 - needed to do that or look at everything
78:25 - in the code language and play around
78:28 - with each function individually
78:29 - definitely not the last one I always
78:32 - think that the best way to learn
78:33 - anything is having an idea of what you
78:36 - want to do with it because I think it's
78:38 - so hard to learn anything out of context
78:40 - and frankly it's it's a problem with the
78:42 - way that a lot of stuff is taught my
78:45 - main problem with going to school was
78:48 - that everything was taught in a way that
78:50 - um it was so hard to understand the
78:54 - concepts or at least many students felt
78:57 - that because um they were never really
78:59 - applied to something useful I mean some
79:02 - of the knowledge that you get in school
79:04 - is amazing some of the stuff that you
79:06 - learn is it's really really great to
79:08 - know but a lot of times especially in
79:12 - mathematics it never gets applied I mean
79:14 - I learned about vectors I learned about
79:16 - different types of functions and if I
79:19 - hadn't done game development on the side
79:22 - I would have never understood that kind
79:24 - of stuff because you have to show in
79:26 - context what it does and why it's useful
79:29 - and that's why I think working in this
79:31 - project oriented way that kind of allows
79:34 - you to have a look at where you are and
79:37 - where you want to go and take a look at
79:38 - all the stuff that can get you there and
79:41 - exploring wow that's super awesome
79:44 - so great for my project Jesus vector
79:47 - graphics are awesome because they can do
79:48 - with this and that and that that is
79:51 - really really useful for a lot of people
79:53 - of course everyone learns differently
79:54 - but at least from my experience that is
79:57 - what gets on or is is the biggest
80:00 - motivator for keeping added because you
80:02 - can always have a look at how what is
80:05 - the best way to learn something but I
80:06 - think the best way to learn something is
80:08 - just not to give up and just to keep
80:10 - going at it and therefore it is to do
80:13 - what you think is fun so just find some
80:15 - project that you think this would be so
80:17 - cool this is what the world needs even
80:19 - if it's in the next Call of Duty just
80:22 - try it out and have fun with it
80:24 - of course I tend to recommend that you
80:27 - stick with some smaller probe programs
80:30 - in the beginning because it will make it
80:32 - easy on yourself to finish something and
80:33 - see the whole production process but if
80:36 - if the next Call of Duty is what you
80:38 - want to make just get started
80:40 - so am I using a green screen or am i in
80:44 - a black hole that is a very good
80:48 - question
80:49 - neither this is not a green screen this
80:51 - is in fact a black screen here so you
80:53 - can see black black fabric no if I can
80:56 - show you this it's very black and I
80:59 - compress the colors a little bit to make
81:00 - it to make it impossible to see all the
81:03 - wrinkles in the class and stuff like
81:04 - that but I baited on using a green
81:07 - screen but I think it looks not too good
81:10 - sometimes so I really like this and yeah
81:13 - if you want to have a look around my
81:15 - apartment and see some of the gear that
81:17 - I'm using because some people are asking
81:18 - about that I just uploaded like
81:20 - yesterday a setup video showing all of
81:23 - that stuff so you can check that out now
81:25 - on the channel and this is another time
81:28 - to do a patreon plug so it's there so if
81:31 - you want to support the channel and like
81:33 - this stuff and want to see more live
81:35 - streams and more videos go to
81:36 - patreon.com slash Blackie's you can
81:39 - donate a monthly amount of your choosing
81:42 - and get some rewards in return and it
81:46 - just helps out so much and thank you so
81:47 - much to all the people who are already
81:48 - on donating and look who is joining in
81:51 - again oh say hi this one's called
81:53 - charlie so charlie say hi to the stream
81:56 - isn't it cute he's very
81:57 - tired look I will put him down to rest
82:01 - alright um I made a text-based Pokemon
82:07 - game in Java that's awesome like that
82:10 - could be really fun make sure to share
82:13 - that on the forum or something would you
82:15 - do programming challenge type of videos
82:17 - that could actually be really fun but
82:19 - I'm also really afraid of the
82:20 - embarrassment so I definitely want to do
82:23 - more on game dev contests like the
82:27 - Damned re definitely want to participate
82:29 - in the next one of those but um with the
82:33 - programming challenge maybe maybe not so
82:37 - we've been live for one and a half hour
82:39 - so I think it's pretty much time to
82:42 - close this soon it's been so much fun
82:44 - I'm gonna get some more beer before we
82:47 - stop and come with the last questions
82:49 - here we'll go 5 or 10 more minutes
82:56 - at what game development company would
82:58 - I'd like to work not not not really in
83:02 - any of them I would like to keep doing
83:07 - this I think this is so much fun and if
83:09 - I were to do a game I definitely wanted
83:11 - to do it independently with a team that
83:15 - I assemble always some guys that I hang
83:18 - out with and we could have fun doing it
83:19 - I don't want to become part of any lie
83:23 - to your company though that's not really
83:26 - my thing I like this it gives a lot of
83:29 - creative freedom and the interaction
83:31 - with you guys is amazing so I think it's
83:33 - a lot of fun I love my videos thank you
83:37 - that's very kind would I ever do a video
83:40 - about integrating iOS and Android
83:41 - specific features to a game example
83:45 - Google Play services etc there are
83:47 - official guidelines or guides out there
83:50 - but you make it so much easier oh thanks
83:53 - yeah I think integrating some mobile
83:56 - stuff could definitely be a lot of fun
83:58 - but I haven't had too many requests
84:00 - especially as of late I think maybe the
84:03 - whole mobile app trend has worn out a
84:05 - little bit but um if enough people
84:08 - suggested I would definitely do that
84:12 - would I ever do a racing game I actually
84:14 - really want to do racing game I don't
84:16 - know what it is I had someone suggested
84:19 - in the comments here recently and read
84:20 - over it and I was like that could be so
84:23 - much fun so I might do that in the
84:26 - future
84:26 - well whenever I decide to create a new
84:28 - series but we'll see again it totally
84:31 - depends I'm really pretty much willing
84:34 - to do anything um it didn't sound good
84:37 - I'm not that cheap I'm pretty much
84:40 - willing to do any kind of tutorial as
84:43 - long as enough people are suggesting it
84:45 - and it's it's what you really want to
84:46 - see I definitely hope to do a poll for
84:50 - the next video that I decide to do on to
84:53 - kind of let you guys or to kind of
84:56 - involve you guys in the process so
84:58 - that's what I'll do here so I brought up
85:00 - the chat on the other screen here and
85:02 - that makes things a lot easier
85:03 - what about RTS RTS games are really fun
85:08 - and they're super fun to program as well
85:11 - because there are just so many data
85:12 - structures and different elements to an
85:15 - idee RTS that people normally don't
85:17 - think about just something like
85:21 - selecting a bunch of units and moving
85:24 - them around and all of the AI involved
85:26 - in that is actually a lot of work so I
85:30 - think it could be super fun to do but it
85:32 - also might be too much to take on for a
85:35 - tutorial series or at least it would be
85:38 - have I have to be in the advanced
85:39 - category and I haven't done too many of
85:41 - those I mean the multiplayer FPS is one
85:43 - but I don't want to have multiple
85:45 - advanced video series going at once
85:47 - because that's just too much work for me
85:49 - and will cut out some of the cut off
85:51 - some of the beginners to intermediate so
85:53 - and I might do that at some point but it
85:55 - is a difficult one so yeah and that was
85:58 - an RTS so they're they're really hard to
86:01 - do could I do a tutorial on a flight
86:05 - simulator like one already existing or
86:09 - like creating one I have a good friend
86:12 - of mine is totally into flight Sims I
86:14 - had to I would have to ask him for
86:16 - advice I don't think I know enough about
86:20 - airplanes and frankly not even physics
86:23 - to do
86:24 - do that because Jesus some of those are
86:26 - realistic and you also want to load in
86:29 - huge maps and stuff like that that would
86:31 - be really advanced I don't think I would
86:34 - go into that mostly because this is the
86:36 - first time I've ever heard anyone
86:37 - suggested so yeah um awesome could I
86:46 - explain how to do a curved bullet trail
86:48 - please I'll stop spamming that by the
86:50 - way something as railgun trail from
86:53 - quake 3 I can't really remember what it
86:56 - is exactly you're referring to but if
86:59 - whenever you want to do like a curved
87:01 - trail you can just have it rotate around
87:03 - some axis that you decide on and that
87:06 - should curve the bullet so I hope I
87:09 - couldn't see that being too hard I mean
87:12 - you have just seen how to create lines
87:13 - in space and you can also just use the
87:16 - trail renderer attached to some empty
87:17 - object and move that around that would
87:19 - look just fine as well so yeah um I
87:23 - could do a MOBA game series or MMORPG
87:26 - again really difficult games to create
87:28 - especially the MMO part that stands for
87:31 - massive multiplayer online game you can
87:36 - even hear it in the in this in the sound
87:38 - of the title right so that is a really
87:40 - scary thing to create and um it's
87:43 - probably not something that I'm going to
87:45 - create I could create an RPG that's
87:47 - already a lot of data and a lot of code
87:50 - but an MMORPG is just not possible for a
87:54 - single person MOBA games are really fun
87:57 - but also are really content heavy so
88:02 - yeah these are really advanced topics
88:05 - can you tell me with which tutorial I
88:07 - should start if I want to learn
88:09 - programming if you if you mean my
88:12 - tutorials I have one called make a game
88:15 - that is a unity tutorial with some Java
88:18 - scripting in unity JavaScript is fairly
88:21 - easy to pick up you can check that out
88:22 - if you want to start making a game if
88:24 - you are
88:25 - more specifically geared towards just
88:28 - programming and want to start with say
88:29 - c-sharp I have a video called how to
88:31 - program in c-sharp that goes from the
88:33 - very beginning of like explaining stuff
88:35 - like variables how to write
88:38 - things in the console onto functions
88:40 - onto classes and data structures onto
88:42 - lists and arrays and stuff like that and
88:44 - then more advanced topics but that's
88:48 - that's what you could do you could also
88:50 - put up pick up a book if you want to
88:52 - read about it but really there's so much
88:55 - out there it really depends on what you
88:56 - want to do will upload this stream to
89:01 - YouTube yes I will I will make sure to
89:03 - do that hopefully tomorrow and
89:06 - text-based adventure that could be
89:08 - really exciting I've actually wanted to
89:10 - do some text-based stuff for a while as
89:11 - well so if not if not if enough people
89:15 - suggest that I will get right on that
89:21 - mmm a football soccer game I've never um
89:28 - I've never played too many of those and
89:30 - it's always difficult playing or
89:32 - creating games that you haven't played
89:33 - but if could of course pick one up and
89:35 - and try it out play some FIFA that's
89:39 - pretty much the only football game that
89:41 - I know that's shows out and I don't even
89:43 - know how many versions of that game it's
89:46 - probably like 12 or something soli keen
89:51 - for a text-based adventure more
89:52 - text-based adventure yes please alright
89:55 - so that's exciting I think that could be
89:57 - really fun text-based
89:59 - RPG yeah that could be really fun as
90:01 - well I mean text-based stuff is easy and
90:05 - some and also hard because you're
90:08 - limiting yourself so much and some of
90:10 - the technology then becomes really easy
90:12 - to do but I mean creating an interesting
90:15 - game in text is really hard so I would
90:18 - have to play a lot of those games to
90:20 - kind of be sharp on what to do and some
90:23 - of the tricks there but that could be
90:24 - really fun alright so I'm I'm I'm
90:27 - moments away from rounding up the stream
90:30 - here I've had so much fun guys this is
90:33 - really last questions right now and
90:36 - we're going to stop the stream here
90:39 - because my voice voice is just getting
90:42 - absolutely slaughtered I don't
90:45 - understand streamers who can just go
90:46 - eight hours straight that's so
90:49 - impressive if you want to see program
90:51 - livestreams you can go to cool 18 as
90:53 - well he does some pretty crazy coding
90:56 - marathon sometimes it's my financial
91:05 - situation difficult I wouldn't say it's
91:07 - difficult I'm definitely not panicking
91:10 - about it but it's not it's not like I'm
91:13 - making a lot of money off of youtube I
91:15 - mean my primary reason for creating a
91:18 - patreon is because it just helps me get
91:20 - over the edge on to being able to
91:23 - support myself and and live a normal
91:27 - life while doing this and it's so
91:29 - essential I mean without the patreon
91:31 - that would be really difficult so I'm
91:33 - really really thankful for that and also
91:37 - sophia has a job of course so she chips
91:39 - in um but no I wouldn't call it
91:42 - difficult but definitely not
91:45 - overwhelming maybe I wanna go into game
91:49 - development as well and yeah maybe you
91:50 - could talk about your experience um how
91:53 - did how did oh how did my financial
91:56 - situation look before or my life look
92:00 - before YouTube um YouTube is awesome
92:04 - I'm having a lot of fun doing this I
92:07 - think it's awesome that that you guys
92:09 - are enjoying it as well and being a game
92:11 - developer is is a lot of fun it's it's a
92:14 - really creative process so if you
92:16 - enjoyed this that stuff you're going to
92:18 - love it
92:19 - but you definitely have to show there's
92:22 - a lot of responsibilities especially if
92:24 - you're taking responsibility for a team
92:26 - and then that's a lot of mouths to feed
92:28 - and expectations to meet so be careful
92:31 - with not shouldering too much and having
92:33 - too great expectations because there are
92:35 - a lot of game developers and it can of
92:38 - course be very very difficult to get
92:40 - your game out there you have to build up
92:41 - several games more most developers have
92:44 - to build up several games in order to be
92:46 - able to support themselves and only rare
92:49 - occasions you can do that with only one
92:51 - game I could have a competition where
92:57 - you can send in gonna map models and
92:58 - then just use them
93:00 - that's definitely correct I could do
93:02 - that so far I haven't
93:04 - involved in the artistic process of that
93:07 - series that might be something that I
93:08 - want to do but for now I really have
93:10 - some other stuff in mind but that that
93:13 - is definitely an option could be a lot
93:15 - of fun
93:17 - why don't I stream on YouTube that's a
93:18 - good question I just really liked which
93:20 - I think some of the stuff that which
93:22 - offers is awesome
93:24 - I might streaming on YouTube in the
93:27 - future if that's something you would
93:28 - rather see but definitely just really
93:31 - liking twitch so far everything has
93:33 - worked so smoothly and oh yeah so press
93:36 - the subscribe or follow or you don't
93:39 - even remember the one that isn't paid
93:42 - down below if you want to see more on
93:44 - Twitch let's hear will I ever make a
93:49 - shader tutorial that's possible but I
93:50 - think the requirement for shade of
93:53 - programming went down a lot with the
93:54 - standard shader just because it's so
93:56 - good and it does so much but definitely
93:59 - a lot of stuff still requires some
94:00 - shaded programming so that is something
94:02 - that I could do as soon but that there
94:04 - are awesome shaded programming tutorials
94:06 - out there just search for it on Google
94:07 - especially the text-based ones are
94:10 - really good
94:11 - do I ever answer 24 programming 24 hour
94:14 - programming competitions I did Ludum
94:16 - dare a that's not 24 that's 48 and I
94:19 - also hosted one myself called ten hour
94:21 - games that's a while back now if anyone
94:23 - in in here participated I'll say that in
94:26 - the chat it was just so much fun but
94:29 - never exactly 24 hours what do I think
94:32 - about Pokemon have I played it I've
94:34 - played a lot of Pokemon games program is
94:35 - awesome a lot of fun
94:37 - and the new one the great big
94:40 - programming game was also a lot of fun
94:43 - but just such a mess code-wise like it
94:47 - was so buggy and yeah that's so much
94:52 - stuff that they could have done to to
94:54 - make that better it's crazy what's next
94:59 - for the FPS series we just talked about
95:00 - that and some new feature very loose
95:03 - answer um since you like programming
95:06 - games what are the games do you play um
95:08 - I actually play a variety of games but I
95:12 - don't have time to play that much
95:14 - actually it's been I think it's been
95:17 - like a month
95:18 - since I last picked up a game and just
95:19 - played but I've played a lot of the big
95:23 - franchises I was such a Call of Duty
95:25 - junkie when I was younger like 600 hours
95:28 - in that game I've played a lot of
95:30 - counter-strike in general multiplayer
95:32 - games is what I've dedicated most time
95:35 - to because I really like gaming as a
95:37 - social experience and I've also played a
95:41 - bunch of other games some of the
95:44 - single-player games that I've enjoyed
95:46 - while half-life and portal for example
95:48 - and Skyrim is awesome and some other
95:53 - games I really like Ratchet and Clank
95:54 - and stuff so I've I've played a lot of
95:56 - different games an amazing indie game
95:58 - that you could check out that I recently
95:59 - played as Thomas was alone I was really
96:02 - late on playing that but that's just an
96:04 - amazing experience so you could check
96:05 - that out well they do a draw my life
96:07 - video that would be so much fun I think
96:09 - that trend is kind of over but that
96:12 - would be so much fun to do I will
96:14 - definitely do something more personal on
96:16 - the channel so it's not just in these
96:18 - live streams maybe a full Q&A video
96:21 - could be fun where I kind of pick out
96:22 - the best ones and answer them hopefully
96:24 - a bit better than I do here um yeah and
96:28 - I think that is all guys so I think
96:34 - we're going to stop it here I hope that
96:38 - you enjoyed the stream as much as I did
96:40 - I don't think that's possible I had so
96:42 - much fun you guys are awesome thanks for
96:44 - supporting and for being here I just had
96:47 - so much fun doing it and um yeah so if
96:51 - you want to see more subscribe on
96:53 - youtube that's their youtube.com slash
96:56 - break ease if you have any questions
96:58 - about today go and post questions on the
97:01 - forum if you want to see more if this
97:03 - stuff go to the patreon page where you
97:05 - can support again that's
97:06 - patreon.com/lenguin
97:22 - thank you so much
97:24 - let's see you bye thank you so much to
97:26 - all of the awesome patreon supporters
97:28 - who donated in August and the special
97:30 - thanks to our own meta
97:31 - Robert rose James Calhoun vixen P and
97:34 - Andrew K