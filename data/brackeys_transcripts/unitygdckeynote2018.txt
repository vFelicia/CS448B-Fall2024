03:28 - up here on the screen behind me
03:30 - democratization solving hard problems in
03:33 - enabling success but there's a
03:35 - philosophy that lives behind these and
03:39 - the first point is we do fundamentally
03:42 - believe the world is a better place with
03:46 - more creators in it now we love
03:48 - consumers we love gamers and you know
03:51 - there's three billion of them out there
03:53 - that's fantastic but our heart beats to
03:57 - the rhythm of the developer we're really
03:59 - on their side and we know how hard it is
04:03 - to be a developer the investment in time
04:06 - and Genuity and craft that goes into
04:08 - making a great game and we know the odds
04:11 - are stacked against the developer it's
04:14 - hard to create a great game there's huge
04:16 - competition and the platform companies
04:19 - don't make it easy they don't make it
04:20 - easy for discovery for distribution any
04:22 - of it and we think our place in the
04:25 - world is to stand with and for
04:28 - developers think of us is an 800 person
04:32 - technology team engine development team
04:34 - it's your engine development team that's
04:37 - here to make sure that you can get to
04:40 - each platinum quickly easily with
04:42 - leading-edge technology we're a business
04:45 - team buts here to enable your better
04:47 - revenue and your better outcomes so you
04:49 - can focus on the content on the game
04:51 - mechanics and the player experience now
04:55 - we're not focused at unity on making
04:58 - games we're here to solve the hard
05:00 - problem so you can make the games we sit
05:03 - at the center of an ecosystem and as I
05:06 - said we're proud to stand with you and
05:08 - for you in the world that we all want
05:11 - the sea come together so I want to bring
05:14 - it back to you now the developer and
05:16 - show a little bit of the amazing impact
05:18 - you've had in 2017 why don't we roll the
05:21 - video okay now
05:27 - [Music]
05:53 - [Music]
05:59 - [Music]
06:17 - [Music]
06:26 - for everybody over here I promise the
06:29 - video worked on this side of the room to
06:31 - earlier today but I guess I'm a CEO and
06:34 - I thought I needed like my own private
06:36 - stage space you know how those egos get
06:39 - going but now think about this sixty
06:44 - nine percent of the games in products
06:47 - built in the world were built by you the
06:49 - unity developer seventy four percent of
06:51 - everything made for a CTF HTC vive 87
06:55 - percent of everything for gear and 91
06:58 - percent of everything for the hololens
07:01 - that's absolutely unbelievable and
07:04 - perhaps the most unbelievable of all is
07:06 - that half more than half actually of all
07:10 - the mobile games built in the world were
07:12 - built by you the Unity developer I mean
07:15 - that's freaking amazing now now we live
07:23 - at a time when there's all sorts of
07:25 - theories about what creates employment
07:27 - and my answer is it's you and here's a
07:30 - really interesting slide and some data
07:32 - that I I hadn't expected and wasn't
07:34 - really looking for but this is LinkedIn
07:37 - all the job search all over the world
07:40 - they rank each of the jobs in terms of
07:42 - what is the most prevalent and the
07:44 - second most common search and the third
07:45 - most comments are what people are
07:47 - looking for and of course there's a lot
07:49 - of tech jobs we're in the middle of a
07:50 - technology revolution of biblical
07:52 - proportions but look at it I mean you'd
07:54 - expect it I mean machine learning
07:55 - engineering is hot and data sciences or
07:57 - hot Salus development you know folks are
07:59 - hot but what do you notice about
08:00 - position number seven it's the only
08:04 - entry in the top ten that has a
08:07 - company's name associated with it the
08:09 - others are broad descriptions this is a
08:11 - very specific description and it shows
08:14 - that you the Unity developer are hiring
08:16 - like crazy and it shows the Unity
08:18 - developer actually probably the best
08:20 - solve for the world's economic woes of
08:22 - anything that's out there so with that
08:24 - grand thought that you're solving the
08:26 - world's economic woes I'd like to shift
08:29 - gears for a moment and turn to what we'd
08:32 - like to talk to you about tonight
08:34 - now you're gonna hear from all most of
08:36 - the people you saw in that video but
08:38 - you're gonna hear from the best and
08:39 - brightest that unity
08:40 - you'll hear from Brett and Isabel you
08:44 - know what's going on in 2018 Brett's
08:45 - kind of taken through our road map the
08:47 - key products coming out in 18 through
08:48 - the balance of the year and Isabel's
08:50 - gonna share what the dreamers and
08:52 - creators are doing with unity what
08:54 - they've been up to and what's coming out
08:55 - now they're gonna be followed by Danny
08:57 - lang Danny's gonna talk about machine
09:00 - learning an AI and how AI can be trained
09:02 - not only to monetize your games better
09:05 - but make them play better and more
09:07 - tailored around an individual gamers
09:10 - experience yes you can use AI for that
09:13 - Natalya Lukas Mike and Adam are going to
09:16 - demonstrate the next-level rendering and
09:18 - what we're doing with the scriptable
09:20 - rendered pipeline to allow you to make
09:22 - achingly beautiful products and finally
09:25 - Yakov and Ralph we're going to share the
09:27 - future of unity the incredible impact on
09:30 - performance and scale made possible with
09:33 - the entity component system and some
09:35 - small runtimes they're going to change
09:36 - everything and the way consumers launch
09:38 - how they're built and how they're
09:40 - consumed by consumers around the world
09:41 - all of these are the next steps allowing
09:44 - you to use the most performant engine to
09:47 - make the best games possible all you
09:49 - need now is to understand a little bit
09:51 - more and what can be possible and what
09:53 - that will show you a video to give you a
09:54 - better sense of what that is thank you
09:58 - [Music]
11:10 - please welcome the head of made with
11:13 - unity Isabel Riva we are so impressed by
11:23 - the talent and ingenuity of the
11:25 - community the art styles are so
11:29 - versatile there's hand-drawn games like
11:32 - cup head and super realistic games like
11:35 - GTFO and we aren't the only ones
11:38 - noticing this creativity brands are
11:41 - impressed they're coming to us asking to
11:43 - build bridges with the indie community
11:45 - and we love making that connection for
11:48 - them in fact we have in that vein an
11:53 - announcement to make today it's a
11:55 - challenge put together by Universal
11:59 - Microsoft Intel and unity inviting you
12:03 - to design a PC game based on an iconic
12:07 - brand and get this you can pick from
12:10 - Back to the Future
12:12 - Tarak Battlestar Galactica
12:15 - Voltron legendary defender or my
12:19 - personal favorite jaws you stand to win
12:23 - two hundred and fifty thousand dollars
12:25 - worth of crap cash prizes and a contract
12:29 - with Universal Studios we're calling it
12:32 - the universal game dev challenge
12:37 - [Applause]
12:41 - the work will be judged by these
12:44 - industry veterans Bob Gale co-creator of
12:47 - Back to the Future Kate Edwards former
12:50 - executive director of the IG da Dean
12:54 - Takahashi lead writer for games beat and
12:57 - lauren montgomery co-executive producer
13:00 - of DreamWorks TV and showrunner of
13:03 - Voltron so starting today you have
13:06 - exactly one month to submit your winning
13:08 - game idea in the form of a design doc to
13:12 - unityconnect so track down some
13:15 - teammates and get started if that wasn't
13:18 - enough of an opportunity for you there's
13:20 - one more this one's coming direct from a
13:23 - veteran game maker who is building his
13:25 - next game in unity I'm alright game
13:31 - designer responsible for any games you
13:33 - might be familiar with including Sim
13:34 - City The Sims in Spore
13:36 - new game I'm working on is called proxy
13:38 - a game of self-discovery where we
13:40 - actually uncover memories from your past
13:42 - to do this we partnered with unity to
13:44 - announce a contest to find an artists
13:46 - that can help us bring this to life to
13:48 - manifest these memories in a cool and
13:50 - unique way you can enter this contest at
13:53 - Unity connect and to that artist and I
13:55 - know you're out there I look forward to
13:57 - meeting you please welcome a
14:06 - vice-president of AI and machine
14:07 - learning Danny Lee
14:10 - thank you thank you good evening you
14:15 - know at Unity we are committed to
14:17 - democratizing development and in an
14:20 - effort to provide you with the very best
14:22 - tools for game creation we are making
14:26 - machine learning available to your we
14:30 - are committed to lowering the barriers
14:33 - of entry so that you can use machine
14:36 - learning as an integral part of your
14:40 - game development machine learning we
14:43 - know that it can be expensive it can be
14:46 - difficult to master and it can be
14:49 - time-consuming but it can also make your
14:52 - games and your game development easier
14:54 - and in particularly make your games more
14:57 - fun to play for your players as
15:01 - developers with machine learning we no
15:04 - longer have to program every solution
15:06 - every NPC every permutation off of what
15:11 - a person may make how person may
15:13 - interact with the game we can make
15:16 - systems learn instead like people learn
15:19 - from the environment and respond to it
15:22 - we can make systems learn the same way
15:26 - in our goal of democratizing machine
15:29 - learning we have created ml agents Unity
15:36 - ml agents is an open-source AI toolkit
15:40 - that helps developers and researchers
15:43 - trained agents in realistic complex
15:47 - scenarios with a very realistic 3d
15:52 - environment from the Unity engine in our
15:56 - latest release of ml agents dot 3 we
16:00 - have many new features but there's one
16:03 - very important feature called imitation
16:06 - learning with imitation learning a
16:10 - system can learn from real people
16:13 - playing and it can be trained to adjust
16:17 - to your players instead of building an
16:21 - NPC
16:22 - conventional code writing lines and
16:26 - lines of c-sharp you can you can you can
16:30 - create it through imitation learning
16:33 - which will deal with your game
16:36 - environment in a much more organic
16:38 - manner it will not play perfectly like a
16:43 - robot but rather imperfectly like a real
16:47 - player the most exciting part of
16:51 - imitation learning in ml agents is that
16:54 - training happens in real time so let me
16:58 - show you a demonstration
16:59 - featuring assets from cybernetic walras
17:03 - and their soon-to-be released game
17:04 - antigravity a futuristic racing game in
17:10 - a racing game you need the one the NPC
17:13 - vehicles to lose too quickly nor do we
17:17 - want them to leave your players in the
17:19 - dust the appropriate level of challenge
17:23 - is what keeps the game engaging this is
17:28 - a beautiful 3d game we're gonna slow it
17:31 - down a bit so that you can see how the
17:33 - machine is being trained here when I
17:36 - slow it down it will lose some of its
17:38 - magic but I want you to see clearly what
17:41 - is happening when we are training you
17:45 - will see a human on your left side and
17:48 - you will see the agent on the right side
17:52 - let's take a look early on you will see
18:01 - that the machine the agent is crashing
18:05 - it's trying over and over while the
18:07 - human is doing really great it is
18:12 - learning bit from bit yeah
18:14 - from the human literally but look here
18:17 - after just 25 seconds of real-time
18:20 - training the agent is actor doing pretty
18:23 - well it's still wobbly it's not perfect
18:27 - while the humans still feed this agent
18:31 - bit by bit training data and after
18:35 - five minutes of training you'll see that
18:41 - the agent is doing really well the
18:45 - reason that it's doing so well is of
18:47 - course that Mike our Evangelist who
18:50 - trained this agent is actually very good
18:52 - you may actually say he's a little too
18:54 - good because if he would have been
18:56 - crashing a little more the agent would
18:58 - sort of have learned to to crash as well
19:03 - now machine learning is at the center of
19:07 - everything we do
19:09 - powering the entire unity ecosystem but
19:14 - more than that machine learning insights
19:16 - allow us to build tools that optimize
19:20 - your games for in retention and
19:24 - engagement we know that more than 50% of
19:29 - the one-star reviews in the google play
19:32 - store mentioned performance issues which
19:36 - makes it one of the most important
19:39 - challenges that we can help you solve as
19:43 - a unity developer I can easily develop
19:46 - for ios and android
19:48 - that's that simple but we know there's
19:51 - more to it than that
19:52 - there's iPhone 10 and there's the Google
19:57 - pixel - there's Samsung Galaxy s7 but
20:02 - there's also an iPhone 6 and a lot of
20:04 - other iPhone models yeah in fact there
20:09 - are more than 50,000 smartphone models
20:12 - currently in use across the world it's a
20:16 - lot of phones a lot of different models
20:19 - so now you're left with two options one
20:26 - option is to build for the high end
20:28 - devices and put in all the effects and
20:31 - graphics that you can imagine but risk
20:34 - crashing on the low end or all the
20:37 - devices you could also on the other hand
20:42 - choose to aim for the low end devices
20:45 - and not really fully execute on your
20:48 - vision
20:49 - for the high-end devices yeah we don't
20:52 - want you to really have to make that
20:55 - choice
20:56 - there is a better way and it's called
21:00 - unity livetune unity life tune optimizes
21:07 - performance settings dynamically for
21:10 - every device in real time it adjusts the
21:14 - assets effects and rendering for each
21:17 - phone model giving the best possible
21:20 - experience for a player on a given
21:23 - device and Visio an independent game
21:28 - studio in Montreal use life tune with
21:33 - their game roller coaster tycoon touch
21:37 - life tune addressed key performance
21:40 - issues and improved Android players
21:43 - long-term retention with a whooping 33%
21:48 - that's actually amazing thank you but
21:55 - let's take this a step further I just
21:59 - discussed improving gameplay at the
22:02 - cohort level of devices of phone models
22:07 - but what about optimizing for the
22:10 - individual player the first step we are
22:14 - taking in that direction is IA p prom i
22:20 - a peep ramos surfaces the best possible
22:24 - in-app promotions to each player based
22:28 - on their game behavior we know however
22:31 - that even if you were to provide each
22:35 - player with the right offering a lot of
22:38 - players never make an in-app purchase
22:40 - that content is just not relevant to
22:44 - them yeah that's why we're building
22:47 - algorithms to ensure that we show each
22:50 - player the exact right content at the
22:54 - right moment it could be a promotion for
22:58 - your other game it could also be an ad
23:01 - or it could be that virtual good that
23:05 - that player really needs at that moment
23:09 - one size does not fit all
23:12 - I could not buy a pair of shoes and
23:16 - expect them to fit every person in this
23:19 - room that's impossible
23:21 - yeah games aren't any different each
23:27 - person has a combination of hardware
23:30 - software skills and interests that
23:35 - create millions of options we want to
23:39 - give you the tools that make your game
23:43 - accessible for everyone and deeply
23:47 - engaging every person who plays thank
23:52 - you very much please welcome vice
23:57 - president of engineering Brett Bibby
24:00 - [Music]
24:03 - good evening everybody how's everybody
24:06 - doing tonight
24:08 - right on I have the absolute honor of
24:12 - leading the core R&D team at unity and
24:17 - many of these people you can see here on
24:20 - the screen but actually that's more than
24:22 - 500 super talented men and women
24:26 - engineers test engineers product
24:30 - managers UX designers technical artists
24:35 - technical writers and more and together
24:38 - we have the absolute privilege of being
24:41 - your engine team the team that provides
24:46 - you with the tools to create content the
24:49 - tools to integrate with your own tool
24:53 - chains to assemble layout and polish
24:55 - your content and scenes to code build
24:58 - deploy and help you even operate your
25:02 - games as your engine team we are only
25:05 - successful if you are successful so we
25:09 - are very very very grateful for your
25:12 - continued love and support so from all
25:14 - of engineering
25:15 - a very very warm thank you thanks for
25:19 - that as you know we don't make games
25:23 - ourselves we live as game developers
25:26 - through you internally unity across the
25:30 - company we celebrate your achievements
25:32 - and we fill your pain when things don't
25:35 - go so well to address your needs this
25:39 - year
25:40 - we have scheduled three releases in the
25:44 - spring the summer and the fall
25:46 - 2018 one two and three today you're
25:51 - going to see some great new artist tools
25:54 - you're gonna see our brand new great
25:58 - rendering pipelines and supported
26:00 - features these two themes artist tooling
26:03 - and rendering is something that we're
26:05 - going to be doing all year they're gonna
26:07 - get a lot of love throughout the year in
26:09 - addition to our focus on optimizations
26:12 - and performance next we are going to
26:16 - release our industry-leading
26:18 - realtime ray tracing GPU light mapper
26:22 - also a new SVG importer 2d character
26:27 - animation tools new asset bundle tools
26:30 - and a lot more but what you should
26:32 - actually do is decide right now that
26:35 - you're gonna join us in Germany in
26:36 - Berlin in June for our unite event there
26:39 - and get all of this really great stuff
26:42 - firsthand now later in the air and the
26:48 - fall what's coming in 2018 dot three I
26:52 - have two words for you nested prefabs
26:56 - [Music]
26:58 - [Applause]
27:05 - apparently a few of the users wanted
27:08 - this feature so we decided to put it in
27:10 - so yeah well bring it later in the air
27:13 - but what could be better than nested
27:16 - prefabs I mean should we just shut it
27:18 - all down and go home right now
27:20 - well based on your input I'm happy to
27:22 - tell you we are introducing long term
27:25 - supported versions of unity the long
27:28 - term supported versions of unity will be
27:31 - based on our fall dot 3 version every
27:34 - year and then we will continue to
27:37 - release patches and roll-ups of bug
27:40 - fixes with no new functionality no new
27:43 - features for 24 months for 2 years
27:46 - beyond the last dot 3 version and
27:49 - because we have a LTS version every
27:53 - single year that means you have one year
27:56 - of overlap so you can upgrade your games
27:59 - in your projects when you're ready
28:01 - allowing you to keep your games running
28:03 - as long as you want the 2017 LTS based
28:08 - on 2017 dot 3 is available now for
28:11 - everyone switching gears a bit
28:20 - I just love new gear and who doesn't and
28:22 - I'm kind of in the right job to really
28:24 - love new gear and it's an exciting time
28:27 - in the world of platforms and devices
28:29 - there's an absolute explosion going on
28:32 - with innovation across the board with so
28:35 - much innovation happening it's opening
28:37 - opportunities not just for creators but
28:39 - for consumers alike it's also an insane
28:42 - amount of work for creators to support
28:45 - so many devices at Unity we think a lot
28:49 - about solving this problem and about
28:51 - giving you the reach that you need to be
28:53 - successful when important new devices
28:56 - reach the marketplace we want to ensure
28:58 - we have day 1 support for you for
29:02 - pioneers an augmented reality unity is
29:05 - partnered with magically to bring you
29:07 - support for the magic leap one
29:09 - you can get started developing for the
29:11 - magic leap one with the unity Developer
29:14 - Preview that's now available we also
29:17 - have something to share today from our
29:19 - partnership with oculus you now have the
29:22 - ability to build directly for the oculus
29:24 - go using the same workflow that you use
29:27 - for gear VR another part were another
29:31 - partner that we've worked with for years
29:33 - is Google and I'm happy to say you'll be
29:36 - able to build for Google's standalone
29:38 - daydream handset directly with the newly
29:42 - added six degree of freedom support for
29:45 - daydream making it super easy to develop
29:48 - and iterate for this platform as well
29:51 - unity has unparalleled support to
29:55 - broaden reach for your XR creations we
29:58 - continue to build our partner ecosystem
30:00 - to bring you the platforms and
30:02 - technology that you need with so many
30:06 - great platforms and more than us with so
30:09 - many great partners and more than 25
30:11 - platforms to choose from unity helps you
30:13 - connect with your audiences wherever
30:15 - they are using whichever devices they
30:18 - know and love all of this is coming in
30:21 - 2018 dot 1 now 2018 dot 1 will be
30:25 - released next month meanwhile you can
30:27 - download and try the beta for yourself
30:29 - today and we would all obviously welcome
30:31 - that feedback everything that you're
30:33 - gonna see in this keynote you can
30:35 - experience in this beta but although
30:40 - there's a lot to like and I heard
30:42 - giggling in the back not everything in
30:44 - this Kino you can experience but now I
30:46 - got your interests there's a lot to like
30:48 - in 2018 dot 1 but I think we've talked
30:50 - enough about it it's time to show you
30:52 - some of the really cool new artist tools
30:54 - and also the rendering pipelines in
30:57 - action thank you
31:00 - please welcome director of graphics
31:03 - Natalia Tatar chime hello next level
31:12 - rendering is our approach to unleash
31:14 - team creativity in an effort to produce
31:16 - amazing and beautiful visual experiences
31:19 - across all platforms there are two key
31:22 - components when I think about this first
31:25 - it is about rendering technology it is
31:28 - about being able to harness the power of
31:31 - platform diversity performance of CPU
31:34 - and GPU multi-core architecture support
31:37 - for foreign factors like monster PCs
31:40 - consoles low-end mobiles you've heard a
31:43 - lot about all the variety of devices
31:45 - that we service
31:46 - second it is about artists workflows we
31:51 - want to give artists control to own the
31:54 - creation experience and to end with
31:57 - visual tools working in the context of
32:00 - the production environment therein and
32:03 - the production project that they're
32:05 - doing owning results from creation
32:07 - points starting to the final debug and
32:10 - profiling through to ship and that's a
32:13 - lot let's dive into the rendering
32:16 - technology aspects first so of course
32:19 - you just saw permissible lots of
32:21 - different game experiences get created
32:23 - with unity from cinematic high-end
32:25 - experiences rendering in real time in 3d
32:29 - to 2d pixel art performers to mobile
32:33 - games AR VR and many many more and in
32:36 - fact we don't even know what you guys
32:38 - will come up with and that's the
32:39 - exciting part and one unity can deliver
32:42 - many experiences what we wanted to do is
32:45 - to have its rendering engine evolve and
32:48 - offer both more power and more
32:52 - flexibility yup we try to do the
32:54 - impossible so we went back to the
32:57 - drawing board with one goal in mind to
32:59 - deliver one core rendering architecture
33:03 - which is capable of serving the diverse
33:06 - outcomes without sacrificing performance
33:08 - or quality this is not a small
33:12 - undertaking
33:14 - in fact this is a major conceptual shift
33:16 - for the way the unity graphics has been
33:19 - working we want our creators to access
33:22 - the power of modern hardware and GPUs we
33:25 - want to offer a powerful and open
33:27 - real-time rendering engine not a black
33:30 - box we don't want you to have to learn
33:33 - millions and millions of lines of C++
33:35 - code I find that exciting but you might
33:38 - not it should be easily customizable
33:42 - accessible through c-sharp scripts and
33:44 - shaders and we also want to make sure we
33:48 - set you up for success without of the
33:50 - Box optimized templates for specific
33:53 - needs that you might have for a fast and
33:55 - easy start with the best-looking results
33:58 - so how do we do that the answer for us
34:02 - is the scriptable render pipeline
34:04 - architecture or in short SRP this is our
34:08 - new architecture that allows extensive
34:10 - customizability of rendering it provides
34:13 - an open API and you can write your own
34:15 - renderer fairly easily we actually give
34:18 - you two as a starting point out of the
34:20 - box for you to use immediately for your
34:23 - own projects as you wish or to actually
34:26 - build from to create your own custom
34:28 - solution and it has many strengths it is
34:32 - highly configurable you can perform
34:34 - rendering in unity as I mentioned with
34:36 - c-sharp scripts and shaders it is lean
34:39 - you can take only what you need you
34:41 - don't need to bloat your rendering
34:43 - pipeline with things you don't care
34:44 - about and most importantly it is user
34:47 - centric it lives in user space it's easy
34:50 - to debug it's easy to extend and easy to
34:54 - modify scriptable render pipeline is the
34:58 - overall architecture that gives us the
35:00 - framework and gives you the framework to
35:03 - write your own rendering pipeline now
35:07 - we're giving two options as I mentioned
35:09 - for you to start from and what we've
35:12 - done is we really look to cover
35:13 - different ends of the spectrum and
35:15 - that's what you see here the super high
35:17 - end visual fidelity HD rendering
35:20 - pipeline which is covering the really
35:23 - high fidelity experiences all the way to
35:25 - lightweight rendering pipe
35:27 - the lightweight SRP is heavily optimized
35:30 - for performance supports every unity
35:33 - platform from low end mobile phones to
35:36 - high end PC experiences scaling with the
35:40 - user performance and the capability of
35:42 - platforms the key thing about
35:44 - lightweight pipelining is super
35:46 - accessible it's very friendly it's easy
35:48 - to start for new users we also made sure
35:51 - that we optimized the physically based
35:53 - rendering for the lightweight pipeline
35:55 - so that it can render better with better
35:58 - performance on those low-end Mobile's on
36:00 - AR and VR devices we improved lighting
36:03 - fidelity everything is linear
36:04 - predictable and we gave you a ton of
36:07 - controls to make sure you have right
36:09 - attenuation parameters feeding better
36:12 - options for lighting so that you create
36:14 - beautiful things with this now HD
36:18 - rendering in contrast is the pipeline
36:20 - that prioritizes stunning high fidelity
36:23 - visuals of course with performant
36:25 - results what we made sure is that it's
36:28 - designed for GPU compute capable
36:30 - consoles and PC hardware so as you can
36:34 - see unity graphics is evolving and it's
36:38 - evolving to a powerful configurable
36:40 - performant ecosystem however and I am an
36:45 - engineer but it's not all about
36:47 - engineering I firmly believe the
36:50 - beautiful graphics cannot come to life
36:52 - without the creative force the artists
36:55 - only they are able to bring the spark of
36:58 - life to any algorithm that without their
37:01 - touch will just merely twinkle and fall
37:04 - on the ground so I want you guys to hear
37:08 - from the crew demo team which is a tour
37:10 - de force creative team that has been a
37:12 - core part of the evolving graphics
37:14 - frontier in unity thank you please
37:19 - welcome demo team producer
37:21 - silvia russia
37:23 - [Music]
37:28 - hello everyone
37:31 - unit is demo team consists of artists
37:34 - and programmers with many years of game
37:37 - development experience we create content
37:41 - to drive advanced usage of the Unity
37:44 - engine and push the envelope of what is
37:47 - possible to achieve with our technology
37:49 - both now and in the future in a way we
37:53 - are a user within the company because we
37:56 - work in very close collaboration with
37:59 - unities R&D all teams across R&D and we
38:03 - are usually the first to try out new
38:05 - features and technologies as they are
38:08 - being developed specifically around
38:10 - graphics our team is distributed we are
38:15 - located in seven different cities across
38:18 - Europe and we have seven different
38:21 - nationalities on the team citizen
38:24 - nationality is not necessarily
38:25 - coinciding our production and
38:28 - environment is entirely virtual with
38:31 - unity being the creative platform where
38:34 - everyone's work gets pushed together as
38:39 - a creative team we have a distinct
38:43 - creative style and we we do care about
38:51 - the narratives we do care about the
38:54 - aesthetics specific themes that we want
38:57 - to explore that span beyond what is
39:00 - strictly speaking necessary for a
39:03 - technical demonstration you've probably
39:06 - seen some of our work our short film the
39:10 - blacksmith it supported the release of
39:13 - unity 5 which premiered physically based
39:16 - shading in unity and real-time global
39:19 - illumination in unity to this day we
39:22 - continue to be to have a lot of fondness
39:25 - for Nordic inspired themes while we were
39:29 - creating our short film Adam we made use
39:33 - of all of the latest improvements and
39:35 - all of the latest advanced
39:37 - months in unity graphics that were
39:39 - available back in 2016 when it was
39:42 - released including shading lighting
39:45 - post-processing as well as the Timeline
39:48 - feature neon was a small side project
39:53 - made almost just for fun and it was
39:57 - created entirely with assets from the
39:58 - unity asset store it was very quick to
40:02 - prototype while still looking good due
40:04 - to the latest and most improved
40:06 - post-processing stack and our latest
40:10 - project is Book of the Dead this time we
40:15 - are making an interactive experience
40:17 - it is built on all of the rendering
40:19 - innovations that are coming with unity
40:21 - in 2018 we will keep working on this
40:25 - project throughout the entire year as we
40:28 - continue to support and the constantly
40:33 - evolving and constantly improving
40:36 - graphics features within unity I will
40:39 - leave you with a brief look at Book of
40:42 - the Dead thank you
40:58 - well look at that I didn't think you had
41:02 - it in you
41:09 - [Music]
41:35 - tell me more about this place you spent
41:38 - nearly 90 years Oh what no no not there
41:44 - the forest is just the lobby that's
41:48 - where the entrance is
41:54 - I've been thinking how do I remember all
41:57 - this when did I make these memories we
42:02 - need a brain to make memories your brain
42:08 - is now remembering things that never
42:10 - happened to you to it
42:13 - an enormous amount of neural connections
42:15 - with homes as you came back decades of
42:18 - worldly memory yeah sorry are you all
42:30 - right yes um I'm just back tell me did
42:41 - you see any of the others
42:44 - yes
43:10 - I'd have her fainted
43:12 - even though he had told me about them
43:15 - you think that was one of them I know
43:50 - almost there you're the only one in woke
44:00 - up Karen one out of tens of thousands
44:06 - why
44:08 - [Music]
44:15 - [Music]
44:22 - please welcome Technical Director Lucas
44:25 - Mayer everybody I love watching that
44:34 - video all the real-time by the way the
44:38 - rocks that you see behind me they are
44:41 - they come from behind the house of my
44:44 - friend ves in Stockholm he went out with
44:48 - his camera and took a whole bunch of
44:50 - pictures of these rocks and all the
44:52 - pieces of wood and trees that you see
44:54 - and they used the process called
44:57 - photogrammetry to turn these pictures
44:59 - into these textured 3d models
45:03 - photogrammetry is a technique that
45:06 - really enables small teams to create
45:09 - really high fidelity assets and a really
45:11 - efficient way and because we are in the
45:15 - business of solving heart problems so
45:17 - that you don't have to
45:18 - we made a step by step guide to teach
45:20 - you and show you how you can do this at
45:22 - home yourself you know what kind of
45:25 - camera do you bring how do you take
45:27 - these pictures and then which which
45:29 - buttons do you press to make you know
45:32 - where do you put the pictures in and get
45:33 - the model out it's a whole bunch of
45:35 - software you need to use we wrote some
45:37 - of it it's really fun to do if you're if
45:39 - you're into that kind of stuff I can
45:40 - highly recommend it we also used a bunch
45:44 - of textures from qixels mega scans
45:46 - library it's a library of really high
45:49 - quality scanned textures that are
45:51 - actually available on the Asus store now
45:53 - the ones that we used so that not only
45:55 - we can use them but you can use them too
45:59 - in this next section we're gonna have a
46:02 - look at some of the graphics features in
46:04 - 2018 dot one that were used to make this
46:07 - project look like the way it does and to
46:10 - do that let's get Natasha back on stage
46:16 - you guys thought you were done with me
46:18 - just saying a few words nope nope no no
46:21 - nope so we're gonna start from the
46:24 - high-definition pipeline that is our
46:27 - cutting-edge rendering pipeline which is
46:29 - now shipping in preview in 2018 dot 1
46:31 - and what makes HDR peak cutting-edge is
46:34 - really the 5 key components that we use
46:38 - as pillars for the design and
46:40 - development of this core technology it
46:43 - is physically accurate which means that
46:46 - we use physically based rendering for
46:48 - our materials and physical light units
46:51 - for our lighting it is unified because
46:54 - there is unified lighting and material
46:57 - response for our peaks transparent
47:00 - decals translucence volume metrics and
47:04 - also big GI matches runtime in terms of
47:09 - lighting which means that it gives you
47:11 - predictable results under all lighting
47:14 - conditions under all material responses
47:17 - it's very configurable you have tons of
47:20 - options to polish and create very
47:22 - specific content for your needs and it
47:26 - really helps you achieve the results
47:27 - that you want while giving you a ton of
47:29 - debugging options to understand where
47:32 - you might have taken a wrong path along
47:33 - the way to help you to get to your final
47:36 - ship result and of course not the least
47:39 - it is absolutely performant because
47:42 - we've spent a ton of time making sure
47:44 - that all of this unification consistency
47:46 - does not come at a cost to you it is
47:49 - optimized for all of the rendering paths
47:52 - suitable for the specific platforms that
47:54 - were shipping HDR pion now let's take a
47:57 - deeper look at the components of what
47:58 - makes the scene we were looking at
48:00 - earlier beautiful one of the key
48:03 - components is lighting and making
48:06 - lighting behave consistently for all
48:08 - material types is very difficult this is
48:10 - where many engine layer tons of hax
48:13 - objects that might have looked right a
48:15 - second ago when you move them from one
48:18 - corner to the next let's say from a
48:20 - light area to the dark
48:21 - Meester gluing it unexpectedly now HDR
48:25 - piece solves this by providing a fully
48:27 - linear
48:28 - HDR unified physically based lighting
48:31 - lots of words lot of buzz but it doesn't
48:34 - matter what type of material of light
48:36 - types you use that's the whole point of
48:38 - us doing it right the results will be
48:41 - correct and consistent now in this
48:43 - example what you're seeing is Lucas is
48:46 - moving around the object around and what
48:49 - you notice is it preserves the fidelity
48:51 - of lighting the details without creating
48:52 - a really unexpected response so that's
48:55 - that consistency that I mentioned in HD
48:58 - what helps this is the light follows
49:00 - physical inverse-square attenuation and
49:03 - uses physical light units giving you
49:06 - ability to match real-world conditions
49:13 - most games tend to use very simple
49:15 - lights spot lights line like point
49:18 - lights because that's really all they
49:21 - can afford for performance reasons but
49:24 - we're changing that with HDR P as well
49:26 - let's take a look at a few area lights
49:28 - in our scene here so what you're seeing
49:34 - here Lucas just dropped a real-time line
49:37 - area light this is one of the shapes
49:39 - that we're shipping we're adding a few
49:41 - more shortly and even though these
49:44 - lights a typically reserved for film and
49:46 - not seen frequently in real time they
49:49 - really help bridge filmic lighting
49:51 - quality with real time rendering now in
49:54 - our case they're also very performant we
49:58 - made sure that an hour optimized real
49:59 - time implementation the cost of an area
50:02 - light without shadows like what you see
50:04 - here is just twice of a regular vanilla
50:07 - spotlight
50:11 - now if GRP gives you a lot of power to
50:14 - customize lighting customized to the
50:16 - visual results but we mentioned we want
50:19 - you to own this and to end and the way
50:21 - to do that we're giving you power with a
50:24 - really extended selection of debug modes
50:26 - can we take a look at a couple yeah I
50:28 - have the new a debug window open over
50:30 - here I particularly like this mode here
50:33 - it's the diffuse lighting it's a mode
50:36 - that lets you see only the lighting in
50:37 - your scene which is useful for instance
50:40 - what happens a lot you need to figure
50:41 - out
50:42 - why something is too dark or too bright
50:43 - you want to know like well it's this my
50:45 - texture that's wrong or if it's the
50:47 - lighting that's wrong for instance in
50:49 - this view you can clearly also still see
50:51 - the area lights the line lights that I
50:53 - placed if you were wondering why that
50:55 - piece of grass was so bright well it's
50:57 - because of the lighting which is with
50:59 - this view lets you see there's a whole
51:02 - bunch of other modes in here let me show
51:04 - you a few I can for instance set it to
51:06 - my normals over here and these set of
51:11 - debug tools they really empower artists
51:13 - to investigate any kind of visual
51:15 - problem in their content that they might
51:17 - have and the nice thing about it is that
51:20 - they don't only work in the editor but
51:22 - they also work on the device so when we
51:24 - run this project on a Playstation we can
51:26 - actually get these modes working on the
51:28 - PlayStation at well another cool thing
51:31 - about them is that they are very easily
51:33 - extendable demo team that made this
51:38 - project one of the things they needed to
51:40 - do because it's in a forest they wanted
51:41 - to do something special with the amount
51:43 - of skylight that comes in because you
51:45 - have all these leaves high up in the
51:46 - tree the leaves actually block the
51:48 - skylight from coming in and they wanted
51:50 - to make a debug mode to visualize that
51:52 - took them about eight lines of code
51:54 - probably longer than it will take me to
51:57 - find it here we are it's in material
52:01 - he's learning I'm just here we go and
52:06 - absolutely this is a really good example
52:07 - that the whole point that we've just
52:09 - mentioned about SRP architecture is you
52:12 - can make it your own the demo team found
52:14 - that they needed to add a better and
52:16 - more specific effect for outdoor
52:18 - environment they extended it with
52:20 - scripts and shaders they did essentially
52:23 - a compilation a few shader compilation a
52:25 - few hot ray loads of scripts and were
52:27 - able to iterate very very quickly on
52:29 - rendering algorithms which is something
52:31 - that most of our graphics people are
52:33 - really unused to we live in C++ world
52:35 - typically and so they extended their
52:37 - rendering pipeline specifically to add
52:40 - the volumetric sky occlusion feature and
52:42 - actually can we see what this brings to
52:44 - the party yeah I have them right here
52:46 - right here
52:47 - and so you can see why this was such a
52:51 - key crucial feature and in fact we're
52:53 - shipping with it in 18.2 it really
52:55 - bring a lot of the environment richness
52:58 - to life with all of the details of how
53:00 - the foliage is grounded with this
53:02 - outdoor environment all right there's a
53:06 - few more things in the scene that I
53:07 - would like to show let's let's take a
53:09 - look so I have this area here from the
53:14 - sequence and let's go to my post
53:16 - processes settings
53:17 - post post post row settings and let me
53:22 - tweak them a little bit by the way post
53:24 - processing stack is out of beta in 2018
53:27 - dot one now let me just create this sort
53:29 - of a different look now you were always
53:31 - able to do this but new in 2018 at one
53:35 - something that we added as we took it
53:36 - out of beta it's a new thing called
53:38 - volumes let me show you what they look
53:40 - like go to the scene view and you see
53:42 - these huge ugly green boxes and what
53:46 - they do is the settings that had just
53:48 - applied they only apply when the camera
53:50 - gets close to that box you can control
53:53 - you know how soon the settings fade in
53:55 - and out let me show you what that looks
53:57 - like if I scrub a bit in the timeline
53:59 - here if I go back here you can see that
54:03 - now my changes don't apply and when the
54:07 - camera gets in they slowly apply 100%
54:10 - and when I get out of here they they go
54:17 - out again and a cool thing about these
54:19 - volumes is that they're actually not
54:22 - specific to post-processing settings at
54:24 - all you can use these volumes to
54:27 - gradually face Hort of like fade in and
54:29 - fade out settings of any kind of scripts
54:32 - that you might have and actually for
54:34 - that matter you saw it happening in
54:36 - timeline and post-processing is
54:38 - integrated with cinema scene and
54:39 - timeline but we also have with these
54:41 - volumes is ability for you to craft the
54:43 - interactive experience if you want to
54:46 - create a really intense moment in your
54:47 - game when the player walks into a
54:49 - specific area you use this volume and
54:52 - bam you can throw a really intense new
54:54 - are look with just a few settings so
54:57 - really lets you customize the experience
54:59 - very quickly all right let me show you a
55:02 - few more things here while we're in this
55:03 - part of the scene I have this tree over
55:05 - here let's zoom in a little bit
55:08 - and you might have missed it in the sea
55:10 - of information that we had for you but
55:11 - this guy over here this is a decal on
55:14 - the tree one or two users might have
55:18 - asked us in the past and support for
55:19 - that and I'm happy to say that they can
55:22 - finally sleep at night let's take a
55:27 - closer look at this tree itself turn on
55:32 - my selection wire so this tree if i zoom
55:35 - out you can see the original topology
55:39 - was authored at yeah it's pretty the
55:41 - relatively low res but when I get closer
55:44 - to it we're using tessellation and
55:46 - displacement to really add the detail
55:48 - only when we get closer this is what
55:51 - makes the tree still look so good when
55:52 - you get so up close if you remember from
55:55 - the video this is like that tree that
55:56 - the character put its hands on like
55:58 - there's amazing detail even when you get
56:00 - really close to it and it really helps
56:03 - amp up the fidelity of the overall
56:05 - experience the high quality visuals that
56:07 - we're really trying to let you create
56:10 - easily with HD render pipeline in fact
56:12 - one of the super nice things about the
56:14 - decal that Lucas just showed you is that
56:17 - again we're unifying it for both opaque
56:19 - and transparent it takes in the proper
56:21 - lighting and correspondingly affects it
56:24 - at the end just working correctly now
56:28 - another important things we mentioned
56:30 - that we have a lot of material options
56:32 - for you to use in the HD render pipeline
56:35 - but we've also want to make it easier
56:37 - for you to craft and polish materials
56:39 - with that so with that in 20 18.1 we're
56:43 - shipping shader graph with support for
56:44 - LT NHD pipelines with tons of material
56:48 - options exposed now all of these
56:52 - material advance material options
56:54 - actually can be additionally blended as
56:56 - layered materials really allowing you
56:59 - create to create complex surfaces real
57:02 - world believable surfaces so for example
57:05 - if we look in the back there there's a
57:06 - nice brick mortar wall and it has a
57:09 - complex merging of the brick the mortar
57:12 - the dirt the dust and that's what you do
57:14 - with the layered materials using all of
57:16 - the options that are available in a
57:18 - default material and in fact Book of the
57:21 - Dead has
57:21 - lot of really nice details that we can
57:24 - take a look at yeah so the this is a
57:27 - shot that I really like it's these
57:30 - leaves and if I go around them you can
57:32 - really see how the leaves sort of like
57:35 - they both shadow each other but you
57:36 - really see this light bleeding in with
57:38 - the light it's like the front of the
57:40 - leave and you could see it from the back
57:41 - how it is is that trance so this is in
57:44 - fact an example of translucent material
57:47 - this is an option in the HD standard lit
57:49 - material and what it does is it
57:51 - simulates how the light scatters through
57:53 - a backlit surface now another thing that
57:57 - are really loved in this level is this
57:59 - mysterious and rather strange
58:02 - amber creature let me go to my friend
58:05 - here oh we get a special zoom in look on
58:08 - that yeah you can see my friend here
58:10 - likes to keep an open mind and he also
58:15 - has this this sort of like weird orange
58:19 - stuff coming out of the wood and this I
58:22 - really like this material like if you if
58:24 - you sort of see how it responds to the
58:26 - light it's I think it's some subsurface
58:29 - scattering you keep reading up what this
58:32 - drop-down says but let me use that
58:35 - drop-down to turn it on and off to see
58:36 - the amazing difference that this HD
58:38 - material provides and the way the light
58:41 - scatters from the surface is really a
58:44 - complex physical phenomena most of the
58:47 - approximate approximation that physics
58:49 - and computer graphics has designed a
58:51 - really quite expensive to do in real
58:54 - time and in fact even for offline film
58:56 - well we got several of them to run fast
58:58 - an HD subsurface scattering of course is
59:01 - what brings this material to life you
59:04 - know the sap that you're seeing the
59:05 - ember that Lucas was pointing out is
59:08 - where the light gets trapped the light
59:10 - scatters and you start accumulating a
59:12 - response in order to give you this nice
59:14 - wonderful volumetric waxy look now with
59:18 - HD we allow you to do this with two
59:20 - options we give you the games the
59:22 - industry standard subsurface scattering
59:25 - Jimenez approach which is highly
59:27 - optimized but also for the first time in
59:30 - real time we are providing a filmic
59:33 - technique for subsurface again
59:35 - optimized for a specific rendering of
59:37 - real-time needs we're giving an option
59:39 - for Disney Burley model for subsurface
59:41 - scattering with much higher quality
59:43 - results now another major breakthrough
59:49 - that HD provides is multiple scattering
59:52 - approach for specular response well I'm
59:55 - a graphics nerd so of course shader
59:57 - balls is a very important part of the
59:59 - presentation now what's key about this
60:02 - is this is the first time in the
60:05 - industry for real time in fact I'll tell
60:07 - you a secret only a couple of film
60:09 - offline renderers have this support as
60:11 - well and what it means is even the
60:14 - roughest materials as you see on the
60:17 - left corner over there can actually look
60:19 - right in the dark corners you see on the
60:21 - top they go dark on the bottom they stay
60:23 - consistent and along with multiple
60:26 - scattering we also added options for
60:29 - iridescent and overcoat materials and
60:31 - clear coat that you see here so here's a
60:34 - couple of really great examples in fact
60:36 - let's see it live they really help to
60:41 - provide you options to build high-end
60:43 - materials like enamels IRRI dies glass
60:47 - metals and other complex real world
60:50 - surfaces we bring you all kinds of shiny
60:53 - with HD RP I can't get enough of the
60:58 - soap bubbles personally that in my
61:01 - two-year-old daughter who's watching
61:02 - this presentation is right now feeling
61:04 - particularly excited I bet now we are
61:08 - extending HD RP furthermore to add a few
61:12 - options for organic materials like hair
61:16 - skin fabrics and eyes here you see an
61:20 - example of filmic quality to character
61:35 - [Music]
61:50 - [Music]
61:59 - [Music]
62:05 - [Music]
62:12 - [Music]
62:19 - [Music]
63:15 - so this was an example of a young girl
63:19 - from a movie called wind up which is a
63:22 - project done in HD using he being Zhang
63:24 - and the graphics team which shows the
63:26 - power of anisotropic on hair skin
63:29 - subsurface and amazing PRDS for cloth
63:32 - rendering now let's go back to Book of
63:35 - the Dead you know with HD Book of the
63:40 - Dead interactive experience is a great
63:42 - example of what a small team of amazing
63:44 - content creators can accomplish but
63:48 - after people saw the Book of the Dead
63:49 - project they kept coming up with to prod
63:51 - questions one isn't as just a movie it
63:56 - looks like a trailer and do you need a
63:59 - mega high-end PC with multiple graphics
64:01 - cards that can heat up my whole
64:03 - apartment tirana it's like it seems
64:06 - really fancy well the answer to both
64:09 - questions is known and in fact here you
64:13 - see a larger level from The Book of the
64:16 - Dead done with the same assets with the
64:20 - same visual quality that is running a
64:23 - steady 30fps as a second that Lucas is
64:28 - showing you on PlayStation 4 Pro so he's
64:31 - interactive I'm actually playing right
64:33 - now with my playstation controller
64:34 - exactly and so really demonstrates the
64:37 - benefits of unity 2018 that allow you to
64:41 - craft high-end interactive experiences
64:43 - like this one that are optimized for
64:46 - modern consoles and what's really
64:48 - powerful is the demo team started by
64:52 - developing an PC which of course is easy
64:55 - they didn't need even need a deaf kid
64:57 - but they were able to use HD under
64:59 - pipeline to smoothly take it to the
65:01 - PlayStation 4 experience and that's
65:04 - really the power that it gives you you
65:08 - know this 3 is cool sort of like octopus
65:11 - looking tree it's actually the tree next
65:13 - to the kindergarten where VES takes his
65:15 - kids his candy they're live how it grows
65:19 - around the rocks
65:21 - now in fact when I use this demo to help
65:25 - others create and craft such stunning
65:27 - visual experiences so with that we're
65:30 - releasing the entire level with all of
65:33 - the assets on asset store in April
65:46 - personally I can't get enough of this
65:49 - and it really brings to life the
65:50 - anti-aliasing taa technique here because
65:53 - it's just so smooth now do I have to
65:57 - stop yeah I'm sorry I know it's hard I
66:01 - want to also give you guys a quick taste
66:04 - of something that we've been cooking
66:05 - that is coming soon then I'm extremely
66:08 - excited about now we're gonna take a
66:11 - step back for a second
66:12 - baking lightmaps which is a key
66:15 - component of creating lighting in many
66:16 - many games today has been a consistent
66:19 - frustration for artists they take a long
66:22 - time sometimes hours especially if you
66:24 - want to ship in quality light map to
66:26 - really look at your level in a level to
66:30 - make matters worse often means several
66:32 - or even tens of light Maps to make it
66:35 - look right frankly it's just not fun to
66:38 - look at it and not enough coffee I mean
66:40 - you can only take so many cups in an
66:41 - hour
66:42 - now our CPU progressive light mapper
66:45 - made lots of head ways to help it but we
66:49 - can do better and I'm happy to tell you
66:52 - about a new tool that we've created to
66:55 - help artists really get instantaneous
66:57 - feedback which is our new GPU
66:59 - progressive light mapper it is a
67:04 - real-time path tracer that is using
67:07 - real-time ray tracing on GPU to bake
67:10 - lighting unless the several seconds and
67:12 - in fact that is what Lucas is doing here
67:14 - for the final ship quality light map
67:17 - would upu ray tracing we can
67:19 - progressively bake let's say 2 million
67:21 - texels
67:22 - with about a hundred million rays that
67:25 - are super sampled with 4 or 16 samples
67:29 - per ray in mere couple seconds honestly
67:34 - come from the world of ours baking
67:36 - lightmap this is just absolutely insane
67:40 - so the environment I have open here you
67:43 - can see I'm in this sort of indoor thing
67:45 - and the only the only place that the
67:47 - light comes from is like this hole in
67:49 - the roof right so most of the the reason
67:52 - you still see anything is that that
67:54 - light bounces from wall to wall sort of
67:56 - bounce light let me just turn off that
67:59 - bounce light for a second to see like
68:01 - what would be left if we didn't account
68:03 - for that and let me just make that floor
68:07 - a bit exaggerated red and again as we
68:11 - care so much about the artists
68:13 - experience we make sure that this tool
68:14 - also allows you to see only the lighting
68:17 - and you can see that the there's
68:20 - actually funny the floor is white
68:22 - remember before how I told you you can
68:24 - use these modes to figure out where
68:26 - something comes from you can see here
68:28 - that the light hitting the floor is
68:29 - white so the reason it was red before
68:32 - was because of the color of the material
68:34 - but the reason that this things on the
68:37 - side and on the top are red as that's
68:39 - because the bounce light is hitting it
68:41 - the light Napper it is let me turn on
68:45 - some colors again it's also still
68:47 - progressive so that's just a fancy word
68:49 - for saying that it only lightmaps what
68:52 - you're looking at which gives this funny
68:54 - effect that you can sort of paint the
68:56 - level by looking at it and it also works
68:59 - in much bigger environments if I go to
69:01 - the outdoor environment that we have
69:03 - over here you can see that this you know
69:06 - much larger environment is an area where
69:10 - the GPU light backing helps so much
69:12 - because like you know this were
69:14 - traditionally baking this would take so
69:16 - long how many light maps is this level
69:20 - is about six one key light maps now to
69:24 - light this what we're actually computing
69:26 - here in real time is four point four
69:29 - billion raised with four samples per E
69:31 - and that's what you're seeing
69:33 - interactively refresh and in fact you
69:35 - can tweak your settings so you don't
69:37 - even notice when it actually updates the
69:38 - light now
69:44 - we covered a lot of great features that
69:46 - were shipping with our high-definition
69:47 - pipeline and our novel tools for artists
69:50 - which is still in preview believe it or
69:54 - not I have to take really hard cuts and
69:58 - this is just skimming the surface we
70:00 - wanted to tell you so much more about
70:03 - what's coming in 18.1 but you know time
70:05 - constraints so really please download it
70:09 - try it out engage with us give us
70:11 - feedback we want to hear your
70:13 - experiences we've given you a lot of
70:16 - ideas of what's happening in the world
70:18 - of high-definition lighting and to make
70:21 - artists iteration faster but of course
70:24 - we also want to enable customer success
70:26 - across that entire giant gamut of the
70:29 - platforms the unity runs on and the
70:32 - lightweight pipeline is our answer to
70:34 - that now I want you guys to take a
70:36 - deeper look of what another really
70:40 - amazing content creator group was able
70:42 - to create with lightweight pipeline
70:44 - thank you please welcome head of
70:50 - cinematics Adam my hill and producer for
70:53 - made with unity mic where the ring so we
70:59 - wanted to test out some of these 2018
71:01 - artist features and the new lightweight
71:03 - render pipeline so Adam and I created a
71:05 - few scenes and we began where everybody
71:08 - begins with the elusive
71:09 - what is the vision so let's make some
71:13 - storyboards let's make some cameras
71:14 - let's get an edit down you know some
71:16 - scratch audio let's build an animatic
71:19 - let's work it there before it gets
71:21 - expensive but then what you abandon the
71:25 - animatic only to build it for real
71:27 - somewhere else we didn't do that part we
71:31 - experimented and we did the design
71:33 - straight in unity and I'm gonna
71:34 - introduce a new feature student machines
71:37 - storyboard so this is unity this is
71:40 - timeline right here this is an image on
71:44 - a camera clip basic storyboard and you
71:48 - can see when we cross and we do a cut we
71:51 - cut to another storyboard and this is
71:53 - actually the same storyboard you can see
71:55 - we've got an animation area here so you
71:57 - bring your storyboards to life and when
72:02 - you have this you're doing your timing
72:04 - your edits right here but because it's
72:06 - in timeline you get this extra magic
72:08 - look at this functionality I can take my
72:11 - clip and overlap it and that becomes a
72:15 - dissolve so you can breathe a lot of
72:17 - life into your animatics right here but
72:19 - this is where the magic starts because
72:22 - when it's all in here together
72:24 - I can fade this down and I can go from
72:29 - an animatic to 3d so instead of doing
72:33 - your 2d somewhere when you want to go
72:35 - from 2d to 3d you're already there and
72:40 - you can mix and match these ideas I've
72:42 - got a 3d scene built and this works fine
72:44 - I want to try out a new idea I can go
72:46 - from 3d to 2d and mix and match and
72:49 - start to craft your vision your timing
72:51 - is preserved from start to finish look
72:55 - at this you can even take the camera
72:56 - here I'm gonna just mix this alpha in
73:00 - just a little bit you can tune your
73:03 - cameras to match your reference get your
73:08 - 3d cameras to perfectly match your
73:09 - storyboards but it's more than just
73:11 - cameras what we're doing is we're
73:15 - getting you right next to your reference
73:17 - when you're building things and you you
73:19 - have you know reference over here and
73:20 - then your game over there if you want to
73:23 - get your reference to look like your
73:24 - game you got to get them work like right
73:26 - next to each other so we're putting the
73:27 - reference straight in this is a Google
73:29 - map of Boston then here's a world behind
73:34 - Mike and I we wanted to build a couple
73:36 - of blocks of Boston so this is a you
73:38 - know punched in view so we started gray
73:42 - boxing right right over top right over
73:45 - top of the image and this is a big
73:47 - announcement we did this in editor we're
73:50 - modeling gray boxing in editor and we're
73:53 - doing that with pro builder and pro
73:54 - builder is part of 20 18.1 Mike's gonna
73:57 - tell you all about it
74:01 - it's like Adam said we were great boxing
74:04 - with Pro builder I'm a huge fan I've
74:06 - been using it for years so we've got our
74:08 - small gameplay area that we mocked up
74:11 - and from the concept stage we start
74:15 - actually being able to test out ideas
74:17 - test out interactions and as the final
74:22 - art starts coming in we can very rapidly
74:24 - go from gray box to your final art now
74:29 - we didn't just use Pro builder for gray
74:33 - boxing the environment we actually used
74:35 - it to start gray boxing interactions
74:37 - with the with the the world so here we
74:40 - have these characters that are in the
74:42 - this intersection we thought it'd be
74:44 - cool if maybe a car came and took out
74:46 - some monsters and they dodged it and you
74:48 - just animated that really quickly so you
74:50 - can see there's a couple key frames I
74:51 - laid out in timeline here so it took a
74:53 - couple minutes to mock up this idea but
74:56 - because it's pro builder I can just grab
74:58 - the car and grab some edges and make my
75:03 - car look a little more car-like
75:05 - and we're modeling we're modeling live
75:08 - on timeline as we're doing these things
75:10 - being able to iterate and try out ideas
75:13 - really quickly is super powerful now
75:16 - that's kind of it's all good but that
75:18 - car doesn't really match our look so one
75:21 - of the the new awesome features that we
75:23 - have is kind of a part of the the
75:27 - exclusive collaboration we have at
75:29 - Autodesk
75:29 - where we can now export right from
75:33 - timeline so I've gray box this idea and
75:35 - I can export it out to my DCC tools and
75:38 - keep all of the timing which is exactly
75:40 - what we did so I sent this out exported
75:42 - it out sent it to the artists and an
75:45 - artist
75:46 - who is much better at modeling than item
75:48 - actually created a car that looks like a
75:50 - car and they added some suspension some
75:52 - wheels turning some some simulation and
75:55 - they created this cool result I brought
75:58 - it back into unity and I'll just unmute
76:01 - those tracks and you can see the timing
76:04 - and the position everything is all kept
76:07 - right from our original idea now having
76:10 - this kind of precision placement and try
76:12 - ideas is so important to your artist to
76:16 - be able to actually get that final look
76:19 - and you're running the simulation and
76:21 - max which is really good at it but super
76:23 - quickly exactly now something else that
76:25 - artists are always super picky about is
76:28 - being able to create custom materials
76:29 - and here we have an animated billboard
76:31 - up here that is actually being done with
76:35 - our new shader graph that Natasha
76:37 - mentioned earlier so this is the shader
76:41 - graph and it's all integrated built into
76:43 - 2018 and here we just split the UV
76:46 - Channel so we're just animating the X of
76:48 - the UV and you can preview objects
76:51 - bringing custom objects no code it's all
76:53 - linear or visual note editing and visual
76:58 - debugging so you can very quickly create
77:00 - your own custom materials this is
77:02 - extremely powerful workflows with 2018
77:04 - we have a shader graph so as you move
77:12 - forward in your project and you get to
77:14 - the end when you're you know color
77:16 - grading doing lighting pulling
77:19 - everything together that last 10% can
77:24 - feel like another 90% and what I've got
77:26 - here is this is an image that I like I
77:28 - like the colors look at the the warm and
77:30 - the gradient and look there's that kind
77:32 - of a purpley color in the shadows so
77:35 - because we get the reference right over
77:37 - top of the image you you can work with
77:39 - them so closely together so in addition
77:41 - to the Alpha which I showed you before
77:43 - we have this thing called split view and
77:46 - what that does is it splits your overly
77:50 - image to your game and you can see the
77:53 - game needs a fair bit of work I want it
77:54 - to look like this but it's currently
77:57 - looking like this and to help you with
78:00 - this there's this button here the
78:02 - waveform monitor is just right at the
78:04 - very bottom and what this does is this
78:06 - opens a waveform editor and this shows
78:09 - you representation of all the colors in
78:11 - the scene you can see the line down the
78:13 - middle watches are wipe this moves now
78:17 - to some of you this looks like clown
78:19 - barf sea of colors doesn't make any
78:21 - sense to the artists the color graders
78:24 - the art directors you know
78:26 - this is a film grade and professional
78:28 - workflow and what you do is you tune
78:32 - your games lighting materials to match
78:37 - this so I can have a quick go so I'm
78:39 - going to increase the son size a little
78:41 - bit and then that's got us a lot closer
78:48 - look at this you can wipe and you can
78:52 - see I need a little bit more color in
78:54 - the Sun so I'm just gonna double click
78:57 - that here's my color add a little bit
79:01 - more I'm gonna do one more thing I think
79:03 - the shadows are a little bit out you
79:09 - know like you'd use a little bit more
79:10 - purple so when we just turned some color
79:11 - grading on you can see in seconds okay I
79:13 - rehearse this before but you you can see
79:15 - that in in in no time at all
79:18 - you're getting your game to look like
79:20 - your reference let me just do one more
79:21 - of this the sky color this is gonna
79:23 - control the shadows of the game and I
79:25 - just wipe this over a little bit more
79:27 - and being able to overlay your visual
79:31 - target with your game now you can see I
79:35 - just need a little bit more purple in my
79:37 - day lighting so I'm just gonna hit that
79:43 - and yeah scroogie close enough ship it
79:47 - ship and so I want to tie all this
79:52 - together this is lightweight this is a
79:58 - beautiful renderer which works on the
80:01 - most platforms that are out there and
80:03 - look at the features we talked about
80:04 - today we've got storyboard Pro builder
80:08 - the DCCC roundtrip the shader graph and
80:12 - then the color grading like any of these
80:13 - tools individually is powerful but
80:15 - together you can align your game with
80:18 - your vision
80:19 - you've got everything together and all
80:21 - of this is in unity 20 18.1 thank you
80:27 - please welcome
80:28 - Unity's co-founder and chief technology
80:31 - officer Jakob
80:33 - ante thank you since I was in high
80:42 - school which is when we wrote the first
80:45 - couple lines of code of unity we haven't
80:48 - really changed the core foundation
80:50 - pieces on top of which unit is built and
80:55 - today I want to talk to you about how
80:58 - we're going to evolve unity so
81:01 - everything we're building is based on
81:04 - some principles and goals and that's
81:07 - what I want to talk to you about today
81:09 - so when I'm working on a game there are
81:15 - times where I just need to sit around
81:18 - and wait and when that happens I can
81:23 - feel a little bit of anger inside of me
81:26 - building and we don't want that now I
81:31 - want everyone to be really happy when
81:34 - making computer games this is what we
81:36 - love to do we should always have fun
81:39 - doing it so we have a very specific goal
81:43 - in mind we want to make it so that any
81:47 - change to content and unity takes less
81:50 - than 500 milliseconds why 500
81:55 - milliseconds 500 milliseconds feels
81:58 - instant Google figure this out when you
82:01 - search with Google you never wait for
82:04 - longer than 500 milliseconds so 500
82:08 - milliseconds from making a change to
82:11 - single c-sharp file in a large project
82:13 - folder 500 milliseconds to changing an
82:18 - FBX file to seeing it take effect on the
82:21 - target device that's all go another
82:28 - really important idea I said we think
82:31 - hours of ourselves as your engine team
82:35 - but what is it what does that really
82:37 - mean so to me
82:39 - it means that we work in close
82:42 - collaborations on productions using
82:45 - unity and we did this while for example
82:47 - developing the entity component system
82:50 - together with our friends at Nadia's we
82:54 - created a tech demo of a large battle
82:56 - simulation to really show off what you
82:59 - can do with the entity component system
83:01 - and both both of the teams learnt a lot
83:06 - from that experience and it was really
83:07 - quite amazing and it had a huge impact
83:10 - on the final system and we want to do a
83:13 - lot more of that but to do that we need
83:18 - a really solid foundation and we need
83:21 - the ability to deliver changes only to
83:24 - the parts that we're working on so that
83:28 - you can update to the latest version of
83:31 - a particular feature in unity confident
83:34 - that all the other parts of unity stay
83:37 - exactly the same
83:37 - and that's packages then this is
83:43 - probably my favorite one
83:44 - this concept is performance by default
83:47 - so first of all what is what is
83:50 - performance really so I'll start with an
83:54 - example my friend Mike Acton he's
83:57 - probably one of the best engineers for
84:00 - writing high-performance game code in
84:02 - the world and when he writes code he
84:06 - knows exactly what hardware he's
84:09 - targeting and he lays out his data
84:11 - specifically for that hardware and he
84:15 - writes code specifically for the
84:16 - platform and he makes it run the most
84:19 - optimal way and so that's what we define
84:23 - as performance and when we say
84:26 - performance by default our aim is that
84:29 - we want to enable you to write code like
84:32 - that by default similar performance
84:36 - levels so the most the most important
84:41 - thing about performance is data layout
84:44 - and that's why we built the entity
84:47 - component system the entity component
84:50 - system is a new way of writing game code
84:53 - and engine code that makes it easy and
84:57 - automatic to access your data in the
85:00 - optimal way for the particular hardware
85:02 - you're targeting all using simple code
85:07 - now individual CPU core clock speed is
85:12 - not getting any faster anymore but more
85:15 - and more cores are being added so if you
85:19 - want to stay competitive
85:20 - making the best games you need to take
85:23 - advantage of multi-core hardware
85:25 - the problem is multi-threading is
85:29 - inherently difficult so we built the C
85:33 - shop job system to sell to solve the
85:36 - fundamental complexity of writing
85:39 - writing multi-threaded game code we make
85:43 - it safe and we make it easy
85:47 - the burst compiler is specifically made
85:50 - to write c-sharp jobs to compile C shop
85:54 - jobs
85:54 - it is about generating the optimal
85:56 - machine code for the different target
85:58 - platforms and we're making it very easy
86:01 - to take advantage of all the
86:03 - instructions on the CPU so as a whole
86:08 - when you combine all of these things
86:10 - together you can get on the order of 100
86:14 - X speed ups that is that is the entity
86:19 - components list right so by combining
86:25 - the entity component system c-sharp jobs
86:28 - and and the burst compiler you can get
86:30 - these speed ups another one is connected
86:35 - games connected games is super important
86:38 - for unity I believe that in the future
86:42 - almost all games that are successful
86:45 - will be will have some form of
86:48 - networking built into them and so we
86:52 - think that unity must become the best
86:55 - game engine to create Network games and
86:58 - I also think no one has really solved
87:01 - this problem right in any game engine so
87:03 - far and I think
87:06 - the problem is that game engines always
87:08 - look at this problem as oh we take this
87:11 - one networking architecture and then we
87:13 - will just fit that to all games but the
87:17 - reality is that different different
87:20 - types of games are really fundamentally
87:23 - different from a networking perspective
87:24 - the way your network a real-time
87:27 - strategy game and a first-person shooter
87:29 - are simply different so we're
87:32 - acknowledging that and we are building
87:34 - the networking architecture really into
87:37 - the core now and we're making it so that
87:39 - you can choose which networking
87:41 - architecture you want to go for if you
87:43 - want to go for an RTS game a fighting
87:45 - game or a first-person shooter now we
87:52 - want to make it really really easy so
87:54 - when you're writing game code we want to
87:56 - make it so that writing Network code
87:58 - comes by default so that you don't have
88:01 - to think much about that with a single
88:04 - way of writing code but ultimately so
88:11 - all of these changes they are really a
88:15 - big change in how you can write game
88:17 - code and ultimately the only one who can
88:21 - really convince you that this is a good
88:23 - way to do things is you you trying it on
88:29 - a real project by yourself and so our
88:32 - aim is to make it really easy to try it
88:35 - out if you have an existing project our
88:40 - goal is to make it so that in 30 minutes
88:43 - you can take a single monobehaviour
88:46 - with existing Unity game code and
88:49 - convert it to the entity component
88:51 - system and have a good experience
88:53 - optimizing your code all of this new
88:57 - technology you can adopt piece by piece
89:00 - so you choose if and when you want to
89:05 - use this tag inside of unity so
89:11 - everything we're building is based on
89:16 - these principles and goals some of those
89:18 - you can see clearly in the entity
89:21 - component systems others are goals we're
89:25 - only starting on now so how can you get
89:27 - involved today we're making the entik
89:31 - component system available as a preview
89:35 - isn't available for production yet this
89:37 - is for the adventures once those who
89:40 - want to make games that were impossible
89:42 - to make before we also have a tech demo
89:47 - showing a large battle simulation and
89:50 - we're making that project available to
89:52 - you as well today so this is the very
89:56 - beginning of a journey of evolving unity
89:59 - and we and want to invite you to take a
90:02 - look and give us feedback on that very
90:05 - early on to come along with us on that
90:07 - journey so thank you
90:17 - please welcome director of platforms
90:20 - ralph Cowart hi hi everyone that was our
90:25 - best high five to date you know what
90:27 - that high five is really well deserved
90:29 - because I've been playing I've been one
90:31 - of those people that have been
90:32 - pioneering and trying that build out
90:34 - actually I was lucky I got to try it out
90:35 - to get it with the Oh him and ECS and
90:38 - burst are really game changers but what
90:42 - yo Keem was talking about was experience
90:45 - of performance for experiences at
90:47 - large-scale Yocum was talking about was
90:51 - the big what i'm going to talk to you
90:54 - about is the small now I would almost
90:57 - like and that the fairy dust come out of
90:59 - my hands but when you develop these
91:03 - small footprint light experiences that
91:05 - can be delivered truly anywhere anywhere
91:07 - there are two fundamental components
91:10 - that matter one of them is P size the
91:13 - other one is speed now we want you we
91:20 - want to give you the ability to develop
91:21 - anything you can envision and you told
91:24 - us you want to build light and fast
91:28 - experiences to reach the world's next
91:34 - billion devices your apps need to be
91:38 - light and fast when thinking about entry
91:43 - level mobile phones wearables IOT or
91:48 - even the web your experiences need to be
91:51 - light and fast and we want to enable you
91:57 - to do that and create these experiences
91:58 - using the unity editor the tooling the
92:01 - extensibility of the editor and bring
92:03 - that to that world so we're expanding
92:06 - unity to support the development of
92:09 - smaller lighter and faster experiences
92:14 - to do this we've created a brand new
92:16 - highly modular architecture and new sets
92:20 - of specifically designed components that
92:22 - you can use using the unity editor you
92:24 - can create these components in the unity
92:26 - editor
92:26 - now this results in a smaller portable
92:30 - runtime that can run on natively on
92:32 - lightweight devices but something I'm
92:34 - very excited about and always have been
92:35 - very excited about is the web so let's
92:39 - talk a little bit about that runtime on
92:41 - the web for web-based deployment the
92:44 - file size of our compressed core runtime
92:47 - is 72 kilobytes kilobytes so let me hold
92:53 - on hold on let me put that in a frame of
92:55 - reference and then tease it out for you
92:57 - so a song you stream of the Internet on
92:59 - average is 4 megabytes a web page on
93:03 - average is 2 point 4 megabytes a desktop
93:06 - icon just the icon the file size of that
93:09 - is 500 kilobytes and we're doing 72
93:11 - kilobytes that's cool right but it's not
93:19 - just about that small runtime we're
93:22 - combining it with optimization through
93:24 - our asset pipeline to create small
93:25 - assets resulting into small file size so
93:30 - the data-driven architecture the exact
93:33 - same data-driven architecture that
93:34 - yochem just spoke about combined with
93:37 - those small assets that leads to fast
93:40 - delivery and startup times this
93:43 - fundamentally expands what you can build
93:45 - with unity all within the editor did you
93:47 - already know what the assets you already
93:50 - have unity will take care of packaging
93:54 - and compressing your assets for you
93:56 - now there's many use cases for such a
93:59 - runtime and I'm going to ask you to let
94:01 - your imagination run wild but today I
94:03 - want to talk about two of them label ads
94:05 - and games in messaging apps so let's
94:10 - talk about the first type playable ads
94:13 - play well ads are a demo format for ads
94:16 - that allows people to try your game
94:18 - without actually downloading it now
94:21 - since your games truly are fun and
94:23 - engaging and I know this I actually get
94:25 - to play them I have three small boys
94:26 - that play these games and point at the
94:28 - screen when the unity logo pops up and
94:30 - says look daddy your work it's beautiful
94:32 - to experience what all of you are
94:34 - creating but to get people to actually
94:36 - download and play them they need to try
94:39 - it
94:40 - they need to experience them and today
94:42 - it's really hard to provide that
94:45 - experience to be fair you know it's it's
94:48 - a lot of work to build them they are too
94:49 - big and quite frankly there's no tooling
94:52 - to build these things well let me
94:55 - demonstrate what we can do now so our
95:00 - friends at space ape the shade of share
95:02 - with us their assets for their game
95:03 - fastly we wanted to use something to
95:07 - show the effects what our small runtime
95:09 - that data-driven architecture and that
95:11 - asset pipeline for compression could do
95:13 - for you now I always shake a lot when I
95:16 - get on stage so I have asked Lucas do
95:18 - you actually come and demo together with
95:20 - me now Lucas before you start I wanna I
95:25 - want to actually pull some of everyone's
95:27 - attention to something before we start
95:29 - doing this so Lucas is gonna hit that
95:30 - icon for Fastlane but what I want you to
95:33 - pay most attention on is actually the
95:35 - time from the click to playing the game
95:37 - how about it Lucas are you ready for it
95:40 - I'm ready
95:40 - you're not paying attention I should pay
95:43 - attention let's watch all of that wait
95:49 - how about you play a bit Lucas okay so
95:53 - this game is actually using html5 in
95:57 - canvas
95:58 - now why well canvas is the ultimate way
96:01 - to actually deliver to a wide variety of
96:03 - devices I'm rendering 2d games it allows
96:07 - you to target a whole different devices
96:08 - of every end of the scale from low end
96:10 - to high end mobile now that was a cool
96:13 - example Lucas should we try the other
96:14 - one sure here we go let's go and try
96:16 - empires and puzzles by small giant games
96:19 - also a playable so that already cached
96:24 - or did that like did that download while
96:26 - I clicked it I hope it just downloaded
96:28 - it would support the statistics we have
96:30 - on that and all the measurements that we
96:31 - do every day so if you look at this game
96:35 - it's a lot more rich right there's more
96:37 - animation you can hear sounds you can
96:39 - hear the music you can see the animation
96:40 - in the characters but hopefully while
96:43 - doing that you also noticed the really
96:46 - fast download and start time for this
96:49 - application
96:50 - how's the game you're having fun at yeah
96:53 - I'll be here for a while
96:54 - well actually allow me to go a little
96:57 - bit more in depth because I think those
96:59 - two demos he they went by really fast
97:02 - the actual examples of Lucas thank you I
97:05 - want to dive in a little bit in the
97:06 - numbers so that first playable ad fast
97:12 - lane it actually we had two versions of
97:16 - that one version built without unity and
97:18 - one built one version built with unity
97:20 - so the version without unity was two
97:23 - point six megabytes that's the runtime
97:25 - all the assets everything downloading
97:27 - the other is actually built with our
97:30 - compression techniques and our new
97:32 - runtime and is data driven architecture
97:34 - and it's actually less than 800
97:36 - kilobytes
97:37 - oh that's cool right but there's another
97:45 - number that's important for this and
97:46 - it's actually if we if we go through the
97:49 - next slide here called load time the
97:52 - cold load time of the new on the unity
97:54 - version of this playable ad was 2.7
97:56 - seconds now what's called load time it's
97:59 - getting the game from the internet
98:01 - downloading and putting it on the device
98:02 - starting it up and actually player
98:04 - running it in this case for the non
98:06 - unity version that was 2.7 seconds in
98:09 - the unity version of this with this
98:11 - newer smaller runtime it took one point
98:14 - three seconds so one point three five
98:17 - seconds from from getting it from the
98:19 - internet and playing now all of this
98:22 - gives your players a better experience
98:24 - these are the people that are going to
98:25 - try your game it gives them a better
98:27 - experience but why well exactly what
98:28 - y'all Kim said nobody nobody wants to
98:31 - sit there and wait for something to load
98:32 - so faster is always better there but
98:35 - these properties the size and the load
98:38 - time they're also critical for building
98:41 - games in messaging apps we're expanding
98:45 - the base set of components in the
98:47 - runtime the same runtime that I just
98:49 - showed you so you can deploy rich and
98:52 - fast messaging games in messaging apps
98:55 - now I'm gonna teach you a little bit
98:57 - here currently we're working with a
98:59 - number of developers in close to alpha
99:01 - but we are bringing this to you in two
99:03 - in eighteen now a couple of times you
99:08 - heard already where your engine team we
99:11 - are your engine team no matter where you
99:13 - want to go no matter what you want to
99:15 - build no matter if it's big or small
99:17 - we'll help you get there
99:19 - thank you all so at this moment I'm the
99:30 - only thing between you and a drink so
99:32 - I'm gonna make this quick and try to get
99:34 - right to the point
99:35 - I'm gonna start with a word it's the
99:38 - words amazed and what am i amazed by a
99:41 - few short years ago unity developers all
99:45 - of you we're creating a tiny fraction of
99:48 - the world's games and interactive
99:50 - experiences and what I showed you
99:52 - earlier you're now making more than half
99:55 - of the world's games you're making 2/3
99:59 - 2/3 of the world's AR and VR and it's
100:02 - absolutely amazing and as I mentioned
100:05 - this notion that you're an industry onto
100:09 - yourselves one of the top employers in
100:12 - the world are you you're hiring more
100:15 - people than entire industry sectors
100:17 - because you as developers are changing
100:20 - the world you're creating you're
100:21 - innovating and you're changing the
100:22 - environment for all the cool things that
100:24 - come next and that's because of the
100:26 - craft and the commitment you have second
100:28 - word I want to talk about is pride I am
100:31 - seriously lucky and proud to stand
100:34 - before and after the presentations you
100:36 - two saw now there's Brett clicking his
100:38 - heels together and saying you know
100:40 - nested prefabs nested brief abs it's
100:42 - coming but what a roadmap you know
100:45 - Natasha and Natalia she goes by both you
100:47 - know what she showed with the script or
100:49 - elendor pipeline high def low down it
100:52 - changes everything you could make
100:54 - achingly beautiful products and what we
100:56 - saw from you Occam our standard once
101:00 - upon a time was to make the best game
101:03 - engine relative to our competition make
101:06 - no mistake you Wacom is ambition is to
101:09 - make the best game engine theoretically
101:11 - possible limited by things like the
101:13 - speed of light compute it's unbelievable
101:16 - with the ambition of
101:17 - and Ralph showed you something that we
101:19 - all know spall is beautiful small is
101:23 - fast small changes the devices you can
101:26 - reach the experiences you can create and
101:28 - the success you can have so thank you
101:31 - for attending our keynote presentation
101:34 - here at GDC in 2018 I hope you'll join
101:37 - me or several of us actually upstairs
101:39 - for a drink and in signing off got a
101:42 - interesting cute video to show you for a
101:45 - couple minutes and then it's off to the
101:46 - races
101:47 - thank you everyone sure oh wow okay no I
102:02 - don't know what I'm doing I get excited
102:11 - John rocket ello and I hang out a lot
102:15 - III refrain from saying on the CMO cuz
102:17 - it sounds a bit up its own ass yeah you
102:26 - know large wooden boat from Plymouth I
102:30 - had overnight oats you know I don't
102:34 - really dig it I set it to hack yeah but
102:38 - it's stuff that I can talk about you can
102:40 - put all kinds of interpretation into
102:42 - that okay okay how technical do you want
102:49 - me to get can you repeat the question
103:01 - again we have yes dad look give unity
103:09 - the long liberty long Jim iocai okay but
103:16 - I just crush your hey my mic is slipping
103:25 - [Laughter]
103:32 - nested prefabs I have a t-shirt I've
103:40 - made a t-shirt that's a nested prefabs
103:42 - question mark I don't think that's what
103:44 - the users want to hear it's just like I
103:46 - mean we're in literally in the middle of
103:49 - an icy void on a ball of rock here we go
103:52 - it's all being edited right so I'm just
103:54 - not gonna worry about it
103:58 - [Music]