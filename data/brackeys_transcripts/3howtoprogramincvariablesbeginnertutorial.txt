00:00 - thanks for tuning in at brakus hello
00:04 - everyone and welcome to the third video
00:05 - in how to program in C sharp today we
00:09 - are going to be making a simple
00:10 - calculator as I explain things such as
00:12 - declaring variables datatypes and
00:16 - variable initialization so that's super
00:19 - awesome and and we're going to lay the
00:21 - foundation today of pretty much every
00:23 - single program that you're ever going to
00:25 - write cool so let's just go and start it
00:29 - by opening up summer in studio and as
00:33 - you can see I've written out the
00:35 - challenge from the last videos let's
00:37 - just quickly go through this ask you to
00:39 - print out your name and age then wait
00:43 - some user input then print out your
00:45 - favorite color and then again wait some
00:48 - user input so this is done by first
00:50 - making a console.writeline
00:51 - saying that my name is Espeon and i am
00:54 - 17 years old then I'm just telling the
00:58 - user here to press the spacebar to
01:00 - continue then I'm waiting for a key this
01:04 - can be any key but it looks prettier
01:06 - with the spacebar and then we write out
01:09 - the favorite color and before that I've
01:13 - put a back backslash N and in the last
01:17 - video I kept saying reverse backslash
01:19 - it's of course just backslash or reverse
01:22 - - if you want which is going to make a
01:25 - new line so it we're just going to put
01:26 - some more space between them and then
01:29 - we're going to wait some it user input
01:30 - again let's just try and run this
01:33 - program you can say see it says my name
01:36 - and my age and it says press space to
01:38 - continue once I do that my favorite
01:41 - color appears cool so let me just go
01:46 - ahead and delete that for now because
01:48 - we're not going to be needing that I
01:50 - just wanted to show you how things are
01:52 - done again if you don't want to wait for
01:54 - the next video to complete a challenge
01:56 - or if there's just something you don't
01:58 - can't get to work just please feel free
02:02 - to ask a question or web forum top
02:04 - brackets to come there are so many
02:06 - people ready to answer your questions
02:08 - and I'm always here too so it's the best
02:11 - place to get answers
02:13 - cool so let's go ahead and make our
02:17 - calculator so what are we going to be
02:19 - needing well for calculator we need to
02:22 - store some user input so far we've only
02:24 - been waiting for it and then not really
02:27 - used to user input for anything other
02:29 - than to wait for it so now we are just
02:33 - going to try and store this in a box
02:36 - basically what we call a variable so
02:39 - what variables are are basically
02:41 - containers that you can put information
02:44 - and then access later or maybe even
02:46 - change a note this also I'm very
02:49 - abstract because these boxes come in
02:52 - different shapes and if the value you
02:55 - are trying to put in the box doesn't
02:56 - have the same shape it's going to throw
02:58 - an error and that's where data types
03:01 - come in so I'm going to explain that in
03:03 - a sec first let me just show you the
03:05 - syntax for creating a variable so for
03:08 - now we're just going to type var and
03:10 - then we're going to type the name of the
03:13 - variable and in our case this is going
03:15 - to be num1 for a number 1 but this can
03:18 - be anything you want as long as it
03:20 - doesn't start with a number I'm pretty
03:22 - sure and you can remember also that it's
03:26 - that capitalization is is important it's
03:29 - case sensitive and then we can simply
03:32 - type what we want this value to be so we
03:36 - could type here maybe we want this to
03:38 - start out at 10 this is where we could
03:41 - also put some user input instead if we
03:43 - want the user to define what the
03:45 - variable is is equal to but we actually
03:48 - don't have to give it a number from the
03:50 - beginning this line here alone is not
03:54 - valid and the reason why is because when
03:57 - we type var it's just going to predict
04:00 - what type of variable it's going to be
04:02 - depending on what we equal it to so if
04:05 - we equal it to 10 it knows that it's a
04:08 - number without decimal points and that
04:11 - is what be in programming called an int
04:14 - or an integer so the very sign here
04:19 - basically just says that we don't want
04:21 - to tell it what the type is we just
04:24 - wanted to find out itself
04:27 - once we are initialized but that's not
04:32 - really good programming practice because
04:34 - that can throw lots of problems and it
04:37 - makes code harder to read this is what I
04:40 - call is called implicit variable
04:43 - declaration what we can also do is what
04:46 - is what's called explicit variable
04:48 - declaration which is good to just get
04:51 - used to you from the start and that
04:53 - basically means that instead of typing
04:55 - bar we just directly type the type of
04:58 - variables that we want to declare so
05:02 - let's say that we want to make a number
05:03 - but we don't already know that this is
05:07 - going to what this is going to be equal
05:09 - to well then we can simply type int for
05:14 - a number without decimal points and then
05:17 - we can delete this and now it's actually
05:19 - completely valid that actually
05:22 - completely valid this is just the
05:25 - variable declaration then later we can
05:28 - take this num1 and we can equal it to
05:31 - let's say 20 and this is completely fine
05:35 - here we declare the variable and here we
05:38 - initialize it I just want you to get
05:41 - familiar with some of these terms
05:43 - because I'm going to be using them a lot
05:45 - and just try and remember them for now
05:49 - and then later you can maybe use them on
05:51 - your own so we're going to make a number
05:54 - one but there are also other types of
05:56 - variables this here the data type comes
06:00 - in many different shapes and forms we
06:02 - also have what is called a float which
06:06 - is basically a decimal point numbers so
06:10 - we are just going to call this decimal
06:13 - point and we're going to equal this to
06:17 - let's say ten point four so that what
06:22 - that's what you do with floats you do
06:25 - also sometimes sees what is called a
06:27 - double and that's basically just a float
06:30 - but with more precision then we also
06:33 - have a
06:37 - see here we also have a pool which is
06:40 - short for boolean and that's basically a
06:43 - value a variable that can either be true
06:45 - or false just like you might know that
06:48 - computers are built up around zeros and
06:51 - ones this values is basically the same
06:54 - but instead of calling it 0 & 1 we just
06:57 - call it true and false so this is just
07:01 - true or false and it's going to be equal
07:06 - to true in this case then at last we
07:10 - have what is called a string this is a
07:13 - string and this is basically what used
07:16 - for characters sentences or words if
07:19 - it's just one single character you need
07:22 - to store you can type char instead but
07:25 - we are just going to be using string
07:27 - most of the time so this could be a
07:29 - sentence and it's equal to hello world
07:37 - so that's some examples for the
07:40 - different that datatypes and their usage
07:43 - points now let's get actually into how
07:47 - we can can use this to create our
07:50 - calculator so first thing we're going to
07:54 - do is we're going to declare the first
07:56 - value and then we're going to declare
07:59 - another one called number two and now
08:03 - we're going to tell the user that he
08:06 - should type some number so basically
08:08 - what we're going to do is we're going to
08:10 - have the user type a number for the
08:13 - number one and then we are going to have
08:15 - them type a number for number two and
08:17 - we're going to multiply them and print
08:19 - out the answer so now we've declared the
08:22 - two variables we can now initialize them
08:25 - using some user input so we are going to
08:28 - type console dot write line actually
08:34 - let's just do write and I'm going to
08:36 - show you why just in a sec here so let's
08:39 - do you console that right and let's type
08:43 - type a number
08:47 - to be multiplied like this and the
08:55 - reason why we use concept I'll write
08:56 - instead of red line is because then we
08:58 - can have the number that is typed on the
09:01 - same line so when we then do console dot
09:05 - read line here that number is going to
09:10 - appear right after this sentence but
09:14 - right now when we will run the program
09:16 - you can see that we can type in a number
09:18 - and it enter and it just closes and it
09:23 - says here that the variable number one
09:25 - is declared but never used and the same
09:28 - with number two and that's because we
09:30 - have to actually tell it that we want
09:33 - the number one to equal this console
09:36 - that real line so we're going to say
09:38 - number one equals console that read line
09:43 - but this is going to throw us an error
09:45 - because the computer assumes that the
09:49 - console that we read line is a string
09:53 - remember what the string is a string is
09:55 - basically a sentence is a series of
09:57 - characters and it does that because we
10:00 - it can both be a string or just a number
10:03 - or a float it can be many types of
10:06 - variables inside of a string so what we
10:09 - need to do is we need to convert this
10:11 - into a number we need to tell it that we
10:14 - are expecting a number here and not a
10:17 - string so to do this we use the convert
10:21 - function so we can type convert dot to
10:26 - int and you can see that there are
10:29 - multiple different types of in seer and
10:31 - just like we have float and double there
10:34 - are multiple types of int for precision
10:37 - basically how long the integers can't
10:40 - that the value the number is going to be
10:42 - and the default one is just 32 so we're
10:46 - just going to type two int 32 and then
10:49 - we're going to wrap this concert that
10:51 - read line in parenthesis so now and I
10:56 - know this was a lot now we've actually
10:59 - gone ahead and declared two
11:01 - we've written out something to the
11:03 - council we've stored the user input in
11:08 - the first value by converting it to a
11:12 - number from a string so I know this was
11:16 - was probably quite a lot but if you can
11:20 - just at least type after me in the
11:22 - beginning here then you might go ahead
11:24 - and understand it fully later so when we
11:27 - now go ahead and hit play we're not
11:29 - going to see anything change we can go
11:31 - out and type 230 we're not going to see
11:34 - anything change but we don't get this
11:36 - error up here and we can now do things
11:39 - with this value here like double it or
11:42 - multiply it with another value which we
11:44 - are going to go ahead and do so now
11:46 - we're just going to do a console dot
11:48 - right again we're going to say type
11:51 - another number like this and then we're
11:59 - going to say that number 2 equals
12:03 - convert dot to int 32 and inside of this
12:09 - we are going to type console dot
12:12 - readline just like the line up here
12:15 - oops you need to put open and close
12:19 - parenthesis after the console that read
12:22 - line because remember that is a method
12:24 - and whenever we call a method we need we
12:29 - need parentheses cool so now we should
12:33 - see this error here disappear also this
12:35 - morning and we can go ahead and do
12:38 - something with these numbers and what we
12:40 - can do is actually really simple and you
12:42 - can get creative with this we can say
12:44 - console dot write line and we can say
12:50 - the result is like this and when then we
12:57 - do plus num1 times and simply use the
13:02 - star symbol here num2 and when we close
13:07 - this off and
13:09 - play type a number two be multiplied I'm
13:13 - going to do 25 type another number I'm
13:18 - going to do two and now it says very
13:22 - quickly that the number is 50 but
13:25 - remember again we always have to wait
13:27 - user input before the console closest on
13:31 - Windows so we're going to do console dot
13:34 - read key here so that it won't just
13:39 - quickly closed on us so now we can run
13:41 - through this and I promise you it will
13:43 - work this time we can say 30 times maybe
13:46 - 5 this 150 so there you go you've
13:51 - actually now made your first calculator
13:55 - your first valid program that that the
13:59 - user can now interact with so that was
14:03 - it on variables and how we use them and
14:05 - how to create basic functionality in a
14:07 - program I'm going to gonna go ahead and
14:10 - give you a second challenge here because
14:12 - so many of you love the last one so what
14:16 - I want you to do till next time is I
14:18 - want you to again type in write a
14:23 - program that will allow the user to
14:26 - divide two numbers and I'm just going to
14:30 - tell you that the division operator is a
14:32 - dash so I want you to write a program
14:36 - where the user can divide two numbers
14:38 - and whenever you print the result I want
14:42 - you to print out not only the result but
14:45 - also the two numbers that the user put
14:49 - in meaning that you should have a
14:51 - sentence that says this number divided
14:55 - by this number is equal to and then the
15:00 - result so I'm going to go ahead and let
15:02 - you figure out what how you can do that
15:04 - and then I'm going to show you in the
15:06 - next video should you find it difficult
15:09 - or or anything I know that this is all
15:12 - very new but I promise you that this
15:16 - almost becomes like a second language if
15:18 - you just practice it enough it's hard
15:21 - for everyone in the beginner
15:22 - but it won't stay that way cool so
15:25 - thanks for watching and I'll see you in
15:27 - the next video