00:00 - thanks for tuning in at brakus hello
00:03 - everyone welcome to video number 12 in
00:05 - the how to make a 2d platformer course
00:08 - in today's video we are going to be
00:10 - expanding on the subject of last time
00:12 - and now creating a respawn method that
00:16 - will of course be triggered whenever our
00:18 - player dies so let's just head right
00:22 - into unity and as usual if you have any
00:25 - questions whatsoever please go to forum
00:29 - practice comm where I among many other
00:32 - developers just waiting to answer your
00:34 - questions
00:35 - cool so first thing we are going to do
00:38 - here is we are going to head into our TM
00:42 - object under the game master script so
00:45 - double click that to open it up in
00:46 - monodevelop and we can see the right now
00:49 - this this only has one method called the
00:53 - kill player so let's expand a bit on
00:57 - this let's go ahead and make kind of a
01:01 - improvised single to singleton pattern
01:05 - I'm not going to show you how to do a
01:07 - full singleton but I will show you how
01:10 - to make sure that we have an instance of
01:12 - game master running that we can access
01:15 - so if you don't know what a single
01:17 - person pattern is it's basically
01:19 - basically a way to make sure that we
01:22 - only have one instance of a class in any
01:25 - given scene so the way we are going to
01:28 - do this here is we are going to make a
01:30 - public static game master and we're
01:36 - going to call this let's say GM we could
01:39 - also call it instance and then in our
01:42 - start function so void start we are
01:47 - going to say if GM is equal to null then
01:53 - we want to set GM to game object dot
01:58 - find I don't remember that we put a tag
02:02 - on GM let's just do a tag here so add
02:05 - tag game master or GM I'm going to do GM
02:10 - I think
02:12 - just GM or we need to remember to assign
02:15 - it also like this and we've actually not
02:20 - made this intro prefab so let's just go
02:22 - ahead and do that to drag it down here
02:24 - and now cool we can head back into the
02:27 - game master script and I'll say find
02:31 - that find game object with tag make sure
02:35 - that this is singular and then we're
02:37 - going to write GM so what this does is
02:41 - basically we have with a static variable
02:45 - called GM and we set it to the instance
02:49 - of the game master class if it's not
02:52 - already set so this is just a way for us
02:56 - to always have both a reference to
02:59 - static stuff like this by just doing
03:01 - game master kill player but now we also
03:05 - have a reference to the instance of the
03:08 - class so we can do stuff with with the
03:11 - unity inspector we can drag things in
03:14 - and change things in there and this is
03:16 - super cool because now we can whenever
03:18 - we want to access such those we can just
03:21 - use TM so to show you what this means
03:24 - since in in practice let's go ahead and
03:27 - write a respawn method so let's do
03:30 - public void respawn player and I don't
03:39 - think we're going to be taking any
03:41 - arguments and now what we can do inside
03:44 - of this is we can let's say first off
03:47 - spawn our player so let's create a
03:50 - public transform that is going to be the
03:54 - player prefab and yeah we're just going
03:59 - to start off with that so we can say
04:02 - instantiate player prefab and now we
04:08 - need to
04:09 - the position and here we could just make
04:11 - a reference to a spawn point so let's do
04:13 - public transform spawn point and then
04:18 - we'll do spawn point dot position here
04:21 - and then spawn point that rotation over
04:24 - here this way we can simply assign a
04:27 - spawn point in the inspector and drag it
04:29 - around if you want to change it
04:30 - we could also randomize this later and
04:33 - make an array of spawn points so we can
04:36 - spawn multiple places but for now we're
04:38 - just going to stick with one let me know
04:40 - in the comments if you want to see the
04:42 - random version cool so now that we have
04:45 - that in there
04:46 - what we can also do which maybe we could
04:50 - in a future video also add some
04:52 - particles on to this so I'm just going
04:55 - to debug that lock to do add spawn
05:01 - particles and this would be a great
05:05 - place to do it you would simply create a
05:07 - transform with a reference to the
05:09 - particles and instantiate them here just
05:12 - like we instantiated the player so now
05:15 - that we want to call this respawn player
05:18 - function in the kill player method all
05:21 - we have to do is simply say GM dot
05:24 - respawn player and now we've called the
05:28 - method so if we save this now and head
05:31 - over into unity we'll see if we have any
05:34 - errors cannot implicit the convert type
05:37 - Unity game object to game masters let's
05:39 - see what's going on here oh yeah we have
05:41 - to do game object I'd find game object
05:46 - with tag so we could here to dot get
05:49 - component and then game master to make
05:53 - sure that we are getting the game master
05:55 - component and not a game object we could
05:58 - also just change this to game object but
06:01 - I think it makes more sense that this is
06:03 - of type game masters of type the class
06:06 - here cool so now we head back into unity
06:09 - and let's see if this is working so we
06:11 - play and oops we of course also have to
06:15 - assign our player prefab and our spawn
06:19 - point so now head into the project
06:21 - and let's first off find our player
06:25 - prefab make sure that you apply all
06:27 - changes and if I remember correctly we
06:30 - actually didn't drag him out of the
06:32 - sample assets even though we've changed
06:33 - him so much so go into there on the 2d
06:36 - and the prefabs and here he is so let's
06:39 - just drag him into the root folder into
06:42 - our assets folder and now we can select
06:44 - the TM object and drag him onto the
06:47 - player prefab position now the spawn
06:50 - point let's go ahead and make an empty
06:53 - game object so just do command shift N
06:56 - or control if you're on a Windows let's
06:59 - reset the transform so we know where we
07:01 - have it let's call this spawn point and
07:05 - maybe just drag it up a bit so he won't
07:08 - spawn inside of the ground so let's just
07:10 - put it there looks fine so okay that it
07:13 - it's on top of the place where he's he
07:16 - starts and now we can actually label
07:19 - this just like we have labeled the
07:22 - ceiling check and the ground check let's
07:24 - label the spawn point so we can easily
07:26 - find spawn points throughout our scene
07:29 - so to do this simply click on the box
07:32 - here and we can now select an icon we
07:35 - could also import an image as an icon
07:38 - but we can just use one default one so
07:40 - let's do the purple one here and you can
07:43 - see that it will name it spawn point you
07:45 - could also do one of the one of the
07:49 - shapes it's it's completely up to you I
07:51 - just like having the name on there so
07:54 - now that we have that available let's go
07:56 - ahead and maybe drag this under the GM
07:59 - object it makes sense to have it there
08:02 - and now let's hit apply oh yeah we also
08:05 - have to drag it under the spawn point
08:08 - slot and now let's hit apply to apply
08:10 - all changes to a GM object now when we
08:14 - hit play and jump down you can see that
08:18 - our player instantly reappears but that
08:22 - might not be what we're interested in
08:24 - many many games have this delay to kind
08:28 - of punish whenever you die so in order
08:31 - to do this we could maybe or
08:34 - punish the player by simply reloading
08:37 - the level and therefore every progress
08:39 - he's made is just going to be gone but
08:42 - instead what I want to do at least for
08:44 - now is just create a timer that will
08:47 - count down a couple of seconds before we
08:51 - respawn the player so in order to do
08:55 - this we need to use the or we could use
08:59 - the yield return new waitforseconds and
09:04 - now we can put a time in there let's
09:07 - make a public variable for that so
09:09 - public integer spawn delay and then
09:14 - inside of the wait for seconds we're
09:16 - just going to put the spawn delay and
09:18 - let's default this to let's say 2 so
09:22 - this will wait a certain amount of
09:24 - seconds in this case 2 before it goes
09:27 - ahead and instantiates the player also
09:30 - it would be a great place to put some
09:32 - kind of audio that will play or tell us
09:36 - that our our players responding we could
09:39 - also do some DUI I don't have too much
09:42 - time for in this video to do all of the
09:45 - particles and audio and gooey stuff but
09:47 - that might be for future video again if
09:50 - it's something you're interested in
09:51 - please leave it as a comment and I'll
09:53 - make sure to create a video for it but
09:56 - here we can just for now leave a to do
09:58 - that we should add waiting for a spawn
10:02 - sound cool and this looks pretty good
10:08 - but it won't actually compile and the
10:10 - reason why is whenever we do a yield
10:13 - return new waitforseconds where whenever
10:15 - we use the yield here we have to make
10:19 - this not a type void but the return type
10:23 - I in numerator again I've talked about
10:26 - this in other videos if if you're very
10:31 - confused by this please go ahead and
10:33 - look up co-routines in unity and things
10:37 - will make a lot more sense but for now
10:39 - just know that this is something we have
10:41 - to do
10:42 - and whenever we recall an eye enumerator
10:45 - we we can't just do GM that respawn
10:48 - we actually have to write a DM
10:52 - because we're calling it on the GM
10:54 - object dot start corroding and then put
10:58 - in the GM dot respawn player and make
11:01 - sure you have GM in front of both the
11:03 - stacker routine and the respawn player
11:06 - or it's not going to work cool so now
11:08 - when we save this this should be working
11:11 - just perfectly so we hit play we jump
11:14 - down wait a couple of seconds one two
11:17 - and there he is
11:18 - cool so you will notice that right now
11:23 - we are indeed spawning and we can jump
11:26 - around and we can do this as many times
11:27 - as as needed but our camera isn't really
11:32 - following anymore
11:33 - and the reason why is right now in our
11:36 - camera script if we open that up the
11:38 - camera 2d follow actually I just want to
11:42 - quickly drag this out from the assemble
11:44 - assets to into the assets folder there
11:48 - it's just been annoying me that it was
11:50 - inside of that folder when we are
11:54 - actually using it so much in a game now
11:57 - let's open it up and you will notice
11:59 - that the reason why we are sorry our
12:02 - camera just disconnects is that we've
12:05 - put this if Tiger this equal to null
12:07 - then return and the target stays null we
12:11 - we need to implement some kind of
12:13 - functionality that will check or search
12:16 - for the player when he when we don't
12:20 - have a reference to him so what we could
12:24 - do is have something in the game master
12:26 - function that's that sends over a
12:29 - reference to the player whenever he's
12:32 - instantiated or we could just inside of
12:36 - the camera 2d follow script make a
12:39 - function that searches for the player
12:41 - and when he finds it sets the target
12:44 - target equal to the player so I think we
12:47 - are going to go with the second method
12:49 - but if you would like to do the other
12:50 - one please experiment cool so again we
12:54 - are going to check if our target is
12:56 - equal to null but we are going to do
12:58 - more than one thing so let's just open
13:00 - up some brackets here
13:02 - and the first thing we're going to do is
13:04 - now we are going to find player
13:09 - yeah just find player or we search for
13:11 - player whatever you want to do so we're
13:13 - going to call this find player method
13:16 - that we're going to be making in a sec
13:17 - and then we want to return now we can go
13:22 - ahead and make this method and it's just
13:25 - going to be a normal return type of word
13:27 - which means we won't return anything and
13:30 - we're going to call it find player and
13:33 - inside of this what we want to do is we
13:38 - want to use game object that find game
13:42 - object with tag on the player but this
13:46 - operation is actually pretty taxing on
13:50 - the computer and not something you
13:52 - should be doing every frame so instead
13:55 - let's go ahead and make a kind of a
13:58 - delay that will make sure that we only
14:01 - search for the player let's say two
14:03 - times a second so to do this what we
14:07 - want to do is we want to first make a
14:10 - private variable up here of type float
14:13 - and we're going to call this next time
14:18 - to search and we're going to default
14:22 - this to zero and this is going to star
14:26 - the point in time that we want to do on
14:29 - its next search for the player and now
14:32 - inside of define player we can simply
14:35 - say if next time to search it's less
14:38 - than or equal to time time so if the
14:43 - point in time that we want to search has
14:46 - passed or is equal to right now then we
14:51 - want to find our player and we do this
14:54 - using a game object dot find game object
15:01 - with tag again make sure this is
15:03 - singular and the tag is going to be
15:06 - player and remember whenever we search
15:09 - for a tag we need to also check that our
15:12 - player has the player tag so if he
15:14 - doesn't make it now
15:16 - and let's just store this in a temporary
15:20 - variable so let's do game objects and
15:26 - let's just call this search result
15:30 - because if we don't find the player this
15:33 - is just going to be equal to null and if
15:35 - we find him this is of course going to
15:37 - be equal to the player so what we can do
15:40 - now is we can check if search result is
15:43 - equal to null then we can or is not
15:50 - equal to null as what I meant to say if
15:52 - it's not equal to null then we can set
15:56 - our target to be equal to our search
16:00 - result dot transform because if we just
16:05 - said that directly we will get an error
16:08 - whenever we try to access the transform
16:12 - because we can't access the transform of
16:14 - null so we want to make sure that it's
16:17 - not null and then set the target to the
16:20 - search results transform and then down
16:23 - here what we want to say is that our
16:25 - next time to search is going to be equal
16:28 - to time time and then plus whatever
16:33 - delay that you want in between searches
16:36 - so I'm just going to do let's say it's
16:39 - 0.5 so we will search 2 times each on
16:43 - each second so if that makes sense to
16:48 - you now let's head back into unity and
16:51 - let's see here we can implicitly convert
16:54 - a double to a float so where are we here
16:58 - oh yeah of course we need to change this
17:00 - to an F so now inside of unity we are
17:07 - error-free and under our GM objects
17:11 - everything should be looking just the
17:13 - same but now when we go ahead and hit
17:16 - play and we jump down our camera
17:23 - to search for our player and it's going
17:25 - to snap right back to him and it's even
17:27 - going to do so smoothly because of the
17:29 - way we've done movement with the camera
17:32 - so that's it for responding our player I
17:35 - think this looks pretty pretty awesome
17:37 - actually and next time we might have a
17:40 - look at doing something with some audio
17:43 - or some particles or something but
17:45 - that's completely up to you if you want
17:47 - to see it leave it in a comment or in
17:49 - general if there's something else you
17:51 - want to see just leave it in as a
17:53 - suggestion below so again thanks for
17:56 - watching and I'll see you in the next
17:58 - video
17:59 - [Music]