00:00 - in this video we'll use shada graph to
00:01 - create a cool-looking forcefield
00:03 - and then you should have something that
00:04 - looks like this I'm sure Winston would
00:06 - be proud
00:07 - notice how the effect takes advantage of
00:08 - a new node called scene depth to show
00:11 - where it intersects with other objects
00:13 - this same effect can easily be applied
00:14 - to create other cool effects like foam
00:16 - in water or a sci-fi scanner but before
00:19 - we get started this video is sponsored
00:21 - by skill share skill share is an online
00:23 - learning community with more than 27,000
00:25 - quality classes on game development tech
00:27 - and more if for example you don't have
00:29 - any prior experience in unity but really
00:31 - want to make your game idea come to life
00:33 - this course teaches you the basics of
00:35 - unity without having to write any code
00:37 - at the end of the course you will even
00:39 - have created to gaming classics breakout
00:41 - and doodle jump skill shares the perfect
00:43 - platform to keep learning and thriving
00:45 - and ask OCR membership gives you
00:46 - unlimited access to all classes for less
00:48 - than $10 a month join more than 7
00:51 - million credits by simply clicking the
00:52 - link in the description and the first
00:54 - 500 people will receive their first two
00:56 - months for free also special thanks to
00:58 - infinity PPR for his support on patreon
01:00 - and with that let's get shading so first
01:05 - of all you want to make sure that you're
01:06 - using unity 2000 19.1 or later and share
01:10 - the graph now works with both the
01:11 - lightweight and the HD render pipeline
01:14 - but no matter which one you're using you
01:16 - should go to window select the package
01:18 - manager it's like the render pipeline
01:20 - you're using in this case I'm using
01:21 - lightweight and make sure it's
01:22 - completely up to date if you don't know
01:25 - how to set up your project for a
01:26 - lightweight I'll make sure to have a
01:27 - link on how you can do that in the
01:29 - description now in order to create this
01:30 - force field effect we of course need to
01:32 - create an object that will have our
01:34 - material so let's go to the hierarchy
01:36 - right click go 3d object and let's
01:38 - select a sphere let's also scale this up
01:41 - and I'm just gonna put it next to the
01:43 - wall here something like that
01:46 - notice how I'm making sure that this
01:47 - object is intersecting with other
01:49 - objects so that we can see this part of
01:51 - the shaded working as well and now we're
01:53 - ready to create our shaders let's go to
01:55 - the project he create let's go to shader
01:58 - and here we want to select PPR graph
02:00 - let's call it forest field and we don't
02:04 - want to create a material from this
02:05 - shader so we can just right click on it
02:08 - go create and then material and it's
02:10 - then gonna automatically create a
02:12 - material with the
02:13 - Shadid selected i'm just gonna call this
02:15 - material forcefield as well let's then
02:18 - take this material drag it in and apply
02:20 - it to our sphere and now it's almost
02:23 - time to jump into shader graph but first
02:25 - we need to go and find our lightweight
02:27 - render pipeline object so in my case I'm
02:29 - using the high quality one right here
02:31 - which is what it's using by default when
02:33 - you set up a new lightweight template
02:36 - project and we want to make sure that
02:38 - under general we have depth texture set
02:41 - to true that's because we're going to be
02:43 - using this scene depth node to create
02:44 - this effect and that requires a depth
02:47 - texture otherwise that node is just
02:48 - going to give us a gray output and now
02:51 - we're ready to jump into shader graph so
02:53 - let's double-click on a forcefield
02:54 - shader and it's going to open up in a
02:57 - separate window I'm just going to full
02:58 - screen this and at this point it's
03:00 - shader time now I would say this effect
03:02 - can be split up into three main parts
03:04 - the first one is the intersection so we
03:07 - want to create kind of a glowing effect
03:09 - wherever this object touches of the
03:11 - objects the second one is just a general
03:13 - glowing outline for the parts that
03:15 - aren't touching anything and the third
03:17 - one is a scrolling pattern that we can
03:20 - kind of overlay so let's start with the
03:22 - hardest part of this shader which is the
03:24 - intersection so the first thing that
03:26 - we're going to need is to access our
03:27 - scene depth so to do this we're going to
03:30 - go and create a scene depth node and
03:33 - this is going to get the camera step
03:34 - buffer and we can choose how it's going
03:36 - to sample it we are going to choose eye
03:38 - which means that it's going to be
03:40 - converted to eyes base units why this is
03:43 - important it's a bit difficult to
03:45 - explain for now just go with me we are
03:47 - also going to access the screen position
03:50 - so let's go ahead and create a screen
03:52 - position node and here we're going to
03:54 - set the mode to raw and basically what
03:57 - screen position does is it accesses the
04:01 - mesh vertex screen position and why is
04:04 - this useful
04:05 - well it's useful because we can know how
04:07 - far a way a vertex is and then compare
04:11 - that to our scene depth buffer and in
04:13 - fact if we subtract this vertex distance
04:16 - from our scene depth we're going to get
04:18 - a cool intersection in fact so to
04:21 - actually do this in practice we want to
04:23 - split up our screen position so we'll
04:25 - input it into a split node
04:27 - and we only want to use the very last
04:29 - component here so the Alpha value and
04:31 - we're going to simply take that and
04:33 - subtract it from a scene depth so let's
04:35 - go from scene depth into a subtract node
04:38 - and let's go from our alpha of a split
04:40 - into that subtract node and that should
04:43 - in fact already be working in theory so
04:46 - what we can do now is take this entire
04:49 - thing let's plug it into the emission of
04:52 - our PBR master node this is just
04:54 - temporary but it should allow us to see
04:55 - kind of what's going on I'm also going
04:57 - to go to a PBR master node and change
05:00 - the surface type to transparent because
05:02 - we're going to be working with
05:03 - transparency and now if we save this
05:06 - asset and go into unity voila we can see
05:10 - kind of what's going on here we have
05:11 - this fading gradient wherever this
05:14 - object intersects with the wall now it
05:17 - looks a bit weird from the other side
05:19 - here currently but we can see kind of
05:20 - the same thing happening and the main
05:22 - reason why this is currently looking
05:24 - weird is because our sphere is also
05:26 - casting shadows and we really don't want
05:29 - that for this effect so let's select our
05:31 - sphere let's go to the mesh renderer and
05:33 - set cache shadows to off and right away
05:36 - you can see that looks a lot better the
05:39 - gradient isn't as clear here because the
05:41 - light is hitting it from the front but
05:42 - it is still there so the next thing that
05:45 - we want to do is allow ourselves to kind
05:47 - of control this gradient and we do that
05:49 - really easily by simply offsetting our
05:51 - screen position so to do that let's go
05:54 - up here and let's create a vector one
05:56 - let's call it offset and let's drag it
05:59 - in to create a node out of it and to use
06:01 - this offset we can simply remove this
06:03 - connection from a split node to a
06:05 - subtract node and instead put it into a
06:07 - separate subtract node and we'll simply
06:09 - subtract our offset there and I'm just
06:12 - going to default this to a value of say
06:14 - 0.6 we then take the output of this
06:17 - subtract node and put it in to this one
06:20 - so we've just added a tiny step here
06:23 - where we subtract a value from our
06:25 - screen position and then we put it back
06:27 - in and subtract it from our scene depth
06:30 - and now if we save that and go back into
06:34 - unity we can see that we can start to
06:36 - control this gradient that happens at
06:39 - the intersections you
06:40 - see that simply by adjusting the offset
06:42 - we can make that more or less apparent
06:45 - pretty cool but of course we don't want
06:48 - to add this to the emission of our PBR
06:50 - masternode instead we wanted to change
06:52 - the alpha of our material so let's
06:55 - remove this from the emission let's plug
06:58 - it into the Alpha instead and if we just
07:01 - say that and have a look at what's going
07:03 - on it's going to look really really
07:06 - weird and the reason for this is that
07:08 - currently this value isn't clamped to go
07:10 - between zero and one which is what the
07:12 - Alpha expects whenever we go below zero
07:15 - on the Alpha or above one things start
07:18 - to get wacky so what we want to do is
07:21 - first of all we want to reverse this
07:24 - because the Alpha works in such a way
07:25 - that white values are non transparent
07:28 - and black values are transparent and
07:30 - currently we have black values near the
07:33 - edges which means that we should
07:35 - probably reverse what we have going on
07:37 - here so to do that we simply plug it
07:39 - through a 1 minus node and that is
07:42 - basically going to do exactly what it
07:43 - says here it's going to multiply
07:45 - everything with minus 1 which of course
07:47 - is going to reverse it and then in order
07:50 - to clamp the value between 0 & 1 we can
07:54 - output this into a smooth step node
07:57 - we're going to take the Ln input here
08:00 - and it's going to go between as you can
08:02 - see 0 and 1 and this is both going to
08:05 - clamp the value to make sure it doesn't
08:07 - go under 0 or above 1 but it's also
08:10 - going to use a smooth hermite
08:12 - interpolation to create kind of a nice
08:15 - smooth gradient so let's output this
08:18 - directly into our alpha and I'm also
08:20 - just going to collapse this and make
08:23 - some room here and if we now save this
08:25 - asset we should see and it's not very
08:28 - visible right now but we should see that
08:30 - we have this outline near the
08:33 - intersections of our material really
08:36 - really cool and the reason why these
08:37 - aren't very clear at the moment it's
08:39 - because well we're just using the
08:41 - default albedo of our ppm master and we
08:44 - haven't applied any emission and I think
08:46 - if there's anything that deserves
08:48 - emission it's a force field so let's fix
08:51 - this right now in fact let's create a
08:53 - property in our blackboard
08:54 - said plus let's select color and this is
08:57 - going to be the emission as the mode
08:59 - here we'll change it to HDR which allows
09:02 - us to in here not only define a color
09:05 - I'm gonna set mine to some kind of light
09:07 - blue but we can also define an intensity
09:10 - of our glow so I'm gonna set that to
09:13 - something like 2.6 let's drag it in to
09:15 - create a node out of it and it's dragged
09:18 - that straight into the emission so now
09:20 - we can control the emission of this
09:22 - effect through the editor and let's save
09:25 - that asset close it and now you can see
09:28 - kind of what in effect we are starting
09:30 - to get here and just to make this a bit
09:32 - prettier I'm gonna go into my
09:33 - post-processing profile and add in some
09:36 - bloom and that is really going to help
09:39 - sell this effect in fact why don't we go
09:41 - ahead and make it just a tiny bit more
09:43 - intense there we go so that concludes
09:46 - the first and hardest part of the effect
09:49 - which is adding the intersections the
09:51 - next part is actually fairly easy here
09:54 - we want to add the glowing outline to
09:56 - the rest of our model and if you watch
09:58 - the videos for a while you might know
10:00 - that I'm a big fan of fernell so that's
10:02 - exactly what we're going to be using
10:04 - here that's adding a final effect let's
10:06 - set the power to something like 5 and we
10:09 - should probably make this adjustable
10:11 - from within the editor so let's go ahead
10:14 - and add a setting for that as well a
10:16 - victor 1 let's just call it for nil
10:18 - power and its default that to 5 drag it
10:23 - in and hook that up and there we go and
10:26 - all we are going to do is simply add
10:27 - this on top so let's take this entire
10:30 - thing here remove this connection and
10:32 - for our fernell let's go ahead and plug
10:35 - this into an ADD node let's also take
10:38 - the output of a smooth step and plug
10:40 - that in and now we should pretty much be
10:42 - ready to just take the output of all
10:44 - this and wired into the Alpha oops
10:47 - there's a note behind here and as you
10:49 - can see in our preview the Fornelli
10:51 - effect immediately shows up and if we
10:53 - save this asset and go back into unity
10:56 - we can clearly see it working so that's
10:58 - really really cool and I'm actually
11:01 - going to go ahead and bump down the
11:02 - intensity again because that is a bit
11:04 - too much there we go that looks really
11:07 - really cool
11:08 - that is the first two parts of the
11:09 - effect and the final part is also fairly
11:12 - easy that is adding a scrolling pattern
11:15 - across the force field to do this that's
11:17 - open up shader graph and of course in
11:19 - order to define a scrolling pattern you
11:21 - could use some kind of noise or
11:22 - generated texture but I'm just going to
11:24 - go ahead and use a texture that I found
11:27 - so I'm gonna hit + here create a texture
11:30 - 2d property and it's called this one
11:32 - pattern as the default texture here I'm
11:35 - gonna input the texture that I found I
11:38 - found this really cool looking hexagon
11:39 - grid and let me just show you this real
11:42 - quick it's basically just there we go
11:44 - it's a hexagon grid there's not much to
11:47 - it you can use any kind of grid light
11:49 - structure just make sure that it tiles
11:51 - seamlessly so with this pattern I'm
11:54 - going to drag that in and of course
11:57 - whenever we are working with a texture
11:59 - we want to output this into a sample
12:01 - texture node and that is going to
12:03 - display it and what we want to do is
12:06 - basically multiply this together with
12:09 - the output of our outline so to do that
12:13 - let's take this entire thing here so
12:15 - let's take all these nodes not including
12:18 - that one let's move them over let's
12:21 - remove this connection here and let's go
12:23 - ahead and multiply this texture so we'll
12:26 - take the output of the texture here put
12:28 - it into a multiply node took a do with
12:31 - our outline and let's take the result of
12:34 - that and plug it in to our alpha and as
12:37 - you can see right away this is going to
12:39 - add the pattern to our outline and that
12:41 - already looks really cool but I would
12:43 - like some control over this pattern in
12:45 - terms of tiling so let's go ahead and
12:47 - drag from the UVs here out and create a
12:51 - tiling and offset node and I'm just
12:53 - gonna tile this in say 3 by 3 just to
12:56 - make them smaller I think that looks
12:58 - much cooler and it's also try and offset
13:01 - this over time to create that scrolling
13:03 - effect so to do that we want a time node
13:05 - and we just use the standard time here
13:09 - let's multiply this by some value in
13:12 - order to be able to control the scroll
13:13 - speed so let's go ahead and create a
13:15 - vector one scroll speed and let's
13:18 - default this to something really low
13:20 - like zero
13:22 - 0-5 drag that in two hour multiply node
13:26 - and hook this up to the offset and you
13:29 - could of course use a vector two to
13:31 - control this on the x and y individually
13:33 - but I'm just gonna go ahead and make it
13:34 - scroll on them both simultaneously and
13:37 - with that in our preview here you can
13:39 - see that our texture is indeed scrolling
13:41 - and I think that looks really cool
13:43 - wrapped around a sphere so I'm just
13:46 - gonna take all of this and move it down
13:48 - and save the asset and in unity here we
13:51 - need to go ahead and hook up a texture
13:53 - to the pattern I'm gonna choose the same
13:55 - hexagon grid and voila we have a really
13:59 - cool scrolling pattern the very final
14:01 - thing that I want to do I didn't include
14:03 - this as part of the three steps it's
14:05 - because it's so small
14:06 - I just want to fill in a tiny bit of
14:09 - blue on the inside of the circle as well
14:11 - and in order to do this I'm gonna remove
14:13 - the connection from a multiply node here
14:15 - and instead just add in an add node
14:18 - along with some kind of vector one so
14:21 - that's create a vector one here let's
14:24 - just call it feel and let's set this
14:26 - value to point zero one it's dragging a
14:29 - fill here and that's all we want to add
14:31 - on top just to add in a tiny bit of
14:33 - extra so now inside of our alpha here
14:36 - you can see that there's a tiny bit of
14:37 - blue in there and you can of course go
14:39 - ahead and play around with how much you
14:41 - want that to be but for now I think that
14:43 - is pretty good and that concludes our
14:47 - shaders let's save this go back into
14:49 - unity and there we go now we have a
14:52 - really nice looking force field we can
14:54 - adjust the for nail power the offset on
14:58 - the transition we can adjust the pattern
15:01 - texture the scroll speed on that texture
15:04 - I'm going to just fill in order to kind
15:06 - of fill in on the power shield here and
15:09 - we can even go ahead and adjust the
15:12 - color to anything that we'd like so
15:15 - really a lot of options on this and it's
15:18 - just a really fun and cold effect yay
15:21 - that's pretty much it for this video if
15:23 - you want to see more videos on shady
15:24 - graft that need let us know in the
15:26 - comments until then you can check out
15:27 - some of our other shader graph videos
15:29 - and if you like this video consider
15:31 - supporting us on patreon patreon is a
15:33 - great site that allows you to make a
15:34 - monthly donation
15:35 - you're choosing and you can cancel it at
15:37 - any time by supporting you're helping us
15:39 - to continue to make these videos in the
15:41 - future and not only that by supporting
15:43 - you also get your name read aloud in the
15:44 - videos for that month and you get to
15:46 - join our discord server as a supporter
15:48 - mmm mr. supporter joins the chat a huge
15:53 - thanks to all the people who have
15:54 - supported so far and if you want to
15:56 - support simply go to patreon.com/scishow
16:00 - simply click the link in the description
16:02 - to get started on that thanks for
16:03 - watching and I will see you in the next
16:05 - video
16:06 - I'm sure Winston would be proud thanks
16:13 - of the awesome picture and supporters
16:15 - who donated in March and a special
16:17 - thanks to infinity PPR
16:18 - Sybok mummy Dennis Sullivan Kris Shane
16:21 - Cleveland face America Lincoln Chang Liu
16:23 - descent ruining furniture to Sonic
16:26 - constantinos currents us now k Vaisakhi
16:28 - Craig refused rock burn dr. poon moon
16:31 - Erasmus and cures Valesky you guys Rock