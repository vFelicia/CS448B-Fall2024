00:00 - thanks for tuning in at brakus hello
00:04 - everyone and welcome to this video this
00:05 - is a recording of the first ever
00:06 - brackets live stream that we did
00:08 - yesterday and it was a blast I had so
00:11 - much fun you guys were awesome and we
00:13 - basically created this a dodgy falling
00:16 - back style game so the recording for
00:19 - that is coming up in just a second I
00:20 - just wanted to say that this is an extra
00:22 - video on top of the other videos that
00:25 - will come out this week of course so
00:27 - don't worry about that and also if you
00:29 - want to download the game and play
00:31 - around with it yourself I have a link to
00:33 - the source code in the description down
00:34 - below I uploaded it to github so it
00:37 - that's fully available so without
00:39 - further ado enjoy the stream and I will
00:41 - see you there okay so I'm really glad
00:44 - everything uh everything is working and
00:46 - if you haven't seen this on on youtube
00:50 - what we are going to be making today is
00:52 - one of those I dodge the block kind of
00:56 - games so I already have the game set up
00:59 - here so we can see what we will be
01:01 - working towards and this is mostly for
01:03 - the beginner to intermediate um we are
01:05 - going to be going on fairly slowly
01:08 - forward so I will be able to explain
01:10 - most of what we're doing so but it's
01:12 - going to be a lot of fun I can just show
01:13 - the game here while we're waiting for it
01:15 - for people to join the stream so this is
01:18 - what we're going to be making you can
01:20 - see that I have a player here with some
01:23 - amazing art I did it myself it's true uh
01:26 - and if we hit play here we're able to
01:29 - move around the scene and some blocks
01:32 - will randomly spawn in and one really
01:35 - cool feature that I like is this kind of
01:37 - slow-motion a death can so when we when
01:40 - we get hit by something you can see that
01:42 - it slows down time until it loads a new
01:45 - frame and we have some physics going on
01:47 - there so um that's kind of what we are
01:49 - going to be working towards in this
01:51 - example I also have a feature
01:54 - implemented where we um kind of make the
01:58 - blocks fall faster and faster as time
02:01 - increases so if we have time I will show
02:04 - how to do that as well
02:07 - cool and also of course ask all the
02:10 - questions you want in the comments I am
02:13 - probably bad at paying attention to them
02:15 - while talking but I will try and answer
02:18 - some of them along the way or at least
02:21 - we'll do some Q&A towards the end um so
02:24 - yeah um so I think a lot of people are
02:27 - in here already
02:29 - so I think that we should just go ahead
02:32 - and get started and yes to the first
02:34 - question I did use time scale to make
02:36 - the slow motion but whenever you adjust
02:39 - the time scale you have to adjust time
02:42 - fix Delta time as well because we are
02:44 - doing some physics movement if you don't
02:47 - do that it won't be smooth but we'll get
02:50 - into that in a second so another sip of
02:54 - water here and um another question yes
02:58 - um I will try and upload this to youtube
03:00 - so if twitch stores it probably and I'm
03:03 - able to put it off their servers I will
03:04 - definitely upload it um but we'll see
03:08 - about that I don't know about the
03:09 - Technic technicalities yet I haven't set
03:12 - up to be able to record this while
03:14 - streaming so I will have to pull it from
03:16 - twitch so if there's any issues I might
03:19 - not do that so okay so let's get started
03:21 - so what I want to do here is just go
03:24 - ahead and create a new project and I'm
03:27 - going to call this one the our blog
03:31 - dodge game and it's going to be a 2d
03:36 - project and I'm going to store it in my
03:38 - projects folder I have an entire
03:40 - projects folder set up to this and a lot
03:44 - of bad stuff in there and I'm going to
03:46 - hit actually that's just disable unity
03:49 - analytics and I'm going to hit create
03:50 - project by the way if you hear some
03:52 - stumbling around in the background that
03:54 - that's just my cats they are being kind
03:57 - of crazy today so they might interrupt
03:58 - the stream at some point so you can see
04:01 - that I'm here unity and what we want to
04:03 - do is begin by creating the most
04:06 - essential parts of the game which is of
04:09 - course the player and his movement so
04:12 - let's or hers it could be her so let's
04:15 - go ahead and create some kind of player
04:18 - and whenever it comes to doing a 2-d
04:21 - things in unity let's always the default
04:23 - sprite so if we right-click in the are
04:26 - higher Kingo create 2d objects right we
04:29 - will see here that it doesn't appear but
04:32 - if we go over here to stride and select
04:34 - one of the default ones here such as the
04:37 - UI sprite we will see a tiny square with
04:40 - rounded edges this doesn't look too
04:43 - pleasing so what I am going to do is to
04:46 - quickly jump into Photoshop and really
04:49 - you can just Google for this or you
04:51 - could use any kind of software all I
04:53 - want to do is just create something like
04:55 - a 16 by 16 white image that's it just a
05:00 - white square so I'm just going to do
05:01 - this now by going to new and then
05:03 - calling this Square and it's going to be
05:08 - yeah let's just do 16 by 16 but really
05:10 - doesn't matter because it's just one big
05:13 - pixel and we can zoom in on this and you
05:16 - can change the background but we are
05:18 - just going to leave it white here and
05:19 - I'm just going to save this in directly
05:21 - as a Photoshop file but you could also
05:23 - export it as a JPEG if you wanted to so
05:28 - let's go to projects black dodge game
05:31 - and let's go to assets and let's just
05:32 - say that in here actually no we won't be
05:37 - creating folders today
05:38 - this project is small enough that we can
05:40 - do without so I'm just taking the
05:43 - comments here everything looking good um
05:46 - a lot of people from the forum that's
05:49 - that's nice to see and if you see me
05:52 - commenting I'll or actually nevermind
05:56 - okay so um what we're going to be doing
05:59 - now is we're going to be dragging the
06:02 - square into the UI sprite to fill that
06:04 - in and you can see here that works just
06:06 - fine right away and let's now rescale
06:10 - our player a bit so let's change the
06:12 - scale here to something like six and
06:14 - then we'll keep the one on the Y and one
06:17 - on the Z we can also take our main
06:20 - camera and move it up and let's just
06:24 - move it up by something like four I
06:27 - believe is going to be fine that looks
06:29 - fine to me and we can change the
06:31 - background here but actually what I want
06:33 - to do is I'm going to bring in another
06:34 - square and use this as part of the
06:37 - background because
06:38 - what I had in the other example was on
06:41 - this main background color that was kind
06:44 - of the playable area and then I had a
06:46 - darker background color in the outside
06:49 - of that playable area to indicate that
06:52 - the player
06:53 - I can't move there and that there won't
06:55 - be spawning any blocks there so let's uh
06:58 - take this new square here and he's
07:01 - currently on top of the player so let's
07:03 - just scale this up and we'll scale it up
07:06 - quite a bit on the Y um something like
07:11 - that looks fine and then we'll do I
07:13 - don't know 20 let's do 75 on the X cool
07:20 - so you have something like this which
07:21 - currently looks horrible so let's go in
07:23 - and find a cool-looking color here and I
07:26 - went with something kind of red is kind
07:28 - of magenta like something like that you
07:32 - don't want it to saturate it or it will
07:34 - be annoying to look at this might even
07:37 - be too much and then we'll take the main
07:38 - camera and we'll change on the
07:41 - background here to that color and we
07:45 - won't use skybox we want to use a solid
07:48 - color and then we can just Diegan it a
07:50 - tiny bit so you get kind of this effect
07:55 - and looking at my other monitor here
08:00 - which has some different color settings
08:02 - this looks very saturated but on this
08:05 - one it looks fine so it's just one of
08:07 - those things where you'll have to play
08:08 - around with it as always I'm just going
08:10 - to continue because it's not very
08:12 - exciting to see me just spending a lot
08:15 - of time finding the right color so at
08:17 - this point we're ready to save our scene
08:18 - let's just save it as the main level
08:21 - will only be having this main level and
08:24 - because technically the levels are
08:26 - procedurally generated I mean they are
08:28 - generated at runtime you um most of the
08:33 - time only need one level so we'll just
08:35 - call it that and on we have this new
08:38 - sprite here let's call this one and this
08:42 - is the player let's call him player and
08:45 - we have the square here which is the
08:48 - background
08:51 - cool so you can see currently our
08:54 - background is on top of our player and
08:58 - to simply fix this we could change the
09:01 - order and layer to something smaller
09:03 - which means that it will be drawn before
09:07 - the player and so the player will be
09:09 - drawn on top or we go and add a whole
09:12 - sorting layer since we only have this
09:14 - one thing in the background I'm just
09:16 - going to input something like -2 here
09:18 - and we'll be fine but please do add
09:20 - earlier if you have multiple things in
09:22 - there then let's select our player hit
09:24 - add component and let's create a new
09:26 - script and don't worry about the error
09:28 - that I'm getting down here it's just
09:30 - something that the unity editor has been
09:31 - doing to me for a while now it's kind of
09:34 - annoying but it doesn't have any effect
09:36 - on the game whatsoever I've I've went
09:39 - through a whole load of DRA with that
09:40 - error in my console so for the name here
09:44 - we are going to select player our
09:48 - original and let's double click that to
09:50 - open it up in visual studio and again I
09:52 - will remember to drink water so I don't
09:57 - sound like an old man at jeune um so I'm
10:00 - just going to look at the comments here
10:02 - while we are opening this up I do not
10:07 - have a game jolt account actually um or
10:12 - anywhere to play my games you can't go
10:15 - to brackish calm I have a few projects
10:18 - there that you can check out I made one
10:21 - for a jam called flappy bird and that's
10:23 - an alarm going off so just fix that real
10:26 - quick or called flabby cow which was of
10:28 - course a flappy bird spin off about a
10:31 - flying cow it's pretty cool also kind of
10:34 - done but you can check that out also in
10:37 - two hours exactly there will be a video
10:40 - airing on the YouTube page um that is
10:42 - about creating the latest Ludum dare en3
10:47 - are called
10:48 - diggin so you can go there and check
10:51 - that out of course um that is also
10:54 - playable on through links to the
10:56 - brackets page but I actually haven't put
10:58 - it on the breakfast page to be displayed
11:01 - there so go to Lutheran diary calm
11:03 - for that but sure okay
11:07 - so we'll continue here uh in Visual
11:10 - Studio so what we are going to be making
11:13 - here is some movement controls and we're
11:15 - going to keep it fairly simple we're
11:17 - going to be doing all of our movement
11:18 - inside of the fixed update because
11:20 - that's a good place to do our physics
11:23 - stuff because well it runs on a fixed
11:26 - timer and physics likes to do that so if
11:31 - you're going to be doing a lot of
11:32 - movement i really suggest splitting it
11:34 - up into registering the movement in the
11:36 - update and then doing the actual
11:38 - movement in the fixed update but today
11:40 - we're just going to be using on the
11:42 - horizontal input axis which works fine
11:45 - inside of the fixed update itself so
11:47 - let's start by getting our movement and
11:50 - we could do this by going like if input
11:52 - get key down arrow right or arrow left
11:56 - but that won't allow for smoothing of
11:58 - the movement and it will not be usable
12:01 - with the joystick so instead we'll go
12:04 - here and fetch the input axis so we'll
12:07 - have this float called X and we'll set
12:10 - that equal to input dot get axis and if
12:15 - you don't want any smoothing on this you
12:16 - can do raw but I do and and then we put
12:19 - in an access name and we're going to be
12:21 - using the horizontal axis which means
12:24 - left and right movement and what this
12:27 - will do is it will fetch from unity
12:29 - information about when we have pressed
12:32 - move right or move left and also if
12:36 - we're using a joypad
12:37 - it will throw that in there as well and
12:39 - it will smooth it a bit out too so we'll
12:41 - get an X value between minus 1 and 1
12:44 - then kind of interpolates ellipse or it
12:48 - smooths from one setting to another cool
12:52 - and one thing that we always want to do
12:53 - when doing movement is multiply this
12:55 - with time dot fixed at a time because
12:58 - this is inside of a fixed update which
13:00 - is the amount of time passed since our
13:01 - last fixed update was called and
13:03 - therefore it will make it independent on
13:05 - of whatever are fixed at the time it's
13:08 - running ad and then we will have a speed
13:11 - variable let's go up here and create a
13:13 - speed variable it's going to be a float
13:15 - and we call the speed and
13:17 - to fold it to something like I have no
13:20 - idea let's do 15 and that's our multiply
13:23 - on that down there cool so now we can
13:27 - use this X variable to do actual
13:29 - movement and we are going to be moving
13:32 - using a rigid body so let's go into
13:35 - unity and add in a rigid body so let's
13:38 - go add component rigid body and then 2d
13:41 - because we're using two dimensions here
13:43 - and we want to turn on is kinematic and
13:47 - this will allow us to only use the rigid
13:51 - body in terms of colliding with other
13:53 - objects but moving the rigid body is
13:56 - completely controlled by us through a
13:58 - script that's basically what that does
14:00 - so it doesn't matter that our gravity
14:02 - scale is set to one it won't fall to the
14:04 - ground you don't need to do any
14:05 - constraints or anything like that it's
14:07 - only moved by us in this script go and
14:12 - I'm just going to take a look over here
14:14 - I hope to continue this c-sharp tutorial
14:18 - once I have something relevant to say I
14:21 - really find that we I covered most of
14:25 - the things that I wanted to do when
14:27 - starting the tutorial and there's a lot
14:28 - of demand for other stuff at the moment
14:30 - but I don't consider it completely dead
14:32 - either so we'll see where that goes
14:34 - umm cool so let's actually use this so
14:39 - let's first off get a reference to our
14:41 - rigidbody component because we want to
14:43 - move using it and so we need to
14:45 - reference it in some way and therefore
14:47 - we make a private rigidbody our be
14:49 - called or rigidbody 2d code RB and we
14:53 - cache this which means that we find the
14:56 - red body on our object and put it into
14:58 - this variable in the start method so we
15:00 - only do this once and then here we set
15:03 - our be equal to get component of type
15:05 - rigidbody 2d and it's that easy that
15:09 - finds the component it goes down and
15:11 - searches all of the component finds the
15:13 - rigidbody 2d on a game object at Cole
15:16 - Sid RB so now when we want to do
15:18 - something with the rigidbody we simply
15:20 - use the RB our name dot and then we can
15:23 - use move position and this move two
15:25 - moves on the object to a certain
15:28 - position
15:28 - checking for collision along the
15:31 - way and the useful thing here is that
15:34 - the position that we want to move to is
15:37 - our current position plus some x value
15:40 - so we want to move to our current
15:45 - position either a bit to the right or a
15:47 - bit to the left so our current position
15:50 - is called our B dot position and then we
15:53 - can add on to that and we can't just do
15:55 - X because this really doesn't make sense
15:58 - our current position is in two
16:00 - dimensions it's in x and y to the left
16:04 - and right and up and down and then we're
16:06 - adding on a one dimensional value that
16:10 - doesn't make any sense
16:11 - instead we use vector two dot right and
16:15 - this is the same as saying that we want
16:17 - to UM go 0 up and one over to the right
16:23 - so 1x + 0 Y and then we can multiply
16:26 - this with our X variable and that
16:29 - basically means that instead of always
16:31 - going one to the right we now can go
16:33 - minus 1 which means to the left or
16:36 - somewhere in between so that will
16:39 - correctly move our rigid body and we can
16:42 - actually go and plus play test this now
16:44 - if I'm not mistaken I'm just going to
16:47 - clear the console there because I
16:48 - freaking hate those error messages and
16:51 - you can see that I can now now move from
16:53 - side to side and it smooth those out
16:54 - smooths out the movement a bit which is
16:57 - super cool I can do that using a and D
16:59 - or the arrow keys or whatever good one
17:04 - problem that we do still have is if we
17:06 - try and do this we can fly off the map
17:08 - so let's just make sure to clamp on this
17:11 - movement a tiny bit and we do that by
17:14 - going up here and declaring some kind of
17:17 - float and we'll call this the UM map
17:21 - width and we'll set that equal to
17:24 - something like I have no idea let's set
17:27 - it equal to 2010
17:30 - let's do 10 bits to 5 let's try 5 so the
17:34 - map with here is basically a way for us
17:38 - to do to choose how how wide our map
17:41 - will be and the way that we then clamp
17:44 - this value here
17:45 - which means limit the value between so
17:48 - it doesn't go above the width is to use
17:51 - a math dot clamp which takes in a value
17:55 - that it should limit then a minimum
17:57 - value and a maximum value it's very
17:59 - simple so let's split this code up a bit
18:01 - let's take all of this which is the new
18:03 - position that we want to move to and
18:05 - let's store that in a temporary variable
18:08 - vector two variable called new position
18:11 - so we set that equal to all of that then
18:14 - we can do new position dot X so we only
18:17 - want to edit the x value here and we can
18:20 - set that equal to and then we can do
18:22 - math clamp and the value that we want to
18:26 - limit is new position data X and we want
18:28 - it to be between a minus map with and
18:32 - map with okay so if that makes sense and
18:37 - yes technically our map with is then
18:40 - only half of the actual width but
18:43 - because we're doing both the negative
18:45 - and the positive but don't be technical
18:47 - with me here we are programming and so
18:50 - um let's put our new position into the
18:53 - position that we want to move to and now
18:56 - that should indeed be fixed so let's hit
18:58 - play here and we should be able to move
19:00 - to from negative five on the X to
19:04 - positive 5 on the x axis so that's
19:08 - perfect I'm going to have yet another
19:10 - sip of water and I am going to continue
19:17 - so what we could maybe add now is some
19:20 - falling blocks that is of course
19:22 - essential to what we're doing so let's
19:24 - go ahead and start by adding some blocks
19:27 - let's create some blocks here so let's
19:29 - drag in the square again on the basis of
19:32 - all nice things is the square and um I
19:36 - don't know that didn't make any sense
19:37 - but we are going to go with it and we're
19:40 - going to set an x value of 10 and a y
19:43 - value of something like 4 and um then we
19:48 - can call this a block and we can even
19:51 - add a block component to it but we'll
19:54 - wait with that we'll do that later and
19:55 - we'll add a rigidbody 2d and we
19:58 - don't want this to be kinematic because
19:59 - we want it to fall on its own and we can
20:02 - add a Collider more specifically we can
20:06 - add a box Collider 2d so we can see that
20:09 - that just fits this Collider very nicely
20:11 - actually fits it so nicely that it's
20:13 - almost hard to see the green line here
20:15 - but it is there cool so we can then move
20:19 - this up and when I now hit play it's
20:21 - very simple it falls down but it doesn't
20:24 - collide with our player what's wrong if
20:27 - we look at our player I'll play doesn't
20:29 - have a Collider so we'll add a box
20:31 - Collider 2d to that as well and now it
20:34 - should collide with our player but the
20:36 - game doesn't end or anything
20:38 - we'll add registering that in a moment
20:40 - let's first begin by actually spawning
20:43 - out these blocks and this is the most
20:45 - difficult part of the tutorial and it is
20:48 - a bit difficult because we are going to
20:50 - be using an array and an array is just a
20:53 - list of items that we wear we associate
20:57 - each item with an index so we say that
21:00 - we have three items the first item we
21:03 - associate with the number zero the
21:05 - second one with the number one and the
21:07 - third one with the number two and then
21:09 - we can say that this list and then we
21:11 - use some bracket keys on one then
21:14 - references the second object so in order
21:18 - to actually get some use out of this
21:20 - information let's go ahead and create an
21:22 - empty object and this will be
21:23 - responsible for spawning our blocks
21:26 - we'll call this one the block spawner we
21:30 - can then move this up and off the screen
21:32 - so that all of our blocks can just have
21:35 - the same Y position we can move that to
21:38 - the top of the hierarchy just for
21:39 - ordering sake and add a new component
21:41 - called block spawner create an ADD let's
21:46 - double click this to open it up in
21:48 - visual studio and reload all and
21:50 - everything's fine
21:51 - cool so we can delete that name space
21:54 - there it's really not necessary and then
21:57 - we can add a public and then transform
22:01 - and remember transform how a transform
22:04 - is how we reference an object that we
22:06 - want to do some kind of position or
22:09 - rotation checks with
22:11 - so we could actually actually let's do a
22:16 - transform here so basically the way that
22:18 - I want to do it is I want to create a
22:20 - few spawn points something like five
22:23 - spawn points up here and then I will
22:26 - have the computer choose one at random
22:29 - so we'll have a list of all of the spawn
22:31 - points it will choose a random spawn
22:33 - point and that is where no block will
22:36 - spawn so it will just choose a single
22:38 - one and it will spawn a block on all of
22:40 - the others and it will do that on a
22:41 - fixed timer so let's actually create
22:44 - this array this list of blocks and we
22:47 - make this into an array right now it's
22:48 - just a single thing by using these
22:51 - square brackets now it's a list
22:53 - it's that easy so now we can call this
22:56 - our spawn points and close that off and
22:59 - what this allows us to do is if we head
23:01 - back into unity remember to hit save we
23:04 - can see that we now have a spawn points
23:06 - list and we can increase the size of
23:08 - this list to let's say 5 and we can now
23:11 - drag in objects I don't want to drag in
23:13 - the main camera however I want to create
23:16 - some empty objects that we can use for
23:18 - this so let's go up here hit create
23:19 - empty let's reset the transform on that
23:22 - that's called this one a spawn point and
23:24 - let's have the first one be at 0 0 0 and
23:27 - that is relative to a block spawner
23:29 - because it's a child let's duplicate
23:31 - that and move this over by 2 on the X
23:34 - duplicate again move over by 4 on the X
23:37 - and these values I know them because
23:40 - I've done this once before I'll play
23:42 - around with them you can even take the
23:43 - block up there onto use as a reference
23:45 - if you want and we're just going to
23:48 - duplicate the first one here on once
23:50 - again now do a negative 2 on the X and
23:53 - duplicate that one and do a negative 4
23:55 - and the way I'm duplicating here is by
23:57 - going ctrl D or command D if you're on a
23:59 - Mac so now we can select all of our
24:01 - spawn points and we should actually what
24:05 - we're going to do and I should have done
24:07 - this before you can't go ahead and
24:09 - select an icon for this which I am just
24:11 - going to do so that will just very
24:13 - clearly show that we have some spawn
24:16 - points up here for some reason you can
24:18 - edit multiple icons at once you could
24:21 - quickly turn this into a prefab if you
24:22 - wanted to but there you go so now we can
24:25 - really visually see the spawn points in
24:28 - the scene but none in the game
24:29 - cool so now we need to drag all of these
24:32 - into the list and we could go like this
24:34 - that takes a lot of time if you have
24:37 - many objects I'm just add you only have
24:39 - five since that we could remove the hour
24:42 - change the size here to zero lock the
24:44 - inspector then select all of the spawn
24:47 - points by using shift and then drag all
24:51 - of it over here and it will insert all
24:52 - of them right in it's a super handy
24:54 - trick and then we can unlock the
24:56 - inspector once again so now that we have
24:59 - this in our spawn point array we can go
25:03 - in and actually use this to do something
25:05 - so right now we'll just be doing this in
25:06 - the start method and what we want to do
25:08 - here is we want to select a random spawn
25:11 - point how do we do that we use a random
25:14 - number so unity provides the ability to
25:16 - give us a random number between a
25:18 - minimum and a maximum value and because
25:21 - all of our spawn points are associated
25:23 - with indices with numbers we can just
25:26 - use that number to get the spawn point
25:28 - that that number is represented by know
25:33 - that that to get the spawn point that is
25:37 - connected with that number okay so now
25:40 - integer we are creating a new temporary
25:43 - variable here which is an integer just a
25:45 - flat number and we're going to call this
25:48 - the our random index and we set that
25:51 - equal to random dot range and this is
25:53 - unities way of getting a random number
25:55 - we're going to get that between zero and
25:58 - then spawn points dot length we could
26:01 - just input five here and that would work
26:03 - just fine but then we would have to
26:05 - change it every time we add it at always
26:06 - not remove the spawn point since that we
26:09 - just get the amount of spawn points in
26:12 - the list by using dot length um
26:16 - cone then what we do is we loop through
26:19 - all of the spawn points so we say for
26:21 - int I equals zero I is less than spawn
26:26 - points dot length then we want to do
26:29 - something so this is a way of saying
26:35 - that we want to do something X amount of
26:37 - times in our case we
26:39 - want to do something spawnpoints dot
26:41 - length amount of times that means five
26:44 - times so for each of our spawn points we
26:48 - will do something and then we have a
26:50 - number associated with each iteration of
26:53 - the loop so the first time I will be
26:55 - equal to zero the second time it will be
26:57 - equal to 1 all the way up to 4 so we can
27:00 - use this eye to get the spawn point that
27:03 - we want that's basically what this means
27:04 - so it declares a variable I it says that
27:07 - we want to keep going until we reach the
27:09 - end of our list and it should increment
27:11 - I by one each time so now we can get a
27:14 - random spawn point by going transform
27:17 - and we'll call this one the spawn point
27:20 - or maybe even random point no let's not
27:25 - do that instead what I want to do is I
27:27 - want to check if random index is equal
27:31 - to I so if this time that we are looping
27:35 - over this index that we reach this spawn
27:37 - point should be the one selected up here
27:41 - if it's the one that we chose the random
27:44 - single one that we don't want to spawn a
27:46 - block if that's the case well then we
27:48 - don't want to do anything so do nothing
27:51 - but if it is not and we do that by
27:55 - simply putting an exclamation mark up
27:57 - here if it's not equal to that then we
27:59 - want to do something so let's actually
28:01 - do that and what do we want to do we
28:03 - want to spawn in a block and we do that
28:05 - by using the instantiate function let's
28:07 - go up here and let's create a reference
28:09 - to what we want to spawn in that's a
28:11 - game object we want to spawn in and the
28:14 - game object that we want to spawn in is
28:15 - let's just call it the block prefab so
28:21 - we want to spawn in our block prefab and
28:23 - we do want to do that at a certain
28:26 - position more specifically we want it to
28:28 - be spawned at our spawn points position
28:30 - so we'll do spawn points and the way
28:34 - that you get when iterating through the
28:36 - spawn points here the way that you get a
28:38 - spawn point at a certain index is always
28:42 - using these square brackets and
28:44 - inserting the index so if I wanted to
28:47 - get the first one point I would do 1 0
28:50 - the second one I would do 1 2 or 3
28:53 - you can input the index and it will give
28:55 - you the spawn point but in our case we
28:57 - want to get the 8th spawn point so the
29:00 - first time we go through we want to get
29:02 - the first one the second time we want to
29:04 - get the second one and we want to keep
29:06 - doing this unless of course we get the
29:09 - it's it's the random spawn point that
29:12 - we've chosen we reach or we run out of
29:14 - spawn points so we want to use spawn
29:17 - points I dot position we want that
29:19 - position and whenever you don't want to
29:21 - rotate anything you use quaternion
29:24 - identity that just means don't do
29:26 - anything to it and really don't ask me
29:29 - why you have to put in quaternion that
29:31 - identity it is a quaternion is the
29:37 - continuance is a whole field in
29:39 - mathematics and it's super complicated
29:41 - and we're not going to go into it just
29:44 - just learn that by now just yeah
29:48 - memorize it and we want comment on that
29:51 - again um how did I do the ATO
29:56 - intellisense thing for the for loop you
29:58 - mean the auto completion there basically
30:00 - what you do is you just write for and
30:02 - then tab and then tab and it will give
30:06 - you the ability here to change the
30:08 - variable name so such as the X tab on
30:11 - and you can change on the condition here
30:14 - on to say spawn points that length and
30:16 - then you hit enter and it will put you
30:19 - down here so it's it's a really really
30:21 - handy shortcut it you can do that with
30:24 - the switch statements as well whilst
30:26 - while loops a lot of lot of stuff cool
30:31 - so now we're instantiating that and
30:33 - everything's looking good and that was
30:34 - the most difficult part it's over I
30:37 - think so let's see if this is working so
30:40 - let's jump into unity and we have the
30:43 - block prefab slot here now and instead
30:46 - of just dragging our block directly in
30:48 - there let's drag a block down into the
30:50 - inspector we've now turned it into a
30:52 - prefab that means that if we have
30:54 - multiple blocks in here I can put in
30:57 - multiple of them and change something on
30:59 - one of them and hit apply
31:01 - it will be on transferred to the audio
31:03 - object so that is the awesome thing
31:06 - about
31:07 - using prefabs and also we can reference
31:09 - them without having them in the project
31:11 - so let's select our block spawner and
31:13 - drag a block right in there in the block
31:16 - prefab slot so now when we hit play we
31:20 - should see right away it spawns yes it
31:23 - spawns a block for all of the spawn
31:28 - points except one and it should be a
31:30 - random one it is so it changes every
31:32 - time however it currently does this only
31:35 - once and that is in the start method
31:37 - which means right at the beginning of
31:39 - our game so let's have it do this on a
31:42 - fixed timer instead and to do this we
31:45 - change this to do to be done in the
31:48 - update loop and actually what I want to
31:50 - do is I want to take all of this code
31:52 - now I want to move it into a separate
31:53 - function I just cut the code there
31:56 - control X you can also just control C
31:58 - and then delete it and then void I'm
32:02 - going to call this our spawn blocks and
32:06 - we can paste all of the code in there
32:07 - and now instead whenever we want to do
32:10 - all of this code we simply right spawn
32:12 - blocks we simply call it that way it's
32:14 - now a separate method um but we don't
32:18 - want to do this every frame so update is
32:20 - called every time on the computer draws
32:22 - a new frame which means in most games on
32:25 - decent computers a lot of times between
32:28 - 30 and 200 500 times so that would be a
32:34 - lot of blocks so what we're going to do
32:36 - instead is we are going to keep track of
32:38 - time
32:39 - more specifically we are going to have
32:41 - some kind of private variable some kind
32:44 - of private number that stores
32:47 - the time for the next time we want to
32:50 - spawn a block so it will just be a
32:52 - number the amount of seconds elapsed
32:55 - since we started the game and then until
32:59 - we want to store or to spawn so let's
33:02 - say our private float here and it's
33:04 - going to be a let's call this the time
33:08 - to spawn and we're going to set this
33:11 - equal to 2 that means that there will
33:14 - are at that 2 seconds after we start the
33:18 - game the first block will spawn
33:20 - then we will be utilizing time time this
33:24 - is a unity variable and basically it is
33:27 - just the amount of seconds that has
33:29 - passed by since we started the game so
33:33 - right when we start up the game is of
33:34 - course going to be zero five seconds
33:36 - after it's going to be five and the cool
33:39 - thing about this is that we can use it
33:41 - to determine whether or not it's time to
33:43 - spawn and the next time we want to spawn
33:46 - so you can see here that if we go if
33:50 - time dot time is greater than or equal
33:54 - to time to spawn well then we want to
33:58 - spawn something the time that we want to
34:00 - spawn is after two seconds there's gone
34:04 - three seconds PI which means that time
34:06 - that time is greater than or equal to
34:08 - time to spawn and then we want to spawn
34:10 - something new so let's do that here
34:13 - let's move spawn blocks in here and then
34:15 - we want to change time to spawn to be
34:17 - again some amount of seconds after and
34:20 - this amount of seconds here is normally
34:24 - what we refer to as a rate one divided
34:27 - by the number of seconds is the rate or
34:29 - we could just have a interval so let's
34:32 - do a public float here and let's call
34:34 - this the time between spawns or between
34:38 - waves let's let's call it waves here and
34:41 - it's going to be defaulted to let's say
34:45 - one second here and what we can then do
34:48 - is we can say that time to spawn down
34:51 - here so right after we've spawned a wave
34:54 - or some blocks we can say time to spawn
34:57 - equals time to time plus time between
35:00 - waves so now time to spawn if three
35:03 - seconds have gone by and this was two
35:06 - seconds originally this will now be
35:08 - three seconds plus time between waves
35:11 - which means that it will be four seconds
35:13 - and then the update loop will keep
35:16 - running until four seconds or more have
35:18 - passed and then it will spawn the blocks
35:20 - and again increment by one so we keep
35:22 - doing that in an infinite loop alright
35:27 - so let's try this out in game I'm just
35:29 - going to make sure that everything is
35:31 - working here it looks like it
35:33 - and let's hit play here and we should
35:36 - see after two seconds it spawns the
35:38 - first wave this second wave the third
35:41 - wave the fourth wave and so it keeps on
35:43 - going and you can very easily adjust
35:45 - time between waves to make wave spawn
35:48 - faster and faster and I definitely
35:50 - recommend you and to do this but we
35:52 - won't be doing it here right now because
35:55 - frankly this dream has already lasted
35:57 - for long so on question time I'm just
36:01 - going to look over here just for a
36:03 - moment and then we will continue someone
36:08 - asked why I had to use the quaternion
36:11 - please don't ask that question it has
36:13 - something to do with how you rotate and
36:16 - keep track of I don't want to explain
36:20 - this now that we've reached the patreon
36:25 - goal I'm going to do a game math
36:27 - essentials course might have something
36:30 - in there well we'll see um other than
36:33 - that not much here what happens if you
36:37 - use forces and stuff like that in update
36:39 - instead of fixed update well most of the
36:42 - time things will seem like they're
36:45 - working but you can get some really
36:46 - weird behavior when you do physics in
36:49 - update collisions won't work properly
36:52 - you will have jittery motion
36:55 - it's it's just a mess so move it to
36:58 - fixed update especially if you're if
36:59 - you're modifying this kind of stuff in
37:01 - update and then for example want to have
37:05 - your main camera follow the player so if
37:08 - we do a player movement in update want
37:10 - to have the main camera follow the
37:11 - player that will be a very weird motion
37:14 - because they're doing it in the same
37:15 - loop you need to be separated out unity
37:18 - has some great chapters on this if you
37:20 - want to read up on it in their manual
37:22 - cool so let's continue here by actually
37:26 - um making something happen when we hit
37:30 - the blocks because at the moment here
37:33 - things are a bit dull
37:36 - we can just keep doing this infinitely
37:39 - so what we'll do is we'll go in and
37:42 - modify our player script to do this so
37:45 - let's double click on a play here and
37:47 - let's add a new function here and this
37:50 - is going to be an on collision enter 2d
37:54 - and you need to write this out exactly
37:57 - as I've done here normally you're able
37:59 - to change your method names to whatever
38:01 - you want
38:01 - but this particular function is what we
38:03 - call a callback function and that means
38:06 - that unity decides to call this force
38:08 - just like start and fixed update and
38:10 - update this is called not when the game
38:13 - starts and not when a frame is drawn but
38:15 - whenever we hit something
38:17 - using our 2d Collider and then we can do
38:21 - things down here such as destroying the
38:24 - player or ending the game so in our case
38:27 - we're going to be ending the game but
38:28 - let's just check that this is working
38:29 - first so let's say we got hit
38:33 - just debug log that just throw it out in
38:36 - the console so we should see now that
38:37 - when we collide with something that we
38:40 - get hit and that is indeed true and we
38:43 - it does that multiple times but it won't
38:45 - matter because well you're going to be
38:47 - ending the game once and we could go
38:50 - ahead and end the game right here which
38:52 - means reloading the game and adding that
38:54 - cool matrix effect and all that but what
38:56 - I want to do instead is I want to create
38:58 - a separate script to do this and it's
39:00 - great to separate out your code because
39:03 - I don't think ending the game really has
39:05 - anything to do with player movement so
39:07 - let's create another empty object here
39:09 - reset the transform and let's call this
39:11 - one the game management a game manager
39:13 - is one who ends games so now let's hit
39:16 - add component game manager and let's hit
39:20 - create an add on that and double-click
39:23 - the game manager and in here we'll just
39:27 - make a public function just a public
39:29 - void called end game and then this will
39:31 - be called from our player script and
39:33 - then we can do all of our ending game
39:36 - sort of code in here so all we can do
39:40 - now is maybe just debug that lock the
39:42 - same thing here ending game and then we
39:47 - can just call this from the player but
39:49 - how do
39:50 - we do that how do we reference this game
39:52 - manager that sits on this object with
39:55 - this component that has this method well
39:58 - the way to do it one way to do it is
40:00 - plan your way to do is one once more
40:03 - correct ones really not correct and the
40:08 - the way that we could do it is that we
40:10 - could use a game object or actually our
40:12 - find object of type and then you give it
40:16 - a type so we find an object of type game
40:19 - manager and then you can simply use dot
40:21 - and game so there we go we now have
40:24 - access to that function so we're
40:26 - basically just searching the entire
40:28 - scene after an object call and with a
40:31 - game manager component this could be
40:33 - called anything it doesn't have anything
40:34 - to do with the name just it just needs
40:37 - to have a game manager component so that
40:39 - also means if you have multiple game
40:41 - managers this code will become weird so
40:43 - don't do that and it's not very safe and
40:46 - it's not very performant but it works so
40:48 - we'll continue with that so uh in our
40:51 - game manager we should now see if we had
40:54 - play here that it will throw out this
40:57 - debug deadlock statement and it does so
41:00 - that's perfect and now we can separate
41:02 - this with some other code let's go in
41:04 - here and use unity engine dot scene
41:09 - management and then we'll just do scene
41:12 - manager and you need to do this whenever
41:15 - you want to load new scenes scene
41:17 - manager dot load scene and the scene
41:20 - that we want to load is our current
41:21 - scene so we could just go in here and
41:23 - put main level or zero because it also
41:27 - uses a build index and ours is first in
41:29 - the list but we could also use scene
41:31 - manager dot get active scene so this
41:35 - will just get the scene that is
41:36 - currently active and then use that dot
41:38 - build index or dot a name we'll just use
41:41 - build index here because integers are
41:43 - smaller than strings cool um so that
41:47 - will load reload the scene and it will
41:49 - do that immediately so this one look
41:51 - cool but it will work so if we play here
41:54 - and we died we reset it's already a game
41:58 - really it it is a game it's not very
42:01 - rewarding but it's a game
42:04 -  so um one thing that I want to fix
42:08 - before doing the matrix stuff I'm really
42:10 - teasing that towards the end is I want
42:12 - to make sure that our blocks when
42:14 - falling down get destroyed at some point
42:17 - so you can see here okay so I actually
42:20 - have to play the game a bit here to show
42:22 - you so I'm just going to kind of move
42:24 - okay I suck at my own game apparently
42:26 - the pressure it's too much okay so you
42:30 - can see now a lot of blocks have have
42:32 - fallen down and if we look on our main
42:34 - level all of the blocks are now in the
42:36 - scene if you are good at the game and
42:38 - play a lot we're going to have way too
42:40 - many objects in here so what we'll do is
42:43 - we'll just select the black and add a
42:45 - quick script to this that will make sure
42:46 - to delete it once it reaches let's say a
42:49 - y-value of negative 2 somewhere down
42:53 - here let's create this black script and
42:56 - that multiple ways of doing this you
42:57 - could also just put a destroy timer or
43:00 - through the block spawner here on
43:03 - whatever and and we're going to do this
43:06 - using the update method and what we want
43:08 - to do is simply check if our current
43:13 - position so transform the position dot y
43:15 - if our Y component is less than or equal
43:19 - to actually let's just do less than and
43:21 - something like negative 2 well then we
43:24 - want to destroy ourselves so we want to
43:26 - call destroy on this this object so we
43:30 - reference that by game object with a
43:31 - small G there so now when we hit play
43:34 - and it's just a very quick fix you will
43:37 - see if you look over here that the
43:40 - objects are destroyed again so it's
43:42 - removing them just as quickly as it's
43:45 - spawning them back in so that's perfect
43:47 - that just helps keep the hierarchy clean
43:49 - and now for the matrix stuff okay so
43:54 - before we get started with that just
43:56 - wanted to see if there's any questions
43:57 - um let's see here
44:12 - okay yeah and one one guy commented when
44:17 - he sound working with the game manager
44:19 - he is riffing sing it through a property
44:22 - it's a much better idea have some kind
44:25 - of singleton pattern but I think this
44:27 - the scope of this tutorial is a bit too
44:29 - simple to get into a static game manager
44:33 - scene and all that so let's just
44:35 - continue right away so what we want to
44:39 - do here is we want to head into our game
44:41 - manager where we end our game and the
44:43 - problem here is we want to kind of delay
44:46 - this a little bit because when we just
44:49 - load a new scene we don't have any time
44:51 - to see the matrix effect that we're
44:53 - going to be adding so what we'll do
44:55 - instead is we'll use what is called a KO
44:58 - routine and whenever we are using
45:00 - corrupt teams a unity the syntax is
45:03 - super weird and doesn't make any logical
45:06 - sense unless you understand how I
45:09 - numerate this work and what an
45:11 - enumerator is but I would just show you
45:13 - how to do this and then just follow
45:15 - along and pick up on the points that you
45:18 - get so you can see up here when we are
45:21 - using Kuro teams we need to have this
45:22 - using system data collections that is
45:25 - important then what we do is we create
45:28 - instead of typing in void here we create
45:31 - another function of type I enumerator so
45:35 - we say that the function has an
45:36 - enumerator return type and this is a
45:39 - weird word and we'll just continue on
45:41 - and we are going to call this a restart
45:44 - level and you can see all the other
45:48 - syntax is just is a completely normal
45:51 - function and then what we have the
45:54 - ability to do here is we have the
45:55 - ability to type in yield return new
45:59 - waitforseconds and then the amount of
46:03 - seconds that we want to wait so in our
46:06 - case let's wait just a second let's just
46:08 - wait one second so this R will wait and
46:13 - then it will call the code down here so
46:18 - after one sec sec
46:22 - and this is before one sec okay so that
46:29 - basically means that we can take our
46:30 - scene managers code here the code the
46:33 - switching scenes code and we can put it
46:35 - down here so now we'll be called after
46:38 - one second and then we need to call the
46:40 - restart level and normally we would go
46:42 - in and do this but with kuroh teams of
46:44 - course the syntax different so we have
46:46 - to do start corroding and then do
46:48 - restart level and remember the
46:51 - parentheses here we need start and end
46:54 - for the reset level and a start and end
46:57 - for the cruelty cope let's say that head
47:00 - into unity and now we shouldn't see any
47:02 - matrix things or anything like that but
47:05 - we should see that it waits a second
47:07 - before we starting there we go so now to
47:11 - the actual changing of time what is time
47:14 - I don't know but we're going to change
47:16 - it so you can see here that we have time
47:19 - dot time scale time that time scale is a
47:22 - number that is usually usually set one
47:25 - which just represent a factor or
47:29 - something that unity multiplies every
47:31 - code that they do with basically so it's
47:34 - just our current time if it sets to one
47:37 - its regular time if it's zero it time
47:39 - isn't moving minus one will go backwards
47:42 - I don't think they actually support that
47:44 - two it will go twice as quickly you get
47:48 - the point here so our time scale can be
47:49 - modified very easily by simply setting
47:52 - it to a new variable or to a new value
47:55 - in our case I want to have a tweakable
47:58 - value up here a public float and we're
48:01 - going to call this the slowdown factor
48:04 - or something like that so slowness
48:07 - almost sounds cooler
48:09 - and we'll have that be something like
48:10 - ten so we will move where time we'll
48:12 - move ten times slower then we can set
48:15 - time scale equal to one and then divided
48:18 - by that ten so that means effectively
48:22 - 0.1 but we don't want to put in ten here
48:24 - we want to put in slowness however when
48:28 - we adjust time that time scale we also
48:30 - have to adjust fixed update because when
48:33 - we are doing
48:36 - things inside of are fixed update we use
48:38 - this value called fixed Delta time and
48:41 - this isn't changed together with a time
48:44 - scale so if we want that to be smooth we
48:46 - have to change it so let's let's use
48:48 - time dot fixed Delta time and we want to
48:51 - set that equal to our fixed time that
48:54 - fixed Delta time divide it by slowness
48:58 - so whatever it currently is divided by
49:01 - that amount cool then we want to wait
49:04 - for a second then we want to load a new
49:06 - scene however we want to set our time
49:08 - back because I time is transferred to
49:10 - the new scene and so we need to set it
49:12 - right back so we could set a timescale
49:14 - back to one there and time that fixed
49:17 - Delta time we want to set this to odd
49:19 - time fixed Delta time multiplied with
49:22 - slowness so we multiplied we divide and
49:25 - then we multiply and it evens out and
49:27 - it's back to the original state however
49:30 - when we wait for one second this is also
49:33 - affected by time that timescale so if we
49:36 - slow down by ten wait for one second
49:38 - here we will actually be waiting for ten
49:40 - seconds that's a lot of time to wind for
49:43 - an N screen so instead what we're going
49:45 - to do is we are going to do 1 divided by
49:48 - slowness here as well so that will make
49:50 - sure we always wait exactly one second
49:53 - real time awesome so I believe that code
49:58 - should work now great if you understood
50:00 - what ker teens allows you to do I really
50:04 - don't understand you or expect you to
50:05 - understand everything about them let's
50:08 - hit play here and look my cat is joining
50:11 - in on the screen say hi say hi ok I'll
50:16 - put here down here um so if we get hit
50:19 - by a block here you can see that time
50:21 - slows down and we have this cool matrix
50:23 - effect let us look showed you before and
50:26 - just makes it very clear to the user
50:28 - that um the game has ended the last and
50:33 - very final thing that I wanted to show
50:35 - in this dream was just how to make the
50:38 - blocks speed up so that the game becomes
50:41 - increasingly harder over time and a very
50:45 - easy way to do this is to go into a
50:47 - block script and modify it a tiny bit
50:49 - because we have already a variable
50:51 - available to us called gravity scale if
50:54 - we set the gravity scale of the blocks
50:55 - to two they will fall with twice the
50:59 - amount of gravel gravity which means
51:00 - twice as quickly so let's just in here
51:03 - in the script change our gravity scale
51:05 - depending on the amount of time that has
51:09 - passed since we loaded the level so
51:12 - let's do and we only need to need to do
51:14 - this what right when they spawned in I
51:16 - don't think they need to increase over
51:18 - their lifetime they just need to begin
51:21 - to spawn with a greater gravity so our
51:25 - void start here that's fine then we can
51:28 - get a reference to a rigidbody we know
51:30 - how to do that get component rigidbody
51:32 - 2d and then we do dot and then we do
51:40 - gravity scale there we go and of course
51:43 - this is set by one by the set to one by
51:47 - default so we want to plus equals that
51:49 - that means we want to add something on
51:51 - so if I put in one here we will get two
51:53 - and so on so we want to add on a value
51:57 - to that and the value that we want to
51:59 - add is time dot um time since level load
52:05 - we don't want to use time that time
52:07 - because that is the time since we
52:08 - started out the game so if we died and
52:11 - it then reloads the scene we want this
52:14 - difficulty to reset or else it would
52:16 - just continue going crazy but we want
52:18 - the amount of time since we loaded the
52:20 - level and then of course this would very
52:23 - quickly become difficult because this
52:24 - means that each second this will get
52:28 - increased gravity skill by one so after
52:30 - one second it will be twice as hard and
52:33 - that's not desirable I think we should
52:35 - divide this by something like 20 and we
52:38 - can maybe go in here and I don't define
52:41 - a variable here that we will call
52:45 - gravity scale ah I don't know factor
52:52 - something grabs gravity skill I don't
52:56 - know let's I'm just gonna I'm just gonna
52:58 - put inside T I don't I don't have a good
53:01 - name for this
53:02 - going to hard-code it and you can put in
53:03 - a variable if you want you know how to
53:05 - do that so yeah time that times the
53:08 - sense level loaded divided by 20 that's
53:11 - fine
53:12 - so now let's hit play and we should see
53:15 - and I'm going to show you this so I'm
53:18 - just going to pause this here these
53:20 - blocks now have a gravity scale of 1.15
53:23 - and if I continue the game let me switch
53:26 - over real quick here these blocks have a
53:29 - gravity scale of 1.2 and the ones after
53:31 - have a scrout gravity scale of 1.25 so
53:35 - they will increase in speed and I'm just
53:37 - going to show this by maybe playing the
53:39 - game a little bit please don't tease me
53:40 - if I lose I lost on the first ah okay so
53:45 - this is going better I'm a bit lucky
53:47 - there okay so you can see actually
53:51 - visually that the game is becoming
53:52 - harder and I think we are at a pretty
53:54 - nice difficulty state here so that's
53:57 - fine that's basically all I wanted to
54:00 - show you if you want to continue working
54:01 - with the game i really suggest adding
54:03 - some kind of score just some timers and
54:05 - i've shown you how to do so much with
54:07 - time try and add a UI element just in
54:12 - the corner of the game or whatever
54:13 - somewhere on the screen that displays
54:14 - the amount of time that has passed so
54:16 - that the user can be proud of how long
54:19 - he was able to survive or you could have
54:22 - a wave calendar so it eats time it
54:24 - spawns a block we sponsor wave of blocks
54:27 - it's going to increase by one and you
54:29 - can see how many block waves you have
54:30 - survived that would be ideal for this
54:32 - sort of game I think we're out of time
54:34 - for now this dream has lasted so crazy
54:36 - long I will do a bit of Christian and
54:38 - answers here so you can go ahead and
54:40 - leave them in the comments here or in
54:44 - the Twitter feed and I will see what I
54:47 - can do um and yes I am just coding what
54:52 - my cat tells me they are my biggest
54:55 - inspiration from where can we get those
55:00 - files your unity project I haven't made
55:02 - them available yet anywhere but I will
55:05 - I'm just going to switch to this mode
55:06 - here I will definitely upload them
55:09 - somewhere and let you know I notice it's
55:14 - super done
55:15 - but I will definitely be able make sure
55:18 - to upload them I will probably publish
55:21 - them to on the brackish website
55:23 - somewhere but I will make sure to
55:25 - publish a Facebook post or and a Twitter
55:28 - post and maybe mention it in a video
55:31 - we'll see so follow me there if if you
55:34 - want to be notified about that I should
55:36 - do it rather quickly when the stream
55:38 - ends I will figure something out so yeah
55:41 - but it's not available yet
55:43 - I'm not going to maybe I'll upload it to
55:48 - github it's actually not a bad idea I
55:51 - mean might be a bit much some beginners
55:54 - seem to be confused with git github I
55:56 - understand why it has a lot of
55:58 - functionality that is unusual um but
56:01 - yeah I could definitely look into that
56:04 - when will you introduce currency in your
56:07 - tower defense game that is soon as soon
56:09 - as we get the missiles done I think it
56:13 - is about time for our currency I just
56:16 - wanted to get a secondary turret in
56:18 - there because it looks super weird with
56:19 - the UI only displaying like to our
56:22 - displaying two copies of the same turret
56:26 - let me see here the microphone I'm using
56:31 - is an sm7b from sure so it's a shure
56:35 - sm7b and it's plugging into a moto audio
56:40 - interface cool what kind of education do
56:47 - you have Danish terms are fine the
56:50 - Danish term is given a shil
56:52 - that means somewhat relates to high
56:57 - school I haven't taken a longer
57:00 - education in programming anything like
57:02 - that I am pretty much a self-taught on
57:05 - much of this but I've been programming
57:07 - for a very long time now but yeah I
57:10 - don't have any official degree or
57:13 - anything like that
57:14 - that's actually a question I get a lot
57:16 - so thank you for asking that here um am
57:19 - I thinking of doing an 8-bit 2d RPG that
57:23 - was very specific I am not thinking
57:27 - about doing an RPG at the moment I think
57:29 - most of the time IG IPG projects tend to
57:32 - get crazy very quickly and demand a lot
57:35 - of content and I think that would steal
57:37 - emphasis from a lot of the other
57:39 - projects we have going things that I'm
57:41 - working on is a lot more on the 2d a 2d
57:44 - tower defense a lot more to detail
57:46 - defense a lot more on the tower defense
57:48 - more in multiplayer FPS videos now the
57:51 - game math essentials I'm also don't tell
57:54 - anyone about this working on some
57:57 - blender tutorials maybe very much
58:00 - working progress don't quote me on that
58:02 - and yeah a lot of a lot of cool stuff to
58:05 - do so no one and IPG is not really on on
58:09 - the schedule at the moment I am 19 years
58:12 - old that is my age but that's just a
58:17 - number and how exactly does patreon work
58:21 - I will support you it will automatically
58:23 - get my money every month yeah pretty
58:26 - much
58:26 - well patreon is just pretty much like
58:29 - any other crowdfunding site except
58:31 - you're able to make a monthly recurring
58:33 - donation and you're able to cancel it at
58:36 - any time
58:37 - donations are charged at the beginning
58:40 - of the month and it might take up to 72
58:43 - hours but that is how it works you are
58:45 - you can choose a completely optional
58:47 - amount you can choose a priced here
58:49 - generally you just have complete control
58:52 - and that is something I haven't
58:54 - mentioned if you're you like this sort
58:57 - of stuff if you want to see more of it
58:58 - if you want to see more videos on all
59:00 - that thank you so much for the support
59:03 - I've already received here but if you
59:05 - want to see more you can go to the
59:08 - patron right there patreon.com slash
59:11 - Brack ease and leave a donation um it
59:15 - really helps me out a lot I mean this
59:17 - would not be possible without that extra
59:21 - money each month so you guys are awesome
59:24 - thank you so much for that um but yeah
59:26 - that that's basically how it works
59:28 - um yeah age is just an integer yeah
59:34 - that's true um I was not at gainsco
59:39 - game scope in all-pole I'm sorry I am
59:42 - Danish
59:43 - yes that's true I am a Dane I have done
59:48 - some client work in the past I don't do
59:50 - much of it anymore but I do have to do a
59:54 - bit because it the money even with
59:58 - patron is not necessarily enough so I do
60:01 - do a tiny bit of client do do a tiny bit
60:04 - of client work
60:05 - I am I going to do a 3d platformer or
60:11 - MMO I'm never ever going to do an MMO
60:14 - tutorial I'm sorry if that was what you
60:16 - were waiting for you can go in and
60:18 - unsubscribe that is a bad idea it's just
60:21 - too much to show in a tutorial video if
60:23 - you're going to do an MMO you need a
60:25 - team I'm not a team and I cannot explain
60:28 - all of the steps that goes into an MMO
60:31 - you also need cash as well it's it's
60:34 - I've seen some guys on YouTube who
60:37 - create and who's working on an awesome
60:40 - MMO project I believe they're just two
60:42 - or three people they've been working on
60:44 - it for like five years you can go and
60:46 - search for unity MMO project or
60:48 - something like that I'm sure it will
60:50 - appear can't for the life of me remember
60:52 - the name
60:53 - those guys are amazing but that is
60:55 - really closest I've ever seen anyone get
60:57 - to an MMO infinity with a small team so
61:00 - it's it's very difficult will you ever
61:05 - make
61:05 - Unreal Engine tutorials that is very
61:07 - possible I actually wanted to do it a
61:09 - long time ago but then my education got
61:12 - in the way and I had all sorts of
61:14 - excuses
61:15 - and that might be a thing I'm by no
61:17 - means an unreal expert but it is a cool
61:19 - engine and I don't necessarily want to
61:22 - do everything in unity I probably will
61:25 - never start using unity but of course
61:28 - that might be nice as an addition of
61:30 - course to the regular regular videos any
61:35 - good suggestions for a way to make an
61:37 - installer that depends on what you are
61:39 - installing and for what OS if you want
61:43 - to see some recommendations when it
61:45 - comes to packaging up your games and
61:47 - stuff like that
61:47 - go watch the second-to-last make a game
61:51 - video called mega game standalone or
61:54 - something like that exporting to
61:55 - standalone
61:56 - that shows a bit about that also um yeah
62:00 - I would just go there I'd talk about it
62:03 - there do I have any plans to remake my
62:07 - older videos um when you were using
62:10 - unity for with unity 5 not at the moment
62:13 - I think we have a lot of other very
62:15 - exciting community things going on that
62:17 - I would rather focus on but if the
62:19 - demand is there I I might do it I'm not
62:23 - not close to that sort of idea but it's
62:26 - not really a priority at the moment um
62:34 - let's see advice a book for c-sharp let
62:42 - me just find here for you the book that
62:45 - I read upon starting and my mouse has
62:48 - quit on me now so I will have to restart
62:50 - that somehow just a moment I will have
62:52 - to restart my mouth see this is kind of
63:04 - the bit that I cut out when doing a
63:06 - video that's the exciting part of the
63:10 - livestream you never know what can
63:12 - happen my squid everything goes crazy
63:14 - explosions yeah so um I really enjoyed
63:20 - the book called beginning c-sharp
63:22 - programming by Jason Lim I think it's
63:26 - just shortened to the point it really is
63:29 - just a logical introduction I couldn't I
63:32 - can just go ahead and put this in the
63:35 - chat here in case I pronounced something
63:38 - wrong there you go also it's in the chat
63:40 - and yeah it's it's it's pretty nice but
63:44 - only the first part the second part gets
63:46 - crazy don't go into that kind of stuff
63:48 - it's really not beginning minded I were
63:51 - planning on making your own complete
63:53 - game for sale not as a turtle but some
63:56 - longer game you could submit on Steam
63:57 - for example that would be super exciting
63:59 - to do at some point in the future it's
64:02 - not something that I am working on at
64:04 - the moment but I will definitely want to
64:06 - create something at some point but real
64:10 - all my energy right now is just going
64:12 - into helping you guys as much as
64:14 - possible with with all that stuff to
64:16 - patron and with videos and all that I
64:19 - really wouldn't have time to create
64:20 - create a game on my own um and if we
64:25 - assume um in the FPS tutorial will I
64:28 - make a tutorial I'm picking up guns and
64:30 - switching guns maybe weapon switching
64:35 - that would be exciting um maybe weapon
64:39 - customization it's something I get asked
64:41 - a lot maybe some class picking class
64:44 - selection screen that would be exciting
64:46 - as well but I won't go ahead and
64:49 - promises promise anything just yet but
64:52 - just know that I'm definitely looking
64:54 - into that stuff I think we need after
64:57 - having taking a look at the user counts
65:00 - and data serialization and all that I
65:02 - think we need to think of ways that we
65:05 - can expand that series and that would
65:06 - definitely be on the list somewhere um
65:10 - cool yeah my my cat killed the mouse
65:14 - that's that's funny um let's see here
65:21 - when Wilma to play FPS 25 episode come
65:24 - out um when I make it I will get around
65:29 - to that very soon um as I said a video
65:34 - airs in just an hour on my Ludum dare
65:36 - array entry I'm really excited about
65:38 - that and that means because today it is
65:42 - a Wednesday that I will probably or
65:47 - probe yeah I will probably have a
65:49 - multiplayer phase video out on this
65:51 - Sunday so I try to upload with
65:54 - Wednesdays and Sundays okay and that is
65:57 - on a priority right now
65:58 - so um yep are you going to going to do
66:05 - more livestream I hope that means that
66:06 - you enjoyed this I sure think it was
66:09 - super fun I am going to do more live
66:12 - streams if you support the patreon it
66:14 - allows me to do and to do more but I
66:18 - will try and do it as often as I can at
66:21 - the moment the limit for the
66:24 - patron tear that we just reached is one
66:27 - a month so you have one guaranteed light
66:30 - livestream each month also you're free
66:33 - to leave some suggestions as to what our
66:36 - kind of content you want to see in these
66:39 - I just thought I would go ahead and just
66:40 - make something so we have something to
66:43 - discuss here but we could do something
66:45 - just completely Q&A or ended or
66:47 - something more community-oriented this
66:49 - was a lot of just me doing a live
66:51 - tutorial basically so we will see that I
66:55 - will consider the donations on Twitch
66:57 - and this was just my first time so I
67:00 - wouldn't want to bombard you or me with
67:03 - information so but that is definitely
67:05 - something that I could look into but for
67:07 - now the focus is on patreon should
67:10 - people want to it
67:11 - I think we're getting towards the end
67:15 - here guys final questions and then we'll
67:17 - do some wrap up my voice and slowly
67:21 - quitting on me and frankly if I if I
67:25 - have to package this up and I know that
67:27 - the work day is already very long let's
67:34 - see here final questions um yep I should
67:43 - do that is it possible to change
67:49 - languages inside the game in unity I'm
67:54 - not sure what you mean if you're talking
67:56 - programming language or like languages
68:01 - that we speak but it is definitely
68:04 - possible yeah there are plugins that
68:06 - help you change speaking languages
68:09 - inside of the game so you can get the
68:11 - game out to Moorea to more users in
68:13 - other countries definitely it's it's a
68:15 - simply a just exchanging out a string
68:17 - and yes you can also have multiple
68:19 - programming languages in one one project
68:22 - but it is not a good idea but frankly um
68:26 - did I do the monthly subscription for
68:29 - unity Pro no I purchased it through
68:32 - study camp which gave me some student
68:34 - discount once I went back when I was
68:37 - still as
68:37 - student and back when they had this sort
68:40 - of when they didn't have this sort of
68:42 - payment model but I did purchase a unity
68:44 - Pro but I think now that they've
68:47 - switched over towards this client stuff
68:50 - or and cloud stuff it's really not
68:53 - necessary um I I wouldn't do that on
68:56 - this I I had the money of course don't
68:58 - buy something you don't have the money
69:00 - for but I I would only do that if I was
69:02 - a full-time developer um I should make a
69:06 - QA about myself that is a good idea I'm
69:09 - actually working on a set up video that
69:10 - will show some of the gear here because
69:12 - that a lot of people have been asking so
69:14 - that is something that you can look
69:16 - forward to um i key a glass yes that is
69:21 - correct
69:23 - am I going to upload this to YouTube as
69:26 - I said earlier I will try to this will
69:29 - probably be stored on twitch servers if
69:31 - I find it worthy I will definitely help
69:33 - you load it to YouTube and if everything
69:35 - works out so I'll try and do that how
69:39 - did I discovery c-sharp through unity
69:41 - actually I started um that's not
69:45 - entirely true
69:45 - I did some programming before I
69:48 - discovered unity um some and a bit of it
69:52 - involved c-sharp but really it was just
69:55 - the need for a more solid and like
69:58 - syntax heavy programming language then
70:00 - JavaScript and so I started with
70:03 - JavaScript and unity and quickly found
70:05 - that that was limiting and led to issues
70:09 - um I mainly onion um you cannot get the
70:18 - dark gray background for the engine with
70:20 - unity personal that was my number one
70:22 - reason for buying as well now alarms are
70:25 - going off all the way all over the place
70:29 - so I am going to stop the livestream
70:33 - here guys thank you for being so awesome
70:36 - and so positive about everything I
70:39 - really really had a blast
70:41 - um let me know if you want to see more
70:45 - of this patron is there youtube is there
70:48 - everything below
70:50 - you know how it goes so yeah