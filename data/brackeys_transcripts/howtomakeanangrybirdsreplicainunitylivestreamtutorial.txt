00:00 - [Music]
00:02 - hello everyone and welcome to this video
00:05 - on creating a armed Angry Birds
00:07 - replica inside of unity this is a live
00:10 - stream so I'll be looking at the chat
00:12 - once in a while and answering some
00:14 - questions towards the end we'll do a
00:15 - full Q&A that's a lot of fun a lot of
00:19 - weird questions normally but also some
00:21 - constructive ones and basically let me
00:24 - just show you what it is we are going to
00:25 - be creating in unity here so if I hit
00:28 - play it's an Angry Birds replica and we
00:32 - can see here that I have some cool
00:33 - spring physics working and we can drag
00:36 - this guy back to gain some momentum and
00:38 - I basically just killed both our enemies
00:40 - with one ball there so that's pretty
00:43 - cool and if we expand all of our
00:45 - cannonballs it's going to restart the
00:47 - level and it's just so fun creating
00:50 - these physics based games because
00:51 - they're really really easy to edit and
00:55 - create multiple multiple levels from I
00:57 - mean our if we wanted to create
00:59 - something bigger here we could take some
01:01 - of these walls
01:02 - move over stack them on top of each
01:04 - other and now it's an entirely different
01:06 - level in the way that it feels here so
01:09 - now we have this to get to get past and
01:11 - in action they might help us a little
01:13 - bit that we have those you can see just
01:15 - how quick it is to prototype these sort
01:18 - of games so there it really didn't act
01:20 - in our favor we can maybe try shooting
01:22 - over it and this is pretty embarrassing
01:25 - I never do game play because I really
01:27 - really suck at it but you can try no
01:31 - this is going to be so hard to get to
01:34 - yeah I failed so you can see just how
01:38 - fun and easy this is um to to mess
01:41 - around with so yeah let's just get
01:43 - started by creating a new unity project
01:45 - so let's go to file new projects and
01:48 - let's begin by naming it something like
01:51 - Angry Birds um please do not sue okay
01:59 - we'll do something else we'll just call
02:01 - it replicas and then we can call it make
02:04 - it a 2d project hit create and yeah
02:07 - let's just go ahead and save the changes
02:09 - to that by the way the sprites that
02:10 - we're going to be using today are of
02:12 - course going to be made
02:13 - available after downloaded to YouTube
02:16 - and the entire project will also be
02:18 - uploaded to github so that you can
02:20 - download it and have a look at all the
02:22 - source code and you have the entire
02:24 - project really all of the settings all
02:26 - that steps so I will make everything
02:28 - available if you are watching on youtube
02:31 - there's a link in the description for
02:32 - sure unless I've forgotten in which case
02:34 - you can go ahead and be really angry in
02:36 - the comments so now we're basically
02:38 - ready to start sketching out a level and
02:40 - that means we'll begin with kind of a
02:43 - background and a ground plane and then
02:46 - we can have a look at getting our first
02:49 - physics objects in there so in here I
02:53 - have a folder called sprites it's just
02:56 - something I have on my local system I
02:57 - just created a bunch of Photoshop files
03:00 - with some well decent graphics and I'm
03:04 - just going to take all of them basically
03:05 - into unity at the same time here so we
03:08 - have them to mess around with and you
03:10 - can see there's a background that's a
03:12 - bowl an enemy a ground I also have a
03:15 - white square really don't know about
03:17 - that we'll just delete him a whit block
03:19 - it would normal and a would tall so we
03:22 - can go ahead and create a new folder for
03:24 - all of these called sprites and just
03:27 - shift select them and drag them in there
03:29 - cool and then we can drag our background
03:32 - inside of our unity level and let's just
03:35 - scale this up a tiny bit so let's reset
03:37 - the transform and just scale it up that
03:40 - we're sure it's going to fit our entire
03:41 - camera even though we go full screen and
03:44 - basically what I want to do with this
03:46 - background is kind of lock it on its own
03:48 - separate layer because when we start
03:51 - drinking or bringing other stuff in here
03:53 - such as the ground we want to make sure
03:55 - that this always stays on top and right
03:58 - now it's really just a coincidence that
03:59 - this ground object is on top so to do
04:03 - that let's select our background layer
04:04 - let's go under sorting layer hit add new
04:07 - sorting layer let's hit the plots a plus
04:10 - sign and we can name this sorting layer
04:12 - background for all of our backgrounds
04:15 - object in our case it's just going to be
04:16 - the sky here and we can drag that on top
04:19 - of our default layer that means that it
04:21 - will be rendered first and therefore
04:23 - drawn underneath cool so then we can
04:26 - select our
04:27 - background and we can set the set the
04:31 - sorting layer to background as well and
04:33 - the cool thing now and this is something
04:34 - a lot of people don't know is we can go
04:37 - up here to where it says layers in the
04:40 - top right corner and we can select and
04:43 - we can go to where it says background
04:44 - sorting layer and we can hit the lock
04:47 - and that means that now we are unable to
04:50 - select it inside of the scene and so if
04:52 - we want to select multiple objects say
04:54 - we have a bunch of stuff in here that we
04:55 - want to select at the same time we don't
04:58 - have to be afraid of just going like
04:59 - that to select all of it it's so much
05:02 - nicer and when you click away you don't
05:04 - have to scroll out and click it ready
05:06 - from the background and go back so a
05:08 - really really handy feature so let's go
05:11 - ahead and delete these three guys here
05:13 - and let's position our ground correctly
05:16 - so let's reset the transform let's shift
05:18 - drag him down to only drag on uy let's
05:22 - see inside the game view something like
05:23 - this already looks pretty good and then
05:25 - we can maybe just scale it on the X here
05:29 - again to make sure that it's going to be
05:31 - wide enough that even if we go
05:33 - fullscreen it's still going to cover the
05:36 - entire screen um cool yeah so now we're
05:41 - basically okay let's just save the scene
05:43 - here so that sits ctrl s or command s if
05:46 - you're on the Mac and we can go ahead
05:48 - and call this something like main-level
05:50 - it's going to be fine right now we're
05:52 - just going to be creating this single
05:54 - level but really you can go ahead and
05:55 - create multiple levels so easily and
05:58 - transition between them using the scene
06:00 - manager so really really easy thing to
06:02 - set up so um yeah let's bring something
06:06 - in here so let's start by maybe creating
06:08 - our arm ball and some wooden blocks so
06:12 - let's bring our ball in here let's just
06:14 - go to the scene view take our ball drag
06:16 - it in there and we're pretty much done
06:19 - with that then we can hit add component
06:22 - and we want to add a new physics
06:24 - component called the circle Collider 2d
06:26 - so that will make sure that he collides
06:29 - with the environment and I just want to
06:31 - configure the collider here a tiny bit I
06:34 - want to offset it by something like
06:36 - point zero one on the Y just to get
06:40 - in the center and also maybe edit the
06:43 - collider and just drag it in a tiny bit
06:46 - something like that we want that to feel
06:48 - pretty accurate cool so then we want a
06:52 - rigidbody because we want him to bounce
06:53 - around the scene so let's go ahead and
06:55 - create a physics 2d rigidbody 2d and we
06:58 - want him to be dynamic by default so
07:01 - that when we hit play it's going to
07:03 - start falling but of course he is going
07:06 - to fold through the ground right now
07:07 - because the ground does not have a
07:09 - Collider so let's select that go add
07:11 - component physics 2d and then select box
07:14 - Collider 2d and yeah I think that's
07:17 - pretty well configured right off the bat
07:19 - so now we should be able to play and
07:21 - he'll fall to the ground however I want
07:24 - a bit of bounciness on this bowl I mean
07:26 - it's pretty boring if he's just going to
07:28 - fall flat and every time he hits the
07:30 - ground he's just going to stop it's a
07:32 - bit boring so to edit some of his
07:34 - properties when it comes to his physics
07:38 - interaction with other objects we create
07:40 - what is called a physics material that's
07:43 - going to allow us to define two
07:44 - properties one is the friction so the
07:48 - forces that act when you rub him against
07:51 - another object and the other one is the
07:54 - bounciness so let's go ahead and
07:56 - right-click in the project panel and go
07:58 - create and we'll find it here physics
08:02 - material 2d and let's call this one the
08:04 - ball and we can basically just take our
08:08 - ball and drag the physics material into
08:11 - the material slot so yeah he should act
08:16 - and now we can basically select the ball
08:18 - physics object and change the friction
08:21 - I'm just going to leave that at point
08:22 - four but I definitely want to bounce in
08:24 - this up about 0.5 so now you can see if
08:27 - I hit play it's going to bounce up and
08:28 - down a bit just already feels a lot more
08:31 - cartoony and fun so this way you can use
08:34 - the bounciness to your advantage or
08:36 - maybe it's going to just jump over what
08:39 - you want it to hit and be really
08:41 - annoying I think it makes it a bit more
08:44 - skill oriented cool so um yeah now that
08:50 - that's in there I think that we're ready
08:52 - to do
08:53 - shooting of the ball and this is
08:55 - probably the part that most people are
08:58 - watching this tutorial for because it
09:00 - can feel really scary I mean we want
09:02 - some nice smooth physics we want him to
09:05 - be hinged kind of on a joint and then
09:07 - when we click and drag him you should
09:09 - follow our mouse but then as soon as we
09:11 - let go
09:12 - you should start shooting based on what
09:15 - we just did and then not be affected by
09:18 - the mouse so we kind of have different
09:19 - stages to go through for our ball and
09:23 - the weight most I mean that's a lot of
09:26 - weight ways to get around this one way
09:28 - is to just script everything yourself so
09:31 - basically give him some kind of anchor
09:33 - point some kind of hook I will be doing
09:34 - that and then as we drag him around
09:38 - we'll calculate the trajectory of how he
09:42 - needs to land based on the distance from
09:45 - the hook and based on the direction that
09:49 - he aims through the hook so that's that
09:55 - stuff quickly becomes fairly advanced I
09:57 - mean we could definitely do it and it's
09:58 - just yeah if you've had physics in in
10:01 - college or whatever you would hopefully
10:03 - be able to do something along those
10:05 - lines but what is much easier it's using
10:09 - just unity spilled in spring component
10:12 - because it does all that stuff and it
10:14 - does it in a much nicer way that we
10:16 - would be able to do so in order to do
10:18 - that let's create a new new 2d object
10:23 - and use sprite and let's just select a
10:26 - knob here for the sprite that's part of
10:28 - the build in sprites here and let's just
10:31 - scale that up to something like 2x2 just
10:34 - to make it visible
10:35 - we'll make it totally black and we'll
10:37 - make it pretty see-through something
10:39 - like that and this is what we're going
10:41 - to use for the base of our arm Bowl so
10:44 - if we just go ahead and place that here
10:46 - we can take a ball here and whoops and
10:49 - move him away and on this object we're
10:52 - going to coil it and call it something
10:54 - like anchor or hook whatever you want to
10:57 - do we are going to not have a Collider
10:59 - but we are going to have a rigidbody 2d
11:02 - however this hook here is not going to
11:05 - move and it's not going to be moved
11:06 - through
11:07 - script either so what we go ahead and do
11:09 - is change the body type to static and
11:12 - this way unity knows that we need this
11:15 - to calculate physics but we don't need
11:18 - to calculate any movement on this object
11:20 - whatsoever and that's just going to
11:22 - optimize things quite a bit
11:24 - then what we can do is on a bowl create
11:27 - a new component under physics 2d and
11:30 - then it's called
11:33 - spring joint there we go spring joint 2d
11:36 - and basically what we need to do here is
11:39 - first off set our ball to be angered to
11:43 - the hook so let's just take our hook
11:44 - here copy the component paste it on to
11:48 - our um ball here paste component values
11:51 - and it was scaled up so we'll just reset
11:54 - the scale we'll take the ball here and
11:58 - change his sorting layer to something
12:01 - like to just to move it up so it will be
12:04 - drawn on top of the hook then what we do
12:06 - is drag the hook into our connected
12:09 - rigidbody slot and that should mean that
12:12 - when we now move our ball you can see
12:15 - that there is a green line drawn from a
12:17 - bowl to that hook and that basically
12:19 - means that they are currently connected
12:21 - through a string then if we hit play we
12:24 - can already see this on this spring at
12:27 - work so it looks already fairly decent
12:31 - if we want to change kind of how the
12:35 - spring into acts with our object let's
12:38 - say we want to give it less let's say we
12:43 - want to give it less bounciness so that
12:46 - it's going to be more strict and pull in
12:48 - the object a bit quicker we can go ahead
12:51 - and bump up the frequency I mean a
12:52 - higher number here as you see here the
12:56 - frequency in Hertz for the oscillation
12:57 - whilst trying to achieve the specified
12:59 - distance that means that the higher the
13:00 - value the quicker it's going to get back
13:03 - to the distance that or big get back to
13:06 - the point that we've specified as the
13:08 - anchor in our case the hook and that
13:10 - means that if we lower this it's going
13:12 - to be really really sloppy so you can
13:14 - see this effect here so that's at point
13:16 - one this set point five okay didn't do
13:19 - anything that said
13:21 - one hmm okay if we I think we have to
13:24 - change this before playing the game so
13:26 - this is that two really really strict
13:28 - there if we just put it at 0.5 let's see
13:31 - what happens yeah it's a really large
13:34 - spring there so that's that's kinda our
13:37 - that works I played around with it and I
13:39 - found that a value of 1.5 looks pretty
13:43 - good or works pretty good but really you
13:45 - should just mess around with it all you
13:47 - want so I'm just going to have a look in
13:49 - the chat here to see if everything's
13:50 - working all right
13:56 - a good nice microphone discussion I'm
14:00 - not going to put this in the video so I
14:02 - don't really want to talk about it now
14:03 - but man I could talk about microphones
14:06 - forever but yeah not going to get into
14:10 - that cool so now that we have our ball
14:14 - spring working we have to of course
14:15 - connect this with a script so that we
14:18 - can when we hit play actually grab the
14:21 - object and then at some point release it
14:23 - and it's going to use the spring to gain
14:25 - some momentum so to do this let's create
14:27 - a new component let's just call it ball
14:30 - and it's of course going to be a c-sharp
14:31 - script and let's double click it to open
14:33 - it up in Visual Studio my preferred
14:36 - editor of choice and it's opening up
14:41 - here let's see cool so that is so
14:45 - basically what we want to do here is we
14:47 - want to keep track of whether or not we
14:49 - are currently interacting with the bowl
14:50 - and we can do that by using to unity
14:54 - callback methods the first one is called
14:56 - board on Mouse down 2d I believe to
15:02 - Sydney 2d let's figure it out
15:06 - and the other one is called on mouse op
15:09 - 2d maybe not
15:11 - 2d but we'll figure that out so on Mouse
15:14 - down and we'll just throw a debug log
15:17 - statement here saying something like
15:18 - mouse click and if we save that now hit
15:22 - back into unity good into the game view
15:25 - here and click it yeah it's not 2d I
15:28 - knew it identity and their naming always
15:32 - gets are confused with that yeah
15:34 - it's not 2d so we have onmousedown and
15:38 - we also have void on mouse up and
15:41 - basically let's go ahead and create a
15:43 - boolean up here so a private bull called
15:46 - something like is pressed or is hold
15:50 - down is dragging whatever and we call
15:53 - default that to false when we get a down
15:55 - press we're going to set is pressed to
15:57 - true and we we get a release we're going
16:00 - to set it is pressed back to false this
16:03 - way in the update method we will be able
16:06 - to do some stuff on the object only when
16:09 - we are pressing it so here we can
16:12 - basically say if is pressed is equal to
16:15 - true we're currently holding down on the
16:18 - object well then we can change its
16:20 - position to match the position of our
16:22 - mouse but we don't want to do that as
16:26 - long as a spring joint is active that's
16:29 - going to interfere with our moving of
16:32 - the ball and it's going to be a battle
16:34 - between us saying that the ball should
16:37 - move to the mouse and the spring joint
16:38 - saying that it should move back again
16:40 - applying forces in the other direction
16:42 - and it's going to look weird so what we
16:45 - want to do is actually disable the
16:46 - spring joint while we are not on trying
16:49 - to change its position and the way to do
16:52 - this is by first getting a reference to
16:54 - it and we could do that up here or we
16:57 - could also just use getcomponent i think
16:59 - we should do it up here that's probably
17:00 - the best way and arm actually we don't
17:04 - have to disable this spring joint
17:06 - probably even better would be to set the
17:09 - rigid body to kinematic and then move it
17:12 - so let's do that so let's do rigidbody
17:14 - 2d RB and then down here we go our B dot
17:19 - kinam is kinematic and we said that to
17:23 - to true and then down here we said our
17:28 - RB is kinematic to false I believe that
17:34 - should indeed work so if we try now and
17:37 - hit play here and of course we need to
17:41 - reference the rigidbody so let's just
17:42 - drag in the rigidbody 2d here in order
17:45 - to get it to work so now we can hit
17:47 - hit him here and you can see that
17:50 - something weird happens in that weird is
17:52 - he's just going to continue in the
17:54 - direction he was going when we are
17:56 - actually clicking but he's no longer
17:59 - affected by any other thing that what we
18:02 - are trying to do that means that now
18:04 - inside of our is pressed we can
18:06 - basically just set our P dot position
18:08 - equal to and then of course we need to
18:11 - get the input from our mouse so input
18:13 - dot Mouse position and my input dead
18:17 - mouse position is in screen coordinates
18:19 - so that means it's basically how many
18:21 - pixels from I believe it's the top left
18:24 - corner or the bottom left corner I
18:26 - believe it's the top one how many pixels
18:28 - from that point it goes on the X and
18:30 - then on the Y and that means if we just
18:32 - convert that directly like this our
18:34 - object is just going to fly off the
18:36 - screen because a lot of pixels go into
18:39 - very little movement inside of unity so
18:41 - we need to convert this into world
18:43 - points and the way to do that is by
18:45 - going camera dot main dot our screen to
18:51 - world point and then feeding it all your
18:55 - mouse position so now we should be able
18:56 - to it save and camera that main of
18:58 - course just references our camera here
19:01 - which is tagged as main camera so now
19:05 - when we hit play we should see that when
19:06 - we are holding down on the object that
19:08 - he will follow the direction of a mouse
19:10 - that's awesome it's not currently
19:12 - non-restricted and when we let go you
19:15 - can see him bouncing back but east of
19:17 - course not going to shoot off and this
19:19 - is the next thing that we have to look
19:21 - at because currently if we start
19:23 - dragging him and we pull him back here
19:26 - what we want to happen is we want him to
19:28 - shoot over and then about here when you
19:31 - reaches this point we want the on we
19:34 - want the spring to let go and just be
19:36 - just stop working and then we want him
19:40 - to go flying but currently it just
19:43 - bounces back and this spring is still
19:45 - applied one thing you could do is you
19:47 - could check the arm distance to the hook
19:50 - in order to determine if he gets close
19:52 - to the hook and if he does you can make
19:54 - it break stuff like that but it quickly
19:57 - becomes complicated and I found a pretty
19:59 - easy way to cheat
20:01 - stuff and that is by going into Visual
20:03 - Studio and basically just setting a
20:07 - small delay actually let me just
20:09 - demonstrate this so if we drag him here
20:12 - let down we're just going to set a small
20:15 - delay 8.1 seconds and after that point
20:18 - one second say it reaches about here
20:20 - we're going to let it go that also means
20:22 - that if your delay is too on too long
20:26 - say we set it to half a second we have a
20:28 - situation where he goes like this
20:29 - bounces back and then it's released and
20:32 - it's going to be thrown over here that's
20:35 - not what we want so we have to set it
20:37 - set our delay right but as long as we do
20:39 - that it actually works really well and
20:41 - feels really nice and definitely feels
20:44 - like something that you're able to
20:45 - control as long as you get the hang of
20:47 - it so the way to do this is by using a
20:50 - Kuro teen of course whenever we need to
20:51 - delay something in code work and wait a
20:54 - certain amount of seconds it's a bit of
20:56 - very weird syntax associated with that
20:59 - and yeah there's really no way around it
21:03 - I'm sorry just follow me if you don't
21:05 - know what Kuro teens are and have never
21:07 - ridden and ienumerator statement in your
21:09 - life if you have it's awesome if not
21:11 - right after me so the first thing is
21:14 - make sure you have system dot
21:16 - collections imported up here make sure
21:18 - you have this line then we go down here
21:20 - we write I in numerator and we write
21:24 - something like a release or unhook
21:28 - something like that I'm just going to
21:29 - call it release and we basically just
21:32 - yield return new waitforseconds and that
21:35 - means that we are going to wait a number
21:37 - of seconds and the amount of seconds
21:39 - that we'll wait we'll put in here and
21:40 - instead of hard-coding that in let's
21:42 - make it into a public float and call it
21:46 - something like release time set that to
21:49 - 0.15 is what I discover it work pretty
21:52 - well but you can of course edit that all
21:54 - you want I will say that the higher you
21:57 - make your frequency the lower you want
21:59 - your release time because the quicker
22:00 - the higher the frequency the quicker
22:02 - it's going to travel from the place
22:04 - you've dragged it to to the hook and so
22:07 - the quicker you want to release it
22:08 - unless it's gonna go yeah
22:10 - bounce back and yeah it's going to act
22:13 - weird so in here let's put
22:15 - release time and then after we've waited
22:18 - that amount of seconds we basically just
22:20 - want to grab our um spring joint 2d
22:25 - component just using getcomponent is
22:28 - fine and going dot enabled equals false
22:32 - so just disabling that component and
22:34 - we're not going to be doing this more
22:35 - than once per Bowl and that's exactly
22:38 - when we release it and that's why using
22:39 - getcomponent will be just fine and we're
22:42 - never going to be enabling it so once
22:46 - it's fired its fired and that's it so I
22:49 - think this looks pretty good um let me
22:55 - just think if there's anything else we
22:57 - need to do well we can pretty much just
22:59 - test it inside of unity now and see if
23:01 - it works so if we select our ball we
23:04 - have a release time now if we hit play
23:06 - and drag our ball
23:08 - [Music]
23:10 - it doesn't release all right so what's
23:14 - going on here well of course inside of
23:16 - our script we also have to call this
23:18 - release method and the way to do that is
23:20 - not by and we want to call it inside of
23:23 - the on mouse up because that's when we
23:24 - release our button and we want it to go
23:26 - flying
23:27 - but we can't just go release like this
23:31 - which we would do with a normal method
23:33 - when we have a kuroh teen meaning a
23:36 - method that is of type ienumerator we
23:39 - have to say start co-routine and then
23:42 - input the release function into that
23:45 - it's just another step that makes the
23:47 - syntax a bit weird but you just have to
23:49 - do it and learning that that is the way
23:51 - that things are done so now when we drag
23:53 - this you can see we have flying
23:55 - cannonballs that's awesome so you can
23:58 - see that we can really shoot this in a
24:01 - lot of fun ways we're not replenishing
24:03 - it we don't have a lot of cool stuff to
24:04 - show it on yet and currently we don't
24:07 - have any restrictions on this guy so we
24:09 - can come flying really fast but it is
24:12 - indeed working so I think the next part
24:14 - is to probably just getting some other
24:16 - objects in here so that we can see the
24:18 - game kind of working and then we can
24:20 - have a look at adding all of that that I
24:22 - just talked about in a second so let me
24:25 - just take a sip of water here
24:29 - let's see here everything is looking
24:38 - pretty good so on one guy asks why I
24:48 - cannot use the wait for seconds in an
24:50 - online numerator I can do that in
24:52 - JavaScript but you are not able to do
24:54 - that inside of c-sharp in c-sharp you
24:57 - have to mark on the function as an
25:00 - ienumerable be at kuroh teen and that
25:04 - allows you to do a wait for seconds you
25:07 - cannot do that inside of a normal
25:09 - function it's not going to work
25:11 - what you can do is make a normal
25:13 - function and then use invoke to call
25:17 - that function and in the invoke you can
25:20 - then specify a delay before the function
25:22 - is called but you can't wait inside of
25:25 - the function itself the whole thing
25:26 - about co-routines is that they are kind
25:29 - of pieces of code that run on em in a
25:33 - way that's not directly connected to
25:35 - your order of methods so you can go
25:38 - ahead and call one co-routine in one
25:41 - line that code teen is going to go off
25:43 - waiting for five seconds until doing
25:45 - something else then right after you can
25:47 - call another co-routine and if that crow
25:50 - teen doesn't wait that's going to be
25:52 - executed before your other co-routine
25:55 - and so it doesn't have to go back and
25:56 - finish before continuing a normal method
25:59 - it's going to call that method it's
26:01 - going to execute it and then go ahead
26:03 - and call something else so kuroh teens
26:05 - are basically methods that the compiler
26:07 - when running it or that at runtime
26:10 - aren't waited upon before continuing so
26:14 - that's kind of what it does behind the
26:16 - scenes ah cool so will I upload this to
26:20 - youtube yes this will definitely be on
26:22 - YouTube when we're done so now we're
26:24 - basically ready to to get some other
26:29 - physics objects in here so if we go into
26:32 - our sprites here we have the would
26:34 - normal and would tall and we also have
26:36 - the would block I'm just going to take a
26:37 - normal word here and let's go ahead and
26:40 - add a new
26:40 - and the component is going to be a box
26:43 - Collider 2d hit F to focus on it let's
26:46 - edit the collider to match it up because
26:49 - I have a bit of shattering on the object
26:51 - here and so we want to make sure that
26:53 - this aligns perfectly with the actual
26:56 - blog and not the shadow and we can stop
26:59 - editing that Collider and we can go
27:01 - ahead and add a rigidbody 2d as well so
27:04 - now this should already be working
27:06 - inside of the unity physics space and I
27:08 - actually want to take a ball and hook
27:10 - and move them back a tiny bit as well to
27:13 - increase the distance that we have to
27:15 - aim so something like that looks pretty
27:17 - good and you can see that that is
27:18 - already able to be knocked over so now
27:21 - we essentially have a game here so what
27:23 - we can do now is maybe just build a
27:25 - small castle thing or whenever you build
27:28 - something that feels a little fun let's
27:30 - actually before duplicating this let's
27:32 - turn this into a prefab so let's go and
27:34 - create a prefabs prefabs folder and
27:37 - let's take a wooden all mode drag it on
27:39 - the drag it under that and let's also do
27:43 - kind of the same thing to our wood tole
27:45 - here so we can basically go in here add
27:48 - a rigidbody 2d add a box Collider 2d and
27:53 - I think on this one we probably want the
27:54 - mass to be twice as big and we can go in
27:57 - here and edit the Collider so let's take
27:59 - the Collider here drag that down drag
28:02 - this in to adjust it drag this in this
28:04 - wall and this one and we can stop
28:08 - editing the collider and we should see
28:10 - that interacting already so let's go
28:14 - ahead and knock those two over that's
28:15 - awesome and you will notice that it does
28:17 - have a bigger mass if we were to change
28:19 - this to something like 10 it will be a
28:21 - lot harder to knock over there you go so
28:24 - I'll definitely play around with having
28:26 - objects of different masses and maybe
28:27 - different materials you can create some
28:29 - metal that's a lot harder to not go with
28:31 - that that makes the game a lot more fun
28:33 - now let's take this Wood tall and drag
28:36 - it under the prefabs folder as well if
28:38 - I'm able to hit that with my mouse and
28:40 - let's just build out a a level real
28:43 - quick here so we'll have this AK this
28:45 - our base this one is going to be flipped
28:48 - over 90 degrees please there you go why
28:52 - is it render
28:53 - so we're there we go so we can place
28:55 - this here maybe we can take an enemy and
28:59 - place those here but we'll do that in a
29:01 - second when we've actually created those
29:03 - so far we can just take another normal
29:06 - block here and maybe we can take a tall
29:09 - block here as well to kind of hinder you
29:13 - or we could put it I don't know I'm not
29:15 - very creative when it comes to making
29:17 - levels to be honest I never really
29:21 - struck me as a thing that I'm good at
29:24 - but let's just go ahead and see what we
29:27 - can do here actually they want to
29:28 - duplicate this one and move it up
29:30 - something like that that that looks fun
29:32 - it looks something that could be in
29:33 - flappy bird is or I keep saying flappy
29:36 - bird Jesus Christ is that the same thing
29:38 - in the YouTube video it's it's really
29:41 - bad I think every problem with that so I
29:43 - know let's hit play and just see if if
29:46 - this is working that already looks
29:47 - really fun and for some reason this one
29:50 - I dragged in this sprite see I have to
29:55 - drag in the actual object there we go so
29:58 - now that should be working let's just
29:59 - test it out and here we go of course I
30:03 - didn't hit it yeah there we go awesome
30:05 - so um yeah the next thing is of course
30:09 - getting some enemies in here and the way
30:12 - that we do that is by of course starting
30:14 - by taking an enemy stripe dragging it in
30:19 - there adding a new component that we're
30:20 - going to be using this circle Collider
30:22 - 2d again we want to probably give this a
30:25 - tiny bit of offset on the Y I'm just
30:27 - going to do point zero one and maybe
30:29 - also lowering the radius down to say
30:32 - point three and then we can add a
30:34 - rigidbody 2d component as well to this
30:38 - one and I think I want to scale it down
30:40 - to something like point eight just to
30:43 - make it a tiny bit smaller than the
30:45 - player I think that's going to look a
30:46 - bit better and we can take this guy turn
30:50 - them into a prefab I'm sorry about that
30:54 - duplicate them moving over and maybe
30:57 - even duplicate him once again and move
30:59 - one up here that looks pretty fun
31:01 - something like that and we should
31:03 - already see that these guys are now
31:05 - interacting
31:07 - in the level and I'm just going to go
31:08 - ahead and try and knock those over that
31:11 - is already working and one thing that I
31:13 - do want to edit and I'm editing the
31:15 - prefab here so that it will affect all
31:17 - of them at the same time it's give them
31:19 - a tiny bit of linear drag something like
31:21 - point 1 and setting the angular drag up
31:23 - to point 1 as well just so they won't be
31:25 - moving until we actually start hitting
31:28 - them the thing that looks pretty good
31:30 - next up we of course want to detect when
31:34 - these guys are hit that means that we
31:36 - want to have something happen when they
31:38 - are struck by something really hard and
31:40 - we want them to die when they fall from
31:44 - a certain distance and there's a lot of
31:47 - different ways to do this the main or
31:50 - probably the easiest way is by going to
31:53 - our enemy and we're going to have to add
31:55 - a new script here we'll call that the
31:57 - enemy script and let's say create an ad
32:00 - to UM create this as a c-sharp script
32:03 - let's double click it to open it up in
32:05 - one of the official studio and what we
32:08 - can do here is just delete those two
32:10 - functions and then step we'll use yet
32:13 - another eternity callback will be using
32:15 - void on collision enter 2d and on this
32:20 - one I know you have to put 2d so don't
32:23 - know why you don't have with the other
32:24 - one but you do have to do that here and
32:27 - basically on collision any 2d allows us
32:31 - to gather some information about the
32:32 - collision such as the difference in
32:35 - velocity between the two objects that
32:38 - has collided so to do that we go up here
32:41 - and we say that we want some collision
32:44 - 2d info and we can call this whatever we
32:47 - want I'm going to call it call info for
32:49 - collision info and we can basically go
32:51 - in here and say that we want to debug
32:56 - dot log collision info dot relative
33:01 - velocity and we want to use dot
33:06 - magnitude and that should be it so
33:10 - basically what we're doing here is we
33:11 - are saying that I mean relative velocity
33:15 - is a 2-dimensional vector saying the
33:17 - velocity of one object compared
33:20 - to the other object and that means that
33:22 - the speed that they are moving at
33:24 - compared to each other in both the x
33:27 - direction and the y direction and then
33:29 - we use dot magnitude on top of that to
33:32 - convert that into a single number that
33:34 - represents the length of that vector
33:36 - meaning on kind of the velocity that
33:40 - they've collided with so if we go ahead
33:42 - and save this now we should see that our
33:46 - three balls here give us some
33:48 - information about their fall apparently
33:51 - what they hit were objects where the
33:53 - collision had a relative velocity of one
33:56 - one and one point six if we now take one
33:59 - of these guy and drop them from a large
34:01 - height you will see them reporting back
34:03 - with nine point six and if we drop him
34:05 - from a bit lower down you will give us a
34:08 - six point six if we then take this
34:11 - object drop it on top of him from here
34:13 - it's going to give us a two point nine
34:15 - and if we drag it from oops if we drag
34:18 - it from all the way up here it's going
34:20 - to give us a 11
34:22 - so you can see how that is going to be
34:24 - pretty representative of how hard we
34:28 - were hit so I'm going to have to take
34:31 - some more water here guys sorry I was
34:34 - sick recently as always so um yeah so
34:39 - now we can basically just use this
34:40 - number to check whether or not it's
34:42 - higher than some ratio what we could do
34:44 - is create a health variable and say
34:47 - every time we are hit by something we're
34:49 - just going to subtract this number from
34:51 - our health and when our health reaches
34:53 - zero we're going to die but I think in
34:56 - most of these games they actually have
34:58 - have it set up in such a way that the
35:01 - collision has to be bigger than one set
35:04 - number or nothing is going to happen
35:06 - basically so that's what we'll be doing
35:07 - here and we'll still be creating some
35:10 - kind of health variable we could call it
35:12 - something like um aa minimum or max
35:18 - damage taken or something like that
35:22 - something like max velocity to be hit by
35:27 - something like that but we can also just
35:29 - go yeah
35:30 - health and I'll look default that to a
35:33 - number of
35:34 - or I think that's going to be working
35:36 - quite fine makes it a bit difficult of
35:39 - course this is a float a bit difficult
35:40 - to get rid of these guys sometimes but
35:43 - it also makes it a bit more competitive
35:44 - and then basically in here we can just
35:46 - say that if this number called that : fo
35:51 - related velocity that magnitude is
35:54 - greater than our health in that case we
35:58 - can go ahead and dice so we'll just call
36:01 - some kind of die method and then down
36:03 - here will create that die method and
36:07 - right now we're just simply going to
36:08 - destroy this game object without
36:11 - anything else happening so let's see how
36:13 - that works if we had play now they
36:15 - shouldn't die right away because there
36:17 - are collisions here really small we then
36:19 - go ahead and rig some havoc yeah awesome
36:24 - so those collided with each other and
36:26 - died and this guy didn't really fall
36:29 - anywhere but you can see that working
36:31 - now ah they collided with each other and
36:36 - notice by the way that we can still mess
36:38 - around with our ball here and that is
36:40 - causing some really really weird
36:41 - behavior but we'll go ahead and disable
36:43 - that in just a second
36:45 - cool so now on a ball just to get rid of
36:50 - that annoying behavior let's just go in
36:52 - here and say that when we release we
36:54 - also want to take this on component and
36:57 - disable it so this dot enabled is going
37:01 - to be false that means that we can now
37:03 - not miss around with our ball anymore
37:06 - whoops you see here that after we drag
37:09 - on him you can see I cannot click him
37:11 - cool so next up is probably creating
37:14 - something like a cool puff of smoke that
37:17 - these disappear into we could also do
37:19 - something like limiting the radius that
37:22 - we're able to drag the ball away from
37:25 - it's hookin and we can of course also
37:31 - what do we have here let's see of course
37:35 - we keep track of our number of enemies
37:37 - and some restarting and replenishing
37:39 - cannonballs there's plenty of stuff to
37:41 - do so um I think we're just going to
37:44 - start by limiting this guy in its radius
37:47 - then we'll create
37:47 - particles and then we can have a look at
37:49 - everything else hopefully let me just
37:51 - check time here yeah that should be
37:54 - should be doable but I don't want this
37:56 - to run too long now let me just see if
38:00 - everything is all right in the chat see
38:06 - some guys are saying that the screen is
38:09 - flickering sorry about that I don't
38:13 - really know what could be causing that
38:15 - let me know if more people are getting
38:19 - that error someone is saying that I
38:21 - should draw draw the trajectory of the
38:24 - ball that's actually really easy we just
38:26 - have to go onto the ball add a line or
38:29 - not a line render a trail renderer like
38:33 - that and we should pretty much be ready
38:35 - to go here so oops no for some reason
38:38 - we're not and this is why you never
38:40 - decide to do stuff like this on the live
38:44 - stream maybe we have to go ahead and add
38:48 - a material for this to work it's
38:49 - actually been a long time since I missed
38:51 - with the trail renderer so yeah okay so
38:54 - it's working on inside of unity but it's
38:57 - not showing in the game because it's not
38:59 - drawing on top of everything else so on
39:01 - what we could probably just go ahead and
39:03 - do is arm inside of this add some kind
39:08 - of default material like the sprites
39:10 - default material we do that it might go
39:12 - ahead and render yes it does so this is
39:15 - of course a really really ugly material
39:17 - but you you probably get the idea we can
39:20 - go ahead and make the color here of
39:21 - something like black to black actually
39:25 - I'm just going to go ahead and delete
39:27 - this last keyframe and we can make this
39:30 - a really really faded black probably so
39:34 - delete that keyframe as well we can take
39:36 - the Alpha here and drag it down quite a
39:38 - bit and we can also decrease the width
39:41 - here to something like point 1 and now
39:43 - we should actually see that this is
39:45 - working yeah awesome so you can of
39:48 - course mess around with that this is by
39:50 - no means pretty but I just wanted to
39:52 - show you that that can be done really
39:53 - really easily
39:55 - cool so now we're pretty much ready to
39:58 - go ahead and limit this guy so if we
40:00 - jump inside of
40:01 - your studio what we want to do is we
40:04 - want to check for how for the distance
40:09 - from our ball to the hook and to do that
40:13 - we basically just add an if statement
40:15 - here up in our update saying if it is
40:18 - pressed well then we want to check if
40:20 - vector 3 dot distance and then we want
40:24 - to have the distance between a hook and
40:26 - a ball and our ball is currently the
40:29 - mouse position so let's go ahead and
40:31 - store that up here so let's take this
40:34 - one and store that in a vector 2
40:38 - variable here called mouse pose let's
40:41 - set that there so distance between the
40:44 - mouse position and and then we need a
40:46 - reference to your hook so we'll go up
40:48 - here and create a public rigidbody 2d
40:50 - called hook and we'll say the distance
40:54 - between our mouse position and the book
40:56 - variable that we just created if that is
40:59 - greater than and then we can insert some
41:01 - numbers say 2 or 3 I don't know exactly
41:04 - how large we want this to be probably
41:06 - somewhere around 2 and we can make that
41:08 - into a public float as well something
41:10 - like on max distance or max drag
41:16 - distance we should probably say and that
41:19 - will just tpd fold it to 2 and we can
41:22 - say that if that's greater than the max
41:24 - drag distance and then we want something
41:27 - to happen here and if it's not then we
41:30 - are going to set our bead position equal
41:32 - to our mouse position so basically um Oh
41:37 - hook dot position awesome so what we're
41:40 - doing here is we are getting the
41:41 - position of our mouse in world space we
41:43 - are storing that in a two-dimensional
41:45 - vector then we're checking if vector 3
41:48 - the distance meaning if the distance
41:50 - between our mouse position and the
41:51 - position of our hook is greater than the
41:54 - distance that we wanted specify which is
41:57 - 2 units well then we want to go ahead
41:59 - and make some special case where we only
42:01 - use the direction and not the length
42:04 - specified by our mouse so we can still
42:06 - aim but it's going to be locked inside
42:08 - of 2 units distance and else we are
42:12 - going to be just setting it directly
42:14 - equal to our mouse
42:15 - so if this is not the case what we can
42:17 - or if if it's greater than the max drag
42:20 - distance we can go ahead and set our B
42:23 - dot position equal to and here comes a
42:26 - bit of vector math so basically we want
42:29 - to get the direction from our mouse
42:32 - position to our hook and we do that by
42:35 - saying um what is the order so from a
42:40 - mouse position to a hook with that means
42:42 - hook dot position
42:43 - - Mouse position and then we want to use
42:48 - dot normalized to make sure that the
42:50 - length of that vector is 1 and then we
42:53 - can multiply that with our max drag
42:56 - distance and that means that it will now
42:59 - be a vector pointing from our mouse
43:01 - position over to the hook position that
43:04 - is two units long and we want to add
43:09 - that on top of our current hook position
43:13 - so hook that position plus that stuff
43:16 - that should hopefully work so now if we
43:19 - go into unity and drag here we of course
43:23 - need to reference some stuff so let's
43:25 - find our Bowl and drag in our hook
43:28 - rigidbody there we go hit play and we
43:33 - should see ok so it flips so of course I
43:37 - messed it up I always miss this stuff up
43:38 - so now we have to do Mouse position -
43:41 - hooked up position instead mouse post -
43:44 - hook up position
43:47 - there we go save that hit hit back into
43:50 - unity and we should see now that we can
43:54 - drag him only yes only two units out so
43:58 - in here we have full control and out
44:00 - here we can only control the direction
44:02 - it will not go any further and we can
44:04 - just adjust this down here and you can
44:06 - see everything else is still working
44:07 - mean still firing him in any direction
44:09 - that we want yeah it's working oh I'm
44:14 - really happy that that worked on the
44:15 - first try I didn't think it would almost
44:18 - on the first try on the second try cool
44:23 - um
44:28 - yes there will be a video on YouTube and
44:31 - yes there will be a project download on
44:33 - github as well as a download for the
44:37 - sprites that I'm using so don't worry
44:39 - you'll have everything to play around
44:41 - with you don't really need to of course
44:43 - you need to stick around but your you
44:47 - don't need need to be scared if you are
44:49 - not able to follow along for some reason
44:52 - um also yeah
44:54 - just gonna check let's see here how we
44:58 - are doing with the follower count
45:00 - actually that's not updated on my system
45:03 - here so I don't know how are we got how
45:05 - are we doing guys in the chat uh oh
45:08 - we are over 7000 or are we wait wait no
45:13 - wait I I don't have the number do you
45:16 - know what's going on where are we guys
45:19 - it's not updating for some reason I'm
45:21 - live streaming and yet it looks like
45:23 - I've lost the internet connection it's
45:25 - really bad yeah okay I'll just continue
45:29 - with the with the tutorial so um yeah
45:33 - what were we getting sidetracked as
45:36 - always this is live stream footage
45:38 - there's bound to be some trial and error
45:40 - cool so um now that we have our 7.1 kay
45:45 - is it true that's awesome
45:47 - thank you guys um so uh we can go ahead
45:52 - and finish up our enemies now because we
45:55 - have our Bowl working the way that we
45:57 - want I think we need a bit cooler of an
46:00 - effect when these guys die at least we
46:02 - need an effect so let's just go ahead
46:04 - and create a particle system let's
46:06 - right-click in the hierarchy let's go on
46:08 - particle system and let's reset the
46:12 - transform on that let's go in here
46:14 - change the shape to a sphere and let's
46:20 - definitely make the sphere a lot smaller
46:23 - let's position it here near these um
46:25 - enemies so that we know kind of the look
46:28 - of those and can compare that let's also
46:31 - change the start the start speed is
46:35 - actually fine I think maybe we should
46:39 - make that a random between zero and five
46:41 - that's probably going to be a lot
46:42 - better I want to give this a negative
46:44 - gravity modifier some negative one so
46:46 - that it will start flying upwards I
46:49 - definitely think we should change the
46:50 - start size to a random between two
46:53 - constant and have something like point
46:55 - four and point eight or something like
46:58 - that
46:59 - and we also need to make this not blend
47:01 - in so much with the background so let's
47:02 - just go ahead and change the start color
47:04 - to fit the color of our enemies
47:07 - something like that by the way I just
47:09 - use the color picker there allows you to
47:12 - pick any color from the unity scene so I
47:14 - just pick that one and we also want
47:17 - these to fade over time so the way to do
47:20 - that is just going into our color of a
47:22 - lifetime here and then simply animating
47:25 - the Alpha Channel to fade out I think
47:28 - that actually looks pretty good then of
47:32 - course we don't want this to emit in
47:33 - just or over time we want it to admit
47:36 - admit in bursts so let's set the rate to
47:40 - zero and then instead add a burst here
47:42 - and on it's freezing up there we go
47:46 - and we want it to be a burst of say
47:48 - between 15 and 20 and we can go ahead
47:52 - and set the duration here to one only
47:54 - and that actually gives a fairly nice
47:58 - effect I think we can definitely lower
48:00 - the start speed to be between zero and
48:03 - three but overall I really like the look
48:06 - of this I think it gives a really nice
48:08 - rewarding feeling so um yeah if we're
48:11 - satisfied with that um we can pretty
48:14 - much just go ahead and wrap this in to a
48:16 - prefab let's also turn off looping and
48:19 - let's rename this to something like
48:21 - enemy death effect and let's drag it
48:24 - into our prefabs folder and it's deleted
48:27 - in our scene
48:28 - and now we can head into Visual Studio
48:30 - go to the enemy where it dies and we can
48:32 - go ahead and instantiate the enemy death
48:35 - effect that we need a reference to so
48:37 - let's go up here and create a public
48:39 - game object death effect and we can go
48:42 - down here and say we want to instantiate
48:44 - the death effect at our current position
48:47 - so transformed our position and the
48:50 - rotation doesn't matter so we'll just do
48:52 - a quaternion dot identity
48:55 - so now we hit play and um did we
49:00 - reference it I don't think we did so
49:02 - let's go to our enemy indeed we'd end
49:04 - and drag in the enemy debt effect and
49:06 - make sure to do that in the project
49:08 - panel that it will apply to all of our
49:10 - guys at the same time so now if we kill
49:13 - off one of these dudes yes we have a
49:15 - much better death effect that just
49:17 - improves the feel of the game so much
49:19 - that was really rewarding cool so the
49:24 - next thing is our keeping track of how
49:26 - many enemies we currently have alive in
49:28 - order to make ourselves a win condition
49:31 - so um let's see here ah yeah so you guys
49:40 - are making fun of me in the chat I see
49:42 - yeah when I said over 7,000 I meant
49:44 - views of course that's awesome but we
49:46 - are also over 1k followers so you guys
49:49 - Rock thank you so much that's that's so
49:51 - fun I'm really enjoying these live
49:53 - streams yeah sorry for messing up the
49:55 - view part but I I know we don't have
49:58 - 7,000 followers I'm getting ahead of
50:01 - myself but I mean we can get there so
50:04 - yeah okay enough about that let's
50:06 - continue with the tutorial here so now
50:10 - that we have that working um let's go
50:13 - ahead and keep track of the Akari enemy
50:15 - count and there is a bunch of ways to do
50:18 - this I've basically demonstrated each
50:20 - single way so far in different tutorial
50:23 - series but I think the way we'll go with
50:25 - here is probably also the easiest and
50:27 - that is by having a public static
50:30 - integer called the enemies alive and I
50:36 - will default that to 0 then in our start
50:40 - method each enemy is going to increase
50:42 - that by 1 so we will go enemies alive
50:46 - plus plus and that means that if we have
50:49 - 3 enemies ours in our scene each one is
50:52 - going to call the start method and
50:53 - increase enemies alive by 1 so yeah
50:57 - enemies alive will be 3 then in our
50:59 - diameter we'll go ahead and set or Inc
51:02 - or because decrease enemies alive so
51:05 - enemies alive - - and then we check if
51:08 - enemies alive is less than or equal to
51:11 - zero but then we can go ahead and
51:13 - restart the game and the way we do that
51:15 - is by going up here and using Unity
51:20 - engine dot scene management we can go in
51:25 - here and we can say a scene manager dot
51:31 - actually I don't think we necessarily
51:33 - want to restart the game what you would
51:35 - do is transition to a new level but I
51:37 - think in our case we're just going to go
51:40 - ahead and write a debug deadlock
51:41 - statement you can also make a win level
51:43 - or whatever you would really just load
51:45 - the next level here but let's just go
51:47 - out into a debug that logs saying
51:48 - something like a level one cool and that
51:55 - should actually work right off the bat
51:56 - except when we go in here later and then
52:00 - restart the game we can have a situation
52:03 - where it's going to restart without
52:04 - killing all the enemies and that would
52:06 - mean that the static variable here
52:09 - wouldn't reset and so we would add on to
52:12 - the amount of enemies and then even if
52:13 - we kill off the enemies we would still
52:15 - not reach zero and that would cause a
52:17 - bug but we'll have a look in that at
52:20 - that in in a second so now we should be
52:22 - able to hit play here I don't know I'm
52:24 - never going to be able to do this
52:26 - guys I have to perform oh I didn't kill
52:30 - them never know this is not going to
52:31 - happen what we can do
52:33 - disable those to have this one drop off
52:37 - roof and when we play any dies yeah
52:40 - level one we killed all the enemies
52:42 - awesome so that is indeed working and if
52:45 - we say start with with two enemies in
52:48 - here I'm just going to make this guy
52:50 - drop off a cliff minus one and then we
52:54 - can kill this guy I'm sure yes and it's
52:56 - going to say level one so it is indeed
52:59 - working and that is again where you
53:02 - would transition to a new level or
53:04 - transition over to some kind of wind
53:06 - screen so uh yeah next up is
53:10 - replenishing our balls here so if we go
53:13 - ahead and make this ball in to a prefab
53:15 - like we've done with everything else we
53:17 - can easily duplicate them a few times
53:19 - here and move that up here
53:22 - so we have all them in the same place
53:23 - the reason why I'm duplicating him is
53:25 - because I basically just want to enable
53:27 - another ball when the current one is
53:30 - released and the reason for that is you
53:34 - can go ahead and spawn in another ball
53:37 - each time that um that you want a new
53:42 - one to to play around with but the
53:44 - problem with that is that you would have
53:46 - to connect the hook through script you
53:50 - would have to set up the spring joint
53:51 - you will have to connect the ball hook
53:53 - down here and set up the anchor and all
53:56 - that stuff through script and that's a
53:58 - lot harder so what we'll go ahead and do
54:01 - is just have these two as disabled
54:03 - objects and it's also going to be a lot
54:05 - more performant because we have a
54:07 - limited amount of balls that we want to
54:08 - be able to shoot then inside of our
54:11 - first ball here we'll go ahead and throw
54:15 - in a reference a public um game object
54:19 - and this is going to be the next ball
54:22 - and then down here under the release we
54:26 - will go ahead and return yield return
54:29 - new waitforseconds and we'll go ahead
54:31 - and wait a certain amount of seconds I
54:33 - think we should just wait two seconds
54:34 - again you can expose this as a variable
54:36 - up here if you want and basically we
54:40 - just want to set our next poll to active
54:43 - and I think we have a cat that is waking
54:47 - up here so let's have him say hi to the
54:50 - stream see he's there playing around
54:53 - with the microphone he just woke up so
54:54 - he's a bit grumpy yeah I'll get you down
54:58 - before you do something evil to me
55:00 - awesome
55:01 - so um we basically just going next bolt
55:04 - that said active and then true and and
55:08 - that should be all so if we just save
55:12 - that we should see now that if we link
55:14 - these up so on this one is going to
55:17 - reference ball one and Bowl one is going
55:19 - to reference ball two and then we can
55:22 - actually go ahead and do this two times
55:24 - so we can drag this guy over shoot him
55:27 - we actually won that one first try and
55:29 - drag that guy over and a new one spawns
55:32 - that's awesome except now we're going to
55:34 - get an error
55:35 - because there are no more poles so what
55:37 - we'll do there is say that if next ball
55:40 - is not equal to know then we'll go ahead
55:43 - and and simply oops I want to make some
55:48 - curly brackets then we'll go ahead and
55:50 - set the next one to active and else
55:53 - meaning that the next pole is equal to
55:56 - null well in that case we've pretty much
55:58 - lost because if we haven't transition to
56:01 - a windscreen or a new level and we run
56:04 - out of balls there's nothing to have to
56:07 - do and that means that we failed this
56:09 - level so in here we would do something
56:12 - like restart the scene have some game
56:16 - over screen some stats something like
56:19 - that in our case we're just going to
56:21 - restart the current level so we'll go up
56:23 - here and say our using unity and whoops
56:26 - that's a weird symbol using unity engine
56:28 - dot scene management and down here we'll
56:32 - say scene manager dot load level or load
56:36 - scene and then scene manager dot get
56:39 - active scene and then we want to do dot
56:42 - build index and close that off so now we
56:45 - should see that if we are unable to
56:47 - complete the level here so I'll just be
56:49 - really really bad on purpose and I'm
56:52 - just yeah on purpose we can go ahead and
56:55 - shoot all of our cannonballs and they
56:57 - didn't hit anything and so the level
56:59 - restarts awesome so we're basically at
57:03 - the point that we were when I showed
57:06 - this in the video I don't think there's
57:08 - too much left to show for this game
57:10 - really now you should go ahead and play
57:13 - around with it expand on it make sure
57:15 - that it transitions to new scenes make
57:18 - some better um some some better game
57:23 - over screen all that the only thing that
57:25 - we have left to fix is of course the bug
57:27 - that I mentioned and that is if we go
57:29 - into our visual studio here we can go
57:33 - and say that when we load the current
57:36 - scene we load the current scene here we
57:38 - want to go enemy dot enemies alive
57:40 - equals zero so that we make sure to
57:42 - reset that number just so that if we
57:45 - fail in one level transition to the next
57:48 - and it's going to reset the amount of
57:51 - enemies and not just add three more on
57:53 - to that so we're going to have six level
57:55 - enemies that we have to kill and that's
57:57 - pretty much impossible if they're all if
58:00 - they're not on the screen and you can
58:01 - see stuff can fall off the screen here
58:03 - you can add some colliders if you want
58:04 - if you don't want that to happen or you
58:07 - could have it as part of the game that's
58:08 - totally up to you
58:09 - you could also one thing that could be
58:12 - really fun to do is add a camera that
58:15 - follows around our ball and I've shown
58:18 - how to do camera smoothing in a lot of
58:20 - videos also in some of the live streams
58:22 - I believe so if that followed the ball
58:24 - around that would look super cool when
58:26 - it's fired here that the camera went off
58:29 - with it but yeah really just play around
58:32 - with it create a bunch of levels go nuts
58:35 - and I believe that's pretty much all for
58:36 - the video part of this tutorial so let
58:40 - me just check the chat here if
58:45 - everything is going correctly let's see
58:52 - here yeah everything is pretty much
58:55 - looking good yeah awesome so um I think
59:03 - we are now ready to transition over to
59:05 - the QA and so yeah it's be a time
59:11 - basically yeah I don't have a beer lined
59:12 - up but um I will drink some water
59:16 - instead I don't think my throat will
59:18 - handle a a beer right now but let's go
59:23 - ahead and see if we can line this up so
59:25 - let's go to chat here I hope you guys
59:28 - like that to turtle so um this is Q&A so
59:31 - just fire away with all of your
59:33 - questions guys let's see how to do life
59:37 - have fun I mean hot on the on the behalf
59:41 - of others have fun in a very respectable
59:44 - and yeah timbre gloss um so let's see
59:51 - I'm just gonna put you guys over on my
59:55 - main monitor here so that I don't look
59:58 - over there when I'm trying to answer
60:00 - some questions
60:01 - you guys like the video and yeah
60:06 - everything will be up on YouTube again
60:08 - and on github there will be links to all
60:11 - of the source and stuff like that again
60:13 - I will mention that if you haven't
60:15 - checked it out go check out dev assets
60:17 - comm it's a website I've worked on for
60:19 - several months I think it's it's really
60:21 - awesome so go check that out we are
60:24 - really really really really really close
60:26 - now to hitting 200,000 subscribers on
60:29 - YouTube which is just amazing I'm just
60:32 - going to switch to the live count here
60:34 - just a moment so let me see here
60:37 - whoops that looks pretty crazy so here
60:41 - is the live count this is how close
60:42 - we're currently I that's that's so
60:45 - awesome guys thanks for all that we
60:47 - support let me switch back to the chat
60:50 - here let's answer some questions so um
60:53 - will there be a bullet trace in the FPS
60:56 - series I believe you mean the
60:58 - multiplayer FPS I haven't thought about
61:00 - doing a bullet trace but I am currently
61:02 - doing kind of a few standalone
61:05 - shooter videos that I don't want it to
61:08 - bury in a lot of multiplayer first
61:10 - videos like the sniper scope one I would
61:12 - like to do some more in that style so
61:15 - bullet traces could definitely be a
61:17 - thing there I definitely also want to
61:20 - redo the shooting tutorial because the
61:23 - one I have it's fine but it's very old
61:25 - and I cringe when I see it so I really
61:30 - want to redo that one um let's see
61:33 - what's what else is going on here
61:35 - what was the funniest bog I ever had
61:38 - that's a good question I don't really
61:40 - keep can bugs be fun that's new to me I
61:46 - don't know um when when you mess around
61:49 - with procedural mesh generation some
61:51 - really weird stuff can happen especially
61:53 - if you've ever tried doing procedural
61:56 - animation that stuff is really difficult
61:58 - and it's bound to be mess-up messed up
62:01 - and if you don't get it right you can
62:03 - get the weirdest of shapes and movements
62:05 - that is definitely something you guys
62:08 - should try out if you're really looking
62:10 - for a challenge the best place to go
62:12 - there would probably be a talk the Kree
62:15 - of overgrowth growth made at GDC game
62:21 - development conference a few years back
62:24 - it's amazing
62:25 - procedural animation overgrowth just
62:28 - search for that and you're going to be
62:30 - amazed to find some of the guy some of
62:32 - the stuff he did um let's see here who
62:36 - is typing in the Maron do do you who's
62:39 - typing in the background that is of
62:40 - course my lovely girlfriend who is
62:42 - assisting me in the chat asked the sofa
62:46 - Bob moderator she is saying hi and yeah
62:50 - so that's just her is this the end of
62:52 - the stream I mean it's the end of the
62:55 - tutorial but we are still doing some Q&A
62:57 - and answering some questions but yeah it
63:00 - is kind of revving up slowly so right
63:03 - away what's the most complex game I ever
63:07 - made I think the worst games I ever made
63:11 - were the more complex ones really if you
63:14 - make something that's too complex you're
63:16 - not doing it right
63:19 - really every every game should be really
63:22 - easy to look over and understand if it
63:24 - gets too complex you're not writing
63:27 - proper code it's one of the most
63:30 - difficult things one that I really did
63:33 - guilty of is having an a hard to
63:36 - maintain code base um will I publish
63:41 - videos about game up to my station
63:42 - that's actually a really interesting
63:43 - subject unity has a lot of great up blog
63:46 - posts about game up to my station that
63:49 - are worth checking out so maybe do that
63:52 - um I'll consider doing a video tutorials
63:55 - more gay more people asked for that can
64:00 - I make a full game please I don't
64:02 - necessarily know what you mean by a full
64:04 - game I'm I've pretty much showed the
64:06 - game creation process from start to
64:08 - finish or at least to the point where
64:10 - you get it on a store but of course all
64:14 - of the store and marketing and all that
64:16 - fixing bugs and maintaining users and
64:19 - all that it's a whole other part and
64:21 - it's something I haven't really covered
64:22 - so that's what you mean I guess I'll
64:24 - think about it
64:27 - let's see what else here unreal
64:29 - tutorials I would love to do some
64:31 - tutorials on Unreal Engine at some point
64:32 - but right now it's just so much demand
64:34 - for unity tutorials that I would feel
64:36 - like I'm letting you guys down my
64:38 - certain shirts by suddenly sorry just
64:41 - pivoting to something else um do you
64:46 - have any tips on how to make a text
64:47 - adventure games I know not really too
64:52 - many tips on that I know that yeah I
64:56 - would probably not use unity for that I
64:58 - would use something just maybe just the
65:00 - console really if you check out my
65:02 - c-sharp tutorial course I basically make
65:06 - some text-based games than that it's
65:08 - just a lot of if and switch statements
65:09 - to be honest let's see um hold were I
65:15 - when I started coding good question I
65:17 - don't remember it depends on what you
65:19 - mean by coding because I tried out a bit
65:23 - of coding when I was really really young
65:26 - like yeah before I hit 10 definitely um
65:29 - but I was so ridiculously bad and I
65:32 - stopped so quickly that I wasn't really
65:34 - coding I mean I checked out some HTML
65:35 - wanted to and learn that I mean
65:38 - everybody has to look over HTML at some
65:40 - point checked out a tiny bit of CSS and
65:43 - I've also done a bit of Visual Basic
65:45 - before I really got into programming but
65:48 - when I started with unity is about I
65:50 - don't know five six years ago or
65:52 - something like that that's where I
65:54 - really felt like programmer is it's
65:57 - actually in unity and yeah
65:59 - c-sharp is definitely my favorite
66:01 - language um it's what I feel most
66:03 - comfortable with but really it's it's
66:07 - hard because for web development my
66:11 - favorite language is not c-sharp so yeah
66:16 - um could I let's see did you do um I was
66:24 - wondering if you would make some basic /
66:26 - advanced AI tutorials with more complex
66:28 - enemies I think it would be a good idea
66:32 - to make a separate enemy AI tutorial
66:35 - actually using something like the a-star
66:37 - path finding algorithm or rain
66:40 - by rival theory I will definitely think
66:45 - about that one put a pin on it so yeah
66:49 - that could be really fun but I have
66:52 - shown how to do some artificial
66:55 - intelligence in some of the other videos
66:57 - like the 2d platformer the one as a
66:59 - fairly relevant still um or a few fairly
67:02 - relevant videos on just doing enemies
67:06 - that will follow you around the screen
67:08 - and find the shortest path and avoid
67:10 - obstacles and all that stuff it's really
67:12 - what all you need for most games at
67:16 - least can act as a good base which one
67:23 - is good on really generally they have
67:24 - both really really good pieces of
67:26 - software
67:26 - I mean unity is probably my favorite
67:29 - piece of software of all time just
67:33 - because of how convenient I find it to
67:35 - use I find it's pretty much just an
67:37 - extension of myself and there's just so
67:40 - little to do from idea to having
67:43 - something working I mean prototyping in
67:45 - unity is amazing and what they're doing
67:48 - now some of the tweaks that they've made
67:50 - recently since they became a bigger
67:52 - company that's made roading from the way
67:56 - from prototype to actually publishing a
67:58 - working game and maintaining it a lot
68:01 - better as well so I just love unity but
68:04 - unreal is amazing software as well some
68:06 - of their technical guys are just on a
68:08 - whole lot of other levels so that's
68:11 - really awesome what do you think about
68:13 - unity 5.5 I love it some very much
68:16 - needed changes in that one still waiting
68:21 - for nested prefabs though and build in
68:25 - volumetric linings but if you want
68:27 - volumetric lighting I showed you in a
68:29 - recent video check out out on the
68:32 - YouTube channel how you can get that
68:33 - using the current version seems unreal
68:40 - scrap fix more good than unities or is
68:42 - it just you I mean it really depends on
68:45 - what you mean with good graphics unreal
68:48 - out of the box will probably look better
68:50 - when it comes to 3d with a lot of image
68:53 - effects on motion
68:54 - and lighting baked and all that stuff
68:56 - then unity but it really depends on what
68:59 - you mean with good graphics because if
69:02 - you want to do 2d stuff unity probably
69:03 - has more control and if you want to do a
69:06 - certain look unity can be tweaked to
69:08 - pretty much anything and now unity also
69:11 - has a full PBR workflow and enlighten
69:14 - with super-awesome are real-time global
69:16 - illumination and all that stuff so unity
69:18 - is come a really long way but it's it's
69:20 - true that when it comes to really
69:22 - powerful 3d graphics features especially
69:26 - the particle system unreal is still
69:29 - ahead
69:30 - they've already always been been leading
69:33 - in that stuff but I mean if you want to
69:34 - have say GPU accelerated particles where
69:37 - you can have a million particles
69:39 - floating around with noise and all that
69:41 - stuff there are definitely guys working
69:44 - on that I found a guy didn't don't
69:47 - remember his name who created an awesome
69:48 - plugin for that he had an amazing github
69:50 - something I think it was called vet like
69:54 - que VA NT but yeah so it's it's a really
69:59 - hard thing how did I learn to code slash
70:03 - program please no capital letters in the
70:05 - chat give everyone an even chance but I
70:09 - shouldn't answer the question when you
70:11 - do capital letters I'm gonna do that
70:13 - anyways so I learned to code in program
70:15 - we're watching a lot of tutorials now
70:18 - I'm making them that's that's life I
70:20 - guess and by reading a book it's about
70:25 - to save a few books but that would
70:26 - almost be a lie I pretty much just read
70:29 - on something like introduction to
70:32 - programming by Jason Lin which is a
70:35 - c-sharp book that helped me out a lot
70:39 - but really just by practicing and
70:40 - watching tutorials just practice
70:42 - practice practice guys did I make the
70:47 - website on my own if you're referring to
70:50 - Broca's calm almost on my own I had a
70:53 - guy who helped me with that that's so
70:55 - long back it's written it's running on
70:57 - WordPress it's back when I had almost
70:59 - zero a web development experience and we
71:01 - wanted to do some custom things that I
71:03 - didn't know how to do and so I had a guy
71:06 - or
71:06 - friend of mine helped me out with that
71:08 - but now I'm doing all website
71:11 - development for myself and apps have
71:12 - been for a few years and the dev app
71:15 - sits website is created from scratch by
71:17 - me it's created in something called
71:19 - Jekyll which is basically just a static
71:22 - site generator that allows you to write
71:24 - HTML CSS sass stuff like that from
71:27 - scratch and then write template for it
71:29 - and reuse parts of your code so it
71:31 - becomes really awesome and then it just
71:32 - spits out really basic HTML and CSS code
71:35 - so it loads really really quickly and
71:38 - you don't have to access a database I
71:40 - could talk about that forever it's
71:42 - really really cool and then of course a
71:45 - bit of FDR script and jQuery on that
71:49 - how often do I plan to update deficits
71:51 - as often as I possibly can I mean the
71:55 - artists working there right now are
71:57 - awesome they're really spitting out a
71:59 - lot of great content and I'm doing my
72:01 - best to also get it on the site as
72:04 - quickly as possible there's a lot of
72:06 - work that goes into each asset pack I
72:08 - mean the stuff that is on there right
72:10 - now such as the sci-fi vehicles and the
72:12 - modern weapons each pack has probably
72:15 - taken over a month over a month of work
72:19 - both for the artists and for me to get
72:22 - everything totally solid in unity all
72:25 - the textures and models and
72:27 - back-and-forth and fine-tuning and
72:29 - polishing and doing the promotional
72:31 - renders and videos and descriptions and
72:34 - getting everything neatly organized for
72:36 - you guys and testing it oh that's so
72:38 - much work in each pack so that's why it
72:41 - really makes a huge difference if you
72:43 - can support us for because yeah we
72:46 - basically so far we basically be doing
72:49 - it for free and while I like free I
72:51 - can't live off free so yeah the more you
72:54 - guys support us the more we can focus on
72:57 - that instead of having to do try and
72:59 - work or whatever might be distracting us
73:01 - so yeah it's really up to you guys
73:03 - how many updates we can have which
73:08 - software do I use to record my screen I
73:10 - use OBS right now open broadcaster
73:13 - service and think software software
73:16 - probably yeah OBS it's more what most
73:20 - five streamers and youtubers used to
73:22 - capture the screen it's both on Windows
73:24 - and Mac and sometimes I use Nvidia
73:27 - shadowplay if that is lacking so if if
73:30 - I'm having some framerate issues for
73:32 - something really taxing say a hardcore
73:34 - render in unity I switch over to Nvidia
73:37 - shadowplay
73:38 - why I'm not streaming on YouTube don't
73:41 - know if you want me to stream on YouTube
73:43 - instead I will do that I just really
73:45 - liked which I mean which is awesome as a
73:48 - lot of custom features that unity does
73:50 - not so I wanted to try out on Twitch but
73:53 - let me know if you guys would much
73:54 - rather have me switch or stream on
73:57 - YouTube I'll switch to that um let's see
74:01 - please create and if a cute I have any
74:05 -  you but it's really old and really
74:07 - bad and I don't want you to see it I
74:09 - don't know what I would write in my FAQ
74:12 - for deficits yeah we should have an FAQ
74:15 - that's - we should definitely have an
74:17 - FAQ oh yeah I'll write that down someone
74:22 - say stay on Twitch that's awesome um
74:25 - let's see one if I could make
74:28 - intermediate sprite kit tutorials I tend
74:31 - to stay away from tutorials based on a
74:33 - certain asset or smaller software I like
74:38 - to keep it very neutral so that people
74:40 - aren't forced to use any kind of third
74:42 - party stuff unless yeah sometimes I
74:45 - don't know if sprite kit is paid or not
74:48 - but I definitely stick to only free
74:52 - software and when I can uh if you want
74:57 - to make GTA you can do it that's good to
75:00 - know
75:04 - have you ever released a game you made
75:05 - on Steam I haven't actually released
75:07 - something on Steam now I had once had a
75:10 - game plan for release on Steam but we
75:12 - chose to go other other places and so I
75:18 - haven't been that through that process
75:19 - I'm not one to advise on that do I go
75:25 - back and update dev assets content to
75:27 - the latest unity version I hope to do so
75:30 - again I am working really really hard on
75:33 - everything right
75:33 - now so I can't promise that I'll do that
75:35 - but I mean I would love to really and if
75:40 - something just breaks I stopped working
75:41 - let me know anywhere and I will fix it
75:45 - immediately of course um so yeah I think
75:49 - we're pretty much can you show us how
75:52 - you did the algorithm in geogebra um
75:56 - [Music]
75:58 - yeah can i I don't think I saved that
76:03 - one I believe it was just a fairly
76:08 - simple algorithm I don't think there was
76:11 - any special part to it okay I'll just
76:14 - switch over here so this year
76:17 - okay I'm gonna whoop all of the live
76:19 - stream software this here is gr Corral
76:22 - if you haven't watched the latest game
76:24 - math Theory video
76:25 - that's what or not game theory how I
76:28 - always used a geographer for that if you
76:31 - haven't watched the latest video showing
76:33 - the making of my Ludum dare entry into
76:36 - the 37 combo it was called it or the
76:41 - theme was one room and my submission was
76:44 - called maniac Inc I basically used this
76:47 - to prototype an algorithm I wrote and
76:49 - basically I mean in here you just write
76:52 - something like y equals and then you do
76:55 - like 1 over X and it's going to display
76:59 - that for you and you can just edit the
77:00 - formula in here it's so super nice for
77:03 - on visualizing stuff like this and you
77:05 - can even automate it with with the
77:07 - sliders so you can input slider values
77:09 - into this function and then you can see
77:12 - it updating it's it's an awesome piece
77:14 - of math software that's basically all I
77:16 - did and I think I just had like in some
77:19 - kind of function that would decrease
77:23 - over time and then I just slapped a sine
77:26 - wave on top of that to give it a tiny
77:29 - bit of variation and randomness so yeah
77:32 - that's basically how I did that let me
77:34 - bring back up the chat here and yeah
77:38 - final questions guys and we're going to
77:39 - close the stream in just a second again
77:42 - thank you so much for helping the on the
77:45 - twitch here reach a
77:47 - thousand followers that's awesome so
77:51 - cool and if you guys haven't already
77:53 - check out patreon complex pattern is
77:58 - what we have to thank for being able to
78:00 - make these are monthly live streams and
78:03 - really having a fixed video schedule
78:06 - it's because of you guys who are
78:08 - donating if you don't know patron is a
78:10 - way for you to make a monthly recurring
78:11 - donation of your choosing and it's
78:14 - cancelable at anytime so check that out
78:17 - and consider becoming a patron I offer
78:19 - some humble rewards in return it's just
78:22 - so awesome it really um I wouldn't be
78:25 - able to do this full-time if it wasn't
78:28 - because of patron so thanks guys
78:30 - um yeah final questions let's see here
78:33 - whoops I just moved something inside of
78:35 - OBS I was not on purpose like fee um
78:40 - [Music]
78:43 - let's see ah
78:47 - TT what is my unity layout I want to
78:52 - copy it and I don't know how well my
78:55 - unity layout is really really really
78:57 - simple I haven't really edited too much
79:00 - so let me just show you that if I go
79:02 - into main here I keep on going away from
79:05 - the chat this is what my unity layout
79:07 - looks like if we go ahead and reset it
79:09 - I'll just quickly recreate it so reset
79:12 - the layout here to default this is what
79:16 - it looks like on the bat the first thing
79:18 - is changing this project panel here and
79:21 - we do that by going and pressing this
79:25 - little button and selecting one column
79:27 - layout dragging that over here into the
79:30 - hierarchy then we drag our console into
79:32 - the scene view and we drag our inspector
79:35 - out a tiny bit and now we've basically
79:36 - gone ahead and recreated it so it's
79:39 - really easy to set up I like it a lot
79:42 - better than the default one back into
79:45 - OBS back into the chat ah
79:47 - today um cool will I do 2d racing car
79:54 - tutorials I would actually really love
79:55 - to do something with racing games I
79:58 - don't know if it will be 2d just yet we
80:00 - have a
80:01 - guys working on a really really cool
80:03 - photorealistic REO asset for deficits
80:06 - don't tell anyone and I would really
80:09 - love to do something with that getting
80:11 - that up and running with some vehicle
80:12 - controllers I mean I'm so excited about
80:15 - that one so that's probably what I'll
80:17 - aim for but I mean it could be the
80:20 - subject for the next live stream maybe
80:21 - is creating some small racing game it
80:24 - could be really fun when will this be
80:25 - upload to YouTube I hope to upload it as
80:27 - soon as we're done here and then it will
80:29 - be out this Sunday so this Sunday is
80:35 - when we should have that going cool so
80:40 - for some reason I just disabled the
80:43 - preview on my own OBS but hopefully it's
80:46 - still running let's see yeah there we go
80:49 - and yeah last comments here TTT make a
80:54 - 3d drifting game that would be so
80:56 - awesome especially if we could get some
80:58 - cool engine science like oh so much fun
81:01 - um yeah and yeah as Sophia Elsa has
81:06 - written in the chat my video visual
81:10 - studio theme is called mono Kai check it
81:12 - out it's an awesome theme so that's
81:15 - pretty much it I might make a blended
81:17 - tutorial at some point um I could be
81:20 - pretty fun so that's it for the stream
81:23 - guys I hope you enjoyed it just as much
81:25 - as I did I thought you thought it was
81:27 - freaking awesome really fun game to play
81:29 - around with and a good Q&A session here
81:32 - as well um so and I'm not gonna save
81:35 - room again so thanks again for the
81:39 - stream again if you want to support
81:40 - stuff like this you can go to
81:42 - patreon.com/crashcourse totally optional
81:48 - this video is going to be live on
81:50 - youtube soon it's going to be up on
81:52 - Sunday and we'll also have a link to the
81:54 - github project and so you can download
81:56 - everything and you can go to dev assets
81:59 - comm to download some high-quality 3d
82:02 - asset packs and get all that jazz so I'm
82:05 - not going to be mentioning any more now
82:07 - thanks guys so much and have a good day
82:10 - bye thanks to all the awesome patreon
82:12 - supporters who donated in
82:14 - December and a special thanks to Sultan
82:16 - al-sharif Derek M jerk face tamara phi
82:18 - james callaghan robert Barnum and Jason
82:20 - Lotito if you want to become a picture
82:22 - in yourself you can do so at patreon.com
82:23 - slash practice