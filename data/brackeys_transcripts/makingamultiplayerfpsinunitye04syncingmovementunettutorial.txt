00:00 - thanks for tuning in at
00:03 - braies hello everyone and welcome to
00:05 - video number four on making a
00:06 - multiplayer FPS in unity in this video
00:09 - our primary focus is going to be syncing
00:12 - our movement and rotation over the
00:14 - network so things will start to look
00:17 - like an actual multiplayer FPS also
00:20 - we're going to update the looks of our
00:22 - scene a bit and just clean up the
00:25 - project so let's get started but before
00:28 - we do I quickly want to men mention that
00:30 - if you have any questions you can go to
00:32 - forum. bra.com if your code isn't
00:35 - working you can download it off GitHub
00:37 - links are in the description and if you
00:39 - want to support my videos you can go to
00:42 - bre.com donate so now that that's out of
00:44 - the way enjoy so let's start by adding a
00:47 - bit more contrast to our scene so if we
00:50 - go into our scene view here and select
00:52 - the ground plane I think we should add a
00:54 - new material to this so let's right
00:57 - click go create material and let's call
01:00 - this
01:01 - ground then we can drag it onto our
01:03 - ground plane we can go under the Albedo
01:06 - slot and change the texture here and you
01:09 - can see that there are a bunch of
01:10 - textures imported uh with the standard
01:13 - assets pack uh one of those is the
01:16 - Swatch orange and I'm just going to be
01:17 - using that and also we might want to
01:21 - bump down the smoothness a bit actually
01:23 - I'm going to change this from standard
01:25 - to standard specular setup and then bump
01:28 - that down to3
01:30 - and uh maybe I want this to be a bit
01:32 - less orange uh so in order to do that we
01:35 - can simply find a color pretty much
01:39 - opposite of orange here so a light blue
01:41 - and tint it a bit in that direction just
01:44 - so it won't be too much and then finally
01:48 - I want to add the same grid that we see
01:50 - on the cubes here so if you select those
01:53 - those are also from the standard asset
01:55 - so you have this Navy GD texture and
01:57 - then they use an emission map uh that
02:01 - has this grid look uh so we can do the
02:04 - same so if we simply select our ground
02:07 - plane go under ground and then we can
02:09 - find our emission slot and find the grid
02:13 - emission texture again on do prototyping
02:15 - and the textures and then we can maybe
02:17 - bump this up to two to make it a bit
02:19 - more uh clear to see at least from a
02:23 - distance also when we have the Grid on
02:26 - the ground plane here I want to go under
02:28 - gizmos and make sure to dis table show
02:30 - grid you can see I've done that already
02:32 - I think that looks the
02:34 - best awesome so I think that really
02:37 - added some a nice feel to our scene and
02:40 - uh I think you will find it to look
02:42 - pretty cool um with the sky boox also so
02:46 - uh now that we have that in place we can
02:48 - maybe just quickly create uh a couple of
02:51 - folders here so let's create one for
02:53 - scripts where we can place our
02:54 - controller our motor and our player
02:57 - setup and one for materials
03:05 - where we can place our ground and our
03:08 - gun cool so let's hit save on that and
03:12 - now we're ready to do a movement
03:13 - synchronization over the network for our
03:16 - player objects so if we select the
03:18 - player here Unity has provided us with
03:20 - an awesome component called the network
03:23 - transform component and this takes care
03:26 - of pretty much
03:27 - all pretty much everything for us
03:30 - so syncing U position and rotation over
03:33 - the network isn't necessarily a very
03:36 - difficult task uh on top of the uh HL
03:39 - API and uh we could definitely go ahead
03:42 - and create a script that would work just
03:44 - fine right now but the default Unity
03:48 - component has some nice features that I
03:51 - think will uh you will like so let's let
03:55 - me just talk a bit about how this uh
03:57 - syncing actually work well you can see
03:59 - the first uh slider we have here is the
04:02 - network send rate and this is the amount
04:04 - of times in second that we will send a
04:08 - package containing information about our
04:10 - position and and rotation to other
04:14 - clients so this is kind of the update
04:17 - rate and um well in an ideal world uh
04:21 - this would be uh 60 at least so every
04:24 - time our uh computer rendered a frame we
04:27 - would also send the information and then
04:29 - it would be ready next time the other
04:32 - clients would want to render frame so
04:35 - this way we would get very accurate uh
04:37 - movement and we would get a very smooth
04:40 - movement also but in reality that's not
04:44 - really possible because if we were to
04:47 - bump this send rate up to uh up very far
04:51 - beyond uh what this allows us to but
04:54 - then we would very quickly clutter up
04:56 - the network and uh that would maybe
04:58 - cause it to completely stop or to block
05:02 - the connection or whatever so that would
05:05 - give us a lot of issues instead what we
05:08 - do is we send at a limited rate you can
05:10 - see the default here is nine and we're
05:11 - just going to leave it at nine and then
05:14 - what we do is we take this very jerky
05:17 - motion where the uh player just jump
05:19 - jumps from one position to the next and
05:22 - then we smooth it out by luring between
05:25 - the positions or doing what is called
05:27 - movement
05:28 - interpolation and this is super awesome
05:30 - because we get suddenly a very smooth
05:33 - movement it's not going to be as
05:35 - accurate but we can get close so that's
05:38 - kind of uh what we do and the extra
05:41 - awesome part of the network transform
05:44 - component here is that it can utilize
05:46 - that we are using a rigid body 3D and
05:49 - this means that it will take into
05:51 - account our velocity and movement
05:54 - Direction and all that to predict where
05:56 - we are going to be in a second and
05:58 - therefore can make more precise
06:02 - interpolation uh for our movement so
06:05 - that's super awesome so if you have you
06:07 - if you're using a rigid body like I am
06:08 - here definitely use it here under the
06:12 - transform sync mode if you're not there
06:14 - well then you can just sync the
06:15 - transform and that's going to be fine uh
06:17 - but this is definitely very
06:19 - cool uh then we have the movement
06:21 - threshold here and that is the amount of
06:24 - units or that's the uh how much we can
06:26 - move in units before we send uh updates
06:29 - out that we have moved so this is how
06:32 - much this is basically the um threshold
06:35 - for registering um that we have moved on
06:38 - the network and uh that's going to be
06:40 - fine here and then we have the snap
06:42 - threshold and this is basically how many
06:45 - units we need to move before we don't do
06:47 - any interpolation and just snap to that
06:50 - point so let's say our we had we would
06:53 - have a telep point uh teleport um point
06:58 - over here and the end of the portal
07:00 - would be over here well then we would
07:02 - want to be able to go through that and
07:04 - then jump over there with any without
07:07 - any interpolation along the way well
07:09 - that is what the snap threshold can be
07:11 - used for and also if we should
07:13 - experience the huge lag Spike and a loss
07:16 - of connection for a time well then if we
07:19 - move all the way over here we would want
07:21 - it to Simply jump once we get the
07:23 - connection again and not suddenly just
07:26 - fly through the map that would look
07:28 - super weird so that's kind of what that
07:31 - variable is for and you can just leave
07:32 - it at five then we have the interpolate
07:35 - movement factor and the smaller you make
07:39 - this well then the more we are going to
07:41 - interpolate the slower we are going to
07:44 - uh or the more smooth I should say the
07:46 - movement is going to be and uh a pretty
07:49 - good value for this is actually one
07:51 - that's a good default value and we're
07:52 - going to leave it at that um but I do
07:56 - want to show you what it looks like if
07:58 - we disable interpolation and you can do
08:00 - that by setting this to zero and let's
08:03 - also just disable rotation here set that
08:05 - to none and we can look at that in a
08:06 - second so if we were to now save this
08:09 - and then go and do edit project settings
08:12 - player and then we can just uh disable
08:15 - this annoying resolution dialogue each
08:17 - time that we make a build we can also
08:19 - disable the or set the default not to be
08:23 - full screen and uh then maybe input 800
08:27 - by 600 here so we're just going to get a
08:29 - small
08:29 - window that starts automatically so now
08:32 - let's press control b or command B if
08:35 - you're on the Mac here and it's going to
08:37 - build a player for us and you can see
08:39 - that it starts up there and inside of
08:42 - unity I'm simply going to drag my scene
08:44 - over here split it down the middle so
08:47 - that we have our player here and the
08:49 - scene here and we can view both the
08:51 - build and the scene over here so now
08:54 - let's hit play and go to
08:57 - host and uh yep and then we can navigate
09:01 - over to our build here and select client
09:05 - and if we turn around here then uh
09:08 - looking over here we can start moving
09:10 - around and you can see that it is indeed
09:13 - updating but it's very jerky so we have
09:16 - this uh motion jumping which we
09:18 - definitely do not want but the cool
09:21 - thing is that we can go in and adjust
09:23 - this interpolation Factor while the game
09:26 - is running so um this might not work uh
09:29 - it has worked for me I don't know if the
09:32 - component is built to do this so not all
09:35 - of the settings might not work in real
09:38 - time but I know at least if we find our
09:40 - player here um the the player that we
09:43 - built so that would be this one not the
09:45 - one connected to the editor so that one
09:49 - here associated with the build and then
09:52 - bump the interpolate factor up to one
09:55 - and then look at him here and go over
09:57 - here you can see just how smoth smooth
10:00 - that motion now is so that is actually a
10:03 - pretty good amount you can see that it
10:05 - takes him a little while to slow down
10:07 - when we stop while over here it's
10:09 - instant but that's kind of the price
10:11 - that you have to pay so I'm actually
10:15 - very satisfied with that movement just
10:17 - for fun let me show you what this would
10:20 - look like if we changed it to 0.1 that
10:23 - means that the inter interpolation would
10:25 - be very slow and you can see indeed it
10:28 - is and if we if we were to bump this up
10:30 - to something like
10:34 - three well then you can see we start
10:36 - introducing some of the jerkiness back
10:38 - into the motion so I think a value of
10:41 - one is great there and we can go in here
10:44 - and set that to
10:46 - one uh then the rotation here we can
10:48 - select what axis we want to uh sync over
10:52 - the network and in our case we only want
10:54 - to sync the Y AIS because we are going
10:57 - to do the uh uh sync of rotation on the
11:00 - camera as a uh separate component so
11:03 - we'll just select y there and uh the
11:06 - interpolate rotation Factor we're going
11:08 - to have to bump that up to 10 actually I
11:11 - found when using one it was way too slow
11:15 - I mean way too slow uh so I found that
11:17 - 10 is a good value and why these two
11:20 - differ so much is um not something that
11:23 - I can answer you on I'm sorry I simply
11:25 - don't know uh but I do know that is a
11:29 - pretty good value to set for this you
11:31 - can of course again build the players
11:33 - and play around with this so um we're
11:36 - just going to assume that this is
11:37 - working and then uh add the rotation
11:40 - syncing for the camera also so um you
11:43 - might be thinking well let's go ahead
11:45 - and find the camera here and let's add a
11:48 - component and add the network transform
11:51 - where you can see now it introduces a
11:52 - network identity and another Network
11:56 - transform and that's not something that
11:58 - we want to have um instead what we want
12:02 - is we want the player to have this
12:04 - Central Network identity component and
12:08 - have everything be controlled from the
12:10 - root object so in therefore Unity has
12:14 - made this network transform child
12:16 - component that we attach to the root the
12:18 - player object and then we drag in the
12:21 - camera and it will control this so if we
12:24 - select Network transform child here you
12:27 - can see that we have this target
12:28 - variable and in here we can drag the
12:31 - camera and uh we have a bunch of
12:34 - settings for this too and this behaves a
12:36 - little weirdly because when I used the
12:38 - movement threshold well I said okay so I
12:42 - don't want to sync any movement I just
12:45 - want to sync uh rotation on the x-axis
12:49 - so I went in and Set uh set the movement
12:52 - threshold really high so that it would
12:54 - never send out any movement that didn't
12:58 - work har because movement threshold I
13:01 - think it's a bunk also has an effect on
13:04 - rotation it worked on some of the
13:06 - clients but on the host system uh the uh
13:11 - the rotation suddenly didn't update so
13:15 - if you want to be sure that this is
13:17 - working simply leave the movement
13:19 - threshold as is then we have the
13:21 - interpolate movement Factory this we can
13:24 - go ahead and set to zero and that's
13:26 - that's fine because we don't want to
13:27 - spend any processing power or on
13:30 - interpolating movement on something that
13:31 - doesn't move then we have the
13:33 - interpolate rotation factor and uh this
13:38 - somehow behaves differently than the
13:40 - rotation Factor up here and it might be
13:44 - because this sys using a transform and
13:47 - not a rigid body which is also something
13:49 - we want because our camera doesn't have
13:51 - a rigid body attached um so that might
13:55 - be uh why but for now let's just leave
13:58 - this at 0 five and see what happens and
14:00 - then we can change it at runtime the
14:02 - rotation axis we of course want to set
14:04 - to X only and we don't need to compress
14:08 - the rotation here so let's save this and
14:12 - uh let's build
14:15 - this and see if it
14:17 - works so there we have the build we hit
14:22 - play select host there select client
14:26 - here and you can see now that our
14:30 - rotation looks just fine however if we
14:34 - um kind of get closer here you can see
14:37 - that the up and down rotation is a bit
14:40 - jerk and jerky
14:41 - still it's kind of clunky so uh in order
14:45 - to change the smoothness on this we can
14:47 - of course find the object as always not
14:50 - that one this one and uh we can try and
14:53 - make this smaller so let's set it to 0.2
14:59 - and uh just focus on him there and you
15:02 - can see now the rotation is much
15:04 - smoother I think however now it's a bit
15:07 - it takes a bit long for it to slow down
15:10 - uh so I think we'll find an intermediate
15:13 - um value at something like
15:15 - 0.3 and you can see there what it looks
15:17 - like and uh now we can move around and
15:20 - uh look around and it will update on the
15:23 - client um which also host the server and
15:28 - on the remote client here so that's
15:30 - basically all for singing movement over
15:33 - in the network so let's head stop on
15:35 - that let's stop playing there let's go
15:37 - on the player and change this to three
15:41 - and we can collapse that and collapse
15:43 - that and we are basically done so that
15:46 - was basically it for a performing
15:47 - movement synchronization over the
15:49 - network for our player I hope you
15:51 - enjoyed this video uh in the next one I
15:54 - think that we're going to look into
15:56 - expanding on our character controls so
15:58 - maybe adding some flying mechanics the
16:01 - spring physics that I teased you in the
16:03 - first video and uh also have setting a
16:07 - lock on uh how much we can rotate our
16:09 - camera so that we don't suddenly view
16:12 - everything upside down so that was
16:14 - basically it for this video I hope you
16:16 - enjoyed it and I'll see you in the next
16:18 - one