00:00 - thanks for tuning in at brakus hello and
00:04 - welcome to this video on creating a
00:05 - multiplayer face in unity today we are
00:07 - going to be expanding on a user account
00:09 - system when specifically we are going to
00:12 - be tying our login scene with the
00:14 - registration and user login together
00:17 - with our lobby scene with our actual
00:19 - game so when the user successfully locks
00:22 - in he will be taking over to the lobby
00:24 - scene where he can either choose to
00:26 - create or our host or join a game or he
00:30 - can unlock back out in which case he
00:32 - will be taken back into the unlocking
00:35 - registration scene and we will also have
00:38 - a look at starting you the username of
00:41 - the player and displaying that on the
00:43 - screen so that's what we are going to be
00:46 - doing today and without further ado
00:47 - let's delve right into it so you can see
00:50 - them here in unity and what I want to do
00:52 - is just begin by going on the canvas
00:54 - background here and removing this source
00:56 - image just to get rid of those corners
00:58 - there
00:59 - I didn't notice them when first creating
01:01 - the UI so if we take a look at our menu
01:04 - control object here this video is going
01:08 - to be super script heavy because we're
01:10 - going to be editing this and creating
01:12 - another script at the same time so hang
01:16 - in there so what I want to do is I want
01:18 - to kind of rename this to something like
01:20 - a login menu and I want to edit this
01:26 - script quite a bit actually what I want
01:29 - to do is I want to edit it so much that
01:31 - I think it would be a good idea for us
01:33 - to make a copy of it just to preserve
01:35 - the original to use as reference so
01:37 - let's go down here and find the DC demo
01:39 - menu ctrl C sharp script and let's press
01:43 - ctrl D or command D if you're on the Mac
01:45 - and let's rename this one to our login
01:48 - menu and you should put that in one word
01:51 - let's drag it out from that folder oh
01:55 - not the entire not the entire data
01:58 - folder here the login menu there we go
02:02 - let's just see on the data resources
02:05 - here I dragged that out as well on that
02:09 - needs to be I believe under the database
02:12 - control there I think that will be fine
02:16 - okay
02:16 - so now we need to double click on this
02:19 - login menu to open it up in Visual
02:21 - Studio and we're going to be editing
02:23 - this quite a lot we're going to be
02:25 - extracting some of the code into another
02:27 - script and we're also going to be
02:29 - removing some code and adding a tiny bit
02:32 - of coding here as well so the first
02:33 - thing that we want to do is edit the
02:35 - class name to match the name that we
02:37 - just made for our script which is login
02:40 - menu like that and then basically I want
02:44 - to take anything that has to do with the
02:47 - locked in object here and completely
02:50 - remove that because we are not going to
02:52 - have a logged in screen as soon as we
02:54 - are logged in we're going to transition
02:55 - to the lobby menu and we're going to
02:57 - show any GUI there so I'm just going to
03:01 - disable that from the scene in here and
03:03 - I'm going to keep it because we'll be
03:05 - using it in a moment to copy it over to
03:07 - the lobby ah lobby scene but I want to
03:10 - take anything here related to the data
03:14 - object here which is when we are logged
03:16 - in and simply remove it and so we'll
03:18 - remove that we will remove all those are
03:23 - fine this is fine we will move on all of
03:27 - the possibilities to send and receive
03:29 - data we're going to have that in a
03:31 - separate script and a whole other way so
03:33 - let's remove that input field there
03:35 - let's remove the send data error input
03:39 - text object and let's um also logged in
03:44 - user name and data text let's remove
03:47 - these as well because they are used to
03:49 - UM change the UI when we are logged in
03:53 - the part will leave in here and the
03:56 - logged in user name and password we are
03:58 - going to copy into another script and I
04:00 - actually want to start creating that
04:02 - script right away so we can start moving
04:04 - things over to that so my idea is that
04:07 - we have our login menu in the larkin
04:11 - scene and that controls all of you the
04:13 - UI and the actual logging in and then
04:17 - we'll have some kind of script called
04:19 - user account manager which will simply
04:24 - have a
04:24 - in and logout feature and that will just
04:27 - keep track of whether or not we logged
04:29 - in what the username and password of the
04:32 - user logged in is and then it will be in
04:36 - charge of sending and receiving a data
04:39 - for that user
04:40 - so and we'll have on that be part of
04:43 - every scene or at least we will have it
04:45 - be part of a login scene and then not
04:48 - destroy when we transition to other
04:50 - scenes so that they can use it as well
04:54 - so let's go ahead and create that right
04:56 - away so let's create an empty game
04:57 - object reset the transform and rename
05:00 - this to our user account manager and
05:03 - we'll just drag that to the top of the
05:06 - screen here add a component called user
05:08 - account manager and hit create an ad on
05:13 - that double-click to open it up in
05:14 - visual studio and we'll be using system
05:18 - dark elections we'll also be using a
05:20 - database control remember to import that
05:23 - namespace whenever you want to
05:25 - communicate with database control and we
05:29 - can go ahead and delete these two
05:30 - functions and instead what we will do is
05:33 - we will turn this into a singleton so
05:36 - we'll have that kind of single instance
05:39 - of this running and then other arm
05:42 - scripts can access it access it using
05:46 - that instance so let's just go ahead and
05:49 - create that pattern right away so we'll
05:51 - create a public static user account
05:54 - manager and we call this instance and
05:56 - then we'll have an awake function where
05:59 - we set instance equal to this and we'll
06:03 - also make sure to flag this s don't
06:05 - destroy onload so we don't want to
06:07 - destroy this on object here onload and
06:11 - that means that when we transition to a
06:13 - new scene it will be transferred into
06:16 - that new scene cool so now that we have
06:20 - that setup all I want to do is just make
06:22 - sure that if we transition back to a
06:25 - scene or to another scene that also has
06:27 - a user account manager we won't get to
06:30 - we will have this on the first instance
06:33 - transferred over and then we will remove
06:36 - of the instance that was already in the
06:39 - scene so to do this we simply check if
06:42 - instance it's not equal to null well in
06:46 - that case we want to destroy this object
06:50 - so we want to call destroy on the game
06:52 - object and because destroyed takes a bit
06:54 - of time to actually process we want to
06:57 - return to make sure that none of this
06:59 - code is called before the game object is
07:01 - removed so now we've created a kind of
07:05 - very simple singleton pattern and next
07:10 - up we can add some elements to this and
07:12 - what I wanted to add was the logged in
07:15 - user name and the login password so
07:17 - let's go ahead and and cut out these two
07:19 - fields by hitting ctrl X and paste them
07:23 - in here control V and we'll have this be
07:26 - a public static string and it will
07:30 - automatically default to an empty string
07:32 - so what we will do instead is we will
07:35 - have this be a get and then a protected
07:41 - set and this means that we are able to
07:44 - get this value from all other scripts
07:47 - but we are only able to set it from
07:50 - within instances of on this class from
07:53 - within this class or when it comes to
07:57 - protected it means that you can also set
08:01 - it from classes derived from this class
08:05 - so that includes inheritance so on the
08:09 - other one here is going to be a public
08:11 - static string as well and I think we can
08:14 - go ahead and rename that to use a big L
08:18 - just to indicate that this is a public
08:20 - static variable and this is of course
08:23 - going to be a get protected set as well
08:26 - there we go
08:28 - cool so now that we have those two in
08:30 - there we can use them we want to
08:33 - preserve this instead of setting all
08:36 - these we're just going to call the
08:37 - method that is set up for the for that
08:39 - called blank errors and we want to
08:43 - simply remove this because that is no
08:45 - longer an object that exists then undo
08:48 - PI to here
08:49 - what we're going to do is simply do
08:51 - nothing in this case we are locked in we
08:57 - have already transitioned and to a new
09:03 - scene hopefully and yeah you can
09:10 - ofcourse remove the if statement if you
09:11 - want I just like and like it being there
09:14 - for the cleanest and we want to delete
09:16 - all the instances where we set data
09:20 - object to are either active or inactive
09:25 - and also here we are referencing the
09:29 - data username text which is no no longer
09:32 - thing so we can go ahead and delete that
09:34 - that is just yeah that's not important
09:37 - and here again if we blank the receive
09:43 - data text if login or register UI is
09:47 - being displayed and and this is no
09:50 - longer thing so we can just remove that
09:52 - entire if statement and we can remove
09:55 - the send data error text clearing and we
09:59 - are slowly getting through this so if we
10:02 - call the data logout button it goes back
10:06 - to showing the login you eye and it
10:08 - resets our username and password and I
10:11 - think this is something that we should
10:13 - edit from within our user account
10:17 - manager so what we will do here is that
10:20 - we will go into a user account manager
10:22 - and we will create a public void called
10:26 - lock out and what this will do is it
10:30 - will say set our locked in username to
10:35 - be MTR logged in password to be empty as
10:39 - well and we will have another variable
10:41 - in here which is also of course going to
10:44 - be a public static and this is going to
10:47 - be a boolean and I actually don't think
10:51 - I want the password to be public I think
10:54 - we don't need to really get it anywhere
10:56 - from outside the script so let's just
10:58 - give it a private static string and then
11:01 - let's not have this access
11:03 - you I change my mind about that so let's
11:05 - just have it be like that and then the
11:08 - public static pool here which is the is
11:11 - locked in we definitely want that to be
11:15 - an access is so good and protected set
11:18 - here so protected set there we go and
11:23 - under lockdown or a lockout we can set
11:26 - is locked into force so we have are
11:30 - locked out and we are no longer like in
11:33 - coal and then instead of doing these two
11:37 - lines we can simply call user account
11:40 - manager dot instance don't log out and
11:44 - you can of course cash this should you
11:47 - want to so I'm just going to do it the
11:49 - quick and easy way which is like this so
11:52 - cool now that we have that done we can
11:55 - scroll further down and here we set the
11:57 - locked-in username and password to the
12:00 - username and password variables and this
12:02 - is under the send login request and
12:06 - basically what we want to do here
12:08 - instead if we reach this point in code
12:10 - we had a successful login so that means
12:13 - that we can go into our user account
12:15 - manager and create a method that is very
12:19 - similar to this called log in and we're
12:24 - going to take in a string username and a
12:27 - string password and we're going to set
12:30 - lock locked in username equal to whoops
12:35 - equal to username and logged in password
12:38 - equal to password and then we can set is
12:41 - logged in equal to true so that will
12:44 - make sure to set all the data up for us
12:47 - and then we no longer need to do this
12:50 - instead of course we can just put our
12:53 - user account manager dot unlock that
12:59 - instance dot log in and then we can put
13:03 - our username and our password as
13:06 - function arguments cool so that will
13:09 - make sure that we keep track on that
13:11 - data so we can continue here and look
13:15 - for the errors and
13:16 - if you are quick you have noticed that
13:19 - visual studio actually mics any compiler
13:22 - errors over here so we can just scroll
13:25 - down to that point and here and this is
13:28 - under the send register request it locks
13:31 - in the user as soon as the register
13:34 - requests rent or went through so what
13:37 - we're going to do here is simply also
13:39 - call user account manager instance that
13:42 - log in so that we log automatically log
13:46 - in after creating a user and again we
13:48 - need to input our username and password
13:51 - and they are accessible to us just like
13:56 - before and then down here we have two
14:00 - methods we have data sent data button
14:03 - and we have data get data button and
14:06 - then we have two private method to I and
14:08 - numerators which is kuroh teams that
14:12 - take care of actually doing that on the
14:15 - server and we are actually going to take
14:18 - all of this these are four functions in
14:21 - total and move them into our user
14:23 - account manager and this is because our
14:25 - user account manager will persist on to
14:28 - the next scene and so when we need to
14:30 - load our username in the lobby or say
14:33 - when we are playing the game and we
14:35 - shoot someone and we need to set some
14:37 - user data that we've actually actually
14:40 - shot someone we need that to be
14:42 - accessible so we don't want this to be
14:44 - stuck inside the login menu we want that
14:47 - to be part of the user account manager
14:49 - so let's take all of these four
14:51 - functions all the way down to the bottom
14:54 - let's cut those out control X or command
14:57 - X and let's save that and then move over
15:01 - here and paste those in and we just need
15:04 - to edit them a tiny bit so first off I
15:08 - kind of want to change the name here I
15:09 - want this to be a send data and I don't
15:14 - want to check if the database is set up
15:16 - instead I want to check if is locked in
15:19 - and I don't like the syntax I'm just
15:22 - going to remove that we don't need to
15:24 - set the part number here because that's
15:25 - not really a thing and we don't want to
15:29 - put in locked in
15:30 - user name we want to put in the same
15:32 - thing but with a large L their capital L
15:35 - and we don't want to pass it the input
15:40 - data send data text instead we want to
15:44 - have some kind of string up here
15:45 - containing the data that we want to send
15:48 - so we'll have that be dictated by
15:51 - whatever other script decides to call
15:53 - this function so it will look like this
15:56 - so we can pass in some data and it will
15:58 - send that over to the AI numerator and I
16:02 - think this call is not needed that seems
16:05 - redundant so let's just remove that
16:07 - whole if statement there and let's move
16:11 - this back by selecting all of the code
16:13 - and hitting shift tab we can move it
16:15 - back one tap space and then we can
16:18 - remove both of these down here they are
16:23 - not needed and everything else looks
16:28 - just fine we could go ahead and add a
16:30 - debug deadlock statement here if you
16:32 - want to show in the console that
16:33 - something happened but I don't think
16:35 - that's needed for us at the moment we
16:37 - might add that later
16:39 - we also have a public void get data
16:42 - button here and we're just going to
16:44 - rename that to get data and the way that
16:49 - we are going to use this is we're going
16:51 - to go up here and add a nother static
16:55 - field and this is going to be a public
16:59 - static string as well and this is going
17:02 - to be the locked-in data and this is
17:08 - also going to be a get protected set
17:12 - that just makes it very easy for us to
17:14 - use and I'm actually going to move it up
17:16 - here there we go
17:19 - by the way if you select the line or if
17:22 - you move the cursor to some kind of line
17:24 - and you hold down alt and you used ER up
17:27 - and down arrows you will be able to just
17:29 - move that line without copying it or
17:32 - rewriting it or anything it's ever a
17:34 - handy shortcut and then if we go down
17:37 - here again we want to check if is lock
17:42 - in
17:43 - and just remove that seems unnecessary
17:45 - let's remove the pide pide Han let's
17:49 - send over our login username and
17:53 - password with capital letters cool and
17:58 - again we can remove that entire thing
18:01 - and that means that we can remove leave
18:05 - it's this one as well let's remove the
18:08 - part and we can select all of this code
18:13 - here and again move it back by using
18:16 - shift tab and I want to edit this method
18:20 - just a bit what I want to do is I want
18:22 - to create a temporary data string here
18:24 - and we want to start this off by saying
18:28 - error and then I will remove all of the
18:32 - places where we set the data to be error
18:34 - because it's it's an error from the
18:36 - beginning unless we are successful in
18:39 - which case I want the data to be equal
18:41 - to the received data and then at the
18:44 - very end of the method here after all of
18:47 - the if and else statements we can then
18:49 - write that are locked in data should be
18:53 - equal to that data variable so in case
18:56 - we are unsuccessful it's going to see
18:58 - error with capital letters in case we
19:00 - are successful it's going to be equal to
19:04 - whatever data was received from the
19:06 - service or whatever we have stored on
19:09 - that user cool and it will throw out
19:12 - debug log statements along the way
19:14 - should something go wrong I believe that
19:17 - that was all we needed to do in order
19:21 - for this system to work behind the
19:23 - scenes so let's see and yes we indeed we
19:27 - get no errors whatsoever you might get a
19:30 - warning that one of the variables are
19:32 - not being used or something but we are
19:34 - going to use all of it at a later point
19:36 - that's fine and and now we can actually
19:39 - remove this variable or on this
19:42 - component but what I would recommend you
19:44 - to do is bring in your login menu script
19:47 - and then use this to just quickly find
19:50 - all of the objects and then move them
19:53 - into this slot because as soon as you
19:55 - click on one here
19:57 - it will highlight it in scene just make
19:59 - sure you don't use the data object or we
20:01 - skip to the loading objects here drag
20:04 - that in then we have the input login
20:07 - username we definitely want that the
20:10 - input login password put goes there
20:13 - register user name the register password
20:17 - the confirm password and then we have a
20:22 - login error and a register error and
20:27 - that is all we need and then we of
20:30 - course need to hook all of these buttons
20:33 - here up to this new login menu script
20:36 - because the moment that we remove this
20:38 - component that connection is last so we
20:41 - need to make sure that that is preserved
20:43 - by going and finding the buttons here
20:45 - that's begin right with the login button
20:47 - now you can see that the onclick event
20:49 - is now missing an object so we want to
20:52 - find our login menu drag it in there
20:55 - find the function under the login menu
20:58 - and that is going to be the login login
21:00 - button the register button will do the
21:02 - same thing drag in the login menu find
21:05 - the function and that is going to be the
21:07 - log in register button then we can go
21:10 - under our register object find the
21:12 - buttons here we'll begin with the back
21:14 - button drag in login menu go on your
21:16 - login menu and then should choose
21:18 - register back button and finally the
21:21 - register button is going to be login
21:24 - menu register register button ok cool so
21:28 - we made it through that and I'm gonna
21:29 - have a sip of water to celebrate and I
21:34 - believe that was all of the buttons that
21:38 - we need to hook up here in order for our
21:40 - UI to work there's nothing under loading
21:42 - and everything under logged in will not
21:44 - be used in this scene cool so now that
21:47 - that is working what we will actually be
21:50 - able to do is go in there under our user
21:52 - account manager and have something
21:55 - happen when we log in as well as when we
21:59 - log out because this will actually be
22:01 - working now and I can prove this to you
22:03 - by throwing some debug log statements we
22:06 - are only going to be able to test
22:08 - whether or not the
22:09 - bargain is working yet but you will see
22:11 - the logout working in a second so user
22:14 - locked out something like that no reason
22:22 - for these to be cable letters and we'll
22:24 - have a debug deadlock statement down
22:26 - here as well user and then we can give
22:32 - it the username actually let's just see
22:36 - say are logged in as and then username
22:40 - there we go and that should be called
22:44 - now so when we hit play and it brings up
22:48 - for us the larger menu and I use a test
22:51 - user that we created on the database in
22:54 - the last video you could of course also
22:56 - register a new one and hit login it will
22:59 - load for a moment and then it will say
23:01 - live in AZ test one two three and that
23:05 - means that now on our if we gonna don't
23:08 - destroy and load scene you can see that
23:10 - unity actually moves it to a separate
23:12 - scene that is always unloaded on top of
23:15 - the other ones on under our user account
23:18 - manager we're not able to actually
23:20 - actually inspect this but um this
23:23 - actually now has our username and
23:26 - password stored as well as the ability
23:30 - to our send and receive data from that
23:33 - user so all we really need to do now is
23:36 - transition to the new scene and we do
23:39 - this by using up here unity engine dot
23:44 - our scene management and that means that
23:48 - we can simply find our lock in method
23:50 - here and call scene manager dot load
23:55 - scene and then giving this is either a
23:58 - building decks or a string in my case
24:01 - I'm going to give it a string and I'm
24:02 - going to make this available for
24:06 - inspection so let's actually put it down
24:08 - here let's make this a public string and
24:11 - we're going to call this um we're going
24:15 - to call it lobby scene name or maybe a
24:20 - lock
24:21 - locked in seen and named and that is
24:27 - going to be lobby for now just to fold
24:30 - it to that and let's just duplicate this
24:33 - and have it be the locked out cname and
24:38 - that is going to be our login menu
24:44 - believe that is what it's called here
24:46 - and let me just actually call this the
24:50 - user account menu the user menu let's
24:58 - actually just do login menu like that
25:01 - just to make it very clear that this is
25:04 - not login but login menu as it looked a
25:07 - bit weird there cool so have that be
25:09 - login menu and then down here this scene
25:12 - that we want to load is our user on or
25:15 - is our what tip we call it I forgot I
25:18 - locked in scene so I locked in scene
25:22 - name and we can duplicate that this and
25:25 - reuse it up here to transition to a
25:28 - locked out scene name there we go and if
25:31 - we view our user account manager here we
25:34 - should see two fields pop up here the
25:37 - lobby and login menu also make sure if
25:40 - you go to edit or file build settings
25:43 - let you have all of your three scenes in
25:47 - here and you definitely want to put the
25:49 - login menu first then add the lobby and
25:52 - then have whatever a level that you have
25:56 - you're working on on if you have
25:58 - multiple have them appear after all of
26:00 - the other ones cool so now when we hit
26:05 - play we should see this working so let's
26:07 - do test one two three test one two three
26:09 - and hit login and it should transition
26:12 - us to our logged or our lobby scene you
26:16 - can see that our user account manager is
26:18 - indeed still here so now let's just very
26:22 - quickly have a look at how to display
26:24 - some of this information on the lobby so
26:27 - let's create on your canvas here that's
26:30 - bring in some of the UI from alarcon
26:33 - so let's take our Larkin object here
26:36 - again cut that out so let's copy it
26:38 - delete it save that move to the lobby
26:42 - scene going to canvas paste it in there
26:45 - or drag it in here if it doesn't paste
26:47 - and let's re-enable it focus in on it
26:52 - let's delete all of the stuff that we
26:55 - have disabled let's actually make a new
26:59 - empty game object and put it down here
27:00 - in the corner and make sure it's
27:02 - anchored to the corner and let's um drag
27:06 - that out a bit make it a bit larger and
27:08 - let's take all of make sure it's not
27:12 - parented to the locked in object let's
27:15 - take all of these elements move them
27:17 - under game object and let's delete the
27:19 - old logged in object and let's now
27:22 - rename this to something like user and
27:26 - we can take all of these now and Center
27:30 - them by going up here hitting alt and
27:33 - hitting Center on that user object here
27:37 - actually I might want them to be
27:39 - centered to the top here so let's do
27:41 - that instead and let's go in here and
27:44 - actually drag down I or find out log out
27:48 - button here and drag that down a bit
27:50 - let's also select our on user name text
27:54 - and change the font size here to
27:56 - something like 14 have our locked in
28:00 - text be a font size of maybe 12 and
28:03 - let's just move these over to position
28:06 - them correctly here so let's move that
28:08 - over there that over there let's resize
28:11 - them and make sure that this is centered
28:14 - on the Horace
28:15 - oh yeah the vertical axis and now let's
28:18 - just create a bit of a gap between the
28:22 - two and that should actually look look
28:24 - fairly decent here so if we check pixel
28:29 - perfect here that will just make the
28:30 - text look a bit more crisp cool and in
28:34 - the scene view actually I want to bring
28:37 - up this sign out button just a bit
28:39 - something like that is pretty cool and
28:42 - now we can just take this and move it
28:44 - down something like
28:47 - there and just have it be well right at
28:51 - the edge of our screen here in the
28:53 - corner and I think that looks pretty
28:55 - cool and then we will have this be
28:59 - populated using our user account manager
29:04 - so let's create a script that will
29:05 - manage this area down here so this is
29:09 - going to be our and we can call this our
29:13 - user account and then lobby on the
29:17 - scroll lobby so make it clear that this
29:19 - is what handles our user account when we
29:22 - are in the lobby scene and you could
29:24 - actually do the same with a login menu
29:26 - here you could call that user account
29:28 - underscore login or whatever you want to
29:33 - do I like to name in this way just make
29:36 - sure you're consistent maybe a bit more
29:38 - than I am being here but change that on
29:40 - your own if you feel like that I don't
29:42 - think our login menu is that bad
29:44 - especially because it's the entire
29:46 - magnitude of that scene and that is what
29:48 - we have called the scene so that's all
29:50 - right okay so we are going to not be
29:54 - using systems or collections but we are
29:55 - however going to be using Unity engine
29:59 - WI we are going to be referencing a text
30:03 - object and let's make that reference
30:06 - right away so this is going to be a
30:08 - public text and we're going to call it
30:10 - our username text and then when we load
30:15 - the scene which means in the start
30:17 - method or right away we will call the
30:21 - start method and we will set user name
30:23 - text dot text equal to user account
30:27 - manager dot and then we will go use a
30:32 - locked in user name however we only want
30:36 - to do this in the case that we are
30:38 - actually locked in because you can
30:40 - imagine that we go directly in here and
30:43 - now we will get an error of course we go
30:45 - directly in here and hit play just when
30:48 - testing the user is never going to do
30:50 - this but we might do this a bunch of
30:52 - times we don't want this to throw an
30:54 - error or be weird or anything we just
30:56 - want nothing to happen so let's just put
30:59 - in an if statement here
31:01 - saying that we only want to do this if
31:02 - our YouTube account manager has a
31:06 - locked-in variable that is true so we
31:09 - only want to do that if we are locked in
31:12 - cool and in this in our case it went
31:15 - through an error anything it would just
31:17 - have the username text display whatever
31:22 - the user logged in user name defaults -
31:24 - which is just nothing so it would just
31:26 - make the text object disappear in the
31:29 - screen and that is fine however I think
31:32 - this is a lot cleaner way of doing it it
31:34 - just makes more sense putting in a check
31:37 - like this to only display our username
31:39 - if we are logged in cool and on the
31:44 - other thing that we want to do is put in
31:46 - a public function here that we can call
31:50 - from the button in order to sign up so
31:53 - let's have a sign out here and let's um
31:56 - and we should maybe call this logout
31:59 - just to be consistent with our
32:02 - terminology and what we will do here is
32:06 - we will go user account manager instance
32:10 - log out and again we only want to do
32:15 - this if user account manager that is
32:17 - locked in and that is super important
32:21 - here or it might let's see what we're
32:24 - doing here actually want through an
32:26 - error at all but again it's cleaner I
32:29 - like it so let's do that cool and that
32:33 - is pretty much it now we can go ahead
32:35 - and hit play and we should see or of
32:39 - course we need to reference this with
32:41 - the button so of course we need to drag
32:44 - in our username text and we need to also
32:46 - go to a logout button add an on-click
32:48 - event dragging our user object and go
32:51 - user account lobby and go logout there
32:55 - we go so now when we have played here
32:56 - nothing should happen you can see dark
32:59 - tennis user name sign out doesn't work
33:01 - however if we were to go and begin at
33:04 - our login menu hit play and actually log
33:09 - in here just like the user would hit
33:12 - login we transferred over to
33:15 - be seen it says logged in as test123 and
33:19 - we are able to sign back out by simply
33:21 - hitting that button and we're taking
33:24 - back to the logon screen so that was
33:28 - pretty much all I wanted to show you in
33:30 - this video I hope you think it's as
33:32 - exciting as I do I think we we've gotten
33:35 - really far in a fairly short amount of
33:38 - time I know that this video was probably
33:39 - fairly crazy and and things it's always
33:42 - hard to edit other people scripts but I
33:45 - think it was a bit too much code for us
33:47 - to ride on our own and I really like
33:50 - some of the things that he's done with
33:53 - this database control so yeah that's
33:58 - pretty much it I don't have anything
33:59 - more to add so thanks for watching if
34:03 - you want to see more of this stuff go
34:04 - and find me on my patreon page and
34:07 - donate that really helps out a lot we
34:10 - are aiming to get more videos out and
34:13 - maybe some live streams that would be so
34:14 - cool so without further ado thanks for
34:17 - watching and I'll see you in the next
34:19 - video thank you so much to all of the
34:21 - awesome patreon supporters who donated
34:23 - in July and a special thanks to vixen
34:26 - famous own Andrew K and locks game TV
34:29 - these videos wouldn't be possible
34:30 - without you