00:00 - thanks for tuning in at brakus hello
00:04 - animal consist video including a tower
00:05 - defense game in unity today we are going
00:07 - to be doing something really exciting
00:09 - which is making a wave spawner 2.0 so
00:12 - today we're going to expand the
00:14 - functionality of our wave spawn and
00:16 - quite a bit make it a lot more
00:17 - customizable we're going to introduce
00:19 - this concept of waves where we can edit
00:22 - properties for each individual wave so
00:25 - we will be able to have different
00:26 - enemies for different waves just drag in
00:28 - the prefab so we can change their look
00:30 - and their health their speed stuff like
00:32 - that I will also be able to control the
00:34 - amount of enemies we spawn and the rate
00:36 - they spawn at for each individual wave
00:38 - so really exciting video and let's just
00:41 - jump right into it so I'm here in unity
00:42 - and I want to begin by just getting an
00:44 - overview over how we currently have
00:46 - things configured so let's look under
00:48 - your game master and go to the wave
00:50 - spanish script and you can see here that
00:52 - we currently have a few variables the
00:54 - main problem with this is that we only
00:56 - have this central enemy prefab and that
00:58 - means that we will be spawning the same
01:00 - enemy for each individual wave which
01:03 - quickly becomes pretty boring for our
01:05 - user so let's not now just double click
01:08 - on our wave Spanish script and have a
01:09 - look at how this actually works so you
01:11 - can see again we have this enemy prefab
01:13 - we also have a reference to a spawn
01:15 - point and our wave countdown text that
01:17 - stuff we still need in here then we have
01:20 - this countdown on float and this is
01:22 - probably the most important variable
01:24 - because it's what keep track of when
01:27 - when we need to spawn the next wave and
01:29 - basically we set this equal to the time
01:32 - between waves and then we just slowly
01:35 - reduce it and make sure to display it on
01:37 - all that until it reaches zero in which
01:40 - case we spawn a new wave and then again
01:43 - set it back to the time between waves
01:45 - which is currently just set to 10 so
01:47 - every 10 seconds no matter if we
01:49 - actually kill off the wave or not that's
01:53 - going to spawn a new one and I kind of
01:55 - want to change how that works instead
01:57 - what I wanted to do is only spawn a new
02:00 - wave in case we killed off the last one
02:03 - and actually I want it to be in such a
02:05 - way that the countdown doesn't start
02:08 - until the previous wave is dead and then
02:10 - we can have a very tiny countdown say
02:12 - three or five
02:13 - Ekans until the next wave so I think
02:16 - that just helps separate things that
02:18 - make things easier both for the user and
02:21 - also kinda to separate things out for
02:23 - ourselves so in order to do this what I
02:26 - want to do is keep track of how many
02:28 - enemies we have in the scene because we
02:30 - need to know if we've actually killed
02:33 - off the wave and in order to do this
02:35 - let's just create a new variable let's
02:37 - just make this at the very top and it's
02:39 - going to be public because we want to be
02:41 - able to access it from without the
02:43 - script and we also want it to be static
02:46 - again because we want our enemies
02:49 - whenever they die to be able to change
02:52 - this value so we want a public static
02:55 - int and we'll call this our enemies
02:57 - alive and we want to default that to
03:00 - serum then what we do is each time we
03:03 - spawn an enemy and we have a handy
03:05 - method for that down here we've course
03:07 - instantiate the enemy prefab and then we
03:10 - can go enemies alive plus plus so we
03:13 - simply add r1 onto the current on the
03:16 - existing value so each time we spawn an
03:19 - enemy we now increase this value value
03:22 - now we need to also decrease it when an
03:24 - enemy D spawns and in order to do that
03:27 - we simply need to find our enemy script
03:29 - in here just double click on that and
03:32 - you can see that we have a method here
03:34 - for killing off the enemy called die so
03:36 - each time an enemy dies we want to go in
03:39 - here we want to say wave spawner and
03:41 - again because this is a static variable
03:43 - we don't need a reference to the
03:45 - instance of the class we can simply use
03:48 - the type so we'd simply go wave spawner
03:50 - dot enemies alive and then - - we simply
03:53 - want to subtract one from the current
03:56 - amount of enemies alive so that's really
03:58 - really easy
03:59 - except there's actually one case where
04:02 - our enemy our gets removed from the
04:04 - scene but the die method isn't cold and
04:07 - that's the case where our enemy actually
04:09 - slips through our defenses and gets to
04:12 - the end of our level in that case inside
04:14 - of our enemy movement it reaches the end
04:17 - of its path and then we subtract some
04:20 - lives and we destroy the object and here
04:22 - it doesn't call the any die method so in
04:25 - here we also need to go
04:27 - spawner dot enemies alive - - so there
04:32 - we go so now we actually keep track of
04:34 - the current amount of enemies in our
04:35 - scene and we can use this in here all we
04:38 - need to do is kind of say if and we can
04:42 - do that up here if our so if enemies
04:47 - alive is greater than zero well then we
04:52 - can simply return out of our update
04:54 - function then we don't want to do any of
04:56 - this stuff happening down here and I
04:59 - actually believe that all the code that
05:02 - we need to add so if we just go through
05:04 - this so it's the countdowns going to
05:06 - start at - it's going to go through here
05:09 - it's going to go down it's it's not no
05:12 - enemies are alive and it's not reached 0
05:15 - yet so it's just going to subtract a bit
05:16 - every frame and it's going to keep doing
05:18 - that until it reaches 0 then we spawn a
05:21 - wave and you can see down here we start
05:24 - spawning that way we wait a little bit
05:26 - between each enemy and each time we
05:28 - spawn an enemy enemies alive is going to
05:30 - increase and so this here is going to be
05:33 - true so it's not going to do anything
05:35 - else and just spawn the wave and set the
05:38 - count down equal to the time between
05:40 - waves it's not going to go down here and
05:42 - draw any of this out on the screen and
05:45 - it's not going to subtract from our
05:47 - countdown until the enemy here dies and
05:51 - we subtracted and or they reach the end
05:54 - of our level until all of the enemies
05:56 - have gone through one of those two
05:58 - things in which case our enemies alive
06:00 - will again be 0 and it will continue
06:03 - down down here again and start counting
06:07 - down so that is kind of on the base of
06:10 - what's happening and it might be a bit
06:11 - confusing because we're kind of juggling
06:13 - both time and amount of enemies and a
06:16 - co-routine and so that stuff can be
06:18 - confusing but of course you can always
06:20 - use the link in the description to get
06:22 - the code of github and see for yourself
06:24 - on your own system so that should
06:27 - actually work now so all we need to do
06:29 - is simply hit play and we should see
06:32 - that for our first enemy is going to
06:34 - reach 0 here and actually didn't reach 0
06:38 - immediately it actually went a bit for
06:41 - and that's because after we start the
06:43 - curio team here we set the countdown
06:46 - equal to the time between waves we
06:48 - actually continue down and subtract for
06:50 - just a single frame until we reach the
06:52 - top again and all we need to do is just
06:55 - hit return here in order to make sure
06:57 - that we don't pass through all of this
06:59 - other logic when we begin spawning in
07:02 - your wave and that should actually take
07:03 - care of that bug so now when we have
07:05 - play we should see that it reaches zero
07:07 - it stops a new enemy spawns and the
07:11 - second that we kill off that enemy the
07:14 - countdown begins again and when it
07:16 - reaches zero it's going to spawn the
07:17 - next wave let's just wait for that to
07:19 - happen very quickly and we can see that
07:22 - the next wave is now incoming and it
07:24 - should feature two enemies awesome and
07:26 - you can also see that the next wave
07:28 - won't start until both of these enemies
07:30 - are killed off which is now cool so I
07:33 - think with this new system we can easily
07:35 - decrease our time between waves actually
07:38 - I wanted to set it to only like 2
07:39 - seconds as long as we're just
07:42 - prototyping and then we can always bump
07:43 - it up at a later point so the next thing
07:47 - is our sum allowing for more
07:49 - configuration when it comes to how many
07:51 - enemies we want to spawn each wave and
07:54 - what enemy prefab we want to spawn and
07:57 - in order to do this it's actually quite
07:59 - simple what we need to do is go under
08:01 - our wave spawner and we need to kind of
08:04 - have some list in here more specifically
08:07 - an array which is just a list of items
08:10 - that where each element in the list has
08:15 - some specifications about the wave so um
08:18 - in order to do this let's start by
08:20 - creating a class that will act as our
08:23 - wave all of the data for our wave that
08:25 - we can then have a list of so let's
08:28 - start by creating a new class and we do
08:30 - that by just going on the scripts hidden
08:32 - create c-sharp script and let's call
08:35 - this one wave and double click that to
08:40 - open it up and of course we have to
08:42 - think about well what do we want each
08:44 - wave to kind of have in terms of
08:47 - information what do we want each wave to
08:50 - know and we also have to remove
08:52 - monobehaviour here because we're just
08:53 - using this class
08:54 - to store a bit of information some
08:57 - different variables so first of all we
09:00 - want this wave to have a reference to a
09:02 - prefab for the enemy that we want to
09:05 - spawn that wave so we don't just want to
09:07 - go public game object and we want this
09:09 - to be enemy you could also go enemy
09:11 - prefab will just say enemy we also want
09:14 - an amount of enemies to spawn so we go
09:16 - public integer and we'll do count and
09:20 - finally we want an amount of time that
09:23 - should are kind of a spawn raid actually
09:27 - I think that's better than a time
09:28 - between enemies I think we should have a
09:30 - rate so let's just do public float and
09:33 - then rate and we don't need to input any
09:36 - default values that's totally fine and
09:39 - one thing that we do need to do because
09:41 - we want this to be able to show up in
09:43 - the inspector so that we could edit
09:45 - these these variables inside of unity is
09:48 - we want to mark this as system dot
09:52 - serializable and that just means that we
09:54 - will notify unity this is something that
09:56 - you should save a load and this is
09:58 - something that you should display in the
10:00 - inspector once we actually turn it into
10:03 - an array so when we then go into our
10:06 - wave spawner instead of having our enemy
10:09 - prefab we can then create a public wave
10:13 - and then the array sign here so again a
10:16 - list of items and we want this to be our
10:19 - waves and when we now just save this and
10:22 - hit into unity it's not gonna work just
10:25 - yet and again we are referencing the
10:27 - enemy prefab so I just want to get rid
10:30 - of that so I can show you what's going
10:32 - on okay so let's just finish the logic
10:33 - here and I'll show you what it looks
10:34 - like in the inspector in just a second
10:37 - so now each time we spawn a wave we
10:40 - don't want to spawn an amount of enemies
10:42 - equivalent to our wave index and we
10:45 - don't want to increase our wave index in
10:47 - the beginning we want to do that after
10:49 - we've spawned the wave because the wave
10:51 - index should start at zero and then go
10:54 - one two three four and so on we don't
10:57 - want it to start at one so let's take a
10:59 - wave index here and move that down so
11:02 - that we increment it after our loop and
11:04 - by the way the way that
11:06 - moving lines up and down is by holding
11:08 - down alt and then pressing the up and
11:10 - down arrow keys it's a really handy
11:12 - thing inside Visual Studio and a lot of
11:15 - code editors offer that functionality so
11:19 - we want to increase our Wave index down
11:20 - here and first off let's get the current
11:24 - wave that we want to spawn so simply the
11:26 - way that we want to spawn is of type
11:28 - wave and we can just call it wave and it
11:31 - will be equal to our waves at the wave
11:34 - index is precision so again if it's the
11:38 - first wave we are going to take the
11:40 - first element which has an index of zero
11:43 - so our wave index will be zero and we're
11:45 - going to store all that information in
11:47 - wave if it's the second wave the wave
11:50 - index is going to be one and we're going
11:52 - to grab the second element and store it
11:54 - inside a wave then what we can do is go
11:56 - in here and say that we want to spawn a
11:59 - bunch of enemies and the amount of
12:01 - enemies we want to spawn is wave dot
12:03 - count and so for I is equal to zero as
12:08 - long as I is less than wave count we are
12:11 - going to keep on iterating through this
12:13 - loop and we don't want to wait a half a
12:16 - second between each enemy we want to
12:19 - wait 1 divided by wave dot rate so again
12:25 - we could just have put wave dot time
12:28 - between enemies and then we wouldn't
12:29 - have to do any kind of division we could
12:31 - just input the number but I think using
12:33 - a rate it's just a bit more clean so
12:36 - what we can then do is of course we also
12:38 - need to specify the exact enemy that we
12:42 - want to spawn and so we'll just pass
12:44 - this bat through as an argument so again
12:46 - we'll create a game object here called
12:49 - the enemy or enemy prefab let's just
12:51 - call it enemy and that's what we want to
12:52 - use here for our spawning and we just
12:56 - need to pass that into a function so in
12:58 - here we'll just go wave dot and you
13:01 - guessed it we just go waved our enemy so
13:03 - this is just a much cleaner way of doing
13:05 - things it's not as automated because we
13:08 - have to make each individual wave or
13:10 - level or round or whatever you want to
13:12 - call it but it gives us so much more
13:16 - configuration possibilities and really
13:19 - to create something that's much more fun
13:21 - for the end-user having this idea of a
13:24 - wave that is kind of an object that
13:26 - we've created on our own with these
13:28 - different characteristics then storing a
13:30 - bunch of these waves in the list and
13:33 - then just going through them one by one
13:34 - and using some of the properties in
13:36 - there to create different behaviors is
13:39 - kind of the core of object-oriented
13:41 - programming so if you're able to
13:43 - understand this you're going to be able
13:45 - to do so much with programming and even
13:48 - if you're lagging behind a bit and think
13:49 - this is really hard just right after me
13:52 - no don't worry about it you will
13:54 - definitely get this it was something I
13:56 - thought was really hard to wrap my head
13:58 - around but once you master this you're
14:00 - going to feel like you can do pretty
14:02 - much anything so really great if you're
14:04 - getting what's going on here so I'm just
14:07 - gonna have a sip of water and and we can
14:12 - continue cool so this should actually
14:15 - work and this should allow us now to go
14:17 - inside of unity and see that there's no
14:21 - errors awesome and we can now go into
14:23 - our game master and the wave spawner and
14:25 - you can see that there's now a list in
14:27 - here and we can increase the size of
14:30 - this list that's just import say five
14:32 - and have five different elements here
14:35 - and we can collapse these and expand
14:38 - them and each element again has three
14:40 - properties our enemy the enemy count and
14:43 - the rate they spawn at so now we can
14:45 - populate these and this is really just
14:47 - about you going knots with your
14:49 - animation imagination and just doing as
14:53 - much as possible of course we'll have to
14:56 - kind of balance it in terms of not
14:58 - making each level two easier too hard or
15:01 - having a really big gap between one
15:03 - level and another but it's really just
15:06 - about coming up with a bunch of things
15:08 - that you think could be really fun and
15:10 - varied for all your players so um in
15:15 - order to do this we have to go under our
15:16 - prefabs folder and maybe organize this a
15:19 - tiny bit actually I want to create a
15:21 - totally new folder called enemies and I
15:24 - believe ya actually created this earlier
15:26 - so I have this enemies folder here and I
15:29 - had this idea that I wanted to create at
15:31 - least three
15:32 - different types of enemies I wanted to
15:34 - have a very simple one which is much
15:36 - like the one we have now where the speed
15:38 - is kind of in the middle and he has an
15:41 - average amount of health and stuff like
15:43 - that he's not that special then we can
15:46 - create a really tough one with a lot of
15:48 - health but who might be a little slower
15:50 - and we can create some fast enemies who
15:52 - are have almost zero health and don't
15:55 - give that much money but we can create a
15:57 - lot of them and they'll be moving
15:58 - through the level at a rapid speed so
16:01 - let's take our enemy and enemy death
16:02 - effect and use that as a base for our
16:05 - simple enemies and we can go in here and
16:07 - maybe just add symbol to the end of the
16:12 - names of these objects here just to make
16:15 - it very clear what's going on and we can
16:18 - also find under our materials or enemy
16:21 - material and drag that in as well and
16:22 - add again on the square symbol to that
16:26 - so now we have everything grouped in
16:28 - that folder and I don't really want to
16:30 - change anything about these enemies I
16:32 - think they are working just fine as is
16:34 - so let's go and make a few waves using
16:36 - these this enemy type this dragon enemy
16:40 - symbol let's increase the count to say
16:42 - one for the first one and the rape two
16:45 - to that so that means two enemies a
16:46 - second but again we're only spawning
16:48 - once or really doesn't matter it's just
16:51 - to satisfy my OCD then for the second
16:54 - wave I think we should still keep it
16:56 - really simple and easy so let's do a
16:58 - count of two at a rate of two and for
17:03 - our third element which is of course
17:05 - index two we can maybe create a new type
17:08 - of enemy or we could just kind of bump
17:10 - up the count here let's just get as much
17:12 - as we can out of this enemy type until
17:15 - we are exploring new ones just to let
17:17 - our use to kind of figure things out on
17:20 - its own so five enemies at a rate of two
17:23 - I think that's going to be fine and now
17:24 - for our fourth wave I definitely want to
17:27 - do some variation so let's take our
17:30 - symbol folder here and that's actually
17:32 - just duplicated let's remove the tough
17:34 - folder and let's just rename this to
17:37 - tough that's just easier to have this to
17:39 - work off you could of course create a
17:41 - totally new object but it's much much
17:43 - easier to just duplicate things and then
17:45 - I just modified the things that you need
17:48 - to modify so we're going to rename all
17:51 - of this to tough enemy tough boobs not
17:54 - tough simple enemy tough and let's do
17:58 - the same thing here
17:59 - enemy top and enemy death effect tough
18:05 - cool and then we can take our enemy
18:08 - tough and we can pump up his health
18:11 - let's do something like 300 maybe even
18:13 - 350 I think actually 350 could be pretty
18:17 - cool and we can take our start speed and
18:20 - set it to maybe 7 so he moves a lot
18:23 - slower and also definitely bump up his
18:26 - worth to something like maybe even 140
18:30 - to really make him much more valuable to
18:33 - to kill and let's now take our enemy
18:36 - tough material and drag it under the
18:39 - materials here so so we make sure that
18:42 - it doesn't use the symbols material and
18:44 - let's do the same with our death effect
18:46 - so if we go onto our renderer on our
18:47 - death affect we have to drag in enemy
18:50 - tough for that death effect and we also
18:53 - have to go into our enemy tough and drag
18:55 - in the correct death effect so that's a
18:57 - bit of that's a few things that you need
18:59 - to make sure that you link up probably
19:00 - but once you do that it's really really
19:02 - easy then next up you could of course
19:04 - increase the scale here to make him a
19:06 - bit bigger and I definitely recommend
19:08 - that you do so if you think it would be
19:09 - cool but what I'll do instead is
19:11 - actually going and edit our material
19:13 - here you can do both but I'll just edit
19:15 - the material and I want to make this a
19:17 - tiny bit more kind of red and maybe even
19:21 - add a bit of metallic nurse just to make
19:23 - it darker and kind of more Grinchy cool
19:27 - so now if we just drag in our enemy
19:29 - tough I think it looks pretty cool and I
19:32 - definitely think it's acceptable so
19:34 - let's just use that as a base and you
19:36 - can always spend more time playing
19:38 - around with this stuff than I do so now
19:40 - under our game master and our wave
19:42 - spawner we can just take our enemy tuff
19:45 - script here and drag it in there and set
19:48 - the count to something like 3 at a spawn
19:50 - rate of 1 so um and for our fifth and
19:55 - final element I'm again going to
19:57 - duplicate the symbol folder
19:59 - let's remove our fast folder here and
20:01 - let's rename this one too fast and again
20:04 - I just want to link up everything so
20:07 - let's start by renaming this stuff so
20:09 - this is going to be enemy fast again
20:12 - enemy fast for the material and enemy
20:16 - death effect fast then we can take our
20:18 - enemy fast here drag in the correct
20:21 - material drag in the correct test effect
20:24 - let's take the death that's affected rag
20:26 - in the correct material there as well we
20:29 - can then change the material to
20:30 - something I think a yellow would be
20:33 - pretty cool definitely wanted to to
20:37 - stand out a bit something like that
20:39 - looks pretty cool I think and I
20:42 - definitely wanted to be bright maybe
20:45 - even brighter than this something like
20:47 - that looks pretty cool and then we can
20:50 - go in here and simply edit some of its
20:51 - stats here so let's change the start
20:53 - speed to something like 20 and I start
20:56 - health to something really low let's
20:58 - just do 15 and we can also maybe set its
21:01 - worth to something a bit less let's say
21:03 - 25 and that should work just fine
21:07 - so again let's go into a game master
21:09 - let's drag in the prefab let's set the
21:13 - count to something much higher let's say
21:15 - on 10 and set the raid also to something
21:18 - really fast like 3 awesome
21:21 - so that should actually already work and
21:24 - if we just go in here now and hit play
21:25 - we should see that on these waves are
21:29 - indeed spawning so there's the first guy
21:30 - and let me just show you that the second
21:32 - ones are working as well indeed they are
21:36 - but before we go through this we have to
21:38 - fix one bargain I'm just going to go out
21:40 - and say that there is a bug so that we
21:43 - don't have to go through the entire
21:44 - level only to find out that something
21:46 - isn't working and that is when we reach
21:49 - the end of our levels so when we don't
21:53 - have any more waves prepared meaning
21:56 - that we've gone through all 5 waves it's
21:58 - going to increment our wave index so the
22:01 - last level has an index of 4 and so the
22:05 - next level which doesn't exist is going
22:07 - to have a wave index of 5 and when it
22:09 - then goes through here spawns the wave
22:12 - and tries to get the wave here it's
22:14 - going to be unsuccessful because if we
22:16 - try and get the fifth element of our
22:18 - wave array it's going or the sixth
22:22 - element with an index of five of our
22:24 - wave array it's going to give us a null
22:26 - reference exception because that doesn't
22:28 - exist so what we need to do is add just
22:31 - a tiny bit of functionality basically
22:34 - just an if statement here is saying that
22:35 - if wave index is equal to armed waves
22:40 - dot length so if it's equal to the
22:43 - amount of total waves that we've created
22:45 - well then we want to end our level we
22:49 - could just say you won the game or we
22:51 - could transition to a new level and you
22:53 - guys been requesting me to do multiple
22:55 - levels for a long time and it's
22:58 - definitely something that I would like
22:59 - to do the only thing that I'm kind of
23:01 - waiting on is a bit of graphical updates
23:04 - I want to create some more interesting
23:06 - graphical pieces before we go on to
23:08 - creating new levels but I definitely
23:11 - want to leave some code here that allows
23:13 - us to easily transition to a new one so
23:16 - in order to do that all we kind of want
23:18 - to do here is just throw a debug
23:20 - deadlock statement with something like
23:22 - wave or a level one and of course we
23:28 - want to call something on the game
23:29 - manager or something like that but for
23:31 - now we'll just say that in here and then
23:33 - we want to disable this script so that
23:36 - we don't keep on spawning new waves and
23:38 - to do that we simply go this dot enabled
23:41 - equals false and we haven't had a look
23:44 - at using this stud enabled really but
23:47 - always saying is that this script we
23:50 - want to disable it cool so we can save
23:53 - that now and things should work without
23:55 - any kind of weird errors so let's just
23:58 - hit play here and enjoy what we've been
24:00 - creating so that's C here so let's
24:04 - create a standard turd first I think
24:05 - that's kind of a good base and one thing
24:08 - that I know is that our missile launcher
24:10 - works pretty well against the standard
24:12 - unit so I'll go ahead and create one of
24:14 - those if you'll shoot awesome and I know
24:19 - that this laser here works really really
24:21 - well against um kind of
24:26 - a really really quick units because it
24:28 - shoots continuously but they don't have
24:31 - a lot of health it it's really really a
24:34 - great against fast opponents who might
24:38 - just escape the bullets of some of the
24:40 - other turrets so I think we have a
24:42 - pretty good defense setup here and of
24:44 - course right now we you can see there
24:46 - how effective the laser turret is on
24:48 - trying to create some or kill some of
24:50 - these enemies and now that we have
24:52 - through all five levels you can work all
24:55 - five waves you can see down here that it
24:58 - says level one and that's awesome and we
25:01 - can transition to the new one so it's
25:03 - just gonna be stuck here and wait till
25:05 - we do something with it you can display
25:06 - a victory screen or you can make your
25:08 - own new level and transition to it
25:10 - that's totally up to you but at least I
25:12 - think this was a really really important
25:14 - upgrade so that's pretty much it for
25:16 - this video I hope you enjoyed it and you
25:18 - find a lot of fun ways to play around
25:20 - with this really it's only your
25:22 - imagination that should stop you at this
25:24 - point and yeah thanks for watching and I
25:26 - will see you in the next video thanks to
25:29 - of the awesome patreon supporters who
25:30 - donated in November and a special thanks
25:32 - to sultan al sharif faisal arrow fire
25:34 - james Calhoun and Robert Bonham become a
25:36 - patron yourself at patreon.com slash
25:38 - practice