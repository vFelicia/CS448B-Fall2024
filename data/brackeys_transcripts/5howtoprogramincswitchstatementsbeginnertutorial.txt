00:00 - thanks for tuning in at brakus hello one
00:04 - and welcome to video number five in the
00:06 - how to program in C sharp course today
00:09 - we're going to be taking a look at how
00:11 - we did last week's challenge and also
00:14 - add on to that and make it more fun by
00:17 - using a random number generator I'm also
00:20 - going to show you a new piece of
00:22 - conditional logic called switch
00:25 - statements which I think you're going to
00:27 - find pretty cool so as always have
00:32 - opened up xamarin studio here and this
00:35 - is what I've written out we're going to
00:37 - be using this code throughout this video
00:39 - so if you want to you can just go ahead
00:41 - and copy it off the screen and write it
00:43 - yourself or you can go to forum practice
00:47 - calm where I've created a thread we have
00:50 - pasted the code here so you can simply
00:52 - copy that and your program should work
00:54 - so and the link is in the description
00:57 - and if I'm not too lazy maybe even as an
01:01 - annotation cool so let me just quickly
01:05 - walk you through this code but first
01:08 - let's just try and run the program so it
01:10 - asks me what is 16 times 4 and I'm going
01:14 - to write 64 because I know that and then
01:18 - it's going to say well done your answer
01:20 - is correct if I write let's say 2 to
01:23 - this question it's gonna say are you
01:25 - even trying I know I was not so yeah let
01:31 - me just walk you through this and so you
01:33 - can get an understanding of how this
01:34 - works so we start out by creating two
01:37 - integer variables I call num1 and num2
01:39 - and we set them to do two different
01:41 - numbers they could be the same and then
01:45 - we use console.writeline to ask the user
01:47 - what is num1 times num2 and then a
01:51 - question mark then we collect the answer
01:54 - using a console dot readline which we
01:57 - then convert to an integer and store in
02:01 - an interview variable called answer then
02:05 - if the answer is actually equal to num 1
02:08 - times num2 we're gonna write out that
02:12 - the answer
02:13 - is correct and if not we're going to
02:15 - write out that it was not and then of
02:18 - course we await some user input so our
02:20 - program doesn't just suddenly close cool
02:25 - so that's the basis of our program but
02:27 - right now it's not really fun is it
02:30 - because I mean every time you run it you
02:32 - get the same answer so let's try and
02:36 - randomize this using a cool class that
02:40 - is included with seats the c-sharp
02:42 - language called random so just like we
02:46 - have a class here called main class
02:48 - which we've made and inside of that we
02:51 - have a method that does all different
02:54 - kinds of stuff I mean this method does
02:56 - math problems just like we have this
03:00 - main class the c-sharp language has a
03:03 - class called random an inside of this
03:06 - class it has all kinds of different
03:09 - methods that does different things with
03:12 - random numbers such as generate a random
03:15 - integer between a min value and a max
03:18 - value which is just what we need so what
03:22 - we need to do is we need to reference
03:24 - this class we need to do what is called
03:28 - create an instance of the random class
03:32 - and that all sounds pretty complicated
03:35 - but it actually is not too harsh
03:39 - syntax wise so let's try and write out
03:42 - random and you can see that it shows us
03:45 - a public class called random then we're
03:51 - going to give this a name we're going to
03:53 - call this the number generator and we're
03:58 - going to set this to a new random and
04:02 - you're going to have to open and close
04:04 - the parentheses here and then the
04:06 - semicolon so that's the syntax for
04:10 - creating an instance of a class it's an
04:14 - instance of a class because we are
04:16 - treating this just like an object
04:18 - basically just like if we would spawn
04:20 - something in the game here we're just
04:23 - spawning sort I say a class
04:26 - can do different things and we are
04:28 - calling it a number generator so let me
04:32 - just show you what you can do with this
04:34 - if you don't quite understand what what
04:36 - this line does it's completely okay but
04:39 - you can actually do some pretty fun
04:41 - things with it no matter if you
04:43 - understand it or not
04:45 - so let's instead of write 16 here let's
04:49 - write number generator dot next this is
04:57 - the function that returns a non-negative
05:00 - number that is of course random and that
05:04 - is an integer so if we just open and
05:07 - close the parentheses here we are going
05:09 - to assign a random number to the number
05:12 - 1 but let's say that we want this to be
05:16 - within reasonable boundaries because I
05:19 - mean we are not so good at multiplying
05:22 - numbers with let's say 10 decimals or 10
05:29 - digits
05:29 - so let's instead make sure that this
05:32 - random number can only be between 1 and
05:35 - 10 so I'm going to start out by writing
05:38 - 1 and that's because this function main
05:42 - value is what is called inclusive that
05:45 - means that the first number you write is
05:47 - going to be included then I'm going to
05:50 - write comma and you can see that it asks
05:54 - for a max value and for this I'm going
05:57 - to write 11 and the reason why is that
06:00 - the max value is what is called
06:02 - exclusive which means that the value
06:05 - itself is not going to be included only
06:08 - the value right before so this is
06:11 - actually going to do 1 through 10 so I'm
06:15 - just going to copy this and replace the
06:18 - 4 with this and now we actually have a
06:21 - random number random number generator
06:24 - that will work and now our program
06:27 - should be a lot more exciting so let's
06:29 - try and hit play here and you can see
06:32 - that it asks what is 4 times 8 I'm going
06:36 - to do 8 16
06:38 - and then 32 and you can see it sells
06:41 - well done your answer is correct cool so
06:45 - that's how you make sort of a a small
06:48 - game you can of course make this into a
06:50 - loop so it will just continue on
06:52 - infinitely and and then you are pretty
06:56 - good to go
06:57 - cool so what I wanted to show you now is
07:00 - I want to show you another piece of
07:02 - conditional logic called the switch
07:05 - statement so we've always ready looked
07:09 - at the if statement that compares things
07:11 - basically checks if a condition is met
07:14 - and if it is it does something then we
07:17 - also have the ability to say that we
07:19 - want to do something if it it's not or
07:23 - we can check for a whole new thing but
07:26 - what a switch statement does is it
07:28 - handles really well if there's a bunch
07:31 - of things that we want to check for in
07:34 - one variable so let's say that we have a
07:37 - number a random number generator that
07:40 - makes a number between 1 and 10 and
07:43 - depending on the number we want to do
07:45 - different stuff well we could write if
07:48 - one then do this else if two then do
07:52 - that else if 3 and then on and on and on
07:55 - or we could just use a switch statement
07:58 - which basically is easier to read and is
08:02 - much less syntax wise and that's the
08:06 - standard you could do a fail-safe
08:08 - failsafe but really you should be using
08:11 - an if statement so we could use this to
08:15 - maybe let's say make different answers
08:20 - depending on a random factor so let's
08:24 - say that we answer wrong then we want to
08:28 - write different messages at random so
08:32 - it's not going to say are you even
08:33 - trying every time we do something wrong
08:36 - let's randomize this a bit and give
08:38 - multiple different responses so in order
08:41 - to do this we are going to make a new
08:44 - integer inside of this else statement so
08:47 - we're going to make an int and we're
08:49 - going to call this response
08:52 - oops responds index and we're going to
08:58 - set this to number generator dot next
09:02 - and let's just do let's do 3 responses
09:07 - so let's do run 1 through 4 which is
09:11 - going to be 3 and what we can then do is
09:16 - we can go ahead and make our switch
09:18 - statement so this is how it's going to
09:20 - look it's going to say switch right here
09:23 - and then just like and if we are going
09:26 - to open and close parentheses and inside
09:29 - of those we are going to put in with the
09:31 - response index so now we can do stuff
09:34 - depending on what the response index is
09:36 - equal to you can do the same with that
09:39 - say string values if this was a string
09:41 - you can do the same with the switch but
09:46 - for now we're going to be using an
09:47 - integer because it works well with the
09:49 - random number generator so switch
09:52 - response index and then we're going to
09:55 - open up and close some brackets just
09:58 - like the if statement and this is where
10:01 - it becomes just a bit just a tad
10:04 - different so we're going to write a case
10:06 - and then we're going to write the the
10:11 - value of the response index that we are
10:14 - going to then do something with so let's
10:16 - say the response index is sequel to run
10:19 - then we're going to do a colon and down
10:24 - here we can then write what happens if
10:26 - response index is equal to 1 so if it is
10:30 - we're just going to type in the are you
10:33 - even trying and then we're going to do a
10:37 - break it's very important that after
10:41 - every case you inside the insert the
10:44 - break keyword this is simply going to
10:46 - break out of the switch statement so we
10:49 - can continue with our code in some cases
10:52 - you're not going to do a break here but
10:53 - in this case you are we might get into
10:57 - what the break tag actually can do for
11:00 - us in another video so let's do some
11:03 - more cases I'm just going to write
11:05 - another one here
11:06 - I'm going to call this case - and for
11:09 - this one let's do cancel that red line
11:13 - the answer was incorrect and then I'm
11:19 - going to break again and instead of
11:23 - writing case three here which we could
11:27 - do I'm going to write what is called a
11:29 - default case so that means that if none
11:34 - of the other cases are met we're just
11:36 - going to resort to the default this is
11:39 - kind of like the ELLs in an if statement
11:42 - so let's write default and then just a
11:47 - colon and we're going to write console
11:49 - dot write line and we can type you can
11:57 - do better than that
12:02 - and then we're again going to break out
12:07 - of the switch so that is basically all
12:11 - the code we need in order to give random
12:14 - responses back to the user and this is
12:16 - going to make all the different programs
12:18 - that you're going to write a bit more
12:20 - exciting of course this is not an effect
12:23 - that should be overused but when our
12:25 - program is as simple as this it's it's
12:28 - great to do and of course switch
12:30 - statements can be used for much more
12:33 - than just this so now we're actually
12:35 - ready to go ahead and hit play so when
12:38 - we hit play here I'm going to purposely
12:40 - type a wrong answer I'm going to type 2
12:42 - and it says you can do better than that
12:45 - let's try with some more let's type 2
12:47 - again here are you even trying let's see
12:50 - if we can get the last one you can do
12:53 - better than that maybe the answer was
12:56 - incorrect so that was basically it for
12:59 - today's video I'm just going to quickly
13:01 - go ahead and give you a challenge for
13:04 - the next one so if you feel like switch
13:06 - statements are kind of difficult still
13:08 - all I want you to do is create a switch
13:11 - statement pretty much like this one but
13:14 - in here that will give different
13:17 - responses when the answer was
13:20 - recked if you feel like you've
13:22 - completely mastered the switch statement
13:23 - already what I want you to do is compare
13:27 - the answer that the user inputted with
13:31 - the correct answer to then determine how
13:34 - close the user was at answering the
13:38 - question correctly and then give a
13:40 - response based on that again it's up to
13:43 - you what challenge you want to complete
13:45 - I hope you can figure it out and thanks
13:49 - for watching I'll see you in the next
13:50 - video