00:00 - thanks for tuning in at brakus hello
00:04 - everyone welcome to the third video in
00:06 - going to d today we are going to be
00:08 - taking a look at making some code that
00:11 - will automatically adjust boundaries
00:14 - port colliders to fit the screen size of
00:17 - our users so aspect ratio and all of
00:20 - that we're going to take care of it and
00:22 - also we're gonna make our players spawn
00:26 - with a certain distance from the edges
00:28 - so as always I've opened up unity and we
00:31 - can just go ahead and get started so
00:33 - first off let's actually create an empty
00:36 - game object so go to game object create
00:39 - empty or press control shift and that's
00:43 - of course command shift and if you're on
00:45 - a Mac now let's rename this to
00:48 - underscore G and that's for a game
00:51 - master and I like to create a empty game
00:56 - object to handle all of the game setup
00:59 - all of the score like when when the
01:04 - player scores a point restarting and
01:07 - going to menus all that through AGM game
01:11 - object which is just empty that's just
01:14 - preference of mine and the reason why
01:16 - I've put an underscore here is so that
01:18 - it will stay on top of the other objects
01:21 - in the hierarchy so first off let's zero
01:24 - out the position that's just general
01:27 - good practice and let's hit new scripts
01:30 - and let's call this game set up so we
01:33 - can handle all of our set up logic in
01:36 - here and let's hit create an ADD
01:38 - double-click it and it will open up in
01:40 - mono develop so let's go ahead and get
01:45 - started here let me zoom in so you can
01:47 - see this a little better
01:48 - and actually want we want this code for
01:52 - performance reason to only be run in the
01:55 - start function but just to show you how
01:58 - cool this actually is the calculations
02:01 - we're doing here I'm just gonna do it in
02:04 - the function update and then change it
02:05 - later you can do the same we could
02:09 - detect our camera we're gonna need our
02:11 - camera we could detect that
02:13 - once in the function start by searching
02:17 - for it but instead let's just create a
02:19 - variable that's better on the computer
02:22 - so let's call this not seen kam actually
02:25 - that's just called this main cam and
02:27 - it's gonna be a type of camera then down
02:30 - here we're gonna type var top wall and
02:34 - this is gonna store our top box Collider
02:37 - which we want to access later and also
02:43 - we're gonna store the bottom wall which
02:46 - is also gonna be a type box Collider 2d
02:49 - and the left wall let's do that one
02:53 - and of course you can exclude any of
02:56 - these if you want if you don't want it
02:58 - in your game it really depends on the
03:00 - game you're making so here right wall
03:03 - and then box Collider 2d ok great and
03:07 - now let's also make some variables for
03:10 - the two players when we want to access
03:12 - those so play one of type transform and
03:16 - player 2 also of type trance form great
03:26 - so in the function update let's make
03:27 - some space here first thing we want to
03:30 - do is we want to move each wall to its
03:35 - edge location so we're just gonna go
03:40 - ahead and do that now
03:40 - first off let's access the top wall dot
03:43 - size so we can change the size of the
03:47 - collider and one thing you should notice
03:50 - is that I will just do the top wall
03:52 - because there's a lot of typing and
03:54 - random numbers and such so I'll just do
03:58 - the top wall and then I'll copy pasted
04:00 - the other walls and I'll of course leave
04:02 - them on the screen so you can fill in
04:04 - the numbers yourself but you can also
04:06 - download the script from Brett he's calm
04:08 - that's way easier and I will of course
04:11 - explain everything so Tomball dot size
04:14 - equals new vector2 which is basically
04:18 - just storage to float numbers the first
04:22 - of which is going to be our
04:24 - [Music]
04:26 - screen to world point and basically what
04:29 - this means is actually let me just fill
04:32 - this out first so it's gonna have
04:35 - something here it's gonna have something
04:37 - there and then it's gonna be comma 1 F
04:40 - and then round it off but and we if we
04:44 - just say okay we want this to be
04:48 - basically as long as the width of the
04:53 - screen you would normally think let's
04:55 - just do a screen that with then so it
04:58 - will be the size of the screen that
05:00 - width and then 1f but the problem is
05:03 - that screened out with returns the width
05:06 - in pixels and we want this to be in unit
05:10 - so basically we would have a Collider
05:12 - that all the sudden was 1920 of you on
05:16 - Full HD units long so it would scale all
05:19 - the way out here and that's not really
05:22 - something we want so an an easy
05:25 - workaround is to use screen to world
05:29 - point and we can do this by accessing
05:33 - our camera and that will automatically
05:35 - do this calculation for us so let's type
05:39 - main can touch screen to world point I
05:45 - don't know why monodevelop didn't
05:47 - suggested there but it's completely fine
05:48 - to do it and then we're gonna open up a
05:51 - bracket and inside this one we're gonna
05:53 - type new vector3 and then open up
05:57 - another bracket and here we're gonna
05:59 - type screen that with just as we would
06:03 - did before and then we're gonna time it
06:06 - by 2 to f4 float and then we're just
06:11 - gonna do comma null F and 0 F against so
06:16 - basically we only need this number but
06:20 - it needs to be a vector 3 because that's
06:22 - how screen to world point works but we
06:25 - only need this number so that's the x
06:27 - value so we are just gonna do dot X and
06:30 - that also means that the 0 F is here
06:35 - they don't really matter the amount of
06:38 - the hosts own really
06:39 - so I just saw I was missing a
06:42 - parenthesis there so just close up the
06:45 - parentheses and then do dot X and then
06:49 - comma 1f cool and then we're gonna do
06:52 - the center so top wall dead center
06:56 - equals new vector to open up a
07:02 - parenthesis and we want this to be 0 F
07:05 - comma because we want this to be
07:08 - centered in the width and then on the
07:12 - height we again want to access the
07:15 - screen height so men cam touch screen to
07:19 - world points and this is going to be
07:24 - again a new vector3 and it's gonna be 0
07:29 - f comma screen oops
07:36 - screen dud height comma 0 F close up the
07:43 - parentheses dude why because we only
07:47 - want the the screen dot height and it's
07:51 - X Y and then Z so dud Y and then plus it
07:56 - by 0.5 F so right now you might be
08:02 - thinking okay what's going on here what
08:04 - is what and it can be really hard to
08:05 - keep track off but basically we are
08:08 - setting the center to be 0 on the x-axis
08:12 - so sorrell horizontally and vertically
08:16 - we are setting it to be just by the edge
08:21 - but the reason why we are saying plus
08:23 - 0.5 is that it will be at the edge but
08:28 - from the center of the collider
08:30 - so we're just plussing with 0.5 because
08:33 - that's half the width of the Collider or
08:37 - the height of the collider and so it
08:40 - will only just be outside the screen so
08:43 - now that this is working let's just see
08:45 - if it is so save it out and hopefully we
08:48 - don't get any errors so we don't and
08:50 - let's drag in the main camera
08:53 - and now it's time to drag in the walls
08:55 - and we need to create those first so
08:57 - let's just do ctrl shift and to create
09:01 - an empty game object again command shift
09:03 - and if you're on a Mac and let's call
09:05 - this top wall there hit the zero zero
09:13 - zero and the position that's important
09:16 - make sure all of your objects doing this
09:18 - are at zero zero zero drag it under the
09:21 - GM so if something's not working that's
09:23 - probably why and then let's hit add
09:28 - component physics 2d box Collider 2d and
09:32 - there we go and you don't need to send
09:36 - said any of these values because the
09:38 - script will do that for us but just make
09:42 - sure that it's trigger is not enabled
09:44 - now we can go ahead and duplicate this
09:47 - and rename it to bottom wall duplicate
09:51 - it again whoops that didn't register
09:54 - bottom wall duplicate it again that's
09:58 - ctrl D command D on Mac left wall and at
10:04 - last the right wall there now select the
10:11 - GM object and we can drag in first off
10:13 - the top wall then the bottom wall we
10:17 - could also store these in an array which
10:20 - is basically just a list but as long as
10:23 - it's a stationary number like this I
10:25 - wouldn't worry about it and then a right
10:27 - wall cool so now when we go ahead and
10:31 - play our game we can see I've turned on
10:35 - gizmos here just so you can see what's
10:36 - going on these are the ones that are not
10:38 - set up yet so this is the left wall
10:41 - right wall and bottom wall but up here
10:43 - we can just see barely see a line that
10:46 - is green so that's the collider and if
10:49 - we go into the scene view we can see
10:51 - that it's up here once we have the GM
10:53 - selected we can see it up here and if we
10:56 - then control click on the main camera we
10:58 - can see that it aligns just with the
11:00 - edge of the camera and basically you
11:03 - have to watch out a little bit
11:05 - when checking if it's working this way
11:08 - because if you just switch between the
11:10 - scene and game view it mice unity might
11:13 - confuse things especially with the left
11:15 - and right wall so what you want to do is
11:17 - you just want drag the game out so
11:19 - untuck it then hit play and now and then
11:24 - hopefully it will show correctly yeah
11:27 - see now it's it's all the sudden much
11:29 - longer and the main camera is only here
11:32 - so the unity doesn't know exactly how to
11:36 - display this but I promise you it does
11:39 - work I've tested aloud in many
11:41 - resolutions and the collider always
11:43 - snaps the math is right so cold this is
11:47 - working and the yeah let's just go in
11:50 - and add the other parts to this so
11:52 - that's go ahead and add the bottom wall
11:54 - the left wall and the wide wall and I'm
11:57 - just gonna copy this in here because
11:59 - it's this is a lot of values it's the
12:02 - exact same code just with by switching
12:07 - around on a few numbers and and it works
12:10 - for them all so go ahead and take a look
12:13 - at this now pause the video and write it
12:15 - down or go to Broca's calm and there you
12:19 - can download it as part of the assets
12:20 - pack so cool let's continue I'm just
12:25 - gonna assume you've written all of this
12:27 - down unless rounded off by making the
12:31 - code for our player so let me just
12:34 - quickly find my reference script here so
12:41 - there okay cool
12:43 - so I have it on my on the money to
12:44 - announce just so I don't make any errors
12:47 - awesome
12:49 - so let's first off access all player one
12:51 - and say dot position because it's his
12:54 - position we want to change and it's
12:57 - basically only the x-axis so just say
12:59 - dot X now we're gonna say that this is
13:02 - going to be equal to the main cam and
13:05 - then again our favorite functions green
13:09 - point to screen to world point there it
13:13 - is and we're gonna do new
13:17 - vector3 and we want this to be you can
13:22 - you can basically make a variable for
13:24 - this but I'm just gonna set it to a
13:26 - fixed number I'd say 75 is pretty good
13:31 - and this is just the amount of pixels
13:33 - you want the the player to be from the
13:38 - the edge so I would say 75 pixels is
13:41 - just enough and then come as 0f come as
13:45 - 0f and round off the two parentheses and
13:49 - say dot X because that's the value we
13:51 - want and now we can just round it off
13:54 - with a semicolon
13:56 - and let's just make the other player two
14:00 - so player zero two dot that x equals
14:06 - main kam dot screen to world point and
14:11 - open up new vector3 and in here we're
14:19 - gonna do screen dot width minus 75 F so
14:29 - basically if we imagine that the the
14:33 - anchor crunch starts out here over here
14:36 - on the left hand side we are moving it
14:38 - with the screened up with over to the
14:40 - other side and then subtracting 75 so it
14:42 - will be about here so now that we have
14:45 - subtracted the 75 we can just say 0 F 0
14:48 - F close off the 2 and say dot X because
14:53 - that's the value we want and rounded off
14:55 - so now when we hit save everything
14:58 - should be working we can head into unity
15:01 - and we have errors yay let's see what
15:04 - does s have I'd said oh I think I've
15:08 - typed something wrong yeah these are
15:11 - seen cam I want to change these two main
15:14 - cam that's just
15:15 - I called them seen came for some reason
15:19 - the last time I desist so main campaign
15:21 - campaign cam minkum there we go
15:25 - now we can go ahead and hit play and
15:29 - some more errors
15:30 - okay yeah we need to assign the players
15:34 - of course so now we can head over and
15:36 - select our GM object we can drag in our
15:40 - player that's renamed this guide to
15:41 - player zero one and we can go ahead and
15:46 - duplicate him rename him to zero two and
15:50 - let's just drag him over here just to
15:54 - position him about where he's gonna be I
15:57 - mean our script is gonna do this for us
16:00 - but just so we know like how it would
16:03 - would go and then let's change his
16:06 - controls from move up on W to the right
16:11 - to using the arrow key so let's see if
16:15 - we can find the arrow key so up arrow
16:17 - for up and move down that's gonna be
16:20 - down arrow let's see if we can find it
16:24 - here that is down arrow so now they have
16:27 - different key bindings what would have
16:30 - actually been a good idea was to make a
16:33 - prefab out of those yeah okay what the
16:36 - hell let's just do it so let's drag this
16:38 - guy down player one duplicate him move
16:41 - him over player two and change the
16:48 - change the key bindings here
16:51 - yeah I'm sorry it's a great idea to make
16:54 - prefab out of these kind of things
16:55 - because it's just gonna save you trouble
16:58 - later on when you've made a modification
16:59 - and all the sudden you realize that you
17:02 - are you're the players still way back so
17:06 - move down and now we are ready to assign
17:09 - them to the GM so player one drag that
17:12 - in there play it to dragging them there
17:15 - hit play and now when we go into the
17:19 - scene we can see the beautiful green
17:20 - lines here we can select it and we can
17:23 - see it's made a triangle around and also
17:25 - you will notice that our player has now
17:28 - snapped to the position and the cool
17:32 - thing is that if we now resize the game
17:34 - view it will change in real time and
17:37 - adjust itself accordingly and mmm
17:41 - and this is just a fancy feature too
17:44 - how it's working we can still move up
17:46 - and down moving out up and down with the
17:48 - other player so all of this is moving or
17:51 - working and what we can do now is we can
17:54 - simply go back to the script and change
17:56 - this to function stats so that the code
17:59 - will only be called once because there's
18:02 - really no reason to to update this
18:05 - unless you know the screen size would
18:07 - change and I don't know why it would do
18:09 - that so that was basically it for this
18:11 - video thank you for watching and I'll
18:13 - see you in the next one
18:15 - [Music]