00:00 - [Music]
00:03 - hello everyone and welcome to the 12th
00:06 - video in our Survival game series done
00:09 - by Braes I am the CEO of brais and today
00:12 - we are going to take a look at something
00:14 - a lot of you have requested enemy AI so
00:19 - scripting
00:21 - enemies this is a very difficult subject
00:24 - and it's also difficult for me to
00:27 - explain um it can be very cryptic and
00:30 - and um there can be a lot of different
00:33 - aspects to it that you have to customize
00:35 - to whatever kind of game you're making
00:37 - but I think I have come up with
00:40 - something that works pretty well and uh
00:43 - something that is pretty somewhat easy
00:45 - to explain and understand for you guys
00:49 - um I have decided to split it up into
00:52 - two parts though the part that this
00:54 - video is going to be uh showing is the
00:57 - simple AI scripting this is the script
00:59 - with we going to be
01:01 - making and um I've uh written it out
01:04 - beforehand just to make sure that I
01:06 - don't make any errors but this is what
01:09 - we're going to be making today and I'm
01:11 - going to explain everything and I
01:13 - definitely do not um expect you to
01:16 - understand everything in this script it
01:18 - is
01:19 - hard then we have the AI script this is
01:23 - a lot more advanced um no not a lot more
01:27 - advanced but it takes care of stuff like
01:30 - physic interaction and um also some um
01:35 - logic with the um Enemy being attacked
01:38 - he will get more angry and uh therefore
01:42 - Chase uh you the player more persistent
01:46 - so um there are some pretty cool aspects
01:48 - to this though I won't include it in
01:50 - this tutorial because I think it's too
01:52 - early for you guys to um to learn yet um
01:56 - so um but I will include it in the
01:59 - assets pack though which you can go
02:01 - ahead and download from our website so
02:03 - let's go ahead and make a new window
02:04 - here so I can quickly show you where you
02:07 - can get them because people have asked
02:09 - me over and over so if you go ahead and
02:13 - open up your browser and type in bra.com
02:15 - you'll get to our website and the second
02:19 - Banner here the unity tutorials just
02:21 - click that and you can just download the
02:24 - assets here it will be in a raw file and
02:27 - I will include both of these even though
02:30 - I will only show you this one all right
02:33 - so let's get started that was a long
02:37 - intro okay so as always I've to opened
02:39 - up unity and uh today we are going to
02:42 - take a look at this guy before we get
02:45 - into that I want to make one quick
02:47 - adjustment to our player um because our
02:51 - player currently he's a little short
02:55 - compared to a human being so I want to
02:58 - make him longer
03:00 - and instead of just scaling him in the
03:04 - Y um I want to uh scale the different
03:08 - parts separately else we are going to
03:10 - scale everything that is pounded to it
03:13 - which means weapons armor and things
03:16 - will start looking weird so um if you're
03:18 - still using this default um do as I tell
03:22 - you're here so first of all in the
03:24 - character controller the collider here
03:26 - I'm going to change the height from two
03:28 - to three that's a little more
03:30 - realistic so you can see it's now taller
03:34 - and uh if we go ahead and open up the
03:36 - player and go on the graphics let's make
03:40 - sure that we can see this change in the
03:42 - graphics also so we can go ahead and
03:45 - scale the graphics up to something like
03:49 - 0.75 and now you can see that the
03:52 - colliders and the collider and the
03:54 - graphics match up and at last I want to
03:57 - move the main camera
04:00 - up there we go so if we go into the game
04:04 - view you can see our character is now a
04:07 - lot looking a lot better and I can see
04:10 - I've made a little error in the
04:14 - positioning of this camera you're going
04:17 - to have to play around with this um
04:19 - looks like I have to drag it
04:22 - down yeah that looks better okay so um
04:26 - for now our enemy is really short um
04:28 - this won't matter in um in what we're
04:31 - doing here but of course you can just go
04:33 - ahead and scale him up all right so
04:36 - let's create the script the enemy script
04:40 - so uh for now it's going to be in a
04:42 - separate script from the enemy logic and
04:45 - uh I just want to go ahead and rename
04:47 - the enemy logic so click it and you will
04:49 - thereby open it automatically in the
04:51 - project and um you can go ahead and
04:54 - right click rename and just click the
04:56 - name and I'm going to call this um
05:00 - Health enemy
05:05 - health because that is not all the logic
05:08 - okay so again click the player click add
05:11 - component new script and we're going to
05:13 - call
05:14 - this H uh AI
05:18 - simple create an ad double click it to
05:22 - open it up in mono develop this video
05:25 - might be split up into separate uh even
05:28 - more parts um I'll see if that is
05:31 - necessary depends on how long this is
05:33 - going to take I really want to do go in
05:36 - depth with this because I think most of
05:38 - the tutorials out there just give you a
05:41 - non-complete script and doesn't even
05:43 - explain propably properly um how it
05:47 - functions no offense to anyone there are
05:49 - good tutorials too all right so uh let's
05:52 - start by by making a variable and this
05:56 - variable is going to be called distance
06:00 - and you can just go ahead and make a
06:03 - semicolon right after know what I'll
06:06 - make it capitalized so and this is
06:10 - because the type is something we are
06:12 - going to declare
06:15 - later so U let's make another one this
06:18 - is going to be the
06:20 - target what we are going to be chasing
06:23 - in this case the play and this is going
06:25 - to be a
06:27 - transform then we are going to create
06:29 - another variable and we're going to call
06:32 - this look at distance so look
06:36 - at
06:38 - distance and it's going to be I would
06:41 - say equals
06:45 - 15.0 seems like a good number now you
06:48 - know what let's make this even bigger
06:50 - let's make it
06:53 - 25.0 um I did some testing earlier and
06:56 - that turned out to be pretty good of a
06:58 - value a new Val varable attacks
07:01 - range and this is going to be equal to
07:06 - 15.0 and yet another one call this move
07:11 - speed and this is going to be
07:15 - 5.0 and last one this is going to be
07:20 - damping and this is going to be equal to
07:23 - six
07:25 - poo all right so um quite a few
07:28 - variables I know trust me
07:32 - um I'll just explain what the individual
07:35 - indidual variables are going to do for
07:37 - us as we come along so I just wanted to
07:40 - write everything out so you can see what
07:42 - we're going to
07:43 - use now let's create the update function
07:47 - I went ahead and deleted it but um we
07:50 - can always just make it again so
07:52 - function update then the two semicolons
07:56 - and the bracket
07:57 - Keys okay so now now we're going to type
08:02 - distance equals V vector vector vector
08:08 - 3.
08:11 - distance open a semic Cod no uh a
08:15 - parentheses and um I think I made that
08:18 - mistake before too I'm sorry about that
08:22 - Target dot position comma
08:27 - transform Dot
08:31 - position okay so basically what we're
08:33 - doing here is we are making the distance
08:36 - a line we're making uh we're making it
08:39 - so the variable distance is what's
08:42 - called a vector 3 and a vector 3 is a
08:45 - line in 3D
08:47 - space and if you have ever had some more
08:52 - advanced mathematics you have used it
08:54 - there too so um basically vectors you
08:59 - use for line calculation in a 3D space
09:03 - and so we want to draw the line between
09:05 - the target
09:07 - position the one we're chasing after and
09:10 - our position and so we can measure the
09:13 - distance from us uh or sorry from the um
09:17 - the enemy to what it's chasing in this
09:20 - case
09:21 - s all right so
09:24 - um I've made
09:27 - some spaces and uh let's go ahead and
09:31 - type
09:32 - if
09:35 - distance is smaller than
09:39 - look at
09:44 - distance
09:48 - brackets renderer do
09:51 - material do
09:53 - color equals color do yellow
10:00 - right so what we're doing here is we're
10:02 - simply saying that we're simply making a
10:05 - um a vector so we are measuring the
10:08 - distance between the enemy and us and we
10:12 - are seeing if this distance is smaller
10:15 - than the variable look at
10:18 - distance if it
10:20 - is we want
10:23 - the enemy to shift its color to
10:28 - Yellow all
10:30 - right so let's
10:32 - continue now we'll
10:36 - write
10:37 - if oh sorry I missed something no um
10:41 - before we close off the if statement
10:44 - completely um we'll write one more thing
10:47 - in here we'll call a function we'll call
10:50 - the function look
10:53 - at so what we're doing now with this is
10:57 - if statement we changing its material to
11:00 - see what state it it's in this is just a
11:03 - help for us so we can see whether or not
11:06 - it's just looking at us frightened by us
11:09 - or it's chasing us or it's completely um
11:13 - ignoring us so if the distance is
11:18 - smaller than the look at distance it
11:20 - won't be ignoring us we want the enemy
11:24 - to start looking at us it has now
11:27 - detected that we are nearby and we want
11:29 - it to notice us so it will rotate to us
11:34 - so look let's go ahead and make the
11:37 - function that will make that happen so
11:41 - you can see how we are calling a
11:42 - function let's make that function
11:45 - function look at and this is of course
11:48 - outside of the update
11:51 - brackets open and close
11:55 - parentheses open and close brackets and
11:57 - inside those brackets we want to make
12:00 - this we want to type V
12:05 - rotation
12:07 - equals
12:09 - querian and Quan is uh quite a
12:13 - frightening word it's not as complicated
12:16 - as it sounds it's basically
12:19 - rotation not not all the time but um for
12:24 - this it's basically rotation do look
12:27 - rotation
12:33 - target. minus
12:36 - transform
12:40 - Doos close the parenthesis and end up
12:43 - with a
12:44 - semicolon so this is going to be
12:47 - creating a new variable called rotation
12:51 - which is going to store the Quan DOL
12:55 - rotation target. position minus
12:58 - transform do
13:01 - position I know this
13:04 - sounds quite a lot and I won't be
13:06 - explaining this too much as it's a
13:09 - little too hard to understand for some
13:12 - at this point and that's all right I
13:15 - sure didn't understand this when I was
13:17 - um when I had watched only 11 videos
13:20 - assuming that I'm the only person you
13:24 - watch on
13:25 - YouTube but anyway um so
13:29 - that will store a
13:31 - rotation and now we want to type
13:33 - transform. rotation equals
13:35 - Quan do
13:38 - slope
13:40 - transform.
13:44 - rotation
13:46 - rotation comma rotate the variable we
13:50 - have just no rotation again the variable
13:55 - we just
13:56 - created comma time
13:59 - dot Delta
14:01 - time space times
14:05 - damping the variable we created earlier
14:09 - called
14:10 - damping all right so let me try to
14:13 - explain this line to
14:16 - you we want our current
14:19 - rotation and by r i mean the uh enemies
14:23 - so transform. rotation because this
14:27 - script is attached to the enemy that
14:29 - will be the enemy's
14:31 - rotation is now equal
14:34 - to quion do
14:38 - slope Quan do slope will slowly
14:43 - turn when we apply the
14:45 - damping so this means that we want to
14:49 - shift from the transform do rotation our
14:53 - rotation or the current rotation of the
14:55 - enemy I should say to
15:00 - pointing towards
15:02 - us and it should do this in the tempo of
15:06 - time the Delta time times
15:09 - damping damping is a value made by us
15:15 - and it will basically smooth out the um
15:21 - smooth the animation or the uh movement
15:25 - the
15:26 - rotation of the enemy and time. Delta
15:30 - time that's just going to make sure that
15:32 - no matter how many frames you're running
15:34 - at um the rotation is always going to be
15:38 - the
15:39 - same so this basically
15:43 - rotates the enemy towards
15:47 - us as smoothened as you would like it to
15:51 - be based on the rotation we got right
15:55 - before with this
15:57 - line
15:59 - okay so now let's go back into the
16:01 - function update and let's type
16:05 - if
16:08 - distance is greater
16:12 - than that should be
16:14 - capitalized is greater
16:17 - than Lo at
16:21 - distance so now the enemy
16:27 - is
16:29 - a longer distance from us than the look
16:32 - at
16:34 - distance that means that we want him
16:36 - want him to ignore us so the renderer oh
16:41 - typ out the
16:43 - renderer
16:45 - material do
16:47 - color should now be be equal
16:51 - to the color
16:57 - green
16:59 - all right so now we have two
17:03 - instances either the enemy is within the
17:07 - range no sorry um the enemy's Target is
17:10 - within the range that we have set and
17:13 - then it will be looking at it or it's
17:17 - not within the range and it will be
17:21 - ignoring with the color
17:26 - green I'll just space out this a little
17:29 - more and let's create yes another if
17:32 - statement so now we're going to be
17:34 - typing
17:37 - if the
17:41 - distance is smaller
17:43 - than attack
17:46 - range again the variable we created
17:49 - earlier then we want something to
17:52 - happen and again I've stored this in a
17:56 - function and I've called it
18:06 - attack all right so close it out with
18:08 - the
18:10 - semicolon and we also want it to change
18:12 - color of course so let's go ahead and
18:15 - write just above that renderer do
18:21 - material do color you can almost guess
18:25 - it by now equals color
18:29 - color dot red now he's aggressive now he
18:35 - wanted kill us so
18:39 - um let's end up by um making the attack
18:43 - function all right so type function
18:49 - attack the
18:52 - parenthesis the two brackets and inside
18:55 - them we're going to type
18:57 - transform do
19:01 - translate open parenthesis Vector
19:05 - 3 again the line
19:09 - forward this time we just using the
19:11 - vector 3 as a
19:14 - direction times move
19:18 - speed times Delta time and remember
19:23 - time. Delta time is only there to make
19:27 - sure
19:30 - that frame rates doesn't affect
19:35 - anything all right so um what we are we
19:39 - have Happening Here is now we have our
19:42 - transform. translate Vector 3. forward
19:44 - time move speed time Delta time this
19:48 - means that the current
19:51 - transform is going
19:53 - to um is going to be affected by these
19:57 - so we want the enemy to move forward
20:02 - Vector 3. forward by the move speed that
20:06 - we have set and not be affected by frame
20:10 - rate let's go ahead and see if we have
20:13 - any errors I can see we
20:16 - have oh so I forgot to close out out
20:20 - close it off with a
20:21 - parenthesis so I'll just make that right
20:24 - before the semicolon and we have more
20:27 - errors
20:30 - okay so I found out what was making our
20:33 - errors and um if we go ahead and head
20:36 - back to the script I forgot to delete
20:39 - out the prma
20:41 - strict so that should fix most of most
20:44 - of it but we have one left and that's
20:46 - because I typed render not render R so
20:50 - now that that is fixed fixed let's go
20:53 - ahead and go back into unity and try out
20:57 - our game
21:00 - oh of
21:02 - course we have to assign the uh Target
21:06 - variable so we are going to drag our
21:09 - player into the target variable slot
21:13 - under the AI simple
21:15 - scripts let's also go ahead and move
21:20 - away the enemy let move him over there
21:24 - now we have some space space to go on so
21:28 - as you can see first of all um it
21:31 - changes the Shader so that he now looks
21:35 - green and uh when we get
21:39 - closer he'll shift to a yellow color and
21:43 - when we get and and now he's looking at
21:45 - us and when we get even closer he'll
21:49 - turn red and he will start chasing us so
21:52 - this is the most basic AI you could just
21:57 - make a simple if statement if you're a
21:59 - little impatient that when the distance
22:02 - is um lower than um hit a a hit variable
22:08 - that could be like about three then he
22:11 - should call out a damaging function on
22:14 - the player or just destroy the player
22:16 - but um we'll definitely be covering that
22:19 - in future tutorials let me just go ahead
22:22 - and quickly demonstrate the diff
22:24 - difference between this script and the
22:27 - more advanced
22:28 - in the more advanced stuff like this is
22:30 - fixed um so if I can just run a little
22:35 - faster oh see he can't fly that's that's
22:39 - one thing for sure and also um he can't
22:42 - go through walls you can see him here
22:44 - clipping through walls and if I was fast
22:47 - enough to actually um run past him I
22:52 - would also be able to show you him going
22:54 - directly through any kind of wall or ter
22:58 - which also means that he can be lost
23:00 - inside the terrain and uh you definitely
23:04 - do not want that to happen in a in
23:07 - a future game that you're going to put
23:10 - out um it's one thing I didn't want to
23:12 - code in the uh kill pill game we made um
23:16 - I was a little lazy there but okay so I
23:19 - just want to tweak the variables um so
23:22 - I'm going to TW the look at distance to
23:24 - 25 the attack range to 15 and then move
23:28 - speed is maybe a little dramatic but
23:30 - we'll start with this and then go ahead
23:32 - and try to play it
23:35 - again and there he noticed me that's a
23:39 - pretty good distance and there he goes
23:41 - to attack me yeah that was AI scripting
23:45 - I hope you enjoyed it and um I'll see
23:48 - you in the next
23:50 - [Music]
23:56 - video
23:59 - oh