00:00 - hello everyone welcome to this video
00:01 - this is a live stream tutorial on
00:03 - creating a replica of Ryder the pretty
00:06 - popular mobile game and this is what
00:09 - it's going to look like this is my
00:11 - recreation inside of unity if I go ahead
00:13 - and hit play here you can see that we
00:15 - have this small car and that if we hold
00:18 - down our mouse button we can move him
00:20 - and if we hold down our mouse button
00:22 - while in the air we can rotate him so we
00:25 - have to make sure that we always land on
00:27 - our wheels and that we kind of go
00:29 - through this course and of course you
00:30 - can add points for doing it quickly
00:32 - there you go I I messed up and that
00:34 - would mean that we had to restart you
00:37 - can add points for doing multiple flips
00:38 - for creating perfect landings if you
00:41 - land flat on a surface and you can
00:43 - create all kinds of different surfaces
00:44 - and the way that I have this set up is
00:47 - using a Bezier curve Collider so we can
00:49 - actually really easily insert the editor
00:52 - sculpt our level using this Bezier curve
00:55 - editor and I'm going to show you how to
00:56 - set that up using a simple extension
00:59 - that I've modified a bit to suit this
01:02 - tutorial and also of course we have some
01:05 - neon on the lines here which is a pretty
01:07 - cool effect and finally we have the
01:09 - camera and car controllers so that's
01:11 - basically this stuff that makes up this
01:13 - game and I really do encourage you to
01:15 - add a bunch of more stuff to it the if
01:19 - you want some inspiration as to what you
01:21 - can go ahead and add to this tutorial I
01:23 - suggest checking out the rider app as
01:25 - you see here it's on the iOS and Android
01:28 - stores so that's pretty much it and
01:31 - without further ado let's jump into the
01:34 - video so let's start by creating a new
01:35 - project here so click file new project
01:38 - and let's go ahead and call this 2d and
01:43 - let's go ahead and call it Rider and
01:46 - let's hit actually write a replica it's
01:49 - probably better and then that's it
01:51 - create project and I've had some issues
01:53 - recently with unity not really wanting
01:55 - to start in certain occasions hopefully
01:58 - it's not going to do that now but if it
02:01 - is that's just fine
02:03 - meanwhile I can say that this video is
02:06 - also going to be uploaded to YouTube to
02:08 - those of you guys watching on stream if
02:10 - you have to lose leave during the stream
02:12 - that's okay don't
02:13 - we will also upload it to YouTube
02:15 - afterwards and you should be able to
02:16 - download the entire project along with
02:18 - all the stuff that I'm using on github
02:20 - there will be a link to that in the
02:21 - description of the YouTube video but it
02:24 - looks like unity is going to behave this
02:26 - time so that's awesome the first thing
02:28 - that we can go ahead and do is maybe
02:30 - change the background color of our main
02:32 - camera to a more darker is saturated or
02:35 - at least a more saturated blue and what
02:38 - I really want to do here is set it up to
02:40 - use post-processing effects right away
02:43 - because I want to get that cool glowy
02:45 - retro look and one of the ways to
02:48 - achieve that is using post-processing
02:50 - effects in other ways color correction I
02:53 - want to get it vignette I want to modify
02:56 - our colors a tiny bit and finally I want
02:59 - to get that cool glow so I think I'm
03:01 - going to do that right away so that we
03:03 - can see that kind of working and then we
03:06 - can set up all the other stuff
03:07 - afterwards so first let's go ahead and
03:09 - save this scene here let's save it as
03:12 - just main for now and we can maybe
03:14 - right-click and go in and create a tiny
03:18 - sprite here and we are just gonna select
03:21 - a default UI sprite just so we have
03:23 - something here that we can color correct
03:26 - based on now we can go to the asset
03:28 - store and we can download an asset
03:31 - called the post-processing stack so
03:34 - we'll search for post-processing and we
03:37 - should see it here it's created by unity
03:39 - themselves we'll just go ahead and hit
03:43 - import once it loads here and this will
03:46 - allow us to add all kinds of
03:47 - post-processing effects like bloom like
03:51 - color correction and color grading
03:54 - motion blur vignettes all that good
03:57 - stuff
03:57 - we just want to get this in right away
04:00 - so that we can kind of find tweak the
04:03 - visuals of our game with these settings
04:05 - already applied I feel that works better
04:07 - for a game like this so we'll just wait
04:10 - it wait for it to loading all the
04:12 - unnecessary assets I mean while I'll
04:17 - have a look at the chat here to see how
04:20 - people are doing people are hyped
04:24 - that's awesome welcome to all the people
04:29 - who just joined and yeah so now we have
04:31 - our post processing stack in here and
04:33 - what we want to do is select our main
04:34 - camera we want to change the projection
04:36 - size here to something like 7 just to
04:38 - zoom out a little bit and we can go
04:41 - ahead now and add a new component and
04:43 - this is going to be the post processing
04:45 - behavior now we need a profile in other
04:48 - words these settings for our color
04:50 - correct and we need to create this in
04:52 - the project by going create post
04:54 - processing profile and we'll call this
04:55 - CC for color correction then we can
04:58 - select our main camera and drag in our
05:00 - CC object and now we can go ahead and
05:05 - add first of all a vignette there we go
05:09 - maybe decrease the intensity on that a
05:12 - bit we can also add some color grading
05:15 - and here I wanted to select from the
05:16 - tone mapper the filmic aces look I
05:19 - really like this look but it does mean
05:21 - that we have to brighten up things quite
05:23 - a bit and this is actually also the
05:24 - color grading that Unreal uses so yeah
05:27 - it's it's pretty popular in a game dev
05:30 - circles so I'll just brighten up the
05:32 - background a tiny bit there and I feel
05:34 - it gives this really saturated contrast
05:36 - a look that I really like especially for
05:39 - this style so now that we have our color
05:41 - grading in place we can maybe also bump
05:43 - up the exposure a tiny bit I'm gonna put
05:45 - it to 0.5 I feel that bumping up the
05:48 - exposure a bit makes everything look
05:50 - just a tiny bit cooler but it also means
05:53 - that you do have to go back and adjust a
05:55 - background color if your camera so now I
05:57 - feel that this is looking kind of decent
06:00 - we can also go ahead and turn on some
06:02 - motion blur but I don't want to
06:03 - exaggerate this I'm gonna put it to look
06:05 - something like 2:30 on the shorty angle
06:07 - not to play everything out too much and
06:09 - I think that's pretty much all the
06:11 - settings that we're going to set in here
06:13 - you could also go ahead and add some
06:14 - bloom this way but I'm gonna show you a
06:17 - way of creating our glow that gives you
06:20 - much more control than the default built
06:22 - in bloom here so now we can save this
06:24 - and we can go ahead and delete our new
06:26 - sprite instead we want to start creating
06:29 - some lines and again to do this we are
06:33 - going to be using an editor extension
06:37 - just two very simple scripts one that
06:40 - you applied to the object and one that
06:42 - makes it editable through the unity
06:44 - editor and these are actually taken from
06:47 - an old post from the Bronchos forum and
06:50 - let me just see if I can find that post
06:53 - here I actually don't have a link ready
06:56 - which I really should I've had here
06:59 - Bezier curve line let me just see if I
07:03 - can find this unity ah there's your
07:08 - curve Collider sorry I should really
07:12 - have had this ready here a set of custom
07:16 - colliders for unity here custom 2d
07:20 - colliders it's by guy quad and he
07:23 - created this a couple of years ago and
07:24 - posted it on the brackets forum and it
07:27 - includes custom colliders for both
07:29 - Bezier curve colliders but also a bunch
07:31 - of other shapes and they are really
07:33 - really cool I did have to go in and
07:35 - update them a tiny bit to not spit out
07:37 - warnings and also to make them edit a
07:40 - line renderer so they are actually
07:42 - visible so they're not only colliders
07:44 - but actually render lines and also to
07:47 - make them movable inside of the unity
07:51 - editor so I have created I've taken this
07:54 - updated version and I've uploaded it so
07:57 - I'm gonna post a link right now to the
08:00 - stream here if you want to use it and
08:02 - I'm also of course going to have a link
08:05 - for this in the description of the video
08:08 - and I've of course downloaded this
08:11 - already it's called the Bezier curve
08:13 - lines unity package and if we just take
08:15 - this now and drag it into unity we can
08:19 - see that I have two scripts one for the
08:21 - Bezier curve Collider and one for the
08:23 - Bezier curve Collider editor there's
08:26 - also a license here but it basically
08:27 - just says that it's free to use but if
08:30 - you want to redistribute it you have to
08:31 - include this license as I've done here
08:33 - so you can use it in any way also
08:36 - commercially that's totally fine you can
08:38 - use this in your games and then sell
08:40 - them that's totally okay so now if we go
08:44 - ahead and right-click and create an
08:46 - empty object and we can call this our
08:48 - line
08:50 - actually that's called line segment and
08:52 - now we can hit add component and we can
08:57 - go under physics 2d scroll to the bottom
08:59 - and select the Bezier curve Collider 2d
09:02 - and there we go it actually draws a line
09:05 - it's currently very ugly line as well as
09:08 - a Collider inside it here that's just a
09:10 - fancy edge Collider and we can now edit
09:12 - this inside of the editor so let's go
09:15 - ahead and drag this start point here
09:17 - over here we can maybe on make it look
09:21 - something like this we can go ahead and
09:23 - add a knotty point to do that we go
09:26 - under the Bezier curve Collider 2d and
09:28 - hit add point in order to create another
09:31 - point here we can kind of smooth it out
09:33 - so it doesn't look quite as ugly let's
09:35 - create another point again and we can
09:38 - actually go through and create as many
09:40 - points here as we'd like but I'm just
09:43 - gonna create a fairly simple terrain
09:47 - here that we can drive along and I
09:50 - definitely recommend you to spend much
09:52 - more time on it than I do here I just
09:54 - want to show you the basics of how this
09:56 - works so now that we've created this
09:59 - line we probably want to make it look a
10:02 - bit better this weird purple line isn't
10:07 - really cool so what we can do is
10:10 - actually go into a line render and
10:12 - configure it I also probably want to
10:14 - bump up the smoothness of our line here
10:16 - you can see if I decrease this it's very
10:19 - clear that it's made of segments and if
10:22 - I increase it it becomes smoother and
10:23 - smoother I've found that a pretty good
10:25 - point it's about around 20 that makes
10:28 - everything look fairly smooth and also
10:30 - makes the collision handle fairly
10:32 - smoothly so now we can go inside of our
10:36 - line renderer and here I first want to
10:38 - decrease the width to something like
10:41 - 0.15 I think that's a pretty good width
10:44 - for the line that we want and I also
10:47 - want to smooth out the endings of this
10:49 - line here I think that looks better it's
10:51 - not actually something they do in the
10:53 - game but I think it's better if we go
10:55 - ahead and put endcap versat vertices
10:57 - here to about three to create that kind
11:00 - of smooth out ending of
11:02 - I think yes a matter of personal
11:04 - preference but I just kind of like that
11:06 - and finally we need to go ahead and add
11:09 - a custom material to our line so we'll
11:12 - go into a project right click go
11:14 - material and we'll call this our line
11:17 - and we can make a purple line first and
11:20 - of course we need to choose a shader and
11:24 - normally four lines like this you might
11:26 - maybe use an unlit shader or a sprite
11:29 - shader but these don't really glow so
11:34 - how do we add glowing to our line well
11:38 - the answer is using another custom
11:41 - extension and this one is called MK glow
11:45 - free I'm of course also going to have a
11:50 - link for this in the description as well
11:53 - as throw a link to it in the chat so
11:56 - there you go and this is a totally free
11:59 - asset in fact it's a free version of a
12:01 - paid asset that has more features but I
12:04 - haven't personally run into anything
12:08 - where I needed the pro version just yet
12:10 - so feel free to download this for free
12:12 - of the asset store and that's exactly
12:14 - what we are going to do we are going to
12:15 - search for MK glow free and it should
12:19 - pop up right here and we just want to go
12:23 - ahead and import that into unity and
12:25 - this will basically allow us to create
12:27 - materials that glow that's pretty much
12:31 - all we're doing here so let's hit import
12:33 - I will wait for everything to load into
12:36 - unity meanwhile I'll just have a look in
12:38 - the chat here and yeah we'll all be over
12:42 - 300 viewers that's awesome so happy you
12:46 - guys are joining in this tutorial today
12:48 - is pretty fun it's always nice to get to
12:51 - play with our clothes and especially
12:54 - Bezier curve editors that's just
12:56 - something really cool about them so
12:58 - awesome that you guys are joining in I
13:00 - hope you are loving this stream so far
13:03 - and I'm definitely looking forward to
13:06 - answering some questions later so I hope
13:07 - you guys are too and you have people are
13:11 - are going nuts in the in the chat that's
13:13 - awesome
13:14 - but it looks like it's loaded in here
13:17 - and all we need to do is go under m'kay
13:21 - now you see here we can go onto m'kay go
13:23 - free and they've actually gone ahead and
13:25 - included a demo scene so you can
13:27 - definitely open this up and have a look
13:29 - at how everything is working they
13:31 - demonstrate a few different examples of
13:34 - these shaders but this is actually
13:36 - applied to 3d objects and we only want
13:38 - to apply to a simple two-dimensional
13:40 - line so our use case is actually much
13:43 - much simpler what we want to do if we go
13:46 - back here is first of all go to our main
13:49 - camera and add the MK glow free script
13:53 - and this does have a custom icon but it
13:56 - is basically just like any other
13:58 - component and here we can go ahead and
14:01 - choose what we want to glow we can
14:04 - change the glow type from fullscreen if
14:06 - you want the entire screen to glow we're
14:09 - selective if we only want a certain
14:11 - layer to glow which we do and we only
14:14 - want lines to glow so let's go ahead and
14:17 - add a new layer here and let's call this
14:20 - the lines layer let's then select online
14:23 - SEP segments and add it to that layer
14:25 - now we can go on to our main camera and
14:27 - on the glow layer will select nothing to
14:30 - deselect everything and then make sure
14:32 - to only select our lines layer you will
14:35 - also see that this doesn't make our line
14:37 - our glow right away and that's because
14:40 - we need to add a glow material to this
14:43 - line luckily we've already created the
14:45 - material we just need to go in here and
14:47 - select the right shader and the right
14:49 - shader is under MK glow selective and
14:52 - here we can now choose all the different
14:55 - shaders that allow us to create this
14:57 - selective glow effect and what you want
15:00 - to choose is coming going to completely
15:02 - depend on what you want to glow and how
15:04 - many settings you want I have found that
15:06 - sprites and then default works pretty
15:10 - well however we do need to include a
15:12 - glow texture for this to show up you can
15:15 - see if we're going to like to check a
15:16 - texture here it's actually not glowing
15:20 - yet and that's because of course we also
15:23 - okay let me just select none here we
15:25 - need to also make reference
15:28 - make sure to insert this material into
15:31 - our line segment so let's select our
15:32 - line segment let's go under materials
15:34 - and drag in our line purple there we go
15:37 - but you can see it's still not glowing
15:39 - and that's because we actually need to
15:40 - use a glow texture
15:42 - if I hit select here you can see if I
15:44 - choose one of these textures in my
15:47 - project it starts to work and it's going
15:49 - to mimic the different colors that are
15:51 - seen in this texture so you can actually
15:53 - create really cool and advanced glow
15:57 - effects using this texture but we just
16:00 - want a uniform glow and we want to be
16:03 - able to just simply tint it using the
16:05 - tint and color glow bearable so instead
16:08 - of using a custom texture let's just use
16:12 - a completely white texture and to do
16:16 - that we'll go into Photoshop and we'll
16:19 - create a simple white 2x2 squared let's
16:22 - all we need just a completely white
16:24 - block so let's go file new and here
16:28 - we'll just create a very simple let's
16:30 - make it 16 by 16 white background hit
16:33 - create and there we go let's that's all
16:36 - we need to have here we can then save
16:38 - this so save as and you can of course
16:41 - just search for this just white square
16:44 - you could also make it in any other
16:46 - program or you could download my project
16:48 - if you don't know how to get a white
16:50 - square yeah it's all you need so now we
16:52 - go to desktop projects and let's search
16:55 - for our project here we called it writer
16:58 - replica let's put this as white inside
17:03 - of the assets folder and yes you can't
17:06 - just save Photoshop files directly into
17:08 - unity and they will appear so there we
17:10 - go we have our white square and now if
17:12 - we go and select online purple material
17:14 - drag in our white square you can see
17:17 - that our entire line close up yay so now
17:22 - we can select a tint here I'm going to
17:24 - select kind of a purple tint and I'm
17:27 - going to tint it just a tiny bit and
17:29 - this is the actual line part however
17:33 - it's not currently really showing is it
17:38 - that's that's okay we can just go ahead
17:40 - and select a glow call
17:42 - and change this to a purple and drag
17:44 - that over and you can now see that we
17:46 - can make online color or our line glow
17:50 - with a specific color we can also
17:51 - control the power of that color in here
17:54 - if you want to control it for individual
17:56 - segments and you have a bunch of other
17:58 - settings if you're using a texture okay
18:01 - so now that we have adjusted our glow
18:03 - color we can adjust how we want our line
18:06 - to cooler separately and this is the
18:08 - primary reason why I wanted to use this
18:10 - shader instead of just applying a bloom
18:12 - to a colored line
18:14 - that's because applying a bloom doesn't
18:18 - necessarily allow us to control
18:20 - individually the color of a line and the
18:22 - color of our glow but here you can see I
18:24 - can actually tint my line completely
18:27 - white and then still have the glow so
18:30 - I'm just gonna have it almost white just
18:32 - a tiny bit of purple here so it's still
18:34 - really bright and I think that looks
18:37 - pretty cool I'm also going to go into my
18:39 - camera and for all of the line segments
18:42 - so under the MK glow free component I'm
18:46 - going to go ahead and maybe bump down
18:48 - the glow a bit so samples and iterations
18:50 - is just fine but I am going to go ahead
18:52 - and bump down the intensity a bit and
18:55 - you can definitely also play around with
18:57 - the spray here until you get something
18:58 - or the spread until you get something
19:01 - that you think looks nice so I think
19:02 - that looks pretty good and we'll just
19:04 - leave it as it's cool so now we've
19:08 - created a glowing line segment that we
19:10 - can edit inside of our editor let's go
19:13 - ahead and maybe just create another
19:15 - quick line segment here just to show you
19:17 - how easy it is so let's duplicate our
19:18 - current line segment let's go ahead and
19:21 - move this one over and let's go ahead
19:24 - and inside of our Bezier curve Collider
19:28 - here we'll hit reset oops something is
19:33 - happening here that we do not want to
19:35 - happen I think maybe the reason why is
19:38 - yeah okay so whenever we are moving line
19:41 - segments like this we actually want to
19:44 - go into our line render and make sure to
19:46 - disable use world space that will make
19:49 - it follow around our object locally so
19:52 - we can easily move them that's something
19:54 - I actually
19:55 - forgot to add to the to the extension to
20:00 - do that automatically so just make sure
20:02 - to do that manually I might go ahead and
20:04 - edit the extension before this it gets
20:06 - uploaded to YouTube so to the people of
20:09 - downloading this will automatically be
20:11 - set to false because of course we wanted
20:14 - to follow around our object here so now
20:17 - we can go ahead and maybe adjust this to
20:19 - suit the other one I'm actually going to
20:21 - quickly remove a few points here and
20:24 - just have this be a very tiny little
20:26 - segment and let's have it point kind of
20:29 - upwards like in my original level
20:32 - something like this looks pretty good
20:35 - and I just want to show you how easy it
20:37 - is to create a separate color here so
20:39 - I'm just going to go ahead and duplicate
20:42 - our material and let's call this one
20:44 - line green and let's select our second
20:47 - line segment and let's go ahead and
20:49 - adjust or change the material here to
20:54 - line green and this time we just want to
20:56 - go ahead and simply change the hue to
21:01 - green and do the same thing with the
21:03 - tint here change that to green as well
21:05 - and I actually want this to be a bit
21:06 - more saturated there we go
21:08 - so now we have both in a purple and a
21:12 - green segment awesome so now we're
21:16 - pretty much ready to add a car
21:18 - controller before we do that I just want
21:20 - to have a look inside of the twitchchat
21:23 - here everything is looking good that's
21:26 - awesome you guys are doing great
21:31 - see if there's any questions will this
21:34 - be on YouTube yes it will it will be on
21:36 - YouTube tomorrow evening and yeah I
21:38 - think we are we're ready to continue
21:44 - awesome so now we can go and add our
21:47 - actual car and I've gone ahead and
21:50 - created a simple sprite that looks a bit
21:54 - like the original it's called Ryder here
21:56 - you can of course use any sprite that
21:59 - you want and I'll make this available
22:00 - for download and I'm along with the
22:02 - github project so if you want to use it
22:05 - or this particular sprite yourself you
22:07 - can definitely do
22:08 - and right now let's just go ahead and
22:10 - drag this one in I think it's a big bit
22:13 - too big so I'm gonna adjust the pixels
22:15 - per unit on the on the acid in the
22:19 - project panel here to about 150 and
22:21 - let's hit apply that looks a bit better
22:24 - in terms of scale but on that we don't
22:27 - need to adjust any import settings we
22:29 - can just go and select our Rider and
22:31 - first we probably want to add some kind
22:34 - of Collider so let's create a polygon
22:37 - Collider 2d and I don't want this to be
22:40 - too sophisticated let's hit edit
22:42 - Collider and we can hold down control
22:45 - and click on points in order to remove
22:48 - them and I want to remove most of these
22:51 - as I want it to be very simple and then
22:54 - we can kind of sculpt out our car and
22:56 - the most important thing for me is that
22:59 - the car moves smoothly along the surface
23:03 - and this for me means that we are trying
23:05 - to avoid really ragged and harsh edges
23:09 - so that's more important than actually
23:12 - finding the shape of our car and I think
23:15 - this here looks pretty good because we
23:18 - have this very smooth curve in front of
23:22 - the car which should make sure that it
23:24 - doesn't get stuck too easily so now if
23:27 - we stop editing that we can go and add
23:29 - another component and this here is going
23:32 - to be the rigidbody 2d and this should
23:35 - make make it so that if we hit play our
23:38 - car actually falls to the ground and
23:41 - indeed it does awesome
23:43 - so now we of course want to go ahead and
23:45 - create some controls for our car but in
23:49 - order to do that we first need to set up
23:51 - a few physics settings in order for it
23:54 - to behave correctly and of course
23:56 - whenever it comes to physics settings in
23:58 - unity it can be really tough to get them
24:01 - right so I've gone ahead and done a bit
24:03 - of experimenting for you and I found
24:05 - that a mass of round five works pretty
24:09 - well in this case I've tried setting the
24:11 - linear drag to a bunch of different
24:13 - values but I found that round 0.3 makes
24:16 - for a fairly smooth riding experience I
24:18 - wanted quite a bit of angular drag
24:20 - actually
24:21 - three worked well for my controller and
24:24 - we can just leave the gravity scale at
24:26 - one I also make sure to say that set the
24:29 - collision detection to continuous I
24:31 - found that avoid quite a few bugs with
24:34 - collision if you're traveling quickly so
24:37 - those are kind of the settings that I've
24:39 - been using I don't apply any constraints
24:41 - or anything like that just a few
24:43 - settings in here and one pretty
24:45 - important thing is I also make sure to
24:47 - apply a physics material because right
24:49 - now if we hit play our car stands
24:52 - completely still even though he's kind
24:54 - of standing on a slope and I find it's
24:57 - pretty or a lot nicer if the rider and
25:02 - the line doesn't have any friction
25:03 - between them so if we go ahead and right
25:06 - click and create a physics material and
25:10 - let's call this the line or the rider
25:14 - physics mat and we select a rider here
25:20 - and drag this into our rigid bodies
25:23 - material start and then select a rider
25:26 - physics math we can change the friction
25:28 - and I'm just gonna set it to a straight
25:29 - zero so now our rider should just glide
25:33 - around on our line and as you can see he
25:37 - does this is nicely because we are
25:39 - imagining that our rider has actual
25:42 - wheels and if he has if he's standing on
25:44 - the slope he's Pro unless he's hitting
25:46 - the brakes he is definitely going to
25:48 - roll down it so that's pretty much the
25:50 - same as just putting him without wheel
25:53 - just as a normal surface but without any
25:55 - friction so yeah this way we don't
25:58 - actually have to create the wheels but
25:59 - we're kind of giving the impression that
26:01 - he is driving and now it's actually time
26:06 - to go ahead and create our actual
26:08 - controller so let's hit add component
26:10 - and let's create a car controller we're
26:14 - gonna select C sharp hit create an ad
26:16 - let's double click it to open it up in
26:18 - visual studio and I'm going to have
26:20 - another sip of water while that's doing
26:22 - it cool so what do we want to do here
26:32 - well first we want a way
26:35 - of knowing whether or not we're pressing
26:37 - down the mouse button to do that let's
26:39 - create a poll which will call move or is
26:43 - pressing Mouse whatever you want to call
26:47 - it I'm just gonna call it move and I'm
26:49 - gonna default it to false then we're
26:52 - going will create a callback method
26:55 - called on actually now let's do this
27:00 - differently let's create a update method
27:02 - and inside of our update method we're
27:06 - going to check if input dot get
27:09 - button-down and you can choose any
27:11 - button see I'm just going to choose fire
27:13 - one which is going to default to the
27:15 - left mouse button so if you're pressing
27:17 - down the left mouse button we want to
27:19 - set move equal to true then on the other
27:23 - hand if input get button up so if we
27:27 - release fire one left mouse button so if
27:31 - we stop stop pressing our left mouse
27:33 - button we want to set move equal to
27:35 - false and we can actually see this
27:38 - working already if we save that and go
27:40 - inside unity now the the move variable
27:47 - is definitely set to private but if we
27:50 - go to the top right of our inspector and
27:53 - select debug we can see that our move
27:59 - variable actually appears so if we now
28:02 - hit play and start pressing we can see
28:06 - it turns on and if we then release it
28:10 - turns back off so yeah now we're keeping
28:14 - track of whether or not we need to move
28:16 - of course whether or not we need to move
28:19 - forward or rotate it's going to depend
28:22 - on whether or not we're currently
28:24 - standing on a surface but we'll figure
28:27 - that out in a moment let's start by just
28:29 - assuming that we always want to move
28:31 - forward to do that will create a void
28:34 - fixedupdate
28:36 - and remember the difference between
28:38 - update and fixed update is that update
28:40 - is used for getting input and fixed
28:43 - update is used for actually moving or
28:47 - controlling the physics of
28:48 - our car and the reason why is that
28:51 - update is called every time we draw a
28:53 - frame so a bunch of times a second
28:55 - update will be called and so it's nice
28:57 - for triggering input and fixed update is
29:00 - is called X amount of times a second so
29:04 - it's called called on a fixed update
29:06 - loop and update can have it and any
29:11 - amount of times per second and can vary
29:14 - by effective thousand you should really
29:17 - change a whole bunch but update fixed
29:19 - update will always be constant so that's
29:22 - why we use it for fixed physics updates
29:25 - so here we can check if move is equal to
29:28 - true well then we want to go ahead and
29:30 - move forwards and in order to do that we
29:32 - need a reference to a rigidbody so let's
29:34 - create a public rigidbody 2d and let's
29:38 - call it our B then if move is equal to
29:41 - two true we can set our Peter add force
29:44 - and here we can add a force in our cars
29:47 - forward direction so that is transform
29:50 - dot right because this is 2d so if we
29:53 - have a look here this here is forwards
29:56 - this here is up and this here is right
29:59 - so if you want our car to move forward
30:02 - in our 2d space we want it we want to
30:05 - use transform dot right which means the
30:07 - red error the red arrow so we can then
30:11 - multiply this transform done right with
30:13 - some kind of speed variable so let's go
30:16 - to the top here and create a a public
30:19 - float speed and set it equal to
30:23 - something like twenty by default we
30:26 - probably also want to multiply this with
30:28 - time dot fixed Delta time and that's
30:32 - because while fixed at the time or while
30:35 - fixed update always runs on a fixed time
30:38 - step this fixed time step is
30:40 - configurable it might not be the same
30:42 - for each system so that's why we
30:44 - multiply with time that fixed Delta time
30:47 - to make sure that no matter how we
30:49 - configure it and no matter what system
30:51 - we're on we always going to move at the
30:54 - same speed and finally I probably want
30:57 - to multiply with a round number like a
31:00 - hundred
31:01 - because the amount of force that we're
31:02 - adding if we multiply with time that
31:04 - fixed at the time which is normally
31:06 - pretty small it's going to be pretty
31:08 - miniscule unless we bump it up by about
31:10 - a factor hundred so that's why we
31:13 - multiply with a fairly large number here
31:15 - so we don't have to be ridiculous when
31:17 - setting the speed value and then finally
31:19 - we can change the force mode and we'll
31:21 - just said that II to force which I
31:24 - believe is also the default but it's
31:26 - nice to be explicit about that so now we
31:29 - should see that whenever we press down
31:30 - our left mouse button we're going to
31:32 - move our car forwards if we save this
31:35 - and go into unity and hit play we can
31:38 - test if that is true so it's playing
31:43 - here and I'm gonna press down my mouse
31:45 - button and we get an old reference
31:47 - exception what is this the reason why is
31:50 - of course we need to reference our rigid
31:52 - body in the inspector so let's change
31:54 - out of debug mode to make this less
31:56 - confusing and let's take our rigidbody
31:59 - component here and drag it into our RP
32:01 - slot now when we hit play we should be
32:04 - able to actually move forwards yay
32:08 - so now that we have our moving of the
32:11 - car in place we also want to be able to
32:14 - rotate when we are in the air however in
32:19 - order to do that we need to be able to
32:21 - see our car once it gets in the air and
32:24 - right now that's not kind of within our
32:28 - viewport so let's make our camera follow
32:31 - around our rider to do that will create
32:34 - another component and this is going to
32:36 - be our camera controller
32:38 - let's select C sharp hit create an ad
32:41 - and oops
32:42 - reload solution double-click it to open
32:44 - it up in Visual Studio and we're going
32:46 - to create a very very simple camera
32:48 - controller here first we need a
32:50 - reference to the target that we are
32:51 - tracking in our case our car or rider
32:54 - and we'll make this of type transform
32:56 - and call it target then inside of our
33:00 - late update function and this is another
33:03 - variant on the update update is called
33:06 - whenever the computer draws a frame
33:08 - fixed update is called whenever we
33:09 - should update physics so a fixed amount
33:11 - of times per second
33:13 - Update is the exact same as update but
33:16 - it's drawn after all of the other
33:18 - functions so after we do a movement
33:21 - after we update all of our game stuff
33:25 - and trigger input then we call late
33:29 - update and this is awesome for following
33:32 - around a car with a camera because we
33:35 - only want to move our camera once our
33:37 - car has moved when we've determined
33:39 - whether or not we need to move then
33:41 - actually move the car then we want to
33:43 - move the camera to follow it we don't
33:45 - want to move the camera then move the
33:47 - car and then jump to next frame that's
33:49 - just gonna make for a very jittery and
33:50 - weird behavior so that's why we use
33:52 - blade update and all we need to do here
33:54 - is simply set our position so
33:57 - transformed up position equally to our
34:00 - targets position but we probably want to
34:03 - kind of offset or camera a little bit so
34:06 - instead of setting an equal to target
34:07 - depth position directly let's go ahead
34:09 - and do a bit of calculation firstly
34:12 - let's create a public vector3
34:14 - and this is going to be our offset that
34:17 - we can adjust inside of the inspector
34:19 - then we can go and create a nother
34:21 - vector3 in here which is going to be our
34:23 - new position for the camera let's set
34:26 - that equal to target up position plus
34:28 - the offset that we specify then of
34:31 - course we also want to go in and adjust
34:32 - new position dot Z to make sure that we
34:36 - don't change the Z offset of our camera
34:39 - since we probably just want to adjust
34:41 - that once which is before we play the
34:44 - game and not using these controls down
34:47 - here I think it's nice to just position
34:49 - at once and then and never change it
34:51 - again and also because we are using
34:53 - orthographic the Z is not really going
34:56 - to matter unless it goes to zero or
35:00 - above in other words we just want it to
35:03 - be pulled back further than the rest of
35:07 - our objects if we switch into the CMU
35:09 - here you can see that the camera can see
35:11 - all the objects on right until it
35:14 - intersects and then we can't see them
35:16 - anymore but it's not like this assuming
35:18 - we use the size instead to zoom with our
35:21 - camera all right so we just want to make
35:25 - sure that we don't change the Z and
35:27 - we do that by setting new position to
35:28 - the eco trend to transformed up or yeah
35:32 - transform dub position Z so just remain
35:36 - retaining the old Z position and then
35:39 - finally we can set transform top
35:40 - position equal to our new position let's
35:43 - say that lets going to unity let's it
35:45 - play and let's see if that works
35:49 - and of course it doesn't because again
35:53 - we need to set up this reference so we
35:56 - need to make sure to drag in our rider
35:58 - into the target slot and now when we
36:01 - play we should actually see it working
36:03 - so as you can see it snaps right to the
36:05 - position of a rider and I of course want
36:08 - to go ahead and offset our camera a bit
36:09 - so I'm gonna bump up the X here and also
36:11 - bump up the wire a bit something that
36:14 - like that looks a bit nicer I think so
36:16 - let's go ahead and maybe copy the
36:18 - settings of the component by right-click
36:21 - going copy component let's stop playing
36:23 - and then right click paste component
36:26 - values and there we go we should now see
36:28 - that when we play the game again our
36:32 - camera snaps to this offset awesome so
36:37 - now we can actually start to play
36:39 - through our level and we get to the part
36:41 - where our rider is floating in the air
36:43 - this is where we can go ahead and rotate
36:49 - him so we want to be able to check is
36:51 - our car currently on ground is he
36:55 - currently touching a line because if it
36:57 - is if he is we want to move him if he's
37:00 - not we want to rotate him let's go to
37:03 - the top here and create another boolean
37:04 - called is grounded and will default that
37:07 - to false then we go to the bottom and
37:10 - let's create a callback method so Boyd
37:13 - on collision enter 2d and if we just
37:18 - autocomplete this it's going to fill out
37:20 - eight month of a bunch of information
37:21 - but we don't actually want to gather any
37:23 - information about what we hit we just
37:26 - want to know that we hit anything at a
37:29 - later point you probably want to check
37:31 - that what you've collided with is
37:33 - actually a line because if you add coins
37:36 - and stuff you don't want to have the car
37:39 - think that he's cool
37:40 - lining with the line when he's actually
37:41 - just picking up a coin stuff like that
37:45 - but right now all we have in here is
37:46 - lines so that should be just fine
37:50 - if not you can go ahead and set up
37:51 - layers you can go ahead and check for
37:54 - tags all that good stuff it should be
37:56 - fairly easy to do but we just want to go
37:59 - ahead and say that if we enter or on
38:02 - collision enter whenever we hit
38:04 - something we've hit a line and so we're
38:06 - currently grounded so we want to set is
38:08 - grounded equal to true and we want to do
38:11 - the exact opposite thing when we are
38:13 - leaving a collision so when we are no
38:15 - longer touching an object we're no
38:16 - longer touching a line and so we want to
38:18 - set is ground it to false
38:20 - in other words private void on collision
38:22 - except 2d and again we don't want to
38:25 - gather any information here but we do
38:27 - want to set is grounded to false and
38:29 - there we go just to check that this is
38:32 - working we can go and select our rider
38:34 - we can change from normal mode to debug
38:37 - mode I'm just waiting for the editor to
38:39 - compile here there we go and we should
38:41 - now see another variable here called is
38:44 - grounded if we hit play whenever we
38:46 - touch the ground this gets enabled and
38:49 - then as soon as we leave ground and go
38:51 - into the air we can see it gets disabled
38:54 - awesome so now we can use this through
38:57 - script down here whenever we are moving
39:00 - to check if is grounded well in that
39:04 - case we want to go ahead and add a force
39:06 - in the forwards direction that we are
39:08 - already doing if it's not so else we
39:12 - want to go ahead and add rotation so RP
39:15 - add and in terms of forces we call a
39:19 - rotational force on torque so we want to
39:23 - add torque and the amount of torque that
39:26 - we want to add is going to be dependent
39:28 - on a knod variable that we specify up
39:30 - here so this is going to be a public
39:31 - float rotation speed and we can maybe
39:36 - default that to something like let's do
39:39 - seven and again we're going to here
39:44 - let's see the amount of torque is going
39:47 - to be our rotation speed multiplied with
39:50 - time that fixed at a time multiply it
39:52 - with a hundred multi
39:53 - applied with speed and it's multiplied
39:56 - with speed first or in the it's in the
39:58 - same order and of course not speed but
40:00 - rotation speed there we go
40:02 - and we can of course also specify a
40:05 - force mode here but let's just said that
40:07 - to force again which is also the default
40:10 - so if we now save this and go into unity
40:13 - and hit play we should be able to
40:15 - actually rotate once we get in the air
40:19 - and the value might be off here I have
40:22 - no idea okay yeah so it definitely is
40:25 - let's go ahead and decrease the rotation
40:27 - speed to something like to see if that's
40:29 - working it might be that we shouldn't
40:31 - really multiply it with a hundred but
40:33 - with two instead to kind of even it up
40:36 - no I think that actually works really
40:37 - well with two so there we go a rotation
40:41 - speed of two and we can go ahead and
40:42 - change the default here as well so it
40:44 - doesn't bog out completely if we were to
40:46 - do this one more awesome that's actually
40:51 - I think I just realized that's all I
40:53 - wanted to show you guys in this video we
40:56 - can of course go ahead and add a few
40:58 - more line segments so we can go ahead
41:00 - and create another one of these purples
41:03 - purple ones here and move it over and we
41:06 - can definitely go in and switch back to
41:08 - normal mode so we can see all of our bit
41:11 - see a curve handles here and we can
41:14 - maybe add a bit on to this level just to
41:17 - make it a bit more exciting so let's
41:19 - make this a bit further here we can
41:21 - maybe make some kind of a steep hill
41:24 - here that we have to climb and then we
41:27 - can maybe end in another green line
41:32 - segment so take this nine segment here
41:34 - and I actually want to try and do
41:36 - something fun here and I want to make
41:38 - this physics enable so I basically want
41:41 - this to be rotated around its center
41:43 - whenever we jump onto it let's see if
41:46 - that works so in order to do that I want
41:49 - it to be or I want it to be centered
41:52 - around the R transform of the object
41:56 - because it's going to rotate around this
41:59 - point so we don't want it to rotate like
42:02 - this that's just gonna look weird let's
42:05 - take a lines here and move
42:07 - up to around this point so that we can
42:11 - imagine that it rotates around it
42:13 - something like this and then let's go
42:16 - ahead and move it down here and try to
42:18 - see how that works
42:20 - actually maybe going to even flip it a
42:23 - tiny bit like this and I think that's
42:26 - going to be pretty nice okay so you
42:27 - might have seen an error there yep I
42:29 - haven't really accounted for rotation on
42:31 - the script so instead of flipping it
42:33 - let's just go ahead and do it manually
42:35 - with the points like this sorry guys
42:38 - this is not a complete editor extension
42:41 - or anything I just really quickly
42:42 - modified this to or work for this
42:44 - tutorial and I think you can easily
42:46 - expand upon it if you want I just want
42:49 - to show you guys how cool this your
42:51 - curves are and the fact that you can
42:53 - actually do this but there are some
42:54 - really nice extensions on the earth
42:56 - asset store that should help you do more
42:59 - advanced stuff with with lines and
43:01 - Bezier curves so okay so now we actually
43:04 - have a bit more of an interesting level
43:06 - but let's try and go ahead and add
43:09 - physics to this line segment so in order
43:11 - to do that we need to add another
43:12 - component and we're going to add a
43:15 - rigidbody 2d let's make sure to make
43:17 - this dynamic it's also pump up the
43:20 - master around maybe a hundred and the
43:22 - same thing with the angular drag I know
43:24 - that's a very very big angular drag but
43:27 - we're also going to have quite a bit of
43:28 - force on the rider and I think it's
43:31 - actually going to work well we're also
43:33 - going to freeze it on the X&Y position
43:35 - and definitely not on the Z rotation
43:38 - because we only wanted to rotate and not
43:41 - move so for now I play I actually do
43:45 - believe that this should work so of
43:48 - course the first one here is not physics
43:49 - enabled but then the second one once we
43:53 - get this fine the level should actually
43:55 - yeah it rotates with a player hey that's
43:59 - super easy and it's something that the
44:01 - that the original Rider gaim
44:03 - takes advantage of quite a bit it often
44:06 - takes a chunk of the line and then makes
44:09 - it into a green line that is rotatable
44:11 - so that you can go you can drive through
44:14 - over that line onto a hoop and then back
44:18 - on to the green part
44:20 - it's something they do quite a bit and
44:22 - it's something that looks just really
44:24 - cool so now we can go ahead and add all
44:26 - kinds of fun physics stuff add coins add
44:28 - score counters go completely nuts I hope
44:31 - you guys will enjoy it and that's pretty
44:33 - much the end of the tutorial only with a
44:39 - bit of messing up I think I've blacked
44:41 - out and about at about 30 minutes in
44:45 - there but I think we made it so I hope
44:49 - you guys enjoyed the tutorial and now
44:50 - we're going to switch over to the the
44:52 - Q&A so let me just switch over here to
44:58 - Q&A chat mode there we go and you guys
45:01 - can go ahead and ask some questions I'm
45:05 - just gonna say real quick of course this
45:07 - is going to be uploaded to YouTube so if
45:08 - you're just joining in and mr. tutorial
45:10 - it is going to be on YouTube don't worry
45:12 - and I can see we're almost 400 viewers
45:15 - that's awesome guys so thanks to all the
45:17 - people who are tuning in and without
45:20 - further ado ask me some questions and I
45:22 - am going to attempt to answer them guys
45:25 - the Q&A here is going to be or is always
45:28 - pretty much anything if you have of
45:31 - course super technical questions are
45:33 - often hard to answer just right off the
45:35 - top of my head and it's also something
45:36 - that doesn't make for a very interesting
45:38 - Q&A but personal questions is fine semi
45:43 - technical questions are fine suggestions
45:45 - all that good stuff so first questions
45:48 - will you be Ludum dare a41
45:51 - I really hope so alright I've already
45:54 - written it into my calendar and I'm
45:55 - really looking forward to the next one
45:57 - I'm dari so unless something stops me
45:59 - from being there I definitely will be so
46:01 - yeah I'm really I'm really hoping to to
46:03 - join what do we have to do when we want
46:07 - the lines in rainbow color if you want
46:10 - multiple colors over your line you can
46:12 - use the texture glow like I showed you
46:15 - before which allows you to change the
46:17 - glow of the line or using a texture
46:20 - that's pretty darn cool then you can
46:22 - just make a rainbow texture and it
46:24 - should actually make the glow
46:25 - rainbow-colored let's see what is the
46:29 - hardware for making a game
46:33 - I am don't understand the question I'm
46:35 - sorry how do you stay have you all the
46:37 - time
46:37 - drugs no kidding I'm not happy all the
46:42 - time guys but I am happy most of the
46:43 - time and that's probably because my job
46:45 - is very very fun and I have a lovely
46:47 - wife so how do you speak your name
46:50 - Espeon that's how and you're not gonna
46:53 - get me to say it again because I'm just
46:55 - gonna mess up my own name
46:57 - what about making a tour tutorial about
46:59 - stealth games so I do believe that unity
47:02 - already has a welfare Leo to turn out
47:04 - about creating a stealth game and I
47:07 - would definitely just recommend checking
47:09 - out that also I'm just gonna take my
47:11 - camera here and very quickly bump up the
47:14 - brightness a bit because I think it got
47:16 - a tiny bit Dawg so let me just do that
47:19 - there you go I can see you guys more
47:21 - clearly that's not you you can see me
47:23 - Mowgli I can see you just the same but
47:26 - hey how can I learn how to code my own
47:29 - scripts to make my own game well there
47:32 - are a bunch of different ways for you to
47:33 - learn it completely depends on how you
47:35 - prefer learning I learned mostly through
47:38 - YouTube tutorials so you're good start
47:40 - there turning in our live streams like
47:42 - this one definitely helps even though
47:43 - this is maybe more a bit towards
47:46 - intermediate uses since I go pretty
47:48 - quickly through the stuff but I do have
47:51 - a course on for complete beginners
47:53 - called how to make a video game
47:55 - definitely check that out and yeah just
47:59 - lots and lots of practice did you make
48:02 - your website yourself really coded yeah
48:04 - I did create the new practice website
48:07 - from scratch using our Jekyll Jekyll is
48:11 - a static site generator it's freaking
48:13 - awesome and it only requires you to know
48:15 - a bit of HTML CSS and a tiny bit of
48:19 - Cakery or JavaScript
48:21 - now I didn't use any JavaScript for the
48:24 - I don't think I used any JavaScript for
48:27 - the breakfast website but I did use a
48:29 - bunch of JavaScript for dev assets but
48:31 - yeah it's really really fun to make
48:34 - websites and whenever I do it I really
48:36 - love it I just haven't done it too much
48:40 - mobile controls in c-sharp that could
48:43 - actually be pretty fun to do however I
48:45 - do normally tend to stay
48:47 - from mobile since I want to cover
48:49 - subjects that apply to both mobile games
48:51 - and standard and stuff and console and
48:54 - all that I don't do console specific
48:57 - stuff well at least I haven't done that
48:58 - yet but maybe someday has got to be the
49:01 - day that I start doing that last time
49:06 - I'm asking why do you have rotation
49:07 - speed squared do I have it squared
49:10 - did I squared did I multiply it I'm
49:14 - sorry one moment let's go ahead and
49:16 - investigate
49:17 - let's see whoa and then I went infinite
49:20 - let's see here
49:22 - rotation speed oh yeah that shouldn't be
49:26 - the case I'm sorry that's probably why I
49:29 - had to decrease the number that's
49:32 - because I did squared so two times two
49:35 - is four and that's why I had to decrease
49:37 - it from seven to two to get around the
49:39 - same movement so thank you for solving
49:42 - that for me and the answer to your
49:44 - question is I shouldn't have so there we
49:48 - go we do get the same behavior now that
49:50 - that was actually one of the less bad
49:52 - errors in terms of creating or squaring
49:58 - out a variable because it only meant
50:00 - that once we said it it did behave just
50:05 - fine and linearly but yeah it shouldn't
50:08 - be squared and now it's fixed I'm sorry
50:10 - and we can go back to the Q&A so thanks
50:14 - for pointing that out
50:16 - cool so um yeah two plus two is four did
50:20 - I say eight I think it's at eight yeah
50:22 - it's four whatever you also saw that
50:25 - seven was a bit faster and actually
50:27 - maybe four is a better number but that's
50:29 - that's for you to play around with quick
50:31 - math do you know how to code in PHP I
50:35 - can I feel like I can read PHP fairly
50:38 - well I'm not that great with PHP syntax
50:42 - and so I don't feel comfortable in it
50:43 - but I feel like I could pick it up
50:45 - fairly quickly that being said I've
50:47 - heard that PHP can get pretty hairy in
50:50 - certain situations so I probably
50:52 - shouldn't say that but yeah I I don't
50:55 - feel comfortable writing it now I have
50:57 - written it a tiny bit which
51:00 - do a tutorial called how to make quests
51:02 - if you're just talking about ordinary
51:05 - RPG quests that's actually a pretty good
51:08 - idea and sounds pretty exciting I'll
51:10 - make sure to add it to the list do I
51:12 - know C or C++ that depends on what you
51:15 - mean by no I have written some C++ code
51:18 - and found it to be really fun and also
51:20 - sometimes very tricky I have also
51:23 - written a tiny bit of C code but it's
51:25 - not something that I feel nearly as
51:26 - comfortable in as say a c-sharp
51:29 - JavaScript or Java hello could you make
51:34 - a tutorial about Unreal Engine or native
51:36 - code I would love to make a tutorial on
51:38 - unreal at some point but I will have to
51:40 - brush it up my unreal skins skills
51:42 - beforehand and that's probably what kind
51:45 - of is holding me away from doing it
51:46 - right now it's just a time thing because
51:49 - while I do feel I can do quite a bit of
51:52 - stuff in unreal I don't feel comfortable
51:54 - enough teaching it before I get some
51:57 - more experience under my belt how to do
52:01 - a simple multiplayer just where I'm
52:05 - sorry I don't understand the question
52:07 - how to find a job this is not something
52:11 - that I'm going to be the best person to
52:14 - give advice about probably because I
52:16 - haven't actually ever had to apply to a
52:19 - job in the tech industry I've been
52:21 - pretty been pretty lucky there and
52:23 - practice has pretty much been my job
52:25 - since I I quit or since I finished up my
52:30 - education but I think from what I hear
52:35 - the primary thing is building a
52:36 - portfolio and getting lots of experience
52:39 - I know that's really annoying the best
52:42 - way to get a job is by having jobs but
52:45 - that is truly true so yeah
52:48 - recommendations building out a portfolio
52:50 - a strong portfolio and experience very
52:55 - very little education that I hear that
52:58 - doesn't matter too much anymore how old
53:01 - are you I am 20 years old how can we
53:04 - Clair play rotation to say this is too
53:06 - technical I'm sorry I'm not going to
53:08 - answer it right now will you make some
53:10 - tutorials on procedural generation
53:11 - especially around generating building
53:13 - details like trees and boulders attack
53:15 - I've created a few videos on procedural
53:17 - generation primarily on covering noise
53:20 - per the noise and terrain generation
53:24 - that sounds a bit more technical and
53:28 - something like something that would take
53:29 - longer time but I would definitely love
53:33 - to do more on procedural generation
53:35 - however if you do want to know more
53:37 - about procedural generation I suggest
53:38 - you check out sebastian lake he's just
53:41 - awesome and he has a lot of stuff on
53:43 - procedural stuff our generation can you
53:46 - make the tutorials of shrinking how can
53:49 - I make a tutorial on how I made
53:51 - shrinking planet I think that's what
53:54 - you're referring to maybe it depends on
53:58 - what part of the game I mean it did take
54:00 - me a total of 48 hours to make and so if
54:02 - I had to make tutorials on that we're
54:04 - explaining everything they would be
54:05 - insanely long so probably not but I
54:09 - might take a certain mechanic from it if
54:12 - there's something in particular that
54:14 - you're interested in but yeah could you
54:18 - show us how to make custom assets in
54:20 - blender or is there a youtube tutorial I
54:22 - do have a basic blender tutorial check
54:25 - it out not a lot of people know about it
54:27 - it's decent so go check out my blender
54:29 - tutorial if you want any tips for
54:31 - getting a good game dev internship in a
54:34 - triple-a company nope I don't have any
54:36 - tips whatsoever
54:37 - I'm so sorry on your mmm okay okay rapid
54:44 - firing through these questions I should
54:45 - really take a breather here guys I'm
54:49 - trying to answer as many questions as
54:50 - possible which phone do you use I use a
54:54 - iPhone 6 I've actually never really had
54:59 - an Android so I just use iPhone I'll
55:04 - probably switch soon maybe if this one
55:07 - breaks I imagine picking up an Android
55:08 - but we'll see
55:09 - yeah don't quote me on that Franky's see
55:15 - you're all video thanks man can you make
55:19 - it a turn on how to make a chat and if
55:21 - you have please give me link I haven't
55:24 - made a tutorial on multiplayer
55:27 - adding in a lobby no I have not and I
55:32 - don't really plan on it right now
55:36 - but it sounds very interesting and like
55:39 - something I would want to do at some
55:41 - point where am i from
55:45 - I'm from Denmark I'm based in Copenhagen
55:51 - can you make a tutorial about AI enemies
55:53 - like dead cells not just like Mario's
55:56 - okay okay I know I'm probably not going
56:01 - to make a toriel series unsophisticated
56:03 - enemy AI now I haven't played dead cells
56:08 - but I imagine that they are pretty
56:12 - sophisticated if you want to create
56:15 - triple a quality AI with smells memory
56:22 - cutting techniques all that jazz you can
56:28 - go ahead and check out rain Indy which
56:31 - is a really good plug-in for unity or AI
56:36 - solution so yeah check that out rain
56:40 - Indy I know the basics of c-sharp and I
56:43 - understand coding but I can't write code
56:45 - can you help me please
56:47 - this is just a matter of practice
56:48 - actually I I think everybody gets to a
56:52 - point where they kind of they've seen
56:55 - some basic tutorials they know what an
56:57 - if statement is they know that you can
56:59 - write code and you can press dot and it
57:02 - will access the different functions in a
57:05 - class they have kind of this vague idea
57:07 - of what a class is maybe and and what
57:10 - what functions can be used for but the
57:13 - syntax is just not there and you don't
57:15 - know all the functions that you have
57:18 - you're at your disposal simply you don't
57:20 - have knowledge of the API that unity
57:22 - uses I think everybody gets to that
57:25 - point and when you're there you're close
57:29 - you're really close from there it's just
57:31 - a matter of trying to write simple
57:34 - scripts on your own or taking other
57:36 - people's scripts and modifying them to
57:38 - suit your needs and once you've done
57:39 - that enough time
57:40 - it will just kind of start to float off
57:43 - the top of your head use the Unity API a
57:46 - bunch when I was at this point I
57:48 - actually went on vacation and I didn't
57:51 - have internet access when I had the
57:54 - downloaded version of unities
57:55 - documentation and so I was forced to
57:58 - kind of figure out some of these things
57:59 - on my own I couldn't just Google of the
58:01 - problem so i sat there looking through
58:03 - the documentation and tried a bunch of
58:05 - different things until I got the syntax
58:07 - right until I found the correct function
58:09 - that I needed to use and needed or set
58:12 - up the code in the right way so going
58:15 - from understanding code to being able to
58:18 - logically write it and get the syntax
58:20 - right and know all the function is a
58:22 - step but it's not the not the biggest
58:26 - step so yeah your clothes just keep
58:29 - going how to do is simple to play
58:32 - variables that you can read take from
58:34 - other computers use unit I have a
58:37 - tutorial on unity networking there are
58:41 - different tutorials online can you do a
58:43 - video about database integration with
58:45 - unity I'm not too good when it comes to
58:50 - databases it's not really my strength um
58:55 - so I probably aren't I am not the one to
58:59 - ask but I might do something at some
59:02 - point would you upload this live stream
59:04 - to your YouTube channel
59:05 - yes it will go up on YouTube I learned
59:08 - coding through you multiplayer tutorial
59:09 - hey that's awesome that's a pretty
59:11 - advanced tutorial to learn coding from
59:12 - so I'm really glad that you were able to
59:14 - use it do you know how to make a random
59:17 - level generator like which in the temple
59:19 - run yeah I do know how to create such a
59:22 - random generator it's actually the one
59:25 - in temple run is actually fairly simple
59:27 - if I remember it correctly because it's
59:29 - just a matter of instantiating in
59:32 - different prefabs so basically you're
59:35 - just chaining together prefabs that you
59:38 - create semi randomly just make a bunch
59:41 - of assets and choose from them from a
59:43 - list and then in certain cases you will
59:45 - have to eliminate certain possibilities
59:47 - because you don't want a right turn and
59:49 - then a left turn right after where they
59:51 - kind of intersect but you yeah you want
59:53 - it to do
59:54 - to create logical roads but still yeah I
59:58 - learn coding from school and from your
59:59 - brakes oh thanks oh thanks man I'm
60:01 - really good that I was able to help do
60:03 - it tutor series on making a 2d sandbox
60:05 - survival game like terraria no that's
60:12 - too many words in one sentence I would
60:15 - be 100 videos long but yeah start with
60:21 - some of the basic videos start with some
60:23 - of my 2d videos and then expand from
60:25 - there I think that should kind of get
60:27 - you going and then you can try and add
60:30 - more stuff to it on your own
60:34 - I want to thank you thank you with the
60:36 - unit tutorials that started my career
60:37 - now I just have to get old and be able
60:40 - to own a company that's awesome I'm glad
60:43 - I was able to help with those with just
60:45 - my first game when it's finished
60:47 - definitely send games to me on Twitter
60:49 - guys it's always fun to see what you
60:52 - guys are working on thanks so much for
60:55 - spending your time to teach us you're
60:56 - doing so great great guys
60:58 - you guys are making me blush taste of
61:00 - this too many compliments more questions
61:03 - this desk up there is I cannot take it
61:05 - you guys are too sweet we are tutorial
61:07 - please that would be awesome I still
61:09 - have to get my hands on your headset
61:11 - though I started C sharp and unity with
61:13 - you thank you thank you and yeah okay so
61:18 - guys um any secret portfolio tricks yeah
61:24 - try and make something visual just
61:26 - something that seems interesting to look
61:30 - at I mean I think the problem a lot of
61:33 - people run into with their portfolios is
61:37 - they think that well when someone goes
61:39 - to my portfolio they they're looking at
61:41 - all the stuff that I made not
61:43 - necessarily a hiring manager will
61:45 - usually just kind of look very quickly
61:48 - skim through what you've done and if
61:50 - nothing interesting catches their eye
61:53 - it's just going to discard it and so you
61:56 - need to make it pop you need to make it
62:00 - look interesting right away and then
62:02 - maybe they'll take a second look so yeah
62:04 - something visual always works
62:08 - and okay so find the Christians guys
62:11 - we're wrapping up very very soon when
62:13 - will be the next unity tips oh I I could
62:15 - actually go out and create another unity
62:17 - tips video soon that would be pretty fun
62:19 - I should add that to the list I'm 14
62:22 - years old and I know c-sharp and Python
62:24 - should either in unity is it going to be
62:26 - effective in 2018 or later yes yes yes
62:29 - yes
62:29 - for a bunch of different technologies
62:31 - both became development also for science
62:35 - simulation education VR unity is pretty
62:41 - much at the center of it all right now
62:42 - so yeah learn unity it's awesome if you
62:45 - want to when we upload stream to YouTube
62:48 - tomorrow evening at 9:00 p.m. UTC I
62:54 - think can I call a method inside a
62:57 - method yes what is a rider rider is the
63:01 - game drag and drop tutorial yeah that
63:06 - could be interesting
63:08 - there's gonna be a unity update right
63:10 - where c-sharp will change not
63:13 - drastically I don't think there are
63:16 - going to be some some updates to how we
63:19 - write scripts yes
63:21 - with the new c-sharp drop system that
63:24 - it's going to expand upon it quite a bit
63:26 - but you can still write scripts in the
63:27 - same way as far as I understand so far
63:29 - where can I send you what I've made from
63:31 - your tutorials Twitter yeah pull stuff
63:34 - to me on Twitter that's awesome how do I
63:36 - learn in c-sharp keep going at it and I
63:39 - think guys can you make a video about
63:43 - making them an animation stuff I would
63:44 - love to at some point do you have any
63:46 - experience with the koto engine and if
63:48 - so would you make tutorials on it I have
63:49 - severe experience and if so yes it looks
63:52 - fun if you guys wanna meet you
63:54 - ha stone like simple game tutorial I
63:55 - have created a video recently where I
63:57 - show how to create cards in ha stone
63:59 - using scriptable objects that's probably
64:01 - as far as I'm going to go but if you
64:04 - want a particular mechanic definitely
64:06 - let me know and there we go that kind of
64:09 - wraps the questions for this live stream
64:12 - guys thank you so much for tuning in I
64:15 - had I have just had a lot of fun and
64:18 - another question is how long is my hair
64:20 - it goes to here so
64:22 - fairly long but I did cut it recently so
64:24 - it's it's not crazy anymore but we can
64:28 - maybe end on that let me just loosen
64:30 - this up and we can say thanks for
64:32 - watching guys I had a bunch of fun if
64:34 - you want to support the live stream and
64:36 - future tutorials and all the stuff that
64:39 - we're currently putting out I suggest
64:40 - you go to patron at patreon.com slash
64:43 - practice I'm just gonna put it inside of
64:46 - the twitch chat here
64:48 - there you go patreon.com slash Breck
64:50 - ease it's a way for you to donate a
64:52 - monthly amount of your choosing you can
64:55 - cancel it at any time and I offer some
64:58 - humble rewards in return people think
65:00 - it's the Jesus but it wasn't this but do
65:11 - I work in the black abyss no this is
65:12 - just the screen guys don't worry this is
65:15 - something behind it but yeah if you guys
65:18 - enjoyed the screen the stream or are
65:21 - enjoying the the content content
65:23 - definitely go to patreon and thank you
65:26 - so much to the people who are already
65:27 - already supporting over there it really
65:29 - means the world to us it's a huge part
65:32 - of our income and especially now that we
65:34 - are multiple people it's it's just
65:36 - really really awesome so thanks for
65:39 - supporting and thanks for tuning in guys
65:41 - I'll see you guys in the next video bye
65:46 - thanks to have the awesome patreon
65:48 - supporters who donated in December and a
65:50 - special thanks to Judah Manby Pheo
65:51 - infinity PBR euro Omer and soft tune
65:54 - Cybermen Derrick Eames Kirk Murr face
65:56 - Samara fine Peter die double tap 45
65:58 - James P Dan Evans Thomas Wally
66:01 - Superman the great John Burkhart clock
66:02 - approaches Lotito
66:04 - Alex for kid ski SUNYAC obscene James
66:06 - Rogers Robert Boone Rob fan and Erasmus