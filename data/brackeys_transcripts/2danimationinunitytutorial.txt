00:00 - so when it comes time to start adding
00:01 - animation to your game there are really
00:03 - two primary ways to go about it the
00:04 - first one and probably the most commonly
00:07 - used is sprite sheet animation this is
00:09 - also the technique that most people
00:10 - recognize from traditional animated
00:13 - movies because it simply means drawing a
00:14 - bunch of images each with a tiny bit of
00:17 - movement and then playing the back by
00:19 - quickly displaying them one by one our
00:21 - character from the previous video on 2d
00:23 - movement already has sprite sheet
00:25 - animations set up in exactly this way
00:27 - so that's what we're going to be using
00:29 - for this video but first this video is
00:31 - sponsored by a skill share skill share
00:33 - is an online learning community with
00:34 - more than 22,000 quality classes on game
00:37 - development tech and more if for example
00:40 - you want to learn how to create your own
00:41 - custom game art i really suggest
00:43 - checking out this awesome course on the
00:45 - fundamentals of creating pixel art for
00:47 - games it's a really well structured and
00:49 - visual course that I personally really
00:51 - enjoyed a premium Skillshare membership
00:53 - gives you unlimited access to all
00:55 - classes for less than $10 a month so to
00:58 - get started simply click learning in the
00:59 - description and the first 500 people
01:01 - will receive their first two months for
01:03 - free also special thanks to Michael
01:05 - Neely Clinton Fenske WA Andrew Kelly
01:07 - menko cheetah 3d and Alexander black for
01:09 - their support on patreon and I think
01:11 - we're now ready to start animating our
01:13 - character however there is another
01:15 - approach that I think you should at
01:17 - least be familiar with and that is
01:19 - skeletal animation as the name suggests
01:21 - this animation technique works by
01:23 - binding bones to our sprites which will
01:25 - then move and distort the images as we
01:27 - drag the bones around the cool thing
01:29 - about this particular workflow is that
01:31 - it allows us to draw our character only
01:33 - once and then animate him fully inside
01:35 - of unity if you wanna try out skeletal
01:37 - animation unity has a free asset on the
01:39 - asset store called anima 2d that should
01:42 - help you get started and definitely let
01:43 - us know if this is something that you
01:45 - would like to see a dedicated video on
01:47 - alright enough talking
01:48 - let's start animating so we're hearing
01:50 - the same scene as when we did or 2d
01:52 - movement you can of course use any scene
01:54 - and character that you'd like in this
01:56 - one we're able to move and jump around
01:57 - as well as crouched beneath platforms
02:00 - but of course currently we have no
02:01 - animations in here to change this let's
02:03 - start by setting up some animation clips
02:05 - to do this we'll go to our scene view
02:07 - and so that our player will then open up
02:09 - our animation windows so we're going to
02:11 - window
02:12 - animation and select animation and as
02:14 - you can see tells us that to begin
02:16 - animating the player we need to create
02:18 - both an animator and an animation clip
02:20 - we'll talk about the difference between
02:22 - the two in a sec for now let's just hit
02:23 - create and now we can choose where we
02:25 - want to save our animation that's right
02:27 - click and create a separate folder for
02:29 - this and let's call it animation let's
02:32 - then double click this folder and let's
02:33 - also rename this animation file to
02:36 - something like player and then
02:37 - underscore the animation that we want to
02:40 - work on this could be run jump or die in
02:42 - our case that start with an idle
02:44 - animation in other words the animation
02:46 - that the player plays when he isn't
02:48 - really doing anything we can then press
02:50 - save so now we have this empty timeline
02:52 - here where we can drag in our animation
02:54 - sprites of course the great thing about
02:56 - our character here is that he already
02:58 - comes with a bunch of images that we can
03:00 - use so let's go under Sunnyland and of
03:02 - course if you want to download any of
03:04 - this I will have a link for that in the
03:05 - description we then go under artwork
03:07 - sprites and under the player we can see
03:10 - that the sprites are split up into
03:11 - animation folders so let's start by
03:13 - going under the idle folder and here are
03:16 - four different images if we just try and
03:18 - select one of them we can see a preview
03:20 - in the bottom right here of course it's
03:22 - pretty tiny but if I go ahead and move
03:23 - through the images we can see that they
03:25 - are indeed animating our character so
03:27 - let's try and select all four sprites
03:29 - and let's simply click and drag them
03:31 - into our animation window and right away
03:33 - we can see that four keyframes has been
03:35 - added we can also see that if I hit play
03:37 - the animation plays ridiculously fast
03:40 - the reason for this is that we need to
03:42 - change the amount of images that are
03:44 - displayed each second currently our
03:46 - samples are set to 60 a pretty standard
03:49 - value to use here is something like 12
03:51 - we can see if we now play through the
03:53 - animation looks much better now we can
03:55 - even scrub through it using this
03:56 - timeline marker and if we wanted to say
03:58 - move around a few images we could of
04:00 - course do that by simply clicking and
04:02 - dragging or just press delete in order
04:04 - to remove one but I'm just gonna leave
04:06 - my animation and sees let's go ahead and
04:08 - set up a few other ones while we add it
04:10 - let's go to websites playeridle here and
04:12 - let's hit create new clip again we want
04:14 - to make sure we do this inside the
04:15 - animation folder and this time let's
04:17 - create one called player underscore run
04:20 - now let's go on to our run folder let's
04:23 - select all of our sprites and drag
04:25 - women again we want to decrease our
04:26 - sandals to 12 and if we now hit play we
04:29 - can see our character is running let's
04:31 - quickly do this for the Crouch animation
04:33 - as well so player on this core Crouch
04:36 - will go into the Crouch folder it's like
04:38 - both of them and drag them in again
04:40 - we'll set the Sambo's to 12 again the
04:42 - animation plays fine and finally let's
04:45 - add our jump animation player underscore
04:48 - jump we'll go into the jump folder take
04:50 - both sprites drag them in change these
04:53 - samples to 12 and if you try and play
04:55 - this one will notice that it looks kind
04:57 - of weird the reason is that our jump
04:59 - animation is made up of only two
05:00 - keyframes one for when we are going
05:02 - upwards and one for when we are falling
05:04 - back down now we could of course go in
05:06 - and create these as two different
05:07 - animations however I think that's just
05:09 - over complicating things instead I'm
05:11 - just gonna go in and change the samples
05:12 - to a much lower value like - I think
05:15 - this is going to change our sprite
05:16 - around the time when we add the peak of
05:17 - our jump but we'll see that later so now
05:20 - we've set up all four animation clips
05:22 - and if we go into the animation folder
05:24 - we can see all of them here play your
05:26 - idol play a Crouch run and jump and we
05:28 - can also see another file in here simply
05:31 - called player which has a different icon
05:33 - this is what we call the animator
05:35 - controller the animated controller is
05:38 - called a controller because it controls
05:39 - what animations to play if we double
05:42 - click this it's going to open up in our
05:44 - animator window so here we notice that
05:46 - one of our windows is called animation
05:48 - this is where we create our actual
05:50 - animations and another one is called the
05:52 - animator because this is where we choose
05:54 - what animations we want to play and in
05:56 - here we can also see that it's already
05:58 - added off for animation clips we can now
06:00 - drag this around and arrange them in any
06:02 - way that we would like and if for some
06:04 - reason one of them isn't in here for you
06:06 - you can always take an animation clip
06:08 - from the project and simply drag it in
06:10 - and you can of course also select and
06:11 - remove them you'll notice here that
06:13 - currently the player idle is marked as
06:16 - orange and it's connected with this
06:18 - arrow going from the green entry state
06:19 - the reason for this is that the idle
06:21 - animation is currently our default
06:23 - animation in other words it's what we'll
06:25 - begin playing right when we start our
06:27 - game so if we were to now hit play
06:29 - when see indeed our players starts
06:31 - playing the idle animation right away
06:32 - and even though we move around and jump
06:35 - and try and Crouch it's just gonna keep
06:37 - playing idle in fact if we select up
06:39 - Claire and going to the animator we can
06:40 - see in the animation looping right here
06:42 - let's stop playing and we now start to
06:44 - create transitions from the idle
06:46 - animation to the other clips by the way
06:48 - if you want to set another animation as
06:50 - the default we can always right click
06:51 - and hit set as their default state and
06:54 - that's simply going to change it so
06:56 - whenever we start running we of course
06:58 - want to change from the idle animation
07:00 - to our run animation and we do this
07:02 - using what is called a transition so if
07:05 - we take our play run here and just place
07:06 - it underneath our idle animation we then
07:09 - right-click on idle and hit make
07:11 - transition and we now get this arrow
07:13 - that we can drag out to the other
07:14 - animation clips if then click play a run
07:17 - we've created a transition from our idle
07:20 - to our run animation and if we select
07:22 - this transition we can change when and
07:24 - how we want it to occur so the first
07:27 - thing that we need here is to add a
07:29 - condition because we don't want our
07:30 - transition to just play right away we
07:33 - only wanted to play in the case that
07:34 - we're actually moving but currently our
07:36 - animator has no idea whether our
07:39 - character is moving or not to change
07:41 - this we use something called a parameter
07:43 - so if we go to the left here we see that
07:45 - we have two tabs layers and parameters
07:47 - we want to go under parameters and hit
07:49 - the plus sign and here we can now create
07:51 - a new parameter we're gonna create a
07:53 - float and this float is going to
07:55 - represent our players speed so we'll
07:58 - call it speed and we'll just default it
08:00 - to zero then under our condition we can
08:03 - now hit the plus sign to create a new
08:05 - condition on our transition and you can
08:07 - say that we only want to transition to a
08:09 - run animation if our speed is greater
08:12 - than and it will just input some small
08:14 - number like point zero one in other
08:16 - words if we start moving well then we
08:19 - want to transition to a run animation we
08:21 - also want to go in here and make sure
08:22 - that this transition is immediate in
08:24 - other words we don't want something
08:26 - called exit time where we wait for the
08:27 - animation to stop playing before we
08:29 - start playing a new one now we simply
08:31 - want to transition as soon as we start
08:32 - moving so I'm simply going to disable
08:34 - that let's also go under settings and
08:36 - here we can choose the duration of our
08:38 - transition this is not something that
08:39 - you often use when creating 2d games but
08:42 - it's used all the time to blend between
08:44 - animations in 3d games but for us again
08:47 - we want this to be completely immediate
08:48 - so we'll go in and set the transition
08:50 - duration to zero of course we also want
08:52 - to be able to transition back from our
08:54 - run animation currently we will only be
08:57 - able to go from idle to run and then
08:59 - even though we stopped moving it will
09:00 - still play a run animation so we're
09:02 - going here and right click and make a
09:03 - new transition this one is going to go
09:05 - to idle let's select our transition and
09:07 - add a new condition this time we only
09:09 - want to transition if the speed is less
09:12 - than and then we'll again add a tiny
09:14 - number here so point 0 1 again we don't
09:16 - want any exit time and on these settings
09:18 - we'll set the transition duration to 0
09:21 - and now our animator should actually
09:22 - work with these two animations in fact
09:25 - if we take our animator and dock it to
09:27 - the right here and then try to hit play
09:29 - we can see that by default it plays the
09:31 - idle animation but if I then go and
09:33 - change the speed they set it to 1 our
09:36 - character he starts running and as soon
09:38 - as I set it back to 0 he goes right back
09:40 - to idling so now all we need to do is
09:42 - change this speed parameter through our
09:44 - script and that is actually fairly easy
09:46 - so if we now select our player and if
09:48 - you haven't watched the video where we
09:49 - set up player movement we're basically
09:51 - using two scripts one is the character
09:53 - controller that takes care of all the
09:55 - physics that go into making our
09:57 - character move and the second one is a
09:58 - much simpler player movement script
10:00 - where we simply tell the player when to
10:02 - move and at what speed so let's go ahead
10:04 - and open up this player movement script
10:05 - and the first thing that we want is to
10:07 - be able to access our animator luckily
10:10 - if we have a look in unity we can see
10:12 - that when we started creating animations
10:14 - for our player usually they actually
10:16 - added an animated component to our
10:18 - player and we don't need to do any
10:20 - adjustments in here we can just see that
10:22 - the component is actually referencing
10:24 - the controller and so that's why
10:26 - whenever we make a change to our
10:28 - animator controller it applies to a
10:30 - player so now we just need to be able to
10:32 - control our animators through all player
10:34 - movement script and to do that we need
10:36 - to reference it so we'll go in here and
10:38 - create a public animator and we'll just
10:41 - call it animator and that's basically it
10:44 - if we now save this and go into unity we
10:46 - can see that we have this empty animator
10:48 - field and this is where we can drag in
10:50 - our animator component so now every time
10:53 - we write animator in our script we can
10:55 - access this component right here and so
10:57 - if we go into the update function where
10:59 - we get our movement we can actually go
11:01 - in here and write animator dot set float
11:05 - and then we give it the
11:06 - name of the float that we want to set
11:08 - remember this is the name of our
11:10 - parameters so inside of our animator we
11:13 - can see that the name of our parameter
11:14 - is speed and notice that this has a
11:17 - capital S so inside of our script we can
11:19 - then write speed with a capital S like
11:22 - this and then comma and then we can give
11:24 - it the value that we want in our case we
11:26 - wanted to give it our current horizontal
11:28 - speed of our character which is this
11:30 - horizontal move variable right here so
11:32 - we'll simply write horizontal move and
11:34 - close it off with a semicolon but there
11:36 - is a tiny mistake in here and that is
11:38 - that our horizontal movement will be
11:40 - positive whenever we are going to the
11:42 - right and it will actually be negative
11:44 - whenever we're moving to the left and we
11:47 - want our speed variable to always be
11:49 - positive so to change that we can go in
11:51 - and use a handy little function called
11:52 - math F dot apps for absolute so this is
11:56 - going to take the value and make sure
11:58 - that it's always positive so if we now
12:01 - save this and go into unity and hit play
12:03 - we can see that as soon as we start
12:05 - moving our character it's going to play
12:07 - the run animation and as soon as we stop
12:10 - he goes right back to idling awesome now
12:13 - we want to be able to jump no matter
12:15 - what animation is currently playing so
12:17 - whether we are idling or running we
12:19 - always want to be able to jump off the
12:21 - ground and so we could go in here and
12:23 - create a transition from each single
12:25 - clip to our jump animation but as we add
12:28 - more clips that would quickly become
12:29 - very tedious since that we can use this
12:32 - any state right here and this basically
12:34 - allows us to create transitions from
12:36 - well any state so no matter if we're
12:39 - idling or running we can transition to
12:41 - our jump animation using this node here
12:43 - so I'm just gonna take this and drag it
12:45 - down and drag the entry up here to get
12:47 - it out of the way let's take our jump
12:48 - animation and drag it over here now we
12:50 - can transition from any state to jump
12:53 - and of course we still need to go in
12:55 - here and specify a condition otherwise
12:57 - we're just going to be jumping all the
12:58 - time and for this condition we need a
13:01 - new parameter so let's hit the plus sign
13:03 - and this time we want it to be of type
13:04 - Oh are we jumping or not we call this is
13:08 - jumping and we'll just set it to false
13:11 - by default and then under the condition
13:13 - here we can hit the plus sign this time
13:15 - we don't want to check for speed instead
13:16 - we want to check if is jumping is true
13:19 - and again if it is we don't
13:20 - in exit time and we also want to set the
13:23 - transition duration to zero of course we
13:25 - also want to be able to transition back
13:27 - from jumping so let's go ahead and
13:29 - create a transition to the player idle
13:31 - here and we only want this to play if we
13:33 - are currently not jumping so it's
13:35 - jumping is false and our current speed
13:38 - is currently less than point zero one
13:41 - and so this is really cool we can add as
13:43 - many conditions to these transitions as
13:45 - we want
13:46 - let's also add one to play run so we'll
13:48 - make another transition here and this
13:49 - one we want to play in the case that
13:51 - again we are not jumping so is jumping
13:54 - is false and the speed is currently
13:56 - greater than point zero one again we
13:58 - want to make sure to go through both
13:59 - these transitions and said has exit time
14:02 - to false and the transition duration to
14:04 - zero and the same for the other one
14:07 - and now our animators should be set up
14:09 - of course we still need to make sure to
14:11 - control our is jumping parameter through
14:13 - our script and if we go into our
14:15 - movement script we can see that we
14:17 - currently get some input for whether or
14:18 - not we want to jump and of course we can
14:20 - go in here and set jumping to true so
14:22 - we'll go animator dot said full this
14:26 - time because it's a boolean parameter
14:27 - that we want to change the parameter is
14:30 - is jumping and here we want to set it to
14:33 - true however we actually don't have a
14:36 - way of knowing when we want to stop
14:38 - jumping because all we're doing here is
14:40 - really giving our player controller
14:42 - input there's no place in our code where
14:44 - we have anything about actually landing
14:47 - again to get around this I've gone ahead
14:49 - and added a bit of extra code to our
14:51 - character controller if we use the
14:53 - vector player and open up the character
14:54 - controller we can see that there's a
14:56 - section here called events and in here
14:59 - there's an on land event events
15:01 - basically allows us to trigger certain
15:03 - functionality when something occurs in
15:06 - this case this event will be triggered
15:07 - whenever our character lands on the
15:09 - ground and so we can use this to tell
15:11 - our player movement when to stop jumping
15:13 - to do that we need to go in and create a
15:15 - separate function for this we'll create
15:17 - a void we'll call it something like on
15:19 - landing will open and close some
15:21 - parentheses and the same with some curly
15:23 - brackets and in here all we want to do
15:25 - is tell our animator to stop jumping so
15:27 - we'll go animator that said Paul is
15:30 - jumping and we'll set it to false and
15:33 - this will work just fine
15:34 - but in order for our event to be able to
15:36 - see this function we need to market as
15:38 - public and this might look a bit strange
15:41 - to you normally people associate public
15:43 - with variables but we can actually make
15:45 - functions public as well if we now save
15:48 - this and go into unity we can add a new
15:51 - on land event so we'll hit the plus sign
15:53 - here and here we can feed in a component
15:55 - so we want the player movement component
15:57 - and then we can go and choose a
15:58 - particular function we'll go under the
16:00 - player movement script and in here we
16:02 - can now see our new on landing function
16:05 - if we select that and then play the game
16:07 - we should see that whenever we jump it
16:09 - plays our jump animation and as soon as
16:11 - we land it transitions right back super
16:14 - cool we also see that for some reason it
16:17 - only plays the first frame of our jump
16:19 - animation and the reason for that is
16:21 - that if we go into our animator and
16:22 - check the transition going to our jump
16:25 - and then go under settings it's
16:27 - currently set to can transition to self
16:29 - so what's currently happening is that
16:31 - whenever we're jumping it's actually
16:32 - just transitioning to jump over and over
16:34 - and over again and so it's stuck on the
16:37 - very first part of that animation if we
16:39 - remove that it will only transition to
16:41 - jump once and then play the jump
16:43 - animation and then as soon as it's done
16:45 - it will either go idling or running so
16:47 - if we play the game with that change we
16:49 - can see that our jump animation works
16:51 - perfectly and the final thing that we
16:53 - want to go in here and add is the Crouch
16:55 - animations let's drag this to this side
16:57 - up here and first we want to be able to
16:59 - crouch from ilink so we'll add a
17:01 - transition to crouch here let's select
17:03 - it and let's add a condition but first
17:05 - we need a new parameters so we'll go in
17:07 - here and create a boolean called is
17:09 - crouching and of course we want the
17:12 - condition to be that if crouching is
17:14 - true well then we want to start
17:16 - crouching again we want to remove exit
17:18 - time and duration and we'll also create
17:21 - a transition back this is if we are not
17:24 - crouching so if crouching is false and
17:27 - our speed is currently less than point
17:29 - zero one and remove exit time and the
17:33 - duration and I'm actually getting a
17:35 - warning here and this happens sometimes
17:37 - when you set the transition duration to
17:38 - zero it's pretty annoying and it will
17:40 - kind of span your console with this
17:42 - morning it doesn't really do anything to
17:44 - the code but I found a nice workaround
17:46 - which is to set the
17:48 - time a bit larger just before disabling
17:51 - it it won't do any difference whatsoever
17:53 - but it will make sure that we don't get
17:54 - this morning well then create a
17:56 - transition from the run animation of
17:58 - course the demand here is that is
18:00 - crouching is true again will remove exit
18:03 - time and duration and finally we want to
18:06 - be able to transition back in the case
18:08 - that we are no longer crouching and our
18:11 - speed is greater than point zero one and
18:13 - you'll use my tricks to bump up the exit
18:15 - time remove it and set the duration to
18:17 - zero and there we go that is it for
18:21 - animator controller finally let's set
18:23 - our is crouching parameter through on
18:25 - script and if we have a look at our play
18:27 - movement here we can see that we do
18:28 - indeed control our crouching through
18:30 - this however there is one slight problem
18:32 - with this and that is in here we're only
18:34 - telling the character controller whether
18:36 - or not we want to crouch however
18:38 - sometimes our controller won't actually
18:40 - listen to our demands because if our
18:42 - character decides to crouch under a
18:44 - platform and then chooses to stand up
18:47 - you won't be able to because there's a
18:48 - ceiling above him and so we of course
18:50 - don't want to play an animation where
18:52 - our character stands up that's gonna
18:54 - look super weird
18:55 - so just like jumping we actually want
18:57 - our Crouch animation to be controlled by
18:58 - a character controller and of course
19:00 - because of this I've gone in and added
19:02 - an event for that as well so if we go to
19:03 - our player and under the character
19:05 - controller 2d we can see there's also an
19:07 - on Crouch event and this is a tiny bit
19:10 - different from the on land event in that
19:12 - it's actually a boolean event which
19:15 - means that not only will this trigger a
19:16 - function when we start crouching it's
19:18 - also going to trigger this same function
19:20 - when we stop crouching and it's going to
19:22 - tell the function whether or not we
19:23 - started or stopped crouching using a
19:26 - boolean so to show you how this works
19:27 - that's going to all play a movement and
19:29 - let's create another function under our
19:31 - on landing again this is going to be a
19:33 - public void and we'll call it on
19:35 - crouching and this time we're going to
19:37 - take in a boolean variable as an
19:39 - argument we call this something like is
19:41 - crouching will also open and close some
19:44 - curly brackets and now this variable
19:46 - here is actually going to be controlled
19:48 - by our character controller so that if
19:50 - we are crouching this is going to be
19:52 - true and if we're not it's going to be
19:54 - false so we can simply go ahead and set
19:56 - our ball on the animators so animator
19:58 - dot set bowl and we want to set the is
20:00 - crouching
20:01 - parameter we can set that depending on
20:04 - our is crouching variable right here so
20:06 - we'll simply pass that in directly and
20:08 - now if we save that go into unity and
20:10 - add a new on crouch event again we want
20:13 - to drag in our play movement we want to
20:15 - go under our player movement script here
20:17 - and we see our on crouching function
20:19 - however we can also see our on crouching
20:22 - function at the top here on the dynamic
20:25 - Bowl and that's because if we select
20:27 - this one at the top it's going to
20:28 - automatically pass in the right boolean
20:30 - so let's select that and let's take our
20:32 - animator and dark it to the bottom here
20:34 - so we can see everything happening while
20:36 - we're playing we then hit play and now
20:38 - when we crouch we can see that we
20:40 - transition to the Crouch animation and
20:42 - we can also Crouch under this obstacle
20:44 - and if we try and stand up it's not
20:47 - gonna work so now we can jump and run
20:49 - around we can Iowa and we can Crouch and
20:51 - everything is going to work just fine
20:53 - it's always going to play the correct
20:55 - animation super cool let's pretty much
20:58 - it for this video if you enjoyed it make
21:00 - sure to subscribe and bring that
21:01 - notification bill so you don't miss the
21:03 - next one also exciting news we're moving
21:06 - into a new office and should be hard at
21:08 - work setting everything up once this
21:09 - video goes live this also means that we
21:11 - have to skip next week's video but we'll
21:13 - be back with new videos as soon as we
21:15 - get settle them and if you want to
21:17 - follow our progress and get
21:18 - behind-the-scenes updates
21:19 - I suggest following us on Twitter at
21:21 - breakfast 3 and that thanks watching and
21:23 - I will see you in the next video thanks
21:27 - of the awesome patreon supporters who
21:28 - donated in June and a special thanks to
21:30 - Michael Neely Clinton Penske WA NGO
21:32 - Kildonan Co cheetah 3d Alexandra Blaire
21:34 - Sybok mommy Jeff Paul sentence sullivan
21:37 - zimmerman the great faisal Merrifield
21:38 - derek Eames kirk thanks so long Lula
21:40 - sets Timnath hold up our patron a
21:41 - stringer James Rogers rock friend
21:43 - Gregory Pierce
21:44 - Nokia vaisakhi Larry tweed The Rasmus
21:46 - joins CAD Aubry see car Jackson Chris
21:49 - Wilczewski James P and Robert pond you
21:51 - guys Rock