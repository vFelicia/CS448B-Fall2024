00:00 - thanks for tuning in at brackets hello
00:04 - everyone and welcome to video number 18
00:06 - into how to make it 2d platformer course
00:08 - in today's video we're going to take a
00:10 - look at creating a screen shake effect
00:13 - so we are going to be making this camera
00:15 - shake script and that is going to apply
00:17 - to most games and that should be pretty
00:21 - easy to implement so without further ado
00:25 - let's open up unity and before we get
00:29 - started I just want to mention that if
00:31 - you have any questions throughout this
00:33 - video go to farm drag is calm as always
00:36 - cool so I don't know why it's giving
00:40 - errors there but we should be good to go
00:42 - anyways and I'll just clear up that
00:44 - notification there and I will make a
00:49 - unity visual studio video how to
00:52 - integrate the two nicely don't worry
00:54 - I've promised you that now on the last
00:58 - platform a course or a platform a video
01:01 - you guys told me that you wanted to see
01:03 - that so don't worry I'll get around to
01:05 - it soon but let's get started so if we
01:10 - check out our main GM object here this
01:13 - is kind of where I want our screen shake
01:16 - to sit you could also place it on the
01:19 - main camera but just to make it kind of
01:20 - more modular I'll place it on the GM
01:23 - object and just think that makes a bit
01:26 - more sense and we'll name this camera
01:28 - shake as it says there so camera shake
01:30 - and then new script and of course C
01:33 - sharp so we create an ad there and
01:35 - double click it to open it up in Visual
01:38 - Studio and it's opening up on my
01:40 - secondary monitor here so I'll just drag
01:43 - it over and zoom in cool so we can start
01:48 - out by firstly creating a reference to
01:52 - the camera that we want to shake so a
01:56 - public camera here and we're just going
01:58 - to call that maybe main cam or it just
02:01 - can I'll call this our main cam and then
02:05 - we'll have a private variable that
02:07 - stores the shake amount and will default
02:10 - that to 0
02:12 - then in our kind of awake function here
02:17 - I like using awake for setting up
02:21 - references instead of start it's
02:24 - generally better to do it in a wake then
02:27 - we're going to check if I'm Maine Camus
02:28 - equal to null and if it is we'll just
02:31 - set it to the main camera like this so
02:36 - you don't necessarily have to provide a
02:39 - reference in the editor I don't think
02:42 - we'll be doing that cool so we can
02:46 - delete this start and update we will not
02:48 - be needing goes and instead we'll make a
02:51 - void just a private one called begin
02:55 - shake and this here will of course start
02:58 - the shaking effects and down here we'll
03:02 - make one called stop shake cool but
03:08 - every time we want to shake the camera
03:10 - we don't want to call first begin shake
03:12 - and then tell it how much to shake and
03:15 - then for how long and then call the stop
03:17 - shake and all that we want that to just
03:20 - be in one method so we're going to make
03:23 - kind of this more general method which
03:26 - we are going to make public so we can
03:27 - call it from an outside script I will
03:29 - just call that simply shake and for that
03:33 - we are going to take in a float with the
03:35 - amount and a float with the length kind
03:40 - of the how long the our shake should
03:42 - last and then inside of this will set
03:46 - the shake amount the private variable
03:49 - that we declare up here equal to our
03:51 - amount that we've passed in as an
03:54 - argument and then we're going to do what
03:57 - is called invoke and Method and we are
03:59 - going to use that the invoke repeating
04:02 - method to do that so basically what we
04:05 - do here is we say that we want to call
04:07 - this we can shake method we want to do
04:11 - that in 0 seconds so immediately and we
04:14 - want it to repeat every 0.0 0.0 one
04:21 - seconds so this way we can control how
04:25 - quickly things will shake so every time
04:30 - that this in kind of gets cold which is
04:35 - 0.01 seconds we are going to do a
04:37 - shaking effect so this is a pretty easy
04:40 - way
04:41 - syntax wise to do a shaking loop and
04:45 - then we are going to invoke both the
04:48 - stop shake method and make sure you get
04:53 - the names right here it's not going to
04:55 - give you an error if you don't and we
04:58 - are going to stop shaking in length so
05:01 - basically what we are saying here is
05:02 - that we wanted to begin this shaking
05:06 - method and just repeat that and then
05:09 - after X amount of seconds which is
05:11 - called length it should stop shaking and
05:14 - down here will then stop it from
05:16 - repeating so let's start out by saying
05:19 - if shake amount is greater than 0 so if
05:24 - we should be shaking at all then we want
05:28 - to set float and we'll just call this
05:32 - shake empty x equals or kind of this is
05:38 - actually the amount that it's going to
05:41 - be shaking so we'll just set that equal
05:44 - to random dot value and we'll multiply
05:48 - that with shake amount and we'll
05:51 - multiply it with 2 and then 2 - shake
05:55 - amount and now you might be asking why
05:58 - do we do this exact calculation here and
06:02 - the answer doesn't really exist I just
06:05 - looked up on the internet I wanted to do
06:07 - some camera shaking and thought what
06:09 - would be a nice way of calculating where
06:12 - the camera should be and I found this
06:15 - calculation right here which I thought
06:17 - looked pretty great inside you could
06:20 - also just do a random value and then
06:22 - multiply it by shake amount and it
06:24 - should give you something interesting
06:25 - but I thought this actually looked
06:28 - pretty nicely in game so you can of
06:30 - course play around with that equation
06:32 - and see if you can make it look even
06:35 - more awesome and we do this individual
06:37 - leave
06:38 - with the different axes in order to get
06:40 - a cool-looking shake so not kind of this
06:44 - diagonal shaking which which some games
06:49 - have which looks ridiculous
06:51 - so make sure to do a different random
06:55 - value for each axis so it's going to
06:58 - look weird you can of course only
06:59 - include this on one axis you could also
07:01 - do the z axis if you wished to do that
07:04 - but since we're using an orthogonal
07:07 - camera that wouldn't make a whole lot of
07:10 - sense cool so now we're going to declare
07:13 - a vector3
07:15 - actually I want to do that up here I
07:17 - think so we're going to make a vector3
07:19 - here which is just going to store the
07:21 - cam position from before so we can set
07:25 - it back right after so we're going to do
07:28 - main camp that transform that position
07:31 - and then down here we can simply say
07:33 - that we want the campus to dot x to be
07:41 - multiplied or added by the shake amount
07:47 - X and we're going to do the same with
07:51 - the Y here so plus equals shake amount Y
07:56 - and then down here we can say that main
08:01 - kam dot transform that position should
08:05 - be equal to cam that pass so basically
08:08 - what we're doing here is we are creating
08:10 - a temporary value variable that we are
08:12 - setting equal to the position of the
08:15 - camera we are then making to float
08:18 - values that will kind of equal how we
08:21 - want to offset our camera so we could
08:23 - call this offset amount I actually might
08:28 - go ahead and do that I think I'll do
08:29 - that just so we don't confuse it with
08:31 - the shake amount set up there so we'll
08:34 - just call this offset X and apply and
08:39 - just reflect to this one also so just
08:42 - call that one offset Y just like that so
08:49 - I've just simply renamed those
08:52 - and I think that makes a lot of sense
08:54 - then we add that onto the x-axis and the
08:57 - y-axis and then we we kind of put the
09:00 - position of a temporary variable back
09:03 - into the main camps transformed our
09:07 - position so that should update the
09:09 - position when we are done calculating so
09:11 - now that we kind of have that in place
09:14 - what we simply need to do down here is
09:17 - we want to cancel the invoke that we've
09:20 - started and the one we are we want to
09:23 - cancel this D pick and shake and then
09:27 - down here we can say main can dot
09:29 - transform that local position and simply
09:35 - set that to vector 3.0 and the reason
09:40 - why I'm setting it to vector 3.0 here is
09:43 - that I want to do kind of anything in
09:47 - the hierarchy that will make sure that
09:49 - we don't confuse the position so one
09:52 - thing that you will often run into is
09:54 - some issues between the camera shaking
09:56 - and the camera following or a camera
09:59 - tracking script that you're using those
10:02 - can often conflict and that will just
10:04 - make things look super weird
10:06 - so what we are going to do instead here
10:08 - down that we've saved this and hopefully
10:11 - see no errors we don't so that's great
10:14 - there we see the main camp variable so
10:18 - what the thing we are going to be doing
10:19 - here is we'll take the main camera and
10:21 - we'll just make an empty object and
10:24 - we'll call this just camera and then
10:28 - we'll copy the transform value so copy
10:31 - component of the main camera paste them
10:33 - into place component values into the
10:37 - camera object then drag the main camera
10:40 - under camera then copy the camera 2d
10:45 - follow component and remove it from here
10:47 - and then paste it as a new component
10:51 - onto the camera so now basically what we
10:55 - have is the setup where we have an empty
10:57 - camera object that only has the kind of
11:00 - job of following the player and then
11:03 - under
11:04 - we have a main camera which position is
11:07 - now relative to the camera object so we
11:10 - can shake this freely and everything
11:13 - will be relative to the camera so the
11:16 - cool thing about this is that when we
11:17 - wanted to reset we can simply say that
11:21 - we want the main cam that transform that
11:25 - local position to be equal to zero comma
11:29 - zero comma zero so that's super cool and
11:32 - makes things a whole lot easier and yeah
11:36 - definitely easier to understand so now
11:39 - that we have that in place I'm kind of
11:42 - wondering if I want this to be called
11:44 - begin shake or if I just want it to be
11:46 - called do shake I think I wanted to be
11:50 - do shake here because that's kind of
11:53 - more accurate with its actual function
11:56 - so now that we have that in place we
11:59 - should be able to call the shake method
12:02 - from wherever and just to test this
12:06 - let's make a quick update function here
12:10 - and I will just check if input dot get
12:16 - keydown whoops
12:18 - get key town and we'll check for a key
12:21 - code dot T for test and if we get that
12:26 - key we'll just simply call shake with an
12:31 - amount of valid C 0.1 F and a length of
12:37 - 0.2 F there so that's a pretty quick
12:42 - shake so now when we play we should see
12:45 - that when we hit T the camera quickly
12:50 - shakes awesome so now that we have that
12:53 - in place we can implement this in two
12:55 - different places in our game so for
12:58 - example whenever we destroy an enemy and
13:02 - it makes an explosion we don't have the
13:04 - particle system for that yet but then we
13:07 - couldn't could shake the camera or
13:09 - whenever we fire a powerful gun we could
13:12 - shake the camera we could go under the
13:14 - player here go under arm piss
13:16 - go into the weapon script and in here we
13:21 - could do a separate variable that kind
13:24 - of stores the amount that we would like
13:27 - to shake so I actually think that's a
13:29 - pretty good idea so let's make a
13:33 - separate variable here a public float
13:38 - and let's do cam shake amount and set
13:42 - that equal to zero point F by default
13:45 - and the length here I think we'll just
13:48 - keep at a standard rate I don't see why
13:52 - we should mess with that in here I mean
13:54 - some weapons might cause a longer shake
13:59 - but I don't think it's very necessary to
14:01 - expose that so then when we find the
14:04 - chute here we also called a colon effect
14:09 - here method and I think it's in here
14:12 - that we should do this so one thing that
14:14 - we would like to do is maybe just make a
14:17 - comment here and then say a handle
14:19 - camera shaking and in here we would
14:24 - probably also want a reference just a
14:28 - private one to the camera shake so we'll
14:32 - do a camera and actually we'll do a
14:37 - camera shake of course and we'll just
14:40 - call this cam shake and now we should be
14:43 - able to reference this so in the awake
14:45 - method will do underscore GM or actually
14:50 - let's do this in the start method just
14:52 - to make sure that our TM object is is
14:56 - completely set up at this stage so in
14:59 - here we should be able to do gamemaster
15:02 - Dodge GM don't get component and then
15:09 - say camera shake like this should be
15:16 - valid cool and then we'll simply set cam
15:19 - shake equal to that whoops looks like
15:22 - I've hit a wrong key here so okay so
15:26 - we'll set cam shake
15:29 - if I can spell this correctly equal to a
15:32 - game master the GM getcomponent camera
15:36 - shakes so remember we set up the game
15:38 - master so that we could also always get
15:41 - the local instance by doing dot GM and
15:44 - then dot get component to find the
15:47 - camera shake on that object so now down
15:50 - here actually we'll just ride on an
15:53 - error if that didn't work so we'll say
15:55 - if cam shake is equal to null then we'll
16:03 - simply debunk dot error log error and
16:09 - we'll say
16:10 - no camera shake camera shake script
16:21 - found on GM objects so that should be
16:28 - pretty descripted we could also just
16:31 - make it so that you don't need a camera
16:34 - shake object but I think that we'll just
16:36 - set it up this way you can of cortex of
16:39 - course exclude this if you're not
16:41 - interested in it but I just think it
16:43 - makes it kind of a lot more interesting
16:46 - to look at when we have the shaking
16:47 - effect when cool things happen so then
16:50 - under the private void effect pretty
16:55 - much at any point we could do this I'm
16:57 - just going to do it at the end here
16:58 - we'll just shake the camera and we'll do
17:03 - this by saying cam shake dot shake and
17:08 - will input the amount which is going to
17:11 - be the can shake amount and we'll do
17:15 - that with a link length of let's try 0.2
17:18 - F cold so we head back into unity and we
17:24 - should see the variable appearing here
17:26 - in one second there it is
17:29 - the shake amount and now when we fire
17:32 - whoops we get an error so what's going
17:35 - on here so it's saying that the object
17:38 - reference is not set to an instance of
17:40 - the object
17:42 - okay so that basically means that Cam
17:45 - shake is not currently equal to anything
17:48 - and that means that this probably has
17:51 - failed but did we actually get an error
17:54 - message we did not so I'll just quickly
17:58 - investigate this and then get back to
18:01 - you in a moment okay so I found out what
18:05 - was wrong here and if we take a look
18:08 - here it says null reference exception
18:11 - object reference not set to an instance
18:13 - of an object and it does so at the start
18:15 - method so if we double click that it
18:18 - highlights this line right here and
18:20 - that's kind of weird because if it says
18:24 - that it cannot find the reference here
18:27 - it can't be the cam shake because that's
18:29 - what we are setting equal to so kind of
18:32 - what we have to think here is that it
18:35 - doesn't know how to access get component
18:38 - because GM doesn't exist and indeed when
18:41 - I went to investigate this I was correct
18:43 - so if we open up the game master you'll
18:46 - notice that we are setting the GM
18:48 - reference or the GM variable inside a
18:52 - start method and that's really not
18:55 - something we want we want to set this
18:57 - inside of an awake method so we can be
19:00 - sure that it's already set in the start
19:03 - method so now that we've changed this to
19:05 - awake we should be actually able to
19:09 - access this and things should be working
19:11 - so let's try again
19:12 - let's hit play and let's try and shoot
19:17 - here and you can see that the camera
19:19 - indeed does shake this is a pretty crazy
19:23 - shaking amount and I actually think that
19:25 - the length is a bit too long so I change
19:29 - my mount about that let's just expose
19:31 - this anyway so let's do a float with the
19:35 - cam shake length and we'll just set that
19:40 - equal to something like 0.1 F and I
19:43 - would like to clear up the default this
19:45 - a bit lower so now down here all we have
19:49 - to do is simply put in the
19:51 - shake length also so now inside of our
19:57 - pistol here we should PC see this
20:00 - updating and then we can bump down the
20:03 - amount here and keep the length at 0.1
20:07 - and let's try this again I think that's
20:10 - a bit more reasonable with the camera
20:13 - shake you might think this is still a
20:15 - bit too much since this is not a and in
20:18 - a crazy powerful gun but I actually
20:20 - think it looks pretty good so far
20:24 - cool so that was basically it what I
20:26 - wanted to do very soon is I want to add
20:29 - some particles explosion particles to
20:32 - this enemy I know at East land in the
20:35 - last video but I now really want to do
20:37 - that and also we should of course make
20:40 - the camera shake when that explodes we
20:42 - should also get a game in here some way
20:45 - for our enemies to strike back and maybe
20:50 - some point systems there are lots of
20:53 - things to be done so I'm cool that was
20:56 - basically it for this video I hope you
20:59 - enjoyed it and I'll see you in the next
21:01 - one