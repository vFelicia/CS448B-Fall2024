00:00 - hello everyone.welcome to this tutorial
00:01 - this is a live stream tutorial on making
00:04 - a replica of the pretty publi doodle
00:06 - jumps so if you haven't played this
00:08 - yourself I will show you now what it
00:10 - looks like so if we play here it's going
00:12 - to generate a level with these randomly
00:15 - placed platforms and we can move to the
00:18 - sides in order to jump on them um this
00:21 - game has been remade in so many
00:23 - different versions such as puppy jumpin
00:26 - yada yada yada and it's really a fun and
00:29 - classic game that I thought would be
00:31 - really fun to recreate in a live stream
00:33 - so here is the base mechanics we have
00:36 - some player movement from the side to
00:38 - side we have the jumping on the
00:39 - platforms and the placement of the
00:40 - platforms and then of course we have the
00:42 - camera following along and that's
00:44 - basically what we're going to be making
00:46 - today
00:47 - so without further ado let's jump right
00:50 - into it so let's go file new project and
00:54 - here we can go ahead and choose a
00:55 - location for our project along with the
00:58 - name and we're just gonna call it doodle
01:00 - jump please don't sue me and then we're
01:02 - going to click 2d and hit create project
01:05 - and this is going to open up a new empty
01:08 - unity project if you for some reason
01:10 - have trouble following along or if you
01:12 - want to just grab some scripts or use my
01:15 - project in any way all you need to do is
01:17 - go to the github link that I will upload
01:20 - along with the video to youtube so you
01:22 - can check out everything there
01:24 - so now unity has opened up so we are
01:27 - ready to start on importing some sprites
01:30 - and I've gone ahead and created a few
01:31 - sprites to make them look like the
01:34 - original we have the doodler person we
01:37 - have the background and we have a
01:39 - platform and I'm just going to take all
01:40 - three here and import them into unity
01:43 - you can of course use any sprite that
01:45 - you want you probably don't want to be
01:47 - creating tools jump again but just using
01:50 - the same mechanics but I just thought I
01:52 - would use the original sprites so the
01:55 - first thing that we'll do is take our
01:56 - background here and maybe change the
01:58 - pixels per unit to something like 90
02:01 - just to scale it up a tiny bit let's hit
02:03 - apply on that and let's drag it into the
02:05 - hierarchy and now we should see that
02:07 - even when we maximize our game view
02:09 - everything is filled by this background
02:11 - let's also go and change the order in
02:13 - to something like negative 10 to make
02:16 - sure that it will always be layered
02:18 - underneath and your other sprites that
02:21 - we might be importing finally we can
02:23 - take our background here and we can drag
02:24 - it under our main camera and this will
02:26 - just mean that when we move our main
02:28 - camera up our background is going to
02:31 - follow along with it and so we're not
02:32 - going to have a case where our camera
02:34 - will move up and you will reveal
02:38 - whatever is behind the background we
02:39 - really don't want that to happen so now
02:42 - our background moves with our camera I'm
02:45 - also going to hit save here control s
02:47 - and I'm going to save this as a scene
02:48 - called main or main level level 1
02:52 - whatever you want yeah I'm just gonna
02:54 - call it main because I save all the time
02:56 - and it's really nice to have done that
02:58 - now so I can just spam control s
03:00 - whenever needed let me just have a look
03:02 - at the chat here to see if everything is
03:04 - alright looks like it that's awesome
03:06 - so now we are pretty much ready to start
03:10 - importing our first sprite and let's
03:12 - just get the doodler in here right away
03:14 - and you can see he's way too big so
03:17 - that's actually going here and adjust
03:19 - the sprite pixels per unit to something
03:22 - like 200 maybe actually hit apply have a
03:27 - look in the game view here whoops the
03:29 - game you yeah I think that that's a much
03:31 - nicer size and one thing that I also
03:33 - want to do is take a game view and dock
03:36 - it to the right here so we can see both
03:37 - of our scene and our game view at the
03:40 - same time because the game is often
03:41 - viewed in this very vertical format with
03:45 - a very with a very tall screen size and
03:51 - not that wide so I thought we would do
03:54 - that here as well and now we're pretty
03:57 - much ready to start to add some
03:59 - functionality to this guy so currently
04:01 - when we hit play of course we're only
04:03 - seeing a sprite cue but he isn't really
04:05 - doing anything at all the first thing
04:08 - that I want to add to him is physics so
04:10 - that's going here and add a rigidbody 2d
04:12 - component and this will now enable
04:15 - physics on this game object so if we now
04:17 - hit play is going to fall down the next
04:20 - thing we want is of course for him to
04:22 - collide with our environment but in
04:24 - order to
04:25 - for that to happen we have to first
04:27 - create an environment so let's go and
04:29 - select a platform here and let's place
04:31 - him on one of these platforms so here we
04:34 - have a platform and I'm just going to
04:36 - drag this down here to the bottom for
04:39 - screen so he starts at the bottom of our
04:41 - screen and I'm just gonna place our
04:43 - doodler somewhere on top of this so he
04:45 - will fall down on it and now we can
04:48 - select our platform and in order for a
04:50 - doodler to collide with it we need to
04:52 - also add a Collider to our platform so
04:56 - we'll go into your add component and we
04:58 - are going to add an edge Collider 2d now
05:01 - the edge Collider is basically just
05:03 - whenever you want an object to collide
05:05 - with a line you can go ahead and add
05:08 - point to this line here so you can
05:10 - actually stretch the edge Collider in
05:12 - any way that you like but the collider
05:14 - is not a box or a sphere it's just a
05:17 - symbol line and this also really easily
05:19 - allows us to add collision to the top of
05:24 - our platform here and that's really the
05:26 - only place where we want our doodle to
05:29 - collide with because we don't want him
05:32 - to be able to collide with the sides and
05:35 - we actually also want him to be able to
05:37 - pass on top of platforms and then land
05:40 - on them from the top so whenever he
05:42 - comes from underneath the platform here
05:45 - we want him to just go past it and then
05:47 - be able to bounce off it again so that's
05:49 - why we're using an edge Collider because
05:51 - it's really really simple to do this
05:53 - with so I'm just gonna stop editing the
05:55 - collider here now that I'm satisfied
05:57 - with it and maybe actually I want to
06:01 - make sure that my points are using the
06:03 - exact same y-value I just think that
06:06 - makes sense I'm just gonna copy the Y
06:07 - value from one of the points and now it
06:09 - should be completely horizontal cool so
06:14 - now when we hit play we should see that
06:16 - our doodle still falls below our
06:18 - platform and the reason for this is that
06:20 - our doodle o still doesn't have a
06:23 - Collider so we'll go ahead and add
06:25 - another component here and this time we
06:27 - want a box Collider 2d we don't however
06:30 - want this to fit our entire duel we
06:33 - don't want his nose cannon thing to be
06:36 - stuck in on platforms and we have
06:39 - they don't want his head to collide with
06:40 - anything either we really only want to
06:42 - focus this on the feet area so let's go
06:45 - in here and hit edit Collider and we can
06:48 - now drag the same here so somewhere
06:50 - along those lines somewhere around here
06:54 - and we can go ahead and drag it down
06:55 - here and just take the bottom part of
06:58 - our dude we don't want to make this too
07:00 - thin then we could have collision errors
07:01 - so let's just have it be somewhere
07:04 - around here and now we can stop editing
07:07 - the collider and we should see that when
07:09 - we hit play or doodle will fall and land
07:12 - on the platform yes all right that was
07:16 - kind of the first part of getting some
07:20 - physics working in our game the next
07:23 - part is bouncing and there are really
07:26 - multiple ways to go about this one some
07:29 - of you might think well unity actually
07:32 - has a built-in function where a built-in
07:36 - component or acid that allows us to
07:39 - define physical properties of materials
07:41 - and one of these properties is bouncing
07:44 - s so we could go in here and create a
07:46 - physics material 2d call it bouncy and
07:50 - then in here increase the bounciness to
07:52 - say 1 and then on our doodler we'll
07:55 - simply drag in our bouncy under the
07:57 - material and now we should see that when
08:00 - we hit play our doodler will bounce on
08:02 - top of this platform however how much we
08:05 - bounce is going to completely depend on
08:07 - from from where we fell so our current
08:11 - velocity and you can see that with a
08:13 - bouncing s of 1 will always bounce the
08:16 - exact same amount as we fell so if we
08:21 - fill from up here we would return to
08:23 - this exact position and that might be
08:25 - with some errors because you can see our
08:27 - doodler is currently jumping even higher
08:30 - if this is because of a rounding error
08:32 - or because of some of the properties of
08:34 - these materials I actually don't know
08:36 - but that is the general rule so the
08:39 - amount of force that you hit something
08:40 - with is also the amount of force that
08:42 - you will have leaving it but we don't
08:46 - want this we want it so that no matter
08:48 - how hard we hit a platform will always
08:50 - get shut off of it you see
08:52 - force that we specify using a constant
08:55 - force so instead of using this material
08:57 - here we'll select none instead and
08:59 - remove it from our project we can go
09:01 - ahead and add a script to our platform
09:03 - so that select our platform
09:05 - let's hit add component and let's go in
09:07 - here and add a platform script and under
09:11 - new script here we'll go and select
09:13 - c-sharp and hit create and add now if we
09:16 - double click this it will open up in
09:20 - Visual Studio and let me check if
09:21 - everything's right in the chat looks
09:24 - like it and I think it's opening in my
09:25 - secondary monitor here let's go and drag
09:30 - this over cool and the first thing that
09:34 - we want here is to get notified whenever
09:36 - something bounces on a platform so
09:38 - whenever our platform gets hit by
09:41 - another object well then we want
09:43 - something to happen so let's remove our
09:45 - two functions here and let's go in and
09:48 - create a void on collision enter 2d and
09:52 - you can actually see it wants to
09:54 - autocomplete that here and if I do that
09:56 - it is going to fill out our entire
09:57 - function but this might look a bit
09:59 - confusing for beginners I'm going to
10:01 - remove the first word here it's not
10:03 - needed and in here you can see that it
10:05 - gathers some information about what
10:08 - reaches collided with so this function
10:10 - on collision on collision entered 2d
10:13 - it's a callback method used by unity
10:15 - that gets triggered whenever our object
10:17 - collides with another object whenever
10:20 - this happens unity will execute whatever
10:21 - code is in between these two brackets
10:24 - however something that is often useful
10:26 - is getting some information about the
10:28 - collision that just occurred the
10:31 - velocity of the objects what object we
10:33 - just collided with and so on so and that
10:37 - is what we store here in a variable
10:39 - called collision so now we can actually
10:41 - go in here and get information about our
10:43 - collision by simply going collision dot
10:45 - then you can see we have the collider
10:47 - that we just collided with we have
10:49 - contact points we have relative
10:51 - velocities and so on so what we want to
10:55 - do here is go in and get our collider
10:57 - and we actually want to get a component
11:00 - on this Collider and the component that
11:02 - we want to get is the rigidbody because
11:04 - this will allow us to add forces to that
11:06 - rib
11:06 - so we're going dot getcomponent whoops
11:10 - f-type rigidbody2d and we can then store
11:15 - this in our own variable called again of
11:17 - type rigidbody2d and let's just call it
11:19 - RB now of course we might get a
11:23 - situation where two platforms collide in
11:26 - which case there would be no rigid body
11:28 - on the colliding object or that we just
11:32 - collide with something other than the
11:34 - player that doesn't have a rigid body
11:36 - therefore we want to go in here and
11:37 - check if our P is not equal to no so if
11:41 - we actually find a not rigid body on the
11:43 - on the object that we collided with well
11:46 - then we want to go ahead and add a force
11:48 - so now we can actually go in here and go
11:50 - our beat add force and we could go in
11:53 - here and add a force in the upward
11:54 - direction the problem however with using
11:58 - add force is that add force takes into
12:02 - consideration the velocity that we are
12:05 - currently moving with so if we are
12:07 - falling really quickly downwards and
12:09 - adding a force in the opposite direction
12:12 - so upwards we are we are actually
12:16 - competing with our downwards force and
12:18 - so if we are falling quickly down and
12:20 - then adding a force we will only jump
12:22 - very slowly upwards
12:24 - whereas if we are only falling very
12:25 - slowly and then adding the same force
12:28 - will then move upwards really quickly so
12:30 - we really competing with the downwards
12:33 - force instead of this well go ahead and
12:36 - modify the velocity of a rigid body
12:39 - directly so velocity is the result of
12:42 - our forces meaning that if we set the
12:44 - velocity directly we will simply set the
12:46 - speed that we want our object to travel
12:48 - upwards in directly instead of adding
12:51 - all these forces and them cancelling
12:53 - each other out
12:53 - the way to do this is by creating a
12:56 - vector tube we'll call this one velocity
12:59 - and we'll set it equal to RP toward
13:02 - velocity so now we've gotten the
13:04 - velocity of a rigid body in its current
13:06 - state
13:07 - then we're going here and set velocity
13:09 - dot y equal to and this is where we can
13:11 - control the amount of force that we want
13:13 - our platform to give the tool or at
13:16 - least the velocity the Y velocity of the
13:19 - doodle after
13:20 - it's our platform and we can control
13:22 - this using a variable so public float
13:24 - and let's call this jump force and set
13:29 - it equal to about ten by default then
13:32 - down here we can set velocity to dot y
13:34 - equal to jump force and then we simply
13:37 - need to go our B double ASSA T equals on
13:40 - the velocity vector the reason why we
13:43 - are doing it in three steps instead of
13:45 - just setting artbeat velocity dot y
13:48 - equal to jump force is that this will
13:51 - actually throw an error because we can't
13:53 - modify a component of our vector without
13:56 - changing the entire vector so we're
13:58 - really just getting the vector modifying
14:01 - a component of the vector and then
14:02 - setting it back to this vector and
14:05 - that's how we're doing it so if we now
14:07 - were to save this and go into unity and
14:11 - wait for this to update there we go we
14:15 - have a jump force and if we now hit play
14:17 - we should see that as soon as our duel
14:20 - collides with our platform we start
14:23 - jumping and this doesn't matter where we
14:25 - jump from or the amount of force that
14:28 - we're moving with before then you can
14:30 - see no matter where jump from our tool
14:32 - is going to land in the same place
14:35 - pretty cool right so of course we need
14:39 - to modify this a bit to make it feel
14:41 - better one thing is I think the jumping
14:44 - is a bit too slow I want this game to be
14:47 - moving a bit more quickly so let's go
14:49 - under edit project settings and then
14:52 - physics 2d and let's increase our
14:54 - gravity to something like negative 15
14:57 - now we have more pull on a doodle which
15:00 - means that we don't job miss high and we
15:02 - also we can also see that gravity works
15:04 - a bit quicker you could also see there
15:06 - that we glitched into the platform a
15:08 - little bit and the reason for this is
15:09 - probably that if we go under our doodler
15:12 - or collision detection is currently set
15:14 - to discrete I would recommend going in
15:16 - and setting this to continuous which
15:18 - should mean that unity will use a
15:20 - different method of checking if we hit
15:22 - objects that isn't as faulty so that
15:25 - should get rid of some of those vehicle
15:27 - itches and you can now see that we're
15:28 - just jumping on top of this platform
15:30 - pretty cool right
15:32 - so that is kind of the base of the
15:35 - platform jumping but there is a very
15:38 - very important thing that we haven't
15:41 - really taken into consideration yet and
15:47 - that is of course if we go ahead and
15:48 - make a prefab out of our platform and we
15:52 - go ahead and duplicate it and we move it
15:54 - up and now we try now we try and hit
15:59 - play and see what happens when okay so
16:03 - this is actually working one second let
16:07 - me move it down here there you go so now
16:10 - you can see that we are actually
16:12 - colliding with our second platform as
16:15 - well we are hitting it's collider
16:17 - bumping on to it and it's throwing us
16:18 - back in the opposite direction this is
16:21 - not something that we want to happen if
16:23 - we go here and take our platform and
16:25 - move it down so we can replicate the
16:26 - same instance let's try a net play here
16:29 - and luckily unity has a component that
16:33 - is super odd that works really well for
16:35 - this particular situation and that is if
16:39 - we go and hit add component on our
16:42 - platform I'm just going to do it on our
16:43 - prefab here so it adds it to both
16:46 - platforms at the same time and the
16:48 - component that I'm talking about is the
16:50 - platform effector 2d so if we go ahead
16:53 - and select our platform effector 2d here
16:55 - and we use one way everything is good
17:00 - yeah you pretty much don't need to set
17:01 - anything up the only thing you need to
17:02 - do is go to the edge Collider and click
17:04 - used by a vector and this way our
17:07 - platform effector 2d knows that it
17:09 - should use this Collider and what this
17:11 - does is it basically says to our
17:14 - platform if we go ahead and select one
17:16 - of them that you only need to collide
17:18 - with stuff within this arm arc here so
17:22 - if something is collided colliding with
17:24 - our platform from the top we'll go ahead
17:27 - and actually do the collision but if
17:29 - it's coming from the bottom will
17:31 - completely ignore it and if we're now at
17:33 - play we should see that we simply pass
17:35 - through we simply pass through our
17:37 - platform you will also see that it went
17:40 - ahead and actually applied the upwards
17:42 - force so it is registering a collision
17:44 - but we aren't axe
17:46 - colliding with the object so all we need
17:48 - to do is go into a script here and check
17:50 - whether or not our object is coming from
17:53 - the from below or from above and the
17:56 - easiest way to do this is using the
17:58 - collision dot relative velocity and this
18:02 - gives us the relative velocity between
18:05 - the two colliding objects and we can
18:07 - actually use this to say if collision
18:10 - relative velocity dot Y is less than or
18:13 - equal to zero well then we are coming
18:15 - from the top in which case we can
18:17 - actually go ahead and do all of this
18:19 - stuff and if not well then we simply
18:22 - don't want anything to happen so now we
18:25 - should see that this only triggers only
18:28 - triggers not the first time but the
18:30 - second time there we go and now we
18:32 - actually have the proper physics
18:35 - implemented for our character and all
18:37 - platforms
18:38 - yeah that went surprisingly well we
18:41 - haven't had a glitch yet that's awesome
18:44 - cool so the next thing that we should
18:48 - and the next thing that we should
18:50 - prob'ly implement here is some actual
18:52 - moving around of the player so let's go
18:57 - ahead and do that now so if we select
19:01 - our doodler we can go ahead and add a
19:03 - component and this component will just
19:05 - call something like player let's like C
19:07 - sharp hit create an ad and let's let's
19:12 - open this up in unity and this is just
19:16 - going to be a very very simple movement
19:18 - script so the first thing that we want
19:20 - is to get a reference to our rigidbody
19:22 - 2d so we'll create a rigidbody 2d call
19:26 - it RB and inside of our start method
19:28 - we'll set our be equal to get component
19:31 - of type grated body 2d then just to make
19:34 - sure that there will will always be a
19:36 - rigidbody component on the game object
19:38 - we'll go to the top of our class here
19:40 - and at the attribute require component
19:42 - of type rigidbody to V there we go so
19:47 - now we know that there's always going to
19:49 - be a rigidbody
19:50 - along with the script here and we are
19:52 - now getting it in the start method then
19:55 - we can go ahead and get some movement
19:58 - input and we'll do this inside of our
20:01 - update method so we can use input that
20:04 - get access and the access that we want
20:06 - to get is the horizontal movement axis
20:09 - we of course need to store this in some
20:12 - kind of barrel because we could of
20:14 - course just stored here call it movement
20:16 - and then go ahead and add all of our
20:19 - movement code here but remember whenever
20:24 - we are dealing with physics and unity we
20:26 - don't want to do movement inside of
20:28 - update we want to do it in fixed update
20:31 - so we'll go on instead of doing all this
20:35 - will create a separate function fixed
20:38 - update and this is where we'll do the
20:41 - actual movement however we still need to
20:44 - get our input inside the update so let's
20:47 - go up here and let's create a public
20:49 - float called movement and set it equal
20:51 - to zero by default
20:53 - well then inside of our update set
20:55 - movement equal to whatever input we get
20:57 - and then inside a fixed update we can go
20:59 - and set our peak velocity and this is
21:02 - where we want to change the X velocity
21:04 - so again we need to first get our
21:06 - velocity so vector to velocity equals
21:10 - our P dot velocity and we're doing this
21:12 - the exact same way that we did it before
21:14 - with the platform we're now modifying
21:16 - the X part of our velocity and setting
21:19 - it equal to our movement variable and
21:22 - then we are setting our P dot velocity
21:24 - back to our velocity our velocity vector
21:29 - so now if we save this we should see
21:33 - that if we hit play we are able to
21:35 - really really slowly move from side to
21:39 - side and indeed we are let's go ahead
21:41 - and multiply this with some kind of
21:43 - speed variable and actually I don't want
21:45 - this to be public at all I don't want us
21:47 - to be able to edit that in the inspector
21:48 - and I don't want to see it so instead
21:51 - let's create a public variable here
21:52 - public float call speed or movement
21:55 - speed
21:56 - let's do movement speed instead of equal
21:58 - to about ten by default then let's take
22:00 - this variable and multiply our input
22:05 - with this variable so whenever we get
22:08 - our movement here we we multiply our
22:10 - input by movements
22:12 - speed and now we should see that when we
22:14 - hit play when we have play we can much
22:18 - much quicker move from side to side you
22:20 - will also see that we get some crazy
22:22 - spinning on our doodle it looks really
22:25 - fun but it's not really intentional what
22:28 - we'll do here to get rid of that is
22:29 - simply go to our rigidbody and add a new
22:33 - constraint to freeze the rotation on the
22:35 - z-axis that's all you need to do really
22:38 - so just the play and now our doodle
22:40 - cannot rotate in any of the axes but you
22:43 - can see that we can control him and the
22:46 - movement actually works pretty nice cool
22:50 - so that's the base of our movement or
22:54 - physics pretty much the base of our
22:57 - games mechanics next is just generating
23:01 - a level for our player to move through
23:03 - and then of course having our camera
23:05 - follow him so what do you guys want to
23:07 - start with let me know in the chat
23:09 - Eiffel will pick whatever you want also
23:13 - if you have any questions at this point
23:15 - definitely let me know let's see here
23:22 - things are looking good so you guys are
23:27 - saying camera cool actually you're
23:31 - probably saying both camera and level
23:33 - but I think most people are saying
23:34 - camera so we'll go with camera so this
23:38 - is actually really easy all we need to
23:40 - do is go to our camera at a camera
23:43 - follow script and of course open this up
23:47 - and the first thing that we need is a
23:50 - variable that references our players so
23:53 - the target that we want to follow will
23:56 - create a public transform and we'll call
23:59 - it target and I can see something is
24:01 - wrong here with my autocomplete so I'm
24:03 - just gonna restart visual studio
24:06 - sometimes that happens in the new
24:08 - version I haven't quite figured out why
24:10 - yet so now we have our target and we'll
24:13 - just reference this through the
24:15 - inspector we can then delete our start
24:17 - method and inside of our update here
24:20 - what we want to do is check if our
24:22 - targets y value
24:25 - greater than our or at the cameras
24:27 - y-value in which case we want to move
24:29 - our camera because if you have ever
24:31 - played doodle jump you know that our
24:33 - camera will follow our player but only
24:36 - when the player moves upwards if he
24:38 - falls down the camera stays stationary
24:40 - and it won't move with him on the x-axis
24:43 - so it will really only move on the
24:45 - positive Y and that's why we're going
24:47 - here and check if our target position
24:49 - dot y is greater than our transformed up
24:54 - position dot Y well then we're ready to
24:56 - go ahead and move and the way that we'll
24:58 - move is we'll simply set transformed up
25:01 - position so a camera's position equal to
25:04 - a new vector3 and here was put 0 on the
25:08 - X we wanted to completely be centered on
25:10 - the X we'll input our target position Y
25:14 - on the Y and then we'll give it say
25:16 - negative 10 on the Z so of course you
25:20 - could also go in here and use transform
25:22 - position dot X and transform position
25:26 - dot Z if you just want to be able to
25:28 - adjust that in the inspector and this is
25:30 - a bit better to do it that way because
25:33 - this way you're not hard-coding in
25:34 - numbers so if we now save this and hit
25:37 - play we should see that whenever our
25:39 - doodle moves oops okay we also need to
25:42 - reference our target here so that's our
25:44 - doodler so whenever our doodler move
25:47 - above the center of our camera our
25:49 - camera starts switching or moving with
25:52 - him and that's that might actually be
25:54 - clearer over here so you can see that
25:56 - when he moves up here he takes the
25:58 - camera with him cool
26:01 - of course this movement is currently
26:04 - very sharp and we probably want to
26:08 - smooth it out a little bit to do this we
26:10 - can simply use transform vector 3 dot
26:13 - loop so if we go and take our new
26:16 - desired position here and stored in a
26:18 - separate variable vector three new paths
26:20 - and set it equal to this calculation
26:23 - here
26:23 - well then instead of just setting
26:25 - transform top position equal to the new
26:27 - position directly we'll go in and use
26:30 - vector 3 dot lerp and this is something
26:33 - also I also show how to do in the smooth
26:36 - camera follow video so if you want to
26:38 - learn more
26:38 - about looping and exactly what's going
26:41 - on here and how to get really smooth
26:42 - camera behavior definitely check that
26:44 - out but for now let just said vector3 or
26:47 - set a position equal to vector $3 first
26:50 - we give it the position that we are
26:51 - smoothly transitioning from and that's
26:53 - our current position so transform that
26:56 - position then we give it the position
26:58 - that we're transitioning to which is our
27:00 - new position your past and then we give
27:04 - it this smooth speed so here we'll go
27:07 - and create a public float call it smooth
27:11 - speed and set it equal to something like
27:14 - point three I will then give it our
27:16 - smooth speed here if we now save this
27:18 - and go into unity and hit play I'm sorry
27:22 - hit play here you can see that our
27:25 - camera is moving up in a much smoother
27:26 - fashion however we are getting a tiny
27:29 - bit of jitter you can see here that it
27:31 - looks like our doodle is jumping a
27:33 - little bit in air the reason for this is
27:36 - that we're currently moving our camera
27:38 - in the same method or in the update loop
27:42 - and where we want to move our camera is
27:44 - in the fixed update this is because fik
27:47 - not in fixed update I'm sorry in late
27:49 - update this is because late update is
27:51 - called late update because it updates
27:54 - later than the normal update method this
27:57 - means that first we move our character
27:59 - in update and fixed update and then we
28:01 - go ahead and move our camera inside of
28:03 - later update and we only want to move
28:05 - our camera after our player has moved so
28:09 - that we don't get any mixing back and
28:11 - forth between the two we don't want to
28:13 - move our camera and then move the play a
28:15 - little bit and then we move the camera
28:17 - to where the player was before and then
28:18 - we move the player again now we want our
28:21 - camera to always be sort of say behind
28:23 - our player and that's why we use the
28:25 - late update here instead if we're now
28:27 - going and hit play here we should see
28:30 - that our camera smoothly will move that
28:34 - wasn't too smooth these sort of things
28:38 - always mess up come on
28:41 - Yesi this is not smooth behavior I
28:43 - should watch my own video it's probably
28:46 - a reason for this I'm not sure I'm going
28:49 - to spend too much time debugging this
28:52 - um today I definitely recommend you
28:55 - check out this smooth camera behavior
28:57 - video do you guys have any idea of why
29:00 - this is happening in the chat definitely
29:02 - let me know I think the main problem
29:05 - here is maybe that vector3 that loop
29:07 - wasn't built for this sort of use what
29:10 - you should use instead is smooth damp
29:12 - and I believe that's part of physics 6
29:17 - that smooth damp nope Victor 3 dead
29:20 - smooth them smooth and okay it's here
29:23 - and this is actually much better for
29:25 - doing this sort of calculation we can
29:27 - try and use this on the go you added to
29:30 - that yeah we can transition to this so
29:33 - our current position is the first one so
29:35 - let's transform dot position the next
29:38 - one is to target position so that's a
29:40 - new paths
29:41 - we then Rev our current velocity so we
29:44 - need to go up here and create a private
29:46 - float called current velocity and simply
29:49 - default this to zero or is this bad this
29:53 - is a victor three of course make the
29:55 - three current velocity and we don't need
29:57 - to default back to anything we'll input
30:00 - our current velocity here and then our
30:03 - smooth time and that is our smooth speak
30:06 - here there we go and this is of course a
30:08 - ref alright let's try with this instead
30:12 - and see if that works better let's hit
30:15 - play here and I think now that we should
30:18 - get much smoother behavior in T no God
30:22 - darn it
30:23 - why is this happening to me let's try
30:27 - and have a look at our player here so we
30:29 - are moving him inside of the fixed
30:31 - update maybe it has something to do with
30:33 - the fact that we are modifying his
30:35 - velocity directly and so it needs o
30:38 - Delta time that's why ok so inside of
30:41 - our camera follow here we need smooth
30:43 - speed multiply it with time that Delta
30:45 - time and now hopefully we'll get smooth
30:52 - behavior I think that was smooth you
30:54 - guys tell me I think it was yes this
30:58 - looks much smoother now and I think if
31:01 - we go ahead and increase our smooth
31:03 - speed here so two two maybe
31:07 - yeah then it starts jumping a bit again
31:10 - okay I think we're kind of getting past
31:13 - the way or past the amount of time that
31:17 - we can can spend on this I've always
31:22 - found smoothing like this really really
31:25 - weird you know what I think it's much
31:29 - nicer if our game actually just you know
31:32 - snaps to the position I think this
31:34 - doesn't get in in the way of gameplay it
31:37 - just it just works
31:39 - no one is referencing any variables we
31:42 - can just say that he'll play and yeah I
31:47 - mean this this is the sort of behavior
31:49 - that we were looking for I'm sorry about
31:52 - that guys that tested it before maybe it
31:54 - has something to do with the fact that
31:56 - I'm recording and that Messi that's
31:57 - messing with the framerate I don't know
31:59 - why this is happening but definitely go
32:02 - watch my video it was smooth on that one
32:05 - and and you answer about that but we
32:08 - kind of have to move on here so yeah
32:11 - we'll get rid of the smooth speed
32:12 - variable because otherwise it will just
32:14 - be staring us in the in the face and
32:16 - we'll be all thinking about it and yeah
32:21 - all right let's move on so the final
32:25 - part of this a nice thought camera
32:27 - behavior was going to be easy anyways we
32:29 - are moving on the final part of this is
32:32 - much more important and that is
32:34 - generating a cool level so to do that we
32:37 - need to go and create an empty game
32:39 - object that's reset the transform and
32:41 - let's name this something like level
32:43 - level generator let's move it to the top
32:47 - here move it to the top let's add a
32:50 - component called level generator
32:54 - let's choose C sharp hey create an ADD
32:56 - and let's double click this to open it
33:00 - up in visual studio and let's quickly
33:03 - get past our camera follow script please
33:05 - please remove it from my screen there we
33:08 - go we'll cut that out in YouTube all
33:11 - right so oh I'm kidding
33:13 - so the level generator basically there
33:16 - are a billion gazillion million ways
33:19 - to do level generation in unity and
33:22 - pretty much in programming in general
33:24 - and of course there are good ways and
33:27 - there are bad ways and their mediocre
33:29 - ways but really the easiest way to do it
33:32 - is by generating the entire level at one
33:36 - time not procedurally as we go through
33:39 - but just generating it at the start and
33:42 - that's what we'll be doing in this video
33:45 - what I recommend is if you're creating
33:47 - this game here and you want to publish
33:49 - it at some point is that you generate
33:52 - the level as the player is moving
33:54 - through it the good thing about this is
33:56 - that your get your level will be
33:58 - infinite and that you will loading the
34:01 - level as you're playing it and so you
34:02 - don't have to store a huge level at once
34:05 - but only maybe everything near the
34:08 - player again this is this is maybe a
34:11 - better way of doing things but it's also
34:13 - a lot more tricky what we'll want to do
34:16 - here's just a simple introduction to how
34:18 - you can use randomness to layout a level
34:21 - and to do this we first need a reference
34:25 - to our platform so we'll go plot public
34:27 - game objects we'll call it platform
34:29 - prefab we'll also need three other
34:32 - variables the first one is a public
34:35 - integer with the number of platforms
34:37 - that we want to spawn the second one is
34:40 - going to store the width of our level so
34:43 - level with I will default this to
34:46 - something like our node 3 and then
34:48 - finally we'll have to public floats one
34:52 - for the minimum why and we'll set this
34:54 - to something like point two and one
34:56 - front for the maximum why and we'll set
34:59 - this to something like 1.5 now what do
35:03 - these different variables mean well
35:06 - let's go through them as we start to
35:07 - generate our level the first thing that
35:10 - we want to do is only generate up to the
35:12 - number of platforms we specify and that
35:15 - means that we can create a for loop
35:16 - where we loop through where I set to 0
35:20 - and we increase I and loop through until
35:23 - we've reached our number of platforms so
35:27 - this will loop through 200 times then
35:30 - what we can do is go in here and
35:32 - create so we'll instantiate a platform
35:35 - prefab and of course we need to specify
35:38 - a position for this prefab so we'll give
35:40 - it some kind of spawn position and this
35:44 - is what will define in a second we'll
35:46 - also give it a rotation but for that
35:48 - will just use quaternion third identity
35:50 - which means that we won't rotate the
35:52 - object at all now we can go ahead and
35:54 - create our vector three this is going to
35:57 - be our spawn position and let's just set
36:00 - this to a new vector3 five to four then
36:05 - right before we instantiate each
36:07 - platform we'll go ahead and increase
36:09 - spawn position on the Y by a random
36:12 - value so we'll increase this so plus
36:16 - equals random range and we want this
36:19 - random value to go between our minimum Y
36:21 - and our maximum Y so now every time we
36:25 - create a new platform we increase our Y
36:28 - value with the with something between
36:30 - 0.2 and 1.5 and we then instantiate a
36:34 - plat a platform at this position and we
36:37 - then loop through again if we go ahead
36:39 - and save this we should see we should
36:42 - see that we generate 200 platforms oops
36:47 - we have to first off specify a platform
36:51 - here we have to set the number of
36:53 - platforms to a hundred or 200 maybe even
36:57 - 200 and we can actually give it a
37:00 - default value here of 200 so if we now I
37:02 - play we should see that we generate 200
37:04 - platforms with varying you can see here
37:09 - with varying distance between them but
37:11 - all on this with the same exposition of
37:14 - zero and we can actually jump through
37:17 - all of these platforms right now it's
37:18 - not too exciting or hard but you can see
37:21 - that the base of the game is now working
37:23 - and this is going to be 200 platforms
37:26 - tall what we can then do is simply go
37:30 - ahead and give them a random x value so
37:33 - we can go in here and say spawn position
37:35 - dot X and then we can set this equal to
37:39 - a random value between negative level
37:41 - width and positive level with
37:46 - and this means now then that for every
37:49 - platform it's going to pick a totally
37:51 - random x-value and you can now see that
37:53 - this actually looks like doodle jump we
37:55 - get to jump between these platforms
37:57 - they're totally random distances between
38:00 - them which means that things look varied
38:03 - and you can see that we can sometimes
38:06 - jump from one screen one side of the
38:07 - screen to another so there you have it
38:11 - that's actually all I wanted to show you
38:13 - how to create today I'm sorry about the
38:16 - little mess-up with our camera follow
38:17 - but I think this is really the core of
38:20 - what dual jump is all about and if you
38:23 - want you can go into your and randomize
38:26 - what platforms you create if you wanted
38:29 - to create a special platform so if we
38:31 - wanted to make this platform here
38:33 - special we could go in here and change
38:35 - the sprite renderer here to a blue okay
38:39 - this is not pretty but just an example
38:41 - and then we could go in and simply add
38:43 - or up the amount of jump force to
38:46 - something like 40 and now whenever we
38:48 - jump on this platform
38:49 - hey we jump really really far so you
38:54 - could place these in random parts of the
38:56 - level and simply have them function as
38:59 - boost in the same way that the original
39:01 - doodle jump uses Springs it would also
39:05 - easily do something along those lines
39:07 - with a jetpack or you could have
39:11 - platforms break in the same way that
39:13 - Dula jump does by simply removing the
39:15 - platform script and then instead simply
39:18 - destroying the platform whenever it's it
39:20 - gets touched by the duel yeah and I
39:24 - think that's pretty much where we're
39:25 - going to stop for today I just I was
39:28 - sick not long ago so my my voice kind of
39:31 - stops functioning around this time and
39:33 - I've been talking quite a bit I hope you
39:34 - guys liked the tutorial I'll make sure
39:36 - to of course upload it to github so you
39:38 - can download the product there and play
39:41 - around with it and definitely sent to me
39:43 - on Twitter at practice tweet if you make
39:45 - something cool using this system it
39:47 - doesn't have to be with too little
39:48 - graphics or anything just want to see
39:50 - you you guys using this that's always
39:52 - the coolest part but yeah I hope you
39:54 - guys enjoyed the tutorial part of this
39:56 - die stream and now we're ready to train
40:00 - over to a Q&A format and I'll kind of
40:02 - lay back in my chair here now and
40:05 - breathe and think more about or try not
40:09 - to think about why the camera wasn't
40:11 - functioning I'm sure you guys will say
40:14 - something clear about that in the
40:16 - comments of the video but now we'll
40:17 - switch over to the chat there we go
40:21 - awesome
40:23 - so ask questions let me know what you
40:29 - guys are thinking and what you want to
40:32 - know something about will this be on
40:34 - YouTube yes no path Delta time I thought
40:37 - we tried that maybe oh yeah I'm Victor 3
40:40 - that live with Delta time maybe I don't
40:42 - think that's the nice thing though will
40:46 - this be over yes it will where's the
40:48 - object pool track oh yeah you could
40:52 - definitely um set this up using an
40:54 - object pole so basically you just I
40:57 - think um the way that I probably would
41:00 - set this up is I would generate all the
41:02 - positions of the platforms and then as
41:05 - the player got closer to the platforms I
41:07 - would spawn the platforms in using an
41:09 - object pool so a bunch of platforms that
41:11 - were already sitting around would simply
41:14 - enable them and swap them to the given
41:16 - position so you could definitely utilize
41:18 - an object pool for this game and it's
41:20 - definitely something that I would do
41:22 - especially if you're making it for
41:24 - mobile so yeah
41:27 - hello cool video in streams how can I
41:30 - make the same text colourist in visual
41:32 - studio so I we actually have a video up
41:35 - showing my unity set up along with
41:38 - visual studio and the theme is called
41:40 - mono Kai and there is a visual studio
41:43 - version for that as well and yeah it's
41:45 - really great so you can check out that
41:47 - video if you want it's called something
41:48 - like brekkie is set up settings
41:50 - something like something along those
41:52 - lines traffic a our tutorial maybe not
41:55 - that might be a bit too specific but it
41:57 - does sounds fun as a side project what's
42:00 - easier for me to do live streams or
42:02 - video tutorials so that's a difficult
42:06 - question because of course there is not
42:07 - much on editing involved with live
42:10 - streams so I think Sophia has a lot or
42:13 - things
42:13 - things livestreams are pretty easy on my
42:16 - part I think live streams are really
42:18 - taxing because there's quite a bit of
42:20 - preparation today not enough with the
42:22 - camera again don't mention it and
42:25 - there's also of course the actual doing
42:28 - the tutorial and that does require more
42:30 - energy when when doing it live and
42:32 - responding to chat and trying to fix
42:35 - errors trying to and and kind of the
42:38 - entire Q&A and everything so for me live
42:42 - streams are probably more taxing but
42:43 - it's really I mean again we make it in
42:47 - one day the live streams normally so
42:49 - it's not it's not that bad compared to
42:52 - some of the really really tightly edited
42:56 - videos how can I use light in a 2d scene
43:01 - well you actually just go in here you
43:05 - add in a point light let me go I need to
43:09 - switch over here I'm sorry I always
43:11 - forget to switch the layout here so mean
43:14 - there we go
43:15 - so you go into you're going to unity
43:17 - here you create a light let's do a point
43:20 - light here let's just place it in front
43:22 - of our sprites here then let's go and
43:25 - let's just select our background for
43:27 - example and instead of using sprites
43:29 - defaults we'll go in and select any
43:31 - other material here if we use default
43:34 - diffuse you can see what happens here we
43:37 - can also go and create a custom material
43:39 - here that's called it light light it
43:42 - sprite and in here I think under sprites
43:46 - we have a diffuse sprite and if we now
43:49 - use that for the background here so
43:51 - we'll use lighted sprite here you can
43:54 - see that we now apply light to this
43:56 - right and we can just drag this on to
43:58 - any objects there you go and now our 2d
44:02 - objects are affected by lights yeah so I
44:07 - actually have I'm planning to do a video
44:10 - on top 2d assets and one of them is a
44:13 - really cool one called to 2d DL which
44:17 - stands for to 2d dynamic lights and
44:20 - shadows I think it's called I'm just
44:22 - gonna write it in the chat here to DDL
44:24 - and that allows you to do shadows in
44:27 - Judy and get some nice-looking lighting
44:29 - effects but I think you can do quite a
44:31 - bit of cool stuff using just this way of
44:34 - adding lighting especially if you add
44:36 - some normal mapping on top of your
44:38 - sprites and stuff like that but it does
44:39 - require a bit of unity knowledge so yeah
44:44 - I'll switch back into chat mode here do
44:48 - you have some tips for a guy like me who
44:49 - want to share a game on gamejolt or
44:51 - steam I don't have too many tips for you
44:54 - there because I haven't done it too much
44:56 - myself of course I've put some games on
44:59 - the internet but I haven't really tried
45:01 - and market bigger games
45:03 - the primary thing that I did was start a
45:06 - YouTube channel you know when I wanted
45:08 - to make my first game some and was
45:10 - working on a project I thought how do I
45:12 - get people to actually see this and and
45:16 - the main thing is you have to think
45:17 - about what channels are people using to
45:20 - find information in my case I wanted to
45:23 - kind of do some videos on on unity
45:27 - tutorials because I saw that people were
45:29 - trying to find tutorial content in unity
45:32 - and there wasn't much there so I thought
45:34 - well I could tap into this market and
45:35 - and then maybe I could use or I thought
45:38 - I would be using that to promote my
45:39 - games but I ended up doing that full
45:41 - time instead and you don't have to do
45:43 - tutorials per se you can also just take
45:45 - elements from your game that looks cold
45:47 - if you find them and put them on graded
45:49 - and that's a way to to generate some
45:51 - traction so really just try and take the
45:53 - stuff that looks coolest from your game
45:55 - and place it in in places where people
45:57 - are looking at these things will you
46:02 - continue your multiplayer FPS tutorial
46:04 - series no unfortunately that series has
46:08 - been OK cancelled seems very that's a
46:12 - very negative word but I simply had no
46:15 - more that I wanted to do with that
46:17 - series I felt burned out with it towards
46:19 - the end and I really want to do more
46:21 - standalone stuff that's not to say that
46:23 - I won't do more for FPS stuff or do more
46:26 - multiplayer stuff but it's always going
46:29 - to be in another format in another
46:31 - series I don't think I will be returning
46:32 - to that one due program in other
46:35 - languages than c-sharp - yes I do
46:37 - programming other languages mostly when
46:40 - I'm working
46:40 - on website stuff I'm really fond of
46:44 - using Jekyll which allows me to program
46:47 - in symbol HTML and CSS and a bit of
46:50 - JavaScript or jQuery and that's that
46:55 - just works really well for me when doing
46:58 - web stuff I've also programmed a bit in
47:00 - C++ not too much C though but I have
47:04 - programmed in Java and tried to make my
47:06 - own small game engine in Java which was
47:10 - a really fun project so I've tried a few
47:13 - different things bye bye now
47:16 - why don't you make a game publishing
47:19 - tutorial that is a good question again
47:22 - because I don't have too much knowledge
47:23 - on the matter but I could definitely
47:26 - look into it at some point what about an
47:28 - MMO type game like League or dota those
47:34 - are way too difficult simply I'm sorry
47:36 - I'm sitting in my java class right now
47:38 - long okay that's good well will I make a
47:42 - multiplayer system in unity that depends
47:44 - on what you mean by a multiplayer system
47:46 - I definitely want to do some more on
47:47 - multiplayer stuff I hear that unit has
47:51 - evolved quite a bit since my my
47:54 - multiplayer PS course and definitely
47:56 - want to we explore it a bit but I
47:59 - haven't planned on anything specific yet
48:02 - or planning on doing more unity
48:04 - tutorials on 2d games because I'm very
48:07 - interested in isometric games like hyper
48:09 - light drifter I would definitely do love
48:13 - to do something with 2d isometric games
48:16 - I would also love to do something using
48:18 - the new unity 2d tile lab tools so
48:21 - definitely want to do more 2d stuff
48:23 - maybe for a live stream at some point
48:28 - make tutorial on machine learning an
48:30 - area in unity that would also be really
48:32 - really cool but probably not something
48:33 - that I could put into a single tutorial
48:37 - let's see VR tutorials in the future VR
48:40 - is this thing that a lot of people
48:42 - request really but the problem for me
48:45 - with with doing V or specific tutorials
48:47 - is that I don't have a headset so if I
48:52 - forget sent one maybe
48:54 - please guys HTC no oculus maybe that's
49:00 - that's the main barrier and then of
49:01 - course that's also that I think it's
49:05 - it's a fairly limited amount of people
49:06 - who own VR gear and VR dev kits and I
49:11 - think a large portion of my subscribers
49:15 - would wouldn't necessarily be interested
49:17 - in it but that's not to say that I
49:19 - couldn't do a single video or two on the
49:22 - subject which I would definitely want to
49:24 - do um thanks for the guy people saying
49:28 - that they like the videos and stuff like
49:29 - that I really appreciate it thanks guys
49:31 - um let's see can you make rolling sky
49:41 - game I don't I don't think I'm familiar
49:44 - with this one I'm sorry if it's
49:45 - something bigger that I should know
49:46 - about how do you store high scores and a
49:49 - fully published games there are
49:51 - definitely plugins for that but I mean
49:54 - your story them server-side and then it
49:57 - really just depends on how much security
49:59 - you want that's that's my really
50:02 - annoying answer will we ever get to play
50:05 - a game of yours well I've made plenty of
50:08 - games for the dev diary that are
50:09 - completely free or and available for you
50:12 - to play I'm just gonna find open up LD
50:16 - jam here and see if I can quickly very
50:19 - quickly break his LD jam hopefully this
50:23 - appears on Google here because then I'm
50:26 - just going to link you to my game
50:28 - library that should be somewhere around
50:32 - here so this here is the on the new
50:36 - little diary website where I've made a
50:38 - game called shrinking planet that some
50:41 - of you might know about and I've also
50:42 - made some older ones like ticking and
50:44 - maniac Inc which are on the old Ludum
50:48 - dare a website so if I go Ludum dare a
50:50 - break he's hopefully I can also get a
50:53 - link to the old site I don't think this
50:56 - appears on YouTube actually but I have a
50:59 - few making of videos on those games as
51:02 - well so really just visit my youtube
51:04 - channel and and on there you can find
51:07 - making of
51:08 - of all three games and links to play
51:10 - them so have fun with those and also I
51:15 - have a video coming up very very soon
51:17 - now it's this was Wednesday on on my
51:21 - newest a game that I made in a short
51:23 - amount of time called gombo that I
51:25 - really hope that you guys will think
51:27 - it's cool it's kind of hard for you guys
51:29 - to play alone so I don't know if I will
51:32 - be providing a download thing for the
51:34 - game because it's meant to be played
51:36 - with a controller and I've set it up
51:38 - with an old ps3 controller and then
51:40 - multiple people but definitely hope that
51:42 - you will enjoy the video
51:45 - could you make tutorial spouts game or
51:47 - sound design in uni I do have very few
51:51 - tutorials on sound and I should probably
51:53 - do more but it's just not something that
51:55 - get requested a lot I don't know I think
51:57 - a lot of people underestimate the
51:59 - importance of sound when it comes to
52:02 - game development when will you make a
52:06 - how to make a GTA 5 in unity stream how
52:10 - about tomorrow sounds good
52:11 - it's not gonna happen man do you have a
52:13 - TT X 1080 nope I think the one that I'm
52:17 - using is 960 no that's not right I'm
52:23 - using an older one I don't remember I
52:26 - also wait for the half-life 3 in unity
52:28 - stream thanks guys you guys really
52:30 - constructive about the questions at this
52:32 - point I would have topic but do you have
52:34 - a fear of running out of content to make
52:35 - tutorials on or do I feel I may come to
52:40 - a point that I don't know what to do
52:42 - next that's a really good question
52:45 - fortunately I think I can pretty
52:48 - confidently say no first of all YouTube
52:52 - and unity and the game development
52:55 - industry is just moving so darn quickly
52:58 - there's always something new to cover
53:00 - there's always a new feature is
53:02 - something that you guys want to see a
53:03 - new genre a new mechanic so that's nice
53:07 - sometimes it can be hard to come up with
53:09 - ideas for videos but that's mostly
53:12 - because we always trying to find a sweet
53:14 - spot between something that we find
53:16 - thing is fun and that we think you guys
53:19 - are interested in and actually want to
53:21 - see versus
53:22 - just making documentation on the feature
53:23 - that no one knows about or even cares
53:25 - about so that's the hard part that's
53:28 - finding something that we can present in
53:30 - a really interesting way that you guys
53:32 - think is fun while still being relevant
53:35 - and and while still being something that
53:38 - you can hopefully learn something from
53:40 - but I think even if I was to completely
53:43 - exhaust every tutorial that is to make
53:46 - about unity could move on to other
53:48 - software so do game design related
53:49 - videos if you haven't seen my video on
53:52 - come on
53:52 - what makes combat fun definitely check
53:55 - that out because that's that's a
53:57 - completely different format with so I
53:59 - mean endless amounts of videos potential
54:02 - because that's just thinking about game
54:04 - design and that's something that I
54:06 - haven't talked about so the answer is no
54:11 - how any book recommendations I'm sorry I
54:14 - don't read that many books I don't
54:15 - actually have any good recommendations
54:17 - for you especially not if you're
54:19 - interested in unity and c-sharp and
54:21 - stuff I I think the only book that I've
54:24 - read that they've helped me in my
54:26 - c-sharp programming was introduction or
54:30 - beginner's guide to c-sharp by Jason
54:32 - Lynn I think something along those lines
54:35 - one of the first books that I read on on
54:37 - programming and that was really useful
54:40 - when just starting out but yeah I'm not
54:43 - the right person to ask for that how old
54:46 - am i I am 20 years old and I think it's
54:50 - ready guys or it's time to kind of wrap
54:54 - it up and ask the last questions now and
54:56 - we'll try and quick-fire these last ones
54:59 - because my throat is just telling me to
55:03 - quit at this point so let's do the the
55:08 - last stretch here I would love more game
55:13 - design videos that's good to know
55:14 - definitely which language is better see
55:16 - if you are per JavaScript completely
55:18 - depends on what you want to do if you
55:19 - think about programming in C sharp or in
55:22 - unity
55:22 - I would I would always recommend C sharp
55:25 - but if you're a beginner picking up
55:27 - JavaScript can be much easier for you to
55:30 - learn the entry barrier is lower because
55:32 - it it reads more like English
55:36 - you're comparing see chapters JavaScript
55:38 - can you make a UI tips video good idea
55:42 - noted thanks for you you were saying
55:45 - that that that you liked this stuff and
55:48 - and and I really appreciate it guys you
55:51 - guys Rock
55:54 - let's see any last questions how about
55:57 - making trading card game tutorial that
55:59 - could also be fun definitely something
56:01 - with cards that's at some point will you
56:03 - participate in the next do don't re on
56:04 - 1st December I cannot do that because I
56:07 - am at Dreamhack unless that particular
56:09 - date dree Michaels moved to the
56:11 - beginning of December this year but I
56:13 - will be on in Dreamhack Malmo from the
56:16 - 1st to the 4th so if any of you guys are
56:18 - going to that let me know on Twitter we
56:21 - could of course say hi that would be
56:23 - really fun chess game tutorial could be
56:26 - fun I'm not that good of chess at
56:28 - Chester I would probably embarrass
56:29 - myself but I do know the rules or it
56:31 - could probably programming am i a
56:33 - complete beginner I am a complete
56:35 - beginner any advice practice and do
56:37 - something that you have fun with and try
56:39 - and keep the scope down I'm sorry to the
56:42 - guys that I couldn't answer I'm trying
56:44 - to answer as most much as possible
56:46 - different difference between unity
56:48 - unreal I can't answer that in a
56:50 - rapid-fire way you need is better for
56:54 - very small teams you your unreal is
56:56 - better before or it can be Barry for
56:59 - larger that's not even something that
57:01 - you can say there's so many exceptions
57:03 - and considerations to make answer cannot
57:05 - do that I should make a video on the
57:06 - subject though are you open for dev
57:08 - collapse or do you accept projects that
57:11 - come float completely depends I you can
57:14 - of course write a mail to me if you have
57:16 - something concrete that you want to talk
57:17 - about I read my emails a 3d tower
57:20 - defense while controlling a character
57:22 - would be awesome like sanctum that's way
57:24 - too specific but you can take out the
57:25 - tower defense course and put a 3d
57:27 - character in that if you want how to
57:29 - spell your real name Espeon that's a SP
57:32 - j RM where can i watch the stream again
57:37 - on youtube this sunday and you can
57:39 - actually also watch it right when this
57:41 - is done in the twitch archive forgot to
57:43 - mention that but that will be gone in a
57:45 - couple of weeks
57:49 - you make a new series about FPS multiple
57:50 - no DLC tutorial maybe that completely
57:53 - depends on your game suggestions we have
57:56 - talked about that tutor on neural
57:57 - networks
57:58 - I love networks they're really really
58:00 - inherently interesting maybe do
58:02 - something on that at some point what is
58:04 - your best score and shrinking planet I
58:06 - forgot but that's a really good score
58:09 - and that shouldn't be allowed to happen
58:12 - and what's my real life job this is my
58:15 - real life job and there we go I'm sorry
58:18 - guys
58:18 - that is why is the J style it's not SP
58:22 - on SP on BIA BIA it's there yeah yeah
58:25 - okay anyways thank you so much guys I'm
58:28 - afraid we can't do any more questions I
58:30 - hope you guys enjoyed it as much as I
58:32 - did you guys are just you're amazing and
58:34 - I always loved live streaming and
58:36 - reading the chat here and answering you
58:39 - guys questions I hope you liked the
58:40 - project I hope you like Q a time if you
58:42 - want to support the live streams the
58:46 - videos anything like that head on over
58:48 - to patreon at patreon.com slash breccia
58:51 - so I'm gonna put it inside the chat here
58:53 - now so you can go there immediately
58:56 - now here you go patreon.com slash Breck
59:01 - ease it's a great way for you guys to
59:03 - support what we're doing both Sophia and
59:06 - I and it really helps keep the channel
59:07 - alive you can donate any amount monthly
59:10 - of your choosing you can cancel it if
59:12 - you want you can keep going you guys
59:14 - Rock so yeah thanks for the stream guys
59:17 - have a lot of fun and I will see you in
59:19 - the next video bye thanks of the awesome
59:21 - patreon supporters who donated in
59:23 - October and a special thanks to Judy
59:25 - Minh Armand pence off-tune kookaburra
59:27 - Superman the great James P Thomas Bali
59:30 - Sybok mummy Jason the Tito Derek him
59:32 - skirt faithlyn Fi manolis Nick Lang
59:35 - Aaron Robert Bund and Peter Locke you
59:37 - guys Rock