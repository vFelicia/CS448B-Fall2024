00:00 - this video is brought to you by our own
00:01 - Metta thank you so much for donating if
00:03 - you want to support breakage yourself
00:04 - you can go to patreon.com/scishow cheese
00:06 - thanks for tuning in at brac ease hello
00:11 - everyone and welcome to this video and
00:12 - creating a multi-player face in unity
00:13 - today we will be creating a scoreboard
00:15 - for our players so that you can just
00:18 - hold down tab and that some kind of UI
00:20 - will pop up we will have a list of
00:22 - players with their usernames their kill
00:24 - accounts and their death counts so you
00:26 - can quickly get an overview of who is
00:28 - winning and who is not and we'll be
00:30 - creating it in such a way that you can
00:32 - just press a key and you will bring up
00:34 - the scoreboard but you could just as
00:36 - easily add this to the end of your game
00:38 - and so that the users know how they did
00:40 - in comparison to the others so yeah
00:43 - without further ado let's just jump
00:44 - right into it so you can see that I'm
00:46 - here in unity and what I want to begin
00:48 - with is just kind of shaping out the UI
00:51 - so let's begin by finding our main level
00:54 - one scene here and opening that up
00:57 - and let's find our prefab called player
00:59 - UI and drag that into the scene so now
01:02 - we can start shaping this on the UI just
01:04 - as we did with our past menu I want to
01:06 - have a separate object that we can
01:08 - enable and disable so let's right click
01:10 - on this go to UI and then find the panel
01:13 - and let's see go to scene view here
01:17 - shift to 2d and focus in on this so we
01:20 - can have a good look at what we're doing
01:21 - and let's start by scaling this down
01:23 - quite a bit I would say I'm holding down
01:25 - alt here to scale on from the center and
01:29 - I think something like this looks pretty
01:32 - good I don't want this to be too big but
01:34 - you can of course go with whatever you
01:35 - want and I'm going to make this black
01:37 - and a bit transparent but still very
01:40 - easy to see something like that looks
01:44 - pretty good
01:44 - of course again I say this every time
01:46 - spend more time on it than I do
01:49 - and let's rename this one to scoreboard
01:53 - awesome so we're going to have all of
01:55 - our objects related to the scoreboard
01:57 - sit as child objects under this one and
02:00 - let's go and create our first one which
02:02 - is going to be a UI text element and
02:04 - that will just say scoreboard and let's
02:08 - position this in our scene here so let's
02:10 - anchor it to the top holding down on all
02:13 - the
02:13 - to move it as well and by the way we
02:15 - need to do that to our scoreboard as
02:17 - well just to make sure that that is
02:18 - anchored to the center so it won't scale
02:21 - with the screen have a fixed size so the
02:25 - text object here we can just maybe scale
02:27 - this up a bit something like that just
02:29 - so we have plenty of space for it and
02:32 - let's Center that and we still want it
02:35 - at the top I think and then I'll bring
02:37 - up the size here to maybe something like
02:40 - 26 looks pretty good let's bring that
02:42 - down and let's bring that in let's make
02:46 - this a bold element and let's make it
02:48 - completely wide as well so it will
02:49 - really stand out and you can add stuff
02:51 - like shadows and all that kind of stuff
02:53 - if you want to but I'm just gonna keep
02:56 - it simple here so it's a scoreboard
02:57 - there and let's just call this one a
03:00 - scoreboard title cool so what I want to
03:05 - do next is create an empty object that
03:07 - was will kind of act as the canvas for
03:11 - all of our or as the surrounding element
03:14 - for all of our players so let's scale
03:18 - this up and position it where we want to
03:20 - see it in our UI here and I think
03:23 - actually something like this doesn't
03:25 - look too bad I want plenty of space on
03:28 - the edges because frankly we're not
03:31 - going to have that many players in the
03:32 - scene and we don't have that mudding
03:34 - much information to show so might as
03:36 - well make it really big and obvious
03:38 - what's going on and let's call this one
03:40 - the player our list and we can go to add
03:44 - component and then choose vertical
03:46 - layout group and this will make sure
03:48 - that any objects that we drag under here
03:50 - will of course be automatically
03:51 - vertically aligned cool or actually they
03:56 - will be horizontally aligned and then
03:58 - they will be stacked vertically cold so
04:02 - what we can do here is go UI and then
04:04 - choose some kind of panel and we might
04:08 - not be using the image here but I just
04:10 - want to get a few panels in here and in
04:13 - fact what I want to do is kind of turn
04:15 - this into a prefab but we'll do that in
04:18 - a second so you can see right now that
04:20 - the player list vertical layer group is
04:23 - currently making this panel stretch and
04:25 - that's definitely not something that we
04:27 - want
04:27 - you see so instead what we do is go and
04:30 - disable child force expand on the height
04:33 - and then we give our panel a fixed
04:35 - height by adding a layout element and
04:38 - choosing preferred height of let's say
04:41 - 30 I think that's fine and then we can
04:44 - position our different text elements
04:46 - inside of this one so this one is going
04:48 - to be called something like player
04:53 - scoreboard item so it's just a single
04:57 - item in the list and we can turn that
05:00 - into a prefab in a second and let's go
05:02 - and make some child objects for this so
05:03 - we'll have a text element here and we'll
05:07 - drag that all the way to the side and
05:08 - we'll make sure to send you that on our
05:11 - y-axis on a vertical axis and let's make
05:15 - this totally white and let's size it up
05:18 - to something like 21 and we can just put
05:21 - in a user name here or this is just
05:23 - going to be the player name we'll just
05:26 - put that in there and I think this looks
05:29 - fine actually and what we can do let's
05:34 - see here is we can now disable the image
05:37 - because I don't think we want that in
05:38 - there frankly I think it looks better
05:40 - without and we can duplicate this text
05:43 - element move it over and the first one
05:45 - we want to be anchored to the left so
05:47 - we'll anchor it to the left there and
05:49 - you can hold down alt so snap it as well
05:50 - and we'll just rename that one to our
05:53 - user name then we'll have a text element
05:56 - here for our kills and we want to snap
05:59 - this to the right instead and we'll just
06:03 - put in here something that kills and
06:05 - then colon and we'll do 999 kills it's
06:11 - going to be the default there and we'll
06:13 - put another one here so duplicate that
06:15 - as well and I actually want them kind of
06:19 - close so we'll snap this one to the
06:21 - right and snap this one to the right as
06:23 - well and we can now position this over
06:26 - here I think that looks pretty awesome
06:29 - and then we can of course instead of
06:30 - writing kills here we'll write deaths
06:32 - and you can see here we need more space
06:35 - so we'll just give it that something
06:38 - like that looks pretty cool you can also
06:40 - take both of
06:41 - and instead of horizontal overflow rap
06:46 - will just put overflow just in case that
06:48 - we get get some insane amount of kills
06:51 - or deaths we will still be able to show
06:53 - it on the board all right so I think
06:55 - this looks really nice actually and I
06:57 - think we can definitely use that and you
07:00 - can style these elements differently you
07:02 - have different colors for kills and
07:03 - deaths that makes it easy to see or you
07:05 - could put like the naming up here so
07:07 - have kills and deaths and then just
07:09 - numbers but I'm just doing it the easy
07:11 - way here because I don't want to spend
07:13 - too much time on the UI but we could
07:15 - maybe make all of the usernames or maybe
07:20 - all of the numbers here italic or
07:22 - something actually don't like that so
07:26 - we're not going to do that but we could
07:28 - make the username bold so I just did
07:30 - that and I think that looks good
07:32 - good so let's continue so that's I call
07:34 - this one deaths and let's be done with
07:37 - this element here and I also kind of
07:40 - want to bring it down because I think
07:41 - it's a bit too far up to the top here so
07:43 - let's just bring it down a tiny bit
07:45 - something like that looks nice that
07:48 - might even be too much there we go so
07:50 - now if we make multiple of these you can
07:52 - see that looks fairly good and we can
07:54 - maybe also increase this the spacing
07:56 - between them to some something like 10
07:59 - might be a bit too much maybe 7 and I
08:01 - really like that so let's just stick
08:03 - with that cool so let's now take our
08:07 - player scoreboard item and drag it out
08:09 - from this prefab and let's drag it in to
08:12 - the prefabs folder to make a separate
08:14 - prefab out of this and we'll have a look
08:16 - at using that in a second and we'll also
08:18 - make sure to disable the scoreboard here
08:21 - and hit apply on the prefab okay so
08:25 - let's make this interactive the first
08:27 - thing that we want to do is have the
08:29 - scoreboard only be brought up whenever
08:31 - we press a key and we do that the exact
08:33 - same way that we did with our past menu
08:35 - by simply adding a reference to the game
08:38 - object inside of our Player UI and then
08:40 - having some kind of input checking in
08:42 - the update loop so let's double click
08:45 - the P player UI here to open it up in
08:47 - visual studio now we can just drag it
08:49 - over and what I thought we would do here
08:52 - if it will load
08:54 - there we go and it's remove that there
08:57 - to give some more space
08:58 - it's just have an update function here
09:01 - where we say if input that get key down
09:06 - so if we just press the tab key we want
09:10 - to enable our menu so key code tab here
09:13 - is what we're going to use and if we
09:15 - just got that we are going to enable it
09:17 - and if we didn't so else if in case we
09:22 - got input get key up key code dot tab
09:30 - well then we want to disable it of
09:33 - course so let's just add a reference up
09:35 - here just as we did with our past menu
09:37 - so a civilised field oops
09:40 - serialize Jesus serialize field there we
09:46 - go
09:47 - of type game object and we'll call this
09:50 - one our scoreboard cool and then we can
09:55 - just go down here and we could say if we
09:58 - get the key we said scoreboard to active
10:02 - and then that means that we have to put
10:04 - in true and if not we we do scoreboard
10:07 - said active and then we put in false
10:11 - awesome
10:13 - all right and so what more can we do
10:16 - here and that's pretty much all we need
10:18 - to add inside of this script and that
10:19 - should already kind of be applied in the
10:23 - game we just have to make sure that we
10:25 - link our scoreboard here and hit apply
10:29 - on the prefab and we cannot remove that
10:31 - prefab and we should be able to now just
10:34 - jump inside of our lobby hit play and
10:39 - try and host a test game here so hit
10:42 - play come on unity there we go test
10:44 - great room and now when we hold down tab
10:48 - it brings up our scoreboard so that is
10:50 - awesome
10:51 - it's super easy to add now comes the
10:54 - hard a part though because we actually
10:56 - have to display some stuff on this
10:58 - scoreboard and we do that by first of
11:00 - all finding or again I'll play a UI
11:02 - script and finding our scoreboard and
11:04 - just as with our pause menu we had this
11:07 - I'm past manuscripts sitting there that
11:10 - did stuff once it was activated we'll
11:12 - have one with with the scoreboard as
11:14 - well so we'll just create a dedicated
11:16 - scoreboard script create an ad let's
11:20 - double click that to open it up in
11:21 - Visual Studio and we're not going to be
11:24 - using either start or update instead
11:26 - we're going to be using void on enable
11:29 - so whenever the I mean this game objects
11:32 - is going to start off disabled and
11:34 - whenever it's enabled through the play
11:35 - UI this is going to be called and in
11:38 - here is where we can kind of set up all
11:40 - of our UI elements to actually be equal
11:43 - to the user names and to the kills and
11:46 - all of that and where we can also find
11:48 - all of the players that are currently in
11:50 - the scene and loop through them so this
11:52 - is going to be done in in a few steps
11:54 - first off we are going to get a an array
11:58 - of players so we have all of our players
12:01 - accessible then we're going to loop
12:03 - through and set up a list item for each
12:10 - one so we're going to loop through our
12:13 - array of players and then we are going
12:15 - to maybe set up the when I say set up
12:19 - the list item this includes setting the
12:24 - UI elements equal to the relevant data
12:29 - all right so that is what we'll do
12:31 - inside of this statement here and then
12:34 - we'll also have another call which is
12:36 - going to be on void on disable and this
12:40 - is of course called whenever the game
12:42 - object is disabled again so when we stop
12:44 - holding tab and in here we're just going
12:47 - to clean up our list of items awesome so
12:53 - we'll remove all of the players once
12:54 - again and the reason why we don't do
12:56 - this in the start method is because
12:58 - people might join and leave the game
13:00 - while it is running so we actually need
13:02 - to do this while the game is running and
13:04 - not only what so that's why we're doing
13:07 - it in here so let's first take a look at
13:08 - getting an array of players when one way
13:11 - would be to just do like game object
13:14 - that find objects of type or and then
13:17 - putting in the player but one better way
13:20 - would be utilizing the fact that we
13:22 - actually have a game manager that sits
13:25 - in the scene with us and it's found
13:29 - somewhere around here so let's find the
13:31 - script for that scripts game manager
13:33 - here that actually has a dictionary a
13:37 - dictionary here containing all of the
13:39 - different players so why don't we just
13:41 - add a quick utility method here for not
13:44 - only getting a player but getting all of
13:47 - the players so let's do a public static
13:48 - player array called get all players I
13:53 - would just call it get players but I
13:55 - like to be very clear about the naming
13:57 - and what we want to we actually don't
13:59 - want to put anything in here and all we
14:02 - want to do is take this players
14:04 - dictionary and return so we want to
14:08 - return players dot and then we can get
14:11 - all of the values inside of that
14:13 - dictionary remember all of our keys are
14:15 - the strings which are our player IDs and
14:18 - each player ID is associated with a
14:20 - player component so that is all of our
14:23 - values so we have key values and those
14:25 - together make a key value pair in our
14:28 - case we don't want to do anything with
14:30 - the ID we just want a reference to the
14:32 - player so we simply say player's dot
14:34 - values and then we need to turn this
14:36 - into an array by going to array and this
14:39 - is currently not available to us so what
14:41 - we'll do so we'll go up here and include
14:44 - using so we'll say using system dot link
14:49 - and that has some awesome utility
14:51 - functions for doing exactly what we're
14:53 - doing here such as pasting in erase or
14:56 - converting to erase here so to array and
14:59 - close that off there we go so that
15:01 - should return all of our players and
15:03 - then we can use that inside of our
15:05 - scoreboard so here we'll create a player
15:07 - array call players and set that equal to
15:11 - game manager and this is a static method
15:13 - so we can simply go dot get all players
15:17 - boom now we have a list or an array of
15:20 - all of our players and now we can loop
15:23 - through this players to rate so we can
15:25 - say for each player which we are going
15:29 - to call player in players so for each
15:33 - player we are going
15:34 - to then create some kind of UI for now
15:36 - we can just debug some of their
15:38 - information so we'll say debug dialog
15:40 - and we can debug out here say we'll
15:45 - debug the player dot name for now we
15:49 - don't have a way to keep track of user
15:50 - names we'll add that in a second and
15:52 - then plus and then we can put some kind
15:55 - of separator in here and this really
15:56 - doesn't matter this is just for our own
15:58 - sake and this is the vertical bar in
16:00 - case you're interested so player kills
16:04 - plus and then we'll do this one more
16:09 - time and then plus player dot deaths
16:14 - there we go
16:15 - so just displaying all of the
16:16 - information in a quick debug log
16:18 - statement here and this will allow us to
16:21 - kind of check whether or not we're doing
16:22 - things correctly because we have to
16:24 - change some things for kills and and
16:25 - deaths and we also have to add the
16:28 - ability to get our current username so
16:30 - we have to kind of keep track of that so
16:33 - now when we go in here and we should see
16:38 - that if we host the game here
16:41 - just very quickly host the game we
16:44 - should be able to hold down tab and it's
16:46 - going to show down here in the debug
16:48 - deadlock or in the console player one
16:52 - zero zero and that's totally accurate so
16:56 - why what do we need to change here well
16:58 - the first thing is we're currently we
17:00 - currently have a variable called kills
17:02 - and one called deaths and those sit
17:04 - under our player scripts so if we go
17:08 - into scripts here and find the player
17:09 - you will see that we have a variable
17:11 - called kills and one called deaths but
17:15 - these are aren't actually the amount of
17:17 - kills and deaths that we've got in this
17:19 - game remember if you followed along in
17:21 - our user account system these are
17:25 - actually only the amount of kills and
17:28 - the amount of deaths that we've gotten
17:30 - since the last time that we transmitted
17:32 - that data to the server so these are
17:34 - only our new kills and deaths so what we
17:37 - need to do is make these actually
17:39 - represent our total amount of kills and
17:41 - deaths this game and then we need to add
17:44 - a way of keeping track of how
17:48 - new kills we've gotten inside of the
17:49 - actual function that should handle that
17:51 - stuff so in the first place we can just
17:55 - have a look at how we're setting these
17:56 - and I believe we do that down here so
17:59 - when we take damage and die we see here
18:03 - that we set source player kills we add
18:05 - some kills on to that and we also have a
18:08 - way of adding on to the death so that is
18:11 - actually fine but what we need to do
18:13 - instead is we need to find the script
18:15 - that is - that takes care of sinking or
18:18 - play your score here so play your score
18:20 - and you can see in here that we have a
18:22 - sink score loop that is called every 5
18:24 - seconds where we sink our score and if
18:27 - we actually receive time data and
18:29 - everything goes well we end up here and
18:31 - this is where we get the amount of kills
18:34 - in tests we have on our player and we
18:37 - add that onto the total amount of kills
18:39 - and death so that user has and then we
18:41 - sink sink that to the server and then we
18:44 - see here we reset player that kills and
18:47 - player that deaths so what we need to do
18:49 - instead is jump in here and add two
18:52 - private variables last kills and we said
18:55 - that to CL 0 by default and the last
18:58 - deaths also 0 by default then we can go
19:02 - up here and we can calculate the amount
19:05 - of kills and deaths that we've gotten
19:07 - since the last time so our integer here
19:10 - kills since last or something like that
19:16 - equals player dot kills that kills -
19:22 - what we had last so - last kills and
19:26 - we'll do the same with test here so
19:28 - deaths since last equals player deaths
19:34 - - last deaths there we go so this is our
19:38 - new amount of kills and deaths and then
19:41 - we'll simply use them for from here on
19:43 - out so we'll say kill since last and
19:47 - death since last if there aren't equal
19:49 - to no we can continue if they're just
19:52 - equal to 0 there's no reason to think
19:54 - anything and we kind of also have to
19:58 - make sure that we
20:01 - only do anything if player dot kills
20:07 - let's see here so our last kills could
20:11 - be equal to something and then played
20:12 - kids if player kills is greater than
20:15 - last kills and or and and player dot
20:24 - deaths is greater than last death so we
20:28 - only want to do this if we've actually
20:30 - gotten more kills since the last time
20:32 - and that actually makes that useless
20:35 - there we go and then we want to return
20:38 - so that's kind of the same thing but I
20:39 - just wanted to add it up here and kind
20:42 - of worded a bit differently this will
20:44 - make sure that we only sink while it's
20:46 - necessary and that we won't sink just in
20:49 - case a number has changed because we can
20:52 - imagine if we want to reset our kills
20:54 - then our player kills will certainly
20:56 - suddenly be less than our last amount of
20:59 - kills and then we could actually end up
21:02 - subtracting kills from our scores and
21:05 - that would just be a mess so just make
21:07 - sure to add this statement in there and
21:10 - then instead of using player kills and
21:12 - deaths down here we now use kill since
21:14 - last + kills and death since last +
21:18 - deaths we sink some stuff and we don't
21:22 - want to reset down here what we want to
21:24 - do instead is say kills since last
21:29 - equals player not kill since last last
21:33 - kills there we go
21:35 - equals player kills and last deaths last
21:41 - deaths equals player dot deaths whew
21:46 - that was mess but it's going to work so
21:50 - I'm happy so I just noticed a huge
21:52 - mistake that we have to take care of and
21:55 - that is in here we're under a player
21:57 - score where we say if player kills is
22:00 - greater than last kills and player to
22:02 - deaths is greater than last deaths then
22:04 - we return that's the opposite of what we
22:07 - want to do we only want to do all of
22:08 - this stuff if this is in fact true or at
22:12 - least if one of them has changed of what
22:13 - we want to
22:14 - change this to is less than or equal to
22:17 - and less than an equal or equal to over
22:20 - here so that in case a player that kills
22:24 - haven't changed or at least of their
22:27 - fewer and the same with our deaths then
22:29 - we just want to return and if not then
22:32 - we want to update all this stuff down
22:33 - here super important change or else our
22:35 - players score it's not going to work and
22:38 - you can see that I noticed it because I
22:40 - have a lot of sinking holes down here so
22:43 - that should actually have fixed that bug
22:45 - so just want to let you know cool
22:48 - so that should actually make sure to
22:50 - sync things properly and we could go
22:52 - ahead and make a quick build here just
22:54 - to test it out which don't think that
22:56 - will do let's add some functionality for
22:58 - keeping track of our username and then
23:01 - let's try and make a test build before
23:03 - we build out the last of you our UI here
23:06 - so that is all for a player score and
23:09 - what I want to do this is basically I
23:12 - want to go to a player here and add a
23:14 - variable and this is just going to be a
23:17 - public string and we're going to call it
23:22 - something I think we're going to call it
23:28 - just use the name username will
23:32 - definitely work I will set that equal to
23:34 - loading dot dot by default and I think
23:37 - we need to mark this as a sync var but
23:39 - that depends on how we end up
23:41 - implementing it but for now we'll mark
23:43 - it as a sync variable and then we need
23:45 - to find all player setup script so we'll
23:48 - go on player setup under scripts here
23:51 - player setup there we go
23:53 - and we have a place here where we we so
23:59 - we start up the client here we find a
24:01 - player component we find our net ID and
24:04 - we register it with our game manager and
24:07 - after that we have the start method that
24:10 - does all of the this logic it sets up
24:13 - the player and I think it's in here that
24:15 - I want to add a command to kind of set
24:18 - up the user name on the server so we
24:20 - create a command down here we'll mark it
24:23 - as command remember commands are only
24:25 - executed on the server I will do void C
24:28 - the prefix any command with CMD and
24:30 - we'll call this our set user name and
24:35 - we'll need to pass in a string with for
24:39 - the player ID for the player that we
24:42 - want to set the username to and also the
24:45 - user name sorry about that the user name
24:47 - that we want to set and then we can get
24:51 - that player by going game manager get
24:54 - player and we'll just go and put in our
24:59 - player ID here there we go and then
25:02 - we've maybe store that so a player is
25:05 - equal to that and then what we can do is
25:09 - we can say player dot and maybe we need
25:12 - to check if our players in 0 here so if
25:15 - player is not equal to null then we want
25:18 - to say player dot user name equals the
25:22 - username that we have passed in awesome
25:25 - and we can also throw out a debug that
25:26 - log statement here saying something like
25:29 - username + and then has joined there we
25:37 - go just to let us know what's going on
25:39 - and this will of course again only show
25:41 - up on the host because the host is the
25:43 - server and so it won't show up on all
25:46 - the clients but that's fine this is only
25:48 - for our knowledge and the reason why
25:50 - that we can get away with doing this
25:51 - only on the server is again because we
25:53 - marked the variable as a sync var so
25:56 - whenever we change it change it on the
25:58 - server it's going to sink get synced out
26:00 - to all the different clients so it will
26:02 - update on all the machines code and then
26:05 - we can simply call this by saying
26:06 - command set username and we need to
26:09 - input our player ID which is currently
26:11 - our name so transform the name and then
26:15 - we can put in our username and our
26:17 - username I want that to kind of depend
26:19 - on a few things so in case our user
26:22 - account manager is logged on so if
26:25 - that's locked on then I want to set
26:27 - username so let's create a temporary
26:30 - variable here called underscore username
26:32 - and default that to something like again
26:35 - loading dot dot so if if we are logged
26:40 - in I want to set
26:42 - username equal to user account manager
26:45 - dot user logged in user name and if not
26:50 - then I just want to set username equal
26:53 - to transform that name so in case we are
26:56 - just testing this without logging into a
26:58 - user account manager of course you would
27:00 - never do that in the final build but in
27:02 - case that's happening we'll just set the
27:04 - username equal to our transform that
27:06 - name which is going to be player 1
27:08 - player 2 play 3 just so it doesn't say
27:10 - loading when really it it's not and
27:13 - let's put our user name in there cool so
27:17 - that's awesome so now we should actually
27:19 - be able to test this out that was
27:23 - actually quicker than I expected or
27:26 - maybe it's just a lot of fun doing this
27:28 - series maybe it's just time going by
27:30 - quickly actually there I've been
27:31 - recording for a long time alright so
27:34 - this let's get this along let's see how
27:36 - the build works here um so of course for
27:38 - the build I'm gonna make or jump into
27:42 - the login menu here hit play go test one
27:46 - two three test one two three login and
27:49 - I'll do this on the other one as well
27:51 - whoops that was a mistake so let's do
27:55 - that again test one two three four
27:57 - test one two three four and hit login on
28:00 - that let's create a room here called the
28:02 - test room and let's jump in here as well
28:05 - and hit test there and we should be able
28:09 - to see right now when I hold this down
28:11 - it says player 1 0 0 and actually it
28:14 - says play 1 here and it says player 2 as
28:16 - well but it doesn't it doesn't actually
28:21 - use the user name so that is something
28:23 - that we'll have to find out kind of why
28:25 - that is happening but you can see that
28:27 - it's syncing the score for both of us
28:29 - and if I go ahead and let's say kill
28:30 - player 1 here and wait for us to respawn
28:34 - hold down this one you can see that it's
28:36 - updated the scores so that's awesome so
28:39 - player 1 now has a death and a kill and
28:41 - play 2 has a kill and if I go ahead and
28:43 - kill play 2 you can see that that
28:45 - updates as well so now both players have
28:48 - a kill and a death awesome so let's see
28:54 - here
28:55 - let me close down that client and this
28:57 - is not something to worry about it's
28:58 - just when cleaning up the thing when we
29:00 - interrupt the game it shouldn't be a
29:02 - problem you can go in and add an if
29:03 - statement just to check if it's null if
29:05 - you want to do that but that shouldn't
29:07 - really be necessary so let's just have a
29:10 - look at what's going on with the code
29:11 - here so in case we are locked in we want
29:15 - to set username equal to a user account
29:18 - manager locked in username if not we
29:21 - want to set username equal to transform
29:23 - that name so it appears that our user
29:28 - account manager isn't locked in and the
29:31 - reason for this it's actually somewhat
29:33 - unknown to me so I'll just have a look
29:35 - around the code to see what's going on
29:36 - and I will be back in a second
29:38 - all right so I found two stupid things
29:40 - that I've done that was causing this
29:42 - error so the first one was pretty
29:44 - obvious that was under scoreboard here
29:46 - that I had forgot to change it from
29:49 - player name which is just using the name
29:51 - of the transform so player dot username
29:54 - that's why I didn't call the name but
29:56 - user name is because I would we would
29:58 - need to differentiate between the two
30:00 - here so just change that and that should
30:03 - work just fine but we need to change one
30:06 - more thing and that is inside of our
30:07 - player setup I some recent road if
30:10 - player is equal to null well we only
30:12 - want to do that if he's not equal to
30:14 - null so that should actually make it
30:17 - work so if we try and build this out one
30:20 - more time and it's just going to take a
30:23 - second here it's we don't have that many
30:26 - assets that we need to compile and that
30:29 - should open up that window there we can
30:31 - hit play and we can log in so test one
30:36 - two three test one two three hit login
30:39 - on that do the same year test one two
30:41 - three four not five and test one two
30:44 - three four hit login there create a room
30:47 - just some room and you can see down here
30:52 - it says on text our test one two three
30:55 - has joined and that right now I am in
30:58 - there as well and if we join with the
31:00 - other guy here as well and we'll have a
31:03 - look at that error there in a moment so
31:05 - have a look at this here so we join
31:08 - here's what
31:09 - test 1 2 3 4 s join and now when I look
31:12 - at the scoreboard it correctly sinks so
31:14 - that's awesome and if I shoot one of
31:16 - course the score updates as well so that
31:19 - is freaking awesome so let's just have a
31:23 - look at this a little error message here
31:25 - it's just an old reference exception so
31:28 - the object of type text has been
31:31 - destroyed but you're still trying to
31:32 - access it so that is if we get unlucky
31:36 - with the sinking here and the text here
31:40 - so what we'll do is simply say if kill
31:43 - account is equal to null or death count
31:48 - is equal to null then we just want to
31:52 - return there we go
31:54 - all right so that should get rid of that
31:57 - and I'm glad to see it working so now we
32:00 - need to implement this into our UI and
32:02 - that is kind of the easy part of the
32:03 - tutorial so we can get rid of our player
32:05 - stats we can get rid of the player setup
32:08 - the player game manager the player UI we
32:13 - just need to focus on the scoreboard
32:14 - here and what I thought we would do is
32:16 - have on the prefab that we made here the
32:20 - prefabs and then play your scoreboard
32:22 - item had it oh it's own little script
32:25 - here its own little class cold maybe
32:29 - actually that's just called player
32:31 - scoreboard item that is responsible for
32:33 - setting up the different UI elements
32:36 - that are under each item so we'll kind
32:39 - of group it into each class being
32:41 - responsible for doing a little bit of
32:43 - work and that is in generally good
32:45 - practice don't have these huge classes
32:47 - with which I've been guilty for in this
32:50 - series but that is because grouping
32:52 - together your networking code can
32:54 - sometimes be a lot easier than having
32:57 - many classes because you need to well
33:00 - frankly we already have a lot of
33:02 - components on the play here so play a
33:05 - scoreboard item here we'll just have a
33:08 - reference to first of all the and we of
33:12 - course we need to import using unity
33:14 - engine dot UI here so we can get some
33:18 - text references and we'll just remove
33:20 - system data collections so um
33:23 - we'll be using a text here and this is
33:25 - going to be our username text will also
33:27 - have one this is another serialize field
33:29 - this is also text called kills text and
33:34 - finally you guessed it we're going to
33:36 - have third text element with our deaths
33:39 - text there we go and then we'll have a
33:42 - public method void here call it
33:47 - something like set up and this is going
33:49 - to take in a string with our username an
33:52 - integer with our kills and an integer
33:55 - with our deaths and then down here we'll
33:58 - simply say username dot or username text
34:02 - text equals username you kills text dot
34:09 - text equals and then we can prefix it
34:11 - with kills here kills only one one space
34:16 - that kills plus kills and deaths text
34:21 - dot text equals deaths and then adding
34:27 - the deaths on there as well awesome so
34:30 - what we can do now inside of a
34:31 - scoreboard is simply get first of all a
34:35 - reference to the player scoreboard item
34:39 - prefab so we'll make this as your last
34:41 - field as well and this is just going to
34:43 - be of type game object and we're going
34:45 - to call it player scoreboard item prefab
34:50 - you could do prefab I'm just gonna go
34:52 - item here and I will simply instantiate
34:54 - that down here so we'll go for um
34:57 - actually we're already looping through
35:00 - here and we'll just remove this comment
35:02 - now so for each player in players will
35:06 - go in stand instantiate one of these so
35:09 - we'll say instantiate and we'll put in
35:12 - the player scoreboard item and we'll
35:15 - parent that to our and we need another
35:18 - reference for this we'll parent that to
35:22 - our serialize field and this is going to
35:24 - be a transform and it's going to be our
35:27 - player list there we go
35:32 - maybe we should
35:34 - put players scoreboard list player item
35:38 - with something like this play scoreboard
35:39 - list and we'll close that off so what
35:43 - we're essentially doing here is if we
35:45 - have a look at our player UI is and
35:50 - we'll just drag this into the scene so
35:51 - we can see what's going on so we have
35:53 - our scoreboard here and that has a
35:56 - reference to our player scoreboard item
35:59 - and to the player list and for each
36:03 - player that we find in our scene we're
36:06 - just going to instantiate a player
36:08 - scoreboard item into the player list and
36:10 - then we are going to call a function so
36:13 - if we go back into our visual studio
36:16 - here we're going to call a function for
36:18 - each of these to set it up using the
36:21 - information we have about that player so
36:23 - we're going to first of all get a
36:25 - reference to the game object that we
36:26 - just instantiate it which is going to be
36:28 - item geo and we want to cast that into a
36:32 - game object we've done this multiple
36:33 - times then we need to get a component on
36:36 - that game object and the component we
36:38 - need to get is of course player
36:39 - scoreboard item and we can call this one
36:42 - item and set it equal to get component
36:45 - of type player scoreboard item there we
36:49 - go and then we can say in case that
36:51 - isn't zero so if that's not equal to
36:53 - null just do a check there because we
36:56 - don't have any reassurance that it not
36:58 - it it won't be equal to null so if
37:01 - that's not equal to no we go item dot
37:03 - setup and then we pass in player dot
37:06 - user named player dot kills and player
37:13 - dot deaths there we go so we've now
37:18 - passed all of this information on to
37:20 - player scored a scoreboard item and the
37:23 - last thing that we need to do is just
37:24 - loop through all of these when we
37:26 - disabled the object to remove all of the
37:29 - objects again so we'll simply go for
37:32 - each and this is an easy way to loop
37:35 - through all of the children of an object
37:37 - now see here we'll go for each transform
37:39 - because all objects have a transform and
37:42 - we'll call this one child in emblica
37:46 - trance
37:47 - no not our transform you go player
37:49 - scoreboard list so and we don't need to
37:53 - do dot anything here because that in
37:55 - itself is to transform so we've just
37:57 - said for each transform child in score
38:00 - player score bird list that means for
38:02 - every child object of this object we
38:05 - want to just destroy that so we want to
38:08 - destroy child and we of course need to
38:10 - do dot game object to make sure that we
38:12 - destroy the entire game object and we
38:17 - can save that now and close that and
38:19 - that should actually be it if I remember
38:22 - to do everything correctly the variable
38:26 - item go is assigned but its value is
38:28 - never used that's because we need to do
38:31 - that there we go so we don't want to get
38:33 - the game up and get the component on the
38:35 - scoreboard we want to get it on the item
38:37 - there we go
38:38 - it's pretty important and if we set all
38:42 - of this up as well we need to do that as
38:44 - well so we need to drag in our username
38:46 - text our kills text and our deaths text
38:50 - there we go and let's try and just build
38:53 - this and see what happens and hopefully
38:55 - it's going to work right away so I hope
39:00 - I didn't make any big mistakes in the
39:02 - code like before
39:05 - so let's boot boot this up here and do
39:08 - one just one two three just one two
39:10 - three I will do the same over here so
39:13 - test one two three four test one two
39:15 - three four there we go and I might even
39:19 - manage to squeeze all of this into one
39:21 - video it's going to be one heck of a
39:22 - video but I think that is totally
39:25 - deserved because I haven't been giving
39:28 - too much love to the series of late so
39:31 - there we go it's working and let's join
39:34 - with the other client as well and it
39:35 - looks awesome so let's refresh our room
39:38 - here join it we'll have to wait five
39:41 - seconds that's enough time for me to sip
39:45 - some water there we go and we can see
39:48 - here that we have a scoreboard for each
39:50 - player that's freaking awesome and we
39:52 - can go in here and let me kill this guy
39:55 - and see what happens and you can see the
39:59 - scoreboard updating and we can do the
40:01 - same over here let's kill this one and
40:05 - the scoreboard updates once again so
40:08 - that is pretty much all that I wanted to
40:11 - show you in this video I hope you think
40:12 - that it's as exciting as I do it
40:15 - definitely helps with the competitive
40:17 - feel of the game that you can keep track
40:19 - of who is winning and everything so
40:22 - score is always nice and again if you
40:25 - want to add this to the end of your game
40:27 - you can do that right away and that's
40:30 - really nothing stopping you it's just as
40:32 - easy as enabling the UI component and
40:35 - then it will do everything for you so
40:37 - awesome thanks for watching this video
40:39 - hope you enjoyed it and I will see you
40:40 - in the next one thank you so much to all
40:42 - of the awesome people who donated in
40:44 - September and a special thanks to our
40:46 - own Metta Robert Roach James Calhoun Kim
40:49 - Rose cuccos Bao and Antoine and vixen
40:52 - pea thank you so much for donating you
40:54 - guys are awesome if you want to support
40:56 - practice yourself you could go to
40:57 - patreon.com/scishow