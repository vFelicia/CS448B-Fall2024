00:00 - thanks for tuning in at brakus hello
00:04 - everyone and welcome to the first video
00:06 - in this how to make a 2d platformer
00:10 - course so in this video we're just gonna
00:13 - set up the basic character controller
00:15 - with a camera movement script
00:18 - we're not gonna actually be coding today
00:21 - we might look at some code and maybe
00:22 - edit it a bit but we're just gonna be
00:25 - using some really awesome assets to get
00:29 - this working of course later we're going
00:31 - to be programming we are going to be
00:33 - designing and we're going to be doing a
00:35 - lot of selves but when it comes to
00:37 - character controllers it's just a good
00:39 - idea together a working one in there
00:41 - just when starting out awesome so this
00:45 - series we're gonna code in c-sharp and
00:49 - basically it's gonna be for novice to
00:53 - intermediate users and then we will
00:56 - cover maybe some more advanced things
00:58 - later in this series but if this is your
01:01 - first ever experience with unity I
01:04 - recommend you go ahead and watch maybe
01:06 - the make a game course or the going to D
01:09 - course here and this is all available at
01:12 - brackish comm if you simply just scroll
01:15 - down or you scroll down you can see that
01:19 - I've changed a lot of things on the
01:21 - website to make it much more pretty and
01:23 - more functional so everything should be
01:25 - available there awesome so let's just
01:28 - get started with today's video so as
01:32 - always I've opened up unity and what
01:34 - I've done is I've created a new project
01:37 - and I've called this one 2d platformer
01:40 - tutorial I haven't imported any of the
01:44 - packages and I've set up the defaults
01:47 - for 2d in here I haven't done anything
01:51 - yet
01:52 - but what you might want to do is in the
01:55 - scene view switch over to 2d great so
01:58 - now we see everything in a two
02:00 - dimensional space with X & Y awesome so
02:05 - what we will do now is we'll download
02:08 - the new sample assets from unity
02:12 - so before if you right-click on the
02:13 - project pane and hit import package you
02:16 - can see that we have all kinds of
02:18 - standard assets that we can import that
02:21 - unity has been pre-made for us so we
02:24 - don't have to do it ourselves but these
02:26 - are pretty outdated so what unity has
02:29 - done is they've made a new updated and
02:31 - and much better version of the sample
02:34 - assets and these are currently in beta
02:37 - by the time you watch this video they
02:39 - might already be in here somewhere
02:41 - but right now they're only available on
02:44 - the asset store so let's go to our
02:47 - browser and let's type in asset store
02:49 - that unity3d comm you can of course also
02:53 - find it on google and then we're gonna
02:56 - search for sample assets or you can also
03:02 - search for standard assets the reason
03:04 - why we're doing this in the browser it's
03:06 - the first one here is because it's
03:08 - really slow in unity which should be get
03:11 - better in unity 5 which should come this
03:13 - summer at least I hope so great and now
03:17 - when we we found it here let's click
03:19 - open in unity hit run program and it
03:23 - will open up in the asset store inside
03:26 - of unity it will just take a second to
03:30 - load here as you can see this pretty
03:32 - slow but there's a lot of cool assets
03:39 - great so once it's loaded up let's
03:42 - simply hit import you might need to
03:46 - download it first but then just hit
03:47 - download wait for it to download and
03:49 - then hit import it will decompress the
03:52 - package and now it will show us all of
03:54 - the what the package contains it has a
03:59 - bunch of things in it as you can see
04:03 - there's a whole lot of of different
04:05 - assets in here so let's just go ahead
04:08 - and select none and then just check the
04:12 - sample assets 2d folder and it will
04:15 - automatically include all of its
04:17 - subfolders and items and this is just
04:21 - all we're gonna import for now so let's
04:22 - hit import and it will start
04:26 - in putting these assets correctly this
04:28 - might take a little while depending on
04:30 - how fast your computer is if you already
04:32 - have some of it imported and all that
04:35 - while it's importing we can just close
04:38 - down our browser here so we don't have
04:40 - it running and now we can see it's done
04:42 - let's close down the asset store and we
04:45 - are ready to start importing us or we
04:49 - are ready to start using some of the as
04:52 - these assets in our scene so let's
04:55 - double click on the sample assets folder
04:56 - which should now have appeared in your
04:58 - project pane let's go in the 2d and now
05:01 - we can see a bunch of different folders
05:03 - containing cool assets let's now go
05:06 - under prefabs and the most valuable
05:09 - assets the 2d character controller
05:11 - should be here now we can just go ahead
05:15 - and let's actually rename this to player
05:17 - and this is just personal preference
05:21 - it's up to you and let's drag this into
05:24 - our hierarchy so now it should be in our
05:28 - scene we can see it here and let's just
05:30 - position it right above the x-axis here
05:34 - and about with a zero on the X here so
05:40 - let's just do cero point come let's do
05:45 - just this this is fine 1.6 and then with
05:49 - and see at Z at 0
05:53 - awesome let's walk through what this
05:56 - character controller excel actually does
05:59 - so it has a bunch of different
06:01 - components first off its layer we want
06:04 - to set this to a custom layer I've
06:07 - already added a layer called player if
06:10 - you don't have it simply hit add layer
06:12 - and down here on the user layer 8 you
06:15 - can simply type in what you want then
06:18 - again select the player and select it
06:20 - from the drop-down list
06:22 - say yes to children so it will change
06:26 - all of its children also awesome then it
06:30 - has the transform it's which is position
06:32 - rotation and scale the sprite renderer
06:35 - which will handle actually showing our
06:39 - graphic
06:39 - and the sprite renderer has what is
06:42 - called a sorting layer and this is
06:45 - basically just if this is going to be on
06:48 - top or underneath other layers so we can
06:51 - use this to sort as to sort our graphics
06:55 - and simply what we want to do here so
06:57 - you're going to go in here and as you
07:00 - can see I've already added some of these
07:02 - layers just to show you what that you
07:05 - can rearrange them like this and these
07:09 - layers are arranged according to
07:14 - rendering order and that means that
07:16 - whatever is on top will be rendered
07:20 - behind because it will it will render it
07:23 - pretty much like a a painting that it
07:27 - first paints the background then the
07:29 - player and then the foul ground on top
07:31 - so we're just gonna do background player
07:34 - and then for ground now in our player we
07:39 - can simply select the player layer and
07:42 - then there's also an order in layer if
07:44 - you have multiple players but we're just
07:47 - going to leave that at zero then right
07:50 - now we have a bunch of animations for
07:53 - this but I don't really like the way
07:55 - they look
07:56 - actually let's let's go ahead and play
07:59 - this to see what this looks like right
08:01 - now and in order for us to play this we
08:03 - need something for our character to
08:05 - stand on so let's find the ground let's
08:07 - go into 2d sprites and then use this
08:11 - prototype type blue one this is pretty
08:14 - cool and let's simply just set the X to
08:18 - zero and then drag down the Y so it's
08:24 - almost resting let's do minus ten there
08:28 - and so we can we can stand on this but
08:32 - in order for us to actually collide with
08:34 - it we need to add a physics component so
08:36 - go to add component physics 2d and then
08:40 - box Collider 2d so now our player can
08:44 - actually interact with this in fistic
08:46 - space let's rename this to ground
08:51 - awesome so now when we play our
08:54 - character will fall to the ground and we
08:57 - can move from left to right let's just
09:01 - disable these gizmos here so go up here
09:03 - and hit kiss mouse and it will disable
09:06 - them so you can move from left to right
09:08 - and you can jump using space but you
09:11 - will notice that right now we can jump
09:13 - infinitely I just jumped a bunch of
09:16 - times and this is not really something
09:18 - we want so in order for us to fix this
09:22 - we are gonna just tweak some variables
09:25 - on the player so now select the player
09:28 - object let's disable the animator which
09:31 - handles all of the animation it stores
09:34 - the animator controller which shows how
09:36 - animations are tied together if you want
09:39 - to see this you can just double click it
09:41 - and you can see all of the different
09:42 - animations here and how they are
09:44 - connected that's something we are gonna
09:47 - go into later again this is just a quick
09:50 - overview one thing I do want to notice
09:53 - too want to say before we move on is
09:57 - that all of this is just placeholder art
09:59 - we are gonna do a bunch of custom stuff
10:02 - and I'm probably also gonna do some
10:06 - designs that you can use but the reason
10:09 - why we are currently using placeholder
10:10 - is first of all to just get our game set
10:12 - up but also I wanted you to have the
10:14 - opportunity to choose what you want to
10:18 - see in this course so if you have a good
10:20 - idea something you want me to see
10:22 - explain want to see me explain or or
10:25 - create please write it in the comments
10:28 - the details of this game is not planned
10:30 - out all I know so far is that it's gonna
10:33 - be a 2d platformer I would love to do
10:36 - some shooting but let me know if you
10:38 - want puzzle mechanics or a certain art
10:41 - style maybe 8-bit maybe just normal
10:45 - normal sprites what kinds of animations
10:49 - do you want to see do you want to see
10:52 - special physics stuff all of that please
10:54 - write suggestions in the comments so I
10:57 - know where to go from it's depending on
11:00 - you cool so let's move on with our play
11:05 - here select him and then in the circle
11:08 - Collider which is gonna leave this as
11:10 - you can see he consists of both a box
11:12 - Collider and a circle Collider and to
11:16 - get the the right collision then he has
11:20 - a rigidbody 2d component and this is
11:23 - because there are basically two ways to
11:26 - make character controllers in unity the
11:31 - first one is to use a rigidbody
11:32 - component which unity has done here and
11:35 - the good thing about this is that it
11:37 - will easily interact with other game
11:41 - objects so it has good physics
11:43 - interaction in terms that you can push
11:47 - boxes around and add with a interact
11:51 - with other rigid bodies it doesn't give
11:54 - you quite as much control over how he
11:57 - the character behaves but I really like
11:59 - this type of movement the other is to
12:03 - code all of the movement from ground up
12:05 - simply using raise where your cast lines
12:08 - to see if he's standing on the ground
12:10 - you you calculate all movement yourself
12:14 - not just by adding forces and such so
12:18 - that's the second way and it's a bit
12:19 - more complicated and not really
12:22 - something we are gonna need so far
12:24 - awesome so you can of course tweak the
12:27 - rigidbody for your liking and now we get
12:30 - through the really cool stuff now we get
12:32 - to the platformer character 2d movement
12:34 - script and this is why we can change
12:37 - stuff like his speed his jump force the
12:41 - scratching speed whether or not he can
12:43 - be controlled in air I really like when
12:46 - 2d characters complete couldn't be
12:48 - controlled in air I know it's not
12:50 - realistic but I think that not being
12:53 - able to control in airs it can be really
12:56 - annoying especially when when a lot of
12:58 - jumping is so involved so I would leave
13:01 - that if I was you but again it's up to
13:04 - you and also this is where we are going
13:08 - to tweak where we're gonna fix the bug
13:11 - where you can currently infinitely jump
13:13 - the problem is that we have this
13:18 - this drop down here called what is
13:20 - ground and this is basically a set of
13:24 - layers that you can include or exclude
13:27 - when ever the player checks if he's
13:31 - standing on the ground so right now you
13:33 - can see we've made a layer four for our
13:36 - player coal player and that is also on
13:40 - the list
13:40 - and this is the essence of the problem
13:42 - because our player is not a ground but
13:45 - right now the script thinks he is so
13:48 - whenever he's just floating in air he's
13:50 - colliding with himself so that the
13:53 - script constantly thinks that well we
13:56 - are standing on the ground we can jump
13:57 - again this is an issue because we're
14:00 - actually just colliding with ourself so
14:02 - let's just drop down this menu and it's
14:05 - disabled the player in what is ground
14:08 - now when we hit play we should be able
14:11 - to only jump once you've hit he's hit
14:13 - the ground and and as you can see it
14:16 - works then we have the platform a 2d
14:20 - user control script this is where all of
14:23 - the input is handled because the the
14:26 - cool thing about this current controller
14:28 - is that unity have split it up into two
14:30 - scripts one for the actual movement and
14:33 - physics calculation and one for the
14:36 - actual input so that we can easily tweak
14:39 - how we want him to be controlled and how
14:43 - he behaves that's really awesome it
14:46 - makes the scripts easier to read and and
14:48 - all of that for now I'm gonna lead Lee
14:51 - leave the crouching in here though I'm
14:53 - not really sure it's something I want
14:55 - for the final game then at last we have
14:59 - the box Collider 2d which I also showed
15:01 - you before great now that we've tweaked
15:04 - tricked the sky let's hit apply and all
15:09 - of the settings will apply to our prefab
15:11 - and he's working just the way we want
15:14 - him to now we can go ahead and add a
15:17 - main camera that will actually follow
15:20 - our player so let's select the main
15:23 - camera let's rename this by deleting the
15:28 - space it's generally good practice to
15:31 - not
15:31 - have spaces in your naming I don't know
15:34 - why unity names main camera with the
15:37 - space by default but I like to delete
15:40 - that and of course also remember that
15:43 - unity is caps sensitive so you need a
15:46 - good system for when you need when you
15:49 - want to do capital letters and when you
15:51 - don't I mean for game objects I normally
15:56 - do each word with a capital letter
15:59 - but for many variables depending on the
16:02 - type I begin the first word without a
16:06 - capital letter again this is completely
16:08 - up to you just make sure you create a
16:11 - system and stick to it
16:14 - awesome so there are two ways of doing
16:17 - this first off we can simply drag the
16:20 - main camera under the player so now it's
16:22 - parented to the player and it will
16:24 - follow him wherever we go the solution
16:28 - works but it's not exactly great the
16:32 - reason why is we don't have much control
16:34 - over the camera
16:35 - we can't unparent it or make any cool
16:38 - effects with it and it's not really a
16:41 - smooth position also when we would want
16:45 - to maybe delete the player if he died
16:47 - our main camera would disappear too so
16:50 - those are all problems that can be
16:52 - easily solved by having a script simply
16:55 - setting the position of the camera to
16:57 - the position of the player and in here
17:00 - we can also do a bunch of smoothing and
17:02 - smart camerawork in order for it to yet
17:06 - to work better so what we don't want to
17:10 - do now is simply we want to go on a 2-d
17:12 - then then script and we want to find the
17:16 - camera to the follow script let's select
17:20 - the main camera and drag it onto there
17:24 - awesome now let's set the target to
17:27 - player so drag the player on the target
17:30 - and let's see if this works
17:34 - our main camera now follows our player
17:38 - perfectly it looks much better but I
17:41 - think it's just a bit too smooth for my
17:44 - liking
17:45 - also if you notice right now when we
17:47 - play the game the camera slowly fades up
17:50 - so let's just make sure that the camera
17:52 - and the player are at the same Y
17:56 - position so let's just do set the player
17:59 - to 1.5 then copy this position and paste
18:04 - it under the cameras Y position awesome
18:08 - so now when we play it will already be
18:10 - at the exact position of the player of
18:13 - course he drops down a little bit but
18:15 - that way it just gonna ignore awesome so
18:19 - under the the camera 2d follow script
18:23 - you can see we have a bunch of settings
18:24 - the first one is dampening which is
18:27 - basically how smooth the movements of
18:29 - the camera is gonna be and I think that
18:35 - right now it's way too smooth because I
18:37 - would really like this game to be quite
18:39 - fast-paced and then it quickly gets
18:43 - annoying if your camera doesn't follow
18:45 - and if it if it's constantly moving and
18:48 - all that so what we're gonna do is we're
18:50 - gonna do something like 0.3 the
18:53 - look-ahead factor is pretty cool so
18:57 - right now if we let's say walk a bit to
19:00 - the left you will notice that our camera
19:02 - doesn't focus on a player right right
19:05 - away it looks three units ahead and this
19:09 - works for both directions and it helps
19:12 - us look forward to see what is coming up
19:17 - ahead so it's great for to give the
19:20 - player a bit more insight in on the
19:22 - player direction he's walking but I
19:25 - think it's just a bit too much asses so
19:28 - let's bump this up to 1.5 then of course
19:31 - we have the return speed and the move
19:33 - threshold which you can adjust to make
19:35 - the the blending back a little a little
19:39 - better so why now we look and then it
19:41 - slowly fades back into our players
19:43 - position you can adjust those values to
19:47 - make that transition better if you don't
19:48 - like it I think it's pretty good as this
19:51 - so now that was pretty much the basics
19:55 - of this tutorial
19:57 - I'm glad with what we've gotten done
19:59 - here we've set up a basic scene with a
20:02 - character them that moves and a main
20:04 - camera that follows him again I can't
20:06 - stress this enough please leave some
20:08 - comments on what you would like to see
20:10 - I'm very open to feedback and I'm
20:12 - looking very much forward to seeing how
20:14 - this game will shape up cool so thanks
20:19 - for watching this video and I'll see you
20:21 - in the next one
20:22 - [Music]