00:00 - [Music]
00:03 - hello everyone and welcome to this video
00:04 - I'm making a tower defense game in unity
00:06 - today we are going to have a look at
00:08 - unlocking levels but before we jump into
00:10 - unity and get started I just have a few
00:12 - things that I wanted to address the
00:14 - first one being I'm now on a fixed video
00:16 - schedule that means every Wednesday and
00:19 - Sunday that's Wednesday and Sunday I'll
00:21 - be uploading a new tutorial I've
00:23 - actually been on the schedule for quite
00:25 - a while but for some reason I just
00:27 - haven't really told it to you in a video
00:30 - and yeah no particular reason why I'm
00:32 - just a doofus and the second thing is I
00:34 - got a new camera and I've been
00:36 - experimenting a bit with uh kind of the
00:39 - layout and setup for these tutorials so
00:41 - let me know what you think of this uh
00:43 - new uh setup and uh yeah please be
00:46 - constructive about it but I definitely
00:48 - want to hear what you guys uh have to
00:50 - say so that I can fine-tune it because
00:52 - I'm still figuring out some of this
00:53 - stuff and that's also the reason why
00:55 - this particular video is uploaded on
00:57 - Thursday and not a Wednesday is because
01:00 - I messed up something with the new
01:01 - camera it's pretty embarrassing but I I
01:03 - shouldn't have nice stuff so yeah I had
01:06 - to postpone it a single day oh and I
01:08 - forgot to mention that this previous
01:10 - weekend was ludum Dar which is an
01:12 - awesome game development competition
01:13 - where you get 48 hours to make a game
01:15 - from scratch using only code and assets
01:18 - that you create yourself I participated
01:20 - and you can find my submission in the
01:22 - link in the description so check that
01:25 - out if you want and definitely expect a
01:27 - behind the scenes video as soon as I can
01:29 - get that done so yeah let's jump into
01:31 - Unity so let's get started by opening up
01:34 - our level select scene and also our
01:36 - level selector script so just double
01:38 - click that and it will boot up in visual
01:40 - studio and here you can see we simply
01:42 - have a reference to our fat script which
01:45 - is responsible for changing scenes
01:47 - smoothly and we also have our public
01:50 - void select and that's currently just
01:53 - called by the different buttons but our
01:55 - script has no reference to the buttons
01:57 - in our scene it doesn't know what they
01:59 - are
02:00 - they simply call this function so let's
02:02 - start by creating a list or more
02:05 - specifically an array of all of the
02:07 - buttons that we currently use in order
02:09 - to be able to change to a certain level
02:12 - so to do that let's create of course a
02:14 - public variable and we need these to be
02:17 - of type button but that's not included
02:20 - by default we need to go up here and say
02:22 - using Unity
02:24 - engine. UI and now we have access to the
02:27 - button class then we can call the button
02:30 - array here and we need to mark it as an
02:33 - array by opening and closing these
02:35 - Square parentheses we can call this one
02:38 - are Level
02:40 - buttons now when we save this and head
02:42 - back into
02:43 - unity and when we then select our level
02:46 - selector object with our script we
02:48 - should see a new array that we can
02:50 - resize more specifically we can add two
02:53 - new elements and of course we want to
02:55 - add our two buttons here so let's just
02:57 - find that those under the scroll r on
03:00 - the content and we have our first level
03:02 - button and our second level button and
03:04 - we'll just drag those in so what this
03:07 - allows us to do is now in our script uh
03:10 - at any point let's just choose the start
03:12 - method here so right when we boot up
03:15 - this
03:15 - scene what we want to do is Loop through
03:18 - all of our buttons so we want to go four
03:21 - and whenever you create a four statement
03:23 - you could go ahead and type it out
03:25 - yourself so far uh in I equals z we want
03:28 - to go as as as long as I is less than
03:31 - level buttons.
03:34 - length but this is always a bit
03:36 - redundant what we'll do instead is just
03:38 - write four and then tap Tab and that's
03:40 - going to automatically insert all of
03:42 - this stuff for so we can name our
03:44 - variable we could call it J for example
03:46 - but we'll just call it I and we'll also
03:48 - change the length here to level buttons.
03:51 - length and this way we quickly have a
03:54 - for Loop uh that will go through and for
03:57 - each button in our array up here will'll
04:00 - create a variable I with the index of
04:03 - that button so we'll just keep going
04:04 - until we reach the end of our array and
04:07 - what this allows us to do is now say
04:08 - level buttons to the E element so which
04:12 - is the first time we go through it's
04:14 - going to select the first button which
04:16 - has an index of zero the second time
04:19 - it's going to select the second button
04:21 - which has an index of one and of course
04:23 - it's going to stop there for us but you
04:25 - can have an unlimited or at least a
04:27 - pretty long list of buttons on here and
04:30 - it's not going to complain about it and
04:32 - then we can go do interactable and we
04:34 - can then disable the interact ability of
04:37 - these buttons so all this really does
04:39 - through script is go to our button and
04:41 - then disables the interact ability here
04:44 - so it just toggles off this switch right
04:47 - here and of course we do that for both
04:49 - buttons right now so if we go and hit
04:50 - play we should see that we don't see any
04:53 - hover animation and that we cannot
04:55 - actually click these buttons what a
04:57 - standard button will do just a default
04:59 - one is because it uses the color tint as
05:02 - a transition we'll go ahead and maybe
05:05 - Fade Out the button a little bit so it's
05:07 - clear that you cannot interact with it
05:10 - but we don't do that at the moment so
05:11 - let's instead go in and create a small
05:14 - animation just like we have the normal
05:15 - highlighted and pressed we also want to
05:18 - go and do something for the disabled and
05:20 - what we want to do with this animation
05:22 - is simply find our color and then drag
05:26 - down the alpha quite a bit just to make
05:28 - it very very clear C that this button is
05:31 - not to be interacted with but remember
05:34 - whenever we change a parameter on one of
05:36 - the animations we have to make sure that
05:38 - it goes back if we then reenable it we
05:41 - don't want it to just change its Alpha
05:43 - and if it then goes back to normal it
05:46 - will stay at that Alpha we of course
05:48 - have to input a key frame here for the
05:50 - color as well where the alpha is 255 so
05:54 - we'll just go ahead and duplicate this
05:56 - key frame here and paste that onto
05:58 - highlighted as well and under pressed so
06:01 - it's only when it's disabled that we
06:03 - will get this um faded color and we uh
06:07 - can do this on one of the objects only
06:09 - and we don't even uh even have to do any
06:11 - applying of the prefab because they all
06:14 - share the same animation files and
06:16 - that's what we've just edited we just
06:18 - edited right now this button here that
06:21 - has the disabled highlighted normal and
06:24 - pressed cool so what we should now uh
06:27 - see is that when we have played
06:30 - they're both faded out and that's
06:32 - awesome one thing that we of course do
06:35 - not want to happen is that right now
06:38 - both of these buttons are faded out and
06:40 - we want to always be able to choose at
06:43 - least one so of course we have to keep
06:46 - track of what level we're currently
06:48 - reached and in order to do this um it's
06:51 - not enough to just uh create a variable
06:54 - because a variable won't persist between
06:57 - scenes if we create the same script in
06:59 - the first scene and in the second scene
07:01 - it's not going to carry over if we mark
07:04 - it as a public static variable that is
07:06 - totally going to work and it's going to
07:08 - carry over but as soon as you close down
07:10 - the game your progress is going to be
07:12 - lost and the static variable is just
07:14 - going to go back to its default value so
07:17 - what we do instead is save our progress
07:20 - to some kind of file um many advanced
07:24 - games uh use some kind of data format
07:27 - for this and that could be Json
07:30 - or XML which are basically just formats
07:33 - for storing loads of data say you want
07:35 - to store player Health player progress
07:38 - levels all that stuff maybe even where
07:41 - objects are placed in the scene where
07:43 - your player is in the world when he
07:45 - locks out stuff like that you can store
07:47 - a lot of stuff in those formats and you
07:49 - can definitely check that out it's
07:51 - called
07:53 - serialization but what we do which is a
07:56 - lot easier and it's something that Unity
07:58 - has provided us for this use case
08:00 - specifically is use the buildin player
08:04 - prefs and this just allows us to store
08:06 - either a string a float or an integer
08:09 - and you can store multiple integers
08:11 - multiple floats multiple strings so you
08:13 - can actually use it for a lot of stuff
08:16 - really really easily so what we do in
08:19 - order to utilize this function is let's
08:21 - create a new variable and let's call it
08:24 - level reached this is going to be the
08:26 - level of the highest number that we have
08:29 - reached so in the beginning this is
08:31 - going to say one then when we beat that
08:34 - level we get to go to level two so level
08:37 - reached will be two and so on so we
08:40 - don't want to set this equal to either
08:42 - one or two instead we want to set it
08:44 - equal to the level that we have reached
08:47 - and therefore we go to player prefs and
08:50 - you use this whenever you want to get a
08:52 - value or set a value and then we do Dot
08:56 - and in this case we want to get a value
08:59 - so so we go get and then you can see we
09:01 - have both string int and float and in
09:04 - our case because it's a limited amount
09:06 - of levels we want to just use the
09:08 - integer some number some whole number so
09:12 - let's use get in and then we give it the
09:15 - name of the key and the key is basically
09:18 - just a string value that you use to
09:21 - associate with that number it's
09:23 - basically the same thing as a variable
09:25 - name so if we treat this integer as a
09:28 - variable that has a value and the key to
09:31 - get that value is the name this uses the
09:34 - exact same thing so our key here could
09:37 - be the exact same level reached and I
09:40 - think we should just do that for
09:41 - Simplicity we also get to specify a
09:44 - default number so in our case we do
09:47 - comma one and that's because we want our
09:50 - default uh level reached to be one we do
09:53 - this so that if we have never played the
09:55 - game before and it tries to go here and
09:57 - find a on Saved piece of data called
10:01 - level reached and it isn't created yet
10:03 - it's just going to return the value one
10:06 - and so it's only going to allow us to
10:08 - play the first level this is going to
10:09 - happen every time a new player plays the
10:12 - game so now we can use this level
10:14 - reached in order to specify what level
10:17 - buttons we want to actually be
10:19 - interactable and we do that by saying
10:22 - that if the current value of our I here
10:27 - so if I which means the index of the
10:30 - button we are currently on is less than
10:35 - level
10:36 - reached well then we want to go ahead
10:38 - and make it not interactable so if we
10:41 - haven't reached that level yet if this
10:44 - current button has a level index that we
10:46 - haven't reached we want to go ahead and
10:48 - make it
10:49 - non-interactable but of course our I
10:52 - here starts zero and obviously our level
10:55 - reached starts at one so we have to just
10:58 - add one onto the i in order to make that
11:00 - totally valid whoops I noticed a bug
11:02 - here that we have to fix before we run
11:04 - this and that is if I + 1 is greater
11:07 - than the level that we've reached then
11:10 - we want to disable it awesome so we can
11:12 - save that hit into unity and what we
11:14 - should see now is that when we play the
11:16 - game it's not going to have any
11:19 - previously stored uh data and so it's
11:21 - just going to return one and that means
11:24 - that the only button that's going to be
11:25 - clickable is the first one and the
11:27 - second one should be grade out so if we
11:29 - had play now we should see exactly that
11:32 - happening and that's awesome and again
11:34 - we cannot click this but we can proceed
11:37 - to the first level so that's actually
11:40 - all we need to do for our level selector
11:42 - but of course we still have to change
11:44 - our level reach so that we can actually
11:46 - progress in the game it's not going to
11:48 - do that automatically so what we do here
11:51 - is head into our first level we find our
11:55 - game master so let's find the place in
11:56 - our code where our level ends and that's
11:59 - since inside of our wave spawner so
12:00 - let's double click that and scroll down
12:02 - here to where inside of our spawn wave
12:05 - we realize that we've just spawned all
12:07 - of the waves that we wanted to have in
12:10 - this level we currently just throw out a
12:12 - debug.log statement saying that we won
12:14 - the level and then we disabled this
12:16 - script what we want to do instead is we
12:19 - probably still want to throw out a
12:20 - debug.log and you might even display
12:22 - some cool information here like the
12:24 - amount of waves that you just went
12:26 - through and the amount of enemies you
12:28 - killed cash and stuff like that but what
12:31 - we will also do is of course increase
12:35 - the UN level reached so in order to do
12:38 - all of this stuff I don't want to do it
12:40 - inside of the wave spawner I want a more
12:42 - appropriate place to put this code and
12:44 - that is of course inside of our game
12:46 - manager this is responsible for ending a
12:49 - game and so I think it should also be
12:52 - responsible for winning a level so let's
12:54 - go in here and create a public void and
12:57 - let's call this one something like level
12:59 - one or you could just put win level
13:02 - which I think we are going to put and in
13:05 - a in here we could throw stuff like a
13:07 - debug.log statement and I think we are
13:09 - just going to copy paste that in there
13:11 - so we know what is going on and of
13:14 - course we need now a reference to the
13:16 - game manager inside of a wave spawn in
13:18 - order to call that function so let's go
13:20 - to the top here and let's create a
13:23 - public game
13:25 - manager and we're going to call it a
13:27 - game manager as well and let's let's go
13:29 - down here and say game manager Dot and
13:32 - then we call win level then inside of
13:36 - our win level script we throw out the d.
13:38 - log we could then go in here and say
13:41 - player prefs Dot and now we don't want
13:43 - to use get now we want to use set so we
13:47 - use set in and again we input a key
13:50 - which is the name of our value so our
13:54 - name is level reached and it's very
13:57 - important that you type this the exact
13:59 - same way that you did inside of the
14:01 - level selector it's not going to throw
14:04 - an error if you didn't so just go in
14:07 - here copy this paste it in here and
14:10 - you're good to go just make sure that
14:12 - that's correct because it's not going to
14:14 - complain about it if you make a mistake
14:16 - and then we throw a value and the value
14:18 - here could be in our case we want to
14:21 - transition to two if it's the first
14:25 - level and to three if it's the second
14:28 - and so this is something that will
14:29 - dynamically change one thing you could
14:32 - do is keep sort of an array a list of
14:35 - all of the different levels with an
14:37 - Associated index that you put in here
14:39 - that would be totally fine or you could
14:42 - at the top here inside of the game
14:43 - manager have some variable that start
14:47 - with a public string and this is going
14:48 - to be the name of the next level and
14:51 - we'll just default that to level
14:54 - two and we'll also have a public integer
14:58 - which is going to be the next level
15:02 - index or we could call it level two
15:07 - reach or let's say
15:09 - unlock and we can default that to two as
15:12 - well so this is a bit more fragile
15:17 - because you'll have to remember to write
15:18 - everything in there but you will have to
15:21 - uh add it to the level array anyways and
15:24 - it's just a lot easier so now we simply
15:26 - input level to unlock in here and then
15:29 - when we want to actually change the uh
15:31 - scene we of course need another
15:33 - reference and that's to our fade script
15:35 - so we'll go up here and again again and
15:38 - we'll create a public screen or um scene
15:42 - fader and we'll call this one scene
15:45 - fader and now we can go down here and
15:48 - type scene fader fade 2 and the scene
15:51 - that we want to fade to is the next
15:54 - level awesome so that should actually
15:57 - work just fine so now we just need to go
15:59 - into our game master and we need to
16:01 - input this new information we need to
16:03 - drag the game master or manager inside
16:06 - of the wave spawners game manager there
16:09 - we go so that's linked up we want to
16:11 - drag the scene fader into our game
16:13 - manager and we want to confirm that our
16:15 - next level is level two that's correct
16:18 - because we're currently on level one and
16:20 - the level to unlock is also two cool
16:23 - that's also correct so now we can just
16:26 - save this and it should work right away
16:29 - so let's go to our level select let's
16:32 - hit play and we should now be able to go
16:35 - to the first level here and run through
16:37 - it but that's going to take some time so
16:39 - I thought we would just take a shortcut
16:41 - which means just loading up level one
16:43 - and finding our wave spawner and setting
16:45 - the time between waves to zero uh just
16:49 - so it's it will really really quickly
16:51 - run through here so let's just put in a
16:55 - lot of objects or game objects here to
16:58 - kill off the different waves as they
17:01 - spawn awesome so you can see how quickly
17:03 - that went and you also notice a buck but
17:06 - it transition to the second level here
17:08 - so let's focus on that and we'll fix the
17:10 - buck in a second so it transition to the
17:13 - second level and now we can go and
17:16 - choose our level select again and we can
17:19 - just hit don't save on that we don't
17:21 - need to do that hit play and you can see
17:24 - that they are both unlocked so that's
17:26 - awesome and it's going to keep doing
17:28 - that if we create say if we just very
17:30 - quickly go in here and create another
17:34 - button so just duplicate level button
17:37 - two and we change the text here to three
17:40 - and we go into our level selector and
17:42 - add it to the array so go three there
17:45 - add it in there and hit play you should
17:48 - see that that's not unlocked and indeed
17:50 - it is not so you can see how easy it is
17:53 - now to add new levels to this
17:56 - system so now let's just focus on on our
17:59 - buck and we'll call that a day so let's
18:02 - go into our first level here and
18:04 - basically what happened is it marked uh
18:08 - the level here as completed before we
18:12 - had actually destroyed all the enemies
18:14 - and it even went on to spawn a wave
18:17 - before a previous wave was completed and
18:20 - the reason why is because of the way
18:22 - that we're currently checking if a w
18:25 - wave is done and we do that by uh if we
18:28 - go into the wave spawner here uh each
18:31 - time we spawn an enemy we increase
18:33 - enemies Alive by one and then when we
18:36 - kill an enemy if we find our enemy
18:38 - script so we'll go and double click on
18:41 - the enemy here every time we die we
18:45 - decrease enemies alive and if enemies
18:49 - alive reaches
18:51 - zero it's going to go ahead and spawn
18:54 - the next wave but the problem with this
18:59 - the problem with this is that we of
19:02 - course instantiate the enemies with a
19:05 - bit of delay in between them so we don't
19:07 - just go ahead and spawn all of the
19:09 - enemies at the same time you can see
19:10 - here that we wait the wave rate so one
19:13 - divided by the wave rate and therefore
19:16 - there's a bit of delay between each
19:17 - enemy spawn so if an enemy spawns and we
19:21 - destroy it before the next one the
19:25 - amount of enemies alive is going to be
19:27 - zero in the middle of the r wave and if
19:30 - we are unlucky it's going to start the
19:32 - next one or transition to the new level
19:35 - so in order to fix this instead of
19:38 - increasing enemies alive when we are
19:40 - spawning enemies we're just going to set
19:43 - enemies alive equal to wave. count
19:47 - before we actually start spawning so
19:50 - this way we'll just set the enemies
19:51 - alive to the amount of enemies that are
19:54 - going to be spawned and yeah just use
19:58 - that it's much simpler and it should
20:01 - work much better so if we now go in here
20:03 - and set our time between wave to
20:05 - something like one let's just decrease
20:07 - it a little bit and we'll very very
20:09 - quickly just run through this so let's
20:11 - create a bunch of turrets to take care
20:13 - of our enemies and we'll create some of
20:15 - higher level as well let's use the laser
20:17 - Beamer here you can see that the
20:20 - previous wave does not start until
20:22 - you've actually completed the um or the
20:25 - next wave doesn't start until you've
20:26 - completed the previous one and once we
20:28 - get through the last wave it's going to
20:30 - transition so now that bug should be
20:33 - gone awesome so you will notice a slight
20:37 - disadvantage when it comes to just
20:39 - duplicating levels like this and that is
20:41 - all of the changes that we've made to
20:43 - our game master in here have not updated
20:46 - in level two you still have to set up
20:49 - the scene fader and game manager in
20:51 - level two what we can do since we don't
20:53 - have anything special going on in level
20:55 - two is just delete that and then
20:57 - reduplicate the level but of course
21:00 - that's not super awesome if you have a
21:02 - lot of stuff going on that is different
21:05 - between the two levels what I would then
21:07 - recommend is you can of course go ahead
21:09 - and make all of these different objects
21:11 - into prefabs that you just make sure to
21:14 - update whenever you change that and you
21:16 - can get really far using that method but
21:20 - if you really serious about this and
21:21 - want to create a lot of different levels
21:24 - what I would recommend is you utilize
21:26 - the fact that Unity has now created a
21:28 - way of loading different scenes in you
21:31 - create one scene for all of the stuff
21:33 - that is shared between all of the scenes
21:35 - like the game master and the scene fader
21:38 - the node UI stuff like that that doesn't
21:41 - necessarily need to be interl with the
21:44 - actual layout of the level and then you
21:46 - have another scene which is uh which is
21:49 - different for each level which is the
21:51 - actual layout of the scene so that's
21:54 - something that you might take into
21:55 - consideration if you want me to show
21:57 - kind of how that's done of course let me
21:59 - know I think next up is probably some
22:02 - screen that will display uh in order to
22:05 - show how you did in a level I think
22:07 - that's pretty important instead of just
22:08 - going directly to the next one but that
22:10 - was pretty much all I wanted to show you
22:12 - in this video and I will see you in the
22:14 - next one thanks to all the awesome
22:16 - Patron supporters who donated in
22:18 - November and a special thanks to Sultan
22:20 - Al Sheriff F marifi James Kell hound and
22:22 - Robert bonam become a patreon yourself
22:24 - at patreon.com braies