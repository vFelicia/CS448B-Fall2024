00:00 - thanks for tuning in at brakus and I
00:04 - wanna welcome to this video in creating
00:05 - a multiplayer face in unity today we are
00:07 - going to be creating a reload system for
00:09 - our game so whenever we run out of
00:11 - bullets we will force a reload upon the
00:14 - user and we'll probably also add a
00:16 - shortcut which is probably gonna be the
00:17 - our key for reloading immediately so
00:21 - we'll have a max bullet count will count
00:23 - down to zero and then we'll have some
00:25 - kind of animation in there that place
00:27 - while we are reloading that will be
00:29 - displayed on all clients pretty easy
00:31 - stuff to do but it's gonna be a lot of
00:33 - fun so let's just dive right into it so
00:34 - as you can see I'm here in unity and
00:36 - what I want to begin with is to just
00:37 - kind of sketch out the logic so if we
00:40 - find the script that is responsible for
00:41 - shooting which is our player shoot
00:43 - script and double click that and
00:45 - remember this script sits on the player
00:48 - object itself and it's enabled for all
00:50 - of our different clients so this code
00:52 - will be called for all the clients and
00:55 - in here you can see that we do some
00:58 - updating and we do some firing and most
01:01 - importantly down here is the shoot
01:03 - method where we check if we're the local
01:06 - player and if we are well then we want
01:08 - to go ahead and shoot
01:10 - we want to fire out a ray cast and do
01:13 - all that stuff with damage and finding
01:16 - the player we've hit and all that stuff
01:18 - so let's go ahead and add some more code
01:20 - honor this and really what I want to
01:23 - begin with is having some kind of idea
01:25 - of how many bullets we have left and so
01:28 - far all information about our weapon is
01:30 - stored inside of the player weapon class
01:32 - and this is handled by the weapon
01:34 - manager so let's do it go ahead and just
01:36 - open up these two scripts you can see
01:39 - our weapon manager takes care of
01:41 - switching between weapons and currently
01:43 - we only have a primary weapon that we
01:45 - have enabled all the time I've promised
01:48 - you guys to do weapon switching and I
01:49 - definitely will I'm just holding it back
01:51 - a tiny bit because I have some stuff
01:53 - that I want to do first and because I
01:55 - want to have some cool models ready for
01:57 - you so you have something to switch bit
01:59 - swing but don't worry I know that you
02:01 - guys want to see that and I definitely
02:03 - want to do it as well so it's on the
02:04 - roadmap but for now in here we have a
02:07 - primary weapon and we have a reference
02:09 - to the weapon that we currently have
02:10 - equipped call our current weapon and
02:12 - that work
02:13 - is basically just this data so let's
02:16 - just go ahead and add some new data
02:17 - fields here let's make a public integer
02:21 - which is going to be our max bullets and
02:23 - this is just going to be defaulted to
02:25 - something like 20 and then we can have
02:27 - and hide an inspector here because we
02:29 - don't want to show this and make it
02:31 - editable in the inspector which is our
02:33 - current amount of bullets so we can just
02:35 - call this one bullets and what I really
02:38 - want to do here is add on to this a
02:40 - constructor so a class constructor that
02:43 - will set some variables whenever this
02:45 - class is instantiated so we'll create a
02:47 - public player weapon here and this is
02:49 - how we create a constructor and this
02:51 - basically allows us to just set bullets
02:54 - equal to max bullets whenever this class
02:57 - is used so um that's awesome and then we
03:00 - can go into our player shoot script here
03:04 - and we can use the fact that we already
03:06 - have a reference to our current weapon
03:09 - so we declare that up here you can see
03:12 - we set our current weapon equal to the
03:14 - weapon manager get current weapon so
03:16 - we'll use this reference down here and
03:18 - we'll simply say that if current weapon
03:21 - dot bullets is less than or equal to
03:25 - zero meaning we've run out of bullets
03:27 - well then we want to return out of this
03:29 - because we don't want to call all the
03:31 - rest code all the remaining code and we
03:34 - can maybe do a debug that log statement
03:36 - here saying I'm out of bullets so and
03:40 - this is where we'll probably false a
03:43 - reload so this is where we'll call some
03:45 - method that will have sit on the weapon
03:47 - manager in order to reload the weapon
03:49 - and what we'll also need to do is
03:51 - remember that whenever we shoot we want
03:54 - to subtract our current bullet amount so
03:56 - I will say current weapon dot bullets -
04:00 - - so we'll just want to subtract 1 each
04:03 - time we shoot cool so this should
04:07 - actually work and let's just add a bit
04:09 - of information here let's just do a
04:11 - debug the lock up here stating the
04:13 - current amount of bullets we have right
04:15 - before shooting so we could also do it
04:17 - down here as well but let's just do it
04:19 - here for actually I want to do it after
04:22 - we just shot so let's just do a debug
04:25 - turlock saying room
04:27 - raining bullets and then we'll do plus
04:31 - current weapon dot bullets awesome so
04:35 - let's say that and let's try to see if
04:37 - this is working in unity already so
04:39 - let's hit play and host the game and
04:42 - host the game come on unity
04:44 - please don't freeze on me so we can
04:46 - create a room here and you can see that
04:48 - if I just switch into the console and do
04:52 - some shooting you can see it says
04:53 - remaining bullets 19 18 17 and we just
04:58 - keep going until it hits zero and now it
05:02 - says out of bullets and I can't shoot
05:04 - anymore notice there's no shooting
05:06 - animation awesome so what we really just
05:09 - need to do is add some functionality for
05:11 - action and now reloading the weapon and
05:13 - then re-enabling ourselves to shoot
05:15 - because this is based on the current
05:16 - amount of bullets we don't even need to
05:19 - do need to do any kind of checking in
05:20 - here we just need to know our amount of
05:24 - bullets and when that's replenished we
05:26 - can begin shooting again so inside of
05:28 - our weapon manager let's add a new
05:30 - function and this is just going to be a
05:32 - public void reload and instead it's not
05:37 - going to take in any arguments and what
05:39 - we want to do here is basically keep
05:41 - track of whether or not we are already
05:43 - reloading because we only want to call
05:45 - this once and we only want to do a
05:48 - reload once we don't want him to replay
05:51 - his animation and things will look weird
05:53 - or restart the reload in middle of
05:54 - another reload and stuff like that we
05:56 - just want to go through a full reload
05:58 - and that's it and this way we do that
06:01 - easily by just adding a private pool up
06:03 - here called is reloading and setting
06:06 - that to false by default and then in
06:08 - here we just say if we are already
06:10 - reloading so if is reloading we just
06:13 - return and in case we're not we can go
06:17 - ahead and do a bunch of code what I want
06:18 - to do is just set is reloading equal to
06:21 - true and when we're done doing all of
06:23 - our code we'll set it back to false and
06:26 - you might think isn't this kind of dumb
06:29 - to do because it's going to execute this
06:31 - function really quickly and there's not
06:33 - going to be any code running in between
06:36 - these two things and you're totally
06:38 - right about that except we are going to
06:39 - just in a moment move
06:41 - this code into an ACO routine or an iron
06:45 - numerator as we refer to them in cyber
06:47 - unity but they're still co-routines
06:48 - and we're going to be delaying this code
06:51 - so we're going to be setting up a wait
06:52 - for a second call that is going to wait
06:55 - exactly let's say one second until is
06:58 - reloading is done and will be set to
07:00 - false and that is why we have to keep
07:03 - track of where we are in terms of the
07:06 - reload stage so we said is really
07:09 - reloading to true and then we can just
07:12 - go current not current graphics current
07:15 - weapon dot bullets dot bullets
07:20 - equals current weapon not current
07:23 - graphics Jesus Christ current weapon dot
07:26 - max bullets there we go and now we've
07:29 - reset our mount of bullets and we should
07:31 - be able to shoot again and again right
07:33 - now this is an immediate effect but we
07:36 - should be able to see this working
07:37 - already inside of unity it's just going
07:39 - to skip a single frame and then it's
07:42 - going to reload however it won't do that
07:44 - until we actually call the function so
07:46 - inside of our player shoot instead of
07:48 - saying out of bullets we're just going
07:50 - to go in here and say weapon manager dot
07:54 - reload awesome and now all we really
07:59 - need to do is maybe notify ourselves
08:01 - that this is happening so let's just go
08:03 - in here and throw a debug the log
08:05 - statement saying debug the lock
08:08 - reloading and let's just do two dots
08:12 - here because it's and something we're
08:14 - waiting to finish so let's hit a hit
08:17 - play now and host the game and let's go
08:21 - through this and you can see it's s
08:22 - remaining bullets and all that and when
08:24 - we reach zero it's and then click it's
08:27 - going to say reloading dot dot and we
08:30 - can now shoot again and if I just hold
08:32 - down the trigger here you can see that
08:34 - it very quickly reloads you might not
08:36 - even be able to notice it on the camera
08:38 - the reloading is almost instantaneous so
08:42 - what we'll do here is of course add some
08:44 - kind of delay to this and that's why
08:46 - we'll use a kuroh team so let's go up
08:48 - here let's say using system dark
08:51 - collections collections which we need to
08:54 - do it
08:54 - we want to use the karate then we go
08:57 - down here let me create a private
08:59 - ienumerator and we call this one I'll
09:02 - reload co-routine I don't it's not we
09:06 - need to distinguish between this reload
09:08 - and the private one here you can call it
09:10 - whatever you want I'm just gonna tell
09:12 - myself this is a co routine and we need
09:14 - to use it that way you can do whatever
09:16 - you want with the naming here and yeah
09:20 - everything else is good so now we just
09:22 - need to move all of this our code here
09:24 - inside of the core team so read or
09:26 - co-routine here it's gonna say reloading
09:28 - and it's going to set this and then
09:31 - before we change the amount of bullets
09:34 - we want to wait so we're going to do a
09:35 - yield return new waitforseconds and the
09:40 - amount of seconds we could set to
09:42 - something fixed say 1 second or we could
09:45 - have it be dependent on the weapon so
09:47 - some weapons might read out really fast
09:50 - such as a pistol where just what you
09:53 - swap out the magazine or some weapons
09:56 - might take a while say a light machine
09:58 - gun when you need to do all kinds of
10:01 - reloading action so what we'll do is
10:04 - we'll go inside of our player weapon and
10:06 - we'll add this as another field so let's
10:08 - just create a and actually I want it
10:10 - here let's just create a public float
10:13 - which is going to be our reload time and
10:16 - it's going to say let's just set it at 1
10:19 - by default and let's put that in here so
10:21 - now we just go current weapon dot reload
10:25 - time cool so this should actually
10:29 - already work for the delay all we need
10:31 - to do now is call this corrodium so we
10:33 - go start co-routine and we put in the
10:37 - reload curl routine and remember this is
10:39 - a function so we need the parentheses so
10:41 - now let's save this and we should again
10:43 - see this working inside of unity so
10:45 - let's hit play now let's create a new
10:47 - realm test and we should see if I just
10:51 - hold down my mouse now that it actually
10:54 - does a 1 second pause before continuing
10:57 - each time it reloads cool but we don't
11:00 - currently have any kind of visual
11:03 - representation of what is going on and
11:05 - since we haven't added any sound to the
11:07 - game
11:08 - it can be kind of hard to unnotice so
11:11 - what we'll do is create right now just a
11:13 - simple animation but you can be an ass
11:15 - van advanced with this as you want to
11:17 - and have this be called on all of our
11:20 - different clients that we want to call
11:21 - it on the local one which we're doing
11:23 - right now with this function here this
11:25 - is only cold on the local player and
11:27 - then we'll have it be called on all of
11:30 - the other clients as well where we do
11:32 - this kind of reload animation so let's
11:34 - begin by creating the animation and
11:35 - let's then move on to actually calling
11:38 - it in here so um in order to create this
11:41 - animation let's set up a simple little
11:43 - system here so let's go into our main
11:45 - level one and let's take our prefabs and
11:48 - find our actually our players out here
11:51 - let's drag a player in here and that
11:54 - should switch up our camera here let's
11:56 - find our camera our weapon holder and
11:59 - let's set our sci-fi automatic as a
12:01 - child object of that so now let's focus
12:05 - on this and let's reset the transform
12:07 - component so now we can see that this is
12:10 - set to zero zero zero and zero zero zero
12:12 - on both the position and the rotation
12:14 - and the weapon hold you here is offset
12:18 - in some kind of way that enables us to
12:22 - do that so now we can select our sci-fi
12:24 - automatic and we can add a simple little
12:26 - animation to this so let's go on to
12:28 - animation and let's hit and you can see
12:31 - right now that this is actually relative
12:33 - to not our sci-fi automatic but to
12:37 - another animation component that we have
12:40 - in here and you can see we might be able
12:42 - to see my cat kind of going crazy with
12:44 - some wires here on the desk so I'm just
12:47 - gonna put him down on the ground
12:49 - so um you can see that this is currently
12:52 - on using our animator that sits on the
12:56 - player himself so let's go under a
12:57 - sci-fi automatic and let's create a
12:59 - separate animator here so let's go
13:01 - animator create one there let's also
13:03 - create a animated controller so we'll
13:06 - have to go in here and I've already
13:08 - created a folder here called animation
13:10 - and one called weapons undo that you can
13:13 - just go ahead and create those folders
13:14 - by right-clicking create folder let's
13:17 - create now an animator controller here
13:19 - and this is just going to be well
13:21 - now we can call it our sci-fi automatic
13:24 - but we might just have the or use the
13:27 - same animations for all of our different
13:29 - weapons
13:29 - we'll see it depends on what weapons we
13:32 - decide to add some some weapons might be
13:34 - really similar and some might need
13:36 - separate animation but for now let's
13:38 - just call it the sci-fi automatic and
13:40 - you can see now that if we reference
13:43 - this if we reference this here dragon
13:47 - our sci-fi automatic there you can see
13:51 - that we can create some new animations
13:53 - to begin animating sci-fi automatic
13:54 - create an animation clip so we're gonna
13:56 - do that
13:57 - so let's hit create and let's go on your
13:58 - animation weapons and it's called this
14:01 - one the idle animation and of course
14:03 - we'll have to create some kind of idle
14:05 - and this can be really really simple you
14:07 - can just leave it in here just add some
14:10 - keyframes for the position just like
14:14 - this and you might want to add some for
14:16 - the rotation as well there you go and
14:19 - you can just delete these so we only
14:21 - have our base keyframes so our position
14:23 - is at zero and our rotation is at zero
14:26 - and you can definitely just leave that
14:27 - in here but what I kind of wanted to try
14:29 - is just animating this idle a tiny tiny
14:33 - bit let's just try moving forwards let's
14:36 - say a pretty big amount let's say 1.5
14:41 - and then dragging it up a tiny bit to
14:45 - something like 0.05 is going to be fine
14:50 - I think and then going back to the
14:54 - animation or to the keyframe that we
14:56 - have before it so let's put that at four
14:58 - let's right-click or not at four at
15:01 - three I've messed something up here so
15:05 - actually let's put this at two and this
15:10 - at four let's try that let's right click
15:13 - and hit flat and let's try and play this
15:16 - so that's that might be a bit too slow
15:20 - or it might be really nice it depends on
15:23 - your game it just adds this kind of
15:24 - subtle breathing and you might be
15:26 - thinking well we're playing as a robot
15:28 - does you really need to breathe I know
15:30 - he does definitely not you can just
15:32 - leave this out I just wanted to try it
15:34 - in here
15:35 - so now let's hit create new clip and
15:38 - create a reload animation as well so
15:40 - let's call this one reload and this of
15:42 - course needs to be a bit fancier and
15:44 - when I say fancy
15:46 - I mean ridiculously simple but you can
15:48 - create these animations inside of a
15:50 - blender or Maya or 3ds Max and you can
15:54 - import them in here or you could export
15:56 - your gun to be sort of modular split
15:58 - into parts and really do a nice
16:00 - animation inside of unity that's totally
16:02 - up to you I'm just gonna do something
16:04 - really simple here for the sake of the
16:06 - video and then at a later point again I
16:08 - want to show you some really cool
16:09 - weapons that you can add to your game so
16:11 - for now let's just take this here and
16:14 - let's move it down and I'm actually want
16:18 - to move it down quite a bit and that's
16:22 - also tilted forwards
16:25 - let's tilde kinda to the side something
16:31 - like that something that very clearly
16:33 - says this weapon is currently not able
16:36 - to be used just kind of moving it out of
16:39 - the frame and you know there's notice
16:41 - that this looks super weird and that's
16:43 - because we're currently only viewing
16:44 - this from our default camera this camera
16:47 - right here but what we have is the
16:50 - weapon camera that when we're in the
16:52 - game displays the weapon with another
16:54 - kind of a foe we and which is positioned
16:56 - a bit differently so things are going to
16:58 - look much nicer but I actually think
17:00 - that is kind of all we need to do for a
17:02 - reload animation so let's go to reload
17:04 - here and what I want to do is not
17:07 - actually include the transition here I
17:09 - just want to remove the original
17:11 - keyframes and just move these to the
17:13 - very start of the animation and then
17:15 - we'll have the blending between the two
17:17 - animations occur from unities automatic
17:20 - blending in the Meccan em system so this
17:23 - is kind of just two different states
17:24 - that we're blending between and we don't
17:27 - have any kind of animation in here yeah
17:30 - so one thing that I might want to do of
17:32 - course is just maybe make this one
17:37 - second long so we'll just add the same
17:39 - keyframes here and we have this static
17:41 - thing going on and we can always change
17:43 - this if it doesn't look good so now that
17:45 - we have these two animations I just want
17:47 - to go and take our cipher
17:49 - maduk move it away from our player and
17:51 - hit apply because we've added some new
17:53 - components here
17:53 - let's now delete it and let's also
17:56 - delete all player what will then do is
17:59 - go into our animator and double-click on
18:01 - a sci-fi automatic and you can see that
18:03 - currently our idle animation will play
18:05 - by default that's totally fine
18:07 - then we want to go and make a transition
18:09 - from that onto our reload and let's also
18:12 - make a transition back again and another
18:15 - cat is joining in there we go so I'm
18:18 - turning into an old cat lady here it's
18:20 - not too good I think pretty much all my
18:22 - videos have a cat in them lately so um
18:25 - yeah so we want to transition to our
18:28 - reload animation whenever we reloading
18:30 - and in order to do this let's add a
18:32 - parameter up here and let's do a trigger
18:34 - so this is just an ability to uh or this
18:38 - is a parameter that you can edit inside
18:40 - of unity you can just say set trigger
18:42 - and then the name of the parameter and
18:44 - that means that the animation will play
18:46 - instantly and that the trigger here
18:49 - unlike a boolean will be set back as
18:51 - soon as the animation has started then
18:54 - we can also go up here and actually
18:56 - that's the only parameter we need so
18:58 - then we can find our animation from the
18:59 - idle to the reload and we can add a new
19:02 - condition which is going to be you can
19:04 - see here the reload some once that's
19:05 - triggered it's going to switch from the
19:08 - idle to the reload and we don't want
19:10 - this to have any exit time we want to be
19:12 - able to do this immediately then on our
19:15 - way back we don't want any condition so
19:17 - if nothing has changed we just want to
19:20 - play the reload animation and then
19:22 - transitions back to the idle so um yeah
19:25 - what we can do then is um animate this
19:28 - inside of our script so we just have to
19:31 - trigger these animations now all we need
19:33 - to edit is this parameter but let's just
19:36 - see if this is working inside of the
19:37 - game first so let's find our lobby and
19:40 - it's a play and let's create some kind
19:43 - of game in here and what I'll do is just
19:46 - hit escape here and you can see that our
19:48 - idle animation is currently playing and
19:51 - I actually really like it in here
19:53 - I just adds a tiny bit of animation feel
19:57 - on to the player making everything look
20:00 - a bit less static but I mean some games
20:02 - prefer just having the weapons really
20:05 - really fixed counter-strike is an
20:08 - example of a game which has almost no
20:11 - weapon sway it has a bit of weapon sway
20:13 - but mostly when you're walking so yeah
20:17 - and you can of course add different
20:19 - animations here you can add a walk
20:20 - animation if that's something you wanted
20:22 - to do using the exact same system now
20:25 - I've opened up a world of possibilities
20:27 - for you hopefully and you can just go
20:30 - crazy with the kind of stuff so um yeah
20:33 - what I want to do is just select our
20:34 - player select a camera or weapon holder
20:36 - and our sci-fi automatic and we can now
20:39 - see in here on animator and if we switch
20:41 - this over to fill the inspector instead
20:44 - and move things over if I now hit reload
20:46 - it's going to play that animation and we
20:49 - can go into our game view and see what
20:50 - that looks like so a very very simple
20:53 - reload animation here but it just works
20:57 - so that's really cool so let's now do
21:00 - this through a script instead of
21:02 - manually through the editor so all we
21:04 - need to do is go into our visual studio
21:06 - into visual studio into our weapon
21:09 - manager script and we need to actually
21:12 - call this on not only the local client
21:14 - but on all clients and so we need to go
21:16 - through first a command which is called
21:19 - on the server this server will then call
21:21 - an RPC on all of the different clients
21:24 - so we'll have a command here which is
21:27 - going to be a command or a void command
21:32 - reload let's call this on reload so we
21:36 - can have all kinds of different stuff
21:37 - happening here whenever we're reloading
21:39 - because this is not actually taking care
21:41 - of any reloading we do that locally we
21:43 - just want stuff mainly with graphics to
21:46 - happen when we reload and we just want
21:49 - to call and now if you see here so
21:51 - that's two RPC on reload call that and
21:58 - then we mark this here as a client RPC
22:01 - and it's to avoid RPC on reload there we
22:10 - go and then we can add some
22:10 - functionality in here we also want to
22:12 - make sure to call this so this is going
22:15 - to happen
22:16 - right after we begin reloading and yeah
22:22 - so in here what we can then do is get
22:24 - the animator component which sits on a
22:28 - current graphics object and their
22:30 - current graphics is the weapon object
22:32 - with all of our graphics so we do
22:34 - current graphics that get component of
22:36 - type animator animator and we might want
22:40 - to check if this is no so let's store it
22:42 - in a temporary variable our animator
22:44 - here let's store this in something
22:47 - called annum and let's just say that if
22:50 - annum it's not equal to null well then
22:53 - we want to play some animation so let's
22:54 - do Adam dot set trigger and the trigger
22:57 - will be called it reload so that should
23:01 - handle everything for us and we should
23:03 - basically now be able to test this in
23:06 - the game so let's just begin by testing
23:08 - this on the local client here and then
23:11 - let's do a build right after if things
23:13 - aren't working to test it on the other
23:15 - clients as well so that's it create room
23:17 - here let's hold down the trigger and
23:19 - once we reached 0 it's gonna reload and
23:22 - it's gonna pop back in awesome that is
23:24 - working so smoothly that's also just
23:27 - before we test this on the on other
23:30 - clients by making a build let's also add
23:34 - the ability to force a reload so let's
23:37 - just go into our player shoot here and
23:39 - we can maybe add this into our update
23:43 - here so you can see we don't want to be
23:46 - able to do this if we're past and if
23:50 - we're not well that is true and that is
23:54 - true so we can maybe just add this
23:56 - before the actual shooting takes place I
23:59 - think that should be fine let's just do
24:04 - that so we're just gonna go in here and
24:06 - say if our current actually just if
24:10 - input get key down and the key that we
24:14 - want to check for here is key code key
24:18 - code dot our and we can just say reload
24:24 - so we can do current weapon dot
24:28 - not current weapon weapon manager dot
24:31 - reload and one thing you might want to
24:36 - do here is just set the bullets equal to
24:40 - zero temporarily because now we're
24:41 - reloading and in case the player is
24:44 - shooting we don't want that to go
24:46 - through you could also expose the
24:48 - variable here this arm is reloading we
24:51 - could just make this public and that
24:53 - will allow us to use that variable
24:55 - instead which is probably more stable so
24:58 - let's just go in here and say well we
25:00 - want to reload here and then we want to
25:02 - return and we only want to shoot in case
25:08 - we're not reloading so we're just going
25:10 - to go in here and say if we're not the
25:12 - local player and we're not located
25:15 - reloading so and weapon manager dot is
25:18 - reloading is false there we go so that
25:24 - should make sure that we don't shoot
25:25 - when we force a reload and everything
25:28 - else seems pretty good one thing we can
25:30 - do in here is maybe just check if our
25:32 - magazine is already full because if it
25:35 - is it's kind of weird to do a reload
25:37 - anyway so let's just say if we get this
25:40 - key down actually let's wrap this in a
25:42 - separate if statement so let's say if
25:45 - current weapon dot bullets or less than
25:50 - our chrome weapon dot max bullets so if
25:54 - we have shot and use some bullets in
25:57 - some way then we want to be able to call
26:00 - this stuff in here awesome and instead
26:03 - of using in put that kit key down key
26:05 - code R we could use the default or the
26:08 - building unity our input system so let's
26:11 - go project settings input and let's see
26:14 - what we have here if there's already a
26:16 - reload in here it might be that's
26:18 - actually not but that's fine we can make
26:21 - one ourselves so let's just duplicate
26:24 - this array element and instead of fire
26:26 - now it's going to be reload and it's
26:30 - going to take in as a positive button
26:32 - it's going to take in actually this is
26:35 - currently set up to use this is actually
26:40 - fine I
26:41 - this is all fine good isn't it I think
26:46 - it is yeah this is fine
26:48 - so our positive button here is going to
26:50 - be the R button and I believe you can
26:52 - just do that and let's figure out if you
26:54 - can I always get confused with unity is
26:56 - our input system let's say now input dot
26:59 - get button-down and then we use the
27:04 - reload reload button and that should do
27:09 - the trick
27:10 - so now we can close that down let's go
27:12 - in here and hit play let's create a new
27:15 - room test and nothing should happen now
27:19 - when I press R if I fire a bullet and
27:21 - press R it reloads and it's back up
27:25 - awesome so one thing that you might want
27:28 - to do is display this on the UI in some
27:30 - way I'll go ahead and hit build here
27:32 - while I'm talking and we'll definitely I
27:34 - hope at least to do that in a video to
27:36 - come if it's something that you really
27:38 - want to see let me know and I'll
27:39 - prioritize it I also want to display our
27:41 - Hills at some point so it could be a
27:43 - good kind of video to do some UI work
27:46 - displaying the hills and displaying the
27:49 - bullets and maybe also some cures as to
27:51 - what which buttons does what yeah I
27:56 - think it would be good to work a bit on
27:58 - the UI so let's now host the game here
28:00 - let's hit play again just call this test
28:04 - let's join it over here and of course
28:06 - this is going to take a few seconds but
28:08 - that is fine because I believe that this
28:11 - is going to work so now you can see if I
28:13 - jump down here and hit reload it just
28:18 - reloads and it works on all of the
28:20 - different clients it works as well if I
28:22 - run out of bullets and we can see the
28:24 - same thing happening here act except
28:26 - that is kind of hard to see so let's
28:28 - just move over unity here and let's run
28:32 - them in parallel and I will have to
28:35 - focus in on the guy there and you can
28:38 - see now that when I reload it works
28:40 - there as well awesome
28:44 - so that was pretty much all that I
28:45 - wanted to show for this video I hope you
28:47 - enjoyed it let me know if you want to
28:49 - see some UI work next and if you want to
28:52 - see some weapon switching I definitely
28:54 - wanted
28:54 - so thanks for watching and I will see
28:56 - you in the next video thanks to all of
28:58 - the awesome patreon supporters who
28:59 - donated in October and especially thanks
29:01 - to Sultan L should've Facebook mera Phi
29:03 - and James Calhoun become a supporter at
29:05 - patreon.com slash breakfast