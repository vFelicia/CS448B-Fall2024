00:00 - thanks for tuning in at
00:02 - braies hello everyone and welcome to
00:04 - this video on creating a tower defense
00:06 - game in unity today we are going to be
00:07 - fading between scenes something a lot of
00:10 - you guys have been requesting me to do
00:12 - and so finally we're going to do it so
00:14 - let's just jump right into Unity here
00:16 - and I basically just want to create
00:18 - start by creating some very very simple
00:20 - UI that we can uh animate on and off
00:24 - whenever we want to fade so let's just
00:26 - go in here and right click go under UI
00:29 - and select canvas let's drag this to the
00:32 - top of our level and we already have a
00:34 - lot of different canvases in here but
00:36 - it's going to make it a lot easier if we
00:38 - just have this sit on a separate one
00:40 - let's right click on this canvas go UI
00:42 - and select image and basically what I
00:45 - want to do is just stretch this image to
00:47 - fit the entire screen so we'll go over
00:49 - here we'll hold on down alts and we'll
00:51 - click in the bottom right corner to make
00:54 - sure it will always stretch to fit the
00:55 - screen so this is our source image and
00:58 - this is basically what will'll be
01:00 - animating on and off in order to create
01:02 - this fading behavior in our case I want
01:05 - this to be black so I'll just set the
01:07 - color to Black here and I'll set the
01:09 - alpha to zero but what you can do is
01:12 - choose any kind of color and you can
01:14 - even go in here and specify an image
01:16 - preferably something that fits the
01:18 - entire screen if we go in here and
01:19 - select our laser Beamer that looks kind
01:21 - of weird but we could essentially
01:23 - animate that on and off in case you want
01:25 - to create kind of a loading graphic but
01:27 - in our case again we'll just go with
01:29 - this standard Fade to Black so what
01:32 - we'll do now is go to our canvas and
01:34 - remove the graphic raycaster this will
01:37 - just make sure that whenever we play the
01:38 - game and try and select other UI
01:40 - elements it will not block our Rays so
01:43 - that we actually still able to interact
01:45 - with UI that would just be really
01:47 - annoying that if some invisible image
01:49 - was blocking our ability to interact
01:51 - with the UI um and yeah everything else
01:55 - looks pretty good one thing I will do is
01:57 - just rename this to something like um
02:00 - maybe just black actually or fade image
02:03 - or whatever awesome so now let's go
02:06 - ahead and create a script that will
02:08 - control the alpha channel for our black
02:11 - image and we could just put this on the
02:13 - game master and that would definitely
02:14 - make sense but I want to go ahead and
02:16 - create it uh on a separate object so
02:19 - that we can turn this object into a
02:20 - prefab that we can just drag into any
02:22 - scene that we want to have fading in so
02:25 - let's just uh create an empty object
02:27 - reset the transform and let's name this
02:30 - something like
02:32 - um scene fader let's also add a
02:36 - component called scene fader of type c
02:38 - sh we're can then drag this object to
02:41 - the top here and drag our canvas as a
02:44 - child of that scene fader object now
02:47 - let's double click to uh on the scene
02:49 - fader to open it up in visual studio and
02:52 - let's have a look at actually scripting
02:54 - this out so the base of what we're going
02:57 - to be doing today is actually fairly
02:59 - simple I mean we are just going to
03:00 - animate a single number which is the
03:02 - alpha channel on our image over time but
03:07 - because we are dealing with kind of
03:08 - doing things uh after a certain amount
03:12 - of seconds say fading out and then
03:13 - loading in a new scene and having those
03:15 - kind of timings in there it's much
03:18 - easier if you use co-routines and
03:20 - cortines are a bit weird uh syntax wise
03:24 - so just stick with me here and try and
03:26 - absorb everything you can and some
03:28 - things remember you just have to loar by
03:30 - doing and try and uh get it in there and
03:32 - see if it works and then you can always
03:35 - uh get caught up on how everything is
03:38 - actually working behind the scenes at a
03:39 - later point so up here we're going to be
03:42 - using a lot of Nam space of course we
03:44 - are going to be using Unity engine we're
03:46 - also going to be using system.
03:47 - collections for allowing us to do Coes
03:50 - the iron numerator stuff we'll also be
03:53 - using Unity
03:54 - engine. UI because we want a reference
03:57 - to our image and unity engine do scene
04:01 - management because we want to be able to
04:03 - change scenes so the base of what we
04:06 - want here is is just a reference to our
04:08 - image so let's create a public uh
04:10 - variable of Type image and let's call
04:13 - this one just image let's just save this
04:16 - right away and jump into unity and
04:17 - reference it so let's just select our
04:19 - scene fader and let's find our black
04:21 - image and drag it into this slot this
04:24 - way we won't forget we'll also want some
04:27 - kind of function that will uh fade in
04:30 - and another one for fading out and we
04:33 - want these to be of type I enumerator so
04:36 - instead of writing void here we write I
04:39 - enumerator which is a scary word and
04:41 - then we write something like fade in and
04:45 - everything else is just like a normal
04:47 - function then what we do is we uh think
04:51 - a bit about what do we actually want to
04:53 - happen well when we fade in that means
04:56 - we want to go from black to seeing our
04:58 - scene and means that we'll have to
05:01 - animate our image from being having an
05:03 - alpha of one and then slowly down to
05:07 - zero which means that it slowly
05:09 - disappears and underneath our scene is
05:11 - revealed and so it's fading in so when
05:14 - we fade in we actually want to make a
05:17 - number smaller and the way that we do
05:20 - this is by first having an idea of time
05:23 - so let's create a v variable here of
05:26 - type float which we call T and we set
05:29 - that equal to we can set it equal to Zer
05:32 - by default or we could set it equal to 1
05:34 - because we want to animate from 1 to
05:36 - zero so let's just do that and um then
05:40 - we say while
05:42 - T is greater than
05:46 - Zer then we want to do something so we
05:48 - want to keep on animating until our T
05:51 - value here our time value reaches zero
05:55 - and so every time we actually go through
05:58 - this we want to decrease our time value
06:00 - so we'll do T minus equals time. Delta
06:04 - time and right now you might think well
06:06 - why are we using time. Delta time when
06:08 - we're not inside of the update method
06:10 - and that's a totally valid question to
06:12 - ask because um if we just looked at this
06:15 - like a normal function we would think
06:17 - that this would T would just decrease on
06:20 - in like a single frame and we wouldn't
06:22 - notice a thing but this is the power of
06:25 - using an i numerator we can go in here
06:28 - and we can control exact
06:30 - when we wanted to actually skip a frame
06:33 - or wait a frame or wait a certain amount
06:35 - of seconds and that's what we'll do so
06:37 - every time we decrease our T Val
06:40 - variable we also want to go in here and
06:42 - say yield return zero and what yield
06:46 - return zero means is basically just skip
06:49 - to the next frame so just wait a frame
06:52 - and then continue so basically what we
06:54 - have here now is a function that when we
06:57 - call it creates a variable called T and
07:00 - set it sets it equal to the value one
07:03 - then we say that while T is larger than
07:06 - zero with which it definitely is in the
07:08 - beginning we want to decrease it by a
07:11 - tiny bit of time and then we want to
07:13 - wait until the next frame and it's still
07:16 - not less than or it's still bigger than
07:18 - zero so we want to decrease it again
07:20 - wait a single frame and we keep on going
07:23 - until it be to zero and then we go then
07:26 - we get down here okay so we we have this
07:30 - Loop that will animate slowly over time
07:33 - um in the uh at the same rate as our
07:36 - update Loop would um until it reaches a
07:38 - certain point at which point we can then
07:41 - well say load is seen or do something
07:45 - else but in our case we're fading in so
07:47 - we don't want to load anything basically
07:49 - we don't want anything to happen here so
07:52 - um yeah that's awesome but we are
07:54 - displaying our T value anywhere what we
07:56 - want to do is of course have this be
07:59 - displayed on the alpha Channel and we
08:01 - could very easily just go in here and
08:03 - say that
08:04 - image. color. Alpha should be equal to r
08:09 - t value and um actually we can't do that
08:13 - directly because we can't modify Alpha
08:15 - on its own we can only modify the entire
08:18 - color which means that we have to input
08:20 - both red green blue and the alpha at
08:22 - once so what we can do instead is we can
08:25 - create a new
08:26 - color and we can give it a value of
08:30 - 0 0 0 if you want it to be black like me
08:34 - and then U I'm not black but I want it
08:36 - to be black that was a weird sentence
08:38 - and we can continue so uh and then we
08:40 - can input our Alpha here which is going
08:43 - to be our value T so in this case it's
08:45 - going to just animate from 0 to 1 over 1
08:49 - second so uh and you could of course
08:51 - multiply a speed onto this if you wanted
08:53 - to we could just go in here and decrease
08:56 - with time. Delta time multiply with some
08:58 - speed value that could be one if you
09:00 - want to it to be um from 0 to 1 in 1
09:03 - second two if you want it to be from 0
09:05 - to 1 in a half a second or 0.5 if you
09:09 - want there to go 2 seconds so you can of
09:11 - course add that in there but I'm going
09:13 - to show you something much cooler so
09:15 - this is of course going to work except
09:17 - of course we have to call the function
09:19 - so let's now create a start method so as
09:23 - soon as we start the game we want to
09:25 - call this fade in function and remember
09:27 - again when we have to do with corot team
09:29 - we of course don't just call the
09:31 - function that would be way too easy what
09:34 - we do instead is we go start Co routine
09:37 - and then we input the function into that
09:40 - start cotin method so that's how we call
09:43 - a cotin uh instead of an ordinary
09:46 - function so uh let's save that and we
09:49 - should see now that if we just pause the
09:52 - game hit play and then um and you can
09:55 - see something is wrong with the way
09:57 - we're drawing things here we'll fix that
09:58 - in just moment but you can see here that
10:01 - if I now uh unpause it it's going to
10:04 - animate slowly unfade in so that's
10:08 - awesome so let me just fix that small uh
10:12 - error there and uh that is because I
10:15 - messed up the sword order for some
10:17 - reason did I change it on something else
10:20 - I have no idea what I did maybe it just
10:23 - didn't save so let's just go in here and
10:25 - bump up the sword order there we go and
10:28 - now you should see my point that we are
10:30 - able to yeah it influences all UI
10:33 - elements so we already have fading in
10:36 - but one thing that we could do that's a
10:38 - lot cooler is give ourselves ultimate
10:41 - control over how the fade in occurs
10:44 - because what a lot of movies and also
10:46 - games do is they don't have a linear Fad
10:50 - in they have kind of a curve with
10:53 - different kind of properties to it they
10:56 - might have like a a positive swing on
10:58 - the Curve they might have a negative
11:00 - swing on the curve I'm just going to
11:02 - show you what you can do with this stuff
11:04 - and unity has a really really cool way
11:07 - of easily implementing these kind of
11:10 - Curves it's called the animation curve
11:12 - so let's just create a new public
11:14 - animation curve here and let's call this
11:18 - our fade curve or maybe just curve we
11:22 - can save that and we can just head into
11:24 - unity and see what that looks like and
11:27 - you might have seen this before when it
11:29 - com to doing animation so this gives us
11:31 - this curve and they have some presets
11:33 - here so you can see the linear one would
11:36 - be the exact same as we just had if we
11:38 - use this it's just going to slowly go
11:41 - linearly from 0 to one we could also use
11:44 - this one which gives it a kind of a
11:46 - negative curve here you can see that it
11:48 - slowly increases and then it goes faster
11:51 - and faster we can also use this one
11:53 - where it very quickly increases and then
11:55 - it kind of slows down until the very end
11:59 - a lot of movies actually use this some
12:02 - use this and of course some use linear
12:04 - transitions or you could go completely
12:06 - crazy and make your own Curves in here
12:09 - which I'm going to show you how it looks
12:11 - in a second this this will actually kind
12:14 - of fade it in and then faded out and
12:17 - then faded back in so let's use this
12:21 - curve so um basically in order to apply
12:24 - the curve what we do is we instead of
12:27 - just inputting our TV value here we
12:30 - apply an extra step so let's create a
12:32 - float a for the alpha value and we set
12:35 - that equal to and then we use the T
12:38 - value here the time value as the input
12:41 - for our curve so basically this down
12:43 - here will be our T value so say our T
12:45 - value is 0.3 in our case the curve would
12:49 - give us a value of about
12:51 - 0.1 if it was 0.6 it would give us a
12:54 - value of around um I believe that's
12:57 - something like 0.35
12:59 - and and you get the idea so basically
13:02 - what we'll do is just go in here and say
13:04 - that we want uh a to be equal to curve.
13:08 - evaluate and then we give it the T
13:12 - time awesome so in our case of course
13:15 - because we're going from 1 to zero it's
13:18 - going to animate from the top here and
13:20 - then all the way down so that would look
13:23 - something like
13:25 - this it looks really nice and just to
13:28 - show you that this is actually different
13:30 - than before let me just try to give you
13:33 - a really weird looking curve and just
13:36 - just to show you and you wouldn't
13:38 - probably have this in your game what you
13:40 - can actually do with this so let me just
13:42 - whoops let me show you what that looks
13:44 - like so say play here and you can ah
13:48 - that wasn't too apparent let's try that
13:51 - one more time I believe it should work
13:55 - now so let's H play here and oh I know
13:58 - why we need to input the a here awesome
14:01 - so now we have uh we should have it
14:04 - actually working of course we need to
14:05 - input the alpha and not the T so now you
14:08 - should see this crazy curve working so
14:11 - here and you can see it fades back so we
14:14 - can actually totally control how the
14:16 - fading
14:18 - occurs I just thought that was a really
14:21 - really neat
14:22 - detail awesome so basically what we need
14:26 - to do now is just create a um
14:29 - another version of this function that
14:31 - Fades out and then we need to of course
14:34 - actually play these functions at
14:36 - appropriate times so let's just
14:39 - duplicate this entire method and then uh
14:42 - let's paste it down here and we'll call
14:43 - this one Fade Out we'll have our T start
14:47 - at zero and we'll have it animate until
14:50 - it's no longer less than one and instead
14:53 - of decreasing it every time every frame
14:55 - we want to increase it so now we need to
14:57 - of course call this method and instead
15:00 - of just calling it directly from all
15:01 - these scripts let's create kind of a hel
15:04 - method that's easier to call than a
15:05 - corot so let's just create a public void
15:08 - up here public void and let's call this
15:12 - something like fade 2 and we also want
15:15 - to be able to specify what scene we
15:17 - wanted to actually Fade to I mean uh
15:20 - currently we're just fading to Black and
15:22 - fading back in but we also want to
15:24 - actually change scenes so let's just
15:27 - specify as a string here the um scene
15:31 - that we should transition to and what we
15:33 - do then is just call fade out as a
15:36 - cortin so start
15:38 - coroutine start
15:40 - cotin and uh te and the cotin we want to
15:44 - start is Fade Out and of course we need
15:47 - to pass this scene onto our Fade Out
15:49 - co-routine so what we'll do is just add
15:52 - this as a parameter down here as well so
15:54 - string scene and we'll pass this scene
15:58 - onto there so it goes down here and we
16:01 - can use it at the very bottom so when
16:03 - we're done fading we faded to Black and
16:05 - we're done with our animation we reach
16:07 - this part of our code and then we can go
16:10 - scene manager. load scene and we can
16:13 - just input the scene that we just
16:17 - specified awesome so that should pretty
16:19 - much be all we need to do in code so
16:22 - what we can do now is of course call
16:24 - this because well we do need to call it
16:27 - from somewhere but um what I want to do
16:29 - is just package up the scene fader
16:32 - object into a prefabs so let's just
16:34 - expand our prefabs folder let's drag it
16:36 - in there and now we should be able to
16:39 - easily add it to our main menu as well
16:41 - so let's jump into our main menu let's
16:43 - drag our scene fader back in and now
16:46 - when we make a change in one place it's
16:47 - very easy to update uh in all of the
16:50 - other places by simply hitting apply so
16:53 - let me just demonstrate how this works
16:55 - let's say use our main menu so inside of
16:58 - our main menu we currently have a play
17:00 - button and if we press this button it
17:02 - calls a load scene on the scene manager
17:05 - with the level to load in our case we
17:08 - want a reference to a scene fader
17:09 - instead and you could very easily just
17:11 - go in here and say find object of type
17:14 - scene fader and then you could do
17:16 - something like do Fade 2 and input arm
17:20 - level to load and this would work just
17:23 - fine but of course find object of type
17:26 - does require a bit of computation so
17:28 - what we'll instead is just add a direct
17:31 - reference to our scene fader which we'll
17:33 - call scene fader and then instead of
17:36 - finding it we'll simply use that
17:38 - reference so C fader do Fade 2 level to
17:41 - load and then of course we just need to
17:43 - remember that we have to drag in our
17:46 - scene fader into the slot in order for
17:48 - that to work but that should actually
17:50 - mean that now when we play it fades in
17:53 - we play it fades out and it fades into
17:55 - the next scene and it looks awesome so
17:58 - all we need need to really do now is
18:00 - just add this to our retry button as
18:02 - well you can see it always always fades
18:04 - in but we also have to make it fade out
18:06 - to our menu we haven't really done that
18:08 - transition yet and to our game over
18:10 - screen so let's just very quickly go
18:13 - through it and in case you on using this
18:15 - for the Tower Defense course you can
18:18 - just go and add it to the places that
18:19 - you would want it to fade in your game
18:22 - so let's now go through our main level
18:24 - here and let's find first of all our
18:27 - overlay canvas where we have our pause
18:29 - menu and um our pause menu of course
18:32 - uses a script on the game master called
18:34 - pause menu let's just double click this
18:36 - so we have a function called retry where
18:39 - you can see we currently use our scene
18:41 - manager to reload our currently active
18:43 - scene well instead let's first off
18:46 - create let's create a public um scene
18:50 - fader let's just call this scene fader
18:53 - much in the same way we did before and
18:55 - then we just go scene fader do Fade to
18:59 - and we input our scene which is going to
19:02 - be the currently active scene so in this
19:04 - case we use scene manager. getet active
19:06 - scene. name and we don't use build index
19:09 - because we've only implemented it with
19:11 - the name but you could just as easily
19:13 - create a version of the function that
19:15 - use the build index
19:17 - instead and of course we also want to
19:19 - transition to our menu so here we just
19:21 - want to go scene fader do Fade 2 and
19:25 - then we input something like main menu
19:27 - but instead of coding this in it's
19:29 - always better to create a variable for
19:31 - it so we'll do that as well so we'll
19:33 - create a public string um main or
19:37 - something like menu scene name and we'll
19:41 - set that equal to main menu by default
19:44 - and we'll put that down there instead so
19:47 - save that as well and then inside of our
19:50 - uh main menu that is fine at last we
19:53 - have our game over screen which is right
19:58 - here
19:59 - and we have a few things that we want to
20:00 - edit about this as well so let's open
20:02 - our game over menu and just before I
20:05 - forget under our pass menu we also want
20:07 - to
20:08 - toggle we also want to toggle our pass
20:11 - menu if we go to the main menu or else
20:14 - um the game is still going to be hung up
20:15 - and it's going to look weird with the
20:17 - fading and all that we always want to
20:19 - disable that so just make sure to call
20:20 - tle on there as well but inside of our
20:23 - game over we should now be able to uh do
20:25 - the same to our retry so we'll go up
20:27 - here create a reference pop
20:29 - um f scene fader scene fader and we'll
20:34 - go down here we'll say scene fader do
20:38 - fate 2 it's the exact same pie piece of
20:40 - code we want to uh um we want to fade to
20:44 - the same existing scene so get active
20:47 - scene. name there we go you can just
20:50 - copy this code even and uh inside of our
20:53 - menu we go scene fader do Fade 2 and
20:56 - then we want some variable for our main
20:58 - menu again you can just hardcode it or
21:00 - you can create a public string called
21:03 - the menu scene name which we call main
21:06 - menu by default and then boom I believe
21:12 - we're done awesome so just save all of
21:14 - that it's just inserting this code a few
21:17 - places is uh a few places in order to
21:20 - get this to work and I believe now that
21:22 - things should actually be working so one
21:24 - thing I'll just very quickly do is take
21:27 - our enemy prefab here and just bump up
21:30 - the SP uh the start Speed so that we can
21:32 - quickly uh more quickly run through our
21:35 - level here so now when I hit uh escape
21:37 - and the pause menu comes up I hit retry
21:40 - we get a no reference of course we need
21:42 - to set all the references up inside of
21:44 - unity as well so let's go under overlay
21:46 - canvas let's find our game over menu we
21:49 - need to drag in our scene fader we need
21:51 - to do the same thing for our game master
21:53 - under the pause script we need to drag
21:55 - in our scene fader and again uh you
21:57 - won't get that problem if you use
21:59 - something like um uh game object. find
22:02 - or find object of type uh but this way
22:05 - is faster so if you just remember to do
22:07 - that on and are able to do that uh
22:10 - definitely do so it's just it's just
22:12 - better on the computer it's going to be
22:14 - your end user a lot more happy so now we
22:17 - can hit Escape retry Fades out fades in
22:20 - looks awesome we can hit menu Fades out
22:22 - fades in the menu hit play goes back to
22:25 - the original scene let's just try
22:28 - running out of time here as well or
22:29 - running out of lives so our guy goes
22:32 - through here completes the level and
22:34 - rerun out of lives it says game over and
22:36 - we can hit menu for example it's going
22:38 - to work just fine and the same thing
22:40 - with the retry button so that was
22:43 - basically all I wanted to show you for
22:45 - this video I'm just going to reset our
22:46 - enemy while I still remember to do so I
22:49 - hope you enjoyed this kind of um very
22:52 - specific uh UI fading thing uh I
22:55 - definitely think that uh using the
22:58 - curves here really give you a lot of
23:00 - control over exactly how you want stuff
23:02 - to uh happen and uh yeah I just thought
23:05 - it was a pretty cool fairly unexplored
23:07 - approach so uh yeah hope you enjoyed it
23:10 - thanks for watching and I will see you
23:11 - in the next video thanks to all the
23:13 - awesome Patron supporters who donated in
23:15 - October and a special thanks to Sultan
23:17 - elative faal marifi and James Kell Hound
23:20 - become a supporter at patreon.com Brees