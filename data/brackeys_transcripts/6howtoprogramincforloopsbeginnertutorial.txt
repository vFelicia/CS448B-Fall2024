00:00 - thanks for tuning in at brakus hello
00:04 - everyone welcome to video number six in
00:06 - the how to program in c-sharp course I'm
00:08 - really sorry that it's been so long
00:10 - since the last one but I've been really
00:12 - busy with some important projects so I
00:16 - haven't really had time to do that many
00:18 - videos but no but seriously cool stuff
00:21 - coming so in today's video what we're
00:24 - going to do is we're going to take a
00:26 - look at what is called four loops which
00:28 - will greatly expand on what we can do
00:31 - with our code so important lesson today
00:33 - and yeah let's just stick right into it
00:36 - if my voice sounds a little weird it's
00:37 - because I've just been sick and yeah so
00:40 - that might come through on the recording
00:42 - so as always I've opened up examen
00:45 - studio and if you have any questions
00:48 - throughout this video you can hit over
00:50 - to forum break is calm so if you find
00:53 - this code here to be a bit difficult to
00:56 - understand or whatever just head over
00:58 - there and many people including me are
01:01 - ready to answer your questions so first
01:05 - off I'm just going to answer the
01:06 - question that I had already challenged
01:09 - that I gave you in the last video which
01:12 - was to create this program where you
01:15 - need to multiply two numbers and then
01:18 - give you give the user responses based
01:22 - on just how well you did so first off we
01:25 - have different random messages for when
01:29 - the user answers correctly and then we
01:32 - have different messages for depending on
01:35 - how close he gets to answering correctly
01:37 - so let me just quickly walk you through
01:39 - this code this is not going to take too
01:41 - long so as always we are creating a
01:44 - random number generator and we are
01:46 - generating two random numbers then we
01:48 - are prompting the user to to write out
01:52 - the answer to this questions and we are
01:55 - collecting the answer in a int variable
01:59 - then we are checking if it's correct and
02:01 - if it is we are printing out some
02:03 - different responses based on another
02:06 - random number and if it's not correct we
02:10 - are taking the difference which are just
02:12 - called death
02:13 - starring it in an integer value and you
02:16 - can see that I simply take the answer
02:18 - and some tract subtract the correct
02:22 - answer so this is the user answer and
02:24 - this is of course the solution not one
02:26 - times num2 should hopefully give us the
02:29 - solution and then i'm wrapping this in a
02:32 - mat in a math dot absolute statement and
02:37 - what this does it simply converts
02:39 - everything inside these two parentheses
02:42 - which means everything in here it simply
02:45 - takes that and takes the absolute value
02:48 - of that meaning that if it's a negative
02:50 - number it's simply going to multiply it
02:53 - with minus one so this number will
02:55 - always be positive so now we have the
02:58 - absolute value which is our difference
03:01 - and we're saying that if it's simply
03:03 - equal to one we are going to write so
03:05 - cliffs if it's more or or less than or
03:10 - equal to 10 we're going to write you can
03:12 - do better than that or if it's more than
03:15 - ten we can then write you're not even
03:18 - close
03:19 - cool so now we can just go ahead and
03:21 - delete most of this code I'm simply
03:22 - going to keep the main function and all
03:25 - of the class and name space stuff and
03:28 - then the console that rekey now what I'm
03:31 - going to go ahead and do here is simply
03:33 - show you what a for loop can do so let's
03:37 - say that we want to print out on some
03:40 - numbers each on a separate line so let's
03:43 - say we want to print out the numbers one
03:45 - through ten on each on a separate line
03:49 - in the console so what we would do here
03:51 - is we would write four and then we will
03:54 - write int I equals one I is less than or
04:02 - equal to 10 I plus plus and then inside
04:09 - of the brackets that we are now going to
04:12 - make here and simply type after me right
04:14 - now in and I explain exactly what this
04:16 - means in the sack inside of these two
04:19 - brackets we're then going to write
04:21 - console dot write line
04:25 - and then we are simply going to give it
04:27 - I so if we go out and hit play right now
04:31 - you can see that it says one two three
04:34 - four five six seven eight nine ten so
04:36 - let me just explain you quickly why this
04:40 - is doing just the thing that it is so if
04:43 - for Lube is basically a way to iterate
04:46 - through to do something a certain number
04:50 - of times and we do this but first making
04:54 - a variable here we are calling it I and
04:56 - we are setting it equal to a starting
04:59 - number let's in this case we're setting
05:01 - it equal to one then we are saying that
05:04 - we want to do whatever is inside these
05:06 - brackets as long as this condition is
05:09 - met so as long as I is less than or
05:12 - equal to ten we want to execute this
05:15 - line here and then right here is what is
05:19 - called the increment or decrement stage
05:21 - and this is where we put in what we want
05:24 - to happen with I after the loop has gone
05:28 - through so after we've we've written out
05:32 - the line it it will then increment which
05:37 - means add on just one to the I here so
05:41 - this is basically the same as if we just
05:45 - leave that out and then down here whoops
05:48 - we still need the parent the semicolon
05:50 - there I'm pretty sure and then we just
05:53 - down here say I plus equals one that's
05:57 - exactly the same it's simply to make
05:59 - sure that I doesn't just stay one and it
06:02 - will never reach ten its to make sure
06:04 - that it's incremented so if we add one
06:08 - on to I every single time we go through
06:11 - the loop and then what we can do inside
06:14 - of the two brackets is we can then use I
06:16 - for different things so now we can just
06:19 - we have complete access to this I so in
06:22 - this case we're simply writing it out on
06:25 - a line so again with all that in mind we
06:28 - are creating a for loop which means that
06:30 - we can do an action a certain number of
06:32 - times we are creating a variable called
06:34 - I and setting it equal to one we're
06:36 - saying that we want this to run as long
06:38 - as
06:39 - I is not above ten and then we are
06:42 - simply increment an eye after each
06:45 - iteration so now let's hit play and
06:48 - again you can see that that is indeed
06:50 - what's happening we have one two three
06:52 - and it's just incrementing each time all
06:54 - the way through up to ten cool so let's
06:59 - say we wanted to do something more with
07:01 - this we could go ahead and set in AI
07:03 - equal to let's say zero and we can make
07:06 - this maybe run up to so let's say just I
07:11 - is less than and then a hundred this is
07:14 - another very common way to write for
07:17 - loops then instead of starting in I add
07:19 - one we started at zero and then we
07:24 - simply say that as long as I is less
07:26 - than 100 so this is going to print out
07:29 - again 100 but it's different numbers but
07:33 - it's going to start at zero and this is
07:36 - a very common way of thinking about for
07:38 - loops the way that we start at zero
07:40 - because that's what the computer often
07:44 - does and we're going to see that when we
07:46 - work with lists and arrays because then
07:49 - we're going to use for loops to access
07:51 - different parts of arrays so let's say
07:55 - we have a list of students we can use
07:58 - for loops to go through each student
08:00 - represented by an index which is here
08:03 - shortened by and we can access their
08:06 - information so you're going to see that
08:08 - in a later video so what I want you to
08:11 - do until next video is to create a for
08:15 - loop yourself that will print out all
08:17 - the even numbers and only the even
08:20 - numbers from 1 until 100 so in order to
08:26 - do this you're going to need a basic for
08:29 - loop and also you need to know how to
08:32 - determine whether or not a number is
08:35 - even or uneven and the way you do this
08:39 - programmatically is say if you have two
08:41 - numbers let's say two and two and you
08:46 - want to check if this one here is are
08:50 - even what we do is
08:53 - we use this percentage sign and this is
08:57 - a math operated just like - plus or
09:00 - division but what this percentage sign
09:04 - will do is it will return the remainder
09:07 - of a division so it's going to say two
09:10 - divided by two that's completely even to
09:14 - do so that's going to simply return zero
09:17 - so if this was not an even number let's
09:22 - say this was three this is not going to
09:26 - return this is not going to return zero
09:30 - so simply take the value that we are
09:34 - checking that's called this egg's and
09:35 - use the percentage sign which will
09:38 - return again the remainder of a division
09:40 - and they want the the number that we
09:42 - want to divide by is going to be two and
09:45 - then we can simply check if that is
09:48 - equal to two is equal to zero
09:51 - well then indeed the number is even so
09:55 - with that in mind try and see if you can
09:58 - go ahead and create this for loop or if
10:02 - not again head over to forum branches
10:05 - comm where I among many others are
10:08 - waiting to answer your questions so
10:11 - again I hope you enjoyed this video and
10:13 - I'll see you in the next one