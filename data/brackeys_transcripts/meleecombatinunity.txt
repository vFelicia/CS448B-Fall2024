00:00 - now we've done a lot of different videos
00:01 - on combat like shooting or strategy but
00:04 - one thing that we've never done is melee
00:06 - fighting so in this video we'll have a
00:08 - look at how to implement some solid
00:09 - sword combat in unity even of course
00:12 - adapt this to any kind of melee weapon
00:14 - and we'll be working in 2d but doing
00:16 - this in 3d should have the exact same
00:18 - steps so let's slice up some enemies but
00:22 - first this video is sponsored by North
00:23 - Vee PN Nord VPN has over 5,500 servers
00:27 - in over 60 countries and is one of the
00:29 - fastest and top VPNs out there while
00:32 - using a VPN you strongly increase your
00:34 - internet privacy secure your data while
00:36 - using public Wi-Fi and it protects you
00:38 - from hackers by using a double data
00:40 - encryption another great function of
00:41 - being able to access service all over
00:43 - the globe is that you can access content
00:45 - that might be restricted to certain
00:46 - areas no matter where you are in the
00:48 - world get 81 percent off at Nord VPN
00:50 - that comes as practice or used to code
00:52 - practice to get to gifts included four
00:54 - extra months with the three year plan
00:56 - and the nor past password manager app
00:59 - for free
00:59 - get started by simply clicking the link
01:01 - in the description also special thanks
01:03 - to infinity PPR for his support on
01:05 - patreon and just before we get started I
01:07 - want to mention that Andreas and I were
01:09 - on a podcast it's called duck tapes we
01:11 - had a lot of fun we talked about game
01:13 - dev stories from running the channel and
01:16 - a surprising amount of time was spent on
01:18 - random duck facts so check that out
01:25 - using the link in the description and
01:26 - let's fight
01:28 - so as you can see we have a very simple
01:31 - scene here with just a main camera a
01:33 - ground environment object a player as
01:36 - well as a bandit that is currently just
01:39 - standing around and if we play the game
01:41 - we can see that the player movement and
01:43 - animation has already been set up I did
01:46 - this following our videos on movement
01:48 - and animation so if you don't have that
01:49 - working already
01:50 - definitely check those out and those of
01:52 - course also show how to do jumping and
01:54 - crouching but I chose not to put that in
01:55 - here
01:56 - you also notice that the bandit is
01:58 - currently just playing an idle animation
02:00 - there's no logic on him yet the sprites
02:03 - that I'm using here are free on the
02:05 - asset store will of course have a link
02:07 - to them in the description the only
02:08 - thing that I'd recommend is that you go
02:10 - and find the sprites and change the
02:13 - pixels per unit to 32 since we're
02:15 - working with pixel art but you can of
02:17 - course use any kind of art that you'd
02:19 - like and I think that we are ready to
02:21 - start creating some player combat so
02:23 - let's go to our player object
02:24 - let's hit add component and let's create
02:27 - a player combat script let's set create
02:30 - an ADD and it's open it up in visual
02:32 - studio and we can just go ahead and get
02:34 - rid of the start method here we won't be
02:36 - using that and inside the update method
02:38 - let's go ahead and check for some input
02:40 - so we'll write an if statement and say
02:43 - if input dot get key down and the key
02:47 - that we want to check for is keycode dud
02:49 - space so I'm just going to use the
02:51 - spacebar to attack now remember the
02:54 - input system is currently being rebuilt
02:56 - this should work for a good while but if
02:58 - it's not definitely check out our video
03:00 - on the new input system it should be
03:02 - really easy to simply put that in here
03:04 - alright so whenever we press the
03:06 - spacebar we of course want to go ahead
03:08 - and perform an attack so let's create a
03:10 - separate function for this and call it
03:12 - in here let's just name it attack so
03:15 - we'll create the function down here void
03:17 - attack and in here we basically want to
03:20 - do three things we want to play and
03:23 - attack animation we want to detect all
03:27 - the enemies that are in range of the
03:29 - attack and then we want to apply damage
03:32 - to those enemies so let's go ahead and
03:35 - start with the very first one here which
03:37 - is plane and attack animation so to do
03:40 - this we need to first go into und and
03:41 - under our player
03:43 - of course have an animated component
03:45 - which has an animated controller
03:47 - responsible for choosing which
03:49 - animations to play when again this is
03:51 - all part of the animation video so if
03:52 - this is completely new to you check that
03:54 - out first but as you can see in here we
03:56 - have a very very simple setup we have a
03:59 - default idle animation and we can
04:01 - transition from that to run and back we
04:04 - of course want to add a whole new
04:05 - animation on top of this and attack
04:08 - animation so let's go ahead and find
04:10 - that - under bandits animations and I'm
04:13 - using the light guard as the player here
04:15 - some simply going to take the light
04:17 - guard on the score attack let's select
04:19 - this animation and rename it to player
04:21 - underscore attack and now we want to be
04:24 - able to attack no matter if we are
04:26 - currently playing the idle animation or
04:28 - the run animation in other words we want
04:30 - to be able to transition to the attack
04:32 - from any state so we'll just right-click
04:35 - on this any state note here hit make
04:37 - transition and click on the player
04:39 - attack node and if we then select this
04:41 - transition we can choose when and how we
04:43 - want to go to the attack animation of
04:45 - course we only want to do this if we
04:47 - actually trigger this transition and to
04:50 - do this through code we need to add a
04:52 - parameter that allows us to do that so
04:55 - if we go to the top left corner here
04:57 - under parameters and hit the plus sign
04:59 - we can add a trigger parameter let's
05:02 - call this attack and now on our
05:04 - transition here under conditions we can
05:06 - add a new condition and we want to
05:08 - change this from speed to attack so
05:11 - whenever the attack parameter is
05:13 - triggered we are going to transition
05:15 - from any state to play or attack really
05:18 - cool we also want to make sure that we
05:20 - don't have exit time enabled here and
05:22 - that under settings we set the
05:24 - transition duration to zero and this way
05:26 - the transition will happen instantly and
05:29 - that's actually all we need to do for
05:31 - the animation now inside of our script
05:33 - we just need a reference to this
05:35 - animator so that we can trigger our
05:36 - attack animation so at the very top here
05:39 - let's create a public animator component
05:41 - and let's just call it animator then
05:45 - under attack we can go ahead and call
05:47 - animator dot set trigger and then the
05:51 - name of our trigger which is attack and
05:53 - that's actually all we need to do if we
05:55 - now save this
05:56 - go into unity and select all player we
05:59 - can see that there's now a field for the
06:01 - animator let's just drag our animator in
06:04 - there let's hit play and of course we
06:06 - can move as normal but if we hit the
06:08 - spacebar we perform an attack animation
06:10 - you can also see that we're currently
06:12 - not transitioning back so it just stays
06:14 - in that animation to transition back all
06:17 - we need to do is go into our animator
06:18 - and just right click on a player attack
06:21 - and make a transition right back to
06:23 - player idle and we just want this
06:24 - transition to happen whenever a player
06:26 - attack has finished plane so if we click
06:29 - on this arrow here we don't need any
06:30 - conditions we just want to go straight
06:32 - there however we want to make sure that
06:34 - we have exit time enabled and we want to
06:37 - set that to 1 in order to wait the
06:39 - entire duration of the clip and after
06:41 - that we want the transition itself to be
06:43 - instant so we'll just set the transition
06:45 - duration to zero and as you can see
06:47 - right away our attack animation goes
06:49 - right back to idle when we finish
06:51 - attacking so the next thing that we need
06:53 - to do is of course detect all of the
06:56 - enemies that are in range of our attack
06:58 - to do this we need a few variables the
07:01 - first one is that we need to define an
07:03 - attack point because we don't just want
07:05 - to attack at the center of our sprite we
07:07 - want to attack somewhere out here in
07:09 - range of our sword to do that let's go
07:11 - ahead and create an empty object under
07:13 - the player let's call this the attack
07:16 - point and the cool thing is that we can
07:18 - now take this point here and move it to
07:21 - wherever we want to place the center of
07:23 - our attack so I'm just going to move it
07:24 - kind of outside the player by the sword
07:27 - here then inside of our script we can
07:29 - create a public transform and this is
07:32 - just going to reference that point so
07:34 - we'll call it attack point we also want
07:37 - a range for our attacks let's create a
07:38 - public float attack range and let's just
07:42 - default this to something like point 5
07:44 - and finally we need to define what
07:46 - objects are enemies and which are the
07:48 - player and other objects in our
07:50 - environment we'll do this using layers
07:52 - so we'll assign all enemies to some kind
07:54 - of enemy layer and then we can make sure
07:56 - that we only detect objects in that
07:58 - enemy layer using a layer mask so we'll
08:01 - create a public layer mask and call it
08:03 - enemy layers now I'm calling this layers
08:06 - because you can definitely have multiple
08:08 - enemy layers and just select all
08:09 - that's totally up to you so now inside
08:12 - of our tack method what we will do is we
08:14 - will go ahead and first of all use a
08:16 - function called physics 2d dot overlap
08:21 - circle all and basically what this
08:24 - function does is that it creates a
08:27 - circle from this point here with the
08:29 - radius that we specify and collects all
08:32 - objects that that circle hips now of
08:35 - course because I'm working in 2d I'm
08:36 - using physics 2d you could easily just
08:39 - change this to physics if you're working
08:41 - in 3d and change the overlap circle to
08:43 - overlap sphere it does the exact same
08:46 - thing now first of all this circle needs
08:48 - a center point so we'll give it our
08:50 - attack point dot position it also needs
08:53 - a radius so we'll give it our attack
08:55 - range and finally we can filter out
08:57 - certain layers so we'll give it our
08:59 - enemy layers awesome so now this circle
09:02 - is being created and it detects all
09:04 - these colliders and we just need to
09:06 - store the colliders so that we can go
09:08 - through them so let's create a Collider
09:10 - 2d array called hit enemies so this is
09:14 - going to store all the enemies that we
09:16 - hit inside of this variable here so now
09:19 - we know all the hit enemies but we still
09:21 - need to loop over them in order to
09:23 - damage them to do that we'll use a for
09:25 - each loop and we'll say for each
09:28 - Collider 2d and we'll call each one
09:30 - enemy in our hit enemies array for each
09:35 - of these enemies we want to go ahead and
09:38 - damage them of course in order to
09:40 - actually damage them we need to first
09:41 - give them some health and all that we'll
09:43 - do that in a sec for now let's just
09:44 - throw out a debug deadlock saying that
09:47 - we hit and then the enemy dot name so
09:51 - again all we're doing here is playing
09:52 - our attack animation recruiting a circle
09:54 - in front of our player to see if he hits
09:56 - anything we're gathering a list of all
09:58 - the enemies that we've had we loop over
10:00 - each enemy and print out their name and
10:02 - if we save this now and go into unity
10:05 - our code should actually be working
10:07 - however as you can see there's really no
10:10 - way for us to see this radius of our
10:13 - attack point and so we might have to do
10:15 - a bunch of adjustment until we find the
10:17 - right values for our attack range and
10:19 - place our attack point in the right
10:21 - place so let's just write a few lines of
10:23 - code
10:23 - that is going to display all this stuff
10:25 - in the editor to do that we create a new
10:27 - function called on draw a gizmo selected
10:31 - this function allows us to draw stuff in
10:33 - the editor whenever the object is
10:34 - selected and we just want to go ahead
10:36 - and draw so gizmos dot draw wire sphere
10:40 - and we'll draw this sphere with a center
10:42 - point of the attack point dot position
10:45 - and a radius of our attack range so just
10:49 - like we did with this overlap circle all
10:51 - only here we're just drawing a sphere so
10:53 - that we can visually see it in the
10:55 - editor and of course in case the attack
10:57 - point hasn't been assigned we just don't
10:59 - want to do this I will write if a tag
11:01 - point is equal to null well then we'll
11:04 - return out before anything happens this
11:07 - way we won't get any errors so if we
11:09 - save this now and go into unity you can
11:11 - see nothing happens right now because
11:12 - our attack point hasn't been assigned
11:14 - but as soon as we drag that in there we
11:17 - go we can see a gizmo now where our
11:20 - attack point is with our attack range
11:22 - and so we can start to adjust our attack
11:24 - to fit our character I'm going to
11:26 - decrease the attack range a tiny bit
11:27 - here and I think that looks pretty good
11:30 - we can also go ahead and assign enemy
11:32 - layers here to do that we first need to
11:34 - select our bandit and as you can see
11:35 - I've already created a layer for this if
11:37 - you don't have this layer you can simply
11:39 - click Add layer go in and type any layer
11:41 - that you'd like and then go back to the
11:44 - bandit and assign that layer and then
11:46 - inside of our player under enemy layers
11:48 - we simply need to check off that layer
11:50 - there we go and as I talked about you
11:52 - can of course have multiple layers here
11:54 - if you want alright let's go ahead and
11:56 - try and play test this so let's hit play
11:58 - and if we now move over to our bandit
12:00 - and use our attack we can see that it
12:02 - says we hid bandit awesome so now we of
12:06 - course need to start damaging our
12:08 - enemies and to do this we first need to
12:10 - give them some HP to do that we'll
12:13 - select our bandit and create a new
12:14 - component and we'll just call this enemy
12:17 - let's say create an ad and open it up
12:19 - I'm gonna get rid of the update method
12:21 - here and at the top I'm gonna create two
12:23 - variables a public int with our max
12:26 - health and we'll set this to hundred and
12:28 - a private int with our current health
12:31 - then inside of our start function we'll
12:34 - set our current health equal to our max
12:36 - hell
12:36 - and what we need here is a function that
12:38 - allows us to damage our enemy which can
12:40 - be called from another script and
12:42 - because we need to call this from inside
12:44 - of our player combat script we need to
12:46 - make sure to mark it as public so a
12:48 - create a public void take damage it's
12:51 - going to take in an amount of damage as
12:53 - an integer and all we need to do in here
12:55 - is simply subtract our current health
12:57 - with that amount of damage we can then
13:00 - play some kind of hurt animation we'll
13:03 - do that soon and then we want to check
13:05 - if our current health is less than or
13:07 - equal to zero well then we have died and
13:11 - so we need to call some kind of die
13:12 - function void die and in here we'll play
13:16 - some kind of Die animation as well as
13:19 - disable the enemy so that he doesn't do
13:23 - things even though he's dead and also
13:25 - let's just do a debug deadlock for now
13:27 - that says enemy died there we go and
13:31 - that's all we need to do for an enemy
13:32 - script right now we can then save that
13:34 - and go into our player combat instead
13:37 - and in here whenever we are attacking
13:39 - and we want to loop over all of our
13:42 - enemies instead of just displaying their
13:44 - name we're simply going to access them
13:46 - so enemy use a get component in order to
13:49 - access the enemy component on those
13:51 - enemies and then call the take damage
13:54 - function we just created and of course
13:56 - this takes in a damage amount we could
13:59 - just put it in here or we could go to
14:00 - the top and create a variable for that
14:02 - so that's clearly public int called
14:05 - attack damage and set it equal to
14:07 - something like 40 and I'm just going to
14:09 - restructure these a tiny bit by the way
14:12 - in order to move around lines like this
14:14 - I'm holding down alt and using arrow up
14:16 - and down it's a really handy shortcut
14:19 - and so we can put our attack damage in
14:21 - here and that should be it if we save
14:23 - that and go into unity we can select our
14:26 - bandit and if we go over here in the
14:28 - inspector we can change to debug mode
14:31 - and what this allows us to do is
14:33 - actually see private variables so we can
14:35 - see our current health here and as you
14:37 - can see when I hit play our current
14:39 - health snaps to our max health which is
14:41 - 100 if I then move over and attack once
14:44 - it goes down to 60 one more time it goes
14:47 - down to 20 and the last time it goes to
14:49 - minus 20 and in the
14:50 - console it says enemy died so now all we
14:53 - need to do is show the enemy being hit
14:55 - and dying using animations and to do
14:58 - that we'll first go back to normal mode
15:01 - in the inspectors that it isn't all
15:02 - crazy and we'll find the animated
15:05 - component here and as you can see I have
15:06 - another animator controller here called
15:08 - enemy and if we double click on that
15:10 - it's really simple it just has a default
15:13 - animation here that plays an idle
15:15 - animation not much to it now what we
15:18 - want to do is be able to go from any
15:20 - state into being hurt and then go from
15:24 - hurt in to dying so to do that let's
15:27 - drag in the two animations so this is
15:29 - the heavy guard I'm using here I'm gonna
15:32 - drag in both the heavy bandage hurt and
15:34 - heavy bandit death animations and let's
15:38 - first of all transition from any state
15:40 - to hurt I'm going to zoom in a bit here
15:42 - that's also transition from hurt to
15:45 - death
15:46 - or we can transition from hurt back to
15:48 - idle so that's kind of the way that it
15:50 - goes we can either be hurt and go back
15:53 - to still being alive or we can be heard
15:55 - enough to go to our death animation and
15:57 - that's kind the end of the road of
15:59 - course we need to add some conditions to
16:01 - these transitions let's create some
16:03 - parameters first of all we create a
16:05 - trigger called
16:06 - hurt and this is of course just going to
16:08 - trigger the hurt animation we also
16:10 - create a boolean and this is going to
16:12 - define if we are dead or not so let's
16:14 - call it is dead and that's going to be
16:16 - false by default then when we go from
16:18 - any state to hurt we only want to do
16:20 - that on the condition that the hurt
16:22 - trigger is happening and again of course
16:25 - we want to go into settings and set the
16:27 - duration to zero we can also go back to
16:29 - idle we want to do that on the condition
16:32 - that is that is false and we first want
16:35 - to do this when we have finished playing
16:37 - our heard animation so we want to have
16:39 - exit time here we want the exit time to
16:41 - be 1 and the transition duration to be 0
16:44 - and the same thing for our death
16:46 - animation except our condition here is
16:48 - going to be that is dead is true and
16:50 - again 1 on the exit time and 0 on
16:54 - iteration and that should actually be it
16:57 - for our animation controller there we go
17:00 - so now just like we did with our player
17:02 - we need to go into our enemies
17:04 - script and in here we need to reference
17:06 - our animator so we'll create at the top
17:08 - a public animator let's just call it
17:11 - animator and inside of our take damage
17:13 - function will play a hurt animation so
17:15 - we'll go animator dot set trigger hurt
17:18 - and then if we die we can go ahead and
17:21 - play a die animation by going animator
17:23 - dot said boolean is dead to true there
17:29 - we go
17:29 - and also we'll just quickly disable the
17:31 - enemy and to do this we of course need
17:33 - to disable the script itself here the
17:36 - enemy script and we can do that by just
17:38 - going this that enabled equals false
17:40 - that is simply going to uncheck this box
17:42 - here so that our enemy script is
17:44 - disabled but we also want to make sure
17:46 - that we cannot run into the bandit so
17:49 - we'll also disable the box Collider and
17:51 - we'll just do that with a quick get
17:53 - component call so we'll go get component
17:55 - of type Collider 2d dot enabled equals
17:59 - false ass Walt
18:01 - hello of course put this on top so that
18:03 - we disable this component after doing
18:05 - everything else and that should be it
18:08 - if we now save this and go into unity
18:10 - and reference our animator here and hit
18:14 - play we can walk up to a bandit we can
18:16 - hit hit him once and he gets hurt then
18:18 - hit him twice and he gets more hurt and
18:20 - if we hit him a third time he gets hurt
18:23 - and he dies awesome and as you can see
18:26 - the components are indeed getting
18:27 - disabled so we can now walk read over
18:29 - him and we cannot damage him anymore
18:31 - really really cold the final thing that
18:34 - I want to be able to do is just limit
18:36 - the attack rate of a player because
18:38 - right now we can spam this attack
18:39 - animation and that might be a bit too
18:41 - powerful so to do that we'll just go
18:44 - into our player combat script and at the
18:47 - top here where we are triggering our
18:49 - attack we want to add a tiny bit of
18:51 - logic we just want to add an attack rate
18:54 - so we'll create a public float attack
18:57 - rate this is how many times we're gonna
18:59 - attack per second I'm gonna set it to
19:00 - two we'll also create a private float
19:03 - and this is going to store the time
19:05 - where we can attack next so it's going
19:07 - to be our next attack time and we'll
19:10 - default it to zero then inside of our
19:12 - update here before we check for any
19:15 - input we can go if time that time
19:18 - so this basically just keeps track of
19:20 - our current time and if that time is
19:22 - greater than or equal to or next attack
19:25 - time well then we can go ahead and
19:27 - attack and so we can go ahead and put in
19:30 - our if statement and our attack here and
19:32 - if we choose to attack when then we are
19:34 - going to set our next attack time equal
19:37 - to our current time so time that time
19:39 - plus 1 divided by our attack rate in
19:42 - other words if our attack rate is
19:44 - currently 2 we are going to add 1/2
19:47 - which is 1/2 so we're going to add half
19:50 - a second onto our current time and say
19:52 - that's the next time we'll be able to
19:54 - attack and once we reach that time well
19:57 - we can go in and attack again awesome
19:59 - so if we go ahead and save that now and
20:01 - go into unity and play tests as you can
20:04 - see if I spend my keyboard we can only
20:06 - attack two times per second so that
20:09 - marks the end of our working combat
20:11 - system whoa that's pretty much it for
20:14 - this video if you enjoyed it make sure
20:15 - you subscribe and bring that
20:16 - notification bell so you don't miss the
20:18 - next one also don't forget to check out
20:19 - north VPN simply click the link north
20:21 - VPN dark um slash practice in the
20:23 - description and get 81 percent off and
20:25 - get 2 gifts included by using the curved
20:27 - brackets also remember to listen to duct
20:30 - tapes ooh I guess that means Christmas
20:32 - is closed we'll be taking a break over
20:35 - the holidays but we'll be back with a
20:36 - new video at the first Sunday next year
20:38 - so enjoy Christmas everyone and have a
20:40 - happy new year and we'll see you in
20:42 - January
20:43 - texts of the awesome patreon supporters
20:44 - who donated in November and a special
20:46 - thanks to infinity PPR dentist Sam Sam
20:49 - well loss to violence love forever Chris
20:51 - face Tamara Megan Frazier Lila set Mia
20:54 - Mia pop muhammad yunus Daniel D sonic
20:56 - Jacob Sanford no Kiyosaki marc-antoine
20:59 - Jerrod cracker pierce the mighty Zeus
21:01 - Allison the fierce Gidget kya and
21:03 - Erasmus you guys Rock