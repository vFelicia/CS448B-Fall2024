00:00 - in this video I'll show you a super cool
00:01 - trick on making a quick and easy level
00:03 - editor for Unity this trick was inspired
00:06 - by a live stream by cool 18 so credit
00:08 - goes to him for the idea basically what
00:10 - we'll do is create a low resolution
00:12 - image and use the color data from that
00:14 - image to populate our level that means
00:15 - that we can use any image editing
00:17 - software to paint pixels on top of our
00:19 - image and when we start the game unit
00:21 - will then replace each pixel with some
00:23 - kind of prefab that could be a ground
00:25 - tile a coin an enemy or even the player
00:27 - spawn point so without further Ado let's
00:29 - jump into it the assets I'm using here
00:31 - from the 2D mega pack you can get it
00:33 - from Dev assets.com as with everything
00:35 - else it's pay what you want that will be
00:36 - a link in the description I have a
00:39 - player a ground object and a coin and if
00:43 - we collide with the coin here we will
00:45 - pick it up if you want to learn how to
00:46 - set this stuff up check out my course on
00:48 - creating a 2d platformer so let's begin
00:50 - by right clicking in the Hier key
00:51 - creating an empty object let's reset the
00:53 - transform on this and let's call it
00:55 - level generator let's drag it to the top
00:58 - here so we can always see it let's let's
01:00 - hit add component and let's create a
01:01 - custom script called level generator as
01:04 - well it's going to be of type c and
01:06 - let's hit create an ad let's double
01:08 - click it to open it up in visual studio
01:10 - so first off we can delete the two using
01:12 - tags at the top and we can also delete
01:14 - the update method you can easily have
01:16 - the level generator create multiple
01:18 - different levels but in our case we'll
01:19 - focus on making a level from a single
01:21 - map so let's first off create a variable
01:23 - for this map it's going to be public so
01:25 - that we can access it in the inspector
01:27 - and it's going to be of type texture 2D
01:29 - this this will allow us to put an image
01:31 - into this slot let's just name it map
01:34 - meaning inside of our start method we
01:35 - want to generate a level based on the
01:37 - color data inside of our map so let's
01:40 - call a function called generate level
01:42 - let's make this function it's going to
01:44 - be of type void because we don't need it
01:45 - to return anything it's going to be
01:47 - called generate level and it's not going
01:49 - to take any arguments now in order to
01:51 - generate a level we need to load data
01:53 - from our map to do that we'll Loop
01:55 - through each individual pixel that makes
01:57 - up our texture and depending on the Val
02:00 - of the pixel will then spawn a
02:01 - corresponding tile so to Loop through
02:03 - our texture we'll create two for Loops
02:05 - the first one will Loop through the
02:07 - width of our textur so let's go four
02:09 - we'll create an integer variable called
02:11 - X and set it equal to zero we then want
02:13 - to keep looping as long as X is less
02:16 - than map. width and each time we Loop
02:18 - through we want to increase X by one
02:21 - then for each of the pixels on the
02:23 - x-axis we also want to Loop through all
02:25 - the pixels on the Y so we'll create
02:27 - another for Loop here where we create
02:29 - another integer called Y and set it
02:31 - equal to zero and we want to continue as
02:33 - long as Y is less than map. height and
02:36 - again after each iteration we'll add one
02:38 - onto our y variable so we are now
02:40 - looping through all of the pixels in our
02:42 - map you might think holy smokes that's a
02:44 - lot of iterations and yes if your
02:46 - texture is huge this is going to take
02:48 - some time but luckily the computer can
02:50 - handle operations like this super fast
02:53 - so for each pixel in our map we want to
02:55 - check if that pixel's color corresponds
02:57 - to a certain tile so let's call a method
02:59 - called generate tile and we want to feed
03:02 - it our X and Y coordinates then when we
03:05 - create this method generate tile we want
03:08 - to take in an integer X and an integer y
03:12 - the first thing that we want to do here
03:13 - is get the color of the pixel that we're
03:14 - looking at loc the unity has a function
03:17 - that makes this really easy all we need
03:19 - to do is call map. get pixel and input
03:23 - the X and Y coordinates now this is
03:25 - going to return a color and so we can
03:27 - store this in a variable of type color
03:30 - and let's call it pixel color and now we
03:32 - can start doing things based on the
03:33 - color of the pixel for example we can
03:35 - check if pixel color. Alpha is equal to
03:39 - Z that means that our pixel is totally
03:42 - transparent and in that case we want to
03:45 - just totally ignore it so we'll go ahead
03:47 - and return before we get to spawn any
03:49 - tiles and let's also leave a comment
03:51 - here saying that the pixel is
03:54 - transparent Let's ignore it if it's not
03:58 - transparent well then we want to check
03:59 - what tile we should spawn but before we
04:01 - do that let's just check if everything
04:03 - is working let's write debug.log and
04:06 - let's write out the pixel color so now
04:08 - we should see that when we start the
04:09 - game it's going to try and generate a
04:11 - level by looping through all of the
04:13 - pixels in our map for each pixel it's
04:15 - going to call the generate tile function
04:17 - which is then going to get the color
04:19 - data from that particular pixel and
04:21 - store it inside of pixel color if the
04:23 - pixel is transparent then we simply skip
04:25 - it and if it's not we write out a
04:27 - message to the console with its color
04:29 - Dash let's save this and head into unity
04:32 - and we now have an empty slot for our
04:34 - map so let's go ahead and create one for
04:36 - this you can use any image editing tool
04:38 - I'm going to be using Photoshop all we
04:40 - need to do is go ahead and create a new
04:42 - image we can call this level one I'm
04:45 - going to make it 64x 16 pixels let's hit
04:48 - okay let's zoom in on it I'm going to
04:51 - create a new layer I'm going to switch
04:53 - to the pencil tool by holding down this
04:55 - button and selecting pencil tool and
04:57 - then going to right click make sure the
04:59 - size is set to one pixel and the
05:00 - hardness to 100 and as the color I'm
05:03 - then going to select a total black now I
05:05 - can start painting out some ground
05:07 - elements I'm can use the Eraser if I
05:09 - mess up here so each one of these pixels
05:11 - are now going to represent one tile and
05:13 - I'm using a total black as the color for
05:15 - my crates make sure to disable whatever
05:17 - layer you have in the background so that
05:19 - everything else is transparent now in
05:21 - order to save this file let's go file
05:23 - save as let's navigate to our project
05:26 - now because I'm using Photoshop I can
05:28 - save it directly as a phot Photoshop
05:30 - file if you're using any other software
05:32 - I recommend saving as a PNG this unlike
05:35 - a JPEG will keep the transparent
05:36 - background so let's now save hit okay
05:39 - and when we now go into Unity we should
05:41 - see the level one texture we want to
05:43 - make sure that the filter mode here is
05:44 - set to point and our compression to none
05:47 - this way Unity won't blow out our
05:49 - texture in anyway let's also go under
05:51 - Advanced and it's very important here to
05:52 - remember to check read write enabled
05:55 - otherwise we won't be able to load color
05:57 - data from our texture and it'll throw us
05:59 - an eror let's then hit apply let's
06:01 - select our level generator let's drag in
06:04 - our level one texture let's also remove
06:06 - our ground and our coin from the scene
06:09 - and when we now hit play we can see in
06:11 - the console that for each Pixel It
06:12 - throws out a debug.log statement and you
06:15 - can see all of these have zero on the
06:17 - red zero on the green and zero on the
06:19 - blue which means that they are black and
06:21 - an alpha of one also note that I made 46
06:24 - pixels and we now have 46 messages so
06:28 - now we need to tell Unity that whenever
06:29 - we get a black pixel we want to spawn a
06:32 - ground prefab normally when you want to
06:34 - associate two values like this you use a
06:36 - dictionary and that is definitely the
06:38 - fastest way to go about it but
06:40 - unfortunately Unity by default doesn't
06:42 - allow us to edit dictionaries inside of
06:44 - the inspector and so we would have to
06:45 - create some kind of editor script to
06:47 - allow us to do that or pick up an asset
06:49 - on the asset store like Odin or full
06:51 - inspector instead let's use a normal
06:53 - array where each item in the array is a
06:56 - class that we create storing both a
06:58 - color and a prefa let's right click in
07:00 - our project hit create C script and
07:03 - let's call this class color to prefab
07:06 - let's then double click it hit reload
07:08 - all let's remove the two namespaces at
07:10 - the top let's also make sure this
07:12 - doesn't derive from mono behavior and
07:14 - let's delete both our methods now in
07:16 - this class we want to have a public
07:19 - color let's call that color we also want
07:22 - a public game object which is going to
07:25 - be our prefab to make sure that this
07:27 - will draw in the inspector we want want
07:29 - to mark it at the top as system.
07:32 - serializable so now when we save this
07:35 - head into the level generator script and
07:38 - at the top create a new public color to
07:42 - prefab array where every element in our
07:45 - array is a color to prefab storing a
07:48 - color that maps to a specific prefab so
07:51 - we can call this array our color
07:53 - mappings when we then save this and hit
07:56 - into Unity we can see a color mappings
07:59 - array appear and if we now increase the
08:01 - size we can see an element here with
08:04 - first a color we want this to be totally
08:06 - black which it is already and we also
08:08 - want to bump up the alpha to 255 and we
08:11 - can then drag in our ground prefab now
08:14 - all we need to do is go to the bottom
08:16 - here and inside this function that is
08:18 - called for each pixel we also want to
08:21 - Loop through all of the elements in our
08:23 - color to prefab array so we'll go for
08:25 - each color to prefab and we'll call the
08:28 - element we we currently looking at a
08:31 - color mapping in our color mappings
08:34 - array so we'll Loop through each element
08:36 - in our color mappings array and check if
08:38 - the current element that we're looking
08:40 - at which is called color mapping do
08:43 - color is equal to so we'll use dot
08:46 - equals the pixel color and if it is well
08:49 - then it's a match and so we can
08:51 - instantiate the prefab so we'll call
08:54 - instantiate and the prefab that we want
08:56 - to instantiate is now our colum mapping
08:59 - do prefab and the position where we want
09:01 - to instantiate it is given by our
09:03 - coordinates up here and so we can go and
09:05 - create a vector 2 called position and
09:08 - set it equal to a new Vector 2 where we
09:12 - give it our X and Y pixel coordinates
09:15 - which are now real Unity coordinates and
09:17 - we then simply feeded our position we
09:19 - don't care about the rotation so we'll
09:21 - just go Quan do identity which means no
09:25 - rotation in other words a rotation of 0
09:27 - 0 0 and then just to clean everything up
09:30 - we can also parent it to this current
09:32 - object so the object that we want to
09:33 - specify as the parent is our transform
09:36 - so now if we save that and go into Unity
09:39 - double check that our color mapping is
09:41 - set up correctly between a toll black
09:43 - and our ground prefab and hit play voila
09:47 - we've got a map generated from a texture
09:51 - that we can very easily edit in order to
09:53 - change our level I don't know about you
09:55 - guys but I think that's super cool
09:57 - awesome and from here on it's super easy
09:59 - to add new elements to our array we
10:01 - simply increase the size choose a color
10:04 - for our coin we could go for a yellow
10:07 - color so let's give it 255 on our red
10:10 - and 255 on our green to make sure that
10:13 - we're using the exact same color we can
10:15 - even copy the hex code down here then
10:18 - drag in our coin prefab and inside of
10:21 - Photoshop or whatever else you're Now
10:23 - using let's create a new layer and we
10:25 - now set the red channel to 255 and the
10:28 - green channel to 2 55 as well and so we
10:31 - can paint in some
10:34 - coins it's good to reward your player
10:36 - with plenty of coins let's now save this
10:39 - and as soon as we now go into unity and
10:41 - hit play our level has updated and we
10:44 - can play through and get all of the
10:46 - coins we can even control where our
10:48 - players spawns using this same method if
10:51 - you had enemies in your game you could
10:52 - spawn those as well to spawn our player
10:54 - we simply go to our level generator add
10:56 - a third element for this one let's use
10:58 - say a a total blue color as the prefab
11:02 - let's drag in all player inside of
11:04 - Photoshop let's now change the color to
11:06 - Blue create a new layer and let's set
11:09 - the spawn point here then when we save
11:11 - this go into Unity delete our player and
11:15 - hit play voila all player spawns in the
11:18 - middle of our scene so I hope you will
11:20 - take this and apply it to any game that
11:22 - you are currently working on I find it's
11:24 - a great tool especially when doing ludum
11:27 - Dar games because it allows you to
11:29 - really quickly cram out new levels
11:32 - that's pretty much it for this video I
11:33 - hope you enjoyed it if you did make sure
11:34 - to subscribe so you don't miss a future
11:36 - one also if you want to grab the script
11:37 - for yourself you can do so at the breis
11:39 - F just go f. bra.com that will also be a
11:43 - link in the description I recently
11:44 - pushed an update to The Forum so it
11:46 - should now be faster and more stable and
11:48 - most importantly spam free so if you
11:50 - have any questions I really suggest
11:51 - posting them there all right thanks for
11:53 - watching and I will see you in the next
11:55 - video thanks to all the awesome patreon
11:57 - supporters who donated in May and a
11:59 - special thanks to Derek heemskirk faal
12:01 - marifi Stone gamer cmdr Firestone 38
12:05 - Thomas vley James cound cyborg Mommy and
12:07 - Jason the Tito if you want to become a
12:09 - patron yourself you can do so at
12:11 - patreon.com Brees