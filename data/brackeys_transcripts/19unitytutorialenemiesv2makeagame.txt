00:00 - thanks for tuning in at
00:03 - braies hello everyone and welcome to
00:05 - video number 19 in make a game a cool
00:08 - series on making a video game in unity
00:12 - so in today's video we're going to
00:13 - continue where we left off last time uh
00:16 - by making uh some
00:18 - enemies and uh I've made a list of what
00:20 - we're going to go over today I hope that
00:23 - we can do most of this stuff um we might
00:26 - not be able to do all of it so I might
00:27 - have to split this up into several
00:30 - episodes but we'll have to see with that
00:33 - we'll just um go as quickly as we can so
00:37 - first off we are going to add some
00:38 - velocity to our player whenever we jump
00:41 - on the enemy's head so just like in
00:43 - Mario we will uh jump uh back up again
00:47 - uh then we're going to add some
00:48 - particles whenever the enemy dies we're
00:51 - going to be uh doing a bit of
00:53 - restructuring uh in the way that we have
00:55 - things set up right now for example I
00:57 - would like the game manager to um manage
01:01 - the level restarting and all that
01:03 - instead of having uh that function
01:05 - inside of the ball Health script then we
01:08 - also going to kill the player whenever
01:11 - he doesn't manage uh to jump on top of
01:13 - the enemy so when he collides with the
01:16 - sides and we're going to fix some bugs
01:19 - uh most prominently the we're going to
01:21 - do something with moving our camera
01:24 - update script into a late update
01:26 - function instead and I'm going to show
01:28 - you what that does
01:30 - cool so uh that is the uh list of things
01:33 - that we are going to do today and then
01:35 - in a future video we are going to add a
01:37 - cool model again samine iban is going to
01:40 - take care of uh making that and we're
01:43 - also going to add some animations to
01:44 - that
01:45 - model cool so let's get started with the
01:48 - first point here adding velocity to our
01:51 - player as always if you have any
01:53 - questions throughout this video uh or
01:55 - something that just won't work you can
01:57 - just head over to forum. bra.com and I
01:59 - among many other developers are just
02:01 - ready to answer your questions there I
02:03 - mean I very rarely see a a threat go
02:08 - unanswered cool so let's move into Unity
02:12 - as you can see the scene is exactly as
02:14 - we lefted off the last time I've just
02:16 - gone ahead and moved the checkpoint over
02:18 - a bit because uh before it was right
02:20 - above our enemy and so when I died I
02:22 - kept falling on top of the enemy uh so
02:25 - I'm simply going to move it over here uh
02:27 - just to where we start in the beginning
02:30 - cool uh so what I'm going to do here is
02:34 - uh first off we need to have a look at
02:36 - how our enemies is currently set up so
02:39 - we have these uh this trigger box down
02:42 - here which takes care of the uh the uh
02:45 - killing of our player and we have this
02:48 - trigger box up here which takes care of
02:50 - the enemy dying so that's called the hit
02:53 - box and the other one is called the
02:55 - killbox and as you can see the hitbox
02:57 - currently has a a script called d hit
03:00 - and if we open that up it simply calls a
03:03 - function on the enemy called die and
03:06 - that takes care of the enemy
03:08 - dying but what we want to do here is
03:11 - whenever our enemy dies we want to also
03:15 - have some kind of access to our player
03:17 - so so that we can apply some kind of
03:20 - upwards Force to him because right now
03:24 - if we have a look at our enemy
03:27 - script right here that is on the enemy
03:30 - Center then you can see that we are
03:33 - currently just destroying the game
03:35 - object we don't have any reference to
03:38 - our actual player inside of this so what
03:42 - we can do uh is we can simply make a
03:44 - variable for that so we can make a
03:47 - VAR uh
03:49 - player and uh we can make it of type
03:52 - transform or game object that's up to
03:54 - you I'm simply going to make it of type
03:57 - transform and uh then in side of of this
04:00 - function we can simply type
04:02 - player dot um rdet body actually let's
04:08 - make this variable up here of type rigid
04:10 - body so we don't even have to access the
04:12 - rigid body down here because the way we
04:15 - apply forces in unity is using the rigid
04:18 - body component which if you remember is
04:21 - what makes this act um as a physics
04:24 - object in game and then we can access
04:27 - access different functions and Par
04:29 - meters inside of this rigid Body by
04:31 - doing the dot and uh you can see that we
04:34 - can add some Force we can uh uh and and
04:39 - that uh Force you can tweak quite a bit
04:41 - we can add torque for rotational Force
04:44 - um and then we have a bunch of different
04:46 - parameters we could add a force here but
04:50 - what adding a force means is that you
04:53 - are um applying basically a push in a
04:58 - Direction but if if you're already
05:00 - traveling with a certain velocity in the
05:03 - opposite direction the force won't be
05:05 - too visible and that's basically what
05:08 - we're doing here because the ball is
05:09 - going to be falling down so it's going
05:12 - to be falling with a certain velocity on
05:14 - the Y
05:16 - AIS and uh once we add the force we
05:19 - basically have to compete with that
05:21 - already ongoing velocity so we have to
05:24 - tweak our force or um we have to um kind
05:28 - of tweak our Force
05:30 - uh to such a degree that we can kind of
05:33 - predict with what force we're coming in
05:35 - and then apply maybe double that in the
05:37 - other
05:38 - direction but if we then fall from a a
05:41 - very high point and we come in with a
05:43 - lot of force it might not uh act as we
05:47 - wanted to so what we're going to do
05:49 - instead is we're simply going to
05:51 - directly change the velocity that our
05:53 - ball is um moving at so to do that we do
05:58 - rigid body do velocity
06:00 - and then we access the Y component doy
06:04 - and and you can just do it like this in
06:05 - JavaScript it's a little bit more tricky
06:08 - in C but it's really not not that hard
06:11 - either and we can equal this to whatever
06:14 - value we want and let's store this value
06:16 - um as a variable too so we can tweak it
06:19 - however we want so we're going to do a
06:21 - VAR and this is going to be called um
06:26 - maybe what are we going to call this uh
06:29 - bounce amount maybe and we can equal
06:33 - this uh
06:35 - to let's say 10 F by default I don't
06:39 - really have an understanding of how much
06:41 - this is going to be um but we're simply
06:44 - going to do that and equal it to bounce
06:46 - amount and now we can save this we can
06:48 - uh head back into uh unity and select
06:51 - the enemy center now you can see that we
06:53 - can drag a player onto here so that's
06:55 - what we're going to do we're going to
06:57 - drag our ball onto that and uh you can
07:00 - see now that once we jump on top of this
07:05 - this is hopefully going to work please
07:08 - work oops I hit it wrong there as you
07:12 - can see I still have to tweak the
07:13 - colliders a bit oops this is definitely
07:16 - not working so we are uh apparently
07:19 - getting some kind of error and I don't
07:21 - really know why this is causing us to
07:24 - crash it looks like my version of unity
07:27 - simply closed down there so I'm just
07:29 - going to going to check up on this and
07:31 - uh and I'll see you in one sec okay so
07:34 - I'm back it looks like the uh crashing
07:36 - of unity wasn't actually because of our
07:39 - script um but I can see now that I had
07:42 - apparently forgot to turn Dropbox
07:44 - syncing off and if you're using Dropbox
07:46 - to sync your projects you should really
07:48 - remember to do so because it can mess
07:50 - with the temporary files that that Unity
07:52 - creates along the way however we did
07:55 - have an error in our script and you can
07:57 - see that it throws one here and it's
08:00 - because if we open up um the script here
08:03 - you can see that we are trying to access
08:05 - access a rigid body on the enemy Sentry
08:08 - we of course need to do player. R body.
08:12 - velocity uh for this to work so now when
08:14 - we hit play again remember to assign the
08:17 - player it's very
08:19 - important um you can see that if I jump
08:22 - here and I really need to learn how to
08:23 - time these I'm going to try that one
08:25 - more time so if I jump on top of the box
08:29 - here
08:30 - you can see that we jump up in the air
08:33 - so we have that kind of Bounce effect
08:36 - that is so cool in the Mario games and
08:38 - of course you can tweak how much you
08:40 - want the ball to jump uh as a as an
08:43 - effect of that cool so that was the
08:47 - first thing on our list that was uh
08:49 - adding velocity to our player one thing
08:52 - I do want to check however is that we uh
08:56 - can maintain this connection to the
08:59 - player
09:00 - even though our player dies for some
09:02 - reason so if we restart here you can see
09:05 - that it's very important that our ball
09:07 - is still is still connected here and uh
09:11 - that brings us to the next era it's one
09:15 - that I I I found here when messing
09:17 - around with the script here if we just
09:19 - jump off the edge here right away you
09:22 - can see that we fall down and I think
09:24 - the uh the reason why is if we go into
09:27 - our checkpoint script simply double
09:30 - click it here um you can see that we are
09:33 - making this reached point and then we
09:36 - are first setting it to something new
09:39 - whenever we actually collide with a
09:42 - checkpoint so and by default when making
09:46 - a variable up
09:47 - here this is going to be equal to 0
09:51 - comma 0 comma 0 so Vector 3 is in
09:53 - initiate with a default value of
09:57 - 0.0.0 and if we make an empty object and
10:01 - set the position to 0 Comm 0 Comm 0 you
10:04 - can see that it puts this right here
10:07 - which is where we then respawn so a
10:11 - solution to this is um to find your
10:16 - checkpoint like I did here and just move
10:18 - it over and that's the easiest way uh
10:20 - which I showed you before is I just kind
10:23 - of wanted to show you that um but one
10:26 - thing you can also do is you can set
10:28 - this to a default value of some kind so
10:30 - we can say that this should
10:33 - equal vector
10:35 - 3 and inside of this we can then put
10:38 - maybe um Z comma 2 comma 0 and that's
10:43 - going to just put us uh with two units
10:46 - up in the air pretty sure
10:50 - see game over yes indeed it is so that's
10:55 - completely up to you if that's something
10:57 - you want to do I'm simply going to put
10:59 - our checkpoint over here and also just
11:01 - leave this as a security measure cool so
11:05 - now that we have our jumping uh added
11:08 - here we can remove that from the list
11:10 - and we can go on to maybe the most uh
11:12 - fun part I think uh which is adding
11:14 - particles whenever our enemy dies so to
11:18 - make this look more cool uh we can also
11:20 - add some sounds in the future uh but I
11:22 - think that comes with a model and
11:24 - animation and all that so for now we're
11:26 - simply going to do some graphics
11:29 - and uh this particle system here uh we
11:31 - are going to create from scratch so
11:33 - let's go under game object particle
11:35 - system you can see that adds one right
11:38 - in let's drag this under enemy Center
11:41 - then reset the transform just so we can
11:43 - see how this looks over here and then uh
11:46 - drag it out again because we don't want
11:48 - it to be a uh child of the enemy
11:50 - Center and then what we can do is we can
11:53 - maybe move this up a bit so uh actually
11:56 - let's not rotate this let's uh instead
11:59 - change the emission in here uh and the
12:02 - shape in here so I don't want this to
12:05 - emit in a cone uh currently it's you can
12:07 - see it's going out in this cone kind of
12:09 - shape instead let's H try out with a
12:12 - sphere so it just goes in all directions
12:14 - or you can maybe do a hemisphere uh as
12:17 - you can see it's just like this half
12:19 - circle that we've extended out uh now we
12:22 - can rotate
12:24 - this so it goes
12:26 - upwards looks better and um actually I'm
12:31 - just going to go with the sphere I think
12:32 - that's going to be just fine and uh what
12:34 - we're going to do is you can make this
12:37 - emit from Shell but I think that this
12:39 - emitting from any direction is fine I'm
12:41 - however going to make this a smaller
12:43 - point something like that and uh then we
12:46 - can have you couldn't put on random
12:49 - Direction I think this is going to look
12:51 - just fine we are however we going to
12:53 - change the emission rate so we're going
12:55 - to put that to zero and then instead do
12:57 - a a bursting system so we're going to
12:59 - add a burst here and we're going to bump
13:02 - up the amount of particles to maybe
13:04 - something like
13:05 - 60 and uh I'm going to bump down the
13:07 - duration that this lasts for it to Loop
13:10 - uh faster so we can see it so I'm going
13:13 - to BP that bump that down to three uh
13:16 - actually I'm going to do two and uh then
13:19 - we want to change the lifetime of these
13:21 - particles to something like maybe one or
13:25 - two I'm just going to do one you can see
13:28 - this already looks much better uh then
13:30 - what we can do is we can change the
13:32 - speed from constant to a random between
13:35 - two constants and uh we can maybe do
13:38 - between I don't know one
13:42 - and eight let's try that so that it
13:46 - isn't um so it's a bit more randomly
13:49 - scattered is what I'm trying to say and
13:52 - uh then we can maybe bump down the size
13:53 - a bit and maybe even make that random as
13:56 - well so we're going to do a random
13:58 - between two constants and we can do
14:02 - 0.2 and actually I'm just going to do
14:04 - one here looks pretty nice we can see it
14:07 - from the game view also how it looks
14:10 - currently uh looks a bit random maybe
14:13 - this is a bit too small we can do 0.5
14:16 - instead I like that much better um then
14:19 - we can maybe add a bit of gravity this
14:21 - is up to you if you want the particles
14:23 - to travel
14:25 - down I'm actually not too fond of this
14:28 - um when whenever you're doing particle
14:30 - systems like this it's just a bunch of
14:32 - tweaking you just need to try out all
14:34 - the different uh parameters see what
14:36 - works for you in your particular
14:39 - situation there's really no rule for
14:42 - making these particle systems looks
14:44 - awesome it's always just a lot of
14:46 - messing around so and I of course expect
14:49 - you to go through this um much more
14:52 - thoroughly than I do I just very quickly
14:54 - try to show you what the different
14:56 - parameters does and then uh do and then
14:59 - um you can you can make something cool
15:01 - out of that so what we're also going to
15:04 - do is we're going to do color over
15:06 - Lifetime and size over lifetime so first
15:09 - on the size matter here we are going to
15:11 - make them shrink down over their
15:16 - lifetime by some amount this is this
15:19 - looks pretty good I think and then color
15:21 - over lifetime we want the alpha value
15:23 - which is this up here to simply just
15:25 - fade out and only want that to happen in
15:28 - the last percentage here so I'm gonna
15:31 - put an extra node here so that it only
15:33 - has this short fade out
15:35 - time uh then what we can do is we can
15:38 - change these particles from the their
15:40 - current look to an additive look uh and
15:44 - that that's pretty nice so we can make a
15:46 - material for them actually we already
15:49 - have this glow particle so I can just
15:51 - duplicate that and make this into maybe
15:54 - enemy death
15:57 - particle and uh uh then we can select
16:00 - the particle system again we can go
16:02 - under render and we can drag the enemy
16:05 - death particle in
16:07 - here and then we can change the color a
16:09 - bit maybe we can make this more red
16:12 - actually let's just make this a a solid
16:15 - white color U maybe with a bit of of
16:17 - Alpha transparency and then inside of
16:19 - the color over lifetime is where we want
16:21 - to really change this so we can maybe
16:23 - make it start out red and then we can uh
16:27 - give it maybe a more
16:30 - yellow color over here we want it to
16:32 - look pretty cool kind of like we just
16:34 - collected something that we really want
16:37 - so just give this rewarding feel to the
16:39 - player and again this is not going to be
16:41 - pretty in this video because I have a
16:43 - lot of stuff that I want to show you so
16:46 - uh the last thing we could do over here
16:49 - is uh limit velocity over Lifetime and
16:53 - what this is going to do is really give
16:54 - us that explosion kind of look where
16:57 - it's going to move really fast in the
17:00 - beginning and then damp and slowly slow
17:03 - down um so we get this uh sense of it
17:06 - emitting from one point and then just
17:08 - slowing down into space uh and to do
17:12 - this we're going to change the dam in
17:13 - amount down or what I think I'm going to
17:17 - leave that at something like
17:19 - 0.24 and then maybe bump up the speed a
17:25 - bit I think that looks pretty cool
17:28 - actually we can do a uh curve when it
17:31 - comes to the speed here to make them
17:34 - kind of slow down as you can see and I
17:37 - think that is act ex actually exactly
17:40 - what we want and then maybe we can
17:41 - change the start speed up here instead
17:44 - of doing eight I want to do maybe
17:48 - 20 so we really get this explosion kind
17:51 - of look I actually think that looks
17:53 - pretty awesome and I think we're just
17:55 - going to go with this uh for now we can
17:57 - also uh head back later and and change
18:00 - it if we don't like it so we are simply
18:03 - going to call these enemy death
18:07 - particles and uh we'll make them into a
18:10 - prefab by dragging them into the prefabs
18:12 - folder so we have them here and uh
18:15 - remember to turn off looping that's
18:18 - really important because El it's just
18:19 - going to do several bursts and and look
18:22 - really
18:23 - stupid excuse me there cool so let's
18:27 - delete that from the scene and instead
18:29 - let's do some instantiation through the
18:31 - script so let's open up the enemy script
18:34 - and in the die function we want to first
18:37 - off have a variable for uh the particles
18:40 - so I'm going to do VAR death
18:44 - particles and uh these are just going to
18:47 - be of type transform so we can easily
18:49 - instantiate them and then right before
18:51 - we destroy the game object we're simply
18:53 - going to do instantiate
18:58 - and in here we're going to do death
19:02 - particles comma and then the position
19:05 - which is just going to be our
19:06 - transform.position comma transform.
19:11 - rotation save that out head back into
19:14 - Unity you can see that we have a slot
19:17 - for our death particles let's find them
19:19 - in our U prefabs folder drag them in and
19:24 - now when we hit play if I can manage to
19:27 - jump on this guy's head
19:29 - try and time
19:31 - this awesome we have some cool looking
19:34 - particles and it's really that easy and
19:36 - you can just go into this object and
19:38 - tweak it however you want cool so now
19:42 - that we have that in place uh we can go
19:44 - ahead and move on to the next part on uh
19:47 - or the next uh bullet point on our list
19:50 - which is some restructuring So currently
19:54 - what I want to do is I want to kill the
19:56 - player through a script but currently if
19:59 - we go into the ball and look at the ball
20:02 - Health script we can see that this is
20:05 - actually where we do our level
20:06 - restarting and I think it's a little
20:09 - weird to have the restarting of the
20:10 - level all happening in happening uh
20:13 - inside of the
20:14 - ball so what we are going to do instead
20:18 - is we are going
20:19 - to follow me here whoops that was not on
20:23 - purpose we're going to go into our game
20:26 - object or game master script is what I
20:28 - mean and have a function in here for
20:31 - restarting the level so inside of our
20:34 - ball Health script we can take our
20:36 - restart level function just delete that
20:38 - with crl X and copy it over here with
20:41 - crl v uh then we can go in and find our
20:46 - um the place where we restart our level
20:49 - and then instead of Simply doing restart
20:52 - level we're going to do game master.
20:55 - restart level but in order for us to
20:58 - access it in here we need this to be a
21:02 - static function and that's not really
21:05 - what we interested in so what we are
21:07 - going to do instead in here is simply
21:09 - use a game object. fine statement and
21:12 - this is going to work just fine you
21:14 - could also make actually let's just do
21:17 - that we'll do a a variable up here so we
21:19 - can call this game master but do that
21:22 - with a small G A nonc Capal G do restart
21:27 - level because what we can then do up
21:29 - here is we can make a variable called
21:32 - game master of type transform so now we
21:36 - have a a reference to that actually
21:39 - let's do a type game object like that no
21:43 - no let's do a type game master sorry if
21:46 - I if I'm uh confusing you here because
21:49 - then we can drag in the script directly
21:52 - cool then we can copy over the audio
21:56 - clip over here so we can play some audio
21:59 - from this point uh and uh down here we
22:02 - don't want the transform. position
22:04 - instead we want to change the position
22:07 - of our player but I'm going to show you
22:09 - how that's done in a sec then what we
22:12 - also going to do is delete this is
22:14 - restarting uh from the function there go
22:18 - back into our player Health script and
22:20 - say that if we are
22:23 - restarting uh or if we are not
22:24 - restarting we then going to set is
22:27 - restarting
22:30 - to
22:31 - true and then down here we're going to
22:34 - set it to false again is
22:37 - restarting equals
22:40 - false this is not by means necessary but
22:43 - it's it's good practice and
22:46 - um cool so what we basically have here
22:49 - is a setup where if we hit back into
22:52 - Unity it's hopefully not going to
22:53 - complain no and if we then select our
22:56 - ball you can see that under our ball
22:58 - help
22:59 - we have a reference to our game master
23:03 - so we simply want to drag our GM object
23:05 - into that one and we are sure that the
23:07 - GM object is always going to be in the
23:09 - scene and what this will do is it will
23:12 - call the restart level function on the
23:15 - GM object then we go back in here this
23:18 - function is called this is going to play
23:20 - a sound which we have right here it's
23:23 - going to wait for a certain amount of
23:25 - seconds for the sound to finish and then
23:27 - we want to change the position of our
23:29 - player but currently we are TR changing
23:32 - the position of our game master script
23:34 - and that's not really something we're
23:36 - interested in so instead let's establish
23:39 - some kind of connection to our player
23:42 - and a way to do this is simply create a
23:44 - variable where we then reference the
23:46 - player so let's start out by doing that
23:49 - so we're going to uh make a variable and
23:51 - I actually want to do that up here
23:53 - because I think it's quite important and
23:55 - we're going to call this player
23:58 - and we're going to do of type
24:01 - transform now when we save this head
24:04 - back into the GM object you can see that
24:06 - we have a player slot up here so we want
24:09 - to drag our ball in there and we want to
24:12 - drag our game over sound which I can
24:15 - find over here on the audio want to drag
24:18 - that under the game over sound then what
24:22 - we can do in here is instead of saying
24:25 - transform. position we're simply going
24:27 - to say player position now when we hit
24:33 - play and uh we jump over here uh
24:37 - actually we're not calling the restart
24:38 - function in here but if we jump down you
24:41 - can see that our restarting whoops
24:44 - there's no audio s source of course we
24:46 - need to add an audio Source on the game
24:49 - master object here so um what we can do
24:53 - is simply go
24:54 - under audio audio source and uh we're
24:59 - going to disable play on awake make sure
25:01 - Loop is disabled we can check out maybe
25:03 - the sound setting here so volume is is
25:06 - just set to one so we're just going to
25:07 - do the same over here and we can even
25:09 - set the game over clip uh just so we
25:12 - know what this audio source is for we're
25:14 - also doing that inside of the script but
25:16 - now we have it so now let's try to play
25:20 - jump down and see if our reset start
25:22 - level function is working it is but wow
25:26 - it freaked out there um for some reason
25:28 - it it went totally crazy uh I think it
25:31 - might be because we are trying to
25:33 - restart the game multiple uh times so to
25:36 - fix this we're going to have a global
25:39 - variable here static VAR and this is
25:43 - going to be a a a Boolean and we're
25:46 - going to call this um is
25:50 - restarting uh and we're going to set
25:52 - this to false by default and this then
25:56 - in here we can going to say is
26:00 - restarting equals
26:02 - true and then down here we're going to
26:06 - set it back to false I know I just
26:08 - deleted this but I wanted to show you
26:10 - that we need to make it a static
26:12 - variable because then inside of the bald
26:15 - Hil script we can get rid of all of
26:18 - this we can get rid of the variable up
26:21 - here and then instead of saying is
26:23 - restarting we simply do game master. is
26:29 - restarting uh you could also do with a
26:31 - non- capital G here because we actually
26:34 - have a reference to the game master but
26:37 - because this is a static variable we can
26:40 - also reference it uh without having a a
26:44 - variable for
26:45 - that that's kind of a a a hard
26:48 - distinction just follow me right now I
26:51 - know some of this uh restructuring can
26:53 - be a bit confusing uh also because I'm
26:56 - I'm always doing these um um very clear
26:59 - definitions of the static variable and
27:02 - the public variable and those things are
27:05 - very separate uh but can be very nicely
27:08 - intertwined if you if you know how they
27:10 - work so if if those still confuse you
27:12 - just follow me if not then well done you
27:16 - you now understand a lot more about uh
27:19 - the scope of these scripts and and what
27:22 - can be accessed and what cannot so let's
27:25 - uh try and hit play here again let's
27:28 - jump
27:29 - down let's see if this works and indeed
27:32 - it does you will however see that the
27:35 - camera does a little bit of twitching
27:38 - and that is also on the list here so you
27:41 - can see that I have this camera laid
27:44 - update that I want to change uh we can
27:47 - kill off the restructuring here I think
27:50 - I think we're done with that uh but
27:53 - right now what happens is inside of our
27:56 - camera if I open that up we have a
27:58 - script called camera control and if we
28:01 - open that up in mono develop you will
28:03 - see that in our update function we are
28:05 - sitting
28:06 - ouros but if for uh instance uh we go
28:12 - into our game master script and change
28:15 - the player position through script like
28:18 - this this might not get to update before
28:22 - the um the uh the ball is is um
28:28 - positioned on the screen in its new
28:30 - position so what happens is that we get
28:34 - this kind of weird twitching effect so
28:37 - we need to make sure that we update this
28:40 - position here after anything else so
28:44 - after we've done the ball calculations
28:46 - and all that then we want to uh change
28:50 - the position of the camera and then we
28:52 - want to draw the frame if we change the
28:55 - position of our camera first then change
28:57 - the position of our ball and then draw
28:59 - the frame our ball was will not be in
29:02 - the center of the screen so to do this
29:05 - uh Unity has already made a convenience
29:09 - function for us called late update and
29:12 - this is exactly the same as the update
29:15 - function only it is called right after
29:18 - all the other game objects update
29:20 - functions so once we change that and
29:24 - jump down here you will see that our
29:27 - weird twitching effect
29:29 - has
29:30 - disappeared and this will become more
29:32 - apparent when we kill off the ball uh
29:36 - using the head box so now let's remove
29:40 - that let's remove fix box because I
29:42 - think we've done that too and now it's
29:45 - time for killing off the player so if we
29:48 - head into the enemy Center here go on
29:51 - the kill box you can see that we
29:52 - currently have no script attached so
29:55 - let's hit add component new script we
29:58 - new script and uh let's call
30:01 - this kill on
30:04 - hit and uh let's double click that to
30:07 - open it up in mono
30:08 - develop and what we're going to do is
30:11 - we're going to delete these two
30:12 - functions and instead make a function on
30:15 - trigger enter as we've done before open
30:18 - this up with uh some brackets and what
30:21 - we want to do in here is basically uh
30:25 - to uh to call the restart function or uh
30:30 - I'm sorry yeah to call the restart
30:32 - function whenever uh something hits this
30:35 - so what we we do maybe we should call
30:38 - this restart on enter that's up to you
30:41 - you can always refract to that uh any
30:43 - way you want to but what we want to do
30:45 - in here is simply uh get a reference to
30:48 - the game master script and then call the
30:51 - uh the respond function so let's make a
30:54 - reference call this VAR and name it game
30:58 - master just like we did in the last
31:00 - script and this is also going to be of
31:03 - type game
31:06 - object and then we simply do game
31:10 - master.
31:11 - restart
31:14 - level like that and uh if restart level
31:19 - is not okay what did we call it uh okay
31:23 - of course this can't be game object this
31:25 - should be uh game master
31:29 - like that and then we can restart the
31:31 - level please yes awesome so under the
31:35 - game master variable that we now have
31:37 - here we simply drag in the GM
31:39 - object and we should be able to hit play
31:42 - so let's try it out play go over here
31:45 - try to hit this box and indeed we
31:50 - restart it's really that simple I'm
31:53 - simply going to turn back on my audio
31:55 - here so I can have a listen and see if
31:58 - if the audio is playing
32:02 - here the music is playing we roll into
32:06 - our enemy game over it says game over
32:09 - and we respawn so that is basically for
32:12 - uh everything we can we can um have a
32:16 - fit into one tutorial today uh let's see
32:18 - how long this has been
32:21 - running yeah might need need to split
32:24 - this up but uh thanks so much for
32:26 - watching it's it's amazing if you made
32:28 - it all the way to the end here so
32:30 - congrats if you have and uh yeah that's
32:33 - basically all I have to show you I can't
32:36 - wait till we can uh do some uh model
32:40 - implementation and really get some cool
32:42 - looking Graphics in here that's going to
32:44 - be so much fun so thanks for watching
32:47 - and I'll see you in the next video
32:58 - oh