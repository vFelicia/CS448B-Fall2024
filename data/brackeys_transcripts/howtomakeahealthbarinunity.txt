00:00 - have you guys ever heard the one about
00:01 - the polar bear that walks into a bar and
00:03 - he's like can I get a beer and the
00:05 - bartender is like know you can get a
00:06 - health it's it's a health bar of course
00:10 - one of the most common things that we
00:12 - see in video games are health bars
00:14 - whether they're glued to the screen on
00:16 - the HUD or floating on top of game
00:18 - characters health bars almost always
00:20 - make it into a game in some form or the
00:22 - other no luckily creating a health bar
00:26 - is actually really simple using unities
00:28 - UI system and they can easily be
00:30 - modified to represent all kinds of
00:32 - different things like mana cooldowns
00:34 - energy casting bars and so on so in this
00:37 - video we'll have a look at creating a
00:38 - standard health bar that you can easily
00:40 - modify to suit your needs
00:42 - we'll make it so that you can stick it
00:43 - to the screen or have it follow around
00:45 - objects in your world jobs done but
00:47 - first this video is sponsored by hosting
00:50 - er let's say you're putting the
00:51 - finishing touches on your game like for
00:52 - example HP bars and now you're ready to
00:55 - build and host your game somewhere
00:56 - hosting our offers great hosting
00:57 - solutions that you do exactly this
00:59 - having you answer before your game is
01:01 - great for quick updates hosting game
01:03 - data and it also gives you the
01:05 - possibility to host a web domain link to
01:07 - your game or studio with a hosting a
01:09 - cloud hosting plan you get your own
01:10 - server with a dedicated IP address daily
01:13 - backups unlimited bandwidth and so much
01:15 - more
01:15 - hosting are now also offers a Google
01:17 - cloud powered hosting solution this
01:19 - gives you the flexibility scalability
01:20 - and robustness of Google cloud along
01:23 - with the simplicity of hosting ur and
01:24 - the H panel for management get up to 91
01:27 - percent off for all yearly web hosting
01:29 - plans using coupon code practice and get
01:31 - a domain included with any premium or
01:33 - business plan simply click the link in
01:34 - description to get started also I'm
01:36 - super excited to announce that the
01:37 - community is hosting another practice
01:39 - game jam the gem will start on February
01:42 - 16 and end a week later on February the
01:45 - 23rd as always the team will be
01:47 - announced when the gem starts I
01:48 - encourage all of you to go sign up for
01:50 - the event now everything is hosted on
01:51 - itch and I'll of course have a link in
01:53 - the description to where you can join
01:55 - and read more about the event and this
01:57 - is a special event in that you are
01:58 - allowed to use any assets that you'd
02:00 - like as long as you have the permission
02:01 - of course and if you've never
02:02 - participated in a jam before I really
02:04 - cannot recommend it enough it's a great
02:06 - way to challenge yourself in a
02:08 - stress-free environment after all game
02:10 - jams are all about having fun so sign up
02:12 - now you think the thing you need
02:13 - description and with that I'm in the
02:15 - mood for a snack so let's make a health
02:17 - bar Sri Hyun unity and I've gone ahead
02:19 - and created this incredibly simple scene
02:22 - in fact all we have in here is just a
02:24 - main camera as well as an empty player
02:26 - object and on this object I've created a
02:28 - script called player that just stores
02:31 - the health of our player we'll have a
02:33 - look at this later when we want to hook
02:35 - up our health bar to the player but
02:37 - first we of course want to make the bar
02:38 - itself so let's go ahead and create some
02:41 - UI for our health bar to do that we'll
02:43 - right click in the hierarchy we'll go
02:44 - you I and I'm just gonna select image
02:47 - this is of course going to create an
02:48 - image object as well as a canvas that is
02:51 - going to store all of our UI let's
02:53 - select this canvas and hit F and this is
02:55 - going to show us our entire canvas that
02:57 - we can work within I'm then going to
02:59 - select the image here and drag it to the
03:01 - center of our canvas remember when
03:04 - working with UI you always want to use
03:05 - the rect tool up here the shortcut for
03:08 - that is T now you could of course go
03:10 - ahead and create your health bar just
03:11 - using square shapes like this but to
03:14 - make things fancier I've actually gone
03:16 - ahead and created a few sprites I've
03:18 - created this bar sprite as well as a
03:20 - heart so for the image here I'm gonna
03:22 - take the bar sprite and drag it into
03:24 - this source image slot and then to avoid
03:27 - any weird stretching I'm gonna hit set
03:29 - native size there you go
03:31 - we now have the pace of our health bar
03:32 - you can of course create your own
03:34 - sprites if you'd like or you can just
03:35 - download the ones that I'm using here
03:37 - that will be a link to the entire
03:38 - project in the description and then
03:40 - gonna rename this to border and that's
03:43 - gonna be the border of our health bar
03:44 - and we're probably going to have quite a
03:46 - few UI elements inside of this health
03:48 - bar so let's go ahead and create an
03:49 - empty object under our canvas here let's
03:52 - just right click and hit create empty
03:53 - let's rename this to health bar and
03:56 - let's just make it these same size as
03:58 - our health bar sprite here there we go
04:00 - this way we can take our border and
04:02 - parent it to the health bar
04:04 - so now we can I have all our different
04:05 - sprites inside of this health bar object
04:07 - let's also go ahead and add the fill for
04:10 - health bars that's right click on the
04:11 - health bar go UI and create another
04:13 - image and for this one we don't need a
04:15 - sprite since we just want it to be a
04:17 - solid color but I'm gonna go ahead and
04:19 - put it above our borders so that it
04:20 - shows underneath and up here in the rect
04:22 - transform we can see the different
04:24 - anchor presets I'm going to
04:26 - down old and click on the bottom right
04:28 - one this is going to scale the image to
04:30 - fill our entire health bar and it's also
04:33 - going to set the anchor points around
04:34 - this health bar so that if we change the
04:36 - scale of our health bar we change the
04:38 - scale of our fill as well let's then go
04:40 - ahead and rename this to Phil let's also
04:43 - select our health bar and just scale it
04:45 - to fit inside of our border to make sure
04:48 - that none of the Phil shows outside and
04:50 - the cool thing about this setup here is
04:52 - we can take our Phil now and simply
04:54 - scale it here in order to create the
04:57 - illusion of our health going up and down
04:59 - and an even cooler thing is that the UI
05:01 - system actually has a component that
05:03 - makes this incredibly easy to control so
05:06 - let's select our health bar here and
05:07 - let's go ahead and add a slider
05:09 - component I'm gonna make this non
05:12 - intractable I'm gonna set the transition
05:13 - to none navigation to none and this way
05:16 - we make sure that it's just a completely
05:18 - static object and that we can interact
05:20 - with it within the game however if we
05:22 - now take our Phil here and drag it into
05:24 - the Phil rect we can see that we get
05:27 - this value slider and just by adjusting
05:29 - this slider we can make our health bar
05:31 - go up and down really really cool now of
05:35 - course right now if we resize our health
05:37 - bar our border just stays the same so
05:39 - let's go ahead and select our border
05:41 - here and again let's go to the anger
05:42 - presets here and let's click in the
05:44 - bottom right corner this time without
05:46 - holding down alt and this is simply
05:48 - going to set the anger without adjusting
05:50 - the scale of the UI so now if we scale
05:52 - our health bar we scale everything
05:54 - accordingly
05:56 - awesome now we can of course also make
05:58 - it a bit prettier let's go ahead and add
05:59 - a heart so that's right click go UI
06:02 - image and I'm gonna drag in the heart
06:04 - sprite here and again hit set native
06:06 - size let's take this heart here and drag
06:08 - it to the left somewhere around there
06:11 - looks pretty good let's rename it to
06:13 - heart and let's set the anchor for this
06:15 - to be on the left hand side this way if
06:18 - we go ahead and scale our health bar we
06:20 - can see that the heart stays on the left
06:22 - hand side finally we can of course set a
06:24 - color for our Phil here so if we select
06:26 - that we can change the color and I'm
06:28 - just gonna use the color picker here to
06:30 - get the same color as with the heart and
06:32 - there we go we now have something that
06:34 - looks and acts like a health bar awesome
06:38 - of course the next thing that we need to
06:39 - do is
06:40 - some code that is going to adjust this
06:41 - health bar on the fly and the cool thing
06:44 - about this slider here is that you can
06:46 - see we have a minimum and maximum value
06:48 - of course most games we want the minimum
06:50 - amount of health to be cereal
06:52 - so we can just leave that but we can
06:53 - actually set the max value here to the
06:56 - max amount of health that we want let's
06:58 - say for example our player has a maximum
07:00 - of 20 health now we can use our value
07:02 - slider to go between 20 and zero really
07:06 - cool or if our health only uses whole
07:08 - numbers we can set this to something
07:10 - like 4 just to demonstrate and check out
07:12 - this whole numbers here and now our
07:15 - health is going to go in increments
07:16 - really cool so what we can do is
07:19 - actually create a really simple script
07:20 - here that is just going to adjust this
07:22 - slider so let's hit add component and
07:24 - let's create a health bar script let's
07:27 - say create an ad and open it up in
07:28 - Visual Studio now the first thing that
07:30 - we want to do when working with any kind
07:31 - of UI is to import the right namespace
07:34 - so up here we'll be using unity engine
07:36 - dot UI what this allows us to do is
07:39 - create a variable that is going to store
07:41 - our slider so we'll create a public
07:43 - slider and let's just call it slider and
07:45 - now with reference to this slider we can
07:47 - create a function for setting the health
07:50 - on that slider so let's remove these two
07:52 - two fault functions and that's instead
07:54 - create a public void set health where
07:58 - we're going to feed it an integer with
07:59 - the amount of health and all we need to
08:01 - do here is go slider dot value equals
08:04 - the health passed n it's really that
08:07 - simple so now whenever we call this set
08:09 - health function our script is going to
08:10 - find this slider here that we drag in so
08:13 - it's going to find this slider and
08:14 - adjust the value here to the value that
08:17 - we set really cool of course we also
08:19 - want a function for setting our Max
08:21 - value so that we don't have to do that
08:23 - inside of the inspector every time and
08:25 - doing that is actually just as easy
08:28 - we'll just create another public void
08:29 - and remember we are making these
08:31 - functions public so that we can call
08:33 - them from other scripts and this one is
08:35 - going to be called set max health again
08:38 - it's going to take in an amount of
08:39 - health and this time we can say slider
08:41 - dot max value equals health and also
08:45 - let's set the value to health as well to
08:48 - make sure that our slider starts at the
08:50 - maximum amount of health and that's
08:51 - actually all of the code we
08:53 - need with this our health bar is now
08:55 - ready to be implemented into any kind of
08:58 - script that you already have you could
09:00 - put this on a player you could put this
09:01 - on enemies you can even put this on
09:04 - buildings I've just gone ahead and
09:06 - created this very simple player script
09:07 - here and if you open it up we can see
09:09 - that it's really simple all we have in
09:12 - here is a max health by default this is
09:15 - 100 and a current health when we start
09:18 - the game our current health is going to
09:20 - be set to max health then every time I
09:22 - press the spacebar we're gonna take a
09:24 - bit of damage I've just set it to 20
09:27 - damage just to test this out and when
09:29 - taking damage we simply subtract the
09:31 - damage from our current health that's
09:33 - all this script is currently doing so to
09:35 - add our health bar in here we'll just
09:37 - create a reference to it so we'll create
09:39 - a public health bar let's just call it
09:42 - health bar and then when we start when
09:44 - we set our current health to our max
09:46 - health
09:46 - let's also grow health bar that set max
09:49 - health and pass in our max health so
09:52 - we've now set up our health bar all we
09:53 - need to do is update it every time we
09:55 - take damage
09:56 - so inside of our take damage function we
09:58 - can go health bar dot set health to our
10:02 - current health and that's it that's
10:04 - actually all we need to do three lines
10:06 - of code and we've integrated our health
10:08 - bar if we save this now and go into
10:10 - unity we can see that we have this
10:12 - health bar slot and we just need to drag
10:14 - our health bar into this slot and now if
10:18 - we play the game every time we press the
10:20 - space bar we can see our current health
10:22 - being reduced in our player script and
10:24 - we can see our health bar indeed going
10:26 - down awesome of course there are a bunch
10:29 - of things that you can do to this to
10:30 - make it more exciting you could for
10:32 - example use a gradient to change the
10:34 - color of the fill depending on how much
10:37 - health we have left so in the beginning
10:39 - our health bar could be green then it
10:41 - could transition to yellow and then when
10:43 - we don't have that much health left we
10:45 - could make it red and doing this is
10:47 - actually really really simple we just
10:48 - select our health bar go into our health
10:50 - bar script and here we can use a type of
10:53 - variable called a gradient so to create
10:55 - a public gradient and let's just call it
10:57 - gradient now let me just save this and
10:59 - show you what it looks like inside of
11:01 - unity as you can see we get this
11:03 - gradient here and if we click it it
11:05 - opens up a GUI
11:07 - and editor this is all says to choose
11:09 - different colors at different points to
11:12 - the right here is going to be the
11:13 - beginning of our health bar where we are
11:15 - at full health and to the left here is
11:17 - going to be when we are at zero health
11:18 - let's take the first one here and let's
11:21 - change the color of this to some kind of
11:23 - bright green we can then set the last
11:25 - color here to some kind of red let's
11:28 - just color pick the one that we already
11:29 - have and in the middle here let's do
11:31 - some kind of yellow and as you can see
11:34 - right now we're kind of blending from
11:36 - one color to the other and this might be
11:38 - something you want however in my case I
11:41 - think it looks a bit better if we make
11:42 - these transitions fixed so we go
11:44 - immediately from one color to the other
11:46 - to do that all we need to do is change
11:48 - the mode from blend to fixed and right
11:51 - away if we go ahead and readjust these
11:53 - points here we can see that we can go
11:55 - harshly from one color to the other I
11:58 - think something like that looks pretty
11:59 - good so if we now close this down and go
12:02 - inside of our script we can get a color
12:05 - from our gradient at a specific point we
12:08 - do this using the evaluate function so
12:10 - if I go in here under our max health and
12:12 - go gradient dot evaluate here we can
12:15 - give it a value from zero to one so one
12:19 - is all the way to the right on our
12:21 - gradient and zero is all the way to the
12:23 - left so if we put in one here we're
12:26 - going to get a completely green color
12:28 - which is exactly what we want when our
12:30 - health is at max so at this point this
12:33 - is the color that we want of course we
12:35 - need to set our fill image color to this
12:38 - color so to do that we just need a
12:40 - reference to it so we'll create a public
12:42 - image and let's just call it fill this
12:44 - waving go fill dot color equals the
12:48 - color that we get at the very end of our
12:50 - gradient then whenever we take damage
12:52 - and want to set our health a new we can
12:54 - go fill dart color equals gradient
12:58 - evaluate and this time we cannot say
13:00 - what color we want beforehand it's going
13:02 - to depend on how much health we have
13:04 - left in other words it's going to depend
13:06 - on our value here but our value might go
13:09 - from zero to a hundred or is zero to
13:11 - twenty and the gradient goes from zero
13:14 - to one so instead of just using slider
13:16 - dot value we want to use slider dot
13:19 - normalized value which is the exact same
13:21 - thing but we've just changed it to go
13:23 - between zero and one and if we now save
13:26 - this and go into unity and make sure to
13:28 - drag in our fill image and hit play as
13:31 - we can see our health bar starts our
13:33 - green our max value is a hundred our
13:35 - current value is a hundred if I click
13:37 - space it's going to go to 80 then to
13:40 - sixty and it changes to yellow then down
13:42 - to 40 then down to 20 and it's now red
13:44 - and finally going down to zero
13:46 - awesome so our health bar is now working
13:48 - and we can change the colors to anything
13:51 - that we'd like so the last thing that we
13:53 - need to do is of course place our health
13:54 - bar in our game so to show you how to do
13:57 - that I've gone ahead and created this
13:58 - symbol symbol example game and all I've
14:01 - put in here is just a play which is just
14:04 - a cube with a movement script a ground
14:06 - object which is also just a cube as well
14:08 - as a main camera that is placed on a
14:10 - rotator so that it's slowly going to
14:12 - rotate around our scene as you can see
14:14 - this is all that is in here now let's go
14:17 - ahead and add a health bar here and the
14:19 - first way and definitely the easiest way
14:21 - is just placing our health bar on the
14:24 - HUD so that it's kind of glued to the
14:26 - camera to do this we just take the
14:28 - health bar that we just created so that
14:30 - was inside of this simple scene here I'm
14:32 - going to select the entire canvas hit
14:34 - ctrl C go into our exam again and hit
14:37 - control V and there you go you can see
14:40 - it just pasted this huge canvas here if
14:42 - we hit F and go into 2d mode we can see
14:45 - how large it is and it's just gone ahead
14:47 - and simply place that on top of our
14:49 - screen this of course allows us to take
14:51 - our health bar and place it any way that
14:53 - we'd like we could for example move it
14:55 - to the top left corner here and maybe
14:57 - also angered to the top left so that if
14:59 - we go ahead and resize our game view
15:02 - it's gonna stay up there and now when we
15:04 - hit play it's just stuck up there it's
15:07 - not reacting to anything in our scene
15:09 - and of course to hook this up to our
15:11 - player we would simply go player drag in
15:13 - all play a script and simply reference
15:16 - our health bar that's all we need to do
15:18 - and now whenever our player takes damage
15:20 - we can see our health bar updating
15:22 - awesome but how do we go ahead and place
15:25 - this inside of our world if we don't
15:28 - want it to just be glued on top of our
15:29 - screen but maybe follow around our
15:31 - player well to do that
15:33 - select the canvas and we'll change the
15:35 - render mode from screen space to world
15:37 - space this now makes this canvas here a
15:40 - physical object that we can move around
15:41 - however it's still incredibly large so
15:45 - let's go ahead and scale it down let's
15:47 - set the scale here to point zero one by
15:50 - point zero one five point zero one let's
15:52 - also set the position to zero by zero
15:54 - and if we now hit F to focus on it we
15:57 - can see that it's a bit more reasonable
15:59 - in size in fact let's go ahead and just
16:02 - move it up here let's take our health
16:04 - bar and let's snap it to the center so
16:07 - I'm gonna hold down alt and click on the
16:08 - center anchor preset we can then take
16:11 - the entire canvas and kind of resize it
16:14 - to just fit our health bar there we go
16:16 - let's go out of 2d mode and let's now
16:18 - place this on top of our player let's
16:21 - just drag it under our player in order
16:23 - to make it move around together with our
16:25 - player let's drag it a tiny bit down and
16:27 - just make sure that it's in the place
16:29 - where we want it somewhere around here
16:32 - looks pretty good if we have a look in
16:34 - the game view we can see that it's
16:35 - definitely working of course right now
16:37 - when we hit play we can see that there's
16:39 - a pretty obvious problem with this and
16:42 - that is the health bar is currently not
16:44 - rotating to point towards the camera
16:46 - instead it's always just pointing in the
16:49 - same direction this is not something we
16:51 - want we want to always be able to
16:53 - clearly see our health bar to do this we
16:55 - will turn it into something called a
16:57 - billboard a billboard is something that
17:00 - always points towards the camera so
17:02 - let's turn our canvas into a billboard
17:03 - with a quick and easy script let's zoom
17:06 - in select our canvas hit add component
17:08 - and let's create a billboard script
17:10 - let's say create an ad and open it up in
17:12 - visual studio so all we need to add in
17:15 - here is of course a reference to our
17:17 - camera so we'll create a public
17:19 - transform and let's just call it cam and
17:22 - we can go ahead and remove the start
17:24 - function here because if we want this
17:26 - object to point to what's our camera we
17:28 - probably want to make sure that we
17:29 - update it to do that once every frame
17:32 - however using regular update can
17:34 - actually cause some weird behavior here
17:36 - since if our camera is moving inside of
17:38 - the update function we can have some odd
17:40 - situations where our camera moves then
17:43 - we point towards it and other times we
17:45 - point towards it and then
17:46 - camera moves and this can cause some
17:49 - jitter so instead instead of using
17:51 - regular update we're going to use
17:53 - something called late update this is
17:55 - always called after the regular update
17:57 - function and so it's perfect because our
17:59 - camera does all its movement and then we
18:01 - point to what's it and doing that is
18:03 - actually really easy we just go
18:05 - transform that look at and this allows
18:08 - us to point this object towards a target
18:10 - now we could just put camera dot
18:12 - position in here and this is definitely
18:14 - going to point this object towards our
18:16 - camera however that's actually not how a
18:19 - proper billboard works what we want to
18:22 - do is make sure that we point the
18:23 - billboard in the same direction as our
18:26 - camera so to do that we can use our
18:29 - current transformed up position and we
18:31 - can then add on to that camera dot
18:34 - forward in other words we'll take our
18:36 - current position and we'll go one unit
18:39 - in the direction that the camera is
18:40 - currently facing and that is going to be
18:42 - the target that we'll look for this is a
18:45 - standard billboard script it can be a
18:46 - bit hard to wrap your head around in the
18:48 - beginning but for now just follow me if
18:50 - we save this and go into unity we can go
18:53 - ahead and hook up our camera some simply
18:54 - going to drag in my main camera here and
18:56 - with that we can see that our UI
18:59 - immediately snaps to point towards the
19:02 - camera really really cool and that looks
19:04 - much much better in fact if I go into
19:06 - the scene view here we can see that
19:08 - happening as our main camera rotates
19:11 - around the scene a UI element always
19:14 - rotates to face that direction awesome
19:17 - now if you're using SRP in my case I'm
19:20 - running the Universal render pipeline
19:21 - the UI might not look super crisp like
19:24 - this this is a weird quirk I've found
19:26 - with using UI world-scale
19:28 - canvas together with SRP the best
19:31 - solution to this that I found is to find
19:34 - your rendering pipeline asset so by
19:35 - default this is under settings and I'm
19:37 - using the universal RP high quality and
19:40 - then increase the render scale we can do
19:42 - this on the quality and here's a slider
19:44 - called render scale and if you have a
19:46 - look at the UI as I go ahead and
19:48 - increase this towards 2 we can see that
19:50 - it becomes more and more crisp what this
19:52 - effectively does is that it allows us to
19:55 - render at a higher quality then down
19:57 - scaled to fit the screen size this will
19:59 - definitely cost a lot
20:00 - in terms of graphics performance
20:02 - unfortunately it's the only workaround I
20:04 - found so far but if anyone has a better
20:06 - trick definitely let us know in the
20:08 - comments and with that our health bar
20:11 - should be working so if we now go ahead
20:12 - and play our game we can see that as I
20:14 - move around the player our health bar
20:16 - follows we can see that I can go ahead
20:17 - and decrease it at any time and that it
20:20 - always billboards to point towards our
20:22 - camera that's pretty much it for this
20:24 - video if you enjoyed it make sure to
20:25 - subscribe and bring that notification
20:27 - bell so you don't miss the next one also
20:29 - don't forget to check out hosting up for
20:30 - fast and solid hosting solutions simply
20:32 - click the link in the description to get
20:34 - started and make sure to sign up for the
20:35 - brackets Jam just click the link in the
20:37 - description to join all the other
20:38 - developers and have lots of fun on that
20:41 - thanks watching and I will see you in
20:42 - the next video thanks of the awesome
20:44 - patreon supporters who donated in
20:46 - January and a special thanks to lost to
20:48 - violence dog forever see j69
20:50 - prisoner by Megan Frazier Tara Versace
20:52 - Lila set Jim Shu Bob jazz Daniel die
20:55 - sonic marc-antoine Gerard no kirisaki
20:57 - jacob sanford michael korvac gregory
21:00 - pierce the mighty Zeus alison appears
21:02 - Gidget and Erasmus you guys Rock