00:00 - thanks for tuning in at
00:02 - braies hello everyone and welcome to
00:04 - this video on creating a multiplayer Fs
00:06 - in unity today we're going to be
00:07 - creating some UI for our game more
00:10 - specifically we'll be creating a health
00:11 - bar and some kind of way to display
00:13 - ammunition that's what most of you guys
00:15 - said you wanted to see in the last video
00:17 - I also have plans for some weapon
00:19 - switching and a lot of you guys
00:20 - suggested some kind of sniper with a
00:23 - scoping in mechanic I think that sounds
00:25 - really fun but uh I won't be doing it
00:27 - today today it's going to be UI but
00:30 - definitely want to do it uh soon so
00:32 - without further Ado let's just jump
00:33 - right into it so as you can see I'm here
00:34 - in unity and what I want to begin with
00:36 - is just taking our kill feed and kill
00:38 - feed item scripts and dragging them
00:39 - under the scripts folder to organize
00:41 - things a bit better now let's go under
00:43 - our prefabs folder and find the prefab
00:46 - called player UI and drag that into our
00:48 - hierarchy as you can see I'm in our main
00:50 - level one scene so that we can see our
00:52 - player UI working on top of our regular
00:54 - level let's now switch into 2D mode and
00:57 - focus on this element right here called
00:59 - thruster
01:00 - remember we created this in a previous
01:02 - video and basically it's just a black
01:04 - image with with a bit of transparency
01:07 - and on top of that we have a Thruster
01:08 - fuel fill which is a tinted image that
01:12 - we then scale up and down depending on
01:14 - our Thruster amount and then we have
01:16 - this image here which is basically just
01:18 - an icon which we're going to rename it
01:20 - to so what I thought we would do is
01:23 - maybe just uh scale this up a bit so
01:25 - let's change the width to something like
01:27 - 45 and then actually use that to create
01:30 - our uh health bar so in case you want to
01:33 - duplicate all the settings you can go
01:35 - back and watch the previous video where
01:37 - we implemented it um or you could just
01:39 - have a look at how things are set up
01:41 - here here and here and you can just
01:45 - pause the video to uh duplicate
01:47 - everything so now let's uh duplicate
01:49 - this by hitting control D or command D
01:51 - if you're on the Mac move it over a tiny
01:53 - bit and we only have a few things that
01:55 - we need to change on this object first
01:57 - of all of course we need to rename it to
01:59 - something like health bar and we can
02:02 - just leave the background image then we
02:04 - want this to not be thust a fuel fill
02:06 - but health bar fill and let's definitely
02:09 - tint this in a reddish color something
02:13 - like that and let's also swap out the
02:15 - icon so the icon that we using right now
02:18 - is what uh the icon called button
02:20 - accelerator op Sprite and we got this
02:22 - from the standard assets if you import
02:24 - the crossplatform input on the Sprites
02:27 - you can see they have some default icons
02:30 - but I thought most people probably or at
02:32 - least some people aren't using the
02:33 - standard assets so I thought I would
02:35 - provide this for you in an easy download
02:37 - so if you go in the description there's
02:39 - a link to where you can download the
02:40 - multiplayer FPS assets and if you double
02:43 - click the folder that you get when you
02:45 - download that and go under GUI you can
02:47 - see I've put in three icons here the
02:49 - normal Thruster fuel icon from the
02:51 - standard assets and also a health icon
02:53 - and an ammo icon in case you want to use
02:56 - those we'll be implementing those in
02:57 - just a second but let's just take these
02:59 - three icons so select all of them and
03:02 - drag those into the kui folder that we
03:04 - have inside of unity now let's select
03:07 - those three inside of unity and change
03:09 - the texture type to Sprite and let's
03:11 - also change the format to true color to
03:13 - make sure that Unity doesn't do any
03:14 - weird compression on us now let's find
03:17 - our Thruster fuel icon and let's just
03:20 - change that to the Thruster fuel icon
03:22 - that we just uh that we just imported
03:25 - into Unity it's not going to change
03:27 - anything in the scene but it is going to
03:29 - make it neater because it's better to
03:30 - get it from there than in some R sub
03:33 - folder under the standard assets let's
03:35 - also find our health bar icon here and
03:37 - drag in the health icon we just imported
03:40 - so that should really make things look
03:42 - quite decent and uh the only thing
03:44 - that's left to do with this health bar
03:46 - now is hook it up via script to the
03:48 - actual he Health amount that we have so
03:51 - if we find our player UI object you can
03:53 - see we also have a player UI script
03:56 - let's double click that to open it up in
03:57 - visual studio and have a look at how we
03:59 - do things using the Thruster fuel
04:01 - because we're going to be doing things
04:03 - almost the exact same way so I can see I
04:06 - have a bunch of things open here and I'm
04:08 - just going to close all of it uh except
04:10 - for whoa and we even have two versions
04:12 - of the player UI let's try that one more
04:15 - time there we go so as you can see we
04:17 - have a reference to our Thruster fuel
04:19 - fill object and we want to create one
04:21 - for a health bar as well so let's create
04:23 - a serialized field of type Rec transform
04:26 - because we're going to be scaling it and
04:28 - let's call this one our health bar
04:31 - fill and um if we scroll down a bit you
04:34 - can see that we are changing this inside
04:36 - of the update method and that's because
04:38 - we want to do this every frame so that
04:40 - we can update our UI as soon as
04:41 - something happens and we using the
04:44 - function called set fuel amount which we
04:46 - declare down here so let's just create a
04:48 - new function that is just a symbol uh
04:51 - whoops not void called set Health
04:54 - amount and it's going to take in a value
04:57 - between zero and one representing our
04:59 - total amount of or our current amount of
05:01 - Health compared to our total so if we
05:04 - just input one here that's going to be
05:06 - 100% health and if we scroll down we can
05:10 - now implement this function so let's go
05:11 - void set Health amount it's going to
05:16 - take in a float with the amount just
05:18 - like we do up here and it's going to set
05:21 - health bar fill. local
05:24 - scale equal to a new Vector
05:27 - 3 with uh a scale of 1 on the X the
05:31 - amount that we passed in on the Y and
05:33 - one on the Z so that's going to make
05:35 - sure that we scale it correctly so now
05:38 - all we need to do is get a reference to
05:40 - our current amount of health and pass it
05:42 - in here except in order to do that we
05:46 - need a reference to our player um
05:48 - component sitting on the player object
05:50 - and currently we only have a reference
05:52 - to a player controller the way we get
05:54 - this reference is by implementing this
05:56 - function called set controller that we
05:58 - then call through the player setup
06:00 - script so when the player is set up it's
06:02 - going to call the set controller pass in
06:04 - the player controller and we're going to
06:05 - store it in this uh private variable I
06:08 - want to change how this works a little
06:10 - bit let's begin by creating a private
06:12 - player here and calling it
06:14 - player then instead of having this be
06:16 - set controller let's have this be set
06:19 - player and it's going to be uh pass in a
06:21 - player which is going to be called
06:24 - underscore player and then we can set
06:26 - player equal toore player so the uh the
06:30 - private player component or the P
06:32 - private player variable is going to be
06:34 - equal to the player that is passed in
06:37 - then we can get a reference to the
06:38 - controller by simply saying controller
06:41 - equals player. getet component because
06:44 - remember all of these components are
06:46 - sitting on the same object and so we can
06:47 - just do do get component of one of them
06:50 - to get one of the others and we'll get
06:52 - the one called player controller you
06:54 - could just have easily have kept the
06:56 - controller thing and then just have
06:58 - gotten the player component the same way
07:00 - but I think this is cleaner because the
07:02 - player component is kind of Central and
07:04 - the get the player controller is one of
07:07 - those spin-off components that do a tiny
07:10 - thing the play player itself is where we
07:12 - handle stuff like Health killing dying
07:15 - uh that that sort of essential stuff so
07:19 - what we can do now is simply make sure
07:20 - that we also change the name of this and
07:23 - the uh that we press in the right
07:25 - component um in the player setup script
07:28 - so if we go into Unity now it's going to
07:30 - throw an error for the player setup that
07:32 - we can then just double click on and it
07:34 - will take us to the right line which is
07:36 - line 51 so in here we want to say set
07:39 - player instead of set player controller
07:41 - and we want to use get component player
07:43 - instead of player controller and that
07:45 - should actually be everything so um now
07:49 - that we have that working we should be
07:51 - able to go into our player UI and go
07:53 - down here and reference the player and
07:56 - the health variable does sit under the
07:59 - player but it's currently private so we
08:01 - can't just do health and we don't want
08:03 - to because our health is a currently a
08:05 - value between zero and 100 and we want a
08:08 - value between 0 and one and we want to
08:10 - have that even though we change our
08:12 - maximum health say we set our maximum
08:14 - health to 250 so we can't just divide by
08:17 - 100 we need to divide by our maximum
08:19 - health in order to get a value between 0
08:21 - and one so inside of our player let's
08:24 - create a little helper method for doing
08:26 - exactly that so let's uh find our script
08:29 - here called player and let's just jump
08:32 - in here and create a tiny little method
08:34 - and this is just going to be a public
08:35 - float because it's going to return a
08:37 - float and we're going to call it get
08:39 - health
08:41 - percentage and of course um this is not
08:44 - percentage this is a between Z what you
08:46 - get what I'm saying and what we'll do is
08:48 - just return current health divided by
08:51 - maximum health and we'll need to um of
08:54 - course cast this into a float so that we
08:57 - don't get some weird integer we want to
09:00 - have all the decimal places that we can
09:01 - get so inside of player UI we can now go
09:05 - player. getet um get health
09:10 - percentage and there we go now our
09:13 - health bar should actually be working of
09:15 - course we can't really test this on the
09:17 - uh computer unless we make a build and
09:19 - damage the player or Implement some kind
09:22 - of test function so what I think we
09:24 - should do is just continue on create the
09:26 - ammunition as well and then we can see
09:28 - it all working at the end so now what we
09:30 - want to do is uh Implement a tiny bit of
09:33 - UI in order to get the ammunition
09:35 - working and I want to begin by going
09:37 - under the health bar and thrust of fuel
09:39 - selecting both icons and kind of scaling
09:41 - them up so let's set our width to 25 and
09:44 - do the same thing with our height just
09:46 - to make them a tiny bit bigger which
09:48 - looks a lot better so what I want to do
09:50 - now is right click on our player UI go
09:53 - under UI and then select um panel in
09:55 - order to create s kind of a faded
09:57 - background for uh for displaying our
10:00 - ammunition let's also make sure that
10:02 - this is anchored to the bottom left
10:04 - corner and let's drag it over here
10:07 - somewhere around there I think that
10:10 - looks pretty good let's drag this down a
10:12 - bit to say there and let's also change
10:17 - the color here to a black and we can
10:19 - maybe fade it out a tiny bit more
10:22 - something like that looks fine inside
10:23 - the game view actually I want it to be
10:26 - more clear something like that what we
10:29 - want to do here is of course change the
10:31 - name to
10:32 - ammunition and we'll definitely want to
10:34 - throw in an icon so let's just duplicate
10:36 - one of the icons from over here drag it
10:39 - under the ammunition object and simply
10:42 - move this over on the
10:44 - X something like that looks pretty good
10:47 - I think we can also maybe scale this
10:48 - down a tiny bit there we go and let's
10:51 - snap this to the left and not to the
10:54 - bottom whoops there we go awesome so I
10:58 - think that already looks quite decent of
11:00 - course we need to change the icon over
11:02 - here so let's go under and drag in
11:05 - the ammo icon instead looks just fine
11:08 - and um maybe even move this down a tiny
11:11 - bit more U maybe move this up a bit
11:14 - something like that I think uh that
11:17 - looks just fine and then what we can do
11:19 - is just rename this to Icon remove the
11:21 - one there let's also go UI and then text
11:25 - and we want this to be anchored to the
11:27 - right hand side we want definitely scale
11:30 - it up let's also move it over here let's
11:33 - make it white so we can actually see it
11:35 - on the background change the font size
11:36 - to something like 24 and change the text
11:39 - to just say 20 and then what we'll do is
11:42 - we'll snap the text to the right and
11:44 - we'll Center it on the vertical axis and
11:47 - then we'll just move it over here to
11:49 - create a tiny bit of
11:50 - padding uh around it and in the game
11:53 - view you can see that looking just fine
11:55 - and then we can take our ammunition and
11:57 - maybe just move it in there's no reason
11:59 - uh for it to be that wide and we'll
12:01 - rename this one to ammo text so we can
12:03 - easily see what what it's about when we
12:05 - reference it in the inspector so I think
12:09 - the UI looks good so let's jump inside
12:11 - of our player UI and actually update
12:14 - this through script as well so in order
12:16 - to do that we need to create a new
12:18 - function so we'll do set our ammo
12:22 - amount and we'll pass in let's just pass
12:26 - in 204 now let's implement the function
12:28 - that's going to be void set ammo amount
12:33 - and it's going to be an integer and
12:35 - we'll do underscore amount the other
12:37 - ones were floats but this is going to be
12:39 - just a whole number uh uh showing the
12:42 - amount of bullets that we have left and
12:44 - all we want to do is go uh and add a
12:47 - reference of course to our text object
12:49 - so we'll do a serialized field um of
12:52 - type text and whenever we do something
12:54 - with text we need to be using
12:56 - unityengine.ui
12:59 - so we'll do a text here and we'll call
13:02 - this one I'll say ammo text then down
13:05 - here we do ammo text. text equals the
13:10 - amount and we need to do two string here
13:12 - uh because we are converting this into a
13:14 - string for our
13:16 - text awesome and then all we need to do
13:18 - up here is of course get a reference to
13:20 - a current amount of ammunition and we in
13:23 - order to do that we need a reference to
13:24 - our current gun which sits or which our
13:27 - weapon manager knows what is so let's do
13:31 - up here another private variable for our
13:34 - weapon manager not weapon Graphics
13:36 - weapon manager and we'll just call this
13:39 - one weapon
13:40 - manager and we'll set weapon manager
13:43 - equal to player. getet component weapon
13:47 - manager not weapon Graphics weapon
13:50 - manager there we go the exact same way
13:52 - that we uh set the controller and then
13:56 - here we can go weapon manager
13:59 - dot current weapon get current weapon
14:03 - there we go Dot and then bullets and you
14:06 - can also easily display the maximum
14:08 - amount of bullets but just using that
14:10 - instead but for now we're going to be
14:12 - displaying only the amount of bullets
14:14 - that we actually have left if you want
14:16 - to have multiple magazines that could be
14:18 - swapped out and then you can run out uh
14:20 - you can display that here as well it's
14:22 - super easy to extend and uh it should be
14:25 - working right away so what we can do now
14:28 - is just reference our UI element so
14:30 - let's drag in our health bar fill let's
14:32 - drag in our ammo text and let's hit
14:35 - apply on this and remove the player UI
14:38 - from the scene and what we do then is go
14:41 - and hit not hit play Let's just jump
14:44 - into the lobby here see if it works on
14:46 - the local client and if everything is
14:48 - looking good there we can make a build
14:50 - so let's do a test room and as you can
14:53 - see we won't see the health updating but
14:56 - we can see that when I now shoot our
14:58 - ammunition does update one small issue
15:01 - with this and this is something that is
15:03 - not wrong with our UI but with the way
15:06 - we implemented reloading is if I now
15:08 - press three times 1 2 3 you can see it
15:12 - says zero but it doesn't reload until we
15:15 - then press again that's really annoying
15:18 - so to fix this all we need to do is find
15:20 - the uh script for reloading and we do
15:23 - that under our player shoot script so
15:25 - let's double click that go under our
15:27 - update method and let's find the not uh
15:31 - the update method no let's find the
15:32 - shoot method here and you can see that
15:34 - we do check if the current amount of
15:36 - bullets is less than or equal to zero
15:38 - but we do that before we shoot and that
15:41 - means that if we have say uh one bullet
15:45 - remaining and shoot it's not going to
15:48 - reload it's just going to shoot until
15:49 - you then press again and this function
15:51 - is called and now it's going to call the
15:53 - reload method so in order to fix this
15:55 - what we want to do is simply uh do a
15:58 - small if statement down here as well
16:00 - saying if um if current weapon do
16:05 - bullets is less than or equal to zero
16:08 - well then we want to call weapon manager
16:11 - weapon manager.
16:14 - reload awesome and we can't just uh take
16:17 - this down here because then you would be
16:19 - able to shoot while reloading or if you
16:22 - uh it were to start reloading here and
16:24 - you then cancel the
16:26 - animation uh if if you're able to do
16:28 - that some some point we can't currently
16:29 - do that and then go back you would be
16:31 - able to shoot again read stuff so uh we
16:34 - need to check both places and uh that
16:36 - should actually fix that error but I am
16:38 - going to show you another one that I
16:40 - encountered right after uh recording the
16:42 - last video so let's create a room here
16:45 - and you can see now that if we hold this
16:47 - down and then click click click and then
16:49 - click it's just going to reload
16:51 - automatically so that's awesome and um
16:54 - the issue I encountered is if we just
16:56 - hold down our Mouse here it's going to
16:57 - work just fine you can see that it stops
17:00 - to reload uh but if I then force a
17:03 - Reload by hitting R we can actually
17:05 - shoot while it's reloading and that's a
17:07 - big big issue so all we need to do here
17:10 - is change a little thing that I
17:12 - completely messed up in the last video
17:15 - I'm so sorry if this has caused you
17:16 - headaches I don't normally do bugs in
17:19 - the videos but this one was a bad one so
17:21 - I don't even know what I was thinking so
17:24 - you can see here that we are checking uh
17:26 - if we're not the local player and if we
17:29 - are not then we want to return and then
17:31 - I put an ants symbol here so we if we're
17:34 - not the local player and we're not
17:37 - currently reloading then we want to
17:40 - return out of the function that doesn't
17:41 - make sense on any logical level
17:44 - whatsoever what this needs to say is if
17:46 - we're not the local player then we want
17:49 - to return or if we are reloading then we
17:53 - also want to return okay so that should
17:56 - make everything work much better so now
17:58 - when we hit play and create a room you
18:02 - can see that if I force the reload I'm
18:04 - not able to shoot until it comes back
18:07 - awesome so now things are working just
18:10 - the way that we want them to and we
18:12 - should now be able to uh create a build
18:14 - here and see this working uh inside of
18:17 - the build so let's check if our health
18:20 - is working as
18:22 - well and I do need to have a sip of
18:24 - water once in a while uh so that was
18:27 - nice um so what would do is just jump
18:29 - into the login menu here and we'll do a
18:31 - full uh play testing uh session here so
18:34 - we'll be logged in and everything we'll
18:37 - do the same thing here test 1 2 3
18:41 - 4 and in here we're going to just create
18:44 - a test room everything's working in here
18:47 - we're going to join that test room and
18:48 - that takes uh 5 Seconds normally so we
18:51 - should see that join now awesome and you
18:55 - can see both the health bar for the
18:57 - currently active player down here and
18:59 - the health bar for the other player over
19:01 - here and now what I can do is shoot this
19:04 - guy and you can see the health bar over
19:06 - there going down and when it reaches
19:08 - zero of course he's going to explode uh
19:10 - in a big fire awesome and you can see
19:13 - the same thing working here so we'll
19:15 - shoot this player and you can see the
19:17 - health is going down until he reaches
19:20 - zero in which which case he will die
19:23 - there we go awesome so that is
19:25 - everything working you can also see that
19:26 - when the player dies the UI does
19:28 - disappear so that looks really nice and
19:30 - our ammunition and everything is working
19:33 - just
19:35 - perfectly cool so that was pretty much
19:38 - all I wanted to show you in this video I
19:39 - hope you enjoyed it let me know what you
19:41 - want to see next if it's not something
19:43 - I've already mentioned that I want to do
19:45 - and yeah without further Ado thanks for
19:46 - watching and I will see you in the next
19:48 - video thanks to all the awesome patreon
19:50 - supporters who donated in October and
19:52 - ESP special thanks to Sultan elative fa
19:54 - of marifi and James Kell Hound become a
19:56 - supporter at