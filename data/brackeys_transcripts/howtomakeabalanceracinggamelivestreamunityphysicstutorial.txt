00:00 - this video is brought to you by sutan Al
00:01 - Sharif thank you so much for donating if
00:03 - you want to support Brees yourself you
00:04 - can go to patreon.com breis thanks for
00:07 - tuning in at
00:09 - braies hello everyone welcome to the
00:12 - live stream today we are going to be
00:14 - creating one of those um physics
00:16 - balancing 2D racing games uh that you
00:20 - often see on mini clip sites with uh
00:23 - small games and it's really fun thing to
00:25 - do it's been around forever and now with
00:28 - unity they've made it super easy we're
00:30 - going to be using the wheel joint 2D
00:32 - component to easily do this kind of
00:34 - spring um uh physics and um yeah so
00:38 - we're going to be doing a bit of
00:39 - scripting we're going to import a bunch
00:41 - of elements that I will make sure to
00:43 - make available for you uh through a
00:45 - GitHub download once we're done I'm
00:47 - going to upload this to YouTube along
00:49 - with the project so you can play around
00:51 - with everything yourself and um then
00:54 - we're going to be doing a lot of setup
00:56 - uh inside of uh Unity so really exciting
00:59 - and I'm just going to have a sip of coke
01:02 - here um before we get started and uh
01:05 - let's just jump right into
01:07 - it so what I want to do is uh Begin by
01:10 - creating a new project so uh the demo
01:12 - scene here we just check that out and
01:15 - you can see how this is working we have
01:16 - some uh live crates and we have this um
01:19 - bouncing card and at the end we have a
01:21 - cool looking flag which currently doeses
01:24 - nothing and then when we land on our
01:25 - head the game restarts so that's what
01:28 - we'll U be making so that's go to file
01:31 - new project and uh let's create a
01:33 - totally empty project here and let's
01:36 - place it in our projects folder wherever
01:38 - that is on your system I'm going to
01:39 - switch to 2D here and I'm going to name
01:42 - this um
01:44 - balance racing game and let's hit uh
01:48 - create project and I'm just going to
01:50 - save that and let's wait for Unity to uh
01:53 - create all of the necessary files in
01:55 - order for this to function and that
01:57 - might take a little while but it
01:59 - shouldn't be too too bad and as you can
02:01 - see I've pref prepared some different
02:03 - Graphics here I've prepared a car a
02:05 - crate a goal a map and a sky and we're
02:08 - going just going to be using those I'm
02:09 - not going to show you how to uh create
02:11 - those um it's really simple stuff all of
02:14 - it and I am again going to make this
02:16 - available to you once I um upload it to
02:18 - YouTube so you will get your hands on
02:20 - these but it's really something that you
02:21 - can just Google your way to or open
02:24 - and use uh something really simple so
02:27 - the first thing that we kind of want in
02:29 - here in our empty project is um well a
02:32 - map so let's start by uh importing our
02:35 - map here and this is a Photoshop file
02:37 - you can use pgs or jpix or whatever and
02:40 - um we'll also need a sky to have a nice
02:43 - looking background so let's take these
02:44 - two files and let's drag them inside of
02:46 - unity and wait for it to import and
02:49 - we'll select both of them and turn them
02:51 - into Sprites I can see it's already done
02:53 - that for me that's because I selected 2D
02:55 - by default just make sure you change it
02:57 - to that and um everything everything
02:59 - else looks pretty fine except our map
03:02 - here is actually pretty huge so I'm just
03:03 - going to bump up the max size and I'm
03:06 - also going to make this a true color I
03:08 - don't want any compression on this AET
03:11 - um so everything else looks good except
03:13 - I want to uh decrease the pixels per
03:15 - unit to make it bigger inside of the
03:17 - game and I also want to do that to the
03:20 - sky so I want the sky here to be really
03:22 - really big uh it's not that big in terms
03:25 - of pixels it's only 400x 225 so let's
03:28 - just increase the pixels per unit here
03:30 - to really blow it up so now we can take
03:33 - our map and we can drag it in here and
03:35 - you can see we have this huge looking
03:37 - map already and it's uh it looks quite
03:39 - fine and uh what we really just need is
03:42 - a sky behind it so let's take our Sky
03:44 - drag that in as well and you can see it
03:46 - fills up our entire main camera and we
03:49 - are going to be moving around our main
03:50 - camera so let's just make sure to parent
03:52 - our sky to the main camera as a child
03:56 - object so we can now move around our
03:57 - main camera and the sky will move with
04:00 - it that means that our sky is totally
04:02 - static but because it's so blurred out
04:04 - uh you aren't really going to notice it
04:07 - so what we can do then is just adding a
04:09 - few sorting layers here we're going to
04:11 - have one for the
04:12 - background we're going to have one for
04:15 - the default and we're going to have
04:17 - actually I don't think we're going to be
04:18 - needing anything in the foreground so
04:20 - we'll just have those two and we'll take
04:22 - our sky here and add that as the
04:25 - background layer so that just make sure
04:27 - to sort it U behind our map app so now
04:30 - we can drag in or actually let's just
04:32 - save our level here save it as something
04:34 - like main level uh it's not really
04:36 - important what you call
04:38 - it and uh now we're ready to import our
04:41 - car so um let's take our car PSD and
04:45 - drag him in as well and uh let's just
04:48 - drag him into the project panel again we
04:50 - want him to be a Sprite so in case he's
04:52 - not just uh quickly adjust uh that and I
04:56 - think he's going to be fine with the
04:57 - default settings uh one thing that you
04:59 - might might want to do I think he's a
05:01 - bit blurred out here is go in here and
05:04 - uh tuckle off um Mid Maps I'm just going
05:07 - to do that that kind of kind of makes
05:09 - him look a lot more
05:12 - crispy uh cool so we're going to need
05:15 - some wheels on this guy but first let's
05:17 - make him actually interact um in the
05:20 - physics space so let's add a component
05:22 - to him and we're going to be adding the
05:24 - rigid body to D and this is what of
05:26 - course you use whenever you want
05:28 - something to move uh using Unity spill
05:32 - in physics system also if you're going
05:34 - to be moving around objects it's a good
05:36 - idea to just add a rigid body anyway
05:38 - because Unity will be doing some
05:40 - optimizations on that object just make
05:42 - sure to then tick is kinematic so
05:44 - whenever you're dealing with uh with
05:46 - moving objects that has anything to do
05:49 - with the uh physics system you really
05:51 - want a rigid body there um so let's also
05:55 - add a box collider 2D and uh let's
05:58 - quickly adjust adust this and you might
06:00 - have a hard time seeing this so um what
06:02 - I actually can just do is just disable
06:05 - the sky so you can more clearly see the
06:07 - green bounding box here and let's edit
06:09 - this collider a lot of people just
06:11 - adjust these values but you can actually
06:13 - just hit this edit collider and then
06:15 - drag it down
06:17 - yourself so of course this is going to
06:20 - match up completely and you could use a
06:22 - polygon collider if you want something
06:24 - more precise but I've been playing so
06:26 - much around with this car and I haven't
06:28 - noticed it one bit so this is a lot more
06:30 - effective so we're just going to be
06:32 - using this we're also going to be adding
06:35 - um another box collider for uh
06:38 - triggering whenever we uh hit our our
06:41 - head into something um where we want to
06:43 - restart our game uh but right now we'll
06:46 - just uh leave that and we'll add it in a
06:48 - second instead cool so let me just have
06:51 - a look at the chat here everyone's doing
06:54 - great that's awesome where can you find
06:55 - the assets the assets are made by um by
06:58 - me just very quick quickly and they will
07:00 - be on the YouTube channel once the uh
07:02 - video goes up which is hopefully
07:05 - tomorrow uh and uh yeah is it like going
07:09 - to be like Hill Climb um I don't
07:12 - remember that game but it sounds like
07:14 - something that might overlap with this
07:16 - it's very happy wheels like it's
07:18 - probably the biggest game that overlaps
07:20 - with what we're doing here um so yeah
07:24 - awesome and yeah I will be doing a Q&A
07:26 - towards the
07:27 - end cool so um what we can do now is
07:30 - just uh try and hit play and we will see
07:32 - that our player falls down but of course
07:35 - we need him to also collide with our
07:37 - environment so first of all one thing
07:40 - that I just remembered is we want to
07:41 - bump up his orderin layer so that he's
07:43 - always on top of our um of our uh map
07:48 - here so let's go to our map and let's
07:50 - add a collider to this as well and this
07:52 - is not going to be a bug collider we
07:54 - want to go into physics 2D and find the
07:56 - polygon collider 2D and then will
08:00 - automatically generate a pretty nice
08:02 - looking polygon collider uh that fits
08:05 - our environment here so what we can then
08:08 - do is maybe just offset this a tiny bit
08:10 - because it as you can see it creates
08:13 - this uh collider in a way that leaves a
08:16 - gap between on the car and the
08:18 - environment so let's just offset this by
08:20 - something
08:22 - like. one on the Y that's going to make
08:25 - it look a lot better just like that
08:28 - that's actually pretty good
08:30 - and uh now we are ready to add some
08:31 - wheels so again I've created a wheel
08:34 - Sprite here and it's actually not in
08:37 - here but I have created it I just didn't
08:40 - remember to put it inside of this folder
08:42 - so let me just find it on my system here
08:44 - so on projects under the um racing game
08:48 - that I just uh showed you I made a wheel
08:52 - PSD here so let's just take that in
08:55 - there as well awesome so now we can drag
08:58 - this inside of our project panel and uh
09:00 - everything should line up in terms of
09:02 - scale and settings uh again one thing we
09:05 - might want to do is just disable mid
09:06 - Maps just to make it more uh crisp and
09:08 - clear and our wheel should definitely
09:12 - overlay our car so uh as the ordering
09:14 - layer we're going to be put on two here
09:17 - and we also make it want to make it a
09:19 - child of the car object and I'm going to
09:23 - move it uh to fit right around there and
09:27 - also over here and don't worry this is
09:30 - something you can very easily adjust at
09:32 - a later point and it's some definitely
09:34 - something that you should play around
09:36 - with because it has a lot of effect on
09:39 - how the game actually plays uh the
09:41 - further apart the wheels are the more
09:44 - more stable uh everything is going to
09:46 - feel uh because you're spreading out um
09:50 - all of the
09:52 - weight uh cool so yeah that looks good
09:55 - and what we can then do to the wheels is
09:57 - of course add um Circle colliders so we
10:00 - can go under physics 2D and add a circle
10:03 - collider to those we can also decrease
10:06 - the radius on that to something like 0 2
10:09 - uh and This way everything just looks a
10:11 - bit better down here as you can see and
10:13 - right now you will notice that the
10:14 - movement here is very stiff that's
10:16 - because we still haven't added um the
10:19 - actual wheel joint 2D component which is
10:22 - the magical component that will make
10:24 - everything feel awesome and fun um but
10:28 - uh for initial setup this looks just
10:30 - fine and I believe that we need to add
10:33 - rigid body uh bodies to these wheels as
10:36 - well we do so let's go on Rigid body 2D
10:39 - and let's change the mass here to
10:41 - something like 0.5 and everything else I
10:44 - believe you can just leave as is then we
10:46 - can take our car here and change the
10:48 - mass of him to let's say two just to
10:51 - make uh there's a different masses and
10:54 - right now you can see this is of course
10:55 - causing some problems because they
10:57 - aren't attached anywhere and normally
10:59 - you really shouldn't uh Nest rigid
11:01 - bodies you shouldn't have a rigid body
11:03 - where child objects has have rigid
11:06 - bodies as well but because we are going
11:07 - to be hooking this up with the component
11:10 - that kind of requires it um we do that
11:13 - cool so let me look in the chat here
11:16 - everyone
11:21 - umh
11:23 - uh yeah yeah the point of this stream is
11:26 - making a complete uh game tutorial one
11:29 - stream that's totally true I'm pretty
11:31 - much just um doing a live tutorial and
11:34 - then towards the end we'll do the Q&A so
11:36 - looking forward to that of course
11:38 - awesome so why did you add a rigid body
11:40 - at the wheels that's because it's
11:41 - required U by the component that we
11:44 - going to be using in just a moment uh
11:46 - but normally it is kind of uh bad to do
11:51 - that all right so let's just uh continue
11:53 - I'll take a sip of this so I
11:55 - don't sound like a very old person and
11:59 - we can continue so um on our car here we
12:02 - want to add two new components so let's
12:05 - do that we are going to go into physics
12:06 - 2D we're going to scroll down and find
12:09 - the wheel joint 2D and we're actually
12:12 - going to add this twice um and maybe we
12:16 - yeah let's just go ahead and add another
12:18 - one so let's just search for wheel joint
12:20 - 2D and let's set these up so uh we want
12:24 - to link each of these to our two wheels
12:26 - so let's first rename these this is
12:28 - going to be our wheel um back and this
12:31 - is going to be our wheel uncore front
12:35 - not Freud it's going to be front and
12:39 - let's drag this in so we'll have our
12:41 - back wheel and we'll have our front
12:43 - wheel and the way that we are going to
12:45 - set things up is um having the uh car
12:49 - powered by both wheels so they're go
12:51 - both going to be connected to the motor
12:53 - uh but you could easily just disable one
12:55 - of them just remove some of the code and
12:58 - uh only have it powered by the U Back
13:00 - wheel or the front wheel you can do a
13:03 - lot of stuff with this it's super easy
13:04 - to set up so what we then want to do is
13:07 - uh move the Anchor Point of these wheels
13:11 - so you can see that I can move this
13:13 - anchor over and we want this of course
13:15 - to sit at the current center of our
13:17 - wheel so that when a wheel gets out of
13:20 - position it is going to try and get back
13:23 - to that point by applying forces and um
13:27 - we want to do that with the other wheel
13:29 - as well so as you can see we can move
13:31 - this anchor too and we just want to drag
13:34 - that down here so that that again when
13:36 - it gets out of position is going to try
13:38 - and get back to that
13:40 - point cool um and then we can us play
13:44 - around with some of the values here most
13:46 - importantly is everything under
13:48 - suspension so the suspension is of
13:50 - course um what allows us to have these
13:54 - wheels act actually act as a physics
13:58 - objects instead of just being very
13:59 - static this is what uh gives this
14:02 - bouncing effect and what applies forces
14:05 - to get the wheels into position so the
14:07 - damping ratio is how much the wheels are
14:09 - actually going to um move we're not
14:11 - going to actually uh edit that that's
14:14 - fine at 7 the
14:16 - frequency is kind of how quickly they
14:19 - are going to move back to the position
14:22 - that they should be in so the frequency
14:24 - in Herz for the oscillation of the
14:26 - suspension and that sounds really hard
14:28 - to understand but let me just show you
14:30 - instead what this looks like so if we
14:32 - now hit play you can see that our car
14:36 - actually all way already rolls away as
14:38 - soon as we hit
14:41 - play so what we can do say we lower the
14:45 - frequency here set it to something like
14:47 - um .5 for both of the
14:51 - wheels that should make the spring here
14:54 - way looser so you can see here now that
14:56 - our car just totally sinks in
14:59 - and if we then increase the frequency to
15:02 - something like 10 which is a pretty
15:04 - extreme value you can see that it goes
15:07 - back up and we have this very stiff
15:09 - spring uh that uh isn't quite as bouncy
15:13 - so I think a good default value for this
15:15 - is around four uh to give kind of a nice
15:19 - bouncy effect but still have a lot of
15:21 - control because the more bouncy it is
15:23 - the harder it is to move around and um
15:26 - yeah so I think this is really good
15:29 - then what we also have is a motor and we
15:32 - can toggle this on and off by uh
15:34 - toggling the used motor and we have some
15:36 - settings for this and that's just a
15:37 - motor speed which is the speed at which
15:40 - our motor will rotate and you can see
15:41 - that is in me/ second or degrees per
15:44 - second and we also have a maximum motor
15:48 - force and this is the point where we are
15:50 - not or this is the amount of force the
15:52 - maximum force that we want to apply in
15:55 - order to try and get the mode of speed
15:58 - that we we specify up here we're just
16:00 - going to leave the maximum motor Force
16:02 - but the motor speed is what we'll be
16:04 - modifying through a script so that's
16:06 - going to depend on our user input and
16:08 - you can see right now what happens if I
16:10 - go in here and modify that motor
16:12 - speed so right now you can see that our
16:15 - car doesn't go rolling off and the
16:18 - reason why is that I've currently
16:20 - enabled the motor here and that means
16:22 - that the motor down here is trying to
16:24 - stay at a speed of zero and this is the
16:26 - back wheel if I then increase this you
16:30 - can see and that's actually backwards
16:33 - that it will try and move at that speed
16:36 - however because uh of um physics not
16:40 - always doing what you want uh the the
16:43 - car is just going to go sliding uh
16:45 - because the friction of these isn't well
16:48 - infinite it is going to just slide away
16:51 - and generate some heat down here but
16:53 - Unity doesn't include that so what we
16:55 - can also do is hit play and do a
16:58 - negative motor speed here which is going
17:00 - to drive us
17:02 - forwards so you can see as I decrease
17:05 - the motor speed here it's going to make
17:06 - a forwards movement and you can see what
17:09 - that does awesome so this is why we are
17:11 - going to be toggling the motor on and
17:13 - off uh depending on whether or not we
17:15 - want to move and if we want to move then
17:19 - we are going to toggle it on and adjust
17:21 - the motor speed uh to whatever speed we
17:25 - determine and also uh to uh fit the dire
17:28 - direction that we want the player to
17:29 - drive in so that's what we're going to
17:32 - be making now so in order to do this
17:34 - let's create a component on our car here
17:37 - called something like car controller
17:39 - let's just create that as a c script and
17:42 - let's double click this to open it up in
17:44 - visual studio and again I'm going to
17:46 - have a sip of
17:49 - code ah lovely not sponsored by the
17:53 - way and let me have a look at the
17:57 - chat everything things looking good
18:00 - awesome uh when's the next uh
18:02 - multiplayer FPS video coming out when I
18:04 - make one I haven't actually prepared the
18:05 - next video yet there's a tower defense
18:08 - hopefully later today this one is going
18:10 - to come out hopefully tomorrow and I
18:12 - will have a look at the multiplayer FPS
18:14 - but um I have something larger that I'm
18:17 - working on that is kind of taking time
18:19 - away from the multiplayer FPS series I'm
18:20 - sorry it will come back uh in and and
18:24 - redeem itself um we'll have a look at
18:26 - that soon uh but I don't have a an ETA
18:29 - for the next video
18:31 - there and uh yeah let's just continue so
18:34 - as you can see here um we have this car
18:36 - controller and uh we just want to access
18:39 - the wheel joints and change around some
18:43 - parameters on the motor so first off we
18:46 - need of course a variable to determine
18:48 - the speed at which we want to move so
18:50 - let's make a public float here and call
18:52 - this one speed and set it to something
18:55 - like and this is actually going to be a
18:56 - fairly large number uh so something like
18:59 - 1,500 by
19:01 - default and um the way that we're going
19:04 - to be doing this is inside of the update
19:06 - method is where we will get some user
19:08 - input and then inside of the fixed
19:12 - update inside of the fixed update is
19:14 - where we will actually um do the
19:17 - movement so inside of our update here we
19:20 - can get our current um movement up and
19:23 - down is going to adjust forwards and
19:25 - backwards and left and right is going to
19:28 - to uh tilt the car so in order to get
19:30 - our forwards and backwards meaning up
19:32 - and down we are going to use input. get
19:35 - AIS and we're going to get the raw axis
19:38 - here and we're going to get the vertical
19:40 - axis and this means that we're getting a
19:43 - value between negative - 1 and one and
19:46 - it's going to be zero if you don't press
19:48 - a key it's going to be one if you press
19:51 - up and negative one if you press down so
19:55 - what we can use this for is um um
19:58 - setting our motor speed equal to this
20:01 - value and then multiplying it with our
20:03 - speed in order to get well in order to
20:05 - control how fast we want the car to move
20:07 - so let's first off store this in a
20:09 - private variable and this is going to be
20:10 - our
20:12 - movement and let's just default that to
20:14 - zero and we simply going to set
20:17 - movement movement equal to input.getaxis
20:20 - Raw vertical let's also multiply it with
20:23 - speed and because we know that a
20:25 - positive value moves our card backwards
20:29 - let's also put a minus here uh so that
20:31 - we reverse that
20:33 - situation then we can go into a fixed
20:35 - update and we can access the wheel so
20:38 - let's create a reference to that wheel
20:40 - so we'll create a public and this is
20:42 - going to be a wheel joint 2D and this is
20:47 - going to be our back wheel then we can
20:50 - go down here we can say back wheel do
20:53 - motor and we want to access the motor
20:56 - speed but we can't actually change this
20:58 - directly we want to set this equel to
21:00 - Movement we cannot do that and the
21:02 - reason why motor is a struct so it
21:05 - contains all kinds of information and we
21:08 - can actually only change it if we create
21:10 - a new struct populated with the
21:12 - information that we want and then put it
21:15 - back in so we can access individual
21:17 - parameters but I'll show you how to do
21:19 - this so what we want to do is
21:21 - essentially create a struct which is uh
21:25 - and now I have to check what the name of
21:27 - the struct here is so back wheel. motor
21:29 - this is a joint motor 2D that's the name
21:32 - of the struct data type that is
21:34 - containing all of the information about
21:37 - our motor so our joint motor 2D and
21:39 - we're just going to call this one motor
21:41 - equals a new joint motor 2D and then we
21:43 - can do this and this means that we can
21:45 - just set parameters directly and you can
21:48 - see we have two parameters here that we
21:50 - can set first off we want to set our
21:53 - motor speed equal to our movement next
21:56 - off and we do a comma here we want to
21:58 - set our Max motor torque equal to well
22:01 - what it already was we really don't want
22:03 - to uh uh edit that so we're just going
22:06 - to go back wheel. Max uh motor. Max
22:11 - motor
22:12 - torque and that should be all or you
22:15 - could just put in here uh the value some
22:18 - kind of uh value that you hard code in
22:20 - or of course you could make it um oops
22:24 - like
22:25 - this or you could of course um make it
22:27 - AA as a variable up here I'm just going
22:30 - to set this to 10,000 because I believe
22:32 - that's what it was inside of our back
22:36 - wheel here so let's find it that is
22:39 - 10,000 so I think we're just going to
22:41 - leave it at that but you can play around
22:43 - with it so now all we need to do is
22:45 - actually access our back wheel and say
22:47 - back wheel. motor equals and then the
22:50 - new motor that we just created that's it
22:54 - so all we need to do now is um on top of
22:57 - editing the Movement we also need to
22:59 - tockle the motor on and off because if
23:01 - we now go inside of unity you should see
23:05 - and I think we of course need to assign
23:07 - this variable so we need to find our car
23:09 - controller and drag in our first uh
23:12 - wheel joint here hit play you should see
23:16 - that the U motor speed here changes as
23:19 - we move so that's awesome but it isn't
23:22 - really doing anything and the reason for
23:24 - it or it is actually doing something but
23:26 - it's never snapping out of this use mod
23:28 - mode and we want that to be um
23:31 - actually it is but it's just enabling it
23:34 - and it's not disabling it again all
23:36 - right so for some reason Unity enables
23:38 - that by default when you declare new
23:40 - struct uh don't ask me why so what we
23:43 - really want to do is check whether or
23:45 - not we should currently be moving so we
23:46 - just want to go if movement is equal to
23:50 - zero well in this case we don't want to
23:52 - have a motor applied so we just want to
23:54 - go back wheel. motor or do use motor and
23:58 - set that to
23:59 - false and in case that case we actually
24:02 - want to move so if that movement value
24:05 - is larger than or smaller than zero then
24:07 - we want to go back wheel. use motor and
24:11 - set that to true and only in this case
24:14 - we want to go in and
24:17 - actually uh do all of this stuff and
24:20 - right now we're only using the back
24:22 - wheel so you can see now that our car
24:23 - will only be D driven by the back wheel
24:26 - and I'm going to add the other wheel in
24:28 - just a moment but just to show you that
24:29 - this is working so we can ignore this
24:31 - one it doesn't use the motor until we
24:34 - actually tell it to and it went off the
24:37 - screen there until we tell it to by
24:39 - moving the car and you can see that it's
24:42 - it's really spinning the wheel quite
24:44 - fast here but it's not going that many
24:47 - places and the reason why is because of
24:50 - friction this scene is currently almost
24:52 - friction list uh you can see that our
24:55 - wheel is just spinning around but it
24:57 - it's not really getting much done so
25:01 - what we need to do is add more friction
25:03 - between the map and the wheel and we do
25:06 - this using something Unity called a
25:08 - physics 2D material so let's create one
25:10 - of those let's create one from for the
25:13 - map and let's create one for the uh
25:17 - let's go where is it where is it physics
25:19 - 2D material let's create one for the
25:22 - wheels so for a map here let's set set
25:25 - the friction to something like U one and
25:29 - let's do the same with the wheels that's
25:32 - quite a increase in friction and it's
25:34 - definitely it's not necessarily
25:36 - realistic uh but it is what many of
25:39 - these game uh uses or use um in order to
25:43 - get that nice effect where you have a
25:45 - lot of control and where if you're good
25:47 - enough you can almost Drive uh in a
25:49 - vertical position so that's a lot of fun
25:51 - to play around with and this also allows
25:53 - you to create easily create an ice map
25:57 - where you don't have that much control
25:59 - by simply going in and changing the
26:00 - friction on the map to zero and now
26:03 - everything is just going to slide around
26:05 - so let me show you this so let's find
26:06 - our map and let's find our material here
26:10 - and let's drag our map into that one and
26:13 - of course it's not the Sprite renderers
26:15 - material it's the collider material
26:17 - let's do the same thing on the two
26:18 - wheels except we drag in the wheels
26:21 - awesome let's hit play and actually I
26:23 - think I want to do this to the Cari as
26:26 - well so let's just drag in our Wheels
26:28 - here as well that's going to be
26:31 - fine cool so now you can see that we can
26:34 - actually control this I mean if if the
26:36 - heat uh the hill is too steep we don't
26:38 - have that much control but it is a lot
26:40 - better than before and we actually now
26:43 - able to climb this hill here uh using
26:46 - that
26:49 - system awesome and we have a bit of
26:51 - weird things going on here and that
26:53 - might be because we are colliding with
26:55 - ourselves so in order to get rid of the
26:58 - internal collisions here in case the
27:00 - wheel joint doesn't do it which I found
27:03 - that sometimes it does not um what we
27:06 - can do is simply uh put these on
27:08 - different layers so let's take our car
27:10 - here add a new layer and this is going
27:12 - to be our car uh base and this is going
27:16 - to be our car wheels and we can take our
27:19 - two wheels and add the car wheels layer
27:22 - and we can take our car and add the car
27:25 - base layer and we don't want to change
27:27 - the children there we want it to be that
27:28 - object only that should fix some of that
27:31 - stuff awesome so that's already really
27:33 - fun to play around with and again if we
27:35 - want to make a snow ice level let's set
27:37 - the friction to zero and now you can see
27:40 - that we are totally helpless we're just
27:42 - going to go sliding off cool so um the
27:47 - next thing that we want to add is some
27:50 - um uh torque on the front wheel as well
27:53 - and that's done in the exact same way we
27:56 - just go in at the front wheel here front
28:00 - wheel and we just go here and do all of
28:03 - the same stuff so we go um whoops and we
28:06 - of course need a simle in there don't
28:09 - know why I didn't do that so front wheel
28:12 - use motor false and all the same stuff
28:14 - here we're going to
28:16 - set front
28:18 - wheel do use motor to true and down here
28:22 - we want to set front wheel. motor equal
28:25 - to the same motor so we want the same
28:26 - torque on both both of them and now when
28:28 - we play or of course we have to drag it
28:31 - in so we might get some errors here okay
28:33 - it didn't hit play so we can drag in the
28:34 - secondary wheel joint and we should now
28:37 - be able to uh move using both
28:40 - Wheels woo that's awesome but we easily
28:43 - tip over so what we need to now add is
28:46 - some way for us to kind of tilt our car
28:48 - forwards and backwards so we need to add
28:51 - some rotational torque and uh before we
28:54 - do that let me just have a look in the
28:57 - chat yes I'm going to upload this video
28:58 - to YouTube uh a lot of people saying yes
29:02 - down there uh it's awesome thanks for
29:04 - helping out with answering some of this
29:05 - stuff
29:07 - um what uh let's see what's the
29:10 - difference between fix update and
29:11 - regular update so regular update is
29:13 - called um every uh time the computer
29:16 - draws a frame so that's a graphics thing
29:18 - when we draw a new frame which means uh
29:20 - 60 times a second 120 times a second um
29:24 - often a lot of times a second um that
29:27 - Loop is going to call uh and that is the
29:30 - mo most frequent update and then fixed
29:33 - update is an on a constant time because
29:36 - uh the update might vary depending on
29:38 - your computer settings how much load
29:40 - it's under how much it needs to uh draw
29:42 - stuff like that fixed update will always
29:45 - render at a constant time so at a
29:48 - constant interval and that can depend
29:50 - from system to system or game to game
29:52 - but once you've opened up the game it's
29:54 - never going to change and that's uh
29:56 - that's why we we do physics stuff in
29:59 - there because you can always count on it
30:01 - uh having the same amount of time
30:03 - between each step and you can have your
30:05 - physics code run at a separate um uh on
30:09 - a separate rate than all of your
30:12 - graphics code so you can have your
30:13 - graphics code run really fast and not do
30:16 - physics iteration every time that could
30:18 - be really taxing or in case you're doing
30:20 - a lot of graphic stuff you could have on
30:23 - the physics stuff do a lot of
30:25 - calculations uh in between frames in
30:27 - order to get more um more um precision
30:32 - and uh then you can update your graphics
30:34 - um more slowly say 30 times a second
30:37 - whereas the physics might want to update
30:39 - 120 times a second so that is the
30:42 - different uh the difference between the
30:43 - two I hope that makes sense uh
30:48 - awesome yeah so let's jump back into
30:52 - creating the game um so in order to do
30:55 - this all we really need to uh do is just
30:57 - add add some Force to the base of our
30:58 - car because our wheels are going to uh
31:01 - go or just follow the base of our car
31:03 - you can see here if we hit play and move
31:06 - the car here the wheels just follow it
31:08 - and the same thing if we rotate it so uh
31:12 - what we then do is go into a car
31:13 - controller and we add another thing to
31:16 - our update now we want to get input.
31:20 - getet access and this time I don't want
31:22 - it to be actually I want it to be
31:25 - raw and uh the difference between get
31:28 - access and get access wrong get access
31:29 - does a bit of smoothing on your input
31:32 - and can sometimes feel nicer but not as
31:35 - respondent respondent and get AIS raw is
31:38 - only the raw value between and not any
31:41 - smoothing so that means either negative
31:43 - one or one so um here is going to be the
31:47 - horizontal axis and we're going to store
31:50 - this in another private float and this
31:52 - is going to be our tilt or rotation I'm
31:55 - just going to do rotation and we want to
31:57 - default that to zero as well so now we
31:59 - can set rotation equal to that and we
32:02 - can use it down inside of the fixed
32:03 - update and we want to do this with
32:05 - regardless of if we're moving or not so
32:07 - let's just do that at the end of the
32:10 - frame and uh we're simply going to rot
32:13 - uh rotate it by going of course we need
32:17 - a reference to our physics component so
32:19 - um we could either get that using a
32:21 - reference up here so
32:23 - requiring require component type of
32:27 - rigid body 2D that's going to make force
32:30 - Unity to actually have a rigid 2D rigid
32:33 - body 2D component on the same object as
32:35 - the car
32:36 - controller and then we could use get
32:38 - component or we could just do the same
32:41 - thing that we've been doing all along
32:42 - which is just making a bunch of public
32:44 - components here that we can drag inide
32:47 - of the inspector let's do that so let's
32:49 - have this be our our RB for rigid body
32:52 - and all we do here is simply go rb. add
32:56 - torque which is rotational force and the
33:00 - amount of torque we want to add is
33:02 - rotation and I believe we need to flip
33:05 - the direction of that and then of course
33:07 - we need a speed amount uh so we're going
33:10 - to create another public float and this
33:12 - is going to be our rotation speed and
33:14 - we're going to default that to about uh
33:17 - 15 I'm going to put an if there as well
33:20 - and we want to multiply that down here
33:22 - so that is the rotation speed awesome
33:26 - and we want to multip ly this with time.
33:29 - fixed Delta
33:31 - time right yes we do awesome so now
33:36 - let's try and hit play and we probably
33:38 - want the rotation speed here to be a lot
33:40 - greater actually we need to drag in on
33:43 - the rigid body here in order for this to
33:45 - work and let's see if this is working so
33:48 - yeah right now I'm pressing the keys but
33:49 - not much is happening and that is
33:51 - definitely because we want to bump this
33:52 - up so let's try, 1500 might be too
33:55 - much it's actually really fun but I
33:58 - think it's a bit too much this is yeah
34:01 - you can really do a lot of flips like
34:03 - this let's try like a th000 or maybe
34:06 - maybe 800 not 8,000 you're crazy that
34:10 - wouldn't be good let's try
34:13 - 800 um okay didn't get to test that
34:16 - really um we could either zoom out the
34:18 - camera just use the scene view here
34:20 - we'll be making a character controller
34:21 - in a second or camera controller in a
34:24 - second yeah I really like the feel of
34:25 - this um you can always play around with
34:27 - it more but I think it's working quite
34:29 - well right now so that's awesome um so
34:33 - next up we're going to be um adding a
34:35 - camera follow and I'm going to enable
34:38 - the sky here again so we can see things
34:40 - and they look nice uh so next up yeah uh
34:43 - is a camera controller uh that follows
34:46 - our car around and then finally we are
34:49 - going to be adding uh some crates and a
34:52 - trigger for whenever we land on our head
34:54 - but first let me have a look at the chat
34:56 - again
34:57 - uh a lot of people discussing
34:59 - Coca-Cola uh that's awesome what um see
35:04 - here this is the greatest car control of
35:06 - all time thank you uh that's awesome
35:11 - um let's see yeah nothing stressing as
35:15 - far as I can see make an RPG tutorial
35:19 - maybe at some point not right now uh
35:23 - yeah let's just continue most of this
35:25 - stuff is about Coke anyways cool
35:28 - so camera movement what do we want to do
35:32 - well the most simple form of camera
35:34 - movement is always just pting the camera
35:37 - to the car but you can quickly see and
35:40 - then positioning the camera to be on the
35:42 - car but you can quickly see why this is
35:44 - a problem when we have something that
35:46 - rotates this really really quickly
35:49 - becomes very funky and this can be a
35:53 - challenge of course but it's kind of way
35:56 - too crazy this is not a good idea I get
35:59 - seasi already so what we really want to
36:02 - do is have our camera using a script
36:04 - only follow the position of our car so
36:08 - let's create a new component here and
36:10 - let's call this one uh camera controller
36:15 - and let's just hit create an ad and we
36:17 - can double click that to open it up in
36:19 - visual studio and this is a lot easier
36:20 - to program than what we were just uh
36:22 - doing don't worry so we'll just be
36:25 - making a public trans trans form and
36:28 - this is a reference to the Target that
36:30 - we want to follow around and we'll be
36:31 - making that reference inside of the
36:33 - inspector so now we can just save that
36:36 - we can go into the inspector here and we
36:38 - can drag in our car as the
36:41 - target then inside of the fixed update
36:44 - me U method here we are going to set our
36:48 - position so transform. position equal to
36:52 - the target. position so we're just going
36:55 - to set our position equal to the same
36:57 - position as our
36:59 - car however there's one slight problem
37:02 - with this and that is the fact that we
37:04 - are also using the Z component here so
37:07 - uh right now we just snapped our camera
37:10 - in when it really needs to be out here
37:12 - it just snapped it in and that means
37:14 - that we can't really see anything that's
37:15 - going on so in order to change this what
37:18 - we do is we create we store on the
37:22 - position of our Target in a vector 3 so
37:24 - this is going to be our new position
37:26 - Target position and we set that equal to
37:29 - target. position and then we set new
37:32 - position. Z only that coordinate equal
37:35 - to
37:37 - -10 and then down here we set our
37:39 - position transform. position equal to
37:42 - the new position so we store it in a
37:45 - temporary Vector 3 we edit the Z
37:48 - component to pull our camera back so we
37:50 - can see everything and then we set our
37:52 - position to that new
37:54 - position so let's try and hit play here
37:57 - and now you can see we have a very very
37:59 - simple camera follow script and you can
38:01 - add luring to smooth out the following
38:04 - and everything to make this look and
38:05 - feel super awesome but really I like
38:08 - this very responsive camera and because
38:10 - we have so much bouncing in the car
38:12 - already I don't think we need much
38:15 - smoothing so that was the camera script
38:18 - uh quick and easy and let me just check
38:19 - the chat again here uh let's
38:23 - see
38:25 - um is there any option if there are
38:28 - multiple random. range not give the same
38:30 - numbers I'm not totally sure what you
38:34 - mean here um random. range is not
38:37 - instanced the same way that the C random
38:40 - generator is so that should give you uh
38:44 - random numbers each time but what you
38:46 - can do is specify a seed uh so you can
38:49 - give random.range seed which means a
38:52 - number that if you use that multiple
38:54 - times it's going to produce the same
38:56 - numbers but as soon as you change the
38:57 - seed it's going to give you a new number
39:00 - but by default it should just give you
39:02 - random numbers each time no matter where
39:04 - and how many times you use it um am I
39:07 - going to do a backflip SL SL uh front
39:10 - flip
39:11 - reward not right now uh that is a bit
39:14 - more complex you would have to do some
39:16 - checking uh to uh see whether or not the
39:20 - user actually does that and that code
39:22 - could quickly become a bit complicated
39:24 - I'm thinking about how to do that
39:27 - um so not at the moment but um you can
39:30 - definitely experiment with that on your
39:32 - own you just have to keep track of the
39:34 - car's rotation and um add an event if
39:38 - that
39:40 - increases ah yeah it's actually not
39:43 - totally easy to do but it is doable uh
39:46 - but not for this video I'm sorry um some
39:50 - stuff about how I learn unity and stuff
39:52 - like that we're going to take that uh at
39:53 - the end of the stream where we're going
39:54 - to do a Q&A it's going going to be a lot
39:56 - of fun I'm sorry that I'm not going to
39:58 - answer that kind of stuff right now this
39:59 - is Unity 2D totally correct all of the
40:02 - graphics are done in Photoshop and will
40:03 - be available with the Youtube upload and
40:07 - um will you make the levels randomly
40:08 - generated again I could that could be a
40:11 - lot of fun I can't fit that into a
40:13 - single live stream if it's something you
40:15 - really want to see like randomly
40:17 - generated stuff let me know and I might
40:19 - do a YouTube series uh on it at some
40:22 - point uh but not today so yeah uh and
40:26 - also uh this here is just a static
40:28 - Sprite created in Photoshop if you want
40:30 - to make this U procedural or easier to
40:33 - manipulate inside of the unity editor
40:35 - there are a lot of really cool plugins
40:37 - for this on the store on the asset store
40:40 - they're not free and I even searched
40:42 - around for a free alternative uh to show
40:44 - you uh here uh but I couldn't actually
40:47 - find anything that was updated I found a
40:49 - single one which is I believe it was
40:51 - called like ed2 or e2d or something like
40:54 - that um and for for Endless terrain 2D
40:57 - or something um but it was just the code
41:01 - was too old and not M maintained so um
41:05 - yeah couldn't really get it to work I
41:07 - would have to write rewrite a lot of
41:09 - stuff so um but there are definitely
41:11 - assets for that on the store so let's
41:13 - continue so the next thing that we want
41:15 - to create is some kind of punishment for
41:17 - whenever we land on our head so let's
41:20 - take our car and let's move him down to
41:23 - the beginning of our map and let's move
41:27 - the camera with
41:29 - him and let's now focus on a kai and
41:32 - let's add a new box collider
41:35 - 2D so yes we have multiple box colliders
41:38 - but that's totally okay let's going to
41:40 - move uh let's go ahead and move this up
41:42 - as
41:43 - well there we go so they're sitting in
41:45 - the same place and this one we want to
41:47 - be a trigger and we also want to edit
41:49 - the collider so that it just uh kind of
41:52 - uh goes around the head of our player uh
41:56 - so again I'm going to just quickly
41:57 - disable the guy here and let's hit edit
42:01 - collider and drag this in so position it
42:04 - somewhere around there whoops let's try
42:07 - that again and here move it
42:10 - down and move it
42:13 - over and something like this looks
42:16 - pretty good the colliders are
42:17 - overlapping a tiny bit so what we'll do
42:20 - is we'll take the cider here and
42:22 - actually move that down a tiny bit I
42:24 - think that's going to be fine something
42:25 - like on that and you can of course go in
42:28 - and add a polygon collider again if you
42:29 - want it to be more detailed so I really
42:32 - like this um and what we'll then do is
42:34 - utilize the fact that this is a trigger
42:36 - so we'll create you could use the car
42:38 - controller but we'll create a separate
42:39 - component which is something like like
42:42 - um end game or uh we could also make it
42:45 - something like a game manager but let's
42:47 - just call this endgame um and all this
42:50 - is pretty much going to do if we open it
42:52 - up is whenever something ENT our trigger
42:56 - so on trigger enter 2D this is called
43:00 - every time a collider enters the trigger
43:03 - then we want to uh restart the game so
43:06 - we want to be using Unity engine. scene
43:10 - management up here this will allow us
43:12 - allow us to load new scenes or reload
43:14 - the current one and we want to go scene
43:17 - manager. load scene and the scene that
43:20 - we want to load is the currently active
43:22 - scene so let's go scene manager. getet
43:25 - active scene
43:27 - and then we want to get the build index
43:29 - of that because the load scene doesn't
43:31 - take an actual Scene It Only Takes
43:33 - either a build index or a name so we can
43:35 - just save that now and um we should see
43:37 - that as soon as we start the game it
43:40 - restarts actually it did not but they
43:43 - are overlapping but the problem here is
43:45 - um if we have something else hit the um
43:48 - the player uh the trigger here should
43:51 - pretty much uh be called uh no matter
43:54 - what hits us not only if it's the map
43:56 - also if it is our own car here if I try
43:59 - and reenable this actually it doesn't do
44:01 - that that's really weird if I try and
44:03 - offset it make I'm really impressed by
44:07 - this so it doesn't do it with uh uh
44:10 - internal colliders apparently so let's
44:12 - just try and make a new 2D Sprite here
44:15 - just select some uh default Sprite some
44:18 - UI Sprite let's just add a component to
44:21 - this so let's add a collider box
44:24 - collider 2D and and we should see there
44:27 - you go so it it pretty much registers
44:29 - with everything so what we could do here
44:32 - is um just have the
44:34 - car uh not collide with itself so what
44:37 - we do is we go under uh edit and then
44:40 - project settings and then go under
44:41 - physics 2D and we go in here and we say
44:44 - well the car base we don't want that to
44:46 - be able to collide with on the wheels
44:50 - and we don't want the car wheels to be
44:51 - able to collide with uh
44:54 - themselves and we don't want the car
44:57 - base to collide with the car base so
45:00 - there we go now nothing on this car
45:02 - should Collide so we can just hit play
45:05 - and everything should work fine and
45:06 - dandy and if we now jump on our head you
45:08 - can see that the level indeed does
45:11 - restart so that is pretty much all of
45:13 - the core functionality that I wanted to
45:15 - put into this game I also want to uh
45:18 - show how I added some fun physics crates
45:21 - and let's also add like a finish flag
45:24 - down here and we can maybe even do a
45:27 - quick trigger on that just to show you
45:29 - how that's done so um uh again I'll have
45:32 - a look in the chat and we'll
45:34 - continue why not use a solid color for
45:37 - the background could totally do that I
45:38 - just wanted a bit more detail it might
45:41 - be hard to see on the uh twitch stream
45:43 - but there is actually a bit of clouding
45:45 - uh inside of this and I just think it
45:46 - looks a bit nicer uh why not a circle
45:49 - collider you could totally use a circle
45:51 - collider uh there's no issue with that
45:54 - whatsoever I just wanted to make it a
45:56 - bit tall and you can't really do that
45:58 - with a circle collider but you might be
46:00 - right that it's better um
46:04 - so uh going to put it online when it's
46:07 - finished totally I'm going to put it on
46:09 - GitHub and on the YouTube page uh as a
46:12 - separate video um but only tomorrow I
46:16 - think it's because you're using on
46:17 - trigger enter nothing is entering it
46:19 - well I tried kind of moving the collider
46:21 - around to see if it would uh would enter
46:24 - but for some reason it it didn't really
46:26 - do it but sometimes Unity does that it's
46:29 - it's kind of hard to to know when when
46:31 - Unity is uh is entering something and
46:35 - and stuff like that what you really want
46:36 - to do is just be safe U by disabling
46:39 - that kind of
46:40 - collision
46:42 - um why using polygon colliders colliders
46:45 - instead of edge
46:47 - colliders super good question uh not for
46:50 - any particular reason you could go in
46:52 - here and use an edge collider 2D and uh
46:55 - the only
46:57 - reason why I used a polygon collider is
47:01 - because it just sets itself up uh in
47:04 - here you really have to go in and and
47:05 - edit it yourself and you could totally
47:08 - do that it doesn't take long uh but
47:11 - there's no automatic way to do this so I
47:13 - just wanted to use the polygon collider
47:16 - but if you're really um really um uh
47:19 - interested in getting this as performant
47:21 - as possible use the edge collider that's
47:23 - totally true um
47:27 - how do I activate the full screen game
47:29 - view while I'm not playing well you can
47:31 - go up here and right click and hit
47:32 - maximize or you could just use shift
47:35 - space this is some of the most awesome
47:37 - this is probably the most awesome Unity
47:39 - uh shortcut and one of the least
47:42 - wellknown if you just shift space over
47:44 - any view whatsoever it's going to
47:46 - maximize it it makes it so easier U for
47:49 - example inside of the animator sometimes
47:50 - you have hugely complex stuff inside of
47:53 - the animator and you don't have multiple
47:55 - screens well in case you're on a laptop
47:58 - or well if you don't have like a multi
48:00 - screen setup you can just hit shift
48:02 - space and easily focus on Whatever It Is
48:04 - Just Tab out it's it's so awesome it's a
48:08 - really really good um uh shortcut um off
48:13 - topic do I use SSD or HDD I use both I
48:16 - have two ssds I have one for uh my
48:19 - Windows system uh and I have one for uh
48:23 - video editing on and doing stuff like
48:25 - that and then I have one hard dis drive
48:27 - for uh storage and uh
48:30 - programs or like not so important
48:32 - software all right so a lot of questions
48:34 - coming in I'm sorry I'm going to
48:35 - continue the video here because it's
48:37 - it's not too good for the YouTube video
48:39 - so might even cut this out but um we'll
48:41 - just uh finish up the game and we'll do
48:43 - a lot of Q&A don't worry about it I am
48:46 - up for a lot of answering of stuff I
48:49 - still have more Coca-Cola to go and I
48:51 - really need to stop saying that brand I
48:53 - I need I need I need some money if
48:55 - you're out there Coca-Cola I'm totally
48:57 - willing to do awesome so um yeah what do
49:01 - we want to do let's start with the flag
49:03 - here let's just put that in really
49:05 - quickly uh all you want to do is take
49:08 - the uh flag the goal here that I created
49:12 - which you don't have you can find one on
49:13 - the Internet or you can wait for
49:15 - tomorrow just drag it in here uh that
49:18 - easy and place it there you go that was
49:21 - all I did for the preview video there I
49:24 - like it I like to play it a bit uh into
49:27 - the map here I think that looks pretty
49:29 - nice and uh I'm just going to pause the
49:31 - game here take our car and drag him over
49:35 - there and replay the game and you can
49:37 - see how that looks inside of the game so
49:39 - now let's just make this interactable by
49:41 - on the goal adding some kind of collider
49:44 - in our case we're going to be adding a
49:46 - box collider 2D and uh if you haven't
49:48 - noticed I really like box colliders and
49:51 - we're going to mark this as a trigger
49:53 - we're going to add a component and this
49:55 - is is just going to be our uh goal
49:58 - component and then double click this to
50:01 - open it up in uh Visual Studio refresh
50:04 - that and we can add a void on trigger
50:07 - enter 2D the exact same way that we did
50:10 - it before however this time I think we
50:12 - need to check if what we're colliding
50:14 - with is actually the player so whenever
50:16 - you only want uh to collide with one
50:19 - thing one uh it's really easy to just
50:21 - check for a name or a tag and in our
50:24 - case um we can just tag the car as
50:28 - player or as car so um We Gather some
50:31 - information about what is currently
50:33 - entering the trigger to do that we go
50:35 - collider 2D and we call this coll
50:38 - Collision info I'm just going to call
50:40 - this call info and call in for fo now
50:44 - contains information about the name of
50:47 - what we hit the tag of what we hit and
50:50 - other stuff like the collider and the
50:52 - game object itself so now we can simply
50:54 - go if
50:56 - collider info do uh name. tag it's equal
51:01 - to uh
51:03 - player well then the player hit us and
51:06 - we can continue to the next level you
51:08 - can continue to the next level since I'm
51:10 - not going to be making a Next Level I'm
51:12 - just going to throw in here uh game
51:16 - one there we go so now we have a win
51:19 - state and it's an actual game and then
51:21 - we can uh maybe just reload uh the scene
51:24 - so people can play again because let's
51:26 - face it this level has infinite replay
51:29 - value uh so let's go in here and import
51:31 - scene management once again go scene
51:34 - manager do load scene and the scene we
51:36 - want to load is scene manager. getactive
51:40 - scene. build index whoops we need to
51:43 - specify this as a function build Index
51:46 - close that off save the script done
51:49 - hopefully done let's try so let's move
51:52 - our car over let's find our car there's
51:55 - our car moving over hit play the camera
51:59 - snaps over there let's try and move
52:01 - through this and it's restarting the
52:05 - scene but it's not throwing a debug that
52:07 - log statement that's actually really
52:10 - really weird Unity should definitely do
52:14 - this is it somehow restarting the level
52:18 - without uh getting to actually throw the
52:22 - debug.
52:24 - log that is so
52:27 - weird and it shouldn't even do this
52:30 - because it's not taged as
52:34 - player I have no idea what's oh of
52:37 - course of course so what is happening is
52:40 - our flag isn't firing but our car is so
52:44 - we're registering that we're hitting the
52:46 - flag I'm so dumb so what we do now is uh
52:50 - just go inside of oh well how do we get
52:53 - rid of this uh Let's see we can go
52:57 - inside of our
52:58 - ingame and we can add a collision info
53:02 - here as well to kind of specify that we
53:04 - don't want to do this if it's the flag
53:07 - um actually we could also add all of
53:09 - this Cod code into the uh end game um
53:13 - there are multiple ways of doing this I
53:15 - don't really know what I want to do with
53:18 - this uh I
53:20 - think I don't
53:22 - know I think what we're going to do is
53:25 - going into our end uh endg game here and
53:28 - add some um Collision info maybe let's
53:32 - see edit project settings physics 2D so
53:36 - we could of course put the flag here on
53:37 - a separate layer and just uh disable um
53:41 - the uh collision between the two but the
53:44 - problem here is um that we are then not
53:47 - going to register whenever the uh
53:50 - trigger actually enters so and a lot of
53:52 - people are saying that I should use
53:54 - compared tag that's totally true I
53:56 - should definitely go in here and use dot
53:59 - compare tag and we want to compare that
54:01 - with the
54:03 - player I believe that's how you use
54:05 - compared tag it's one of those uh little
54:07 - things it's definitely a little bit
54:08 - faster but I would I believe that Unity
54:10 - would optimize that actually behind the
54:12 - scenes but it is better but we still
54:15 - have our problem here so uh what we
54:17 - could go in and do is under our in game
54:19 - here we could the same way add a
54:22 - collider 2D with our Collision info and
54:25 - we could say that um if our Collis info
54:29 - do layer or do
54:33 - tag and again we do compare tag um and
54:37 - we could have some kind of tag called
54:40 - collidable uh for example or um destroys
54:44 - player in game whatever we'll just say
54:47 - collidable um then we want to uh reload
54:50 - the scene this way we can have objects
54:51 - that doesn't do this and we can specify
54:53 - which objects actually do this this and
54:55 - in this case we want to of course go
54:57 - into our map add a new tag here and
55:00 - we'll make this uh collidable believe
55:03 - that is how Collide double Collide
55:06 - double Collide double I believe it's
55:09 - like this awesome uh and we can specify
55:13 - that on our map so change that to
55:16 - collidable and now we should uh be able
55:19 - to actually die on a map yes but not on
55:23 - the flag no that's OD awesome and then
55:25 - what we can do is I want to move this
55:28 - goal in front of our players so I'm just
55:30 - going to put five here or something uh
55:33 - that looks a bit nicer I think cool and
55:36 - uh then finally uh what we'll do is um
55:41 - specify the car here as a player so
55:43 - we'll tag that as a player and now we
55:45 - should see that our flag was will fire
55:48 - and it does it says game one so that was
55:51 - the solution for that problem and if you
55:53 - want to be really neat about this you
55:54 - will go inside of the goal and you will
55:56 - wrap this uh inside of some kind of um I
56:00 - numerator in order to delay the action a
56:03 - little bit and then you can have some
56:04 - text popup saying game one and then
56:07 - after a certain amount of seconds it
56:08 - will transition to the next level we've
56:10 - done loads of this stuff in the past
56:12 - such as in the 2D platform of course so
56:14 - if that's something you're interested in
56:16 - just go there and check that
56:17 - out cool so that was all the core
56:20 - functionality let's um add in a few
56:22 - crates and we're done so let's take our
56:24 - car here move him back and uh let's add
56:27 - a
56:29 - Craig so dragging this into the scene
56:33 - that looks good we can maybe scale this
56:36 - down a bit because it's currently huge
56:39 - uh so maybe make this of size like 200
56:42 - pixels per
56:43 - unit and um everything else is is
56:46 - looking fine we can maybe disable the
56:47 - mid Maps uh and make this true
56:51 - color and uh what really what we want to
56:54 - do is just add a box collider 2D add a
56:57 - rigid body 2D and I think I want to
57:00 - decrease the mass a little bit to
57:02 - something like point three and that
57:04 - should actually do it I think this
57:05 - should be interactable now and we can
57:07 - definitely turn this into a prefab let's
57:09 - just organize everything a bit we'll
57:11 - have a scripts folder we'll have a uh
57:15 - Sprites folder we'll have
57:18 - a
57:20 - physic material folder and yeah so let's
57:25 - take all of our physics materials here
57:28 - move them in under physics mat let's
57:29 - take all of our scripts move that on
57:32 - scripts and let's take all of our
57:34 - Sprites and move those you guest it
57:38 - under Sprites come on Unity is freezing
57:42 - here let's try that one more time move
57:44 - those under
57:46 - Sprites for some reason Unity is really
57:48 - bucking out when I try to do this so
57:50 - we'll just go one at a time there we go
57:53 - move all of our different spres and the
57:56 - endgame oners scripts cool uh so yeah
58:00 - what we can do with our crate is just
58:01 - turn it into a preat but drag it in here
58:04 - and now we can just distribute this uh
58:06 - throughout the scene so we'll have uh
58:08 - one that sits uh this one is going to
58:10 - fall down there so we'll have one here
58:11 - that might hit the player and um because
58:14 - we are going to select the tag here as
58:16 - collidable and hit apply uh this these
58:19 - are actually going to kill the player so
58:21 - if he gets hit by a falling crate it's
58:23 - going to be really really fine it's a
58:25 - kind of an evil thing to do and we can
58:27 - put one at the top of the hill here and
58:29 - let's now hit play and see how this
58:31 - works so there is the falling crate and
58:33 - let's uh move that up a bit higher and a
58:36 - bit uh more over so that if you m time
58:39 - this you're going to get hit by it
58:41 - that's awesome uh so yeah we are going
58:44 - to drive right over that guy and you can
58:46 - see that we can push these crates around
58:49 - and you can add of course a separate
58:51 - material to those if you want them to
58:53 - have more friction um and glide more
58:56 - around in the environment I might
58:57 - actually do that so that was pretty much
59:00 - the way that I added the crates and just
59:02 - to um finish things up here let's add a
59:05 - physics 2D material for the crate let's
59:08 - drag this under physics mat Let's uh
59:10 - drag this onto one of the crates uh here
59:14 - let's hit apply let's go on do the crate
59:16 - and change the friction to something
59:18 - like well point 4 is going to be pretty
59:21 - good actually let's try 2 and you should
59:23 - see that that makes it uh slide down the
59:26 - hills and just makes them a bit more fun
59:29 - to play around with so that was pretty
59:31 - much all I wanted to show in this video
59:33 - I hope you enjoyed it um
59:36 - as um as we're just trying this out in
59:39 - full screen and seeing if everything is
59:40 - working and um yeah I think we're pretty
59:43 - much ready to jump over to Q&A mode I'm
59:46 - really really happy with these results
59:48 - again um I'm sorry that I didn't provide
59:50 - a link to whoops kind of getting stuck
59:53 - here oh there you go or fixed it to all
59:56 - of the Sprites but I will definitely
59:57 - upload those um to GitHub along with all
60:01 - of the source code and um and you can
60:04 - just grab it from there so I hope you
60:06 - enjoyed making this game and uh yeah
60:08 - let's let's do some questions awesome so
60:11 - let me just transition over here and you
60:13 - should see the twitch chat here it's a
60:16 - new layout that I'm trying out so
60:19 - hopefully this is
60:20 - working um yeah cool so let me see
60:26 - chrans everyone just fire away and we'll
60:29 - have a
60:31 - blast so how long to the QA session it's
60:34 - now here
60:36 - um please somebody suggest me site or
60:39 - video to learn basic game development
60:41 - mathematics actually they just started a
60:44 - course um called game ma theory that
60:47 - explains some of the uh very fundamental
60:49 - stuff like U vectors sine waves and uh
60:53 - I'm currently working on one explaining
60:55 - um some a field in Applied Mathematics
60:59 - which is
61:00 - forces and um well it's called Dynamics
61:04 - uh which is applying forces and torque
61:06 - and stuff like that that's going to be a
61:09 - lot of fun and uh you can of course
61:11 - suggest other stuff that you want to
61:13 - hear as well
61:15 - um so let's
61:18 - see
61:21 - um uh it's already been um yeah there
61:24 - will be a replay on Twitch and on
61:27 - YouTube
61:28 - definitely um first on Twitch and then
61:31 - tomorrow on
61:32 - YouTube
61:35 - uh yeah that's awesome how do you change
61:38 - the theme in visual studio so you go
61:40 - into Visual Studio reload all here um
61:43 - it's just in the way you go um
61:48 - tools customize nope tools options I
61:51 - always forget this and uh you can go in
61:54 - in here and edit everything there's so
61:57 - much stuff in here also fonts and colors
61:59 - and you can go in and edit every single
62:01 - thing but what you normally do is
62:03 - download a theme of uh some website
62:06 - there's a lot of websites for this um
62:08 - I'm just going to find the one that I
62:10 - normally use if you just search for
62:12 - visual studio
62:14 - themes I like to use the one called
62:16 - Studio Styles studi
62:19 - style. and uh there's a lot of stuff
62:21 - here just download one and then you
62:23 - double click it in order to import it so
62:25 - you can go go to tools Import and Export
62:28 - settings you go to import selected
62:30 - environment settings you select a file
62:33 - and you can select the different thing
62:34 - parts of that that you want to import um
62:37 - and one part of it is going to be on the
62:39 - styling uh yep so that's how you do that
62:44 - um and I believe that I was in chat mode
62:47 - that entire time so I'm just going to
62:50 - switch over and do that one more time
62:52 - I'm so sorry so um let me just show you
62:55 - this one more time so we have um Visual
62:58 - Studio here let me open up a
63:00 - script just to find you the
63:03 - panel uh so let's see this is under
63:08 - Tools
63:10 - options uh and you can go under fonts
63:13 - and colors and you can play around with
63:15 - everything uh or you could go to Import
63:19 - and Export settings and you can download
63:21 - a theme off of a website called Studio
63:24 - Styles uh which I will now write in the
63:28 - chat so let me just do that and you can
63:30 - check it out there uh so I will just
63:33 - write it to you right
63:35 - here oh all of these windows I have
63:38 - opened it's way too much so it's called
63:41 - Uh
63:42 - studio studio
63:45 - style. there you go awesome so uh when
63:49 - am I going to upload the project in
63:51 - GitHub tomorrow uh hopefully um
63:54 - when did I start coding that's a good
63:56 - question and it's actually one that's
63:59 - kind of hard to answer um because it's
64:02 - it's been so long and also um when what
64:06 - is coding really I mean I started doing
64:09 - visual coding actually well that's not
64:12 - totally true I started by making one of
64:15 - those console applications a really long
64:17 - time ago trying to make a calculator in
64:19 - Visual Basic but that's so long ago I
64:22 - don't even really remember it turned out
64:24 - or if I even finished it and then I I
64:27 - moved over to game maker which was a lot
64:29 - of fun and that does have a bit of um
64:31 - visual programming um and not the
64:34 - current game maker a very very old game
64:37 - maker that was made by entirely entirely
64:39 - different studio and um that was a lot
64:43 - of fun had some simple Sprites and stuff
64:45 - I could do a bit of movement um and then
64:48 - I transitioned over to doing blender
64:51 - actually um whenever blender introduced
64:53 - their game engine
64:54 - I I used their visual programming not
64:56 - any python um and from there it pretty
64:59 - much just unlocked a world of
65:01 - programming I did uh Unity programming C
65:03 - and JavaScript I've also done some
65:05 - website stuff now and um I know a fair
65:08 - amount of languages but a really long
65:11 - time ago with blender uh but I got into
65:14 - Unity like I don't know five year years
65:17 - ago or something like that
65:19 - yeah um maybe even this no five years is
65:23 - about right
65:24 - cool
65:26 - um have I ever made money off a game
65:30 - that's a really good question I've
65:32 - published a lot of free games but I've
65:34 - actually never monetized them uh in if
65:37 - you follow the channel for a while you
65:39 - know that I have this thing where I'm
65:41 - really much in love with free stuff I
65:43 - haven't charged a single thing on the
65:44 - brais channel and I've made a lot of
65:47 - software as well on the on the um asset
65:50 - story there's the UPA toolkit and
65:52 - there's also the very old inventory
65:54 - system and everything has just been a
65:57 - available for free so yeah that's how it
66:01 - is I've done a bit of adware on on
66:03 - YouTube but that that's
66:06 - all
66:09 - um
66:11 - see what do I think about python I think
66:14 - it's a great programming language and
66:16 - it's awesome for multiple reasons it's
66:19 - super simple syntax wise it doesn't get
66:23 - easier um that's also sometimes its
66:25 - biggest biggest flaw is is the syntax
66:28 - and how simple it tries to be uh that's
66:31 - why I get annoyed with it at points but
66:33 - it can be used for so many things it can
66:35 - be used for making games it can be used
66:38 - it's used by a lot of scientists for um
66:41 - either doing some processing or for uh
66:44 - displaying data uh so it's a really
66:46 - really U versatile language that can be
66:49 - used in a in a range of different ways
66:52 - and it's just so easy to pick up so I
66:54 - really recommend a lot of beginners uh
66:55 - to start with um python um or Unity of
66:59 - course Unity is awesome but uh unless
67:02 - you want to get directly into 3D games
67:04 - uh python is a really great way to
67:06 - start
67:09 - um um my could you do a my top 10 tips
67:14 - in unity video like the shift space tips
67:16 - you talked about where you have some
67:18 - great tricks up your Steve thank you um
67:20 - greetings from Sweden um hi in Sweden um
67:25 - yeah that's a pretty good idea I could
67:26 - definitely consider that I'll put it on
67:28 - the suggestions list that could be
67:30 - really really fun I mean I would have to
67:32 - think about what I wanted to put on
67:33 - there but yeah the shift space one is
67:35 - definitely um one that should be there
67:38 - there are some pretty handy uh Unity
67:40 - things that a lot of people don't know
67:42 - about uh one thing that I've now shown
67:44 - in the videos uh quite a bit is if I
67:46 - just uh switch over to Unity here is the
67:49 - um fact that you can go into debug mode
67:51 - in order to see private variables that
67:53 - just sped up my process so freaking much
67:56 - if we go into the car for example and
67:58 - have a look at the car controller we
68:00 - have a few private variables here what
68:02 - you can do is just go up here change it
68:03 - to debug and it's going to display those
68:06 - kind of faded but it is going to display
68:08 - them so you don't have to create a
68:09 - separate variable or force them to be
68:11 - public just because you want to view
68:13 - them uh that's a really handy
68:15 - thing um so let me see what else
68:21 - um in scale from 1 to 10 how hard is
68:24 - Unity C for me um that's really hard
68:27 - question it totally depends on on what I
68:30 - want to do I mean the language itself um
68:34 - is really just an extension of myself at
68:37 - this point I've I've written so much
68:39 - code in in C and for the unity API that
68:43 - um I pretty much just know what to write
68:45 - and I don't have to look that much stuff
68:47 - up
68:49 - um yeah but it's just practice and
68:51 - you'll get there and it will become
68:53 - easier in the beginning it was totally
68:55 - scary and impossible to do uh but it
68:58 - gets
69:00 - easier so bring up the twitch chat here
69:04 - um uh what do I do for the living uh I
69:07 - do this I just finished up my education
69:10 - so uh now I'm fulltime with breis and
69:13 - it's it's a lot of fun thank by the way
69:15 - thank you so much to all of the patron
69:17 - supporters I haven't made mention Patron
69:19 - all this time if you want to support uh
69:21 - me and the the channel and all of the
69:24 - videos and these live streams these are
69:26 - live streams are only made possible
69:27 - because of patreon uh you can go to
69:30 - patreon.com braies there's um I normally
69:34 - display a link on the screen but uh it
69:36 - should be on the chat somewhere um and
69:39 - you can donate with a monthly recurring
69:41 - donation it just it means the world it
69:44 - it's what makes me able to do this
69:46 - because you need or YouTube AdSense is
69:50 - the rates on that kind of stuff is
69:51 - really really low so it's amazing uh if
69:54 - you guys support and uh thank you so
69:55 - much to PE the people who are already
69:57 - doing that but yeah this is my full-time
70:00 - job
70:02 - um so yeah a lot of people or some
70:05 - people are asking for the fulltime for
70:07 - the final game here so I'm just going to
70:09 - switch over and show it in action this
70:11 - is the final game we have the controls
70:13 - working we have uh flying crates and
70:15 - this kind of stuff and oh I flipped over
70:19 - right so I'm actually really bad at this
70:21 - game and I've always always been bad at
70:24 - these types of games I don't know that's
70:25 - maybe why I wanted to create one myself
70:27 - so I could make it easier didn't succeed
70:30 - on that I guess uh make a mobile RPG
70:33 - tutorial that's something that I'm not
70:35 - going to do I'm sorry um RPGs are really
70:38 - content heavy and therefore take a while
70:41 - to create they also require a lot of
70:42 - programming you pretty much need a team
70:44 - in order to do an RPG and uh for
70:47 - tutorials that makes things even harder
70:50 - and mobile is just narrowing things down
70:52 - and making the the hard to do stuff
70:54 - almost impossible because then you have
70:56 - to worry about optimization and
70:57 - everything so I'm sorry that's not
70:59 - something that I'm going to be making a
71:01 - a a tutorial series on um what education
71:05 - did I just finish um that is also a good
71:08 - question um the Danish term is gymnasium
71:11 - which is basically the equivalent of our
71:13 - high school so yeah just finish that up
71:17 - um what do you think about C++ is it a
71:21 - good programming language this is a very
71:24 - broad question I mean um C++ is great in
71:29 - many ways because you can get super
71:32 - performant native code you can your code
71:34 - runs so fast you have a lot of control
71:37 - and uh there's a I mean so much stuff is
71:40 - written on C++ so of course it's a
71:43 - really really good language to know
71:44 - because sometimes you just have to delve
71:46 - into the really hardcore stuff um but it
71:50 - it's also full of pit traps and it's not
71:53 - beginner friendly in any way and
71:55 - sometimes you're just you're scratching
71:57 - your head looking at something for days
71:59 - in order to fix it uh C++ can either be
72:02 - really fun because you make super
72:04 - performing code or hell because that
72:07 - super performing code can be just as
72:09 - hard to
72:10 - deog
72:12 - um uh let's
72:16 - see
72:17 - [Music]
72:19 - uh am I planning on taking any further
72:22 - education since gymnasium education
72:24 - isn't sufficient for a job if so what
72:26 - are you thinking I'm not planning on
72:28 - continuing U with an education um for
72:31 - several reasons and the first one is I
72:33 - don't feel like it uh I I got kind of
72:37 - tired um with um my education towards
72:39 - the end I had it was a fine place that I
72:43 - went to and everything but um I'm really
72:46 - happy to not be in the educational
72:48 - system anymore what I really enjoy is
72:50 - making videos for you guys and
72:52 - programming and doing game projects and
72:54 - all of this stuff all of this
72:56 - interaction is super fun and I I just
72:58 - don't have the uh time and um uh I'm not
73:04 - really able to do that if I'm in an
73:06 - education at the same time so that I
73:08 - would have to sacrifice some of this and
73:10 - that's not something that I'm really to
73:11 - do right now but of course uh I might
73:14 - have to do something at some point so
73:16 - we'll see
73:19 - um am I new here on Twitch um yes I'm
73:22 - fairly new here on Twitch this is my
73:24 - third live stream I do a monthly live
73:26 - stream uh in case you haven't seen the
73:28 - YouTube channel you can go to
73:29 - youtube.com/ Brees um I do tutorials so
73:33 - hi to the guys who are discovering me
73:34 - through twitch uh that is Twitch is not
73:38 - my primary thing this is a scary thing
73:40 - this odd thing that I only do once a
73:43 - month uh but it's it's a lot of
73:46 - fun
73:48 - um fun fact C++ was my first language
73:51 - and it took 3 months just to get the
73:53 - basic
73:54 - well congratulations that you were able
73:56 - to get the basics in 3 months uh some
73:58 - people spend years trying to understand
74:01 - understand for loops and while loops and
74:03 - memory management I mean uh C C++ is
74:07 - super
74:08 - hard um how old am I I'm 19 years old
74:14 - um how do you have multiple people
74:16 - working on the same Unity project at the
74:18 - same time that's a super good question
74:20 - Unity has a lot of stuff for
74:21 - collaborating on with teams they have
74:23 - their own um a verion control that
74:26 - allows people to work even inside of the
74:28 - same scene and that's a super powerful
74:31 - thing especially because Unity now has
74:34 - um the ability to load multiple scenes
74:37 - together and have them nest and that
74:39 - makes it really easy to um make your
74:41 - game more modular so have the designer
74:44 - work on one part or have multiple script
74:47 - modules loading in and uh what you
74:49 - really want to pick up is just some kind
74:52 - of um um a version control system and
74:55 - what I would use is GitHub so I always
74:59 - use GitHub that's awesome it makes it
75:01 - easy to just look over what was changed
75:03 - on one side what was changed on other
75:05 - side and then merge the changes if they
75:07 - conflict and stuff like that it makes
75:09 - things pretty easy to do but it does
75:12 - require some planning you do always have
75:14 - to plan for
75:16 - it could I make a 2d platformer Fighter
75:19 - game already have a 2d platformer series
75:22 - I know it isn't like Melee fighting but
75:25 - there's gun there are guns in there and
75:27 - you can very easily just edit that to um
75:31 - if you just limit the range it's
75:32 - basically a fighting game then you can
75:34 - add Combos and some animations but all
75:36 - the other code is totally re
75:39 - reusable
75:41 - um do I know another engine for game
75:43 - development uh better than Unity I don't
75:46 - know anything better than Unity but I
75:48 - know stuff that is better for certain
75:50 - types of projects I know stuff that
75:53 - arguably could be just as good my
75:56 - favorite will always or is so far Unity
75:59 - because it's so easy to change it's so
76:03 - easy to extend it's um awesome for
76:06 - teaching the scripting system is super
76:08 - solid everything in unity is just a
76:11 - breeze to use and it's really
76:13 - fun um but if you want to get AAA
76:17 - Graphics you can do that inside of unity
76:18 - but if you want something that works
76:20 - just right out the box I would recommend
76:22 - picking up on real 4 for example the
76:24 - Unreal Engine is a great place to start
76:26 - if you want to make a um a really high
76:29 - quality shooter game for example uh but
76:32 - it's also a lot harder to use and I
76:35 - definitely recommend that you only use
76:36 - it if you in some kind of a team because
76:39 - using Unreal as a single person just
76:41 - takes a lot of time and unity is
76:44 - fast so yeah so it totally depends on
76:47 - your project um uh do I think that Unity
76:51 - will still be there in uh 10 years yeah
76:53 - I think uh the industry in many ways are
76:55 - shifting towards using this kind of
76:57 - middleware that Unity is this base or
77:00 - this engine with a total complete insane
77:04 - editor on top of it what people did
77:07 - before was um well that didn't exist
77:10 - many little game studios all of this
77:12 - Indie developer thing is a very New
77:14 - Concept and if they did um the results
77:18 - that these teams were able to accomplish
77:20 - weren't normally that impressive right
77:22 - now people can um even single
77:25 - individuals or teams of four or five
77:28 - people can make really really high
77:29 - quality games and that's because of
77:31 - middleware such as Unity what you did
77:34 - before was have large large Studios
77:36 - where you have a team dedicated to
77:38 - building an engine and maintaining it
77:40 - then you have another team dedicated to
77:42 - Mak making editor tools for the artist
77:45 - to use and then you have a third team
77:47 - for actually making the game and unity
77:50 - just takes the two first teams the ones
77:52 - that build the engine and the ones that
77:53 - make the tools for the artists and
77:57 - almost completely removes that workload
77:59 - of course you can go in and edit it and
78:01 - of course you can extend the editor to
78:02 - do uh more stuff specific to a game but
78:05 - it just makes everything so much easier
78:07 - and I think um in in more years uh or
78:11 - with more years on its back it's just
78:13 - going to do more so is it possible to
78:16 - build a game without the unity screen
78:18 - intro totally is
78:21 - uh I do believe you still have to have
78:24 - some kind of unity subscription in order
78:26 - to get rid of the intro but you can do
78:29 - that I don't know if if they changed it
78:31 - but I don't think they
78:32 - have um they even create a uh Unity
78:35 - screen intro customization thing uh that
78:38 - I don't know if it's out yet but it will
78:40 - definitely come soon so you can um
78:42 - manipulate how you want to to use it or
78:45 - how you want it to look but yeah you
78:47 - need Unity
78:49 - Pro
78:50 - uh how do you save High scores in game s
78:54 - remembers after game restart that
78:56 - depends on uh if you mean local high
78:58 - scores or networked high scores networks
79:01 - you will have to upload the high scores
79:02 - to some kind of server that you either
79:04 - host yourself or rent some hosting space
79:07 - and uh most of the time you just save it
79:09 - as a text file as a um XML file or as
79:14 - Json and um another way is um to just
79:20 - save it locally on the system and um
79:23 - that means just using player prefs is
79:25 - the easiest if you search for player
79:27 - prefs as in preferences you can um uh
79:31 - find the unity documentation on that
79:32 - it's a super easy way to save uh small
79:35 - pieces of data using Unity or you could
79:38 - uh look into saving XML or Json files
79:41 - locally so it's called data
79:43 - serialization for a fancy word and you
79:45 - can totally look into that it's not
79:47 - super hard and there's a lot of uh res
79:50 - resources showing how to do local high
79:52 - scores
79:55 - um I didn't take a college with any game
79:58 - design course at all and no I don't mind
80:01 - you asking um so let's see
80:08 - here
80:12 - uh did I learn English in school or
80:15 - another way of learning uh both I
80:19 - learned English in school I wasn't a
80:21 - totally quick learner but somewhat came
80:24 - around hopefully you don't think my
80:25 - accent is too thick um but yeah I I
80:29 - learned English uh through schools and
80:32 - through playing a lot of games and
80:34 - watching a lot of YouTube videos I was
80:36 - the one of those kid kids who would sit
80:38 - there and watch Call of Duty videos and
80:41 - um I learned that way it was a lot of
80:43 - fun and worldall of Warcraft was awesome
80:44 - as well I was kind of addicted to that
80:46 - game um so yeah playing games I think of
80:50 - a lot of um mostly Bo Bo learn English
80:54 - that way at least around here when you
80:56 - ask around that's that's how people
80:57 - learn because uh the the English that
81:00 - you learn in school is very generic and
81:03 - doesn't really allow you to express
81:04 - yourselves uh it's just yeah learned
81:07 - English through RuneScape that's awesome
81:10 - uh but that's just very generic
81:12 - conversations like I want to buy an
81:15 - apple and stuff like that that's
81:17 - particularly interesting so I'm glad I
81:20 - had a
81:21 - computer um um do I think Unity would be
81:25 - a good tool to play around with uh
81:27 - artificial neural networks and neural
81:28 - Evolution I played around with that um
81:31 - like last week and it was a lot of fun
81:35 - um I I just saw a cool video on um like
81:39 - genetic algorithms and neural networks
81:42 - and and that kind of stuff and I thought
81:44 - it looks super cool so I hopped into
81:46 - unity and and tried it out and Yeah
81:48 - Unity is a great place to do that kind
81:49 - of stuff any kind of simulation is
81:51 - awesome to do with unity
81:53 - uh but Unity is also to totally overkill
81:56 - for that kind of stuff you could use
81:58 - python or something else uh but you can
82:01 - of course do that inside of
82:04 - unity um thoughts on Game Maker game
82:06 - maker is awesome it's a very simple uh
82:09 - and it's very approachable and a lot of
82:12 - people love it I haven't used it too
82:14 - much I've played a little around in the
82:16 - editor and stuff like that I'm a Unity
82:19 - fan if you haven't noticed but game
82:21 - maker is great really great uh but only
82:24 - for
82:26 - 2D
82:27 - um any tips or resource if someone wants
82:30 - to understand oh and then the uh thing
82:33 - disappeared off my screen wait wait wait
82:37 - wait uh I'm finding the
82:40 - question
82:43 - uh where is it any tips or resources if
82:46 - someone wants to get better at
82:48 - understanding game physics and or making
82:50 - their own I making a video for this so
82:54 - uh very soon hopefully I will have it
82:56 - done it's another video in the game math
82:58 - series um course and it's about uh
83:01 - Dynamics which is a field of Applied
83:03 - Mathematics which overlaps with physics
83:06 - which is about forces how you apply
83:07 - forces to an object and how gravity
83:10 - works and how those forces translate
83:12 - into motion uh with Concepts like
83:15 - acceleration velocity and position so
83:18 - I'm definitely going to show that kind
83:19 - of stuff and that's going to be a Fine
83:21 - Place to Start
83:23 - uh U but yeah any kind of physics book
83:26 - will teach you the basics and they are
83:29 - pretty easy to apply I mean if you have
83:31 - a basic understanding of mathematics and
83:33 - especially if you know what vectors are
83:35 - and how to use them um you're going to
83:37 - be fine with uh doing physics
83:40 - calculations however um Collision
83:43 - detection and that kind of stuff is a
83:45 - story on its own that's a very program
83:48 - Pro programming specific technical thing
83:51 - uh but you can of course look that kind
83:53 - of stuff
83:54 - up
83:56 - um uh let me
84:00 - see
84:02 - um what is the best way to handle slopes
84:05 - in a 2d game
84:08 - um don't entirely follow what you mean
84:11 - if you mean like the character falling
84:14 - you can really what you can do is you
84:16 - can break cast to the surface and you
84:17 - can get an idea of where the surface is
84:20 - pointing and depending on the angle of
84:22 - that surface or that particular Edge
84:25 - that you've hit with the raycast uh you
84:27 - can determine whether or not you want to
84:28 - slide down it or work walk down and that
84:31 - is the short technical
84:33 - explanation
84:35 - uh yeah can you do an AI tutorial I'm
84:38 - having trouble finding a good one I've
84:40 - done some AI tutorials um but AI
84:43 - is a huge broad topic uh I mean when it
84:47 - comes to AI um there's so much you can
84:50 - do and it totally depends on what you
84:51 - want to do AI could be a Talking Machine
84:54 - it could be uh enemies flying around
84:57 - trying to shoot you and it could be uh
84:59 - an opponent in chess and all of that
85:01 - stuff is technically AI so um but if you
85:04 - just mean like enemies following you
85:06 - around and stuff like that check out the
85:08 - 2D platformer course I use the AAR
85:11 - pathfinding algorithm to implement AI
85:13 - you can also check out rain from uh H
85:17 - what are they called
85:19 - rain rain AI
85:22 - I have rival Theory right those that's a
85:26 - great and comprehensive AI solution but
85:28 - really you probably want to pick up some
85:30 - kind of pathf finding algorithm um you
85:32 - can implement it on your own uh then you
85:34 - can just search for AAR is very simple
85:37 - so AAR pathf finding algorithm
85:39 - implementation tutorial is what I would
85:40 - type into to Google in order to find
85:43 - that uh but you can check out the 2D
85:45 - platform of course for example
85:50 - um is it worse that I normally only use
85:53 - one scene for my whole game that totally
85:55 - depends on the
85:56 - scene a lot of smaller games only need
85:59 - one scene if you are switching from one
86:01 - environment to another you probably want
86:03 - to switch scene uh but it totally
86:06 - depends I mean if it's performant
86:09 - doesn't matter you can have everything
86:10 - inside of one
86:12 - scene
86:16 - um have I ever been to Germany yeah I
86:19 - love Germany um I've been there a long
86:22 - loads of times actually my uh parents
86:25 - when I were I was I was younger had an
86:27 - apartment there where we would go on
86:29 - vacation trips and we went there a lot
86:32 - and we rented out sometimes and um yeah
86:36 - now Germany is a blast um I would love
86:39 - to go back soon it's been a long time
86:41 - since I I was there uh last but yeah
86:45 - it's it's just an awesome place to
86:47 - be um a lot of concerts a lot of good
86:51 - concert opportun unities in Germany uh
86:53 - so if you're a music fan uh it's a good
86:56 - place to
86:58 - travel um if I ever participated in any
87:01 - type of computer science contest not
87:03 - computer science no I participated in
87:05 - ludum Dar which is a game development
87:07 - competition and I also did one myself
87:09 - called 10hour games which was a lot of
87:11 - fun but not in anything computer science
87:15 - specific
87:19 - um um are we starting or is this already
87:22 - the end I'm sorry to bring it to you
87:23 - this is the end of the stream but it
87:25 - will be uploaded to YouTube you have a
87:27 - few more minutes to ask questions and
87:29 - then I think we're going to close the
87:30 - stream off because then I will have
87:32 - stream for like two hours and I think
87:34 - that's that's enough my my voice can't
87:36 - handle
87:38 - anymore um were I in Poland never been
87:40 - to Poland I would like to go um why did
87:45 - you choose Unity I'm using on real
87:47 - Engine 4 uh because most of the projects
87:49 - that I want to do is easier to do in
87:51 - unity it's faster it's easier to extend
87:55 - um it's very easy to prototype in Unreal
87:57 - Engine has come a long way since I chose
88:00 - Unity originally as like my main engine
88:03 - that I wanted to do tutorials on and
88:04 - stuff like that um but yeah totally
88:08 - depends on the
88:09 - project do I like game jams game jams
88:12 - are awesome do you prefer working in
88:14 - teams or alone on game jams I really
88:16 - like doing like a little project on my
88:18 - own but I've also done a lot of uh like
88:21 - uh
88:22 - Tim limited project as a team and that
88:24 - can be just as fun it really depends on
88:27 - what you want to do and and what you
88:28 - want to get out of it if you can find
88:30 - someone who is kind of in line with your
88:32 - thing and and thinking and who you have
88:34 - a great time uh um doing this sort of
88:36 - stuff with you should definitely do it
88:38 - as a team it's it's it's just so much
88:41 - fun
88:45 - um uh let's see am I working on any
88:50 - personal projects at the moment um not
88:53 - too many personal projects I did a bit
88:55 - of neuro Evolution and genetic
88:57 - algorithms here uh for fun also a lot of
89:00 - terrain generation I've had a lot of fun
89:03 - doing that inside of unity um but really
89:05 - I've been working on a
89:08 - website uh which is this huge new secret
89:12 - thing that you're going to see soon that
89:14 - I'm really really excited to show you
89:16 - guys it's going to be I think you're
89:17 - going to have a blast using it um I
89:21 - can't say too much right now I don't
89:23 - want to spoil it until it's totally done
89:25 - but it means free stuff so that's
89:28 - awesome so I'm really I'm working on
89:30 - something really big that I've been
89:32 - pouring a lot of hours into and it's
89:34 - also taken hours away from the
89:35 - multiplayer FPS course I'm sorry about
89:37 - that but don't worry it's it's not gone
89:40 - it will be right back have I been in
89:43 - Norway I don't believe I have U maybe
89:46 - maybe just traveling through but I
89:48 - haven't really spent time there sorry um
89:52 - how can I learn if I had a have a hard
89:55 - time coding so you want to program and
89:59 - it's difficult it is for everyone in the
90:01 - beginning no one has an easy time
90:03 - getting into programming um if you have
90:06 - a really really hard time and find you
90:07 - just constantly get stuck pick up
90:10 - something easier if you don't start with
90:12 - C++ um I think pretty much the easiest
90:14 - thing that you can start with in terms
90:16 - of
90:17 - like real programming and not like HTML
90:20 - CSS kind of stuff just not just styling
90:23 - um would be uh Python and uh then you
90:27 - can move on to Java or C or JavaScript
90:32 - which is even easier so I think uh
90:34 - python is a great place to start or you
90:36 - can start with the make a game course if
90:38 - you want to make games that is on my
90:40 - YouTube channel in the beginning do a
90:42 - lot of copy pasting and just try uh
90:45 - don't don't you don't have to like write
90:47 - everything yourself you can just copy
90:49 - things in uh from The Forum or what
90:51 - whatever just search for the
90:52 - functionality copy the script and see if
90:54 - you can make it work and edit it and
90:57 - tweak a few things and see when it
90:58 - breaks and when it works and when it
91:00 - becomes awesome uh and then later don't
91:02 - worry you'll get the hang of it and you
91:04 - will start be able to write code on your
91:05 - own and that's when it really kicks off
91:08 - and and becomes super fun but everyone's
91:10 - been there having a hard time learning
91:12 - to
91:14 - code um what language do I speak I speak
91:17 - Danish that's my primary language I also
91:20 - speak English
91:23 - somewhat and I speak a tiny bit of
91:25 - German but it's embarrassing so I'm not
91:28 - going to do that which is we get taught
91:30 - that in school and it's always been kind
91:33 - of the language that I refuse to learn
91:35 - so I'm I'm in no way going to do
91:40 - that um want to see some more advanced
91:42 - tutorials it's good to know uh doly
91:46 - noted uh do I study computer science or
91:49 - something in that direction I don't
91:50 - study at the moment no um but of course
91:53 - uh I study in my free time just with the
91:56 - internet there a lot of stuff out there
91:58 - don't need to take an
91:59 - education
92:00 - [Music]
92:03 - um uh people are already asking me to do
92:07 - the the German thing
92:12 - um um yeah yep I am
92:17 - Danish uh yeah so I think the questions
92:21 - have PL Toad and people are now just
92:23 - discussing languages so um if you have
92:27 - any burning questions ask them now I
92:30 - don't have three parents uh if you have
92:32 - any burning questions serious questions
92:35 - preferably ask them now or else we are
92:37 - going to close down the stre the stream
92:39 - here so we have have one minute
92:43 - guys
92:44 - [Music]
92:45 - um why did I learn to use uh Unity
92:48 - through practice through tutorials I I
92:50 - watched the tonado twins back in the
92:51 - today uh that was fun and um yeah loads
92:55 - of practice um you can pick up a book on
92:57 - c as well if you have a hard time
92:59 - understanding it um but just make some
93:02 - projects find something that you want to
93:04 - do and just have a go at it don't
93:06 - doesn't matter what it is or if you
93:09 - finish it or not I think in the
93:11 - beginning all you really need to do is
93:12 - just jump out uh jump into it um if I
93:17 - could choose one feature they should
93:19 - Implement in unity what should it be
93:22 - Jesus Christ that's a good
93:26 - question actually I I just uh got done
93:28 - watching the keyote from uh yesterday
93:31 - and there's a lot of exciting stuff in
93:34 - there right now I think the timeline has
93:36 - been lacking for a long time so that's
93:39 - really really exciting to finally see it
93:40 - that would probably have been my answer
93:43 - um previously but now I have to kind of
93:45 - rethink that one so sorry I don't have a
93:48 - really good answer right off the bat um
93:53 - no no I have
93:55 - nothing I'm actually really satisfied
93:58 - with the amount of functionality right
93:59 - now uh most of the stuff that I've been
94:02 - asking about has been added or fixed or
94:04 - whatever so yeah but you also mostly
94:08 - notice this kind of stuff when you're
94:09 - really uh deep into working on a game
94:11 - and I'm not working on any big game
94:13 - projects right now so I don't have
94:15 - anything to complain about just doing
94:17 - tutorials and that is most of the time
94:18 - just scratching the
94:20 - surface um what projects are planned in
94:22 - the coming months big projects exciting
94:25 - projects secret projects coming up don't
94:28 - worry do I have a girlfriend yes she's
94:30 - sitting next to me and uh she's the
94:32 - admin here she's called Sophie Bob she's
94:34 - saying hi uh she's moderator uh so you
94:37 - will see here in the chat um what was my
94:41 - first game that was a game called uh
94:43 - your game that I was actually that's not
94:46 - totally true but my very first game was
94:49 - a console application then I did
94:52 - um a kind of racing is physics based uh
94:57 - game with just cubes and blender a lot
95:00 - of fun with that did a lot of different
95:02 - stuff in blender the first unity game
95:03 - was uh something called awake which was
95:06 - a horrible horrible uh 2.5d platformer
95:10 - and then I tried to do one called your
95:12 - game didn't turn out too well uh where
95:15 - people could create their own game uh as
95:18 - a mobile app um so yeah that was my
95:21 - first like big
95:23 - project
95:25 - um let's see here um thanks to all the
95:29 - people uh supporting thanks to all the
95:31 - people saying great stream that's
95:33 - awesome um what language do I prefer C
95:36 - what language should I learn that
95:38 - depends on where you are uh if it's your
95:40 - first python if you're experienced um
95:44 - c um yes it will be posted on YouTube um
95:48 - nested prefabs that's a great
95:50 - suggestions I can't believe I forgot
95:52 - that one I will now Revitalize my answer
95:55 - to nested prefabs that is the number one
95:58 - thing that I want to see Jesus Christ
96:00 - that has been a long time in the process
96:03 - um all right by the way if to those of
96:06 - you who watched the uh Unity um
96:09 - presentation the unity keynote I love
96:11 - the joke with the cancel button if
96:13 - you're a longtime Unity user that was
96:15 - the thing like I think the thing that
96:18 - was most discussed on the fs when that
96:20 - first come out was the with the freaking
96:22 - cancel button so um do you like visual
96:27 - uh scripting no I like it for beginners
96:29 - it's a great way to understand the logic
96:31 - but I really don't like using it uh I
96:34 - like typing it's a lot faster and you
96:36 - don't need to move your hands all the
96:38 - way over to the mouse which can be oh
96:40 - exhausting let face it uh but it's it's
96:43 - it's really great as a learning tool and
96:45 - for artists who refuse to get into the
96:47 - programming side
96:50 - um I say I have a lot of work to do but
96:53 - I watch a 2hour keynote I consider it my
96:55 - job to spend time knowing that kind of
96:59 - stuff I cut down on sleep
97:02 - honestly um can you give a quick
97:05 - overview on uh how to do script events
97:09 - in un I'm sorry that's uh not right now
97:12 - it's a bit too late but you can just
97:13 - look up scripted events Unity there
97:16 - tutorials there um a lot of them
97:18 - actually I've seen some myself U when I
97:21 - first wanted to do that stuff um I don't
97:24 - have time for showing you some of my
97:26 - games I will do so at a later point
97:28 - maybe and um yeah all right I think
97:32 - we're going to close the stream here how
97:35 - to read my name we can finish with that
97:36 - my name is
97:38 - espon uh but most people just go aspon
97:41 - or something like that that's fine um
97:44 - the ear makes it kind of weird so thank
97:47 - you so much for tuning into the stream
97:49 - guys I had a blast
97:51 - it was so much much fun I hope you
97:54 - enjoyed on the game and the stream and
97:57 - the explanations and the cura sessions
98:00 - ah now I'm going to have some sleep uh
98:04 - so yeah thank you so much for watching
98:06 - um that was this was a lot of fun it
98:08 - will be on the twitch archive right now
98:11 - in case you miss something right away
98:12 - and it will be on YouTube hopefully
98:14 - tomorrow along with the source code on
98:16 - GitHub if you want to see more of this
98:18 - stuff go to patreon.com Brees and
98:20 - without further do bye guys thank you so
98:23 - much you're awesome keep being awesome
98:25 - bye thanks to all the awesome patreon
98:27 - supporters who donated in October and a
98:29 - special thanks to Sultan elff fa of
98:31 - marifi and James Kell Hound become a
98:33 - supporter at patreon.com
98:37 - Brees