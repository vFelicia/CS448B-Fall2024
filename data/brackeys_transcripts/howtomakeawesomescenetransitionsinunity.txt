00:00 - now something that almost every game
00:01 - needs is a smooth way to transition from
00:03 - one scene to another whether you're just
00:06 - switching from a main menu to your game
00:08 - scene or changing between multiple
00:10 - different levels like this well this
00:16 - doesn't feel right
00:17 - I feel taller well anyway so in this
00:24 - video we'll have a look at creating cool
00:25 - scene transitions that you can really
00:27 - get creative with we'll start with a
00:28 - simple fade to black
00:30 - and then once we have the core systems
00:31 - in place we'll have a look at how you
00:33 - can create other cool transitions like a
00:35 - circle wipe or even custom ones like
00:37 - this break is one that I created so
00:39 - let's get to it
00:40 - but first this video is sponsored by
00:42 - hosting her in the game development
00:43 - field you often find yourself needing to
00:45 - set up a website I want to try
00:47 - programming one from scratch and hosting
00:49 - it on my own but old bar is that a lot
00:52 - of work this is why hosting her is such
00:54 - a great solution for all your web
00:55 - hosting needs they're extremely fast
00:57 - very affordable and just so easy to set
00:59 - everything up with and not only is it
01:01 - extremely easy to set up they also take
01:03 - care of all the backend for you with
01:04 - hosting you can set up your own domain
01:06 - get VPS hosting and they even offer
01:08 - cloud hosting plants we've personally
01:10 - set up a website with them and
01:12 - everything just runs very smooth and
01:14 - hosting is also fully optimized for
01:16 - WordPress get up to 91 percent off
01:18 - yearly web hosting plants using the code
01:20 - brakus simply click the link in the
01:21 - description and get started so with that
01:23 - let's get transitioning so as you can
01:29 - see I've gone ahead and set up two
01:31 - example scenes we have seen a which is
01:34 - open here and seen B and both of these
01:37 - scenes are very very simple as you can
01:39 - see all I have in here are just a few
01:41 - sprites and some text elements nothing
01:44 - fancy and if we add play I've gone ahead
01:46 - and made these sprites pop up and down
01:48 - and if we go ahead and change to scene B
01:51 - we'll get an answer to this riddle so
01:53 - what do you get if you combine a magic
01:55 - egg with some fire and a princess well
01:58 - of course you get a dragon and that's
02:00 - all we have inside scene B it's just a
02:02 - sprite of a dragon and that's it so
02:05 - we'll have a look at how to transition
02:07 - between these two scenes you can of
02:09 - course have as many scenes in here as
02:10 - you'd like so the first thing that we're
02:12 - going to do is go to the higher
02:13 - and let's hit create empty and we'll
02:16 - rename this object to something like
02:18 - level loader
02:19 - let's also read set D transform on this
02:21 - and drag it to the top of the hierarchy
02:23 - so that we can always see it and from
02:25 - here you can add different transitions
02:27 - let's start by creating a simple
02:28 - crossfade so to do this we'll first need
02:31 - some UI so let's right-click on a level
02:33 - loader going to UI and let's create a UI
02:36 - canvas if we go into the scene view and
02:38 - hit F we can see that we now have an
02:40 - empty canvas here where we can start
02:42 - adding UI elements and the only thing
02:44 - that I want to configure about this
02:45 - canvas is I want to change the UI scale
02:47 - mode to scale with screen size just to
02:50 - make sure that all of our UI elements
02:52 - scale appropriately I'm also going to
02:54 - rename this to crossfade just to stay
02:57 - organized now of course a fade is very
02:59 - very simple we're simply going to dip to
03:01 - black and then fade back in our new
03:03 - scene and this only requires one element
03:07 - which is a black color that fills our
03:09 - entire screen let's go ahead and create
03:11 - that now let's right click on a
03:13 - crossfade go UI and let's create an
03:15 - image this gives us a white box in the
03:18 - center of our screen let's go ahead and
03:20 - fit that to the entire size of our
03:22 - screen to do that we'll click over here
03:24 - while holding down alt we'll click in
03:26 - the bottom right corner and that is
03:28 - going to scale our image along with the
03:30 - anchor point to fill our entire screen
03:32 - this means that if we go ahead and
03:34 - resize our game view this image is going
03:36 - to scale with it awesome so now we can
03:39 - set the color to anything that we'd like
03:41 - you can of course tip to white I am
03:43 - going to go ahead and dip to black and
03:45 - that is actually all of the UI elements
03:47 - that we need to create we are actually
03:49 - ready to start animating however one
03:51 - thing that I see a lot of people do is
03:53 - animating the Alpha of the color of the
03:55 - image and that could of course work but
03:58 - if you later want to go in and let's say
04:00 - change the color you need to go in and
04:02 - change that for the animation as well
04:04 - which is just not so handy and if you
04:07 - want to add more elements in here let's
04:08 - say you want to add some text that just
04:11 - says loading well then you probably want
04:13 - to fade that as well and just changing
04:16 - the Alpha of the color is not going to
04:18 - do that so instead on our image let's
04:21 - hit add component and let's create a
04:23 - canvas group component and what this
04:26 - does is that it
04:27 - to change the Alpha of an entire group
04:30 - of objects at once so really really cool
04:32 - I'm just gonna remove the text object
04:35 - here and now we are ready to animate so
04:38 - let's select our crossfade object let's
04:40 - open up our animation window you can get
04:43 - that by going window animation and
04:45 - selecting the animation window and we
04:47 - want to create a new animator and
04:49 - animation clip so we'll just go ahead
04:51 - and hit create here let's create a
04:53 - folder for this called animations and in
04:56 - here we'll create the first animation
04:58 - which will be crossfade underscore and
05:00 - we'll split each transition up into two
05:03 - parts one for the start of the animation
05:06 - which plays at the end of our level and
05:08 - one for the end of the animation which
05:11 - plays at the start of the next level so
05:14 - let's just create crossfade end first so
05:17 - let's save that and now if we hit this
05:19 - red record button we can go ahead and
05:21 - create our animation so I'm gonna go
05:23 - forward to about one second here and
05:25 - then gonna select the image and here we
05:28 - can change the Alpha to zero that's
05:31 - going to add a keyframe here where alpha
05:32 - is zero and it's also automatically
05:34 - gonna create a keyframe at the start
05:37 - where alpha is one so now we are already
05:39 - fading out so if we just play this we
05:42 - can see that our black image is indeed
05:44 - fading out and that's of course the end
05:46 - of our crossfade animation now I'm also
05:48 - just going to go in here and at the end
05:51 - of this animation when our black element
05:54 - is completely invisible I want to go
05:56 - ahead and make it non interactable and
05:58 - make sure that we don't block any ray
06:00 - casts and this is just going to make
06:02 - sure that if we click on the screen
06:03 - we're still going to register button
06:05 - clicks and all that stuff and this
06:07 - invisible element won't get in the way
06:09 - of that awesome and we can now select
06:11 - all of these keyframes and simply go
06:13 - ahead and create a new clip and this is
06:15 - of course going to be a crossfade start
06:17 - and here we can then paste these
06:19 - keyframes back in and let's simply
06:22 - reverse the order of these so we'll take
06:23 - this here and bring it to the start and
06:26 - the other keyframes here and bring them
06:28 - to one second and if we now play we can
06:31 - see the reverse thing happening where we
06:33 - dip to black awesome so the final thing
06:36 - that we need to do to these animations
06:37 - is make sure that they do not loop so
06:40 - that when we are trends
06:41 - they won't just stand there playing over
06:43 - and over to do that we'll go under
06:45 - animations that's like the first one and
06:47 - on the loop time that simply disabled
06:49 - that will do the same thing with our
06:51 - crossfade start so now we have our two
06:54 - animation Clips now we just need to
06:56 - define when we are going to play what
06:57 - animation and we do that using animated
07:00 - controllers as you can see when we
07:02 - created our animation Clips it actually
07:04 - automatically created an animated
07:06 - controller as well let's go ahead and
07:08 - double click this to open it up in the
07:10 - animator window and I'm simply going to
07:11 - dock that over here and here we can see
07:14 - our two animation Clips one of them is
07:17 - going to be a bright orange this is the
07:19 - default clip that is going to play at
07:21 - the start when we open up our level and
07:24 - right now that is set to crossfade and
07:26 - which is also what we want we want to
07:28 - fade from black to showing our scene
07:30 - right when we start however if this is
07:32 - for some reason set wrong for you you
07:34 - can always right click and hit set as
07:36 - layer default state on another clip in
07:38 - order to change to that instead of
07:40 - course when our level then ends we want
07:43 - to transition from our crossfade end to
07:45 - a crossfade start so we'll right click
07:48 - on a crossfade end hit make transition
07:50 - and click on our crossfade start so now
07:53 - we've made a transition between the two
07:54 - but we only want to do this transition
07:56 - if we trigger it let's go up here under
07:59 - parameters and let's add a trigger
08:01 - parameter let's call it start and now if
08:04 - we select our animation transition we
08:07 - can go ahead and add a condition here
08:09 - with the start trigger so now we're only
08:11 - going to play our crossfade start if
08:14 - this start condition is triggered and we
08:16 - can of course do that through code we'll
08:19 - also remove any kind of transition time
08:21 - to make this instant
08:22 - so let's disable has exit time and on
08:25 - the settings we'll set the transition
08:26 - duration to zero and that way we'll
08:28 - instantly start playing the crossfade
08:31 - start animation and that's actually all
08:33 - the setup that we need to do for our
08:35 - animations at this point we're ready to
08:37 - trigger them through a script of course
08:40 - to do that we need to make sure that
08:41 - both of our scenes are added to our
08:44 - build settings so we'll go file build
08:46 - settings and in here you can see that
08:48 - I've gone ahead and added my two scenes
08:50 - if they aren't in here for some reason
08:52 - you can always just simply drag
08:54 - them in I've also gone ahead and
08:55 - arranged them in the order that I'd like
08:57 - that seen a is first and seen P is
09:00 - second and to the right here you can see
09:02 - the index of these scenes this is called
09:05 - the build index and it's what we are
09:07 - going to use to through code transition
09:10 - from one scene to the other in the
09:12 - correct order
09:15 - now with that setup we can select our
09:18 - level loader hit add component let's go
09:20 - ahead and create a level loader script
09:22 - let's double click it to open it up in
09:24 - Visual Studio and the first thing that
09:25 - I'm gonna do here is get rid of our
09:27 - start function we won't be needing that
09:29 - and instead let's have a look at
09:30 - triggering this level change so in your
09:33 - game you probably want this to happen
09:34 - whenever the player kills a certain
09:37 - amount of enemies or reaches a certain
09:39 - point but since this is just a quick
09:41 - example we're just going to trigger this
09:43 - whenever we press a certain button so
09:45 - inside of update we can have some kind
09:47 - of if statement where we check for input
09:49 - dot and I'm gonna use get mouse button
09:52 - down and just input the first mouse
09:54 - button so whenever we click with our
09:56 - mouse I want to go ahead and load the
09:59 - next level and this is a function that
10:01 - will create now so we'll create a public
10:04 - void and I'm making this public in case
10:06 - you want to call it from other scripts
10:08 - for example if you have some kind of
10:09 - final check point that you need to reach
10:11 - you can call this inside of that
10:13 - checkpoint script let's name it load
10:16 - next level and in order to load a level
10:19 - we want to be using so using unity
10:22 - engine dot scene management this will
10:25 - allow us to access these scene managers
10:27 - so here we can go scene manager and then
10:29 - we can simply type load C here we can
10:32 - input any kind of scene name for example
10:35 - I could simply go scene be in order to
10:37 - load scene B or a bull index such as
10:40 - zero or one
10:42 - however instead of changing this from
10:44 - every single level to level
10:46 - that's just automated by taking our
10:48 - current build index so scene manager dot
10:51 - get active scene he's seen that is
10:54 - currently loaded dot build index so
10:56 - we'll take the build index off that
10:57 - scene and just add one on to that so if
11:01 - we are currently inside of seen a which
11:04 - has say build index of zero will get
11:06 - that scene
11:07 - get that bird index and add one in row
11:09 - two load scene B I mean just keep going
11:12 - like that for as many scenes as we have
11:14 - very simple and quick
11:16 - however this is actually going to load
11:18 - this scene immediately and we don't want
11:21 - to do that we want to give time for our
11:23 - animation to play so because we need to
11:26 - delay some code we actually need to
11:29 - create a kuroh team and we've talked
11:31 - about Cairo teens many times on this
11:33 - channel if you've never seen them before
11:34 - the syntax is definitely a bit weird but
11:37 - just stay with me and I'm sure you'll
11:39 - get the hang of it so whenever you're
11:40 - creating a kuroh team we don't type
11:43 - avoid we type I enumerator we then
11:46 - follow it with our function name so this
11:49 - is going to be something like load level
11:51 - and here we're going to take in a level
11:53 - index as an argument and here we want to
11:56 - do three things first of all we want to
11:59 - go ahead and play our animation we then
12:01 - want to wait for that animation to stop
12:03 - playing and finally we want to load the
12:06 - scene so step one here is very very
12:09 - simple all we need is a reference to our
12:11 - animator so we'll create a public
12:13 - animator and let's just call it
12:15 - something like transition this way we
12:17 - can reference different animators in
12:19 - order to have different transitions and
12:21 - then down here where we play our
12:22 - animation we simply go transition dot
12:25 - said trigger and we'll pass in our start
12:28 - trigger this is the parameter that we
12:30 - created inside of our animator and that
12:32 - should go ahead and play our animation
12:34 - then we want to wait for a certain
12:36 - amount of seconds so we'll type yield
12:39 - return new waitforseconds again this is
12:43 - the weird syntax that I was talking
12:45 - about all this does is that it pauses
12:47 - this co-routine for X amount of seconds
12:50 - before continuing on and we can type in
12:53 - let's say one second here or we could go
12:55 - to the top and turn this into our
12:57 - variable so that we can adjust it in the
12:58 - inspector so let's create a public float
13:00 - called transition time and set it to 1
13:04 - by default and then we can simply put
13:06 - that variable down here finally to load
13:08 - the scene we use scene manager dot load
13:11 - scene just as I showed you up here and
13:13 - we'll simply load the scene with the
13:16 - level index that was passed in this way
13:19 - up here we don't have to
13:20 - all loads sing instead what we'll do is
13:23 - call load level and then pass this right
13:27 - in and because our load level function
13:30 - is a co-wrote team we also need a tiny
13:33 - bit of extra syntax here and that is
13:35 - whenever we start a core team we need to
13:37 - call the start co-routine function so
13:40 - we'll wrap this entire function call
13:41 - inside of start co-routine and I need to
13:45 - type that correctly there we go and that
13:47 - is actually all of the code that we are
13:49 - going to need and we are almost ready to
13:51 - hit play the only thing that we need to
13:52 - do is take this level loader and turn it
13:55 - into a prefab so let's drag it into our
13:57 - assets folder and now it's prefab and we
14:00 - can go into scene B and simply drag it
14:02 - in here as well to make sure that it is
14:05 - in both of our scenes this level loader
14:07 - script needs to be in all seams that you
14:10 - want to transition to and from that's
14:12 - very important we'll also just open up
14:15 - our level loaded prefab here and as you
14:17 - can see we need to reference the
14:18 - animator so simply dragging our
14:20 - crossfade here and I think that's all
14:23 - the preparation we need to do if we now
14:25 - go to scene a and hit play we can see
14:27 - that it immediately fades in and if I
14:29 - now click my mouse it's going to
14:32 - smoothly fade from one scene to another
14:34 - really cool of course it's a bit
14:37 - annoying that right now it's overlaying
14:38 - our entire screen with black so you can
14:40 - always go into the prefab here and just
14:42 - select the image and set the Alpha to
14:44 - zero and this way you can see what's
14:46 - going on in your scene when you're not
14:48 - working on it there we go
14:50 - and you might think that was quite a bit
14:51 - of work just to get a symbol fade going
14:53 - Harvie we've now done the groundwork for
14:55 - creating all kinds of really cool
14:57 - transitions so continuing from here is
15:00 - actually really easy if you're going to
15:02 - a level loader we can really easily just
15:03 - duplicate this crossfade and let's
15:06 - create something else like a circle wipe
15:08 - let's disable our crossfade and instead
15:10 - go into a circle wipe here let's have a
15:12 - look in the scene view let's remove this
15:14 - image and instead let's add some kind of
15:17 - circles let's right click go UI image
15:20 - and you can use any source image that
15:22 - you'd like here I've just gone ahead and
15:23 - created a quick circle sprite it's
15:26 - literally nothing about a circle that's
15:28 - it's a negative size here in order to
15:30 - make it big let's just move it over here
15:32 - on the X
15:33 - let's change the color to a black and
15:35 - let's make a quick animation for this so
15:37 - let's go create a new clip let's call
15:39 - this one circle wipe underscore let's do
15:42 - the start animation first let's it
15:44 - record go forward say one second and
15:47 - then simply move this circle over in
15:49 - fact let's just snap it to the center
15:51 - here this way we're kind of animating it
15:54 - in and let's just copy these keyframes
15:56 - go ahead and create a new clip which is
15:58 - going to be circle wipe and paste them
16:01 - and simply reverse them and instead of
16:04 - having the circle go back here let's go
16:06 - ahead and reverse this position on the X
16:08 - to make it go to the other side there we
16:11 - go let's select our two animations and
16:13 - disable the loop time and if we have a
16:16 - look inside of our crossfade animated
16:18 - controller you can see that these two
16:20 - clips have now been added and instead of
16:22 - making this animator more complicated
16:24 - let's just remove these and what we can
16:27 - then do is we can simply create a
16:29 - controller override so in here will
16:32 - right click go create and we'll select
16:34 - an animator override controller let's
16:37 - call this one circle wipe and what this
16:40 - allows us to do is reference our
16:41 - original crossfade controller and simply
16:44 - change the two animation clips so this
16:46 - is going to have the exact same
16:48 - structure as our old animator controller
16:50 - but similarly with other clips so we can
16:53 - take our circle wipe end and put that in
16:55 - place of the crossfade end and do the
16:57 - same thing with the start and now if we
16:59 - go to circle wipe here and reference
17:01 - this circle wipe controller instead and
17:04 - also go to our level loader and drag in
17:07 - our circle wipe instead of the crossfade
17:09 - well then we've actually created a whole
17:11 - new transition just like that and if we
17:14 - save this now and hit play we can see
17:16 - this animation playing really really
17:18 - smoothly awesome in fact you don't have
17:21 - to just use very very simple elements
17:23 - like I'm doing here you can add any kind
17:25 - of flavor to your game using some of
17:28 - these transitions let me just
17:29 - demonstrate this by creating a
17:31 - Brachiosaurus
17:34 - [Music]
17:36 - [Applause]
17:39 - so as you can see I've simply created
17:41 - these two right and left images that we
17:43 - can now animate individually as well as
17:46 - adding in the brackets logo so I'm just
17:48 - going to quickly animate these and once
17:54 - you've created one of the animations in
17:55 - order to reverse all of these different
17:57 - keyframes simply select all of them
17:59 - hitting ctrl a and ctrl C to copy let's
18:03 - create the other animation and let's
18:05 - paste them in however this time in order
18:08 - to reverse this that simply zoom out and
18:11 - this animation is one second long so I'm
18:13 - gonna drag on the bar here at the left
18:16 - and simply drag it over to the two
18:18 - second mark and that has now reversed
18:20 - the entire animation really really cool
18:23 - and finally once this transition is all
18:26 - set up we can go to a level loader and
18:27 - simply drag that in instead if we go
18:30 - ahead and play we can see right away the
18:32 - animation plays perfectly well that's
18:35 - pretty much it for this video if you
18:36 - liked it make sure to subscribe so don't
18:38 - miss the next one now these transitions
18:39 - are pretty quick but if you're working
18:41 - on a logic game I recommend starting to
18:43 - load the game in the background while
18:45 - the transition is playing this is called
18:47 - asynchronous loading and with it you can
18:49 - add another part to your animation in
18:51 - the middle with just some kind of
18:53 - loading screen luckily we have a video
18:55 - already on adding a loading bar but you
18:57 - can easily use this same technique
18:58 - without displaying the loading bar
19:00 - itself so definitely check that out I
19:02 - would also recommend that you turn the
19:03 - script into a single turn so that you
19:05 - can easily load a new level without
19:07 - having to reference it I'll of course
19:08 - everything to where I can learn more
19:09 - about Singleton's in the description
19:11 - also don't forget to check out hosting
19:13 - for fast web hosting solutions simply
19:15 - click the link in the description and
19:16 - get 91 percent off yearly web hosting
19:18 - plans using the code BRAC ease on that
19:21 - thanks watching and I will see you in
19:22 - the next video thanks of the awesome
19:24 - pitch and supporters who donated in
19:26 - December and special thanks to lost to
19:28 - violence locked forever
19:29 - Samuel Bolivia Tannen Chris face Amer
19:31 - Phi Megan Frazier Terry obesity Oh Leela
19:34 - set Daniel to Sonic Jacob Sanford
19:36 - marc-antoine Girard cracker appears no
19:39 - Kiyosaki the mighty Zeus
19:40 - Edison the fierce yet Jade kya and
19:42 - Erasmus you guys Rock