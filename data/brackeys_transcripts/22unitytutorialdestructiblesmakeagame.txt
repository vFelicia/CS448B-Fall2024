00:00 - thanks for tuning in at
00:03 - braies hello everyone and welcome to
00:05 - video number 22 in make a game a cool
00:08 - series on making a video game in unity
00:11 - in today's video we're going to take a
00:13 - look at something really awesome which
00:15 - is destructible objects so objects that
00:18 - will fracture into multiple pieces and
00:21 - then uh have physics applied once uh we
00:24 - interact with them in a certain way and
00:27 - uh how we're going to be implementing
00:29 - this today is by make making our uh
00:32 - player destruct whenever he's killed uh
00:35 - killed by an enemy we're also going to
00:37 - fix a a tiny bug uh which U makes it
00:41 - possible for us to um kind of get
00:43 - multiple game overs uh which is kind of
00:46 - annoying awesome so that's the schedule
00:49 - for today and uh without further Ado
00:51 - let's just get right into it you will
00:54 - note however that at some point we're
00:56 - going to be using blender in this
00:57 - tutorial that's not because you're going
01:00 - to need blender in any way I will of
01:02 - course be providing the model but I
01:04 - thought it would be uh pretty quick and
01:06 - easy to show you how you can actually do
01:08 - this uh
01:09 - yourself cool so uh first off let's fix
01:13 - this multiple game over par and I'll
01:15 - just see if I can uh kind of uh get it
01:19 - uh to do it as we speak here so I'm just
01:21 - going to turn on the volume on my
01:24 - monitors and hopefully that won't be too
01:27 - disturbing here but okay okay oh there
01:30 - you go we got two game overs and it
01:32 - loads the scene uh two times so in order
01:35 - to fix this we actually already have um
01:38 - all of the logic in place we simply need
01:41 - to do an if statement uh inside of our
01:43 - kill on hit script so double click that
01:45 - to open it up in mono
01:47 - develop and uh also we'll also open up
01:51 - the uh game master script just so we can
01:53 - have a look at what's going on so
01:55 - remember we made this static variable
01:57 - called is restarting
02:00 - and uh we kind of managed this inside of
02:02 - our restart level method well now it's
02:06 - time to put it to use so inside of our
02:09 - kill on hit we'll only call the game
02:12 - master. restart level if game master and
02:17 - remember this needs to be capital
02:18 - letters because we accessing a static
02:21 - variable and not the instance D is
02:27 - restarting is equal to false so if we
02:30 - are not currently
02:32 - restarting well then we can just go
02:34 - ahead and restart the
02:38 - level cool so and basically we can just
02:42 - save that out uh remove these and a
02:45 - close down Mano develop and uh now when
02:47 - we hit
02:48 - play and roll
02:51 - over and I'll just turn on the sound
02:55 - here game over it will only do it once
02:59 - we can we can go ahead and move on to
03:01 - the exciting part of today's tutorial
03:03 - which is destructing the player on
03:05 - impact so in order to do this I actually
03:08 - want to uh kind of redo our ball object
03:11 - because currently we are just using the
03:13 - default Unity sphere instead I want to
03:16 - construct this sphere very easily in a
03:19 - blender and then I want to kind of uh
03:22 - fracture it into multiple different
03:24 - pieces and uh then inside of unity we
03:27 - can spawn these pieces give them some
03:29 - Physics and you won't be able to see
03:31 - that we are actually swapping out the
03:33 - original sphere with a new one hopefully
03:35 - at least that's the dream so I hope that
03:38 - this is going to be looking really cool
03:41 - so what we uh actually going to do is
03:44 - simply opening up blender so blender is
03:47 - a free modeling uh piece of modeling
03:50 - software oh yeah I forgot to mention if
03:52 - you have any questions go to from.
03:54 - breast.com but blender is a free
03:56 - modeling software uh and uh it's uh
03:59 - completely open source uh so if you want
04:01 - to be a part of it it's called the
04:04 - blender Foundation but if we just go to
04:06 - blender.org uh you can download the
04:09 - version that I'm using here uh which is
04:11 - version
04:12 - 2.74 that's the most recent stable uh
04:15 - stable build and you can download and
04:17 - install it here and it's of course also
04:19 - for mac and Linux so it's it's very
04:21 - multiplatform and it's actually the
04:23 - really great
04:25 - Tool uh it's it's definitely capable of
04:27 - much more than we're going to be using
04:29 - it today so uh let's just open up
04:33 - blender and you will be met by this
04:35 - starting screen and once you get in here
04:38 - we are going to right click on the
04:39 - camera here and on the sun and finally
04:42 - on the cube while holding down shift to
04:44 - select all of them and uh then we're
04:47 - going to hit X and then click delete in
04:49 - order to remove those objects uh when
04:52 - you're just starting out in blender you
04:54 - will notice that if you uh hold down
04:57 - your middle Mouse button you can pan uh
05:00 - you can uh kind of pivot around the uh
05:02 - Center Point if you then hold down alt
05:05 - while doing or shift while doing so you
05:07 - can um you can drag and you can just
05:11 - scroll to zoom or control and middle
05:14 - Mouse so that's kind of the basics of
05:16 - navigating and we're not going to be
05:17 - doing any of that basically so uh in
05:21 - order to get started here we're just
05:22 - going to H hit shift a that will allow
05:25 - you to add a mesh object and we're going
05:27 - to add the UV sphere then we can uh Zoom
05:30 - closer in on this and uh the number of
05:34 - segments that you want this sphere to be
05:36 - simply how many subdivisions uh is up to
05:39 - you you can just choose the one that uh
05:41 - you want whoops and I'm just going to go
05:43 - with the default of uh 32
05:48 - segments also uh we want to change the
05:51 - shading on this from Flat to smooth in
05:54 - order for this to look like a proper
05:57 - sphere so that's just going to round out
05:59 - the surface then up in the right hand
06:02 - panel here we have basically the
06:04 - hierarchy uh and inside of this I
06:08 - believe in blender is called the graph
06:10 - view uh but uh no uh it's probably not
06:15 - the outliner is what it's called I'm not
06:17 - a very rapid uh blender user excuse me
06:20 - so we're simply going to re rename this
06:22 - to ball and uh what we going to do now
06:26 - is we're going to uh kind of UV unwrap
06:29 - this
06:30 - and basically what that means is that
06:32 - we're going to take all of these uh
06:35 - faces and points called vertices uh
06:39 - inside of the 3D View and we're going to
06:40 - lay it out on a flat plane so we can put
06:43 - a texture onto that and uh that's kind
06:45 - of a whole science and some people find
06:48 - it really difficult including myself uh
06:51 - but we are just going to do a very
06:53 - simple automatic uh unwrap and it's
06:56 - going to look pretty great so um in
06:58 - order to do this what you want to do is
07:01 - you want to go up here where it says
07:03 - default and change to UV editing then we
07:06 - can hit tab to go into edit mode or you
07:08 - can change it down here then we're going
07:11 - to hit u in order to unwrap this but
07:13 - we're going to CH uh select the
07:15 - automatic sphere projection and this is
07:18 - going to give us
07:20 - a fairly bad unwrap I'm not going to lie
07:24 - there are so many ways to unwrap a
07:26 - sphere and uh some probably most are
07:30 - much better than this one but in order
07:32 - to just get on with the tutorial this is
07:35 - going to be just fine especially because
07:37 - we are only going to be viewing this um
07:39 - sphere from one angle and it's only
07:41 - going to rotate along one axis so that's
07:44 - going to be just fine and now we can
07:46 - actually add a texture to it uh when
07:48 - we're back in unity if you don't do this
07:50 - you'll probably just get a single color
07:53 - um because all of the points just maps
07:55 - to one point on that texture and that's
07:58 - going to equal only one color now this
08:01 - will actually overlay a texture cool so
08:05 - uh just hit tab again to go out of edit
08:07 - mode and we can go back into the default
08:09 - view now we want to uh do uh you kind of
08:13 - do a fracture on this object and that
08:16 - uses a plug-in that can be enabled uh
08:19 - from the user preferences so press
08:21 - control alt U or go to file user
08:24 - preferences and in here you can change
08:27 - all uh kinds of things in blender uh
08:31 - we're going to be using the cell
08:32 - fracture so you can either search for
08:34 - cell or fracture and simply enable
08:37 - enable it here make sure that you have
08:40 - the uh version that I'm using or a more
08:44 - current one in order to get this
08:46 - plugin cool so what we're going to uh do
08:49 - now is go over here uh in the left hand
08:51 - side and just hover over it and a new
08:53 - button will appear called the self
08:55 - fracture button now in here we can
08:57 - simply click that and it's going to open
08:59 - up a whole other panel with a bunch of
09:02 - settings basically we want to limit uh
09:04 - the amount of objects we get to 15
09:07 - because that's going to be plenty you
09:08 - can do more but remember that we're
09:10 - going to have uh rigid body objects with
09:13 - mesh colliders on each of these uh so
09:16 - the more you do the more taxing on the
09:18 - computer that should be pretty
09:19 - self-explanatory also we're going to
09:21 - bump up the noise to one uh just to get
09:24 - some Randomness in there and uh other
09:26 - than that we can just leave the settings
09:28 - as is and hit
09:30 - okay now basically you it will look like
09:34 - nothing has changed except for in the
09:36 - outliner where we can now see uh 15 cell
09:40 - oh okay it only did 12 uh but we can see
09:43 - 12 cell objects but um we can really uh
09:46 - see them uh if we click on them inside
09:49 - of our um perspective view here so what
09:52 - we inside the viewport so what we're
09:54 - going to do is we're going to change
09:55 - over to the layer that these are on
09:58 - because if you uh look down here you can
10:00 - see that we have objects on two layers
10:03 - so this is the first layer and that's
10:05 - just our ball and this is the second
10:07 - layer where all of our fractured bits
10:10 - are and if we just right click on one of
10:12 - these and drag it out you can see that
10:14 - we now have the solid pieces that the
10:16 - cube has split been split into so that's
10:20 - awesome that's basically all we need to
10:22 - do inside of blender the W the rest we
10:25 - can manage in uh Unity so now let's go
10:28 - to file let's save this and the real
10:31 - cool thing about blender is that it
10:33 - integrates extremely well with unity
10:35 - because we can just save the blend file
10:37 - we don't even need to export to um any
10:40 - fbx or anything like that we can simply
10:42 - save it as a do blend so I'm just going
10:45 - to navigate to my Unity uh F folder here
10:48 - my Unity project which is make a game go
10:52 - to assets let's put it under models and
10:55 - let's rename this to um player or ball.
10:59 - blend that's pretty much up to you I'm
11:01 - just going to do player. blend and let's
11:03 - save as a blender file now we can simply
11:06 - minimize this go back into
11:09 - Unity come on Unity there we go and
11:12 - unity is probably going to recognize
11:14 - that it has a new model and uh there it
11:16 - actually imported really quickly what I
11:19 - want to do you can see that it
11:20 - automatically creates this materials
11:22 - folder uh I actually want to go into the
11:24 - import settings and just remove that I
11:27 - don't want to import any materials um
11:30 - all of these settings you should pretty
11:31 - much be able to leave except we're going
11:33 - to change the scale factor to
11:37 - 0.55 uh that's a magic number but when I
11:39 - was playing around that seemed to look
11:41 - pretty close to uh the object that we
11:44 - have here now let's hit apply on that go
11:47 - on the rig select none hit
11:50 - apply and do the same thing with
11:52 - animations oh okay that's disabled with
11:54 - the Rick that makes sense so now we can
11:56 - simply remove this materials folder
11:58 - because well it's unnecessary to have it
12:00 - there and you will notice now that if we
12:03 - close down blender you can simply double
12:05 - click this at any moment and it will
12:07 - open up in blender and you can make
12:08 - changes save and it will update inside
12:11 - of unity so it's really really easy to
12:13 - do that cool so let's drag this player
12:17 - object into our uh scene and uh it
12:21 - actually looks like it's a bit too small
12:24 - now uh but what I want to do is simply
12:27 - uh find the ball object here because
12:29 - that has a bit different scale uh so if
12:32 - we drag it on the ball object uh it
12:35 - actually looks a bit too big so let's
12:37 - try 0.5 instead I like to change all of
12:42 - my scaling in here uh I think it makes
12:44 - it
12:46 - easier yeah and that that's actually
12:49 - pretty on point cool so on the ball
12:52 - object itself we're going to disable its
12:54 - mesh renderer so we can f focus on the
12:56 - player object here and I'm going to go
12:58 - ahead and rename that to Graphics uh
13:01 - then under the graphics we're going to
13:03 - have this ball object but I also want to
13:06 - add an empty
13:07 - object and uh we're going to reset the
13:10 - transform on this and this is just going
13:12 - to store all of the uh ball uh pieces so
13:16 - we're just going to say ball pieces or
13:18 - fragments or whatever you want to call
13:20 - that and drag the ball cell onto that
13:22 - and yes we want to just lose the
13:24 - connection we can get that back at any
13:27 - point so now that we have all the Bol
13:29 - pieces here we can see all the cells and
13:32 - uh first off let's just uh disable the
13:35 - ball pieces and select the ball here and
13:38 - find the proper material so we'll just
13:40 - get the ball wood one and you can see
13:43 - that the unwrap is quite decent I mean
13:45 - it it gets really uh tied up here but uh
13:49 - from the side here it looks kind of all
13:52 - right so inside of our Graphics if we
13:54 - want to kind of um change this we can
13:58 - but I think if we seed from out here
14:00 - it's going to look just the same
14:03 - basically so I think we're pretty
14:05 - satisfied with that you can of course
14:07 - just do a quick Google search
14:09 - on um a sphere UV mapping in blender um
14:14 - but this is going to work for now so the
14:16 - ball here uh is simply going to store a
14:19 - m renderer and um I was thinking that we
14:23 - maybe want to uh move all of our rigid
14:27 - by we're going to keep our rigid body LC
14:29 - here and the same with this sphere
14:30 - collider then we're just going to
14:32 - disable that and uh disable this uh
14:35 - graphic here and then enable the Bold
14:37 - pieces so once we have that in place we
14:40 - can disable that and enable the Bold
14:42 - pieces
14:43 - instead and you can see that they also
14:45 - need a material to be applied so we're
14:48 - simply going to select all of the pieces
14:50 - and you can multi-edit like this and now
14:53 - select the Ballwood material and it's
14:55 - going to look just like the
14:56 - non-fractured one but with all of these
14:59 - pieces then in here uh we can simply add
15:03 - a rigid body component and uh we're
15:06 - going to set it to use gravity and all
15:07 - the default settings there and a mesh
15:10 - collider however we however we want
15:13 - these mesh colliders to interact with
15:16 - other M colliders we want them to
15:18 - interact with each other and in order to
15:20 - make them do that we need to check the
15:22 - conve and that's simply uh a a
15:25 - simplified version of the mesh collider
15:28 - uh but they will now interact with each
15:30 - other and you can see this is only 12
15:33 - pieces if we had a 100 pieces here the
15:36 - calculations would be crazy and uh
15:39 - fairly
15:40 - unnecessary so now that we have those uh
15:43 - I think it's fair that if we just if we
15:45 - just test this out so I'm simply going
15:47 - to click is kinematic on the rigid body
15:50 - so that it stays on in place and uh
15:52 - disable this SPH collider on that and we
15:54 - should be able to just see what this
15:56 - looks like in game and you can see how
15:59 - cool that effect is when it fractures
16:02 - and uh all these pieces uh go flying uh
16:06 - you can of course add some Force to
16:08 - these but I kind of like the uh just
16:11 - calm fracture there where they just fall
16:14 - to the ground awesome uh so let's
16:17 - reenable uh or uncheck is kinematic on
16:20 - the rigid body and reenable this fider
16:23 - there then let's disable the ball pieces
16:25 - and enable the ball and let's Now update
16:29 - this prefab cool so now we're going to
16:32 - be creating a script that will actually
16:34 - trigger this Logic on the bow and uh the
16:39 - question is where we want to kind of sit
16:41 - this script uh so if we find the um the
16:46 - script that currently uh kills us the
16:50 - kill line hit here uh you can see that
16:52 - it has this restart level functionality
16:55 - which is has a short delay well I think
16:58 - that uh we should just use this and then
17:00 - maybe find a reference uh to our ball um
17:05 - is kind of what I've thinking I'm
17:07 - thinking here so if uh we go into here
17:10 - and in the function we can type uh
17:15 - collider uh and we're just going to call
17:17 - this call info for Collis info or
17:20 - collider info and then we can say uh
17:25 - if Co info
17:29 - and for some reason the auto completion
17:31 - in mono develop is is being really
17:33 - annoying with me today that's kind of uh
17:36 - so I'll just hope that I can Wing
17:38 - this uh but uh let's see we have the
17:41 - ball tagged as player so we can say if
17:45 - uh coll info. tag is equal to
17:49 - player then we want
17:52 - to uh find some stuff on the player um
17:58 - the the question here is basically we
18:00 - can handle all of the logic in here or
18:03 - we could have a script that sits on the
18:05 - ball here that basically handles
18:07 - everything for us and then we can simply
18:09 - call the destruct method on that script
18:12 - and I think that's what we are going to
18:13 - do so we simply going to uh keep this
18:16 - for now simply comment this out and say
18:18 - um get the
18:22 - destruct uh
18:25 - component call the destruct
18:33 - destruct
18:35 - method cool so now we know what to
18:38 - implement here and then we can go ahead
18:40 - and simply create a c script on the ball
18:43 - and we're simply going to call this self
18:48 - destruct or is destructible is that
18:51 - better that's probably better so
18:54 - destructible uh but uh this is going to
18:56 - be pretty specific to the player right
18:58 - now but I think you should be able to
19:00 - tweak this in order to make other
19:03 - objects destructible I mean this is just
19:05 - the kind of logic that will trigger the
19:08 - destruction we've kind of already made
19:11 - the destruction itself so we can delete
19:13 - the uh using system. collections
19:15 - namespace that's not something we're
19:17 - going to be using and uh then we can
19:19 - make a public void uh that will do stuff
19:22 - for us here so we're going to make a
19:24 - public void and uh we're just going to
19:26 - call this destruct
19:29 - and uh or not public void I am so used
19:33 - to uh C uh for some reason I created a c
19:37 - script here I'm sorry um that's just
19:40 - kind
19:41 - of automatic from now on my the series I
19:44 - in C okay so we're going to do
19:47 - self-destruct and this is going to be of
19:49 - type JavaScript and again we want this
19:52 - to be
19:53 - destructible in JavaScript there we go
19:57 - I'm so sorry
19:59 - cool so let's load this up and uh yeah
20:03 - so in here we simply going to make a
20:08 - function and we're going to call this
20:14 - distrct for some reason I just can't
20:16 - spell that correctly and uh inside of
20:19 - this uh we basically want to uh disable
20:22 - the rigid body we want to disable the
20:25 - collider we want to enable the uh pieces
20:29 - and we want to disable the uh whole ball
20:33 - model so that's kind of a lot of
20:36 - references that we need first off we
20:38 - need a rigid body and we're simply going
20:41 - to call this yeah we we're just going to
20:43 - call this rigid
20:46 - body like this we need a reference to uh
20:51 - oops again the C that's crazy okay we we
20:56 - need a v rigid body
21:00 - of type rigid
21:02 - [Music]
21:05 - body like this and uh we also need a
21:10 - VAR um and this is going to be the
21:13 - reference to our collider and currently
21:15 - we are using a sphere collider so we
21:18 - need a VAR
21:21 - sphere or VAR collider of type sphere
21:28 - Collider
21:29 - we also need a um I think is rigid body
21:34 - just with a non Capital yes it is uh we
21:38 - also need a reference to our pieces so a
21:41 - VAR pieces of type
21:45 - transform and VAR um and a whole ball of
21:51 - type
21:52 - transform cool hopefully I got that
21:55 - right now in the destruct method we need
21:58 - to do
21:59 - rigid body
22:01 - Dot and I believe it's just is
22:05 - kinematic and uh we're going to set that
22:07 - to
22:09 - false or to true I
22:12 - mean then in here we're going to say
22:17 - collider uh dot um
22:22 - enabled equals false we're going to say
22:27 - pieces. set
22:31 - active and we're going to set them as
22:33 - false or as true
22:36 - now and we're going to set whole
22:39 - ball do set
22:42 - active to
22:45 - false okay that's there are definitely
22:48 - some errors in that also we have an
22:50 - unexpected token that's because again I
22:53 - WR wrote this as C so this is going to
22:55 - be our collider info and it's going to
22:58 - be of type collider there we go so let's
23:02 - check this so we have an ambiguous
23:05 - reference rigid body destructible so why
23:07 - is this
23:09 - ambiguous let's see rigid body that is
23:13 - kinematic uh that should be all oh
23:16 - that's because it automatically declares
23:19 - the rigid body so this is just going to
23:21 - be a ball rigid
23:27 - body and uh it's going to be the same
23:29 - with the collider so ball
23:36 - collider and uh the set active is not a
23:39 - member of transform then it's a member
23:42 - of game
23:43 - object let's see how we went with
23:46 - that and we have no errors so that's
23:49 - amazing sometimes when autoc completion
23:52 - doesn't work you just question
23:54 - everything you do cool so let's see if
23:57 - this actually works and of course we're
23:59 - going to have to set up a bunch of
24:00 - references so on our ball here we'll
24:03 - simply drag in the rigid body we'll drag
24:05 - in the sphere collider we drag in the
24:08 - ball pieces and the whole
24:12 - ball okay so now let's actually
24:14 - implement this into our kill on hit um
24:17 - script so first we want to get the
24:20 - destruct uh destructible component and
24:23 - uh in order to do this we'll make a new
24:24 - variable we'll call this destructible uh
24:27 - but with uh a small D and uh then we'll
24:31 - uh simply say that it's going to be of
24:33 - type
24:34 - destructible and uh we're going to set
24:37 - it equal to get
24:39 - component or uh call
24:41 - info. get
24:43 - component and uh we're going to get the
24:46 - uh component destructible and simply
24:49 - cover it in here because it's um it's
24:51 - not going to tell you if it's wrong
24:53 - until you run it and uh then we're going
24:56 - to cast this as a destructible so we are
24:59 - basically going to tell it that the
25:01 - component that we want to get is of type
25:04 - destructible uh so that's kind of a
25:06 - clumsy way to do it uh but it works and
25:09 - uh then in here uh we simply want to
25:11 - tell it that we
25:14 - uh that the method that we want to call
25:17 - is uh called destruct so we are simply
25:20 - going to call the destruct method so we
25:23 - get a reference and we call the method
25:25 - uh that's a very normal way of uh
25:27 - calling public uh
25:29 - functions cool so now that we've kind of
25:32 - saved that out we should be able to head
25:35 - back into Unity now and uh this is going
25:38 - to uh work a um pretty uh nicely
25:42 - actually it's going to work just fine
25:44 - just until we respawn so have a look if
25:47 - we hit play here and we roll over we
25:51 - should dissolve and we do but when we
25:54 - respawn we respawn in a bunch of pieces
25:58 - so that's kind of not what we are
26:00 - looking for so basically what we want to
26:02 - do here uh is um we want to kind of we
26:07 - or UND distruct
26:09 - ourselves and uh in order to do this uh
26:12 - there are a bunch of things that we can
26:15 - actually do uh we want a method that
26:17 - will uh kind of enable all of these
26:19 - components again and uh we also want a
26:23 - way of kind of resetting up ball pieces
26:27 - so instead of keep keeping track of
26:29 - their positions and resetting them uh
26:31 - what I want to do is I simply want to
26:33 - make the ball pieces a separate object
26:36 - that we can then uh spawn in so uh we
26:39 - are simply going to uh reenable this and
26:43 - uh we are going to uh kind of drag it
26:47 - out here and we are going to lose the
26:49 - prefab connection then I want to apply
26:52 - this ball and uh then I want to make the
26:56 - ball pieces into a separate prefab and
26:58 - I'm just going to drag that into the
27:00 - prefabs folder and I want to reset the
27:03 - position on uh those so now that we have
27:07 - that going for us um we can just delete
27:09 - the ball pieces and uh we want them to
27:14 - scale uh with our ball here so we'll see
27:17 - if they do that when we instantiate them
27:19 - in so what we can do here uh is we can
27:24 - um find our ball we can go into our
27:27 - destructible SC
27:28 - script and uh in here we want to uh
27:32 - instead of um setting active some pieces
27:35 - we want to spawn them in so first off we
27:37 - want a reference to the place that we
27:39 - are going to spawn them in and that's
27:40 - going to be of type transform and we're
27:43 - simply going going to call this the
27:45 - pieces parent then next up we want a v
27:50 - pieces
27:52 - prefab and that's also going to be of
27:54 - type transform this way we can simply
27:57 - instantiate
28:04 - and what we want to instantiate are the
28:06 - uh pieces
28:09 - prefab and where is the pieces
28:12 - parent. position and pieces
28:16 - [Applause]
28:17 - parent.
28:19 - rotation and then we can parent the
28:21 - pieces onto that so we're going to set
28:23 - the
28:24 - pieces uhe uh okay we want the reference
28:27 - first first here so we are going to make
28:29 - a VAR and this is going to be the Clone
28:33 - that's kind of standard calling it The
28:34 - Clone in unity and uh then we want to do
28:37 - clone do and uh we're going to set
28:41 - parent equal to uh the
28:45 - pieces parent and this is probably going
28:48 - to uh complain about a uh that we need
28:52 - some casting no it actually does that
28:54 - for us in JavaScript so Hallelujah cool
28:58 - so the pieces parent here uh we want to
29:01 - just drag in the graphics and the pieces
29:03 - prefab we want to find that in our
29:06 - prefabs do so simply uh navigate in
29:08 - there and uh drag in the ball pieces
29:11 - prefab now we can apply this ball and uh
29:15 - we should see this working uh just as we
29:18 - did before uh so it's not going to fix
29:20 - the bug there and uh indeed they do
29:22 - actually scale down uh so what we can do
29:25 - in order to kind of fix that is uh we
29:28 - can just fix the way that we have
29:30 - scaling set up at the moment so if we
29:32 - find our
29:34 - models find our player object and just
29:37 - drag it up here uh we can simply we
29:41 - should simply be able to take the scale
29:44 - factor here and find a a um scale factor
29:48 - that reminds a lot of um oops of course
29:52 - want to set the scale here to one one
29:55 - and one and uh that actually looks
29:59 - pretty good I think uh so let's just
30:01 - make sure that our sphere collider uh is
30:05 - actually good on that so
30:08 - 0.7 is what we're going to go with I
30:11 - think so um now that we have that set up
30:14 - we can simply uh Delete off the player
30:16 - here and uh now that should be uh
30:19 - completely synced now we don't have this
30:21 - weird scaling issue and that's why I
30:23 - like taking care of any scaling inside
30:25 - of the scale factor uh so now when we
30:28 - play here bump into him uh you can see
30:30 - that it smooth the transitions uh on
30:33 - that uh so the next thing that we are
30:35 - going to do is we need to reset uh the
30:38 - Bol so we need to remove uh the
30:41 - pieces or we could keep the pieces there
30:46 - and never actually parent it now that's
30:50 - that's interesting so let's just not
30:52 - parent this at all but we want to keep
30:55 - the uh position and all that so it's not
30:58 - going to go back with our player uh so
31:00 - if we try this and hit him the piece
31:05 - pieces will stay there and they are
31:07 - independent uh of the rest here and they
31:10 - can actually be there for as long as we
31:12 - want uh so I think we're going to
31:15 - destroy them after a certain amount of
31:17 - seconds but it's pretty fun that they
31:19 - are there for uh kind of for a little
31:23 - bit so let's destroy the Clone here and
31:26 - we might need to do do game object on
31:28 - that one not sure we're going to find
31:30 - out and we're going to destroy them
31:32 - after let's say 10 seconds let's just
31:35 - give it a while so if we uh hit play
31:37 - here uh we'll find out if a game object
31:40 - will do game over and yeah indeed so in
31:43 - 10 seconds these will disappear um cool
31:47 - so oops
31:52 - nope uh destroying the transform
31:55 - component is not allowed so we actually
31:57 - need to do do game object oops game
32:01 - object on that one so let's a play here
32:04 - and this is going to be a pretty long
32:06 - video uh I might need to cut it up uh
32:08 - we'll see over so there and uh we should
32:12 - uh actually see these destroying now I'm
32:14 - just going to make sure so we'll just
32:17 - wait the 10 seconds and yeah indeed they
32:20 - do disappear cool so what we want to do
32:23 - on the bowl uh is we want to re enable
32:26 - this rigid body
32:28 - uh and we want to reenable uh the um or
32:32 - re uh kind of set the is kinematic to
32:34 - false again and rename build the uh
32:37 - sphere collider and the ball here um
32:41 - so I suggest that inside the game
32:43 - Mastery where we already have a
32:45 - reference to a ball we can simply call a
32:47 - method so we'll just do uh function D
32:51 - destroy or
32:54 - destruct and uh then in here we'll uh
32:58 - just basically reverse this code so
33:00 - we're going to set rigid body. isomatic
33:02 - to false we going to enable the collider
33:06 - we are not going to do anything with uh
33:09 - this uh prefab and uh we're going to set
33:11 - the whole ball. setactive to
33:15 - true and uh now inside of our game
33:18 - master object and excuse me if I'm going
33:20 - a bit fast here but the video is getting
33:22 - kind of long uh inside of this what we
33:24 - can do uh is we can simply find the
33:27 - player here when we are uh restarting
33:29 - the level uh down here when we have
33:32 - setting the position to the latest
33:34 - latest checkpoint we can just do
33:37 - player uh or again we're just going to
33:39 - do basically the same that we did in
33:41 - here so we can just copy this if we want
33:44 - to be really effective so we can just
33:46 - get the destructible component and uh
33:49 - whoops we are going to get it
33:53 - from we're going to get it from the
33:56 - player here and and then we're going to
33:58 - call
33:59 - the not the destruct but the D destruct
34:04 - so I think this should uh actually work
34:07 - and uh if we go ahead and uh bump into
34:09 - this guy we fall into pieces a ball will
34:12 - appear and again it's the same ball we
34:14 - didn't have to spawn in a separate preap
34:17 - and now there are these uh fun pieces to
34:19 - play around with it then they will
34:21 - disappear so it's not unreasonable um
34:24 - the amount of pieces but they're there
34:26 - and of course if if you're not satisfied
34:28 - with the pieces here I made them kind of
34:30 - quickly you can just go back in uh to
34:32 - blender and tweak them I mean uh it's a
34:35 - symbol AS double clicking the file so
34:38 - excuse uh I excuse the video being so
34:41 - long but I think that uh it was a pretty
34:44 - uh fun thing to do and uh yeah just play
34:47 - around with it I hope you enjoyed the
34:49 - video and I'll see you in the next one
34:52 - game over
35:01 - [Music]