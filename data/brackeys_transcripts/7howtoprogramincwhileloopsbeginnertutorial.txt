00:00 - thanks for tuning in at brakus hello and
00:04 - welcome to video number seven in the how
00:06 - to program and c-sharp course in today's
00:09 - video we're going to be taking a look at
00:10 - something quite similar to the for loop
00:13 - it's called the while loop and it's
00:15 - really quite useful for a bunch of
00:18 - things and some ways if you have any
00:20 - questions throughout this video head
00:22 - over to forum Rocky's comm where I among
00:26 - many others are ready to answer your
00:28 - questions
00:29 - cool so as always I've opened up xamarin
00:32 - studio and I'm just quickly going to
00:34 - walk you through my solution to the
00:36 - problem that I suggested you solved last
00:39 - time so the challenge from last times
00:43 - video was to loop through the numbers
00:46 - one to a hundred and print out all the
00:49 - even numbers and the way I've solved
00:53 - this solve this is using a basic for
00:56 - loop where I create a variable called I
00:58 - and set it equal to one I say that this
01:01 - uh this loop should run until I is less
01:07 - while I is less than or equal to 100 and
01:11 - we want to increment I every time we
01:15 - live through and then I just check if I
01:18 - is evenly divided by two so this
01:23 - percentage sign here is an operator that
01:25 - will check it for the remainder of a
01:28 - division so if I is equally divided by
01:32 - two it will result in zero and if it
01:36 - does I simply write out the number and
01:39 - separate them with a comma and a space
01:41 - so in order to see this in action let's
01:44 - go ahead and hit play and you can see
01:47 - that it prints out two four six eight
01:49 - ten and it goes all the way up to 100
01:52 - cool so let's just delete this for now
01:56 - leave the console tricky and let's delve
01:59 - into the world of while loops so a while
02:03 - loop can perform many of the same
02:05 - operations that a for loop can such as
02:08 - counting numbers let's say we wanted to
02:11 - print out the numbers 1 3
02:13 - and then we would create an integer we
02:16 - could just call this I stick to the same
02:19 - naming convention as before we could
02:21 - equal this to one then we could create a
02:24 - while loop code while and then we put in
02:27 - that condition say while I is less than
02:31 - or equal to ten and then just like the
02:35 - for loop and if statement we open up the
02:37 - brackets and in here by the way I just
02:41 - quickly want you it I want to and notice
02:44 - that you can also put the brackets down
02:46 - here if you find that easier to read
02:48 - many newer developers does I simply just
02:52 - like them up here but it's really
02:55 - something that programmers can argue
02:57 - about for hours and hours so inside of
03:00 - this while loop we can again simply say
03:02 - console dot write line and then put in
03:06 - the eye but this is where many many
03:10 - developers beginner developers go wrong
03:14 - with the while loops the thing okay I've
03:16 - created this I I've set a condition and
03:19 - I've written out let's go ahead and hit
03:22 - play no no no no no this is not where
03:26 - you go ahead and hit play because what
03:28 - we've created right here is what is
03:31 - called an infinite loop and infinite
03:34 - loops are ugly as hell they will often
03:38 - or almost definitely cause your program
03:42 - to crash because currently we don't
03:44 - increment I I will always remain one and
03:48 - therefore it will never go above ten and
03:52 - so we will keep out writing lines in to
03:56 - infinity and that's really not what we
03:58 - want so what we want to do instead is
04:00 - below the console dot write line we want
04:03 - to remember to increment I and by simply
04:07 - doing simply doing I plus plus we simply
04:10 - say that I should plus equals one
04:13 - however you want to write it so now when
04:16 - we play you can see that it prints out
04:19 - the numbers one two three four five six
04:21 - seven eight nine and then 10 and then it
04:24 - exits the loop and we are done with our
04:26 - main
04:26 - method cool but this is is what you can
04:32 - do with a while loop to emulate a for
04:34 - loop you can also do some other things
04:36 - let's say that we know a person called
04:40 - Tom and Tom knows his basic math and he
04:44 - likes to play with dices so he knows
04:46 - that if he has a dice with the numbers 1
04:49 - through 6 and he throws this he has a 1
04:53 - in 6 chance of getting of rolling a 6
04:59 - but he wants to test this theory out in
05:02 - practice so what he does is he starting
05:05 - through stats throwing his dice and he
05:08 - notates you know a writes down every
05:11 - number that he gets so on the first hit
05:14 - he might get a 2 on the second he might
05:16 - get a 4 and then on the third try he
05:20 - might get a a 6 so he writes down 2 4 6
05:24 - and then he writes out that took three
05:28 - tries but he wants to do this a bunch of
05:32 - time so he can test test out how many
05:35 - times this how many tries it actually
05:39 - takes him to do this so instead of
05:41 - throwing a dice each time he's asked us
05:44 - he's asked us to write a program for him
05:47 - and this is where wild loops are
05:50 - incredibly useful so let's try and write
05:53 - this out in code so first off we're
05:56 - going to need some variables we're going
05:57 - to need an integer and we're going to
06:00 - call this number of attempts and we're
06:06 - going to default this to zero because we
06:08 - start out by the haven't attempted
06:10 - anything let me run want to write out
06:14 - another integer and we are simply going
06:16 - to call this attempt this is going to
06:20 - store the single attempt and we're going
06:24 - to default that to zero also then what
06:28 - we want to do is we want to say while
06:30 - attempt is not equal to 6
06:38 - we want to do something so while we
06:42 - haven't hit a six we want to first off
06:45 - set number of attempts or I'm sorry we
06:49 - want to first offset attempt to a random
06:52 - value so we haven't had it hit a six
06:55 - let's set it to a new random value let's
06:57 - roll again so in order to do this we say
06:59 - attempt equals and this is where we want
07:03 - to get some kind of number generator
07:05 - remember in one of the previous videos I
07:08 - showed you how to generate numbers at
07:09 - random so if you don't know how to do
07:12 - this so if you find the next part here a
07:14 - bit complicated please go ahead
07:15 - go back and watch it there so up here in
07:19 - the beginning of our method we're going
07:20 - to do random and we are going to call
07:22 - this number generator or maybe just
07:25 - number gen and we're going to equal this
07:27 - to a new random then down here we will
07:32 - say that attempt equals number Gen dot
07:36 - next and this will give us a random
07:39 - number between these two values and
07:41 - we're going to put in one because it's
07:43 - inclusive and then seven because that's
07:46 - exclusive so that will give us numbers
07:48 - between one and six and what we can then
07:53 - do is we can set the number of attempts
08:00 - to one more so we can simply increment
08:02 - the number of attempts and let's also
08:05 - write out what what he actually rolled
08:09 - on this particular attempt so let's
08:12 - write out console dot write line and we
08:16 - can maybe say Tom rolled a rolled and
08:21 - then it's simply going to write it out
08:23 - like this so we're going to plus attempt
08:27 - and then maybe a dot and remember the
08:32 - ending semicolon there and a ending
08:37 - parenthesis also whoops and a plus sign
08:41 - there cool so Tom rolled we inside the
08:44 - attempt and then simply finish it off
08:46 - with a dot and then we increment the
08:48 - number of attempts
08:50 - and then when we are done whoops when we
08:53 - exit out of this while loop it's because
08:56 - our attempt hit a six so down here we
09:00 - can write out console dot write line
09:06 - it took Tom and then we can inside
09:12 - number of attempts and then plus
09:17 - attempts so we are going to write out
09:21 - how many attempts it took tom to roll a
09:24 - sex so let's just say to roll a six now
09:32 - let's save this make sure you don't have
09:35 - an infinite loop that we are doing
09:36 - something with the attempt then we are
09:38 - here we're not simply incrementing it
09:40 - but we are getting a random number so
09:42 - let's try this out by hitting play and
09:44 - you can see that see that here he was
09:47 - actually quite unlucky it took him 16
09:49 - attempts to roll a six first four then
09:53 - four then one five three blah blah blah
09:55 - until he wrote a six on his 16th attempt
10:00 - let's try this again so he took him 11
10:04 - attempts to roll the six
10:05 - he took him only three attempts first a
10:08 - three then a three and then finally a
10:10 - sex and you can just keep on doing this
10:13 - as long as as you want to and it's now
10:17 - much easier to write down of these
10:20 - results than simply rolling a dice each
10:24 - time so let's say a good introduction I
10:27 - think to practical problem solving using
10:30 - while loops you can also do something
10:34 - else with while loops you can do what is
10:36 - called a do-while loop it is used not as
10:40 - common though where you simply write
10:43 - like this too and then we put in I'm
10:50 - just going to delete this down here so
10:54 - you this Intex looks like this
11:00 - here so what you do is you first do some
11:04 - kind of action and then you check if a
11:07 - condition is met and if it is it loops
11:10 - back and does the action again we're
11:12 - with a an ordinary while loop it will
11:15 - check if the condition is met before it
11:19 - does the first iteration so a do-while
11:22 - loop is basically you're basically sure
11:26 - that it would do at least one iteration
11:28 - so that's the simple difference there I
11:30 - don't think I need to demonstrate and
11:32 - that's really all you need to do so
11:35 - thanks for watching this video I think
11:37 - it was kind of short actually and I
11:39 - quite like the hand so thanks for
11:42 - watching I hope you enjoyed it and I'll
11:44 - see you in the next video we're going to
11:46 - where I think we're going to be taking a
11:48 - look at methods which is really awesome
11:50 - so again thanks for watching and I'll
11:52 - see you in the next video