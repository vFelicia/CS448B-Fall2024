00:00 - thanks for tuning in at
00:02 - braies hello everyone and welcome to
00:05 - video number eight in going 2D today
00:08 - we're going to take a look at creating
00:10 - some DUI that will allow us to restart
00:13 - the game we will also just fix a couple
00:16 - of
00:16 - bucks we are actually getting pretty
00:19 - close to finishing the game up and being
00:21 - able to export it so um not a lot of
00:24 - videos to go so let's just get started
00:26 - with today's video so first up open up
00:29 - units as
00:31 - always cool so first we're going to look
00:34 - at a bug that has been annoying quite a
00:36 - few people and that is the ball uh ball
00:40 - sometimes slowing down when colliding
00:41 - with the top of the players um even
00:45 - though the bounciness is set to uh one
00:48 - and the friction to zero the ball can
00:51 - still slow down at times so I've written
00:54 - some okay code uh to fix it um it's
00:58 - basically just uh patching things up uh
01:02 - it's not the best practice U but the
01:05 - alternative would be to uh write the
01:07 - ball Collision uh completely from ground
01:11 - up and I think that's just too much for
01:13 - this video uh so today we're just going
01:16 - to implement the code I came up with
01:18 - which is a uh pretty basic um setup cool
01:23 - so first of open up the ball control.
01:26 - Javascript file and let me just zoom in
01:28 - on the text here
01:30 - and then we're going to make an update
01:32 - function so just right below the
01:34 - function start create an
01:37 - function
01:39 - update
01:41 - and open up
01:44 - the brackets there and in here we will
01:47 - just do VAR XV for x
01:51 - velocity of type
01:53 - float equals rigid
01:58 - body to 2D where the first R here is
02:02 - just non-
02:03 - capitalized
02:06 - dot
02:08 - [Music]
02:10 - velocity do X so we're just storing our
02:15 - uh x velocity the movement speed on the
02:18 - x-axis into a float variable so we can
02:21 - just reference it throughout then we're
02:24 - going to say if this x
02:28 - velocity
02:30 - is smaller
02:31 - [Music]
02:32 - than and I'm going to say 18 here uh you
02:36 - can go ahead and change this it's going
02:38 - to depend on the speed you set the ball
02:40 - off with uh the ball speed up here you
02:44 - don't set that directly you set that
02:46 - using add force uh which B which
02:49 - basically means that instead of changing
02:52 - the velocity directly down here we use
02:54 - the add Force function so that um we if
02:59 - we add the force of 100 here it won't
03:02 - actually uh travel with a x velocity of
03:06 - 100 so you're going to have to just
03:08 - figure that out yourself and I can just
03:11 - quickly show you a pretty easy way to
03:13 - monitor your ball's velocity and we
03:16 - simply go debug.log
03:23 - velocity and then just plus the X
03:27 - Val there so now when we save this and
03:31 - head back into
03:33 - Unity uh we get an error here
03:37 - un identifier oops I missed a d there
03:42 - 2D cool so now when we hit into unity
03:45 - and hit play we can see in the console
03:48 - uh that it will output the velocity of
03:50 - our ball and we can see here that the
03:52 - ball uh currently lies around the uh
03:56 - 19 uh or minus 19 when it
04:00 - switches uh so I think that 18 will be a
04:03 - pretty good value to say that if it's
04:06 - less than 18 we will bump up the
04:09 - velocity a bit you don't want to do this
04:11 - constantly because that can mess with
04:13 - collision and stuff so just leave a bit
04:15 - of a barrier there uh that it has to
04:18 - cross before we change the velocity
04:22 - cool um so now we can do
04:27 - if xvl
04:31 - is smaller than
04:33 - 18 and make two and signs
04:38 - XV is bigger than Min -
04:41 - 18
04:43 - and last one
04:46 - [Music]
04:47 - XV is not equal to zero because it's
04:50 - going to be equal to zero when we are
04:52 - resetting the ball and we don't want it
04:54 - to just fly out or conflict here when
04:57 - resetting the ball
05:02 - cool so now inside of this if statement
05:04 - we're going to write another if
05:06 - statement where we're going to figure
05:07 - out if it's traveling to the right or to
05:10 - the left so now we say if
05:13 - xvl is bigger than
05:17 - zero open up some brackets and then in
05:21 - here we are ready to add the uh velocity
05:24 - so we just do rigid body and here we
05:26 - need to add the velocity directly to the
05:29 - rigid body and we can't just change this
05:31 - value because that wouldn't actually
05:34 - apply to the rigid body so we need to do
05:36 - rigid body
05:39 - 2D do whoops 2D do oh that's
05:46 - annoying
05:48 - dot velocity
05:51 - dox equals
05:54 - 20 and again that's just something
05:56 - you're going to have to play around with
05:58 - else
06:05 - rigid body
06:09 - 2D velocity.
06:11 - x equal minus 20 so we're just going to
06:16 - boost it in the other direction so
06:18 - basically what our code does now is it
06:21 - first off stores our currently x
06:24 - velocity as a float variable then it
06:26 - checks if we are traveling between 18
06:29 - and minus 18 uh in either to the right
06:34 - or to the left and it checks if we are
06:37 - standing
06:38 - still and if we are not standing still
06:41 - and are between the 18 and minus 18
06:43 - values it's going to check whether or
06:46 - not we're traveling to the right or to
06:48 - the left and then apply velocity in the
06:50 - direction we're
06:51 - traveling cool uh so now what we can do
06:56 - is we can just monitor what it's doing
06:59 - by adding debug.log so now we can simply
07:02 - say debug.log uh
07:04 - velocity uh
07:08 - before plus x velocity XV here and then
07:13 - close that off and then also a debug.log
07:18 - saying
07:20 - velocity
07:23 - after plus and then just rigid body Tod
07:31 - velocity
07:33 - dox I'm just going to do a small B
07:36 - there cool so basically what will happen
07:39 - now is we will add the velocity and then
07:41 - it will say what it was before and what
07:44 - it's uh it has now been changed to just
07:46 - so you can follow along in what it's
07:48 - doing behind this um behind the scene so
07:51 - now we can clear off the console here
07:54 - and uh just to T Test out if this is
07:57 - working we can uh select our ball bounce
08:00 - and we can uh try to bump down uh the
08:04 - bounciness a little bit but right now my
08:06 - inspector is stuck here so hopefully it
08:09 - will just sometimes I have some issues
08:12 - while uh Dropbox is sinking and it's
08:15 - it's pretty normal see if we can get it
08:18 - to select there cool so select our our
08:21 - bounciness and simply change this to
08:23 - something like
08:25 - 0.8 and now in the console we will be
08:27 - able to monitor what's going on
08:31 - there and we can see that it changed it
08:34 - changes itself uh actually not what
08:37 - right now it sets the before to the same
08:42 - as the after that shouldn't be
08:45 - happening let's just see what's going on
08:48 - here okay so I figured out what our
08:50 - problem was uh the Cod was actually
08:53 - working but I forgot to put the debug.
08:56 - logs inside of the if statement here so
08:58 - they were constantly being called which
09:01 - they shouldn't be so now if we just put
09:03 - them in here and make some space for
09:05 - them there uh we should see this working
09:09 - correctly so now when we hit play clear
09:12 - off all our console locks
09:16 - here we can see that the velocity
09:20 - changes from 15.9 to 20 every time it
09:24 - hits so that will just allow it to
09:27 - um that would just force it to have the
09:30 - right velocity at all
09:33 - times cool so now that that is done uh
09:36 - we can set the bouncing this back up we
09:38 - can clear the console here and if you
09:40 - don't want the debugging uh you can
09:42 - simply just comment those out by
09:44 - selecting
09:45 - [Music]
09:46 - them right clicking and hit toggle line
09:50 - comments great so let's save this and
09:53 - head back into Unity because what we're
09:55 - going to do now is we're going to add a
09:57 - reset button and we're going to do this
09:59 - using a custom skin I've made which I'm
10:01 - going to show you in a sec let's first
10:03 - set up the code for the game manager so
10:07 - select the DM object select the game
10:09 - manager script and double click it to
10:11 - open it up in mono develop now here
10:14 - we're going to scroll down to the
10:15 - function on
10:16 - GUI and then we're going to make some
10:18 - space and we're going to type in if GUI
10:25 - button and then open up some parentheses
10:28 - and say new
10:30 - rect and open that up and we're going to
10:32 - do
10:33 - screen.
10:35 - width divided by
10:37 - two
10:39 - minus let's do
10:42 - 121 / 2 and uh the reason actually let
10:46 - me just show you this before we go into
10:48 - all this so just do screen dot width
10:50 - divided by two
10:52 - comma uh then we're going to do
10:56 - 35 and uh comma
11:01 - 121 comma
11:04 - 53 and these values are all very
11:07 - specific but that's because uh I've made
11:10 - a image that fits these values so I'm
11:12 - going to show that in a sec then we're
11:14 - going to write reset with capital
11:16 - letters and we're going to close it off
11:19 - and then open up some uh some brackets
11:24 - there and then we're going to just leave
11:26 - it empty in here so now when we save
11:29 - this out uh I'm just going to quickly
11:31 - show you why I've selected exactly those
11:34 - values and the reason why is that they
11:37 - fit the image I've the images I've made
11:40 - so if we go uh ahead and close down
11:42 - Unity here and go to the 2D assets pack
11:46 - which you can get from bra.com let's
11:49 - open this up we can see that we now have
11:52 - a new folder called DUI and if we go
11:54 - under this and then on the button we
11:57 - have three states of a button here uh
12:00 - the normal the hover and the pressed and
12:03 - this all looks really weird because it's
12:05 - on a white background but if we just
12:08 - select all of them and drag them into
12:10 - Unity we can set them up so select all
12:13 - three and then change the texture type
12:16 - to GUI and hit
12:18 - apply so now what we can do is we can
12:21 - insert this into our score skin but
12:24 - first let's just make sure that they are
12:26 - positioned exactly how we want them so
12:29 - if we just select the button normal here
12:32 - we can see that it's
12:33 - 121 by uh 53 pixels so if we go into
12:39 - unit uh back into mono develop we can
12:42 - see that I've set the width
12:45 - 221 and the height to
12:48 - 53 and then because when we are using
12:51 - screen. width remember that it uses the
12:53 - Anchor Point in the top left uh corner
12:58 - here so we need to Center this in the
13:01 - middle of the gii so we're going to
13:04 - subtract subtract half of its uh its
13:07 - width so we're going to do minus
13:11 - 121 /
13:13 - 2 cool so now when we head back into
13:16 - Unity it will position it exactly in the
13:19 - center and also something I've noticed
13:22 - is that our um font here is not
13:26 - correctly centered um or it wasn't
13:29 - before at least before it says said
13:31 - minus33 I've just gone ahead and changed
13:34 - this to minus 18 that's a bit closer to
13:38 - the exact
13:40 - center cool so now we can just go ahead
13:43 - and uh add in the skin here so the score
13:47 - skin select that one and then uh open up
13:50 - the button section and then under normal
13:53 - we can select a custom texture and we're
13:56 - going to do button normal then on under
13:59 - hover we're going to do button hover and
14:01 - then under active we're going to do
14:03 - button pressed then we're going to
14:06 - change the text uh color from for the
14:09 - normal and the hover to being completely
14:11 - black the active we're just going to
14:14 - leave that as is then we're going to
14:16 - change the font to I would like aial but
14:19 - you can just mess around with that and
14:22 - the font size to something like
14:24 - 24 so now we're actually ready to go
14:27 - ahead and watch our button in action so
14:30 - now when we hit play we can see that we
14:33 - have a button that is correctly centered
14:35 - called reset and we can press this and
14:39 - uh it will switch between the normal
14:42 - hover and press States
14:45 - correctly cool so now we just need to
14:47 - add some simple logic in order for uh
14:50 - making it reset so we're just going to
14:52 - do inside of the if statement we're
14:54 - going to do player
14:56 - score one equals
15:00 - zero oops that's play score we need
15:02 - player score and player
15:06 - score two equals
15:10 - z and then we're going to do uh a game
15:13 - object. find to find the ball and send a
15:17 - message uh to make it reset and we could
15:20 - do the game object. find here but that
15:23 - would be pretty taxing because then it
15:25 - would have to do it every time we hit
15:27 - the reset button
15:29 - so instead we can go ahead and make a
15:32 - function where it will store uh the uh
15:36 - ball as a variable so let's just do
15:39 - function
15:42 - start and then in here we can start as a
15:45 - variable so let's make a variable for
15:46 - variable for it called VAR the
15:50 - ball of type
15:52 - transform and uh close it off
15:56 - there and then under the function start
15:59 - we can do uh the
16:02 - ball equals game object. find and uh
16:07 - let's do game object.
16:10 - find game object with tag and then we're
16:14 - going to do
16:16 - Bow and uh let's just do transform and
16:21 - close it off so we just setting uh the
16:24 - uh ball as the uh variable here so now
16:28 - when we save this let's just go back
16:30 - into unity and remember to tag the ball
16:33 - correctly so let's go to tag and change
16:37 - it to add tag then write ball and then
16:43 - let's just selected there
16:47 - awesome now we go back into the code and
16:50 - under the player score we simply say the
16:54 - ball. game object. send message
16:59 - and then we're going to do reset ball is
17:03 - the name of the function uh of course
17:06 - you need to change it if you've called
17:07 - it something else and then let's close
17:10 - it off so now it will tell uh it will in
17:13 - the function start when the game starts
17:16 - it will store the ball as a variable as
17:18 - a transform and then it will go down
17:21 - here when we press the reset button and
17:23 - it will send a message to the game
17:25 - object that the reset button uh function
17:28 - or the reset ball function should be
17:30 - called so now when we go ahead and
17:32 - maximize and hit
17:34 - play we have a button that will reset
17:37 - our game so let's just see if we uh
17:39 - change the score a bit here and then hit
17:42 - reset the ball jumps back into place and
17:45 - the score resets so that's basically it
17:48 - for this video uh in the next one I
17:51 - think we're going to go ahead and do
17:53 - some exporting uh but maybe I'll find
17:55 - something else to do let's see um but
17:57 - the ser is pretty much coming to an uh
18:00 - to an end soon so thanks for watching
18:02 - and I'll see you in the next
18:04 - [Music]
18:13 - video