00:00 - [Music]
00:03 - hello everyone and welcome to the 13th
00:06 - video in our Survival game series done
00:08 - by brais I am the CEO of brais and today
00:11 - we are going to take a look at creating
00:13 - audio more specifically audio SS and how
00:18 - you're going to switch between them so
00:21 - um let's open up Unity I've already done
00:24 - this and uh I'm a little freaked out
00:28 - because I already recorded this video
00:30 - once though um I don't know if I forgot
00:33 - to press record or if my recorder just
00:36 -  up but um yeah it deleted the
00:41 - recording so um we're going to try this
00:43 - one more
00:44 - time all right so um I've changed up the
00:48 - unity project a little bit since we left
00:51 - off um I have imported these two pieces
00:55 - music and the first one is called enemy
00:58 - territory and it's kind of a frightening
01:02 - or exciting piece the other one is
01:05 - called friendly music and it's Moody and
01:09 - nice the one we are going to be using
01:11 - when you're near the town so um we won't
01:15 - doing be doing the easy fading and nice
01:18 - switching in this tutorial though we'll
01:20 - be creating the most fundamental game
01:23 - logic for audio
01:26 - changes and I'll show you some pretty
01:28 - cool tips for when when using audio so
01:31 - these two files are pretty damn huge
01:35 - this one is 7.2 mbes and this one is 6.1
01:39 - and that's way too hu uh too large for
01:41 - making games um so I would definitely
01:45 - rem recommend that you compress your
01:47 - files before importing them to Unity and
01:50 - I'll definitely also be compressing
01:52 - these um before I include them in the
01:56 - scripts and assets pack um which you can
01:58 - get from our web website so um I'm just
02:02 - in a little hurry so I won't be doing
02:04 - this now all right so uh if you take a
02:07 - look at these um and click them and view
02:11 - them in the inspector we can see that I
02:13 - have checked off the boxing 3D sound and
02:17 - this is because I want this to play in
02:19 - 2D meaning that no matter where our
02:21 - player exist in the scene um it's going
02:24 - to be equally loud uh so it won't have
02:27 - any pitch or volume change
02:30 - es okay so let's actually go ahead and
02:33 - get started now so select the two audio
02:36 - files and drag them into a new folder
02:39 - which we're going to create now so call
02:41 - this audio select them and drag them in
02:45 - there and we can also go ahead and clean
02:47 - up from our last tutorial track the AI
02:50 - symbol inside the scripts folder we
02:52 - ain't going to be messing with that
02:53 - right
02:54 - now okay so uh let's create a new
02:58 - script right click create JavaScript and
03:02 - we're going to call this um audio
03:07 - zound Zone I don't know Zone and uh
03:11 - you're going to double click to open it
03:13 - up in mono develop as
03:17 - always and yes that was mon develop and
03:21 - we are going to go ahead and delete the
03:23 - two
03:24 - functions and we are going to create a
03:27 - new function which we have never used
03:29 - before it's called on trigger
03:34 - enter and then start parentheses
03:39 - other collider with
03:44 - capital and then open up the
03:47 - brackets so let me go ahead and quickly
03:50 - explain what this function is and when
03:52 - it's called the ont trigger fun enter
03:55 - function is called whenever a game
03:58 - object for example the player is um
04:02 - entering this collider we're going to
04:05 - attach to the game object in a second so
04:08 - simply whenever something enters this
04:11 - game object it's going to call this
04:13 - function and the other um and the things
04:17 - in the parentheses simply means that
04:19 - we're going to want to collect some data
04:22 - from this entering so we want to know uh
04:27 - quite a few things and here we we are
04:29 - going to call this data other and it's
04:32 - going to be a type collider it's going
04:34 - to be the collider that we want
04:36 - something to that we want to know
04:38 - something about so here we collect some
04:41 - that data so that we can later check if
04:44 - it was the player that entered the
04:47 - zone so uh let's go ahead and create a
04:50 - private variable and private just means
04:53 - that it won't be visible inside of unity
04:56 - because we are not going to change it
04:58 - outside of the script so that's just
05:00 - cleaning up the hierarchy a bit so the
05:03 - collider it's going to be called and
05:06 - it's going to be a type string with a
05:08 - capital this is
05:11 - important and then end it up with a
05:14 - semicolon all right so um inside our on
05:18 - trigger in we're going to type the
05:22 - cider meaning the variable we just
05:26 - created
05:28 - equals all
05:30 - do
05:31 - tag so the collider here this is just
05:35 - text this is just a name or in this case
05:39 - attack and uh it's going to be
05:42 - equal the collider or the Collide the
05:46 - one we collided with stack so um if we
05:50 - go ahead and type
05:52 - if the
05:54 - collider is equal to player
06:01 - end up the
06:03 - parenthesis and create the
06:06 - brackets then we are going to check if
06:10 - the game object that collided with these
06:13 - this audio zone is the player has a tag
06:18 - called player and this way we can know
06:20 - that it was the player that entered the
06:22 - zone and thereby play some audio so
06:26 - that's what we are going to do now we're
06:28 - going to play the audio
06:30 - so inside the if statement type audio.
06:35 - playay end it up with a
06:38 - parenthesis and under that we are going
06:41 - to type audio. Loop equals
06:46 - true so here we are saying that we want
06:48 - to play the audio attached to the audio
06:51 - Zone and we want it to Loop when it's
06:54 - done
06:56 - playing and this is going to Loop to
06:59 - Infinity see this is never going to stop
07:01 - unless we do do it forid so uh let's do
07:05 - that by creating a new function and this
07:07 - is going to be called ont trigger exit
07:11 - this is exactly the same as the ont
07:14 - trigger inro except this is whenever
07:17 - something leaves the trigger and we can
07:20 - go ahead and copy everything from the
07:22 - parenthesis of the collider down to the
07:25 - ending of the function because we are
07:27 - going to be using a lot of the same code
07:30 - so actually the only thing we want to
07:33 - change here is this we're going to
07:37 - delete that so now whenever the player
07:40 - exits the collider audio do Loop is
07:44 - going to be
07:46 - false and thereby the audio is going to
07:49 - play out until it's done and then it's
07:53 - just not going to start playing
07:55 - again though uh the audio files that I'm
07:58 - going to be using here
08:00 - uh are not quite optimized for gaming P
08:02 - purposes normally in games you create
08:06 - very small Loops um they could be around
08:09 - 20 seconds long and then you just when
08:12 - you want to Crossfade something um you
08:15 - just set it to stop
08:17 - looping and thereby you can set another
08:20 - audio file to start looping about 15
08:23 - seconds
08:25 - after but my files are about 3 minutes
08:28 - long
08:30 - so uh I just want for now to make it
08:34 - stop immediately else we are going to
08:37 - have two audio files running uh playing
08:41 - simultaneously and that does not sound
08:43 - well so audio. stop parenthesis and
08:46 - theni
08:48 - colon um maybe in a uh a later video
08:52 - we're going to take a look at how to
08:54 - actually fade between the two using
08:56 - coding um simply adjusting the volume
09:00 - though this is a little more difficult
09:02 - that would be done in a for Loop simply
09:05 - uh uh simply adjusting the volume a
09:07 - little bit every
09:09 - frame but for now let's start with uh
09:12 - that we'll just use this logic so you
09:14 - can go ahead and click back into
09:18 - unity and uh see if we get any
09:21 - errors I think we are good for now and
09:25 - uh let's go ahead and create the game
09:27 - objects which we are going to be using
09:29 - so game object create other no game
09:33 - object create empty rename it to audio
09:38 - Zone
09:40 - 01 hit add component physics and the
09:45 - spere
09:46 - collider now let's position
09:49 - it 0 0
09:51 - 0 drag it into the center of our scene
09:56 - into the center of our village and scale
09:59 - it up
09:59 - up a little further than our
10:03 - village yeah that looks about right so
10:07 - inside of here let's drag the script the
10:10 - audio Zone script and let's also apply
10:14 - the audio by double clicking the audio
10:17 - folder and dragging in the friendly
10:20 - music we want this to be be set to play
10:25 - on awake and maybe drag down the volume
10:28 - a little bit
10:30 - so when we play the game let's go ahead
10:32 - and do that now you can hear the music
10:36 - playing and when we leave the
10:42 - collider and nothing's happening I
10:46 - wonder why so if we take a look at our
10:48 - code again you can see that it's looking
10:51 - for a game object with a certain
10:55 - tag this tag is not currently at
10:59 - attached to our player so the function
11:02 - is simply not being called so we have to
11:05 - actually select our player focus on him
11:09 - go up to the right hand corner of the
11:12 - inspector hit the tag and change it to
11:16 - player you could also make your own tag
11:19 - by going to add tag expanding the tag
11:22 - section and then just creating elements
11:25 - but I'm good with the default player tag
11:27 - for now
11:30 - now we should see that when we start the
11:32 - game and run out of the audio Zone it
11:36 - will immediately stop
11:39 - playing not really
11:43 - though um let's take a
11:46 - look if we select our audio Zone yet
11:50 - another trap that is easy to fall into
11:54 - under this spider we need to track the
11:57 - is trigger else we can collide with the
12:00 - Box let me show you this the only reason
12:03 - why we didn't collide with it is because
12:06 - we started inside of it if I don't check
12:09 - this s trigger and try to run into the
12:11 - collider I'll simply run into an
12:14 - invisible wall and so let's check the is
12:18 - trigger put it
12:20 - back and now it will hopefully be
12:22 - working
12:29 - indeed the audio stops playing now let's
12:33 - create a second audio Zone which we can
12:35 - run into so everything won't be
12:38 - completely silent so duplicate the audio
12:42 - Zone call this
12:45 - 02 drag in the enemy
12:48 - territory and uncheck the play on
12:51 - awake now we can drag this over to our
12:54 - enemy so that it gets a little exciting
12:57 - when we near him
13:00 - you can select both audio zones if you
13:02 - want to see how they're
13:05 - intersecting I'm going to take this and
13:07 - drag it a little closer to our village
13:10 - now hit
13:12 - play we can hear the first piece go
13:15 - piece going on we should be hearing it
13:18 - stopping about now and the new piece
13:21 - starts
13:23 - playing that's basic audio audio Zounds
13:27 - and audio switching
13:30 - thanks for watching the video guys and
13:31 - I'll see you in the next one
13:35 - [Music]