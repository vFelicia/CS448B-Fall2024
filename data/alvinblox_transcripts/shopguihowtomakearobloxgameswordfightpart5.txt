00:00 - hello and welcome back to part 5 in the
00:03 - roblox sword fight game series today I'm
00:06 - going to be showing you how to add this
00:08 - really nice shop to your game so that
00:11 - players can buy different swords with
00:13 - their books in-game and they'll be able
00:15 - to equip and equip them so what I'm
00:18 - gonna do is I'm going to give you this
00:20 - GUI you don't have to crazy yourself
00:22 - because it's gonna take a really long
00:24 - time to create it so I'm gonna make it a
00:27 - model and I'm gonna leave the link to
00:28 - that model in the description so just go
00:30 - to that link in description and then
00:32 - you'll be taken to that page if you
00:34 - click on get and take that model then it
00:37 - will appear in my models and if you just
00:40 - click on that model and drag it into the
00:43 - starter GUI you'll be good to go and
00:47 - I'll put another video out I'll leave
00:49 - that under description of how I made the
00:51 - GUI if you are interested in how I did
00:53 - that so let's get straight into the
00:56 - video on how to actually code it and get
00:59 - it working so I haven't put the code in
01:01 - the model I've left that out because I'm
01:03 - going to show you how to code it in this
01:05 - video so you actually learn something if
01:07 - you do want to take the source code
01:08 - though you can become a channel member
01:09 - by clicking the join button which is
01:12 - next to the subscribe button or if
01:13 - you're on android or iOS then there'll
01:16 - be a link in the description if you want
01:18 - to do that but let's get to the
01:19 - scripting then what we're going to do
01:21 - we're going to start off with the with
01:23 - the stats script and we're gonna need to
01:26 - add a few things in here before we get
01:28 - started so the first thing that we need
01:31 - to do is we're going to need to create a
01:32 - folder and that folder is going to store
01:35 - our information about each player so the
01:38 - item that they currently have equipped
01:40 - and the items that they own in their
01:42 - inventory so that folder is going to be
01:45 - called a player data and so to create it
01:47 - what we can say is a local player data
01:52 - equals instance new and then in these
01:58 - brackets in speech marks we're gonna say
01:59 - folder
02:02 - then we'll give it a name so player data
02:04 - dot name equals player dot name okay and
02:11 - we're gonna parent that to go inside of
02:14 - our folder which we've got to create so
02:17 - what I'll do here is I'm going to add a
02:20 - folder into server storage and I'm gonna
02:23 - name this folder player
02:24 - data now if you don't see a folder
02:27 - called items in your game don't worry
02:29 - this is going to come later on in the
02:31 - video I'll explain everything about that
02:33 - very soon so player data dot parent
02:36 - equals game dot server storage dot
02:39 - player data
02:41 - okay so we're inserting a folder into
02:43 - game block service storage player data
02:45 - and we're giving it a name which is the
02:48 - name of their player so if should let's
02:50 - key join the game then it would just be
02:51 - called shedletsky and that forward it
02:53 - would go inside of here and we're just
02:55 - calling it player data in the variable
02:57 - although that does not matter so next
03:00 - thing we want to do want to do exactly
03:01 - the same thing now I'm just gonna speed
03:04 - this up and just quickly paste that in
03:06 - here and explain it so we're creating
03:08 - another variable for our equipped value
03:12 - and that is going to be storing the
03:14 - current item which the player has
03:17 - equipped and we're calling it equipped
03:19 - there we're giving a name and equipped
03:21 - dot parent is player data so it's going
03:24 - inside of that folder which we just
03:26 - created and we're gonna do exactly the
03:28 - same thing again
03:30 - although this time we're doing it for a
03:31 - folder and this folder is going to be
03:34 - called inventory so instance new folder
03:36 - and then the name is going to be
03:38 - inventory and we're putting that inside
03:39 - of the player data folder so it's
03:41 - another folder and inside of that folder
03:43 - we can store all of the tools which that
03:46 - player owns okay so now that we have got
03:49 - our player data folder we were able to
03:51 - store data about each player what we can
03:55 - do is we can just add to our data saving
03:58 - down here so we just go scroll down to
04:00 - line 50 where we have player data here
04:04 - we're going to add two more variables so
04:06 - a local weapons data because that's
04:09 - going to be saving all of the weapons
04:12 - that the player has and we're going to
04:14 - be loading it to that variable
04:15 - and we're going to do local equipped
04:17 - data and equip data will be just storing
04:21 - the data we get from the data store
04:23 - about which item the player has equipped
04:26 - now we're going to have to do get a sync
04:29 - again on these two new pieces of data so
04:33 - we're going to copy this Pico and paste
04:36 - it twice and this time we're going to
04:38 - change player data to weapons data and
04:40 - it's going to be data doors get a sink
04:43 - but the key this time is going to be
04:46 - weapons ok or or web slette us do webs
04:50 - because that's what I have called it in
04:52 - my source code so weapons data equals
04:54 - data stores get the sink webs and we'll
04:56 - be saving this data later on I'm just
04:58 - handling the getting parts right now and
05:01 - once again we're gonna do it for
05:03 - equipped data we're gonna get whatever
05:06 - item the player had equipped from our
05:09 - data store and the key is going to be
05:11 - the player's ID and then equipped value
05:15 - okay so that is the get async parts and
05:19 - now we're just going to drop a few lines
05:21 - down here and we're going to say if
05:24 - weapons data so if they have data saved
05:26 - and they have weapons which have been
05:29 - saved then what we're gonna do is we're
05:33 - going to we're just going to leave a
05:35 - comment for now and we're going to come
05:37 - back to this later on and we're going to
05:39 - do a a for loop through the weapons
05:42 - saved all right so we're going to loop
05:44 - through all of the weapons that we saved
05:46 - and we're gonna load them in and also
05:49 - we're going to set the equips value okay
05:53 - so we're going to do that later on in
05:54 - the video once we have saved that data
05:57 - so the way this is going to work is when
06:00 - a player buys a weapon we're going to
06:03 - make a clone of that weapon and store it
06:05 - in their inventory folder so let's go
06:09 - ahead and just open up the game here so
06:12 - they're going to have that inventory
06:13 - folder inside of their folder inside of
06:16 - player data as you can see in player
06:19 - data they have a folder with their name
06:21 - and inside of that they have an
06:22 - inventory so let's say that they have a
06:25 - sort in their inventory then when they
06:28 - leave the game we're going to
06:29 - save everything inside of this inventory
06:31 - folder and then whenever they joined the
06:33 - game we're gonna loop through everything
06:35 - that was saved to that datastore and
06:36 - place it back into the inventory folder
06:39 - and we're gonna set the equipt value to
06:42 - whichever item they last had equipped as
06:44 - well now if you haven't got this items
06:47 - folder which you probably won't have
06:48 - because I already had it in from the
06:50 - start you're gonna want to insert
06:52 - another folder into server storage they
06:55 - go click on folder and call it I Tamar
06:58 - to put all of your items that you want
07:01 - to sell in this GUI make sure you put
07:03 - them in this folder because we're not
07:05 - going to be actually adding each item
07:08 - into the GUI manually it's all going to
07:10 - be done automatically so let's go into
07:13 - the core local script here and you can
07:16 - see that I've given you some variables
07:17 - that were going to be working with now
07:19 - what we need to do is we need to insert
07:21 - our remote events and remote functions
07:23 - so let's go into replicated storage here
07:26 - and if we go in here we should see
07:29 - another folder and this folder before we
07:32 - go on to the remote functions it's
07:33 - called tool models I'll get to that
07:35 - later on as well so we're going to want
07:37 - to make sure that we have three remote
07:40 - functions added in here one's going to
07:43 - be called get tools one's going to be
07:44 - called item check and one is going to be
07:46 - called purchase item make sure that
07:49 - you've got the capitalization correct as
07:51 - you've got your capital G and T for get
07:54 - tools as we've written it up here and
07:56 - what this remote function is going to do
07:59 - is it's going to invoke the server and
08:02 - it's going to ask the server to send
08:05 - back all of the items we have for sale
08:08 - so everything inside of this items
08:11 - folder in replicated it's all right in
08:14 - server storage because a client can't
08:16 - access anything in server storage but
08:18 - what we can do is we can use a remote
08:20 - function to request to the server in the
08:24 - replicator storage which can see
08:26 - replicate storage and it can pick up
08:28 - that request and send back to the client
08:30 - the data from items because the server
08:33 - script can see everything inside of
08:35 - items so that's just going to return
08:38 - back to us a table of tools which we
08:41 - have for sale
08:42 - and we need to code this so it returns
08:45 - back the items which we have so what
08:49 - we're going to do now is we're going to
08:50 - go into service script service and let's
08:53 - add a new script okay this script is
08:56 - going to be called server Handler and
08:58 - it's going to handle all of our remote
09:01 - function remote events all of that good
09:03 - stuff
09:04 - so we're gonna say game not replicated
09:07 - storage and get tools dots on server
09:13 - invoke in fact let's say or wait for
09:15 - child wait for child gets tools dots on
09:21 - server invoke and then when I say equals
09:25 - function and player okay so add player
09:31 - in brackets and drop a line so this
09:33 - function is going to run when the server
09:36 - has been invoked by the client which we
09:38 - did at the start of our local script
09:40 - which is saying invoke server and so
09:43 - once that request is received we pick it
09:45 - up and this function is going to run and
09:48 - we've got the argument parameter of
09:51 - player which is the player who has
09:53 - invoked this remote function so let's
09:57 - create a table and this table is gonna
09:59 - be called items and then we're going to
10:01 - make that equal to a table and inside of
10:05 - here we're going to loop through every
10:07 - single item in the in the items folder
10:11 - in server storage and we're going to add
10:13 - it to another table and then we're gonna
10:15 - put that table into the first table and
10:17 - it's going to be a nested table so it's
10:19 - gonna look something like this okay so
10:21 - we have our first table and our second
10:23 - table like this so we could have the
10:25 - name of the item so maybe a pistol and
10:29 - then we could have the price
10:32 - okay so 350 so that would be our first
10:36 - item and then we could have a second
10:38 - item etc so that's why we do a nested
10:41 - table like this so let's do a for loop
10:45 - to loop through everything inside of
10:47 - that folder so we can say for what for
10:50 - we just gonna do an underscore because
10:52 - we don't need to say what I is which is
10:54 - gonna be our counter and then
10:55 - objects in pairs and we're going to loop
11:01 - through game dot server storage come on
11:04 - wait for child we insert items because
11:09 - it's the items folder
11:10 - I wouldn't say Curran get children and
11:12 - that's going to loop through every child
11:16 - in that folder so basically everything
11:18 - which is in the items a folder and then
11:20 - when you say do at the end of that
11:22 - because it's a loop and we're gonna
11:24 - create our second table called item
11:25 - properties and that is just going to be
11:28 - a table again but we can say table dots
11:30 - inserts now into item properties so into
11:35 - the first table items we can insert item
11:38 - properties so inside of this item
11:41 - properties table we're going to store
11:42 - the objects name and the objects price
11:46 - okay so what you need to do for all of
11:49 - your items which you insert into the
11:50 - items folder now this is really
11:52 - important you need to make sure that you
11:54 - insert a number value into that into
11:57 - that item so just click on the plus type
12:00 - in a number value and then name it price
12:03 - and give it a value of however much
12:05 - money you want it to cost okay so if you
12:07 - want it to cost 500 books set the value
12:11 - to 500 if you don't add a price value
12:14 - it's not going to work so if it doesn't
12:16 - work make sure that you've added your
12:18 - price value so we're gonna say object
12:20 - not price value just like that and
12:23 - that's going to insert this mini table
12:26 - into this big table so it's kind of like
12:28 - the nested table as I talked about and
12:30 - then what we'll do is we'll just return
12:32 - that big table back to the client so
12:36 - this table of items which will contain
12:39 - all the information about each item that
12:41 - we're selling we're gonna return it back
12:42 - to the local script and that table this
12:45 - one here is going to be equal to this
12:49 - what's going to be set to this variable
12:51 - available tools so if we were to say
12:53 - print available tools then that is going
12:58 - to print out this items table and
13:00 - everything that is inside of it because
13:02 - we've gone from server to client using
13:04 - the remote function because a remote
13:05 - function and always feeds back to the
13:07 - client after it's been
13:09 - called by that client so it goes back
13:10 - with some information so we're returning
13:13 - that items table picking up here in the
13:17 - client and it's gonna be set to this
13:19 - available tools variable okay so now
13:22 - that that is done we will get to
13:24 - actually making the items shop in the
13:27 - GUI in just a little while but for now
13:30 - let's just do a bit of the easy stuff
13:32 - get out of the way let's program the
13:35 - open button here to open and close the
13:37 - GUI so we can say well we've got our
13:41 - variables here and I've defined the open
13:43 - button as a shopper button so we can say
13:45 - shop button dot mouse button one-click
13:48 - curl and connect function we don't need
13:51 - any arguments here or parameters we're
13:54 - going to call them and we're all we need
13:56 - to say to toggle it open or closed is
13:59 - main frame because that's what we
14:02 - defined it as main frame up here as you
14:05 - can see in the GUI we have our main
14:07 - frame main frame not visible equals and
14:11 - not main frame not visible okay and that
14:14 - is going to set the current visibility
14:16 - property to the opposite of whatever it
14:18 - is right now so if it was set to true
14:21 - here then we're just going to set it to
14:23 - the opposite because we've got knots
14:25 - here so if it's true then it's going to
14:28 - be set to not true so false and if it
14:31 - was already set to false then it would
14:33 - be set to not false which is true so
14:36 - that is going to toggle it
14:37 - when it's closed and it closed when it's
14:40 - open now if you want to go test it out
14:42 - you can do click on plate and if you
14:46 - click on shop a few times it should open
14:47 - and close there we go
14:50 - okay so we've done the shop button and
14:53 - now let's work on making the items show
14:56 - up in the frame so we're gonna want to
14:58 - firstly define some more variables so
15:01 - first variable is gonna be called local
15:03 - padding underscore X well actually it's
15:06 - a constant because we're never gonna
15:08 - change it again it's gonna always be the
15:10 - same values that's why it's another case
15:12 - because it's a constant and difference
15:15 - between constant and variable is a
15:16 - variable can be changed and a constant
15:18 - we we don't really what we never change
15:21 - it once it's constant you
15:22 - change is gonna stay the same forever so
15:25 - the padding X is gonna beat naught point
15:27 - naught - I'll explain all of this in a
15:30 - moment and I'm gonna do local drop-down
15:34 - underscore y equals not point two and
15:37 - local drop-down underscore X equals not
15:43 - 0.25 okay so the padding X is well
15:47 - because we're automatically generating
15:49 - these boxes okay we're gonna want to for
15:51 - the first box in each new row we don't
15:54 - want it to be at the well if I show you
15:57 - here the main frame and we go into safe
15:59 - area an item frame you can see if I just
16:02 - change the background transparency so
16:06 - you can see it if I make it red okay you
16:10 - can see that if we were to add a new
16:12 - item to a new row and it was the first
16:16 - item then it should be right up against
16:19 - the frame right it should be like this
16:25 - right it should be up against the frame
16:28 - but it doesn't really look very good in
16:30 - my opinion so you want to do a little
16:31 - bit of padding just to offset it from
16:34 - the left side so what we can do is we
16:37 - can add naught point naught 2 or we can
16:39 - set the scale on the x-axis to naught
16:42 - point naught 2 all right so so it's not
16:45 - point naught 2 of the way across the
16:47 - entire frame okay and that just looks
16:49 - nicer in my opinion and every time we
16:51 - had a new row we're gonna need to set
16:54 - this this padding to that box so it's
16:57 - it's off its offset it from from the
17:00 - left side of that frame and it's in line
17:02 - with all the other iron rose okay so
17:05 - that is why we have padding X okay
17:09 - because it's not put not - as you can
17:11 - see the first box is set to naught point
17:13 - naught 2 as well it's just the scale
17:16 - units from which offset that box from
17:19 - the start of the frame if it's the first
17:22 - item in that row okay drop down Y is
17:26 - another unit of scale so it's two-tenths
17:28 - of the screen and it just means whenever
17:31 - we drop a new line we're going to add
17:33 - that many units of scale on to the
17:36 - current y scale position so it moves
17:39 - down a row okay and drop down X it's the
17:43 - same thing but for the x-axis so if we
17:45 - have another box which is on the same
17:47 - row as the previous one we're just going
17:50 - to add not point two five units of scale
17:51 - to the new box so that it shifts to the
17:54 - right and it's next to the previous box
17:56 - okay so what we're gonna do is we're
17:59 - going to create a for loop which is
18:02 - going to loop through every single box
18:04 - in that available tools table which
18:06 - returned back to the client from the
18:07 - server and what we're doing up here in
18:10 - line 10 is we're saying local number of
18:13 - items equals hashtag available tools now
18:16 - what this does is it return
18:19 - it returns the number of values in the
18:22 - number of indexes or objects or whatever
18:25 - you want to call it and inside of the
18:28 - available tools table okay so if we have
18:31 - five items there's going to be five
18:32 - entries into that table one for each
18:34 - item because we have those five nested
18:36 - tables and so there's going to be five
18:38 - items so we're going to need five boxes
18:40 - okay so our for loop is going to loop
18:43 - through all of these boxes and so do you
18:47 - get the number of times we need to loop
18:48 - we can say for and then I which is just
18:53 - our counter which counts how many loops
18:55 - we've already done i equals and it goes
18:57 - from one okay so one it's the starting
19:01 - number and then comma for our next
19:03 - number and the next number is going to
19:05 - be the number that it goes up to and
19:06 - that's gonna be on a number of items so
19:08 - if it's five it's gonna loop five times
19:10 - and every time it loops it's going to
19:12 - increase that's I incremented I counter
19:15 - by one and whenever I reaches the number
19:19 - of items because each time that we do
19:21 - this loop and it loops through I
19:22 - increases by one which is our value here
19:26 - whenever I gets to number of items
19:29 - imagine it's five it's gonna stop
19:31 - looping okay because all the items have
19:33 - been done so we can say do and then just
19:37 - drop a line and we should have this this
19:39 - end added in for us
19:40 - and what we're gonna do is we're firstly
19:42 - going to check to see if I is equal to
19:46 - one
19:46 - okay so if I is equal to one then drop a
19:50 - line and we'll have this end in here now
19:52 - before we move on just add a couple more
19:54 - variables we want to create a variable
19:57 - for item 1 and that's going to be our
19:59 - template
20:01 - item frame okay so when we want to add
20:03 - another item
20:04 - we're just gonna copy that template and
20:06 - we'll duplicate it change the name and
20:08 - picture of the of the item insider etc
20:11 - so local item 1 equals item frame call
20:15 - on wait for child item 1 all right and
20:19 - then we're just gonna create two more
20:21 - variables local box and we're just going
20:24 - to use this for the current box that
20:26 - we're looping through for our duplicate
20:28 - and then set it to nothing and then
20:29 - we're gonna leave it as nil and we're
20:31 - going to create another variable for the
20:33 - number of rows which are currently on so
20:35 - local num rows equals 1 so if I is equal
20:40 - to 1 and we're looping through it for
20:42 - the first time then our box is going to
20:45 - be equal to item 1 so we can just say
20:48 - box equals item 1 but if it isn't and
20:51 - we've already gone past the first box so
20:53 - on the second box for the third box etc
20:55 - we're gonna want to create a clone of
20:58 - item 1
20:59 - so box is equal to item 1 come on clone
21:02 - and that's going to make a duplicate of
21:04 - item 1 and we want to just name this box
21:08 - item and we're going to concatenate it
21:11 - with I okay so I is the number of times
21:14 - people loop through so for on the second
21:16 - box is going to be 2 so the box name
21:20 - will be item 2 so we're just putting it
21:22 - together item with the the current or
21:25 - the counter of how many times we've
21:27 - looped through so it will be item 2 okay
21:30 - and then we're gonna say box doc parent
21:33 - equals item frame and that's gonna put
21:37 - it in the item frame here where item 1
21:39 - currently is what we're now gonna do is
21:42 - going to do the detection to see if we
21:45 - are on the current if we need a new row
21:47 - or not okay and where to position this
21:49 - box because we're generating it with a
21:51 - script so we need to make sure that we
21:52 - position everything correctly and so
21:54 - they don't end up on top of each other
21:56 - so what we're gonna say is and this may
21:59 - sound really confused
22:00 - but I'll write out then I go over it if
22:02 - I minus 1 in brackets / in brackets
22:08 - again 4 times num rows equals 1 then
22:16 - what this means is okay now we're gonna
22:20 - have in a row there's gonna be 4 boxes
22:23 - per row okay and when we get to the
22:25 - fifth box I'm gonna drop a line now the
22:27 - way to detect that is now remember
22:30 - because I is the number of boxes that
22:32 - were currently on so if I was four okay
22:36 - and what we'll do here is we want to
22:40 - create the fourth box we would say if I
22:43 - minus one which is 3/4 times the number
22:48 - of rows which is because we're on our
22:50 - first row still that's going to be 4 so
22:52 - if 3/4 is equal to one then we're gonna
22:57 - create a new row but that's equal to
23:00 - null point seven five because it's three
23:02 - quarters so we don't need to create a
23:05 - new a new row yet but say we're on the
23:09 - fifth box now okay 5 minus 1 is 4
23:15 - divided by 4 times numrows which is 4 so
23:19 - 4 divided by 4 that equals 1 and that
23:23 - tells us that we need a new row for the
23:26 - fifth box so then we just can make sure
23:30 - that end is added in for our if
23:31 - statement so that means we need a new
23:33 - row so we're gonna say 'numrows equals
23:36 - none rows plus 1 to increment our
23:39 - variable and then we're gonna say box
23:41 - top position equals you dim to new and
23:48 - what I'm gonna do is we're going to
23:50 - insert our padding X which I said just
23:54 - offsets it from the left side of that
23:56 - frame and then a 0 because we don't need
23:59 - any offset we're just using scale and
24:01 - then for the scale on the y-axis we're
24:04 - going to get the boxes at current scale
24:07 - which is just as it is right now here at
24:11 - the top
24:13 - which is have a look not point not to
24:16 - five so we can just say box dot position
24:21 - dot y dot scale and that's the current y
24:25 - scale value comma zero cuz we don't need
24:28 - any offset and then we're just gonna add
24:30 - to that we're gonna add you dim to new
24:33 - so another GUI p.m. another GUI value
24:38 - position value at zero zero because
24:41 - we're not actually incrementing the
24:43 - x-axis we only want to drop it down on
24:46 - the Y because it's new a new row and
24:49 - then for the y scale we're going to take
24:53 - the drop down Y value which is currently
24:56 - set to nought point two but in case that
25:00 - we're on maybe the third row we're not
25:02 - actually going to put it not point to
25:04 - down the screen yet because we've all
25:06 - done a row with that sir about you okay
25:09 - so let's say we've just in our first row
25:12 - then it would be fine just to do this
25:14 - because we're setting it to nor point
25:17 - two which is you know for the second row
25:20 - but if we go to our third row it's going
25:22 - to position it on top of the second row
25:23 - so we need to do x and then in brackets
25:28 - we'll do number o--'s minus one now
25:30 - we'll do the minus one because let's say
25:32 - on the first row okay and then number
25:35 - rows is going to be equal to two we take
25:39 - away one from it to put it back to at
25:41 - one because we only want to add one lot
25:43 - of it one lot of not point two to it
25:46 - before on say our third row then because
25:49 - num rows is going to be three we take
25:51 - away one and we get two and then we add
25:54 - two times not point two which is no
25:56 - point four so we add on naught point
25:58 - four it'll be not point four of the way
26:00 - down on the screen if that makes sense
26:01 - so that is what we do to position a new
26:06 - box but if it's not a new row that's
26:10 - needed we're going to add an else and we
26:12 - know that we just need to add to the Y
26:14 - to the X or e to the X only so we can
26:17 - say box top position equals and then
26:20 - we're gonna say item frame because we
26:21 - want to get the previous boxes position
26:24 - and then when do square brackets to
26:27 - access the previous box I'm gonna say
26:30 - item and concatenate it with I minus one
26:34 - okay putting it in bracket if you want
26:36 - not to be done first and then outside of
26:39 - the square brackets now that we've got
26:41 - the previous box we can say dot position
26:43 - plus udimm - dot new drop down X because
26:49 - we want to out that drop down X value to
26:51 - the the previous box's position to move
26:54 - it to the right and then because we're
26:56 - only changing the scale on the x axis we
27:00 - can just leave the other values as zero
27:03 - just like that and there we go that's
27:06 - all we need to do to create our boxes
27:10 - and that will position them correctly on
27:12 - the screen no matter how many you have
27:14 - it will keep adding rows until we've run
27:16 - out of boxes to add now I think if we go
27:20 - and test this out it might work for us I
27:24 - think we've done enough coding for it to
27:25 - actually work and there we go it's
27:29 - positioned the boxes for us we've got
27:31 - three boxes now and in the output we
27:34 - have no errors so we're gonna go back
27:38 - here and I'm just going to set the item
27:41 - frame back to white and back to
27:44 - transparent and there we go we've done
27:48 - the boxes so now I'm going to teach you
27:50 - about the tool models and also about
27:53 - viewport frames because that's how we're
27:56 - going to be rendering the item pictures
27:58 - basically we don't need to have asset
28:00 - IDs you don't have to take screenshots
28:02 - of the items to make them show up in
28:05 - your game all you need to do is you need
28:07 - to learn how to use a few port frames
28:08 - now a viewport frame is it's a GUI
28:12 - element and error and it renders an
28:14 - object in 3d space okay now let me give
28:18 - you a demonstration so what I'll do is
28:21 - I'm going to click on our equipped item
28:23 - a viewport actually no we'll use we're
28:27 - going to item information and we'll
28:28 - click on the item of viewport now this
28:31 - is a viewport frame and if I just expand
28:33 - the properties tab here
28:35 - and just there you go and scroll down to
28:38 - current camera now what happens is when
28:42 - I set the current camera to a camera
28:44 - object okay let's set it to the camera
28:47 - currently in the workspace this UI
28:50 - element is going to render anything
28:53 - which that camera can see okay so now if
28:57 - I was to move the camera around it would
28:59 - start rendering objects which are inside
29:02 - that viewport frame so if you want the
29:04 - viewport frame to render something then
29:06 - that object which is going to be
29:08 - rendered on to the screen needs to be
29:10 - inside the viewport frame so if I took
29:11 - the lobby and I dragged it inside of the
29:13 - item viewport
29:14 - it would appear in the viewport and you
29:16 - can see when I scroll the mouse it it
29:19 - renders and moves around the cameras
29:21 - moving around so it's basically
29:23 - recording the camera and showing it on
29:25 - this GUI viewport frame okay so it's
29:29 - rendering anything inside of the
29:31 - viewport which the camera can see so
29:34 - what we're going to do is we're going to
29:36 - create a new camera every time someone
29:39 - well in every box is gonna be a new
29:41 - camera and this camera is gonna be
29:43 - looking at the item okay and then what
29:46 - we're going to do is we're going to what
29:48 - we need to find the we need to get the
29:51 - position of the camera for each tool
29:53 - okay so we're going to get those see
29:55 - frame values for the camera we're gonna
29:57 - store them inside of the tool and then
29:59 - whenever the player clicks a box we're
30:02 - going to copy that tool in to the
30:03 - viewport frame and set the camera camera
30:06 - C frame to the corresponding C frame
30:09 - which we'll set now if it doesn't make
30:11 - much sense don't worry we'll go over
30:12 - again and but that's what viewport
30:15 - frames are so I'm going to take the
30:16 - lobby and put it back into the workspace
30:17 - here and what we're gonna need to do is
30:20 - we're going to need to instead of using
30:23 - the tool we're gonna have to add some
30:25 - tools to tool models now if you haven't
30:28 - got a tool models already which probably
30:29 - happen in replicator storage you're
30:31 - gonna want to insert a folder into
30:33 - allocated storage okay
30:35 - folder and make sure you call it tool
30:37 - models okay just like I have capital T
30:39 - capital M okay now what we're going to
30:42 - do is for each item we have you don't
30:45 - want to just go into the item and take
30:48 - the hand
30:48 - now only the handle okay if you have
30:50 - mortal parts which make up this tool
30:53 - maybe like a weapon you have different
30:55 - parts for a gun copy them all but we
30:59 - only want to copy the parts in this tool
31:01 - so no scripts no values no animations
31:03 - just the handle or any other parts
31:06 - associated with it
31:07 - so you want to take this handle and copy
31:10 - it okay and we're gonna paste it into
31:12 - tool models so you must paste it into
31:15 - tool models and then you must name the
31:18 - handle the same as the tool okay so this
31:21 - is from the Azrael sword so I'm gonna
31:23 - call it as your sword and then you need
31:25 - to right handle after it okay so it's
31:28 - whatever the name of the tool is plus
31:29 - handle and it will look like that
31:31 - okay so now that you've done that open
31:35 - up the handle and delete any sounds or
31:41 - fire or point lights or sparkles because
31:45 - they don't render yet in the viewport
31:46 - frame and you need to make sure you
31:48 - delete your sounds else they're gonna
31:50 - keep playing
31:51 - when you click them you don't want that
31:52 - so delete your sounds delete your fire
31:54 - and everything else but make sure you
31:57 - leave the mesh in there okay so now that
31:59 - you've got that and you've got your
32:01 - handle then we're good to go so I'm just
32:03 - going to do it for the other items we've
32:05 - got so that you can just remember how we
32:07 - are going to do it so I'm gonna go to
32:10 - the second item which is the pistol I'm
32:13 - gonna just take the handle copy it and
32:16 - paste it in turtle models now this tool
32:19 - was cooled at the pistol so I'm going to
32:20 - rename the handle to pistol handle
32:22 - because we need to make sure we have
32:24 - that handle on the end of it and you'll
32:25 - see why very soon and I'm gonna delete
32:28 - this world because it's not needed we
32:30 - only need the mesh in there and there we
32:32 - go we've done the pistol I'm gonna go
32:34 - for the rocket launcher now take the
32:36 - handle copy it go up to models paste it
32:39 - in I'm gonna call it rocket launcher
32:42 - handle
32:46 - okay I'm gonna go into the rocket
32:49 - launcher and there we go we've only got
32:51 - the mesh in there so I'm gonna keep that
32:52 - in there so now what we need to do now
32:56 - that we've got our tool models is
32:57 - because we're gonna clone at these tool
32:59 - models these are these handles we're
33:02 - gonna clone them into the viewport frame
33:03 - we need to make sure that they're in
33:05 - view okay because we need to get there
33:08 - see frame so we can set the camera the
33:10 - camera see frame so it's looking
33:12 - directly at that at that handle so for
33:15 - each tool model you're gonna want to
33:17 - take it and this is just to calibrate it
33:20 - for the viewport frame so one by one
33:23 - what we're gonna do is we're gonna set
33:24 - up the camera C frame and then we're
33:26 - gonna store that C frame in a value in
33:28 - that tool model and then we can just
33:31 - quickly reference it from our script so
33:33 - we're gonna start off with the actual
33:35 - sword handle I'm just going to take this
33:37 - handle and I'm gonna drag it into the
33:40 - item viewport and I'm gonna make sure
33:42 - that the current camera is set to camera
33:45 - in the workspace now we wouldn't usually
33:47 - be set to camera
33:48 - we're only setting it to the camera in
33:50 - the workspace so that we can calibrate
33:51 - it and we can see the item in that
33:53 - viewport now I can already see it over
33:55 - here so I'm gonna go and zoom in on it
33:57 - just like I would with a normal camera
33:58 - and there we go I'm gonna get it in view
34:01 - in our view ports just like that and
34:04 - when I've got the perfect position like
34:08 - this it's time for us to get the C frame
34:11 - value now there are two ways of doing
34:13 - this now you can just you could get it
34:17 - by saying print game not workspace dots
34:21 - dart current camera dot C frame okay you
34:25 - could just do that and open up the
34:27 - output and it would print out that C
34:30 - frame but because C frame values you
34:34 - can't well it's kind of hard to write
34:37 - them you can't just go in and change
34:38 - their their value property there's a
34:42 - really cool plugin made by Ty Ridge 77 I
34:46 - believe and it basically will get the
34:50 - current C frame of the camera and it
34:52 - will create a C frame value and it will
34:54 - put it inside of your handle okay
34:57 - I'm gonna show you how to get this
34:58 - plugin I'm gonna leave
34:59 - link to in the description so you want
35:01 - to go to the link in the description and
35:03 - go to manage plugins in studio click on
35:06 - find plugins and then if you go to
35:09 - library and you click on plugins and
35:12 - type in cam to CF which is a camera to
35:15 - see frame click it it's by toy age 77
35:18 - and click on install and then go back to
35:21 - your place it should appear up here you
35:23 - should see a camera icon saying create
35:25 - now if this plugin isn't available
35:27 - anymore in the future or you can't see
35:29 - it we have some trouble and then I'll
35:31 - show you a backup solution but all you
35:33 - have to do when you've got your item in
35:35 - view is click on the add your sword
35:38 - inside your viewport and click create
35:40 - okay if you open it up you can see it's
35:43 - out of the camera see frame and an fov
35:45 - field of view you can delete the field
35:47 - of view because we don't need that you
35:49 - just need your camera see frame now you
35:50 - won't be able to see the value because
35:53 - the camera see frame it's just a very
35:55 - weird class in roblox you can't view the
35:58 - value just by looking in the properties
36:01 - window although there is a value saved
36:03 - to it ok the camera see frame has been
36:06 - saved to this value okay because you'll
36:08 - notice you can't see the see frame and
36:10 - property either but in a part but it is
36:14 - saving the value don't worry and you've
36:17 - now saved the camera see frame into that
36:20 - handle so all you need to do now is drag
36:23 - that back into tool models and we're
36:24 - going to go back and do it again for the
36:26 - rocket launcher I'm going to drag it
36:28 - into the item viewport now I've got to
36:31 - make this very clear before we carry on
36:33 - what you need to do is we're gonna take
36:36 - all of our tool models from the folder
36:38 - first and I need to show you this before
36:40 - we carry on because once you've done
36:42 - your first item ok you need to make sure
36:45 - that the other items aren't in directed
36:48 - view of it ok because you'll end up with
36:50 - something looking like this okay the
36:51 - other items will be behind it and it
36:53 - will look really messy so just take the
36:56 - other items don't move the as your sword
36:58 - else you will mess up the current camera
37:00 - with a C frame that we just did but take
37:02 - the other items and move them out of
37:04 - view okay I'm going to do the same for
37:06 - the pistol and move it away from the
37:09 - rocket launcher so if you were to look
37:11 - at the as your sword you would
37:12 - get the sword if you were to look at the
37:14 - rocket launcher you just get the rocket
37:16 - launcher and the pistol as well is it's
37:18 - on its own okay so that is why we have
37:21 - to make them separate from each other
37:22 - apart from each other so drag them back
37:24 - into tool models and let's go back and
37:28 - do the rocket launcher this time now I'm
37:30 - going to show you how to how to do this
37:34 - if you don't have a if you can't get the
37:36 - plug-in let's just open up the GUI again
37:40 - so you don't have the plug-in you can't
37:42 - get it don't worry we're gonna open the
37:45 - output and we're gonna drag to the side
37:47 - here just so we can see what's going on
37:48 - and I'll clear it here so you want to
37:51 - get your item in view okay
37:54 - now you can still use the plug-in I
37:55 - would recommend doing the plug-in but if
37:57 - you can't use the plug-in this is what
37:59 - you do you get to in view and then what
38:02 - you want to do is you want to go inside
38:03 - of this rocket launcher click on the
38:05 - plus type in C frame value and then you
38:08 - want to name this C frame about you just
38:12 - like this make sure that you've got the
38:13 - spelling and capitalization correct and
38:16 - then we're just going to say game
38:20 - whoops game dot start a GUI dot shop dot
38:26 - mainframe dots safe area and then dot
38:33 - item information dot equipped also item
38:39 - viewport m dot rocket launcher handle
38:43 - dot C frame value dot value equals game
38:48 - dot work space doc current camera dot C
38:51 - frame okay that should set the value of
38:55 - the camera to and this C frame value so
38:59 - it's looking at this this rocket
39:02 - launcher and just to make sure that it
39:03 - did it
39:03 - we can just say print and print this
39:08 - value and see if it's saved and there we
39:10 - go we've got the c4 in value it
39:11 - successfully saved so that's how you do
39:13 - it if you haven't got the plugin but I
39:15 - do recommend you do use the plugin so
39:17 - we're going to take the rocket launcher
39:18 - and we're going to put it back into tool
39:20 - models I'm going to take the pistol
39:23 - and we may put it into the item viewport
39:25 - I'm gonna look around see if we can find
39:26 - it and here it is here's the pistol okay
39:31 - and I'm just gonna go the other way and
39:33 - get a different camera view on it so
39:36 - working it from side on and there we go
39:39 - over lined it we're gonna use Taiwanese
39:41 - pull again I'm gonna go to plugins make
39:44 - sure that the pistol is selected if
39:46 - you're using the plugin you don't have
39:48 - to create that C frame value because the
39:49 - plate is it for you
39:50 - so click it and you've got your camera C
39:53 - frame and your point of view
39:54 - so just delete that fov we can also
39:58 - delete this well because we don't need
39:59 - it and we're gonna take the pistol
40:00 - handle and drag it back into tool models
40:04 - and there we go you have got your
40:06 - viewport frames done so if you've got
40:08 - any more items make sure that you do the
40:11 - same thing again just to reiterate you
40:13 - need to firstly take the handle from
40:15 - your tool and drag it into tool models
40:18 - you then need to change the name of that
40:20 - handle to firstly having the name of
40:22 - your tool and then writing handle after
40:24 - it then open up that handle and delete
40:27 - anything such as sounds fire point light
40:30 - spotlights and sparkles etc so you only
40:34 - have the mesh for that handle in there
40:36 - if your handle doesn't have a mesh you
40:38 - don't need to insert a mesh you then
40:41 - want to take your handle drag it into
40:44 - your item viewport
40:45 - make sure that current camera is set to
40:47 - camera in the workspace then you want to
40:50 - align it up until you see your handle
40:53 - and then click on the handle go to
40:55 - plugins use the plug-in and then delete
40:58 - the field of view put it back into tool
41:00 - models and you should be good to go and
41:03 - you don't need you can get rid of the
41:04 - current camera now you don't need to set
41:06 - it to camera anymore just leave it blank
41:08 - so that is everything you need to do to
41:12 - make the picture show up as a viewport
41:14 - frame we're now going to go in and code
41:16 - it so that these viewport frames and can
41:19 - show each item when we click a specific
41:23 - one okay so now we're going to script it
41:25 - so that when if you click a box then
41:27 - we're gonna make the item show up over
41:29 - here in the item viewport so let's go
41:32 - back to the core local script
41:34 - and then just outside of this this if
41:36 - statement here but still in the for loop
41:38 - so just here and more going to do is
41:41 - we're going to create a mouse button one
41:44 - click event for the box so when it's
41:46 - clicked so box mouse button one click :
41:50 - connect function okay so when that box
41:53 - the current box that we're looping
41:55 - through has been clicked then firstly we
41:58 - want to make sure that the item viewport
42:00 - is clear of any other items that may
42:02 - have been in it before such as luck
42:03 - another item if we've just clicked off a
42:06 - different one okay so we can say it for
42:08 - underscore V in pairs okay cuz we're not
42:12 - doing any counting this time we just
42:13 - need the the V for the object which
42:16 - we're looping through and all objects
42:18 - that we're going to loop through this
42:19 - time are going to be in the item
42:21 - viewport so we can say item viewports :
42:23 - gets children and then do and drop a
42:29 - line and then we need to say if not V is
42:33 - a frame then because we've got the frame
42:37 - inside the item viewport which gives it
42:39 - that nice shadow and we don't want to
42:41 - delete that so if it's not a frame then
42:45 - we can just say V : destroy and that
42:47 - will get rid of anything else that isn't
42:48 - a frame inside that item of you books
42:51 - you don't want that in there I also be a
42:52 - load of overlapping with the viewport
42:54 - frames so the next thing we need to do
42:56 - we need to create a dummy camera which
42:57 - will look at our selected item so we can
43:00 - say local item a viewport camp equals
43:03 - instance dot new camera and item a
43:07 - viewport cam dot parent equals item
43:11 - viewport this is going into the item
43:14 - viewport and will make it look at that
43:15 - item then we want to clone the handle
43:18 - from tool models so we can say local
43:23 - handle equals game replicated storage
43:27 - can wait for child to let models kind of
43:31 - find first child in case it's not there
43:34 - our available tools because we're
43:37 - getting the name of the tool from the
43:38 - available tools a table I said we've got
43:41 - we have our nested table so because
43:43 - we're looking at the
43:46 - the eye or the enth entry in this table
43:50 - because obviously is the number of
43:52 - counts and say on the second loop then
43:54 - would look for the second table inside
43:56 - that big table and then the first entry
43:59 - in that nested table will be the name so
44:03 - that is the the name of the tool so
44:05 - we're looking for that and then we're
44:07 - going to say dot handle because we put
44:09 - the we put handle on the end of the tool
44:11 - here so we're getting that handle from
44:14 - tool models and then we're just gonna
44:15 - say curl on clone okay and that will
44:19 - make a duplicate of that that handle and
44:22 - we can say handle dot parent equals item
44:25 - viewport and then we just need to set
44:28 - the current camera that see frame which
44:30 - we made so not the current camera the
44:32 - camera we just made the item a viewport
44:34 - cam dot current camera sorry no the item
44:39 - viewport is a V for frame and we want to
44:42 - set the current camera property of that
44:45 - which you can see here current camera
44:50 - want to set that to the camera we just
44:53 - created so we can say item viewport
44:55 - account and then we can say item of
44:58 - viewports cam dot C frame equals handle
45:03 - dot camera C frame dot value because
45:06 - we're taking that a seafoam value which
45:08 - we created with Ty Ridge 77s plug-in
45:10 - earlier on which I said make sure you
45:12 - name it C frame value just like this and
45:14 - we're setting the camera C frame to that
45:17 - value so it's looking directly at our
45:19 - item we then want to update the buy
45:23 - button and to see whether you own it or
45:26 - not or whether you need to buy it
45:30 - purchase it etc and so we're going to
45:33 - need to create a another remote event so
45:38 - a remote function because we're sending
45:41 - data back to the client once we have
45:43 - invoked it to the server and this one's
45:46 - gonna be called item check and we're
45:48 - gonna check the players inventory to see
45:50 - if they own that item then we're going
45:52 - to return whether it's owned or not back
45:54 - to the client and then we can check to
45:55 - see and while we can check see if it's
45:58 - equipped also
45:59 - and if it is equipped we can just say
46:01 - unequip if it's not equipped we could
46:03 - say equip and if they don't own it at
46:06 - all we can say bye so we're gonna say
46:09 - local owned equals game don't replicate
46:12 - the storage the item check curl on
46:16 - invoke server and the cert only data
46:19 - that we're going to pass the server is
46:21 - the name of the tool so you can say
46:23 - available tools available tools I
46:26 - because it's the current tech table of
46:29 - the item were looping through and the
46:31 - first entry in that one is the player's
46:33 - name all right so we're doing a server
46:35 - request to see if the item is in the
46:37 - players inventory or not we're going to
46:39 - need to now go into server Handler and
46:42 - pick this up and write out the the
46:46 - server part to pick this up so this is
46:48 - quite simple we're going to just say
46:50 - game don't replicate a storage come on
46:53 - wait for child and item check this time
46:57 - is the name of the remote function I'm
47:00 - gonna say dot on server invoke equals a
47:03 - function and player is argument again so
47:07 - we're also gonna want to have the item
47:09 - name up here and because that is the
47:12 - item we're passing through from the
47:14 - local scripts here so we're gonna pick
47:16 - that up on the server there we go and we
47:20 - just want to see if game dot server
47:22 - storage player data find first child
47:29 - player dot name in case they something
47:33 - happen to their data or something
47:34 - inventory I can't find first child item
47:40 - name then so if the item is in their
47:44 - inventory because we're using item name
47:46 - here to see if it's in there then we're
47:48 - gonna return true else we're gonna
47:51 - return false okay I'm going to send this
47:53 - information back to the the local script
47:57 - and we can say if owned is actually what
48:04 - we'll do first is we'll check to see if
48:07 - it's equipped first so if equipped item
48:11 - because we're going to be saving the
48:14 - item that they click on to the equipped
48:17 - value so if equipped item dot value is
48:21 - equal to available tools I won so if
48:27 - it's equal to the the name of the
48:29 - current tool which we're looping through
48:31 - then we know that it's already equipped
48:34 - so we can say info frame cash dot text
48:39 - equals owned okay the info frame is this
48:42 - one right here and then the item name is
48:45 - this text label which shows up here we
48:49 - can set that text or two owned and then
48:52 - we can say info frame and set leave I
48:54 - button absolute by Burton dot text
48:58 - equals an equip because if it's already
49:00 - equipped and they click it again they're
49:01 - gonna want to unequip it so else if
49:04 - owned is equal to true and they do own
49:07 - it but it's not equipped then we can set
49:10 - it to equip because they own the item
49:12 - but it's just not equipped so info frame
49:14 - cache text equals owned and info frame
49:21 - dot
49:21 - Buy button text equals equip ok else if
49:28 - they do not own it at all then we can
49:29 - say info frame dots by button dot text
49:34 - equals by just like that and then say
49:38 - info frame cache dot text and we want to
49:42 - set that to the price and because in our
49:44 - nested table that was the second entry
49:46 - we can say available tools in fact we'll
49:50 - do a dollar sign first in us in a string
49:52 - and concatenate that with two dots at
49:54 - with the available tools I too just like
49:58 - that
49:59 - well strut it outside of the for loop
50:01 - we're gonna set the info frames item
50:05 - name text to the name of the item so
50:08 - available tools and then I and then one
50:12 - for the name of that item and then we're
50:15 - going to set the selected item
50:17 - you to the same thing just like that and
50:25 - that's just gonna set the name over here
50:29 - I think I said earlier it will set the
50:30 - name earlier it should set the cash but
50:33 - this will set the name and they're also
50:35 - the selected value which is here so now
50:40 - that we have done that's all that we
50:41 - need to do is give the frame a nice
50:45 - little border to show that it is
50:46 - selected but we need to firstly remove
50:50 - any other border from any other items
50:54 - item item frames because if we've
50:58 - already got an item selected and then we
51:00 - click a new one if we were to give the
51:02 - border first and then get rid of the
51:03 - water for everything else it would just
51:05 - delete the the border we just gave so we
51:08 - get rid of all the other boarders first
51:10 - by saying for and then underscore the in
51:13 - pairs I'm going to loop through
51:14 - everything inside the item frame and say
51:19 - do let's see add a little space here
51:21 - there we go
51:22 - so if the descendant or not the story
51:25 - the child is a image button because
51:28 - that's what our item one is then the
51:32 - border size pixel equals zero and that's
51:34 - just the thickness of the of the border
51:38 - okay and I've set the border as you can
51:40 - see to a nice green turquoise color so
51:44 - you can change that if you want to by
51:45 - going into item one and changing the
51:46 - border color three and then we're just
51:49 - gonna set the border size of the current
51:51 - box which we just selected two two two
51:54 - so we can say item frame and then we can
51:58 - say item dot dot I got border size pixel
52:07 - equals two like that and that will just
52:09 - give it a nice little outline to show it
52:11 - that it is selected so if we don't check
52:14 - this out and click play then we should
52:18 - be a point where we can see it in action
52:19 - so if we click on one of our boxes we
52:24 - haven't set the the text or the the
52:27 - viewport frame on the boxes yet we can
52:29 - see did
52:30 - data appears in the sidebar and we can
52:33 - collect different ones and it will show
52:35 - up and there seems to be an issue with
52:37 - the third we'll know more see if we can
52:39 - fix that right now so whenever I click
52:43 - it it says camera C frame is not a
52:44 - valued member of part so this shows that
52:47 - there was an issue with our tool model
52:49 - so let's go into the tool model for the
52:51 - rocket launcher and see what's happened
52:54 - here or whoops oh dear and say I must
52:57 - have cooled the value the wrong thing so
52:59 - it should be called camera C frame not C
53:03 - frame volume sorry about that guys now
53:05 - earlier when I did the backup the backup
53:07 - solution telling you to add in the value
53:10 - yourself make sure that you call it
53:12 - camera C frame not sir C frame value
53:14 - sorry that was my fault so if we go back
53:17 - in here it should be all good now yep
53:20 - there we go
53:21 - all is good and the pistol as your sword
53:24 - and the rocket launcher are in there and
53:27 - we can select them now so what we're
53:28 - going to do next is make sure that the
53:30 - same thing pops up for each box so we're
53:33 - now just going to make the image and the
53:36 - title change for each box so we can go
53:38 - back to the core local script and
53:40 - outside of the mouse button one click
53:43 - event for our box we're just going to
53:46 - drop a few lines here and we're going to
53:48 - create another fake camera and this time
53:50 - it's gonna go inside the box so we can
53:52 - say local fake cam equals instance dot
53:55 - new camera okay and we can say fake cam
53:59 - doctor parent equals box
54:03 - dot v PF okay so VP F is the viewport
54:06 - frame inside of each box and what we're
54:10 - going to want to do is copy the handle
54:13 - again so you can go up here to where we
54:15 - we did the the cloning of handle and we
54:18 - can just copy this and paste it down
54:20 - here and what we'll do is we want to say
54:23 - handle your parent equals box vpf to put
54:26 - it inside the V port for him because
54:28 - that viewport frame only renders objects
54:31 - which inside of it and then we're gonna
54:34 - drop another line and this time we're
54:37 - gonna set the the current camera to the
54:40 - handles and C frame value so we can say
54:43 - box
54:44 - vpf current camera dot what we first we
54:47 - want to set the current camera to fake
54:50 - cam and then we're gonna say fake cam
54:52 - dot C frame equals handle dot C frame no
54:58 - sorry
54:58 - camera C frame dot value there we go
55:02 - and because we called the value C for a
55:04 - camera C frame not C frame value we're
55:10 - then I'm just going to set the text of
55:11 - the box to the items name so we'd say
55:14 - item frame and item dot I dot item name
55:20 - dot text equals available tools I one
55:25 - just like that and if we go ahead and
55:28 - run the game again this time the boxes
55:30 - should be populated with some
55:31 - information ok so we've got the pistol
55:34 - as your sword and rocket launcher ad in
55:37 - there you can see all the items and we
55:40 - don't have any errors
55:41 - apart from that on which is a plugin
55:43 - issue so don't worry about that and you
55:46 - can see that the border size pixel
55:48 - actually you can see it changes when we
55:50 - click on each item and we have that nice
55:52 - little turquoise border so we have done
55:56 - the boxes now and you can click a box to
55:59 - see more information about it what we've
56:01 - got to do next is the handling of the
56:03 - transaction when you click on the Buy
56:05 - button because nothing happens at the
56:06 - minute so I'm going to go back to the
56:08 - court local script and just outside of
56:13 - the for loop here now that we've
56:15 - finished generating our boxes I'm going
56:18 - to create a mouse button one click event
56:21 - for the buy button so we can say buy
56:23 - button mouse button won't click :
56:26 - connects a function okay and drop a line
56:30 - and this event is going to run whenever
56:32 - we click the Buy button but obviously
56:34 - because we don't know whether you've
56:35 - already bought the item equipped it or
56:37 - you want to unequip it etc we need to do
56:40 - another request to our to a new remote
56:43 - function so you're gonna need to make a
56:46 - new remote function if you haven't got
56:47 - it already this one's going to be called
56:49 - purchase item
56:50 - it's a remote function so make sure you
56:52 - add it into replicated storage and we're
56:54 - going to use that too
56:56 - you handle the transaction if they
56:58 - haven't already bought it and then will
57:01 - return back whether it was bought or not
57:04 - whether it was equipped or unequipped or
57:07 - if they don't have enough money to buy
57:09 - the item so we're just gonna store this
57:11 - result as a variable and we're going to
57:13 - get that result by saying game
57:15 - replicated storage doctor purchase item
57:18 - :
57:18 - invoker server okay and we're going to
57:21 - send the selected item value okay which
57:26 - they have selected because obviously
57:27 - when they click the value sorry when
57:29 - they click the box then we are setting
57:32 - the selected item value to the name of
57:36 - the item so we're going to send that to
57:38 - the server I'm gonna go pick that up in
57:41 - the server handler we're gonna say a
57:43 - game don't replicated storage wave child
57:49 - and whoops did purchase sorry whoops
57:52 - child purchase item dot on server invoke
57:56 - equals function and we have the player
57:59 - and the item name again I'm going to
58:02 - drop a line and now we're just gonna get
58:05 - some variables to help us out here so
58:07 - we're gonna get the player's books so we
58:09 - can say local books equals player dot
58:12 - leader SATs dot books and then we're
58:15 - gonna get the item as well which they're
58:17 - trying to buy swing state local item
58:20 - equals game that's so storage doctor
58:22 - items come on find first child item name
58:27 - now we do I would do do we do find first
58:30 - child in case if the item isn't there
58:33 - then it's not going to break the script
58:34 - so if an exploiter tries to add a funny
58:36 - item which actually isn't stored in the
58:38 - server and tries to break the script it
58:40 - won't break so we using fine first child
58:42 - and then if we drop a line here that is
58:45 - the item that they want to buy stream
58:47 - say if item then we know it exists
58:50 - and we're gonna say if game server
58:55 - storage dot player data and then we say
59:01 - player dots in fact we'll do find first
59:05 - child
59:07 - play up name and we'll say dot inventory
59:14 - find first chart and felt in fact what
59:17 - we'll do is we'll just say player data
59:19 - player dot name square brackets dot
59:22 - inventory come on fine first child item
59:28 - name so if that item is in their
59:30 - inventory then we're going to set the we
59:35 - know that they've already bought it
59:36 - right so we don't need to handle the
59:39 - transaction so we'll check to see if
59:41 - it's already equipped so we can say if
59:43 - game drops over storage player data name
59:49 - dot equipped dot value if it is not
59:54 - equal to item name then it's unequipped
59:59 - currently unequipped so let's now equip
60:02 - it by saying it's over storage player
60:05 - data Gaelic name got equips got value
60:10 - I'm gonna make that equal to item name
60:12 - now we've only got one equal sign here
60:14 - because we're actually changing the
60:16 - value of that equipped but when we're
60:19 - checking we've got the well we usually
60:21 - would have to equal sign we've got the
60:23 - we've got the not equal to sign here
60:26 - just to check if it's if it's not
60:28 - already equipped so if it is not already
60:31 - equipped we've just equipped it right
60:32 - there and we're gonna stop this function
60:35 - right now and just return back to that
60:37 - local script that's it was equipped okay
60:42 - else we know that it is already equipped
60:46 - and if they've clicked the button then
60:48 - they're gonna want to unequip it so
60:50 - we're gonna say game looks so storage
60:52 - got to player data
60:54 - player dot name just equips sorry dots
60:59 - equipped dot value equals nothing we
61:04 - just do some maps and a string just an
61:06 - empty string and then we can return
61:08 - unequipped
61:10 - okay so if they have the item already
61:13 - and if it is not already equipped we're
61:16 - going to equip it else if it is equipped
61:18 - already we're going
61:19 - unequip it okay so now outside of that
61:25 - if statement but still in the the if
61:27 - item if statement we're going to see if
61:30 - they have enough money to buy it
61:32 - okay so if if they don't already have
61:34 - the item then we're gonna see if they
61:36 - have enough money so if books value so
61:40 - then the the value of that books
61:42 - variable that we just defined it's
61:44 - greater than or equal to item dot price
61:47 - got value because remember I said
61:49 - earlier on you need to make sure you
61:51 - have that price value inside of your
61:53 - your item so if you have the same amount
61:57 - of money or more then you're eligible to
61:59 - purchase it so we need to deduct that
62:01 - money from your account by saying books
62:03 - dot value equals books value minus item
62:07 - dots price value so that the money taken
62:10 - from your account and then we're going
62:12 - to add this to your inventory so we can
62:14 - create a new value for this this tool so
62:18 - we can say local item value equals
62:21 - instance not new object value because
62:24 - the value is going to be a specific
62:26 - object in this case the the tool object
62:28 - and we're going to say item value don't
62:31 - name equals item name so the name lap
62:33 - tool add item value parent whoops now we
62:38 - need to make sure that name has capital
62:39 - n and item a your parent equals game dot
62:43 - server storage doctor playdate up and
62:46 - then we're going to put it in the
62:47 - player's name folder so if you should
62:50 - let Skeets gonna go into this let's give
62:52 - order dot inventory that's where we can
62:55 - store it so that later on we can save
62:57 - and load these values and then we know
63:01 - that the player would have purchased the
63:02 - item so we can just return true and if
63:04 - we return true then that's going to mean
63:05 - that the player purchased it else we're
63:10 - gonna return they don't have enough
63:12 - money so return not enough books and
63:15 - make sure you're returning the same
63:18 - strings as I am because we're gonna be
63:20 - using them soon to check to see whether
63:22 - this value is equal to something so if
63:25 - the value is not enough books then we'll
63:27 - display on the screen that they don't
63:29 - have enough money so outside of this if
63:31 - statement here we're going
63:33 - we're gonna just say oh yes sorry and
63:37 - because obviously if the item isn't
63:40 - there we didn't just say else return no
63:43 - item if they if there was some error and
63:46 - the item actually didn't exist we could
63:48 - just return no item and end it there so
63:50 - that's all we need to do for this
63:52 - purchase item function here and that's
63:55 - going to check whether you're eligible
63:56 - to buy the item and if you are then it's
63:57 - going to buy it for you or equip it or
63:59 - and equip it and I'm gonna go back to
64:01 - our core local script and we will have
64:03 - return to value here either equipped
64:05 - unequipped not enough books or no item
64:09 - so let's go back to the core local
64:10 - script now and actually handle this on
64:13 - the client and change the buttons text
64:15 - or color depending on the outcome which
64:17 - we've just programmed in this server so
64:21 - back in the local script down here in
64:24 - the by button mouse button one click
64:26 - events we have let's go down here to the
64:30 - bottom of the script we have got our
64:32 - results variable and we want to firstly
64:36 - check to see if results is equal to true
64:38 - because remember we said if it's true
64:40 - then we know that the players purchased
64:42 - the item so if result is equal to true
64:43 - then it's going to drop a few lines that
64:46 - we've got enough space so if it's all
64:49 - true then we want to make the background
64:53 - color 3 a nice green color and to show
64:56 - that it has been bought ok so we can say
64:59 - Buy button dot background color 3 whoops
65:08 - equals color 3 dot from RGB with a
65:12 - lowercase F for from but RGB wouldn't
65:15 - uppercase and as you can see from RGB
65:20 - and then you're gonna you want to put
65:21 - your three RGB values in here so RGB
65:25 - it's made up of three values one for the
65:27 - amount of red one for the amount of
65:28 - green one for the blue and all together
65:30 - they make up color so I've picked a nice
65:32 - green color and you can just put in 42
65:35 - 14942 if you want to choose your own
65:37 - green color though just go to a GOI
65:39 - element open up a background color 3 and
65:42 - pick a color and you'll see the three
65:44 - values here
65:45 - so that is the green color so we're
65:48 - gonna set it to green and we're going to
65:49 - change the buy buttons text to say
65:51 - bought okay and then we're going to wait
65:56 - no point five seconds and then we'll say
65:59 - buy button text equals equip because now
66:03 - that they've bought it they can then
66:05 - they now have the ability to equip it
66:07 - and we want to set the the back the by
66:10 - Britain's cutter battery like a darker
66:12 - shade of green just to show that it's
66:15 - it's returned back to normal
66:16 - okay so background color three and I'm
66:19 - gonna set this color to a dark green and
66:23 - we'll do 55 193 55 okay that is a nicer
66:29 - color and you'll see it later on in
66:31 - action when we test this out so if it's
66:33 - true then that's all that we need to do
66:34 - because they've purchased the item and
66:36 - but else if so if another resort was
66:39 - happened so if they if they don't have
66:41 - enough books so if the result was not
66:43 - enough books because remember that's
66:45 - what we returned over here so if the
66:49 - result was that then we want to make a
66:53 - red color okay because there's been an
66:54 - error so we can just copy the same code
66:57 - from over here which sets the background
66:59 - color three but we're going to change
67:00 - the color three from RGB to more a red
67:03 - color
67:04 - okay so I've chosen 204 31 31 and that's
67:08 - like a a reddish color if I input the
67:11 - values here 204 31 31 okay there we go
67:18 - and that has given me a nice so red
67:20 - color and then I can set the buy buttons
67:25 - texture to say not enough books okay I'm
67:33 - just tap that in and then we're gonna
67:36 - wait Nonpoint five seconds again I'm
67:39 - gonna set the buy buttons text to say
67:41 - bye because they didn't have enough
67:43 - money this time and we can go back to
67:45 - the buy screen as if they don't have the
67:47 - item and we're gonna set the buy button
67:50 - back to its original 55 193 55 color so
67:55 - you can just copy this line from here
67:58 - so now that's the purchase success and
68:04 - not enough books eventualities covered
68:07 - but if they already bought the item and
68:11 - they've just equipped it then the result
68:14 - will be equipped and what we're gonna
68:17 - have to say here let's just add in our
68:20 - end by the way all I want to say here is
68:21 - we want to change the equipped item
68:25 - value to whichever value was selected so
68:28 - equipped item to bio equals less than
68:30 - that value now you might notice that we
68:32 - have two values on here for equipped we
68:35 - have one in the GUI and wooden which we
68:37 - created in these stat scripts now that's
68:39 - because we use the equipped file in the
68:41 - GUI just to show which item they
68:44 - currently have selected in the GUI but
68:45 - because this can easily be exploited and
68:47 - an exploit you could change it to
68:48 - whatever they like
68:49 - we store another one on the server which
68:51 - can't be changed by the client I'm going
68:53 - to only be changed by the server so if I
68:55 - if an exploiter tries to change the one
68:57 - on the client to whatever they want then
68:59 - nothing's gonna happen they're just
69:01 - gonna see an item that they don't have
69:03 - so that's why we have the two equipped
69:05 - items and we're just changing it here to
69:07 - show the item that we have equipped and
69:09 - we're doing this because later on and
69:11 - the bottom left of the screen we're
69:12 - gonna make it show the item that they
69:14 - have equipped
69:14 - okay so we've just updated the equipped
69:17 - item to whatever they have selected and
69:19 - then we're going to set the Buy button
69:22 - to that green not a nice green color
69:24 - again from the top up here and we're
69:27 - gonna wait to 0.5 seconds and then we're
69:31 - going to say buy button in fact we need
69:34 - to set the text of the by president
69:36 - before we do the wait so by buttoned up
69:38 - text equals equipped and I'm going to do
69:41 - the weight and 0.5 and we're gonna set
69:43 - the buy person we're gonna set the buy
69:46 - buttons text to say unequip because now
69:54 - it's equipped they might want to unequip
69:56 - it so we'll also just set the background
70:01 - color back to the original I think
70:04 - enough to you don't use the same colors
70:06 - as me this is what I'm using here and
70:09 - then we're going to want go on to the
70:12 - next eventualities which is unequipped
70:17 - so if results sequel equips and they've
70:20 - already bought it they would have it
70:22 - equipped and when they clicked it
70:23 - they've just gone and unequipped the
70:25 - item so we can set the equipped item
70:28 - value back to nothing okay equips item
70:31 - to buy it equals nothing so just an
70:33 - empty string or nil and there you can
70:36 - say in fact yeah we'll just do an empty
70:37 - string and buy button dot background
70:42 - code 3 equals and then we'll do the
70:49 - original in fact we'll do the the
70:56 - lighter one here so the lighter green
71:00 - color and we'll say Buy button dot text
71:03 - equals unequipped like that
71:05 - we'll wait nine point five seconds and
71:07 - then we're going to say a Buy button
71:10 - text equals equip because they've
71:13 - unequipped it they're not going to equip
71:14 - it the next time and we'll save Buy
71:16 - button got background color three equal
71:22 - to the original darker green color
71:24 - fifty-five one nine three fifty-five
71:27 - just like that so what that's going to
71:29 - do is going to pick up the result from
71:31 - the server whether we own the item or we
71:33 - don't own it or we have it equipped etc
71:35 - and depending on what that resources
71:36 - it's gonna change the buy buttons text
71:38 - and background color to show whether it
71:41 - was a success or not okay and the next
71:43 - thing that we're gonna do is we're gonna
71:44 - work on the equipped frame down here in
71:47 - the bottom left and what this does is
71:50 - it's going to show you the item which
71:52 - you have equipped when you equip a new
71:56 - one or if you join the game it will show
71:58 - up in the bottom left corner so you
72:00 - don't have to open up the shop to see
72:02 - what you have equipped and but first
72:04 - let's go ahead and test out the game and
72:05 - see what we have so far so let's just go
72:09 - click play and wait for it to load up
72:10 - and I've got 1111 books so if I go and
72:16 - click on the rocket launcher I can see
72:18 - the information about the products and
72:20 - if I click on Buy you can see it says
72:22 - bought and I can equip it if I want to
72:26 - so I can click on equip and there we go
72:28 - it's equipped and now says unequip and
72:31 - if we go into the server in the service
72:33 - storage player data and my name you can
72:36 - see that rocket launcher is set the
72:38 - equipped value and it's also in my
72:40 - inventory and what we'll do is we will
72:43 - make this show up in the bottom left
72:45 - corner of the screen and then later on
72:46 - I'll make it so that you are given your
72:48 - equipped item when the game begins so
72:52 - let's go back into the core script here
72:54 - and what I'm going to do is this is
72:56 - going to run as soon as the game starts
72:58 - so I'm going to say if ok because we
73:03 - want in an event or anything the coach
73:04 - is gonna run straight away so if
73:06 - equipped item dot value is not equal to
73:11 - nil okay or just empty speech marks your
73:16 - round to speech marks then so if there
73:19 - is an item that is equipped then we're
73:21 - going to want to just get rid of
73:24 - everything that's currently in the what
73:28 - in the equipped item viewports ok
73:30 - because the equipped item viewports is
73:32 - this one right here okay and it's only
73:34 - got some UI elements in there so what
73:37 - would you actually will insert a camera
73:39 - into there first so local fake cam
73:41 - equals instance new camera because we've
73:46 - got another viewport frame here and
73:47 - we're gonna say fake camp dot parent
73:50 - equals equipped item viewport and then
73:54 - we're gonna just get the handle of the
73:57 - item again so we can go up here where we
73:59 - did earlier and just copy this line of
74:01 - code and paste it in here and instead of
74:04 - saying I this time okay in available
74:07 - tools we're gonna say equipped all right
74:10 - instead of saying available tools I one
74:12 - into the whole thing we're just gonna
74:14 - say equipped item thoughts of value okay
74:18 - dot dot and then concatenating with
74:19 - handle and then we're gonna say handle
74:22 - dot parent equals equipped item viewport
74:27 - and we're going to set the equipped item
74:29 - viewport current camera to fake camp
74:34 - like that and we're then gonna say fake
74:37 - camp don't see frame equals handle got
74:40 - camp dot camera see frame
74:43 - dot value okay
74:45 - now that's just pointing the camera ass
74:47 - our item and then we're gonna do an else
74:49 - so if if there is nothing currently
74:53 - equipped then what we can just do is do
74:56 - nothing okay and I'm going to end that
74:59 - there so we don't actually need that and
75:01 - for now
75:01 - but we'll keep it there and what that
75:04 - does is it sees if we've got an equipped
75:07 - item saved and if we do have nice and
75:10 - saved we are just loading it we're
75:13 - pointing the camera at it because the
75:15 - equipped item will be loaded in now
75:19 - we're going to do the same thing again
75:20 - we're just going to do a a get property
75:23 - change signal on the value so one of the
75:26 - value of the equipped item changes we
75:28 - run this code again so we're gonna say
75:30 - equipped item :
75:32 - gets a property change signal and I put
75:36 - value in here so when the value changes
75:38 - we're going to connect up to this event
75:39 - with function and inside of here we're
75:43 - just going to copy this code and paste
75:45 - it in here because every time it changes
75:47 - we want this to run again and let's just
75:50 - indent everything in here but this time
75:53 - we're going to add an else and because
75:56 - there might be an equipped item already
75:58 - in the equipped item viewports we're
76:01 - going to do a for loop like this okay
76:04 - and it's for underscore V in pairs and
76:06 - it's getting everything inside of the
76:08 - item viewport okay don't forget I need
76:11 - to add a curl on here for connect
76:12 - everything in size about item viewport
76:15 - we didn't get children so inside of
76:18 - equipped item viewport so everything
76:20 - inside of here now if it is not a folder
76:22 - because we have all of our shadows and
76:24 - text in here you don't want to get rid
76:26 - of I've put them in this folder so if
76:28 - it's not a folder then it's going to be
76:30 - destroyed so that the folder is spared
76:32 - and it won't be deleted okay so that is
76:36 - basically deleting any other cameras or
76:39 - items were previously in the equipped
76:40 - item viewport because you want to add
76:42 - our own in now so if there is no item or
76:46 - no equipped item we just
76:47 - deleting everything anyway and what
76:50 - we'll do is we'll do the same thing
76:53 - again we'll just copy this this these
76:57 - lines of code here let's just indent
77:00 - that one that and whoops there we go
77:04 - sorry let's copy this for loop and let's
77:08 - put it up here as well with our other
77:10 - fake cam so if there isn't a quick value
77:13 - we're just getting rid of whatever was
77:15 - that was in the frame last time okay but
77:20 - obviously we'd only still up here
77:21 - because it's running for the first time
77:23 - so this is pretty much all off the
77:25 - client coding done for now we are gonna
77:27 - have to come back to it later on just
77:29 - for something very very quick but for
77:31 - now we should have a pretty good shop
77:34 - and let's go ahead and test out see if
77:36 - we have any bugs I can open up the
77:38 - output I'm gonna clear it and we can
77:41 - select our weapons let's see if we can
77:43 - buy one all right we bought it and let's
77:46 - equip it and there we go it appears in
77:48 - the bottom left corner of the screen
77:50 - let's try and pick another one and equip
77:52 - that one and there you go
77:54 - you can see that the equips icon in the
77:58 - bottom of corner of the screen is
77:59 - changing and rendering the equipped item
78:01 - for us and we can change our equipped
78:05 - item so I'm currently got the as your
78:06 - sword and you see it's changed to equip
78:09 - when I go to the rocket launcher and you
78:12 - can see that all of these are owned and
78:14 - there we go it's all working in perfect
78:17 - condition everything's going well and
78:19 - that is everything so far that we need
78:22 - to do for the local scripts so the next
78:25 - thing that we're going to need to do is
78:27 - we're going to go back to saving the the
78:30 - tools and loading them that's what we
78:32 - were doing
78:32 - earlier on in the server stats of script
78:36 - so let's go back in and do that so what
78:39 - we're going to do here is we're going to
78:40 - what we firstly check to see if there is
78:42 - weapon data and so if there is no weapon
78:45 - data then we know that they don't have
78:46 - anything equipped right because no
78:48 - weapons and are equipped so what we can
78:51 - do here is we can firstly loop through
78:53 - all of the weapons that they have saved
78:56 - and load them in and then we will set
78:58 - their equipped value okay
79:00 - let's get rid of these comments and
79:01 - let's get straight to it we're gonna
79:04 - loop through all of the weapons that
79:07 - we've saved because we're gonna save
79:09 - them as a table okay and the table that
79:11 - we save is gonna look something like
79:13 - this okay it's gonna look like that okay
79:15 - so you've got your table on each entry
79:17 - is gonna be the name of the sort or the
79:20 - weapon okay
79:21 - so we're gonna say for for under school
79:26 - cuz we want using the counter weapon
79:28 - okay
79:29 - cuz that's the weapon we're gonna loop
79:30 - through doesn't matter what you call it
79:32 - in pairs and I'm gonna loop through
79:34 - weapons data table do and inside of this
79:37 - for loop we're gonna say if game dot
79:40 - server storage dot items come on fine
79:43 - first child weapon okay because we're
79:48 - not saying weapon name because it's at
79:50 - is that a string okay it's not an object
79:52 - so if we can find that weapon in service
79:56 - storage then we're gonna make a clone of
79:59 - it okay so a local weapon clone equals
80:02 - game server storage items and then
80:05 - square brackets we're gonna write I'm
80:07 - gonna write weapon and we're gonna clone
80:10 - that that tool and we can say weapon a
80:13 - clone doctor parents equals inventory
80:17 - okay that's going straight into the
80:19 - inventory which we defined up here
80:21 - alright so now that we've done that we
80:25 - can just print to say weapon dot dot
80:29 - loaded in just so you know that
80:32 - everything's loaded in fine you don't
80:34 - have to add this but it's good for
80:35 - debugging purposes and so outside of
80:39 - this full loop we're then going to just
80:41 - check to see if they have a quick data
80:43 - because obviously if they do have
80:45 - weapons we don't know whether they had
80:46 - one equipped or not
80:47 - so if equipped data then and we can say
80:51 - acquit so if there is data there we can
80:53 - set their equipped value which we
80:55 - defined up here and we can set that to
80:59 - equipped data okay and then we're going
81:03 - to wait for the player GUI
81:13 - and we're doing this because once the
81:15 - player GUI is loaded in what we're going
81:18 - to do is we're going to fire a remote
81:20 - events which is going to send the
81:22 - equipped value from the data store to
81:25 - the client so that we can display it in
81:27 - our viewport frame the bottom left
81:29 - corner of the screen okay so would wait
81:31 - for child play GUI because this server
81:33 - can't actually see anything inside the
81:35 - player GUI and then we're gonna say game
81:36 - got replicate the storage dot send
81:40 - equipped now if you haven't got this
81:42 - remote events make sure to add it I'm
81:44 - talking about a remote event not a
81:45 - remote function so add a remote event
81:48 - into replicated storage name it send
81:50 - equipped with capital S and E so send
81:53 - equipped and then we're gonna say curl
81:57 - on fire client so we're sending a
81:59 - request to a specific client in this
82:02 - case the player that joined the game
82:04 - because we're using the parameter of
82:05 - player and we're going to send with what
82:10 - with this request the equipped data so
82:13 - whether and what whichever tool is
82:16 - equipped or not ok and that is going to
82:19 - be it for loading the weapons what we'll
82:23 - do is we'll just add an else here to
82:26 - this if statement if weapons data we can
82:28 - say else print no weapons
82:33 - data and we've got our end there to
82:36 - finish it off okay so we'll deal with
82:39 - these send equipped very soon but we're
82:41 - just sending over the equipped the
82:44 - equipped data what they quit weapon from
82:47 - the data store over to the client
82:50 - because the client can't read from a
82:52 - data store so now we're going to go and
82:56 - save these tools ok and it's going to be
82:58 - relatively straightforward we're going
83:00 - to do is going to add another Pico after
83:04 - the after the first books they store and
83:10 - I've moved this players left - one just
83:12 - outside of the Pico for now and we're
83:16 - gonna say P call function just to handle
83:19 - it well to keep the arrow enclosed if
83:21 - something goes wrong
83:22 - Pikul function and then we're gonna do
83:25 - and say local weapons equal with game
83:27 - server storage dot two-player data and
83:30 - we're gonna get the player the players
83:32 - folder dot inventory : get children so
83:36 - we're just saving as a variable and
83:37 - we're gonna get we're gonna make weapons
83:39 - table okay so what pins table equals and
83:42 - then we're just can throw out our table
83:44 - there so what we're gonna do is we're
83:46 - going to loop through so four underscore
83:48 - V in pairs at weapons so we're looping
83:52 - through all of the weapons in the
83:55 - inventory as we've justified here do and
83:57 - we're just going to insert each weapon
84:01 - into that weapons table so into weapons
84:04 - table
84:05 - we're going to insert V dot name okay so
84:08 - the name of the tool and once we've got
84:11 - all of our tools into that table we can
84:14 - just say data stores code on set async
84:17 - and we can say player got user ID dot
84:22 - dot and then we can concatenate it with
84:24 - a string with a hyphen and reps because
84:27 - web swooz the key that we're using up
84:30 - here the unique key for each player cuz
84:32 - we're using that user ID to make it
84:34 - unique so webs and then outside of the
84:39 - speech marks but still in the brackets
84:41 - we're gonna say weapons of table because
84:44 - that's what we're saving to this key
84:46 - we're saving this table of all of the
84:48 - weapons that the player owns okay
84:49 - because remember it's not weapons
84:51 - actually it's it's gonna be values okay
84:54 - cuz we made that value from the item
84:56 - when they got it okay so we we make an
85:00 - object value and we set the value to two
85:03 - the item that they have and then they
85:05 - get saved because we get the the name so
85:07 - it's not actually the the tool it's a
85:09 - value that we that we are save so next
85:17 - we're going to save the equipped value
85:19 - so if games got server storage dot
85:23 - player data and then obviously their
85:24 - name their folder
85:25 - I've got equips dot value is not equal
85:28 - to nil so it's not equal to nothing then
85:31 - we can say local equipped save value you
85:36 - games or service storage thought to play
85:41 - at data and then get a folder again dot
85:44 - equipped thoughts value okay so that's
85:48 - just the the value that we that we're
85:50 - saving it to we said we're saving it's a
85:52 - variable okay
85:54 - in fact I'll get rid of the value here
85:56 - and just set it to the objects so we'll
85:58 - just say local equipped vow equals again
86:04 - for self storage playdates presently
86:05 - we've got equipped and then we can say
86:07 - data stores called onset async okay and
86:12 - we can say player dot user ID dot dot
86:16 - and concatenate it with - equipped value
86:20 - because that is the key that we used up
86:22 - here for the equipped data and then
86:26 - we're just going to do equipped vow
86:28 - thought about you okay so getting the
86:31 - value of this equipped object value okay
86:35 - and then we can just do a little print
86:38 - outside of it saying saved weapons and
86:42 - points and then we can do the deduction
86:45 - of players left and we can fire at the
86:47 - bindable event and then we've got our
86:49 - bind to clothes and that will pick it up
86:51 - and ensure that the last player's data
86:53 - is saved when they leave the game okay
86:56 - so there we go we've got we've got our
87:02 - we've got our saving done just remove
87:05 - that and that should be everything for
87:09 - the stat script I believe and what we
87:12 - can do now is we can move on to the
87:13 - final part which is that send equips
87:16 - resent which we dealing with on the
87:19 - client so back here in the court local
87:23 - script we're gonna store scroll up to
87:24 - the top and just after our variables
87:27 - here we're going to do a a on a client
87:30 - event to pick up that send equipped
87:31 - which is the the equipped data the the
87:36 - tool that was equipped and was saved in
87:38 - the data so we're just passing it from
87:40 - the server to the client so we can
87:41 - update our viewport for him over here in
87:44 - the bottom left of the screen so if we
87:46 - go back to the core we can say game dot
87:49 - replicators
87:50 - storage doctor send equipped dot on
87:54 - clients events : connects function and
87:58 - our arguments here it's just gonna be
88:01 - equipped and we say equipped because
88:04 - equipped is obviously the name of the
88:05 - tool which was equipped when they user
88:08 - last left the game and we'll use this to
88:11 - show in a few poor frame and we just say
88:14 - equipped because it is the the name of
88:16 - the tool because it was a string value
88:19 - okay and we've passed we passed through
88:21 - if you look in the stat scripts you can
88:23 - see that we said equipped Val that value
88:26 - which is this it's acquitted value here
88:28 - which is a string value so if we go back
88:30 - to the core and what we need to do here
88:32 - is we just need to update that equipped
88:34 - item viewport which is very very simple
88:36 - all we need to do is we need to firstly
88:38 - set the equipped item value on the
88:42 - client to the same value which we pass
88:44 - through so equips item value equals
88:48 - equipped and then we're gonna say if
88:51 - equips item value is not equal to
88:55 - nothing or just an empty string then
88:57 - we're just doing to create a another
89:00 - fake cam and do what we did down here if
89:03 - we have a look at in the get property
89:05 - change signal if we just take this these
89:07 - lines here when we generate the camera
89:09 - with the instance new to where we change
89:12 - the fake cam C frame and we copy that
89:14 - and just paste that up here that is all
89:16 - that we need okay because what we're
89:18 - doing is we're creating this fake cam
89:21 - and but this time we're going to do is
89:24 - we're gonna just change the parent and
89:25 - instead of being in the equipped item
89:27 - it's going to be in the equipped item
89:29 - viewport and I think that should be the
89:33 - same down here as well fake hand
89:35 - apparently who is equipped item viewport
89:37 - yes it should so make sure that it says
89:39 - the equipped item view put down here and
89:41 - let me just see if I made it in a house
89:42 - yep make sure you change equipped item
89:45 - to equips item viewport that's just a
89:47 - mistake made by me sorry guys
89:49 - so make sure that the fake cam doc
89:52 - parent is indeed equipped item viewport
89:54 - I sounded quite fat if I made this
89:55 - mistake anywhere else
89:59 - folk camp apparent equals equipped
90:02 - awesome viewport I think we're all good
90:03 - so make sure that you set it to equip so
90:05 - I some a viewport here and I think that
90:09 - is everything that we need because we
90:10 - are just basically cloning the the
90:13 - handle from two models we're putting
90:15 - into the equipped item viewport setting
90:17 - the current camera of that viewport to
90:19 - the fake cam and then changing the see
90:22 - frame to the camera see frame there so
90:24 - it's just getting the equipped data from
90:27 - the data store and then as soon as we
90:29 - get that we're going to fire it off here
90:31 - to the local script which which was
90:34 - where it will be picked up and then we
90:36 - just set the equips item viewport down
90:38 - here to display that information about
90:40 - that tall so anyway let's go ahead and
90:43 - test this out so I'm gonna go into my
90:45 - shop here and I'm going to set the main
90:48 - frame I'm gonna go and set it to
90:50 - invisible by unchecking the visible
90:52 - property and let's go and click play see
90:54 - if it works so if we load in here and
90:58 - open up the output you see it says no
91:02 - weapons data and if I click on the shop
91:04 - button to open it up we've got all of
91:06 - our items in here you can see I haven't
91:09 - got any equipped items because this is
91:11 - the first time I've actually played
91:13 - really when we've done the data saving
91:15 - and I can select an item here which
91:17 - everything looks good let's buy it
91:19 - anas your sword and let's equip it
91:21 - alright so I've got my as your sword
91:23 - equipped and what we're gonna do we're
91:26 - gonna go into the game but I've seen
91:27 - what we don't be giving it yet cuz we
91:29 - need to actually add it into the main
91:30 - script which we'll do next but we can
91:32 - unequip and we can equip the rocket
91:35 - launcher instead and we can buy all of
91:38 - these items so if I click stop you can
91:43 - see it's saved and if we go back into
91:45 - the game they might not have saved
91:47 - because we're gonna play solo here yeah
91:49 - it didn't save because we replaced hello
91:50 - but if you were to check this out in a
91:52 - real web locks game and it should work
91:54 - for you but anyway let's go into the
91:56 - main script and just add in the final
91:58 - part to make this work to give you your
92:01 - weapon so in the main script what we're
92:04 - gonna do going to scroll down to where
92:07 - you get your sword here
92:09 - what we do is we're going to let's just
92:11 - go here we're going to get your equipped
92:14 - value
92:15 - okay so locally quickly whose game door
92:17 - so storage top player data play-doh
92:19 - named equipped alright you need to add
92:21 - that in and then we're gonna say if
92:25 - equipped value is not equal to two just
92:30 - empty speech marks then local sword
92:34 - equals game dot server storage dots
92:38 - items and in square brackets we're gonna
92:40 - say equips dr. value and outside of that
92:43 - we're going to say at current clone all
92:46 - right we're cloning you're equipped sort
92:49 - a quit weapon but instead of saying
92:51 - sword and because it's a weapon or you
92:54 - might have a sword in your game minds
92:56 - focused around swords but you could have
92:59 - a gun so you can call it weapon if you
93:00 - want so local weapon equals game to a
93:03 - server storage dot items are quit via
93:05 - clone and you can say weapon dots
93:09 - apparent equals player doctor backpack
93:12 - okay and then you can say else and you
93:16 - do the same thing again local what this
93:20 - time if they don't have anything
93:22 - equipped you can take this local sword
93:24 - equals self storage sort of sword clone
93:27 - and just put it in here okay
93:29 - so just take it from where we originally
93:31 - had it and put it inside of this if
93:33 - statement in the else here and what I
93:36 - should do is it will just give you the
93:39 - normal default sword which we have got
93:41 - here in server storage so don't put that
93:44 - don't put the sword in the items folder
93:46 - keep that in serve storage because it's
93:48 - the default sword what you're going to
93:50 - use okay so if you don't have anything
93:52 - equipped then you're gonna get the
93:54 - normal sword and then if we scroll down
93:57 - even further to where we delete the
93:59 - sword over here what we're going to do
94:03 - is we're into we're gonna say let's get
94:05 - rid let's get rid of this sir this sword
94:08 - here it's sort this these two if
94:12 - statements and we're gonna say four
94:14 - underscore comma tool in pairs player
94:17 - dot backpack column get children
94:20 - do if tool cannot find first child price
94:26 - then told : destroy and let's just copy
94:31 - this if statement and paste it again but
94:36 - this time we're gonna do it for the
94:37 - character okay for your character
94:39 - because you might be holding the sword
94:41 - so we're just going to change player up
94:43 - backpack call and get children to
94:45 - character curl and get children okay
94:49 - just like that and what that's going to
94:51 - do is it's going to see if you have a
94:53 - price inside of your sword it's going to
94:55 - destroy it but obviously the normal
94:57 - sword here doesn't have a price value so
95:00 - we're just gonna be a bit sneaky and
95:01 - we're gonna add a number value in here
95:02 - even though we're not gonna put a price
95:04 - on this sword we just not add a price so
95:07 - that that too will get deleted even
95:09 - though it's not worth anything okay so
95:10 - make sure your price goes into this
95:12 - sword tool here and we should be good to
95:16 - go alright so let's go and play the game
95:17 - and see if it loads in our air our tool
95:21 - so we're gonna open up the shop I'm
95:22 - gonna equip with the actual sword and
95:25 - let's see if we get given it there we go
95:30 - I was given my as your sword and what I
95:34 - want to have a different weapon I can
95:36 - just equip my rocket launcher here and
95:38 - wait for the next round to begin and we
95:41 - should be given our rocket launcher
95:48 - there we go what the rocket launcher and
95:50 - boom there we go everything clean still
95:54 - working fine and if we went to test this
95:57 - in a real game then it should save our
95:59 - data Wow
96:01 - so I think that is the end of this part
96:04 - in the series thanks for watching so far
96:08 - I'm sorry for the delay in in guessing
96:10 - these videos out I was very busy and I
96:13 - will try and get some more videos out
96:15 - around this series very soon
96:17 - so that would be impatient I'll leave
96:19 - the GUI in the description for you to
96:21 - take but if you want leave the entire
96:23 - source code and so you don't have to
96:25 - copy out from this video you can become
96:27 - a channel member for 4.99
96:29 - in your country and you'll be able to
96:32 - get the source code there
96:34 - and don't forget to like the video and
96:36 - subscribe to a notification bar we do
96:39 - appreciate it very close to hundred
96:40 - thousand square was now and if there is
96:43 - something that is you know not working
96:45 - in this video then make sure to always
96:47 - check out the description because I'll
96:49 - always had some information in there if
96:50 - there's something wrong with it or if it
96:52 - needs updating and if you have any
96:55 - questions or ideas for future videos or
96:59 - for this series let me know in the
97:00 - comments so I just joined the game
97:01 - previously and I went and bought some
97:03 - items and then I left and let's go and
97:06 - rejoin I had the Azrael sword equipped
97:08 - and there we go it's loaded in again and
97:10 - you can see that the the books have
97:13 - loaded them as well but what if I go and
97:15 - equip the pistol and if you have a look
97:18 - it's now equipped and all the other
97:20 - items say equip but the epistle says
97:24 - unequip if I leave the game and we go
97:26 - ahead and rejoin it should have saved
97:28 - the pistol in our equipped item viewport
97:31 - so let's go in again it's gonna join the
97:35 - server and boom there we go the pistol
97:37 - is in our equipped viewport and it says
97:40 - unequip whilst the other items still say
97:43 - owned but we can still equip them so
97:46 - that's the end of this video I hope it
97:48 - was very useful if it was to drop a like
97:50 - don't forget to subscribe hit the
97:51 - notification bell and I'll try to some
97:54 - more videos in this series I know I
97:55 - haven't done a video in this series for
97:57 - a long time really sorry about that I
97:58 - just had other things to do and I wasn't
98:01 - able to find the time but I will have
98:04 - more videos coming out soon so make sure
98:05 - you subscribe for that and I'll see you
98:07 - in the next part