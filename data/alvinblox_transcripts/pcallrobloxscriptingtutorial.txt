00:00 - in this video I'm going to show you how
00:02 - to deal with errors and why you should
00:04 - use PE call in Roblox so we do get a
00:08 - lots of errors in our code sometimes and
00:10 - when we do get an error it breaks our
00:12 - script it prevents it from running so
00:14 - just to give you a little look here okay
00:18 - if we have Hello World Goodbye World and
00:20 - then we have some code in between that
00:23 - doesn't work for example if I spell the
00:25 - workspace
00:28 - incorrectly it's going to throw an error
00:30 - so if we click on run boom we have an
00:33 - error you can see it prints hello world
00:35 - but it doesn't print Goodbye World now
00:38 - this is a typo okay it's an error that's
00:42 - obvious but a lot of the time there are
00:45 - cases where most of the time us our code
00:48 - should work but there are some cases
00:50 - where it might not work which are out of
00:52 - our control for example if we are
00:55 - referencing a service such as the
00:58 - marketplace service the data store
01:00 - service right and Roblox has some kind
01:03 - of outage or mini outage right and and
01:07 - some of those Services go down then they
01:09 - might throw an error when we try to um
01:12 - call some of their functions and we
01:15 - don't want that one small outage to
01:18 - impact the rest of our code so we don't
01:20 - want to stop our scripts it would
01:22 - essentially just bring our entire game
01:24 - to a ho because all of the servers would
01:26 - be poing the Roblox Services some of
01:29 - them might not be responding they might
01:31 - be throwing errors and it would just
01:33 - stop the script and the script would no
01:34 - longer be listening to any events they'd
01:37 - no longer be able to run the game if we
01:39 - had a game Loop they might break so in
01:42 - the event of these issues how can we
01:45 - sort of when we get an error how can we
01:47 - prevent it from breaking the entire
01:49 - script because it's not really
01:50 - productive to stop an entire script for
01:53 - a small error like this well what you
01:55 - can do is you can wrap it in a PE call
01:58 - by saying PE call and then you put your
02:00 - code in a function like this and that P
02:02 - call and that function gets wrapped
02:05 - inside this P call here and when you see
02:08 - p call it essentially runs the code in a
02:12 - in a separate place right it doesn't it
02:15 - when we run our code normally it goes
02:17 - through step by step okay and it waits
02:20 - until this line is done before it moves
02:22 - on to another line
02:25 - okay and this is called creating a new
02:27 - thread when we do the PE call it is is
02:30 - essentially taking the code in this
02:31 - function and it's running it alongside
02:35 - the rest of our code so you can almost
02:36 - think of it as breaking it out into a
02:38 - new script that's running side by side
02:40 - in parallel so we're not waiting for
02:43 - this code to finish before we move on
02:45 - and the advantage of that of moving it
02:47 - into a new thread is that if this code
02:52 - errors if it you know because it will
02:54 - error because this has got a spelling
02:56 - mistake if this code returns an error
02:58 - it's not going to prevent the rest of
03:00 - our script from running because it's
03:02 - going to be isolated it's going to be
03:03 - isolated to this one function which is
03:05 - in a separate thread so it will just end
03:08 - that thread but we have this other
03:10 - thread for the rest of our code right
03:12 - which is for the script so when we do a
03:14 - PE call it's like branching your code
03:16 - off into another thread uh into another
03:19 - separate protected environment and if it
03:21 - breaks it's it's no bother because the
03:24 - rest of the scripts is going to run so
03:27 - let's click on the run and you can see
03:29 - despite the fact we have a typo which
03:31 - would have thrown an error the rest of
03:33 - the code has successfully run so that is
03:38 - PE call and what you can also do is you
03:40 - might want to know you still might want
03:42 - to know that your code is thrown an
03:43 - error so how can we still print the
03:46 - error message without stopping the
03:49 - script we we can peo returns two values
03:52 - it returns a success value which is
03:54 - whether it's true or false and it's
03:56 - whether all of the code inside the
03:58 - function executed successfully without
04:00 - any errors and if that's the case then
04:03 - the
04:05 - success value you don't have to call it
04:08 - success some people call it this some
04:10 - people might just you know do this but I
04:13 - like to call it success because it makes
04:15 - sense in in English terms so we have the
04:18 - success value it's either true or false
04:20 - and then we also have an error message
04:23 - now if you try to call this error it
04:25 - will appear in blue that's because it's
04:27 - a
04:28 - Roblox uh core word right which is used
04:31 - in in in in core scripts so it's used by
04:34 - lure so so we can't use the word error
04:36 - so I just like to call it e for ER and
04:40 - that will be the error message if there
04:41 - is one now of course if it's a success
04:44 - and this value is true there will be no
04:45 - error message so this will be nil so we
04:48 - can then check to see if it's a success
04:50 - by saying if success then we can print
04:54 - PE call threads worked fine whatever you
04:58 - don't have to print anything at all if
05:00 - if it's gone well what we're looking for
05:02 - is if it was not a success so if not
05:05 - success then we're going to warn the
05:07 - error message you can do a print I like
05:09 - to do a warn because it makes it appear
05:11 - in Orange like this so if we click on
05:14 - run you can see it now prints out our
05:17 - error message problem is it doesn't
05:19 - print out the line okay it's printed out
05:23 - line8 but that's where we're print we're
05:25 - doing the warn from it it hasn't told us
05:27 - specifically that it's online for and
05:29 - this is one of the disadvantages of
05:31 - using a PE call it's not really a
05:33 - disadvantage because you'd want to have
05:34 - a PE call anyway because you know not
05:37 - knowing the line on which your code is
05:39 - failed is better than having the code
05:41 - break the entire script so you know if
05:44 - you wanted to debug it though you could
05:46 - just get rid of the PE call and suddenly
05:48 - you'd realize whereabouts the error in
05:50 - the code is because the actual error
05:52 - message would tell you but with a PE
05:54 - call you can't do that okay um so that's
05:59 - it essentially it essentially isolates
06:01 - part of your code from the rest of the
06:03 - script so that if a part of it breaks
06:07 - then it won't stop the entire script it
06:10 - will just kill the current thread where
06:12 - that code is is being executed inside of
06:15 - so yes if you ever do any data store
06:18 - calls Marketplace service calls calls to
06:22 - external apis by roblocks which have a
06:24 - high chance of going down you know over
06:27 - the span of of a year or whatever you'd
06:29 - want to put in a PE call and there's
06:31 - lots of other times where you might want
06:32 - to use a PE call it's it's one of those
06:34 - where you tend to just use it out of
06:38 - caution right if there's a chance the
06:40 - script could break you know if there's a
06:42 - chance the player you're looking for
06:44 - might have left the game things like
06:46 - that you would just wrap it in a peac
06:47 - call I mean look it's two lines right
06:51 - and if you had all of your code in one
06:53 - script which isn't best practice but you
06:57 - know let's not kid ourselves uh at times
06:59 - our scripts can get very long we have
07:01 - you know different things in in in the
07:03 - same script why run the risk of breaking
07:05 - all of that code just wrap the most
07:08 - important things that that could go
07:09 - wrong in a in a PE call and that's not
07:11 - me saying put every single function into
07:13 - a PE call because that's going a little
07:15 - bit over the top but definitely for the
07:18 - things that that definitely could break
07:20 - and it's useful to look in your error
07:21 - report if you've got a game that's out
07:24 - there and and you don't know and you
07:26 - might have some errors have a look in
07:27 - the error report in your games dashboard
07:31 - and then just isolate those errors in a
07:33 - p call because whilst it might not fix
07:35 - the error it will prevent it from
07:37 - stopping the code from running in the
07:38 - rest of your
07:40 - scripts um however just one other thing
07:42 - to know if you have code in an event for
07:45 - example in a player added event uh and
07:48 - if any code in that event was to in in
07:51 - the function of that event was to fail
07:54 - or throw an error that's not going to
07:55 - break the rest of your script because
07:58 - the the the event itself the function
08:00 - from that event is is its own separate
08:02 - thread okay so we're just talking about
08:05 - code where it's it's in that script it's
08:08 - not in its own thread
08:09 - already uh but even if it was in its own
08:11 - thread already you'd probably want to
08:13 - wrap it in a PE still to prevent any
08:16 - other code in that thread from from not
08:18 - executing so I hope this video was
08:20 - useful on how to use PE call if you
08:22 - enjoyed it please leave a like let me
08:24 - know if you have any other videos you'd
08:25 - like me to cover and don't forget to
08:28 - subscribe to the channel for more
08:29 - scripting tutorials and I'll see you in
08:31 - the next one thanks for watching