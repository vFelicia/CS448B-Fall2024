00:00 - welcome back to part four in the how to
00:02 - create a game on roblox series now in
00:05 - this episode we're going to be doing
00:06 - data stores so that we can save the
00:09 - players currency so that in future
00:11 - they'll be able to leave the game rejoin
00:14 - and then we can script allowing them to
00:17 - buy different items in the game but
00:19 - today we're going to be doing data store
00:21 - and before we kick off the video I just
00:23 - want to start off by letting you guys
00:25 - know that YouTube have now enabled
00:27 - channel memberships on the channel
00:30 - underneath this video you can see that
00:32 - there is a join button and a lot of
00:34 - people have been asking how to get the
00:36 - source code so now the code is
00:39 - restricted to channel members only
00:41 - because what people were doing was they
00:43 - were coming to the video just taking the
00:45 - code and leaving so they weren't
00:47 - actually learning anything which is
00:49 - unfair because I've taken the time to
00:51 - create these videos and people are just
00:53 - watching them for five seconds and so if
00:56 - you want to get the source code you can
00:58 - become a channel member and you also get
01:00 - other perks such as a badge next to your
01:03 - name in chats you get exclusive live
01:06 - streams merch discounts and much more so
01:09 - just a quick announcement about channel
01:12 - memberships let's get straight into part
01:14 - 4 so what we need to do is we need to go
01:16 - into the stats script over here and this
01:19 - is where we have our books where we
01:21 - actually create the currency and at the
01:24 - top here we're going to define the data
01:26 - store service so I'm going to say local
01:29 - data stores equals game current get
01:33 - service data store service spell like
01:38 - this in Pascal case and then we can say
01:41 - it : get data store and then in these
01:46 - brackets in speech marks we're going to
01:48 - say the name of our data store and
01:51 - that's going to be books data store you
01:54 - can call it whatever you like
01:56 - I'm calling mine books data store as it
01:58 - tells us what we're going to be saving
02:00 - so now that we've done this we're just
02:02 - going to drop beneath the character
02:06 - added event over here and I'm just going
02:10 - to add a quick comment saying data
02:11 - stores
02:13 - and what we're going to do is we're
02:14 - going to create a variable called player
02:18 - data so local player underscore data
02:22 - that is the variable which is going to
02:24 - store the results of what's in their
02:28 - data store key right so we're gonna
02:31 - we're going to take their key if they've
02:33 - got one now a key is what's used to look
02:37 - up their data and get their that
02:39 - specific data for one player and we're
02:41 - going to bind whatever comes back from
02:44 - that key whatever result whatever value
02:45 - that data store gives us we're gonna put
02:48 - in this variable but we're gonna define
02:50 - it first in case there is no data there
02:53 - so what we want to do is you want to do
02:55 - a P call here and this will just so in
02:59 - case the data store fails then the whole
03:02 - script won't error and we can carry on
03:05 - nothing's going to actually break so we
03:08 - can what we can say is when say player
03:09 - underscore data equals data stores and
03:13 - then we can say : gets async and then in
03:17 - brackets we're gonna add their key now
03:20 - the key can be whatever we want but we
03:23 - have to include their user ID so it's
03:26 - unique and so that everyone has a
03:28 - different key so we can say player dot a
03:33 - user ID dot dot because we're
03:37 - concatenating it together with a string
03:40 - and that string is going to say - and
03:43 - then the name of your data your currency
03:47 - so in our case it's books but you could
03:50 - call it whatever you want so it could be
03:52 - coins
03:53 - it could be points whatever you want but
03:56 - I'm going to keep mine as books so we're
03:59 - just going to put that in speech marks
04:01 - here and a person's key might look
04:05 - something like this so that we have the
04:07 - user ID and then we have books on the
04:10 - end and each player has a different user
04:13 - ID so each key is going to be different
04:17 - and of course something could go wrong
04:19 - with get a sync data stores might be
04:22 - down or there might be some kind of
04:24 - error which is stopping it from
04:26 - getting the data so we wrap it in this
04:28 - Pico function in case something goes
04:30 - wrong the whole script won't error and
04:33 - break down so now that we've done that
04:36 - what we need to do is we need to check
04:38 - to actually see if they have some data
04:40 - or whether they're a new player to the
04:42 - game because if they're a new player
04:43 - then we're going to want to give them a
04:45 - default amount of cash to start off with
04:48 - or books in this case so we're going to
04:51 - say if player underscore data is not
04:55 - equal to nil so that means if there is
04:57 - something there there's a value there is
04:59 - some data already saved then we're going
05:03 - to load that data in so we can say
05:05 - player has saved data load it's in so to
05:11 - load it in
05:12 - we can just say books dot value equals
05:15 - player underscore data because if there
05:19 - is some some data stored in that player
05:22 - data variable then we can just set the
05:24 - books value to player underscore data
05:27 - let's just make books lowercase here
05:29 - because we defined it with a lower case
05:32 - when we over here so now that we have it
05:35 - loaded it in what if the player is brand
05:38 - new to the game and doesn't have any
05:39 - safe data well we can say else so if we
05:43 - go to this else here we know that it's a
05:45 - new player so we can give them a default
05:48 - cash value as either no data saved on
05:52 - this player so we can say books got
05:55 - value equals and then we can either give
05:59 - them an amount of cash right here or we
06:02 - can set it to a variable which I'm going
06:04 - to do I'm going to create a variable
06:06 - called default cash and then at the top
06:09 - of the script what we can do is we can
06:12 - create another variable called default
06:16 - cash also local default cash equals and
06:20 - then you can set an amount of cash which
06:23 - you want a brand new player to receive
06:25 - of course if you don't want any cash to
06:27 - be given to a new player you can just
06:29 - set it to zero but I'm going to set mine
06:31 - to ten so now that we have got the
06:36 - the default cash for a new player what
06:40 - we need to do is we need to well that's
06:42 - all of the loading finished we now need
06:45 - to work on saving the data and that can
06:48 - be a little bit tricky because we need
06:50 - to make sure that every player in the
06:52 - game gets their data saved because when
06:54 - the last player leaves the game the
06:56 - server will soon shut down afterwards so
06:59 - we don't want to corrupt any data or
07:01 - make a player lose their data because
07:04 - the server shut down before it was able
07:06 - to save so what we're going to do is
07:08 - we're going to create another event
07:10 - we're just going to drop outside of the
07:12 - player added one here and we can say
07:14 - game adopt players dot player removing
07:18 - heard on connect and then in brackets we
07:22 - can say function and then in another set
07:24 - of brackets we can say player just your
07:27 - normal event down here and player is
07:30 - going to be the player that is leaving
07:31 - the game because player moving fires
07:34 - whenever a player decides to leave the
07:38 - game so just before they leave this
07:41 - event will fire so let's drop a line and
07:43 - roblox have added in the end here so you
07:47 - need to make sure you've got the end
07:48 - with a closing bracket here and inside
07:51 - of here what we can do is we can do
07:53 - another peak or function so P cool and
07:57 - then in brackets function just like in
08:00 - events and make sure to add an end here
08:03 - with another closing bracket and so
08:05 - inside of here any code if it errors
08:08 - it's not going to break the entire
08:10 - script so in this case we want to say
08:13 - data stores curl on set async and then
08:17 - in brackets we can say player dot user
08:19 - ID and then we want to concatenate again
08:23 - because we're getting there key and we
08:26 - want to save a specific value to this
08:28 - players unique key so that we can get it
08:31 - when they next during the game so we're
08:34 - gonna say player dot user ID and we want
08:36 - the key to be exactly the same as we
08:38 - said up here so we're going to then in
08:40 - speech marks say - books so that we have
08:44 - the exact same key it looks like I made
08:49 - the D
08:49 - for datastores capital so make sure
08:51 - that's lowercase so it's in line with
08:53 - how we defined it at the top here and we
08:56 - also want to then we want to give the
09:00 - data which we're going to save so to
09:03 - this key we're going to save these
09:05 - players books so we're going to say
09:07 - player dot leader stats dot books dot
09:13 - value okay now we saved the books in
09:16 - their leader stats which is why we're
09:18 - saying player don't lead to sack stock
09:19 - books and then we're saying dot value
09:21 - because that's the number of books
09:22 - they've got and we're assigning that to
09:25 - that key so we can save it so we should
09:28 - have that should have saved the data
09:30 - let's just add a little print saying
09:32 - saved and hopefully everything went went
09:35 - well and what we want to do now is so
09:39 - that will save the data if a player
09:41 - leaves the game but what if this player
09:44 - is the last person in the game and the
09:47 - server shuts down before the data safe
09:49 - we don't want that to happen so we're
09:51 - going to use a binder pool event and
09:53 - we're gonna fire that when we know that
09:55 - the data has successfully saved and that
09:57 - will tell the server that it's all good
09:59 - to shut down so to do that we're going
10:02 - to create a binder ball event okay um
10:06 - we're going to create it in our script
10:08 - so we can say local bindable event I'm
10:12 - gonna I'm gonna define it outside of the
10:14 - player added function just before our
10:17 - play removing event and I'm going to say
10:20 - equals instance dot new bindable event
10:25 - now I'm not parenting this to any works
10:28 - we don't need to do that we're only
10:30 - using this bindable event to make sure
10:31 - that the game is okay to shutdown and
10:34 - what we're going to do is we're also
10:36 - going to create another variable at the
10:38 - top of our script called local players
10:41 - left now you'll see why we're doing this
10:44 - in a minute but essentially what we're
10:47 - doing is we're keeping track of player
10:49 - still in the game and if there is one
10:52 - place if there's no players left in the
10:55 - game then we're going to wait for that
10:58 - bindable event to be fired and when it
11:00 - is fired we will know that the game is
11:02 - to be shut down safely without any data
11:05 - being wiped so we need to increment the
11:09 - players left variable when a player
11:12 - joins the game we need to add 1 to that
11:15 - value because a player's just join the
11:17 - game and if somebody leaves the game
11:19 - then when their data has been saved we
11:22 - can subtract 1 from that value and then
11:25 - when it gets to 0 we will know that all
11:27 - players have had their data successfully
11:29 - saved
11:31 - so because set async yields and the
11:35 - script won't continue until the data has
11:37 - been saved what we can do is we can go
11:40 - over here underneath the print saved as
11:43 - we know that the data will have been
11:45 - saved we are able to decrease the
11:48 - players left a variable by 1 so let's go
11:51 - ahead and do that now players left
11:53 - equals players left minus 1 and then we
11:57 - can fire our bindable event and in a
12:00 - minute we'll do our bind to close event
12:03 - which is going to be triggered when the
12:05 - game is ready to shut down so we can say
12:08 - bindable event : fire and that will fire
12:11 - off our events and we're now going to go
12:14 - ahead and pick up in the bind to close
12:17 - event so let's just drop a couple of
12:19 - lines and we're gonna say game code on
12:22 - find it to close and then in brackets
12:25 - we're gonna say function another pair of
12:27 - brackets and drop a line let's zoom in
12:30 - here so we have got our bind to close
12:33 - this is going to be triggered whenever
12:35 - the game gets a signal to shut down so
12:38 - this will be triggered upon shutdown so
12:44 - just before the game is shutting down
12:46 - anything inside of here will will be
12:49 - executed and it will prolong the game
12:52 - from shutting down so we want to make
12:54 - sure that all players data is saved so
12:57 - if there's more than 0 players left we
13:00 - need to make sure that their data has
13:02 - been saved so we can say while players
13:05 - left is greater than 0 do now this is a
13:10 - while loop it will run forever we can
13:13 - save bindable event
13:15 - okay dot event :
13:19 - wait okay and this is going to wait for
13:22 - that bindable event to be fired the
13:24 - server's not going to be closed until we
13:26 - get that confirmation that the last
13:28 - players data has successfully been saved
13:31 - so that's all we need to do for the bind
13:35 - to close so now all players data should
13:38 - be saved
13:39 - ready forged for the server to be shut
13:42 - down and finally at the top of the
13:44 - script just underneath player added we
13:48 - can say players left equals players left
13:51 - plus one we want to add to that value
13:54 - whenever a new player joins the game so
13:56 - that at the end we know that there is
13:59 - going to be another player whose data
14:00 - needs to be saved so now I'm going to
14:03 - publish the game and see if the data
14:06 - store works so I'm just going to copy
14:09 - the link and load into the game so you
14:11 - can see we are a new player to the game
14:13 - and we've been given our 10 books
14:15 - because no data has been found so let's
14:18 - go ahead into the console and give us
14:20 - some cash so we can test to see if it
14:22 - saves so we're gonna go into the server
14:26 - click on command line and we're gonna
14:28 - say game dot players I'm gonna write my
14:30 - name in I'm gonna say leader stats
14:33 - doctor books dot value equals 900 we're
14:38 - gonna leave the game and then rejoin and
14:41 - see if it saves so here we are we're
14:44 - joining the server and we should load in
14:47 - with 900 books there we go we've got our
14:50 - books and they loaded in perfectly fine
14:53 - so there we go we have done data stores
14:56 - in our sword fight game and that was
14:58 - part 4 we're now able to save a player's
15:01 - currency so the in future maybe they can
15:04 - spend it on in-game items we could maybe
15:06 - add some purchasable items as well
15:08 - through developer products and game
15:11 - passes so if you want to see those in
15:13 - future make sure you subscribe to my
15:15 - youtube channel make sure you've liked
15:17 - the video and don't forget if you want
15:18 - to become a channel member so you can
15:20 - unlock the source code and lots of other
15:23 - perks you can click on the join button
15:25 - right next to the subscribe button down
15:27 - below thanks for watching and have a
15:29 - great day