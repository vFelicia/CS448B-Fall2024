00:00 - hey I'm Alvin blocks and today I'll show
00:02 - you how to make the best piggy type game
00:04 - on roblox easily and quickly man I
00:10 - wonder how I can make a piggy game oh I
00:14 - know just the guy
00:15 - alright we're just gonna go on over to
00:17 - the youtubes owl then blocks a little
00:21 - hole pirate it's perfect let me just
00:23 - find the right video here alright how to
00:26 - make a piggy game on roblox this should
00:28 - be good this should be good
00:32 - on my channel I've taught hundreds of
00:34 - thousands of people how to make roblox
00:36 - games so you've come to the right place
00:38 - I'm also officially recognized as a
00:40 - featured educator by roblox and with my
00:43 - videos you'll be able to make your own
00:44 - games and even make ro books from them
00:47 - so if you're interested in that please
00:48 - click the subscribe button below it
00:50 - really does help my channel grow and it
00:52 - motivates me to continue making this
00:53 - content there's more to this than what
00:55 - meets the eye when it comes to creating
00:56 - these videos I've worked all day every
00:59 - day for a whole week to create this
01:00 - picky game testing it for over 10 hours
01:02 - to make sure that you get the best
01:04 - experience from this video and as an
01:06 - added bonus I've created a piggie kit
01:09 - for you to use so that we can speed at
01:11 - the time it takes for you to make your
01:12 - piggie game this piggie kit will give
01:14 - you a map
01:15 - piggy character scripts for making the
01:17 - doors work as well as the keys which
01:19 - will unlock them on top of that you'll
01:21 - also get a lobby and a menu GUI to use
01:24 - as well as some other things which we'll
01:25 - go over later all I ask is that you
01:27 - subscribe to my channel in return for
01:29 - using this model this kit isn't the full
01:31 - game you're gonna need to watch the
01:33 - whole video to learn how to use it and
01:35 - to add more to it as this kit doesn't
01:37 - contain the vital game scripts which are
01:40 - needed to make the game work and that's
01:42 - what we will be making in this video so
01:44 - think of as a head start I'll also be
01:46 - making separate videos and linking to
01:48 - them from this video if you want to
01:50 - learn how to make the things in the kit
01:52 - for yourself from scratch if you'd if
01:55 - you want access to the finished project
01:57 - for yourself with all of the scripts
01:58 - inside and can become a premium channel
02:01 - member for 4.99 a month that way you'll
02:04 - have exclusive access to my project file
02:06 - which will contain the finished product
02:08 - all scripts included and fully working
02:11 - not only that you'll also get the code
02:13 - from my other video tutorials and more
02:15 - exclusive perks which you'll be able to
02:17 - see on the screen now including a badge
02:19 - icon next to your comments so just click
02:21 - the join button underneath the video
02:22 - next to the subscribe button where you
02:24 - can go to the link in the description so
02:26 - without any further ado let's get
02:27 - straight into the video so firstly
02:29 - you're going to want to go and take the
02:31 - piggie kit so head to the description of
02:33 - the video click on show more and then go
02:36 - to the link here where it says piggie
02:37 - kit that will take you to this free
02:39 - model so make sure you click on get and
02:42 - take the model for free it won't cost
02:45 - you anything
02:46 - when you've done that you don't want to
02:49 - open up roblox studio if you haven't
02:52 - already installed roblox studio firstly
02:54 - just check your computer by searching to
02:56 - see if it's already there because it
02:58 - could have already been installed when
02:59 - you first played roblox you just
03:01 - wouldn't know about it
03:02 - so I'm gonna search for roblox studio
03:04 - and here it is so just click it to open
03:07 - it up and it may prompt you to login for
03:09 - the first time if you haven't used it
03:10 - before so just go ahead and log in with
03:13 - your usual roblox account details it's
03:15 - totally safe because it's created by
03:16 - roblox and if you see something pop up
03:19 - about an autosave file just press ignore
03:21 - that is not important to us for now what
03:24 - you're gonna want to do though is click
03:25 - on new over here and then click on
03:28 - baseplate that's going to give us a nice
03:30 - blank area to create our piggy game
03:32 - because we don't need any of these
03:33 - templates now your roblox studio might
03:36 - look a little bit different to mine
03:37 - that's because I've got some different
03:38 - panels open up and I'm using the dark
03:40 - theme but I'm just going to show you how
03:42 - you can set yours up correctly so if you
03:44 - don't see these panels the Explorer and
03:46 - properties window go to the View tab up
03:49 - top and then click on Explorer and
03:51 - properties and they should show up here
03:53 - Explorer and properties are the two main
03:55 - windows that we will be using we don't
03:56 - need to use the output for now once
03:58 - you've done that let's go ahead and
03:59 - insert our piggy kit which we've just
04:01 - taken as a free model heads to the
04:04 - toolbox in the home tab and then click
04:06 - on the grid here of the four so it's
04:09 - little squares this will be your
04:11 - inventory and then make sure that you've
04:13 - selected my models at the top here you
04:15 - should see my piggy kit which you've
04:17 - just taken if you haven't sit if you
04:18 - don't see it there make sure you've
04:20 - actually taken the model and you've
04:21 - clicked the get button so that it's in
04:23 - your inventory so click it and that will
04:26 - insert the piggy kit into your game now
04:29 - remember this is not the full game and
04:31 - you need to keep watching the rest of
04:33 - the video to learn how to make the piggy
04:36 - game work because we've still got some
04:37 - scripting to do this is just like a head
04:39 - start so that we can cut out the boring
04:42 - bits and the things like designing of
04:44 - the map for example but what we need to
04:46 - do is we need to put all of our
04:48 - different objects into the right places
04:50 - because currently that they're all in
04:51 - the workspace and we don't want them to
04:52 - be here so we're going to open up the
04:54 - model we're going to click on this
04:56 - little arrow here and it's going to open
04:58 - up all these different object
05:00 - inside and it's telling us to ungroup
05:02 - these different models in certain
05:04 - services so for example the replicator
05:07 - storage starter GUI workspace so we're
05:10 - going to drag each model to the place
05:12 - it's telling us to put them in so for
05:14 - example this one here it's telling us to
05:16 - ungroup in the workspace so firstly
05:18 - we're gonna just drag it into the
05:20 - workspace here then we're gonna
05:21 - right-click and click on ungroup make
05:24 - sure you click on ungroup and not select
05:26 - children ungroup so you can press
05:28 - ungroup there or press control U or
05:30 - command U if you're on a Mac and you'll
05:33 - see that these three selected models are
05:35 - now in the workspace now I'm just gonna
05:38 - drag all of the other models here into
05:40 - their areas so we're just going to leave
05:42 - this one here this first one we'll get
05:44 - to that in a minute because it's to do
05:45 - with our game logic which we haven't set
05:47 - up yeah but this one is full start to
05:48 - GUI so can I drag that one down into the
05:50 - start of GUI service and we're going to
05:54 - see this GUI appear and that's alright
05:55 - just right click and click ungroup and
05:58 - then just delete this warning GUI this
06:02 - is just a GUI for those that aren't
06:04 - watching the video to tell them to come
06:05 - and watch it
06:06 - which you should be doing right now so
06:07 - I'm going to delete this GUI and it's
06:09 - gone away then I'm gonna go and take the
06:12 - fifth model and it's gonna say ungroup
06:14 - in serve storage so I'm going to put it
06:16 - in service storage right-click and
06:17 - ungroup and we've got some objects in
06:21 - there as well next one is a replicated
06:23 - storage so we can drag that one in there
06:25 - right-click and ungroup and by the way
06:28 - the order that you do this in doesn't
06:30 - matter as long as you just ungroup
06:31 - everything in the right places then
06:33 - we've got the stun script and we've got
06:35 - to put that into service script service
06:36 - and finally this one here the ungroup in
06:39 - your game logic script so we asking you
06:42 - to create that script so we're going to
06:43 - click on the little plus here next to
06:46 - server script service insert a script
06:48 - and we're going to call this script game
06:51 - space logic it's very important that you
06:55 - call it game logic so that we know what
06:57 - what each script does and I'm gonna drag
07:00 - this model into the game logic script
07:02 - right click and click ungroup ok this is
07:07 - one of our modules the door module and
07:09 - it handles the doors which will be able
07:13 - to swing and also for when the keys
07:16 - which the player will pick up when they
07:19 - touch the door we can open and close it
07:21 - so there we go we have just put all of
07:24 - our objects from the piggy kit into the
07:28 - correct places where you can now do is
07:30 - you can read this script if you want
07:33 - it's only for those though that haven't
07:35 - started watching the video if they just
07:37 - take the the model so it's not important
07:38 - to us so I'm gonna delete that and also
07:40 - going to delete the thumbnail camera and
07:42 - we can delete the main model because we
07:43 - no longer need it whilst I'm at it I'm
07:45 - going to delete the base plate because
07:47 - we don't need it
07:48 - so now we have all of our objects needed
07:51 - for our piggy game insert it into the
07:53 - game I'm gonna walk you through what
07:55 - each of them do so firstly in the
07:57 - workspace we've got our lobby this is
07:59 - just a simple model containing parts and
08:02 - inside of it we've got a folder called
08:04 - spawns inside of here we've got a load
08:07 - of spawn location objects and this is
08:10 - where the players are going to respawn
08:11 - if they die now if you're creating your
08:14 - own lobby it's really important that you
08:16 - have a folder in that lobby model called
08:18 - spawns with all of your spawn locations
08:21 - in here okay and they also need to be
08:23 - spawn location objects so you can insert
08:25 - them by going to model and spawn but
08:28 - just make sure that you've put them
08:29 - inside that spawns folder and that your
08:31 - lobby is called lobby okay your lobby
08:35 - your lobby model it's all grouped
08:37 - together like this okay next we have
08:40 - intro tunnel now the intro tunnel is
08:43 - just a model of it's a little setup
08:48 - where the camera will look when you
08:50 - first join the game and we can have a
08:52 - piggy character here if you wanted and
08:54 - it's what the cameras gonna look at when
08:56 - you're in the main menu we're not gonna
08:57 - be dealing with this until later on so
08:59 - I'm just gonna leave it here for now and
09:01 - of course you can create your own as
09:03 - long as you've got two parts a camera
09:06 - face and a camera origin and this is
09:08 - going to tell our camera where to look
09:09 - at but again we won't be working on this
09:11 - until later on so don't worry about it
09:13 - and then over here we have a waiting
09:17 - room and this is where the piggy will
09:19 - get teleported to when they first get
09:21 - chosen so it just has it's a blank white
09:24 - room with two things on the walls two
09:27 - a piece of text telling the piggy that
09:29 - they need to wait and that when they're
09:31 - released to what they have to do so then
09:34 - moving on to the replicated storage
09:36 - we've got a folder in here called
09:38 - chapters and if you don't know piggy
09:40 - each map in picki is called a chapter so
09:44 - you have like chapter one chapter two
09:46 - and at the start of each round a
09:47 - different chapter is chosen so if you do
09:50 - make a map then you're going to want to
09:52 - put your map your map model was in this
09:56 - chapters folder okay so if you wanted to
09:59 - make a new map
10:00 - you just crate it in the workspace and
10:01 - then drag it into the chapters folder
10:03 - okay really important you do have that
10:06 - chapters folder and that all of the
10:08 - chapters are inside of it moving on to
10:10 - service storage now and we have two
10:13 - folders key handles and tools now the
10:17 - tools folder has all of the different
10:19 - tools that you will need in the game
10:20 - such as the keys to open the doors a
10:22 - crossbow that can kill the piggy the
10:25 - green keys that can unlock the door just
10:27 - to the other colored keys red key purple
10:30 - key orange key for example we've got a
10:32 - hammer which can break wooden blocks at
10:35 - the piggy bat obviously which can kill
10:37 - players the white key which will be
10:39 - needed to escape and things like the
10:41 - wood plank which can bridge the gap
10:43 - between the two different floors and
10:45 - also the wrench to turn certain things
10:48 - like electrical generators on or off
10:50 - we've also got key handles and the key
10:53 - handles are the parts which look like
10:55 - the tools which will be in the map so
10:58 - when you click on them you'll be able to
10:59 - equip the tool we'll get onto that later
11:01 - on and then we also have a model called
11:06 - piggy here and this is the piggy
11:08 - character let's just drag it into
11:09 - workspace so I can show you what it
11:10 - looks like so you're a generic piggy
11:12 - character and that's what we will be
11:16 - using that later on when we actually set
11:18 - the players character to look like the
11:19 - piggy so we'll keep that in server
11:21 - storage we also have a bear trap which
11:24 - is the default mesh for a trap that the
11:26 - piggy will be able to place we need to
11:28 - script that
11:30 - and let's just move that back into
11:32 - service storage and we also have a
11:33 - hitbox and I'll be explaining more what
11:36 - that does later on is the transparent
11:38 - parts which will be attached to a player
11:40 - so it's easier for the piggy to click a
11:43 - player so we're going to put that in
11:45 - server storage now our GUI is we have a
11:48 - stamina script which will which will
11:52 - stop you from spamming jumping so that
11:54 - after a couple of jumps you won't be
11:55 - able to jump for a couple of seconds
11:57 - just makes it easier for the PE to kill
11:58 - you now I did not create the script it
12:01 - was created by a gaming guy 88 and he
12:03 - posted it on the roblox dev forum so
12:06 - this game this script isn't essential to
12:08 - the game it's just an added feature then
12:12 - we have the bat GUI it's currently
12:14 - disabled but if we enable it in the
12:16 - properties tab
12:16 - you'll see that this just appears when
12:18 - you equip the bats
12:20 - tellingly piggy that they need to tap
12:22 - the character or click them within eight
12:23 - studs to be able to kill them we then
12:25 - have the main GUI and this is currently
12:27 - enabled but the frames inside are
12:30 - disabled and we've got a black frame
12:33 - which will appear when you die and it
12:35 - covers the entire screen we've got an
12:37 - intro as well and if we make this
12:39 - visible you have to see that this is the
12:41 - intro screen which appears when you
12:43 - start the game we then have a Crouch
12:46 - button which when I enable it here looks
12:49 - like this and it will just tell the
12:51 - player that they can press control or
12:52 - tapped Crouch will be looking into the
12:54 - Crouch stuff later on and we also have a
12:57 - announcement for when you escaped a kill
13:00 - feed which will appear when somebody
13:02 - gets killed and also a top status bar
13:04 - which will have the game update such as
13:07 - when the intermission is occurring or it
13:10 - will tell us how many seconds are left
13:12 - in the game okay then in the service
13:16 - script service this is the most
13:18 - important part so we've got a stun
13:20 - script which we won't be focusing on yet
13:22 - but that's for the crossbow when you
13:24 - fire it at the piggy then they will be
13:26 - stunned for a number of seconds they
13:28 - can't move so we don't even worry about
13:29 - that
13:30 - but the most important script which we
13:32 - will be working with today is the game
13:34 - logic script and this script is where
13:36 - we're going to control the actual game
13:39 - and the round itself we're going to
13:40 - script everything to do with the round
13:43 - you know
13:44 - teleporting everybody choosing who's the
13:46 - piggy choosing the map detecting when
13:49 - people have escaped detecting when
13:51 - somebody's been killed ending the round
13:53 - all of that good stuff and that's what
13:55 - we're going to be looking at today in
13:56 - this game logic script now what we will
14:00 - be using is a module scripts and we'll
14:02 - be explaining that more in just a little
14:04 - while but the game logic will basically
14:07 - do everything to do with the rounds
14:09 - because currently if we play this game
14:12 - it won't do anything if you just put
14:14 - this piggie kit into your game and you
14:17 - try and play it you will not be able to
14:18 - play the game okay there will be a lot
14:20 - of errors in the output and that is
14:22 - because we haven't scripted our things
14:24 - yet and also because the piggie kit is
14:26 - relying on certain scripts which we have
14:29 - which we haven't created yet basically
14:30 - so that's why you need to watch the
14:32 - video so that you can learn how to code
14:34 - this game okay so don't go anywhere
14:36 - keep watching because this is going to
14:38 - be awesome so what we're gonna do is
14:42 - we're gonna have a module script inside
14:44 - of this game logic script now we've
14:46 - already got one for the doors but we're
14:48 - also gonna have another one for all of
14:49 - the round stuff so for managing the
14:51 - round so I'm gonna look for a module
14:53 - script and I'm gonna name this module
14:56 - script round scripts around module sorry
15:09 - now a module
15:11 - contains code which can be executed from
15:13 - another script it's just an organized
15:15 - way of having all of your code stored in
15:17 - blocks called functions which we can
15:19 - then call from another script this way
15:22 - you don't have all of your code stored
15:24 - in one big script which makes it shorter
15:26 - and that way you can call different
15:28 - functions to run different blocks of
15:30 - code at different times for different
15:32 - things for example you could have a
15:34 - function to count down your intermission
15:36 - in a module script and that function
15:39 - could be five to ten lines long you
15:41 - would then call that function from your
15:43 - game logic script with only one line of
15:45 - code of course you could have all of the
15:47 - functions stored in your game logic
15:49 - scripts without any modules but this way
15:51 - is just more organized and better
15:53 - practice to use module scripts the
15:56 - module script code is actually running
15:58 - in your game logic script it's actually
16:00 - just stored in the module script but
16:02 - it's being retrieved and executed by the
16:04 - game logic scripts so think of it like
16:06 - an instruction manual for something the
16:08 - instructions are actually stored in the
16:10 - manual we have to get the manual to read
16:12 - them but it's actually us who are
16:14 - following and doing the instructions the
16:16 - instruction manual isn't carrying out
16:18 - the instructions for us what happens in
16:20 - the module script is all of the
16:23 - functions are added to a table called
16:25 - module and then we return that table or
16:28 - that module yeah that table back to the
16:31 - game logic scripts but how does it know
16:33 - where to return it back to well that's
16:35 - because we have to require the module so
16:37 - in our game logic script we're going to
16:39 - say local round equals require and then
16:46 - in brackets parentheses we're going to
16:48 - say script dot around module okay
16:52 - because the round module is inside of
16:55 - the script we just say script to get the
16:57 - current script dot round module okay so
17:02 - now that we've required it we are in
17:04 - control of the module so what happens is
17:07 - the module will return all of the
17:11 - functions which we haven't yet declared
17:13 - or written out all of the functions
17:15 - though will be inside this module table
17:17 - so we have access to run them from this
17:21 - game logic script so don't worry whew a
17:24 - little bit confused
17:25 - we'll still be going over this whilst we
17:27 - keep coding the game now for our
17:29 - intermission we want to show text on the
17:31 - screen to tell people when the next game
17:33 - will start so to do that we need to
17:35 - insert a status value I have done a
17:37 - video on how to make a status bar so if
17:39 - you don't understand this you can check
17:41 - it out by going to the video in the top
17:43 - right corner of the screen or also link
17:45 - it in the description what it requires
17:46 - is having a value stored in the
17:48 - replicated storage a string value and
17:51 - I'm gonna call this value status and
17:54 - that way we can update this value we can
17:56 - give it where we can give it a value
17:58 - from the game logic script and then our
18:01 - GU eyes can show the value of the status
18:05 - objects as a text label so it will
18:08 - appear on the screen wherever the value
18:09 - property of the status object is will
18:12 - appear on the screen and that's what
18:14 - we'll get into coding on the client
18:16 - later on but all we need to do to set a
18:18 - message is to change the value of this
18:20 - status object so in the round module
18:23 - we're going to create our first function
18:25 - so to do that it's very very easy we
18:28 - just need to say function module and
18:32 - then we give it a name so we have to say
18:34 - module first to tell it that it's part
18:36 - of this table that we want to send it
18:37 - back to our game logic script so
18:39 - function module and I'm just going to
18:41 - call it intermission with the castle I
18:43 - ok like this so for module 2
18:46 - intermission and then we're going to
18:48 - have a pair of parentheses and then
18:50 - we're gonna drop the line now inside of
18:52 - here all we need to do is we need to a
18:54 - countdown so we're going to use a for
18:56 - loop for that so for I equals and then
19:00 - we supply three numbers so the value we
19:02 - want to count down from so let's just
19:05 - say 30 for example and then the second
19:07 - number is the value that we want to stop
19:09 - at so when we get to zero and then the
19:12 - third value is the how much you will
19:15 - decrease by every second so minus one
19:17 - then I'm gonna say do and then drop a
19:21 - line and it will add this end for us and
19:23 - then we can do a weight weight one
19:26 - because we want to wait one second
19:28 - before it moves on wait one second 30
19:31 - times and then you've been waiting for
19:32 - 30 seconds then what we need to do is we
19:34 - need to update the value of this status
19:36 - so let's create a variable for that
19:38 - status because
19:38 - sure we'll be constantly using it so
19:41 - local status and that's going to be
19:43 - equal to game got replicated storage
19:45 - wait for child status okay because we've
19:49 - got the status value in the replicated
19:50 - storage and we're using wait for child
19:53 - just a wait until it has been added into
19:55 - the game in case it's added a little bit
19:56 - late and it's not there by the time that
19:59 - this this script is looking for it so
20:01 - we're just waiting until it's there then
20:04 - we can say status dot value equals and
20:08 - then we can do a string which is just
20:09 - some text in speech marks saying next
20:13 - round starts in and then space and then
20:17 - dot dot I dot dot and then in speech
20:20 - marks again seconds like this and the
20:23 - dot dot I is inserting the I value and
20:28 - the I value is going to be that
20:29 - countdown so it's going to be the number
20:31 - of seconds so it's going to count down
20:32 - from 30 down to zero it's going to
20:35 - decrease by one every second and then
20:38 - when we say dot dot we are basically
20:41 - combining this text with a variable and
20:44 - this variable is our I value so it's
20:47 - gonna tell us how many seconds until the
20:49 - next round stars and what if we wanted
20:52 - to have a custom length though that we
20:54 - so if we were to call at this
20:56 - intermission we would need to now do
20:57 - from what game logic script to say round
20:59 - dots intermission so the what that would
21:04 - do is it would start the intermission
21:05 - for us okay but what what we wanted to
21:07 - tell the round module how many seconds
21:11 - we want the intermission to last for
21:12 - from where we call it from here so if I
21:15 - wanted to say five seconds well what
21:18 - would need to do is we need to firstly
21:19 - put that number inside the brackets and
21:21 - then the round module we would just
21:23 - quite an argument so this is cut the car
21:26 - like a variable and it's just going to
21:27 - be the number of seconds that we've
21:29 - passed to it so we're going to call it
21:30 - length then we can change the thirty to
21:33 - be the length so because we have passed
21:36 - a number in these brackets is going to
21:39 - send that to the function when it starts
21:41 - and length is now going to be five so it
21:44 - will count down from five but instead of
21:46 - having to change in here we can just
21:47 - always have length so you could have
21:49 - different intermissions if you wanted to
21:51 - we want to do an intermission after
21:52 - you can do 115 seconds so it's just a
21:55 - quicker way of us being able to pass how
21:57 - long we want to wait for in here and
21:59 - that's an argument he wants to learn
22:01 - more about functions and arguments I
22:02 - have got a video on that which you can
22:04 - check out in the top right corner of the
22:06 - screen or in the description so that's
22:08 - our intermission done and if we were to
22:10 - go and check it out in game you would
22:12 - see that the replicated storage value
22:13 - would be counting down from 5 now let's
22:16 - make it a little bit longer I'm gonna
22:18 - make it 30 seconds I'm going to play the
22:19 - game I'm going to show you this
22:20 - happening in action so if you go into
22:23 - replicated storage into con status and
22:25 - you open up the properties it will say
22:28 - next round starts in 6 7 16 15 14 13 and
22:32 - it's counting down every single second
22:33 - from that 25 which is awesome so we know
22:36 - that's working and that's good and can
22:38 - also see that it's now appearing
22:40 - magically in our GUI how is it done that
22:43 - well speakers in the piggy kit
22:45 - I went over adding this status bar and
22:48 - the client scripting he went into client
22:50 - main you would see that we've got a
22:53 - change to forget property change signal
22:56 - on the status so replicate his storage
22:58 - wait for child status when the value
23:01 - changes just change the top statuses
23:03 - text to the statuses value which I also
23:06 - went over in the status bar video which
23:08 - I mentioned a couple of minutes ago the
23:11 - next thing we want to do is in insert
23:13 - the map don't we want to choose a random
23:15 - map from the chapters folder and insert
23:18 - it into the game so let's head back to
23:19 - our round and module script and we're
23:22 - going to create another function and
23:23 - this function is going to select a
23:25 - random map now I've gone ahead and
23:27 - already created our second function
23:29 - module dot select chapter as I'm sure
23:32 - you'll be able to know how to make
23:33 - functions now and inside of here we're
23:36 - gonna firstly create a random seed and
23:38 - that's going to help us generate a
23:39 - random map so we're gonna say local R
23:41 - and just a variable and it's gonna
23:43 - create our new seed random dot new and
23:46 - that is kind of like when you put a seed
23:49 - for map generation so for example in
23:52 - Minecraft you generated a new seed kind
23:54 - of like that it's just generating a
23:56 - bunch of random numbers for us next I'm
23:58 - going to create a variable for all of
24:00 - our chapters so we can say game dot
24:02 - replicated storage dot chapters that
24:06 - chapters folder colon get children and
24:09 - when we say get children it's going to
24:10 - give us a table of all of the chapters
24:14 - or all of the objects inside that folder
24:16 - so it's gonna give us a table of all the
24:19 - map models basically and then we need to
24:22 - pick a random chapter out of that table
24:25 - a random map object out of that table if
24:28 - you do want to learn more about tables
24:30 - and how they work I've got a video on
24:33 - tables or leave it in the description
24:34 - down below and in the card as well so
24:38 - now to pick a random
24:40 - chapter we can just say it we can create
24:42 - a variable for the one that's gonna be
24:43 - chosen local chosen
24:45 - chapter equals chapters because that's a
24:48 - folder and then a pair of square
24:50 - brackets tells us that we want to pick
24:52 - one of them out so we pick it out by
24:54 - giving it a number because they will
24:55 - have an index every map between 1 and
24:58 - how ever many they're asked with first
25:00 - 10 they're all gonna be numbered 1 to 10
25:01 - and if you choose a random number
25:02 - such as 6 it's gonna pick the sixth one
25:04 - out so to do that we just need to then
25:06 - select a number between 1 and however
25:08 - many there are so we say round because
25:10 - that's our random seed colon next
25:12 - integer and that will select a random
25:15 - number
25:16 - so integer int eg er and then inside of
25:20 - there we give our first number there's
25:22 - going to be between it's gonna be
25:23 - between 1 and then comma and hash tag
25:25 - chapters when you say hash tag and the
25:27 - table name it will basically give you
25:30 - the number of items in that table so if
25:32 - there's 5 hash tag chapters will be 5 so
25:34 - it's gonna pick a random number between
25:35 - 1 and 5 and pick that chosen chapter out
25:37 - then we need to send that chapter map
25:41 - object back to our game logic script so
25:44 - we can say return chosen chapter and
25:47 - that will send that back to a game logic
25:49 - script so if we then said round dot
25:54 - select chapter and put our to bracket
25:57 - our pair brackets after that's what
25:59 - would need to do is we need to set it as
26:01 - a variable so local chosen chapter
26:04 - equals round dot select chapter and when
26:07 - that returns the chosen map back chosen
26:09 - chapter will then be equal to it will be
26:12 - the the map objects itself so we can
26:15 - manipulate it so this map here that
26:17 - we've
26:17 - chosen is actually the one that stealing
26:19 - replicated storage we don't want to move
26:21 - it out we just want to create a clone of
26:22 - it okay so we're gonna say look we're
26:25 - gonna we're gonna create a clone of it
26:27 - we're gonna say local cloned chapter
26:29 - equals chosen chapter we're going to
26:32 - take that chosen the map and I'm going
26:33 - to make a clone of it by saying : clone
26:35 - okay with a capital C then we're gonna
26:38 - say clone chapter we need to we're gonna
26:41 - change its name because they cloned
26:43 - chapter dot name equals map the reason
26:45 - for this is because they've all got
26:47 - different names we could have chapter
26:48 - one chapter two chapter three but we
26:50 - want to insert it into the workspace and
26:52 - we want to call it in map and when we do
26:54 - that then from other scripts which may
26:57 - not know the name with a map that was
26:58 - chosen we can just identify the map by
27:01 - calling it map and there from other
27:02 - scripts if you want to get the map we
27:04 - can say game dat workspace dot map and
27:06 - the reason we've cloned is because we
27:08 - don't want to change the maps in
27:10 - replicated storage because they're gonna
27:12 - get chosen the next round we don't want
27:14 - to mess them up so we're gonna say
27:15 - cloned chapter dot parent equals game
27:18 - dot workspace we're just gonna put it in
27:20 - the workspace when it's in the workspace
27:22 - we can see it and we can we can teleport
27:25 - everybody into the map and if you go and
27:28 - test the game when the intermission gets
27:31 - to zero if we head into server mode by
27:33 - clicking on current client and changing
27:35 - it to server and you move around you
27:37 - should you should see that the map has
27:39 - now been inserted into the game which it
27:41 - has so that's good now we know that that
27:43 - worked perfectly next we're going to
27:45 - choose a random player to become the
27:47 - piggy so we're gonna create a table
27:49 - called a local contestants and it's
27:52 - going to be equal to a blank table like
27:54 - this then we're gonna loop through all
27:56 - of the players in the game and we're
27:58 - going to insert those who aren't in the
27:59 - menu into this table called contestants
28:03 - now how do we know if the players in the
28:05 - menu or not
28:06 - well when they first spawn into the game
28:08 - we're going to insert a value into their
28:11 - player then give it like a tag so that's
28:13 - we can loop through all of the players
28:15 - in the game and if they do have that tag
28:17 - then we'll know that they're in the menu
28:18 - but when they click the menu play button
28:20 - we can remove that tag okay so we
28:22 - basically have a way of telling if
28:24 - they're in the menu or not and that way
28:25 - we will have the players that are not
28:27 - afk in the round so that nobody is afk
28:30 - and delaying around so to do that we're
28:33 - gonna have to insert a neuro script into
28:35 - the game now I'm gonna click on cell
28:36 - script service I'm gonna insert a script
28:38 - this script however I'm gonna rename it
28:40 - I'm gonna call it event handling it's
28:45 - gonna handle all of our remote events in
28:46 - the future as well as the events when a
28:48 - player first joins the game so inside of
28:50 - here it's very very easy we're gonna say
28:52 - we're gonna do an event for when the
28:54 - player first joins the game so inside of
28:57 - the script very very simple we've got a
28:59 - player added event and this event is
29:01 - going to run when a player first joins
29:03 - the game and the player argument here is
29:05 - going to be the player that just join so
29:07 - whatever we do to player will be done to
29:08 - the player that joins and so what we'll
29:10 - do is going to insert using instance
29:12 - don't need a ball value it doesn't
29:14 - matter really about what type of value
29:16 - it is it's just a tag but this ball
29:18 - value we're gonna give it a name call it
29:19 - in menu I'm gonna put it inside the
29:21 - player so when we join the game if you
29:25 - look inside players
29:27 - Alvin blocks or your player you'll see
29:29 - that you've got this in menu and when we
29:31 - press play what we're gonna do is we're
29:34 - in to create a remote event that will
29:35 - destroy this value as I said we'll know
29:39 - that you are ready to play when that
29:41 - values been destroyed because if you
29:42 - haven't got the in menu value stored in
29:44 - your player will know that you're not in
29:46 - the menu and will know that you're ready
29:47 - to play now because you're only out of
29:49 - the menu when you press play on the GUI
29:52 - the GUI is actually stored on the client
29:54 - on your computer and when we want to
29:56 - change something when you do something
29:58 - on the clients you just click a button
30:00 - we have these remote events so that we
30:02 - can trigger the remote event from the
30:03 - GUI on the client and then we can pick
30:05 - it up on the server because all of our
30:07 - code such as the event handling is
30:09 - stored on the server which is owned by
30:10 - roblox and we communicate over the
30:12 - internet because the client and GUI is
30:15 - stored on your computer and the server
30:16 - can't tell when you've clicked a button
30:18 - which is why we have to use remote
30:20 - events to tell the server code when
30:22 - we've done something so in this case we
30:23 - are gonna do our most events and fire it
30:25 - when you click on the play button so
30:27 - they work on the server we can pick it
30:28 - up and remove that in menu value from
30:32 - your player so again very simple just
30:34 - click on the replicate the storage and
30:36 - click on the plus and inserts a remote
30:38 - event this remote events I'm gonna
30:40 - rename it and I'm gonna call it menu
30:42 - play because it's going to be fired when
30:44 - you
30:44 - press play on the menu then inside the
30:46 - event handling script we're going to
30:48 - create another event which will pick
30:49 - this up and then code we'll be able to
30:53 - ruin it on the server when this remote
30:54 - event is triggered so game replicated
30:57 - storage
30:57 - dots menu play dots on server events
31:01 - because when it's event that's been
31:02 - fired to the server from the client :
31:04 - connects a function and we've got an end
31:08 - with a bracket added here now we need to
31:11 - know on the server which player has
31:13 - fired this event which player has click
31:15 - the menu so we have an argument which is
31:17 - automatically sent over called player ok
31:20 - and you will see inside of the client
31:22 - main local script which came in the menu
31:24 - the main GUI which was in the piggy kit
31:27 - you will see that when you press the
31:29 - intro play button we've got this event
31:32 - here which fires when you click the play
31:33 - button it will actually fire that remote
31:36 - event so we've already done that so it's
31:38 - been fired and we're now handling it on
31:40 - the server ok so what we're going to do
31:42 - is firstly just gonna check if the
31:44 - player has that's in menu value inside
31:48 - of them so if player call on find first
31:50 - child in menu and when we say find first
31:53 - child is because in case it's not there
31:55 - if you were to just say if player door
31:57 - in menu then it would cause an error if
31:59 - it wasn't there so find first child will
32:01 - look for the thing that you want to find
32:04 - so in this case the in menu but if it's
32:06 - not there it won't throw an error so
32:07 - it's just a better way of looking for
32:10 - things so they have got the menu value
32:12 - in them then we know that they do have
32:14 - it so we can say player dot in menu :
32:16 - destroy it's gonna remove it so when we
32:18 - then check in the round module for all
32:21 - players without the in menu tag and we
32:24 - can add them to that table so what we've
32:25 - done now if we play the game again is
32:27 - we've just created a value that gets put
32:29 - into players when they first join when
32:30 - they're in the menu but then when they
32:32 - click on the menu play button let's look
32:34 - in our player here we go we have the in
32:35 - menu but at airport value but already
32:37 - press the play button look closely it's
32:40 - gone it gets deleted because we fired
32:41 - that remote event and then the server
32:43 - has deleted it for us
32:44 - so we can now be counted as an active
32:46 - player who is an afk because we've
32:48 - clicked the play button
32:49 - so what we can now do is go back to the
32:53 - game logic script and what I'm going to
32:55 - do is when it loop through every single
32:57 - player in the game
32:59 - so what we're gonna say is a full loop
33:01 - so if you haven't seen four loops before
33:04 - it basically allows us to loop through a
33:06 - table in this case we're looping through
33:08 - every single player in the game and for
33:10 - every single player the player is
33:12 - represented as B and it's gonna loop
33:14 - through every player in the game so if
33:16 - the player does not have that's in menu
33:19 - in them because we thought the not here
33:21 - which inverts it so if the player does
33:24 - not have in menu in their character or
33:26 - in their player object then we're going
33:28 - to insert that player their player
33:30 - object into the contestants table and
33:33 - now after that for loop is finished
33:36 - running our contestants table should be
33:38 - full up of all of the players that are
33:40 - ready to play so it could look something
33:43 - like this so we've got three players
33:45 - player objects not names because actual
33:47 - objects in game door player so Alvin
33:49 - blocks
33:50 - sure let's key and knock or 88 there are
33:53 - three players for example that are in
33:54 - the game so that's the end of the first
33:56 - video now you can go straight to the
33:58 - next one by clicking the thumbnail in
34:00 - the middle of your screen and that's
34:02 - recommended so you can just carry on
34:03 - where you left off and we will be
34:05 - creating that function where we choose
34:08 - the piggy and then we'll be creating the
34:09 - rest of the game loop so I'll see you in
34:12 - the second part just jump straight into
34:13 - it by clicking the thumbnail