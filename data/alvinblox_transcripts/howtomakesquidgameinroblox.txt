00:00 - today i'm going to show you how to make
00:02 - a game like squid game on roblox if you
00:05 - didn't know squid game it's an insanely
00:08 - popular netflix show at the minute and
00:10 - loads of similar games are appearing on
00:12 - roblox so we're going to be making the
00:14 - red light green light game in this
00:17 - episode
00:18 - now if you want to get the finished
00:20 - project with all included scripts
00:22 - instead of having to write out the code
00:24 - and watch the entire tutorial you can
00:27 - get them by becoming a premium member of
00:29 - my channel so you all you need to do is
00:31 - click the join button below the video if
00:34 - you're on mobile there'll be a link in
00:35 - the description
00:37 - now i'm also going to be giving you the
00:39 - map and the characters as a kit now i
00:43 - decided to instead of use the original
00:46 - squid game doll i've decided to use
00:49 - something a bit better than that but in
00:51 - my opinion anyway i'm using
00:54 - a bacon hair but if you want to use your
00:57 - own squid game doll don't worry in the
01:00 - roblox toolbox there are plenty here for
01:02 - you to choose from all you need to do is
01:04 - configure them just as i'll show you in
01:07 - the tutorial right let's get into it
01:10 - right then if you've never made a roblox
01:12 - game before we're going to be using
01:14 - roblox studio this is what all roblox
01:16 - players use to create games now if you
01:19 - haven't got it don't worry i'm going to
01:20 - leave a link to the description you
01:22 - should be able to go to roblox.com
01:24 - forward slash create be able to click a
01:26 - download button from there just install
01:28 - it into computer once you load it up
01:30 - it'll ask you to log into your roblox
01:32 - account go ahead and do that and you
01:34 - should see this screen now we're gonna
01:36 - go ahead and click
01:38 - faceplate once you've done that you
01:41 - should see a base plate like this
01:43 - now what we need to do is we need to go
01:45 - ahead and get that kit so go to the link
01:47 - in the description where it says the
01:49 - squid game kit and then go and click get
01:53 - okay so you should see this
01:54 - click on get
01:56 - and get now and now this is in our
01:58 - inventory so let's go back to roblox
02:00 - studio
02:03 - okay now back in roblox studio let's
02:05 - click on the home tab and select toolbox
02:08 - now if we click on these four squares
02:10 - and then select my models you'll see the
02:13 - alvin blocks squid game kit so go ahead
02:16 - and click on that and it will insert it
02:18 - into the game now let's close the
02:20 - toolbox
02:21 - okay what i'm going to do is i'm going
02:23 - to select the squid game kit in the
02:25 - explorer i'm just going to move my
02:27 - camera up to find it alternatively you
02:30 - can just press f on the keyboard
02:32 - so now we've got our kit what we need to
02:34 - do is we need to put everything that's
02:36 - in the kit in the right location so i'm
02:39 - going to right click on the squid game
02:41 - kit and i'm going to click on ungroup
02:44 - okay now we've got four different
02:46 - objects which have appeared we've got a
02:48 - thumbnail camera and this is just
02:51 - nothing to do with the game so we're
02:52 - going to delete that so right click
02:54 - delete
02:55 - the next thing is saying ungroup in the
02:58 - workspace so it's already in the
03:00 - workspace so we're just going to right
03:02 - click on it and select ungroup this is
03:04 - our map
03:06 - then i'm going to take the second model
03:08 - which says ungroup in server script
03:09 - service drag it into the serverscript
03:11 - service right click and ungroup
03:14 - this is our ragdoll script so that when
03:17 - a player dies they'll just fall flat
03:18 - into the ground
03:20 - and next we're going to drag the third
03:22 - one into the starter gui then right
03:25 - click and ungroup now you'll see two
03:29 - guys one is for our squid game to say
03:32 - red light or green light and this one is
03:35 - just a warning for anybody who is using
03:37 - the kit but isn't watching the video so
03:39 - you can just select the warning gui make
03:41 - sure you select warning and not the
03:43 - client select this one here right click
03:45 - and delete all right we're ready to
03:47 - start coding
03:50 - okay so i'm going to show you how to set
03:52 - up a custom character now we've got a
03:54 - doll here but i said i was going to be
03:56 - using my bacon hair and if you're using
03:58 - the kit you will see a bacon hair not
04:01 - this doll so if you want to get your own
04:03 - doll go to the toolbox click on this
04:05 - little shopping basket and select and
04:07 - type in squid game doll okay and then
04:10 - you can take one for your own okay i
04:13 - think this one should be perfect
04:15 - and what you want is you want to have a
04:18 - model called doll and you want to have
04:20 - it with a body and a head okay you just
04:23 - want to have a body part and a head part
04:25 - you can have multiple parts just make
04:26 - sure you've got a head part in here and
04:28 - one called body and then put it in a
04:30 - model and make sure it is called doll so
04:33 - i'm going to remove the doll because i'm
04:35 - going to be using my own
04:37 - bacon hair because i want mine to be
04:38 - more original still with that squid game
04:40 - theme to it and what i'm going to do is
04:43 - i'm going to search for a bacon hair
04:46 - okay bacon hair there we go i'm going to
04:48 - insert into the game
04:50 - now i'm going to name this model doll
04:54 - okay
04:55 - and i'm gonna then inside the model what
04:57 - i'm gonna do is i'm just going to get
04:58 - rid of any of these scripts because we
05:00 - don't need these scripts and i'm just
05:02 - going to do a quick check to make sure
05:03 - there's no viruses in this model it
05:05 - looks good to me there's no scripts or
05:07 - anything we don't need to have scripts
05:09 - in this
05:11 - npc so delete any scripts and then i'm
05:13 - going to click on the humanoid and i'm
05:15 - going to select display distance type in
05:17 - the properties tab if you don't see
05:19 - these two windows by the way click on
05:20 - view and click on explorer and
05:22 - properties i'm going to select the
05:24 - humanoid display distance type and set
05:27 - it to none that removes the name above
05:29 - the head
05:30 - then i'm going to take the
05:32 - uh
05:33 - where is it where is it we're going to
05:34 - go
05:35 - to
05:37 - the head nope we're gonna go to the
05:39 - humanoid sorry and we're going to insert
05:42 - actually we can scrap that we can just
05:44 - take our doll and we can resize it like
05:46 - this and hold down shift and it will
05:48 - just resize okay
05:50 - so now we've got a large bacon hair
05:53 - character i'm going to move it over here
05:56 - and i'm going to rotate it like this
05:58 - okay
05:59 - cool so we've got our bacon hair
06:01 - and what i'm going to do is i'm just
06:03 - going to make sure we've got the head
06:04 - and that is the main part we just need a
06:06 - head so that we can turn it around
06:09 - so now that we've got our doll what i'm
06:11 - going to do is i'm going to
06:14 - set up our script
06:16 - but i'm going to take this doll i'm
06:17 - going to put it in the map okay so
06:19 - inside of our map we should now have a
06:20 - doll and inside that doll we should have
06:22 - a head part
06:24 - i'm going to select all of these body
06:26 - parts here
06:27 - and i'm going to set the anchor property
06:29 - to be true this is just so that the
06:31 - bacon hair doesn't fall apart when we
06:33 - play the game
06:34 - so if we play it you can see our bacon
06:36 - hair here uh the head the hair has
06:39 - fallen in let's try and work that one
06:41 - out okay i'm just going to move i'm
06:43 - going to the power hair i'm going to
06:45 - select the handle and i'm going to make
06:46 - sure that is anchored as well okay so
06:49 - let's try it once more click on run
06:51 - and now our bacon hair is perfect
06:55 - right let's get coding then what i'm
06:57 - going to do is i'm going to close the
06:59 - map for now i'm going to insert a script
07:02 - into the server script service i'm going
07:04 - to call this script
07:06 - server okay but you call it whatever you
07:08 - want this is just a server script that's
07:09 - going to handle everything to do with
07:11 - the game
07:12 - so firstly let's define a couple of
07:15 - services that we're going to need we're
07:16 - going to need to get the tween service
07:19 - so we're going to say local tween
07:20 - service equals game code on get service
07:24 - tween service
07:26 - like this okay
07:27 - and what this will do is it will allow
07:29 - us to move parts such as the player's
07:32 - head the the doll's head
07:34 - next we're going to get the players
07:35 - service so this has some handy functions
07:38 - which we can use to get players in the
07:39 - game we'll need this for when we are
07:42 - getting our contestants when the game
07:43 - starts so local players equals game code
07:47 - on get service
07:48 - players
07:49 - like this
07:50 - and don't forget you can pause the video
07:52 - at any time to copy out the code if i'm
07:56 - going a little bit too fast okay you can
07:59 - also turn the speed down as well so next
08:01 - i'm going to get the map and we're
08:03 - storing these things as variables so we
08:05 - can quickly access them later on so
08:08 - localmap
08:10 - dot equalsgame.workspace.map then we're
08:12 - gonna get our doll local doll equals map
08:16 - dot dot
08:17 - and then we're going to
08:19 - get
08:20 - our
08:21 - uh ui for the timer you can see in the
08:23 - map here that we have a timer and if we
08:26 - go into the map
08:27 - and we go to our timer part here it's
08:30 - got a surface gui that lets us put text
08:33 - on a brick and inside of it it's got a
08:35 - time label and you can actually change
08:37 - that to have any text you like so i'm
08:40 - just going to keep it at three minutes
08:41 - for now but um we will code this in our
08:44 - server script so let's say local
08:47 - timer ui equals and since it's inside
08:51 - the map we can say
08:52 - dot timer dot ui
08:55 - okay next let's create a variable to
08:57 - store
08:58 - uh the amount of seconds that our game
09:01 - round will be so i'm gonna say local
09:03 - round underscore duration underscore
09:07 - seconds okay this is just the way that
09:10 - we write our variables it's like the
09:12 - common practice of writing a variable uh
09:14 - you don't have to have underscores it's
09:16 - up to you but i just prefer to so i'm
09:18 - going to set this to 60 seconds so this
09:21 - is going to be one minute
09:23 - and by the way these two hyphens
09:25 - indicate a comment so it's like you can
09:27 - add your own notes so you don't forget
09:28 - things so i'm just noting down that's
09:30 - one minute and you can change this to
09:32 - however many seconds you like it's just
09:34 - going to increase the length of the
09:36 - round
09:37 - next we're going to create
09:39 - a
09:41 - tween and this tween is going to spin
09:43 - the head so what we can do is we can say
09:46 - local spin tween info
09:49 - and this is just setting up the
09:50 - information for the tween so we're
09:52 - telling it how long is it going to take
09:54 - to spin the head is there going to be a
09:56 - specific
09:57 - animation style like an easing style so
10:00 - we're going to say tween info
10:03 - don't new
10:04 - and you can see we've got the time on
10:06 - the screen first so we put the time in
10:07 - seconds so one second the easing style
10:10 - so that's like the
10:12 - the the kind of animation so will it be
10:15 - bouncy will it be a linear style uh
10:18 - you'll see later on if you change them
10:21 - you swap out the easing styles you'll
10:22 - see how the head turn might be a little
10:25 - bit different so we're just going to say
10:26 - enum dot easing style
10:29 - dot linear then we're going to do a
10:32 - comma and we're going to say enum dot
10:34 - easing direction dot in out
10:38 - again this is just
10:39 - telling the script the style of the
10:41 - animation
10:42 - and then what we're going to do is we're
10:45 - just going to add a closing bracket here
10:47 - okay so now that we've done that
10:50 - what we need to do is we also need to
10:52 - um we need to create two tweens using
10:55 - this information so one for when it uh
10:58 - it goes
11:00 - so the head goes to face the character
11:02 - so it turns like this
11:04 - and then when it turns back like this
11:07 - okay all right you get it so we're gonna
11:09 - need two tweens one for when there's a
11:10 - red light so when it's red it's gonna go
11:12 - this way when it's green it's going to
11:14 - go back to facing the wall so let's set
11:16 - up our green light between so we can say
11:19 - local
11:20 - green
11:21 - light head
11:22 - equals tween service colon create
11:25 - and in here we firstly need to say the
11:28 - object that's going to be tweened so the
11:30 - object is going to be animated and
11:31 - that's going to be the doll's head so
11:33 - this is why it's important to have a
11:35 - part in your doll called head now i'm
11:39 - going to leave the two dolls in there
11:41 - the bacon hair or the
11:43 - uh squid game one so you can choose but
11:45 - just make sure it's called doll and it
11:46 - has a part in there that is anchored
11:49 - called head so we're gonna say doll
11:51 - dot head whoops like this then we're
11:54 - going to do a comma and we're going to
11:56 - pass our spin tween info to this
12:00 - function so it's just telling us how the
12:02 - tween is going to
12:04 - what it's going to be like how it's
12:05 - going to be animated and then finally we
12:08 - need to tell the script
12:10 - what things we want to change during the
12:12 - animation so we want to rotate the head
12:14 - so i'm going to put a table here which
12:16 - is a pair of squiggly brackets
12:19 - and then inside of here we're just going
12:21 - to say that we want the c frame
12:24 - we want to change the c frame so that is
12:26 - the position
12:27 - and the orientation of the head and we
12:30 - need to set this to a new c frame so
12:33 - let's create
12:34 - two variables
12:36 - uh in fact let's create one variable
12:38 - because we only need one for the
12:39 - original head position so the original
12:42 - head c frame
12:44 - is going to be the doll dot head dot c
12:47 - frame so the current position and
12:48 - rotation
12:49 - of the head which is facing the wall so
12:52 - we can say c frame equals our original
12:55 - head c frame like that and that is our
12:57 - tween created
12:59 - now let's do the same thing but for the
13:01 - red light between so we can take this
13:04 - code here
13:05 - these three lines we're going to copy
13:06 - and paste them control c control v or
13:09 - command c command v if you're on a mac
13:11 - and we're going to say red light head
13:14 - equals tween service colon create we're
13:16 - going to keep these two things the same
13:18 - but we're going to change our c frame we
13:20 - want the c frame to be rotated the other
13:23 - way we need to rotate it
13:25 - by 180 degrees so to do this we can take
13:28 - the original head c frame and then
13:30 - multiply it by c frame dot angles okay
13:34 - and then we're gonna put in three zeros
13:37 - zero comma zero comma zero but we're
13:39 - gonna change the middle zero
13:42 - from zero to math dot rad and then in
13:45 - brackets we're gonna put 180 so what
13:48 - this is doing is it's rotating it by 180
13:51 - degrees but we don't give the rotations
13:54 - in degrees here we have to give them in
13:56 - radians which is a different type of
13:59 - of angle of measuring angles so we
14:02 - convert it from degrees into radians by
14:04 - saying math.rad and putting 180 degrees
14:07 - in here so this is going to do a 180
14:10 - degrees rotation okay
14:13 - so now that we've created our two tweens
14:16 - we'll be able to move the head
14:18 - of the doll
14:21 - okay now let's make the function for the
14:24 - round
14:25 - um logic which is going to repeat over
14:28 - and over again so we're going to create
14:30 - a function
14:32 - and let's call it start game okay
14:36 - and then let's just create a while loop
14:39 - at the bottom here this is going to be
14:40 - our main game loop so a while loop just
14:43 - runs forever that's what lets you have a
14:45 - round system because it's just going to
14:46 - keep on going over and over and over
14:48 - until the server shuts down until no
14:50 - one's in the game anymore so we can say
14:52 - while true do now this is really
14:55 - important we need to add a weight in
14:58 - here to make sure that this doesn't run
15:01 - it doesn't run basically without a delay
15:03 - otherwise it will crash our computer so
15:06 - we're going to say task dot weight and
15:09 - inside these brackets we're going to put
15:10 - 10 so there's going to be a 10 second
15:13 - interval in between each round and then
15:16 - we can just say start game after those
15:19 - 10 seconds and that's going to call this
15:21 - function and then inside that function
15:23 - we can put all of our code to run the
15:25 - game
15:26 - you know to um to set up all of the
15:29 - players and put them into the round to
15:31 - um
15:32 - to make the tween for the head play so
15:35 - we can have our green light red light
15:37 - changing we're going to do that in this
15:40 - function here
15:42 - right then so what we're going to do
15:44 - first is we are going to create some
15:46 - variables for the game so we're going to
15:49 - need to get all of the players that are
15:50 - going to compete in this round to do
15:52 - this we can say local players in round
15:56 - equals players colon get players this
15:59 - will return a table of all of the
16:01 - players currently in the game okay
16:05 - we're also going to create a table to
16:07 - hold the winners so these are the ones
16:09 - that will get to the end of the course
16:11 - over here get to the safe zone pretty
16:13 - much and when they do get to that safe
16:15 - zone
16:16 - they're going to touch a part an
16:18 - invisible part that's here called the
16:20 - end barrier so we will put them into
16:22 - this table when they touch that
16:24 - then we're going to have a spin delay so
16:28 - this is going to be
16:30 - the delay in between the head moving so
16:33 - the time that you get to move before the
16:35 - next red light and we will make this
16:37 - decrease over time so maybe the first
16:39 - time you'll have five seconds the second
16:41 - time enough four three two one etcetera
16:44 - so it's always decreasing so you never
16:46 - know when the head is going to turn next
16:49 - and then we will just create a variable
16:52 - for the last spin and we're going to set
16:55 - this to tick okay you might be wondering
16:58 - what is this but tick is just a number
17:00 - of seconds since january the 1st 1970.
17:04 - so you can compare those ticks so if i
17:08 - took a tick now and took a tick in 10
17:11 - seconds the second tick
17:13 - would be 10 more than the first so you
17:15 - can subtract them to work out the amount
17:17 - of time since the last head spin so we
17:20 - can work out how long it's been since
17:22 - the head last turned
17:24 - and then finally
17:26 - what we're going to do is we're going to
17:28 - dress all of the players
17:30 - so to do this we're going to say
17:32 - 4
17:34 - underscore comma player in pairs i'm
17:37 - going to say players in round so we're
17:39 - looping through all the players in the
17:41 - game that are playing
17:42 - we're going to respawn them so we're
17:44 - going to say player colon load character
17:47 - like that
17:48 - and then we need to actually put the
17:50 - characters suit on them so how do we do
17:53 - this well let's create a function
17:56 - above this called
17:58 - dress
17:58 - character in suit
18:01 - and we're going to have a parameter
18:03 - and the parameter is going to be the
18:05 - player's character
18:07 - and we will pass this to the function so
18:09 - let's just call dress character in suits
18:13 - and we can pass
18:14 - player.character up here
18:17 - so what we're going to do
18:19 - is we're going to get rid of their
18:20 - existing clothes
18:21 - so we can say for underscore
18:25 - comma
18:26 - and let's say object in pairs
18:29 - character colon get to children
18:32 - and have a closing bracket here do
18:35 - we're going to say if object colon is a
18:39 - shirt
18:40 - okay or object is a
18:44 - pants
18:45 - or object is a
18:48 - shirt graphic
18:50 - then
18:51 - we're going to say object colon destroy
18:54 - so any of these objects we want to
18:56 - remove from the character
18:58 - and then we're going to add their
18:59 - tracksuit so to do this we can say local
19:03 - shirt
19:04 - equals incense dot new shirt
19:07 - we'll say shirt dot shirt template
19:10 - equals
19:12 - and then we're going to put a string
19:14 - using quote marks or speech marks and
19:18 - i'm going to paste in
19:20 - the asset id for these
19:23 - shirts i'll leave it in the description
19:24 - for you and we're gonna say shirt dot
19:26 - parent equals
19:28 - character
19:29 - and then we're gonna do the same thing
19:31 - we're gonna copy these three lines with
19:32 - ctrl c or command c and then press ctrl
19:35 - v or command v
19:37 - and we're going to change shirt to pants
19:39 - so anywhere where we see shirts we're
19:42 - going to put pants so we're just going
19:43 - to replace it here and here and where it
19:46 - says shirt template we'll put pants
19:48 - template then we're going to replace
19:50 - this asset id again
19:52 - with the pants so we're going to just go
19:55 - here we're going to right click or just
19:57 - press ctrl v like that okay
20:01 - so
20:01 - like i said
20:02 - shirt and pants will be in the
20:05 - description okay so now that we've put
20:08 - the pants and the shirt on the character
20:11 - let's go ahead and test that it works
20:14 - now i'm going to just change this
20:16 - task.weight to five seconds so we don't
20:19 - have to wait as long
20:20 - and now let's click on play in the
20:24 - scripts menu tab click on play
20:27 - and let's see let's see how this is
20:29 - going to work
20:31 - so we're going to wait the five seconds
20:33 - and there we go our shirt and pants were
20:36 - placed on our character now if it's not
20:38 - working for you click on view click on
20:41 - output and it should log any error
20:43 - messages there which should indicate
20:45 - that you've probably made a typo or done
20:47 - something wrong
20:48 - okay let's move on so the next thing
20:52 - that we're going to do here is we're
20:54 - going to set up the invisible barrier
20:56 - here for when you get to the end
20:58 - so i'm going to create a variable
21:02 - because we have to
21:03 - set up a connection and a connection is
21:06 - a link to a event
21:10 - an event is something that
21:12 - is checking for an action so in this
21:14 - case we want to check when something
21:16 - touches that end barrier and we only
21:19 - want to check it for a limited amount of
21:20 - time whilst the game is running so we're
21:22 - going to store that events connection as
21:24 - a variable so once we're finished we can
21:26 - disconnect it and that will reduce lag
21:29 - so let's create a variable called end
21:31 - touch
21:32 - i'm going to put this variable up here
21:34 - with my other ones just so that we can
21:35 - be consistent here
21:37 - and then i'm going to say end touch
21:39 - equals
21:41 - map dot end barrier so make sure if
21:44 - you're making your own map you've got a
21:45 - part called end barrier and it covers
21:47 - the entire span of the map towards the
21:50 - end of that so map.end barrier dot
21:53 - touched colon connect
21:55 - and if you're using my kit don't worry
21:57 - we've got these parts already created
21:59 - connect function and then a pair of
22:01 - brackets after that and then drop a line
22:04 - and you should get this end with a
22:05 - closing bracket here
22:06 - now what i'm going to do is i'm going to
22:08 - put a argument here for the object that
22:11 - touched the barrier so i'm going to call
22:13 - it toucher okay so this is the object
22:15 - that will touch the barrier
22:17 - so what we want to do is we want to make
22:19 - sure
22:20 - that the toucher is actually there that
22:22 - something actually did touch the brick
22:23 - and it's not been deleted and it's
22:25 - actually got a parent so let's say if
22:27 - not toucher
22:29 - or not toucher dot parent
22:32 - then return
22:34 - end okay
22:35 - and then outside of that if statement we
22:38 - now know that anything that's touching
22:39 - it is live and in the game
22:41 - so let's get the character
22:45 - of the thing that touched it okay so we
22:47 - can say local touch character or let's
22:50 - say touch car equals toucher dot parent
22:54 - because if it's a body part of a player
22:55 - then it's going to be inside their
22:57 - character because all body parts are
22:58 - stored inside a character model so we
23:00 - can say touch dot parent to get their
23:02 - character
23:04 - so now
23:05 - we can say we can get that player so we
23:07 - can say local touch player equals
23:10 - players colon get player from character
23:14 - this will get their actual player object
23:15 - from their character so we can put
23:19 - touch
23:20 - car inside of here and if it is a player
23:23 - which we've just verified using this
23:24 - function
23:26 - it will return a true or false value
23:28 - true if it is a player so we can say if
23:31 - touch player
23:33 - then
23:35 - we want to put the player into the
23:36 - winner's table because they're finished
23:38 - the course so we will say table dot
23:41 - insert we want to put them in the
23:43 - winners table so we'll write that first
23:44 - that's our list
23:46 - then comma
23:48 - and then we want to put touch player
23:50 - in there
23:54 - okay so now that we've put them into the
23:56 - winners table we want to take them out
23:58 - of the players in round because they
24:00 - finished the round
24:02 - so let's try and find them in that table
24:05 - so we'll say local player index equals
24:08 - table dot find and inside of here we can
24:11 - put players in round
24:13 - sorry let's do players in round this
24:16 - will look up the player in that table so
24:18 - we're going to put touch player so if it
24:20 - can find it then we can say if player
24:23 - index
24:24 - then
24:25 - table dot remove
24:27 - and we can remove them from the players
24:29 - in round table
24:30 - we want to remove the player index
24:33 - because the player index is their
24:34 - position in the table so if it does find
24:36 - my player on the table let's say perhaps
24:38 - it's the third object in the table we're
24:40 - saying okay let's remove the third index
24:43 - from players in round and that will
24:44 - remove me from the table
24:47 - and then what we need to do is i'm just
24:50 - going to remove this white space here
24:52 - because we're now finished
24:54 - with the touch barrier that will make us
24:57 - a winner
24:58 - you could do other things in this um
25:01 - part of the script such as giving a
25:04 - player some sparkles if they win for
25:05 - example or i don't know
25:07 - um
25:08 - whatever but we've got them in the
25:10 - winner's table so later on we could give
25:11 - them cash or something etc
25:14 - but now i want to move on to the actual
25:16 - game loop and incrementing the timer etc
25:20 - so i'm going to create a simple for loop
25:21 - which counts down from the number of
25:23 - seconds for the round all the way down
25:25 - to zero so i can say for i equals round
25:29 - underscore duration underscore seconds
25:32 - comma zero comma minus one
25:35 - do
25:36 - end this is going to count down from 60
25:38 - seconds which is our variable
25:41 - down to zero and it's going to go at a
25:43 - rate of minus one each time so it's
25:45 - counting down by minus one
25:48 - now what we're going to do is every time
25:50 - this for loop
25:51 - runs sorry it's going to loop 60 times
25:53 - basically so down from 60 to zero so any
25:55 - code that's inside of it will run 60
25:57 - times so every time it loops we can
26:00 - change the timers
26:02 - uh ui it you can change its text labels
26:04 - text so timer ui dot time label dot text
26:09 - equals
26:11 - but we need to
26:12 - change the seconds to an actual time
26:16 - okay so for example it will go 60 59 58
26:20 - 57 we want it to be like a timestamp so
26:23 - let's create a function
26:25 - and i'm going to call it
26:26 - seconds
26:28 - to
26:29 - timestamp
26:31 - and we're going to take the seconds as a
26:33 - parameter here
26:36 - i'm going to drop a line and inside of
26:38 - here what we're going to do is we're
26:40 - going to
26:42 - uh
26:43 - just do a check to make sure that
26:45 - there's no
26:46 - negative seconds or it doesn't go
26:50 - into
26:51 - overtime we only want it to make sure
26:52 - that it's
26:54 - so i'll give you an example
26:56 - if for some reason the timer went down
26:59 - to zero minus one minus two we don't
27:02 - want that okay so we can just say
27:04 - seconds equals math.max
27:07 - seconds comma zero and then it will make
27:09 - sure that if seconds does go underneath
27:11 - zero then it will just default it to
27:13 - zero okay
27:15 - and we wanna get the number of minutes
27:17 - so we wanna convert this into minutes
27:19 - and seconds so let's say local minutes
27:22 - equals
27:23 - math.floor
27:25 - and then in brackets we can say seconds
27:27 - divided by 60 and this will give us the
27:29 - number of minutes
27:30 - and it will round it down as well so
27:32 - it's not going to be a decimal and then
27:34 - we need to make that a string because
27:36 - we're going to concatenate it in a
27:37 - minute with some text and you can't have
27:39 - two data types that are different it has
27:40 - to be either a string or a number so
27:42 - let's convert that into a string here
27:45 - and then we're going to get the amount
27:47 - of leftover seconds
27:49 - because like i said we're rounding it
27:50 - down
27:51 - but we're also losing some seconds that
27:53 - are left over so it might be one minute
27:55 - and 41 seconds we need to get those
27:57 - leftover seconds back so local left over
28:00 - seconds equals to string and inside of
28:04 - here we can say seconds
28:06 - mod
28:07 - 60 and that will give us the remainder
28:09 - the remainder amount of seconds left
28:11 - and then what we can do
28:14 - is do a quick check just to make sure
28:17 - that if the amount of leftover seconds
28:20 - is one we need to add that extra zero on
28:23 - otherwise it would just have
28:25 - it would only have one zero we need two
28:27 - zeros there
28:31 - actually that's a my bad on my part what
28:33 - i mean
28:34 - is say we get to 10 seconds right you've
28:36 - got two
28:38 - uh numbers right as part of you you've
28:41 - got a one and a zero okay but if you go
28:42 - to nine you just have one number okay so
28:46 - it would say it would be like this it
28:47 - would go from
28:49 - like ten zero zero but then it would go
28:51 - to like nine fifty nine we don't want
28:53 - that we want it to be oh nine fifty nine
28:56 - so we're compensating for that extra
28:58 - leading zero
28:59 - so
29:00 - we're gonna say if
29:02 - hashtag
29:03 - leftover seconds
29:05 - equals equals one so the number of
29:07 - numbers in that leftover second if it's
29:09 - just one
29:10 - then we want to change the leftover
29:12 - seconds
29:13 - to be
29:14 - what it is currently leftover seconds
29:17 - but we want to have
29:18 - a extra zero at the start here and then
29:21 - we can have
29:22 - dot dot left over seconds so that will
29:25 - add a zero on so that we can then return
29:29 - the minutes
29:32 - uh let's let's do two string
29:34 - minutes
29:35 - dot dot
29:36 - and then we can have
29:38 - a colon in between and we can have our
29:40 - leftover seconds
29:42 - here
29:43 - okay so this will just make sure that if
29:46 - it goes to ten seconds
29:48 - and then it goes down to nine and eight
29:50 - it will have that extra zero on the end
29:52 - here
29:53 - okay so now that we've converted our
29:55 - seconds into a time stamp we can then
29:57 - scroll back down here
29:58 - and we can call that function
30:01 - so let's say seconds
30:04 - to
30:04 - timestamp
30:06 - and let's put i in there because i is
30:09 - the number that will be counting down it
30:10 - will be that that number so we're taking
30:12 - those seconds and converting it into a
30:15 - timestamp
30:17 - okay the next thing we need to do is we
30:18 - need to make sure
30:20 - we need to do a check to see if it's a
30:22 - red light so every time that this loops
30:25 - every second we're gonna check and we're
30:27 - gonna say okay have we got a red light
30:29 - and if you've got a red light we want to
30:32 - get the positions of the players
30:34 - and check them to make sure that they
30:36 - haven't moved
30:37 - so to do this we first need to store
30:40 - whether it's a red light or not so i'm
30:42 - going to go into the replicated storage
30:44 - and i'm going to create a ball value i'm
30:47 - going to call this ball value
30:49 - is red light
30:51 - okay
30:52 - and we can update this when the light
30:55 - changes and then in this for loop we
30:58 - will be able to
31:00 - check that and we'll say okay is it a
31:02 - red light if it is let's get the players
31:04 - positions let's then store that position
31:07 - and let's check to see if they've moved
31:09 - by a stud okay and if they haven't moved
31:11 - by stood let's kill them
31:13 - so for now let's just do a quick if
31:16 - statement here called if is red light in
31:19 - fact we need to make a variable
31:21 - let's make a variable to store
31:24 - our red light here so at the top of our
31:26 - script we're going to say
31:29 - local
31:32 - red light equals replicated storage
31:35 - let's create a variable for replicated
31:37 - storage here
31:38 - local
31:39 - hold on
31:42 - local replicated storage equals game get
31:45 - service
31:46 - replicated storage
31:49 - okay
31:50 - now we can say replicated storage dot is
31:53 - red light just like that
31:56 - and now we go back down here we can say
31:59 - if
32:01 - is red light
32:03 - dot value
32:06 - equals equals well you could just say if
32:08 - it is red light dot value that will
32:10 - check if it is true so if there is a red
32:12 - light
32:13 - then we're just going to add a comment
32:14 - we can come back to this later
32:16 - let's store the positions of players
32:20 - and
32:21 - check if players have moved okay
32:25 - so what we will do
32:27 - is we will store the players positions
32:31 - when this changes and we haven't done
32:33 - that yet we haven't we haven't written
32:35 - the code to change the red light but
32:37 - when we do that we will store the
32:38 - positions of the players so we will get
32:40 - the position
32:42 - positions of players
32:44 - okay and then we will check the players
32:46 - have moved
32:47 - so
32:48 - what we'll do is before that let's do
32:50 - the actual code that's going to make the
32:52 - red light change
32:53 - so i said earlier how we are going to
32:56 - see when the last spin was when the tick
33:00 - happened so we're going to compare ticks
33:01 - so ticks is just the amount of seconds
33:04 - uh since a specific point in time and we
33:06 - can use it to work out how much time has
33:08 - gone by so we're going
33:11 - to
33:12 - check every single second to make sure
33:14 - that the delay has been passed the delay
33:17 - of five seconds and if that has been
33:19 - passed and we have waited five seconds
33:23 - we're going to change the red light
33:25 - value
33:26 - so outside of this if statement
33:29 - we're going to say if
33:31 - tick so the current amount of seconds so
33:34 - since
33:34 - january 1st 1970 take away last spin so
33:38 - this now becomes the amount of seconds
33:41 - since the last
33:43 - spin since the last
33:44 - head turn since the last red light so we
33:47 - want to say if that time is greater than
33:49 - or equal to the spin delay so this is
33:52 - essentially the same thing as saying
33:54 - has
33:55 - five seconds gone by since the last turn
33:59 - and if it has
34:01 - then
34:02 - let's
34:02 - set the is red light value to the
34:05 - opposite of what it currently is so if
34:07 - is red light dot value
34:10 - so if it is true
34:13 - then
34:14 - we want to
34:15 - make it a green light
34:18 - otherwise it's obviously got to be false
34:20 - so let's make it a red light
34:23 - okay so let's just do the green light
34:25 - part first
34:26 - we will say
34:27 - uh is red light
34:30 - dot value equals false
34:32 - and we can make the head turn so we can
34:34 - say green light head which is our tween
34:37 - we just made up here at the start we're
34:40 - gonna play that tween
34:43 - and
34:44 - then
34:45 - we can do the same for our red light
34:47 - tween
34:48 - so we'll say
34:50 - is red light dot value equals true
34:54 - and we will say red light head
34:57 - colon play
34:58 - and now what we want to do is we want to
35:00 - wait until
35:02 - the head is finished turning before we
35:04 - lock the player's positions so the way
35:06 - it's going to work
35:08 - is let me show you an example here with
35:10 - an npc
35:12 - let me just get an npc up here
35:14 - here we go so let's say this is our npc
35:17 - right and when there is a red light
35:20 - we're going to store that position right
35:22 - and then
35:23 - what we'll do is maybe they'll move
35:26 - say they move for example when there's a
35:28 - red light they shouldn't be doing that
35:29 - so we stored their position as being
35:30 - here but then we've noticed that they've
35:32 - moved well we're going to say okay we've
35:34 - got this stored position of when the red
35:36 - light came into effect and this is where
35:38 - they've moved to so let's compare the
35:41 - distance between these two players and
35:43 - we might work out that they've moved
35:44 - five studs and we will only allow them
35:47 - a minimum of one stood movement before
35:50 - they die so we'll notice that five studs
35:52 - is greater than one and we will kill
35:53 - them okay
35:55 - so let's go back to our server script
35:57 - and
35:59 - in here what we're going to do is we're
36:00 - going to create a function another
36:02 - function at the top here so let's create
36:04 - a function and i'm going to call it log
36:06 - player positions
36:09 - and we're going to take a parameter of
36:11 - the players that are in the round so
36:13 - log player positions i'm going to get a
36:16 - parameter i'm going to call it players
36:19 - drop a line make sure this end is added
36:21 - in here
36:22 - and what we want to do is we want to
36:24 - loop through every single player that's
36:26 - in this player's table
36:28 - so we're going to pass that that players
36:30 - in round table to this function i'm
36:32 - going to say for underscore comma player
36:35 - in pairs
36:36 - players
36:38 - do
36:39 - and we're going to say
36:40 - if
36:41 - player bot character
36:44 - then we want to make sure they've got a
36:45 - character loaded into the game
36:47 - then we're going to say they're going to
36:49 - get their humanoid root part which is
36:51 - just a part in their player
36:53 - which we can use to get the position
36:55 - and we're going to say fi player dot
36:57 - character find first child humanoid root
36:59 - part
37:00 - and we can say if humanoid root part i'm
37:03 - going to make sure they've got one it's
37:04 - all loaded then what we can do is we can
37:06 - log their position their position in a
37:09 - table so let's create a table here at
37:11 - the very top of our script
37:13 - and i'm going to call it
37:16 - saved player positions like this and
37:19 - it's just going to be an empty table
37:21 - but this is where we're going to be
37:22 - logging all player positions
37:25 - when
37:26 - there is a red light
37:28 - so we can later check their movements
37:32 - so we go back down here we can say saved
37:35 - player positions and we can create an
37:37 - entry in this table for that player so
37:40 - in square brackets i'm going to put
37:41 - player and that creates their own key in
37:44 - this table and we can assign a value to
37:46 - that key and that value is going to be
37:49 - their humanoid root part position
37:52 - okay so we have logged the position of
37:54 - every single player that is playing the
37:56 - game
37:57 - now we just need to call that function
38:00 - from down here so what we're going to do
38:03 - is we're going to say
38:04 - log
38:05 - player positions and we're going to pass
38:08 - the table
38:09 - called players in round
38:11 - so we have now logged the positions of
38:13 - everybody in the game
38:15 - so up here we can get those positions
38:17 - that we just logged and we can check if
38:19 - they've moved since then
38:21 - so let's go back up here
38:23 - and let's say
38:25 - let's loop through all of those saved
38:27 - player positions
38:29 - now since this is a dictionary and it
38:30 - has a key and a value
38:32 - we can utilize that first variable in
38:35 - the for loop so let's say for
38:38 - player because we stored their player
38:40 - object as the key and the value was
38:42 - their saved position
38:44 - so for player comma save position in
38:46 - pairs saved player positions do
38:50 - we'll say if player dot character to
38:52 - make sure they're still here their
38:53 - character is loaded etc
38:55 - we will say local humanoid route part
38:58 - equals player dot character colon find
39:01 - first child humanoid root part so we're
39:03 - doing the same as we just did before
39:05 - getting their position
39:06 - let's check if their humanoid root part
39:08 - is here
39:09 - and now what we can do is we can compare
39:11 - their current position with that save
39:13 - position and we can get the distance
39:15 - between the two so if the distance is
39:17 - more than one stood then we'll kill them
39:19 - since it's obvious that they've moved
39:21 - otherwise we won't kill them so let's
39:23 - say in brackets
39:25 - if humanoid root part dot position
39:29 - minus
39:30 - saved position because that's the value
39:32 - stored in this table you see here we
39:34 - store it as the value and this is the
39:36 - key
39:37 - so if the saved position sorry human
39:40 - group position minus safe position
39:42 - dot magnitude this is the distance
39:45 - between this the distance between the
39:47 - two positions
39:48 - is greater than or equal to one
39:51 - then
39:52 - we're going to kill the player so we're
39:54 - going to say player dot character colon
39:57 - break joints this is just a super quick
40:00 - and easy way to kill the player
40:03 - and now what we want to do is we want to
40:05 - remove them from that saved player
40:07 - positions table because they're now out
40:09 - of the round so saved player positions
40:12 - we'll use the key of the player object
40:14 - and we'll set it to nil
40:16 - so we're going to set this to nil
40:17 - because we no longer need to check if
40:18 - they have moved since they're out and
40:21 - finally we will remove the player from
40:23 - the round table so we will say local
40:26 - player index equals table dot find
40:29 - we're going to look in the players in
40:31 - round table for our player and we're
40:33 - going to get their index their position
40:35 - in the table so if player index
40:38 - then
40:39 - table dot remove
40:41 - we're going to remove them from the
40:42 - players in round table and we're going
40:44 - to pass their player index like that
40:47 - okay
40:48 - so now that we have
40:50 - basically
40:51 - checked the position of every single
40:52 - player in the game we have now made a
40:55 - way to eliminate players they should be
40:57 - killed
40:58 - if
41:00 - they are moving in a red light zone
41:05 - now the next thing we need to do is we
41:07 - need to reset the last spin
41:10 - so if the time is ready for us to turn
41:13 - it again five seconds has gone by then
41:15 - we need to set the last spin variable to
41:19 - the current time so that we can keep
41:21 - checking to see if five seconds has gone
41:23 - by so we're basically setting this as
41:25 - our base baseline it's like our
41:27 - benchmark to see how much time has gone
41:29 - by
41:30 - so
41:31 - this this if statement will only be
41:33 - satisfied again in five seconds time
41:35 - because we just reset the last spin
41:37 - variable to be the current time and
41:39 - since we're comparing the times here
41:41 - five seconds has to have gone by since
41:43 - the last spin and so last spin gets
41:46 - updated to the current time so we now
41:48 - need to wait five more seconds for the
41:50 - next spin but like i said we don't want
41:53 - to wait five seconds every time we want
41:55 - that element of chance of not knowing
41:58 - when the head is going to turn so we can
42:00 - say spin delay equals spin delay
42:04 - times 0.9 and that will just make it
42:06 - spin 10 faster each time
42:11 - because what it's doing is it's removing
42:14 - it it's decreasing the spin delay by 10
42:17 - so you're waiting less each time
42:20 - for the head to turn
42:22 - so now that we've done that
42:24 - let's just do some checks to make sure
42:27 - the round can still
42:29 - can still keep going because for example
42:31 - all players might be out so let's say if
42:33 - hashtag players in round equals equals
42:36 - zero then we obviously want the round to
42:38 - end because all players have died so we
42:41 - can say break and that will break out of
42:43 - this for loop here because we're still
42:45 - within this for loop which is
42:47 - controlling the game so we want to break
42:49 - out of that loop if all players have
42:50 - died
42:51 - and then the final thing we need in this
42:53 - for loop is a a weight because otherwise
42:56 - it would just count down from 0 60 to 0
42:59 - instantly we would need to have some
43:01 - kind of delay so that we can actually
43:02 - notice the changes each time it loops so
43:05 - let's say task.wait and put a 1 in there
43:08 - but this is really important make sure
43:11 - you add a task wait okay otherwise
43:14 - you won't notice the game working you
43:16 - need to have this for a delay
43:19 - and then outside of this for loop
43:22 - okay you can see i can close it here
43:24 - there we go you don't want to have those
43:26 - red things by the way so you just click
43:28 - there to get rid of them you don't want
43:29 - those they're break points we don't need
43:30 - them so outside of this for loop
43:33 - when the time is up or the players have
43:35 - died or whatever the game will be over
43:37 - by this point so by this point
43:39 - by this point the game is over
43:42 - so firstly we want to disconnect
43:45 - this
43:46 - event for the end touch because we no
43:48 - longer need it until the next round so
43:50 - let's just say end touch colon
43:52 - disconnect and this will prevent the
43:54 - barrier from working until next time
43:56 - okay it's just a simple way to avoid a
43:58 - memory leak so our game stays optimized
44:02 - and next let's reward our winners so you
44:05 - might have leader stats in your game or
44:07 - you want to reward the players somehow
44:10 - so i'm going to show you how to do that
44:11 - so we say 4 underscore comma winner
44:14 - in pairs
44:15 - i'm going to loop through the winners
44:16 - table that we created
44:19 - and we actually
44:20 - did put the players into the winner's
44:22 - table if they touched the end barrier
44:24 - so the winner is basically the player
44:26 - object of anyone who got to the end so
44:30 - you could do if winner dot character
44:32 - then maybe you want to apply some effect
44:34 - to their character okay you could do
44:36 - that in there or you might want to give
44:38 - them some money or you could do that by
44:40 - saying
44:42 - winner.leaders.money.value if you've got
44:43 - some leader stats set up if you haven't
44:46 - got leader stats or anything set up then
44:48 - don't do this i'm not gonna do this
44:50 - um for now i'm actually just gonna
44:52 - comment all of these lines by selecting
44:54 - them and clicking toggle comment because
44:56 - i have nothing to give to a winner uh
44:58 - but maybe that's something we can do in
44:59 - a future video maybe
45:01 - but then i'm just gonna print
45:03 - round over
45:05 - like this
45:06 - and then what will happen is it will
45:08 - that's our function done and then it
45:10 - will loop over again it will wait five
45:12 - seconds
45:13 - and it will start the game again so i'm
45:14 - just going to print at the top of this
45:16 - while loop
45:17 - waiting five seconds
45:19 - before starting a new game
45:23 - and
45:24 - then it will do this start game function
45:27 - all over again
45:30 - now we're nearly done we just got one
45:32 - more thing to do
45:33 - we need to make our gui
45:36 - uh our client ui actually show
45:39 - red light or green light because we've
45:40 - got this light status text label it's
45:43 - got no text in it so we want to make it
45:44 - so that when there's a green light it
45:46 - shows green light when there's a red
45:47 - light it will say red light so how do we
45:49 - do this well i'm going to insert a local
45:52 - script into the client ui here
45:54 - and i'm going to call this control but
45:57 - you can call it whatever you want
45:58 - now inside this local script we're going
46:00 - to say local players
46:04 - equals
46:05 - game column get service players
46:10 - and then we're going to say the same
46:11 - thing but for replicated storage
46:14 - because we need to get that is red light
46:17 - value out of the replicated storage
46:21 - and then we're going to say local label
46:24 - equals script dot parent dot light
46:26 - status that's the text that will appear
46:29 - on the screen the text label
46:31 - and then we can just check to see when
46:33 - that is red light value which we change
46:36 - in our server script we want to check
46:37 - when that changes so we can say
46:39 - replicated storage dot is red light
46:42 - dot changed
46:44 - colon connect function
46:46 - and then we're going to have a
46:48 - an argument which will tell us whether
46:50 - it went red or not so we can just call
46:52 - that is red light
46:54 - and this is red light is going to be
47:00 - it's going to be true or false so if
47:02 - it's true
47:03 - we can just say if is red light here
47:06 - if it is red light then so we know it's
47:08 - true we can say label dot text equals
47:11 - red light
47:12 - and we can set the label
47:14 - text color three
47:16 - to be completely red so color three dot
47:18 - from rgb
47:20 - two five five comma zero comma zero and
47:22 - that will be the red color
47:24 - else is going to be false and then we
47:26 - know that it's a green light so we can
47:28 - say label dot text equals green light
47:31 - and we can say label dot text color
47:33 - three equals color three but from rgb
47:36 - zero comma two five five comma zero and
47:39 - that will make the text color three
47:41 - green and what this will do is whenever
47:43 - it notices that the is red light is
47:45 - changed and we change it from our server
47:48 - script here we're changing it right here
47:50 - then it will update the
47:52 - gui
47:56 - okay so before we go ahead and test i'm
47:58 - going to change a couple of things now
48:00 - the timer does say three minutes to
48:02 - begin with what i'm going to do is i'm
48:04 - going to go into my time label here i'm
48:06 - just going to set the text to be nothing
48:07 - for now so it only appears when the game
48:10 - starts one other thing i noticed is that
48:12 - my bacon hair
48:14 - the head will move but the hair won't
48:18 - move with it so how do we fix that well
48:20 - what i'm going to do is i'm going to
48:21 - take the pal hair handle i'm just going
48:24 - to put it into the doll so i'm removing
48:26 - that pal hair head accessory
48:29 - then what i'm going to do is i'm going
48:31 - to take my head i'm going to insert a
48:33 - weld constraint
48:36 - okay i'm also going to unanchor my
48:39 - handle so my head sorry the handle is
48:42 - the hair okay so i'm going to unanchor
48:43 - it then in the world constraint i'm
48:46 - going to set the part one to be the head
48:49 - and the part zero to be the handle and
48:51 - that should connect them so that when
48:53 - the head moves the hair moves with it
48:56 - okay
48:57 - so
48:58 - let's go ahead and
49:00 - test this thing out i'm going to take
49:02 - the spawn location as well that's from
49:04 - my base plate you see this base plate
49:05 - here you can delete that if you want you
49:07 - can delete the base plate of the game
49:09 - and i'm going to take the spawn location
49:12 - and i'm going to press move and press f
49:14 - to go to where it currently is located
49:16 - i'm going to move it all the way over
49:18 - here
49:19 - uh in fact let's see if we have any
49:20 - spawn locations okay we don't so i'm
49:23 - going to take the spawn location i'm
49:24 - going to drag it above here i'm just
49:26 - going to make it so that it covers the
49:28 - entire width of the base like this just
49:31 - so that we have a good place for people
49:33 - to spawn in and then i'm going to set
49:35 - the transparency to one i'm going to
49:37 - scroll down and set can collide to false
49:40 - make sure it's anchored
49:41 - and i'm going to select the decal inside
49:43 - of it and remove it so it basically is
49:46 - becoming invisible
49:48 - and then what i'm going to do is i'm
49:51 - going to
49:52 - uh basically go and try the game let's
49:53 - see if it works
49:55 - so like i said if you're using a squid
49:57 - game doll that's fine you probably won't
49:59 - have to do the changes i did there uh
50:01 - you'll just want to make sure that
50:02 - everything's anchored though and if you
50:04 - have any extra hair or things on top
50:06 - that you weld them to the head using a
50:08 - world constraints
50:09 - okay let's go and test this out no idea
50:11 - if this will work or not
50:13 - let's click on view and open up the
50:14 - output here
50:17 - and let's click on home and let's click
50:19 - on play
50:22 - so everything looks good so far waiting
50:24 - five seconds before starting a new game
50:26 - i'll make this a little bit bigger here
50:29 - and we've got 57 seconds on the clock i
50:32 - got a red light and there you go my noob
50:34 - is moving its head so if i try to move
50:37 - i got killed and you can see i ragdoll
50:40 - that's because that ragdoll script which
50:42 - came with the kit we're not going to go
50:44 - into specifics on how that works because
50:46 - it's fairly advanced and this tutorial
50:48 - would probably go on for hours if i
50:50 - explained it
50:51 - but it's just a nicer
50:53 - way to die i say nicer i mean you're
50:55 - dying is it nice or not but it's just
50:57 - better than boom there we go it's better
51:00 - than just your body parts going
51:01 - everywhere
51:02 - um so let's see there you go the round
51:04 - restarted
51:06 - you've got to be very quick
51:09 - uh oh oh you can see there we got a bug
51:12 - we got a book i'll explain it in a
51:14 - minute but you can see when the round
51:16 - started he was facing us
51:18 - and it didn't say red light let's see if
51:20 - it let's look let's just try and
51:22 - complete the game first
51:24 - oh i also died
51:26 - oh we got a couple of bugs here let's
51:28 - try and fix these bugs i'm sure we'll
51:30 - fix them but let's try and work out what
51:31 - the bugs are so the bug is
51:34 - that he turns his head towards the wall
51:37 - when the game starts
51:39 - and then when it's a red light we get
51:41 - killed so let's go and work out why
51:43 - these bugs are happening
51:45 - so the first bug is that we didn't reset
51:48 - the player's head from the previous
51:50 - round so to do this let's just go into
51:52 - our start game function
51:54 - and let's say green light head colon
51:57 - play so it makes them face the wall
51:59 - again then we can set is red light to be
52:02 - false like this and that should
52:05 - fix it might fix the second problem as
52:07 - well i'm not sure but we'll see and then
52:09 - we need to change the saved player
52:11 - positions to be an empty table again
52:13 - otherwise it's going to use our saved
52:15 - position from last time and i think this
52:17 - is what is causing the second book so we
52:19 - might have just killed two birds with
52:20 - one stone knocked out two bugs in one
52:24 - in one test so let's click on play again
52:26 - and test it out
52:28 - so
52:29 - you know you get bugs in everything even
52:30 - i get bugs but if you're if you just
52:33 - have a quick look through your code and
52:34 - work out what's going wrong you can see
52:36 - there
52:37 - that um he was facing the wall and that
52:40 - the character was facing the wall as
52:42 - soon as the game started and you can see
52:45 - when it goes to
52:47 - red light
52:48 - oh we got killed again let's let's let's
52:50 - we'll go back and try and fix the the
52:52 - second book then here
52:55 - okay so i've done a bit of debugging and
52:57 - i'm pretty sure i've worked out why this
53:00 - bug is happening so i think it's because
53:02 - we're logging the player's position
53:06 - um without waiting
53:08 - we need to wait before we log we need to
53:10 - wait until the player's head has spun
53:12 - around before we lock the position
53:15 - otherwise they're just going to get
53:16 - killed instantly we need to give them a
53:18 - little bit of time for the head to spin
53:20 - before we actually say
53:22 - uh before we actually start killing
53:23 - players just give them that time to stop
53:26 - so if we say red light head dot
53:30 - completed colon weight with a pair of
53:32 - brackets on the end that is going to
53:34 - wait there until the spin has finished
53:37 - until the head has turned around so that
53:39 - we are only logging the positions once
53:42 - that they are frozen
53:44 - once they've stopped moving and then if
53:46 - they move again we'll be able to tell
53:49 - how far they've moved so let's click on
53:51 - play again and work and see if this is
53:54 - working
53:56 - so
53:56 - we're going to get put into our outfit
53:58 - and the timer starts
54:00 - and we're counting down counting down
54:03 - red light
54:06 - turn around bacon boy
54:14 - oh red light
54:15 - nope we didn't move
54:17 - nobody moved
54:19 - and green light
54:22 - dude
54:30 - hey we got to the end okay so we are at
54:33 - the end
54:34 - and you can see it says round over
54:36 - so we won so
54:38 - i think everything is working here
54:40 - very very good and just to show you
54:43 - if you did want to give the player some
54:44 - cash
54:45 - then let's create another scripts
54:48 - i'm just going to speed run through this
54:51 - so i will come back to you when i have a
54:52 - leaderboard
54:55 - okay so we just created a leader stat
54:58 - script so if i play the game you'll see
54:59 - that in the right corner over here i've
55:02 - got a leaderboard with cash so i wanted
55:05 - to give some cash to all the winners
55:07 - what we could say is in our server
55:08 - scripts
55:10 - we can un-toggle the comments over here
55:13 - and we can say
55:14 - winner
55:16 - dot leader stats dot cash
55:19 - value plus equals
55:21 - five for example and then if you win you
55:24 - will get plus five cash
55:27 - so i'm gonna be a bit cheeky here i'm
55:29 - gonna go into the server i'm gonna go
55:31 - into my player i'm gonna go into my
55:33 - humanoid i'm going to set my walk speed
55:36 - to be
55:37 - 150 okay and when it's when it goes to
55:40 - the next green light
55:42 - it goes to the next red light i'm going
55:43 - to stop i'm going to speed run my way to
55:46 - the end here
55:47 - when it's a green light okay here we go
55:48 - ready watch my cash
55:50 - okay the round ended and
55:53 - oh i got 90 cash
55:55 - 90 cash okay okay
55:58 - that is because
56:00 - we don't have a d bounce on this toucher
56:03 - so my character has probably touched
56:05 - this ten times so it's added loads of
56:08 - cash to my to my uh character because
56:11 - i'm in the winner's table lots of times
56:13 - so to prevent this we can just say
56:17 - uh local
56:19 - in winners
56:21 - table now we will say winners index
56:24 - equals table dot find
56:26 - winners and we'll say touch player and
56:29 - then let's just say
56:31 - if
56:32 - not winners
56:34 - index
56:36 - then
56:38 - return end okay and that should prevent
56:40 - us
56:41 - from entering the winner's table more
56:43 - than once
56:44 - so let's go ahead and try it out once
56:46 - more so i've purposely left in the
56:48 - debugging um to an extent in here so you
56:51 - can see how debugging works in a roblox
56:54 - game because it's an important skill
56:56 - to have
56:57 - so let's set the walk speed to 190
57:01 - wait for the green light
57:03 - and let's speed on our way to the end
57:05 - here
57:06 - let's see if that works
57:09 - i don't think it registered us touching
57:11 - the
57:13 - the detector here let's try again
57:16 - hmm doesn't want to doesn't want me to
57:18 - touch the detector for some reason
57:21 - come on
57:23 - there we go
57:26 - i don't know why that's not working
57:29 - ah my bad
57:30 - we want it to be if winners index not if
57:33 - not because if you're already in the
57:35 - table then
57:36 - we don't add you again but if you're not
57:38 - in the table then sure go ahead we'll
57:40 - add you so let's try this one more time
57:42 - i promise this will be the last time
57:44 - hopefully all right we'll go back in
57:46 - workspace i'm in blocks
57:49 - and humanoid and 200 walk speed
57:53 - and we'll speed on our way to the end
57:55 - here
57:58 - wait for the red light
58:00 - there we go we got our five cash so
58:02 - there we go we only added ourselves to
58:04 - the winners table once so we got five
58:06 - cash and then we have another round here
58:09 - and our walk speed got reset
58:12 - now there's one small thing i wanted to
58:13 - point out at the end of the video and
58:15 - that is that during the game the head
58:18 - which we coded to reduce the delay every
58:21 - single time you can see the head in my
58:23 - game here is moving back and forth
58:26 - really quickly so we go green light red
58:28 - light green light red light really
58:29 - really fast and that's because since
58:32 - it's
58:32 - decreasing the delay between turning the
58:35 - head by 10
58:36 - each time eventually the delay is going
58:39 - to be really small so there might only
58:41 - be half a second delay so if you want to
58:43 - change this then what you can do is you
58:46 - can edit the number which we multiply
58:49 - that spin delay by and i'll show you how
58:51 - to do that now just so that the head
58:53 - doesn't keep turning back and forth
58:54 - really quickly
58:56 - so i'm going to change mine to
58:58 - 0.95 and it's over here in the server
59:02 - script where we say spin delay equals
59:04 - spin delay times 0.95
59:08 - if you make the number bigger then
59:09 - that's going to decrease the amount
59:12 - which it's it goes down by each time so
59:15 - if it's 0.95
59:18 - then instead of going down by ten
59:19 - percent it's going down by five percent
59:21 - okay so just increase that number
59:24 - between zero and one some number between
59:26 - that and that should fix it and don't
59:28 - forget you can also change
59:30 - the
59:31 - round duration seconds so make sure that
59:34 - you've got
59:35 - a
59:36 - a decent number which won't make the
59:38 - head spin back and forth really quickly
59:42 - which is which works with your round
59:44 - duration because if you had a round
59:46 - duration of five minutes then obviously
59:48 - you'll need to increase
59:50 - this number here otherwise it's going to
59:52 - spin
59:53 - back and forth really quickly at some
59:55 - point because it's constantly decreasing
59:57 - by five percent now one final thing if
59:59 - you don't want the players to die
60:01 - once they've reached the end so when
60:02 - they move you know we don't want to kill
60:04 - them what you can do is if we go into
60:06 - the server script
60:07 - and in this part here where we have the
60:10 - round loop and we're checking the saved
60:12 - positions
60:13 - let's firstly check to see if each
60:16 - player is in the witness table so we can
60:18 - say local winner index equals table dot
60:21 - find
60:22 - winners
60:24 - and we can put the player in here and
60:28 - then what we can do is we can say if
60:29 - winner index
60:31 - then
60:31 - continue
60:34 - and what this will do is it will just
60:35 - move on to the next
60:37 - player in the for loop because we don't
60:38 - want to carry on with this person we
60:40 - just want to continue to the next loop
60:42 - so it's going to stop here and just move
60:44 - to the next player because we don't want
60:46 - to kill the player if they're already a
60:48 - winner so let me go and show you this in
60:50 - action
60:52 - and don't forget as well you can change
60:54 - the original starter spin delay at the
60:56 - top of the function here
60:59 - okay here we go
61:00 - oh i died straight away
61:03 - we got a couple of people reaching it
61:06 - and would you look at that they're not
61:07 - dying because they are a winner
61:10 - and i'll just prove it as well
61:12 - when we get to the end here
61:15 - oh
61:17 - hey we are a winner okay so there you go
61:19 - that proves it then
61:21 - if you beat the course you no longer
61:23 - will die
61:24 - but there you go that is how you create
61:27 - a squid game
61:29 - on roblox so if you enjoyed this
61:31 - tutorial please do leave a like please
61:33 - do subscribe to the channel if you're
61:34 - new and turn on your notifications so
61:36 - you never miss an episode and don't
61:38 - forget if you want to get access to this
61:40 - project with the full code everything um
61:44 - then you can become a channel member a
61:45 - premium channel member for 4.99 by
61:48 - clicking on the join button underneath
61:50 - the video next to the subscribe button
61:52 - there'll also be a link in the
61:53 - description you get all sorts of cool
61:55 - perks uh including the source code as i
61:58 - said and like i said we might do more
62:01 - episodes on this in the future so let me
62:03 - know what you'd like to see
62:04 - and don't forget you can get the kit and
62:06 - all information you need will be listed
62:09 - in the description so thank you so much
62:10 - for watching and i'll see you next time