00:00 - so in the last video in our Tycoon we
00:02 - set up the Tycoon builds the leader
00:05 - stats we created the buttons and we also
00:07 - assigned a tycoon when you joined the
00:10 - game what we've now got to do is work on
00:12 - coding the buttons so they actually
00:14 - unlock the items we'll set up their
00:16 - Billboards we'll also set up the
00:19 - positioning of items and cloning them
00:21 - out of the replicated storage to put
00:23 - them down and then we'll finish off by
00:26 - saving our Tycoon so now that we've
00:29 - assigned a tycoon to a player we can
00:32 - code the buttons so let's go into our
00:34 - main script in the Explorer window and
00:37 - select it and then back in the code
00:39 - editor I'm just going to hide this
00:41 - yellow Banner
00:42 - let's just zoom out we've only got one
00:46 - function at the moment which is to
00:47 - assign our Tycoon we're going to create
00:49 - a few more functions in this video
00:52 - let's start off by creating a function
00:55 - which will take a player and return
00:57 - their Tycoon so local function get
01:00 - Tycoon just increase the size here for
01:03 - you so get Tycoon we're going to take
01:06 - the player as an argument and then what
01:08 - we'll do is we'll Loop through all of
01:10 - the tycoons in the workspace so for
01:12 - underscore comma tycoon in game dot
01:16 - workspace dot tycoons because don't
01:18 - forget in the Explorer window under the
01:20 - workspace we have our tycoons folder so
01:23 - we'll say
01:25 - game.workspace.tycoons colon get
01:27 - children
01:28 - do
01:29 - and then inside of here we want to say
01:31 - if Tycoon
01:33 - colon get attribute and we want user ID
01:38 - so if the user ID attribute is equal to
01:41 - the player's user ID
01:45 - then we will return the Tycoon
01:49 - now if the Tycoon does not exist then
01:52 - this function isn't going to return
01:53 - anything and we'll be able to take what
01:57 - is returned from this function so it
01:58 - will be the Tycoon the player owns and
02:01 - then we'll be able to change it and
02:03 - reference it this is just a really quick
02:05 - way of being able to get a specific
02:06 - player's Tycoon and we'll be using it
02:09 - later on
02:10 - right now let's set up our buttons so if
02:12 - we just head out of this script and head
02:15 - to one of our tycoons here let's just go
02:17 - into the buttons folder and select a
02:19 - button and if we have a look in the
02:21 - properties window we're going to need to
02:23 - add an attribute for this button because
02:25 - we need to know whether it's unlocked
02:29 - now a button will either have a true or
02:32 - false attribute called unlocked and when
02:35 - you step on the button we'll set it to
02:36 - be true and then we'll make the button
02:39 - disappear so let's set up a Boolean
02:40 - attribute and we'll just call it
02:42 - unlocked and click on Save and now what
02:45 - I'm going to do is because we've already
02:46 - gotten a few more tycoons over here I'm
02:48 - just going to destroy them for now so
02:50 - we've only got this one Tycoon to work
02:52 - with because we're going to be making a
02:53 - few changes to our Tycoon model here and
02:57 - as this is going to be the default
02:59 - Tycoon we'll clone them out later on so
03:02 - we'll just have one Tycoon for now and
03:04 - like I said we've set up that attribute
03:06 - for our button here called unlocked
03:08 - we'll just leave it unchecked
03:10 - what we're also going to do is we're
03:12 - going to give this button a tag and
03:15 - we're going to use something called The
03:16 - Collection Service a collection service
03:18 - is a way of giving a tag to a load of
03:21 - objects and then you can write code
03:23 - which will apply to all of them so you
03:25 - don't have to rewrite the same code out
03:27 - over and over again
03:28 - now you're going to need a plug-in for
03:30 - this called the tag editor Roblox have
03:33 - added their own tag editor but I find
03:35 - using the tag editor plugin way more
03:38 - useful so in the toolbox
03:40 - over here let me just zoom in
03:44 - here we are if we go to models and
03:46 - select plugins you'll be able to search
03:48 - for tag editor
03:51 - and then you want to take this one by at
03:53 - sweet heartachoke I'll leave a link in
03:56 - the description just make sure that
03:57 - you've installed it
03:59 - once you have go to the plugins window
04:02 - up here and you will see
04:05 - the tag window underneath instance
04:07 - tagging so open up the window and that
04:10 - should open up over here by the Explorer
04:12 - our tag editor so what you want to do is
04:14 - you want to select your button make sure
04:16 - it's selected and we're going to add a
04:18 - new tag type in button and press enter
04:21 - Then you want to click on the check box
04:24 - and make sure it's checked
04:27 - now if you have any other tycoons or
04:29 - buttons make sure you've selected them
04:30 - as well and you've given them this tag
04:32 - this now means that our button here has
04:35 - got the button tag and any code that we
04:37 - write for the button tag will be applied
04:40 - to our button here
04:42 - so if we just head back you can close
04:44 - the tag editor now that's all been done
04:47 - and we head back to our script
04:49 - we can now write some code which will
04:52 - Loop through every single button that's
04:54 - in existence in the game so we can say
04:56 - for underscore comma button
04:59 - in collection service colon get tagged
05:03 - and then in these brackets we're going
05:05 - to put button
05:06 - do so this is going to return a table of
05:10 - all of the buttons in every tycoon in
05:13 - the game now we just need to define the
05:15 - collection service so at the top of our
05:17 - script we'll say local collection
05:20 - service equals game colon get service
05:22 - collection service
05:24 - that now means we can use the get tagged
05:27 - function which will get all of our
05:29 - buttons for us then for every single
05:31 - button we want to detect when it's been
05:33 - stepped on so we can say button
05:36 - got touched colon connect
05:40 - function
05:41 - and then we're going to have an argument
05:42 - or hit hit is going to be the object
05:45 - that touches our button it could be a
05:47 - body part of a player it could be any
05:49 - other part so we'll need to actually
05:51 - check to make sure that a player has
05:55 - touched this part and we can do that by
05:57 - creating a variable and calling it
05:59 - player and we'll just return the result
06:01 - of game dot players colon get player
06:04 - from character and then in these
06:07 - brackets we're going to say hit dot
06:08 - parent now if a player has touched this
06:11 - brick then this player variable will be
06:14 - equal to something but if it isn't it
06:16 - will just be nil so we can we can detect
06:19 - this by saying if not player then return
06:22 - end and that is going to end this
06:25 - function here it's not going to go any
06:26 - further however if it is a player then
06:28 - we want to get their Tycoon and we've
06:31 - just created a function to do this so we
06:33 - can get the Tycoon as a variable by
06:36 - saying a local Tycoon equals get Tycoon
06:39 - and we can pass our player from this
06:42 - variable here and this should return the
06:45 - model of the Tycoon to this variable
06:47 - here
06:49 - so now that we've got the players Tycoon
06:52 - we want to make sure that this button
06:54 - actually exists in their Tycoon because
06:56 - we don't want them to be to be stepping
06:57 - on a button for someone else
06:59 - so we can say if not
07:02 - button
07:03 - colon is descendant of
07:06 - Tycoon then return end all that this if
07:10 - statement's doing is it's checking to
07:12 - see if the button that the player
07:14 - stepped on is inside of
07:17 - player's Tycoon object so if it's inside
07:20 - of the player's Tycoon object that's
07:23 - fine but if it isn't then we don't want
07:26 - to go any further because we don't want
07:27 - other players to be stepping on our
07:29 - buttons
07:30 - the other thing we want to do is we want
07:32 - to make sure that the player
07:35 - does not step on a button that they've
07:39 - already unlocked so when a player steps
07:41 - on a button what we're going to do is
07:42 - we're going to make it invisible we're
07:44 - not going to delete it we're just going
07:46 - to make it invisible so we're going to
07:47 - say button.transparency equals one
07:51 - button dot billboard GUI because don't
07:54 - forget there's a billboard GUI stored
07:57 - within our button
07:58 - so and that's going to have the text of
08:01 - the item so button dot billboard GUI dot
08:04 - enabled equals false
08:06 - and then what we're going to do is we're
08:08 - going to set the unlocked attribute
08:10 - which we just created which is all the
08:13 - way down here it's unlocked property or
08:16 - attribute sorry we're going to set that
08:18 - to be true because the player will have
08:20 - unlocked the item so we'll say button
08:22 - colon set attribute unlocked comma true
08:27 - and then what we can do at the very top
08:30 - of our function here is we just want to
08:32 - check to see if the button has already
08:33 - been unlocked
08:35 - because if it's going to be transparent
08:37 - it can in theory still be touched so we
08:40 - don't want to unlock the same item twice
08:41 - if it's already been unlocked so we can
08:43 - say if button prolonged get attribute
08:46 - unlocked
08:48 - then return end that's just going to
08:50 - prevent the function from going any
08:52 - further and we don't need to say equals
08:55 - equals true because button and colon get
08:57 - attribute unlocked will be true okay if
09:00 - by default we don't need to check its
09:02 - value
09:03 - so that will just check to see if the
09:05 - button has already been unlocked and
09:07 - then the last thing we need to do in
09:08 - this function is we actually need to
09:10 - unlock the item right we need to give
09:12 - the player what they've bought because
09:15 - at the moment all we're doing is making
09:18 - the button disappear so that's what
09:19 - we're going to do now
09:22 - so let's create another function up here
09:24 - and we're going to call it
09:26 - local function unlock item
09:30 - and we're going to need to take a few
09:31 - arguments here we're going to need the
09:33 - player and we're also going to need the
09:35 - ID of the item so we'll create two
09:37 - arguments called player and Item ID
09:40 - now firstly let's get the Tycoon of the
09:43 - player so local Tycoon equals get Tycoon
09:46 - fire
09:47 - and just a quick check to make sure it
09:49 - exists if not Tycoon then return end
09:54 - we can also put the same thing down here
09:55 - if not Tycoon then return end just as a
10:00 - safety mechanism to make sure our script
10:02 - doesn't throw an error
10:04 - so now we've got the Tycoon we want to
10:07 - create a clone of the item
10:10 - so we need to firstly get the item from
10:14 - its ID because like we said in the last
10:15 - video we are we are controlling our
10:18 - items through an ID based system rather
10:20 - than objects we're storing them as IDs
10:23 - so we need to actually find the
10:25 - corresponding object to that ID
10:28 - so we need to create a variable for our
10:30 - item and we actually need to create
10:33 - another function to get an item from an
10:36 - ID so let's do that now
10:38 - let's create another function and we're
10:41 - going to call it get item so local
10:44 - uh in fact let's just let's put it all
10:46 - the way up here let's let's put it above
10:48 - our assigned Tycoon doesn't really
10:50 - matter but just for organization local
10:52 - get local function get item it's going
10:55 - to take the item id that's what we're
10:57 - going to pass to this function
11:00 - so let's firstly
11:03 - create a variable for our items folder
11:05 - because we've got an items folder in the
11:07 - replicated storage which we're going to
11:09 - Loop through so we're going to say at
11:12 - the top here
11:13 - just by our tycoons
11:16 - um variable local items equals let's
11:19 - create a variable as well for replicated
11:20 - storage
11:22 - local replicated storage
11:24 - equals game called get service
11:26 - replicated storage
11:29 - and items
11:31 - equals replicated storage prolonged
11:34 - weight for child
11:36 - items
11:37 - and just for consistency I'm going to
11:40 - change the tycoons from speech marks to
11:44 - these these apostrophes here so now
11:47 - we've got our items and tycoons
11:49 - variables back in our get item
11:53 - function we're going to create a for
11:55 - Loop which Loops through every single
11:57 - item in our items folder in the
12:00 - replicated storage and we're going to
12:02 - check to see if that item's ID attribute
12:05 - is equal to the one that we are looking
12:07 - for and if it is we'll return it from
12:10 - our function so local function get item
12:12 - takes the item id we're going to say or
12:15 - underscore comma item in items colon get
12:20 - children
12:21 - which is just going to return a list of
12:22 - all the items you do
12:24 - we say if item colon get attribute ID
12:29 - equals equals item id then return item
12:34 - and that's just going to return the
12:36 - correct item for us also in our assigned
12:39 - Tycoon here we don't necessarily need
12:41 - this return nil as it will return nil
12:43 - anyway so you can remove it if you'd
12:45 - like
12:46 - so now we have a way of getting our item
12:49 - we can then in our unlock item function
12:52 - we can say get item and we can pass the
12:54 - item ID and then we can call colon clone
12:57 - on it to create a duplicate of that item
13:00 - from the replicated storage we also want
13:02 - to get the cost of the item so let's
13:04 - just create a variable for the cost and
13:06 - because we know that we've stored the
13:08 - cost of every single item as an
13:10 - attribute which is what we did in the
13:12 - last video
13:13 - we can just say item colon get attribute
13:16 - cost
13:18 - now we need to check to see if the
13:20 - player can afford this item so we're
13:22 - going to say if player got leader stats
13:25 - dot cache dot value is less than the
13:28 - cost then return false
13:32 - that is going to stop the script right
13:34 - there and end it and just uh it's going
13:37 - to return I'm not going to go any
13:39 - further because obviously the player
13:41 - can't afford the item however if they
13:43 - can afford the item let's deduct the
13:45 - cost from their current balance by
13:47 - saying player dot leader stats dot cash
13:50 - dot value minus equals cost
13:54 - that is going to subtract it from their
13:56 - current balance
13:57 - and finally what we need to do is we
13:59 - need to take our cloned item and we need
14:03 - to position it in the right place
14:04 - because at the moment in our Tycoon
14:07 - we've got everything laid out in the
14:09 - correct location but we're going to have
14:11 - lots of different tycoons some tycoons
14:13 - may be rotated differently positioned
14:16 - differently so what we're going to need
14:18 - to do is we're going to need to
14:21 - basically get the relative position of
14:23 - each item relative to the Tycoon and
14:25 - then position it relative to where our
14:27 - Tycoon is placed because like I've said
14:30 - some tycoons might be opposite each
14:32 - other rotated so we're going to need to
14:34 - position the item relative to where it
14:37 - currently is so that's what I'm going to
14:38 - talk you through now
14:41 - firstly however let's just take our item
14:43 - and parent it to the players Tycoon so
14:48 - we'll say item.parent equals Tycoon dot
14:52 - items that's going to put it into the
14:55 - folder that we created in the last video
14:57 - called items
14:59 - and now we're going to want to do is we
15:01 - want to get the C frame we want to set
15:04 - the item C frame so we'll say item pull
15:07 - on pivot 2. and we need to put a C frame
15:10 - in here so a C frame is a combination of
15:13 - a position and an orientation so it's an
15:16 - area in the map it's it's we can tell
15:18 - the script where we want to position
15:20 - this item so we need to give it a C
15:22 - frame
15:23 - so firstly we're going to need to have a
15:26 - relative C frame now a relative C frame
15:29 - is a position and orientation relative
15:34 - to another part and in this case we want
15:36 - to get the conveyors or the item
15:39 - whichever item it is we want to get its
15:40 - position relative to our Tycoon
15:43 - so how are we going to do that well
15:45 - let's create a function which will get a
15:49 - relative C frame so we're just going to
15:51 - create a local function get relative C
15:53 - frame and we're going to take the item
15:55 - ID
15:56 - now do you remember earlier in the last
15:58 - video I said we're going to position
16:00 - everything where it's going to be in our
16:02 - Tycoon and then when we start the game
16:05 - up we're going to strip out all of the
16:07 - items right because the player won't
16:09 - have unlocked them yet but we have a
16:11 - copy of them in replicated storage
16:14 - right well because we have got a copy in
16:18 - replicated storage with the position and
16:20 - the orientation saved we have the
16:24 - position that we want our items to be in
16:27 - all we now need to do is make them a
16:30 - relative to our Tycoon plot so that if
16:34 - the Tycoon plot is in a different
16:36 - location to where the items are
16:38 - currently placed they will move with
16:41 - that Tycoon so what we'll do is we'll
16:44 - firstly
16:46 - we'll find the item that we're looking
16:48 - for with this ID in the player's Tycoon
16:52 - plot so let's create a variable for the
16:54 - item and let's create another function
16:57 - which is going to get the item in the
16:59 - Tycoon by its ID so up here again in the
17:03 - top of the script we're going to create
17:04 - another function and call it get item in
17:07 - Tycoon by ID we're going to provide the
17:10 - item ID and we're also going to provide
17:12 - an object for our Tycoon which will pass
17:15 - into this function
17:16 - so we want to Loop through all of the
17:18 - items currently in this
17:21 - um Tycoon actually
17:24 - what we'll do instead is we'll take our
17:27 - Tycoon here and we're going to right
17:29 - click and copy it we'll make it we'll
17:31 - make a copy of this Tycoon and we're
17:34 - just going to put it into replicated
17:35 - storage Okay so we've created the copy
17:38 - of the Tycoon this will be our
17:39 - placeholder Tycoon let's create a
17:42 - variable for this as well so local
17:44 - placeholder Tycoon equals replicator
17:48 - storage wait for child Tycoon okay so if
17:51 - you ever make any changes to your Tycoon
17:53 - and you add any new items all you're
17:55 - going to do is right click on it copy it
17:58 - and replace it in the replicated storage
18:01 - here so we have a default Tycoon that
18:04 - would be our placeholder one okay
18:06 - now what we can do is instead of saying
18:10 - Tycoon here we'll just Loop through our
18:12 - placeholder Tycoon until we find the
18:15 - item that we're looking for so for
18:17 - underscore comma item in placeholder
18:20 - Tycoon dot items current getchildren
18:23 - do
18:24 - we want to make sure it's the correct
18:26 - item so if item colon get attribute ID
18:30 - equals equals item id then return item
18:34 - so what we're doing here in this
18:36 - function is we're getting a uh we're
18:39 - getting a place we're getting an item by
18:42 - an ID from the placeholder Tycoon
18:45 - because in the placeholder Tycoon it's
18:47 - going to be in the correct location
18:48 - where we've set it up to be okay so
18:51 - we're just getting this item and then
18:53 - what we're going to do is we're going to
18:54 - get the C frame of that item relative to
18:57 - the placeholder Tycoon
18:59 - so back down here in our get relative C
19:02 - frame script we now have a path to get
19:05 - our item so we can say get item in
19:07 - Tycoon by ID Item ID
19:11 - and now we can get our relative C frame
19:13 - so local relative CF which is just a C
19:16 - frame relative to another location so by
19:19 - default in Roblox any C frame or
19:21 - position is relative to the origin which
19:25 - is a point in the world marked by zero
19:27 - comma zero comma zero so if you had a
19:30 - part in your game and you have a look at
19:33 - its position down here in the properties
19:34 - you can see its position is 88 comma 0.5
19:38 - comma 55 that's also at C frame and that
19:42 - just means it's 88 studs on the x-axis
19:45 - away from zero 0 0.5 stoods away from
19:48 - zero on the y-axis and 55 stoods away
19:51 - from zero on the z-axis and if I was to
19:54 - move this closer and closer and closer
19:57 - in each direction to the origin we would
20:01 - eventually get to zero zero zero which
20:04 - if you want I can set two right now and
20:07 - if we press F it's now positioned in the
20:09 - center of the world so all that we're
20:12 - doing is we are setting the origin of
20:15 - the world to be our Tycoon so then we
20:18 - know how far away each individual object
20:20 - is going to be we've got a C frame or
20:22 - position relative to the center of our
20:25 - Tycoon so that when we create if the
20:29 - player is in a different Tycoon which is
20:31 - positioned away from here or rotated
20:33 - away from here
20:34 - because we've got a relative C frame it
20:36 - doesn't matter how it's rotated how it's
20:38 - positioned these items and buttons are
20:41 - always going to be positioned relative
20:42 - to where the Tycoon is
20:44 - now don't worry if you can't get your
20:46 - head around this just yet it is quite
20:47 - complicated but obviously you're going
20:49 - to need it for our Tycoon so to get our
20:51 - relative C frame all we're going to say
20:53 - is placeholder Tycoon dot primary part
20:56 - dot C frame colon to object space
21:00 - with a lowercase T and an uppercase o
21:03 - and S for object in space we're just
21:06 - going to say item colon get pivot that's
21:09 - going to get the C frame of the item and
21:11 - then this function is going to generate
21:13 - a C frame which is relative to the
21:17 - primary part of the placeholder Tycoon
21:19 - so we can now return this relative C
21:23 - frame
21:24 - and then back to where we call this
21:26 - function
21:27 - well get relative C frame we're going to
21:30 - call it
21:32 - um in our unlock item down here
21:35 - where we've got our item colon pivot two
21:37 - we're going to
21:40 - firstly get our relative C frame so
21:43 - we'll create a variable for that
21:44 - relative CF equals get relative C frame
21:47 - Item ID so just to recap this is going
21:51 - to get the relative C frame between well
21:56 - so it's going to get the C frame of the
21:58 - item relative to the Tycoon okay so it
22:03 - could be something so that's just
22:04 - telling us how far away from the origin
22:07 - of our Tycoon
22:09 - or we can just say how far away from the
22:11 - Tycoon is the item okay and that's going
22:14 - to be in object space so it's going to
22:16 - be very simple like ten by one ten by
22:19 - Zero by two which would mean it's tends
22:22 - to delay on the x-axis and two studs
22:24 - away on the z-axis okay
22:26 - and then what we're going to do is using
22:27 - that we want to now convert this back to
22:30 - World space because we need to put our
22:32 - item somewhere in the world and we can
22:34 - convert this relative C frame back to
22:36 - World space because we always have to
22:38 - set our C frames in World space so World
22:41 - space is the opposite of relative space
22:43 - right because it's now relative to the
22:46 - origin of the world zero zero zero so
22:48 - you have to convert it back
22:50 - so we can say Tycoon well local World CF
22:53 - equals Tycoon dot primary part dot C
22:57 - frame colon to World space and we're
23:00 - going to put our relative C frame in
23:02 - there which is now
23:04 - and this should be um
23:06 - this should be the player's Tycoon uh
23:08 - which is lowercase my bad
23:10 - so we're getting their Tycoon and we're
23:12 - we're getting the C frame in the world
23:15 - for this specific position and we can
23:18 - then pivot the item to that world space
23:21 - put it into the Tycoon items folder and
23:24 - then return true to say that the item
23:27 - was successfully unlocked and then
23:30 - what we'll do is down here in our button
23:34 - touched function we can just say local
23:38 - success equals unlock item we're gonna
23:42 - pass the player and we're also going to
23:44 - pass the item id of the button so we can
23:46 - say button colon get attributes item id
23:50 - because don't forget we need the item id
23:52 - as well in our unlock item function
23:55 - so this success is either going to be
23:57 - true or false right depending on on how
24:00 - the function what happens in the
24:02 - function whether we've got enough money
24:03 - or not so we can say if not success then
24:06 - return end because we don't want to hide
24:09 - the button if it wasn't a success
24:11 - so we now should have a working button
24:16 - system let's go and check it out and
24:18 - again don't forget every time we make a
24:20 - change to your Tycoon make sure that you
24:23 - right click copy and replace the Tycoon
24:26 - that's in the replicated storage in fact
24:28 - before we do that let's just remove all
24:31 - of the items from the Tycoon when the
24:33 - game begins so that we can actually see
24:35 - the items appearing when you press the
24:37 - button we're going to need to clear out
24:39 - all of the items in the Tycoon first
24:41 - because obviously when you start the
24:42 - Tycoon you're supposed to have no items
24:44 - so let's create a comment say we're
24:47 - going to clear out all items from
24:48 - tycoons and we'll say for underscore
24:51 - comma tycoon in collection service now I
24:55 - know we haven't done this yet but we're
24:56 - about to do it Colin get tagged Tycoon
24:59 - we're going to tag every single Tycoon
25:01 - like we did with the buttons so that we
25:04 - can just easily get them all and then if
25:08 - Tycoon colon is descendant of replicated
25:12 - storage
25:13 - then continue end because obviously we
25:15 - don't want to destroy the Tycoon that's
25:18 - in replicated storage because that's our
25:20 - placeholder Tycoon
25:21 - uh so continue we'll just move on to the
25:24 - next one
25:25 - without doing anything but if it is a
25:27 - tycoon in the workspace that we do want
25:29 - to clear up we will say Tycoon dot items
25:32 - we're getting this folder which is
25:34 - within our Tycoon here Tycoon the items
25:36 - we're going to just clear out everything
25:38 - in here by saying colon clear all
25:41 - children and that will just wipe it
25:43 - clean so that when the game starts up
25:45 - this code's going to run and every
25:47 - Tycoon that's in the workspace that
25:49 - isn't the one in the replicated storage
25:50 - is going to have its items folder
25:52 - cleaned out
25:54 - so if we click on run for a sec you'll
25:57 - see that when the game begins
26:00 - well actually we need to tag it don't we
26:02 - so let's select our tycoon in the
26:04 - workspace head to the plugins tab again
26:07 - open up our tag window and if we just
26:11 - head over here to the right
26:13 - let's add a new tag Tycoon
26:16 - let's make sure it's selected
26:19 - and checked and make sure you do that
26:21 - for every other Tycoon if you've got one
26:23 - in your folder up here but again don't
26:25 - tag the one in the replicated storage
26:27 - the one in the replicated storage should
26:29 - be untagged so let's head back let's
26:32 - click on home and let's go to the Run
26:35 - button and let's see what happens here
26:38 - so I've clicked on run and you can see
26:40 - the conveyor has disappeared because we
26:42 - just wrote some code to strip out all of
26:45 - the items
26:46 - let's rejoin the game here
26:48 - and let's see what happens when I step
26:51 - on the button okay nothing seems to be
26:53 - happening let's go to the output window
26:55 - it says we've got an error that's all
26:57 - good so the error is on line 59 of the
27:01 - script
27:03 - line 59 which is where we get the item
27:05 - attempt to index nil with clone so it's
27:09 - saying that this part whatever's
27:11 - returned from this function is currently
27:13 - nil now let's just have a look at our
27:16 - get item function that looks all good I
27:19 - think what the problem is here is that
27:23 - nothing is being returned from here so
27:26 - I'm going to take you through how I
27:28 - would usually debug a problem like this
27:30 - so
27:31 - if we just go back here to where we're
27:33 - saying unlock item
27:35 - obviously this item ID is
27:38 - it must be nil Okay so we've passed it
27:42 - to this function called unlock item so
27:45 - if we head down here to where we say
27:48 - button get attribute Item ID so I think
27:51 - the problem is that we haven't supplied
27:53 - an attribute for Item ID to the button
27:56 - that's my bad so what we need to do is
27:58 - we need to for every single button we
28:01 - need to have an ID
28:04 - an item id attribute so let's create an
28:07 - attribute and we'll call it Item ID
28:12 - item id let me just zoom in for you here
28:15 - there you go item ID
28:17 - and let's set this to whatever the ID of
28:21 - the conveyor is so the conveyor
28:23 - corresponds to this button and it has an
28:25 - ID of one so we're going to go and
28:28 - select our button for this conveyor and
28:31 - set the ID to the
28:33 - ID of the conveyor which is one
28:35 - and now that should work so for every
28:38 - button you need to set its item id
28:41 - attribute to be the ID of the item that
28:44 - you want to unlock okay otherwise you're
28:46 - going to get errors like that but if you
28:47 - do get an error don't worry it's just
28:49 - something that every coder has to go
28:51 - through it's just a matter of problem
28:52 - solving when you're problem solving
28:54 - skills will get better the more you do
28:56 - this it's all about understanding what's
28:58 - going on so let's try this again
29:00 - okay we've got another error this time
29:02 - on a different line so script 43 let's
29:06 - head back on to line 43 attempt to index
29:10 - nil with C frame so this looks like uh
29:15 - it is going to be here because in the
29:18 - placeholder Tycoon
29:20 - I don't think we set a primary part
29:22 - which again is my bad so let's just go
29:25 - into the Explorer here and just right
29:27 - click and delete
29:28 - this Tycoon from the replicated storage
29:30 - because we're going to make some changes
29:32 - to the one in the workspace all we're
29:34 - going to do is we're going to click on
29:35 - our Tycoon here
29:37 - and in the properties we're going to
29:40 - select primary part now this is very
29:43 - important you don't want to click
29:44 - anywhere else for now you want to make
29:45 - sure you've got this cursor which has
29:47 - the part with the red and black arrow on
29:49 - it and then we're going to set a primary
29:53 - part which is going to be like a point
29:55 - of reference for our Tycoon so I'm going
29:58 - to go and set it in the in the
29:59 - decorations folder I'm going to set it
30:02 - as this base part down here okay so what
30:05 - I'm just going to do is I'm just going
30:06 - to use the select tool I'm going to hold
30:08 - down Alt
30:09 - and I'm going to select the base down
30:13 - here the base part of our Tycoon can you
30:15 - see it there so it's the floor it's
30:17 - going to set the name of this down here
30:19 - in the properties window to be base and
30:21 - then in the Explorer I'm going to go
30:23 - back to my Tycoon I'm going to then go
30:25 - back to the properties and set the
30:28 - primary part
30:30 - B
30:31 - the base okay so I've now set the
30:34 - primary part this is just a point of
30:36 - reference so that we can
30:38 - um when we set our relative C frames
30:40 - it's going to be relative to our base
30:42 - because the base is the primary part
30:45 - so let's go back in again I do apologize
30:47 - for a few of these mistakes obviously
30:48 - I'm working from a place that I've
30:51 - already created on and I'm just
30:52 - rewriting the code out so I may skip one
30:54 - or two steps but
30:56 - um okay looks like we have another
30:57 - problem
30:59 - oh yeah I forgot to um I forgot to copy
31:01 - the Tycoon didn't I so take your Tycoon
31:03 - now right click copy and then we're
31:06 - going to put it back into the replicated
31:08 - storage okay otherwise you'll get one of
31:10 - these infinite yield possible errors so
31:13 - I'm keeping these errors and you know
31:14 - warnings in I'm not skipping them over
31:16 - in the tutorial because you're obviously
31:18 - going to have some as well and it can be
31:19 - helpful to watch me debug them rather
31:22 - than me hiding them but there we go I
31:24 - step on the button and it's generated my
31:27 - conveyor for me so there we go I think
31:30 - the last thing we're going to do here is
31:32 - just take our button
31:35 - and in this for loop we're going to say
31:38 - button dot billboard GUI
31:41 - and we're going to say dot text label
31:44 - dot text equals
31:47 - and then we're going to say the name of
31:51 - the item that we're going to unlock and
31:52 - we need to get that somehow so let's
31:54 - have a look and at our
31:57 - functions here we can use the get item
31:59 - function so get item go button colon get
32:02 - attribute item ID
32:05 - we can say dot name and then we can put
32:07 - a we can concatenate this with two dots
32:10 - and a string with a hyphen and then
32:12 - another two dots and we can say button
32:15 - colon get attribute actually
32:19 - we'll say uh uh let's just let me think
32:23 - for a second here we're going to say uh
32:27 - in fact let's create a variable for the
32:29 - item local item equals
32:33 - uh in fact we'll create we'll create an
32:36 - item id variable
32:38 - we'll then create an item variable for
32:41 - get item
32:43 - Item ID
32:45 - and then we can change the text to be
32:47 - item.name
32:50 - and we can say item get attribute cost
32:54 - like this okay so this is going to
32:55 - format the buttons text to say item's
32:58 - name hyphen and then the cost as well
33:01 - and we just use these two dots to
33:03 - separate the strings and the uh and
33:05 - these other strings here
33:07 - so if we now click on play
33:10 - we should
33:12 - see that it says conveyor 50. okay and
33:14 - you can add a dollar sign as well to the
33:16 - string if you want that's no that's no
33:18 - problem but and you can also see up here
33:20 - in the top right that our money has gone
33:22 - down from 500 to 450.
33:26 - now other thing that we need to do
33:28 - finally is we need to clear up the
33:30 - Tycoon when you leave the game because
33:31 - we want to let another player take your
33:33 - Tycoon so we can do this very simply by
33:36 - saying a Game Stop players dot player
33:40 - removing curl on connect function layer
33:44 - and inside of here we want to get the
33:46 - player's Tycoon so local Tycoon equals
33:49 - get Tycoon player and we can clear out
33:53 - their items folder by saying Tycoon got
33:55 - items colon clear all children that will
33:58 - just reset the Tycoon and we also want
34:01 - to make the buttons visible again so for
34:03 - underscore comma button in Tycoon dot
34:06 - buttons colon get children
34:09 - do
34:11 - button dot transparency is zero which
34:14 - will make it visible again and button
34:16 - dot billboard GUI dot enabled equals
34:20 - true that will just set the uh the text
34:24 - above the button to be visible again
34:26 - and
34:28 - and that should be everything now we
34:30 - haven't done saving cash or items in the
34:34 - Tycoon however
34:36 - a lot of tycoons are like this they
34:38 - don't save anyway however I'll probably
34:40 - make another video soon on how to make
34:42 - your Tycoon save this has been a basic
34:45 - tutorial on how to make a tycoon I'll
34:47 - also be making a full course on how to
34:49 - make a full tycoon in the future
34:51 - and let me just show you how to add more
34:53 - items if you're a little bit confused so
34:55 - let's go and add another model here from
34:58 - free models so let's just do uh let's
35:02 - just insert something like a let's see
35:06 - like a sign okay let's insert a sign so
35:09 - I've inserted my sign and the first
35:12 - thing I need to do is I need to add two
35:15 - attributes one for the cost and one for
35:18 - the ID so we'll do cost
35:20 - down here edit to a number and we also
35:24 - need just like in the conveyor we need
35:26 - an ID as well so cost and id id there we
35:31 - go so this is going to be number two
35:32 - because it's the second one comes after
35:34 - the conveyor if you were to add another
35:35 - item it'd be ID3 or id4 id5 just make
35:39 - sure that they're all unique and set the
35:41 - cost as well so this could be a hundred
35:43 - now that I've got my sign attribute
35:45 - setup I'm going to just in the um in the
35:48 - Explorer I'm going to drag it under the
35:50 - items folder
35:52 - and then I'm going to right click
35:54 - duplicate and put the duplicate into the
35:57 - items folder in replicated storage and
36:00 - lastly I'm going to take the button over
36:02 - here I'm going to right click and
36:05 - duplicate that as well I'm going to use
36:06 - the move tool just to drag it over here
36:09 - and then with my button selected I'm
36:11 - going to head to the properties window
36:12 - I'm going to change the item ID from 1
36:15 - to 2 because the sign is id2 id1 is for
36:20 - the conveyor we want this button to be
36:22 - for the sign and then that should be
36:26 - good to go so let's just close the
36:28 - toolbox and let's go into the game and
36:32 - you can see it now says sign for 100 and
36:34 - conveyor for 50. so I'm going to buy my
36:36 - conveyor now watch my money over here as
36:39 - I step on it let me just see if I can
36:40 - position the camera I don't think I can
36:42 - unfortunately okay I'm going to step on
36:44 - it anyway and you can see it's gone down
36:46 - to 450 and I've now got my conveyor and
36:50 - aha we have another problem I've stepped
36:53 - on my sign and it's saying attempt to
36:55 - index nil with get pivot that's because
36:59 - that's because in line 43
37:03 - it's this item variable is nil which
37:07 - means that this function get item in
37:10 - Tycoon by ID has returned nil
37:14 - so
37:15 - this means that the item must not be in
37:19 - the placeholder Tycoon so also what you
37:21 - need to do is every time we make a
37:23 - change to your Tycoon you need to take
37:25 - the entire Tycoon right click copy and
37:28 - then replace the one in replicated
37:31 - storage
37:32 - with this new one and if you have any
37:35 - other tycoons in the map you'll also
37:37 - need to do the same thing so you need to
37:40 - make sure they're all the same version
37:41 - but now we can have all sorts of
37:43 - different tycoons rotated in all sorts
37:45 - of different ways and they will all work
37:48 - it will just be assigned one when you
37:49 - join the game we'll just have to work
37:51 - out which one we've been assigned and
37:53 - we'll be able to figure out because okay
37:55 - it's this one but you can see I can
37:57 - purchase my sign purchase my conveyor
37:59 - and hopefully
38:01 - I can't yeah we go I can't purchase
38:03 - anyone else's uh stuff because this
38:06 - isn't our Tycoon uh so there you go
38:09 - that's how to create a tycoon in Roblox
38:10 - if you enjoyed this video please leave a
38:13 - like don't forget to subscribe and again
38:14 - check out the full courses which will be
38:17 - coming soon link to that will be in the
38:19 - description down below so I'll see you
38:20 - in the next one