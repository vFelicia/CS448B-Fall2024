00:00 - in this video I'm going to show you how
00:01 - to add different sound areas to your
00:04 - game so different music will play if you
00:07 - go to a different area so if we go over
00:09 - here into the desert area you'll be able
00:11 - to hear the music but if we go over here
00:16 - to the water section you'll hear
00:22 - different music and if we head over here
00:25 - by the cars you have something different
00:32 - as well so let's get started so the
00:35 - first thing that you don't want to do is
00:37 - go into the workspace here and create a
00:39 - folder okay this is going to be where we
00:42 - store all of the parts and these parts
00:46 - are going to show the regions where our
00:49 - sounds are going to play okay so I'm
00:52 - gonna have three regions but if you want
00:54 - more than that then you can keep adding
00:56 - these parts as I show you now so in side
01:00 - of the folder while at first we'll go
01:02 - ahead and just name it sound regions
01:05 - like this and once we've done that we
01:09 - can now insert a part so click over here
01:12 - at the top click on parts and then press
01:15 - F to teleport your camera to it now the
01:18 - way this is gonna work is we're going to
01:20 - use this part and we're gonna drag it so
01:22 - that it covers the entire region okay so
01:25 - if we want it to cover this desert area
01:26 - then I can just move it and scale it so
01:31 - that it covers the entire desert area
01:34 - here and as well as that I'm gonna make
01:37 - sure that it covers it on the y-axis as
01:40 - well so everything in the region is
01:41 - completely covered even underneath it as
01:44 - well
01:44 - so if you go you know on higher ground
01:46 - then you're still in in the region here
01:49 - okay so this is gonna be our sound
01:52 - region for the desert area so give it a
01:55 - name so I'm gonna call it a desert area
01:59 - I'm gonna make it anchored set can
02:02 - collide two contracts so the players can
02:04 - walk through it and then you can set
02:07 - transparency to one but I want to keep
02:10 - it as zero for now just to show you it
02:12 - working
02:12 - now once you've done
02:14 - if you want to set up another region
02:15 - then we can just duplicate this part and
02:18 - drag it somewhere else
02:19 - you can also whoops you can also scale
02:22 - it down so we can fit it on and then
02:25 - just scale it out again to cur the
02:27 - entire region so the music will only
02:30 - play if the player is inside of this
02:32 - part so just drag it down and I'm gonna
02:35 - make it there okay so if they're in the
02:40 - water or if they're near it then they're
02:42 - gonna get some different music played so
02:44 - this is going to be called the water
02:45 - area now the names that you call it up
02:48 - to you
02:48 - but I'll keep them simple and
02:50 - rememberable so you know which region is
02:52 - which and lastly we're going to do it
02:54 - this area over here so I'm going to
02:56 - duplicate the part again I'm going to
02:57 - drag it over here and if it goes a bit
03:01 - funny a different rotation don't worry
03:03 - just scale it down you can hold down
03:05 - shift as well when you're scaling and
03:07 - make it flat and then just cover a new
03:11 - region here okay so I'm just going to
03:14 - make sure it covers everything and we'll
03:18 - drag it below the base as well
03:19 - so that everything gets covered by it
03:21 - and a bit above as well okay so that's
03:24 - the third region done and I'm going to
03:26 - call this region sand area okay and just
03:29 - like the other two regions make sure
03:31 - that it's anchored and can collide is
03:32 - set to false so unchecked okay now that
03:35 - we've done that we can go and start
03:37 - scripting this now so what we're going
03:39 - to need is we only need a sound for each
03:41 - area so what I'm going to do is I'm
03:43 - going to go into the starter - you are
03:47 - here and I'm going to insert a sound
03:49 - okay what all also do is we'll insert a
03:52 - folder as well so we can store all of
03:53 - these sounds so the folder is going to
03:55 - be called region region sounds or sound
04:01 - regions let's call it sound regions
04:03 - because that's why we called our with a
04:04 - folder so for each sound region here
04:08 - we're gonna have a sound in this folder
04:10 - in our starter GUI which is named the
04:13 - same as the part okay so the sound
04:16 - that's going to be played in the desert
04:17 - area is going to be called desert area
04:20 - okay so name it desert area and it has
04:23 - to be spelled correctly as well so
04:25 - exactly the same as desert area appear
04:27 - and
04:27 - make sure has a capital D in capital a
04:29 - so desert area and drag it into your
04:31 - sound regions folder in started GUI now
04:34 - we're going to need to find a sound
04:36 - first so I'm going to go to the roblox
04:38 - develop page I'm gonna click on or
04:40 - create I'm going to click on library
04:42 - then audio and I'm going to search for a
04:44 - sound so we've got Kevin MacLeod here
04:46 - who provides some copyright free music -
04:50 - so we're out out to him thanks for
04:52 - that's what that so I've chosen a few
04:54 - and I'm just going to copy the ID here
04:57 - so the the numbers after library I'm
05:00 - gonna copy those I'm just going to paste
05:02 - it into the sound ID property here okay
05:05 - and that is going to roblox is going to
05:08 - find the sound and it's going to come up
05:09 - saying RBX
05:10 - asset ID and if you play it you should
05:13 - be able to hear it
05:14 - okay I think it's I think my sounds can
05:17 - be muted but it will play when we go
05:20 - into the region when we script it soon
05:21 - so I'm just going to do the same thing
05:23 - for the other two regions so we're going
05:25 - to just duplicate this by pressing ctrl
05:28 - D twice now this one's gonna be called
05:30 - the sand area because that's the area
05:32 - over here and the water area alright so
05:36 - you need to make sure the sound names
05:38 - are exactly the same as what you've
05:40 - named the parts over here okay so now
05:42 - we've done this I'm gonna add a
05:44 - different sound ID to each sound so they
05:47 - all play different things okay there we
05:52 - go okay so now they all play different
05:54 - sounds we can begin scripting them so
05:56 - let's create a local script in started
05:59 - GUI here and this is where we're going
06:01 - to just code the music to check if the
06:03 - player is within that region so we're
06:05 - going to be using a region 3 so that
06:08 - basically checks a region from two
06:11 - points and if a player is inside of the
06:13 - region we can play some music so firstly
06:15 - we're going to find a variable for the
06:17 - sound regions folder that is in the
06:20 - workspace for our parts so local sound
06:24 - regions and then we'll put work space so
06:27 - we know which one it is which folder is
06:28 - either in the workspace with a starter
06:30 - GUI equals game dot workspace dot sound
06:34 - regions okay you could say actually we
06:38 - will say wait for child hip come on wait
06:41 - for child sound regions okay so that
06:45 - just make sure that the sound regions
06:47 - have loaded in before we actually start
06:49 - running the code we're also gonna have a
06:51 - variable here for found and we're gonna
06:54 - set that to false to begin with but
06:55 - we're doing this because we're gonna
06:58 - check through each region and once we
07:01 - found a player in one of those regions
07:03 - will set found to true and then once
07:06 - we've looped through them all if it is
07:07 - true then we won't stop them from
07:10 - playing okay so and we'll either start
07:13 - the sounds or stop them from playing and
07:14 - this will make sense soon so we're going
07:17 - to create a while loop okay so a while
07:19 - loop just runs code indefinitely so
07:23 - forever until something specific happens
07:25 - so we're gonna say well wait one do and
07:29 - anything inside of this one this while
07:31 - loop is going to just repeat over and
07:33 - over again with a one-second delay
07:35 - okay between each time it repeats so
07:38 - we've got the weight one here which is a
07:40 - one-second wait so the first thing we're
07:42 - going to do is we're going to do a four
07:44 - loop through each sound region so for I
07:48 - comma V in pairs this is how we do a for
07:50 - loop and then we're gonna say sound
07:52 - regions work space and to get all of the
07:56 - regions all these parts inside of that
07:58 - folder we can say : gets children all
08:00 - right now get children returns a table
08:03 - with all of those those parts in there
08:06 - okay so I'm gonna say do after that and
08:08 - I is the number of iterations or times
08:12 - it's looped v is the current part which
08:15 - is looping through and if we do
08:17 - something to V is going to happen it's
08:19 - going to do that to the current part of
08:22 - its looping through so for each part we
08:24 - want to check to see if the player is in
08:27 - it okay so we then I'm gonna just
08:29 - firstly set found it to false because if
08:32 - we set it to true previously we want to
08:34 - reset it now alright and it will all
08:36 - make sense soon so it's all found stuff
08:38 - and but we're gonna say local region
08:41 - g'loona create a region 3 now a region 3
08:44 - is it's it's kinda like a cube ok so
08:49 - imagine this is this is our region it's
08:51 - made a pervert one point over here and
08:53 - another point over
08:55 - here okay and from those two points it
08:57 - can create a cube and then we can see if
08:59 - a player is inside that region so we're
09:01 - gonna use these parts these sound
09:03 - regions to create a region 3 and then we
09:06 - can check to see if players are within
09:08 - bounds because touched events they can
09:10 - be a little bit you know they they're
09:13 - not the best for doing this sort of
09:14 - stuff region 3 is the best way to detect
09:18 - if a player is currently in a region so
09:21 - we can say local region equals region 3
09:24 - dot new and then we need to define the
09:28 - two points so as I said earlier two
09:30 - points quite a cube and to get these
09:33 - points from the parts we can use their
09:35 - position values and we can take away
09:37 - half of the size from the position and
09:39 - that will give us both both edges in
09:44 - case of both points so the first point
09:46 - is going to be the current position of
09:47 - the part take away its half of its size
09:51 - so you can say V dot position minus V
09:54 - dot size over 2
09:56 - all right and that's just going to be
09:57 - the first point and then the second
09:59 - point is going to be a V dot position
10:02 - plus and then in brackets we can say V
10:06 - dot size over - there we go real size so
10:11 - and they're both the same
10:12 - apart from we're subtracting here and
10:14 - ABing and on the second point so it's
10:17 - going to create two points and from
10:18 - those two points the region will be
10:20 - created so what we can then do is check
10:23 - to see if there's any players inside of
10:25 - that region so to do that we can say
10:27 - local parts because I want to get the
10:29 - parts in a region so the players body
10:31 - parts and to do this we say game clock
10:33 - workspace : find parts in region 3 with
10:39 - white list okay because we're only
10:42 - looking for the players character no one
10:45 - else but usually find parts in region 3
10:47 - would return everything in there so it
10:50 - would even return the the cars and the
10:52 - bikes but we don't want that we only
10:54 - want to see if the players characters in
10:56 - there right or any of their body parts
10:57 - so firstly we say the region that we're
10:59 - checking so the region we just define as
11:01 - a variable
11:01 - now they were gonna do a comma and we're
11:03 - going to just say the all of the players
11:06 - body parts so to do that we can say game
11:08 - dot players
11:09 - a local player because that is the the
11:12 - player that this script is going to run
11:13 - on cuz it's a local script and each
11:15 - local script runs on on each player's
11:17 - computer so we can get the character
11:19 - from local player and we can say :
11:21 - get descendants so get descendants will
11:25 - return a list of every single item
11:29 - inside of the character again no matter
11:31 - what if it's nested in another part so
11:33 - if we were to say get descendants on
11:35 - this model here instead of just
11:36 - returning the children it would return
11:38 - every child inside of of each part here
11:42 - and if there was say something else in
11:44 - this mesh it would return that as well
11:46 - so literally everything in that model in
11:48 - the place model will be checked to see
11:51 - if it's in the region so we then because
11:54 - the parts sorry find parts in region 3
11:57 - returns a table we then need to loop
11:59 - through that table and see if it is a
12:03 - part from the player's body ok so we can
12:07 - say for underscore because we don't need
12:11 - the the iterator in this case because
12:15 - we've already said what is over here
12:16 - we've got a nested for loop we can say
12:19 - for underscore comma but then because we
12:21 - need to know the part which were
12:22 - currently looping through cause we're
12:24 - going to loop through them all one at a
12:25 - time we're gonna say parts although it
12:27 - is up to you in pairs and we're going to
12:30 - loop through the parts table do so this
12:33 - is gonna loop one by one through the
12:37 - parts table and then we want to see if
12:41 - this part is a child of our player ok so
12:46 - we can say find first ancestor and that
12:49 - will look for the first parent of that
12:54 - of that part which is called a player's
12:57 - name ok so let me just give you an
12:59 - example here if we head into the game
13:01 - and I just say I get my character here
13:04 - and we're looking at my original size
13:08 - value here and fat we'll do this right
13:10 - shoulder motor 60 here and if we say
13:13 - find first ancestor of album blocks ok
13:16 - well it's going to look for its first
13:17 - parent which is the rights of prom and
13:20 - it's going to say alright is this called
13:21 - Alvin blocks
13:22 - okay no it's not so we're gonna go to
13:24 - the next pattern okay so this part is a
13:26 - child off the model called album blocks
13:29 - okay and there we go we found it so the
13:32 - first ancestor called album blocks is
13:34 - this model okay so we need to say if
13:38 - parts come on fine first ancestor so
13:42 - fine first parent pretty much that is
13:44 - called a specific name and that name is
13:46 - going to be a player's name so game to
13:49 - players that local player name then so
13:52 - if if there is a a player found in that
13:54 - region in that table because this part
13:57 - here is a part found in the region
14:01 - because it's returned from pine parts in
14:03 - region 3 then we can just print that a
14:06 - player was found in the region and we
14:10 - can set found to true because we found a
14:13 - player in a region ok and then we can
14:16 - break out of this for loop because we've
14:18 - already found a player we don't need
14:19 - extra confirmation from the other body
14:21 - parts to say that there there there ok
14:23 - else however else if they are not there
14:29 - is not an ancestor in that region for
14:31 - any of the parts then found it's just
14:34 - gonna keep being set to false and it
14:36 - will never be true right and because
14:39 - then we can print player was not found
14:44 - in region okay so it wasn't found in the
14:51 - region for that specific parts okay so
14:54 - the found will be always be set to false
14:56 - and then outside of here outside of this
14:59 - this for loop we can say if found is
15:02 - equal to true then we want to start
15:05 - playing some music okay and so what we
15:09 - can do is we can go to the players
15:12 - player GUI because everything in the
15:14 - started GUI is replicated the player GUI
15:16 - we can look into this sound regions
15:18 - folder and we can just find the sound
15:20 - which has the same name as that region
15:23 - okay of of thee because it's it's
15:25 - getting a little children for the sound
15:27 - regions folder in the workspace we can
15:29 - find the name of that region and just
15:31 - played the sound with the same name so
15:33 - we can say if
15:35 - and because they scripts stop parents
15:38 - and we'd say dots at sound regions and
15:42 - then we can say in square brackets the
15:44 - dot name because that's the same name as
15:46 - the region part dot is playing is equal
15:49 - to false so if it's already playing then
15:52 - so if it's already playing then we won't
15:55 - we won't touch it because you know it's
15:57 - all it's already playing
15:57 - and we don't want to restart it again if
15:59 - it's not though if it's not playing
16:01 - already we can say scripts not parents
16:04 - stop sound regions and say V dot name
16:07 - I'm gonna say code on play and that will
16:09 - just start playing that sound and then
16:11 - we can break break out of this for loop
16:14 - up here because we don't want to check
16:16 - the other sound regions because if a
16:18 - player is in one region then there's no
16:20 - way they're gonna be in another region
16:22 - at the same time okay unless they're
16:23 - there together right but they're not so
16:26 - and it's all good so we've broken out of
16:29 - here else if they haven't been found
16:33 - let's just put an else here then we're
16:36 - gonna just stop the current music okay
16:38 - so script stop parent well we're gonna
16:40 - stop playing the music for that specific
16:43 - region if they're not already in it okay
16:44 - if it even if it wasn't playing already
16:46 - we can say script top pair n't not sound
16:48 - regions and we say be not name :
16:53 - stop okay and like this all you need to
16:56 - do the sound regions so let's go ahead
16:58 - and see if it works we're gonna go and
17:00 - I'm just play here so we're in the
17:04 - middle of the map and I'm going to give
17:06 - myself a bit of walk speed as well so
17:09 - that we can just quickly get round them
17:10 - out I'm gonna start 50 and let's go so
17:14 - run over here and let's see if the music
17:18 - starts playing turn up my sound
17:21 - [Music]
17:23 - check out the output there we go please
17:26 - play then it will stop and if you go
17:32 - into another region into another region
17:44 - there we go it's playing over here as
17:46 - well
17:47 - so there we go we've done our sound
17:50 - regions now you don't have to add these
17:52 - prints here you can comment them out and
17:54 - that's what I'm gonna do because we know
17:56 - for sure that it works now and I've done
17:58 - a white one because these Region three
18:00 - calculations if we do them all the time
18:02 - then they might start to lag a bit but
18:04 - and a one second delay is perfectly fine
18:07 - and because it stops the music you know
18:10 - the the maximal time that music can be
18:13 - playing if you've left the region is a
18:15 - second okay but that's all good and
18:18 - there we go we've just created sound
18:20 - regions so you can now set your parts to
18:23 - be fully transparent and if we then head
18:26 - in again it will look more realistic
18:29 - okay there we go
18:31 - playing leave it it stops playing so
18:34 - there we go guys we've just created
18:35 - sound regions in a roblox studio if you
18:38 - enjoyed this video please leave a like
18:39 - don't forget to subscribe for more
18:42 - videos and if you'd like to take the
18:43 - source code from this video you can
18:46 - become a channel member by clicking the
18:48 - join button underneath the video next
18:50 - subscribe button or by going to album
18:52 - blocks comment / join thanks for
18:55 - watching again and I'll see you in the
18:57 - next video