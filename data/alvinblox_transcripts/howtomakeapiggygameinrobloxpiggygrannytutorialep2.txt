00:00 - welcome back to episode 2 in my piggy
00:02 - series now I just want to say that if
00:04 - you've been struggling with the first
00:06 - part or maybe in the future episodes
00:08 - your game doesn't work for some reason
00:10 - probably what most likely due to the
00:13 - fact that you have typed it out
00:15 - incorrectly and you haven't noticed that
00:17 - you have made a typo then I have created
00:21 - on my website a FAQ frequently asked
00:24 - questions section I'll leave a link to
00:26 - it in the description and I'll probably
00:28 - be answering some of your questions with
00:30 - this link to the page because there's
00:33 - some great answers to the most
00:35 - frequently asked questions such as my
00:38 - status bar isn't working and I can
00:39 - confirm that it does work because I have
00:42 - actually followed this tutorial myself
00:44 - and yes it does work so make sure that
00:47 - you have put your status value in
00:49 - replicated storage and you've given it
00:51 - the name status make sure that you are
00:53 - calling your intermission function from
00:55 - your game logic scripts that you've
00:57 - supplied the number of seconds to count
00:58 - down from and you have not put a space
01:00 - between the function name and the
01:03 - brackets afterwards you also need to
01:06 - make sure you've got the capitalization
01:07 - correct so for example a lot of people
01:10 - have been saying status not value but in
01:13 - lower case you can't do this you have to
01:15 - have a capital v for value and this is
01:18 - the sort of thing that the script it
01:19 - might not say that you forgot to
01:21 - capitalize something so you need to make
01:23 - sure that you've got your capitalization
01:25 - just as I have done it in my video okay
01:28 - because a lot of people will just go
01:30 - straight to the description say it
01:31 - didn't work when it does work and
01:33 - they've just not capitalized something
01:36 - or they've made a typo but they haven't
01:38 - realized it so you really need to check
01:40 - your script over to debug it but do
01:43 - check out this page on my website for
01:45 - more information on how to fix those
01:47 - books if you've got if you've got one
01:49 - I'm just trying to give you the best
01:50 - learning experience possible so that you
01:52 - can create your piggy game with ease I
01:55 - know there's also a lot of people who
01:56 - want to know how to make their custom
01:58 - piggy avatar I will be uploading a
02:00 - separate video showing people how I made
02:02 - the piggy character but today we will be
02:05 - choosing the piggy we will be loading in
02:08 - that avatar to the Piggy's character so
02:11 - they look like the piggy and also
02:13 - teleport
02:13 - them to their little hideout room before
02:16 - the round starts then teleporting them
02:18 - into the round after twenty seconds so
02:20 - they wake up and finally we will
02:22 - activate the doors we will make the
02:23 - doors work so that you can click them to
02:25 - open them up and move around the map the
02:27 - reception to the first video has been
02:29 - phenomenal you guys have been loving it
02:31 - we've got nearly 20,000 views in the
02:33 - first 24 hours which is absolutely
02:36 - incredible so if you are enjoying the
02:37 - series so far don't forget to like the
02:39 - video and click the subscribe button and
02:41 - much appreciate it now let's get
02:43 - straight into the second episode so if
02:47 - the player does not have in menu in
02:49 - their character or in their player
02:51 - objects then we're going to insert that
02:53 - player their player object into the
02:57 - contestants table and now after that for
03:00 - loop is finished running our contestants
03:02 - table should be full up of all of the
03:04 - players that are ready to play so it
03:06 - could look something like this so we've
03:08 - got three players player objects not
03:11 - names because it's actual objects in
03:13 - game door players so Alvin blocks
03:14 - selects key and nacho 88 there are three
03:17 - players for example that are in the game
03:19 - now we can choose one of those players
03:22 - to be the piggy so let's create a
03:25 - function inside the round module and
03:28 - we're going to call it
03:30 - choose piggy so again you've seen it
03:34 - before function module choose piggy and
03:37 - then the parentheses on the end and then
03:40 - the end at the bottom now very very
03:42 - simple what we're going to do is we're
03:43 - going to pass to this function a table
03:45 - and that's hey what was gonna be the
03:47 - contestants so let's just call it
03:49 - players here you can call the argument
03:51 - whatever you want is the data that is
03:52 - path to that argument variable there so
03:56 - let's just call the function and say
03:59 - round dot selects sorry choose piggy and
04:03 - then we're gonna pass the contestants
04:04 - table which now will be full up with all
04:07 - the players in the game then let's go
04:09 - back to the round module and now because
04:11 - our players are gonna be that
04:12 - contestants table we're gonna do the
04:14 - same thing again that we did with the
04:15 - map so we're going to firstly create a
04:17 - random a random seed you can call it
04:20 - whatever you wanna call it random
04:22 - objects
04:23 - rendom new waiting another seed and then
04:26 - what we're gonna do
04:27 - choose a random player to be the piggy
04:29 - so we're gonna choose a random item out
04:31 - of that table so a local chosen piggy
04:35 - equals the players table and then we're
04:38 - gonna select with the square brackets
04:40 - again random object : next integer and
04:46 - it's gonna be between 1 comma and
04:49 - however many players there are so hash
04:50 - plug players and that's going to pick a
04:52 - random player a player object so it
04:54 - could be for example album blocks game
04:58 - that works with to album blocks there
04:59 - there player objects so then what we
05:01 - need to do is need to return that object
05:03 - back to the script so return chosen
05:05 - piggy and we've now just chosen our
05:07 - piggy and we're returning their object
05:09 - back to this function so we have to have
05:12 - it as a variable so local chosen piggy
05:15 - let's say local chosen piggy equals
05:21 - round dot chosen picky and that's
05:23 - calling the function to choose around a
05:25 - piggy we're passing the contestants and
05:26 - it's returning to us the object of this
05:28 - chosen piggy
05:29 - so chosen piggy is going to be an actual
05:31 - player in the game that is in that
05:32 - contestants table now we want to
05:36 - separate that piggy from the other
05:37 - contestants because for example we want
05:40 - to teleport all of the contestants to
05:42 - the map for 20 seconds before we
05:43 - teleport the piggy so we need to
05:45 - separate them so what we're gonna do is
05:47 - we're going to remove the chosen piggy
05:48 - from the contestants table so the only
05:50 - people in the contestants table are
05:51 - gonna be the people aren't the piggy ok
05:53 - the other players so we're going to use
05:57 - another for loop we're going to loop
05:58 - through all the contestants in the rack
06:00 - in the game ok and so for IV in pairs
06:04 - and we're looping through the
06:05 - contestants
06:06 - if the player object V is equal to the
06:10 - chosen picky so if if the current player
06:12 - that we're looping through is the same
06:13 - player as the chosen piggy that we just
06:15 - chose then we're going to remove from
06:17 - the table contestant so we're gonna
06:19 - remove the object that's the index I
06:22 - because remember I said the tables have
06:25 - indexes so the first objects can be
06:27 - index 1 this can be indexed - it's gonna
06:30 - be index 3 so we're gonna if we loop
06:33 - include the third player and we found
06:35 - out that they're the piggy
06:36 - then we want to remove from the table
06:38 - the third object so I is going to be 3
06:40 - so we're removing the third
06:41 - object from the contestants table using
06:43 - table don't remove but so again what
06:49 - we're going to do is going to loop
06:50 - through all the contestants in the game
06:52 - so this time we're not looping through
06:53 - game drop players : get players we're
06:55 - looping through the contestants because
06:56 - we've now got our list of players who
06:59 - aren't in the menu so we're gonna say 4i
07:00 - comma V in pairs contestants we don't
07:05 - need to use get children because it's a
07:06 - natural table object whereas get players
07:08 - will convert the players into a table
07:11 - itself and because the in pairs loop
07:13 - will only loop through a table so think
07:15 - of it as we're looping through all of
07:17 - these players here in this table this is
07:19 - an imaginary table and the players in it
07:21 - could be different of course so I is
07:22 - gonna be their index because each object
07:24 - in the table will have its own index
07:26 - like its own number so this is the first
07:27 - object so I would be one this is the
07:29 - second object this is the third object
07:31 - so the index is just the number of where
07:34 - the the object currently is in the table
07:36 - so this would be the second item and V
07:38 - is the value so it would actually be
07:40 - game dot players to have in blocks or
07:42 - game to play so let's key so for that
07:44 - player which is gonna be V we need to
07:47 - see if V is equal to the chosen piggy so
07:51 - if they are the piggy then we're gonna
07:52 - remove them from the table so table
07:54 - don't remove we're going to remove from
07:56 - the contestants table the their index so
08:00 - if they're the third player we're going
08:01 - to remove from the contestants if
08:03 - they're the third object in the table
08:05 - we're going to remove the third object
08:06 - from the table because you can't just
08:08 - remove a certain person from a table you
08:11 - have to remove that their index so that
08:14 - will remove them from the table
08:15 - okay so we've looped through all the
08:19 - contestants check to see if they're the
08:21 - piggy and if we have found the piggy in
08:23 - the contestants table we're removing
08:25 - them because we only want the
08:26 - contestants that aren't the piggy to be
08:28 - in that table because we've now got our
08:30 - own reference to the piggy in this
08:33 - chosen piggy variable okay next we're
08:37 - gonna dress up the piggy to put them in
08:38 - there nice piggy outfit so we're gonna
08:40 - create another function in the round
08:41 - module it can be very very simple so I'm
08:45 - calling it module dress piggy and I'm
08:47 - then passing through the chosen piggy
08:50 - because we need their player object so
08:51 - that we can change the character
08:53 - what we need to do is firstly get that
08:55 - character for the piggy out of service
08:56 - storage so local character equals game
08:59 - loss server storage I'm gonna say dock
09:02 - piggy dot : so I sort clone cut on clone
09:07 - like that so if you want to have a
09:09 - different picking outfit then you will
09:11 - need to source your own piggy player
09:14 - sorry piggy like NPC or yeah character
09:18 - like this I will have a video explaining
09:21 - how you can create your own P character
09:22 - and how I made this one check the
09:24 - description for bats so follow that
09:26 - video if you want to learn how to make
09:28 - your own piggy but we've got this
09:29 - template one which just look like the
09:31 - piggy that I showed at the start so
09:34 - we're cloning that NPC or that character
09:36 - Alice's server storage then we're gonna
09:39 - give it a name so character name I'm
09:42 - going to set that to the name of the
09:43 - chosen piggy
09:44 - so if the chosen piggy is Alvin blocks
09:45 - this character is going to be called
09:48 - album blocks then we're gonna have to
09:50 - set the current piggies character to be
09:54 - this new one here okay this new one that
09:57 - we just created as a variable and when
09:58 - we set the character is basically
10:00 - setting up all the movement or the
10:02 - camera stuff so that that character can
10:04 - move okay and then we say character dot
10:07 - parent equals workspace the order that
10:10 - you do this in is very very crucial
10:11 - because you have to firstly clone it and
10:13 - change the name then you have to set the
10:15 - player's character to be the new piggy
10:19 - character so that all the camera scripts
10:20 - and everything can can go in there and
10:22 - start up and then you put the character
10:24 - in the workspace so it's kind of just
10:26 - respawning you but ask the piggy this
10:28 - time because we've changed what your
10:29 - character looks like and we changed it
10:31 - to this piggy model and we could create
10:33 - a clone of it so that we can use it
10:34 - again now that we've done that we can
10:37 - call it from the game logic script so we
10:39 - can say round dot dress piggy but we
10:43 - need to actually pass through our chosen
10:45 - piggy player okay and this will dress
10:48 - the piggy up okay watch this we're gonna
10:50 - go into the game we're going to test it
10:51 - out let me see if it works okay so it's
10:55 - this next round starts in one second
10:57 - zero seconds and it has to be me because
10:59 - I'm the only player in the game but it
11:01 - has set my character to be the piggy
11:03 - okay and the reason I found out the map
11:05 - was
11:06 - respawned me and it didn't actually
11:09 - teleport me anywhere it didn't put me on
11:11 - a normal spawn that's because we need to
11:12 - teleport the piggy to be somewhere to
11:15 - actually go to their little hiding room
11:16 - and that's what we're gonna do next so
11:20 - we're gonna create another function
11:21 - inside the round module so we're gonna
11:24 - say function module dot teleports piggy
11:27 - and again you need to pass through the
11:30 - piggy that he's going to be teleported
11:32 - so we'll just say player the player that
11:36 - is going to be teleported we could have
11:39 - called them piggy but doesn't really
11:40 - matter so I'm going to say if player got
11:45 - character
11:45 - because we first need to check that they
11:47 - have a character in case they've left or
11:50 - they've died or whatever in the
11:51 - character has been destroyed for some
11:53 - reason and then basically but by the way
11:55 - player characters like their their model
11:57 - in the workspace so then we can set
11:59 - their walk speed to begin with because
12:01 - we want to make them slower than the
12:02 - other players so player character got a
12:04 - humanoid that walk speed equals 1416 at
12:07 - the default so the other players will
12:09 - have a walk speed of 16 whereas the
12:11 - piggy will be a little bit slower and
12:12 - then we're gonna we're going to give
12:14 - them the bat I'm gonna give them their
12:16 - bats which they can hold so local bats
12:18 - equals game dot server storage dot tools
12:22 - dot piggy bats if you have changed your
12:26 - bat make sure that you've put the name
12:28 - here something different my one is by
12:30 - default called piggy bats so make sure
12:33 - that you've got it right if it says
12:35 - something like piggy bat isn't a valid
12:36 - member of tools or tools isn't a valid
12:39 - member of server storage make sure that
12:40 - you've actually ungroup the kit
12:42 - correctly so you've got your folders
12:44 - like mine so you've got the tools folder
12:45 - in self storage so game dock service or
12:49 - tools dot piggyback Curran clone we want
12:51 - to make clone of that bats and we want
12:53 - to put that to cloned bats but parent
12:57 - we're gonna put it into their character
12:58 - when you put a tool into a players
13:00 - character like this it makes them
13:03 - immediately equip it instead of putting
13:05 - it into their backpack if you put it
13:07 - into their character they will
13:08 - immediately start holding it then we
13:11 - need to actually teleport them don't we
13:12 - so we're gonna say if player character
13:15 - cut on find first child humanoid root
13:18 - path
13:19 - just to make sure they've got they've
13:21 - got it and because in some cases they
13:24 - might not have a humanoid root part it's
13:25 - basically a part in your character which
13:27 - you can change the position of and that
13:29 - will move the entire player play a doc
13:31 - character dot humanoid root part dot C
13:34 - frame what we're going to do is we're
13:36 - going to select a random spawn sorry no
13:40 - no not we're gonna put them into the
13:42 - waiting-room aren't we
13:44 - now what we need to do is we need to set
13:46 - the C frame which is position with a
13:49 - rotation of the humanoid root part to be
13:52 - inside this waiting room where the piggy
13:55 - will wait whilst the other players are
13:57 - in the round so inside of this waiting
14:00 - room I've created a part called piggy
14:02 - waiting spawn so we're just gonna set
14:04 - there C frame to be the same as this
14:05 - part so they get teleported into this
14:07 - room so back to the round module we're
14:09 - gonna say player doc character a
14:12 - humanoid root parts dot C frame equals
14:16 - game dot work space dot waiting room
14:19 - make sure it's called waiting room you
14:21 - don't change the name of it else it
14:22 - won't work dot piggy waiting spawn dot C
14:25 - frame but then just to make sure they
14:26 - don't get stuck stuck in the ground
14:28 - we're gonna position them about five
14:30 - studs off the ground or above that part
14:32 - so game dat works place that waiting
14:34 - room drop piggy waiting swarm dot C
14:36 - frame prospector three dot new zero
14:39 - comma 5 comma zero that's going to add
14:42 - five studs in the upwards direction to
14:45 - that that C frame position so they're
14:48 - going to be teleported to the C frame
14:52 - please firm is basically position the
14:55 - position value with a rotation of that
14:58 - spawn and they will get teleported there
15:01 - so let's go ahead and test it out we're
15:05 - gonna go to the game logic and we're
15:07 - going to say round dots teleport piggy
15:10 - again we're going to pass in the chosen
15:12 - piggy variable because that variable is
15:14 - the player that has been selected and we
15:17 - can always reference that so we know who
15:19 - the piggy is let's go ahead and test it
15:21 - out
15:22 - alright five seconds four seconds three
15:25 - seconds two seconds one second we should
15:27 - get dressed as the piggy and boom look
15:30 - at that we are put into the room with
15:34 - our piggy bath which is automatically
15:36 - being equipped awesome and of course if
15:41 - you want to learn how I made this piggy
15:42 - batt and scripted it you are going to
15:44 - want to check out my video which I'll
15:46 - put in the description on how to make
15:47 - the bats we're also going to need to
15:49 - animate this bat so that when you click
15:51 - you'll be able to hit people with it but
15:53 - the only limitation is that we can't
15:55 - share animations with you guys so we
15:57 - need to teach you how to make your own
15:59 - animation probably do that later on but
16:00 - at the moment it will work fine without
16:02 - an animation okay we're making great
16:05 - progress with this PE game so far so if
16:08 - you're enjoying it please do leave a
16:09 - like on the video and if you haven't
16:10 - already please do subscribe to my
16:11 - channel for more roblox scripting videos
16:13 - because this this series took me ages to
16:16 - create I worked out for seven days
16:19 - straight making this game from scratch
16:21 - for you guys rigorous testing and
16:23 - everything so I really appreciate all
16:24 - the love and support you've put on the
16:25 - video so far much appreciated so next
16:28 - thing we're going to do is we're going
16:29 - to teleport all of the other players all
16:30 - the contestants into the map so to do
16:33 - this we're gonna need another function
16:34 - in the round module and it's gonna be
16:36 - called teleport players by the way you
16:40 - make sure that you've saved your project
16:41 - so far by pressing ctrl s or command S
16:43 - on a Mac just in case anything happens
16:46 - and your project might get destroyed or
16:48 - not saved now you can see
16:52 - created the function module teleport
16:55 - players and I've got two arguments I've
16:57 - got the players so it's going to be a
16:58 - table of all of the contestants that
17:00 - were going to need to set to teleports
17:01 - that we're gonna send we also need to
17:04 - send another table which is gonna be the
17:05 - map spawns so the map the chaps that
17:08 - we've loaded is going to have a folder
17:10 - inside of it every single map needs to
17:12 - have a folder called player spawns with
17:14 - parts put in different locations where
17:17 - you want a player to spawn okay so we're
17:19 - gonna need to send a table of all of
17:22 - these spawns inside of that folder to
17:24 - our function and we'll send that when we
17:25 - call the function very very soon but
17:27 - just imagine that the map spawns is a
17:29 - table full of parts part objects which
17:33 - we can set the players humanoid route
17:35 - policy frames to just like we set the
17:37 - piggies human-like route Part C frame to
17:39 - that teleport room we're gonna set it to
17:41 - a random one of those map spawns so
17:45 - again this is very simple we just need
17:47 - to loop through all of those players
17:48 - using a for loop so for I comma V in
17:52 - pairs and in fact by the way did you
17:55 - know that the I and V values don't have
17:57 - to be I envy all the time you can change
17:59 - them to whatever you want just know the
18:00 - first value is going to be the index the
18:02 - second one however is going to be the
18:04 - the object that you're looping through
18:06 - so in this case the player so you can
18:08 - call it whatever you want so you call it
18:09 - player if you want to do so for I comma
18:11 - player in pairs players do cuz we're
18:14 - looping through that player's table we
18:15 - don't need to get children because it is
18:16 - couldn't get table object and then we're
18:20 - gonna see if they firstly have a
18:21 - character so if they have a character in
18:26 - their alive then let's create a variable
18:28 - for that character so you don't have to
18:31 - keep saying player door character all
18:32 - the time now we need to check if they
18:34 - have a humanoid root part so if
18:36 - character come on find first child
18:39 - humanoid root part I said before a
18:42 - humanoid root part you use that fine
18:44 - first trial just in case it isn't there
18:45 - and it won't cause an error but if they
18:47 - do have a humanoid root part then we can
18:49 - teleport them of course but before that
18:51 - let's just firstly set their walk speed
18:54 - player character humanoid dot walk speed
18:59 - equals 16 if you want the players to
19:02 - have a different walk speed make it a
19:03 - higher or lower value but I recommend 16
19:05 - which is the default anyway it's just
19:07 - good to set it to 16 because if you have
19:10 - been the picky last round then we'll set
19:12 - you back to default speed then we're
19:14 - gonna change your humid route Part C
19:16 - frame so player got character got
19:18 - humanoid route path dot C frame and this
19:22 - is where the magic happens so remember I
19:24 - said that map spawns it's gonna be a
19:26 - table of all of the different spawn
19:29 - parts so we can just say map spawns and
19:31 - then in there in square brackets again
19:33 - because we need to choose a random one
19:35 - so a random number between one and
19:36 - however many there are we are going to
19:38 - create that random object again so we're
19:41 - gonna be a little bit sneaky and we're
19:44 - gonna firstly copy a little bit of code
19:46 - here I'm gonna copy this this round next
19:50 - integer let's put it in here we need to
19:54 - create our around our random seed again
19:57 - don't we serve local Rand equals random
19:59 - Don you okay so now that we've got our
20:02 - Rand which is just crazy we can do next
20:04 - integer to choose a number between one
20:06 - and the number of not chapters but maps
20:09 - spawns okay so we're choosing a random
20:12 - map spawn part here and we need to get
20:14 - the C frame property of that spawn don't
20:18 - we because it's the position of that
20:20 - spawn plus vector 3 dot new 0 10 0 okay
20:26 - so this is just placing the player 10
20:28 - studs above that spawn part and the
20:31 - reason it tends to us and not 5 studs is
20:33 - just because I've tested it and some
20:35 - players would still get stuck in the
20:37 - ground whereas the piggie wouldn't but
20:39 - you can mess around with these values
20:40 - it's just a number of studs that you're
20:42 - placed above the spawn point which you
20:45 - will fall down onto so you don't get
20:47 - stuck so that will teleport all of the
20:49 - players to our random spawn in that
20:52 - spawns folder ok we now just need to
20:56 - call this function from the game logic
20:59 - so we can say round doctor teleport
21:01 - players and we just need to pass in the
21:03 - contestants to begin with but also the
21:06 - actually the folder of spawns don't we
21:09 - so to do this very simple we just need
21:11 - to get our cloned at chapter so clone
21:14 - chapter and we'll say dot player spawns
21:18 - : get sure
21:19 - okay so if you get an error it's
21:23 - probably because and it's to do with
21:25 - your teleport place it's probably
21:26 - because you haven't added this player
21:29 - spawns folder into your map really
21:31 - important that you have this folder into
21:32 - each map called player spawns has to be
21:34 - spelled correctly with the
21:35 - capitalization with all of your player
21:37 - spawns inside of here make sure they're
21:39 - anchored make sure that can collide is
21:41 - set to false on them so you can't
21:43 - collide with them and it's also
21:44 - recommended to make them transparent
21:46 - what we can do is we can do a little
21:48 - check say if cloned chapter cut on find
21:52 - first child player spawns then just to
21:57 - check if you have that folder in there
21:58 - we'll put this teleport players line in
22:01 - there and we'll say else warn fatal
22:05 - error you didn't add a player spawns
22:09 - folder into your map end and if you have
22:14 - if you've forgotten to put your player
22:16 - spawns into your map and you start
22:19 - playing it and if you check the output
22:20 - and it doesn't find this place born it's
22:23 - gonna print out that it couldn't find
22:25 - the player spawns and that would prevent
22:26 - it from airing this is called error
22:28 - handling it's useful in programming
22:30 - where if you if you might make a mistake
22:33 - somewhere you think so you could make a
22:36 - mistake where you forget to put the
22:37 - player spawns folder in there instead of
22:39 - it causing an error we can check to see
22:41 - if that folders there first using fine
22:43 - first child which won't error if it
22:44 - doesn't find it but if it because if it
22:47 - doesn't find it then this condition will
22:48 - be false so the else statement will run
22:51 - and so it will warn you that you didn't
22:53 - add a player spawns folder into your map
22:55 - so you can just check the output and it
22:57 - should help you with your debugging if
22:58 - you find an error but just make sure you
23:01 - have that player spawns folder added in
23:03 - there and by the way just because of
23:06 - testing I'm going to change the length
23:08 - of the intermission down to eight
23:11 - seconds just so it gives us enough time
23:12 - to get into the game but also so we have
23:14 - to be waiting all the time that we test
23:16 - it for a new round to start
23:17 - I remember don't or if you have these
23:21 - errors in the output is because we
23:23 - haven't coded those parts yet so round
23:25 - starts and zero seconds and obviously
23:27 - I'm not gonna get teleported because I'm
23:28 - the piggy I won't get teleported to the
23:30 - map now if you want to test the game
23:32 - with more than one player so two players
23:36 - for example if you want somebody to be
23:37 - the piggy and somebody to be a player to
23:39 - test what it's like for both you will
23:41 - want to open up a test server now a test
23:44 - server will open up a server window and
23:47 - also two players player 1 and player 2
23:49 - if he had up you can have up to 8
23:51 - players and the more players you have
23:53 - the more players you're controlling but
23:54 - it can take more of a strain on your
23:56 - computer now if you are going to do a
23:58 - test like that I recommend putting the
24:00 - intermission back up to a number like 30
24:01 - because it can take up to 20 seconds to
24:04 - load this server and by which time you
24:06 - only have 10 seconds left on your
24:07 - intermission so let's open it up and
24:09 - let's control a piggy and also a player
24:12 - to see what happens to both of them
24:14 - because you're gonna want to be testing
24:15 - this game a lot but you're also not
24:17 - going to have you might not have enough
24:20 - people on hand to keep testing and
24:22 - publishing all the time so here you can
24:27 - see we have player 1 and player 2 so one
24:30 - of them will get chosen to be the piggy
24:31 - that a piggy will get removed from the
24:33 - contestants table and then the other
24:35 - player or players if you have more than
24:37 - two players would get teleported to them
24:39 - to the map brilliant so the player on
24:42 - the Left player 2 has been teleported
24:44 - through a random spawn in the map
24:45 - whereas the piggy has been teleported to
24:47 - his little hideout whilst we whilst they
24:50 - get started now obviously we haven't
24:52 - scripted the round yet do teleport piggy
24:54 - back but that's something that we'll be
24:56 - doing next the really exciting part and
24:58 - by the way what a lovely map this is
25:00 - smasher like if you're enjoying it and
25:02 - Jenna forget you guys are getting this
25:04 - map for free so shout out to my friend
25:06 - Linda for building this map much
25:08 - appreciated okay brilliant so we're
25:10 - almost ready to begin scripting the main
25:13 - round loop but before that we need to
25:16 - create a function which will insert some
25:18 - tags into the players so that from other
25:22 - scripts just like the in menu tag which
25:25 - was able to tell us whether a player was
25:27 - currently in the menu or not we need to
25:30 - insert tags for the contestants and also
25:33 - the piggy so that we can check in other
25:36 - scripts where we don't have access to
25:38 - the contestants table or the chosen
25:41 - piggy variable because remember those
25:44 - variables in that table is only at
25:46 - accessible from the script so we need to
25:48 - be able to tell if a player is the piggy
25:51 - or is a normal contestant from other
25:55 - scripts for example in the piggy batt
25:58 - script you would need to tell whether
26:00 - the person that you are touching and
26:03 - that you've clicked with your bat is a
26:05 - is a contestant or whether if a person
26:10 - steps on a trap is that player the piggy
26:13 - if they are then we won't slow them down
26:15 - but if they are a contestant we want to
26:17 - stop them right in their tracks so we
26:19 - need to insert a tag called piggy into
26:23 - the chosen piggy but we also need to
26:26 - insert a tag called contestant into the
26:29 - other contestants that are not the piggy
26:31 - but are also playing the game so to do
26:34 - this we're going to go back to the round
26:36 - module where we create our functions and
26:38 - we're gonna create a function called
26:40 - module dot insert tag okay so drop a
26:47 - line let's get this end in here and in
26:50 - this function what we're gonna need to
26:52 - firstly pass through the the table of
26:56 - players that will get the tag so we'll
26:59 - just say I'll say contestants although
27:03 - it could when we do it for the piggy we
27:06 - will just pass a table with just the
27:08 - piggy in it okay so that's going to be
27:11 - the table of players that will get the
27:13 - tag and then we need to have the tag
27:15 - name that we're gonna give to them so
27:17 - when we call the function not only will
27:19 - we supply the table of players who will
27:22 - get that tag we're also going to supply
27:24 - the name of the tag so that we can
27:25 - specify whether we want the tag to be
27:27 - called piggy or contestants all that's
27:31 - left to do is to loop through every
27:32 - single player in that contestant table
27:34 - and give them the tag and that's similar
27:37 - to what we've done before so we've got
27:40 - another for loop here so for I comet
27:42 - player in pairs remember I said the
27:44 - player value can be whatever you like
27:46 - you used to be V of course
27:48 - so we're looping through the contestants
27:49 - table and then for every single player
27:51 - in that table
27:52 - we're firstly going to insert a user
27:55 - instance not new to insert a string
27:57 - value into the game we're giving that
27:59 - tag
27:59 - we're setting its name property to the
28:02 - tag name argument and then we're putting
28:04 - the tag inside the players object in
28:07 - game dot players so other scripts will
28:09 - be able to see if they've got that tag
28:11 - just by looking at their player objects
28:13 - and doing a quick find first child check
28:15 - to see if there is that tag inside their
28:17 - player and if they have the Piggy tag
28:19 - then they'll be that they will be called
28:21 - uno the piggy if they have a contestant
28:24 - tag will know that they'll be the
28:25 - contestant and obviously they will not
28:27 - have both will only give them one tag
28:30 - and that's what we're going to do next
28:31 - because we need to fire this we need to
28:35 - figure this function we need to execute
28:37 - this function from the game logic script
28:40 - so very very simple we're gonna say
28:42 - round dot insert tag firstly going to
28:46 - call this function for the actual
28:48 - contestants that aren't the piggy so
28:50 - we'll just pass the contestants table
28:52 - that we've got in this game logic script
28:55 - which we've already inserted the players
28:57 - into up here we can pass through those
28:59 - players and then the second argument as
29:02 - I said will be the name of the tag and
29:05 - that's going to be contestant okay so
29:08 - not contestants contestant and it's
29:12 - going to be a as a string because it's
29:14 - text so we've done that's for the
29:16 - contestants now we need to do that for
29:19 - the piggy so just the same thing again
29:21 - round dot insert tag but this time as I
29:24 - said because we need to pass a table
29:26 - that's the first argument because that's
29:28 - what we manipulate in the round module
29:31 - we treat it as a table
29:32 - we need to firstly create a blank table
29:35 - but inside there we're just gonna put
29:37 - our one player which is gonna be the
29:39 - chosen piggy because we only want to
29:40 - give the piggy tag to that one player
29:43 - the piggy and their name the second
29:45 - argument the name of the tag just gonna
29:47 - be piggy now if you go and play the game
29:50 - after your intermission I'll just put
29:53 - that make that five again what if you
29:55 - looked in the game dot players and you
29:58 - looked at your player you would either
29:59 - get the contestant tag or you would get
30:01 - the piggy tag okay
30:04 - so you can see that a new round is
30:05 - starting in two seconds and if we look
30:08 - at the Explorer panel on the left in the
30:11 - server window you can see that in player
30:13 - 1 the piggy tag was inserted into their
30:16 - player only contestant tag was inserted
30:18 - into player 2 so let's imagine that we
30:21 - are looking at a we're in a different
30:24 - script we need to quickly check to see
30:26 - if a player is B piggy or whether the
30:27 - contestant well we can easily tell can't
30:30 - we we can see that player 1 on the right
30:32 - is the piggy and a player 2 is the
30:35 - contestant but we've got those values
30:37 - which will tell us whether they are the
30:39 - piggy or not without even having to look
30:40 - in the game and obviously because of the
30:42 - scripts they can't just look and tell
30:44 - whether you're the piggy or not that's
30:46 - why we need to have those tags to tell
30:47 - the other scripts whether you are the
30:49 - piggy or not and it's worked perfectly
30:52 - so all of the contestants will get the
30:54 - contestant tag and only the piggy is
30:56 - gonna get the pig attack but they're not
30:57 - going to have both because we are giving
31:01 - the piggy tag to that chosen piggy and
31:02 - then all the other contestants that are
31:04 - still in that contestants table will
31:06 - only be getting the contestants brillian
31:10 - we've got to the good part now we're
31:12 - about to start coding the actual round
31:14 - script so which will begin the round and
31:17 - then we'll have all that good stuff to
31:19 - count down from 10 minutes the releasing
31:22 - the piggy after 20 seconds and the
31:24 - detection for things happening so
31:26 - detecting when there are no players left
31:28 - or when everybody's escaped so that's
31:30 - what we're gonna do right now and again
31:32 - we're just gonna call a function from
31:34 - the game logic script which will kick
31:36 - off the round and we'll do all the
31:37 - coding inside of our round module so
31:39 - let's create a another function and this
31:43 - function is going to be called function
31:45 - module dot start around okay so let's at
31:50 - the end in here and there's a couple of
31:52 - arguments we're going to pass to this
31:53 - function we're firstly going to pass an
31:57 - argument giving us the length of the
31:59 - round so that's going to be the length
32:01 - in seconds
32:06 - it's gonna add a little comment there so
32:08 - we remember so we've got the length
32:09 - we're also gonna need to tell this
32:12 - function who the piggy is because we're
32:14 - calling this function and inside of this
32:18 - function we might need to what we will
32:20 - need to be checking things like is the
32:22 - piggy alive you know have they died
32:24 - etcetera so we're gonna need to pass
32:26 - that piggy through to the function
32:29 - because obviously this module this
32:32 - function is running inside the module
32:33 - script and we can't just access the
32:36 - variables and such that we declared in
32:38 - the game logic script so we have to pass
32:41 - them to the function okay and the last
32:43 - thing that we're going to pass to the
32:45 - start round function it's going to be
32:47 - the map the map that we're currently
32:48 - playing with so chapter and map okay so
32:54 - what we'll do is firstly we're gonna
32:57 - create a for loop and if you don't know
32:59 - what a for loop is we used it in the
33:00 - intermission a for loop is going to
33:03 - count down from the length so it's the
33:06 - length or was ten minutes well ten
33:08 - minutes we know is 600 seconds and
33:10 - because it's 60 seconds times 10 so
33:13 - we're gonna count down from 600 to zero
33:15 - and we're gonna have a wait one second
33:18 - in that for loop and it's what's gonna
33:20 - do is gonna count down all the way from
33:21 - 600 to zero and when it hits zero it's
33:24 - going to end so it's perfect for things
33:26 - like game loops so to create this for
33:28 - loop is very very simple we're just
33:30 - gonna say for I which is our countdown
33:32 - variable equals and we're gonna go from
33:35 - the number that we're gonna count down
33:37 - from which is gonna be the length we
33:39 - want to count down to zero and we want
33:41 - to decrease by one each time we want to
33:43 - decrease I by one every single time and
33:46 - I is going to be the like the time left
33:48 - long as they do and now what we can do
33:53 - is we can change the status remember the
33:57 - status up here which when we change it
33:59 - it gets the GUI status bar changes to
34:03 - its value we can set that status
34:06 - object's value to be the the length so
34:12 - we could say I
34:13 - now what's would do is it would go six
34:15 - hundred five nine nine five nine eight
34:18 - five nine seven five
34:20 - nine six and it would count down from
34:22 - 600 which is a big number
34:23 - but what if we wanted to count down like
34:25 - an actual clock saying you know ten
34:28 - minutes
34:29 - sorry nine minutes 59 seconds nine
34:32 - minutes 58 seconds well what we're gonna
34:34 - have to do is we're gonna have to
34:35 - convert it to minutes and seconds now
34:38 - luckily that's not too hard but before
34:40 - we do that let's just add our weight one
34:42 - in here so that it delays by one second
34:45 - every single time it runs if we didn't
34:47 - have that white one it would just do it
34:51 - would go down to zero straight away
34:52 - because there's nothing delaying it from
34:54 - counting down and decreasing by one so
34:56 - it just immediately go down to zero and
34:58 - that would be the end of the round so
34:59 - this white one will delay us from
35:02 - decreasing one from the I value for
35:06 - every one second so really it's counting
35:07 - down from 600 to zero but to do the
35:10 - whole minutes seconds conversion we're
35:14 - gonna have a little function window to
35:17 - Clarets here I'm gonna call it it can be
35:25 - a local function because we're not going
35:27 - to be using it in the game logics we're
35:29 - just using it in the module script so
35:31 - local function to m/s so two minutes
35:33 - seconds and we're gonna pass to that
35:35 - function the number of seconds what we
35:37 - want to convert and then all we need to
35:39 - do is just return back and then what
35:42 - we'll do is I'm gonna show you I'm gonna
35:45 - copy it and put it in here so what this
35:48 - will do is it's going to take you what
35:51 - number of seconds and then do this
35:55 - calculation up I think it's dividing by
35:57 - 60 mod 60 and then it's also doing it
36:03 - again to work out in the rural second so
36:05 - the part of highlighted is working out
36:07 - the number of seconds it is doing a
36:09 - modulus calculation on the number of
36:10 - seconds and it's then dividing the
36:13 - number of seconds by 60 mod 60 to find
36:17 - the minutes and then what it's doing is
36:19 - it's going to format it as a string so
36:22 - that you've got your minutes over here
36:23 - and you've got your seconds over here so
36:26 - it's going to return a string that
36:28 - instead of looking like this it looks
36:30 - more like this
36:32 - okay so it's going to convert it to
36:34 - minutes and second for now instead of
36:38 - saying status top value equals I here
36:40 - we're gonna say - MS and put the I in
36:43 - the brackets we're going to pass it to
36:45 - this function up here and that is going
36:47 - to convert it into minutes and seconds
36:51 - okay so if you want to get this symbol
36:53 - you press shift and five okay to get the
36:56 - percentage symbol I'll also put that
37:00 - function in the description too you have
37:02 - to type it out for yourself
37:05 - but now that we've done that it will
37:07 - look like a proper timer and it will
37:09 - count down from ten minutes down to zero
37:12 - when it runs out and only then will it
37:15 - finish when it's finished counting down
37:18 - will it break out of this for loop and
37:20 - it will end the function so if we were
37:23 - to call from the game logic we were to
37:26 - call around dot start round and let's do
37:29 - 600 seconds as I said and we have some
37:33 - code underneath it such as a print hello
37:35 - or this hello would only print once the
37:38 - function has finished and the function
37:40 - will only finish when the for loop
37:42 - finishes so when the for loop gets down
37:44 - to zero after 600 seconds is it going to
37:46 - finish the function so only then will
37:49 - hello print so the game logic script is
37:52 - going to be stuck on the round dot start
37:55 - round function it won't go any further
37:56 - than that and so that function has
37:58 - finished
37:59 - so basically when the for loop is
38:00 - finished and if you went and check this
38:02 - out you would see that it would just
38:05 - keep counting down all the way from ten
38:07 - minutes down to zero now I will also say
38:12 - if you're testing the game at this point
38:13 - make sure that your intermission is long
38:15 - enough for the players to join the game
38:17 - and if you don't click the play button
38:18 - in time
38:20 - before that intermission runs out if you
38:24 - if you click the play book so you don't
38:26 - click the play button before that you're
38:27 - gonna get an error because it's trying
38:29 - to find players to teleport but there's
38:31 - zero players available because none of
38:33 - you know them have clicked the play
38:35 - button yet so you'll get an error so if
38:36 - you do just retry it and make sure that
38:39 - you you've clicked play by then now
38:43 - so both players are spawned in and you
38:46 - can see that the timer is now counting
38:48 - down now we could sit here for 10
38:49 - minutes and we could see it countdown
38:51 - all the way to zero but you can trust me
38:53 - that it will work okay if you wanted to
38:56 - what we could do is go back into the
38:58 - round module and you could change this
39:00 - wait one two be a much smaller number
39:03 - and then it would count down a lot
39:04 - quicker and don't worry about the book
39:07 - which I just mentioned if you haven't
39:09 - clicked the menu play button in time
39:11 - because we will be adding some logic
39:13 - code later on which will check to see if
39:16 - there's enough players ready to start
39:18 - the round well you can see here that is
39:20 - counting down brilliantly we're doing it
39:22 - much faster and it's counting down from
39:24 - 10 minutes all the way down so you'll
39:26 - see it go down to zero but we have got
39:28 - the map now and then some of the map
39:31 - doesn't work yet so for example we don't
39:33 - have the things like the doors working
39:37 - yet or things like that but we will have
39:39 - it working don't worry and you can see
39:41 - it's gone down to zero so that's good
39:43 - now speaking of the doors in the map I'm
39:46 - just going to show you how they work and
39:48 - I'm gonna bring the chapter 1 map out of
39:51 - the replicated storage to show you
39:53 - because if you want to make some of your
39:55 - own Maps that's fine but you just need
39:56 - to listen to this now inside of each map
39:58 - you need to make sure that you've got a
40:00 - folder called doors okay and you've also
40:03 - got to make sure you've got a folder
40:04 - called items and player spawns as we
40:06 - said we'll get to the items later on but
40:08 - the doors forward it is absolutely
40:10 - essential you need to have all of your
40:12 - doors in that folder okay and the way it
40:16 - works is that when the map is inserted
40:20 - we are going to use this door module
40:23 - here and what this door mantra will do
40:25 - is on by the way all of your doors if
40:28 - you want them sorry never mind all your
40:33 - doors just make sure that they are can
40:37 - collide is true and hankered is also
40:39 - true again and the same goes for these
40:42 - doors with the keys we'll get those
40:43 - later on as well but your doors you need
40:45 - to make sure you have that folder in
40:47 - there chapter in the model of your map
40:49 - okay because in this door module what
40:52 - happens is we have I've created a
40:54 - function in this module
40:56 - and it's called activate doors okay and
41:00 - what you do is you pass your door folder
41:03 - in the map to it and then what it will
41:05 - do is it will loop through every single
41:07 - door on that folder and if it's a key
41:09 - door then it will set up everything you
41:11 - need to detect whether a key touches the
41:15 - door and when the key does touch the
41:17 - door then it will open the door okay if
41:20 - it's a locked door if it's not a locked
41:22 - door then what it's going to do is it's
41:24 - going to insert a click detector so it
41:27 - can be clicked and then it's setting for
41:30 - an event when you so that when you click
41:31 - the door it will be able to swing open
41:33 - okay so I'm going to show you how you
41:35 - can set this up so if you go into the
41:36 - game logic script all you need to do is
41:38 - make sure you have the door module
41:39 - inside your game logic script we're then
41:42 - going to need to require that module
41:44 - just like we did with a round module so
41:46 - local door yeah you can call it door if
41:50 - you want I called it door so local door
41:55 - equals require script door module
41:58 - because again it's inside of the game
42:00 - logic script and then we need to set up
42:03 - all of these click detectors and events
42:05 - for every single door in the map so it
42:07 - will be listening out and waiting for
42:10 - somebody to click the door so that when
42:12 - you do click it it swings open now all
42:14 - that has been taken care of in the
42:15 - module we just need to set it up so we
42:18 - can tell the script which doors to
42:19 - activate so to do this we're going to
42:22 - say after we have inserted the map which
42:26 - is what where's the map insertion here
42:29 - it is so when we've said when we've
42:32 - inserted the cloned chapter we're then
42:35 - just going to do a quick check to see if
42:36 - there is a doors folder so if cloned
42:41 - chapter find first child doors then
42:43 - we're going to say door which is our
42:47 - module dot activate doors and we can say
42:50 - clone chapter dot doors because that's
42:52 - the folder isn't it that's the folder
42:54 - which has the doors inside and we're not
42:56 - going to say : get children we're not
42:59 - going to say doors : get children
43:01 - because we're actually looping through
43:05 - it here and so we're saying get children
43:07 - actually in the module so we need to
43:09 - pass the folder whether
43:10 - doors are stored so when the maps loaded
43:13 - it will be the cloned chapter and it
43:15 - will be cloned chapter find first child
43:17 - doors so it's looking for that doors
43:18 - folder inside your map which it's why
43:20 - it's so important if you to have that
43:22 - folder called doors in your chapter so
43:25 - many people will come to me saying
43:27 - they've got they've got an error that
43:28 - doors aren't working and then they they
43:30 - will realize that they haven't added
43:31 - that doors folder and they haven't got
43:33 - their door parts inside that folder it's
43:35 - even more important to have the actual
43:37 - doors themselves in your doors folder
43:40 - and that doors folder is inside your
43:42 - chapter map model okay so when we say
43:45 - door dang to make doors that is going to
43:47 - set up all the click detectors all the
43:48 - events which will open the doors when
43:50 - you click on them now let's just do an
43:53 - else in case you forgot at that folder
43:55 - and we can just warn that the fatal
43:59 - error you forgot to add the doors folder
44:03 - to your map okay and that's just in case
44:07 - you add a future map and you forget at
44:09 - the doors in there but now if we go and
44:12 - play the game okay here we are so next
44:17 - rounds gonna start in two seconds it's
44:19 - gonna select who the piggy is gonna
44:21 - teleport us but if we have a look over
44:23 - here you can see if we hover over the
44:25 - door now it's clickable and that's
44:27 - because the click detector has been
44:29 - inserted into the door and that allows
44:31 - us to be able to click things and the
44:32 - event has been set up with the click
44:34 - detector so that when we click it it
44:37 - opens the door and it's wings are open
44:39 - like this okay now there are some doors
44:42 - which do look a little bit funny when
44:44 - you open this one looks realistic and
44:46 - fine but the one that we tried first it
44:48 - kind of looks like it's them it's not
44:50 - opening and closing in the right
44:52 - direction now I think if you have a
44:53 - tinker with the script if you can have a
44:56 - look in the door module but I think it's
44:58 - to do with the way that some doors are
44:59 - rotated okay because some of them are
45:02 - perfect but what the door module does is
45:05 - it finds the hinge of the door okay and
45:08 - it's and it's on one side for every
45:10 - single door so I think if you mess
45:12 - around with rotation off the parts of
45:14 - the the door parts you'll be able to
45:16 - figure that out but it's a minor thing
45:18 - but the good thing is that the doors
45:19 - will open okay and of course you can
45:22 - look into creating your own door module
45:23 - if you like but I've
45:24 - and that this one is good enough okay
45:26 - does the job so we've got doors that
45:28 - open and doors that close but when
45:30 - they're closed
45:31 - you can't walk through them you have to
45:32 - open up and the good thing with these
45:34 - doors is because they're clique detector
45:36 - based the piggy can get stuck so if you
45:39 - close the door on the piggy well they
45:41 - have to first unequip their bats so that
45:43 - they can click it and then they have to
45:44 - open the door and they have to equip
45:46 - their bat again so it's a nice way to
45:48 - kind of slow the piggy down in my
45:50 - opinion so there we go with just in the
45:52 - doors so as I've said you guys got the
45:54 - door module absolutely free from my
45:57 - piggy kit so I hope you enjoy that now
46:00 - after 20 seconds of passed we want to
46:02 - teleport the piggy into the round as
46:04 - well so we're going to do that in the
46:06 - round module in the in the start round
46:10 - script in the sort of start round
46:12 - function so what we'll do is inside the
46:14 - for loop we need to check to see if
46:16 - twenty seconds have passed so to do this
46:18 - we can say if I which is the current tie
46:22 - at the counter so like which keeps track
46:24 - of how long has left remember it's still
46:27 - in seconds because we're only converting
46:29 - it to minutes and seconds when we're
46:31 - setting the value of the status so I
46:34 - itself is still going to be that the big
46:37 - number so like six hundred for nine five
46:39 - nine eight so we can check to see if I
46:42 - is equal to the length minus 20 so if
46:47 - the length is 600 seconds then we want
46:50 - the piggy to be released after 20
46:52 - seconds so they would be released after
46:55 - think about it so 600 seconds is the
46:59 - length so it would be 580 so when I is
47:03 - 580 which is 600 takeaway 20 then we
47:07 - want to teleport the piggy so we can do
47:10 - then drop a line and inside of here we
47:13 - just need to do the teleports player's
47:16 - function when instead of saying round
47:18 - because we're actually in the module
47:21 - script itself which contains all of
47:24 - these functions in the module table okay
47:27 - we just need to say module dot teleports
47:32 - players okay
47:34 - now the reason we have to pass the piggy
47:38 - in this function is because we need to
47:40 - teleport the piggy don't we so we need
47:42 - to say we need to create a blank table
47:44 - because remember teleport players it's
47:46 - thinking that we're gonna send a table
47:48 - offer lots of players whereas just for
47:50 - this one we're sending just the piggy so
47:52 - we need to put the piggy in their own
47:54 - table and the reason we're not using the
47:56 - teleport piggy function is because that
47:58 - function only teleports the piggy to
48:00 - their waiting room whereas now we want
48:03 - to teleport them to the map
48:05 - so we're gonna say the second argument
48:08 - they were gonna send if we look at the
48:10 - teleport players function it wants the
48:12 - table of all the spawns so we're gonna
48:15 - have to send the player spawns just like
48:18 - we did when we teleported the players
48:19 - but we're gonna have to say chapter map
48:21 - because that's the map that all the
48:24 - players that are on and that's been
48:25 - loaded which will get which we with we
48:28 - were gonna pass to the start round
48:29 - function chapter map got player spawns :
48:33 - get children and remember that's why I
48:35 - said it's so so important that you have
48:38 - the player spawns folder in your chapter
48:41 - here okay because we're looking right at
48:43 - that player spawns chapter and if isn't
48:45 - there if isn't in your map you're gonna
48:47 - cause an error because it's looking for
48:49 - it but it cannot find it so make sure
48:52 - you've got your player spawns folder
48:55 - your items folder and your doors I know
48:57 - as I said we'll get to the items later
48:58 - on in in the in the video so that's
49:01 - going to teleport the piggy to the map
49:04 - so that they can start killing people
49:06 - we're then going to set the status value
49:12 - to say piggy has woken up so that the
49:17 - players know that the Piggy's coming
49:18 - after them and we're gonna do two second
49:20 - delay so wait two seconds and that's
49:23 - just going to keep the status on the
49:25 - screen before it gets updated to the
49:27 - time left again and obviously this won't
49:30 - happen again because the eye is
49:32 - constantly counting down and it will
49:33 - never be 580 again because it will just
49:36 - go 580 and then I will be five seven
49:39 - nine because it decreases by one every
49:40 - single time Eclipse around so it will
49:42 - only run once and it will only run it
49:45 - will only run this if statement when the
49:47 - eye the time left
49:48 - it's 580 or that or 20 seconds or the
49:53 - length take away 20 seconds so after 20
49:55 - seconds have first passed because the
49:57 - length could be 1,000 it could be 30
49:59 - seconds it's up to you and that's what
50:02 - you do that's what you write when you
50:04 - start the round so when we start the
50:05 - round you also need to pass the piggy so
50:08 - chosen piggy and also the cloned chapter
50:12 - because that's our map object okay let's
50:15 - just check we got the order right yep so
50:17 - the piggy and the chapter map it's
50:18 - really important that you get the order
50:19 - right with your arguments so the chosen
50:21 - piggy go second the length goes first
50:24 - and the cloned chap that goes third the
50:26 - reason it's in that order is because
50:27 - it's the order that we've written our
50:30 - arguments in okay so now the piggy will
50:33 - get teleported to the map after 20
50:35 - seconds now I'm also going to just go
50:40 - back to the round module and I'm going
50:41 - to change this weight back to 1 second
50:44 - so that it goes at normal speed and if
50:46 - you want to you can test it out now
50:51 - you'll see that the next round is going
50:53 - to be starting very soon and so the
50:56 - player should get teleported in
50:57 - straightaway and you can see the piggy
51:00 - is being held in this little room until
51:02 - 9 minutes and 40 seconds so let's see if
51:06 - the piggy does spawn at that time and
51:08 - whilst we do that we can let the player
51:12 - on the Left get a head start but the
51:13 - piggy should be on his way here we go
51:16 - let's see if he gets teleported yes he
51:17 - does and there we go we can see him now
51:19 - the piggy batt isn't going to work yet
51:21 - because we haven't scripted that we're
51:22 - gonna script it in a future episode
51:24 - there are some things that it depends on
51:26 - so it won't work yeah and also I know
51:28 - the animation isn't very good that's
51:30 - because you're going to have to create
51:31 - your own but animation because we can't
51:33 - share them so I thought what's the point
51:35 - in making it detailed if you're not
51:37 - gonna be able to copy it because you're
51:38 - gonna replicate it yourself so I'll show
51:40 - you later on how you can make your own
51:42 - animation in a future episode and that's
51:45 - why I said earlier the piggy kit will
51:47 - not give you the finished game because
51:49 - you need to watch along to see us write
51:52 - the code for it and the extra stuff so
51:54 - we're going to leave it there for the
51:55 - second part now I do recommend that you
51:57 - go straight to the next part which is
51:59 - gonna be episode 3 the thumbnail is
52:01 - gonna be on your school
52:02 - right now in the middle so go ahead and
52:03 - click that and I will see you in the
52:07 - next part and don't forget to check the
52:08 - link in the description to my website
52:10 - FAQ page if you've got any problems or
52:13 - bugs