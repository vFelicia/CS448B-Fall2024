00:00 - okay everyone it's the part you've all
00:02 - been waiting for
00:03 - how to add a shop GUI to your piggy game
00:07 - on roblox so you'll be able to buy skins
00:10 - traps you'll be able to save them equip
00:14 - certain ones and you get them showing up
00:18 - in the GUI as well and different traps
00:20 - we'll be able to do different things be
00:22 - able to keep you trapped for longer some
00:25 - can be invisible you can create your own
00:26 - traps your own skins load them into the
00:28 - shop sell things for piggy tokens save
00:31 - it all it is gonna be brilliant so you
00:33 - don't want to miss this tutorial now I
00:36 - just want to say before we begin if you
00:39 - are going to make your own piggy game
00:41 - try and be original okay don't go using
00:43 - the piggy name because there's already a
00:45 - pig again buy mini tun the original try
00:48 - and make it into something else you know
00:49 - if you're using my maps try and make
00:52 - them different don't don't just use them
00:54 - ups I've made try and make your own you
00:56 - know make it original and make it fun
00:58 - because if your game isn't original
00:59 - nobody's going to want to play it and
01:01 - also this is going to be the last video
01:04 - in my piggy series all things have to
01:07 - come to an end and you know no matter
01:09 - how many more videos I do there's always
01:10 - going to be people who want me to make
01:12 - videos on a certain feature you know at
01:15 - the end of the day you're gonna have to
01:16 - start learning how to script yourself
01:18 - and although you shouldn't you know just
01:20 - stop watching because this is the end of
01:22 - the series you're gonna learn how to
01:23 - make an awesome shop and how to use data
01:26 - stores and things like that in this
01:27 - tutorial you know I can't keep on making
01:31 - this series so this is gonna be the
01:32 - final one so you know I'm sorry about
01:36 - that but I have got a full 23 parts and
01:40 - counting beginner series which you are
01:42 - going to want to check out and I've also
01:44 - just started on an advanced series as
01:46 - well so there's a lot for you to dig
01:49 - into if you want to learn how to code
01:51 - yourself so you can code features
01:53 - yourself and start making your own
01:55 - roblox games because this is a great way
01:56 - to get yourself into making roblox games
01:58 - but then also if you want to develop on
02:00 - that and advance the scripting knowledge
02:02 - so that you can make your own games from
02:04 - scratch without my support then you can
02:06 - watch those series so let's just get
02:08 - straight into the actual shop GUI
02:11 - development its
02:12 - so to speed up the tutorial I've created
02:15 - the shop GUI we're gonna have to script
02:18 - it though so that's what you've got to
02:19 - watch the video for but if you go to the
02:21 - description of a link to the model go
02:23 - and take that model and then when you're
02:25 - inside your pick a game go to the
02:27 - toolbox click on the four squares icon
02:29 - go to my models and then click on the
02:32 - admin blocks piggy shop now this will
02:35 - insert a frame and a text button into
02:40 - probably your workspace so take these
02:43 - two elements and drag them into the main
02:46 - GUI ok main GUI and you will see that it
02:50 - appears what we need to do is we need to
02:54 - start scripting this shop and so firstly
02:58 - we're going to begin by scripting the
03:01 - piggy tokens or the clicker half the
03:04 - cash or the currency in the game which
03:07 - will be used to purchase the items so in
03:09 - the event handling script just at the
03:12 - top here just before the in menu part
03:15 - inside the player added event we're
03:17 - going to create our piggy tokens so you
03:22 - can call them whatever you want and I
03:24 - recommend that you call them something
03:26 - different to piggy token piggy tokens
03:28 - and just like you calling your game
03:30 - something different because we don't
03:31 - want every game to be a clone of piggy
03:34 - we want to be original so name your
03:37 - variable I've just said Paquito can see
03:40 - what's instance not new in value in fact
03:43 - we can say yeah we can say Piggy's own
03:46 - name and then said it as tokens as a
03:49 - string and then set the value of it to a
03:51 - thousand just so we have some tokens to
03:54 - test our shop with and we under parent
03:56 - it to the player so it's created that
03:59 - currency int value which will hold the
04:02 - amount of currency that we have next
04:05 - we're going to want to insert a folder
04:06 - into the player and this is going to be
04:08 - where we're going to keep their traps
04:10 - and their skins skins at their port
04:11 - we can put a value in there with with
04:14 - the name of the skin so we have a
04:15 - collection or like an inventory of a
04:17 - player skins so we know what skins and
04:19 - traps they have so trap inventory equals
04:23 - instance dot new folder
04:26 - trap inventory name equals trap
04:29 - inventory I've had a capital T and after
04:32 - I before trap and inventory so make sure
04:34 - that you got the capitalization correct
04:36 - and trap inventory parent
04:38 - it was player now because we need to do
04:41 - the same thing for the skins we can copy
04:43 - and paste that code and we're gonna
04:47 - change it so that this time it creates a
04:49 - skin inventory so skinning inventory
04:53 - because interest on new folder skin
04:55 - inventory don't name he calls skin
04:59 - inventory again capital s and capital I
05:01 - and then skin inventory dot parent
05:05 - equals player so we've inserted the two
05:07 - folders which are going to hold the
05:09 - traps and the skins that we've bought we
05:12 - also need to track the skin or the trap
05:15 - which is currently equipped so we're
05:17 - gonna have to have a value in the player
05:18 - which will hold the name of the
05:20 - currently equipped trap or skin so let's
05:23 - create the first one local equipped trap
05:26 - equals instance not new string value
05:30 - string value will hold and text and
05:33 - because text is a string a datatype
05:36 - that's why it's a string value so a
05:38 - string value will hold text in this case
05:40 - the name of the trap which is equipped
05:43 - equipped trap dot name equals a quit
05:47 - trap again a couple to ian capital t and
05:50 - equipped trap door parents equals plot
05:53 - equals player and we can do the same
05:56 - thing we did before just copy it and
05:58 - paste it but change the equipped trap to
06:02 - equipped skin so we now have five new
06:11 - things which we've inserted into the
06:12 - player the tokens the trap inventory the
06:15 - skin inventory and the equipped trap and
06:18 - equipped skin so if you play the game
06:21 - and you go into players and you find
06:25 - your player you will see that we now
06:27 - have the skin inventory trap inventory
06:29 - equipped skin equipped trap and tokens
06:32 - now they don't have to be called exactly
06:35 - equipped skin a quick trap for a reason
06:38 - that's just the name that i've
06:39 - decided to call this value and it's a
06:42 - good idea that you use the same names
06:44 - beakers in other scripts when we're
06:46 - referencing these values you might get
06:48 - confused if using if you've named your
06:49 - something different so they are the main
06:54 - things we need to have because now we
06:56 - have a way to track the amount of tokens
07:00 - or coins that a player has so we can use
07:02 - that in the shop when they buy something
07:06 - for now I'm going to set the shop frame
07:11 - its visibility I'm going to set that to
07:13 - invisible so that we can just work with
07:17 - our map because we need to know and
07:20 - create some more characters and a lot of
07:23 - people have been asking how do you
07:24 - create more characters it's very simple
07:26 - so what I do is well there's two ways
07:30 - you can do it really you could make a
07:32 - clone of the piggy and if we take the
07:36 - piggy here and bring it into the
07:38 - workspace what you can do is open it up
07:43 - and you can see we've got these parts
07:46 - for the head and now if you wanted to
07:47 - change the head well you could delete
07:49 - everything inside the head like that
07:50 - okay and the piggies head is currently
07:53 - invisible and it's and it's just a
07:55 - square so let's say I wanted to insert a
08:00 - hat onto the piggy well what I could do
08:04 - is I've got a plug-in called insert
08:08 - assets from the toolbox and if you go to
08:11 - toolbox plugins you should be able to
08:13 - find it if not you can search for it
08:24 - I'll leave a link to it
08:26 - description as well so I'll leave a link
08:29 - to it in the description if you take the
08:32 - plug-in it will then be in my plugins
08:34 - and you'll be able to insert it
08:36 - okay so inserts asset you then put the
08:40 - asset ID of the Hat so you go to the
08:42 - hats page on roblox and in the web bar
08:45 - there's going to be the the string of
08:47 - numbers that's the ID of the hats you
08:50 - put the Hat ID in there click confirm
08:52 - it's going to insert it okay into the
08:55 - workspace so if I just make the head in
08:59 - this book for now and I take the
09:01 - apostille shadi and I'm going to use the
09:05 - rotate and scale tools to make it bigger
09:07 - I might actually need to use go into the
09:12 - handle and change the scale of the mesh
09:14 - there we go I'm going to turn around
09:19 - like that okay you then need to put it
09:26 - inside of the piggy like that and let's
09:31 - see if it works
09:33 - whoops we forgot to put the piggy on
09:37 - here so he doesn't fall off okay it
09:42 - seems to be working okay let's just
09:44 - rotate to make sure it doesn't fall off
09:46 - nope
09:48 - so now you can see because it's an
09:49 - accessory it's it's stuck itself kind of
09:52 - welded itself to the piggy now if I
09:55 - wanted to remove the dress I could get
10:00 - rid of the torso mesh and then the right
10:02 - arm right leg all the body parts I'm
10:05 - going to make sure transparency is set
10:07 - to zero so we can see them so you can
10:09 - see now I'm starting to edit the piggy
10:11 - so play around with it my piggy here
10:14 - isn't the best cuz I haven't taken much
10:15 - time to improve it but you can see where
10:18 - this is going if you want to create more
10:19 - characters so I'm going to name this
10:22 - shaggy man and I'm gonna put him so
10:26 - we're gonna move our skins from server
10:29 - storage we're gonna create two folders
10:31 - one folder it's going to be called skins
10:33 - and the other one is gonna be called
10:35 - traps okay it has to be in replicated
10:37 - storage then I'm gonna put my shaggy man
10:39 - into the
10:40 - folder as well as the normal piggy and
10:42 - I'm going to take my bear trap and put
10:45 - that into replicate storage traps as
10:48 - well now once I've done that we're going
10:52 - to need to start working on the shop GUI
10:57 - but before we do that we need to
10:59 - actually have some information in our
11:01 - skins and traps because we need to have
11:04 - a cost for each skin so inside the piggy
11:08 - skin I'm going to insert an int value
11:10 - I'm going to call this value cost and
11:14 - you can change the value to however much
11:17 - however many tokens you want the skin to
11:19 - cost so if I want it to cost 52 tokens
11:22 - or change it to 52 just make sure you
11:25 - copy and paste the cost into every skin
11:29 - and every trap and then you can
11:31 - individually edit the cost of each skin
11:35 - okay so I've now got a cost value in
11:38 - each skin and each trap okay let me show
11:45 - you how this shop air frame works so
11:47 - inside of it we've got two frames which
11:50 - cover the whole of the GUI one's called
11:53 - skins and one's called traps now inside
11:55 - each frame there's a folder with a UI
11:58 - grid layout and we're going to have some
12:00 - we're gonna have a basically like a
12:02 - template frame for the skins and they're
12:07 - going to go in here and the grid layout
12:09 - is going to make it look like a grid so
12:11 - you've got like one here and then you've
12:13 - got another one next to it and a little
12:14 - next to it then you go into a new line
12:16 - so when you click on the skins button it
12:20 - will make the skins frame visible and
12:22 - the traps frame will go invisible and
12:23 - when you click on the traps button the
12:25 - traps frame will go visible and the
12:27 - skins frame will go invisible so what we
12:30 - will do is we will write a script which
12:33 - will get all of the skins all of the
12:35 - traps out of replicate the storage and
12:36 - we will create these template frames for
12:39 - them now in your shop you should
12:43 - actually see the local script called
12:45 - client shop and the template should be
12:47 - inside of that because I've put it
12:48 - inside of there but the script currently
12:50 - has nothing in it
12:51 - but if we take this template and we put
12:53 - it inside skins
12:54 - in the folder you can see what happens
12:58 - it becomes a luck it's one of your shot
13:02 - frames is one of your items and if you
13:04 - were to duplicate them you can see the
13:06 - grid layout is putting them in order so
13:09 - I'm gonna have one of them and inside of
13:12 - here we've got a viewport frame so we
13:13 - can actually see the skin a button that
13:15 - you can click a cost text label our
13:18 - title as well for the name of the item
13:20 - so we're gonna just put this template
13:22 - back into the local script because we
13:25 - don't want to have it visible when
13:27 - there's nothing currently in our shop we
13:29 - need to clone it out for each item there
13:31 - is so firstly let's go and make some
13:35 - variables variables are quick references
13:37 - to things that we will be using in our
13:39 - script so firstly you want a variable
13:41 - for the shot which is going to be script
13:43 - dot parent because it's the parent of
13:44 - the local script the shop frame then
13:47 - we're going to want to get the skins
13:49 - frame so skins equals shop wait for
13:52 - child skins we have to say wait for
13:54 - child because these scripts may be
13:57 - running before that frame has loaded
13:59 - into the game and we don't want any
14:01 - errors then we're going to do another
14:03 - one for the traps frame so traps equals
14:05 - a shop wait for child traps and then
14:09 - we're gonna create two variables for the
14:11 - two buttons skins button and the traps
14:13 - button so local skins BTN for button
14:18 - equals shop and you can call your
14:20 - variables whatever you want again but
14:22 - you might get confused when I start
14:24 - using my variables and you're using
14:26 - yours you might write one of my
14:27 - variables when you've not defined it
14:30 - yourself you defined as something
14:31 - different so that's why I just recommend
14:33 - that you write your variable names the
14:35 - same as mine just so that we're on the
14:36 - same page so skins button is shop wait
14:39 - for child skins button and the same
14:43 - thing again local traps and button equal
14:47 - shop wait for child wraps button we're
14:52 - then going to also need a variable for
14:55 - template frame which we just saw and
14:56 - that's inside of the script so local
14:59 - item template equals script : weight
15:03 - child not script or parent just script
15:05 - because it's inside of the script
15:08 - we can say scripts wait for child
15:10 - template because the script is the
15:13 - current local scripts and the template
15:15 - is inside of it right next we're going
15:19 - to code the skins button and the trap
15:24 - button so that when we click them we can
15:26 - make either the skins frame or the traps
15:29 - frame visible or invisible so skins
15:33 - button dot mouse button one down
15:36 - sorry mouse button one click when you
15:38 - click the left mouse button this event
15:43 - will wear firstly going to hide the
15:47 - traps menu so traps dot visible equals
15:51 - false and then we're going to want to
15:53 - show the skins menu so we're gonna say
15:56 - skins not visible equals true and if you
15:59 - wondering these are comments with the
16:02 - two hyphens they're ignored by the
16:04 - script but they're just there so that we
16:05 - can understand what the code is doing
16:07 - like a little note to ourselves we can
16:10 - then just copy this events and paste it
16:13 - but we need to change a couple of things
16:14 - because this is going to be for when you
16:16 - click the traps button so we'll change
16:18 - skins button to traps button just down
16:20 - here and then when we do click the traps
16:22 - button we want the we want to firstly
16:25 - hide the skins menu so its skins dot
16:29 - visible is false but we want to show the
16:32 - traps menu so traps don't visible equals
16:34 - true so now we won't be able to see it
16:37 - but because there's nothing in the
16:39 - frames yeah but when we click one of the
16:41 - buttons it's going to appear and the
16:43 - other one would disappear next we need
16:46 - to get all of our items so we can show
16:50 - them in our shop and because we put them
16:52 - in the replicated storage that means
16:54 - that they're visible to the clients
16:56 - which is our local scripts and our
16:58 - player but it's also visible on the
17:00 - server so we can or because the server
17:04 - can edit them we can't change them but
17:06 - we can see them so we can see all of the
17:09 - items and tramps so we can easily get
17:11 - them in our local script so local skins
17:14 - data equals game not replicated storage
17:17 - got skins : get children this is going
17:21 - to return at
17:21 - table of all the skins and we'll do the
17:27 - same thing for the traps data local
17:29 - traps data equals game got a replicated
17:31 - storage got traps : get children and
17:34 - again this will return a table of all of
17:38 - the traps in the game and if you were to
17:41 - loop over these with a for loop and you
17:43 - print out the name of each item it would
17:46 - print out the name of every skin in the
17:48 - game so this is just a simple way of
17:50 - getting all of the skins and all of the
17:52 - traps so that we can create a item
17:55 - template we can wear we can create a
17:57 - frame for each item for each skin and
18:00 - for each trap and we can put it inside
18:01 - either the skins frame or the traps
18:04 - frame now we're going to create a
18:08 - function which will clone the item
18:10 - template and fill in the information for
18:12 - one of our skins or one of our traps and
18:15 - then we can call it multiple times for
18:17 - each again so function create frame and
18:22 - this function make sure it adds the end
18:24 - on we're gonna have some arguments
18:28 - parameters actually so we're gonna need
18:31 - some data for each skin or trap so that
18:34 - you can create the frame we're gonna
18:35 - need its name
18:36 - we're gonna need its cost we're gonna
18:38 - need the actual object itself if we want
18:41 - to show it in a viewport frame and we
18:43 - also need we also need its parent where
18:48 - it's going to be parented to so the
18:53 - whether it's the skins frame or the
18:55 - traps frame so we will pass this data to
18:59 - the function when we call it but what
19:02 - we'll do is we'll just create a variable
19:04 - for the frame that's going to be cloned
19:05 - so frame equals item template kernel
19:11 - clone frame name equals gonna be the
19:15 - name of the skin or the trap frame dot
19:18 - title text and if you look in the
19:20 - template we've got a title and text
19:24 - label and that is because it's gonna
19:26 - show the title of the the name of the
19:28 - skin at the top so that will just be
19:30 - name again but frame dot cost of text is
19:34 - going to be the cost
19:35 - of the item which we will pass to the
19:37 - function now then we're going to set up
19:44 - well no we won't set up yet but we will
19:46 - just parent the frame to either these
19:50 - skins or traps frame so we will pass
19:53 - that to the function so for now we can
19:54 - just say parent and then we're going to
19:59 - return the frame to wherever we called
20:03 - the function from so if we were to call
20:04 - the function like this the frame would
20:09 - then be held in the new frame value so
20:12 - the new frame if we were to later call
20:15 - it or use that references sorry it would
20:18 - it wouldn't be calling the function it
20:21 - would be the frame which we made so if I
20:24 - wanted to change the visibility of that
20:26 - frame I could then say new frame doctors
20:28 - have all equals true and it would change
20:30 - for that frame because we've returned it
20:32 - so now that we've created the function
20:35 - to create that frame we can loop through
20:39 - all of the skins in the game and create
20:40 - the frame for each skin or trap now what
20:46 - I'm gonna do is on create a function
20:48 - called add skins and we'll also have
20:52 - another function called add traps but in
20:59 - each function we're going to loop
21:01 - through the skins data or the traps data
21:03 - and we're going to create the frame for
21:06 - obviously but then we're going to set up
21:09 - an event when you click that the frames
21:11 - button to see whether you've already
21:13 - bought it or whether you need to equip
21:15 - it so if you need to buy the item
21:16 - whether you need to equip the item so
21:19 - when in the add skins function we're
21:22 - going to have some we're gonna have a
21:27 - parameter called data and that will be
21:29 - the skins data which we will pass to it
21:31 - but then we will say we'll loop through
21:35 - the data so for I V in pairs data do and
21:41 - we're doing we're looping through
21:43 - everything in that folder in the
21:45 - replicated storage so for every skin
21:47 - inside of here we
21:49 - to create a frame for it so local frame
21:52 - equals create frame we're going to pass
21:54 - the name of the model of the skin the
21:57 - value of the cost the cost values value
22:01 - inside that skin and the object itself
22:06 - and also skins folder because the third
22:11 - argument was the object itself which
22:13 - we're passing but the fourth object is
22:15 - going to be where it's going to be
22:16 - parented to so because it's a skin it's
22:18 - going to go into these skins frame so
22:21 - skins here but it's gonna go into the
22:22 - folder because that's where the UI grid
22:24 - layer houses so it's going to go in
22:26 - there and that's how it's going to be
22:28 - added into the GUI and that's how it's
22:29 - going to appear in that grid so if you
22:34 - were to then call the add skins function
22:36 - and pass the skins data to it down here
22:42 - let's just do a wait five seconds so we
22:44 - can see it happening and we play the
22:48 - game right five seconds you can see they
22:57 - get added in and you can see that the
22:59 - cost is there the title is there and
23:03 - each one has its own cost and title we
23:07 - haven't done the traps yet we haven't
23:08 - coded that function and we haven't done
23:10 - the clicking yet off the button to make
23:12 - you buy the item or equip the item but
23:15 - good start so far in fact for now I'm
23:19 - going to remove the add traps function
23:21 - because we're we're just gonna be
23:22 - working with the skins for now so the
23:25 - next thing we need to do is we need to
23:26 - set up the events for when you click the
23:30 - button in the frame so frame dot button
23:32 - dot mouse button one flick curl on
23:35 - connect function so when the button gets
23:39 - clicked any code inside of here is going
23:40 - to run and we need to call a remote
23:44 - event which is going to by the skin for
23:48 - us it's going to complete the
23:48 - transaction I'm gonna check if we have
23:50 - enough money to buy it on the server so
23:52 - that it's secure and can't be exploited
23:55 - so we're gonna go to the replicator
23:57 - storage I'm going to insert a remote
24:00 - events I'm gonna call this remote events
24:02 - in fact no we're not gonna do remote
24:03 - event we're gonna do a remote function
24:05 - remote function because a remote
24:07 - function will allow us to send data back
24:11 - to the client in this case we need to
24:14 - send back whether the purchase was
24:16 - successful and whether the item was
24:18 - equipped because they really own it
24:19 - whether it was bought because they don't
24:21 - own it yet so I'm gonna call this remote
24:23 - function by skin okay and we're going to
24:29 - say game inside of this mouse button one
24:33 - click events we're gonna say game dot
24:36 - replicated storage sorry local results
24:40 - Vic is going to return something so
24:43 - something will return return to the
24:45 - result variable equals game replicated
24:47 - storage dot by skin color on invoke
24:50 - server and then we need to pass the name
24:55 - of the item we're going to buy to this
24:58 - remote function so we can look it up on
25:01 - the server so it's going to just be feed
25:02 - name because if we're creating these
25:05 - events for every single item that we're
25:07 - looping through is going to pass the
25:10 - name of that specific item when it's
25:12 - clicked ok so V dot name is going to be
25:15 - the name of the current item that
25:16 - they've clicked so what we can then do
25:21 - is start coding the transaction stuff on
25:27 - the server right so I've actually
25:29 - decided that I am going to rename the by
25:33 - skin to by item because I thought we can
25:37 - consolidate the buying off the traps and
25:40 - skins into one remote function because
25:43 - then that way we would just it we've got
25:45 - there having to because he's just more
25:46 - efficient and it will require less code
25:49 - so I'm gonna call my remote function by
25:52 - item and now let's go in and do the
25:55 - server coding right so in the
26:00 - event handling script I'm going to hold
26:04 - on my scrolling seems to have broken in
26:06 - these scripts that's open it back up
26:08 - there we go
26:09 - so at the bottom here I'm going to say
26:12 - game dot replicate the storage dot by
26:15 - item because that's our remote function
26:17 - dots on server invoke equals function
26:21 - okay and no and bracket needed on the
26:26 - end of that and so inside of the
26:30 - brackets the parentheses we need some
26:32 - parameters and the first one is
26:34 - automatically sent that's the player
26:36 - that invoked the remote function then
26:38 - we're going to have the item name and
26:41 - also we need to have the item type so
26:44 - whether it's a a skin or a trap now what
26:49 - we can do is and by the way when we do
26:51 - call this and invoke server we will pass
26:55 - the player which gets passed first
26:58 - automatically so we don't write it so
27:00 - this will be the second argument the
27:01 - name of the item and then when we call
27:04 - it we will either say skin or trap and
27:07 - that will that way we can check whether
27:09 - the third argument is skin or trap and
27:11 - if it is we know that we are going to be
27:13 - buying or equipping a skin or a trap
27:15 - so in here firstly we need to have a
27:22 - variable called local item then what
27:26 - we'll do is we'll check to see if the
27:28 - item type is a skin or a trap so if item
27:33 - type equals equals skin then we know
27:37 - it's a skin else else if item type
27:42 - equals trap then we know it's a trap and
27:46 - what we'll do inside of this if
27:48 - statement is if it's a skin will look in
27:50 - the skins fold it in replicates storage
27:52 - for the item so game two replicated
27:56 - storage lot of skins weight sorry not
27:59 - wait for child find first child in case
28:01 - it isn't there it won't error if we use
28:03 - find first child and we'll just say item
28:06 - name like this so when we if we find the
28:10 - item will set it
28:12 - we'll set item to be equal to the that
28:16 - object and I haven't put the local here
28:18 - because I've defined it outside the if
28:20 - statement I've done that because if I
28:21 - was to use the local and define it
28:23 - inside the if statement it would be
28:24 - limited to this if statement so I
28:26 - wouldn't be able to look at its value or
28:28 - reference it from outside the if
28:29 - statement which is why I've declared it
28:31 - within the events but not within the if
28:35 - statement so it can be accessed inside
28:37 - the if statement and also outside of it
28:38 - if it's a trap we're going to do the
28:40 - exact same thing we're just going to
28:41 - look it up but instead of it being game
28:44 - that replicates storage dot skins make
28:46 - sure that it is game dot replicated
28:48 - storage dot traps okay so make sure
28:52 - skins traps is different on on each line
28:54 - so what this is doing is checking if we
28:57 - are buying a skin or a trap
28:58 - based on the item type which we provided
29:01 - to the remote function when we invoked
29:03 - it from the clients so we are going to
29:05 - say skin or trap and then it will find
29:07 - the item for us okay then we need to
29:11 - check to see if the item is already
29:13 - equipped sorry not if it's equipped if
29:16 - you already own it so that we can equip
29:18 - it because you already own it and you
29:20 - fired this for most events you're also
29:21 - going to want to equip it but if you
29:23 - don't own it yet you're going to want to
29:24 - buy it so we need to check to see if the
29:27 - item is either in your skin inventory or
29:29 - it's in your trap inventory now we have
29:31 - to do a if statement inside each of the
29:35 - ifs here so one here and one here to
29:38 - check if it's in the skin inventory or
29:40 - if it's in the trap inventory so if
29:42 - player dot skin inventory curl on find
29:48 - first child item name so if it's in your
29:50 - inventory because when you buy it will
29:53 - put it into your inventory very soon
29:55 - then what we'll do is we'll create
29:58 - another variable just like we did with
30:00 - item and we'll call it in inventory so
30:04 - we'll just declare it there first and
30:06 - then if it is in your inventory we'll
30:08 - say in inventory it's true and we'll
30:12 - just copy this line and put it over here
30:14 - as well in the trap section but we'll
30:16 - change the skin inventory to be trap
30:18 - inventory so if
30:20 - the trap name so if we're gonna put a
30:23 - value into your trap inventory or your
30:25 - skin inventory a value object like a
30:27 - string value which is set to the name of
30:29 - the trap or the skin and so we can check
30:33 - so we use it as a way to see what skins
30:36 - or traps you currently own so we can
30:38 - check that folder to see if you own it
30:40 - and if you do we'll set this variable to
30:43 - be true so that later on we can check if
30:46 - if if in inventory is true and if it is
30:49 - we have you've already bought it so you
30:50 - can later equip it instead of buying it
30:52 - again so now that we've done that what
30:55 - we'll do is outside of the big if
30:57 - statement there we're gonna check to see
30:59 - if the item is an actual real item
31:01 - because we could to call it or an
31:03 - exploiter could try and call it with a
31:05 - fake item name so if the item is there
31:07 - and it's not it's a real item it's
31:09 - definitely there then we need to see if
31:11 - you have enough money to purchase it so
31:13 - we'll say if item find first child cost
31:17 - then and then inside of there because it
31:23 - has to have a cost value don't forget
31:24 - because we put a cost value inside each
31:26 - skin and each trap called cost and we
31:29 - should set its value to its price so
31:31 - that's how we're going to set the price
31:32 - of objects so if it has got a cost value
31:34 - then we're able to check if we have
31:37 - enough money to buy it now we're also
31:39 - just going to quickly check if it is not
31:41 - in your inventory because we only want
31:42 - the players to be able to buy it if it's
31:45 - not already in their inventory if they
31:46 - already do have it then they've already
31:48 - bought it so what's the point in buying
31:49 - it again so because we create that in
31:52 - inventory variable we now know whether
31:55 - the item is is already bought by
31:57 - somebody because we've checked the Zips
31:58 - if it's in their inventory so if the
32:00 - variable in inventory is true we know
32:03 - they already own the item so a way to
32:06 - check if the item is not true so if it's
32:08 - false is by saying if not in inventory
32:12 - so if not in inventory so not means so
32:18 - so not inventory will mean if in
32:20 - inventory is equal to false so it's the
32:22 - same as saying if in inventory is equal
32:25 - to false so we'll just say if not in
32:28 - inventory because it makes more sense if
32:30 - it's not a new inventory then
32:33 - we'll check to see if we can buy it with
32:37 - enough points but else if it is new
32:42 - inventory we know you already own it so
32:44 - we want to equip it
32:45 - we'll get onto that later but what we
32:48 - want to do is we want to now check if it
32:50 - is not in the inventory we want to check
32:52 - if you have not if you have enough money
32:53 - to buy it
32:54 - so we can say if item cost because that
32:58 - cost value inside the item which we
33:00 - added value is less than or equal to
33:04 - player tokens value if you named your
33:07 - token something different maybe you
33:10 - named it cash you'd say cash but I've
33:12 - called mine tokens so if the items cost
33:16 - is less than or equal to the amount of
33:18 - money we currently have so if the item
33:20 - cost 50 and we are 60 then this would be
33:24 - true because 50 is less than or equal to
33:27 - 60 so if you have enough money then
33:30 - we're going to print you can buy this
33:33 - and then we need to subtract the money
33:36 - from your balance so we save player dock
33:39 - tokens value equals player tokens value
33:43 - minus item cost star value we're taking
33:47 - the cost of the item away from your
33:49 - current tokens balance and again change
33:52 - the tokens to the name of your currency
33:54 - if you've named it something different
33:55 - to mine so you change the tokens there's
33:57 - something like cash or whatever or
33:59 - whatever you've called it but I'm going
34:00 - to keep mine tokens because that's what
34:02 - I've called mine now that we've taken
34:04 - the money away I said earlier we're
34:07 - going to put a value into the trap
34:08 - inventory or the skin inventory that's
34:10 - what we're gonna do now so local string
34:13 - value going to create a variable for
34:16 - this string value we create the value by
34:19 - saying instance dot new creating a new
34:21 - objects we're going to insert a string
34:23 - value that's the class name string value
34:26 - dot name we're going to set the name
34:27 - with a string value to be the same name
34:29 - as the thing we've just bought so we can
34:31 - say item dot name then well because we
34:34 - know whether it's a skin or a trap we
34:37 - can do another if statement check to see
34:39 - if item type equals skin so if it's a
34:42 - skin then we'll say string value dot
34:45 - parents equal
34:47 - player dot skin inventory but else if
34:53 - the item type is a trap trap we're gonna
34:57 - put the string value screen with string
34:59 - value at parent into player dot trap
35:02 - inventory so depending on the item type
35:04 - it's either going to go into the skin
35:05 - inventory or the trap inventory so if
35:07 - you try to buy it again we'll check to
35:09 - see if you have this item already in
35:12 - your inventory and if you do then it
35:14 - won't let you buy it again
35:16 - because this if statement here if not in
35:18 - inventory will only that you buy the
35:22 - item if it's not already in your in
35:24 - either your skin or trap inventory so
35:27 - adding that value just helps it just
35:29 - basically only allows the player to buy
35:32 - an item once so they don't keep losing
35:34 - money once we've done that we're going
35:36 - to return back to the client because
35:39 - it's a remote function not a remote
35:40 - event we're using a remote function so
35:42 - we can send a message back to the client
35:44 - back to our client shop local script to
35:47 - say whether it was a success and we
35:48 - bought the item or whether we equip the
35:50 - item instead because if you already own
35:52 - the item we're going to want to equip it
35:54 - not buy again so he can tell the local
35:57 - script what happened did the player buy
35:59 - the item successfully did the purchase
36:01 - fail because we didn't have enough money
36:03 - or the item wasn't a proper item or did
36:06 - they just equip the item so he can
36:08 - return a message a string he can turn
36:10 - any data but in this example in this
36:12 - case we're going to return a string
36:13 - message and then we can check that
36:15 - message on the client and if it said
36:17 - equipped we could change the GUI to say
36:19 - it got equipped but if it was bought we
36:21 - could change the GUI to say it's now
36:22 - owned you go I'm saying so we can return
36:25 - ok you can return what if you like I'm
36:27 - gonna return the message board and I
36:29 - recommend that you do the same and you
36:31 - return the same values as me because if
36:33 - you check for something else and you
36:36 - check you don't do what I've done of
36:39 - course you can be but some people will
36:42 - have will make their own values and then
36:44 - they'll make mistakes because they're
36:46 - trying to check what I'm checking for
36:47 - even though they've changed their values
36:49 - from what I've said so I'm going to
36:51 - return bought and I recommend you do as
36:53 - well and that's just we can check to see
36:55 - if it was bought then we know that it
36:58 - was a success
36:59 - um elves in this if statement here else
37:03 - if you don't have enough money we can
37:05 - return failed because the purchase
37:07 - 'obviously didn't go through because you
37:08 - didn't have enough money and over here
37:11 - in the your the own it part for the else
37:14 - statement for if not in inventory we
37:17 - know that you already have this item in
37:19 - your inventory so we can print out we
37:26 - can print you already own this item ok
37:32 - and what we can do is because if you've
37:36 - clicked the button and you already own
37:38 - the item you're going to want to equip
37:40 - it if you already own it and you've
37:41 - clicked the button you want to equip the
37:43 - item so firstly we need to check again
37:47 - whether the item type is a skin or a
37:49 - trap
37:50 - so if item type equals equals skin then
37:54 - we can equip the item by setting the
37:57 - players equipped skin value to the item
38:02 - name because it's a string value and it
38:04 - will take text only we can set the value
38:07 - of that string value which is the
38:09 - equipped skin value to the name of the
38:11 - item which we're going to equip else if
38:13 - item type is a trap then we're gonna say
38:19 - player dot equipped trap dot value
38:21 - equals item name so what we're doing is
38:23 - we're setting the player's equipped
38:25 - value so that we can know which item
38:27 - they currently have equipped and then we
38:30 - can just return back to the client in a
38:33 - string the word equipped and it doesn't
38:36 - have to be the words bought failed or
38:38 - equipped it's not like you only have the
38:40 - choice you could return or if you want
38:42 - so you could return transaction success
38:44 - or one two three four five soon it loads
38:47 - in numbers but the so that we know what
38:49 - we're doing and we can just return
38:51 - simple messages which tell us whether it
38:53 - was a success or not so we know that
38:56 - when we invoke this remote function it's
38:58 - going to return back to the client this
39:00 - result a variable is either going to be
39:02 - equal to the word the string bought
39:05 - failed or equipped okay and also if the
39:10 - item is not there we'll also just
39:13 - failed and that there was no skin no
39:17 - skin / trap of such name found in case
39:21 - we accident in case we call the remote
39:23 - function with a item that isn't there
39:26 - for some reason
39:27 - so what happened is we will invoke the
39:31 - remote function and if everything goes
39:33 - well it will return the board or if it
39:36 - doesn't go well and something fails weed
39:39 - after we don't have enough money it will
39:41 - return failed and if we equip the item
39:43 - it will return equipped and that one of
39:47 - those messages will be will be the
39:49 - result so the result variable will be
39:51 - one of those messages because whatever
39:52 - gets returned is set to this variable
39:55 - that calls it so if we were to print
39:57 - result and we test it out and we wait
40:07 - for the shot to be populated because it
40:09 - takes five seconds there we go let's
40:15 - open up the output and if we click on
40:18 - shaggy man for example by the way let's
40:20 - have a look at our cash our tokens are
40:23 - sorry
40:23 - watch the value when I click the Buy
40:26 - button so it says you can buy this and
40:28 - then it says bought and it's taken the
40:31 - money away we don't see anything in the
40:33 - shop though that's because we haven't
40:34 - coded it yet to show the result but the
40:38 - good thing is that it's printed out you
40:41 - can buy this so it knows it's not ready
40:43 - an iron entry we haven't already bought
40:44 - it and then it takes the money away and
40:46 - then it returns bought and then because
40:50 - we returned it and we print out the
40:51 - result the result is now equal to bought
40:54 - whereas it could it could have been
40:56 - failed or equipped so we can use those
40:58 - messages that we've returned to tell us
41:00 - what happened and what we know what
41:02 - happened on the client we can show
41:04 - something on the GUI so we could show
41:06 - that a tick you know a tick on the on
41:10 - the template button and we could change
41:12 - the text on the the cost to say that we
41:16 - now own the item or we now have the item
41:18 - equipped so to do that we can say if
41:23 - results equals equals bought
41:26 - then we know that the purchase was a
41:29 - success
41:31 - else if results is equal to acquit then
41:35 - you equip the item okay and we're not
41:40 - going to bother with and purchase power
41:42 - because if the purchase failure we don't
41:43 - need to show anything on the screen
41:44 - so if they've bought the item we are
41:47 - going to set the frame there's a button
41:52 - inside the frame if you have a look here
41:57 - shop client shop if I drag this template
42:00 - into the skins I'm into the folder here
42:02 - this is the button the person has an
42:05 - image and currently that image is a
42:06 - shopping cart or if we wanted to make it
42:09 - a green tick though I've uploaded a
42:12 - green tick I've taken a green tick from
42:16 - the roadblocks library and I'm going to
42:18 - create these two variables that's off of
42:20 - my client shop script and these are the
42:22 - two assets IDs for the shopping cart and
42:24 - the green tick so I'm going to put these
42:26 - in the description for you so you can
42:27 - copy them and put them into your local
42:29 - scripts just at the top here in the
42:31 - client shop script now because these are
42:35 - roblox assess IDs we can update the
42:37 - image over the button with them so when
42:39 - the purchase is bought and it was at
42:41 - sorry when the result is bought and when
42:43 - it was a success and you've now bought
42:44 - the item we can set the image property
42:46 - of a button to the green tick and then
42:50 - we can set the text of the kosst so this
42:55 - here this cost text we can change it to
42:57 - say owned because you now own the skin
43:04 - or the trap because you've bought it it
43:05 - was a success now if you click the
43:09 - button again and it's equip the item for
43:12 - us we want to again set the image to a
43:16 - green tick in case it wasn't already a
43:19 - green tick and set the text of the kosst
43:22 - text label to equipt like this so if you
43:26 - click it again it will change from a
43:28 - from saying owned to equipped
43:31 - okay so now let's check it again I'm
43:34 - gonna take the templates make sure we do
43:37 - this take the template out of skins out
43:39 - folder make sure it's always in the
43:42 - client shop local Swift house it's not
43:43 - going to work you might have forgotten
43:45 - and it and there might be might not be
43:47 - working for you and that might be why
43:49 - I've also got a video on my channel
43:51 - about how to fix bugs or errors if you
43:54 - encounter bugs in your piggy don't be
43:56 - disheartened by them everybody's gonna
43:58 - get bugs at some point on some project
44:00 - so check out that video on my channel
44:02 - when you finish this one if you have a
44:03 - book and don't give up so if I click the
44:05 - Buy button now on shaggy man you can see
44:08 - it's changed to a green tick and it now
44:10 - says that I own it I can do the same
44:12 - thing on the piggy and I've I own that
44:14 - one as well now let's go into the our
44:16 - player in game two players and we
44:18 - currently have nothing equipped now if I
44:20 - click on Shaggy man again
44:21 - it says equipped and now my equipped
44:24 - skin value is the shaggy man if I was to
44:27 - equip the piggy
44:29 - now the piggy says equipped but you can
44:31 - see shaggy man still says it's equipped
44:33 - so we need to clear the other GU eyes we
44:36 - need to get rid of this equipped text
44:38 - when we equip a new item so in order to
44:44 - do that in the equipt section here what
44:47 - we can do is we can change the other
44:49 - frames in the in these skins and so in
44:52 - the skins or traps folder so what we'll
44:58 - do is we will say for I know we won't do
45:05 - that because we will do a for loop going
45:07 - we will say for underscore comma objects
45:13 - in pairs and we will loop through skins
45:18 - dot folder color and get children do if
45:23 - object is a frame and the object has a
45:29 - cost text inside of it so if it's a
45:34 - template and has a cost to text label
45:36 - inside of it then we know it's not the
45:38 - UI grid layout we don't want to delete
45:40 - that or tour chain try and change a
45:44 - property that it doesn't have so if it
45:47 - does have a cost value inside of it then
45:49 - we can check oh sorry
45:52 - object not obj and if it does have a
45:56 - cross folio inside of it then we can see
45:59 - we want to check to see if it's in your
46:03 - inventory in your skin symmetry so if
46:07 - game dot player's dot local player got
46:11 - skin inventory cannot find first child
46:16 - object dot name because we could have a
46:20 - skin in there which we don't own but
46:23 - we're still trying to update it anyway
46:25 - so we don't want to update these skins
46:27 - that we don't own so if if we own that
46:31 - skin then we can we know that we own it
46:35 - so we want to change it from being
46:37 - equipped back to being owned so we could
46:39 - say objects dot cost text equals owned
46:42 - and that way it will only update the
46:45 - ones that we haven't bought so instead
46:46 - of setting them all back to be owned
46:48 - because you know you can't really tell
46:51 - which ones are currently owned where you
46:53 - could but it would take a bit more code
46:54 - a good way to just update the ones that
46:56 - we know already owned or just by
46:58 - checking if we own the name of each
47:00 - objects in our skin inventory now
47:04 - because this is for adding the skins not
47:05 - the traps and we'll have a separate
47:07 - function that just the trust which is
47:09 - kind of the same thing so what this will
47:11 - do is again yep sets the other frame
47:14 - templates in the skins folder if they
47:19 - are equipped because we've just equipped
47:21 - the new item we're basically setting the
47:24 - them to look like that unequipped
47:26 - because they are because we've got a new
47:28 - equipped value and then that's all we
47:33 - need to do for the equipping so if we go
47:36 - and try it out again we'll have to wait
47:39 - five seconds of course for the items to
47:41 - be loaded in because that's the weight
47:42 - that we've put on our local script for
47:44 - now we will fix that later on because we
47:47 - will only load the items once your data
47:49 - has been loaded from the data store so
47:51 - we need to wait for the data store to be
47:52 - finished
47:53 - so we can load those items and we
47:54 - haven't coded the data store yet so if
47:57 - we click on an item we own it we now we
48:01 - can again oh it doesn't seem to be what
48:05 - it doesn't seem to be working
48:06 - coming up as equipped some reason okay
48:09 - let's check that out so it says you
48:12 - already own this item if not in
48:16 - inventory so it's setting the equipped
48:25 - skin value-returning equipped oh I know
48:36 - what's happened because we've set it to
48:38 - equipped before this if before this for
48:40 - loop it's immediately setting the new
48:43 - equipped frame to say equips but then
48:46 - it's instantly changing its back because
48:48 - we're looping through them all so we
48:49 - need to loop through them all first and
48:51 - then change the this frame the specific
48:56 - frame which we now have equipped to say
48:58 - it quits it's just going to instantly be
48:59 - reverted back so let's try that once
49:02 - again
49:03 - but if debugging for you there so even I
49:06 - make mistakes so if you make a mistake
49:09 - don't you know don't feel down or
49:11 - anything so we click it we now own it we
49:13 - click it again and it's now equipped ok
49:15 - and we can tell because it's our
49:16 - equipped skin but if we now buy another
49:19 - skin and we click equipped you can see
49:21 - it's switched because now the pig is
49:23 - equipped it says owned on the shaggy
49:24 - mane and you can do it again I can try
49:27 - and click it again but it won't take
49:29 - your money because it knows that you
49:31 - already own it so that's great so we now
49:34 - are able to equip our skin so soon we'll
49:38 - be able to in another script in a server
49:41 - script when we choose the piggy we'll be
49:43 - able to check their equipped skin value
49:45 - and look it up in the skins folder and
49:48 - load in their piggy so to make them look
49:50 - like they're the piggy or the character
49:52 - that they've chosen now let's do the
49:55 - same thing with the traps so I'm going
49:59 - to copy this function and I'm going to
50:01 - paste it underneath and I'm gonna change
50:04 - it from add skins to add traps and we're
50:08 - gonna change nice is very important
50:10 - watch what I'm doing so I firstly change
50:12 - the name of the function to our traps
50:13 - I'm then changing in the by item invoke
50:17 - I'm changing the second
50:19 - argument from skin to trap that's really
50:21 - important and then down here where we've
50:24 - got the for-loop to clear the other
50:26 - items from the to use to change them
50:30 - from equipped to owned in the skins
50:31 - folder we're gonna change the skins to
50:34 - be traps and apart from that there is
50:39 - everything so now if we call our traps
50:41 - with a traps data and play the game
50:47 - again it should be working for the traps
50:51 - so click on play and we've got the skins
50:57 - ah but it is adding the trap to the
51:01 - skins for some reason so let's check
51:03 - this out let's see what we can weave off
51:05 - obviously missed something so AB traps
51:08 - and is here we are on the local frame
51:13 - equals create frame in our traps
51:16 - we're parenting it to the traps folder
51:18 - we need to parent it to the stories
51:20 - we've parented it to the skins folder
51:22 - but we should actually be powering it
51:23 - parenting it to the traps folder so
51:26 - change the name of the front trim to our
51:27 - traps change the skins or folder to
51:30 - traps the folder only in the add traps
51:32 - function leave the add skins function as
51:34 - it is change the second argument in the
51:37 - replicated storage drop by item in work
51:39 - server to be a trap change the for loop
51:43 - to be looping through the traps folder
51:44 - not the skins folder and also one last
51:47 - thing remember
51:48 - down here where you're checking game dot
51:51 - players that local player change that
51:53 - from skin inventory to trap inventory
51:56 - because we're now checking the players
51:57 - trap inventory so quite a few things to
52:00 - change there but this is going to add
52:02 - the traps to the traps folder instead so
52:04 - wherever you've got skins change it to
52:06 - traps only in the up traps
52:10 - function though so you should have two
52:11 - functions one for adding the skins one
52:13 - for adding the traps okay and there you
52:16 - go so let's try it once more and wait
52:24 - for them
52:25 - added so there should be only two skins
52:27 - here yep and if we click on traps you
52:28 - can see we've got our bear trap
52:30 - so let's go into our player Alvin blocks
52:32 - and equip the bear trap there we go and
52:37 - let's equip a skin as well let's equip
52:40 - the shaggy man so we now have an
52:42 - equipped skin the shaggy man and the
52:45 - bear trap the equipped trap now you can
52:48 - see if we try and buy them again
52:50 - multiple times
52:51 - it won't take on money but it will
52:53 - change the equipt values so very very
52:55 - cool and that seems to be working
52:57 - perfectly now right next I'm going to
53:01 - show you how you can load the traps and
53:05 - the characters into the game when you
53:07 - get chosen so let's start by loading in
53:11 - your trap okay so if you're the piggy
53:14 - and you get your traps etc how do we
53:18 - give you your own chosen trap because
53:21 - there could be a yellow traffic blue
53:23 - trap how do you get given that trap
53:25 - instead of the normal bear trap so let
53:27 - me show you so we know that when you
53:31 - place a trap
53:32 - we are going to be in the event handling
53:35 - script so in this script here in the
53:38 - place trap events what we're doing is
53:41 - we're going into the server storage
53:43 - getting the bear trap out and cloning it
53:44 - but the bear trap no longer lives in the
53:47 - server storage because we've now put it
53:48 - into the replicator storage so what we
53:51 - need to do is we need to firstly get the
53:54 - player's equip the trap value if they
53:55 - have one so let's just get rid of this
53:58 - for now this local trap but keep the
54:00 - other two lines for the C frame and the
54:01 - parent but we're going to say if player
54:05 - got equipped trap got value is not equal
54:09 - so one of this squiggly lines so shift
54:12 - and hashtag and then equals and then an
54:16 - empty string because when it when it's a
54:17 - string value to check if it's empty you
54:19 - just put two speech marks like that and
54:22 - because it's an empty string so if there
54:24 - is no so so so if the equipped trap is
54:26 - not equal to nothing so if it's not
54:28 - blank and there is actually something
54:30 - that is equipped and there is an equip
54:32 - trap then we're going to see if there is
54:35 - a trap in replicated storage dot traps
54:38 - with the same name so if game got
54:42 - replicate the storage got trap's come on
54:45 - find first child and inside of here
54:51 - we're going to say player got equipped
54:53 - trap dot value so if there is a trap in
54:58 - replicated storage with that name then
55:01 - we're going to let's have this variable
55:04 - good local trap we'll define it outside
55:07 - the if statement so we can reference it
55:10 - later on down here outside of that a
55:11 - statement so if there is a trap in
55:13 - replicated storage with that name we're
55:15 - gonna set the trap variable to be that
55:18 - trap so game got replicated storage doc
55:21 - traps and then in square brackets could
55:24 - be no longer need find first child
55:25 - because we know it's there for sure
55:27 - play out dot equipped trap dot value
55:30 - then outside of the square brackets curl
55:33 - on clone so it's going to make a clone
55:35 - of the trap with our name that we need
55:38 - and that name is going to be the value
55:39 - of your equipped trap
55:41 - so we've now managed to get the trap out
55:44 - of replicated storage by cloning it and
55:46 - we found it by giving the name and that
55:48 - name is actually the the value of your
55:51 - equipped trap which is why we're setting
55:53 - the value of equipped trap to the name
55:55 - of the GUI that you clicked sorry the
55:57 - frame that you clicked and that way
55:59 - because we've set it with we've stored
56:02 - it in a value in the player we can
56:03 - access it from different scripts which
56:05 - is why the equipped trap and equipped
56:07 - skin things are so important and that's
56:09 - how we can get the trap and the skin
56:12 - that you the player selected from other
56:14 - scripts by storing it like this so now
56:17 - the trap that they will have selected
56:19 - will be see framed and it will be placed
56:22 - underneath their character on the floor
56:23 - and it will also be parented to the map
56:25 - just like any other trap would be so
56:27 - let's test that out and see if it works
56:31 - in fact no that wouldn't work yet
56:35 - because we've also taken the piggy out
56:38 - of service storage total error so let me
56:40 - show you how we can set the piggy
56:41 - character to be the one that they've
56:42 - chosen as well and then we'll test it
56:45 - oh actually I forgot as well
56:48 - if the player doesn't have a trap
56:50 - equipped so in this else statement we
56:55 - need to give them the default trap don't
56:56 - we so we need to say trap equals game
57:00 - but replicated storage and for me the
57:03 - default trap that you're gonna get is
57:05 - going to be the bear trap so game to one
57:08 - of case storage dog traps basically
57:10 - choose the trap that you want to be the
57:11 - the free one right so in this case my
57:14 - trap is going to be the bear trap so I'm
57:17 - going to set the cost to be zero and
57:22 - yeah I'm gonna say trap stop bear
57:24 - underscore trap : clone so even if you
57:29 - haven't bought one or equipped one
57:30 - you're gonna get the bear trap anyway
57:32 - because that is some free so in fact
57:37 - what we could also do is if you don't
57:38 - want this one to appear for sale you
57:40 - could put this into server storage you
57:42 - could keep the bear trap in server
57:44 - storage and change this to server
57:45 - storage and that's gonna be the default
57:48 - one that you get it just won't show up
57:50 - in the shop so I'm still gonna have some
57:53 - traps in the traps folder and we'll make
57:56 - that very soon but I'm gonna show you
57:58 - how you can make the piggy become the
58:02 - character that you've selected so in the
58:03 - game logic and around module we are
58:06 - going to go to the dress piggy section
58:10 - okay dress piggy and what we currently
58:15 - do is we get the character from server
58:16 - storage obviously it's not there anymore
58:18 - so let's get rid of this local character
58:20 - line keep everything else but for now
58:22 - we're gonna create the variable local
58:24 - character but keep it blank because
58:25 - we're defining out outside of the if
58:27 - statement we're about to make so that we
58:29 - can access it from later on in the same
58:31 - function because if we were to define it
58:33 - in the if statement we wouldn't be able
58:35 - to access it could be it would be local
58:37 - to that scope the scope of the if
58:38 - statement so we're gonna say if piggy
58:42 - dot equipped skin because piggy is still
58:45 - the player is that player object we just
58:47 - named them piggy
58:47 - so if piggy either equipped skin dot
58:49 - value is not equal to nothing so a blank
58:52 - string so if it is equal to something
58:55 - then we're going to check in the
58:57 - replicated storage in this
58:59 - gimmes folder here to see if it is an
59:01 - actual skin that's in there so to do
59:03 - that very simple all we need to do is
59:05 - say game if game don't replicate this
59:08 - storage dot skins come on find first try
59:12 - old piggy dots equipped skin dot value
59:16 - then so if you do have that if that skin
59:19 - is there in the replicator storage in
59:21 - the skins folder and it's a proper skin
59:22 - it's a real skin we can update the
59:25 - character variable to be games or
59:28 - replicate storage dot skins and square
59:30 - brackets piggy equipped skin dot value
59:34 - so we're getting the skin out of the
59:36 - replicated storage using the name of the
59:39 - skin they have equipped in their
59:41 - equipped skin value so we can clone it
59:43 - out like that and then in this first if
59:47 - statement if we need an elf don't we
59:49 - because if they don't have a piggy skin
59:51 - equipped if they're equipped skin is
59:53 - black which it could be if they're a new
59:55 - player we need to give them the normal
59:58 - piggy skin so again if you wanted to if
60:02 - you wanted the default skin not
60:04 - available to purchase you can put it
60:08 - into service storage and that's what I'm
60:11 - gonna do I'm gonna put it back in our in
60:12 - server storage okay I'm only gonna put
60:19 - the piggy in the self storage if you
60:21 - wanted the piggy to be available to
60:23 - purchase free even though they will
60:25 - already have it as the defaults you
60:28 - could put it in there and I'm just gonna
60:29 - keep the cost at zero because you're not
60:31 - gonna be able to buy those two so these
60:33 - two are they gonna be the defaults so
60:34 - I'm gonna keep them in server storage
60:35 - but for anything else that you want to
60:37 - buy okay that would go in replicated
60:39 - storage okay so now that we've done that
60:45 - we will be able to spawn the piggy and
60:48 - as your skin let me show you so I'm what
60:51 - I'm going to do is I'm going to hide the
60:56 - shop frame we're going to set the shop
60:58 - frames visibility to be false then I'm
61:00 - gonna go into the client shop I'm gonna
61:03 - go into the client shop yeah I'm gonna
61:08 - go in
61:09 - in fact well I'm going to actually only
61:13 - go into them the client main because
61:14 - that's all we've done the rest of our
61:15 - button coding and I'm just gonna code
61:19 - the white shock button to open the shop
61:21 - so I'm gonna say scripts doc parents :
61:28 - wait for child shop BTN because that's
61:30 - the name of the shop button which is
61:32 - here inside of the main GUI dot mouse
61:36 - button one-click curl on connect
61:38 - function then when you click it will say
61:42 - script doc Barents wait for child sharp
61:47 - dot visible equals not and copy that so
61:54 - what it's going to do is when you click
61:55 - the shop button it's going to invert the
61:58 - shops visible property so the shop has a
62:02 - property called visible and it can be
62:03 - either true or false and so when it's
62:05 - false and you click the button the
62:07 - opposite is of force is true so it's
62:09 - going to make it visible and when it's
62:10 - true you click it again the opposite of
62:12 - true is false so it's going to make it
62:13 - false again so you can't see it it's a
62:15 - very simple way of how to make the
62:16 - button work anyway
62:18 - let's go into a test mode with an actual
62:22 - server and player ok so I'm going to
62:26 - quickly if I can I might be able to do
62:31 - it in time I will be able to do in time
62:33 - don't worry ok I've bought and equipped
62:35 - the shaggy man on both accounts so
62:39 - whoever gets chosen as the P should be
62:41 - the shaggy man and the reason you're
62:43 - only seeing one don't forget is because
62:44 - we've taken the bear trap and the piggy
62:47 - out of the shop because they're the
62:50 - default so I'll show you in a minute how
62:52 - you can add your own characters to the
62:55 - shop but let's hope this works
62:58 - look at that shaggy man is the piggy is
63:02 - now shaggy man the character that we
63:05 - designed earlier and but also one thing
63:07 - to note is that the animations will not
63:09 - work with other characters in fact they
63:14 - might work I'm not sure I don't think
63:16 - they will though especially if it's a
63:17 - different character to the piggy beakers
63:19 - you have to animate each character
63:22 - for the bat okay it does work this one
63:27 - because I think the piggy is wearing
63:29 - he's wearing the same package as the
63:31 - piggy was and this was a very small
63:33 - reskin of the piggy but for some you
63:36 - might have to redesign the animation for
63:39 - that one but it seems to be working very
63:41 - well so I will show you now how to add
63:45 - your own characters and I've actually
63:50 - just realized that as well if you wanted
63:52 - to unequip the skin and you wants to go
63:56 - back to the piggy then it's probably a
63:57 - good idea to leave the piggy in service
64:00 - door in replicated storage I forgot
64:02 - about that so I'm going to put the bear
64:03 - trap back into the traps fold it in
64:05 - replicate the storage I'm going to do
64:07 - the same with the piggy and we're gonna
64:09 - go back to the play strap I'm going to
64:13 - change the replicate the serve storage
64:14 - to replicate this storage okay for the
64:17 - traps and the same thing in the round
64:20 - module in the dress piggy we're going to
64:23 - change that to replicate storage so I
64:25 - totally forgot if you wanted to equip
64:27 - your skin there's currently no way of
64:29 - doing that so an easy way to unequip and
64:31 - go back to the default is to just allow
64:33 - the piggy and the bear trap to be bought
64:36 - for free so that if they equip something
64:39 - but they want to go back to the default
64:40 - they have that choice
64:42 - so that's why I'm going to keep the cost
64:44 - of the piggy and the cost of the bear
64:45 - trap at zero but how do you add your own
64:48 - new traps well it's very very simple
64:50 - you're probably gonna want your traps to
64:52 - do different damage and to sorry to keep
64:56 - people stuck for longer or shorter so if
64:59 - you want to add a new trap what I'm
65:00 - going to do is I'm going to just right
65:02 - click and duplicate the bear trap I'm
65:04 - gonna give it a new name I'm gonna call
65:06 - this one invisi trap
65:07 - okay now this trap is gonna be fully
65:10 - transparent so you won't be able to see
65:12 - it so I'm going to just bring it into
65:14 - the workspace so we can see it I'm gonna
65:16 - set its transparency to one or in fact
65:19 - it's going to be very very faint so you
65:20 - can only just see it like this then I'm
65:23 - going to go into the death scripts and
65:24 - because you can't see it it's got to
65:26 - have a gonna have like a con so the perk
65:30 - is that you can't see it but the con is
65:31 - that it's going to only keep people
65:33 - stuck for a short amount of time maybe
65:35 - two seconds so if you want it to last
65:37 - for a different number of seconds just
65:39 - go into the death script inside of it
65:41 - and change the weight here to - we're
65:44 - not - - - any number you want if you
65:46 - wanted to last for 3 seconds change to 3
65:48 - you want it to last for two seconds
65:49 - change it to 2 not this one here because
65:51 - this is a this is one to make sure that
65:54 - you walk into the trap fully before it
65:57 - disables your walking but this one here
66:00 - after the humanoid walk speed you
66:01 - changed this it will change the amount
66:02 - of time that you get stuck for you could
66:05 - also change the speed if you didn't want
66:07 - people to get stuck but you maybe just
66:08 - wanted them to go slow for a while you
66:10 - could change their walk speed but I'm
66:12 - going to keep it as zero so now that
66:14 - I've made my invisi trap make sure it's
66:16 - got a different name to anything to any
66:18 - other traps you can't have to trust with
66:20 - the same name and just put it into the
66:21 - traps folder like that that's all you
66:23 - need to do and then if you play the game
66:25 - again I'm gonna play the game and so
66:30 - here in the shop I'm going to equip the
66:33 - invisi trap or both players and also
66:38 - this shaggy man because why not
66:40 - everybody loves the shaggy man in fact
66:43 - let's make sure the university trap is
66:44 - equipped yep I'm gonna buy the bear trap
66:48 - as well but I'm going to only equip the
66:50 - invisi trap so whoever gets chosen to
66:56 - pigley should have their invisi trap hmm
67:04 - seems to be a book ah piggy it's not a
67:11 - valid member of replicated storage I
67:13 - know exactly what's gone wrong here so
67:15 - the problem is we went into the
67:18 - replicated storage dot traps which was
67:21 - good for the trout's but for the piggy
67:23 - we just said game dat weren't kids
67:24 - storage got piggy doc clone we should
67:26 - have said game thought replicate his
67:27 - storage got skins got piggy colon clone
67:30 - okay so in the ran module in the dress
67:34 - piggy you should be in the else
67:36 - statement character equals game don't
67:38 - replicate this storage got skins docked
67:41 - piggy karana clone we forgot the skins
67:43 - let's try again
67:46 - so again we're going to equip the invisi
67:48 - trap for both players in case one of us
67:51 - is chosen as the piggy so I'm going to
67:53 - own it but I'm also going to equip it
67:54 - next round begins in zero seconds it's
67:57 - going to ask all the map voting which we
67:59 - learned in a previous video in the
68:01 - previous episode actually so make sure
68:02 - you go in and check that out and once
68:05 - this map votes is over
68:07 - hopefully our piggy will load in and
68:09 - they'll be able to place the invisi trap
68:12 - I'll also equip the Shanghai man because
68:15 - why not okay let's see if we get
68:21 - teleported here we go
68:23 - and now if I just wait to be spawned we
68:27 - can you can see the I just spawned a
68:30 - trap in the waiting area and you can
68:32 - hardly see it but it is our invisi trap
68:34 - very hard to see but it is there if you
68:36 - look closely at the bottom of the screen
68:38 - it is there so it's spawning now let's
68:42 - just place a trap here and if I walk
68:45 - into it one two you can see I was only I
68:50 - was only frozen for two seconds so it's
68:53 - a different trap it's a different trap
68:55 - it doesn't it doesn't get us for five
68:56 - seconds any guesses for two seconds so
68:58 - very very easy to add more traps I'm
69:00 - gonna add a few more I'm gonna do a red
69:02 - trap that's gonna be fully transparent
69:05 - but it's going to be red we'll do a
69:09 - yellow trap which is half transparent
69:15 - but yellow and the yellow trap will keep
69:18 - you for ten seconds but the red trap
69:21 - will only keep you for half a second
69:26 - okay so lots of different traps now and
69:29 - if you try again go into the shop you
69:37 - will see in the traps
69:40 - section there is now lots of different
69:43 - routes but they all have zero they all
69:46 - cost zero so I'm going to go and change
69:48 - the cost of I'm gonna keep the bear trap
69:50 - cost at zero but the others are going to
69:53 - cost fifty there yeah let's let's set
69:58 - this one to fifty I'll set the other one
69:59 - to seventy-five actually so they're a
70:01 - bit different so we now have lots of
70:07 - different traps available which is
70:10 - awesome so that's how you add more traps
70:11 - to the game very very simple just put
70:13 - them into the traps folder give them a
70:16 - different name you know change their
70:18 - properties if you want to change how
70:20 - they look
70:20 - there we go we've got our difference
70:22 - traps now you can equip a certain one
70:25 - perfect and you can also go back to the
70:27 - bear trap if you want to so same thing
70:31 - goes for the PE of course if you want to
70:33 - add a new character
70:34 - let's just let's go another new
70:36 - character why not
70:38 - so going to paste copy and paste into
70:40 - the workspace this has changed the
70:42 - colors in fact we can make can make a a
70:47 - ghost you could have a fully white make
70:52 - it neon no we'll make it
70:54 - marble and transparent like this will
70:59 - remove the Shaggy and will go in the
71:02 - head we'll set a special mesh called
71:05 - head set the scale to 1.5 1.5 1.5
71:10 - perfect and I'm going to change the name
71:13 - to ghost pig or just ghost like that the
71:17 - cost for this one though is going to be
71:19 - 100 so you need a hundred coins or
71:22 - tokens for that and what I'm gonna do
71:24 - you just put it inside skins play the
71:28 - game and I can play shop skins with them
71:36 - to load because it takes five seconds
71:37 - and there you go you can now buy the
71:39 - ghost and you can equip it if you like
71:41 - and you can see the equipped skin is now
71:43 - ghost you equip the trap however is not
71:46 - selected but if I equip the yellow trap
71:49 - there you go so I've split this shop
71:51 - tutorial into two parts so
71:53 - this was the first part and you can go
71:55 - straight to the second part now by
71:57 - clicking the thumbnail on your screen
71:59 - that is going to be the last video in
72:01 - this series so go there now to learn how
72:04 - to finish your piggy shop thanks I'll
72:07 - see you there