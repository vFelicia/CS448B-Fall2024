00:01 - so in this video we're going to discuss
00:03 - instance. new this is a way of being
00:05 - able to insert objects into your game
00:09 - from a script now you might want to
00:10 - insert objects whilst a round is running
00:13 - uh there's always going to be use cases
00:15 - where you'll want to do this after your
00:17 - game has been published and a server has
00:19 - been opened you can't do anything else
00:21 - unless you do things from inside a
00:23 - script so you can't manually insert
00:25 - parts or manually insert objects like
00:27 - you can right now in studio so how do we
00:30 - insert an item from a script well it's
00:32 - really simple you say instance. new and
00:35 - then you put a pair of brackets or
00:37 - parentheses and then you insert the name
00:39 - of the object you want to insert and
00:41 - this is the class name so every object
00:44 - in Roblox can have its own specific name
00:46 - for example we've got a base plate a
00:49 - spawn location these are all custom
00:51 - names however the class name is the
00:54 - actual uh underlying name of what the
00:58 - item actually is so our base plate is
01:01 - called base plate but it's actually a
01:03 - part right it's the same as any other
01:06 - part in the game but it's just because
01:08 - it's so big and it's called the base
01:10 - plate it's got a different name but the
01:12 - class name is what matters here so if we
01:14 - wanted to insert a part we would just
01:16 - say in a string format by having two
01:19 - speech Marks here part it's got to be
01:22 - case specific you've got to have that
01:24 - capital P for part you can view the all
01:27 - of the different class names in the
01:29 - object Brown so there's all these
01:31 - different items that you can insert some
01:33 - of these are services so you've got
01:35 - things like Parts which you can insert
01:38 - um have a look through later on but what
01:40 - this will do is it will insert a part
01:43 - into the game however we can't set any
01:48 - properties of this part yet we can't set
01:50 - its name we can't set its position we
01:52 - can't parent it to anywhere so this
01:55 - won't do anything it will insert a part
01:57 - but it won't put it anywhere in the game
01:59 - so we won't be able to see it if we want
02:01 - to make further changes to this um new
02:05 - part we we've created well the instance.
02:09 - new will return that part so anything we
02:13 - would now then do to this part would be
02:16 - done so we could for example say parent
02:18 - equals game. workpace okay but still how
02:22 - can we do things like changing
02:24 - properties if I then wanted to change
02:26 - its transparency what would I do so you
02:30 - could say transparency equals 1 but the
02:33 - problem here is firstly we haven't
02:36 - parented the the object yet uh and I'll
02:38 - come on to that later but secondly we
02:41 - can only set one property I've set the
02:43 - property now how do I set the
02:46 - reflectance no that doesn't seem to want
02:48 - to work produces a red line so what we
02:50 - need to do is we need to store The
02:52 - Returned part from this instance. new as
02:55 - a variable just like this you can call
02:58 - the variable whatever you like doesn't
02:59 - have to to be K sensitive I could call
03:01 - it cheeseburger if I wanted to or
03:03 - anything but I'm just going to call it
03:04 - part for Simplicity and then I can say
03:07 - part. transparency equals 1 part.
03:11 - anchored equals true part. position
03:14 - could be a vector 3 value of some
03:17 - location you can set as many properties
03:19 - as you like you can even set the name I
03:22 - could call it my
03:23 - part but we still need to parent this
03:26 - part nothing is going to appear in the
03:28 - game World unless we parent parent it
03:30 - and when I say parent it it means we
03:31 - have to put it somewhere in the game so
03:33 - we can see it and that means we need to
03:35 - put it into the workspace because the
03:37 - workspace is where everything gets
03:39 - rendered for us to see so part. parent
03:42 - equals game. workspace and what this
03:45 - will do is it will place our part in the
03:47 - game if I click on run straight away
03:50 - when this script runs we look around we
03:53 - should find our part let's have a look
03:55 - in the workspace okay here it is my part
03:58 - of course we can't see it because I set
04:00 - the transparency to one however you can
04:02 - see it has been created there okay so
04:06 - you will notice that I've parented the
04:09 - instance last why have I set the parent
04:12 - property last this is because I want to
04:15 - firstly create my part I want to set all
04:18 - of the properties and then I want to
04:20 - place it into the game world and this is
04:22 - because when we place it into the game
04:24 - World it will be replicated to all of
04:26 - the other players in the game so we've
04:28 - created this part on the server the game
04:31 - server has created it and once it's been
04:33 - created it's going to send a signal to
04:35 - all of the other players in the game
04:37 - saying okay there's been a change we've
04:39 - inserted this part and this part has got
04:42 - transparency of one it is anchored its
04:45 - position is here we've called it my part
04:48 - that's all the information you need and
04:50 - we could just broadcast that in one
04:52 - signal now this is all done under the
04:54 - hood by Roblox you won't see it
04:56 - happening but when a is parented that is
05:01 - when the server sort of broadcasts this
05:05 - message to all of the players in the
05:06 - game saying okay this part has been
05:09 - created here is the latest update if we
05:12 - were to start then if we were to parent
05:14 - it first and we were then going to
05:16 - change all these properties afterwards
05:18 - every time we change the property it
05:20 - would have to broadcast one of those
05:22 - messages it would do it for the
05:23 - transparency for the anchored property
05:26 - for the part position for the name right
05:28 - so instead of having to have those
05:30 - individual signals being sent every time
05:33 - we make a change to this part right we
05:36 - what we could just set all the
05:37 - properties in one go before the part has
05:40 - been replicated and then parent it which
05:42 - is going to replicate it with just one
05:44 - signal now I'm sort of explaining this a
05:47 - high level it's a little bit more
05:49 - complex than that but you just don't
05:51 - really need to understand what I'm
05:52 - saying is for best practice you want to
05:56 - parent the object to wherever you're
05:58 - putting it after after you set all of
06:00 - the properties okay you you may have
06:02 - seen in other videos um what people have
06:05 - done is they've parented the item
06:08 - straight away by having a second
06:10 - argument here in the instance. new and
06:13 - whilst this does work again it's not
06:15 - best practice because it is parenting
06:18 - the item first to the workspace and then
06:20 - we're changing all these properties on
06:22 - the server and the server has got to
06:24 - replicate all of these changes by
06:26 - sending a message over the network to
06:28 - the connected player or the connected
06:30 - clients so what we can do is we can save
06:33 - having to send those repeated signals
06:35 - out by setting the properties first and
06:38 - then parenting it once they've all been
06:40 - set and it's just best practice it's not
06:43 - going to you know it's probably not
06:45 - going to cause noticeable problems in
06:47 - your game but among scriptors it's the
06:49 - best practice to set your properties
06:51 - first and then parent it okay so that is
06:55 - instance. new you don't have to just use
06:57 - it for parts you could use it for all
06:59 - sorts of different um use
07:02 - cases you know for example in your game
07:05 - you might have a game mode where um it
07:09 - is murderers against sheriffs you want
07:12 - to insert a murderer team you can just
07:14 - say instance. new team murderers. name
07:18 - equals murderers okay and murderers.
07:22 - parents equals game. teams and you could
07:25 - do the same thing for a sheriff's team
07:28 - okay now you may be saying okay okay but
07:30 - why not just have the teams created in
07:33 - studio you know why why do you have to
07:35 - create them via script that's very true
07:38 - but you might have different rounds and
07:40 - if the murderers V Sheriff's round is
07:42 - selected you only want to have these
07:44 - teams created if you might have another
07:46 - round where it's a completely different
07:47 - set of teams I'm just showing you how
07:50 - you can use instance. new to insert
07:54 - teams into your game like this okay um
07:57 - and there we go our murderous team is
07:59 - there not sure why the sheriffs aren't
08:01 - showing up I think that's a UI bug with
08:03 - Roblox however that is instance. new
08:06 - hopefully you get the idea of how to use
08:08 - it let me know if you have any more um
08:10 - questions video ideas uh drop a like if
08:12 - you found this useful don't forget to
08:14 - subscribe and I'll see you next time