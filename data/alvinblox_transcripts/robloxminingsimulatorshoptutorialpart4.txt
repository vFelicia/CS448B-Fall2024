00:00 - if you new to my channel make sure to
00:01 - subscribe and click on the notification
00:03 - bow so you never miss out when I upload
00:07 - a brand new video
00:10 - so now we're going to work on the buy
00:12 - button and the create transaction remote
00:15 - function so that we can check to see if
00:17 - the player has enough money and give
00:19 - them their item so let's insert a local
00:23 - script into the buy button and we're
00:25 - gonna start off by justifying just
00:28 - defining one variable at the moment
00:30 - which is gonna be a model name and that
00:33 - is gonna be equal to script dot per and
00:36 - dot parent dot model name which is the
00:39 - value of the model which we're currently
00:41 - looking up well they're gonna want to
00:43 - have a mouse button one click event for
00:47 - when the button has been pressed and
00:49 - we're going to want to invoke the create
00:53 - transaction remote function and there's
00:57 - gonna be an outcome from this whether we
00:59 - can buy the whether the the purchase has
01:02 - been granted or declined maybe because
01:04 - they don't have enough money or
01:05 - something so that outcome is gonna be
01:07 - either true or false
01:08 - well not true or false because we're
01:10 - gonna we're gonna send back an error
01:12 - message and but we can say game don't
01:14 - replicate its storage but create
01:17 - transaction
01:19 - hold on invoke server and we're going to
01:24 - pass through as a as a parameter script
01:27 - dot parent dot parent in fact we can
01:29 - just say model name doctor value
01:33 - okay so we're passing the name of the
01:34 - model and then on the server we're gonna
01:36 - check to see if the player has enough of
01:39 - money to buy that item and if they do we
01:44 - will return true and we'll let them buy
01:47 - the item
01:51 - so let's head into our main server
01:54 - script so that we can script this create
01:56 - transaction remote function in the
01:59 - server so it will go into the script and
02:02 - at the bottom here let's begin by saying
02:06 - game dot replicated storage but create
02:11 - transaction but on server invoke equals
02:15 - function and then we'll drop a line so
02:18 - we've got our end added in and in the in
02:23 - the local script we're passing the name
02:26 - of the model so if we go back into the
02:29 - server script we can put the arguments
02:31 - for the player that invoked the remote
02:34 - event and the name of the item so this
02:39 - will be the item named instead of the
02:42 - object so not object okay so now that
02:48 - we've done that what we're going to do
02:49 - is we're just going to define two
02:51 - variables the first variable is gonna be
02:53 - how much cash the player currently has
02:56 - so we can say local money equals a game
03:01 - dot players find first child player dot
03:07 - name so getting that players object so
03:10 - the player objects in the game dot
03:11 - player service and then we want to get
03:13 - their leader stats dot cash because that
03:17 - is where the money value is stored we
03:21 - then want to get how much the item costs
03:24 - the item that they want to buy so to do
03:26 - this what we're going to do is we're
03:28 - going to say local cost equals game dot
03:31 - serve storage then we're going to go to
03:34 - tool models and then in square brackets
03:36 - we're gonna say the items name so it's
03:39 - just item because it's not the the
03:40 - object for item so you instead if it was
03:43 - the object would say item name but
03:45 - because we're passing the the actual
03:46 - name not the objects we just did say
03:48 - item and then we're gonna say dot
03:50 - information dot cost okay so we've got
03:54 - our two variables in here now what we
03:56 - need to do is we need to check to see if
03:58 - they have enough money so we can say if
04:00 - money is good if money value is greater
04:04 - than or equal
04:05 - to cost value and not so we need to make
04:10 - sure they don't currently have the item
04:11 - equipped and not game dot so storage not
04:15 - player tools
04:18 - and then inscribe brackets we can say
04:20 - player dot name because that's the name
04:22 - of their folder find first child
04:26 - whoops on first round item then the line
04:32 - so if they have enough money and this
04:35 - item isn't already
04:37 - they haven't already bought it then
04:40 - success and the player has enough money
04:47 - so we can go along with the rest of
04:50 - purchase however else if cost dot value
04:56 - is greater than money dot value not
05:00 - greater than or equal to just greater if
05:03 - they if the cost is higher than the
05:04 - amount of money they can only have and
05:06 - not game dot server storage but player
05:10 - tools same thing dot name and square
05:14 - brackets find first child Isum then we
05:22 - know that they don't have enough money
05:24 - but what if the player already owns this
05:31 - item well we've got this and not we've
05:35 - got this and condition here so they have
05:37 - to have enough money but they also have
05:41 - to have not got this item okay but if
05:46 - they have got the item we can say else
05:48 - and we can return back to the local
05:51 - script that it's already bought okay so
05:55 - if we just return this string this is
05:57 - gonna be our error message okay so what
06:00 - I think we're gonna return true if it
06:02 - went well if the purchase succeeded else
06:04 - we're gonna return an error message if
06:06 - something went wrong so
06:11 - this else/if will only execute if they
06:15 - have enough money and if they so if they
06:18 - don't have enough money and they don't
06:20 - currently own the item if we get to this
06:23 - else here we know that it can't be that
06:25 - they don't have enough money it must be
06:27 - that they already have this item so
06:29 - returning that's all he bought but in
06:32 - this else if here we can just return not
06:37 - enough cash okay yeah sure I'm just
06:41 - going to keep it as three different
06:43 - words you can do it however you want you
06:45 - need to make sure that in the local
06:47 - script you're using these same strings
06:49 - so a returning non enough cash they
06:52 - don't have enough cash but if they
06:54 - actually do have enough money and they
06:55 - actually you know are serious with this
06:57 - purchase they want to buy an item we can
06:59 - now begin scripting it so that we can
07:01 - give them the tool and we can update
07:04 - their equipped value so what we're gonna
07:07 - do is firstly whoops back firstly what
07:12 - we're gonna do is we're going to deduct
07:14 - the cash from their balance so what
07:17 - we'll do is we're just going to say
07:19 - money value equals money value minus the
07:26 - cost
07:26 - okay so cost stop value so this is just
07:28 - taking the money on their balance
07:30 - because they're paying for it we then
07:33 - want to unequip their tools because
07:36 - we're going to be clearing their
07:37 - backpack of tools because they might
07:40 - already have a specific tool now let's
07:43 - imagine you're making mining simulator
07:45 - you only want them to have one tool at
07:47 - the time so we're going to unequip their
07:49 - tools to put them all back into the
07:51 - backpack so though he can search through
07:53 - them and loop through them because if
07:55 - you're holding an item when it's
07:56 - equipped it's not you know it's not
07:58 - actually in your backpack it's actually
08:00 - in your player so you can go test that
08:03 - out and you'll see when you equip the
08:04 - item it goes into your player model
08:06 - until you unequip it which is when it
08:09 - goes into your backpack so we need to
08:11 - unequip the tools to have them all in
08:13 - one place so that we can loop through
08:14 - them absolutely we might miss one out
08:16 - when when it's being held so we can say
08:19 - player character
08:23 - and then we say doc humanoid pull on own
08:26 - equip tools just like this and then what
08:30 - we want to do we want to loop through
08:32 - all the tools in their backpack so you
08:33 - can say 4i
08:34 - comma tool in pairs player dot backpack
08:38 - : get children because everything will
08:42 - be in their backpack now all of their
08:43 - tools we want to check to see if that
08:47 - tools name whoops i spelt it wrong we
08:51 - want to check if that Talton name is
08:53 - equal to the value of our equipped value
09:00 - because remember we're updating that
09:02 - equipped value whenever we equip an item
09:04 - so when we get the item so if that tool
09:08 - is currently equipped then we've got the
09:11 - item we've got the tool which we need to
09:13 - destroy from the players backpack so he
09:15 - can say tall : destroy so we've now
09:19 - deleted the equipped tool from their
09:22 - inventory from the backpack and now what
09:25 - we can do is put the new item into their
09:28 - backpack and set it to equipped so we
09:31 - can say player doctor equipped value
09:34 - equals item remember it's just the name
09:37 - of the item so now we can take the tool
09:40 - and clone it by saying local tool equals
09:44 - game dot server storage doc tools hold
09:47 - on find the first child item :
09:52 - clone and then we're gonna say tool dot
09:55 - parent equals game dot server storage
10:00 - got player tools and then we can say
10:03 - player dot name and square brackets
10:04 - because that's their folder so we're
10:07 - placing it into their folder first and
10:09 - now we're just gonna duplicate this code
10:12 - there's two lines of code and paste it
10:14 - just below it and we're going to just
10:17 - change the parent to their backpack so
10:22 - you can just delete the game dot service
10:23 - storage top player tools and replace it
10:25 - with player dot backpack just like that
10:29 - and then we're just going to want to
10:31 - return true to let the client know that
10:34 - the transaction will success
10:36 - and there were no errors so that is all
10:38 - we need to do before the crate
10:39 - transaction remote function now we just
10:41 - need to do the client side of it so that
10:44 - we can
10:46 - show on the GUI that everything went
10:47 - well and that the player can now have
10:51 - their item so we're gonna go back into
10:54 - the Buy button here and you can see we
10:57 - invoked the remote function and we set
11:01 - it to a variable called outcome and what
11:05 - we want to do is we want to check to see
11:08 - if the outcome is equal to true so if
11:11 - outcome equals equals true then we know
11:14 - that the purchase was successful
11:17 - okay and they've now got that tool so we
11:20 - can say script parent look text equals
11:24 - equipped because when we buy the tool we
11:28 - just equipped it by setting the equipped
11:30 - value and we put it into their backpack
11:32 - so it is equipped
11:36 - so what we're going to want to do now is
11:39 - check to see if the outcome was
11:41 - something different because they could
11:42 - have been a not enough cash or you might
11:45 - have already bought the item so that's
11:47 - what we have to deal with so let's drop
11:49 - a line and say else if outcome equals
11:53 - equals not enough cash then we're just
11:59 - gonna write a comment saying that they
12:00 - do not have enough cash and then I made
12:08 - a spelling mistake and then we're gonna
12:11 - do the other outcome so we say else if
12:14 - outcome equals equals already bought
12:17 - then so if they've already bought the
12:20 - item and they're clicking the button
12:22 - again then they will be wanting to equip
12:26 - the item so we can say if game got
12:30 - players dot a local player that's the
12:33 - player which the script is running on
12:36 - dot equipped dot value is not equal to
12:41 - model name dot value so if the item
12:46 - which he's looking at right now he or
12:47 - she is looking at right now is not the
12:50 - equipped item then and then have clicked
12:53 - the button then they obviously want to
12:54 - equip this item so we're going to want
12:57 - to fire at one of our remote events
12:58 - called equip tool so we'd say game dot
13:02 - replicated storage the equip tool but on
13:07 - fire server model name value now this is
13:12 - going to make the make the tool equipped
13:15 - okay just without any of the of the
13:18 - purchase restrictions or checking to see
13:20 - if he has enough careful deducting the
13:22 - cash because he's already bought the
13:24 - item he just wants to equip it so we're
13:27 - gonna have to create a separate function
13:30 - for this remote event which we'll do
13:33 - later on we will code the equip tool
13:35 - event so that so that we can give the
13:39 - player the item then we just want to say
13:43 - script parent dot x equals equipped
13:47 - because the player will have
13:49 - sit by them so that's all we need to do
13:52 - for the buy button that's that's
13:56 - everything I've done for the buying
14:00 - however we just need to work on updating
14:03 - the buy button when the item changes
14:07 - because if they're looking at an item
14:09 - and it costs $500 and then they switched
14:12 - to another item which costs $1000 we
14:15 - need to update that and we also need to
14:16 - update the status of the Buy button so
14:18 - whether it's the play needs to buy that
14:20 - item whether it needs to be equipped
14:22 - unequipped etc so to do that we're gonna
14:25 - say script doctor int look parent not
14:29 - parent doc current box so that's the
14:32 - number of the ox that were currently on
14:34 - not changed in fact we're gonna say get
14:37 - property changed signal
14:41 - and that's going to be the value and let
14:45 - me say connect function and we can drop
14:49 - a few lines now this is going to run
14:50 - when the value of the current box has
14:53 - changed so we can say a local model
14:56 - equals nil because that's the model
14:58 - which we're going to be using or the
15:02 - model which can be found from that box
15:04 - so we can say a local box name equal
15:08 - script dot parent dot parent got parent
15:11 - dr. current box in fact what we can do
15:15 - is we can put this at the top of the
15:17 - script
15:20 - box name and then we can change this
15:23 - script a parent a parent around a coin
15:25 - box to just box name so box name get
15:29 - property change signal value connect
15:31 - function
15:32 - so whenever the current box Berry has
15:35 - been changed this function will run so
15:38 - we're doing the same thing as we did
15:39 - earlier on
15:42 - we're going to say for AI comma objects
15:45 - in pairs game got work space the item
15:49 - roller and then in square brackets from
15:51 - us a box box name drop value so if oh if
15:58 - current box is equal to zero and that
16:00 - will be box zero we're just adding box
16:03 - to the number that we're on I'd get
16:05 - children come on get children
16:09 - so we're just getting as we did earlier
16:11 - on we need to ever do here actually
16:14 - we're at it so we're getting all of the
16:16 - objects inside of that box which is
16:19 - inside the item roller I'm going to
16:21 - check to see if the object is a model so
16:24 - if objects
16:27 - Jack Cohen is a model then we can say
16:35 - model equals object so we're just
16:38 - setting the model variable to eat
16:42 - objects
16:45 - okay so now that that's done we've got
16:49 - our actual model object we want to get
16:54 - the tools that are already bought by
16:57 - that player okay so we're gonna say our
16:59 - local tool was bought equals and this is
17:03 - another one of our remote events I'm
17:05 - going to say game got replicated storage
17:08 - no he said get tools bought her on
17:12 - invoked server like this what we're
17:17 - going to do is in our server script
17:19 - we're going to program this remote
17:21 - function get tools port to loop through
17:24 - everything in the players folder inside
17:27 - player tools and just send it back to
17:31 - the client as a table so let's go back
17:34 - into our script and at the bottom we can
17:38 - just right
17:40 - you know insane game replicated storage
17:43 - but get tools bought on server invoke
17:49 - whose function and then we can pass our
17:53 - argument of player because that's the
17:56 - player who invoked this remote function
17:59 - so which client invoked it and drop a
18:03 - line to add their end in and we just
18:05 - want to create a table called tools and
18:07 - we're going to loop through all of the
18:10 - tools in that person's folder which
18:12 - inside player tools you can say for i/o
18:15 - mark let's zoom in a little bit
18:19 - go or I object
18:22 - sorry tools but I told in pairs game dot
18:27 - server storage dot player tools and then
18:30 - we are just going to give the name of
18:32 - that folder which is their name and
18:34 - square brackets Curran get children do
18:40 - inside of this for loop we can just say
18:43 - table dot insert tools all dot name so
18:48 - inserting we
18:50 - just change tools to tool when searching
18:54 - into the tools table the name of each
18:56 - tool in their player tools folder so it
18:59 - will just get everything in their
19:01 - inventory and put all of the names of
19:05 - those objects into that table and then
19:07 - we're going to return that table back by
19:09 - saying return tools so we're sending it
19:11 - back to the client
19:13 - so now let's head back into our local
19:15 - script in the by button and our tools
19:18 - bought should look like this now it
19:23 - should be our table and it will hold a
19:27 - bunch of different tools tour name so
19:30 - you could have a mega drill for example
19:31 - you could have I know an epic drill
19:35 - excuse my spelling we could have a gun
19:37 - you know all of your tools in your
19:40 - inventory are gonna be in that table own
19:42 - only the ones that are for sale they're
19:44 - in your shop so what we're going to want
19:47 - to do is we're going to want to use this
19:50 - table I'm going to loop through it so
19:53 - we're going to say for I comma tool in
19:56 - pairs and we can loop through the tools
19:58 - wart table do and inside of this for
20:01 - loop we're going to say if tool equals
20:05 - equals model name drift the tool in that
20:09 - table is equal to the model right which
20:13 - we've which we're currently looking at
20:16 - then we know that it's already been
20:18 - bought by the player so what we can do
20:23 - is we can set the text of the Bible turn
20:26 - to equip okay else we know that it
20:31 - hasn't been bought yet so you can same
20:33 - scripts what I mean hasn't been equipped
20:35 - yet so we can say script up pair under
20:37 - text equals equip so what we're doing
20:41 - here is we're just making it so that we
20:44 - don't have to check every single item
20:47 - each time this is just an automatic
20:50 - function which is going to this one is
20:55 - basically going to check if you own the
20:56 - item and it's going to update the Buy
20:59 - button to make it so that you either
21:01 - have to equip that's all unequip the
21:03 - tool or buy it
21:04 - so it's pretty cool and we don't need to
21:07 - touch this anymore because I think we
21:09 - are pretty much done with the buy button
21:11 - I think we are yep and what we can do is
21:15 - we can go check this out and play the
21:17 - game and most of it should work we
21:20 - haven't got the we haven't got the
21:22 - functionality for the equip tool yet but
21:24 - that shouldn't affect anything so let's
21:26 - say game located storage open shop and
21:30 - you see says 550 here and I'm not sure
21:38 - if it should be changing or not no I
21:41 - think it's better yeah we haven't bought
21:42 - the items yet so we have how we have an
21:46 - error let's have a look so I found the
21:50 - issue and the issue is in the create
21:52 - transaction event because when we were
21:55 - trying to click on the buy button there
21:59 - was some issue and it said leaders that
22:00 - is not a valid member of player and you
22:02 - see we have not got any leader stats in
22:04 - our player and that is because in the
22:06 - saving script I forgot to give a parent
22:09 - to the leader stats and the cash during
22:12 - sale a disaster parent equals player and
22:14 - then if we say cash
22:18 - dot parent equals alias that's and if we
22:24 - say in shop dot parent equals player and
22:31 - equipped dot parent equals player as
22:35 - well it should all work so you always
22:39 - have to give a parent to your values so
22:40 - that they know where to go and you can
22:42 - see we now have five thousand cash in
22:44 - the game and all of our other values are
22:46 - in the players were equipped in shop etc
22:50 - you can see if we click the button it
22:54 - says equipped and I have now got the
22:58 - superpower drill in my inventory which
23:01 - is pretty cool and you can see if we go
23:03 - on to the next drill it says $550 if we
23:07 - go back to this one it updates to
23:08 - equipped so what we've just done is
23:11 - we've programmed it to check if we own
23:13 - the item and if we do it will say
23:15 - equipped and we change this one you see
23:18 - we've now got the better power drill
23:20 - equipped and this super power drill has
23:22 - changed to say equip and our backpack
23:26 - item has changed to a better power drill
23:28 - I've bought them all now and you see
23:30 - we've got a nice responsive Buy button
23:33 - which will change depending on each on
23:37 - status of each button so there we go
23:41 - so next what we need to do we need to
23:43 - program that equip tool remote event
23:46 - which we were working on earlier in the
23:48 - buy button this is so that if the player
23:50 - has already bought the item they can
23:52 - equip it again so if we head into the
23:56 - Buy button here you can see we are
23:57 - equipped we are firing this equipped
24:01 - tool remote event with the name of the
24:04 - model which they want to equip so let's
24:06 - go back into our server script and
24:08 - create in a function from event
24:11 - connected an event so we can say game
24:14 - but replicated storage but equipped tool
24:19 - but on server event turn on connect and
24:23 - in brackets would say function another
24:26 - pair of brackets and the arguments for
24:28 - this function will be player and tool
24:32 - name so the name of the tool which we
24:35 - which they would like to equip so let's
24:38 - just zoom in a little bit and what we're
24:41 - gonna do is we're gonna want to make the
24:44 - unequip their tool so it's just oh it
24:47 - will be the same as giving the tool when
24:50 - they buy the item but just without these
24:52 - currency deduction so we can say player
24:54 - dot character humanoid and on own equip
24:58 - tools like that and then we want to
25:03 - check to see if they have anything
25:06 - equipped and say if I dot equipped dot
25:11 - value is not equal to nothing so if they
25:14 - have something equipped we want to find
25:16 - the item and destroy it and get rid of
25:19 - it from there what we want to get rid of
25:23 - the equipped we want to basically clear
25:26 - the equipped value so we want say if a
25:29 - player backpack find first child
25:35 - dr. equips value so that's gonna be the
25:37 - name of the tool then player dots it for
25:42 - backpack and in square brackets we can
25:45 - say player dots a cool whoops drop of
25:48 - value and we can say destroy so we're
25:52 - finding the item which they currently
25:54 - have equipped in their backpack and
25:56 - destroying it we then want to update the
26:01 - equipped value to the tool name and we
26:06 - want to clone the tool and put it into
26:09 - their backpack so we can actually scroll
26:11 - up here and just copy this tool is this
26:13 - code from earlier which will clone the
26:16 - tool and I'm just paste it in down here
26:18 - in our equipped all event and that
26:22 - should work okay we just need to change
26:23 - item to tool name over here and there we
26:29 - go the equipped tool event is fully
26:32 - scripted so now if we go and try it out
26:34 - again we should be able to equip and
26:37 - unequip items which we've already bought
26:40 - so let's go and fire the event to open
26:43 - up the shop and if we click buy an item
26:48 - you can see it's as equipped now let's
26:50 - buy another item epic power drill now
26:54 - what you wanted to re-equip the super
26:56 - power drill which we've already bought
26:57 - if we click it you can see we now have
26:59 - the super power drill equipped so I
27:03 - think that's it for the Buy button we've
27:06 - now got camera done we have got most of
27:10 - the bots walk we've got all of the
27:13 - buying done and most of the client
27:16 - coding done the only thing left to do
27:19 - now is to close the shop to do data
27:23 - saving to be able to open the shop when
27:26 - they walk up to maker 88 and we'll also
27:31 - want to make sure that when the player
27:33 - resets everything will be back to normal
27:36 - so what we're going to do is we're going
27:39 - to program these close shop event now
27:43 - okay so we're gonna be scripting the
27:46 - exit button so what we're going to do is
27:49 - we're going to create a another local
27:51 - script in the exit button and inside of
27:57 - this local script we're going to say
27:58 - scripts parent or mouse button one down
28:01 - that's a reverse button and click
28:02 - connect a function okay so anything in
28:07 - here is going to run when the exit
28:09 - button has been clicked so first things
28:12 - first we're going to want to make the
28:14 - frame invisible so that the player can
28:18 - see themselves in the game world again
28:21 - we're then going to want two sets that
28:23 - we set some values so we're going to
28:25 - want to say script parent dot parent
28:29 - parent current box dot value equals zero
28:33 - so resets in the current box because the
28:36 - next time they go into the shop they'll
28:38 - be back to the first object they'll be
28:40 - looking at the first object so we want
28:42 - to set that to zero we're then going to
28:44 - set the model name back to zero it's a
28:50 - script or parent or parent this time dot
28:52 - module name dot value equals zero then
28:55 - we're going to set the colors of the
28:58 - back and forward buttons back to just
29:01 - completely lit up so they're both
29:04 - enabled the script or parent or parent
29:07 - got forward dot image color 3 equals
29:11 - color 3 dot from RGB and then completely
29:15 - white will be two four five two four
29:16 - five two four five and remember this is
29:19 - a tint it's not actually the color of
29:21 - the image it's just a tint it like a hue
29:24 - and saturation on an image editing
29:26 - program I'm gonna do the same thing
29:27 - again for the back button
29:31 - color.3 but from gb two five five two
29:36 - four five zero five and then we want to
29:39 - work on manipulating the camera to get
29:42 - it back to normal
29:43 - I remember except as scriptable at the
29:45 - minute because we're manipulating it we
29:47 - want to put it back to the default so we
29:50 - can say they get to a game dot workspace
29:52 - not current camera doctor camera type
29:56 - equals custom and then we're just going
30:00 - to want to set the camera subject so
30:03 - what the camera is looking at game don't
30:06 - work space dock on camera but cameras
30:09 - object equals game but players local
30:14 - player dot character doctor annoyed and
30:20 - then we're going to want to set the
30:23 - we're gonna wanna fire the clothes shop
30:26 - event soon say game the replicated
30:28 - storage close shop come on fire server
30:33 - and this is so that we can clean up
30:34 - things on the server to get ready for
30:37 - the next time that you want to use it so
30:38 - if we head back into our server script
30:42 - we're going to want to start working on
30:45 - this bow shop event so what we can do is
30:48 - we can go back to script and at the
30:51 - bottom here what we're going to say is
30:53 - game don't replicate a storage but close
30:58 - shop on server event coming up next
31:05 - connect whoops
31:07 - function player and that's gonna be the
31:10 - player let's trigger this event and what
31:14 - we want to do is we want to set the
31:16 - players humanoid route Part C frame back
31:19 - to a different area away from the shop
31:22 - so that it doesn't trigger again so
31:25 - let's just go and insert a part into our
31:29 - game we're gonna call it this part TP
31:33 - part okay with a capital T and the
31:36 - capital P for part and drag you want to
31:41 - take this part and you want to drag it
31:42 - wherever you want the player to be
31:44 - respawned when they exit the shop now
31:47 - I'm just gonna place mine in front of
31:49 - the shop so they're not standing on this
31:52 - part again which will trigger the shop
31:54 - and we're gonna want to just put this
31:57 - brick in the air okay because if the
32:00 - plays a little bit too big and it's on
32:02 - the floor
32:03 - they might get stuck in the ground like
32:05 - and then or they might get flung off the
32:06 - map so make sure that you put it above
32:08 - ground and you anchor it okay it must be
32:11 - anchored if it's gonna fall out the sky
32:13 - you also need to set can collide to
32:16 - false house your player might get flung
32:19 - off the map because it will intersect
32:21 - with the pot and you also want to make
32:24 - this part completely transparent so set
32:26 - transparency to 1 once we've done that
32:29 - we can go back to our server script and
32:31 - we can say game don't workspace and then
32:35 - we want to have the player's name
32:37 - because we don't actually know it yet so
32:38 - we put it in square brackets got a
32:41 - humanoid a root part but see frame
32:43 - equals game dot workspace teepee parked
32:47 - but see frame so we're teleporting them
32:50 - to the exact location of that part so
32:53 - they'll go there and then they'll fall
32:54 - onto the base plate we then want to set
32:57 - their walk speed back to 16 which is the
32:59 - default value if you're selling
33:01 - something like a double a double speed
33:04 - pass you might want to add some code in
33:06 - to get their speed or something but to
33:09 - keep it simple we're just going to set
33:11 - at 16 the game dot workspace paired up
33:14 - named as we just did
33:17 - got humanoid gotta walk speed equals 16
33:20 - then we're gonna wait 2 seconds and
33:24 - we're gonna set their player dot in shop
33:27 - dot value to false so now they're
33:32 - completely out of the shop and it should
33:35 - be good to go
33:46 - you
33:47 - [Music]