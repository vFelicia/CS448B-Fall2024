00:00 - everyone before we start the video I
00:01 - just like to let you know that when
00:03 - buying roebucks
00:05 - or premium you can use my star code
00:08 - Alvin blocks when you get to the
00:09 - checkout click over here and then enter
00:12 - the code Alvin blocks and that way I
00:16 - will get five percent of your purchase
00:18 - at no extra cost to you it's a great way
00:21 - to help support the channel and the
00:23 - videos I create so don't forget to use
00:25 - star code Alvin blocks when buying
00:27 - premium or roi books let's get straight
00:29 - into the video hello and welcome to the
00:31 - eighth video in my scripting series
00:33 - today we're going to be looking at
00:35 - returning now before you watch this
00:38 - video you're gonna need to know about
00:39 - functions parameters and arguments and
00:43 - I've done videos on those topics in this
00:46 - series already so I'll leave a link in
00:48 - the card or in the description down
00:50 - below so you can go and check those out
00:52 - so returning it allows you to send back
00:56 - data from a function so that it can be
00:59 - used later on so in this example we have
01:03 - a function which adds two numbers
01:05 - together and we've got the parameters
01:08 - number one and number two and we send
01:11 - the arguments three and five to this
01:15 - function and it will calculate the
01:17 - result by adding them together so we're
01:19 - calling add numbers with three and five
01:22 - as number one and number two
01:24 - respectively and then we're adding them
01:26 - together and we are tying them to this
01:29 - resort variable now this works fine and
01:33 - we could print out the result and it
01:37 - would print for us so let's go ahead and
01:39 - do that right now I'm gonna disable my
01:41 - other script and let's run this and so
01:45 - we should get a result of eight which is
01:48 - great so we've got our result but now
01:52 - it's been calculated what if you want to
01:55 - do something with that result maybe we
01:57 - want to use it later on okay so let's
01:59 - say we've got our result of eight it's
02:02 - been printed out but now what if we
02:05 - wanted to later on print out that you
02:09 - know print out that number eight I know
02:10 - he printed it in the function but what
02:12 - he wanted to print
02:13 - it's after we'd calculated it right or
02:16 - maybe for something else I don't know
02:18 - maybe we wanted to do like a calculation
02:21 - with that number we can't we can't get
02:24 - that number because we've we've printed
02:26 - out in the function but it's not stored
02:28 - anywhere once we've calculated it it's
02:30 - it's stored locally in this variable but
02:34 - nowhere else what we could do is maybe
02:37 - create a from a variable outside of here
02:40 - called saved value and then we could say
02:45 - saved value equals number one and number
02:49 - two and then later on we could get the
02:51 - saved value but the problem with that is
02:54 - that it's going to get overwritten and
02:56 - it's just not efficient because
02:58 - eventually we're gonna call this
03:00 - function again and save value is gonna
03:02 - get overwritten so how do we send this
03:06 - saved value or this result back to where
03:12 - we called it from because we might want
03:14 - to do something with it later on and you
03:17 - you can't have it in the function
03:19 - because this function is only meant to
03:21 - add the numbers together well that it's
03:22 - we're returning comes in returning
03:24 - allows you to send some information back
03:27 - from this function back down to where we
03:29 - called it from so that we can use it
03:30 - later on so to return something what you
03:33 - do is you you basically stop the
03:35 - function so when you return something
03:37 - the function stops running and it sends
03:40 - some information back to where we call
03:43 - it from so we need to return some
03:45 - information you could return nothing and
03:48 - that would just stop the function but if
03:49 - you want to send a message back or some
03:51 - data we can return whatever we like so
03:54 - he could return the result variable that
03:57 - we just created or we could return
03:59 - number one at number two but we're gonna
04:01 - return results that's we could do either
04:04 - but we've saved we stored a number
04:07 - warning in between a variable so we
04:08 - return our result and now we've sent
04:12 - that data back down here to where we
04:14 - have called the function so it can be
04:17 - used somewhere else but we we can't
04:20 - actually you know access this data
04:23 - because we now need to store that as a
04:25 - very
04:25 - so anything that we return that we want
04:27 - to use later on we have to save in a
04:29 - variable so let's just create a variable
04:31 - here so local and let's just call it
04:35 - mm calculation result you can call it
04:39 - whatever you like I'm just gonna call it
04:41 - calculation result and now what's gonna
04:46 - happen is the result of the two numbers
04:49 - we added together so in this case it
04:51 - will be 8 it gets returned and now
04:53 - calculation result is equal to 8 so at
04:58 - the moment it's set to calling this
05:01 - function but when you return sort of
05:03 - thing to this function then the
05:06 - calculation result will become whatever
05:08 - is returned so it's now going to be 8 so
05:11 - if we printed out calculation result
05:14 - it's going to print out 8 for us and
05:17 - notice how we haven't printed in the
05:20 - function so this is actually being
05:22 - printed down here it's been we've called
05:25 - our function it's added the two numbers
05:27 - that we gave together and it's returned
05:30 - it back to this variable it's now stored
05:33 - in calculation result and we can use it
05:35 - outside of the function we could maybe
05:38 - multiply it by 10 if you wanted to and
05:41 - then we would get 80 so what's happened
05:44 - is the function has done the right thing
05:46 - it's it's added our numbers together and
05:48 - then it's sent the result back to us so
05:50 - that we can do something else with it
05:51 - later on so that's how you return but
05:54 - you probably wanting to know a you know
05:57 - a practical use of returning because you
06:01 - could just add two numbers together and
06:02 - print them out there's nothing stopping
06:03 - you so I'm gonna show you another
06:05 - example and by the way sorry about my
06:07 - voice
06:08 - I'm currently suffering with a cold so
06:11 - here we go our second example you can
06:14 - disable the first script we had
06:18 - there we go here's my second example so
06:20 - we have a function here which will
06:23 - create a part and I'm passing through
06:25 - arguments for the transparency the color
06:29 - and whether it's anchored or not and in
06:32 - this function I'm creating the part I'm
06:34 - setting the transparency and the color
06:36 - and the anchored properties and then I'm
06:38 - putting it in the workspace if I run the
06:41 - script you will see that the part gets
06:43 - created I just can't find it
06:49 - oh the script is disabled still whoops
06:55 - you will see this time that the part
06:57 - gets created okay with our properties so
07:00 - it's it's red this is basically a color
07:03 - three value made up of three values RGB
07:05 - and this means red it was
07:08 - semi-transparent so naught point five
07:10 - and it was also anchored so we've
07:13 - created this part but now that I've
07:16 - created it I can't actually change any
07:18 - other properties I can't just you know
07:20 - say of create parts blah blah blah dot
07:26 - reflectance like this okay I can't I
07:30 - can't do this I can't change a property
07:32 - of it after after I've called the
07:35 - function so how am I gonna get this part
07:38 - so that I can do something with it later
07:40 - on well you could say game dot workspace
07:45 - dot part but what if you have lots of
07:48 - parts created with the same name or you
07:52 - know you you didn't or you had a parts
07:56 - and you didn't know what the name was
07:58 - because you might specify the name here
08:01 - and it could change whatever you need to
08:05 - have a way to access this part that
08:07 - you've just created and right now we've
08:10 - just called the function to create the
08:11 - part when the parts created this
08:13 - function just stops running and we can't
08:16 - access it anymore so we need to return
08:18 - the part back to where we called it from
08:21 - so I'm gonna say return parts and if
08:26 - you're wondering what you can return you
08:28 - can return any data you could return a
08:30 - string so text a number a boolean value
08:34 - so true or false or even an object like
08:37 - we're doing in this case we are
08:38 - returning our part which is an object in
08:41 - the game that we've just created so when
08:44 - I say return part it's going to send
08:47 - back to where we called it from a
08:49 - reference to this part and as I've said
08:52 - before we need to set it as a variable
08:53 - so that we can reference it in the
08:56 - future and we can get it so I'm going to
08:59 - say local I'm gonna give it a name can
09:01 - be anything so you can say my returned
09:03 - part equals and this way when we call
09:08 - the front
09:08 - whatever gets returned so in this case
09:11 - the part is going to now be this is
09:15 - going to be equal to this variable it's
09:17 - going to be set to this variable so when
09:19 - we say my returned part we can now
09:22 - access its properties and we have a
09:24 - unique reference to this part and that's
09:26 - it in the game so we can now say my
09:29 - return part and we could change its
09:31 - color again if we wanted to to color 3
09:37 - from RGB don't worry you don't have to
09:39 - do this I'm now setting it to blue okay
09:43 - because we have red green and blue sorry
09:45 - green we're setting it to green because
09:47 - I've told it to here so we can change
09:50 - the properties again once it's been
09:52 - returned so let's run this and hopefully
09:54 - we now have a green part I know I set it
09:58 - to red over here but what happened is
10:00 - that the part got created and then as
10:03 - soon as it was created immediately after
10:05 - we updated the color again so you didn't
10:07 - see it change so we can change all of
10:10 - the properties we can have a unique
10:12 - reference to this part after we've
10:14 - created it because you might want to do
10:16 - something to it once you've created it
10:18 - you want to have like a a reference to a
10:21 - way to access it once you've created it
10:22 - and that's what returning allows you to
10:25 - do it allows you to do something the
10:28 - function and then you can send some data
10:30 - back but that is not the end and
10:33 - returning can also be used to send
10:35 - messages I said about strings earlier
10:38 - well you could have a function that
10:39 - maybe checks something or calculate
10:42 - something and you want to know whether
10:44 - it was a success or not well you could
10:46 - return true or false depending on what
10:49 - went wrong you could return a string
10:51 - with like an error code and then you
10:53 - could interpret it later on to see if
10:55 - something was wrong in your script so
10:57 - there's lots of uses for returning and
11:00 - we'll be looking at more of those in a
11:03 - future episode but this is all you need
11:04 - to know right now is that returning
11:06 - allows you to send data back from a
11:08 - function so they can be used later on
11:10 - because if you think about it if we have
11:12 - a function and we're running it multiple
11:14 - times creating multiple parts or doing
11:16 - multiple calculations we can't actually
11:19 - get a reference get some access back to
11:21 - the things that we're creating so if we
11:23 - return the part then we can have it you
11:26 - know stored for later on we might want
11:28 - to do something else to him so that was
11:30 - a quick video on returning if you found
11:33 - it useful please click the share button
11:35 - and share it with your friends and
11:37 - anybody who would find this useful as
11:40 - well and don't forget to check out the
11:41 - rest of the series lots of great
11:43 - information in there don't forget to
11:45 - subscribe to the channel you can click
11:46 - on the album blocks logo in the middle
11:48 - of your screen the next video will be on
11:51 - your screen as well and don't forget to
11:53 - use star code Alvin blocks when buying
11:56 - roblox premium or ro books as it support
12:00 - the channel at no extra cost to you
12:02 - so thanks for watching I'll see you next
12:05 - time