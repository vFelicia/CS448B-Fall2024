00:00 - so in this video I'm gonna show you how
00:02 - to create a daily reward system which
00:05 - allows your players to receive a reward
00:08 - every 24 hours which they can claim
00:10 - they'll get a random reward and then it
00:13 - will make them want to come back the
00:15 - next time so that they can get another
00:18 - reward so let's go ahead and get
00:20 - straight into the video now a daily
00:22 - reward system isn't too hard to make
00:24 - most of it will just be actually coding
00:27 - the amount of time since the last visit
00:30 - and then we're gonna use this nice GUI
00:34 - and then there'll be a nice little
00:36 - animation effect when the player claims
00:39 - their award to save some time I'm going
00:41 - to put the link to the model of this GUI
00:45 - in the description so if you want to
00:47 - take it then you can go to the the link
00:49 - in the description and take the model
00:50 - and then go in the toolbox go to my
00:54 - models and you'll be able to insert the
00:58 - GUI from there into the start GUI but
01:03 - I'm not going to give the code if you
01:04 - want to get the code you can become a
01:06 - channel member by clicking the join
01:07 - button for the source code but if you
01:10 - want to learn more about scripting I
01:12 - recommend that you watch the whole of
01:14 - the video and copy from the video as we
01:17 - go along so that you learn how
01:19 - everything works alright so let's go
01:21 - ahead and go into a new place then
01:23 - alright so to begin with I'm gonna go
01:26 - ahead and take my GUI
01:29 - as I say you can go get this from the
01:30 - description and insert it into the
01:33 - starter GUI and I'm just gonna remove
01:36 - the local script here because you won't
01:37 - have that but we have a daily reward GUI
01:41 - and we've got a mainframe here now it's
01:44 - an image label because I used around if
01:46 - I plug in to make it nice and round
01:48 - I'm then going I've got a text button
01:52 - which is a claim button as well that's
01:54 - been round if I'd I've got a come back
01:58 - text label and that will say how long it
02:01 - is until your next reward and also got a
02:03 - title text label and that just says
02:06 - daily rewards so pretty self-explanatory
02:08 - we've also got the reward notice that is
02:13 - when you click the claim button you get
02:14 - a nice little animation and it pops up
02:16 - saying how much cash you got so we're
02:18 - gonna script that but the first thing
02:20 - we're going to do is we're going to just
02:22 - go ahead and click on the add a Lee ward
02:24 - GUI and set enable to false and then
02:28 - we're going to begin scripting the daily
02:31 - login system so how this works is we're
02:34 - going to run the player first joins and
02:37 - they get the daily reward GUI pop up
02:40 - we're gonna get them to press the claim
02:42 - button and then when they press that
02:44 - claim button we're going to save the
02:47 - current time and then the next time they
02:50 - rejoin we'll compare the current time to
02:53 - the time when they last claimed a reward
02:56 - and see whether that time has exceeded
02:59 - 24 hours or however long you want it to
03:02 - be between rewards and so once that time
03:05 - limit has been exceeded then we'll give
03:08 - them another award else we'll just wait
03:11 - until they they have not had one for
03:14 - over 24 hours
03:15 - so it basically lets people you know
03:19 - Gary Ward for Quinn back playing your
03:21 - game and so people will want to come
03:24 - back and play again so to begin we're
03:27 - going to click on service crypt service
03:28 - and I'm going to insert a script and I'm
03:32 - just gonna make this a little bit bigger
03:33 - so you can see it and inside of this
03:37 - script the first thing that we're going
03:38 - to do is we're going to get the data
03:41 - store service so this is what I'm going
03:43 - to use to save our values our times etc
03:47 - all ready for the next next time at they
03:49 - join so we can just say local let me get
03:54 - my other keyboard so it's nice and quiet
04:00 - so local data store equals a game and
04:07 - then we're gonna get the data store
04:10 - service so see we can say get service
04:12 - data store service and then we can say
04:16 - current get data store and then we need
04:20 - to give this data store a name so I'm
04:21 - just going to call it daily rewards
04:25 - so this data store is going to be where
04:28 - we store all of our data related all our
04:31 - values relating to the the daily reward
04:33 - system for this game only now if we were
04:36 - to change the name of this data store it
04:40 - would wipe all of the current data that
04:43 - is stored in it but obviously we don't
04:44 - have any data yet so we're all good to
04:46 - go
04:47 - we're now going to define some variables
04:49 - so the our weight in between you in
04:53 - between your rewards so if you want this
04:55 - to be 24 hours then set to 24 so local
04:58 - our weights equals 24 and then we're
05:02 - also going to do a table called possible
05:06 - rewards we'll get into scripting this
05:08 - later on but this is just going to give
05:10 - the player a bit of look a bit of chance
05:12 - so they might get they might have you
05:14 - know that there might be 500 cash that
05:16 - they could get or they might just get 5
05:18 - so it just you know it's a bit of look
05:21 - in there because they might get there's
05:23 - a bit of a chance look sort of thing
05:25 - so they can get a different kind of
05:27 - prize at each time so we can say
05:30 - possible rewards equals and then I'm
05:35 - just going to define a table like that
05:37 - so next thing we're going to need to do
05:39 - is we're gonna need to create an event
05:41 - an event is something that will trigger
05:44 - code or when a certain when something
05:48 - happens so in this case we want to fire
05:51 - some code we want to actually get the
05:55 - time since the last player joined when
05:58 - they join the game again so we can say
06:00 - game dot players top player added curl
06:03 - on connect function so this is just
06:08 - connecting the event listener which is
06:11 - waiting for a new player to join the
06:12 - game to this function and this function
06:14 - will run obviously when a new play
06:17 - player joins the game we're going to
06:19 - pass an argument here for that specific
06:21 - player obviously we don't know the name
06:24 - of anyone who's going to join the game
06:25 - so we just say player and that argument
06:28 - is going to be the the player that will
06:31 - join the game okay so we just referenced
06:33 - them as player right now so anything we
06:36 - do to player will be done to any player
06:39 - that joins the game so inside of this
06:42 - player added event then what we're going
06:44 - to do is we're going to create some
06:45 - leader stats for them obviously there's
06:47 - going to be some kind of reward that
06:49 - they get so we're going to need to give
06:51 - them some cash to begin with so like a
06:54 - leaderboard so we can say local leader
06:56 - stats equals instance dot new folder
07:01 - this folder is going to contain their
07:03 - cash that value and any anything else
07:07 - that you want to appear on a leaderboard
07:09 - in the top right we're then going to say
07:12 - leader stats dot name equals leader
07:16 - stats and if you want your leaderboard
07:20 - to appear in the top right you have to
07:21 - call it leader stats lower case just
07:24 - like this as I have spelt it actually
07:26 - not going to see a leaderboard appear
07:27 - and then we can say leader stats dot
07:30 - parent equals player so now that we've
07:33 - done that we can create our cash and
07:36 - then put that into the the leader stats
07:38 - so it shows up on the leader board so
07:41 - I'm going to call my currency coin so in
07:43 - say local coins equals instance dot new
07:47 - int value and then we can say coins dot
07:53 - name equals coins and then coins dot
07:58 - parent equals leader stats now I'm not
08:03 - going to do any saving of coins in this
08:08 - video I have done a video on how to save
08:11 - currency though in the past so I'll
08:13 - leave a little card in the top right if
08:15 - you want to go and check that out but
08:18 - with the knowledge that you're getting
08:19 - today from data stores you should be
08:22 - able to learn how to save the coins
08:25 - yourself anyway cuz it's pretty simple
08:26 - so you should be able to do that so now
08:29 - that we have created our coins leader
08:32 - stats we now want to get the current
08:35 - time so the time at which they join so
08:37 - that later on we can compare this time
08:39 - to the last saved time when they last
08:43 - claimed their reward now a good way to
08:46 - do this is to use OS dot time so we can
08:50 - say local time now equals OS
08:53 - I'm saving this as a variable OS time is
08:56 - a number of seconds since January 1st
09:01 - 1970 I believe there's something called
09:03 - the epoch OS dot time is going to return
09:06 - the amount of seconds since that time
09:09 - okay
09:09 - midnight on January the 1st so what we
09:12 - can do is we can we can say OS dot time
09:15 - here when they join the game and then
09:18 - when they claim the reward we can also
09:20 - save OS dot time now because whenever
09:23 - the player rejoins the game again is
09:25 - going to be a few more seconds into the
09:27 - future we can subtract these OS time
09:30 - values and then we'll have a number of
09:32 - seconds since the player last joined the
09:34 - game so what we'll be able to do is
09:37 - we'll be able to see whether that number
09:39 - in seconds we can see whether it is
09:42 - greater than or less than 86,400 which
09:46 - is 24 hours in two seconds and if it is
09:50 - more then we will give them their daily
09:52 - reward so OS up time is the amount of
09:57 - time in seconds since the epoch and so
10:00 - what we can do is we're going to we want
10:03 - to see if they have data saved ok so if
10:07 - the player has joined again before and
10:10 - claim the reward then we will have saved
10:12 - some data with the data store so we'll
10:15 - have saved the OS time value so what
10:19 - we're gonna do is we're going to say
10:20 - local data and because we don't know
10:24 - whether they have data saved or not
10:26 - we're not going to set data to anything
10:28 - just yet so we're going to drop a line
10:30 - but we're still going to have a variable
10:31 - defined so we can say in a peak or so
10:36 - Peak or function and drop a line so this
10:39 - Pico is going to try and get the class
10:42 - data now because the player might not
10:45 - have any data or there might be an error
10:47 - with data stores or something that just
10:50 - makes the get async line fail for some
10:53 - reason we don't want it to break the
10:55 - entire script so that the handling of of
10:59 - the daily reward system is not impacted
11:02 - for other players because data stores
11:04 - might go down you know
11:06 - no and they might cause an error in your
11:09 - code because you know if they'd stores
11:11 - aren't working then that's not very good
11:13 - so with picot it just contains the error
11:16 - but it keeps the script working it
11:18 - doesn't break the entire script so we
11:20 - can say data equals datastore colon gets
11:25 - async and then what get async does is it
11:29 - looks for data within a key now the way
11:33 - data stores work is that each player has
11:36 - their own unique key and for a games
11:39 - datastore you will assign a value to
11:41 - that key so that you can look that key
11:44 - up and see if there's a value attached
11:46 - to it and if it is then you can get that
11:48 - value using get async so I'm gonna do is
11:52 - I'm going to look to see if there is an
11:56 - OS time value saved for our current
11:59 - player now as I said we don't know the
12:02 - name of the player who has joined the
12:03 - game right now so we just use player ok
12:07 - as our argument and then when a player
12:08 - does join the game whatever we're doing
12:10 - to player in this event will be done to
12:13 - the player that joins the game so inside
12:16 - of the get async we need to give them a
12:18 - key now the key I'm going to use is I'm
12:20 - going to take their user ID and then
12:22 - we're gonna attach daily reward to it so
12:25 - it's unique to each player but we still
12:27 - know what the key is now the issue of
12:29 - using a player's name for the key is
12:31 - that maybe if they change their name
12:33 - their date is gonna be reset you've got
12:35 - lots of issues that arouse if you use
12:37 - the players name so we use the player's
12:39 - user ID so we say player dot user ID and
12:43 - then we say dot and then we're gonna
12:47 - attach a daily reward to it okay so just
12:50 - like this we're saying - daily reward so
12:54 - a player's key might look something like
12:56 - this okay like that okay so we'll look
13:04 - in the datastore for any data or any
13:07 - value associated with that key and if
13:10 - there is data found then we're storing
13:13 - it in this variable called data okay so
13:17 - now that we have got the data we can
13:20 - just
13:20 - prints getting data and then outside of
13:25 - this P cool because we're no longer
13:26 - dealing with finding the data what we
13:30 - can we can now say is we can actually
13:33 - check this data and see if there was
13:35 - data found or not because there might
13:38 - not be data found so if there is no data
13:40 - then there going to be a new player to
13:42 - the game so what we're going to do is
13:45 - we're going to check to see if if the
13:49 - data is equal to nil okay so if there is
13:52 - equal to nil then it's a new player so
13:55 - what we're going to do is instead of
13:57 - saying if data is equal to new or say if
13:59 - data is not equal to no and then we'll
14:02 - add an else statement and we'll deal
14:04 - with the new the new players there so we
14:07 - can say if beta is not equal to nil so
14:10 - if there is some data then we know that
14:12 - it is a returning player to the game
14:17 - else we know that it is a new player and
14:21 - so if is a new player then what we're
14:24 - going to to do is we're just going to
14:26 - print new player and then we'll deal
14:31 - with that later on when we get to the
14:33 - actual saving part so if they are a
14:36 - returning player to the game then we
14:38 - want to get the time since the last play
14:41 - now I said earlier that to do this we're
14:43 - going to subtract the two OS time of our
14:46 - use so what we'll do is we'll create a
14:49 - variable here called local time since
14:52 - last play and this is going to be equal
14:55 - to time now which is our variable that
14:59 - we defined up here on line 18 which is
15:02 - the current number of seconds since the
15:04 - epoch on first of January 1970 and then
15:09 - we're going to take that number of
15:11 - seconds now because the time now is
15:13 - going to be in the future okay it's
15:16 - going to be ahead of the last claim time
15:19 - then in order to keep it a positive
15:22 - number then we're going to do time now
15:26 - takeaway or minus data okay
15:30 - so that should give us a number in
15:32 - seconds
15:34 - since the last reward was claimed okay
15:38 - so we're going to save the data later on
15:43 - as I said but we're going to save the OS
15:46 - dot time value and then we can take
15:48 - these two away and get the time since
15:51 - last play and so if you want to print
15:54 - that out and then we can just say print
15:56 - last what we could say I think instead
16:00 - of saying last play we should do last
16:02 - claim because what I'm going to do later
16:05 - on is we're gonna save it not when the
16:08 - player leaves the game but when they
16:10 - actually claim so I'm gonna say time
16:12 - since last claim equals time now - data
16:16 - so number in seconds since the last
16:19 - reward was claimed because they might
16:20 - claim the reward when they join but then
16:23 - they might be in the game for two hours
16:25 - so that's giving a an inaccurate result
16:28 - so what we can do again is you can print
16:31 - time since last claim and then we can
16:36 - cut it we can concatenate this string to
16:39 - the time since the last claim all we
16:42 - need to do now is use an if statement to
16:45 - check to see whether the time since last
16:48 - claim in seconds is greater than a day
16:53 - okay or however long you want it to be
16:56 - so because we've got a variable here
16:59 - it's not constant so you might want to
17:02 - change it to two days 40 hours between
17:05 - daily rewards or even three days or you
17:08 - might want to just keep it you know
17:09 - short and you get a reward every two
17:12 - hours or 12 hours it's up to you so you
17:15 - can set the number of hours in between
17:17 - rewards in your our weight variable so
17:20 - what we're going to do is we're going to
17:22 - say if time time since last claim
17:29 - divided by 3,600 okay it's taking them
17:34 - number of seconds it's dividing it by 60
17:37 - and it's dividing it by 60 again because
17:39 - 60 times 60 is 3600 obviously this is in
17:43 - seconds and we want to convert it to
17:44 - hours so diff
17:47 - 3,600 well firstly / 62 put it in two
17:51 - minutes and then divide by 60 again to
17:54 - put it in two hours because 60 seconds
17:56 - were in one minute and 60 minutes are in
17:58 - one hour so we're dividing by 3600 and
18:02 - that should give us a number of hours or
18:04 - what since they last claimed their award
18:06 - okay we want to see if that number is
18:09 - greater than or equal to our weight okay
18:14 - so our weight is currently set to 24 so
18:17 - if it's greater than or equal to 24
18:19 - hours then we know that that they are
18:22 - eligible for a reward okay so what we
18:28 - want to do now is we want to actually
18:30 - choose a reward to give to the player so
18:33 - this is where the possible rewards table
18:36 - comes in because we defined it earlier
18:38 - on on line 5 and what we're gonna do is
18:43 - we're gonna we're gonna add an element
18:44 - of look okay because you know you don't
18:47 - want to come back to the game you want a
18:49 - player to come back to your game in 24
18:51 - hours and they know what they're gonna
18:53 - get because if they just keep getting
18:55 - the same thing then it gets boring they
18:57 - don't want to come back again so there
18:58 - might be a chance that if they come back
19:00 - they might get a massive jackpot okay
19:03 - which is super rare or they might just
19:05 - get like five coins or something really
19:07 - really basic but it just it makes a you
19:10 - know a nice little fun thing to add to
19:13 - the daily reward system so up here in
19:17 - the possible rewards table I'm just
19:20 - gonna add a bunch of different rewards
19:24 - that you can get okay so we can do 10 15
19:27 - 10 10 10 5 5 5 5 so these were the
19:32 - common ones which can get so you can get
19:34 - ten coins 15 coins 10 coins these are
19:37 - all in coins okay so it's the number of
19:39 - coins that you're going to get all right
19:42 - so I'm just gonna add a bunch of these
19:44 - in here so five is gonna be written
19:46 - common 10 less so 15 is so common and
19:51 - then we'll do 1 500 coins so if you're
19:54 - really lucky you're gonna get 500 coins
19:56 - added into your balance so now that
19:59 - we've done this
20:01 - we've got a table of different values
20:04 - okay table just holds multiple bits of
20:07 - data okay and what we'll be able to do
20:09 - is we'll be able to pick a random number
20:12 - because each object in this table has
20:15 - its own index okay so the first objects
20:18 - in the table will have an index of up
20:21 - one this will be number two number three
20:24 - number four five six seven all the way
20:26 - to the end okay so each object has its
20:29 - own index attached to it so we can we
20:31 - can choose an a random number between
20:33 - one and however many numbers there are
20:36 - here so I don't know how many there are
20:38 - but you choose a random number
20:40 - and let's say the random number was
20:42 - seven then we would go one two three
20:44 - four five six seven okay we're gonna
20:47 - pick the seventh entry into this table
20:50 - and boom you've won yourself five coins
20:53 - so to pick a a random number from this
20:56 - table what we can do is we can firstly
20:58 - create a variable for the reward they're
21:01 - going to receive so we can say local
21:03 - reward equals and then we're gonna get
21:07 - the possible rewards table and then
21:11 - we're going to select an entry from that
21:14 - table so we can inscribe square brackets
21:17 - we can specify the index number okay so
21:21 - I said remember each object has its own
21:25 - index okay so from one to two however
21:29 - many to however many entries there are
21:32 - in the table but to pick a random one we
21:35 - can use math dot random which will pick
21:38 - a random number for us so we can say
21:40 - math dot random and then in parentheses
21:44 - or brackets here we can say one so the
21:48 - random number will be between 1 and then
21:51 - however many entries are in that table
21:53 - now a really quick way to find out how
21:55 - many entries or objects are in that
21:57 - table or all numbers in that table you
22:00 - can just put our hash tag and write the
22:02 - name of the table so in this case
22:04 - possible rewards now let's actually
22:05 - count how many entries there are
22:07 - okay so 25 entries in this table so it
22:11 - will be between 1 and 25
22:14 - right so it's going to take the 25th
22:18 - entry so let's say that 20 the 25 was
22:21 - the random number it will take 25th
22:24 - entry in this table which is 500 and
22:26 - we'll set reward to 500 so the reward is
22:30 - going to be the number of coins that
22:31 - you're going to get so what we want to
22:33 - do now is we want to show on the player
22:36 - screen the GUI okay
22:39 - and to do this we're going to use a
22:40 - remote event okay just to make sure that
22:43 - the game is compatible with filtering
22:46 - enabled as well so that it works
22:47 - perfectly and we can display to the user
22:50 - how many coins they got so it will
22:53 - display this daily reward GUI and then
22:56 - when they click the claim button we will
22:59 - use the reward notice and we'll do a
23:01 - nice little animation on it and it will
23:03 - come up on the screen and say you won 10
23:06 - coins all right or 15 coins however many
23:08 - coins you got just them so as I get as I
23:11 - said again when they click that claim
23:13 - button they don't know what they're
23:15 - gonna get is sort of like a random draw
23:17 - a sort of thing I said when they kick
23:19 - claim that they're gonna get that nice
23:21 - pop up and it will look really nice and
23:23 - polished so let's go and just set the
23:28 - GUI to enabled equals false
23:31 - we're gonna uncheck it and what we're
23:33 - going to do is we're going to insert our
23:36 - most event here so the remote events it
23:40 - allows the server their server script
23:43 - here which is obviously running on the
23:45 - roblox's server machine it will let us
23:48 - it will let us show it will let us
23:53 - execute some code on the the player also
23:56 - known as the client so a server script
23:58 - can't access a player's UI GUI so we
24:02 - have to use a remote event and we then
24:04 - fire that event in replicated storage
24:06 - which the server and client can both see
24:09 - and then actually in the players GUI as
24:13 - we can't access it we can add some code
24:15 - which will be replicated to that players
24:18 - GUI so that we can pick up that request
24:21 - from the remote event whenever we fire
24:23 - it from the server and we can
24:26 - we can show the GUI and will tell the
24:29 - local script which we're going to make
24:30 - to actually show that GUI so that we can
24:33 - we can say that it's time for a reward
24:36 - and they can then click claim and we'll
24:39 - do the same thing just going the other
24:41 - way will fire a remote event from the
24:43 - client to the server and then when
24:46 - they've clicked the claim button we will
24:47 - give them that reward so if you're not
24:50 - too sure on what remote events or filter
24:52 - enabled our don't worry I'm gonna be
24:54 - doing a few more tutorials on it soon
24:57 - I've already got a couple on my channel
24:58 - as well so make sure you've subscribed
25:00 - so that you don't miss out on those so
25:04 - we're gonna click on replicator storage
25:06 - and I'm going to add in the remote
25:08 - events and then I'm gonna just name this
25:10 - event show daily reward okay so show
25:14 - daily reward and obviously this is going
25:18 - to be fired by the server I'm going to
25:19 - pick it up on the in the GUI on the
25:22 - client so that we can make that GUI
25:25 - enabled so we can show it and show that
25:28 - they have got a reward so you can go
25:30 - back into the service script here now
25:32 - make sure that you've saved your work
25:34 - ctrl s and then make sure you've got it
25:37 - saved I'm going to save it as daily log
25:42 - in and so what we'll do is we'll go
25:47 - under this line 36 underneath local
25:50 - reward and we'll say game not replicate
25:53 - the storage got show daily reward code
25:57 - on fire client okay because we're firing
26:00 - this revised event to be picked up on
26:03 - the client okay so the client that we
26:06 - want to fire this to is the player who
26:09 - is going to claim their reward so we can
26:11 - just say player but we also want to pass
26:15 - some information across to this player
26:18 - we want to we want to pass the hour wait
26:24 - and we also want to pass the reward okay
26:28 - so the hour wait will tell the player
26:32 - how long it is until the next reward and
26:34 - the the reward argument they were
26:36 - passing through will just pass
26:39 - through to the client the amount of cash
26:41 - that they're going to receive and then
26:43 - we can pick up this information and then
26:45 - we can share it in that nice animation
26:48 - which will pop up saying you got 50
26:50 - coins or you got five coins so we're
26:53 - passing it through now and then we'll
26:55 - pick it up on the on the client and then
26:57 - energy you I will just show it in that
27:00 - GUI and make it look nice and fancy so
27:03 - now that we've fired this remote event
27:07 - we don't need to do any more server
27:10 - coding for now we can start actually
27:13 - going into our GUI and coding that to
27:15 - pick pick this remote event request up
27:18 - so by now you should have the GUI
27:21 - imminently started GUI as I said I'm
27:24 - gonna put it in the description down
27:25 - below so have look in the description
27:27 - and then go take the model add it to
27:30 - your inventory then if you go to my
27:32 - models you should find it so go ahead
27:34 - and click it and then it should be added
27:37 - into your game make sure that you've
27:38 - dragged it into started GUI so what
27:41 - we're going to do is we're going to add
27:42 - a local script to this GUI and then
27:46 - inside of here we're going to pick up
27:47 - that remotes that remote events trigger
27:51 - which we fired from the lis server so we
27:54 - can say game don't replicator storage
27:56 - dot show daily reward and then we can
28:01 - say on client events so it's going to
28:04 - like I said with the player added event
28:07 - it's going to run any code inside of
28:09 - here when that remote event has been
28:11 - triggered by the server so in say on
28:13 - client events curl on connect and then
28:17 - the the information we passed to this
28:21 - from the server to the client was the
28:23 - hours the hour wait so the hour the
28:27 - hours to next reward and also the reward
28:31 - amount now I know that we we passed
28:36 - through let's just add a lot dropper a
28:40 - line here oh we forgot to do function
28:42 - whoops connect function hours to next
28:46 - reward reward amount and the nest
28:49 - dropper line there we go so I
28:51 - we didn't name these two arguments the
28:55 - same in each script this one was called
28:57 - hours to next reward but we actually we
29:00 - sent it as our weights and we sent a
29:02 - reward and picked it up as reward amount
29:04 - real isn't matter what you name them as
29:06 - long as they're in the right order so
29:08 - that they get passed into the to the to
29:11 - the same the same arguments and
29:14 - parameters you know I mean so obviously
29:16 - because our wait is the second one it
29:18 - says it's the second argument we don't
29:20 - count player because you don't need to
29:22 - pick that one up we only need to tell
29:24 - the server what to send it to so we
29:26 - don't need to pick that one up on the
29:29 - client because we already know who the
29:30 - player is because it's running locally
29:32 - on that player's machine so we've got
29:34 - the hours to next reward and the reward
29:36 - amount so the first thing we want to do
29:39 - is we want to show the daily reward GUI
29:42 - so you can say scripts not parent but
29:45 - enabled it was true we then want to set
29:49 - the come back to text which is let's
29:52 - just let me show you it's this one here
29:54 - so we want to update it so it says come
29:57 - back in the amount of hours for your
29:59 - next reward so we can go ahead and go
30:02 - back into the local script and say
30:03 - script doctoring dot frame got to come
30:07 - back got text equals come back in and
30:12 - then we can concatenate the hours to
30:16 - next reward and then we can say hours
30:20 - for your next reward just like that so
30:28 - that's gonna update that text and then
30:30 - we want to have a mouse button one click
30:33 - event for when we click the claim button
30:36 - okay so when we click that claim button
30:38 - we're then going to fire another remote
30:40 - event as I said earlier on and then when
30:43 - that's event is fired then we will go
30:46 - back to the server and then we will add
30:48 - on the reward to their coins buttons
30:52 - okay so what we're going to do is we're
30:55 - to say script dot parent dot frame dot
30:59 - claim dot mouse button one click turn on
31:03 - connect
31:04 - and then function in parentheses with
31:07 - another pair of parentheses after that
31:08 - and then we'll drop a line Edmond we
31:11 - don't need to have any arguments here
31:14 - for this event as we did with the on
31:17 - server event on client event ones that
31:20 - we just did the on client event one so
31:22 - all we need to do inside of this mouth
31:25 - put some one click event
31:26 - so one whenever the the claim button has
31:28 - been clicked we want to fire another or
31:31 - most of it so we're gonna go to our
31:33 - replicated storage here and we're going
31:35 - to just duplicate this remote event and
31:37 - I'm gonna call this one claim reward so
31:41 - we can say game dot so we can say Ashley
31:43 - we're gonna say local reward equals in
31:48 - fact we don't need to say look old we
31:50 - could just say because it's not a remote
31:52 - function game don't replicate a storage
31:54 - got claim or award fired server okay so
31:59 - this is going to send a request off to
32:01 - our remote event and whenever it's
32:04 - triggered we're gonna pick that up in
32:06 - the server script and then we'll go
32:07 - ahead and give them their reward okay
32:09 - because we thought you enabled you can't
32:12 - update a player's coins or you know
32:16 - currency from the client because it's
32:18 - only going to update for them it's gonna
32:20 - be blocked by the server because filter
32:22 - enabled blocks all requests to edit
32:26 - something on the server from clients
32:28 - okay as I said if you want to learn more
32:30 - baffle to enabled often quite a few
32:32 - videos on my channel about it so now
32:36 - that we've fired this claim reward event
32:39 - all we need to do is we just them to
32:41 - flash up our nice little reward notice
32:45 - so to do that we can say script doctor
32:48 - and not reward notice and then we say
32:52 - dot txt equals and then in speech marks
32:55 - we're gonna say you got and I'm gonna do
32:58 - space to concatenate it with with a
33:01 - reward amount argument and we passed in
33:04 - like that and then we'll just say coins
33:09 - after after that okay if you want to
33:12 - make yours a little bit more fancy then
33:13 - you can do so by adding emojis that's
33:16 - what I'm going to do so I'm going
33:17 - and emojis to each side of the string
33:21 - because roblox now supports emojis in
33:24 - its UI so you can utilize them and then
33:28 - we're just going to tween that reward
33:30 - notice it just basically means animate
33:32 - the GUI element so it it gets it
33:37 - basically just grows on our screen and
33:39 - it flashes up so to do this we can say
33:42 - script dot parent dot reward notice and
33:47 - we can say come on tween size and
33:49 - position okay and so we just need to
33:53 - give the you diem two values for the
33:57 - position and for the size so for the
34:01 - position so for the size because size
34:04 - goes first we can say au dem - dot new
34:08 - and then we can say not point six zero
34:11 - no point one five zero okay this is the
34:14 - size of the of what the reward notice
34:18 - will be when it's when it's you know
34:21 - when it's acted when it's finished
34:22 - animating okay what if that's the
34:24 - desired size we're then going to do a
34:28 - comma and then we're gonna do the
34:30 - position value so it's a udimm to dot
34:33 - new and we can say not 0.5 0 not 0.5 0
34:38 - okay because on the reward notice we've
34:40 - set the anchor point to not 0.5 so that
34:43 - whenever you set the position to not 0.5
34:46 - it will be truly in the middle okay so
34:50 - now that we have twinned it we're going
34:54 - to want to make the frame here so this
34:58 - frame which says daily reward we want to
35:00 - hide that so we can actually see the
35:02 - nice smooth animation so we can say
35:06 - scripts got parent dot frame not visible
35:09 - equals false
35:10 - notice how the reward notice isn't in
35:13 - the frame so that when we make the frame
35:15 - invisible their reward notice doesn't go
35:17 - with it then we're going to wait 1.5
35:19 - seconds and then we're just going to
35:24 - obviously when the tween is finished
35:26 - then we can do the same thing again so
35:29 - i'm just going to copy this line
35:34 - okay and I'm gonna set the size to just
35:39 - zero all around and we're going to keep
35:43 - the position the same because you want
35:45 - it to retain its constant position we
35:48 - just want it to get smaller so now that
35:51 - we've done that we can do script so
35:55 - parent enabled equals false and script
36:00 - doctorand not frame not visible equals
36:03 - true we want to make the frame visible
36:07 - for next time obviously we're making the
36:09 - entire GUI go off screen but next time
36:11 - it appears we want the frame to be
36:13 - visible but not a reward notice because
36:15 - it's going back to its size of zero zero
36:20 - so we can do another weight here if you
36:22 - want another weight one point five to
36:25 - see it smoothly go off screen if you
36:28 - want to edit your your your speed values
36:31 - or the the way that the easing style or
36:35 - direction of the tween you can do so by
36:37 - adding more there are more parameters or
36:40 - arguments available check the object
36:43 - browser if you're interested in those
36:46 - but that is all of the client-side
36:49 - coding finished okay we now just need to
36:52 - work on claimant reward and that will be
36:54 - very quick and also saving the time when
36:58 - when that player when that player clicks
37:00 - it that's going to be very very quick
37:02 - and all we need to do we need to go back
37:03 - to the server script and then over here
37:06 - by the by way we've done fire client for
37:09 - our show daily reward we're just going
37:12 - to set up a connection here now we're
37:13 - doing this because we want to disconnect
37:15 - the event that we're about to make after
37:17 - it's been fired for the first time now
37:20 - you'll see how this makes sense I want
37:22 - to once we've done the event but it will
37:24 - make perfect sense
37:25 - very shortly so we're just doing local
37:28 - connection and then we're setting that
37:30 - connection variable to our our event
37:33 - okay
37:34 - make sure to save your work and we're
37:37 - going to just say game don't replicate a
37:39 - storage doc frame reward dot on server
37:44 - event
37:45 - Curren connect function player okay so
37:51 - the argument here is the player that
37:52 - triggered the claim reward event okay
37:56 - and that will be sent from the local
37:59 - script from the client and obviously
38:02 - because we don't know which which player
38:04 - will have triggered it okay in this case
38:07 - because we've put the event inside of
38:11 - our player added event inside of this
38:14 - it's if statement then it's it's going
38:17 - to to be fired only when that player's
38:21 - reward is eligible so in the unlikely
38:24 - event that two players get the reward at
38:27 - the exact same time and just to be sure
38:29 - that this does not happen we can just
38:31 - check that if player is equal to in fact
38:36 - we should change this this player
38:39 - parameter just to say player so we could
38:44 - just say triggering player okay so this
38:47 - is just a player that triggered the the
38:50 - remote event to to fire but will just
38:53 - give me a different name to the player
38:55 - argument over here
38:56 - so if triggering player is equal to the
39:03 - player so it's the same player and we
39:05 - know that we've got the right person so
39:07 - what we can do is we can say print
39:10 - reward claimed so we know that they've
39:13 - now claimed their reward or we can say
39:16 - player dot leader stats
39:18 - doc poins dot value equal player dot
39:23 - leader stats whoops doc poins
39:28 - dot value plus reward we're adding our
39:31 - reward the reward where is it where's
39:36 - the reward reward
39:38 - here we go the possible rewards so that
39:41 - number that we got from the table we're
39:42 - adding it onto the number of coins that
39:45 - they have and once we've done that all
39:47 - we need to do is we need to save the
39:49 - time at which they click that button so
39:52 - to do that we can say datastore current
39:55 - set async
39:57 - we say player user ID which is that key
40:01 - I can catenate it with the daily reward
40:06 - okay and then we're just going to save
40:10 - the value to that key and that value is
40:13 - gonna be OS dot time okay so the number
40:16 - of seconds since generally the first
40:18 - 1970 and then because we've saved that
40:21 - when they next during the game we can
40:23 - check it against time now to see time
40:26 - since the last claim okay and now that
40:30 - we've done that what we can do is we can
40:34 - say connection and then we can say curl
40:37 - on disconnect so it's going to prevent
40:41 - this player from triggering it more than
40:43 - once okay because if we didn't have this
40:46 - disconnect in this connection they'd be
40:48 - able to constantly trigger this claim
40:50 - reward event or an exploiter would would
40:53 - fire this event like tons of times every
40:57 - second so they would keep getting their
40:58 - reward
40:58 - so we disconnected it once they've got
41:00 - their reward the first time and
41:02 - obviously the next time they join we set
41:04 - up the connection ready for their next
41:07 - reward okay so that should have done the
41:11 - actual saving for players that have
41:13 - played the game before and we also now
41:16 - need to focus on players that haven't
41:18 - drawn in the game before okay we can add
41:21 - an else here if you want else if the our
41:25 - wait hasn't been exceeded so if they
41:28 - have come back within 24 hours okay
41:32 - they're not eligible for award we can
41:35 - print player is on eligible and edgy
41:40 - ball right now okay but that should be
41:44 - everything for returning players now all
41:47 - we need to do for players that are new
41:49 - to the game we just need to do a quick
41:51 - little play removing event and then
41:53 - we'll be all done so we can say game dot
41:55 - players got player removing okay :
41:59 - connect function player and this will be
42:03 - the player that leaves the game
42:04 - obviously we don't know their name again
42:06 - now all we want to do is you want to
42:08 - have a peak or function here
42:10 - because we want to get the data again so
42:14 - we can say local data and then we can
42:17 - what we can do here is in fact what do
42:21 - we just get rid of the speaker or do
42:22 - local data outside of it and then we'll
42:25 - do P cool function there we go and then
42:31 - inside of this peek all we can do data
42:33 - equals data store current gets async and
42:37 - we use the player's user ID as the key
42:40 - again so daily reward and then we can
42:46 - just print getting the data then outside
42:52 - of this people we can say if data is
42:55 - equal to nil then we know that there are
42:58 - new player and what we can do is we can
43:03 - say local time Val equals OS dot time
43:09 - okay so when they first go in the game
43:11 - we're going to save there the current
43:14 - time and then what we can do is we can
43:18 - say data store curl on set async player
43:23 - dot user ID and then we can set their
43:27 - key as well
43:28 - daily reward just like that and then we
43:31 - can print saved because you are a new
43:35 - player okay and we'll just do the same
43:40 - we'll put this in a P call as well so
43:47 - that in case of errors it doesn't break
43:48 - the entire script and let's just make
43:51 - sure that's properly indented so if a
43:53 - player joins the game for the first time
43:55 - they're not going to get a daily reward
43:57 - straight away okay now if you wanted
44:01 - this to be the case okay then in this
44:04 - else here what you can do is you can you
44:08 - can take this this this code here and
44:10 - you can copy it and you can paste it
44:15 - into this else here okay
44:19 - in fact I think I put it into the wrong
44:20 - house there we go it needs to be in this
44:23 - one over here where it says new player
44:24 - so a new player then we want to give
44:27 - them a reward okay and then we can set
44:32 - that their daily reward if they're a new
44:34 - player now if that's the case then you
44:36 - don't really need this I'm this part of
44:39 - down here which is which is actually
44:42 - setting a player's time if they haven't
44:48 - you know because because if we've got
44:50 - the if we're giving them a daily reward
44:52 - it's straight away when they join then
44:54 - you don't you don't need this this code
44:56 - over here because you don't need to
44:57 - check for it's nil because the player
44:58 - will have some data so you can comment
45:01 - that out if you want and that you can
45:04 - actually comment the entire B you can
45:06 - comment the entire thing out here and
45:11 - that's not needed if you want to give
45:13 - them a reward when they join for the
45:16 - first time so I'm just going to go and
45:19 - just make sure this is properly indented
45:21 - and then we can go ahead and test it out
45:24 - so I'm gonna go ahead and test my game
45:27 - now if you want this to work in studio
45:30 - you need to publish your game and then
45:32 - click on the three dots next to the
45:34 - title of your game
45:35 - click configure game and then there
45:37 - should be a button which says enable
45:39 - access to studio API services you go
45:42 - ahead and click that that should allow
45:43 - you to use data stores in studio but if
45:46 - you still a bit confused don't worry
45:48 - just go ahead publish your game and go
45:50 - actually try it out in roblox go click
45:52 - the play button but I've got mine
45:54 - configured correctly now make sure that
45:57 - the daily reward GUI is set to disabled
46:00 - okay so enable is set to false okay else
46:02 - every player is going to get a daily
46:06 - reward as soon as they join ok or when
46:10 - they reset etc because it's going to be
46:12 - on screen so make sure it's disabled and
46:15 - turned off now let's go ahead and play
46:17 - it click the play button and you can see
46:21 - it says getting data and it saw that I'm
46:23 - a new player so it says come back in 24
46:26 - hours for your next reward so I'm gonna
46:28 - click on claim and there we go I've got
46:30 - 5 coins and it got added to
46:32 - my balance now if I go ahead and leave
46:36 - and I come back then I am uh nella jabal
46:41 - because 24 hours have not passed you can
46:44 - see 10 seconds passed since my last
46:47 - visit and if we go ahead and play the
46:50 - game again you can see that it is
46:53 - updated to 23 seconds so it's not it's
46:55 - not updating the it's not resetting the
46:59 - time back to zero when you leave it's
47:01 - just adding on to it okay because it's
47:04 - only resetting it when you click claim
47:06 - again now just for the purposes of the
47:08 - tutorial I'm gonna go back to the script
47:10 - here and I'm gonna change our weight to
47:12 - not point one one more sorry not point
47:14 - naught naught naught naught 1 ok so you
47:17 - you you don't have to wait to get your
47:20 - next reward ok this is just to speed
47:22 - things up cuz we're not gonna wait an
47:24 - entire a day and you can see it's messed
47:25 - up the comeback in hours that's because
47:28 - I did a fractional amount of hours but I
47:31 - can claim my reward and the reward of
47:34 - claim time will have reset from 54 it
47:37 - should go down to okay there we go 6
47:40 - seconds and I can get some more coins
47:42 - and it is a random chance each time it
47:45 - doesn't matter and because it's taking a
47:47 - random number from that table so it
47:49 - doesn't matter you know you what you get
47:52 - because you're always gonna get
47:53 - something different so there we go we've
47:55 - got a nice little daily reward system
47:57 - here let's go ahead and change this back
47:59 - to 24 so there we go
48:03 - if you want to take the source code then
48:06 - become a channel member click the join
48:07 - button next to the subscribe button you
48:10 - get all the source code from my huge
48:11 - videos and also if you want to take the
48:15 - GUI I'll leave that for free in
48:18 - description for you thanks for watching
48:20 - make sure to leave a thumbs up don't
48:22 - forget to subscribe and click on the
48:23 - bell icon so you never miss out on a new
48:26 - upload and I'll see you in the next
48:29 - video