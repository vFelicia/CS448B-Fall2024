00:00 - okay welcome back to the third episode
00:01 - in my piggy series so in this episode we
00:05 - will be working on the round loop to
00:08 - detect when things happen so we can end
00:10 - the game if the piggy kills everybody
00:12 - and also we'll be working on getting the
00:15 - keys and the tools working so you can
00:19 - click them to pick them up and also drop
00:21 - them again well done for making it this
00:24 - far we are now over halfway through the
00:27 - series and keep going and if you do
00:31 - encounter any bugs as I've said in the
00:32 - last episode try your best to fix them
00:35 - the piggy game is working fine for me so
00:39 - it's going to be you that's made a
00:40 - mistake or an error and as I've said
00:43 - I've got that page on my website with
00:45 - some help
00:45 - details if you stuck but keep going and
00:48 - you'll get there I promise as always
00:51 - don't forget to Like and subscribe to my
00:54 - channel if you're enjoying the series so
00:56 - far and you can also get that piggy kit
00:58 - in the description box alright let's get
01:01 - straight into episode 3 okay so now
01:04 - we're gonna look at how to script the
01:06 - keys which will open up doors because
01:08 - obviously we've got the doors which
01:10 - we've scripted earlier which can swing
01:12 - open to open and close them but we've
01:15 - also got the doors which needs to be
01:17 - unlocked by a key and that's what we're
01:19 - going to be scripting in this part but
01:22 - the this is a little bit confusing but
01:24 - you should be able to get your head
01:25 - around this the map which i've got in
01:29 - the replicated storage for every single
01:30 - map that you've got you're going to need
01:33 - to have you're going to need to put the
01:36 - items in here that you want the players
01:38 - to find so if we have a look in this map
01:40 - which I've already created we've got the
01:42 - items folder which I've been talking
01:43 - about and inside of here we've got a
01:45 - load of items we've got two crossbows
01:47 - we've got a different coloured Keys blue
01:50 - key green key orange key purple key and
01:53 - red key as well as the white key the
01:56 - white key is used to escape at the end
01:58 - so it's going to be the last thing that
01:59 - you find but these keys are going to be
02:03 - picked up by a player so when the map
02:06 - spawns in there will be items such as
02:09 - keys we've also got hammers and wrenches
02:12 - as well and
02:13 - they'll already be in the map because
02:15 - we've already put them in the items
02:16 - folder so they're already littered
02:18 - around the map but when it spawns in and
02:20 - they get spawned in when the map gets
02:22 - spawned in as well but these are not
02:25 - tools they are instead just parts or
02:29 - models as you can see there's no tool
02:31 - objects and that's for a reason the
02:34 - reason that they are not tools are
02:36 - because if you step on a tool then
02:38 - you'll automatically pick it up a
02:39 - regardless of who you are in the game
02:41 - and we do not want this to happen
02:43 - because then the piggy could step on the
02:46 - tools and pick them up by accident and
02:48 - then they could just keep all the tools
02:50 - and the piggy will have taken all the
02:52 - keys and nobody will be able to escape
02:54 - so we don't want the piggy to be able to
02:56 - equip the tools so we can't just have
03:00 - tools around the map tool objects are
03:03 - not going to work and another reason why
03:05 - tool objects won't work is because we
03:08 - want the player to only be able to equip
03:11 - one item at a time and so you can't
03:13 - check when somebody steps on a tool
03:16 - whether they've already got something in
03:18 - there in their backpack or not so you
03:20 - can just step on at all because roblox
03:23 - have coated it themselves and you will
03:25 - equip it no matter what no matter who
03:28 - you are whether you're the piggy working
03:29 - through the contestant and you can see
03:31 - the issues around this so I've come up
03:34 - with a different solution so we've got
03:37 - two types of items key handles and tools
03:41 - and you will have seen the key handles
03:43 - in the server storage now the tools are
03:48 - going to be put into your your inventory
03:52 - of course when you click on them but
03:55 - what I've done is I've separated them so
03:58 - you can see we've got the handle in the
04:00 - tool so the handle for the key is like
04:02 - the part that you will hold the main
04:04 - part that you were hold so we've got
04:07 - these parts in the map and each of these
04:10 - parts which which are basically just the
04:13 - handles which have been taken out of the
04:15 - tool they're just parts but they've got
04:18 - a click detector and they've got an item
04:19 - script inside of them and when you click
04:22 - on this key
04:24 - what's what's going to happen is we're
04:27 - going to create a key module script
04:30 - which when you click on a key it will
04:33 - look up the name of the key or the name
04:36 - of the tool in the service storage tools
04:38 - folder so if you click on the red key it
04:41 - will look up the red key in the tools
04:42 - folder in server storage and it will
04:45 - copy it and it will put it in your
04:46 - backpack so it looks like you've
04:48 - equipped it but then it will destroy it
04:52 - will destroy this red key like ham part
04:56 - objects so it looks like you've clicked
04:59 - it to pick it up but what's actually
05:01 - happened is you've just deleted this red
05:03 - key which makes it look like you've
05:05 - taken it and then it's cloned the actual
05:08 - tool from the server storage into your
05:11 - backpack so that what's happened is we
05:17 - because we're using a click detector
05:19 - when you click it we can use a script to
05:22 - see who is trying to pick up the item so
05:25 - we can check to see if you're the piggy
05:26 - or whether you're a contestant and also
05:29 - whether you've got something in your
05:30 - backpack already and if you do have
05:32 - something in your backpack already then
05:34 - we can look up the the key handle which
05:38 - is the part which we just destroyed and
05:41 - know which is the part that you already
05:44 - sorry the part of the tool with the same
05:47 - name which you are already holding and
05:48 - we can look it up in the key handles so
05:51 - let's say you had the green key and
05:53 - you've just picked up the red key so it
05:55 - would take this key handle and it would
05:57 - put it into the items folder at the same
05:59 - position here so it's kind of like
06:01 - swapping it out ok now I hope that makes
06:04 - sense to you but the the premise of this
06:08 - the reason that we're doing it is
06:09 - because I'll try and word it in a
06:13 - different way so when you click one of
06:14 - the the items it will delete the item
06:18 - that's on the screen so the red key but
06:20 - it will clone out the tool with the same
06:22 - name from the server storage tools
06:25 - folder and put it into your backpack so
06:26 - we've got two things going on it's
06:28 - deleting that red key part which you've
06:31 - just clicked it's not at all it's just a
06:32 - part and then it's actually taking
06:35 - the tool with the same name because the
06:38 - red key is gonna have the same name as
06:41 - the red key tool so we just need to look
06:43 - it up in the service service tools
06:44 - folder and I clone it into your backpack
06:46 - but then it will delete that key part
06:49 - but say you already had something
06:51 - equipped such as a hammer and you wanted
06:58 - to drop the hammer to pick up the red
07:00 - key then what would happen is it would
07:03 - take everything in your backpack and put
07:06 - it on the floor so it would take the one
07:08 - thing that's in your backpack put it on
07:09 - the floor and then it would look up the
07:11 - hammer in the tools folder because
07:12 - that's the key part that you're going
07:14 - you lost the key handle you're going to
07:16 - click and it's going to take that hammer
07:19 - it's gonna put it into your backpack so
07:21 - it does sound a little bit confusing but
07:23 - hopefully when we get into the coding of
07:25 - this it will make more sense and I'm
07:27 - sure it will so what we're gonna do is
07:29 - we're gonna create a new module inside
07:32 - of the game logic scripts so insert a
07:35 - module script and I'm going to call it
07:37 - this module key module just like so now
07:46 - what we're going to do is we're gonna
07:47 - create a function inside this module
07:49 - which is going to run when you click on
07:52 - one of those key handles ok so we've got
07:54 - the key handles which will be
07:56 - registering when you click them and then
07:59 - from that we'll create another function
08:00 - to drop all of your items which we can
08:03 - call from that collect function ok so if
08:06 - you have a look inside of the the key
08:07 - handles you can see I've already put
08:09 - scripts in there called item script and
08:11 - what it will do is it will actually look
08:13 - up this key module which we've only just
08:15 - created and it will it will do all the
08:20 - click detector Mouse events so when you
08:22 - click on the item the for example the
08:24 - blue key is going to trigger that
08:27 - clicked function that I've just told you
08:29 - about ok and we're going to script that
08:32 - function right now so function module
08:36 - got clicked and we need to pass two
08:39 - things this function the player that is
08:41 - going to have clicked the tool but also
08:44 - the key which they have clicked so if
08:48 - they have clicked
08:49 - then they would have clicked we will
08:51 - know which key they've clicked
08:52 - now you'll see in the item script we're
08:56 - sending the player that clicked the
08:57 - click detector but also script the
08:59 - parent and script the parent is the blue
09:01 - key now if you're working with a model
09:03 - where and so for example the script is
09:07 - in a handle in the model you would have
09:09 - to say scripts parent operon
09:11 - because you want to send the object that
09:14 - has the name of the tool so because this
09:17 - item scripts parent is called handle we
09:20 - don't want that we want to send the
09:23 - model itself because if it's a model
09:25 - we'll do some checks to see if it is a
09:27 - model because it's all to do with the
09:29 - positioning so if you are creating a
09:31 - handle but it's made up of lots of
09:33 - different parts put it in a model and
09:34 - put the item script in one of your parts
09:37 - preferably the handle doesn't really
09:39 - matter though but change the item script
09:41 - to be the second argument to be script
09:43 - doctoring got parent okay I just have to
09:46 - say that for the models but if it's a
09:49 - part and you've got the if it's just a
09:51 - part by itself just do script that
09:53 - parent okay so I know I'm saying key by
09:58 - the way because you will be able to
09:59 - click other items so yeah I will change
10:02 - out the set to be items the item that
10:05 - you click because you could pick a
10:06 - hammer for example I just said key
10:08 - because when I started creating this
10:10 - game all right there were only keys at
10:12 - first but what we want to do want to
10:13 - firstly check if it's a real player and
10:15 - the play is still here so if player then
10:19 - we need to check if they have a
10:20 - character so if player character and
10:23 - they are not the piggy so this is how
10:25 - we're checking to see if the person that
10:27 - clicked the tool is not the piggy so we
10:29 - can say and not player curl find first
10:32 - child piggy what this basically means is
10:35 - if they don't have the piggy an object
10:39 - called piggy inside of their player then
10:41 - we know that they can't be the piggy can
10:42 - they now what we need to do is we need
10:45 - to check to see if the item is a model
10:47 - that you've clicked
10:48 - so if item is a model this is a great
10:52 - way to check if it's a model use the is
10:54 - a function built into our blocks by the
10:57 - way and then we're going to need to have
10:59 - a variable here for the position
11:01 - we're going to grab the position of the
11:03 - item so if it's a model if one of your
11:06 - key handles is a model you need to set
11:09 - any primary part property and what the
11:13 - farmerie part is because you can't move
11:15 - a model by saying model dot position we
11:18 - have to designate a part that will move
11:20 - for us and when that part moves all the
11:24 - other parts will move with it so just
11:26 - select one of the primary parts so click
11:29 - it and then click one of the parts
11:30 - inside your model I've selected the
11:32 - handle okay but that's what you need to
11:34 - do I'll do it again it says its handle
11:37 - and you set the primary part so what you
11:40 - need to do is make sure you've got that
11:42 - primary part out it's not going to work
11:44 - then we're gonna say position set this
11:46 - position variable to be the keys primary
11:49 - part sorry the items primary part
11:52 - position but if it's not a model we know
11:55 - it's just a part so we can say position
11:56 - equals item dot position can't we
11:59 - because position is a property of a part
12:01 - whereas a model doesn't have a position
12:03 - property so we have to get the position
12:05 - of its primary path and what we're doing
12:07 - with this position is we're just
12:09 - collecting the position in a variable so
12:11 - when we drop the tallit you can only
12:13 - have we can drop it in the same location
12:14 - of where the old tours so that we can
12:18 - you know if you have a if you trying to
12:21 - pick up a hammer but you have the red
12:22 - key equipped we want to drop that red
12:24 - key at the same position of where the
12:25 - hammer is so someone else can pick it up
12:27 - and we can swap out your tools and now
12:30 - what we need to do is we need to look up
12:34 - the the item name in service stores you
12:37 - we want to get the actual tool right
12:39 - because we want to equip this tool
12:41 - you've clicked on the part which looks
12:43 - like the tool and we're going to delete
12:45 - it but first we need to actually equip
12:47 - that item in your inventory so to do
12:49 - that very very simple we're gonna say if
12:51 - game got service storage dot tools cut
12:56 - off fine first child because it might
12:58 - not be there so we use fine first charge
12:59 - to be safe but instead of doing string
13:02 - we're just gonna say item got name
13:03 - because as I've said the items name is
13:06 - going to correspond to the tools name so
13:09 - if you click on the blue key part then
13:11 - this is going to be a blue key that's
13:13 - why you need to have your tools
13:15 - your key handles the key handles are
13:17 - these things named the same again so
13:19 - that they correspond with each other if
13:21 - they're not named the same it's not
13:22 - gonna work so if you have a red key tool
13:24 - you're gonna need a red key key handle
13:27 - parts which you can click on it needs to
13:29 - be named the same thing so we're looking
13:32 - for it in service storage tools and if
13:34 - it's not there it's not gonna work so
13:36 - make sure your tools and your handles
13:38 - are named the same thing I'm just not
13:40 - gonna work that's vital so if it is in
13:42 - the tools folder then we're gonna clone
13:46 - it out so very very simple we're gonna
13:48 - do the same thing again pretty much so
13:51 - we're gonna say local cloned tool I'm
13:53 - going to crack it create a variable for
13:55 - that tool we're gonna clone out of
13:57 - service storage so game door self
13:59 - storage tools and then in square
14:01 - brackets I'm gonna say item name and
14:03 - then we're gonna do : clone that's going
14:06 - to create a clone of the tool from
14:07 - service storage so that we can put that
14:09 - in the players backpack so we can say
14:11 - clone tool dot parent equals PLR so the
14:16 - player the player that clicked the tool
14:19 - because we passed that to our clicked
14:21 - function and we can say player dot
14:23 - backpack so backpack is where their
14:26 - tools are located so remember earlier
14:29 - with the picky bat I said if you put it
14:31 - in player character they'll
14:32 - automatically equip it whether you put
14:34 - it in player dot backpack it will just
14:35 - sit in the inventory at the bottom of
14:37 - the screen which is where we want it to
14:39 - go but they probably will equip it
14:42 - because it's the only tool that they're
14:43 - going to have so it'll automatically
14:44 - become equipped but you put it in the
14:46 - backpack because that's where you put
14:47 - most of the tools okay then we're going
14:51 - to a.m. we have to put it in the
14:54 - backpack because to make a play equip
14:56 - the tool which we're about to do we're
14:58 - gonna manually make them equip it it has
14:59 - to be in the backpack first so we say
15:01 - player lock character got humanoid
15:03 - Curran equip tool and this forces them
15:07 - to pick up the tool and then we can just
15:09 - say cloned tool but it has to be in
15:11 - backpack for that to work and now once
15:13 - that we have cloned the actual tool into
15:16 - their backpack we can now delete the key
15:19 - handle because we don't want anybody
15:20 - else to be able to pick it up because
15:22 - somebody else has already taken it so
15:24 - we're gonna say item : destroy and now
15:28 - can you kind of see where this
15:29 - going so when the player clicks on the
15:32 - tool handle or the key handle this part
15:36 - well when it's clicked we're firing the
15:40 - function clicked in the key module for
15:43 - the player that clicked it with the item
15:47 - that they clicked ok and then what's
15:49 - going to happen is we're going to look
15:51 - up in server storage tools we're going
15:53 - to find the tool object with the same
15:56 - name so imagine they've clicked on the
15:58 - red key we're gonna look in server
16:00 - storage tools for the tool called red
16:03 - key here it is then what's going to
16:05 - happen is it's going to get copied out
16:07 - and cloned into that players inventory
16:09 - their backpack and then when that's done
16:11 - we're going to delete from the items
16:15 - folder in the map that's key so that it
16:18 - looks like it's been taken all that
16:20 - we've done is deleted that key parts and
16:23 - which they can click on and we've put
16:26 - the tool with the same name into their
16:29 - backpack two different things have
16:31 - happened but it looks like one thing has
16:33 - happened the two things that have
16:35 - happened is that we've clicked on the
16:36 - tool and we've clicked on the key handle
16:39 - sorry which is the part on its own which
16:42 - isn't at all and the second thing that's
16:43 - happened is we've cloned out the tool
16:47 - object from server storage into their
16:49 - backpack but it only looks like one
16:50 - things happened it looks like we've just
16:52 - swapped them but we haven't in fact it
16:56 - just looks like you've picked up which
16:57 - is the one thing but it's two things
16:59 - actually so what you really need to be
17:01 - aware of is that we have two different
17:04 - parts we have the part what you can
17:07 - click on to pick it up that's the key
17:08 - handle and that's the thing that's going
17:10 - to be in the map so for every single map
17:12 - you need to go into server storage and
17:14 - you need to pick out the things you want
17:16 - in your map you don't have to have every
17:18 - single key so if I made a new map for
17:20 - example and I only wanted the green key
17:22 - orange key purple key and the wrench I
17:25 - would just copy them out I'd go into my
17:27 - map and I'd paste them into the items
17:29 - folder okay now the reason we have them
17:33 - the items in the maps items folder but
17:37 - also in the key handles folder in server
17:39 - storage is because when you pick up the
17:43 - first item let's say red key it will get
17:45 - destroyed
17:46 - okay now that's because it's gone into
17:48 - your inventory now what if you want to
17:50 - swap out that red key for a hammer well
17:52 - we need to get that red key handle key
17:56 - handle back again to place down where
17:58 - the hammer is so someone else can come
17:59 - over and click on it so we've already
18:01 - deleted it from the map so we need to
18:03 - get it back from server storage so we're
18:05 - gonna make a clone of it
18:06 - from server storage from the key handles
18:08 - folder I'm gonna put it back into the
18:10 - maps items folder because when it goes
18:11 - into the maps items folder it's
18:13 - available for someone else to pick up
18:15 - again because they can click it okay so
18:17 - I'm gonna put that red key back I was
18:19 - just showing you how it works and
18:21 - hopefully you are happy with how that
18:23 - works okay so what we've done here is
18:26 - we've set up the clicked function so
18:28 - that when you click on a key is going to
18:30 - delete it but it's going to put the tool
18:32 - into your backpack so it looks like it's
18:34 - gone and you've picked it up okay and no
18:36 - one else can pick it up next thing we
18:38 - need to do is work on a function to drop
18:41 - your tools okay when you click on an
18:43 - item if you already have something
18:45 - equipped such as a hammer we need to
18:47 - remove that from your backpack and we
18:49 - need to put it back on the ground back
18:51 - in the items folder and that's what
18:52 - we're gonna do now we're gonna work on a
18:54 - drop tools function to make you drop
18:57 - your tool so to do this we're going to
19:00 - stay in the key module which in a create
19:03 - a separate function which we can call
19:05 - from an external scripts and but
19:08 - actually we're going to call this
19:09 - function from the module itself because
19:12 - when you click on an item we want you to
19:13 - drop your tools so this function is
19:16 - going to be called module dot drop tools
19:18 - and things were going to pass to this
19:20 - function it's going to be firstly the
19:22 - player whose tools we're going to drop
19:24 - secondly the map which were currently on
19:27 - and thirdly the position of where you
19:33 - want the tools to be dropped now I say
19:36 - drop tools you're only going to have one
19:37 - tool to drop but it's actually going to
19:40 - clear your entire inventory now if
19:42 - you've got one item in your inventory
19:43 - it's still gonna clear all that's why
19:45 - I've called it drop tools and just by
19:47 - some weird bug you somehow have two
19:51 - tools it's still gonna get rid of
19:52 - everything in your inventory so first
19:55 - things first I'm going to make a table
19:57 - cool tools and this table is going to
20:00 - contain any tools that we do find in
20:02 - your inventory for example if you have
20:03 - three tools for some reason they're all
20:05 - going to go into that tools a table and
20:07 - then we can loop through that tool table
20:11 - and destroy of hang in there now firstly
20:15 - what we're going to do is so firstly
20:21 - what we're gonna do is we're gonna look
20:22 - for any tools that are in your backpack
20:26 - to begin with because remember you could
20:28 - have tools sitting in your backpack or
20:30 - the tool could be currently equipped
20:31 - when it's currently equipped it's in
20:33 - your players character so we need to
20:35 - also look for any tools that are in your
20:38 - character so let's get started with the
20:42 - backpack first thing we're gonna do is
20:44 - going to loop through everything inside
20:45 - your backpack to do that we're gonna use
20:47 - the for loop just we've as we've done
20:48 - earlier on so for I comma and then tool
20:52 - tool is going to be the the object that
20:54 - we're looping through currently so if we
20:57 - loop through everything in your backpack
20:58 - in pairs gay sorry player backpack how
21:03 - long to get children to so think of if
21:09 - you have if you have three items in your
21:10 - backpack it's going to loop three times
21:12 - and each time it loops pool is gonna be
21:15 - a different tool that's in your backpack
21:16 - okay so what we're gonna do is we're
21:18 - first you can the check to see if it is
21:19 - an actual tool and in case you don't
21:20 - have any other objects in there that
21:21 - aren't tools so if tool colon is a tool
21:26 - then and also we need to check that it's
21:30 - an actual tool the Tauri that there's a
21:32 - key handle corresponding to that tool so
21:36 - if you if you have got the hammer we
21:38 - just need to make sure that there is an
21:39 - actual key handle that we can clone out
21:42 - so if it's a tool and game dot server
21:46 - storage dot key handles : fine first
21:50 - child tool dot name so if there is an
21:55 - item with the same name as the tool
21:57 - inside server storage key handles if
21:59 - we've got that key handle that we can
22:01 - clone and put in the same place as where
22:02 - the tool is going to be
22:06 - then we're going to do is crack line of
22:11 - it so local clone equals and it's gonna
22:14 - be the same thing again it's gonna be
22:16 - this key handle we're gonna make a clone
22:18 - of it so code on clone on the end here
22:20 - so what we're doing is for every tool
22:23 - this inside your backpack if there's a
22:25 - corresponding key handle that we can
22:26 - clone we're gonna clone out of the key
22:29 - handles and what we're gonna do is we're
22:31 - going to change its position to be the
22:34 - same position as where you're currently
22:36 - standing okay so obviously we don't know
22:39 - the position yet but when we call module
22:41 - look drop tools we're going to pass
22:42 - through a position and guess what it's
22:44 - the position that we've just got down
22:45 - here so we're gonna call it that
22:47 - function from the module dot clicked and
22:50 - we're gonna pass through the position of
22:52 - where the key or the item lead just
22:55 - clicked it so if you just clicked hammer
22:57 - we're gonna pass the position of that
22:59 - hammer to this drop tools so what's
23:01 - gonna happen is the key that you're
23:02 - currently holding or the item currently
23:05 - holding that's tool that's in your
23:06 - backpack if there is a key handle of
23:09 - that tool so for example the hammer yeah
23:13 - in the key handles folder if there's a
23:15 - part that we can clone out we're gonna
23:16 - clone it but we've got to set its
23:19 - position so we're gonna say firstly if
23:21 - it's a model so if say for example we've
23:24 - cloned out the crossbow well the
23:25 - crossbow is a model and we can't just
23:27 - set the position of the model we have to
23:28 - set the position of his primary part
23:29 - so if clone is a model then we're gonna
23:36 - say clone curran sets primary see frame
23:39 - sorry set primary part see frame really
23:43 - importantly you get the capitalisation
23:44 - correct as well so you've got a capital
23:46 - S P P for primary P for parts and
23:49 - capital C F for C frame so you've got a
23:52 - capital C and a capital F really
23:54 - important because it won't be correct it
23:56 - won't work if you don't get the
23:57 - capitalization right so make sure you've
23:59 - got the capitalization the same as mine
24:01 - throughout all the scripts it's really
24:03 - important when you're coding so C frame
24:06 - is a position with a rotation and when
24:10 - you are setting the position of a model
24:12 - you have to use set primary part C frame
24:14 - okay you just can't say you can't say
24:16 - model dot position or cloned opposition
24:18 - so we say
24:20 - seek clone come on set primary part see
24:23 - frame and then we need to actually put
24:25 - in these brackets the C frame where we
24:29 - wanted to go so kind of like the
24:31 - position value where we want it to go so
24:33 - we're going to say C frame new and then
24:35 - in brackets we're just going to put
24:36 - position okay and that's going to
24:38 - convert the vector three position into a
24:40 - C frame so that we can position this
24:43 - model to be at the same position as
24:46 - where the item that we clicked and got
24:48 - rid of was obviously though if it wasn't
24:51 - a closed if it wasn't a model and the
24:52 - the key handle is just a part on its own
24:55 - like any of these we can just simply say
24:58 - clone dot position equals position okay
25:02 - we don't need to bother with any of that
25:03 - C frame stuff just because when you're
25:05 - moving a model you have to use C frames
25:07 - I mean you have to use set primary part
25:10 - C frame if it's a model but what this
25:12 - will do is it will put the key handle
25:14 - clone so again this part which you can
25:17 - click at the same position of where
25:20 - where the tool that you picked up is so
25:25 - back the key module then we're going to
25:27 - do is we're going to put the clone into
25:31 - the maps items folder so map items so if
25:36 - it's chapter one it's gonna go in
25:37 - chapter 1 dot items but of course when
25:40 - the map is loaded into the workspace as
25:41 - I said earlier we're going to rename it
25:43 - to be map because we don't know if the
25:46 - map is going to be chosen is going to be
25:48 - chapter 1 chapter 2 chapter 3 chapter 4
25:50 - they all have different names so we can
25:52 - just rename it when we load it in as
25:54 - being map and then any other scripts we
25:57 - can reference it as being workspace dot
26:00 - map so when we do call this function we
26:03 - can say game dot workspace map and that
26:05 - will be our map but because we're in a
26:07 - function and with dealing with arguments
26:09 - we can just say map the items over here
26:11 - because we're gonna pass that data to
26:13 - the function and now if it does sound
26:16 - confusing do stick with me we were
26:18 - nearly finished with this part and
26:19 - hopefully it will make more sense when
26:21 - we test it out last thing to do is now
26:23 - that we've dropped the tool we've
26:24 - dropped the actual clone the key handle
26:27 - which you can click and that's now
26:28 - available to pick up you should no
26:30 - longer be holding that tool so we're
26:32 - going to say tool colon destroy through
26:34 - move it from your backpack now pretty
26:36 - much the same thing for your character
26:40 - so we're gonna just copy all of this
26:42 - code and paste it down here okay only
26:44 - thing we're gonna change though is play
26:46 - it up backpack we're gonna change that
26:47 - to player dot character okay and that
26:51 - should be everything you need because if
26:54 - you're holding a tool it will be in your
26:56 - character it gets removed from your
26:57 - backpack and it gets put into your
26:59 - character when you're holding it so we
27:00 - need to run the same for loop through
27:02 - your character just to remove any tools
27:04 - that you're currently holding and I'm
27:07 - just going to make sure it's nicely
27:09 - indented like that so we've just written
27:11 - the drop tools function which will drop
27:13 - any tools that you're holding and it
27:16 - will put their key handle clones which
27:19 - you can click into the map into the same
27:21 - position where you clicked the tool that
27:23 - you're now going to pick up so we now
27:25 - need to call this function to do this
27:29 - what we're going to do is we're just
27:31 - going to put in our module door clicked
27:34 - function we can say module dot drop
27:37 - tools now we need to tell it the player
27:40 - that we're gonna drop the tools for
27:41 - which is going to be player because it's
27:42 - gonna be the player that clicked the
27:44 - clicked detector that we passed through
27:47 - to our module clicked function from the
27:50 - item script
27:52 - so we're firstly getting the player that
27:54 - click the click detector that click the
27:55 - item we're passing that to the key
27:57 - module dot clicked function then in the
28:00 - clicks function we're picking it up and
28:02 - then we're passing it onto the drop
28:03 - tools function later on so we can
28:05 - identify the player who wants to drop
28:06 - the tools it's going to be the same
28:07 - player that clicks the tool that is
28:09 - gonna drop all their tools so we've got
28:11 - the player then we've got to give it the
28:12 - map so games or workspace dot map only
28:15 - obviously there's no map in workspace
28:17 - yet with a name map but by the time this
28:19 - runs and you click the items there will
28:21 - be and then the next thing the next
28:24 - argument that we're going to send to the
28:26 - drop tools function is going to be the
28:27 - position we just got here and logged as
28:30 - a variable the position of the key
28:32 - handle which you just clicked and then
28:36 - what that's going to do is we fired that
28:39 - function so it's firstly gonna drop the
28:43 - tools that you're holding
28:45 - we can drop the key handle version not
28:47 - the tool version the key handle remember
28:49 - I said it has to be the key handle
28:51 - because if you click it sorry if it was
28:53 - a tool and you just stepped on the tool
28:55 - anybody would be able to pick it up so
28:57 - the piggy could pick it up we don't want
28:59 - that but down here because we'll check
29:02 - in when you click on an item because we
29:04 - using click detectors we can track when
29:06 - you click it if you're the piggy or not
29:09 - because you will have this if you have
29:11 - this piggy value stored inside your
29:13 - player will know that you are the pig e
29:14 - which is why it's so important the
29:17 - earlier in the game logic scripts in the
29:18 - round module that we inserted those tags
29:20 - to tell whether you're the contestant or
29:22 - the piggy because when it comes to other
29:24 - scripts we can easily tell if you're the
29:26 - piggy or not so that's why you got to do
29:28 - those tanks okay and then very very
29:32 - simply we just drop those tools and then
29:34 - we copy the tool object out of surf
29:37 - server storage into your backpack and we
29:40 - make you equip the tour now you may be a
29:43 - little bit confused by this and I don't
29:44 - blame you if you are because it is a
29:46 - little bit hard to get your head around
29:47 - but I'm gonna we're gonna go into the
29:49 - game I'm gonna show you how it works
29:50 - okay I'm gonna do some printing to show
29:54 - you so we're gonna print out dropped key
29:58 - handles and then we're gonna say yeah
30:04 - hold on yeah drop tools yeah that's fine
30:12 - so drop the key handles and then we can
30:15 - say print equipped the new tool quips
30:23 - equip the tool object so if we print
30:28 - that out then we'll be able to look in
30:30 - our output and we send a message so that
30:32 - we can check it out
30:33 - and it will actually tell us that it's
30:35 - dropped the key handles and it's
30:37 - equipped the tool objects so let's open
30:39 - up a test server now just to recap make
30:42 - sure you've got all of your items that
30:44 - you want to be placed the key handle
30:46 - versions not the actual tools themselves
30:48 - in your map now if you're still
30:50 - wondering what a key handle is it's
30:52 - basically all the parts that were in the
30:55 - tool
30:57 - so if we look in a tool here okay blue
31:01 - key it's just the handle part or any
31:04 - other parts that are in there which are
31:07 - in this key handles folder if you want
31:11 - to add your own key handle that's fine
31:13 - but just make sure that you've got a
31:14 - click detector and an item script in
31:16 - there okay and if it's a model make sure
31:19 - that the item script is inside one of
31:23 - the parts so that you can actually click
31:25 - the part or the objects and the clip
31:29 - detectors in there as well and also in
31:32 - the item script the second argument is
31:34 - going to be the actual model itself so
31:36 - script parent parent so the model that
31:38 - you're sending which has the same name
31:40 - as the tool now I'm really sorry if
31:44 - you're confused by this it is hard to
31:45 - get your head around but if you do have
31:48 - any questions leave a comment and we'll
31:50 - try to help you as best as we can now
31:54 - let's go ahead and test the game out all
31:58 - right so a new round is starting and oh
32:02 - by the way guys each time you run the
32:05 - game make sure that you've taken your
32:07 - map from the workspace and you put it
32:09 - back in replicated storage ok the map
32:11 - has to be in replicated storage so they
32:13 - can be chosen by the script ok if you
32:15 - have if you keep it in the workspace
32:17 - it's gonna cause an error so in like a
32:18 - index nil with clone error so make sure
32:21 - that your map is in replicated storage
32:23 - in that chapters folder before you start
32:25 - the game again alright so we're in the
32:31 - map and it's a little spawned in now
32:32 - let's go and click on all that you can
32:35 - see because we've got that click
32:37 - detector in the key handle we can hover
32:39 - over and we can click it so let's click
32:41 - on the green key and boom you can see we
32:43 - equipped it and it said drop the key
32:45 - handle so obviously we didn't have any
32:48 - key handle to drop because it's the
32:50 - first item that we equipped but it
32:53 - printed out anyway because it it looked
32:54 - it it went and looked to see if we could
32:57 - do it and it's also said equipped the
33:00 - tool object now did you also see that
33:02 - the door just unlocked when I touched
33:05 - the key against it that's because the
33:07 - door module that I wrote and I gave you
33:09 - in the piggie kit has
33:10 - worked and it has set up the event for
33:13 - when you touch a key against the door
33:15 - that's pretty awesome right but now if
33:18 - we go and unequipped the tool first and
33:20 - we select another tool just the hammer
33:23 - is going to swap it out so you can see
33:27 - it's dropped the key handle which is
33:29 - just the part not the tool but it's
33:31 - actually looked in server storage and
33:33 - it's equipped the tool objects for me
33:35 - that it's got the hammer out of serve
33:36 - storage and it's put it from the tools
33:39 - folder into my backpack and you can see
33:42 - it's working perfectly we can swap the
33:44 - tools out so how awesome is that so now
33:47 - we have pretty much a feasible game that
33:51 - we could play if you using the map that
33:54 - I use we can walk up to the next room
33:58 - which is going to be the red door up
34:01 - here at the top and hopefully that door
34:03 - will unlock as well now I haven't really
34:04 - showed you the door module yet and I
34:07 - will be publishing another video on how
34:09 - I made that but you can see it's working
34:11 - really well we're getting this red key
34:13 - and then we take the blue key we take
34:16 - that to the shed so we go all the way
34:19 - outside of the shed here and we unlock
34:21 - it and there we go we now get access to
34:23 - the wrench but we can't use the wrench
34:25 - because we need to get over the plank
34:27 - don't we so we need to use the wooden
34:29 - plank and we'll take that all the way to
34:31 - the top again and then I can equip the
34:34 - wooden plank and just click on the wood
34:36 - plank and because I coded all of these
34:38 - tools for you and put them in the piggie
34:40 - kit they're already there for you to use
34:42 - although as I said I will be publishing
34:43 - more videos so that you'll be able to
34:46 - learn how I create those tools and I
34:48 - really do recommend you you watch them
34:49 - you can also see we've got the crossbow
34:52 - now that's a model but you can still
34:54 - pick it up and again that's another tool
34:56 - which I've coded where you can click the
34:59 - piggy and you'll be able to stun him and
35:01 - that's what we're gonna be working on as
35:03 - soon as well it doesn't quite work yet
35:06 - but that's because we haven't set up
35:07 - everything else that's needed to make it
35:09 - work and most the tools should be
35:13 - working so the wrench for example is
35:15 - used to turn generators on or off so you
35:17 - just click it to enable it and then
35:19 - you'll need also hammers as well the
35:21 - hammer which we can get from the green
35:23 - room
35:23 - so you can see with Connor got a working
35:25 - functional game but there are things
35:27 - that still aren't working that we have
35:28 - encoded yet such as the things that
35:32 - could end the game so for example we
35:35 - can't detect whether the piggy has
35:37 - killed everybody so we can end the game
35:39 - or we can't detect whenever we has
35:40 - escaped so that's what we need to work
35:42 - on next so the question is how do we
35:48 - know when somebody has died so that we
35:51 - can count the number of players who are
35:53 - left in the game and it's a great
35:54 - question and you remember earlier when
35:56 - in the round module we created the
35:59 - insert tag function which inserted
36:01 - either a or insert the value into your
36:04 - player object which was either called
36:05 - contestant or piggy well what we're
36:07 - going to do is we're into constantly
36:09 - every second of the for loop we're going
36:11 - to loop through all of the contestants
36:13 - or sorry all the players in the game and
36:16 - if they have a contestant value in that
36:18 - player then we're going to count them as
36:20 - a player that's alive so example if we
36:23 - had four players with that contestant
36:24 - tag we would say that there's four
36:26 - players left who are currently alive but
36:29 - when they die we're going to remove that
36:31 - tag from their player because we're
36:33 - going to set up an event which will
36:34 - trigger when somebody dies and if they
36:36 - do have one of those tags inside of them
36:38 - we will remove that tag from their
36:40 - player and so the next time that we loop
36:41 - around and see if there is a player with
36:44 - the piggy tag or and we count how many
36:47 - players were are with a contestant tag
36:48 - will be able to work out whether there
36:50 - are more than zero people out with the
36:54 - tag so if there's zero people that have
36:56 - the contestant tag we know that
36:57 - everybody's died and that the piggy is
36:59 - one but if we loop through everybody and
37:02 - find out that there's nobody with a
37:03 - piggy tag we know that the piggy has
37:06 - either left the game or they've died so
37:08 - there are two things there that will
37:10 - cause us to end the round and we can
37:12 - manually end the round by using the
37:14 - break statement in a in a for loop and
37:17 - that will stop it and stop the round
37:20 - so what we're going to do is firstly
37:22 - going to create another table for the
37:25 - contestants and every second we're going
37:27 - to update this we're going to create a
37:29 - blank one every second and then we're
37:31 - going to fill it up with all of the
37:34 - players that currently have a confessed
37:36 - value in their player and then what
37:38 - we'll do in in another script it's will
37:40 - handle the deleting of those values okay
37:43 - so firstly let's just do local
37:46 - contestants to create that blank table
37:49 - and then what I'm going to do is we're
37:51 - gonna do a simple for loop so for I
37:53 - comma player in pairs game players curl
37:58 - on get players do so this is going to
38:02 - loop through every player that's
38:03 - currently in the game so what we're
38:05 - gonna do is win a check to see if they
38:06 - have a contestant value inside of them
38:08 - so if player curl I'll find first child
38:11 - contestant then if they do have that
38:15 - contestant value we're going to insert
38:17 - into the contestants table that player
38:20 - okay so we're going to say table dot
38:21 - insert into contestants we're gonna put
38:24 - player
38:25 - okay now you may be asking well hold on
38:28 - didn't we have a contestants table
38:30 - earlier on what we did but it was in the
38:32 - game logic script and the reason why we
38:36 - also need a new contestant table in the
38:38 - start round is because it's going to be
38:41 - changing the players that have the
38:43 - contestants tab you know somebody gets
38:44 - killed then is gonna change it's gonna
38:47 - be different contestants than there were
38:48 - when the round first started which is
38:50 - why we constantly need to be updating
38:52 - that table with the only the players
38:54 - that do have that contestant value
38:55 - because we know that they're still alive
38:57 - because if they do die then we will
39:00 - write some code to delete that value
39:02 - okay we're just doing the detection
39:04 - first detecting if they have died what
39:07 - detects me if they have lost that value
39:09 - and if they don't have a value then they
39:10 - won't be inserted into the contestants
39:12 - table so we're doing elsif so if they
39:16 - don't have the contestant table
39:17 - contestant value well maybe they have
39:21 - the PE value so else if player find
39:26 - first child
39:29 - piggy because they could have that piggy
39:31 - tag
39:32 - couldn't they so if they are the piggy
39:35 - and they have that piggy tag we know the
39:38 - piggy is still alive so let's create a
39:40 - variable called local is piggy here
39:44 - now we'll set it to false to begin with
39:47 - and before we head into this for loop
39:50 - but if we do find the piggy is still in
39:52 - the game and is still alive still has
39:55 - that value inside of them which which
39:57 - will also be deleted if they die or if
39:59 - they leave the game they leave the game
40:00 - will automatically be deleted because
40:02 - their player will just be removed so if
40:04 - we do have the piggy in the game then we
40:09 - will set is piggy here to be true but if
40:12 - we don't come across the pickety well is
40:14 - piggy here it's just gonna stay as false
40:15 - so by the time we reach the end of the
40:17 - for loop well it's either going to have
40:19 - changed to be true and the piggy will be
40:22 - here or it won't have changed at all
40:24 - so it will still be false so the piggy
40:26 - won't won't be in the game anymore
40:27 - they've either died or they have left
40:30 - the game so what we can do now is we can
40:35 - have an if statement outside of this for
40:37 - loop which checks to see if if not if
40:42 - the piggy is here or not so if not is
40:43 - piggy here and then that's basically the
40:47 - same as saying if is piggy here is equal
40:51 - to false so is the piggy dead or left
40:56 - the game okay
40:58 - so if the piggy has died or they've left
41:00 - the game well firstly we need to break
41:03 - out of this for loop because if we don't
41:06 - break out of this for loop it's going to
41:08 - keep on counting down all the way to
41:10 - zero even though the game's over so we
41:12 - need to say break and that will
41:13 - immediately stop the for loop and it
41:16 - will move on to the next piece of code
41:18 - underneath it and it just happens there
41:20 - is no code underneath it but there will
41:21 - be very soon okay what else could stop
41:27 - the game well there could be no
41:30 - contestants left so if the number of
41:33 - contestants member hashtag before a
41:35 - table name will give you the number of
41:37 - items in that table and if there's no
41:38 - players left
41:39 - there will be no contestants in that
41:41 - table so the length or the number of
41:43 - items in that table will be zero so if
41:46 - the contestants is double equals double
41:48 - equals in a for loop if it is equal to
41:50 - zero and there's no contestants left
41:52 - then we're also going to break and also
41:55 - we're also going to break out of the for
41:56 - loop
41:57 - if the time is up you may be asking okay
41:59 - but won't the for-loop finish when it
42:02 - gets the end anyway that's a great point
42:04 - and you'll see why we're doing this very
42:06 - very soon so if I is equal to zero then
42:09 - we're going to break as well now now
42:12 - that we've broken out of the for loop if
42:14 - we get down here how do we know what's
42:19 - happened we we want to update the status
42:21 - value to tell people that you know
42:24 - either the piggy won or the contestants
42:27 - escapes or time ran out or everyone got
42:29 - killed so what I'm gonna do is we're
42:31 - going to create a variable at the top
42:33 - here we're gonna call it outcome okay
42:35 - we're gonna leave it blank for now but
42:37 - when we do break out of the for loop
42:40 - just before the break because you have
42:42 - to write the code before the break
42:44 - statement because if you think about it
42:46 - if you have any code after the break
42:47 - well it's already broken out of the for
42:49 - loop and it won't get to that line in
42:50 - time it will just break out of the for
42:53 - loop so any code that you do want to do
42:55 - has to be done before the break and of
42:57 - course we've got code underneath this
42:59 - first break but this break is only in
43:01 - the if statement so it will break and it
43:05 - won't carry on with any of these other
43:06 - checks okay if the piggy was here it
43:09 - wouldn't break because it wouldn't get
43:11 - to this part in the if statement say the
43:13 - contestants was zero okay well obviously
43:15 - the piggy hasn't died so we'll move on
43:17 - to the next check is there no one left
43:19 - in the game
43:20 - oh yes nobody's left contestants is zero
43:22 - okay we're gonna break and then it's not
43:24 - gonna get to this if statement because
43:26 - it's already broken out of this for loop
43:28 - it's not gonna get to the next if
43:30 - statement because we've told it to
43:32 - immediately stop the for loop and just
43:33 - move on to anything underneath it okay
43:35 - and the thing underneath it is it's
43:39 - gonna be this code here any code that
43:41 - goes here because we've broken out of
43:43 - this for loop here but what we also need
43:46 - to do is we need to keep a log or we
43:49 - need to keep on record what actually
43:51 - entered the game because if we just
43:53 - break and we get to this part down here
43:55 - and we want to print something out like
43:57 - you know player one or sorry the piggy
44:01 - one or the contestants one well how do
44:03 - we know that because we've just we've
44:05 - broken out the script we haven't said
44:06 - break because piggy has died
44:10 - we haven't given ourselves a way to know
44:14 - what's ended the game so we can keep a
44:17 - log of that by setting the outcome
44:19 - variable to something so if the piggy is
44:21 - not here anymore then we could set the
44:23 - outcome to piggy
44:25 - left okay I and it can be whatever you
44:30 - want okay it could be piggy gone
44:32 - piggy left it could be hamburger right
44:33 - but to make it so that we can understand
44:36 - what it is I'm gonna set it to be a
44:37 - string called piggy left then in the
44:41 - contestants equals zero well we'll set
44:43 - the outcome to be piggy killed everyone
44:47 - I am using hyphens to separate my words
44:50 - you don't need to do that you could have
44:52 - spaces you could have no spaces you
44:54 - could have dots whatever you want as
44:56 - long as it's something that just tells
44:58 - you what happened okay doesn't matter
45:00 - what the text is as long as it just it's
45:03 - different for each outcome and if I
45:05 - equals zero then obviously the outcome
45:06 - is going to be time and time - up okay
45:11 - so I've got my three outcomes here and
45:14 - outside of this for loop I can then
45:16 - check to see okay well if the outcome is
45:22 - piggy killed everyone then I'm gonna set
45:27 - the status value to the piggy has killed
45:31 - everyone okay but what if it is
45:35 - something else so else if outcome is
45:37 - time time - up then status value it's
45:43 - going to be time up contestants win but
45:49 - what if the outcome is piggy left if the
45:54 - piggies left the game well then we can
45:56 - set the status value to be piggy has
46:00 - died slash left contestants win okay now
46:07 - you may be asking well why don't you
46:09 - just set the status value here right
46:11 - where you've got the outcome instead of
46:13 - settings outcome value and then doing it
46:14 - later on
46:15 - well that's because if you want it to
46:18 - set the status then you'd have to do a
46:20 - weight in this if statement and you'd
46:21 - have to wait for the for loop to break
46:24 - that's not good practice we want to
46:26 - break out the for-loop straight away and
46:28 - then once we're out of that for loop we
46:30 - can deal with all these outcomes okay
46:32 - so when we've set the status value we're
46:35 - gonna wait for five seconds just so that
46:37 - we can have the status on the screen for
46:40 - at least five seconds so that people can
46:41 - read it okay and then what's going to
46:44 - happen is it's reached the end of the
46:46 - function so the game logic will print
46:50 - out this hello that I said earlier will
46:51 - only print when the start round function
46:54 - has finished and by this time when the
46:56 - wait five is finished while we've got to
46:57 - the end of the function so it's finished
46:58 - running okay so you can see that the for
47:01 - loop is basically containing the game
47:03 - for 600 seconds or however long it is
47:06 - until something happens when something
47:08 - happens such as the piggy leaves or the
47:10 - contestants all die or the time runs out
47:13 - we are using the break statement and the
47:15 - break statements will stop the four
47:17 - loops it will stop it from running and
47:19 - it will either it will set the outcome
47:21 - variable to be something okay and then
47:23 - we can check what the outcome was and
47:26 - depending on what it was we could set
47:28 - these status values accordingly and if
47:30 - you wanted to do something else such as
47:32 - I don't know play some music
47:34 - then you would do it outside of this for
47:36 - loop somewhere like here before this
47:38 - wait five so that the wait five
47:41 - basically stops the function from ending
47:43 - straightaway and the game from moving on
47:45 - to the next thing so it would wait five
47:47 - seconds and then it would finish running
47:50 - the function so the game logic would
47:52 - move on to the next line of code which
47:54 - would be hello and so after this we
47:57 - would work on the code to end the round
47:59 - for example deleting the map removing
48:01 - everybody's tags teleporting everybody
48:03 - back to the lobby etc that's what we're
48:05 - going to do next but we've now got the
48:08 - game loop and all of the different
48:10 - eventualities which would happen lots of
48:12 - different eventualities you know players
48:14 - dying pickiest people escaping time
48:18 - running out they are all the
48:20 - eventualities and we have to cover all
48:21 - bases by having code that will run when
48:24 - those things happened which is why we
48:26 - have to set the outcome variable so that
48:27 - we know once you've broken out that for
48:29 - loop what has actually happened okay and
48:32 - that we can do certain things when
48:34 - certain
48:35 - outcomes happen okay maybe you want to
48:37 - have a fanfare of like a triumph sound
48:40 - when you escape you know because
48:42 - everyone's happy and that's what you
48:44 - would do if the outcome was everyone
48:46 - escapes and that's what we'll do later
48:48 - on as well we're gonna do an outcome if
48:49 - everybody has escaped but we currently
48:50 - have no way of detecting who has escapes
48:53 - so that's why we're gonna do it later on
48:54 - but what we still need to do is we still
48:56 - need to delete those tags for the
49:00 - players when they leave the game okay we
49:02 - still need to delete the contestant tag
49:05 - and the Piggy tag if somebody dies and
49:07 - that's what we will be doing next so
49:11 - we're gonna create an event which will
49:12 - fire when a player dies so we're gonna
49:14 - go into the event handling script and
49:17 - we've got our player added events here
49:18 - now what we're gonna do is we're going
49:20 - to insert a character added event and
49:22 - this character added event will fire
49:25 - whenever your character respawns so
49:27 - we're gonna say player dot character
49:30 - added curl on Connect function and we're
49:34 - gonna have a argument of the player's
49:35 - character which I'm gonna call car you
49:38 - can call it whatever you want though
49:39 - make sure you've got that bracket on the
49:40 - end though and then inside of here I'm
49:43 - gonna create a humanoid died event so
49:45 - this will fire whenever you die as soon
49:48 - as you you die or you get killed it's
49:50 - going to fire so car got humanoid got
49:54 - died : Connect function okay and so
49:58 - inside of here again close it off with a
50:01 - closing bracket parentheses inside of
50:04 - here what we're going to do is we're
50:05 - going to see if you are contestant so if
50:11 - player curl on find first child
50:15 - contestant you have that contestant
50:17 - value in your player then we are going
50:21 - to delete it so player dot contestant
50:26 - curl on destroy so the next time that we
50:29 - loop through in the next second that we
50:31 - loop through all the players in the game
50:33 - in that round module this player will no
50:36 - longer have their contestant value or
50:37 - the player that dies will no longer have
50:39 - that contestant value so there's going
50:41 - to be one less person alive in the game
50:43 - and so if everybody dies then there's
50:45 - gonna be no contestant values in any
50:47 - player so there's
50:48 - it's gonna get added to that contestant
50:50 - table in there and module and so when we
50:52 - through the hashtag contestants it's
50:54 - gonna be equal to zero so there's gonna
50:55 - be no players left and that is where
50:57 - it's going to break out with the for
50:58 - loop so we've just deleted that
51:00 - contestant that contestant value now
51:05 - what we also need to do when you've died
51:06 - is we need to drop your tools because if
51:09 - you're holding something like the hammer
51:11 - or an important key and then you die
51:13 - well it would just be gone so we need to
51:15 - drop your tool so that somebody else can
51:17 - pick it up so we're gonna do is we're
51:19 - going to get the key module swings a
51:22 - local key module and we have to require
51:25 - it remember equals would require and
51:27 - then in there we'll say scripts got
51:30 - parents come on wait for child and then
51:32 - we're gonna wait for the game logic
51:33 - script like that and then we're going to
51:36 - say dot key module like this okay and
51:40 - that's our key module now we can access
51:42 - the functions in there and one of the
51:44 - functions was the drop tools function so
51:47 - we can say key module dot drop tools and
51:51 - we're gonna have to supply the player
51:53 - who's who want to drop from the map
51:56 - which will be gained or workspace map
51:57 - because we know that's gonna be its name
52:00 - and then also we need to give the
52:02 - humanoid root part position because that
52:05 - is where the key we want this the the
52:09 - item that you're gonna drop to go so we
52:11 - can say car dots humanoid root part drop
52:16 - position just like that and let's just
52:19 - also wrap this in a if statement to make
52:22 - sure that you have got you have got a
52:23 - humanoid root part and so that it won't
52:25 - error if it isn't there maybe you've
52:28 - died or something or you've left the
52:30 - game
52:30 - so if car find first child humanoid
52:37 - roots parts then tab that and end and so
52:43 - that will only run if you have got a
52:45 - humanoid root part so just a little bit
52:46 - extra security there to stop it from
52:49 - erroring and if you want you can prints
52:51 - tools drops just so that you know it
52:54 - happened so we've just managed to drop
52:56 - the tools when a player dies and also we
52:58 - are deleting the contestant value from
53:01 - their player so that we can detect
53:02 - in the round module that's a player has
53:05 - died now of course you may be the piggy
53:09 - so let's go into this if statement here
53:11 - and do an else if player cut off fine
53:14 - first child piggy and so if you do have
53:19 - that piggy tag inside of you then we can
53:22 - delete it if you have died colon
53:27 - destroyed like that so that we know
53:29 - let's add an end on here so we know that
53:32 - if you're the piggy
53:33 - then we can delete that that tag so that
53:35 - then in the round module we can detect
53:37 - that the piggy has either left the game
53:39 - or died okay if they have left the game
53:43 - then it will automatically delete
53:44 - because their character will get
53:45 - destroyed but sorry that player object
53:47 - will get destroyed it but if they die
53:49 - you know maybe they reset then we're
53:52 - gonna delete that piggy value and now
53:54 - our round module should work perfectly
53:58 - so if we go and test it out and we make
54:01 - an eventualities happen so we could let
54:03 - the clock run down we could kill the
54:06 - piggy or we could kill all the
54:07 - contestants then it's going to end the
54:09 - game so what we should be seeing here is
54:14 - that the round should start as normal
54:16 - and then the piggy will get released but
54:18 - what we'll do is we'll just test
54:19 - everything so firstly I'm gonna kill
54:21 - mice the contestant so let's just reset
54:25 - and see if it's yeah there we go it says
54:27 - the piggy has killed everyone
54:29 - so it's ended the round it stopped
54:31 - counting down and obviously we haven't
54:34 - worked on the cleaning up off the round
54:38 - next thing that I'm going to try is I'm
54:40 - going to kill the piggy and see if it
54:42 - says that the piggy has died and that
54:44 - the contestants will win so here we go
54:46 - on the piggy on the left so we're gonna
54:48 - reset and it says piggy has died
54:51 - contestants win so it's obviously
54:52 - breaking out of the for loop setting the
54:54 - outcome variable and then we are finding
54:56 - out what the outcome is and setting
54:57 - least a his bar accordingly and the
55:00 - final thing to test is the clock running
55:02 - down so to test this I'm gonna go back
55:04 - into the round module I'm going to
55:05 - change the weight one to a much smaller
55:07 - number so that we can see it count down
55:09 - really really quickly
55:12 - okay so we've got the round starting
55:15 - it's gonna count down really really
55:16 - quickly and whoops wait for that okay
55:21 - we're getting really close to the end
55:22 - final minutes and hopefully it should
55:25 - just say time up and end the round there
55:26 - brilliant so we've just tested it and we
55:29 - can see that everything's working
55:31 - perfectly if it isn't working for you
55:33 - then you've probably made a mistake when
55:35 - you've typed out your code so make sure
55:36 - that you're checking the output window
55:38 - for any bugs obviously we do have quite
55:40 - a lot of books still right now because
55:42 - we haven't set up a lot of things but
55:45 - you've probably made a typo in one of
55:46 - your scripts so make sure that you've
55:47 - got the capitalisation correct and
55:49 - you've copied down everything correctly
55:50 - and you've put everything from the
55:52 - piggie kit in the right place as well so
55:54 - we'll leave it there for part three well
55:57 - done for getting so far and I do
55:59 - recommend that you go straight to the
56:01 - next episode episode 4 which if is
56:04 - released should be on your screen now
56:06 - the thumbnail so go ahead and click that
56:08 - and I'll see you in the next part in
56:11 - episode 4