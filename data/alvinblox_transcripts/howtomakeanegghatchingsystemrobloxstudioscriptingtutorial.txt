00:00 - hey everyone Alvin blocks here in this
00:02 - roblox scripting tutorial I'm going to
00:05 - show you how to create your own awesome
00:07 - egg hatching system where you click on
00:10 - the dispenser it will take your money
00:11 - away and then the egg will expand and
00:14 - hatch to reveal the pet which you
00:16 - selected and in future videos I'll be
00:18 - showing you how to save your pets and
00:20 - create an inventory so you'll be able to
00:22 - equip different ones and also the pet
00:25 - will follow you around so keep watching
00:28 - don't forget if you want to support my
00:30 - channel at no extra cost
00:32 - you can use the star code Alvin blocks
00:34 - when buying Roy books or roblox premium
00:36 - thank you so firstly I need to show you
00:38 - how to create pets and I found a really
00:42 - good kit which are full of under 100 and
00:45 - quality simulator quality pets if you go
00:49 - to the link which I've put in the
00:50 - description here you'll be able to go
00:52 - and take this pack and you'll be able to
00:55 - insert it into your game through the
00:57 - toolbox so I'm gonna go click on the
00:58 - four squares click on my models and
01:01 - click on pet pack shoutout to lure very
01:04 - good and goof a one two three four
01:07 - publishing these models for free and
01:08 - allowing us to use them what you'll need
01:10 - to do is pick a couple of these pets to
01:13 - use so I'm gonna go into the pet pack
01:15 - and I'm just going to pick a few out
01:16 - okay right click and copy them all I'm
01:19 - gonna delete the pet pack I'm gonna
01:21 - paste them into the game now you can
01:23 - create your own pets if you want it's
01:25 - quite simple all you need to do is get a
01:28 - few parts together make it look like a
01:30 - pet for example if I just make a really
01:32 - quick basic one here I imagine this is
01:35 - like a bee or something what you need to
01:36 - do is just group them all together and
01:41 - then you'd need to articulate a name and
01:44 - you need to instant use one of the parts
01:46 - to be like the main part and I'm going
01:49 - to insert a weld constraint not a weld a
01:54 - weld constraint into it and the each of
01:57 - the part well firstly you need to set
01:59 - part 0 to be the part that the world is
02:02 - inside of and part 1 can be any of the
02:04 - other parts but you need to have a world
02:07 - constraint between the main part and
02:09 - every other part so make sure that
02:12 - you've set up a world constraint
02:13 - all of the parts in which are linked to
02:16 - all of the parts so if you've done that
02:18 - correctly when you select them all and
02:21 - hold down alt you should see this green
02:25 - line and that's showing that this middle
02:27 - part here has a weld that's welded to
02:29 - this part and this part so that when
02:32 - they're moving they won't fall apart so
02:34 - when is forced to the ground the parts
02:36 - aren't gonna uncle they're not going to
02:38 - separate because they're welded together
02:39 - now so when you've done that you need to
02:42 - insert a hitbox so a hitbox is a part
02:45 - which will cover the entire space of the
02:48 - pet so you can see when I click on one
02:50 - of these models you can see there's a
02:52 - blue outline the hitbox is going to
02:54 - cover that entire space and the reason
02:57 - we need a hitbox is because when we code
03:00 - the pets well we need to tell it with
03:04 - the pet needs to know the direction to
03:06 - face when it's moving and what it will
03:09 - do is it will take the front surface of
03:11 - the hitbox now if you insert a part and
03:13 - you go to the surface properties and
03:15 - click on front surface you'll see that
03:17 - it's this surface here the yellow
03:19 - outlined surface so we're going to put a
03:24 - hitbox into the pets we're going to make
03:26 - the front surface be facing the pets
03:29 - face so it's looking this way and that
03:31 - way the the pet will be facing forwards
03:35 - in the same direction as our character
03:37 - so what you need to do for each pet is
03:40 - insert a part name it hitbox and make
03:46 - sure that it is not anchored and that
03:48 - can collide is unselected so ungood and
03:51 - can collide of both false and then move
03:55 - the part so that it's in the pet and
03:57 - route and scale it down so it's only
03:59 - covering the pet so it's covering the
04:01 - whole of the pet like this okay when
04:07 - you've done that it doesn't have to be
04:08 - exact just make sure you're covering the
04:09 - pet so you can't see it so the block is
04:12 - covering it and when you've done that
04:14 - set the transparency to one and then
04:16 - drag this hitbox into the pets model so
04:20 - this is the the this is the bear so I'm
04:23 - going to drag the hitbox into the bear
04:26 - then you need to change its primary
04:28 - parts to the hitbox okay
04:31 - and in this pet kit most of the pets
04:34 - already have weld constraints in them
04:37 - okay
04:38 - this specific one seems to have normal
04:41 - welds so what I will do is I will just
04:44 - convert them all to weld constraints
04:46 - okay so I'm going to get rid of them I'm
04:48 - going to get rid of the previous welds
04:50 - we're inside the hitbox I'm going to add
04:52 - those world constraints part 0 will be
04:54 - the hitbox and then I'm just going to
04:56 - set part 1 to all of the other parts and
05:00 - I'm going to keep duplicating them weld
05:01 - constraint until all of the other parts
05:03 - have been welded to the hitbox so that's
05:06 - going to be for world constraints to
05:08 - weld the other four parts to the hitbox
05:11 - and now this this pet here the bear is
05:16 - ready to go so you need to do that for
05:18 - all of the other pets that you want in
05:19 - your game okay and I'm gonna skip now to
05:22 - the next part of the video remember it's
05:24 - really important that when you're doing
05:25 - this the hitbox part you need to make
05:28 - sure that it's front surface is facing
05:30 - the same way as the pets face right
05:32 - otherwise it won't be looking in that
05:36 - direction it might be backwards or
05:38 - looking a different way so you need to
05:40 - make sure the hitbox front surface is
05:42 - looking the same way as its face okay
05:44 - now I'm using some pets that I created
05:47 - earlier instead cuz I already added the
05:49 - hitbox to them next what you need to do
05:51 - is we're going to insert a script into
05:53 - service script service and we're just
05:55 - going to quickly make a leader stats
05:56 - folder and a cache value so that we can
05:59 - get a leader board and some cash to use
06:01 - later on when we buy the pets okay so
06:05 - this is a very simple script all we've
06:07 - got to do is have a player added event
06:09 - which is going to fire when a new player
06:11 - joins the game we've got the argument
06:13 - and that is the player roblox has given
06:15 - us the player that will join the game so
06:17 - whatever we do to this player will be
06:19 - done to whoever joins the game so we're
06:21 - inserting a folder into the player we're
06:24 - calling it leader stats it has to be
06:25 - called leader stats if you want it to
06:26 - show up on the leader board and then
06:28 - inside of that folder we're inserting a
06:30 - int value because it takes a number an
06:32 - integer and we're calling it cash we're
06:34 - giving a value of 10,000 to begin with
06:36 - so that should cover enough cash for us
06:39 - to buy the pets
06:39 - and we're putting it inside of that
06:41 - leader sacks folder so if you now play
06:42 - the game you will see that we have the
06:46 - leader board showing up here and now we
06:48 - also have the leaders house fold it in
06:49 - our player and the cap so we are able to
06:51 - edit our cache and that will take effect
06:54 - on the leader board but just remember
06:56 - guys when you're changing the amount of
06:57 - cash you have you have to change it on
06:59 - the server so go to server mode and
07:00 - change it there because your changes
07:03 - will only take effect if you edit it on
07:04 - the server ok so now I'm gonna put all
07:07 - of these pets into a folder in the
07:09 - replicated storage so click on the +
07:11 - click on folder and I'm going to set
07:13 - this folders name to pets then I'm just
07:16 - going to select all of the pets that I
07:18 - have and put them into the replicated
07:20 - storage also I forgot to mention make
07:23 - sure that the primary part of all of
07:25 - your pets is the hitbox else they will
07:27 - not work this is because we need to
07:29 - position the model and you can only
07:30 - position a model if you set its primary
07:32 - part next we need to set up a module
07:35 - scripts now this is where we're going to
07:36 - keep all the information about the
07:38 - different pets
07:39 - Rarity's so whether a pet is legendary
07:41 - rare common uncommon etc so insert a
07:44 - module script into the server script
07:46 - service now what I'm going to do is I'm
07:49 - just going to rename this module
07:51 - variable to pet module just because it
07:54 - gives a little bit more description as
07:55 - to what this module is and if you're not
07:57 - too familiar with module scripts I'll
07:59 - just quickly summarize them they hold
08:01 - code and we can execute the code from
08:04 - other scripts so when we return we can
08:07 - require the module from other scripts
08:10 - and when we do that the contents of this
08:13 - pet module table will get sent to our
08:15 - script so anything we put in the pet
08:16 - module will get sent to a script we call
08:19 - it from because we're probably going to
08:20 - be calling functions to choose random
08:22 - pets from other scripts for example when
08:25 - we click on the click detector in our
08:27 - dispenser which we are yet to create so
08:29 - inside of this pet module table I want
08:32 - to insert a another table and that table
08:35 - will have a list of all of the different
08:38 - rarities and which pets are a part of
08:41 - that rarity of each rarity so what we
08:45 - can say is pet module dot pets
08:50 - equals and then a blank table like this
08:52 - and because I've said pet module at the
08:55 - start is gonna put that table called
08:57 - pets inside the pet module now I'm going
09:00 - to insert four different rarities okay
09:03 - so I'm gonna have legendary and you need
09:05 - to put them in to where brackets also in
09:08 - speech marks and each this is called an
09:12 - index so a key sorry and we after her we
09:17 - have to give a value to each key so the
09:19 - value in this case is going to be
09:20 - another table and inside of that table
09:23 - there we're going to put in all the
09:27 - object paths of the pets they're
09:29 - legendary so for now I'm just going to
09:31 - do a semicolon and you have to separate
09:34 - them with a semicolon or a comma I'm
09:36 - gonna do a semicolon and I'm going to
09:38 - just copy this and paste in for my other
09:41 - Rarity's now if you wanted to have more
09:43 - rarity than I do because I'm only gonna
09:45 - have legendary rare uncommon and common
09:50 - just feel free to add another few
09:54 - rarities you know you can have as many
09:55 - as you like
09:56 - just change the name something different
09:57 - maybe like ultra rare doesn't matter the
10:01 - order also doesn't matter you could have
10:03 - legendary at the bottom so inside of
10:05 - here inside of each table we need to
10:08 - write a path to the pets so I'm going to
10:12 - expand each table a little bit just so
10:15 - we have some more space to write our
10:17 - pets in there and so for example if I
10:20 - wanted the B to be a legendary pet I
10:22 - would put its path in this table so I
10:25 - would just say game dot replicated
10:26 - storage dots pets V okay and just put it
10:31 - in there now now our B is going to be
10:34 - recognized as a legendary pet so I'm
10:36 - gonna do this for all of the other pets
10:38 - in the folder now make sure that you
10:40 - have a semicolon at the end of each
10:42 - object path as well to separate them
10:45 - from the others I also have to mention
10:47 - if your pet name has a space in it such
10:49 - as this lava Lord then you need to do
10:51 - square brackets like this don't put a
10:53 - dot just do square brackets then do
10:55 - speech marks and put the name of your
10:57 - pet in there
10:57 - larvae Lord that way you can have a
10:59 - space and it won't cause any problems
11:02 - okay now that we've got all of our pets
11:04 - in there in their respective rarities
11:06 - then we need to now set up another table
11:09 - which tells the script how rare each
11:12 - rarity should be so what the chances of
11:14 - each rarity being picked so to do this
11:17 - we're going to use something called
11:18 - weighted selection and what that means
11:22 - is we can give a number to each rarity
11:25 - and the higher the number the more
11:27 - chance of it being selected so to do
11:29 - this we're going to create another table
11:30 - and it's going to be inside the pet
11:32 - module so pet module and we're gonna
11:35 - call it rarity so pet module dot
11:37 - rarities equals an another blank table
11:39 - now because in this table we need to
11:44 - have the same rarity names as we have
11:48 - put here so use the same names okay so
11:50 - we're just going to expand this table
11:52 - and we're going to put the rarity names
11:56 - in there so the legendary equals I'm
12:00 - gonna set them to zero for now so the
12:01 - same thing as we've done before we need
12:04 - to have the name in square brackets in
12:06 - speech marks as well and it's gonna be
12:08 - equal to a number so I'll just put it as
12:10 - zero for now with a semicolon at the end
12:12 - so just copy and paste this in four
12:17 - times i'm gonna i'm doing it four times
12:18 - because i've got 4 rarities and change
12:20 - the names to each of your rarity so
12:23 - uncommon and common okay
12:26 - the order again does not matter now what
12:29 - i'm gonna do is the rarities are going
12:31 - to be out of a hundred so that so the
12:33 - total weight sorry the total weight
12:34 - because this is random weighted this is
12:37 - weighted selection we have a total
12:40 - weight and weight is going to be
12:41 - distributed throughout these four
12:43 - rarities so we can give we've got a
12:48 - hundred total weight okay and let's give
12:52 - common and let's give it fifty white
12:56 - okay and let's give uncommon 25 weight
12:59 - so we have 25% left to distribute so if
13:03 - there's a 50% chance of getting common
13:05 - then there's gonna be a 25% of getting
13:07 - uncommon and we've got 25% weight or
13:10 - percentage leftover to use here so let's
13:14 - gear
13:16 - let's get 15% too rare okay that gives
13:20 - us 90 and will give 10% to in fact that
13:24 - will give we've 12:30
13:27 - we've will give 30 to uncomment so 30%
13:31 - chance for uncommon
13:32 - so that leaves 20 after over for these
13:34 - two so we'll give 15 for rare and five
13:38 - for legendary okay so the way I've set
13:40 - this up is because the total weight the
13:42 - total sum of these numbers here is now
13:44 - 100 this means that there's a 5% chance
13:47 - of getting a legendary 15% chance of
13:51 - rare 30% chance of uncommon and 50%
13:53 - chance of getting a common okay now what
13:57 - we can do is very soon we can choose a
14:00 - random number between 1 and 100 and then
14:03 - we can loop through all of the rarities
14:05 - and keep adding the weight on to a
14:08 - counter which starts at zero and we can
14:10 - stop when the counter is greater than
14:16 - the random number which we've selected
14:19 - and when we do that we can stop at the
14:22 - current rarity and that will give us the
14:26 - chosen rarity for our pets okay it
14:28 - sounds confusing but I will go over it
14:30 - with you very soon so now we've got the
14:32 - rarity set up let's create a function
14:34 - which is going to select a random pet
14:36 - for us so we can say Pet module because
14:39 - this function again it's going to be
14:40 - part of our pet module table that gets
14:42 - returned to a script when we require the
14:44 - module pet module dot choose random pets
14:50 - equals function it's going to be equal
14:52 - to a function and a ban ending at the
14:55 - bottom like this now what we need to do
14:57 - is we need to select that random number
14:59 - because we've got 100 total weight so we
15:02 - need to choose a number between 1 and
15:04 - that total weight of 100 so local random
15:07 - number equals math.random 1 comma 100 so
15:12 - 1 is the start number 100 is the end
15:14 - number it's gonna pick a random number
15:16 - in between 1 and 100 so what we'll do is
15:19 - we're quite a for loop to loop through
15:21 - this Rarity's table so for rarity comma
15:26 - weight in pairs
15:28 - and we're gonna loop through the pet
15:29 - module dot rarities table you do now
15:33 - because this is a dictionary the rarity
15:36 - is going to be the name here so
15:38 - legendary rare uncommon common and the
15:40 - weight is going to be the value so the
15:41 - the weight here the number of weight and
15:44 - what we're going to do is every time we
15:45 - loop through the rarity we're going to
15:47 - we're going to have a counter I'm gonna
15:49 - call this local counter equals and it's
15:52 - gonna be set to zero at the start and
15:53 - every time we loop through a rarity
15:56 - we're going to increase the counter so
15:57 - we're going to do counter equals counter
16:00 - plus weight so every time it loops
16:02 - through it's going to increase the
16:03 - counter by this weight value here and
16:05 - every time we do that we want to check
16:08 - if the random number which we've
16:10 - generated which is between 1 and 100 we
16:13 - want to check if that random number is
16:15 - going to be less than or equal to the
16:17 - counter and if it is then we're going to
16:20 - stop at that rarity and we're going to
16:23 - choose a random pet of that rarity now
16:26 - this sounds confusing but if you think
16:28 - about it it works because if we have if
16:31 - a random number gets chosen and it's
16:35 - equal to or less than 5 right so if you
16:38 - get chosen 1 2 3 4 5 then that's a 5%
16:43 - chance if any of those numbers get
16:44 - selected then that would give you a
16:46 - legendary because if we were to begin
16:51 - and go into the for loop and we add the
16:54 - first weight to the counter which is 5
16:57 - ok it just so happens that it is 5 then
16:59 - we would see that the random number
17:02 - which is either let's say it's 3 for
17:04 - example it is less than the counter of 5
17:07 - and it doesn't matter if it went through
17:08 - the common first because it would see
17:10 - that the counter would become 50 and it
17:14 - would still be less than 50 so it would
17:16 - go to the next one which would be 30 so
17:19 - you can see it would still be less and
17:21 - less and less so
17:22 - whichever number gets picked this for
17:24 - loop here will determine the rarity that
17:28 - you're on because as soon as it gets the
17:31 - the random number is lower than the
17:33 - counter then it's going to stop and use
17:35 - the current rarity that we've chosen ok
17:37 - so when it does find the rarity
17:41 - or the first rarity that is lower than
17:44 - the counter sorry where the random
17:47 - number is lower than the counter then
17:49 - what we will do is we need to get the
17:52 - rarity table out of the pets table here
17:55 - so what this is done is it's chosen a
17:58 - rarity for us legendary rare uncommon or
18:01 - common okay what we now need to do
18:03 - because we know the name of the rarity
18:04 - is stored here because it's the name of
18:07 - the sub table whatnot so table with the
18:10 - index is the index name here of the
18:12 - weight we know that this rarity name we
18:16 - can get the table out of the pets table
18:17 - okay so we can say local rarity table
18:22 - equals pet module dot pets and we can
18:26 - just get the name we can get the table
18:28 - from its name using the rarity variable
18:31 - here so now that we've got that table it
18:33 - could be this one this one this one or
18:35 - this one we know that it has got the the
18:39 - object paths inside of it so what we
18:41 - need to do now is just choose a random
18:42 - pet out of that table so local chosen
18:46 - pets equals rarity table and we can just
18:50 - get a random index out of that so math
18:52 - dot random we're choosing a random
18:54 - number between one and the total amount
18:57 - of objects in there so hashtag rarity
19:00 - table so if there are five pets in this
19:03 - table hashtag rarity table would be five
19:05 - and we pick a random number between one
19:07 - and five and it would get that index out
19:10 - of the table so it's chosen a random pet
19:12 - from our rarity table all we now need to
19:15 - do is return chosen pets and whenever we
19:19 - do call this choose random pet function
19:21 - the chosen pet will get returned it will
19:24 - be stored as the variable that caught
19:25 - the called the function as you'll see
19:27 - very soon and we'll be able to you know
19:30 - put that pet in their inventory in the
19:32 - future or you know reveal something
19:33 - because we've now got that pet so I'm
19:36 - just going to go over what we've just
19:37 - done so firstly we created a table
19:40 - called pets and inside we had sub tables
19:43 - for each rarity and inside of there
19:46 - we've put the object paths or the
19:48 - references to each pet okay then what we
19:52 - did is we created a second table called
19:55 - rare
19:55 - and we set up a weight a total weight of
19:58 - 100 so it could be a percentage because
20:01 - it's out of a hundred and we gave each
20:04 - category its own weight its own
20:07 - percentage chance okay and then we set
20:10 - up a function which would generate a
20:12 - random number between one and a hundred
20:14 - and depending on that number we would
20:17 - use this for loop to determine what
20:20 - rarity it came under so the basically
20:24 - the way to see it is if the random
20:26 - number was 98 for example what we'd do
20:30 - is would enter the for loop the counter
20:32 - would be 0 to begin with and then we'd
20:33 - add on the first weight which is the
20:35 - legendary one so the weight would be 5
20:37 - but 98 is not less than 5 so we'd have
20:40 - to go around again
20:41 - and add on the next weight which would
20:43 - be 15 taking the total counter up to 20
20:46 - so is 98 less than 20 no it's not we'll
20:49 - go around again we're going to add on
20:51 - the next weight which is 30 then we're
20:53 - going to ask ourselves again it's 98
20:55 - less than 50 and there it's not and then
20:59 - we're going to go around again add on
21:01 - the last weight and it's going to be
21:03 - common so it's going to add on 50 and
21:05 - then we'll say okay it's 98 less than
21:07 - 100 ah yes there we go so the current
21:10 - rarity that we're on is common so we're
21:12 - going to stop there and we're gonna give
21:13 - them a common pet whereas if it was a
21:15 - lower number such as 2 we would say okay
21:19 - is so we're added on the first counter
21:21 - which is 5 so the counter is now 5 is 2
21:24 - less than 5 yes it is so they obviously
21:27 - got lucky they got on number less than 5
21:29 - so we're gonna give them a legendary pet
21:31 - because straightaway the counter was 5
21:33 - but they had a number less than that if
21:36 - that makes it any clearer hopefully it
21:37 - does right now we're going to set up our
21:40 - dispenser and the click detector on
21:42 - there so we can actually buy the pet so
21:44 - you can build your own dispenser I've
21:46 - got one here which I'm just going to
21:47 - copy and paste into the game here we are
21:49 - and inside of here I've just got an egg
21:52 - mesh you can easily find those by going
21:54 - to the market place clicking on meshes
21:57 - and searching for an egg you'll be able
21:59 - to find out and I've just put it inside
22:02 - of the dispenser now inside of here what
22:05 - I have done in fact I will show you
22:07 - again I've just created a little
22:09 - you know parts which I'm going to put
22:11 - some text on inside of it I'm going to
22:13 - insert a surface GUI and I'm going to
22:17 - inside of there insert a text label then
22:20 - I'm going to just find the surface which
22:23 - is facing me so it is the top surface
22:26 - I'm going to go into this surface GUI
22:28 - and set the surface to the top
22:32 - you always might be different and I'm
22:35 - going to set the size of this text label
22:38 - to 1 comma 0 comma 1 comma 0 so it takes
22:41 - up the entire part then I'm going to set
22:43 - text scale to be true and I can change
22:45 - the font if I like and I can change the
22:48 - text to say egg and a few spaces to get
22:51 - on the next line 500 cash okay there we
22:55 - go so now I'm going to insert a click
22:58 - detector inside of here and then I'm
23:00 - going to insert a script the click
23:01 - detector allows it to get clicked
23:03 - because it's a part right then I'm just
23:06 - going to set up a very simple mouse
23:08 - click event so Swift's got parents dots
23:11 - click detector but mouse click : connect
23:15 - function and inside of here we're going
23:18 - to say player because player is the
23:20 - argument that roblox automatically
23:22 - passes to this function which will tell
23:24 - us the name of the player who clicked
23:26 - the click detector make sure you add on
23:29 - a end and closing bracket here and now
23:31 - what we need to do is just check if the
23:33 - player has enough money to buy the cash
23:35 - so we can say if player got leader stats
23:38 - cash not value if you named your
23:42 - currency something different you'd
23:43 - change cash to whatever you you've named
23:45 - it if it is greater than or equal to 500
23:48 - that's how much I want this to be to
23:51 - cost if you want it to cost something
23:52 - different change this number so if they
23:54 - have enough money then we need to deduct
23:57 - the money from their account so player
24:00 - dot leader starts cash value we're gonna
24:02 - set it to its current value take away
24:06 - 500 okay now if you wanted to you could
24:09 - set up a variable called cost and set it
24:12 - here and then if you change the 500s
24:14 - here to cost you'd only have to change
24:16 - it once so
24:19 - now what we need to do is choose the
24:21 - random pet now that they've bought it so
24:23 - we need to require our pet module so we
24:25 - can say and we'll give it a name so I'm
24:28 - going to name it pet module in the
24:30 - service script service and then I'm
24:32 - gonna say local pet module equals
24:36 - require game dot server script service
24:40 - curl on wait for child pet module okay
24:46 - make sure you add the require in there
24:48 - and you have the closing bracket on the
24:49 - end that is crucial so it downloads kind
24:52 - of downloads the functions and the
24:53 - tables which we declared in the in the
24:55 - module so we can now call up the choose
24:58 - random pet function by saying well
25:01 - firstly because we're returning from the
25:03 - function the chosen pet we need to have
25:06 - this as a variable so we can pick
25:07 - whatever is it returned up and we can
25:09 - use it again
25:10 - so local pet equals pet module dot
25:14 - choose a random pets okay like this with
25:19 - the two brackets on the end so it's
25:20 - because it's a function and we have to
25:22 - call it so what we can then do is print
25:25 - out pets dot name dot dot select it so
25:32 - it will print out the name of the
25:33 - selected pet and if it does we will know
25:34 - that it worked so let's go into the game
25:38 - and see if it works
25:41 - let's open up the output and oh we just
25:45 - still run over to the box let's click it
25:48 - oh we've got an error okay no need to
25:51 - worry let's just go into the pet module
25:53 - because it's saying service script
25:54 - service dog pet module on line 48 Oh
25:57 - whoops my bad we forgot to say pets X
26:00 - then he made a typo and I said pet
26:02 - module dot pet but we have to say pet
26:05 - module dot pets because that's the name
26:06 - of the table let's try once more I'm
26:08 - gonna go and play here soon have to walk
26:10 - over there again and at this time if we
26:13 - click on it you can see bear selected so
26:16 - it's selected a pet and it took my money
26:18 - away we do it again it's taken away
26:20 - another 500 so it's working perfectly
26:22 - brilliant ok so now I'm going to show
26:24 - you how to make a really awesome reveal
26:26 - so that when you buy the egg it will
26:28 - like as if hatch the egg okay so what
26:31 - I've done is I've built a studio now
26:33 - this is is just a room with pink walls
26:36 - and ceiling and inside of it I've called
26:40 - the model studio by the way because it's
26:43 - kind of like a movie studio or a set so
26:45 - we've got loads of pink walls in here
26:47 - we've got three invisible parts which
26:50 - have spotlights in them so sorry surface
26:52 - lights which are pointing light up in
26:55 - the top face so that it's light coming
26:58 - up and you can see the egg we've also
27:01 - got a camp part you can see there now
27:04 - that's where we're going to position the
27:05 - camera to be now you can add your own
27:07 - camp art just click on parts you know
27:10 - everyone in drag it in and call it camp
27:14 - art with a capital C in capital P and
27:16 - make sure that the front surface though
27:19 - which is this one is facing towards the
27:21 - egg because when we set the C frame of
27:23 - the camera it will be looking in the
27:24 - direction of the front surface I've also
27:26 - got a confetti parts with some particle
27:30 - emitters inside and when you enable them
27:32 - they will just spew out confetti this
27:35 - was actually a free model so just search
27:36 - for confetti and I'm sure you'll find
27:38 - one and then we've got the egg
27:41 - I've just got a mesh of the egg and
27:43 - we'll be able to skip this so that the
27:44 - egg gets bigger and then when it
27:46 - eventually reaches a certain size then
27:48 - we can make it explode and then what
27:51 - we'll do is we'll spawn in the pets
27:52 - around about here and then we'll make
27:56 - the egg go transparent so that we can
27:58 - make the the pet appear and we'll also
28:01 - have an explosion so what I'm going to
28:03 - do is I'm going to move this studio
28:05 - underneath the map so we can't really
28:07 - see it make sure you put it underneath
28:08 - the base plate because the base plate is
28:10 - quite thick you might actually get it
28:11 - stuck in the base plate so move it
28:13 - underneath the base plate what I'm going
28:15 - to do is I'm going to create a remote
28:18 - event in the replicated storage I'm
28:20 - gonna call this remote events hatch egg
28:23 - okay and what we'll do is in the in the
28:29 - script inside the egg dispenser when we
28:32 - choose our random pets I'm going to say
28:35 - game dots replicate storage
28:40 - dot hatch got hatch egg curl on fire
28:43 - client and I'm going to put the player
28:45 - inside of here what this is going to do
28:48 - is it's going to file the remote events
28:49 - for the specific player who bought the
28:53 - egg and then what we can do we can set
28:54 - up a local script in the start GUI which
28:59 - will pick up when this remote event gets
29:00 - fired and then we can do all the cool
29:02 - coding for the camera etc to reveal the
29:04 - egg so what we'll do is we firstly need
29:07 - to create a variable for the camera so
29:10 - local camera was game dot workspace dot
29:13 - camera then what we need to do is set up
29:16 - the remote event handler so game the
29:19 - replicated storage hatch egg dot on
29:22 - client event colon connects function and
29:26 - drop a line should get this end added in
29:29 - here so when we fire the remote events
29:34 - to the client we need to also send the
29:36 - pet which they've just chosen so because
29:39 - we returned the chosen pet to this
29:40 - variable I can just do comma and then
29:43 - send the pet over to the room so it can
29:46 - be picked up in the local script so we
29:48 - can have an argument for the pet so we
29:51 - now know the pet that they have bought
29:52 - so all we need to do now is for firstly
29:55 - position the camera to be in the studio
29:57 - so I want to create a second variable
29:59 - for that studio so a local studio equals
30:01 - game dot workspace studio if you're
30:04 - building your own studio then make sure
30:06 - you name it studio or something else and
30:08 - if you do name it something else change
30:09 - it here so how do we set the camera to
30:13 - be looking at the cam part well it's
30:14 - very simple firstly we need to set the
30:16 - cameras camera type to be scriptable
30:18 - that just allows us to edit the cameras
30:20 - see frame with a script so camera got
30:22 - camera type equals enum so an enum is a
30:26 - predefined list dot camera type dot
30:30 - scriptable when you've done that we can
30:33 - set the cameras C frame to be looking at
30:37 - that part we can say camera dot C frame
30:41 - equals studio.com part dot C frame
30:46 - that's why I told you to name the cam
30:47 - part cam part
30:50 - so now that we've done that we can make
30:52 - the egg get bigger
30:53 - we can do this with a four loop so for I
30:56 - equals one count up to fifty we'll do it
31:00 - 50 times and we'll increase by one each
31:02 - time and then inside of here we can just
31:06 - make the egg get bigger so we could say
31:08 - studio egg dot size equals studio egg
31:13 - size so we want to get its current size
31:14 - but then add on a vector3 value so that
31:19 - we can add on noir point one so we can
31:22 - say not point 1 not point one or point
31:23 - one and that's going to increase the
31:25 - exercise by oh not point one studs on
31:27 - each axis fifty times but each time
31:30 - we'll have a short weight of naught
31:33 - point naught one seconds so we can
31:35 - actually see it getting bigger now what
31:38 - I'll do is I'll add a weight here around
31:39 - one point five seconds just though we
31:41 - can actually see the egg before it
31:43 - starts to get bigger and any code that's
31:46 - underneath this will only run once the
31:48 - for loop is finished
31:49 - so by now the the egg will be huge and
31:53 - it will be ready to hatch so to hatch it
31:56 - we could make a massive explosion so we
31:58 - can say local explosion equals instance
32:01 - new we're going to insert an explosion
32:04 - object a roblox explosion and we can say
32:08 - explosion blast blast radius equals ten
32:14 - that's how big the explosion will be so
32:16 - ten studs explosion blast pressure we
32:19 - want the blast pressure to be zero so it
32:21 - doesn't cause any damage we just want
32:23 - the effect explosion position we need to
32:26 - position the explosion to be where the
32:28 - egg is so studio got egg dot position we
32:32 - then need to set the explosion type and
32:34 - again we don't want it to cause any
32:36 - damage or craters in the map so
32:38 - explosion dot explosion type equals enum
32:41 - again enum is a data type which allows
32:43 - us to select from a predefined list so
32:46 - explosion type dot no craters because it
32:48 - can either be craters or no craters so
32:50 - we want no craters and then explosion
32:54 - not destroy a joint radius percent again
32:57 - we want to set that to zero so it
32:59 - doesn't do any damage or destroys any
33:00 - joints or anything that are already in
33:02 - the map
33:03 - so this way the explosion won't do any
33:05 - damage we'll see the visual effect of it
33:08 - so we can then parent the explosion we
33:11 - can put it inside of the egg so
33:12 - explosion to parent equals studio egg
33:15 - and then we can set the X transparency
33:17 - to be one so studio got egg but
33:20 - transparency transparency equals one
33:23 - when it's one it's completely
33:26 - transparent you won't be able to see it
33:27 - and that way it just makes the effect
33:29 - that it blew up even though we want it
33:31 - back in a few seconds to go back to
33:33 - normal size etc so now that the egg has
33:36 - been hidden we can clone our pet into
33:38 - the studio so we can say local pet clone
33:41 - will make a variable for it for the
33:44 - cloned version
33:45 - equals pets curl on clone and what we
33:49 - want to do is we want to anchor the pet
33:51 - now I think I forgot to mention this
33:53 - earlier but if you go into your pets in
33:55 - replicated storage just make sure that
33:56 - all of them are not anchored because if
33:58 - they're anchored they won't move with
34:00 - your character but they will also fall
34:03 - if they're not being if their position
34:06 - isn't being set and we'll have a script
34:08 - that will set the position but when
34:10 - they're in the studio they'll just fall
34:11 - to the ground so we need to set all of
34:14 - the parts inside of it to be anchored so
34:17 - to do this we can have a for loop that
34:19 - will loop through all of the children of
34:21 - the pet clone so pet clone : get
34:23 - children for IV in pairs is the index
34:26 - we're going to worry about that V is
34:28 - going to be each individual part or
34:30 - object firstly we need to check that
34:32 - it's natural part so we say if he is a
34:34 - base part because it could include a
34:36 - mesh part normal part et cetera but
34:37 - these are all base parts so if it is a
34:40 - part then we'll set its anchored
34:41 - property to be true and the next thing
34:44 - we need to do is set the transparent
34:46 - sort not transparency set the confetti
34:48 - in the studio to go off so if you don't
34:51 - have any confetti in your studio don't
34:53 - worry about this but what I'm going to
34:54 - do I'm going to create a for loop that
34:56 - will loop through all of the particle
34:58 - emitters inside of the studio so if we
35:00 - look in the studio here in my confetti
35:02 - all of the children my particle emitters
35:05 - we can just check to see if that child
35:07 - really is a particle emitter and if it
35:09 - is offset it's enabled property to be
35:11 - true and when I do that when I do set
35:13 - the property to be true then it
35:16 - start spewing out confetti so if we go
35:20 - back here to the local script the next
35:22 - thing we need to do now that we've set
35:24 - the pets anchored properties to be so
35:27 - it's anchored and fully anchored and
35:29 - ready to go we can now parent it to the
35:31 - studio we are parenting at last so that
35:35 - it doesn't start falling or anything we
35:36 - need to know that is totally anchored
35:38 - before we do that and the last thing to
35:40 - do is to set its primary Part C frame so
35:43 - we can actually position the pet to be
35:45 - in the studio so pet clone curl on sets
35:48 - primary Part C frame we need to position
35:51 - this to be and around the same location
35:53 - as the egg so to do this we can create a
35:56 - new C frame C frame dot new and inside
36:00 - of here inside of these brackets let me
36:02 - just make it a little bit easier to see
36:04 - inside of the C frame got new brackets
36:06 - we want to say studio not egg drop
36:08 - position
36:09 - so we're positioning it where the egg
36:11 - was but we also needed to be looking and
36:13 - facing the cam part so the second
36:15 - argument in a C frame will tell at the
36:18 - script where it should be looking at so
36:21 - where it should be positioned and facing
36:23 - so we want it to face the studio got cam
36:26 - part but position you want it to face
36:28 - the camera so that will make it face the
36:30 - camera and be in the right location next
36:32 - I'm going to animate the camera so it
36:34 - bounces and looks directly it starts to
36:37 - zoom in at the pet so to do this we need
36:40 - to setup a tween using the tween service
36:42 - so let's go ahead and add between
36:44 - service at the top local tween surface
36:46 - equals game color on get service between
36:50 - service okay now when we've got this we
36:53 - can set up some properties for our tween
36:54 - we need to give it a tween info so local
36:57 - tween info equals it's going to be tween
37:03 - info dot new because tween info is the
37:05 - data type which contains lots of data
37:08 - about a tween so the information we have
37:11 - to give it is the time so time the
37:14 - easing style direction where it's going
37:16 - in or out the repeat counts whether it
37:18 - reverses and the lay time
37:20 - okay so the time is how long it's going
37:23 - to animate for so I'm going to say two
37:24 - seconds the style is one from a
37:27 - predefined list any of these so it could
37:29 - be linear
37:30 - if it just keeps going animating at the
37:32 - same speed but I want it to be balanced
37:34 - so it bounces into the pet the direction
37:37 - is either in or out this doesn't really
37:40 - matter it's just about the easing style
37:43 - and how it plays is indirection for me
37:45 - though I want it to be out because it's
37:47 - animating outwards the repeat count I
37:51 - don't want it to repeat once it's done
37:52 - and whether it reverses I don't want it
37:55 - to reverse that's going to be false and
37:56 - the delay time again zero no delay is
37:59 - needed because it's not going to repeat
38:00 - itself right once I've done that I'm
38:02 - gonna create the tween so local tween
38:05 - this is the animation where we tell it
38:08 - what we want to change what we want to
38:09 - animate so tween equals tween service :
38:14 - creates we want to animate the camera
38:18 - which we've set as a variable already
38:20 - and we we now need to give it the tween
38:23 - info oops
38:24 - between info variable like this so make
38:27 - sure it doesn't go blue and then the
38:29 - last thing we need to do is give it a
38:30 - table and this table will contain all of
38:32 - the properties of the camera which we're
38:34 - going to change and we're going to
38:35 - change its C frame so say C frame equals
38:39 - C frame dot new and inside of this we're
38:42 - going to set it to the we want it to be
38:44 - looking at the pet so pet clone and
38:47 - because you can't get the position of a
38:49 - model we have to get its primary part
38:50 - position which is why I said earlier
38:52 - make sure that you set the primary part
38:54 - of each pet to be the hitbox so pet
38:57 - clone dot primary part and I'm going to
39:00 - zoom out of it here pet cloned up
39:02 - primary parts dot position but because
39:05 - we need to be a few studs out so we can
39:08 - actually see it because the position is
39:09 - in the middle of the pet we need to say
39:11 - plus and then in brackets will say pet
39:15 - clone dot primary part dot C frame dot
39:20 - look vector because look vector is a
39:21 - property of the C frame let's just give
39:24 - a bit of space here look vector at times
39:28 - five so it will be the direction the
39:33 - forward direction x five studs so it's
39:35 - going to position the camera five studs
39:38 - from the pets
39:40 - okay so we can actually look at it and
39:42 - then we want it to also be positioned a
39:45 - couple of studs higher so we can
39:47 - actually get a nice view of it from the
39:49 - top down so I'm gonna add on vector 3
39:52 - new 0 comma not 0.75 comma 0 so we're
39:55 - gonna add on a roundabout not 0.75 studs
40:00 - to this so that it's just above the pet
40:03 - looking down on the pet then the second
40:07 - argument which is after the comma is
40:09 - going to be worth looking at and we want
40:10 - it to look at the pet so we want it
40:13 - wanted to look down at the pet position
40:15 - so the second argument will be pet clone
40:17 - dot primary parts but position C frames
40:21 - are definitely confusing if you're new
40:22 - to them but I am having a video put up
40:24 - on my channel this week about how to use
40:26 - them so I recommend checking out what's
40:28 - will do though is it will position the
40:30 - camera to be looking at the pets just
40:32 - from slightly higher slightly higher up
40:35 - so you can see the top of it as well so
40:36 - we'll be looking down to it so the first
40:39 - piece of data we gave to it the first
40:41 - position is telling the camera where to
40:43 - be positioned so just just five studs
40:47 - out from the pet but looking but no
40:49 - point seven five studs above it and the
40:51 - second position here is where it will be
40:53 - facing so it's going to face the pet
40:55 - okay so now that we've done that we can
40:58 - play the tween so we can say tween curl
41:01 - on play and that will animate the camera
41:03 - to be looking at it then we can wait
41:05 - some time so maybe delay five seconds
41:09 - wait five and then we can reset
41:12 - everything back to normal so we can say
41:16 - camera camera height equals enum camera
41:21 - type dot custom so it can go back to
41:23 - looking at the player we can set the
41:25 - studio egg transparency back to zero so
41:29 - it can be used for next time and we also
41:31 - want to reset the studio exercise back
41:33 - to normal because don't forget we've
41:34 - made it bigger so studio egg dot size
41:37 - equals vector three dot new and the
41:42 - original size of the egg if you look in
41:43 - the studio it is four point seven three
41:46 - two comma 6 comma four point seven three
41:48 - two so this might be different for you
41:50 - so change it if you wish
41:52 - we then need to destroy the pet clone
41:55 - because this isn't the actual pet it's
41:57 - just the pet that we are showing on your
41:59 - screen to show that which pet you got
42:00 - and then all last thing we need to
42:03 - disable the particle limiter so I'm
42:05 - going to copy this code again you don't
42:07 - need to add this if you don't have any
42:09 - confetti but basically the same thing
42:11 - I'm gonna set the enable property to be
42:13 - false okay let's go ahead and check this
42:16 - out so let's just double check we call
42:20 - the hatch egg fire clients from the
42:23 - server so that's telling our specific
42:25 - player because we we we have that we
42:28 - input the player that we're going to
42:29 - fire this for so we can pick it up on
42:31 - the local script and you know do all
42:34 - this great stuff to show the pet that
42:38 - you've got anyway let's go and test it
42:40 - out we're gonna click on play here and
42:42 - wait for it to load and then if you
42:45 - click on the egg look hopefully it works
42:48 - the egg gets bigger and there's an
42:50 - explosion and it works but the only
42:53 - thing that doesn't is the camera
42:55 - movement so let's see what happens here
42:56 - we have a slight error it says unable to
42:59 - cast a dictionary on line 56 so we'll
43:02 - check that out go to the line 56 and
43:05 - okay it's to do with our tween let's
43:10 - just check this out oh I know it's
43:12 - because we've forgotten a closing of
43:15 - brackets I believe yes we've actually
43:17 - we've put one before our second position
43:20 - when it should actually be at the end
43:22 - there so this does look a bit confusing
43:24 - I will just add some spaces to try and
43:27 - make it a little bit easier to read so
43:29 - we've got the first brackets for one for
43:32 - the tween service create which were
43:34 - ending here we've then got the swiggity
43:37 - brackets for our properties we're
43:39 - changing the C frame and then the you've
43:41 - got the other close the bracket pair for
43:44 - the C frames here which we're closing
43:45 - there so I was just a typo on my end we
43:48 - click on the play button again and let's
43:51 - see if it will work this time so the egg
43:53 - gets bigger and boom it animates the
43:57 - camera to be looking at our pet and okay
44:00 - after a couple of seconds it resets
44:02 - and this time it's the B so it should
44:04 - have reset and this time we get to be so
44:07 - excellent so that is awesome I've just
44:09 - shown you how to make an egg hatching
44:11 - system on roblox in my next video I'll
44:13 - be showing you how to add an inventory
44:14 - so you can equip and equip your pets and
44:17 - also how to save them so look out for
44:19 - that video if you new on my channel make
44:21 - sure that you're subscribed and click
44:22 - the like button so you so I know that
44:24 - you've enjoyed them and don't forget to
44:26 - also check out my twenty20 beginner
44:28 - scripting series it will work in the
44:31 - future as well so it's not just 2020 but
44:33 - it will teach you how to script on
44:34 - roblox especially if you found this
44:35 - video a little bit confusing you stick
44:37 - with it because I'm sure you'll be able
44:39 - to learn how to script anyway thanks for
44:40 - watching and I'll see you in the next
44:41 - one
44:42 - Cheers