00:00 - hey everyone Aven blocks here and just a
00:02 - short video here episode number 21 in my
00:04 - scripting series about breaking a loop
00:08 - now this is probably going to finish off
00:12 - the whole loops section of this series
00:15 - for now so here's an example that I've
00:18 - just created so we've got our while loop
00:20 - I've set the condition to be true
00:21 - because this is imagine this is our game
00:24 - loop for a running game so kind of like
00:26 - a murder game and it will only stop when
00:31 - well it won't stop with a minute so
00:34 - we've got the number of players left so
00:36 - we're just using this hashtag to give us
00:39 - the number of items in this table and
00:42 - this get children will return a table of
00:45 - all of the children in game dot players
00:49 - so we've got three to start off with so
00:52 - it will print out three every second and
00:55 - it will keep doing that for 60 seconds
00:58 - until well it will keep on going forever
01:01 - actually so we want to stop this while
01:06 - loop when either the timer so when time
01:11 - left gets to zero or when there's no
01:16 - players left so what we could do is have
01:21 - a condition like this so while time left
01:24 - is greater than zero and players left
01:32 - it's not equal to zero but what we can
01:37 - also do and this wouldn't work because
01:39 - you need to have all here because you'd
01:42 - need either the timer to be ended or for
01:47 - there to be no players left so we're
01:49 - just going to keep that there but if we
01:51 - wanted to break the while loop ourselves
01:55 - when the number of players gets to zero
01:58 - or we can just have an if statement so
02:00 - if players left equals zero then we can
02:05 - just say break and whenever the while
02:07 - loop gets to this break statement so it
02:11 - just it start
02:13 - the while loop we will then get the
02:15 - number of players left in the game
02:16 - and we will check ok are there zero
02:19 - players left because this will tell us
02:21 - the amount of players left and if
02:23 - there's no players left then we will get
02:25 - to this line which is break and when the
02:27 - script sees a break inside of a while
02:30 - loop you can only use a break inside of
02:32 - a loop so if you write break outside of
02:35 - a loop it's going to arrow the script
02:36 - but if you if you have a break inside a
02:40 - loop it will just completely stop that
02:42 - that while it won't run any of this code
02:45 - underneath it it will literally just
02:47 - stop the while loop at that line and
02:49 - carry on with the rest of the script so
02:52 - if there was code that was down here
02:55 - after line 18 what happens when we get
02:58 - to that break the script is just going
03:00 - to carry on with any code inside of
03:03 - where outside of this wire loop is just
03:05 - going to forget about the rest of the
03:07 - code inside so it's not going to if we
03:10 - do break at this point it's not going to
03:12 - print the amount of players left it's
03:14 - not going to subtract one from the timer
03:16 - variable and it's not going to wait one
03:18 - and it's not going to restart because
03:20 - we've broken out of the while loop we've
03:22 - broken out of that continuous looping
03:26 - which would have looped forever so let's
03:28 - try it out
03:29 - unless add some code underneath here as
03:32 - well to say loop finished carrying on
03:36 - with the rest of the scripts okay the
03:41 - output and run the game so we've
03:47 - currently got three players and let me
03:49 - just clear that again for you so we've
03:51 - got three players and you can see it's
03:52 - constantly printing out that because
03:54 - you've got the times five times six
03:56 - which is telling us how many times it's
03:58 - printed out but if we were to then
04:00 - remove a player from the game and this
04:02 - is simulated I've simulated having
04:05 - players in the game you can see we've
04:06 - now got two players left but it's still
04:08 - enough to keep the while loop running
04:10 - because we only want to break out of the
04:13 - while loop if it is equal to zero so if
04:16 - there's no players left so let's delete
04:17 - another player and now we have a one
04:20 - player left and what should happen is
04:23 - when I delete alg√∫n blocks the next time
04:25 - it loops around and
04:26 - gets the number of players left in the
04:28 - game and it will be equal to zero
04:29 - because there are no children there will
04:31 - be no children anymore in the players
04:33 - service then it should just break out
04:36 - the while loop so what we'll do is we'll
04:39 - try and we'll do it we'll try and clear
04:41 - the output in fact we weren't clearly
04:44 - out but we'll just delete it and let's
04:48 - just zoom out a little bit and look what
04:50 - happened so it's no longer printing out
04:52 - one but what it did was it said it got
04:56 - to this part obviously it broke out of
04:58 - the while loop so instead of just
05:00 - looping on forever
05:01 - we've skipped the rest of this code it
05:04 - didn't print out a zero it would have
05:06 - printed out a zero but it didn't because
05:08 - we broke the script before that how do
05:11 - we have put these lines of code before
05:12 - this if statement it would have printed
05:14 - out the zero players left subtracted one
05:16 - from the time left and waited one second
05:19 - but because this break came before it
05:21 - and when we call a break statement it
05:24 - won't carry on with the rest of the code
05:25 - in the wire loop it will just stop where
05:27 - it is and move on to any code underneath
05:30 - this while loop so that's what it did it
05:32 - printed out the next statement after
05:35 - this world loop which was to print out
05:36 - that the loop had finished and that is
05:38 - carrying on with the rest of the script
05:40 - so there we go
05:41 - so while loop for loop in pairs loop you
05:45 - can all use break in there and it's very
05:48 - useful actually you will come across
05:50 - times where you just need to stop a
05:52 - while loop from running forever another
05:54 - good example here is if you have some
05:57 - code and you you don't want to run this
06:02 - code until you've got enough players in
06:05 - your game where you could do something
06:06 - like this and you could say let's just
06:09 - change this variable name so we could
06:11 - say if num players is greater than or
06:17 - equal to two then let's break out of
06:21 - this while loop and actually start the
06:23 - game so let's imagine you had an
06:24 - intermission down here and you could say
06:27 - game starting right so and this could go
06:32 - in its own wire loop as well because we
06:34 - want this to this game loop to keep on
06:37 - running we want to just just run over
06:38 - and over again
06:40 - but we only want to start the game I'm
06:46 - actually gonna put that wire loop inside
06:47 - of this one and you'll see why because
06:52 - now this is getting a bit confusing but
06:54 - it's teaching you as well that you can
06:55 - have nested while loops so you could
06:57 - have one wire loop inside of another and
06:59 - what's going to happen when you have a
07:01 - nested while loop is well firstly we're
07:04 - going to start the script we're going to
07:06 - enter the first while loop and then what
07:09 - will happen is this code down here will
07:13 - only run until we've broken out of this
07:16 - while loop because we've entered this
07:18 - while loop then we're entering another
07:19 - one so it's going to count the number of
07:22 - players it's going to check if it's
07:24 - greater than or equal to two
07:25 - if it is it's gonna break out of this
07:27 - while loop so it so when we use a break
07:29 - and we have nested while while loops or
07:31 - a nested for-loops it's only gonna break
07:33 - the basically the one while loop the
07:38 - nearest what the while loop that it's
07:40 - inside of so when we call break here
07:43 - it's only gonna break out of this while
07:44 - loop we'd have to call another break
07:46 - statement after this one to break out of
07:48 - this first one loop but yes it will
07:52 - learn it will keep we will just keep
07:54 - looping through this while loop until
07:57 - this first one is broken and when it is
07:59 - broken we can carry on with the rest of
08:00 - this code but if this was our main game
08:04 - script every time a new round finished
08:08 - we'd want to enter this while loop and
08:11 - not carry on until we are sure that
08:14 - there are enough players in the game so
08:16 - if there are greater than two players
08:18 - look what to two or more players then
08:20 - the game will start and this is just
08:23 - some dummy code which which you know it
08:26 - would be your actual game code but we're
08:28 - not making up an actual game script
08:29 - today but let's add a weight in here so
08:32 - it doesn't crash
08:33 - you still need a weight inside of your
08:36 - nested while loop and you can see it's
08:39 - saying game starting because we've got
08:42 - three players already in the game but if
08:44 - I was to actually only have one player
08:46 - to start with here and we run it again
08:52 - it's going to say ooh doesn't seem to
08:56 - have done anything I don't think that's
08:58 - big yeah we haven't printed anything but
08:59 - what's actually happening is let's add
09:02 - an else here and say not enough players
09:06 - now you can see what's actually
09:08 - happening it's it's it's entered the
09:11 - first while loop we're now in the second
09:12 - while loop and we are staying in this
09:15 - while root for now because we're
09:16 - constantly checking the number of
09:18 - players in the game but there's only one
09:19 - so that's not greater than or equal to
09:22 - two so it's not going to break the while
09:23 - loop it's just going to print there's
09:24 - not enough players and it's going to
09:26 - keep going round and round again but if
09:28 - we insert another player we now have two
09:30 - so you can see it's now broken out of
09:34 - this while loop and we've managed to get
09:36 - down here where it said intermission
09:37 - game starting we've waited one second
09:40 - and then we've gone back up to the top
09:42 - of the first while loop because we're
09:43 - still looping through that one then what
09:46 - we're entering the nested while loop
09:48 - again because every time this first loop
09:51 - runs we're gonna enter that this second
09:53 - while loop because it's the first thing
09:54 - that happens and it's just gonna check
09:56 - the number of players in the game again
09:57 - well this two players so that's enough
10:00 - to satisfy our for loop sorry our if
10:02 - statement here so it will break out of
10:04 - this while loop and then we'll just be
10:06 - able to print intermission game starting
10:08 - again so every time you see it printing
10:10 - intermission and game starting we can
10:12 - tell it has entered the second nested
10:15 - while loop we call it a nested while
10:16 - loop because it is inside of another
10:19 - while loop so it's calling us it's
10:21 - entering that second while loop but then
10:23 - immediately breaking out of it because
10:25 - our condition was met in this if
10:29 - statement so we can just break out of it
10:31 - you could also just do a while loop
10:34 - where instead of having all this break
10:35 - stuff
10:36 - you could just say while num player's is
10:40 - less than two that would work as well
10:43 - but I'm using this to demonstrate
10:44 - breaking so breaking will just stop the
10:47 - while loop that the break statement is
10:50 - called inside and it will move on to the
10:53 - next thing in your script so in this
10:54 - case because we've got two while loops
10:56 - one inside of another one it's only
10:58 - going to break out of this one that it's
11:00 - inside of and if you wanted to break out
11:03 - of this of this first while loop you'd
11:05 - have to call
11:05 - another break statement to break out
11:07 - with them both so starting to get a bit
11:10 - confusing maybe but all you need to know
11:12 - is that the break statement will stop a
11:15 - while loop at the current line that the
11:17 - break is on when it gets to it you can
11:20 - you're able to only break a while loop
11:22 - if if an if statement is is met so you
11:25 - only want to break a while loop on
11:27 - certain conditions you don't want to
11:28 - break it all the time so in this case
11:30 - when there's greater than two players or
11:34 - more in the game then that will break
11:36 - this while loop so it's something that
11:39 - you do need to know about you will use
11:40 - it especially if you're making game
11:42 - round scripts you know like care anyway
11:45 - any round game and even any round based
11:48 - game is going to use the break statement
11:50 - very very important for while loops
11:52 - because you probably don't want them to
11:54 - loop forever and ever
11:55 - so that we go and they do also apply to
11:58 - the for loops and for in pairs loops it
12:01 - will just stop the entire loop when you
12:03 - call it that rate statement so thank you
12:06 - for watching this video really do
12:07 - appreciate it make sure to share the
12:09 - video with your developer friends so
12:12 - they can get the knowledge as well that
12:13 - I've shared here don't forget to
12:15 - subscribe to my channel you can click
12:17 - the album blocks logo in the middle of
12:18 - your screen like the video as well so
12:21 - that I know you want more and I will see
12:23 - you in the next one thanks for watching
12:25 - Cheers bye