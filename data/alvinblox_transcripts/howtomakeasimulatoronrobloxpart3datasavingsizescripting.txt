00:00 - hello and welcome to part three in the
00:02 - how to make simulates game on roblox
00:04 - today we're gonna be focusing on saving
00:06 - data and making the player bigger so
00:09 - let's jump straight in with the data
00:11 - saving we're going to go into the stat
00:13 - script and I'm gonna go over this quite
00:15 - quickly I have got some other videos on
00:17 - data stores which I'll link in the
00:19 - description if you want to check those
00:20 - out so the first thing we're gonna do is
00:23 - define the datastore service okay so a
00:25 - local datastore equals a game called on
00:28 - get service and this is going to be the
00:30 - datastore service and then we're gonna
00:32 - create our datastore by saying get
00:34 - datastore and you want to give that a
00:37 - name okay so I'm gonna call it player
00:39 - save three okay completely random so
00:43 - once you've got your datastore set up
00:45 - what we can do is down here in the
00:50 - player added script we can firstly
00:53 - define our strength data and our a
00:57 - rebirth data
00:58 - okay I'm separating it with a comma
01:00 - because they are gonna mean the same
01:01 - thing now they're gonna be set to know
01:03 - at the minute because we're gonna do a P
01:05 - call function and a picot function is a
01:08 - function where if the code inside of it
01:11 - breaks then or errors it's not going to
01:14 - break the entire script it's going to be
01:15 - contained within that function okay so
01:17 - we're gonna write data from the
01:20 - datastore to these variables okay so P
01:24 - call returns whether it was a success or
01:27 - not whether the code inside it run
01:29 - without error and if there was an error
01:31 - it would return an error message okay so
01:32 - it's gonna return success and an error
01:36 - message okay there won't be an error
01:38 - message if if success is isn't true if
01:41 - success is true okay because everything
01:42 - would have gone well so that is it going
01:44 - to be equal to P call function and
01:46 - inside of here we're going to set the
01:49 - strength data and the rebirth data to
01:52 - the data from the datastore so to do
01:55 - this we're gonna say strength data
01:56 - equals a datastore data store : get a
02:01 - sync and then we're going to provide a
02:03 - key and this just uniquely identifies
02:05 - the the data in for a specific player so
02:09 - we want to get the strength data so
02:11 - we're just going to do strength and then
02:13 - a hi
02:13 - you can call it anything as long as it
02:15 - makes sense to you so strength - play
02:19 - out dot user ID okay so the unique the
02:22 - unique identifier is the player's user
02:24 - ID and then this strength string over
02:26 - here just tells us what we're saved okay
02:28 - so that's got the data for the strength
02:31 - and we can also do rebirths later and we
02:36 - can set that to datastore quorum gets a
02:38 - sync but this time instead of strength
02:40 - we're gonna say rebirths
02:42 - okay so rebirths and - and then we're
02:44 - gonna say don't play out user ID okay so
02:48 - the rebirths and the strength in the
02:50 - string tells us the data that is stored
02:52 - and then the player user ID tells us
02:54 - which player is stored for okay so now
02:57 - that we have got the data from like a
03:00 - they think we can say if success so if
03:03 - the datastore and script work to find
03:05 - that function if success then we can say
03:08 - if there is strength data so if it's not
03:11 - equal to nil which it was set to
03:13 - originally up here because there was
03:15 - nothing assigned to it so if it isn't
03:17 - then what we can do is we can say
03:20 - strength dot value which we defined up
03:23 - here the strength and number value is
03:25 - equal to strength data okay and we can
03:29 - do the same rebirths rebirths dot value
03:31 - equals rebirths data okay so that is
03:35 - getting the data now we need to work on
03:38 - saving it okay so this is very very
03:40 - simple what we're gonna do is gonna drop
03:42 - out of this player added function and
03:43 - we're gonna say game top players dot
03:47 - play out removing so this is an event
03:49 - that will fire when a player leaves the
03:51 - game curl on connect open bracket
03:53 - function and then we're going to pass
03:55 - through an argument of the player that's
03:58 - leaving okay so what we're gonna do is
04:01 - we're gonna do another peak or so local
04:03 - success comment error message a message
04:07 - equals p call function and inside of
04:11 - this p call function we're gonna just
04:13 - set a value to our datastore so
04:16 - datastore Curran set async okay and then
04:20 - we need to provide the key which we're
04:21 - going to write to and that key is going
04:23 - to be strength with a hyphen
04:25 - and then dot player thought user ID
04:28 - catenate it together as one big key and
04:31 - then we're gonna do a comma and we're
04:33 - gonna write the data which is going to
04:35 - be stored okay and this is going to be
04:37 - the path to their strength file you so
04:39 - player thought leader stats dot strength
04:41 - dot value okay because we created or up
04:44 - here and you can see it stored in the
04:45 - leaders that so we're going to this
04:47 - strength we're just getting its value
04:50 - and we're going to store it to that key
04:51 - so it's stored in the data store so now
04:53 - that we've done that we can just write
04:54 - the same line again for rebirths so data
04:57 - store color and sets a sink this time
04:59 - however the key is gonna be rebirths
05:01 - with a hyphen and then dot player dot
05:05 - user ID to make it unique for that
05:07 - player and same thing again we're gonna
05:09 - write to it the player don't need a
05:11 - stats
05:11 - dot rebirths value okay so that's just
05:14 - wrong the data in the data store to a
05:16 - players key and then up here we're
05:19 - looking up that key and we're storing
05:21 - whatever get async returns from the
05:24 - datastore in these two variables we're
05:26 - checking to see if it was a success and
05:28 - if there is some data and if there is
05:30 - then updating their strength and
05:32 - rebirths values up here to the data that
05:35 - was returned okay so that is the data
05:37 - saving we've done now we can go ahead
05:39 - and test this out so I'm gonna just go
05:41 - and publish at the game and let's go
05:44 - into into roblox now to play it so we're
05:48 - gonna just click on play and load in
05:50 - here and hopefully it should have saved
05:54 - so let's go in and see if it has and
05:57 - then once we've done this we'll move on
05:59 - quickly to making the player bigger as
06:01 - you use the tool ok so joining server
06:05 - and I've got 3,500 because that was what
06:08 - was originally stored and because I've
06:11 - been testing this out before so if I go
06:13 - ahead and get some strength
06:14 - I've got 4,500 so I'll leave the game
06:17 - and play again
06:18 - and this time we should have the same
06:20 - amount of the cache show will go ahead
06:23 - and wait for a server and if we have got
06:26 - the cache then that we great because we
06:28 - can move straight on and there we go
06:30 - we've got 4,500 strength and everything
06:33 - saved perfectly alright let's go back to
06:35 - studio then and we're gonna start
06:38 - working on
06:39 - the on making the play bigger so to do
06:42 - this it's really really simple we're
06:44 - going to do is here in the player added
06:46 - events we're just going to before the in
06:49 - fact we'll do it after the datastore so
06:53 - we're going to create an event called
06:55 - character appearance loaded and this is
06:57 - gonna run when the players character is
06:59 - fully in the game so whenever they
07:02 - respawn or when they join the game this
07:05 - is going to fire so player dot character
07:07 - appearance appearance loaded they're I'm
07:11 - gonna say : connect function character
07:15 - okay and inside of here we're going to
07:18 - make our variable for their humanoid and
07:21 - this is going to be used for setting
07:23 - their scale values for their character
07:25 - so humanoid equals character humanoid
07:29 - and then we can say humanoid call on
07:32 - wait for child body depth scale because
07:36 - there are loads of values that are
07:37 - inserted into the humanoid and it's
07:39 - basically a set of numbers and those
07:43 - values deem how big the player's
07:47 - character is okay so depth scale dock
07:49 - value and now I've just worked out a
07:51 - nice little formula to calculate the
07:54 - size based on how much strength they
07:56 - have so you can say 0.5 plus strength
08:00 - dot value over 250 I believe this is a
08:03 - decimal number which is why I'm doing
08:05 - the the division here so it's just
08:10 - taking the amount of strength they have
08:11 - so if they have say 250,000 it will
08:15 - divide it by 250 and then it will add it
08:17 - to point five because you need point
08:19 - five to begin with else you'll be really
08:21 - really small and then we're going to do
08:23 - humanoid or wait for a child waiting for
08:28 - trial and this one's going to be called
08:29 - body height scale so how tall you are
08:32 - and it's because they've all got to be
08:34 - in proportional with the other values
08:35 - then they've all got to be around the
08:38 - same else you're gonna look stretched so
08:40 - this again is going to be 0.5 plus
08:42 - strength value over 250 and let's just
08:48 - copy this line again copy it and paste
08:50 - it onto the next
08:52 - but we're gonna change it from body
08:54 - height scale to body width scale and
08:59 - that's gonna be the same and we're gonna
09:01 - do the same again this time to scale
09:04 - their head with the rest of the body so
09:05 - instead of saying body height scale
09:07 - we're gonna say head scale and give it
09:10 - the same value and lastly we're gonna
09:13 - set their walk speed so if they're
09:14 - getting bigger than they should be able
09:16 - to walk quite faster as well so humanoid
09:19 - warp speed equals 16 multiplied by
09:23 - strength strength dot value over 250 and
09:28 - you can change these values if you want
09:30 - this is just what I've come up with but
09:32 - if you find something better then feel
09:34 - free to change it however what we're
09:37 - gonna do is because this is only for the
09:39 - first time I play into the game we're
09:41 - gonna make it so that if the players
09:42 - strength changes so we can say strength
09:46 - : get property changed signal and then
09:51 - that's going to be the values if the
09:53 - value of strength changes we can connect
09:55 - it to a function and this function is
09:58 - gonna do the exact same thing okay so
10:01 - you can just take this code okay where
10:05 - it changes all of the scales and just
10:07 - paste it in here because it's only going
10:09 - to do this code once but every time that
10:12 - strength changes we need to update the
10:15 - players and scale okay so let's go and
10:19 - check this out when you go into the game
10:21 - and click on play and hopefully our
10:24 - character should size up with the tool
10:27 - so here we go and I'm quite tall all
10:31 - right it quite big because the script
10:32 - has already changed my body values but
10:36 - if we use the strength tool you can see
10:38 - that I'm growing much bigger now we do
10:41 - have a little problem here with the tool
10:42 - it doesn't seem to be increasing in size
10:46 - so I'll check that out for you and try
10:48 - and we'll try and fix that in the next
10:50 - part of the series if you want to have a
10:52 - go at fixing it yourself though you'll
10:53 - want to look into the tool mesh scale
10:56 - okay and the size of the other parts in
10:58 - the tool but it shouldn't be too bad to
10:59 - fix I'll see if I can get that fixed in
11:01 - the next part but we have added scaling
11:04 - to the character in this
11:06 - let's have a look at the play if the
11:08 - character resets does it go back to zero
11:10 - no it doesn't you keep the same size
11:13 - which is great and when you click the
11:15 - tool you gain strength as well and on
11:16 - top of that we've added data saving so
11:18 - thanks for watching this part if you
11:20 - liked it please leave a thumbs up don't
11:22 - forget to subscribe and turn on the
11:23 - notification about account already and
11:25 - if you'd like to take the source code
11:26 - you can become a channel member and on
11:29 - top of that you get a load of extra cool
11:30 - perks which you can see by clicking the
11:33 - join button have a great race today and
11:35 - I'll see you in the next video