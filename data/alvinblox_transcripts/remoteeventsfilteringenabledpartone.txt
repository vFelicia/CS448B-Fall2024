00:00 - hello this is a video on how to script
00:03 - with filtering enabled on roblox by
00:07 - using remote events and remote functions
00:09 - so what is the purpose of filtering
00:12 - enabled while filtering enabled is used
00:15 - to prevent people from hacking your game
00:17 - let me give you an example right now so
00:20 - let's imagine I'm a hacker and I'm in a
00:22 - game what what could be done by hacker
00:26 - is a hacker could run some code on their
00:29 - machine using the third-party program to
00:33 - do something malicious to the game so
00:35 - for example they could remove everything
00:38 - in the map okay if you look in the top
00:40 - right corner of the screen I've just set
00:42 - up a mock command bar to show what they
00:45 - could potentially do if it was turned
00:47 - off so I could say game don't workspace
00:50 - and I could play all children ok and
00:53 - that will wipe out the map for all
00:56 - players in the game and so someone would
00:58 - have just hacked the game and has just
01:01 - got rid of all the fun ok but what the
01:04 - fill tool enabled does is instead of
01:07 - deleting it for all players if we go
01:10 - back in again and we run the same code a
01:12 - filtering enabled is now turned on if a
01:15 - hacker decides to try and hack the game
01:18 - and deletes the base plate Oh deletes
01:21 - everything in the game in the workspace
01:23 - it will only delete for them ok if we go
01:26 - into the server alright and this will
01:28 - this is what it will look like for
01:30 - everyone else so for this player the the
01:34 - world is gone but for everyone else in
01:36 - the game and on the server everything is
01:38 - perfectly fine now this is because uhm
01:41 - filter enabled whenever a player tries
01:45 - to alter something in the game say in
01:48 - the workspace or tries to delete
01:51 - something or change something or a
01:54 - property of something the server will
01:57 - block any requests so anything that a
02:00 - player tries to do to change the game
02:02 - will be blocked by the server and only
02:04 - they will see whatever they try to
02:07 - change so in this case they try to
02:09 - delete everything and only they see that
02:12 - only they see the
02:13 - result and the game is unchanged so
02:15 - Feltham enabled it helps to protect
02:17 - everyone else in the game and it means
02:20 - that people that hack the game are only
02:24 - hacking themselves and ruining the fun
02:26 - for themselves so that is a quick
02:29 - explanation of philtrum enabled but
02:32 - filter enabled can create some problems
02:35 - okay so because filtering enabled
02:37 - basically means that a client basically
02:41 - by the way a client is a player in the
02:43 - game and the server is a massive
02:45 - computer which is owned by roblox and it
02:47 - runs all the scripts and and runs the
02:49 - game and clients connect that server
02:52 - when they join a game and children abled
02:55 - because it blocks any players from
02:59 - changing anything in the game it means
03:02 - it breaks our local scripts ok I've got
03:06 - a script here in a GUI a local script
03:09 - and when this text button is clicked it
03:13 - will lift this barrier which is in the
03:16 - workspace
03:17 - okay now this barrier all the parking
03:21 - gates is stored in the workspace which
03:24 - is on the server ok but our lift barrier
03:29 - GUI and this text button the local
03:33 - scripts which runs the code this code is
03:37 - running in the local script so it's
03:40 - running locally on my computer so it
03:42 - means that my client whenever this
03:45 - button is clicked is going to try and
03:48 - make a change on the server for all of
03:50 - the other players by trying to lift the
03:53 - gates so if we go and try this out and
03:55 - try and lift the gate and see when I
03:58 - click the lift button it says clicked so
04:02 - it's printed clicks so we know that the
04:04 - event has fired and only and the button
04:08 - script is working fine but you can see
04:11 - the barrier isn't lifting and that's
04:15 - because the server has seen that we're
04:17 - trying to raise the bar which is in the
04:19 - workspace but because filtering enabled
04:22 - is turned on and
04:24 - what it's not turned on here but I
04:26 - assure you it is forced by roblox that's
04:29 - just how roblox games work nowadays
04:31 - because filtering enabled the server has
04:34 - blocked us from making any changes to
04:37 - the to the gate or to to the rest of the
04:40 - game
04:40 - so photo enabled it creates a problem it
04:44 - stops the hackers which is good but it
04:46 - also breaks a lot of scripts and
04:49 - especially old scripts in roblox games
04:52 - and but there's a way to fix it and that
04:55 - is remote events so remote events we set
05:00 - them up beforehand before we you know we
05:02 - make our games live and we set them up
05:04 - in studio and what they do is when we
05:08 - click the button we can fire our remote
05:12 - event it's kind of like a man in the
05:14 - middle I hear like a messenger and when
05:17 - we click the button we can fire our
05:19 - remote event and the remote event is
05:21 - stored in replicated storage ok so I'm
05:24 - just gonna insert a remote event here we
05:26 - store the remote event in replicated
05:28 - storage because replicated storage it
05:31 - can be accessed it can be viewed by both
05:34 - the server and any clients ok so we can
05:39 - see the remote event on on our local GUI
05:43 - here which is on our client we can see
05:45 - it and we can fire that remote events
05:47 - but also once we fired it we can pick up
05:51 - that that remote event request on the
05:55 - server and as I said the server has
05:57 - control over everything in the game so
06:00 - the server has the power to be able to
06:03 - lift the barrier ok because as I said
06:07 - client if a client tries to change it
06:09 - they get blocked in case they're doing
06:11 - something that's malicious and we don't
06:13 - want to hack the game so only the server
06:15 - which is owned by roblox and runs all of
06:17 - our scripts which we make in roblox
06:20 - studio can can change the game world but
06:25 - if we have a remote event and we fart
06:27 - and we fire it from the client which is
06:31 - locally on our computer we can pick it
06:33 - up on the server and then whenever we
06:35 - get that request from a client we can
06:37 - run
06:37 - predefined code which we've already
06:39 - written in server scripts so in our
06:43 - server script here in cell script
06:44 - service we can set up an event listener
06:47 - which is going to basically wait until
06:50 - our remote event has been fired and once
06:53 - we have fired our remote events we will
06:56 - pick it up okay on the server script and
07:00 - then we will run code immediately after
07:03 - it's been picked up to lift the barrier
07:05 - okay so what we'll do is we'll head into
07:09 - our local script here and instead of
07:12 - trying to alter the parking gate we're
07:15 - just gonna copy this code for now so
07:17 - let's just cut it out of this script and
07:20 - instead we'll say game dot replicated
07:24 - storage where our remote event is stored
07:27 - dot remote event and now to fire this
07:32 - remote event so fire basically means
07:34 - send a signal and trigger it so that we
07:37 - can pick it up on the server side we're
07:40 - gonna say fire server so a colon and
07:43 - then fire server okay now what this is
07:47 - gonna do it's gonna fire that remote
07:49 - event off and now that we fired it we
07:52 - can set up our event listener so the
07:54 - listener you should be pretty good with
07:57 - events by now this is quite sir this is
08:00 - intermediate advanced scripting so an
08:02 - event listener will just listen out for
08:04 - until that that remote events being
08:06 - called so we can say game's replicated
08:08 - storage dot remote events dot now it's
08:13 - called dot on server events okay so
08:16 - whenever you're firing something from
08:18 - the client and you want to pick it up on
08:20 - the server you use on server event if
08:22 - it's the other way around and you're
08:24 - firing something from the server because
08:27 - you want to change something in the
08:28 - player GUI and which you can't view on
08:32 - the server then you have to use on
08:34 - client event but we're going to be
08:36 - dealing with on server event for now
08:37 - you'll say : connect function and we'll
08:42 - have our arguments here as well which
08:44 - get passed from the client to the server
08:46 - so when we fire this phone from a client
08:49 - the server will
08:51 - which player should get this remote
08:54 - event okay
08:55 - it's automatically passed as an argument
08:57 - so we have a argument of the player that
09:01 - fired okay so I always include player as
09:03 - your first argument because
09:05 - automatically sent over and if you're
09:07 - gonna have any other arguments such as I
09:09 - don't know one two three okay
09:12 - you always when you're doing your event
09:15 - listener you have to put the player
09:16 - argument first then you'll have your one
09:18 - two and three arguments which come after
09:20 - it if you need it
09:21 - so we'll just get rid of those and you
09:25 - don't need to put player in the brackets
09:27 - here for fire server but two in our
09:30 - event listener we can now just paste the
09:33 - code which will lift the barrier I'm
09:35 - going to copy this variable as well
09:37 - which we had and now when that remote
09:40 - event has been triggered we can just
09:42 - walk print as well remote event picks up
09:47 - on the server and that it will lift the
09:51 - gates like this okay
09:52 - so what we've done just to recap is we
09:55 - have we have created an event in the
09:59 - local script in this GUI because the
10:01 - local script is running on our computer
10:03 - on our clients once it's been clicks
10:05 - we're going to fire a remote event which
10:08 - will basically send a signal to the
10:10 - server and it will trigger some code
10:12 - which is already written and we've got
10:14 - our event listener here which when the
10:17 - event has been fired we pick it up and
10:19 - we will run any code inside of here okay
10:22 - and again the remote event it's in
10:25 - replicated storage because you can see
10:27 - it from the client and you can also see
10:30 - it on the server okay but if a client
10:33 - tries to change anything replicate a
10:34 - storage again like the workspace the
10:37 - things that they change if they do
10:39 - something malicious it will only change
10:41 - for them and no harm will be done so
10:43 - let's go back and play the game again
10:46 - and we're gonna click lift the barrier
10:48 - and there we go you can see the blue in
10:52 - the output signifies that it was printed
10:55 - on the client that it was clicked and
10:57 - then it must have fired through a motor
10:59 - vents and then on the server we picked
11:01 - it up and it obviously ran the code to
11:04 - lift the barrier let's do that again and
11:06 - we go there it goes up it goes
11:09 - and it's gonna wait five seconds and
11:11 - it's gonna come back down again so there
11:13 - we have it a quick little demonstration
11:16 - on filter enabled and how remote events
11:19 - work in the next video I'll go over how
11:22 - remote functions worked let me know how
11:25 - you think this video went I think it
11:28 - went quite well first video in a while
11:31 - more coming soon and I definitely want
11:33 - to do some more filtering enabled video
11:35 - so make sure you drop a like and
11:36 - subscribe to the channel if you are
11:39 - excited for those I'll see you next time
11:42 - thanks for watching