00:01 - now in roblox an object can be
00:03 - a parent or a child it's either inside
00:06 - of something
00:07 - and it can also have its own children so
00:10 - if an object is a child
00:12 - of something then it means it's inside
00:14 - of something if it's a parent of
00:16 - something
00:17 - then it has something inside of it so a
00:19 - quick example
00:20 - is that this model has four children
00:23 - and they are each these parts so four
00:26 - parts inside of the model
00:28 - four children and two of these parts
00:31 - have a decal inside
00:32 - so these two parts have a child and
00:35 - those children are decals now
00:38 - what is the difference between get
00:40 - children and get descendants
00:42 - so these are both functions that you can
00:44 - call on an instance
00:45 - or an object in roblox studio and they
00:48 - will return
00:49 - a table so when you call them they will
00:51 - create a table so in this case
00:54 - i've called get children on the model
00:57 - what it will do is it will return a
00:59 - table with
01:00 - the children of the model
01:03 - and when i say children i mean things
01:05 - inside of the model
01:06 - and only at the first step so even if
01:09 - you have
01:10 - a decal inside of the parts inside of
01:12 - the model the decal
01:13 - won't count because it's not a child of
01:15 - the model it's
01:17 - actually a child of the part so we're
01:19 - only looking for the children
01:21 - of the model so the things inside of the
01:23 - model at the first step down
01:25 - when i say step down if you have a look
01:27 - here you can see if i just enlarge this
01:29 - image
01:30 - we've got an arrow next to the model
01:33 - right here
01:34 - and just imagine that we're going down a
01:36 - step to this level here
01:38 - okay we were at this level we've gone
01:40 - down a step to this level so only
01:42 - the objects within this level are going
01:44 - to be the children
01:45 - of the model okay so when we call
01:48 - get children it returns a table inside
01:51 - of that table
01:51 - will be the four children or however
01:54 - many children there are
01:55 - of the model or the or the object it
01:58 - doesn't have to be a model that you call
01:59 - get children on it could be any
02:01 - instance objects etc
02:04 - if you run this though it's going to
02:06 - this script i've got it to loop through
02:08 - the table
02:09 - and it's going to print out the name of
02:11 - every object in that table
02:14 - so we've got four parts you can see
02:17 - one two three four there are four
02:18 - children inside of that model
02:20 - now i said earlier that uh calling get
02:23 - children
02:24 - won't will only uh give the children for
02:27 - the first step down from the model
02:29 - now we've got uh a child
02:32 - in each part so a decal in two of these
02:35 - parts
02:36 - uh so the decal is a child of the parts
02:39 - and not the model because uh it's two
02:42 - steps down from the model isn't it one
02:43 - step
02:44 - two steps so the parent of these decals
02:47 - going to be the parts so if you wanted
02:50 - to include
02:51 - every single item inside of the model
02:53 - regardless of what it's parented to as
02:55 - long as
02:56 - it is still inside the model because if
02:58 - you look at these decals
02:59 - they are still a part of the model if
03:02 - you collapse the model
03:03 - you can see they they disappear because
03:04 - they're hidden within the model it's
03:06 - just that because
03:07 - they are children of an object that is a
03:11 - child of the model
03:12 - they aren't included when you call get
03:14 - children on the model
03:15 - so how can you include every single
03:17 - object that is inside this model
03:19 - regardless of what their parent is
03:21 - because you know
03:22 - because this decals parent is apart
03:26 - doesn't mean it's still not part of this
03:29 - model so that's where get descendants
03:31 - comes in if you change this to
03:33 - get descendants like this it's going to
03:36 - return a table
03:37 - again however this time it includes the
03:41 - uh the decal the decals i should say
03:44 - because you look here uh we've got
03:48 - uh two parts if i just enlarge the
03:51 - output here we've got
03:52 - two parts yeah and one of the children
03:55 - of that part is a decal
03:57 - and we've got another part and another
03:59 - part and we've got a decal inside of
04:01 - that part
04:02 - so it just prints out every single item
04:05 - inside of the model
04:06 - you know you could have a decal inside
04:08 - of a decal it will still count
04:10 - as long as it's inside the model that is
04:12 - a descendant
04:13 - because it's it descends from the model
04:16 - it comes from the model
04:18 - uh and if you hide the model you can't
04:20 - see it anymore if you move the model
04:21 - then obviously it's going to move with
04:23 - it etc it's a part of the model so it's
04:25 - a descendant regardless of what its
04:27 - first parent is going to be it is a
04:30 - descendant whereas a child
04:31 - is something that's inside of the model
04:33 - at the first step
04:35 - so these are the four children yes these
04:37 - two parts have their own children
04:39 - but those children are still descendants
04:41 - of the model but they're not included
04:43 - when you call get children whereas if
04:45 - you call get descendants
04:46 - it's going to print out every single
04:49 - instance that is a part of that model
04:52 - regardless of the level
04:53 - of a step when you go down through the
04:56 - explore arrows so thanks for watching i
04:58 - hope that was useful if it was
05:00 - uh drop a like on the video and share it
05:02 - with anyone who
05:03 - you think would benefit from this
05:04 - knowledge so thanks for watching and
05:06 - i'll see you next time