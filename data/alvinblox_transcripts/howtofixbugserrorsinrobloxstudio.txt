00:00 - you're probably watching this video
00:01 - because I've replied to one of your
00:03 - comments on my videos with it or because
00:05 - you want to learn how to fix your books
00:07 - faster
00:07 - now unfortunately bugs are just
00:10 - something that you will come across
00:11 - sooner or later in roblox to do and it's
00:13 - not something that you'll be able to
00:14 - avoid learning to script is one thing
00:17 - but learning how to fix bugs is another
00:19 - and that's the most important part in my
00:22 - opinion a lot of people will come across
00:24 - a bug after watching one of my videos or
00:26 - when they're writing their own code and
00:28 - I think to themselves that they aren't
00:30 - capable of fixing it and that the whole
00:33 - code is broken and there's no chance of
00:35 - being able to fix it and they will give
00:37 - up straightaway now I am a human not a
00:40 - machine and outside of my roblox videos
00:42 - I have other things to do in my life
00:44 - such as making my own games and
00:46 - currently I've got one hundred and
00:48 - eighty six thousand subscribers so on
00:50 - average I get seven hundred and
00:52 - forty-three comments per day that's from
00:54 - my YouTube analytics so 743 questions in
00:59 - come in comments every single day so
01:02 - assuming that at least 40% of them are
01:05 - comments asking for help and not people
01:07 - saying you know thank you or whatever
01:09 - because trust me it's a bigger number
01:12 - than 40% the actual help questions but
01:14 - assuming that 40% are comments of people
01:17 - asking for help
01:18 - that's 296 comments and problems which I
01:22 - would have to look into every single day
01:24 - and so if we assume that each problem
01:26 - would take me at least five minutes to
01:28 - solve and it usually takes a lot longer
01:30 - to solve them as one thousand four
01:32 - hundred and eighty minutes of my time
01:33 - which is twenty four point six hours and
01:38 - guess what that's longer than a day and
01:39 - I'm asleep for at least half of that so
01:42 - it's mathematically impossible for me to
01:44 - answer everyone's comments and that's
01:46 - forgetting everything else I do in my
01:47 - day so you can't rely on me to fix your
01:49 - problems and my channel is only gonna
01:51 - grow larger so that's more comments and
01:53 - problems I'm just not able to look into
01:56 - I'm really sad when I see people give up
01:58 - straight away because I think of the
02:00 - opportunity that they've just wasted it
02:02 - could have been a book that was easily
02:03 - fixable but they just didn't notice
02:05 - because they didn't have the time or
02:06 - didn't take the time to debug it and if
02:09 - they had they might have stuck with
02:10 - roblox scripting and they could have
02:12 - become a successful develop
02:13 - think about it imagine all of the books
02:16 - that I and all of the other roblox
02:18 - developers out there whose games you
02:19 - play have had to solve we're here today
02:21 - and you're playing our games because
02:23 - we've not given up because we know that
02:25 - every bug is solvable if we put our
02:27 - minds to it that's my motto there's no
02:30 - such thing as an unsearched thing as an
02:32 - unsolvable book because if we can't
02:34 - solve it then we can enlist the help of
02:36 - others and if they can't solve it well
02:39 - then we'll just rewrite the code in a
02:40 - better way I want you to be that person
02:43 - who doesn't give up at the first hurdle
02:44 - because there are going to be some
02:46 - people watching this video who don't
02:48 - take my advice you don't decide to learn
02:52 - how to fix their booth they don't put
02:53 - the time in and they won't be the ones
02:55 - that become a successful roblox
02:56 - developer and I want you to become a
02:58 - successful roblox develop there are
02:59 - gonna be winners and there are gonna be
03:00 - losers and the losers are the ones who
03:02 - thinks themselves that the bugs are
03:03 - bigger than them and they're gonna let
03:05 - them get the better of them but the
03:06 - winners are the ones who are going to
03:08 - learn to debug learn to solve their
03:10 - problems and this is what makes them
03:11 - successful because they know that no bug
03:13 - will be able to stop them on their path
03:15 - to becoming a successful roblox
03:16 - developer and yes of course the bugging
03:19 - can be a real pain but it is part and
03:21 - parcel of being a script er it's just
03:23 - something that you have to accept and
03:25 - get on with so what's the best way to
03:27 - fix your code easily and quickly well
03:30 - the first thing to do when you realize
03:31 - that your script isn't working properly
03:33 - is to check the output window when your
03:36 - script doesn't works intended it might
03:37 - have printed out an error message
03:38 - automatically to your output window
03:41 - these messages tell you where the script
03:43 - stopped working and why sometimes these
03:46 - messages can be a little bit vague but
03:47 - they can give you a lot of cute clues as
03:49 - to what is working such as telling you
03:51 - these specific script and line number
03:53 - where the error occurred so read this
03:56 - error message carefully then go to your
03:58 - scripts to your scripts and look up the
04:00 - line the error message told you about if
04:03 - you have a function and sometimes
04:05 - multiple code lines will be printed in
04:07 - your error because it's telling us where
04:08 - the function we're in the function and
04:10 - the script broke but also the line where
04:13 - that function was called from originally
04:14 - if you still don't understand the error
04:16 - try googling it there are going to be
04:18 - lots of others who have had the same
04:20 - error message as you pop up but of
04:22 - course they weren't have had the same
04:23 - code as you so it might be a little bit
04:24 - different
04:25 - usually that should find some useful in
04:27 - on how to fix it because most error
04:29 - messes are quite generalized and it's
04:32 - due to something such as a spelling
04:33 - mistake you can look you can also post
04:36 - on forums such as the roblox developer
04:38 - forum if you don't have access to that
04:40 - search on the forum for your error and
04:42 - see if anybody else has posted about it
04:44 - before it's likely that they have and
04:46 - you can also try other forums online as
04:49 - well as just searching on Google as I
04:51 - said most of the time errors happen when
04:54 - you've forgotten to write something in
04:55 - your code or if you've made a typo or a
04:57 - spelling mistake however it is possible
05:00 - that your script could break without
05:02 - printing an error message and this is
05:04 - where your debugging skills really come
05:06 - into play your scripts could be written
05:08 - completely error-free and without any
05:09 - mistakes but it still might not work a
05:12 - real-life example of this is if you were
05:14 - coding your own physical coffee machine
05:16 - you could have scripted it to do
05:18 - everything correctly but if there's no
05:20 - coffee granules or water in the machine
05:21 - it's not going to be able to make your
05:23 - coffee you might be wondering why your
05:25 - coffee machine doesn't work and doing
05:27 - all sorts of checks in your system code
05:29 - until you realize that there's no coffee
05:31 - or water inside and you have to just
05:33 - refill it you might be looking all sorts
05:35 - of things for a while before you realize
05:37 - your silly mistake and obviously that's
05:38 - a physical analogy but you can see where
05:42 - it applies to robot scripting as well
05:44 - when you have these types of bugs in
05:45 - your code that don't show any error
05:47 - messages is useful to write print
05:48 - statements on different lines to see how
05:51 - code how far your code is getting before
05:53 - it doesn't do what's intended sometimes
05:56 - you might think it's a book but it's
05:58 - because one of your if statements isn't
06:00 - executing the code because your
06:01 - condition that you've put inside of it
06:03 - might be wrong or written them correctly
06:05 - so for example if you're checking to see
06:08 - if a number is bigger than five but
06:12 - you've used the wrong operator so it's
06:14 - actually checking if it's less than five
06:16 - but you only realize that when you check
06:18 - over your code and see that you put the
06:19 - wrong operator in it's not an error it's
06:22 - not going to print an error message
06:23 - you're just checking for the wrong thing
06:25 - so that's why it's a good idea to use
06:27 - print statements because if you write
06:29 - prints on each line then you'll see that
06:31 - the code inside the if statement
06:32 - wouldn't print out so you know that it's
06:35 - something to do with that if statement
06:36 - condition it helps to narrow down your
06:38 - focus so you know
06:40 - where to look now breakpoints are also
06:43 - useful because they allow you to stop
06:45 - your code at a certain point before the
06:48 - next line executes and then you can also
06:50 - then choose to execute the next line and
06:53 - pause before you then execute the next
06:55 - line so you can see what's happening it
06:57 - allows you to stop your code at a
06:59 - certain point so that you can review
07:00 - what's going on you just have to keep
07:02 - looking over your code and think
07:04 - logically imagine that you're the script
07:06 - running from the top going down and go
07:08 - line by line to figure out what it's
07:10 - doing and where it might be going wrong
07:12 - I do this all the time and it's a useful
07:15 - way of working out what went wrong so
07:16 - we're going to go through some examples
07:18 - now which I've got a friend of mine to
07:20 - write some code with some bugs in so I
07:22 - don't know what the bugs are and we're
07:24 - going to go through it together and to
07:25 - fix the code so you can learn how I
07:28 - deeper okay as I said I've got my friend
07:32 - Nico 88 to write this code he hasn't
07:34 - told me what the bugs are but this code
07:37 - should add up numbers in a list so all
07:39 - of these numbers inside of this table
07:41 - they should be added up and we'll print
07:43 - out the total at the end so let's run it
07:46 - and see if it works it should print out
07:47 - the total and it prints out 55 but if we
07:54 - add up the numbers ourselves we'll add 4
07:56 - add 8 at 3 add 6 at 12 at 5 at 7 at 3 at
08:01 - 2 you'll see that it's actually 51 so
08:04 - we've gone wrong somewhere so let's try
08:07 - and work out what's happened here so
08:09 - firstly the total is 0 as we go into the
08:12 - code then we're going to jump into this
08:15 - for loop so it's going to loop through
08:17 - every number in the table so n is going
08:21 - to be the index number so 1 2 3 4 5
08:25 - because it's the first second third
08:27 - fourth fifth item in the table and BC is
08:31 - going to be its value so that one the 4
08:33 - the 8 3 6 so it's going to loop through
08:36 - the table that looks good and then it's
08:39 - going to get the value of the total and
08:41 - it's going to set its value to being the
08:45 - current total add and okay I found the
08:48 - bug already so you can see what it's
08:50 - doing is it's adding the index number so
08:53 - the first one
08:54 - first index number is gonna be one so
08:56 - it's gonna add one to the total then
08:57 - it's gonna add the second index number
08:59 - which which will be two so we don't want
09:01 - to add up to we want to add the four we
09:03 - want to add the values of the numbers in
09:05 - the table so we need to change it from n
09:09 - to C and you can see how it didn't print
09:11 - out an error message there it printed
09:13 - out at 55 because it added up all the
09:14 - table indexes so if you were to add up
09:16 - let's have a look here one add to add 3
09:20 - add 4 at 5 at 6 at 7 at 8 up 9 at 10 at
09:25 - 11
09:28 - oops sorry my dad there's only 10 items
09:30 - in there so take off 11 there we go
09:32 - you can see it's 55 so the problem was
09:36 - that it was adding up the table indexes
09:38 - so because the table index is the
09:41 - position and not the value it was adding
09:43 - those together but if we now add it up
09:45 - add up the C and we run it again it's 51
09:48 - which is the correct value so there we
09:51 - go that's the first bug fixed and you
09:53 - could see there was no error message
09:54 - there so that's the sort of error where
09:56 - you just need to go through your code
09:57 - from the top and imagine that you're the
09:59 - script working it out okay
10:00 - so what I did I visualized what the
10:02 - numbers were going to be I knew that n
10:04 - was going to be 1 on the first go-round
10:06 - but on the second go-around is the
10:08 - second index there's gonna be 2 not 4
10:10 - and that's what helps me work out the
10:12 - problem okay the next piece of code is
10:16 - going to set the base plate color to
10:19 - purple and it's going to update a color
10:21 - property so let's see if it works
10:23 - and it set it to yellow let's just have
10:28 - a look at this color though and see if
10:30 - it's the actual color that we wanted so
10:32 - I'm gonna insert a frame or D count
10:35 - matter just so I can check the color 3
10:37 - value so I wanted it to become purple
10:39 - you see but it's made it yellow instead
10:41 - so what's gone wrong here because the
10:44 - color 3 value is purple so it should be
10:48 - setting it to 98 37 209 but it's not
10:52 - working so why is this I've giving it an
10:56 - RGB value red green and blue but it's
11:00 - not made it purple it's made it yellow
11:01 - so what's gone wrong here now I don't
11:04 - know why this has happened so I'm gonna
11:06 - go and search it on the Internet
11:08 - so I'm gonna go online I'm going to say
11:10 - color three dot new giving wrong color
11:17 - here we go
11:19 - color three not working so let's check
11:20 - it out on the deaf or somebody else is
11:22 - already made a report about this okay so
11:26 - their codes a little bit different to
11:27 - mine but they're trying to set the color
11:29 - three value let's have a look okay
11:34 - color three new expects the red green
11:38 - and blue values to be numbers between
11:40 - zero and one instead of numbers being
11:43 - between zero and 255 like color dot from
11:47 - RGB ah okay so if we wanted to use color
11:50 - three new we'd have to use three numbers
11:53 - between zero and one but because we're
11:55 - using RGB values we need to say color
11:58 - dot from RGB let's try that the house so
12:00 - we're going to go in here and we'll say
12:03 - color three but we'll say dot from RGB
12:07 - okay and now let's try it boom there we
12:12 - go fix another book and you can see
12:14 - again there was no errors in the output
12:17 - and that's because it did what we told
12:20 - it to it set the color to a color three
12:23 - value it's just that we didn't supply it
12:25 - as a number from zero to one so we gave
12:28 - the color three new function the wrong
12:30 - values when we should have been using
12:32 - the color three dot from RGB function
12:34 - and you can see how I went online and
12:36 - found the answer really really quickly
12:40 - if the first answer didn't work then I
12:43 - would have gone to the next one you can
12:45 - see we've got loads of different links
12:47 - here on Google I would try each one
12:49 - until there there comes an a right
12:53 - answer and if there wasn't a right
12:54 - answer then I would post myself on one
12:57 - of these forums
13:00 - okay and the last one we are creating a
13:03 - int value we're putting it in the
13:06 - workspace naming it cash and we're
13:07 - setting its value to 500 so if we load
13:11 - up a game it should be added yep there
13:13 - we go oh hold on there's an error cash
13:16 - is not a valid member of workspace and
13:18 - it's on okay so it's told us the error
13:21 - and it says cash is not a valid member
13:24 - of workspace that is saying that the if
13:27 - it thinks there's no value called cash
13:31 - in the workspace even though there is so
13:33 - this error is a bit vague bit confusing
13:36 - we don't know what it means and
13:37 - sometimes it can give you an error
13:39 - message that doesn't really help to fix
13:41 - your problem and it's told us the time
13:43 - in which it happened it even goes down
13:45 - to fractional seconds and it says script
13:48 - and it tells us the script it's the one
13:51 - in server script service called scripts
13:53 - and it's on line eight so let's just
13:55 - click it to go to the line so it's
13:57 - happening on this line so we're doing
13:58 - something wrong here
14:00 - okay cool I see the problem so very very
14:03 - simple what we've done is we haven't
14:05 - specified the value property because we
14:07 - want to set the cashes value property if
14:10 - I'll just insert an in value in value
14:13 - has a property called value and that
14:15 - stores the the number but instead of
14:17 - saying cash value we've just had the the
14:20 - object itself we haven't told the
14:22 - property so it's trying to change the
14:26 - cash object to be a number and we can't
14:29 - do that so we need to say cash value and
14:33 - you can see that's the the error didn't
14:37 - tell us that that it was the didn't see
14:42 - it didn't say you forgot to say that
14:44 - value on the end it said a different
14:46 - error message which was a bit vague and
14:48 - so this is why sometimes your error
14:51 - messages won't make sense because the
14:52 - scripts it can't work out what's wrong
14:55 - with your code it's not that smart so it
14:57 - just tells you where it went wrong and
14:59 - when you see an error message if it
15:01 - doesn't make sense and it's likely that
15:02 - you've done something wrong on that on
15:04 - that line anyway and it's something that
15:06 - you need to look into so that's what I
15:08 - said said when the error message can be
15:09 - vague so now that we fixed this bug
15:11 - let's try again
15:13 - oh hold on we got another one value is
15:15 - not a valid member of in value okay so
15:18 - okay I've seen what I've done I forgot
15:21 - to put a capital letter for value so
15:23 - again really important that you get the
15:24 - spelling and the capital at
15:25 - capitalization correct so when you're
15:28 - saying a property name such as value you
15:30 - need a capital V and again it didn't say
15:34 - that you forgot a capital V it just said
15:36 - that value is not a valid member of int
15:39 - value which means that there's no such
15:40 - property called value with a lowercase
15:42 - so I knew straight away I'd forgotten
15:45 - the V or value and that's just the sort
15:47 - of thing that will come with experience
15:48 - it might take somebody 10 minutes to
15:51 - work that one out but for me it only
15:52 - took me 20 seconds that's because I've
15:54 - been doing a lot of debugging I've been
15:56 - doing scripting for a while so the more
15:57 - you do it the better you'll become at it
15:58 - and it's also a great way of solving
16:00 - helping to improve your problem-solving
16:03 - skills so let's try it once more and now
16:06 - you can see we've got a lot of delete my
16:09 - old value but I was using as an example
16:10 - we'll run the game and you can see the
16:13 - cash now has a value set at 500 so there
16:17 - we go
16:18 - so now you can see some of the steps
16:20 - that I've taken when debugging my code
16:23 - and as I said at the start you're going
16:24 - to be debugging a lot when doing
16:26 - scripting because no programmer will go
16:28 - through their career without having
16:29 - books it's how you decide to tackle
16:31 - these problems that will help you become
16:33 - a better programmer every developer will
16:35 - find bugs annoying and hard to fix but
16:37 - the more you fix these bugs the more
16:39 - you're building up your problem-solving
16:41 - skills and these skills are useful
16:42 - outside of coding as well so you'll be
16:45 - glad in the end that you have had these
16:46 - books to provide challenges to you I for
16:49 - one like book that might come as
16:51 - unexpected but I like them because they
16:54 - give you an extra challenge and the
16:55 - feeling when you finally fix one after a
16:57 - while is awesome and you never forget
16:58 - that feeling once you fix their book so
17:00 - it will motivate you to keep searching
17:02 - for your solution as I've said there's
17:04 - no such thing as an impossible bug
17:06 - the answer is there somewhere you've
17:08 - just got to look hard enough to locate
17:10 - it so that you can fix it and the worst
17:12 - case scenario is that after a while and
17:13 - I mean after a really good while of
17:15 - trying to fix it not just after a couple
17:17 - of minutes but after a couple of hours
17:19 - or days I've devasted your friends
17:22 - whatever
17:23 - and that's usually when you have
17:25 - advanced code and really big code bases
17:29 - bases you have to rewrite that bit of
17:31 - code it might be that you designed your
17:33 - code in a bad way so that if you rewrite
17:35 - it and take other people as the device
17:37 - then it will run better and become more
17:39 - reliable anyway I hope you found this
17:41 - video useful please give it a like if
17:43 - you enjoyed don't forget to subscribe to
17:44 - my channel for more roblox scripting
17:46 - videos and I'll see you in the next one
17:48 - Cheers and all the best in fixing your
17:50 - books