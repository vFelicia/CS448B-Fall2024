hey guys this is me padma from programming and welcome back to this series on c programming in this video we'll learn about functions to divide our program into small blocks of code we'll also learn different types of function available in c programming so let's get started in programming a function is a group of related statement that perform a specific task they help us divide a large program into smaller chunks so that it is easier to understand and modify them suppose you need to create a program that draws a circle and a rectangle of different colors based on user input instead of creating one big chunk of statement to create this program we can create three functions a function to create a circle function to create a rectangle and a function to color the seed doing this help us divide the complexity of the program and help us focus on the specific part of the program at a time now that you know why we need a function let's see how we can create a function in c programming on your screen you can see the syntax of the function here the return type indicates the data type of the value that is returned by this function function name the function name is the name of the function and this dot inside the curly braces indicates the statement inside the function now let's use this syntax and create a simple function that prints good morning here you can see the basic structure of c program now i'll start with the return type first so here i don't want to return any value from the function so i'll use void as the return type remember that if a function does not return any value use the void as a return type now i will write greet as the name of my function and don't forget to use the parentheses these are needed to denote that this is a function now inside the function i'll print good morning so good morning now let me run this code as you can see nothing happened this is because to run a function we need to call it now to call a function we use function name with the parenthesis so we use the name of the function that is grid with the parenthesis and i'll run this code now this time you see the output good morning let's see how this program works like any other c program the execution start from main and when it encounters the function call the control of the program moves to the function definition now the code inside the function is executed and good morning is printed on the screen once the execution of function is completed the program of the control moves back to the next line after the function call now to verify this we can print the statement after the function call so i'll print after function call and before i run this i'll add here backspace n now let's run this as you can see first the code inside the function is executed now the control move back to the function call so the code after the function call is executed so we get the output good morning and after function call and as discussed earlier one of the good thing about the function is code reusability now once we create a function we can reuse it any number of times all we need to do is call it whenever we need now let me show you i'll remove this print statement and i'll add grit two more times so great and i'll run this so this time you can see good morning is printed three times before we move to the next section here is a quick tip for you it is a good practice to use descriptive names for function so that anyone reading the code will know what the function is doing by just reading the function name here we are greeting good morning so we are using greet as its function name we can also use wish morning or any other descriptive function name by the way if you are watching this there is a good chance you want to improve your skills in c programming lucky for you we have a mobile app that provides a wellstructured c programming course with certification at the end and you can use the app alongside the video to practice on the builtin compiler our course is free so download now by scanning this qr code or click the link in the video description so far we have created function that just prints messes however sometimes we might want to create function that accepts some value and perform some action based on that value for example suppose we want to create a function that accept a number and computes the square of the number and print it we can do this in c programming with the help of function parameters a parameter is a value accepted by the function now let me show you how we can create function with the parameter so let me get back to my previous code i'll remove this grid function and i'll also remove this function call now i'll add another function call it calculate square so calculate square and inside parenthesis i'll add function parameter int number now inside the function i'll do int square is equals to number multiplied by number then i'll print the number and it's square like printf bracket inside quotation square of percent d is percent d that is after comma number sorry number comma square now here in the main function i'll call the function calculate square now let me run this code here we get an error this is because when we create a function with a parameter we need to pass the value while calling the function so in the function call i'll add 5 inside the parenthesis now i'll run this code again this time you'll see the output the square of 5 is 25 now let me tell you what happened here the calculate square function accepts the parameter so we call the function by passing the value 5. now the parameter number is assigned with the value 5 so when we use number inside the function we are using the value 5. a function can also accept multiple parameters let's see an example here i'll change this function name from calculate square to add numbers inside the parentheses i'll change this number to int number one and i'll add comma and i'll add int number two now i'll remove these two line inside the function and i'll add int sum is equals to number one plus number 2 and i'll add print statement after that to print the number and sum so i'll do printf bracket inside quotation sum of person d and percent d is person d that is number one comma number 2 comma sum now i'll remove this earlier function called calculate square and i'll add add numbers the value 8 and 9 as its arguments so i'll run this as you can see we get the sum of 8 and 9 that is 17 as output here the value 8 and 9 are assigned to the parameter number 1 and number 2 respectively in programming values passed during the function call are also called function arguments 8 and 9 in this case are the function arguments many people use parameters and arguments interchangeably so don't worry about that however one thing you should remember is that the data type of parameter and argument should be the same in our case we have created intype parameters so we pass into the values 8 and 9 during the function call if we want our function to accept double or care type parameters we should call the function with double or care values respectively go ahead and write a function that accept double parameters and add them till now we have been using void as the return type of our function this is because our functions are not returning any value in c programming we can also create a function that returns a value suppose in our earlier program instead of printing the sum inside the function we want to return it let's see how we can do that here is the code from our earlier program first i'll remove this void and i'll add int i'm using int because i want to return the sum of two numbers and the data type of sum is in now i'll remove this print statement and i'll add return sum here the return statement that is used to return any value from the function since the function is returning some value this return value need to be stored somewhere so during the function call i'll assign the function call to an end variable say result so int result is equals to this function then i'll print the result using print statement so print f printf result is equals to percent d comma result now let me run this code as you can see we get the result 17 which is 8 plus 9 here the function add numbers add 2 number that is 8 and 9 and it returns the sum the return value now replaces this function call so this statement becomes end result is equals to returned value which is 17 hence we print the result and we get 17 as our output the data type of the return value and the data type of the variable where the return value is stored should be the same the return statement is the last statement of a function when a return statement is encountered the function exits we can verify this by adding print statement after the written statement so i'll add a print statement after the return statement and i'll write here after return statement so i'll run this you can see we get the same output the print statement after the return statement is not executed okay guys we need your support to keep these types of content free for all users youtube really likes engagement on the video so leave a comment below press that like button hit subscribe if you haven't already let's get the engagement score high up so that more people can discover and enjoy these courses in c programming a function prototype is a declaration of a function it provides information about the function name parameters and return types however it does not include the body let's see an example here i have the code from our earlier program if you have noticed i have put the code of add number function after the main function now let me add the function prototype for this add number function so i'll add int add numbers parenthesis int number one comma int number two as you can see the function prototype includes the function name and return type and the parameters inside the parenthesis now let me run this code as you can see the program runs without any issue in our program we are calling the function before defining the function in this type of situation the function prototype provides information about the function to the compiler now during the function call the compiler can now match the function call signature with the function prototype signature if we are defining the function before function call a function prototype is not needed that's why we haven't included any function prototype in our earlier program so far we have been creating our own function these types of function we write the function definition ourself are called user defined function and see there is another type of function called standard library function they are built in function that are already defined in the library files and we can directly use them in our program for example the printf function the printer function is a standard library function that allow us to print the output the printf function is defined inside the stdio.h header file that's why we need to include the file using include stdio.add similarly the sqrt is another standard library function that allow us to compute the square root of a number let me show you an example here you can see the basic c program first we need to include matte dot header file because sqrt is defined inside the map dot edge header file so i'll include math dot edge header file now inside main i'll use sqrt function the sqrt function returns the square root of number as a floating point value so i'll write float result is equals to sqrt and inside sqrt i'll write 25 and i'll end this with semicolon now i'll print this square root square root is percent f comma result now i'll run this code as you can see we get 5 as output which is the square root of 25 in all of our program we have used main if we look into the syntax of main it looks similar to a function this is because main is also a function in c programming it is the first function that is executed by the compiler so every c program should include a main function now to revise what we have learned so far here is a programming tax for you can you create a program that takes two numbers perform the multiplication of two numbers returns the result you will find the answer to this question in our github repository and also if you want to revise this concept you can find all this program right there i'll put the link in the video description below now that we have reached the end of this video it's time for programming squeeze what is the correct way to call the following function comment your answer below see you in the next video happy programming you