in this video i want to talk a little bit about how to think like a programmer now uh you many of you would be wondering you know is a programmer a different being from space that i i need to learn to think like a programmer that's not true a programmer mindset is a problem solvers mindset if you don't approach any problem with the right mindset then you know it will be your experience will be fulfilled with frustration and that is why today i wanted to list a few points point number one being understand the problem first i know many programmers who you know i will just give them the brief a tiny brief like i need to build a website and then they'll start the laptop and start coding that's uh that's a terrible approach first you need to understand what the problem really is what the client or the person who is asking you to solve the problem really wants or if it's your problem what do you want from the solution really you know map it out on a piece of paper there are tools like mind maps and flowcharts that can help you really define the problem better and if you think of a programming like a flow of data from you know one state to another then it will start opening up your mind towards really how do i solve this problem and instead if you think in terms of for loops and while loops and if statements then you know you might not really solve the problem and you might just fulfill your need to feel smart but that's not the right approach so spend some time understanding the problem spend some time understanding what uh you know what is the difference between have and want because that is what a problem is so really try to understand and design a solution to the problem now number two is related to number one it's divide problem into sub problems now i'm not just talking about you know programming uh like there's a big function and you break it down into smaller functions i'm also not talking about a more abstract concept for example if you are going to build uh some very simple automation then you know there's there's some form of data coming into the system some form of data going out then there must be authorization authentication who needs to be able to do what so there are these common sub problems in every problem and then if you again if you go back to number one understand these sub problems build flow charts mind maps for these sub problems and then look at the bigger picture again i think it will help you become a better programmer and that is the kind of mindset that you will need to become a professional programmer if you get stuck in you know just coding coding coding and not really focusing on dividing into sub problems and you know understanding the problem really asking questions and all that then you'll always be stuck in the beginners mindset but we want to grow and we want to become bigger so i suggest that start this habit of taking a big problem and then chunking it out into smaller problems and then tackling those smaller sub problems one by one number three is uh never give up now this might sound like a cliche but you know because programming is filled with errors and bugs and it's it's mostly you know like uh not really you don't spend a lot of time coding that that's such a huge myth if you if someone were to measure how much time someone spends really typing out code then they would we would find out that so much time is spent researching and learning how to fix bugs the whole process of programming involves fixing bugs and fixing errors and looking at error messages putting them on google or whatever search engine you prefer and finding out if someone else had the same problem reading up on documentation so this whole industry is built around error messages or the processes built around mistakes and that is also the joy of programming you know you get to learn so much you get to fix things but it can also be frustrating i personally have been stuck with one bug for you know there was there was this one issue when i was trying to connect some data in java to uh other data in a programming language called r and it was sort of uh a black box because i was using this library that was not very uh that did not have much documentation so going into source code really doing a lot of things myself and you know it took me a month a whole month to fix that bug but at the end i emerged victorious and i was able to deploy that system so the next thing you need to remember to build a programmer's mindset is to start asking for help so you don't have to do everything on your own if you get stuck you have other team members in your company or in your school or college who can help you out you know and two heads are better than one obviously sometimes you are just stuck somewhere and someone can come in and you know the the solution will be apparent to someone else or now getting help is not just about getting help from people you know there are wonderful people all over the internet who can help you go to communities go to uh stack overflow there are slack channels and discord channels filled with programmers who have uh achieved so many things of in their life and if you're working on say a framework like react or or django then there are specific niche communities for started by those people involved in those projects as well so if you get stuck there's always one community where you know there are other people who are willing to help last point about having the programmers mindset is to be patient and to practice and improve there's a lot of content out there that will say you know become a developer a web developer in three months or one month or six months but yes you know you can become an entry level web developer or a programmer in six months but there's so many aspects of programming that you will only learn after building different different different projects you know like one project will teach you one thing maybe it will teach you authorization and authentication another project will teach you something else another project will teach you how data flows from one state to another another might teach you functional programming another might teach you machine learning another might teach you the basics of data science or even smaller aspects of data science so really unless you do 10 or 20 or 30 projects you will not have a big picture of how the industry works it takes a lot of practice and working with people from different fields to learn programming and if you want to develop a professional programmer's mindset then this is the one aspect that you need to remember it's going to take time don't don't read too many blogs around you know becoming a rockstar programming in three months or six months there are people running a business on promising you the world in few months but at program is we don't do that the reality is programming is hard it takes time but it's also fun realize that it's going to take time but again as i mentioned in the other points get help from people uh you know embrace errors and embrace the process if you start enjoying the process then it will be fun but if you just focus on oes you know six months down the line i'll be an amazing programmer and if you're not enjoying the process then you're not going to get there i hope this video was useful stay curious i'll see in the next one you