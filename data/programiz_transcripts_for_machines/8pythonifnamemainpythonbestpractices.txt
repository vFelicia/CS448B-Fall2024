in this video you will learn about the special dunder name or underscore underscore name underscore underscore attribute of a python file that can be used to run the file dynamically in different contexts so let's get started the dunder name variable is a special predefined variable that represents the name of a python file it has different values depending on how we execute the python file let's look at some examples when we run the file normally as a script the value of the dunder name variable is equal to dunder main let me show you what i mean i'll go to my code editor and create a new file so let me open up my file explorer click here and i'll call this first dot pi now i'll simply print the value of the dunder name variable so i'll say print underscore underscore name underscore underscore and close the bracket now let me hide this files explorer and open up my terminal and i'll say python main or first dot pi now when i press enter you can see that it printed out done domain remember that when we run a python file as a script the value of the dunder name variable for that file is always done domain however the value of the dunder name variable is different if we run it as a module let's look at that in the next section when we run a python file by importing it as a module inside another file the value of the dunder name variable is equal to the actual name of the file let me show you what i mean for this i'll create another file called second.pi let me hide my terminal open up my files explorer and say second dot pi now here i'll say just import first now let me run this code so i'll hide this file explorer open up my terminal and say python second and you can see that instead of done domain this time i got first remember that in the context of running a python file as a module the name of the module itself is assigned to the dunder name variable by the way if you're finding this video useful a sub to the channel would be much appreciated before moving to the next section of the video the programming team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easier to understand a builtin interpreter so that you can run python on your phone quizzes and many more features the app is available on both ios and android the links are in the video description below now that we know about the dunder name variable let's understand its use cases on my screen you can see that i have a file named helloworld.pi that contains a greet function suppose we want to run this grid function directly while running hello world or pi as a script that is while running it from the terminal for this we can use the if statement and the dunder variable so here i'll say if dunder name is equal to dunder main then oops i forgot the dunder at the end i'll say run the greet function i'll save this program and then let me first create some space open up my terminal and this time when i run python hello world dot pi you can see that hello world was printed on the screen this means that the greet function got executed this is because the name variable in this case is equal to dunder main as we ran the file as a script now let me create a new file called greetings dot pi and inside it i will import the hello world file as a module so let me first hide this terminal open up the file explorer and create another file called greetings dot pi inside greetings dot pi i'll just say import hello world and now when i try to run python greetings dot pi you can see that nothing got printed on the screen this is because the dunder name variable inside the hello world pi is not equals to done domain when it is run as a module in this case only the contents outside this if statement or the definition of the grid function are imported but nothing gets executed i can still call it manually though because it has been imported so i'll go to the greetings.pi file and here i'll say hello world dot greet and i'll save this file go back to my terminal and run python greetings dot pi again and this time you can see that hello world was successfully printed on the screen this is a very useful feature as it allows you to run the same file differently in different scenarios you are sure to encounter this statement a lot while coding in python that's it for this video if you want to revise these concepts you can find all these programs in our github repository i've also put the link in the video description below and if you like this video hit that like button and subscribe to the channel and i'll see you in the next one happy programming you