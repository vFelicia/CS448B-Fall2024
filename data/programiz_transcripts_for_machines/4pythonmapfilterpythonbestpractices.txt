the builtin functions like map and filter allow us to write simpler shorter and more pythonic code in place of using loops and branching in this video we will learn to use map and filter in python with the help of examples so let's get started before we learn about map and filter functions let's brush up on lambda functions which we discussed in the last video as these functions make extensive use of lambda lambda functions are single line functions defined without a name let's make a simple normal function that takes two arguments and returns the sum so here i'll say def add n1 and n2 as arguments and it returns the sum of n1 and n2 i can say print add 10 and 22 test this out when i press run you can see that it successfully returns 30 which is the sum of 10 and 20. now let's achieve the same result using a lambda function let me comment out this code first and then i'll say add equals lambda n1 comma n2 colon and the return value is n1 plus n2 remember i can put spaces before and after the column and it won't affect the working of the program when i press run then i get 30 as expected now we are finally ready to get started with map before we learn about the map function let me first show you why it might be useful suppose we have a list like this so i'll remove this whole code and say numbers equals 1 2 3 4 5 and we have to create a new list with all the squares of the numbers from this list for this we would normally use a for loop and apply the square to each item let me show you what i mean i'll first create an empty list called squared underscore nums so squared underscore nums is an empty list then i'll create a lambda function and assign it to a variable so here i'll say square equals lambda n that returns n to the power of 2 and now finally i'll loop through the items of the list and append the squares to this new list so here i'll say 4 n in numbers then i can say squared underscore nums dot append square of n let me print the squared underscore nums list and run this code so here i'll say print squared underscore nums and press run and you can see that squared underscore nums contains the square of the five numbers let me show you how we can achieve this same task in a more elegant way using map first let me remove this code now i'll use the map function to square each item of the list the map function applies a given function to each item of an iterable so i can say squared underscore nums equals map the map function takes two arguments a function and an iterable so the function is the lambda function that returns n to the power of 2 or n squared and the second will be the list itself which is an iterable of course here the lambda function takes an argument and returns the square of that argument or that number similarly we are applying this function to each element of the numbers list which is the iterable or the second parameter now let's print the squared underscore nums variable to see what we get so let me say print squared underscore nums and when i press run it says map object and there's a random sequence of letters here the map function returns an iterator object let's use the list function to convert this iterator back to a list so here let me wrap this function with a list function and now when i press run and i get the same output as before the squares of each element are added to this new list these two codes that you see on your screen perform the same exact task but using map and lambda makes our code look much cleaner and concise we can also pass multiple iterable arguments to map let me show you with an example so i'll remove this old code and i'll say num1 equals 4 comma 5 comma 6 similarly num2 is 5 comma 6 comma 7 i will use the map function to create a new list with the sum of corresponding elements from these two lists so here i can say result equals map the lambda function takes two arguments n1 and n2 and returns n1 plus n2 similarly the two other arguments or the iterables on which this lambda function will operate are num1 and num2 now let me print first let me convert this to a list and print list of result here n1 will take items from the num1 list n2 will take items from the num2 list and the lambda function will return for each element the sum of n1 and n2 and this will be saved in the result iterable which we convert to a list before printing now when i press run you can see that 4 plus 5 is 9 5 6 is 11 and 6 plus 7 13 this new list contains exactly the sum of each element by the way if you're finding this video useful a sub to the channel would be much appreciated before moving to the next section of the video the program is team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easier to understand a builtin interpreter so that you can run python on your phone quizzes and many more features the app is available on both ios and android the links are in the video description the syntax of the filter function is quite similar to that of the map function however instead of creating a new iterator by applying the given function filter filters out only the elements for which the function returns true let me show you what i mean with an example suppose we have a list of numbers like this and i want to filter out only the even numbers for this i would normally use the for loop and check if every item is even or not using the filter function however i can perform this task in a single expression let me define even underscore numbers it will take two arguments first let me put the filter function so filter the filter function will take two arguments the first one will be the lambda so i'll say lambda it will take n and then it will return n percentage or modulus 2 equals equals 0. similarly the second argument will be the numbers list itself this lambda function will take values from the numbers list one by one if the number is odd the lambda function returns false and then the filter function will remove those values from the list or not keep those values in the final iterable however if the number is even the lambda function returns true and those values are not filtered out since filter also returns an iterator i'll first need to convert it to a list before printing it so here i'll say list and now let me print even underscore numbers and now when i press run then you can see that even underscore numbers only contains the even numbers from the numbers list use map to apply a function to each element of an iterable for example if you have a list containing radius of dozens of circles and we need to find the corresponding areas we can achieve this by using the map function use filter to filter out values of an interval if they don't match the specified condition for example we can use filter to remove negative numbers from a list of numbers that's it for this video if you want to revise these concepts you can find all these programs in our github repository i'll also put this link in the video description and if you like this video hit that like button and subscribe to our channel and i'll see you in the next one happy programming