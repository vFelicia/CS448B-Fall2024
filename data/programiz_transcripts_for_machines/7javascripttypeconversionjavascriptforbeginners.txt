what's up guys i'm puneet from programmers and welcome back to this series on javascript in today's video we will learn about type conversion in javascript we will learn to convert one data type to another so let's get started before we talk about what type conversion is let's quickly see an example in the video about operators we learnt about arithmetic operators let me use the plus operator i will create a program that will simply add two numbers so on my code editor i'll say const x equals eight similarly let me create another variable const y equals four now i'll create a result variable that stores the sum of x and y and let me console log the result here the variable x has the value 8 and the variable y has the value 4. now when i use the plus operator between two operands x and y the two values are added and stored in the result variable let's run this code and as expected i get the output 12 which is 8 plus 4. now let me change the value of the y variable from the number 8 to string 8 by adding quotation marks before and after what do you think would be the output of this program let me run this code and confirm your suspicion so when i press run i get 84 instead of 12. quite fascinating isn't it let me explain what's happening here here we are adding a string value 8 to a numeric value 4. in such cases javascript automatically converts the numeric value into a string and concatenates the two strings that's why the values 8 and 4 are joined together this is one of the behaviors in javascript which you'll get used to and it's called type conversion you can verify the type conversion by checking the type of the result using the type of operator let me add a print statement that checks the type of the result so i'll say console.log type of result when i press run i get not only the output 84 but it confirms that 84 or result variable is indeed a string here the type conversion is happening automatically this is called implicit type conversion now let's see what happens if i pass a textual string instead of a numeric string i will simply replace it with hello let me run this program and you must have expected this by now the output is a join string hello4 so getting back to type conversion type conversion is the process of converting one data type to another data type let's see a few more examples instead of the plus or the addition operator let's try some other operators i'll go back to my code editor and i'll say const result 1 equals string 5 minus string 2. similarly let me try something else so i can say const result 2 equals string 5 minus numeric two now let's also try multiplication i can say const result three equals string five asterisk or times two similarly the last one will be division result four equals string five divided by two let me console log the results so i can say console log result one console log result 2 console log result 3 and similarly console.log result 4. let's run this program and see the output here unlike the plus operator the actual operation of subtraction multiplication and division is performed that is string 5 minus string 2 gave me 3 similarly string 5 minus numeric 2 gave me 3 again string 5 times numeric 2 gave me 5 times 2 10 and string 5 divided by numeric 2 gave me 2.5 which is 5 divided by 2 instead of 52 this is because when a numeric string is used with arithmetic operators such as subtraction multiplication and division javascript converts the numeric string to the number data type instead of the other way around like with addition you can verify this by checking the data type of all results using the type of operator so i'll go back to my code editor and then let me also add console log type of result one console log type of result to console.log type of result 3 console log type of result 4 now when i press run i can see that all 4 results result 1 result 2 result 3 and result 4 are numbers you must be wondering by now what will happen if we use nonnumeric strings with subtraction division and multiplication operators well what happens is we get something called nan as a result nan means not a number let's see this in action i will use the minus operator with a nonnumeric string so let me remove this old code and i'll say const result equals 4 minus hello now let me console log the result so console log result let's see the output of this program when i press run you can see that i get n capital n small a and capital n which is a special data type in javascript that means not a number if you're enjoying this video please also check out programs pro where we provide tutorials along with quizzes and challenges which will help you practice and test your learning in real time also the course includes projects to give you an awesome experience of how programming works in the real world and for our youtube subscribers we are giving 50 off on the yearly plan sign up by scanning this qr code or use the link in the video description to claim your discount so far we saw that a number value when added to a string is automatically converted to a string we also saw something completely different a numeric string is automatically converted to a number while performing subtraction multiplication and division with a number now let's see what will happen when we use addition and subtraction operators with boolean values i'll remove this old code and i'll say const result 1 equals string 4 minus true and let me console log this result result one similarly let me try const result to equals string four plus true and i'll console log this as well get used to a lot of console logging if you want to become a good programmer similarly cons result 3 equals the numeric 4 plus false this time and i'll console log result 3 as well before i run the program i would like you to create a mental picture of what the output might be let's see if you guessed it correctly i'll run the code and you can see that i got three four true and four let's see what's happening here javascript considers boolean values true as one and false as zero here in the first statement when i said 4 minus true the numeric string 4 subtracts 1 which is the value of true so we get 3 as output in the second statement when i try to add 4 with true we are using numeric string 4 with plus operator hence it converts the true to a string true and joins the two strings so we get photo as output and in the third statement we are using a number with the plus operator hence it simply performs addition between 4 and false and since false is 0 we get 4 as output all the type conversion seen in the previous section of this video is implicit conversion implicit conversion is done by javascript automatically however we can also convert certain data types into another as per our needs imagine you're fetching some data from the server and the data you get is in string format however you need the data in number type to perform some calculations then you can manually convert the string data type to number and this is called explicit conversion explicit type conversion is done using builtin methods available in javascript let's see a few examples in order to convert numeric strings and boolean values to numbers we can use the number function for example i'll remove this whole code and i can say const result equals number and the string three to four now let me console log the result oops console.log result and also the type of the result so i can say console.log type of result here we are passing the numeric string 324 to the number function the result is then assigned to the result variable and we are printing the result variable also to check the data type of result we are using the type of operator on the result variable now let me press run and see the output as you can see the numeric string three to four is converted to number three to four and we verified this by checking the data type which is a number now let's see what happens if we pass a boolean value to the number function so here i'll replace this 3 to 4 by true let me run this code and we just verified that javascript treats true as 1. let me go ahead and change true to false and press run and you can see that javascript reads false as zero while converting it to a number okay guys we need your support to keep these kinds of content free for all users youtube really likes engagement on the video so leave a comment below click that like button and hit subscribe if you haven't already let's get the engagement score high up so that more people can discover and enjoy these courses now let's see how we can convert other data types into string explicitly in order to convert a data type to string we have two functions they are string and two strings let's start with the string function first i'll go to my code editor and i'll say const result equals string 257 exactly just like before but instead of number i use string let me console log the result and also console log the type of the result here i passed a number 257 into the string function and stored the value in a result variable then i printed the result and also the type of the result to verify that this is indeed being converted to a string let me go ahead and run this program and you can see we get 257 and string that means the result variable now contains a string similarly let's now pass a boolean value instead of a number i'll go ahead and modify the code and here i'll put true let me also try for false so i'll copy paste this code and instead of true i'll say false let me make this result 1 and when i press run you can see that true and false were both converted to strings now that we know how to use the string function to convert any data type to a string let's also try the other alternative that javascript provides which is the tostring method i'll remove the old code from my code editor and i'll say const result equals the number 257 dot tostring you must have noticed the parenthesis in front at the end of 257 i'll explain more about it later then i can say console.log result similarly console.log type of result this format might look strange to you because you've never seen it before so instead of wrapping 257 with a string function i am using this tostring method on 257 and i'm printing the result and the type of the result let me run this code and you can see that i got 257 and string which is the data type of the result variable as before as you can see we have successfully converted the number to string using tostring you can go ahead and try this for the boolean values true and false yourselves now that we have reached the end of this video it's time for the programming squares what's the output of the following code comment to answer below and if you want to revise these concepts you can find all the programs in our github repository i'll put the link in the video description below happy programming