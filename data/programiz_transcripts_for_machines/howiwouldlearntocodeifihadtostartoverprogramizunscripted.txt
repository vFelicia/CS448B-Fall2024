today i want to talk a little bit about how i would learn programming or approach programming if i had to do it all over again uh this is because you know i feel that the way i learn programming was not the most efficient approach and in hindsight if i had to start over again i would do so many things differently the number one step is i would choose the programming language better because when i was learning to program first i learned the basics in c then i learned objectoriented programming in c plus plus then i learned java so you know it was really this mix of shifting from one programming language to another and because c did not have support for object oriented programming so instead if i had chosen something like javascript or python then you know i could have learned everything using one programming language so definitely if you're in 2021 or you know if you're learning programming today you have a wider choice than i did before when i learned programming that that's why i definitely go for a programming language that supports all the programming constructs that you need to learn programming uh after choosing the programming language i would learn the very basics programming constructs variables if else statements you know stuff that is common to more every programming language or programming in general instead of focusing on you know learning the same things in different programming languages i would master all these concepts in one programming language be it python or javascript or java or c sharp any high level programming language will do then i would also solve five or six problems for each programming language now i don't know how it is elsewhere but but in india there's a certain obsession with a certain type of programs like uh programs that generate pyramids of stars or you know so there's this whole too much time spent on few things instead i would not solve you know more than five or six problems of one category say if else five or six problems for loops five or six problems exception handling or file handling five or six problems and then i would learn how to mix and match all these concepts to create small projects and not really get stuck with the same kind of problems again and again and again another thing that a lot of people miss out is they try to learn it but then you know they leave it at that i suggest an approach by richard feynman who is a noble laureate so what he used to say is if you want to understand the topic completely then try to explain it to a child so if you have learned how to use for loops then think about how you would approach explaining for loops to a little child because then it will help you dig in you know okay what exactly is a for loop how do i explain it to someone who does not have the background then it will clarify your concepts i've always found that trying to teach something it helps my learning as well another thing that i would do differently or you know if i had to start from scratch is build tiny personal projects what happened in my case was i spent a lot of time on theory and suddenly when you know the requirement for the minor and major projects in college started i started scrambling for ideas and there was this huge jump from learning variables and if statements to doing you know big projects so the learning curve was really huge and i i'm not very happy with the major and minor projects that i did in college now uh if i had to do that differently then i would build small projects like a tictactoe game or you know a todo list while i'm learning these variables and for loops so i would go projects and learning in tandem this time so that when i build those bigger projects if i'm interested in machine learning then i should have learned you know libraries like scipy or numpy before i would also do a lot of experimentation so maybe you know uh two or three months i would try competitive programming two or three months i would try web development using django and flask maybe the next few months i would try machine learning so i would learn about libraries like numpy pandas and scipy basically experiment with the different fields you know i would have built a portfolio website because i feel that that's something i still don't get time for and you know i feel that you should have a website of your own even it does not need to be fancy but really a home for you know all your little projects where you can demonstrate them to the world and that way you'll also learn to deploy projects i feel i wasted a lot of time or say you know the education system in which i learned programming wasted a lot of time uh c in first year of college then you know c plus plus in second year i really feel a lot of momentum was lost in the process don't let that happen to you momentum is everything when you learn to code so make sure that you know you start with the plan and execute that plan be disciplined something that i would have done differently or i would do if i was learning to code now is i would create a full curriculum for myself before i started to learn that is because you know we get stuck in analysis paralysis what should i learn next instead if you create right from day one do your research say day one d2 d3 day four have that discipline for 60 days or 90 days or 120 days then you know there's this something that you have to achieve every day and that will keep you in discipline and maybe we will publish this kind of syllabus from programming someday i hope that will be helpful and yes few things i've talked about in this video i hope they were helpful and i'll see you in the next one you