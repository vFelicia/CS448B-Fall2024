we all know about files they are named locations on our storage device for recording data python provides numerous builtin functions to work with these files in this video we will see how we can perform various file operations such as reading and writing into files with the help of examples so let's get started there are three steps we need to follow to work with files first open a file second perform the operations such as read content from the file or write data to the file third close the file now let's cover each of these topics in detail in python we use the builtin open function to open files here i have a file named message.txt and inside it i have two lines of text i love programming and i love programmers to open this file i will create a new python file in the same directory and call it main dot pi so here i'll type f equals open message.txt here message.txt is the location of the file if this file was in another directory we would also need to specify the path to this file and this open function is opening the file which returns a file object which is stored in the variable f this file object will be used to perform file operations by default the file will be opened in the read mode meaning we can read contents from the file but we can't modify it instead of this we could also have explicitly specified the file to be opened in the read mode by passing a second argument like this so here i'll add a second argument and say r here r means open the file in read mode similarly if you want to write contents to a file we should open the file in write mode by using w like this so i'll remove this r and i'll write w and this means that i'm opening the file in right mode these are called file modes the mode in which the file is opened and there are three commonly used modes in which we can open a file r for reading contents of the file w for writing contents for to the file and a for appending more content to the end of the file now we know how to open a file next we will see how we can read the contents of the file after we open a file like this we can read its contents using the builtin read method so in my code editor i'll say content equals f dot read and then i'll print the content first i have opened the file in read mode this statement returns a file object then using the object we read the entire content of the file and print it before we see the output of this code i will add a line to close the file so here i'll say f dot close we should always close the file after working with them it's a good programming practice now let me run this code so let me hide the explorer open the terminal and here i'll say python main dot pi and you can see that the contents of the file message.txt were printed it's also possible to read only a certain number of characters from a file using the same read method for this we pass an optional size argument let me read only the first characters from the file so here i'll say f dot read 6 let me save this file and when i run it you can see that only the first six characters of the file were printed now if you read the same file again it starts reading from the seventh character because we have already read up to the sixth character let me show you how that works let me modify this program to read the next characters so here i'll say more underscore content equals f dot read 12 and i'll print more content let me save this and when i run python main dot pi again you can see that programming was also printed so let's try to see what happened here the first read statement or the f dot read six is giving us the first six characters i love and the second read which is more content equals f.12 is giving us the next 12 characters and which is programming we might encounter unexpected errors while working with external files so it's a good practice to open the files using try final statement let me show you how so in my code editor i'll make a few changes here i'll put this inside a try block all of this will go inside the try block and i will put the f dot close inside a finally block here we are adding try and finally blocks because now even if our program encounters an error our file will be closed this is because the finally block always gets executed there's even a better way to write this same code in python using the with open syntax let me show you how so here i'll remove the try block and i'll say width open as f i'll remove this finally code now when i run this code i'll say python main.pi which should have been with i'll save this and i'll just run python main.pi this again seems to be an error i forgot the column at the end again let me try this once so python main dot pi and as you can see i got the same output but using the width syntax automatically closes the file without us having to write the finally ourselves by the way if you're finding this video useful a sub to the channel would be tremendous to write content to a file we must first open it in write mode then we can start writing content to it using the right method there are two things you need to remember while writing to a file if you try to open a file that doesn't exist a new file is automatically created if a file already exists its contents are removed and our new content is added to it first let me write to a file that doesn't exist so here in my code editor i'll say with open python dot txt and in write mode as f i'll say f dot write python is awesome and in the next line i'll write f dot write i love python i'll save this and let me run it when i run the code a python.txt file is created with the content python is awesome i love python here both the strings are in the same line we can change that by adding slash n to specify a new line character so here i'll go back to my main dot pi and i'll say python is awesome slash n now let me open up my terminal and run the code again so i'll say python main dot pi and if i go to if i open the now if i open the python.txt file you can see that python is awesome and i love python are on separate lines notice that while running the program for the second time the python.txt file was already there since opening an existing file in write mode will overwrite the file all the previous data was erased and new content was written to it so you have to be very careful while using the right mode because you may accidentally erase the old data without realizing it before moving to the next section of the video the programmers team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easier to understand a builtin interpreter so that you can run python from your phone quizzes and many more the app is available on both ios and android the links are in the video description the final file mode that we will discuss in this video is append as suggested by the name we use this only if you want to add additional data to the end of the file without erasing our previous data at the moment our python.txt file looks like this let me add an additional line to this file and in main dot file i'll open this in append mode and here i'll write f dot write i'll write python is my favorite programming language here i have used a to specify that i want to append to the python.txt file then i have used the same write method to write new lines to the existing file let me run this code so let me hide this here open up my terminal and here i'll say python main.pi and after running it if i open my python.txt then you can see that python is my favorite programming language has been appended to the end of the file the readlines method returns a list containing each line of the file let's open the same python.txt file we have been working with on read mode but this time i will use the redlines method i'll remove this old code first let me change the mode to read and then i'll remove this old code i'll say lines equals f dot read lines and let me print lines to see what i get now i'll save this let me run the code so i'll say python main dot pi and you can see that i get a list of the lines that are inside the python.txt file now if i want i can use a for loop to iterate through the list to get each line one by one similarly there is also a write lines method to write multiple items into a file it writes the items of a list to the file so i'll go to my code editor i'll remove this old code and instead of python.txt i'll say javascript.txt let me open this in write mode so inside this block i'll say lines equals js is also awesome and in the second item i'll say slash n js is my second favorite programming language now i'll say f dot write lines lines i hope you must have guessed the output by now but let me show you anyways so i'll do python main dot pi and when i press enter then if i let me close my terminal i'll go back to my explorer and you can see that a file called javascript.txt with the two lines js is also awesome and js is my second favorite programming language has been created at this point we have covered pretty much everything we need to know about file handling in python by the way there are many other builtin methods and file modes available to file objects if you're interested you can find more information about it on our website programmies.com the link will be in the video description that's it for this video if you want to revise this concept you can find all these programs in our github repository i'll also put this link in the video description and if you like this video hit that like button and subscribe to the channel and i'll see you in the next one happy programming