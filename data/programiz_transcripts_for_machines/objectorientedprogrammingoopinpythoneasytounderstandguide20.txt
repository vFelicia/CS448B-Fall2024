you've probably heard that python is an objectoriented programming language in this video you will learn what objectoriented programming is and why it is used after that we will implement the objectoriented style of programming in our code by creating two practical examples so let's get started let's learn about object oriented programming first then we will see how we can apply it in python suppose we need to store the name and marks obtained by university students and based on the marks obtained by the students we also need to find out if they passed or failed their exam then the structure of our code would look something like this now imagine that instead of one student you have to do this for numerous university students if you were to use the same approach our code would be less organized and it would look messy since these data and functions are related it would be amazing if we could treat them as a single entity we can do exactly that by creating objects this helps us to make programs more organized now there are two steps required to create objects first we need to define a class since we're working with students we can create a class name student this student class acts as a blueprint for the objects all objects created from this class have name and marks data and can use the check pass fail function think of a class as a blueprint of a house it contains all the details about the floors doors windows etc based on these descriptions we built the house the actual physical house is the object as many houses can be made from a house's blueprint we can create many objects from a single class so from our student class we can create as many student objects as we want the concept of objectoriented programming is not native to python and is available to most of the programming languages before moving to the next section of the video the programmers team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easier to understand a builtin interpreter so that you can run python on your phone quizzes and many more the app is available on both ios and android the links are in the video description now that we know what objects are let's implement them in python as mentioned before we need to define a class before we can create objects let's do that first and here i'll say class student and then i'll just use pass here i have defined a class named student at the moment our class doesn't have any attributes and methods since classes cannot be empty i have added a pass statement so that i can run the code without any errors by the way when working with objects variables are called attributes and functions are called methods from now on we will be using these terms when working with objects now that we have defined a class we can create as many objects as we want from it let me create two objects of the class i'll say student 1 equals student in parenthesis and then i'll say student 2 equals student and again parenthesis here student 1 and student 2 are both objects of the student class now we can start adding different attributes to these object instances first let me remove the student 2 and here i'll say student 1 dot name equals harry here we have assigned harry to the name attribute of the student1 object let me add another attribute to our object so here i'll say student 1 dot marks equals 85 and i'll print these attributes i'll say print student 1 dot name and print student 1 dot marks now when i press run i get harry and 85 back we have successfully added two attributes to our student one object however this is not the proper way to add attributes to objects usually what we want to do is we want to put attributes inside our class so that all the objects created from the class have these attributes by default similarly we also put all methods inside our class so that every object of the class can access them let's first see how we can add methods inside a class then we will look into the proper way to create attributes here i have defined the check pass fail method inside the class now any object created from this class will have access to the check pass fail method if you have noticed we have used self as an argument here and self.marks inside the method we will talk about that in a moment let's first access this method using the student1 object so at the end here i'll say did underscore pass equals student 1 dot check underscore pass underscore fail and then i'll say i'll remove these two lines and i'll say print did underscore pass now when i press run then as expected it prints true because the student one has enough marks to pass see from the very beginning what's going on here we have created a class and we have defined a check pass fail method inside it then we created an object from this class and added two attributes name and marks to it finally we call the check pass fail method using the student1 object we have called this method without passing any arguments however the method definition has an argument called self now you must be thinking shouldn't this give us an error well whenever we define methods for a class we need to use self as the first argument this self represents the object calling it in our example self refers to the student1 object and self.marks refers to the marks attribute of the student1 object so the object is passed as the first argument automatically if you create another object let's say student to and call this method then self represents the student2 object and self.marks represents the marks attribute of the student2 object let's write out student 2 equals student student 2 dot name equals janet student 2 dot marks equals 30 did underscore pass equals check pass fail oops student two dot check pass fail and let me print did underscore pass now when i press run then i get true first and i get false here marks of student one is 85 so in this method self.max is 85 which is greater than 40 that's why true is returned similarly for student 2 student.2.max is 30 so self.max greater than equals to 40 is false that's why we get false by the way we can use any name instead of self here is just an identifier like variable names using self is a convention and for consistency we will also keep using self if you're finding this video useful a sub to the channel would be awesome as i have previously mentioned adding attributes to the object manually after defining it is not a good practice instead python offers a much more elegant and compact way of defining attributes right while instantiating the object for that we use the init method the init method is a special method that automatically gets called every time objects are created if you're coming from other programming languages like c plus plus or java the python init method closely resembles constructors so let's see how we can use the init method in our code and i'll remove the student 2 code and i'll also remove the code that adds the attributes of name and marks to the student1 object then i'll say def underscore underscore init underscore underscore self name marks and i'll say self.name equals name self.max equals marks and here i'll say harry and 85 now let me also remove this did pass and i'll say print student1 dot name and print student1.max let's see what's happening here when we create an object this init method is called automatically with the values harry and 85 passed to name and marks automatically remember the first parameter self represents the object calling it while the second and third parameter take the two arguments which we used during object creation now for the student1 object the name attribute will be harry because of the statement self.name equals name and marks will be 85 because of the statement self.marks equals marks when i run this code then i get harry and 85. let's create another object first i'll add another student student 2 equals student janet 30 and let me print those so i'll say print student 2 dot name and print student 2 dot marks now when i press run then i get harry 85 janet and 30. now let me check if student 1 and student 2 passed or failed the exams we already have the check pass fail method defined for this purpose we just need to call it but first i'll remove the code to print the attributes and then i'll say did underscore pass equals student1 dot check pass fail let me print did underscore pass and again i'll modify did pass so that i know the value or the pass fail status of state student two so i'll say did underscore pass equals student two dot check pass fail print did underscore pass you must have guessed the output by now but let me run the code and verify anyways so i'll press run and as expected true and false are returned because in this line did underscore pass will be true since the first student harry has enough marks to pass the exam similarly here did pass will be false because student 2 does not have enough marks to pass the exam let's see how this program works from the very beginning again we have created a class with two methods an init method that initializes the attributes of name and marks and a check pass field method that returns true if the marks is greater than 40 greater than equals 40 and false if it's not greater than equals 40. we then created student 1 in this line with the parameters harry and 85 when this object is created the init method is called and name and marks attributes of this student1 object are now harry and 85 then we checked if student1 passed the exam and printed the result we had also created another object student 2 by passing janet and 30 so the name and marks of the student 2 object are janet and 30 and then we calculated if the student had passed or not using the check pass fail method of the student 2 object and we printed the result i hope you have some idea of how classes and objects work by now let's try one more example for extra clarity in this example we will add two complex numbers manually python already handles this by default but we will create our own complex class to better understand the concepts of objectoriented programming if you do not know a complex number has real and imaginary parts when we add two complex numbers we need to add the real and imaginary parts separately let's first create a class that represents complex numbers i'll remove this old code and i'll type class complex and here i'll define an init function so i'll say def init self real image and inside this i'll say self.real equals real and self.imaginary equals image and now let me create two objects n1 equals complex 5 6 and n2 equals complex minus 4 and 2. at this point we have created two complex numbers n1 and n2 and initialize the real and imaginary parts now we'll create a method to add these complex numbers so inside our class i'll add the code i'll say def add self number and here i'll say real equals self dot real plus number dot real and i'll say image equals self dot image plus number dot image then i'll say result equals complex real image and i'll return this result object now let me call the add method so here i'll say result equals n1 dot add n2 here we have called the add method on the n1 object and pass the n2 object to it so inside the add method self will be n1 and number will be n2 then the real and imaginary parts of these numbers are added separately so real equals self dot real plus number dot real means n1.real plus n2.real similarly image equals self.image.plusnumber.image means n1 because n1 is self and one dot image and number is n2 so n2 dot image we have then created another object of the complex class using the result values and then returned it in the next line now let's print the attributes of the result object i'll say print real equals result dot real and print image equals result dot image now when i press run there seems to be a problem i forgot the column now when i press run then i get real equals 1 image equals 8 let's verify so 5 minus 4 is 1 and 6 plus 2 is 8 so the answer is correct as you can see the real and imaginary parts have been added separately as expected why object oriented programming as we have seen from our examples creating objects allows us to organize related data and functionalities together this helps us to write structured and flexible code now instead of thinking in terms of individual data and functions we start thinking in terms of objects and how one object interacts with the other this helps us to divide a complex problem into smaller sub problems also using an object oriented style of programming makes our code reusable because we can define multiple objects with similar attributes and functionalities from a single class before we end this video here's a task for you create a class named triangle create an object from it the object will have three attributes named a b and c that represent the sides of the triangle the triangle class will have two methods the init method to initialize the sides and a method to calculate the perimeter of the triangle from its sides the perimeter of the triangle should be printed from outside the class here's the bare bones code for the program you'll find the complete answer to this question along with source code of all the programs in this video in our github repository the link will be in the description below and if you like this video hit the like button and subscribe to the channel and i'll see you in the next one happy programming