what's up guys my name is soyuz and i'm a selftaught python programmer i've also been working as a python developer and a content editor at programmers did you know that we've been creating our recent biology trace videos for youtube just using python we received a lot of requests asking for a tutorial so in this video i'll demonstrate how you can create such videos in python using a package called bash address so let's get started before we get started with the video i want to mention that the batch address package we customize for our videos is 4 from dexplo slash part address we've also used the feature of bar images added by andrews let's start by setting up the environment in this video i'll be using pytam as my python ide feel free to use any other id or code editor of your choice so i'll first create a folder in my workspace i'll call it batch address so i'll say bar chart race and now i'll open this folder with pycharm then i'll open the terminal and create a new virtual environment virtual environments allow us to manage separate and isolated python environments for each of our python projects in order to create a virtual environment i'll first install the virtual nv module from pip i'll say pip install virtual env as i've already installed virtual nv the requirements so satisfied so now i'll create a new virtual environment i'll say virtual env and then the name of the virtual environment which is v e and v and i'll press enter now let me activate this virtual environment i'll say dot slash vnv slash scripts slash activate i'll press enter now that our virtual environment is activated let's install the barchar trace package from our program is github repository to install a package from github i'll say pip install git plus and then the link to our github repository this link will be in the description below you can just copy it at and then the branch name which is master i'll press enter this process may take some time and now if we do pip freeze we can see that the batteries package along with all of its dependencies are installed in order to work with the batteries package we also need to install ffmpeg ffmpeg is a command line based program for processing video and audio files to install ffmpeg go to the releases tab of the fmpx build repository and download the latest gpl release this link will also be in the video description now let's extract this folder to a c drive i'll create a new folder in my c drive and i'll name it ffmpeg and then i'll extract all of these folders to this folder by the way we also need to add the location of the bin folder to our environment path variable so i'll copy this link i'll go to my start menu i'll type env go to the environments variable tab i'll edit the path and i'll new add a new field and paste this link i'll press ok and we're finally done in this video we'll recreate the biochar based video of the top computer science schools so let's first get all the necessary data in the video description you'll find a link to download our data but feel free to use your own data if you want to create this video we'll need data in two formats the first is a csv file that contain all the information for our video let me open the csc file in google sheets so that we can better understand it format and contents as you can see we've got the date column as the index column that contains all the years and we've got separate columns for each of our 13 schools you might also have noticed that our data has some missing fields we'll deal with them later in our program the other data we need is a folder containing all the images for our columns here we've got the logos of size 216 by 2016 for each of our schools notice that the image names must exactly match the column names from the csv file again if you're working with custom data make sure that your csv and image files are also in the same exact format now let's start coding our video first let's create a python file where we will write all of our code i already have this main.pi file created automatically by pycharm first i'll remove all of this code then i'll import the batch address library at bcr so i'll say import biochartres as bcr i will also import the pandas library to read the contents of the csc file and to use data frames so i'll see import pandas spd now i'll import the data from the data.csv file so i'll say df equals to pd dot read csv and pass in the file name which is data or csv i'll also specify the index column as date so i'll say date as i previously mentioned we have few empty fields for each of the columns so i'll use the fill and a method of the pandas data frame to fill this empty fields with a zero so i'll say df dot fill n a fill n a and i'll pass 0.0 i'll also specify in place equals to true so that our original data frame is modified now it's time to use the batch address package inside this package there's a function called partner twist that creates the video this function can take a lot of arguments allowing us to fully customize our video let's first run the help command on this function to read its stock strings so i'll go to my python console tab in pyjama and then i'll import the batteries package as bcr so i'll say import bar chart race as bcr then i'll run the help command on this function so i'll say help bcr dot barge address i'll press enter and as you can see there's a long list of parameters you don't need to memorize all of them as you can just use the help command whenever you want let's use some of these parameters the first and the main parameter is the df parameter the df parameter allows us to specify a pandas data frame parameter that refers to our csv data so i'll come back to my codator now say bcr dot barchartrace and then i'll specify the df as of csv data which is df since the full video takes some time to render i'll use only the first five rows of our data for now so i'll use the slicing operator to get only the first five rows of our data the other parameter is the file name parameter file name refers to the name of the video that will be created you can also specify a path name if you want as you can see all of these formats are supported so i'll specify the file name as video dot mp4 let's skip other parameters for now i'll use just one more parameter called image label folder to specify the location of our images so i'll say image label folder and i'll say bar image labels now i'll save this file and i'll run the code okay as you can see our video.mp4 file was created in our current working directory let's open this video file it doesn't look pretty at the moment but don't worry we'll get there currently the size of our figure is small it is about 6 by 3.5 inches so everything looks crammed up let's start by changing the size of our figure there's a fake keyword arcs parameter that can be used to change the figure properties the argument should be passed in a dictionary format it should have three keys the fixed size dpi and face color the fixed size key is used to specify the width and height of the figure in inches the dpi controls the resolution of the video that is the dots per inches finally the face color specifies the background of the color of our figure so i'll come back to my colorator and i'll specify the figure x as a dictionary and i'll pass the fixed size as 26 by 15 so i'll say 26 comma 15 i'll also specify the dpi is about 120 and then i'll specify the face color oops i'll specify the face color as a custom color so i'll say f8 fa and ff now i'll save this file i'll run the code now i'll open this video file again as you can see now our video looks much more species than before you can also change the orientation and the sorting of the bars but for this video i'll use the default horizontal orientation and the default sorting which is in descending order currently all of our 13 bars are being displayed let's limit that to 10 using the n bars parameter so i'll say n bars equals to 10. the fixed max parameter is used to change the behavior of the xaxis if it is set to false the values in the xaxis will change with time as per the maximum data if it is set to true however the maximum axis value will remain constant for the duration of the animation let me change it to true and you'll see what i mean i'll specify the fixed max as true now i'll save this file and i'll run the code let me open this video file and as you can see the values in the x axis will remain constant for the entire video i want the values of the x axis to change as per the maximum value so for now i'll keep this as false let's look at some more parameters the steps per period parameter lets you decide the smoothness of the animation it is the number of steps to go from one time period to the next by default it is 10 let's change that to 45 so i'll say steps per period as 45 similarly the period length parameter lets you decide for how long to animate each row of our data the default value is 500 milliseconds let's change that to 1500 so i'll say period length as 1500 also there's a colors parameter we can use to provide a custom palette of colors for the bars so i'll say colors and i'll specify a list of colors then i'll save the file and run the code okay this video is done rendering so i'll open this video file and as you can see the animation looks much more smoother than before and our video lasts for a bit more longer also the custom colors that we specified have also been implemented let's now look at the title parameter the title parameter is used to set the title of the figure you have to provide a set of parameters in dictionary format so i'll say title equals to a dictionary and let's specify the label as top computer science schools 2000 to 2020 then i'll also change the font size so i'll say font size as 52 i'll also change the font weight so i will say weight as bold and i will provide a custom padding so i say pad of about 40. also there is a period label parameter that is used to set a label at a specific location in the frame this parameter should also be passed in a dictionary format so i'll come back to my coder and i'll specify the period label as a dictionary and i'll pass the x value as 0.95 so i'll say 0.95 0.95 i'll specify the y value as point 15 so i'll say 0.15 i'll also specify the horizontal alignment as ha as right so that it appears at the right side of the screen and the vertical alignment va as center i'll also change its font size to about 72 and i'll specify the font weight so i'll say weight as semi bolts as a semi bold since we've resized our figure the labels in our video look very small at the moment let's change that using the bar label font and the tick label font parameters bar label refers to the text associated with the bar and the tick label refers to the text associated with the x axis and the y axis so i'll come to my coder i'll specify the bar label font and i'll change the font size to 27 and then i'll do the same for the tick label font so i'll say tick label font and i'll specify the size to 27 as well i also want to change the property of the bars for this i'll use the bar keyboard arcs parameter to change the opacity i'll say bar keyword arcs i'll specify it as a dictionary and i'll specify the alpha which is the opacity as about 0.99 then i'll also set the width of the edges to zero so i'll say lw and c0 now i'll save this file and i'll run the code me open this video file and as you can see there's a title text at the top of the video there's also a period label at the right side also the bar level and the tick label fonts have been adjusted by the way we can even change the formatting of the labels let me show you what i mean since our csv file has up to two decimal places of data i want the bar level to also have up to two decimal place of data also at the moment the period level has this unnecessary decimal formatting that i want to remove we can do this using the bar text template and the period template parameters by text template helps us adjust the formatting of the bar labels i'll come to my code editor and i'll specify the bar text template as a string and say x colon point to f this specifies that the program should display up to two decimal places of values for the bar levels now i'll do the same for period labels so i'll say period template and i'll specify the same type of formatting so i'll say x colon this time i'll say it's point zero f this will remove the unsaid decimal place in the period level now i'll finally save the code and run this file i'll open our rendered video and as you can see the decimal formatting in the period level has been removed and our power labels now has up to two decimal place of data our video is finally ready by the way we've only used the essential parameters to create our video there are many other parameters that allow us to fully customize our video i encourage you to try them out on your own and if you feel more explorative you can go to the program's github repository and read the code to figure out how the batch address package has been implemented that's it for this video you can find all the links i mentioned in the video description and if you want more of these videos let us know in the comments below and so these are some topics that you want us to cover and if you like this video hit that like button subscribe to the channel and i'll see you in the next one happy programming you