what's up guys i'm puneet from programmers and welcome back to this series on python till now we have covered four different compound data types lists tuples strings and dictionaries in this video we will learn about the final one sets in python sets are similar to how sets work in mathematics let's get started a set is a collection of items like lists and tuples however there are some important differences between them sets in python are like sets in mathematics a set cannot contain duplicate items and these items are not in any particular order also we can only use immutable objects in set like strings numbers and tuples so a set cannot have mutable objects like lists and dictionaries just three things to remember when we imagine sets in python number one items of a set are not in any particular order number two no duplicate items are allowed and the third one items must be immutable objects now that we know what sets are let's see how we can create them to create a set we place items inside curly brackets separated by commas like this so here i'll say animals equals curly bracket and then i will add the list of animals as dog cat tiger and elephant let me print this set and run it so i will say print animals when i press run then you can see the set was printed but you must have noticed that this order of animals is different from this order this is what i meant when i said that the items of a set are not in any particular order this is also the reason why set items also don't have indexes now let's see what happens if we try to create a set having duplicate items inside the set animals i will repeat the dog string twice so here i'll add another dog at the end and now if i press run then you can see that in the output dog is printed only once even though in the set definition dog is repeated twice the duplicate dog was removed from the set because sets in python automatically remove all duplicate items it's also possible to create a set that doesn't have any items to create an empty set we need to use the set function now we cannot use empty curly braces for this because it would create an empty dictionary instead so here i'll remove this old code and i'll say animals equals set and then i'll print animals oops animals now when i press run you can see that an empty set has been printed the set function that you see here can also be used to create nonempty sets i'll show you an example so here i'll add a list inside this set function i'll say cat dog tiger and elephant here we have passed a list inside the set function the set function converts this list into a set when i press run then you can see that this list has been converted to a set because it has curly braces instead of square braces here i have passed a list of four animals cat dog tiger and elephant and the set function has converted it into a set that is why the order has been changed we can convert other iterables like tuples dictionaries and strings into a set in a similar way now let's see how we can add items to a set sets in python are mutable we can add and remove items from them to add a single item to a set we use the add method i have this animal set we have been working on in this video let me add monkey to it to add it after the set's name i will type dot so animals dot and then i'll say add and inside the parenthesis i will pass the monkey string now let me print the animals set so that i can verify if monkey was added correctly or not so i'll say print animals and now when i press run then you can see that monkey was also added to the set we can also add all the elements of iterables like list tuples and other sets to a set for that we can use the update method let's take an example suppose we have a set and a list like this now we want to add all the items of this wild animals list to this animal set we can do that by using the update method like this so i can say animals dot update why animals now i'll print animals and see what i get when i press run you can see that leopard and tiger were added to animals list one thing to note here is that elephant is common in both animals and wild animals since sets cannot have duplicates the output has only one elephant by the way we can also pass multiple iterables to the update method like this so here along with wild animals i'll also add a set containing dolphins when i press run then as you can see dolphins was also added to the set of animals the update function added items from both wild animals and the set containing dolphins to the animal set before moving to the next section of the video i'd like to mention that the program is team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easy to understand a builtin interpreter so that you can run python on your phone quizzes and many more features the app is available on both ios and android the links are in the video description below let's now learn how to remove items from a set to remove an item in a set we can either use the discard method or the remove method let's use the discard method first i have this set of animals now i'll use the discard method as animals dot discard let me discard the cat and now let me print animals to see what i get when i press run you can see that dog elephant and tiger are still in the set but cat has been removed now instead of discard let me try and use the remove method so here i'll say remove and when i press run i get the same output of course in jumbled order both discard and remove are used to remove an item from a set however there's an important difference between them if the item we are trying to remove is not in the set discard returns none whereas the remove method throws an error let me change cat to something like ferret here so i'll say animals.remove ferret and when i press run then python says there is an key error now when i use discard and run it you can see that no error was thrown we do not get any errors and our animal set is printed what happened here is that this code returned on because ferret is not in the animal set however we haven't assigned the return value to anything then this print statement prints the animal set by the way we can also remove all items in a set at once by using the clear method like this so here i'll remove this code and i'll say animals.clear and when i press run then you can see that animals is now an empty set let's see how we can find if an item is in the set or not similar to other compound data types we can check if an item is in a set or not by using the in keyword let's see an example so here i'll remove this old code and i'll say print tiger in animals when i press run then i get true because indeed tiger is present in the set of animals if you change tiger to something like ferret and run it so i'll say ferret when i press run then this time i get false because ferret is not present in the set of animals it is also possible to loop through items of a set like other compound data types let's see an example here i have the same old set from before i'll remove this code and i'll say for animal in animals print animal when i press run then you must have guessed the output by now all the animals are printed one by one however the order in which these items are printed is random let's take a look at python set operations now as i mentioned before the way sets work in python is similar to how sets work in mathematics in this video we will cover two set operations union and intersection suppose we have two sets domestic animals and wild animals like this the union of these two sets is a set of all items in both domestic animals and wild animals to find the union of sets we can either use the union method or use the pipe symbol let's see an example so here on my compiler i'll remove the whole code and i'll say domestic animals equals dog cat and elephant and then i'll see why animals equals lion tiger and of course elephant again now i can create the union of these sets by saying animals equals domestic underscore animals dot union wild underscore animals let me print the animals variable now i'll say print animals when i press run then i get a set containing animals from both the domestic animal set and the wild animal set the order of sets doesn't matter here i can reverse this order and i can say wild underscore animals dot union domestic underscore animals and when i press run i get the same output as i mentioned before we can also use the pipe symbol to find the union so here i could have also written wild animals pipe domestic animals when i press run i get the same output let's talk about intersection of sets suppose we have two sets domestic animals and wild animals like before the intersection of these two sets is a set of items that are common in both domestic animals and wild animals to find the intersection of sets we can either use the intersection method or use the ampersand operator let's see an example so i have the same set of domestic animals and wild animals from before and here instead of saying union i'll say wild animals dot intersection domestic animals now when i press run then i get a set containing elephant because elephant is the common element between domestic animals and wild animals now let's use the ampersand operator to find the intersection this time i'll say wild animals ampersand domestic animals and when i press run i get the same output as before you can find more information about different set operations and methods in our website programmers.com i'll include the link in the description below at this point we have covered all the basics of python sets before we end this video here's a task for you can you guess the output of this program i'll give you a couple of seconds to pause the video as always you'll find the answer to this question in our github repository i'll also include the link in the description below now let's recap what we learnt in this video a set is a collection of unordered items since the items do not have any order they also do not have any indexes a set also cannot contain duplicate items and all items of a set must be immutable although the items of a set need to be mutable sets themselves are mutable and we can add and remove items from a set sets in python are similar to sets in mathematics that's why we can perform operations like union and intersection of sets that's it for this video i hope you learned something if you're just watching the video without writing any code i highly encourage you to try the programs in this video on your own the only way you can be a good programmer is by trying by the way you can find all the programs from this video on github i have provided the link in the description below feel free to copy the programs and edit them as you please and if you have any questions and feedback use the comments section below in the next video we will learn more about the range function in detail which makes it easier to work with sequences of numbers join me in this video series and let's explore the exciting world of programming together if you like this video hit the like button now and also don't forget to subscribe to our channel and ring that bell icon so that you don't miss the next video thanks for watching and i'll see you in the next one happy programming