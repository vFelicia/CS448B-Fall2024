what's up guys i'm puny from programmers and welcome back to this series on javascript in this video we will learn about functions how we can create them and why they are used in programming so let's get started in programming a function is a block of code that performs a specific task functions help us to divide a complex program into smaller tasks which make our program easy to understand and reusable suppose you need to create a program that draws a circle and rectangle of different colors based on user input now instead of creating one big chunk of statements to create this program we can create three different functions to solve this a function to draw a circle a function to draw a rectangle and another function to color the circle or rectangle doing so helps us focus on the specific task one problem at a time now that you know why functions are used let's learn to create a function in javascript first we need to declare a function so a function is declared by the keyword function and then the name of the function so let me just call it function name followed by parenthesis and inside curly braces we have the function body now this structure must be familiar if you have already done while loops and for loops now that we know about the structure of a function let's directly go to an example but before that i want to remind you that the same rules of naming of variables applies to the naming of functions as well let's go to the example i'll remove this old code and i will call a function or create a function called greet now inside the greet function i want to print hello there so i'll say console.log hello there let me run this program you must have noticed that we didn't get anything this is because in order to run a function we need to call the function to call the function we use the function name with parenthesis so outside the function i will say greet and parentheses and my trusty semicolon let me run this code and you can see that this time i got hello there let's see how this works when we call the function the control of the program goes to the inside of the function and the statements are executed in this case we only have console.hello there and that's what got executed and that's why we got hello there in the output when this task is completed or we reach the end of the function then the control of the program goes back to the function call and the statements after that are executed in this case there are no more statements and that's why we ended at hello there we can verify this by adding a print statement after the function call so here i'll say console.log and then after function call now let me run the program and you can see that after hello there i got after function call because after the control of the program got transferred back to the greet function the console log was executed the useful thing about functions is that once we create a function we can call it any number of times let me call the greed function two more times to show you so i'll remove this code and i'll say greet and greet one more time now when i run this you must have guessed it by now i will get hello there three times so if we need to perform any repetitive task we can wrap the codes inside a function and use the function any number of times we just need to call the function again and again now little tip for you it's better to write a descriptive name for your function for example if a function is used to greet a user you can name the function greet or say hello if you're enjoying this video please also check out program is pro where we provide tutorials along with quizzes and challenges which will help you practice and test your learning in real time also the course includes projects to give you an awesome experience of how programming works in the real world and for our youtube subscribers we are giving 50 off on the yearly plan sign up by scanning this qr code or use the link in the video description to claim your discount in the past example we've created a function that simply displays a message hello there however that's kind of boring we can create a function that can accept some value for example instead of printing hello there we might want our function to accept our name and print our name let me show you how we can do that i'll use the previous code and inside the parentheses first let me remove this extra to greets and in the function definition inside the parenthesis i will add name now i can use the name parameter inside the function as a variable so instead of hello there let me say hello plus name now let me run this program when i press run oops i got hello undefined this is because we have defined the function to accept a parameter name however while calling the function we haven't passed any values so the function uses the default value of name which is undefined in this case we need to pass a value during the function call so when i call the function let me simply pass the string jude to the function now this value we passed will be assigned to the argument name when the function is called this time when i run the code you can see that i got hello jude now i can call the greet function again with another argument let's say john and you must have guessed the output by now when i press run i get hello jude and hello john my program is now much more dynamic than before it's possible to pass multiple arguments to a function as per our needs if we need to pass multiple arguments to a function we can separate them by commas let me create a new function that will add two numbers i'll create a function called add numbers and inside the parenthesis i'll write n1 comma n2 now inside the body of the function i can create a result variable that will store the sum of n1 and n2 and let me print the result so i can say console.log the sum is and i can say result now i'll create two variables number one and number two with values say number one equals let me find a random number let's say 6.6 and number two i will say 2.5 for example and finally i need to call the function by passing the arguments number one and number two so oops this should be number two now i'll call the function add numbers and the parameters will be number one number two in this program we are passing variables number one and number two as function arguments in such a case the value of these variables will be assigned to the parameters of the function n1 and n2 respectively so inside the function n1 will be 6.6 and n2 will be 2.5 let me run this code and you can see that i got 9.1 which is in fact the sum of 6.6 and 2.5 in the previous program we added two numbers and printed the result inside the function however instead of printing the result it will make more sense if you can get back the sum from the function and use it somewhere else in a program we can achieve this by using a return statement let me show you i'll remove this print statement and instead of console.log let me say return result when we return a value it comes back to the function call and we can assign this return value to a variable like this so i'll say let let me declare a variable called output and i can say let output equals add numbers number one and number two here the output variable will store whatever is returned from the add numbers function call and in this case since it is the result variable which has n1 plus n2 i will get the sum of 6.6 and 2.5 inside the output variable so let me verify this by printing the output i can say console.log the sum is and print the output variable now when i press run you can see that i got the same result as before but this code is more dynamic because i can say let output 1 equals add numbers and i can give this 43 and 56 and now i can say the sum the second oops the second sum is and i can say output 2 or output 1 when i press run as you can see the i got the two sums stored in two different variables because i was returning the value instead of printing the value inside the function now there's something very interesting about the return statement as soon as a return statement is encountered inside a function the control of the program immediately moves to the place from where the function is called so in a way the return statement also terminates the function any statement after return are ignored by the function we can verify this by adding a print statement after the return statement so here i'll say console.log and i can say after return statement now let me run the code to verify and you can see that i did not get after return statement printed anywhere that's because the return immediately terminated the function as soon as it was encountered okay guys we need a support to keep these kinds of content free for all users youtube really likes engagement on the video so leave a comment below press that like button and hit subscribe if you haven't already let's get the engagement score high up so that more people can discover and enjoy these courses at this point we've covered all the basics of how to create your own function these functions we create ourselves are known as user defined functions now there's another type of function that i've not told you about and they are called builtin functions this kind of function is already defined by the language and we can directly use them in our program for example sqrt is a builtin function that computes the square root of a number we can directly use this function in our program let me show you how i'll start by removing my old code and then let me create a variable say num and assign it a value of 9. now i'll use the sqrt function the sqrt function is defined inside the math object so instead of just sqrt i'll have to say math dot sqrt and i can pass any value or variable so in this case i'll pass num now because the square root is returned i can say let square root equals math.sqrt num and let me print it so i can say console.log the square root of say num is square root and now when i press run you must have noticed that we did not have to worry about the definition of this function sqrt we can simply pass a number and expect to get the square root back apart from sqrt there are numerous builtin functions that we can directly use in our program actually we've already been using some of them without even realizing it remember console.log that's also a builtin function if you're interested you can find all the builtin functions available in javascript on the programmings.com website i'll leave the link in the description below in 2015 a new version of javascript called es6 was launched it introduced a new way of creating a function called arrow functions this arrow function is equivalent to our regular function as you can see arrow functions allow us to write functions quickly and more concisely in the next video we will learn about arrow functions in much more detail now to practice what we have learnt here is a programming task for you can you create a program that can tell us if someone is eligible to vote for this create a function can vote that accepts the age of a person if the age is 18 or above 18 then return true or false call the function for ages 17 20 and 65 to verify if your function is working correctly or not you'll find the answer to this question in our github repository also if you want to revise these concepts you can find all these programs in our github repository as well i'll leave the link in the video description below now that we have reached the end of this video it's time for the programming quiz what will be the output of the following code comment answer below and happy programming you