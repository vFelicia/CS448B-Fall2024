virtual environments allow us to manage separate and isolated python environments for each of our python projects in this video you will learn what that actually means you will also learn to create and manage your own virtual environments for your python projects using a builtin module named virtual and v so let's get started before we learn to create virtual environments let's first understand what virtual environments are and why they are needed in the first place when you start working on larger python projects you'll have to use different packages and modules that don't come preinstalled with the standard python library these packages and modules are constantly being updated with every new release let's suppose that you worked on a web scraping project that uses a library called requests of specifically the version 1.1.0 after a few months you then worked on another project that uses a different version of request say 2.0.0 now if you have to go back to working on your first project you will either need to change the entire code base of the project to make it compatible with request version 2.0.0 or you'll have to uninstall version 2.0.0 and reinstall the old version 1.1.0 more often that not your python projects will use different versions of many such packages or even an entirely different version of python that won't be compatible with one another virtual environments allow us to solve this problem instead of using a single and global python installation for all our projects we can create different virtual environments for different projects let's now understand what virtual environments are virtual environments allow us to create isolated environments for each of our python projects each virtual environment will be independent of one another due to this they can have different python versions and their own versions of packages and modules to resolve our earlier problem of conflicting versions of the request library we can have separate virtual environments for each project each of these virtual environments can then have their own separate packages of different versions in order to create a virtual environment we can use a builtin module named virtual env let's look at how we can create virtual environments i'll first create a directory called project1 and i'll open the terminal in this workspace on my code editor i've already created a directory called project one and i've opened a terminal in this folder by default we are using the global python environment let me show you what i mean first let me clean this up so let me hide this and this and now on my terminal if i say which python we can see that python from the global installation is currently being used now i'll also pip list so let me say p i p l i s t and we can see that my global python environment currently has these libraries and modules installed now let's create an isolated python environment so to do that first let me clear up my terminal to create an isolated python environment i can say python dash m this dash m will allow me to run a specific module directly and then the module name which is virtual env then the next parameter is the name for our virtual environment let me call it venv for now and now if i press enter then my new virtual environment has been created when i list the contents of project one now you can see that there's a folder called venv in this folder this vnb directory contains minimal python setup and executables for our python project by the way if you're finding this video useful a sub to the channel would be much appreciated before moving to the next section of the video the program is team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easier to understand a builtin interpreter so that you can run python on your phone quizzes and many more features the app is available on both ios and android the links are in the video description below now that we have created a virtual environment let's activate it i'll go to my terminal and i'll say source v env which is the folder that was created slash bin slash activate if you're using a windows machine the command to activate a virtual environment is slightly different you can see it on the screen now when i press enter here you can see that there's this vanv in brackets in front of this metadata which means that the virtual and vanb has been activated let me now run the commands i previously ran before i'll say let me first clear the terminal i'll say which python here you can see that instead of the global python we are using python which is inside our virtual environment if i say pip list then you can see that i see a smaller list of packages which are inside this virtual environment none of the global packages and modules are available in this virtual environment let me now install a specific version of the request library in this virtual environment so i'll say pip install requests equals equals 1.1.0 now when i press enter it says successfully install requests this version of request is now available only for this virtual environment it will not have any effect on our global python setup in order to deactivate a virtual environment we can simply use the deactivate command on our terminal you can see that currently the venv virtual environment is activated let me deactivate this virtual environment before i do that let me quickly upgrade my pip by copying the command here oops something went wrong okay i did not copy it correctly let's see let me paste this here and i have the latest version of pip now i'll say d activate and you can see that the v env in front is gone now if i do which python then again i am back to using the global installation of python let me also do pip list and you can see that i ca i am back to getting the global list of python modules and libraries let me set up one more virtual environment so i'll go back one folder and i can say mkdir project 2 cd project 2 now i am inside this project 2 folder now i'll say python dash m virtual env v a and v just like before this will create another new virtual environment in this directory now i'll activate it so to do that i'll say source e v a n v slash bin slash activate you can see there's v n v inside brackets here i can install a different version of requests so let me say pip install request equals equals 2.25.0 this will install that specific version of requests inside this virtual env now let me do pip list so pip list now you can see that the specific version of request 2.25.0 is installed in this virtual environment for this project again this won't affect our previous virtual environment in any way now that we have learned about virtual environments i highly encourage you to use separate virtual environments for each of your python projects this will prove very useful once you start working on a number of projects with different requirements you can then put all these requirements in a requirements file this requirements file can then be used to set up the same type of virtual environment on any machine if you want to remove a virtual environment you can just delete the folder containing the virtual environment that's it for this video if you want to revise these concepts you can find all these programs in our github repository i'll also put this link in the video description and if you like this video hit that like button and subscribe to the channel and i'll see you in the next one happy programming