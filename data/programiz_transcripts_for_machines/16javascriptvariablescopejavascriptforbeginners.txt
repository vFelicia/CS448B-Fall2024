what's up guys i'm pony from programmers and welcome back to this series on javascript in this video we will learn about variable scope more specifically we will learn about the local and global scope so let's get started in computer programming variable scope defines availability of a variable in different regions of the program for example suppose we create a variable let number equals 5. now this variable is available anywhere in our program we can use it inside the console log like this so i can say console.log number and when i press run i get 5. as you can see the variable is accessible here the number variable is an example of a global variable in javascript a variable has two types of scope local scope and global scope let's learn about the local scope first to understand the working of local scope let's see an example of a function so i'll remove this old code and let me quickly create an add numbers function so n1 n2 and let result equals i want to add n1 and n2 and i want to for now console log the result now let me call the add numbers function with 4 and 9 i'll quickly press run and check the output and i can see that it's working now let me print the result variable outside of the function so here i'll try to say console.log and result and let's see what happens when i press run you can see that i get a reference error result is not defined this is because the result variable is created inside of the function add numbers on line 2 and that's why it has a local scope that means the result variable can only be used inside the add numbers function and not outside of it because it has no existence outside of the function now if i create a result variable outside of the function the print statement will take that variable value and not the one inside the function so let me say let result equals say random number like one two three and now when i press run this time i didn't get any error because here i've created a result variable with the value one two three now when i call the add numbers function the control goes to the function and again inside the scope the result local variable is created which is different from this result global variable now inside the function when i do console.log it gives me the sum of n1 and n2 which is 13 after that the control goes back to the program and when i do console.log result this result actually points to the global variable result which i have created here and that's what gets printed here if you're enjoying this video please also check out programs pro where we provide tutorials along with quizzes and challenges which will help you practice and test your learning in real time also the course includes projects to give you an awesome experience of how programming works in the real world and for our youtube subscribers we are giving 50 off on the yearly plan sign up by scanning this qr code or use the link in the video description to claim your discount as we saw earlier local variables cannot be accessed outside of a function on my screen i have code that we have seen before we know that this code will generate an error because result is a local variable and i am trying to access it in the global scope we can solve this problem by making the result variable global for this we can declare the result variable outside of the function so outside of the function i'll say let result and i'll remove this let and now if i run this code you can see that my code works this is because inside the function when i say result equals n1 plus n2 it changes the value of the global variable and the console log2 because it cannot find any local variable of the name result it looks in the global scope finds this variable and prints that value and after the function is over again console.log finds this global scope result variable and prints that once again that's why we have two 13s global variables are tricky because their values can be changed anywhere in the program i'll show you an example let me start by declaring a global variable message with the value hello so i can say let message equals hello now i'll create a function to change the value of the message to how are you so let me create change greeting and inside i'll say message equals how are you now to show that the value is indeed being changed let me print the value of the message variable before calling this change greeting function and after it so i'll say console.log message and then let me call the change greeting function and in the next line i can say console.log oops message again let me run this code and as you can see we get the output hello and how are you let's see what's happening in this code at first the value of the message variable is the string value hello then inside the change grading function we are reassigning its value to how are you when the first console log is reached this function hasn't been called yet and the message variable stores the value hello and that's what we get in the output now when the change greeting function is called inside this function i have changed the global value of the value of the global variable message to how are you and that's why when i called console log message again because now message contents how are you i get how are you here remember it's a good practice to avoid using global variables as much as you can because the value of a global variable can change in different areas in the program and it can introduce unknown results and create a lot of confusion okay guys we need your support to keep these kinds of content free for all users youtube really likes engagement on the video so leave a comment below press that like button and hit subscribe if you haven't already let's get the engagement score high up so that more people can discover and enjoy these courses besides global and local scope javascript also provides block scope the block scope restricts the variable to be accessed only inside a block let's see an example i'll go back to my previous code of adding two numbers so let me quickly create this time i'll use arrow functions which you have learned in the last lecture so n1 n2 and arrow and inside let me say let result equals n1 plus n2 and then i'll say console.log result then let me call add numbers with 4 and 9. so this was my previous code now i will create an if statement with the condition that if the result is greater than 10 i will create another variable let's say result one and i'll try to print that variable so inside this code what i'll say is if result greater than 10 then let result one equals positive and console.log result 1 to print it out now let me run this program as you can see the sum of the numbers is 13 which is obviously greater than 10 and the value of the result one variable which is positive is displayed on the screen now let me try to access the result1 variable outside of the if block so i'll try to say console.log result1 and press run and you can see that i get the same old error reference error result one is not defined block scope variables are very useful since they allow us to create temporary variables which we only need to define and use inside a block and that makes our logic much more cleaner now that we've reached the end of this video it's time for the programming quiz what is the output of this program comment answer below and if you want to revise this lesson you can find all the programs in our github repository i'll also put the link in the video description below happy programming you