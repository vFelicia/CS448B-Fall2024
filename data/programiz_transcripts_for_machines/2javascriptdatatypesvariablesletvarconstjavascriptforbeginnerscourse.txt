what's up guys welcome back to this series on javascript in this video we will learn about two different types of data text and numbers that are commonly used in programming we will first see how we can print these data then we will learn a concept called variables which allows us to store these data and work with them it's going to be an interesting video so let's get started let's talk about textual data first in programming texts are termed as strings strings represent the textual data and from now on when i say string remember that i am talking about text in javascript we use quotation marks to represent strings here i love javascript is a string similarly javascript is fun is also a string we can use either single quotes or double quotes to represent strings it doesn't really matter however we cannot mismatch codes like using double quotes at the beginning and single quotes at the end now let's see strings in javascript code i'm going to print strings using the console.log method so here on my compiler i'll say console.log i love javascript similarly on the next line i'll say console.log javascript is fun now let me run this code as you can see the text i love javascript and javascript is fun are printed to the screen in this program whatever is inside the codes either single or double is treated as a string but remember the code should be of the same type you cannot start the string with a double quote and end with a single code you also cannot start with a single quote and end with a double quote i'll show you when i try to run this program i get an error in 2015 a new version of javascript was introduced known as es6 it introduced a new way to denote strings using template literals template literals use the tick mark let's see how we can use tick marks in a code so i'll remove this old code and i'll say console dot log and then instead of single quote or double quote i'll use this tick and i can say i love javascript let me do the second line console.log tick javascript is fun now when i press the run button i get the same output as before that means both of these are valid strings also one quick reminder the semicolon at the end of statements in javascript is optional you can decide to use it or omit it however follow a consistent pattern throughout the project if you're using semicolons use them throughout the program if not don't use them in your program so here i can remove both semicolons and when i press run my code will still run another data type that is commonly used in javascript is the numeric data and there are two commonly used numeric data types in javascript integers and floats the difference between integer and float is that integer is a whole number and float is a decimal we can use the same console.log method to print integers and floats as well let's see an example quickly so i'll remove the old code and i'll say console.log 8. similarly in the next line i'll say console.log 80.5 and now when i press run you can see that 8 and 80.5 were printed on the screen notice that i have not used quotation marks with numbers this is because if you use quotations with number the number will actually be a string here i can surround these numbers with quotation marks and when i press run although i get the same visual output these are actually strings for javascript if you're enjoying this video please also check out programming pro where we provide tutorials along with quizzes and challenges which will help you practice and test your learning in real time also the course includes projects to give you an awesome experience of how programming works in the real world and for our youtube subscribers we are giving 50 off on the yearly plan sign up by scanning this qr code or use the link in the video description to claim your discount till now we learned about strings and numbers and how to print them in real case scenarios we may need to store and use this data in our program and not just print them to store data and use them later in our program we use something called variables before explaining more about variables let me first give you an example i'll remove this old code and i'll say let language equals javascript here we have used let to create a variable language and it has the string data javascript to store data in a variable we are using the equal operator or the assignment operator now instead of printing the string i can print the variable and get the string as output so here i'll say console.log and language semicolon now when i press run you can see that javascript got printed remember this when we print a variable inside console.log it shouldn't be enclosed inside the quotation marks because if we print the variable name inside the quotation marks it is printed as a string let me show you i will add quotation marks around this language variable and when i press run this time i got language which is the string language instead of javascript which is the value of the variable language we can also assign numeric data to variables in a similar way we assign strings to variables let's take a look i'll remove this old code and i'll say let number equals 5 and then let me try to print it so console.log number semicolon and now when i press run you can see that the variable number has the value 5. another way to declare variables is using the keyword var let me show you so let me remove this old code i'll say where name jack similarly on the next line let me print out the name so i'll say console.log name and when i press run then the code runs without any error in modern javascript we rarely use where to declare variables however some browsers might still use wire so don't get confused if you see var somewhere in the code remember that it is a variable declaration we will discuss the advantages of using let overwear in later videos we now know that variables are used to store data but what if we want to store different data in the variable don't worry you can simply assign new data to the variable let me show you an example so i'll remove this old code and i'll say let name equals punit which is my name and in the next line i'll say console.log name here the name variable stores the string data punit and that's why when i run the code i get punit as the output now i'll assign a new value to the name variable so in the next line i'll say name equals james and let me say console.log name again i'll run this code and as you can see i get punit and james as output let's see what's happened here initially the value of name was punit and that's why this line console.log name printed punit later we change the value of name to james and that's why when the code reached line 5 when we tried to print name since the latest value of the name variable was james we got james as the output as you can see we can change the value of a variable which is why they are called variables hope that makes sense so far we saw that we can assign data directly to a variable however we can also assign a value of one variable to another let me show you an example so let me remove this old code and i'll select name equals punit let surname equals jazodia which is my surname here i have created two variables name which has the value punit and surname which has the value jazodia as you can see both the variables have different values now i'll assign the surname variable to the name variable and print the name variable so here on line four i can say name equals surname and let me try to print the value of name let me run this code and you can see that we got jajudi as output this is because in this line the value of name is assigned the value of surname which is jojoda so far we have learnt about let and where to create variables however there is also another way to create a variable and that is using const const is generally used to create variables whose values remain constant throughout the program consider a scenario where we want to create a variable that stores the passport number of a citizen since we know the passport number will remain the same all the time we can create the variable as const let's see how we can create variables using const i'll remove this old code and i'll say const passport number equals 39983 which is just random number that came across my mind and let me print that first here we have created a variable using const when we run this code we get 39983 as output you can see that creating a variable using const look quite similar to creating the variable using let however if you create variables using const we cannot change its value later in the program let's see what happens if we try to change the value of this const variable let me assign a new value to the passport number variable or at least try to do that so on next line i'll say passport number equals 44325 oops it should be equals 44325 and let me try to print out the new value of the passport number now let's run this code and see what will be the output you can see that it says type error assignment to constant variable this is because once you declare a variable using const you cannot change it okay guys we need your support to keep this kind of content free for all users youtube really likes engagement on the video so leave a comment below press that like button and hit subscribe if you haven't already let's get the engagement score high up so that more people can discover and enjoy these courses so far we have been assigning some value to a variable however if we declare a variable and don't provide any value then what will be the value of the variable let's try an example here on my compiler i will create a variable name and simply print the variable without assigning any value so i'll say console.log name and let me run the code here we can see undefined as the output whenever we create a variable without any value the variable is assigned with the value undefined however if we create a variable using const we need to provide some value to it we cannot use the const to declare the variable without assigning any value to it let's see what happens if you try to do that so i'll remove this old code i'll say const name and let me try to print the value of name if i press run then javascript throws an error it says missing initializer in const declaration which means that this is not allowed we can also explicitly assign undefined to a variable let's see an example i'll remove this old code and i'll say let name equals punit so let me first try to print it out now in the next line i'll say name equals undefined and in the next line let me try to see if that was successful or not you can see that the undefined does not have quotation marks before and after it that means it's not a string when i press run you can see that i have been successful in assigning the value undefined to the variable name previously we saw examples of printing variables and strings separately however we can also print them together in a single line let's see an example i'll first create a variable named city and give it the value new york so i can say let city equals new york now i'll use console.log to print the string city and the variable city together so i can say console.log city plus city let me run the code and you can see that city new york was printed here the plus operator joins the string city with the value of the variable city which is new york and that's why we got city new york here another way to print the string and variable together is using template literals let me modify this code i'll remove the second console.log statement and add the new print statement with template literals so i'll say console.log city and then i can say dollar curly braces city and now when i press run let me put a semicolon here just for consistency when i press run i get the same value as before let's see what's happening in this code here both the string and variable are stored inside the tick mark and instead of using the plus sign i have enclosed the variable inside dollar and curly braces you can also see that my compilers color coding clearly separated this out to show that this is a variable let's see another example i'll remove this old code in fact i'll only remove the console log and i'll say let kfc locations equals 10 that means there's 10 kfcs in new york which i don't know is true or not it's just random guess so i'll say console.log city plus city plus comma plus k k fc locations plus kfc locations let me run this code and it says city new york kfc locations 10 i can make this format a bit better and let me add a comp space here as well okay when i press run you can see that city new york kfc locations 10 was printed here i have used plus to print strings and variables together let's use template literals now i'll start with the same code but i'll replace this console log with the new console.log statement using template string so here let me replace this with ticks at the end and in the beginning i don't need this i don't need this plus as well and since i want to print the value of the variable city i'll say dollar curly braces similarly i don't need all of this i can just put the comma and then kfc locations i want this so i will just put again because i want to print the value of the variable kfc locations here so i'll put this inside dollar and curly braces when i press run now i get the same output as before but you can see that this is much more readable than before in fact i just want to put a space here it's easy as this and when i press run the space is now here at this point we have covered all the basics of variables let's now talk about how to choose a good variable name if you have noticed in our programs we have used descriptive variable names like city and kfc locations we can give variable names like c instead of city and the program will still work and we can also use kl instead of kfc locations and the program will still work however it's hard to understand what c means just by looking at the code when we use good descriptive variable names it becomes easier to understand the code to make variable names descriptive we may need to use names having more than one word we will follow the camel case format while giving names to our variables in camel case the first word will be of small letters and the first letter of the second word will be of capital letter just like kfc locations in my code other examples of camel case variable names are first name second name my age total distance by the way there are some rules you need to know while creating a variable number one you cannot create variable names with space in between number two you cannot start variable names with numbers number three you cannot use certain words as variable names you cannot use if as a variable name because if is a keyword these keywords have special meaning in javascript and are part of the javascript syntax we will learn about these keywords as we progress through the course now that we've reached the end of the video it's time for the programming quiz the question for you is which of the following is a valid variable name number one switch number number two one switch number number three switch space number number four switch comment to answer below and if you want to revise these concepts you can find all the programs in our github repository i'll put the link in the video description below happy programming