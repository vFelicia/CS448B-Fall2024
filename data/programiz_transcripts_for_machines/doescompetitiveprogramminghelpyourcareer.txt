today i want to talk a little bit about uh competitive programming so competitive programming is uh an online sport where people from all across the world come together to solve challenging programming problems and there's multiple platforms where you can learn competitive programming so there's lead code there's code chef there's code forces hacker rank and in all of these platforms the good news is that it's not just for the advanced computer programmers so there's a spectrum of problems from easy to medium to hard and there is a level for everybody now why spend time uh you know competitive programming in the first place there's lots of advantages to being involved in competitive programming first one being obviously it makes you a better problem solver it makes you it increases your knowledge of data structures and algorithms it makes you a faster programmer and it will also help you land your next job or it might at least help you get through the first or second or you know first few rounds now why do i say that competitive programming helps you become a better problem solver well the problems in competitive programming have you know they're from beginner level to expert level so it challenges your mind to go from a problem that requires a certain level of complexity to a higher level of complexity and this progression from one problem to another to solving another problem to solving another problem keeps your you know uh your programming acts or your problem solving acts always sharp so it really keeps your mind engaged in solving new and new problems in competitive programming problems you need to engage your skills in not just programming but also your mathematical skills so in a particular problem you might use a data structure like a linked list or a queue from a programming site and you might also use permutations and combinations or in numeric analysis or any some other statistical method which comes from maths and stats so because you're using concepts from different fields and combining them it it's always a challenge to your mind and you're always engaged with learning something new so the areas of expertise that you need to gain and the variety of the problems from these areas of expertise makes competitive programming a vast landscape to learn from now another advantage of competitive programming is the mastery of data structures and algorithms that you will gain through competitive programming because without the solid knowledge of data structures you won't be able to solve competitive programming problems as a competitive programmer you will have to learn to manipulate common data structures like linked lists graphs trees and many more and not only just manipulate data structures you'll also sometimes have to make the choice of which data structure to use to solve a particular problem so this will give you the insight into you know how first number one being very comfortable manipulating data structures and number two also being used to using or choosing the right data structure for the problem now when you graduate to becoming a professional software developer then this skill can be very useful because you know more efficient algorithms and more efficient code means less resources that your program will consume and this in turn will lead to lots of cost savings when you know your code is deployed to a server in the cloud or when you are actually solving a business problem so this habit of always optimizing your solution and knowing and finding bottlenecks will definitely make you a better programmer in general now you you're a better problem solver and you also have a very good control of the data structures and algorithms that you need this will make you a faster programmer how how can i say that well imagine you're writing a piece of code and you know you already are habituated to similar patterns of code because of your competitive programming experience so instead of having to look for the solution every time online and looking for solutions that other people have posted you can just write the algorithm on your own because you've already experienced you know this similar pattern of problem before so this makes you a faster programmer and also because you will be exposing yourself to this timed environment where you have to solve problems within a certain time frame you will automatically learn to think quick and also type more quickly and also solve problems more quickly so it will definitely make you a faster programmer quick announcement guys we are doing a q a video next week so if you have any questions for the programming steam comment down below with the ask providence hashtag tomorrow is the last date for submission so hurry up back to the video another advantage of spending your time or investing your time in competitive programming is it will help you in job interviews because lots of companies in the world in fact most companies in the world still use data structures and algorithms and programming puzzles to rate developers on their skills if you are familiar to you know all these programming concepts and data structures and algorithms and the common patterns of that are used in competitive programming then you will be able to solve these problems with ease because many of these problems you'll have already seen before or if there's a problem that you have not seen before you will already have practiced a lot of similar problems so you will automatically be able to come up with the solution quicker so uh investing your time in competitive programming can definitely help you land your next job now let's talk a little bit about the other side of the story uh computer programming is great but if you want to really become a master competitive programmer then just you know practicing it is not enough you will also need to invest your time in learning high level mathematics now for some people it might feel like you know something that they don't want to get into or it's not worth their time personally i definitely recommend exploring a bit of competitive programming for all beginners because uh take it as a hobby you know like it might be some people watch netflix some people like playing video games so do it on the side explore it and learn some mathematics and statistics and data structures algorithms on the way now if you find that you know competitive programming is my calling i'm passionate about this then go to the next level invest more time in it otherwise you might find more interest in traditional software development or web development or mobile development so it's at the beginning of your career or when you're just learning programming i definitely suggest trying out competitive programming but again if you find that it does not interest you then you know there's no need to bang your head on the wall just because it does not interest you because i know a lot of programmers that have do have no background in competitive programming but then they are brilliant programmers so it's really a choice it's something that you should definitely explore and who knows you might be the next great competitive programmer stay curious and i'll see you in the next one you