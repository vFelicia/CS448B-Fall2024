as simple as date and time may seem in real life they can be challenging to implement in our code because we have to keep record of things such as different date and time formats different time zones and so on fortunately python provides a builtin date time module to simplify this task in this video we will use the datetime module to manipulate date and time in python with the help of examples so let's get started before we dig deeper into the daytime module let's first find the current local date so in my code editor i'll say import date time as dt and i can say current underscore date equals dt dot date dot today and let me print it so i'll say print current underscore date here i have used the today method of the date class of the datetime module which i have imported as dt to get the current local date let me open up my terminal and here i'll say python main dot pi and as you can see i get 27 january 2021 which is today's date in nepal similar to the date class the daytime module has many other useful classes to work with date and time some of the popular classes defined inside the date time module are the date class to work with date the time class to work with time and the date time class that is a combination of date and time classes now let's cover each of these classes in detail the date class of the datetime module is used to create date objects that can store year month and day let me create a date object so i'll go to my code editor and here i'll say import datetime as dt and in the next line i can say date1 equals date now the first parameter is the year so i'll say 20 21 and the second parameter is the month between 1 and 12 so let me say january similarly the third parameter is the day of the month so let me give an arbitrary number like 5 because this needs to be between 1 and 31 so let me close this and let me print what i get so print date 1 so i will save this code open up my terminal and say python main dot pi as you can see i got the date back as expected instead of creating date like this we can also get today's date as we have previously discussed let me get the current date again i'll remove this whole code and i'll say dt dot date dot today and let me print the date 1 again and when i run this code you can see that i get 27 january 2021 which is today's date or the date of this video recording we can also access the year month and day attribute separately let me show you how i'll remove this old code that prints the date and instead i'll say print year and let me print date one dot year similarly to print the month i'll say print month and here i'll say date one dot month and similarly to print the day i'll say print day date 1 dot d now let me save this file run the code and you can see that the year month and day have been printed separately the time class of the daytime module is used to create time objects that can store time of day like hours minutes seconds and micro seconds let me create a time object so i'll go to my code editor and i'll remove this old code i can say time one equals dt dot time now the time class takes integer arguments which are zero by default the first argument is the number of hours between 0 and 24 so here i'll say 10 the second argument is minutes from 0 to 60 so here i'll say 45 the third argument is seconds from 0 to 60 so let me say something arbitrary like 30 and the fourth argument is microseconds from 0 to 1 million so let me add in a number like 45667 i'll close this bracket let me print the time one to see what i get i'll save this file let me go to my terminal i'll say python main dot pi and as you can see i got a time object that stored the same time that i had sent in as arguments to the time class and if you need we can also access each individual attribute like the hour and minute separately let me show you how so here i'll say print hour is time one dot hour similarly minute is time one dot minute and second is time one dot second let me save this i'll go to my terminal python main dot pi and as you can see i got the hour minute and second separately let's also do micro seconds so i'll say print micro seconds and then i can say time one dot micro seconds if i save this file run this code it says time one dot oh it's micro second and run this file and as you can see i can also get the micro seconds the date times time class provides us some of the basic time functionalities however if you want more control and functionalities related to time we suggest you to use the time module we already have an article on it on our programming website in case you want to check it out the link will be in the video description the date time module has the date class to work with dates and the time class to work with time and if you need to work with both date and time at once the daytime module has also a datetime class the datetime class of the datetime module is used to create objects that contain all the information from a date object as well as a time object let me create a daytime object so i'll say import datetime as dt now let me create a daytime object so i'll say datetime underscore obj equals dot datetime the datetime class takes in all the integer arguments that are used by the date and the time class one after the other so here i can say 2021 which is the year 11 the month november 28th so 28th of november then i can say the time is 23 or 11 pm 55 so 11 55 pm and then 59 seconds so almost midnight let me close the bracket and i can say print date time underscore obj and let me see what i get so let me go to the terminal and say python main dot pi and as you can see i get a daytime object that represents the time based on the arguments that i passed here now if i only need to get the date from this daytime object i can always use the date method so let me hide the terminal and here i'll say print datetime underscore obj and i want to call the date method of this object so here let me save this file and i'll run python main dot pi and as you can see i got the date object separately similarly to get the time i can use the time method so here i'll say print date time underscore obj dot time let me save and run this code and as you can see i get the date time object then by using the date method i separate the date object and similarly by using the time method i separate the time object like with data and time objects we can also access individual attributes like year month and hour as we have previously discussed to get the current local date and time at once we can use the now method of the datetime object so i'll go to my code editor and i'll say import date time as dt now to get the current date time i can just say current underscore date time equals dt dot datetime.now now let me print this so i'll say print current underscore datetime and save this file go to my terminal say main.pie and as you can see i got the current date and time so it is 5 48 p.m on 27 january 2021 right now during the time of this recording by the way if you're finding these videos useful a sub to the channel would be much appreciated before moving to the next section of the video the programming team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easier to understand a builtin interpreter so that you can run python on your phone quizzes and many more features the app is available on both ios and android the links are in the video description a time delta object represents the difference between two dates or times let me show you what i mean to demonstrate this i will find out the time difference between now and the next new year let me go back to my code editor and say import date time as dt now let me get the current time so i'll say current underscore time equals dt dot datetime.now we already know this now the next new year is next underscore new underscore year equals dt dot date time and the integers arguments are 2022 and january is 1 and again 1st january is 1. now to calculate the time remaining i can say time underscore remaining equals next new year minus current underscore time let me print this and see what we get so i'll say print time remaining save this file go to my terminal run python main dot pi and as you can see it tells me that there are 330 days six hours nine minutes zero seconds and three three five five seven six micro seconds from now to the next new year now let me see what the type of the time remaining variable is so here i'll say print type time remaining and when i run this code you can see that it gives me class datetime.time delta that means the difference between two date times is a time delta object this time delta object can also be added to or subtracted from daytime objects to get new date time objects the strf time method returns a string representing date and time for the date time object we know that there are many formats to write the date and time depending on your location if you're in the us you probably use month day year format but if you're in the uk you will generally use the day month year format the strf time method allows us to display the date and time in a custom specific format let me show you what i mean i'll go to my text editor and i'll say import date time as dt let me get the current date time so i'll say dt dot date time dot now let me print the current date time so print current underscore date time i'll save this file go to my terminal and say python main.pi and as you can see this is the current date and time during the time of this recording in the standard format if i wanted to print the date in a different way i could convert this datetime object to a date string in a specific format let me show you how string underscore date equals current underscore datetime dot because i want to call the str f time method and inside this fta strf time method i'll pass an argument as percentage capital a comma percentage capital b space percentage d comma percentage capital y let me print this string underscore date i'll go to my terminal and say python mean dot pi and you can see wednesday comma january 27 comma 2021 is printed this date is now in a much more human readable format here i am taking the current underscore date time object and calling the strf time method on it to get the string in the date format here percentage a represents the weekday name that is wednesday similarly percentage b represents the month's full name which is january d represents the day of the month which is 27 since the time of this recording it's january 27th similarly percentage y is the year which is 2021. i could have also printed the date and time in a different format let me show you how that works so i'll remove the terminal and here let me change the format to something else i'll say percentage b space percentage dash d comma percentage i and percentage p now let me run this code so here i'll say python main dot pi and as you can see i have printed the same date in a different format here these are format codes that made it possible to transform our datetime object to a string in a certain format there are many such format codes available for us to use don't worry you don't need to memorize all these format codes you can visit our article on strf time to search among all the formatting directives as per your needs the link will be in the description below the strp time method is the opposite of the strf time method the sdrf time method converts datetime objects to strings whereas the strp time method converts strings to datetime objects let me show you what i mean and i'll say import datetime as dt then i can say date underscore string equals so let me pass in a date that looks like 21 june 2021 and then i can convert this to a date object by saying date underscore object equals dt dot date time dot str p time and the first argument is the date string so here i'll say date underscore string the second argument is as before the codes that represent the different parts of the date so i can say percentage d because 21 is the number of the day and then i can say percentage b comma similarly year in numeric format was percentage y and then end the code in the bracket now let me print what date object i get so let me say print date object and here i can say date underscore object let me go to my terminal say python main dot pi and as you can see i got the date object that i was looking for here i have passed both the string and the format in which the date is represented in the string as parameters to the strp time method of the datetime class of the datetime module and this gave me the datetime object as i said before percentage d represents the day of month similarly percentage b represents the month's name in full and percentage y represents the year it's also important for me to leave this comma and space here because it's the format that my date is in while using strp time the string and the format code must match exactly if the string and the format code don't match we will get the value error exception now that we know about strp time and strf time we can convert any date in any format to another for example if i have a date string in the uk format and need to convert it to the us format i can first convert the uk date string to a daytime object using the strp time and then convert this object back to a string in us format using strf time at this point we have covered all the basics of using the datetime module except one important topic handling time zones time zones can be especially tricky if you're working with them for the first time for example in nepal it's currently 6 05 pm which means it's 7 20 am in new york and 5 50 in india as this video is already long we will not cover this topic in this video if you want to learn how to handle time zone issues in python we suggest you to use the pi tz module it's the same module recommended by the official python documentation that's it for this video if you want to revise these concepts you can find all these programs in our github repository i'll also put this link in the video description and if you like this video hit that like button and subscribe to the channel and i'll see you in the next one happy programming you