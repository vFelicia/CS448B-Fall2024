what's up guys i'm kuni from programmers and welcome back to this series on programming with python in this video we will learn to take input from the user and store it in a variable let's get started in the last video we learned to create variables so that we can store data and use them later in the program let me give you an example quickly so i'll go to my compiler and i'll say name equals felix and i can say print name now when i run the code as expected felix is printed to the screen now if you're a skeptic like me you must be thinking this is pretty useless right in the real world we will typically ask the user what the name is instead of putting it ourselves let's see how we can do that to take input from the user we use python's input function so i'll replace this felix by the input function and this time when i press run then python waits for me to input something here i'll type felix as before and when i press enter then i get felix back let's try to understand what's happening here when i pressed enter then whatever i had typed that is the string felix is stored in the variable name and on line 2 when i print name then that the value of that variable name which is felix is printed back this program to take input from the user is working correctly however we haven't provided any clue to the user on what to enter let's change that as we are trying to ask the user for their name inside the input function i will type enter name and when i press run then this time python gives me a hint on what to enter so i'll say felix as before and when i press enter then this string felix is stored in the name variable and when i print the name variable it gives me back felix again before moving to the next section of the video i'd like to mention that the program is team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easy to understand a builtin interpreter so that you can run python on your phone quizzes and many more features the app is available on both ios and android the links are in the video description below now instead of a string let's try to take a numeric input from the user this time let me modify this program so i'll replace name by number and obviously replace the variable names as well and now when i press run then this time i'll enter number five as expected five is printed back to the screen it's that easy or is it well the input function takes the input in the string form when we enter 5 rather than the integer 5 the string 5 is stored in the number variable we are getting 5 without quotations because the print function always hides the enclosing quotations when we print a string we can know for sure it's a string rather than a number by using the type function the type function returns the type of a variable inside the print function i'll wrap the number variable by the type function and this time when i press the run button then it says enter a number and when i press 5 and press enter it says class str let's see what we get when we print the type of integers and floats i'll remove this code for now and i'll say number one equals five and here i'll say print type of number one let me create another variable number two and this time i'll say five five point five and i'll say print number two now when i press run then it says class int and class float here number one is an integer and number two is a floating point number that is why when i run the code you can see that we get class in first which is representation of the type of number one and we get class float second which represents the type of number two which is a floating point number let's get back to our original code of taking numeric input from the user we still haven't solved the problem of taking integer and float input from the user in fact it's not possible to take integer and float input using the input function however what we can do is convert the string to a number after we take the input in this code after i take input from the user i will add a line to convert the string to an integer so here i'll say number equals integer number and now when i press run then it says enter a number i'll enter something like 5 and it prints 5 but i have no way of knowing whether it is an integer or not so here i'll wrap this number by type and this time when i press run it says enter a number i enter 5 and it says class integer which verifies that number indeed is now an integer in our code instead of adding this extra line to convert the string to an integer you can also do something like this so i'll remove this code and i'll add wrap this input function by the in function in the first line itself now when i press run then as usual it says enter a number i'll enter 5 and the class it verifies that indeed the number variable is now an integer here we're taking input from the user converting it to an integer and then storing it in the number variable all at once we can also convert strings to floats we use the float function for that let me change this code and instead of integer i'll use the float function so here i'll replace the in function by the float function and when i press run then i can enter something like 5.5 and it says class float which means this input was converted to a float and that floating point number was stored in the number variable when we pass values we have taken from the user to int and float functions python tries to convert the data to its corresponding integers and floats in our programs we have converted the string 5 to an integer and the string 5.5 to a float these are numeric strings numbers in string format that's the reason it's possible to convert these strings to integers and floats however python cannot convert every string to numbers let's find out what will happen if we try to convert a nonnumeric string to a number so here i have the same code from before and this time i'll press run and when it says enter a number i'll enter a string like felix when i press run then python tells me that it could not convert string to float here python try to convert felix to a floating point number but obviously it couldn't which makes kind of sense there is no way for python to know what's the equivalent floating point number for this felix string before we end this video here is a recap of what we learned we use the input function to take input from the user we can make the input function more descriptive by passing a string to it the input function always takes the input in the string form but we can convert a string to an integer using the int function similarly we can convert a string to a float using the float function if we try to convert nonnumeric strings to integers and floats we will get an error that's it for this video i hope you learned something if you're just watching the video without writing any code i highly encourage you to try the programs in this video on your own the only way you can be a good programmer is by trying by the way you can find all the programs from this video on github i posted the link in the description below feel free to copy the programs and edit them as you please and if you have any questions and feedback use the comment section below join me in this video series and let's explore the exciting world of programming together in the next video we will learn about python comments and why they are used if you like this video hit the like button now and also don't forget to subscribe to our channel and ring that bell icon so that you don't miss the next video thanks for watching and i'll see you in the next one happy programming