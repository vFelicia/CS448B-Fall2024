what's up guys i'm punit from programmers and welcome back to this series on programming with javascript in this video we will learn to take input from the user and store it in a variable so let's get started before we learn to take user input let me create a simple program that prints the value stored in a variable as a refresher so i'll go to my code editor and let me write the code i can say something like const name equals let me use a string like juliet oops and then in the next line let me just say console.log name when i press run as you must have expected juliet is printed to the screen here we are assigning the string juliet to the name variable and using console.log to print the value of the name variable let me make the output a bit more friendly by adding hello in front of the name i can do that by adding the string hello inside the console log and adding a comma after that console.log can take any number of values and variables to print at the same time by separating them with commas let me run the code and i get a friendlier output hello juliet now rather than explicitly assigning the value to a variable like this we can also ask the user for the input and store it in a variable and the simplest way to do it in javascript is by using the prompt method let's see an example of this and remove this old code and i can say const name equals prompt enter your name and then in the next line just like before i can say console.log hello comma name now let me run this program and you can see that this time javascript is waiting for me to input something so let me type punit this value will be stored in the name variable when i press enter so let me do that i'll press enter and as you can see hello punit has been printed let me make this capital h i'll run it again enter a name punit and again i get the same output hello punit now let's see what happened here when i typed a text and hit enter the string i entered was assigned to the name variable then console.log method printed the variable and the hello string in front of it by the way in real word scenarios we rarely use prompt to take user input in fact prompt function actually isn't supposed to work like this on node.js the platform our online compiler uses to run the javascript code but i just wanted you to focus on the basics so i've hacked in some code in our online compiler to make this work so that you can learn the concepts easily we'll learn how to use a combination of javascript and html to accept input from the user through text input fields in later videos at this point i want to give you an important and useful piece of advice when taking input from the user give descriptive instructions in our code you must have noticed that we have said enter your name instead if you had written only name the user could be confused about what's happening in the program now let's try to take a numeric input from the user this time let me modify this program and instead of enter your name i'll say enter your age and then i can say something like hello your age is and then inside here i can say age now let me press run and this time it says enter your age so let me enter 31 and something is wrong here what went wrong is oh the variable is supposed to be age now i'll press run again it says enter age let me enter 31 again and this time my program is correct it says hello your age is 31. as you saw taking a number as input was really easy or is it well the prompt method takes the input in the string format when i enter 31 rather than the integer 31 the string 31 was stored in the age variable to confirm this we will use the type of operator the type of operator gives the data type of the variable so let's check i'll go to my code editor and i'll say console.log type of age here we have simply passed the age variable into the type of operator so that we can see what type of result i'm getting in the age variable now let me run the code it says enter your age let me press 31 again my age is not getting any lesser and you can see that the type of variable age is string let's see what the type of operator returns while using integers and floating point numbers let me remove this whole code and let me create some integers and floating point values so i can say const int value equals 5 console log type of int value similarly i can say const float value equals 5.5 and then i can say console.log type of float value so we are just doing some experimentation here now when i press run you can see that i get number for both in javascript both integer and floating point numbers are represented as number data type that's why we get number as a data type for both values if you're enjoying this video please also check out programs pro where we provide tutorials along with quizzes and challenges which will help you practice and test your learning in real time also the course includes projects to give you an awesome experience of how programming works in the real world and for our youtube subscribers we are giving 50 off on the yearly plan sign up by scanning this qr code or use the link in the video description to claim your discount now let's get back to our original problem of taking numeric input from the user so i'll quickly remove this old code and i'll go back to my old code so i'll say const age equals prompt enter your age and in the next line i had said console log let me just print age this time as we already saw all inputs from the user are of string type so how can we take the input from the user that is actually a number well in that case we can use the parseint method let's try this now to use the percent method we will wrap our prompt code inside the parseint method so here i can say parse int and parenthesis and i have to wrap the whole code of prompt let me put a semicolon here now let me also print the type of age again console.log type of age now let's run the code it says enter your age i'll press 31 and you can see that this time the type of variable age is 31 i mean to say number not 31 so it's a number not a string let's see what happened here first the prompt method got me the age in string format from the user then the parseint took that string and converted it into an integer and that's why the type of variable is was a number now let's take floating point input earlier we use the percent method to convert the input data from string to number the parsing method works fine with integer inputs but if we provide floating point input the parsing method will only take the integer value and omit the values after the decimal let me show that to you with an example i will create a program to take hide from the user and let's see what happens if we pass a decimal number to the power synth function so let me just modify this existing one i'll say enter your height and then this should be height this should also be height and this should also be high now when i press run it says enter your height so i can say something like 5.6 when i press enter then when i log console log back the height i get only 5.6 has disappeared this is because the value after the decimal was omitted by the percent function to solve this issue we can use the parse float method instead of parse int similar to parse int the pass float method also converts a string input into a number but in this case the number will be a floating point type let's see an example i'll modify this program and i'll wrap the prompt method with pass float instead of parse int so let me remove the sparse int and say pass float and then let me run the code to check if this time it works or not so when i press run i it says enter your height i say 5.6 and press enter and you can see that i get 5.6 back and the type of height variable is still number as we saw before okay guys we need your support to keep these kinds of content free for all users youtube really likes engagement on the video so leave a comment below press that like button and hit subscribe if you haven't already let's get the engagement score high up so that more people can discover and enjoy these courses when using percent and parse float one thing you should always remember is that input data must be numeric strings that is numbers in string format like 28 or 5.65 this is because javascript tries to convert the numeric string into its corresponding integers and float values however if the input data are nonnumeric strings like programmers and javascript we try to convert them to a number using either power sent or pass float then javascript doesn't know how to convert it because programmers and javascript don't have any numeric equivalents let's see an example i'll create a program to ask the user something and then i'll try to convert the input value to number using parse int and let's see what happens i'll go back to my code editor remove the old code let me say let name equals pass int prompt and i can say something like enter your name where i expect the value to be a string and then i can say console.log name now let me run this code this time it says enter a name so i can say something like punit and i get the output as nan which means not a number not a number represents that the string is not a valid number since i have entered punit which is obviously not a number i get not a number or nan as output now that we have reached the end of this video it's time for the programming quiz what is the type of the number variable in the following code comment your answer below and if you want to revise these concepts you can find all the programs in our github repository i'll put the link in the video description below happy programming you