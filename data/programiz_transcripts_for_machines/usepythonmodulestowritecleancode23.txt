let's talk about python modules a module is a file that contains python code that we can use in our program in this video we will learn why modules are used and how we can use them in our program then we will learn to create custom modules with the help of examples as we know there are several builtin functions like print input and sum that are readily available to us in addition to these functions python also has several functions that are defined inside a module which we can use after we import them let me give you an example to show you what i mean by this so i'll go to my code editor this time i am using the vs code code editor because i need to be working with multiple files and that feature is not in our online compiler yet so here in my code editor i'll create a new file called main dot pi and inside this file i'll say import math this will import the math module that comes when we install python this module contains many mathematical functions and constants let's use the square root function from this module this function is used to calculate the square root of a number so here i'll say number equals 25 result equals math dot sqrt number and then let me print the result now i'll save this file and to run it i have to say python main dot pi when i press enter then you can see that 5.0 which is the square root of 25 is printed now let's access the pi constraint defined inside this module in my code editor i'll say print math dot pi now let me save this file and run this code again and you can see that 3.141592 the value of pi is printed so once we import a module we can use everything inside it using the dot operator while importing a module we can also rename it to a different name as per our needs let me demonstrate this with an example in my code editor i'll add import math as m now we can access the math module and its definitions using m instead of math so here and here i need to replace math with m and i'll save this file and run this code again and as you can see my code still works because math is now imported as m by the way if you're finding this video useful i'd appreciate if you could sub to our channel when we import a module like in our previous examples everything in the module is available to us however if we only need to import a specific definition like a function or a constant we can use the from import statement let's try it out in my code editor i'll remove this whole code and here i'll say from math import sqrt now num equals sqrt 64 and now let me print the result num and i'll save this file and run this code and as you can see 8.0 which is the square root of 64 is printed here only the sqrt function is imported from the math module when we use this syntax instead of math.sqrt we need to directly use the sqrt function we can also import multiple definitions from the module in a single line using this syntax let me import the constant pi and the functions sqrt and sine from the math module so in my code editor i'll say from math import pi sine and sqrt and let me calculate the value of sine pi by 2 so i'll say value equals sine pi by 2 and let me print this value i'll save this file and run my main dot pi file and as you can see 1.0 which is the value of sine pi by 2 is printed we can also use this from import statement to import all definitions from a module like this so here instead of manually importing pi sine and sqrt i can also do from math import asterisk i'll save this file i'll clear the screen and then let me say python main dot pi when i press enter then you can see my code still works and sign sqrt and pi are still imported here astrid means import everything a side tip for you importing every definition name with the asterisk symbol is a bad programming practice and you should try to avoid it in a code the math module comes with many more handy functions and constraints we can list out all the things defined inside a module by using the dir function let's list out all the definitions of the math module so in my code editor i'll remove this old code and here i'll say import math and then i'll say print dir math i'll save this file and again run main dot pi as you can see there are many other mathematical trigonometric and logarithmic functions inside the math module by the way the math module comes when we install python and that's why we can import it directly there are many popular modules that are not natively available for us to use for example numpy is a popular package that is used for scientific computing to use numpy we must first install it similarly you might have heard about django it's a popular framework used for creating web applications it's also available only after we install it to keep this video short and to the point we will not cover about installing such modules here if you're interested you can find plenty of resources about it on the web before moving to the next section of the video the program is team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easier to understand a builtin interpreter so that you can run python on your phone quizzes and many more features the app is available on both ios and android the links are in the video description custom modules now let's learn about creating custom modules in python we can also create our own custom modules as per our needs this helps us to keep our code organized here we'll create a module named calculator that will contain functions to perform arithmetic operations so in my code editor i'll create a new file name calculator dot pi and inside calculator dot pi let me create four arithmetic functions so i'll say diff add a comma b this should return the sum of a and b similarly i'll say diff subtract a comma b this should return the difference of a minus b diff multiply a comma b this should return a multiplied by b and lastly diff divide a comma b and this should return a divided by b this file is in itself a module let's import this file from the main file so i'll go to the main file and here i'll say import calculator and let me use the functions using the dot operator as we previously discussed so here i'll say result 1 equals calculator dot add 2 comma 3 now let me print result 1 similarly result 2 equals calculator dot subtract 6 comma 3 here i'll say print result 2 similarly result 3 equals calculator dot multiply 10 comma 3 now let me print result 3 and finally result 4 equals calculator dot divide 6 comma three and let me print result four let me save this file and here i'll say python main dot pi now when i press enter then you can see that all these calculations were correctly done in our example we have only used functions and constraints from a module however a module may also contain classes or any other definitions from this very simple example we can already see how useful a module is it helps us in better code management and improves reusability of our code that's it for this video if you want to revise these concepts you can find all these programs in our github repository the link is in the description below and if you like this video hit the like button and subscribe to the channel and i'll see you in the next one happy programming you