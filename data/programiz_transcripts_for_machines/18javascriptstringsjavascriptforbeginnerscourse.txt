what's up guys i'm punit from programmers and welcome back to the series on javascript in this video we will learn about strings which represent textual data in javascript we've already used strings numerous times in our programs before usually for the purpose of printing now we will cover strings in depth from the very beginning so let's get started in javascript we create strings by enclosing characters inside quotations like this so on my code editor i'll say const text equals and inside quotes i'll say javascript is fun now let me print the text and verify that this is indeed a string by using type of text the text javascript is fun is inside quotation marks and that's why it's a string we have assigned it to the text variable now let me run this code and you can see that i get javascript is fun and the type of this text variable is a string instead of double quotes we can also use single quotes like this so i'll change this double quotes to single quotes and when i press run i get the same output as before now while you can use either a single quote or double quote try to be consistent within your code if you're going to use a single quote then use single quotes throughout the program and if you're going to use double quotes use that throughout the program also you cannot mismatch the quotes for example starting a string with a single quote and ending it with a double quote is not allowed let me give you an example so let me change this ending code to double quote and now when i press run you can see that i got an error the es6 version of javascript introduced a new way to denote strings using template literals template literals use the tick mark instead of quotation marks now let's see how we can use tick marks in our code i'll replace this single quote with take and obviously this ending double quote with tick as well when i press run you can see that it's a substitute for single or double quotes as well but this does not end here the tick mark can be used to include variables inside a string let me show you i'll remove this old code and i'll say const age equals 25 now i can say const text equals tick i am dollar age years old now let me say console log text and here we have used the tick marks to create the string and we have included the age variable inside the string notice that we have used the dollar sign followed by the variable name inside curly braces to include the variable value inside the string let me run this code and you can see that i got i am 25 years old the value 25 was obtained from the variable age now we know that text is a string but let's verify this again by checking its type so i'll say cons oops i'll say console.log type of text and press run and i've just verified that yes text is indeed a string if you're enjoying this video please also check out program is pro where we provide tutorials along with quizzes and challenges which will help you practice and test your learning in real time also the course includes projects to give you an awesome experience of how programming works in the real world and for our youtube subscribers we are giving 50 off on the yearly plan sign up by scanning this qr code or use the link in the video description to claim your discount a javascript string is a sequence of characters so we can also access each character of the string now one way to access string characters is by treating a string as an array suppose we have a string like this so const text equals hello to access its characters we can treat this string as an array and use array indexes to access each character you can see each character is associated with an index number now we can use this index number to access the corresponding character let's access each character one by one so i'll go back to my code editor and i'll write console.log and text and just like with an array inside square brackets i'll say zero here i've used zero because the array indexing starts from zero let me run this code as you can see i got h which is the first character of the string similarly to access the second character i can use the index one so instead of zero or let me not remove this i'll say console.log text one let me also print log text 2 and now when i press run you must have guessed the output by now i get the first character the second character and the third character in the string hello respectively we can also use the carat method to access each character of the string suppose we have the same string now let's use the carrot method to access the first second and third characters to access the first character i will need to say console log text dot care at a is capital always remember and this time instead of the square brackets i will use the small brackets or the regular parenthesis and 0. similarly to get the second character console.log text dot care at 1 and console.log text dot care at 2 let me press run and i should get the same output as before by now you must be very confident that if you know the index number you can always access the corresponding character at that index javascript provides a builtin property called length which is used to find the total number of characters present in a string let's see an example i'll remove this code and let me just say const result equals text dot length this time there's no parenthesis because this is a property we'll learn about that in detail later and then let me say console.log result now if i press run you can see that i got 5 which is the number of characters or the length of the string hello the length property is one of the most used properties of string so make sure you understand how it works okay guys we need your support to keep these kinds of content free for all users youtube really likes engagement on the video so leave a comment below press that like button and hit subscribe if you haven't already let's get the engagement score high up so that more people can discover and enjoy these courses in javascript strings are case sensitive that means capital hello and small case hello are two different strings and they are treated differently we can verify this by comparing the two strings using the strict equal to operator i'll first create two strings variables with the values capital case hello and small case hello so const str 1 equals uppercase hello and const str2 equals lowercase hello now i'll say console.log str1 triple equals to str2 and let me press run this time i get false even though both str1 and str2 were the word hello let me show you if this is small hello then when i press run this time i get true because both the content and the case are the same there may be a time when we have to use long strings in our program in such times in order to have some readability within our code it's better to display the strings in multiline on my code editor you can see that i have a message variable which contains a long string value now this will hinder the readability of the code it's better to display the string in multiline within the code so to use a multiline string we can use the backslash let me convert this into a multiline string using the backslash so i want a backslash here and let me put a backslash here and let me put a backslash here as well and you can see that my content is much more readable now let me console log this and now when i press run i get the same string and you can see that there are no new lines in the output that means the backslashes are only aesthetic to make sure that our long strings don't take up a lot of space and they are much more readable internally this is the same as the one without the slashes so if i remove the slashes i will get the same output as before now to practice what we've learned here's a programming task for you create a javascript string and find the first and last character of the string using the carat method and the length property you'll find the answer to this question in our github repository also if you want to revise these concepts you can find all these programs in our github repository as well i'll put the link in the video description below now that we've reached the end of this video it's time for the programming quiz what is the output of the following program comment answer below and happy programming