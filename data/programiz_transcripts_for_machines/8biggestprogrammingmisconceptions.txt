today i am going to talk about eight misconceptions about coding the number one misconception is that programmers need to be great at maths they need to have memorized all the mathematical formulae that's not true at all that might be true for some people you know working at google or facebook who are working on topnotch algorithms and optimizations but for a regular software developer the number one skill you need is actually problem solving not math if you have basic understanding of mathematics you can be a good programmer another misconception about programmers or coders is that they have all the syntax memorized and you know they do do it all at once and it just works that's not true at all i myself use a lot of google and i look at other people's code for reference and i also go to communities like stack overflow to find answers to many of the problems that i'm solving so it's not this you know this oneway street process of i know everything already and i'm just implementing it that's not true at all because program programming is such a creative skill that things are changing so fast that you're always learning new things and what you already know is never enough another big conception is that coders are antisocial movies are partly to blame for this because the typical hollywood movie will show a programmer in a hoodie and you know and in a dark room hacking into some network but that's not true at all programmers need to collaborate with other people they need to collaborate with clients they need to communicate otherwise you won't be able to build good software so this vision of uh programmers being antisocial people you know staying alone in a basement is completely untrue another popular misconception is that coders can fix hardware that's totally not true i'm constantly hounded by my relatives or my friends who tell me the printer isn't working or the fridge isn't working or i need to fix the laptop but you know as a programmer there's my speciality is software so i don't really know much about hardware and there's this feeling that you know if you don't fix other people's hardware then you're a terrible person when the reality could be that you don't really know about hardware and that's true for many software engineers or coders so yep that's another misconception that coders can also fix hardware people also seem to believe that coding is always about creating new things and you must constantly be building the next facebook or instagram that's one of the biggest misconceptions i personally like to solve daytoday problems that people face which are not very exciting which are not always sort of b2c where you know the end consumer is it goes out to millions of people i have built software that's used by two or three people and you know it helps them in their business and they are so grateful to to me and to to the technologies that enable their business to function better so it's not always about building the next big thing it's about solving people's problems the next big misconception is that you should stick to one field and one programming language which is completely untrue every programming language is suited to a different you know domain uh for example python is great for machine learning javascript is the great for almost everything nowadays but mostly for web development but you know you must be flexible sticking to one programming language and you know if the challenge comes if the software requires you to learn a different programming language saying no is a big problem for a coder so no you must not stick to one domain no you must not stick to one programming language you have to look at the problem and you have to find the programming language that is best suited to that problem otherwise you'll you'll end up building not so nice solutions another popular myth or misconception is that coding is for people in their 20s that's not true at all whether you are you know and in fact you go and look at the comments on our channel and there are a lot of people saying i'm 10 years old i'm learning programming from your website and your app and our videos um there are people who like older people who are into some other field who are learning how to code to explore this field so coding is not just for young people in the 20s it's for everyone now let me go to the biggest myth that people have that you need a university degree to learn coding coding is one of those fields that sort of i feel has outgrown the university concept because the field is growing so fast that even you know no matter how much you learn in university there's always so much to learn that's not true for uh some other fields like you wouldn't trust a medical doctor who hasn't been through college uh but you know selftaught coders are taking over the world and you can learn coding from boot camps you can learn coding from youtube tutorials you can take courses online so there's so many avenues and alternatives to a university degree if you want to enter into coding i also have some bonus misconceptions for you the number one bonus misconception is that coding is repetitive and it's boring i don't find coding boring at all it's a creative work and you know although sometimes you're doing repetitive tasks usually you're always exploring some new concept or some new idea and sometimes you're doing an old idea something you've done already like a login form or registration form but using a new library or a new using a new programming language so there's always something new to learn it's not repetitive at all another misconception is that coders are you know fat and unhealthy and they like to eat junk food which is not true at all in fact there are healthy people and unhealthy people in every profession and it's the same for programmers so uh pro or not all programmers are unhealthy or not all programmers eat junk food all day or not all programmers you know don't sleep at night that is something that that is uh sort of a result of pop culture but it's not true at all now there's also this misconception that class stoppers or those who do well in academics can become better programmers than the rest this is something that i personally am completely against this idea that people only people who are good at academics can become programmers the only thing that being good at academics shows is to a potential recruiter it might show that this person is willing to work hard and they have the discipline other than that there is no you know there's no hard and fast rule that someone who is not so good at or struggling at academics cannot be a good programmer sometimes some people just aren't cut out for that academic ladder and some people are and you know coding is beyond all that so yes uh you know i i'm not trying to say that don't work hard at university or college but you know you don't hit yourself on the head if you don't like what is being taught in your college and you prefer the more adventurous routes of doing projects on your own and all that that's really good make sure you pass though that's it for this video i hope i cleared some misconceptions about coding that you might have had or you must have seen in other people if you don't have a's in maths don't worry in fact i have a personal story to tell so of all the subjects in my undergraduate degree i have i don't have i have a's and b's i have d's in three subjects and those three subjects are math one math two and math three and i am here teaching programming not just you know being a software engineer myself i'm also teaching programming to the entire world so if you are if you feel that you're not good at and and again uh there's a difference between academic math and math that's that's useful in the real world so if you suck at academic math then there's no need to be demotivated but you need to be good at napkin mathematics and you know real world mathematics to be a good programmer so as long as you are passionate about problem solving nothing will stand in the way of you and the programming career stay curious and i'll see you in the next one