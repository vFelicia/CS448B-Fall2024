hey guys welcome back to this series on c programming in the last video we learned about pointer sims here we learned about working with memory addresses now we will learn to use pointers to work with arrays so let's get started we know that an array is the collection of similar type of data you can see the example on the screen here numbers is an array that stores five elements and if we want to access these arrow elements we can use the array index that is to access the first element we use number bracket 0. similarly to access the second and third element we use number bracket 1 and number bracket 2. in this way we can access each element of the added now let's try to access these elements using pointers but first let's try to access the memory address where these array elements are stored so here we have our array of numbers and we are printing the array elements using printf statement inside the for loop now let's print the address of each element using the ampersand operator let's modify this print statement i'll add here percent b and here comma ampersand numbers bracket i i have used percent p format specifier to print the memory address and also i have used here ampersand number square bracket i to print the memory address of the ith element now let me run this code as you can see we get the corresponding address of each elements now let's see something interesting for that i'll print the address of array without any array index so i'll use printf statement print f here array address percent p comma numbers now let me run this code here if you look into the output you will notice two things first the difference between two memory addresses is four this is because the array is of integer type and size is of int is 4 byte second the memory address of the first array element and the address of the array is the same this is because the address of array always points to the first element of the array also here we have used only the name of the array without the ampersand sign this is because in most context array names are by default converted to pointers and we can directly use the name of the array so from now on if i use add name remember it's the pointer similarly we can use number plus 1 to print the address of the second array element and we can use number plus 2 to print the address of third array element now let me show you that so what i'll do is i'll copy this and i'll paste it here and i'll modify this print statement to have a clear output so add a address of 1 backspace n and i'll change this to numbers then add an address of 3 here i'll add here backspace n and i'll change this to numbers plus 1 and i'll change this to array address of 5 and let's put this as it is now let me run this program as you can see this number gives the address of first element and numbers plus 1 gives the address of second element and numbers plus 2 gives the address of third element in this way numbers plus i gives the address of ith element so we can implement this exact logic in a loop so i'll modify this code first i'll remove this print statement and in this print statement i'll modify this ampersand numbers bracket i to number plus i so number plus i now let me run this code as you can see we get the desired output by the way do you want to take your programming journey to the next level watching tutorials is fine but it has one limitation it is hard to learn and practice together at the same time lucky for you we have recently launched programmies pro that provides tutorials along with quizzes and challenges which will help you practice and test your learning in real time also the course includes projects to give you an experience of how programming works in real world sign up now visit this link which is also available in the video description below in our last example we saw that for an array numbers numbers is a pointer that gives the array of the first element similarly numbers plus i gives the address of the ith element now we can use this pointer to access the array elements to access the first element we can use asterix number similarly to access the eighth element we can use asterix parenthesis numbers plus i let me show you you can see the code from our earlier program here numbers plus i gives the address of the ith element since i want to use the pointer to access the element i'll remove this number bracket i from here instead i'll write asterisks parenthesis numbers plus i so this gives us the ith element now let me run this code as you can see number plus i gives the address of the id element and astrix parenthesis number plus i gives the value present at that number plus i address in this way we are able to access the address and value of an array using pointers okay guys we need your support to keep these types of content free for all users youtube really likes engagement on the video so leave a comment below press that like button hit subscribe if you haven't already let's get the engagement score higher so that more people can discover and enjoy these courses just like accessing the ad elements we can also change our elements using pointers all we have to do is assign a new value to the address let me show you here i have the code from our earlier program i'll remove this for loop now suppose i want to change the value of first element to 2 so i can simply write here asterix numbers is equals to 2. here astrix number represent the first element and i have assigned a new value to it also let's change the last value to 11 from 9 so that our array includes only prime number so i'll write here astrix parenthesis numbers plus here 0 1 2 3 4. so numbers plus 4 is equals to 11. here asterisks parenthesis numbers plus 4 represents the last element and i have assigned a new value to this address now to verify the value i changed or not let me print the first and last value so i'll use print statement here first element is percent d backspace n comma asterisk number and another print statement here it prints the last element here last element colon percent d comma asterisk parentheses numbers plus 4. now let me run this code as you can see the value of first and last elements are changed now to revise what you have learned in this program here is a programming tags for you create a program to find the largest element of an array first create an array with elements 34 12 21 54 and 48 then assign the first element to the array to a largest variable this time you should use a pointer instead run a loop to iterate through each add element in each iteration of the loop compare the largest variable with each element of the array using a pointer and if the largest element is smaller than the array element assign the an element to the largest variable again using pointers finally print the largest variable you'll find the answer to this question in our github repository and also if you want to revise this concept all these programs will be there as well i'll put the link in the video description below now that we have reached the end of this video it's time for programming squeeze in an array int as is bracket 5 what does aces represent comment your answer below see you in the next video happy programming you