what's up guys i'm puneet from programmers and welcome back to this series on programming with javascript in this video we will learn javascript operators and how to use them with various data types such as strings and numbers we will specially look at arithmetic operators in javascript an operator is a symbol that is used to perform operations on values and variables and we have already used one operator many times in our program without even realizing it it's the assignment operator equal to it is used to assign the value in the right to the variable in the left here the punit string is assigned to the variable name there are also many other assignment operators but before we take a look at them let's talk about arithmetic operators first arithmetic operators are basic operators such as addition and subtraction that allow us to perform arithmetic operations here are the basic arithmetic operators that we use in javascript programming let me copy all the arithmetic operators in the code editor i'll remove this old code and paste these now i'll create a series of examples where i'll use these arithmetic operators one by one let's start with the addition operator that is represented by the plus symbol on my code editor i'll write const x equals eight similarly const y equals four and now i can say const result equals x plus y let me print the result variable i'll say const oops console.log result here the x variable contains the value 8 the y variable contains the value 4. we then use the plus operator to perform the addition operation and the result is stored in the result variable by the assignment operator equals let me run this code and you can see that i got 12 which is the sum of 8 and 4 as a result instead of storing the result in a variable we can simply print the value directly for example from the previous code i'll simply remove this line and on line 13 i can just say x plus y directly when i press run i get the same output as before we can also add values without using any variables we can do something like this so i'll remove these two lines and instead of console log x plus y i can just say 8 plus 4 inside and when i press run i get the same output as before let's now get back to our original code so let me undo some of the things i've done all right here we are adding two integer values we can also add integers and floating point values so i'll change this value from 8 to 8.5 and when i press run i get 12.5 that means i can combine integers and floating point values while adding so far we have been using the plus operator with numeric data where it simply adds two numbers however the plus operator can also be used with strings when used with strings the plus operator concatenates or joins two or more strings together let's see an example i'll first create two string variables so let me remove this old code i can say const text one equals javascript similarly const text two equals programming now let's use the plus operator with these two strings so i'll say console.log text1 plus text2 and now when i press run as you can see i get output as javascript and programming joined together now i want to include a space between the two strings for this i can simply add a space after the first string and now when i press run there is space between javascript and programming we can also join multiple strings using the plus operator let me show you so i'll remove this old code and i'll just say console.log javascript oops then plus then is then i can say fun here i'm joining three strings together let's run this code and as you can see the final output contains the three strings joined together you must have noticed that all strings are separated by space this is because i have added a space before is and a space before fun similar to the plus operator we use the minus operator to perform the subtraction operation let's see an example of subtraction i'll use the same program and simply replace plus with minus i have my old code from before now instead of plus i'll replace this with minus and now when i press run you can see that i get 4 as the output which is 8 minus four now to perform multiplication we use the asterisk symbol it is used as a multiplication operator let's see an example from the previous program i'll simply replace the minus symbol with an asterisk so instead of x minus 1 i'll say x s check y i'll run this code you must have guessed the output by now but it's 8 times 4 which is 32. similarly we can also perform division using the division operator the forward slash is used as a division operator now in the code i'll change the asterisk to forward slash you must have guessed the output again i press run and 8 divided by 4 is 2. in javascript you can also get the remainder after division for this we use the modulus operator the modulus operator simply performs division and returns the remainder after the division let's see an example here i'll change the division operator with the modulus operator and run the code so i can say x modulus y and when i press run i get 0 because when 8 is divided by 4 the remainder is 0. let me modify the program i'll replace value 8 with value 11 and when i press run i get the remainder 3 because 11 when divided by 4 has a remainder of 3. if you're enjoying this video please also check out programmers pro where we provide tutorials along with quizzes and challenges which will help you practice and test your learning in real time also the course includes projects to give you an awesome experience of how programming works in the real world and for our youtube subscribers we are giving 50 off on the yearly plan sign up by scanning this qr code or use the link in the video description to claim your discount now let's learn about the increment operator the increment operator is used to increase the value by one we use two plus signs as the increment operator let's see an example here i'll create a variable with value eight so let me remove this old code i can say let x equals eight and in the next line i'll say console.log plus plus x you can see that i have printed the variable with increment operator in front of it let's run this code as expected the plus plus sign increases the value by 1 and we get 9 as the output in this case we have used the increment operator before the variable x however you can also use it after the variable let me show you so i'll remove this and i'll add the plus plus after x you must be thinking what the output must be most of you must have guessed nine let's see if you're right or not when i press run i get eight instead of nine what's happening here well the increment operator when used after variable will first return its current value and then increase the value by 1. so here the value of x is printed first which is 8 and then it is increased to 9. we can verify this by printing the variable for the second time so after this i'll say console.log x and when i press run you can see first the value is 8 and then it is increased to 9. similarly we can also decrease the value by 1 using the decrement operator and we use 2 minus signs as the decrement operator let's see an example similar to the earlier examples i'll create a variable and print it using the decrement operator so let me remove this whole code and i can say console.log minus minus x when i press run as you must have expected i get seven as output here the value is decreased by one we can also use the decrement operator after the variable and same as the increment operator it returns the value and then increases the value by 1. when i run this code i get 8 just like before now to check if the value has been decreased or not we simply print the variable for the second time so i can say console.log x and when i press run i get 8 and then 7 that means the decrement operator did decrease the value by 1. similar to two plus operators we can also use two asterisks together the two asterisks operator together is known as the exponential operator it is used to compute the power of a number let's see it with an example so i'll remove this old code and i'll say const result equals x asterisk asterisk 2 and let me console log the result in this program the left side of double asterisk is the variable x which has the value 8 the right side represents the power to the value so this line can be read as 8 to the power of 2 or x to the power of 2. let's run this code as expected i get 64 which is 8 squared as the result so far we have been using a single operator in an expression however there might be a condition where we might have to use multiple operators in a single statement let's see this with an example so i'll remove this old code and i'll say const result equals 4 by 2 plus 3 times 5 minus 1 now i'll console log the result here i have used the division operator addition operator multiplication operator and subtraction operator together now the output of the program depends on the operator that will be executed first let's see the output first you can see that i get 16 as the output this is because the division operator is executed first then the multiplication is executed then the plus operator is executed and finally the minus operation is executed that means 4 by 2 is 2 3 times 5 is 15 so 2 plus 15 is 17 17 minus 1 is 16. you might be wondering why division is executed first well this is due to the concept called precedence and associativity operators with higher precedence are executed first and operators with lower precedence are executed last we will learn about all this in the later videos but before we move ahead one quick tip for you if you have multiple operators in a single line you should build a habit of using parenthesis to make it easier to understand the code for example i'll change the above code and i'll add some parentheses to make it clearer i can add parenthesis here similarly here and now you can see that the code looks much cleaner okay guys we need your support to keep these types of content free for all users youtube really likes engagement on the video so leave a comment below press that like button and hit subscribe if you haven't already let's get the engagement score high up so that more people can discover and enjoy our courses now let's use the operators that we learned in this video to create some interesting programs suppose you're a university student and you need to pay 4535 dollars as tuition fee for the next semester the college is giving a discount of 10 on the early payment of your tuition fee since it's a great offer you decided to make an early payment now can you find out how much money you have to pay i'll initialize a variable called initial fee and i'll put the value of 4535 into it then let me save the discount percent in a variable called discount percent and that's obviously 10 percent now i can say const discount amount equals discount percent divide by 100 times the initial fee now the total fee will obviously be or the fee that you pay after the discount will be the initial fee minus the discount amount oops it should be amount and now i can say console.log let me use the string interpolation so i'll say fee after discount is dollar basis total fee and now when i press run you can see that the fee after discount is 4081.50 let's see one more example suppose you go on a run every other day exercising is obviously good for health and you cover a distance of about five kilometers a day now you want to convert that distance from kilometers to miles and see how much distance you've covered in miles you could create a program like this so here i'll remove this old code first i'll start by storing the five kilometer value in the variable km distance so i can say const km distance equals five then we know that one kilometer is equal to zero point six two one three seven one miles so i'll store this conversion ratio in the conversion ratio variable i'll say const conversion ratio equals 0.621371 now to calculate the distance in miles we simply multiply the distance in kilometers with the conversion ratio and store the value in miles distance variable so i can say const miles distance equals km distance asterisk conversion ratio now when i print the my stations variable i should get the distance in miles so this time i'll use string concatenation i can say console.log u covered covered in space plus miles distance plus miles as you can see when i press run then the kilometers is converted to miles now to practice what we have learned here's a programming task for you create a program that converts degree celsius to fahrenheit the formula to convert celsius to fahrenheit is fahrenheit equals celsius times 1.8 plus 32 what you can do is store the value of celsius value in the celsius variable then use the formula fahrenheit equals celsius times 1.8 plus 32 to convert to fahrenheit and display the result you can find the code for this program in our github repository also if you want to revise the concept you can find all the programs in our github i will put the link in the description now that we have reached the end of the video it's time for the programming squares what is the output of the following code comment answer below happy programming you