what's up guys welcome back to this series and c programming in this video we'll learn about arrays in c so far we have been using single variables to store a single data now we will learn to store multiple data together inside a single variable using an array so let's get started an array is a collection of similar type of data before we learn about array in c let's first know why we need them suppose you need to store the a's of hundred people one way to solve this is to create hundreds of variables to store the a's of each individual however that will be a lengthy and tedious task instead what we can do is create a single array and store the a's of hundred people together you got that right now let's see how we can declare an array in c programming on your screen you can see the syntax for array declaration here data type means the type of data that will be stored inside the array for example if data type is in all the elements will be of in type arrow name is an identifier that will be used to identify the array and add size specifies the number of elements that can be stored inside the array let's see an example i'll type int because i want to store into the data and i'll call my array is and since i want to store the a's of 5 people i have written 5 inside the square bracket in the c programming we cannot change the size and the data type of an array once it is declared so now the data type of is will be int and it can only store 5 values now that we know how to create an array let's learn to store data in it i'll go back to my code editor here you can see the code from earlier i don't need the syntax anymore so i'll just remove this so now let's continue with this code similar to assigning values to a variable we use equal to operator to assign data to an array now i'll assign 5 values 21 29 25 32 and 17. these value inside the curly brackets are called array elements we can also omit the size of the array for that i'll remove this in this case the c compiler automatically determines the size of the array by counting the number of elements inside the curly bracket another thing we can do is assign less number of element than the declared length for example here i'll add five inside the square bracket and i'll remove these two elements from the curly bracket you can see the length of array is five however we are assigning only three values to this here the remaining two positions are filled with the default value in our case the fourth and fifth position will be zero now we know how to assign value to an array let's learn to access them but first let's learn about the array index in c programming each element of array is associated with a number this number specifies the position of an array element inside an array and is known as r index and array index starts with 0 so the first element of the array is present at index 0. similarly the second element is present at 1 and so on we use the array index to access our element let me show you here we have our array from our earlier program now let me complete this program so hash include stdio.h int int main and inside the curly bracket return zero this is the basic structure of c program so i'll cut this and put it here now to access an error element we use the add name and the array index inside the square bracket so to access the first element of this array we use is square bracket 0. let me use this and print the first element so percent d comma is square bracket with the index 0 and i'll run this as you can see 21 is printed on the screen similarly we can access second third fourth and fifth element by using array indices one two three and four respectively now what i'll do is i'll copy this and i'll paste it here and i'll change the index value from 0 to 1 2 3 and 4 and i'll run this here you can see all elements are accessed by the way if you are watching this there is a good chance you want to improve your skills in c programming lucky for you we have a mobile app that provides a wellstructured c programming course with certification at the end and you can use the app alongside the video to practice on the builtin compiler our course is free so download now by scanning this qr code or click the link in the video description earlier we learned to assign multiple values to an array during the declaration we can also assign values individually using the index number let's see how we can do that on your screen you can see the earlier code here we have assigned all five values during the declaration since i want to assign values individually i'll remove this assignment now i can assign values individually using the index number so to assign the first value i can write is square bracket inside the bracket zero index is equals to 21. similarly i can assign a second value at the index one so is inside the bracket 1 and i'll assign value 29 to this in this way each value can be assigned to a particular index so i'll continue on this i'll run this code as you can see each value is assigned to the array here this acts as a variable so we can take input from the user and assign to it let's see an example i'll remove these assignments now i'll ask the user for five input value so i'll use print statement and i'll ask the user to enter five input values and i'll use scanf to store the input values so scanf bracket inside quotation percent d comma ampersand is square bracket inside the bracket 0 index and scanf percent d comma ampersand is square bracket inside the bracket 1. here you can see i have used print statements to print the values now i'll run this code and i'll enter 21 29 25 32 and 17. as you can see the input values are now stored inside the array we can also change the value of an array element for this we can simply assign a new value to a particular array index let's see an example i'll use the same code from earlier here i'll remove these print statements now suppose i want to change this third value to 26 from 25 here i can simply assign a new value to the position 2 so i will do is square bracket inside the bracket 2 is equals to 26 and i'll print this so percent d comma is square bracket inside the bracket 2 and i'll run this you can see the value at index 2 is 26 okay guys we need your support to keep these types of content free for all users youtube really likes engagement on the video so leave a comment below press that like button and hit subscribe if you haven't already let's get the engagement score high up so that more people can discover and enjoy these courses in this example we have used five different scanf statement to take five input values of an array also we have used five different print statement to print values of the adding here instead of writing the same code again and again i can simply use a loop i can use one loop to take the input values and second loop to print the values i'll first add a for loop as we know array index starts from 0 so int i is equals to 0 so we have started our loop from i is equals to 0 and since the array can store 5 elements so i is less than 5 and we have this update expression that increases the value of i in each direction by 1. now inside the loop i'll add scan if statement and i'll use ampersand is with the square bracket inside the bracket we have i here you can see each input values is stored in a sequential index from 0 to 4. that's why inside the for loop we have used index i along with the is in the scanf statement in each iteration of the loop the value of i is increased by 1 and input value is stored sequentially now i can remove this message and these scanf statements similarly i can use for loop to print the r elements so for int i is equals to 0 i is less than 5 and now inside the for loop i'll use printf statement percent d comma is with the square bracket inside the bracket i and i'll remove these prints statements i'll run this program and i'll enter 21 11 14 16 and 17. here you can see we get the desired output let me show you something interesting in this code here i'll change the condition from i less than 5 to i less than 6 and i'll run this code and i'll enter 12 13 14 15 and 16. you can see a random number so what happens here well we have created the array to store only five elements now we can access array elements from index 0 to index 4 however our for loop runs from i is equals to 0 to 5 so when the value of i becomes 5 the element is square bracket 5 does not exist as a result we get an unexpected value sometimes we can also get an error due to this so we should never try to access element of an array outside of its bound or length now to revise what we have learned in this video here is a programming tags for you create a program that computes the average marks of a student for this create an array that stores the marks of 5 subject compute the total marks by adding all the marks divide the total marks by total number to the subject and print the average marks you can find the answer to this question in our github repository and also if you want to revise this concept all this program in this video will be present in there the link is in the video description below now that we have reached the end of this video it's time for programming squeeze which value will we get when we print norm square bracket 4 from the following array comment your answer below see you in the next video happy programming you