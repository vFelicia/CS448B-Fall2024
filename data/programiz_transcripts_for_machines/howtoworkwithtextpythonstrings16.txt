what's up guys i'm purity from programmers and welcome back to this series on python in the last video we learned about two sequences lists and tuples they allowed us to store and work with multiple items at once in this video we will learn about another sequence type strings which is a sequence of characters we have already used strings numerous times in our programs before usually for the purpose of printing now we will cover strings in depth from the very beginning so let's get started in python we create strings by enclosing characters inside quotations like this this hello there inside single quotations is a string we have assigned it to a variable named text and in the next line we have printed the text variable when i run it as expected hello there is printed instead of single quotes we can also use double quotes like this so i can say text equals double quote hello there and then double quote again when i run it again hello there is printed however we can't use mismatching quotations like this so i cannot say single quotation hello there double quotation if i press run then python tells me that there's an error we can also use triple single quotes or triple double quotes to create a string like this so i can say text equals double quote double quote double quote hello there and then again double three double quotes in the end now when i press run i get hello there like before this is usually used for creating a string that spans multiple lines let me add another line inside triple quotation marks so here i'll say hello there how are you doing now when i press run then i get hello there how are you doing on separate lines now suppose we want to create a string like this he said what's there this string contains both single quotes and double quotes i'll run this code and as you can see we get an error this is because python thinks this part inside quotation marks is the string and whatever is outside of that or following that is regular python code to fix this we can escape characters like quotations by using a backslash before it so here i can say he said backslash what's there and now when i press run then i get the correct output now that we know how we can create strings in python let's see how we can access characters from a string as mentioned before a string is a sequence of characters and these characters are in order so we can access individual characters of a string using indices just like with lists and tuples suppose we have a string like this the index of the first character p is 0 the index of the second character y is 1 the index of the third character t is 2 and so on let's access the first character p from the string to access the first character after the name of the string we need to type square brackets and inside it i will provide the index since we are trying to get the first character we need to use index 0. so here i'll say print text square bracket 0 and when i press run then i get p which is the first character in the string now let's try to get the fourth character from the string to get this character we need to use index three inside square brackets so here instead of zero i'll say three and when i press run then i get h which is the fourth character in python string before moving to the next section of the video i'd like to mention that the program is team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easy to understand a builtin interpreter so that you can run python on your phone quizzes and many more features the app is available on both ios and android the links are in the video description below python also supports negative indexing for all sequences including strings using a negative index makes it easier to access characters from the last the index of the last character in the string is 1 the index of the second last character is 2 and so on let's try negative indexing in action i have this program from our last example on my screen let me change the index to minus 1 so i'll say print text minus 1 and now when i press run and as you can see n which is the last character in the string is printed we can not only access a single character but we can also access a substring from the string using the slicing operator to get a portion of the string inside the square brackets i'll mention the start index colon then the end index so here i'll say give me text 1 colon 4 let me run the code here i get yth the thing you need to remember with slicing is that the first index is inclusive but the last index is exclusive that's why we got only yth and not o which is the fourth index now let me remove the start index from our code when i run it we get characters from start to the third index this is equivalent to saying text 0 4 when i run it i get the same output similarly if we do not mention the end index we get a string containing characters from the start index to the last character here i'll say give me all the characters from the second index up to the last and when i press run then i get t h o n that means start from the second index which is t and go to till the end strings in python are immutable and we cannot add or change characters of a string let's see what happens when we try to change characters of a string suppose i have the same text string we have been working with i'll try to modify the first character by saying text 0 equals small p and then let me try to print text here when i press run then python tells me there's a type error str object does not support item assignment this error message is telling us that we are trying to change characters of a string but it's not allowed however we can perform operations on strings without modifying the original string which we will see next strings are one of the most frequently used data types and we can perform various operations on them before we learn about different string methods let's see a couple of operations that we can perform with strings the first operation is string concatenation it means the joining of two strings into one to join two strings we can use the plus operator let me give you an example so here i'll say text one equals python and text 2 equals programming now i can say result equals text 1 plus text 2 and let me print the result here we have created a new string by joining text 1 and text 2 which is assigned to the result variable the important thing to note here is that we are not modifying python and we are not modifying programming we are actually creating a new string which is stored in the result variable let me run it and as you can see a new string called python programming is created and printed let me add a space between python and programming so that it looks a bit better so here i'll say text one plus space plus text two and now when i press run then you can see that there's a space in between we can also repeat a string a certain number of times very easily in python we use the asterisk operator for that so here i'll go back to my old code that says text equals python and then i can say new underscore text equals text asterisk 3 now when i print new underscore text and run the code then you can see python three times is printed python also has several string methods for common string tasks but before we check that let's see how we can iterate through a string the easiest way to iterate through characters of a string is by using a for loop let's take an example i'll go back to my old code that says text equals python then i'll say for character in text and inside the for loop i'll say print character when i run this code then you can see that each character is printed one by one this for loop iterates from the starting character p to the end character n in the first iteration the character variable holds p in the second iteration it holds y in the third iteration it holds t and so on and in each iteration we have printed the character variable this slope iterates six times because the size of the string python is six we can check this by using the len built in function it returns the length of any object in python so here i'll say print len text and now when i press run then then you can see that 6 is printed it's also pretty easy to check if a string is inside a string or not let me quickly give you an example so i'll delete this whole code and then i'll say print p in text now when i press run then since p is present in the word python i get true let's try something more interesting so instead of p i'll say y t h and when i press run then this time also i get true because y th is inside python now let me try something else i'll say o n t and when i press run this time i get false because o n t is not inside python in that order as i have mentioned before strings are probably the most frequently used data type to make working with strings easier python has numerous string methods readily available for us to use let's try some of the string methods now suppose i have a string like this i like python 3. let's say we want all characters in this string to be lower case now to do this we can use the lower method so here i can say result equals text dot lower and in the next line i'll say print result now when i press run then you can see i like python 3 with all characters in lowercase is stored in the result variable and printed similarly if you want all uppercase characters we can use the upper method so i'll replace lower with upper and when i press run then i get i like python 3 in uppercase now suppose we want to find the index of this python substring then we can use either find or index method i'll change this upper to find and inside it i'll mention what substring i want to find so here i'll say python and now when i press run i get 7 because 7 is the index of the first occurrence of python inside the string let's try one last example suppose we want to replace python 3 with java we can do that by using the replace method i'll use the replace method instead of find and inside it i need to pass two arguments the first argument is the substring we want to replace so i'll put python 3 so here i'll say text dot replace and then python 3 and in the second argument since we want to replace it with java i'll put java this code returns a new string with python 3 replaced with java i'll run the code and as you can see i like java is printed there are numerous other useful string methods in python you can find all the string methods their descriptions and working examples in our website programmings.com the link is in the video description before we end this video here's a little task for you can you guess the output of this program i'll give you a couple of seconds to pause the video as always you'll find the answer to this question in our github repository i'll also include this link in the description below we've covered a lot in this video let's have a quick recap of what we learned a string is a sequence of characters to create a string we use either single quotes or double quotes or triple quotes we can access the specified character from the string by using its index we can also get a substring from a string by using the slice notation since a string is a sequence we can iterate through characters of a string using a loop and finally we learned about different string methods that's it for this video i hope you learned something if you're just watching the video without writing any code i highly encourage you to try the programs in this video on your own the only way you can be a good programmer is by trying by the way you can find all the programs from this video on github i posted the link in the description below feel free to copy these programs and edit them as you please and if you have any questions and feedback use the comment section below in the next video we will learn about another collection data type dictionaries which allow us to store key value pairs join me in this video series and let's explore the exciting wall of programming together if you like this video hit the like button now and also don't forget to subscribe to our channel and ring that bell icon so that you don't miss the next video thanks for watching and i'll see you in the next one happy programming