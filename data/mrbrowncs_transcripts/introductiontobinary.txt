00:00 - hey this is an instruction to binary for
00:02 - binary numbering system and then we'll
00:03 - look at some units and the following
00:05 - videos are going to be about how data is
00:07 - represented in the computer in binary so
00:09 - different types of data we first need to
00:11 - go through it authoritative new more
00:12 - systems and library systems so in
00:14 - everyday life we use decimal also known
00:16 - as deanery in this topic so exact
00:19 - concentric decimal Deanery what we use
00:20 - normally so technically speaking it's a
00:22 - base ten numbering system and that means
00:25 - we have ten digits we use zero through
00:27 - two nine so 10 in total and the base
00:30 - comes from whenever an exponent the
00:32 - number have a bottom is the base and
00:34 - wherever's raised to is the exponent and
00:36 - if we go back to place value so we're
00:39 - talking in primary school maths here
00:41 - would you don't really think about
00:42 - because it's too basic but it is
00:44 - important for this topic for column
00:46 - names go up by a factor of 10 each time
00:49 - so really this is saying 10 - 0 ie 1
00:53 - anything to power 0 is 1 and then ten
00:55 - for one obviously is 10 and increases
00:57 - Soviets friend goes up 1 each type of
00:58 - base remains the same so what we're only
01:01 - saying is you've got 9 thousands here
01:02 - for hundreds 10 fives and six ones and
01:06 - add together you get a number so this is
01:09 - important when we talk about binary
01:10 - because binary is a base to system
01:13 - meaning it's got only two digits 0 1
01:17 - so although 2 used or stored in the
01:19 - computer is represented by binary digits
01:22 - shortened to bits so a bit is either 0
01:24 - or 1 and all inputs to computer have to
01:27 - be converted to binary to be used to be
01:29 - executed which we processed
01:30 - that's what following videos are all
01:32 - about representing data different types
01:33 - of data in binary so we are going to
01:35 - look at representing numbers of course
01:37 - but because binary does not only website
01:38 - numbers it represents all types of data
01:40 - images videos and so on it's better to
01:43 - think of 1 and 0 as symbols representing
01:45 - true or false and this allows us to do
01:47 - something called boolean algebra which
01:49 - we logic as we've talked about and is
01:52 - replicated in a computer with two
01:54 - different voltage levels so it can be on
01:56 - and off on being for one and off being
01:59 - for 0 being reality is probably more
02:00 - like two different voltage levels so 10
02:03 - volts and 5 volts and that's why we use
02:05 - binary with computers basically because
02:07 - it's so simple to do we could use base
02:08 - 10 refugees decimal but we need 10 or 10
02:11 - different voltage levels and
02:13 - sant√© logic we can do in binary which we
02:15 - can't do in decimal one of the reasons I
02:17 - was about to think of bits as symbols is
02:20 - because depending on the context one bit
02:22 - pattern ie a string of bits could
02:25 - represent a number character different
02:27 - types of data basically so this bit
02:29 - pattern just a long stream of bits 0 and
02:32 - ones this could be anything with no idea
02:35 - it could be a number it could be an
02:36 - instruction depending on the context is
02:38 - better to think of it not as numeric
02:41 - values but as things would represent
02:42 - other data so just to look at some units
02:45 - for binary so a way to express an amount
02:48 - of binary numbers so a bit is a
02:50 - fundamental unit you can't get in
02:51 - smaller than a bits it's either 0 or 1 a
02:53 - nibble is 4 bits so you've got to be
02:56 - careful in if you're thinking it in
02:59 - terms of a number you can get rid of the
03:00 - leading 0 but don't do that because
03:02 - again we're thinking of it in terms of
03:03 - symbol so 0 doesn't mean something so 4
03:05 - bits together then you have a byte which
03:08 - is Labor of a capital B was not really
03:09 - simple for nibble and this is 8 bits
03:11 - usually we're using by it's not really
03:13 - using nibbles but often we so you have a
03:17 - group of 8 bits here but often more
03:18 - leave a space in between each nibble for
03:21 - reasons we'll come on to do it to do
03:22 - effects Edessa more now it becomes more
03:24 - confusing than it should be
03:25 - really we have a kilobyte which is a
03:26 - lowercase K and then capital B and this
03:29 - is a thousand bytes then you have a
03:30 - megabyte which is a capital m and a
03:33 - capital B and is a thousand kilobytes so
03:35 - each got by files at each time but the
03:38 - issue is unfortunately there's two kind
03:42 - of ways of dealing with these larger
03:46 - sizes so whoever came up with these so
03:50 - kilo and mega come from physics right
03:52 - but physics deals with decimal not
03:54 - binary so physics is in terms of tens
03:57 - whereas binaries in terms of two's which
03:59 - makes things difficult so actually we're
04:03 - now we now should be using sizes called
04:06 - using binary prefixes so like a kibbeh
04:09 - byte as k ib is 1,024 bytes and this is
04:13 - correct you you never really get a
04:14 - thousand bytes due to where barney works
04:16 - you're always gonna have the closest
04:18 - number you're gonna have is a thousand
04:20 - 24 but I fortunately ever adapted this
04:22 - weirdo for computer science did this
04:23 - cool as those who trouble down the line
04:25 - by
04:26 - adopting the physics instead of defining
04:28 - it as it should be which 2024 and
04:30 - likewise there's an equivalent one for
04:32 - four megabytes I am maybe byte MIB which
04:36 - is a thousand twenty four QB bytes so a
04:39 - similar theme goes along you have a
04:41 - gigabyte which is a thousand megabytes
04:42 - you have a gig a gigabyte which is a
04:45 - thousand twenty four maybe bytes you
04:47 - have a terabyte thousand gigabytes at
04:49 - EBI by 2024 gigabytes and then you have
04:52 - a petabyte which is thousand terabytes
04:54 - and a peppy byte which is 1,024
04:56 - terabytes
04:57 - so the binary prefix is definitely sound
04:59 - pathetic but these are actually the
05:01 - correct ones basically so if you see
05:03 - megabyte you should assume it's a
05:04 - thousand kilobytes and not a thousand
05:09 - twenty four kilobytes so far people
05:11 - often get this wrong so all we do is
05:13 - grow by a thousand each time make sure
05:14 - you remember the order so it's the same
05:16 - order K mg TB is the same auditor for
05:20 - names and the symbols vary a little bit