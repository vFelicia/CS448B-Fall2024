in the topic on malicious software we looked at some of the the software that can be used to create problems in computer systems viruses worms and sometimes we mentioned denial of service attacks and we may have given a brief explanation to say that to do something such that our computer system is not available for the normal purposes so if you remember back to the original topic the first topic I think in the first week we listed some some services that we want to provide like confidentiality authentication integrity access control nonrepudiation and the sixth service was availability when we want to secure a computer system if we make that computer system available to our users a security attack would to make that computer system unavailable and such an attack denies the normal users use of the service so we call it a denial of service attack or breviary do s a DOS attack do s attack so what we're going to do in this topic is look at the basic concept of how denial of service attacks are performed to understand how they operate so that we can have techniques to try and prevent them or to minimize the chance that they can be successful to minimize the disruption of our network or computer system they can be quite complex attacked so we're going to use very start from very simple attacks which may no longer be used in practice today but the same concepts are used in real denial of service attacks and you hear about denial of service attacks in the news or in media because they performed a lot by attackers and they're generally easy to perform okay so it doesn't take much to start a denial of service attack so we'll see why that's the case but there are some measures that we can use to try and minimize the chance that they'll be successful so talk about what what they are and then we'll go through some classical denial of service service attacks some very basic ones and we'll use Linux and to demonstrate some I'll demonstrate some in the class and then you'll do a homework probably after the midterm where you do your own denial of service attack what do we mean by do s attack an action that prevents or impairs the authorized use of networks so we can't use the network systems the computer system or applications how does it do that by exhausting resources so the resources that we have available run out because of the attack so some action takes place such that my resource is like CPU my memory the network bandwidth or the disk runs out so it can no longer do the normal things on my computer or my network so a do s attack our tax resources so sometimes we can classify based upon what types of resources they attack what do they try to exhaust it could be network resources so if we're not looking at just a single computer but a network then an attacker can try to overload our network that may mean we have a link maybe we have a link that comes into our server web server or some other servers that we want others to access that link has some capacity maybe a hundred megabits per second is the capacity of that link if the attacker tries to send traffic onto that link that starts to approach that capacity 100 megabits per second then the normal data coming from the normal users may be delayed or may not be sent across that link so one aspect of exhausting the network resources is overloading the links sending so much so many packets such that the links cannot send all of them and that often happens if the link from an organization like your your organization your company your university that has a service on offer the link from the organization to their local Internet service provider is often slower than the links inside the internet service provider and we're trying to illustrate that with a diagram but the the bottleneck arises at the organization's link for example as IT is connected to an Internet service provider to get out outside Internet access let's say that link coming from our ISP that we pay for into si T is 100 megabits per second that's the capacity of our link but within the ISPs network they probably have a much higher capacity because they need to support multiple users so if you think of traffic coming into si si T then the bottleneck link may often be that one coming into si T that 100 megabit per second leap so if that gets overloaded that link that is it's sending all the traffic from an attacker then the traffic of our normal users will not get sent through or be delayed significantly and if if there are many packets sent in and a link gets overloaded what happens eventually packets start to get dropped my capacity is 100 megabits per second but someone is sending at 200 megabits per second so where do the packets go well now and we'll show in a picture they'll get to a router and the draft router can only send out at 100 megabits per second it's getting 200 coming in so it must drop some and it will drop packets so packets from our normal users will not get to the server so that's an example of exhausting network resources other denial of service attacks will look at either applications or the system for example try to crash the the software that handles the forwarding of packets so there's been attacks where you say a router has software running on it that looks at the packet and then sends it on and then looks at the next packet and sends a lot sends it on if that software doesn't work operate work correctly then the router may take a lot of time to look at a packet before it sends it on slowing it down slowing down all the traffic and eventually getting packet drops so some denial of service attacks will try to exhaust the resources of the system that is forwarding the traffic usually using some bugs so bugs in network protocols or to exhaust the applications so for example a web server a web server is not just a computer but is an application software application running on a computer so the apache software is a web server and if we can make that application slow down then that can be considered a denial of service attack by consuming resources from that application for example getting the application to use a lot of RAM use up all the RAM on the computer such that nothing else can run on that computer or use up all the hard disk space many applications will have logs or have to have temporary use of the hard disk if the hard disk is full the applications may stop working so denial of service attacks will try to either exhaust the network resources exhaust usually the intermediate devices intermediate systems between leading up to their application and/or exhaust the application itself and once these are examples of that attacks on different resources so what we're going to do is go through two I think to two very basic denial of service attacks the first one quite quickly and then we'll go through the second one in a bit more depth and I would say that classic denial of service attacks that is some of the the most or the original ones which are popularized but in many networks today they're no longer successful because there are measures to try to stop them but they will show the principles of denial of service attacks and these attacks require some understanding of network protocols and I know everyone here is experts on our experts on network protocols remember your knowledge of TCP maybe TCP we know is a transport protocol okay we know that many applications today use TCP as a transport protocol web browsing email most applications which are not multimedia applications or maybe some gaming applications will use TCP to send data because TCP provides reliability and the way that TCP works is that before you send any data you connect you create a connection from client to server so for the example of a web server the web server is running on one computer your web browser on another computer before you can send a request to for a web page what happens is that your TCP software on your web browser computer tries to set up a connection to the server using TCP and that connection set up normally involves exchange of three messages it's called a threeway handshake we send a special message from the initiating computer in the picture computer a wants to initiate a connection to computer B so computer a sends a special message saying let's start a connection B when it gets that if everything goes fine we'll send back a response saying okay I acknowledge that and here are some information about me that's what B says and then finally a sends back a third message saying thank you for that information from then on we can transfer data this is called a threeway handshake we have three three messages involved the specific names of those messages we refer to them the first one as a syn message it's used to synchronize sequence numbers so when we transfer data we use sequence numbers to keep track of that data which number do we start at well those numbers are synchronized in these first messages so we say this is a syn segment saying from a I want to synchronize with you here's the value I choose B says okay it sent back an acknowledgment and in addition in that same segment B says I want to synchronize with you so we say that this second message is a contains both a synchronized message and an ACK message so we simply call it a syn ack and the last one is a saying thank you I acknowledge your initial values the final act so we'll often see syn syn ack ack as this threeway connection set up after that data is transferred and this happens with all clients want to connect to a server what happens when the client wants to connect to the server in addition to exchanging these messages the server in particular when a client wants to set up a connection the server will store some information about that connection the client says I want to start a connection with you the server will store when it gets our first message it will store some information saying who the client is the address the IP address and port number and maybe even allocate some memory in the upcoming for the upcoming data transfer some buffer space if it's going to use some flow control then it's going to need some buffer space so what it be does when it receives his first syn segment it says ok we're about to transfer data with a I'll send back an ACK and I'll allocate some memory inside the computer for this upcoming data transfer and that memory allocation is what leads to a denial of service attack what an attacker will try to do is to get the server to allocate memory for many connections and eventually consume all the memory of the server and therefore the server will not be able to accept any future connections let's just see the TCP threeway handshake and then try and illustrate that memory allocation first and I think you have this in your handouts this is the TCP segment if you go forward a few pages I've included the TCP segment we don't need to remember it but we do note that the segment includes a source port identifying the application that sent the segment destination port for example the source port would identify my web browser the destination port would identify a web server and the destination port for web server is everyone remembers the destination the port of a web server web server 80 ok port 80 for example for a web server the sequence numbers those who passed my data communications course who made it through to this semester remember that flow control and error control will use sequence numbers to keep track of what's been sent what have we received so sequence numbers and in addition acknowledgment numbers are included in the header and a number of other fields there's data and the flags indicates a type of message whether it's a normal message an ACK a syn message or some other special purpose like a fin message or a reset message so that's the general structure of the TCP segment what I've set up and I'll show you in a moment is a simple network using VirtualBox which looks like this we'll use this for some demos today we have three computers three nodes and you've used the nodes I think for homework the past homeworks and and the current Linux permissions homework so the VirtualBox nodes I've already set them up on my computer there are three inside the same land for a very simple example and node one has IP address 192.168.1.1 no two is dot twelve and no 3.13 okay so we can remember the IP addresses of nodes 1 2 & 3 11 12 and 13 let's just capture a TCP threeway handshake and in my computer node one is gonna be red you'll see in a moment node two is blue I think that's blue and node 3 is green so we can keep track of the different nodes so we have three nodes and we're going to run some experiments to see what first how each EP connection setup works and then later some other denial of service attacks so these are my three terminals although I've already started and logged into those three nodes will zoom in in a moment so node one I've logged into it it's running it's a Linux computer and simular node 2 and node 3 they are there in this one we're only going to need two of the nodes just to show what's going on I want to know no is running a web server okay it has a web server running I hope how do I see if a web server is running maybe we can try netstat netstat shows me the connections I'm listening to in this case with the minus L option it shows me something's listening on port 80 so we guessed that that's a web server there's a web server running on the blue node which is waiting for people to connect to it so what I'm going to do is connect to it from node 1 and at the same time capture the packet so we can see the threeway handshake so I'm going to use TCP dump to capture the packets on node two it's recording everything it receives and then on node one what web browser am I going to use I don't have Firefox I don't have a graphical user interface so links textbased web browser 2 is 12 I'm just going to visit the web page and it works okay that's the default web page and I can quit this is the default for the web server quit yes and now I'll stop the CAPTCHA and we want to look at the packets just to see the connection setup I could look it on the screen but it's very hard to see so instead we'll try and open it in Wireshark and here the captured packets and let's just focus on the TCP packets and then see what happened so what can we observe here we can observe that all right these are packets sent between node 3 and node 2 why node 3 and node 2 because I've got let's check check the IP addresses I've got the wrong file okay I've copied I've copied this file to my computer just before the lecture and I've got it the wrong one but I think we can still see what I want to show you at least here its node 3 and node 2 whereas what I did was just between node 1 and node 2 so that's just the IP addresses are different but it's exactly the same trace it's one I did before what I wanted to show you here is a HTTP message sent by node 3 to node 2 and it's the web browser sending a message to the web server saying I want to get some webpage to notify the forward slash and then the response the web page comes back in this message so this is the data that's been transferred first from client to server and then from server back to client the web request and then the the web page coming back this was done using HTTP but the transport protocol was TCP and the first three messages these three other connections set up and there's a lot of detail there but the thing you should recognize the syn the cynic and the app client sends a syn message to the server that triggers the server to realize someone wants to connect to me and this summon is computer with IP address ending in 13 and a particular port number five seven 401 so what the server does assuming it's going to accept the connection because it's running a web server yes it a liqu AIT's some memory records those values and allocate some buffer space for the upcoming data transfer and sends back an ACK this see nak saying thank you let's let's continue and then the final act so that's the scenic taking place when we get this sin message memory is allocated let's see on our threeway handshake the memory is allocated I don't want that one this one what a denialofservice attack does is as multiple such requests arrive then the idea is that if many syn packets arrive at the server that variant within a small amount of time memory is allocated for each one it receives and if you have a lot enough then the memory will fill up on the server and there'll be no more memory to be allocated for subsequent requests so the idea is to overflow the resources on the target web server and the way that the attacker does that is sends many syn packets to the server not just one not as one per second but send thousands millions per second of syn packets to the web server every one that the web server receives it must allocate a small amount of memory but as that builds up then the memory of the server may fill up and if the memory of the server is full then the next seen packet that comes in cannot be processed because we cannot allocate more memory now how does the attacker achieve this well using different approaches first for this to work the attacker must send lots of syn segments to the server and that's possible but to enhance that and that's what this picture shows what the attacker will try to do is to get other computers to send those syn segments on their behalf and we saw in the last topic if we have some malicious software installed on other computers computers already infected here they are called some slaves the attacker has infected these other ones and it triggers the malicious software on those computers to send the syn segments to the target web server so it's not the attackers computer that's sending the scene segments it's other computers on behalf of the attacker why maybe they've been affected with malicious software so that's how one way to increase the number of scene packets that come to the web server so you have many of these slave servers or we refer to them as bots in the previous topic sending packets then that increases the number of packets arriving at the target web server and makes it easier to overflow the memory at the target web server where does the scenic go to so with TCP 3way handshake we saw when we receive a syn the web server sends back an ACK where does that go to the syn ACK message back to the ones who sent this in ok so the target web server receives a seen message ah someone wants to set up a connection so it sends back a syn ACK saying ok allocates memory the normal behavior for TCP s will allocate some memory with the expectation will receive the actual e the third message if we don't receive the ACK after some time will deallocate that memory and no longer store it but for a short period of time we will allocate that memory now in terms of the attacker they don't want to receive the syn ACK messages there's no need to because they're not going to respond with a third act there's no need for that it's just overloading with the send messages so a common technique again that's used by the attacker not just using many slave servers but setting a fake source address when they send that first scene message if the source address of the syn message is fake where does the syn ACK go to it goes to that fake address which is not the attackers computer and this will be a key technique which is used in other denial of service attacks when the attacker sends a message to the server the target don't include your real IP address as a source include a fake IP address so when the server responds with this syn ACK message it doesn't come back to these slaves it goes somewhere else it's not of concern to us as the attacker in this case so we need we'll see that using fake source addresses is a key part of many denial of service attacks and we'll show that in a moment so TTP this is called the TCP syn flooding attack it's very simple the attacker generates many syn segments going to the server it floods the server with syn segments every scene segment the server receives it allocates a small amount of memory and it allocates a small amount of memory and sends back and responds this syn ACK response but if the source address was a fake address that syn ack response goes to someone else and there's never going to be a final act coming back so what happens at the target web server or the target computer it comes over load of processing sins and storing connection information everyone who receives it allocates a little bit of memory and if it receives millions per second then it allocates a lot of memory and therefore no more memory will be allowed for the subsequent scene messages how to stop this it's not easy in some cases there are some techniques which are required really an upgrade of the TCP software so they wouldn't handle that and that upgrade is sometimes implemented as sim cookies so there's an extra check to make sure that this is really a true connection request from a client another way is to filter packets if we receive millions of seen packets from a particular source then then don't let them in but we'll see that there are problems for filtering packets so TCP syn flooding was one in there earlier or what they're on the main denial of service attacks in the early days it's not so common today because of the filtering and because of some of the countermeasures like sin cookies which are used there are limits on the number of syn messages received so this is an example of overloading the application it's not overloading the network there are only small packets that doesn't use many resources it's overloading the application on the target computer they're using up the RAM usually or the CPU let's look at a similar type of attack but it's overloading a different resource and it's called a ping flooding attack flooding means to fill something up in this case for a network to send many packets we'll go through and look at a similar type of attack called a ping flooding before we go through another reminder the IP address format the IP header format sorry so this at the bottom is the TCP header format and also as reference this is the IP header structure what are the two most important fields in the IP header what would you say if that was an exam question or if we have a quiz next Tuesday the two most important fields in the IP header from our course perspective or from what you know source and destination are two things that we always come across who's sending it who's receiving it right there are many fields here but from our perspective we often care about who's the source and who's the destination there are some other things about the length and and the type but that's important from a security perspective first it identifies computers the source address is in theory it's the address of the original sending computer and the destination is the final destination so when I send a packet from my laptop to the Facebook web server the source address of that packet would be that that identifies my computer and the destination address inside that IP header will be that that identifies the Facebook web server so IP addresses act as some identifier of the computers and that is some security issue in terms of privacy if someone can observe this header they can see who's communicating now there are some special cases or some other issues that arrive that make that not so easy to identify individual computers but generally it we assume that computers can be identified by the IP address from an attackers perspective that's bad because one of the ways to stop attackers is to identify who they are and maybe send the police around them and tell them to stop okay but to take actions outside of the the computer system so what an attacker would like to do is to hide its IP address and one way what quite simply is to send a fake IP address when you send print send fakes set fake source addresses as part of attacks but setting a fake source address also has other benefits so let's go through a ping flooding attack before we explain this network setup let's demonstrate ping zooming in a moment what does ping do ping very simply as an application triggers when I run the application triggers my computer to send a special message to the destination in this case from my computer node 1 to 192 168 1.12 in this case send repeat 5 times and the protocol being used it's not TCP or UDP it's a special one called ICMP the internet control message protocol and the way that it works is my computer sends a ping request to the server to the destination not the server the destination computer winner receives the request in the normal case sends back a reply and when I get a reply my ping software prints a line on the screen saying some information about that reply it took 2 point 8 5 milliseconds to get there and back and then in this case it does it again he repeats 5 times so ping involves sending a request to this destination and getting a response back sometimes we say an echo request and an echo reply how big are those messages approximately how big are the packets being sent across the network in this case megabytes gigabytes approximately how many bytes can anyone see the number up there 64 bytes right there may be some header and some other overheads but we're talking about hundred bytes or so because it says here there was a reply that we got 64 bytes from computer 12 when I pinged from computer what 11 the red one computer 12 64 bytes come back but we know that there may be some overhead due to headers like that IP header may be another 20 bytes the Ethernet header and so on so we're talking about messages in the order of a hundred bytes not very big quite small can we make them bigger how do we make them bigger yeah we can make them bigger as big as we like although there may be some limits we can set the size okay so we've got bigger packets so ping is very simple and ping is supported by most computers they'll respond to ping okay now let's see how ping can be used in a denial of service attack here's our example network structure we say there's the attacker maybe the attackers computer they have their local network there'd be a LAN and this is a router say the attacker owns a router at home or in their business and the attacker gets access to the internet via an Internet service provider tell me 3 Internet service providers you know of anyone who's an ISP in Thailand true AI yes DTAC you're talking about mobile phone providers yes they are internet providers also but yeah there are a number of ISPs if you look on maps of the internet there are tens of or even a hundred plus companies that provide Internet service inside Thailand so what we do isn't as an end user we pay the ISP for access and we can think of the network structure is that for my if I'm the attacker my router has a connection going into the ISPs network there's a cable coming into my home from the ISPs network or into my business and the internet service provider has some router then they connect to a larger ISP maybe a small one connects to a larger one and they connect out to other ISPs in other countries and that's what the internet is made up of now think of the target maybe some organization and the target may be all say in that organization maybe a web server the attacker wants to make make it so that others cannot access this web server so we can think of the targa computer and the similar structure the target has a network their own router and they connect to the internet via their ISP Internet service provider of the target and they connect out now let's assume that in terms of the links between the attacker and the target let's assume the slowest link across that path is this one leading into the targets network let's say that's what we call the bottleneck link the slowest one may be internal for the target's network they've got a fast land very fast there but when they pay for a connection to their ISP that's the most expensive part and therefore that's the slowest part of the network across the different ISP networks usually they have very high speed links so across throughs network across Quixote's network inside their network they have very high speed links but going to the end customer that's one of the slower links so let's assume that's the bottleneck link and that the attacker may also connect to an ISP but it's faster than the targets that may not be so realistic but we'll come back to that in a moment so this is the bottleneck link so what the attacker tries to do is to send enough packets to the target such that this bottleneck link is overloaded it has some capacity if we send enough packets in such that we start to reach that capacity then the the link is carrying packets from there the attacker and it cannot carry the packets from the normal users and normal users out on the internet that are trying to access that the target web server cannot access denied service that's the idea here how that is achieved is by the attacker sending enough packets such that the input to this router approaches the capacity of the link if we want to put some numbers to that let's say just for this initial case that this link supports say a hundred megabits per second or not right the units but in terms of capacity everything in megabits per second maybe this one supports 2 megabits per second this one's a hundred this one's 10 and every link inside here is is much faster than the others so by the bottleneck this is the smallest in the path so for a denial of service attack on the network resources in this case what we need is that the attacker sends packets at a rate such that coming in here exceeds two megabits per second that's the idea or the aim here well gets close to in most cases that is the attacker wants to send enough packets such that coming into this router is a greater than two megabits per second because the output is only two meters per second and what happens then is that as packets come in only two can come out the others are dropped so if there's three megabits per second coming in and only two going out then one megabit per second is going to be dropped and that will include packets from the normal users those that want to access the web server so the normal users are out on the internet and now trying to access the target web server as well say it's a website they try to visit the website when they send their packet to connect to that website the packet gets to this router and there's a high chance it will be dropped or at least delayed a long time because this router is handing the the many megabits per second coming in from the attacker so that's the idea that the normal users will have their packets dropped they won't be able to connect to the target server so this is an attack on the network resources in particular on this link the question is how do we generate so much traffic what's your idea how do we generate as the attacker so much traffic so that we overload this link multiple ways maybe multiple different sources what application what software could you use to attack you get all your friends to open their web browser and type in the URL and click on the link and press refresh many times okay you've got a hundred friends and you tell them it'll at 600 p.m. today refresh on this website so it sends many packets well the dimensions of these links are not in the order of two megabits per second they're usually much much larger such that manually it's very hard to overload like that okay you need maybe hundreds of thousands of people to be doing that so it's very hard to manually do that what we need is some automatic way to do that I think it wasn't last year this year or yes there was talk or late last year there was talk other people were doing that to try to bring down websites but generally it's not a very effective denial of service attack because it requires many people all right they're very hard right it depends upon the capacity here but for let's say very popular websites that have a lot of capacity here it wouldn't be 2 megabits per second it may be hundreds of megabits per second gigabits per second and in fact the website may be distributed across many different servers so you need a large amount of traffic to slow it down and for that you need to automate the sending of packets and the simple approach will look at is using ping because with ping the nice thing about ping is that most computers respond to ping ping or let it through with ping we can set the sending rate we can change the interval so with ping we can both set the size of the message and set the rate of which the source will send so here's two times per second can we set the rate lower ten times per second it says no but if we have administrator rights and we do as the attacker is our computer we can now send 10 times per second and in fact in general we can send as fast as our computer will handle so what the attacker will try to do is send these ping messages as fast as possible such that all of those add up and overload the bottleneck link into the targets network so that's the concept of the simple ping flooding attack the target bottleneck link receives many of these echo request packets from the attacker such that the link is overflowed the ones that do get through the target receives the echo request and with ping you send back an echo reply you send back the response so all the replies come back to the attacker so that's the simple attack you're the attacker what's wrong what do you do this attack he knows everything I'm looking for someone I'll ask him in a moment he doesn't have to see at the exam you do he's just here for fun yeah Mark's here for fun anyone else what's wrong from the attackers perspective all right we can't wait too long mark what's wrong the target knows the IP address of the attacker okay here's one problem Here I am the attacker I'm sending the message to the target inside the IP header is the source IP address so the target yes it's being attacked but it knows who's doing it and now they call up the police and send him around to my or they call up my internet service provider more likely and say you've got a customer that's doing a denial of service attack on me please stop them okay so there's the first problem here because the IP header and IP is the protocol being used to carry ICMP the IP header contains the source and destination address the target knows the source which is the attacker so the attacker is identified so that's a bad thing from the attackers perspective yeah what if the attacker uses some VPN to change their IP address so a VPN would involve and we'll cover in another topic in detail but basically the attacker sends to or gets and other computers send on their behalf right then what does the target identified identifies the VPN server okay now can I then trace it back to you it depends on whether you're paying for that VPN account the target comes to your VPN provider and says at this point in time someone was doing agile of service attack the VPN provider looks up their logs and say ah that's this customer I'll stop them from using my service ok so it's not hard to trace back if if they take the right means but we'll see there it can be hidden to some extent so that's one problem the IP address identifies the target identifies the attacker to the target what's another problem from the attacker even if we didn't worry about being identified I'm getting all the responses back that's a bit of a problem my network slows down all right let's say I need to send it a hundred megabits per second and I'm getting all the responses back at a hundred megabits per second so that can be inconvenient for the attacker so the idea flood the server the attacker uses ping to send many ICMP requests to the target server it overloads the the link to the to the router of the target Network and that starts to drop the valid packets the packets of the normal users trying to access that website how do we stop that what are the countermeasures we have available we could get the internet service providers to block ping packets don't let them to be sent through our network well that's a possibility and some organizations may do that but it's a bit of a problem because ping packets have a legitimate usage they use for testing connectivity for measuring delay so if everyone blocks them and don't let them be sent then we lose some functionality and not many ISPs will block ping packets some do and you may find the SI T blocks ping packets going out so that's one way but has a drawback that now our normal application is no longer supported the other thing like we saw identify who started the attack identify the source based upon the IP address and take some action contact their ISP you can identify them from the IP address and say this person is doing an attack on me stop them or we'll take you to court or you take the customer to court or take legal action so that's another response and the other problem is that the attackers network is overflowed with all the responses so that's something we'd like to get around from the attackers perspective we'll see that in a moment so what we want to do from the attackers perspective the other problem the other problem is this this assumption the attacker has access to a highcapacity link let's say I want to attack a website and I know I found out that website has a a one gigabit per second link coming into it therefore I need to pay for a link which is at least one gigabit per second how much is one gigabit per second link into your home okay you probably can't buy one in many places all right so we assume that the attacker has access to a highcapacity link so there's maybe a high cost involved from the attackers perspective to do that because as though the web server is usually run by an organization and they have a lot of resources the attacker may not have so many so how can we get around that from the attackers perspective and the approach is to use multiple computers to do the attack so we'll go through the different things that the attacker can do to try and improve the success rate for the attack the first thing I don't want to be identified I don't want the target to know who did it use a fake source address it's called source of ref spoofing we have a fake or a spoofed source address and it's quite easy to do so this just repeats the IP packet header we assume that every packet sent the source addresses of the sending computer the destination is the target therefore the target can identify the attacker that's the problem but it doesn't have to be the targets or the attackers address in the header the attacker can change this address because it's their computer that creates this packet they can set it to anything that they like that's how they set a fake source address as a result the target won't know who performed the attack at least without some further investigation the other benefit from the attacker the responses are not sent back to the attacker the responses are sent to the fake address let's see we'll show you how to set a fake Saul's address and see a take place when we use a pink just ping see what happens when we ping computer 12 we can quickly see what happened here when I ping computer 12 the ping packet we call an ICMP echo request zoom in one more here we sent from computer 11 to computer 12 an ICMP echo request computer 12 where the next line sends back a reply so this is just ping working 12 sends back a reply to computer 11 and then in this case I did it two times I had a count of 2 so that's ping working let's try with a fake address the red node I want to set as my attacker and our first set of fake address and there are different ways to set a fake source address in Linux one simple way is to use the firewall software called IP tables you don't need to remember this command at the moment we're gonna do a process called network address translation I'm going to translate my real address into a fake address do some translation what I'm going to do is after I send the packet or after our Creator to change the address so the Oh add a rule or a yeah rule that will change the address mr. letter using ICMP whenever use ICMP use a fake address and not trying to explain all of it do some what we call source network address translation as the attack I want to change my source address from my real one to a fake one I'm going to translate my source address and I want to translate it to I choose a fake address there's a mistake there okay so this is the command I'm going to use and I'm on node 1 the attackers computer and the idea is when I run this command every ping packet I send the source address will not be my computer address of dot 11 but it we dot 66 we will capture on computer to zoom in in a moment now I'm going to ping computer to do I get a reply no so what's happening is when I run ping here and I can stop it because nothing's or it stops by itself when I run ping my computer we'll see in the trace sends out an echo request but the source address is dot 66 the packet gets to computer 12 how do I know that may be hard for you to see but it's this line says computer with IP address 12 did receive an ICMP echo request it received the request and that request came from computer 66 so 12 received a request from computer 66 and with ping what do you do when you receive a request you send back a reply who do you send the reply to 66 so what my computer does I sorry this is node 2 does he wants to send a 66 but on a LAN you need to know the hardware address of computer 66 and the way to do that you use a protocol called ARP address resolution protocol saying who has the IP address 192 168 1.66 if you do tell me and it's sending out a message to everyone who is number 66 and it's not going to get a reply because there is no 66 in the network it gets no reply and hence it will never send the echo reply back to anyone because it doesn't know who's 66 is so what's happened here when I set a fake source address to be some on it who doesn't exist the target still receive the packets but didn't send a reply back to me as the attacker and that's a good thing from the attackers perspective the target still got the echo requests but they didn't send back the replies so the attacker doesn't get the replies which is good and who did the attack from the targets perspective computer 66 not the real attacker yep what if we changed the source to the destination then I think the the destination would identify that as an error okay if I receive a message and I was then the source is the same then it would detect that that's something not to respond to we will not try it we'll try another one in a moment but there is another way to handle that so here's a fake source address very easy to implement you can do it on any computer what fake source address should we use here I used it just I chose the random 166 another thing we'll see later what if I choose someone else's address as the fake one what if I choose computer 3 as a source so in this case what's happened what happened in that very very simple case was my source my attacker sent a packet the echo request is sent to a computer going the wrong direction it sent a computer to in my case but the source address was set to the special 66 or that the 66 address the fake address the destination was 12 in the IP header this one receives the echo request and then it tries to find someone to reply to we couldn't find anyone using ARP another case we could do is set the source address to be computer threes IP address if it was source address of computer 13 then it would reply to that computer and we'll see that's another feature that can be used in a denial of service attack it's called reflection we can bounce a message across another computer so what we could do from the attackers perspective let's say we want to attack computer we could send to computer three first and then get them to send a computer to source equals 12 destination equals 13 computer 3 receives it where does it send the reply to the source of 12 so that's the next way that we'll use the fake source address get another computer to send to the target on our behalf so in this case I still want to attack computer two but I send the message to computer three first and set the fake source address to be that of computer so when computer three replies it goes to computer two so that's as the use of the fake source address not just hiding who the source is but also getting another computer involved to do the attacking so let's see that on our attack the idea is that our attacker now whenever it sends a ping packet it sets a fake source address and it changes that source address on a regular basis so what happens we send the ping packets to the target the target gets them and replies to some fake or some other computer the benefit the attacker doesn't get the response messages another benefit the target can't identify the attacker they see it as someone else so that's the use of the source address fake source addresses and the other approach is called reflection which is you set the destination to be one of the other computers and the source address to a fake address which is that of the target so the approach is I want to send to the target but what I do is I send the ping messages to these other selected maybe randomly selected computers ping them but with a fake source address where the source address is that of the target so this computer receives a echo request source is the target therefore I should send the reply to the target all the other computers receive echo requests and they all have as the source address in those requests the target IP address so they all send to the target so we bounce the messages off the normal computers and this can have the benefit because now the target is not receiving messages from all of the one address its receiving from many others and it can be used to bypass some some filtering techniques that some organizations will use so the source address is a very powerful technique to support denial of service attacks we can reflect the attack but the details I think we'll return to in the next lecture we'll go through and look at how can we what are the countermeasures for using fake source addresses and then how can we expand upon this attack to greatly increase the number of packets being sent so we talked about the capacity and how to overload the server so we'll do that next Tuesday