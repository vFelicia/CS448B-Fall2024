welcome to network security my name is jennifer person and i'm associate professor at auburn university in this course it's organized in seven small lectures and not from the first one but for the other six there will be a short quiz after each lecture the six lectures will cover malware information theft and digital theft click fraud paper install and spam ddos attacks infections and social engineering and finally we will take a look at different kind of attackers for this video there is no quiz so you are welcome to continue to the next video second part of network security introduction where we will be talking about different kind of malware namely ransomware and spyware and the word malware really comes from two words malicious and software which you combine into one ransomware is quite nasty because it usually takes control of your computer by restricting access to files or systems this is usually done by encrypting either all or some of the files on the hard drive it requires then the user to pay a ransom before the system can be used again and it can target both users and companies so it can be both a single computer which is locked but it can also be a large system attack where several servers with written business critical information is left in operationable and that can be really critical for a business so more businesses than you might think actually choose to pay of course the the criminals behind it are trying to build up a business where they have a high reputation so it increases the likelihood that people will pay if they believe they will actually get access to their files back so one of the things they can do is that they can offer that you can send them one or two of the encrypted files and they will decrypt it for you just to demonstrate that they do have the key and the ability to do so so here's an example of what a screenshot can look like while you are requested to pay it can also be that you have to pay it in in bitcoins which is a more anonymous way of transferring the money um we also have other kind of malware for example spyware where spyware is often monitoring the activities of the user without him or her knowing it and this information can can then be used for different for different things one thing it can be used as is that it can be used to harvest private information such as email addresses login and credit card numbers which can be sold but it can also be used to monitor internet activity in order to optimize the ads that the person receive the spyware can be either and a standalone program that the user installs for example by visiting a malicious website which will install it on his computer but it can also be be something that the user downloads himself as a part of for example free software so if you are downloading a free video editing software without knowing the written it might very well be infected by some with some kind of spyware and that was the end of this second lecture so now please take quiz number one before you continue thank you for listening the third part of the network security introduction we'll be looking at information theft or digital theft when it comes to information theft there are many different kind of kinds of information that hackers or attackers can steal it can be for example credit card numbers it can be login to different systems it can be any kind of data that has a value sometimes this information is then used to gain access to bank accounts which is what i have called digital theft if that is done then you then the attacker will also need to do something additional in order to hide what he has actually been doing so somehow he has to to get out of the the traceable transactions we'll be talking about that on the next slide often information theft is a result of hacking into larger centralized systems so it's not just for kids but it's really advanced persistent threats where you have a specific target that you really want to attack a database that you really want to get into etc and then you can work your way into it there are many wellknown cases of this for example information about more than 50 million credit card numbers were leaked from home depot in 2014 another example is that um atega succeeded in getting into the danish register social security numbers where they got access to almost all danish social security numbers which are otherwise considered confidential there is a good danish example on digital theft which was in the news a couple of years ago so their names the names are real at least the danish names so stefan from denmark is looking for a girlfriend on the internet and there he meets russian elena petrova and they exchanged a lot of email they are very much in love and at some point she would of course like to come and visit him but there is a problem because she has no money but fortunately she has a rich uncle which can help so he can send her the money but she has no bank account so instead the uncle will transfer the money to stefan who can then transfer the money to elena through western union and voice and union is such a nontraceable transfer that we discussed about before so one transferred so stefan is waiting for the money to get into his account and when the money is on his account and he can see it then he go to the bank take out the money and transfer them to elena what he doesn't know is that the money actually stolen from another person another danish person i need buy theft from her net bank so what the criminals have done is that they have transferred the money from a natis account to stefan's account that's a traceable transaction and then stefan has taken out the money and then this nontraceable transaction transferred them to elena or who it is that that is placed in in russia and of course stefan never sees his money again so that is an example of how mutes are used so i will try to go through this this figure in a bit more detail so mules are those who take the money from the bank and take them out take it take it out in cash for example and then go to the western union or go to somewhere else and do the the nontraceable transaction so in the case on the figure here the mules are hired so they are paid but they can also be tricked into it as was the case with stefan and then they gain access then they have their bank accounts which are genuine enough either they have them already or they establish these bank accounts once established and in place then the cyber criminal can breach another account for example a netis account and then wire transfer these to them to the mule accounts so that's a completely normal bank transfer but then the mules will take out the money and do do the transactions this is step number five in the figure so the the mules will take out the money from their bank and and go in cash and turn further for example through the wire through the nontraceable western union service and they then transferred the money to the criminal accounts where so there is no link between the criminal accounts and then the criminal activity that he did when we're talking about information theft i will also mention industrials pioneers and this is a wide area it's conducted in many ways and it's also conducted by many different people so that can be both nationstates spying on each other or it can be companies stealing information from each other so often this is done by hacking into systems taking advantage of security flows that might be or it can be an insider who is sitting inside their organization and has right to to share information with outsiders or at least that's the right to access information it can also be done by installing malware through botnets or social engineering so the malware is actually the software that is doing the spying it's my impression that there are many untold stories about industrial nation because those who are victims don't want to tell about it but there is a famous example from nokia some years back where where the criminals managed to get actually several million euros from nokia and these money where versions were given to nokia handed over to nokia in a parking lot to close the nokia head offices i would also say that industrial interpreter nh is really can be an advanced case of information theft if you want to know more about the nokia case you can google more and read about it so this was the end of the third lecture so now please take quiz number two thank you i welcome to part four of the network security introduction in this part i will talk about clickful paper install and spam i'll start with click forward and what is important to understand is that where we click is really an important part of internet economy that is for example the case when it comes to search engines so so assume that i search for a particular word let's say paper and then afterwards i click on on a specific link in google then google learns that that for that search term um this link was a good choice so if there is often that people have that people are clicking on a specific link for a specific search word that word will increase its um its visibility in google so it will become higher and higher but i assume i have a problem because i have some website that i would like to be associated with paper but my website is on number page 17 in google then one way of increasing it could be to have a lot of people not only me not only one one traceable computer but computers all over the world to search for paper and click on that specific link and this is this is what i can try to do with um click through where for example a scripts of programs installing clients all over the world are doing this so it looks like a genuine behavior another another case of click fraud relates to advertisements like links or banners so for example i could have a website where i have a number of banners and every time someone is clicking one of my banner i earn a specific amount of money and if i can if i can pay or infect other computers to visit my website and click on that banner then then that can be a business for me so often this kind of click forward is performed by computers infected with malware or of hardware another kind of crime is paper installed so let's say that a criminal might want to have a particular software malware installed on a number of computers belonging to other people so it could for example be this kind of malware that is able to open a browser and click on a specific link but it can be many things it can also be a small program that is creating bitcoins or it could be a program that is a storing some data that you would like to have stored but you don't want it on your own computer then by having it installed your little program in a lot of computers all over the world you could push your data to be there so paper install is really a business model where that person can buy installations from a cyber criminal so if i want these installs to be performed then i would contact the cyber criminal and i would say i would like my program to be installed in let's say 1 000 different computers and then i will pay him per installation of my program again botnets can be used for for this kind of activity finally there is spam and i don't think spam needs much of an explanation but it's important to understand that here also hijacked or infected computers can be used if you're sending out spam spam from a centralized machine probabilities are very hard that it will be blocked at some point so if you can attack a machine and you can take over the control of that machine then you can use it for sending spam at least for a while until it's blocked again you can also use both fare whatever this so thank you for listening and now it's time to take quiz number three welcome to network security introduction part 5 where i will be talking about ddos attacks or distributed denial of service attacks as the name indicates when we have a distributed amount of service attacks it's at an hour service attack meaning that we are leaving the attack machine or the attacked system so that that it cannot so that it is unavailable and it cannot perform the duties that it would normally perform this is most often done by sending a lot of requests from all over the world so that is why it's called distributed so sending a request to that machine all at the same time this can be legitimate request for example for a website or it can be a illegitimate request it really doesn't matter the thing is that the server or the system will receive so many requests that it's unable to answer them this such an attack will usually be centrally coordinated but it doesn't have to be in real time so it can be that you have control of a lot of machines and you're telling them at that time at that particular time send these kind of requests to that particular machine and they will all be attacking at the same time quite often these are this can be quite heavy so it can be between 50 and 100 gigabits per second but you can see reports of of attacks with up to 400 gigabit updates per second so that's really a large amount of data in the figure here you can also see a sketch of how it can be done so you have the attacker which is standing behind it all who through a number of handlers is taking control of all the samples who are then attacking the victim at the same time there are a couple of recent examples there are the big examples like visa mastercard paypal who has been attacked but but there is also a story about a danish attending school where the school kids they didn't want to to do a national test that all school kids in denmark have to do so they decided to launch a dealer's attack on their school at that particular time and day and in fact they managed to to interrupt the exam and to test not only at their own school but in 27 schools and they managed to lay down a total of them seven thousand computers and these were just cool kids who managed to buy it online and when talking about buying it online it should be noted that it's actually quite cheap to do and it's very easy to do so there are different sites i will not mention any names where you can go and then you can really pay by credit card or buy bitcoins and then you just click and you can launch your attack decide how many computers should participate in the attack so how large your cannon you're shooting with and also how long time it should take to do it and and one of the one of the challenges with this kind of attack is that it's really really easy to do and it's very hard to to mitigate so now it's time to take quiz number four thank you very much for following welcome to part six in the network security introduction in this part we'll be talking about infections and social engineering so there are different ways to infect users with different kind of malware that would have that we have discussed in the previous presentations here we'll cover some of the more important ones and then we drive by infections and infections by running executable files i will also describe something about social engineering and phishing so drive by infections happens when the user is visiting a website the computer can be visi infected simply by visiting this website so it doesn't have to to do anything active it doesn't have to download or install any executable files there are different kind of these websites some website are made specifically with the aim of making an infection and then you have the challenge in getting the users to these malicious websites but it can also be that you have completely legitimate websites which are infected by a third party for example because there is an unpatched vulnerability in that server yes some wellknown examples of the latter is actually there was a wordpress example and if you want more details you can google it the problem was that there were seven 100 000 word sites wordpress sites that were compromised in december 2014 because they were using an outdated version and before they were unpatched criminals managed to infect all these machines then you have infections through executables so you have executable files that you are downloading or getting in different way it can be by email through social media on a usb disk or simply download it from a website and often if you have an nc virus program installed it will give you a warning but the problem with this kind of warning is that the users tend to overwrite them in my opinion also because the information they receive is not sufficient for them to make a decision and actually this is leading us to the next topic which is social engineering social engineering is all about tricking the user to do some something actively for example actually actively accepting to run infected files or scripts and it's a kind of confidence trick where you try to gain the confidence of the user and then trick him into doing something and i think there are two important factors to mention here one is that the user often doesn't have enough knowledge to know how to act when he sees a security warning and secondly the the user decision might be impacted by the conte context such as who is the sender what kind of content is provided and how personal is it so somebody somebody managed to have spider on your computer so they know a lot of about what you're doing or you have been traveling and they can tell you yeah now that you are back from our hotel please go to our website and fill in something that can also be part of the trick the thing is with antivirus if the user can override it it's all about tricking him into actually overwriting it for example to install a file and there is one example here that the user is receiving a message on facebook about watch this funny video as soon as the user clicks on the video and it focuses on the video he receives the warning that he needs to update flash player and flash player is something that we are so used to just updating that many users will try to click run here instead of saying no which would be the the good choice so based on the yes then then the user actually give permission to install this this piece of malware and there is another example here which i will do which i will just show you so that's a small that's a very short introduction to um social engineering then we have phishing and fishing is not strictly related to malwa uh it's and but it's important an important part of the overall cybercrime picture where it's about tricking them from the user to provide different kind of information so the idea is that you are tricking people to disclose private information which could be social security numbers credit card information credentials for authentication services such as the damien danish digital identity access to email accounts social media sites etc and it comes in many forms that could be emails websites and so on and probably you have you have seen some examples already like you receive an email from an administrator please verify your account by sending us your username and password and so on and if you are sending out this kind of information to a sufficient amount of people you will always see that someone is being tricked into it so here's an example of a phishing email from a danish a payment provider where for example you can see that the the sender doesn't really fit while the bill another example from paypal which highlights some of the typical things you will see in vision for example that there is a generic reading that there is a false sense of urgency so you're told someone just did something or it seems that you have have bought something please go to your account if it wasn't you so so some information that is trying to to to get people to click straight away before they really get to think and then often there will be fake links meaning that if you try to move to move the mouse and see what is really on the link it will be different than what the link points to and again when providing these kind of links that result in quite quite a quite a lot of creativity that paypal could be spelled with a one instead of an l so it really looks like the same like the same website so that was a short introduction to social engineering and phishing and infections so now it's time to take quiz number five and then continue with the last part of the introduction afterwards thank you very much for following hello everyone and welcome to the last part of the network security introduction this is part number seven where we'll be looking at the different kind of attackers so the reason for looking at different kind of attacks is really to understand better who is our enemy and when we know our enemy and his motivations abilities and resources then we can also build a better defense so i will go briefly through six different groups of attackers namely insiders cyber criminals script critters greyheads hacktivists and nation states and these have six very different groups so what we can see in the overview here is we can see that insiders is a small group working either for revenge or profit we can see that sour criminals who are that's a large group and they are mainly interested in doing things for profit we can see hacktivists who are more looking for for curiosity or having a political goal recognition we are seeing the smallest group i have put here it's the script kiddos so the guys sitting down in the basement and drinking cola eating pizza and trying to do what they read off the net and usually they don't get get anywhere with that then we have the group of gray hats which are again more for curiosity and recognition and we have a large group of nation states so that's just usually states spying on each other for curiosity or revenge so understanding if if your most potential attacker would be a nation state or for profit or a hacktivist is quite an important part of your defense so insiders are trusted people with a malicious intent so that could be the guy who is being fired from his work and still have access they have pretty privileged actions and often knowledge of relevant systems so this can be motivated by avenge for example describe being fired or being disagreeing with someone it can also be motivated by profit because you can get a lot of money by sharing data knowledge with someone from the from the outside world um when it comes to abilities and insiders can have extensive knowledge of the systems including knowledge of vulnerabilities and he might have skills and permissions to hide his activities but he often doesn't have many resources so often he will be working alone on the other hand he will have access to system resources we have the server criminals who are really the the professionals i would even say often organized professionals they are often organized in groups of hackers and they have a business approach so they need for the money it's completely financially motivated they there are many different groups and there is a wide variety of the technical skills and if they are organized enough they are willing to recruit a higher people with additional competences this is often done through underground networks and you will learn much more about that in the in the basic part of this course when it comes to resources they have plenty of resources available in terms of money equipment and manpower so it's a it's a strong group to be up against and we have also seen how they have been able to launch for example a sophisticated um rates of wire attacks the other script killers which are the devices with low skills and averages limited understanding of the technical consequences of what they do so often they find something on the internet and they try it out they are usually just curious they don't have many technical resources they have low technical competences not very many resources they are often not a part of a larger network but they are sitting in a basement operating on their own then we have the greyheads which are the old hackers so often they are they are skillful hackers and and usually they don't heavily have a criminal intent so they are mainly curious and and they are not likely to do for example sabotage and often they are specialized and they can be part of networks with information exchange between them which can make them quite capable they mainly work alone it is part of this knowledge exchange so they don't have many resources but they often have skills and they often have access to some kind of equipment and activist which is a big group you might know the most famous famous and that's also the picture putia which is anonymous they are often in groups often distributed geographically and with very varying technical skills they are often motivated by ideology or political agendas and often revenge is not a motivation in itself but there can be a political or ideological reason for for wanting revenge for something we have regarding the abilities we have seen that they have um or it's very it's very different from group to group but you will see that some groups groups have quite skilled members and again anonymous is a good example of that the amount of resources varies a lot from group to group there will be some which have a few resources and some who has a lot of resources and plenty of manpower we also know that some of them such as such as anonymous also have botnets and other important resources available then there is at last but not least nation states which are countries so they are known we know that nation states or representatives have tried to perpetrate everything from industrial experience or military activities to having a nationwide nationwide attacks in the cyber arena so the motivations can be different there can be revenge it can be its intelligence it can be political or military gains we know that many nation states have substantial presence in cyberspace and and have highly skilled experts and we also know that many of them have a lot of resources i would also say here the nation states is of course a very different thing than than some of the sovereign criminals so where cyber criminals okay there are other criminals who have a specific target because they can earn a lot of money at that particular target but often nation states will be will not shoot to everything and then try to catch something like the spam mails or the ransomware which is running on a lot of computers but they're really targeting a specific um a specific goal and trying to find all the reliability so in that sense being being a victim of a nation state is very different than being a victim a victim of some criminals who just have an economic gain and that was the final part of this presentation so now please do quiz number six thank you very much hello everyone and welcome to the basic part of network security my name is john smith person i'm from albert university in this part i will give you an knowledge of the common threads which we're also looking at in the introductory part i will try to provide you with knowledge of botnets including the broadhead lifecycle botnet architectures and something about how we can track detect and mitigate the botnets and that is the main part of this this basic part and then also i will cover knowledge of the motivation and business models behind cybercrime this course is organized to the address in nine quite short lectures around five minutes and then after each lecture there is a quiz with selfassessment and then at the end of the whole basic part there will be an additional quiz so when we look at a button and what is a botnet um the easiest way is actually to see it on the figure but i have included this slide as well so you can go and read more about it if you if you want it as a reminder but if we look at the figure what we can see is that we have a broad broadmaster who has infected a number of ensembles which are here called bots with a kind of specific portfolio malware and what he can do then is that he can actually control these machines and use them for different kind of malicious purposes so that could be among other things email spam also use a computer for stealing information that could be personal information credit card information it could be having access to for example a webcam or a microphone or it could simply be to install a keylogger and monitor everything that is going on on the machine and finally he can also use the bot as a part of a and for example a ddos attack so the machine can take part in in ddos attacks at a certain point in time what is important to keep in mind is that while i show here a very simple architecture in fact it can be more complicated so that there is no direct communication between the bot master and each zombie which makes it a lot harder to take down the botnet and to to find the bot master eventually it's it's also important to say that you can actually use the botnet for different things so first you might use it for stealing personal information and when there is no more personal information of any value then you can go to the next step and use it for spamming or ddos attacking with where there is a higher probability probability that you will be caught at some point but we will get back later on to how that works it's important also to say that the owners of zombies are often unaware of these kind of infections so they don't know that there is something running on their computer a word on that about these infected computers is that the user somebody might not notice that the computer is infected and often these programs are made really good to remain stealth so you don't see it one way of saying it could be that there can be network activity when it's not expected there could be a very small amount of traffic so it cannot detect it or it can be large amounts of traffic such as when you participate in a ddos attack it could also be increased cpu load when certain malicious activities are carried out for example if you use the zombie for for calculating bitcoins or similar and it could be increased network load when you have for example these ddos attacks or distribution of spam for now please go to quiz number seven and then see you here in a minute welcome to the second part of network security here we will be looking a bit more into what botnets are actually being used for so as we discussed before botnets can be used in most types of cyber crime so that includes information theft installation of malware spam clickful and participation in ddos attacks once the zombie is infected it's often used for multiple kind of malicious activities with the most valuable activities carried out first we also discussed that that before in the internet in the introductory part we saw an example where money was stolen from a bank and then transferred to a third party who was tricked to take out the money and go to the western union and then he or she lost the money actually this principle is worth taking a little more elaborate look at to understand how these kind of mules are often used in in this kind of crime so why you see them are not only when you're tricking people to do something it can also be in the nigeria letters which you might have heard of where someone is offering to send you a very large amount of money and then you have to take out this money or do something with them and send them on to a third party and you can keep part of it but what often happens is that what you are supposed to do is that you are taking the money out so the money can be transferred electronically to you this is a traceable transaction then the money are taken out by you for example in cash given to western union where it cannot be traced anymore so the traders stop at you the electronic traces stop at you and then uh of course these money of a different kind of crime and then you are the one helping to get them out to the to the criminals another game like this can be secondhand buyers where someone is advertising something in a as a secondhand advertisement so if you're trying to sell your old table then you're contacted by a person who will give a lot of money for it and you will say yes of course i can ship it to england or another country when the money arrives in your account you'll notice it's too much money people contact you and saying ah could you please i by mistake i transferred too much money could you please transfer this money back to me and when you do that transaction usually it's again a nontraceable transaction so that's how it's done and this is also what we see in this figure where we can see that in the first step you hire mules or you recruit molds in this example you hire them so simply pay them to do it and then you have the cyber criminal who in step two so in step two the mules will establish these accounts so now they are available to use for the cyber criminal who can then make a bridge on a on some account or whatever kind of a yeah usually that's the activity or to steal them from some kind of account then transfer them to the mules newly established accounts in step four then they are spread out to the different views they might keep part of the money and then they take out the money and transfer them via the transfer service which is not traceable that's step number five to the criminal's account and who can then take out the money so maybe he will only get 90 but on the other hand he's the guy here who is safe because he got the money in a in a nontraceable way um what is also important to keep in mind is that often we're talking about organized crime here so we have so many of the large botanics botnets are run really as a as hardcore criminal business so one of the one of the main persons are of course the bot masters who are offering different kind of services so you have a customer at the end the customer who might want to buy a ddos attack or want to want to buy a number of credit card numbers or personal sensitive information about one or more persons he can contact the broadmaster and then they agree about the price for doing so and and the boss master is then using his botnets or he can rent botnets from other people to carry out these activities we can also see that the bond masters often in the in the in the you can see in the very professional botnet has access to support or to developers who are specialized in either spreading and the malware or developing malicious code in order to find the botnet we often work with a model and then we can we can use that for kind of discussing where we would like to to counter the the botnet and detect that it's present so there is a phase one where it's born so the malicious code is developed there is a phase two which is the infection that takes place here so here the malicious code reaches the client and it is either install itself or kind of exploit social engineering to let the human user install it then there is a commanding control phase when the client is communicating with the bot master but no malicious activity is as such is taking place so no d does attack no information starts but just the communication from the infected machine saying i'm infected i'm ready to serve your order he might receive updates to the code and so on actually that's a very interesting phase because there is very little traffic but also it's here we really would like to to to be able to detect what is going on because at this stage we can prevent anything really bad from happening then after that phase there is a phase four the execution phase while the client begins to carry out commands which it has received so that could be here it started to steal information during ddos attacks and so on finally the code is disposed and the body is cleaned either because the botnet is taken down or because the infected client has been cleaned based on this please go to quiz number eight and then see you here in a minute thank you so much welcome to network security the basic part number three here we'll be talking about partner architectures and i will go through a number of simple but good models so of course the simple models we have is the centralized architecture so what you can think about when looking at the figures what are the strengths and what are the weaknesses of this kind of architecture and we also note here that when the cnc server here is shown as being something controlled by the bot master but often it will be located in a hex machine so the owner is not aware what his machine is actually being used for this model is very simple it's not so useful in real life first of all it's not very reliable since if one of the bots is being taken down or identified then it's not too difficult to find the command control server and take that down so we have a single point of failure and in addition to having a single point of failure we might also have a situation where it's too easy to identify the bot master so it's a nice simple model to play with in the basement but it doesn't really work in real life in the peertopeer architecture we tried to deal with some of the shortcomings of the centralized architecture that we saw just before so here you have a lot of machines who are connected to each other like connections here and there and it's it can look pretty unorganized when you look at it um and the idea is that the bot master can inject commands to one machine who will then forward this to other machines who will forward it to other machines again and as a as an infected zombie you don't know if your command is coming from the bot master itself or just from another infected machine so of course it's more it's here more difficult to trace the cnc server and it's a lot more difficult to shut it down because even if you find a machine you take it out the rest will still be be well connected on the other hand one of the drawbacks is that it doesn't scale very well so if you have a very large network it takes quite some time or it might take quite some time for information to get from one machine to another machine and finally to the whole body so if it's a really large botnet it's very hard to control it and have people doing things at the same time and to make sure all this the malware is updated and so on um another model is with changing servers so that really increases the robustness of the partners since you might have one server in one minute the minute after you show it to another server the minute after to another server and so on so you're always changing the servers that you're communicating with this is a more difficult architecture to implement because you always need to to contact new servers but it makes it a lot harder to shut down the the servers and the network and of course you can combine this with having more than one server so you have multiple servers running placed in multiple countries at the same time making it very hard to to shut it down because if one server is down you can just contact another one which is in another country or or region so i've been going through some simple architectures here and what is important to notice is that often you're using other techniques i will cover fast logs in the next video to make it even more stuff also that in fact different architecture is often combined so we have some kind of hybrid architectures often we also see production machines and hurricane which is being used so not all the zombies are equal but you can have the zombies in the in the lowest part who are doing the uh or the malicious activity then you have a different layer which is really just working with forwarding information turned from these numbers to another layer to another layer and you have the the podmaster on top of it all but the distance from the machine carrying out malicious activity to the bot master is really long and can go through different countries and can be really hard to trace it back to the to the pod master one example that was described by mcafee was an attack called 10 days of rain where they installed a botnet specifically for this purpose and afterwards they realized where these where the servers were located and they could see that basically the the servers were located all over the world there were 39 servers in terms of distributed between usa taiwan saudi saudi arabia and a lot of other countries so in total these machines were spread out over 14 countries it's also important to notice that different kind of protocols are used to hide the activities so standard protocols including irc http so that we use it for web traffic and also recently we are seeing an increasing using instant messenger and other peertopeer protocols the reason that http is becoming quite popular while it's quite hard to deploy it you have so much http traffic that that when you look through a network and you see distribute traffic you don't see any alarm bells ringing whereas if you would see irc protocol being used that might indicate this looks weird or some modular protocols might also not be very widely used and therefore you get suspicious when you see it what you also see is that encryption or packets looking differently from packet to packet so you don't have a common pattern to look for it's also used in order to to avoid being being found and recognized so for now please take quiz number nine and then see you very soon hello everyone and welcome to part 4 of the basic module in network security here i will be giving you a short introduction to fastblocks but before we start with with five blocks i will show you how dns works because that's really an important concept to understand before we can start talking about um firefox so when i when machines are coming communicating with each other over the internet what they really use is ip addresses so when you have an address that you want to look up in the browser for example google.com in order to contact the server you really need what you need to know what is the ip address of google.com and for this we have the dns system so it works the following way that when you and your computer and i met the figure myself so when you're in your computer right google.com what you do first of all is that you send a request to a dns server asking what is the ip address of google.com and you get a reply back which is in in terms of an ip address so in this case the ip address is 130.225.50.23 and then based on that reply you can send an http request to google.com and then send it to that ip address and when you then send your request to that ip address you get the reply back with the web page that you want to see so as you can see dns is quite crucial in the way the internet works not only for web browsing but for all kind of activities where we use domain names which are made out of real names which are easy to remember so let's look at how fast works so the idea behind it is that the bot master not only has control of the zombie but also has control of a dns server and that is what we see in the figure here so first of all when the client that he might have hardcoded a number of domains or might be able to autogenerate domain names which fit with something that the botmaster is taking control of so he might be asked some kind of domain that could be a domain with a real name but very often it would be some kind of randomly generated domain name that he is asking then the dns server to resolve but since the dns server is also controlled by the botmaster he get an ip address back which is then directing him to first of all a proxy machine and then it could be more machines but at the end of the day the malicious server so what is happening is that you can send a request for an ip address and you will get get an ip address often but a very short time to live or a number of ip addresses which are really ip addresses of proxy bots who are then directing you to the commanding control server but this uh this in this dns response when the time to live is very low you will ask again again about the addresses and you will be sent to different kind of machines all the time so the fast flux ensures that whatever you are doing um that you will be you that yeah that you can change the the proxy or that you can change the malicious server with very short insurance if you want to know more about this topic i can recommend that you search for the concepts which are called single flux double flux and domain vlogs which are more advanced concepts but this was the first introduction and based on this first introduction please go ahead and take quiz number 10. thank you in lecture number five we'll be looking at different detection methods so basically here i will go through the many different detection methods and then later on i will go more in depth with the networkbased detection so button button mitigation is really challenging because it can be quite difficult to find the commanding control servers and often these as we discussed before operate behind different layers of proxies and they are in different countries so yeah that's quite challenging um the different approaches i will go through in this lecture in my opinion i would say it's needed to combine them so we cannot say that one way is going to solve all our problems with with botnets and malware what is important to keep in mind we discuss the businesses in the introductory part is that the programmers behind are highly skilled people with access to large amount of resources and that they put a lot of effort into not being detected so we have to do with an enemy who really wants to remain stealth and so that's one challenge we have and another challenge we have is that we want to avoid the false positives so we really need a higher detection accuracy because if we detect let's say 1000 machines as infected but only one of them isn't in reality then our system is basically useless so we have to be able to say very precisely which machines are infected and not only which are potentially infected let's go to the overview of the detection approaches so the first i will mention is what is called what i will call nonnetworkbased detection so a detection which is working on the individual host so that could be for example antivirus programs which can inspect software and and see what is going on on there on the on the individual host this can be quite efficient if it is updated and if it is correctly used by the by the users and there are different problems with them such as they usually are not good in zero day detection so they need they can only deal with known threats so if there is a threat that they have not seen before and which is not included in the in the program yet then it's very hard to to detect that it it suffers from what is called social engineering um so if human if you the human people is is all ruling it and if you allow installing a piece of software even if you receive a warning against it well then it doesn't really work that efficiently and what we see often is that people tend to be easy to manipulate so so whenever you get a warning you need to update flash players quite a lot of people would actually go ahead and do it also in order to be really efficient it needs to work on not only on the pc platform but if we it needs to be installed on all network devices and with internet of things coming up with people being connected to the internet on the phones on ipads tablets computers all different kind of devices on the internet then it's increasingly difficult to ensure that you have updated antivirus on all your devices and then there are the networkbased methods which include anomalybased signature based and methods based on statistical traffic analysis so i will just briefly mention these different ones so there is a nominated section which is basically that if you can if you can see that there is a very unusual behavior that could be triggered by a high network latency or that you see a lot of traffic or a big increase in the amount of traffic or traffic on unusual ports then you say ah this looks really is suspicious because it's considerably different from normal network traffic when we're talking about botnets this is more likely to occur in the last phase where you have to actually have some malicious activities going on so adidas attack would trigger this because it's a lot of traffic which looks very specifically and which is very different from your usual traffic or it could be the spam because you have a lot of emails sent by mail servers which usually wouldn't wouldn't be using and actually to some extent fast locks can also be detected in this way if you are contacting a dns server which is different from a dns server that would usually be used within that particular network i know that for example in orbit university if we are using dns servers which are not the dns servers of the university then we get a call from the it asking what is what is going on then moving on to the next slide we have signaturebased detection which is really works by that you look into the concept of the of all the packets so you you need you need to look into the payload or into the patterns of the packets and then look for signatures related to specific malwares or specific botnets um again it's it's hard it's a hard task to do and especially it's hard if the if the content is encrypted or if you're looking for something which is not yet known so it suffers from some of the same shortcomings as the host based but of course since it's working in the network you don't have to install it on all different kinds of devices and it's easier to ensure that it's updated especially if you are in a professional organization then the approach that i will go monitor deficit and that we are working more with the norbert university is to try to distinguish benign traffic from partner traffic and religious traffic by using statistical analysis on the network traffic and we are using machine learning algorithms to do so so this can be really be applied in all places of the network as long as all the relevant data is passing through this point so even a large amount of data we try to look into the network traffic and see can we see that there is something suspicious here so what we look at is statistical information about the flows and the network flows such as the packet lengths the flow length the number of incoming packets number of outgoing packets port numbers which contribute to contrast with communicating with or even which continents we're communicating with but of course this works only if there is actually a difference so if you want to see the difference between the malicious and nonmalicious activities we can only do so if there is a difference between them yes and this is something which we will also cover in the next videos uh i would also say that what we are doing and what i find to be most interesting is to focus on the command and control traffic because then again we can do something before some something really malicious is really going on and some harmful harmful activities are being carried out so for now please take quiz 11 and see you soon for the next video so welcome to part six of the basic module in network security what we'll be talking about here is a networkbased detection of malware and botnet activities so um when we're talking about networkbased detection we can actually do this in different points in the network the most important is that we have a traffic coming through this point and we are able to analyze the traffic in that particular point so that could take place in different places and if it is a company it could take place in in a point from where all the traffic goes to the internet or it could be traffic even on the internal network it could be in a home where we have an internet gateway then install it close to the inside and gateway on some just on the side of it or it could be different places even in isp networks given that we're able to handle this large amount of data but it could be all the traffic for example which is done from the isp to some peering provider um it's important to when we're talking about network traffic and saying that we want to analyze network traffic it's also important to understand what it is that we want to analyze because we can do this at different levels so we can do it for example a packet level so we look at each individual packet and see is this packing malicious or not we can do it at a flow level so we look at each different flow and see if the flow is malicious or not and there's quite different approaches to it and there's different kind of information that we have available and just to do to illustrate these different levels that we can talk about uh i can show you a multilevel model for worldwide web traffic for example so assume that we are looking for a pattern in in the behavior and what kind of pattern are we looking for and how can we describe these patterns so it could be that you are that you are at an application level that you are doing web browsing so you are opening up your browser you're closing it again then you don't do anything for a while and then you start with a break prioritization again and then close it down but within a web bar sensation actually multiple things can happen so let's look at an individual session then um or what is called here in the figure at the dialogue so you're looking at one web page so you take down one webpage then you think for a while and then you click on the next web page you open another web page and you think for a while and then you close it down so then you can say how long so here the statistical information could be how often do you visit a new website how long are you staying on the website and so on but again you can go down one more level so even within this um web page you can see that there is different kind of objects on the web page so when you open a new web page you will have the whole web page and then you will download images videos text frames and so on concert which is still within the same website so here you can talk about a session where you have yeah downloading the whole web page and then when you have downloaded it all then you start this user same time so we will so describing this um you can say web browsing session we have here would be very diff different if you look at it from an application dialogue a session point of view um we can also take a look at a more general level basically showing the same so you can say okay our connections are network how can we at which different levels can we observe that so it could be that you're connected to a network or not connected to network that would be the connectivity level then you can go down to the application level and say yeah but now i'm connected to a network and i'm running different applications so you could be running one application and at the same time you could be running another application you would stop the first one you would start another one and so on so there is an application level and a pattern in that and within each application that can be for example a client server dialog where you have that you are sending some requests it could again be the web page so you're sending the request for a website you're waiting for the reply you're waiting for some time you're starting up another session where you're asking for a request or asking whatever request and getting a reply back within each such session you would then have some data burst so assume that you are downloading a certain amount of data then you are saying okay how much data am i downloading how long time does it take to download it but again within that you can break it down further and looking at the at the data packets for example how long they are what are the inside rival times between them and how many packets is going in one direction in another direction and so on so you can look at this at many different levels usually what we are doing is that we are looking at flows so we are looking at packets which are sent between the same pair of machines so the same ip addresses um using the same ports and the same protocol so if you are doing this within the same session we would say this is this is a single flow so what i have shown here on the address is that i have some local ip that could be my own a computer at home which is communicating with three different remote servers and one could be just a one it's one session and one flow but to another i could communicate if i'm communicating to different ports i would also be communicating with different flows so even with this definition i could have multiple flows going on from the same machine and quite often you would discuss for example in a web browsing session where you are getting the web page but it's broken into objects then you can discuss this one flow that you have all the information or would it be different for us but in case even if it is you can say triggered by the same if the conversation is using different ports according to our definition here that would be different flows so within the flow we will then try to distinguish between a malicious flow and a nonmalicious flow and the the statistics or the features that we can use to describe the different flows could be some of those that are listed here so number of ingoing packets number of outgoing packets every packet links links are packet traditional number parts protocol used and so on and of course you can also use ip addresses and port numbers to describe the flows but as we'll get back to in a moment we have to be quite careful not to not to introduce bias into our own data so based on what i've been saying now about flows and about detection at different levels please take quiz number 12 and then see you soon thanks so welcome to part 7 on the basic module in network security in the last lecture we looked at how internet traffic could be described and how we could which features we could use to describe traffic flows now we'll be looking into how we can use machine learning to distinguish between malicious and nonmalicious traffic but first of all i will give an introduction to the basic principles of machine learning so machine learning algorithms can be used to distinguish traffic if there is actually a difference so we need to be able to use our features and based on these features that there actually is a difference between the religious and nonmalicious traffic if there is no difference in the traffic so if the same flow with the same descriptions could be malicious or normal issues of course we cannot see a difference between them and therefore it is very important that we select the right features uh so the right um yeah the right way to describe the traffic in the in the example here i will be showing a basic principle of machine learning used and whether and whether it is using the decision of whether we should drive a bike to go to work or school and so again we have some attributes or some features so here they are the weather and they can describe be described through the weather condition is it sun is the snow is it raining we have a distance to cover so that's a continuous value we are running late yes or no and the fuel tank which is mtf4 and of course you can discuss whether these are the correct features and you can also you discuss whether the values are correct but this is something we need to select before we apply the accordion so based on this description then we take in then we take a look at some label data so this is what is called supervised learning so when we have the label of data we have a number of observations so like the first line observation is at sony there is a distance of five kilometers uh we are running late yes and we have a full fuel tank so in that in that case we know that here we realized that the right decision was to bike i don't know why this was the right decision but this is something i need to have in my in my data set so what i feed into my algorithm is first of all a list of observations and then the true value so for traffic that would be a list of features that describe a particular flow and then well it's malicious on the malicious so of course in order to construct this data set i need to have the knowledge in order to make the right decision so for the biking it could be what i actually did and for the traffic it would be some manual or automated analysis saying this was clean but this was not clean traffic so based on the observations i can build a decision tree as what is provided here and i can use that for for making decisions of the future and so what i want to do is that i both want to train my classifier and i want to test that my classifier is actually working so in order to do this i first use a set of training data in order to train the algorithm and afterwards i'm having a set of test data which are also correctly labeled but i don't feed the label into the algorithm so to speak so after the after the algorithm has been trained i built my tree there are also other ways to do it but i assume that i'm building my tree and then i'm trying to feed my test data and to see what decisions my tree is ending up with and then i can compare the results from going through the tree with my true labeling and if there is a good fit then i have a good algorithm and if there is a bad fit then probably i have a bad equipment of course it's important to use different data sets for training and testing because if i use the same data i would get pretty good results so it's important that i show to my tree some observations that i have not seen before i would also say that it's challenging to find good data set for training and testing and that is something that we'll cover in the next video um so to say it shortly what we need is that we need correct and classified data set of both malicious and nonmalicious traffic it should be representative of botnet behavior and it should also be representative of normal traffic without bonding behavior so if it isn't representative it's not going to work in the real life afterwards and i'll now be looking at some of the challenges we experience when we try to obtain this in fact i would say that we don't know exactly if we can actually consider partner traffic to be a group that is different from all the other groups and you can discuss whether you should say okay we have good traffic here we have bad traffic here or if you actually need to divide it into more different categories but that's uh that's a research topic and it's quite uh an elaborate discussion to go into and so it's all about the data so i would say that it's a challenge to find correctly labeled data set we need to have data sets that contains no malicious traffic that could be something we could obtain from a university a company network but it's still hard to tell that it is actually nonmalicious also we need to have data sets that contains not only clean traffic but also malicious traffic and we need to know the right labeling so if we look at a lot of traffic for example from an internet service provider we would not know the labels so we would have to go manually through huge amounts of data in order to see it and and if we're using a more automated approach we might introduce errors in our in our labeling and what errors in the labeling will of course also have errors in the training and in the testing um so we need to find a way of getting that and that is something we will be discussing in more depth in the next lecture so thank you so much for listening now it's time to take quiz number 13. welcome to part 8 of the network security module here we'll be looking at how to obtain the good data so as we discussed before finding correctly labeled malware data is really hard from the real environment because we don't we don't know how we can find it and we don't know how we can classify it and definitely it's hard to find enough data that it is representative so one way of doing it is to build what is demonstrated here a honeypot or a horny net where we have machines that we infect or lead infects and then see how they behave and so as a starting point the honeypot would be a more or less closed environment where we can run the malware in a controlled fashion but as also illustrated on the figure here we do need in order to observe how the traffic looks like we do need some kind of internet access in order to see how they interact with the commanding control servers that's one part here we have that we have the malicious dataset that we can do in the honeypot but somehow we need to mix the malicious dataset from the honeypot with the benign traffic that we have from another network and we need to do it in a way that you cannot easily differentiate between them so for example if i just had my local later and my with the malwa and then my nonmalicious data and i mix it i could easily see it based on ip addresses would be different maybe there would be all different patterns if i had more tcp or udp traffic in one than another so we have to make sure that we don't introduce antibiotics in the data we need to do it like this and so what i've written here is that we have to make sure that there are no specific characteristics that would be interpreted wrongly as specific to militias or benign traffic another example of that could be if i had very short communication times in my honest part because it's mainly a local network and then i would have a short time between sending packets and receiving acknowledgement that would look different in a real network and then the system could wrongly interpretate it as if communication with a short delays would be malicious and long delays would be nonmalicious also we should be aware that we kind of lose information when we're doing this for example but generated traffic cannot be assumed to be independent of all kinds of traffic it could be that i have a specific bot where it works only if i'm using a web browser at the same time and therefore just mixing the data set i'm losing that connection between the behavior of the human behavior or the system's behavior and and and what is generating or not generating the the partner traffic and also just to mention that sometimes you can discuss what should be labeled releases are nonmalicious so you have you might have a botnet that initially or an infected machine which initially just checked am i connected to the internet can i make a google request or can i check if the windows timestamp server is available and that might not in itself be a malicious or harmful activity but would we consider it malicious because it's initiated by a malicious piece of software that's a good question so if it is one request maybe not if it is 10 requests when do where is the border between malicious and nonmalicious traffic that's also something that is nontrivial so once we have the data set with malicious data and the data cell with the nonmalicious data one way of mixing it is really by mapping it together so as shown here i have two kind of traffic i have my batch race file which is done locally and then i have a larger network where i have a background traffic trace file which i believe is nonmalicious so on the next slide i will show how these can be mapped together so here i see that my infected machine and i take all the um all the traffic from the infected machine and then i map it onto one of the machines i had creating my background traffic so that mapping could be done by taking the ip addresses and just changing the ip address and similarly i would have another infected machine so i could have two and they could be mapped into into different machines of the of the background traffic in this way i would get in and out with a traffic trace that would contain both malicious and normally static and the malicious traffic would come from computers who were also generating enormous normal nonmalicious traffic but still i have to be aware not to introduce any bias in the way i do it for example by this by this timing issue so how do we generate these malicious data sets it's something i did touch upon very shortly by mentioning the honeypot um one up one example is what is called au hanija where we are trying to handle some of the challenges that we that we experience first of all the bot should be brought to believe that it's actually part of a working network because if it doesn't if we just leave the computer and has no human human interaction with the computer and the web browsing and our use of other programs etc the bot code might identify that something is wrong that it might interpret this as it is in a closed environment and therefore it would behave differently than if it was on a normal computer so again keep in mind that those doing the botnet are also trying to make sure that if we try to study the behavior if we install it in order to to run a honeypot that it doesn't behave as usual also it should be a cure secured from the outside world so even if we only allow small amounts of traffic such as command and control traffic which should make sure that we don't harm anyone else both for legal and for ethical reasons um and it should be possible to operate monitor and control the system without too much work so it should be as automatized as possible in the setup we have here at noble university we have been running up to three hundred thousand different kind of malware or different malware samples at least some of them are very much alike but in order to run this large amount of malware we have to make sure that we can do it efficiently and automatically therefore it should also be easy to reset in vector machines to wipe them in order to run new experiments and then i will say a little bit more about honeydew in the next presentation and already now say give credits to the master students who have done such a lot part of the work um with the setup that we have and this is something we will look into in the next video so for now please take quiz number 14 and see you again shortly thank you very much for listening and see you soon welcome to network security basic module part number nine at the last part here we'll show a little bit about the oliver university honeydew product which is mainly run by students but which has given us a lot of insights into how botnets operate so what we have here is really a malware testing environment consisting of three main components first of all if we start from the from the right side there is a test environment where we are able to execute malware and run it to see how it behaves the test environment contains both inmates and some infrastructure that emulates the internet then we have a containment part which make sure that we don't send any harmful traffic out to the to the real internet but still allows to have some of the necessary access for example so we can observe the commanding control traffic and finally we have the analysis part where you can collect and analyze the data for example using them for training and testing the machine learning algorithms that i mentioned before um so the test environment it contains so if you start on this right side of the figure again and the test environment contains a number of machines pieces and as well as virtual machines which we can infect in order to make sure that our malware is actually behaving as it is in the real world we have also done some ultimate task scripts for emulating normal user behavior and by saying normal user behavior that's really something some simple internet browsing that we open my browser go to google search in words in a dictionary click on a link close down the web browser and so on we also have a facebook account so we can open the web browser go to facebook log in with a specific account for the purpose log out and go out again moreover to avoid that we have too much traffic to the outside world we have implemented a dns server and a windows network connectivity indicator service server so we don't have to so these are typically used by botnets and we can in this way we can reply to request and and show them that they are live and online without actually having to to connect us to servers or machines outside our own network so that's part of minimizing the amount of traffic that we are sending out to the internet and actually we have we also can do a bit more things and we are constantly working on improving this part yeah so the possibility to control the image from the central machine is also important so you can easily clean the machines in order to start new experiments and we can easily install and execute different column metalwise in fact this is not so trivial because when we are working with malware we have to make sure that our that our central computer in the system doesn't accidentally become infected then about the containment part we that's a converter as a set that ensures that we can study the buttocks without harming others one way of doing it is that by default all outgoing traffic is filtered so we block it we don't allow it but we can allow some connections based on the white listing so when we know that it's harmless which can be decided manually or semiautomatic or automatic when we decide that okay this traffic is harmless then we can let it through i will show in the next slide how this can be actually done for the other parts this is this module as well as everything else is still under the development and then one of the things that we really would like to improve on is to automatize this assessment of which traffic can be allowed to leave the system so here we can see an example of how this can be done so this is a normal tcp handshake so usually when the inmate would be communicating with the commander controller setting up a tcp connection would be that you send a syn packet a cenac and a neck so that's the basic tcp trigger hand check and what we do is that we have implemented a handshake module which takes the connection so whenever we we get the request and we stop it in the handshake module but we send a reply back so the inmate believes that this is a general genuine reply and continue making the connection then we can see on the packets on the first packet in the connection we can assess is this harmless or not harmless currently this is a manual approach but it can be semimanual as well and then we decide okay it's nonmalicious like sending a nick then we send a reset packet back in order for the connection to be reset and then the inmate will try to create the connection once again a drawback of doing this is of course it's a manual process it's also a drawback that resetting the connection might be seen from the bot as a suspicious behavior and he or she might not try to establish a connection again or even worse might not try to establish the connection um exactly as it would have been otherwise so here we would like to be able to keep this connection kind of in the air and when we see that the connection is genuine and that then we can let it through by um by replaying the traffic towards the irc server okay it's a little technical but i hope it makes sense in addition to the handshake module we actually also have a web servers and so on in the internal network to make sure that if our website is requested we can send something back it might not be the website that they did request but we can at least show that we are online for the monitoring part and we are able to monitor all the network activity here we have a challenge in the real life because if we are working on a real interface let's say it's a 10 gigabit interface or even four times 10 gigabit interface what it could be then really a lot of data to to work on and even though we don't when we started the the network traffic we don't need all the payload information but we still have to process and remove the information that we don't need so here there is there is a big challenge in handling the amount of large amount of data so that was a short introduction to our au holiday with the components we have the test environment the containment and the data analysis now please take quiz number 15 and since this is the last lecture then after quiz number 15 you can take the filing quiz and then you are done with this module thank you very much for following the module and hope to see you again another time