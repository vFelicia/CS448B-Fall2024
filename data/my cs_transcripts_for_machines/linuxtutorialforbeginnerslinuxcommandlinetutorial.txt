we're going to use the the terminal to issue commands on issue commands to our operating system so that we can do different things and we want to do some very basic things to get started and that includes moving about the file system changing directories creating directories creating new files copying files deleting files and then looking at an editing file so just some very basic things we do on a computer I want to introduce you to the commands we use in Linux on the command line some of you may know them already so it should be easy the first thing to get started we're going to interact with our computer and what we see on the the window is the prompt this is referred to as the prompt is prompting me to issue a command it has some structure which we'll explain as we go through but then when I type something in then press Enter it runs a command on my computer and executes something now one thing that we need to know about is where is that command executed with respect to my computer and where means which directory or folder is executed in so we need to know something about the structure of the folders and directories I will use the word directory some people talk about folders but the directory and in fact the set of directories and files we refer to as the filesystem does anyone use Windows as their main operating system put your hand up it's ok I won't give you a lower grade right so Windows you you use folders and files what is that the topmost directory in windows again Program Files even above Program Files C Drive is if you think of Windows talks in terms of drives and maybe the topmost directory I don't know if it's still like that don't type this this is just a comment but because it's something like that or like that alright so C Drive we can think it's the topmost directory in our file system C is the drive there may be other drives and you can think that this backslash indicates the topmost directory because we have a hierarchy of directories underneath that our sub directories what are some of the sub directories someone said one in Windows program files I don't know I don't have Windows so please tell me what are some other sub directories of the top one in Windows program files user or user and settings or something and maybe system in the old days or Windows temp documents or whatever but that you know that there are some common directories from the topmost directory and under them a further directories so we say we have a hierarchy and there's the topmost directory and sub directories and so on in UNIX type operating systems UNIX type refers to the class included in Linux and UNIX operating systems there are many variations Mac OS X is a UNIX operating system Linux that were using is a UNIX type operating system in that there's also a hierarchy the topmost directory is represented by the character forward slash instead of back slash its forward slash the separator of directories is a forward slash this topmost directory we give a special name we refer to it as the root directory the root of our file system or the root of the tree and under that our sub directories and so on when we run a command on the command line it's run in some some directory which directory to find out we can check the present working directory so you can try the commands now follow along the present working directory PWD shows us what is what directory on Kara liyan and the answer from the from the root directory the forward slash there's a subdirectory called home and from that there's another subdirectory called student so we can think in that the hierarchy or in the file system I'm in the slash home slash student directory currently together this is called a path the path in the file system I think you know this already okay so syntax may be slightly different but you know the concepts but pwt tells you where you currently are the first thing we want to do is move between directories change directories we use CD to do that CD will change between directories where we usually provide where do we want to go maybe I want to go into the /home directory CD slash home what's rattling perfect thank you Sam CD slash home takes me into the /home directory you may guess that it worked there's a hint there but PWD tells me now I'm in the /home directory or CD into the root directory okay the forward slash on its own means the root directory we can't go any higher if we think of that the topmost level and we can go back to the slash home slash student so we can change directories when we specify a parameter here or the option to change a directory into which directory in all of these cases I started with a forward slash this means it's an absolute path absolute means in this case it's relative to the root directory but we don't need to start with a forward slash we can have a relative path let's see what I mean currently I'm in slash home slash student let's go into the root directory and I can change into the home directory I didn't start with a type it again I don't start with a forward slash and now I can change into the the student directory so when we pass a parameter to the CD command if it starts with a slash it means it's from the root directory if it doesn't start with a slash like CD student it means relative to the current directory we were in home we CD into the sub directory apart which is called student so we can move up and down in the hierarchy in fact an easier way to move up there's a special type which is dot dot CD dot dot moves up in the hierarchy I was in slash home slash student I moved up to slash home if I go up again I'm in the root directory so dot dot means upper level from where you currently are how do I go home you don't want to go home yet is that what you're saying oh alright good but if we want to get our home directory of course there are different ways we can type in the specific directory slash home slash student and we're in our home directory and it's common in in our operating system that our operating system supports multiple users one user is called the student user one is called instructor one is and there are some other users on this each computer and those users have their own private directory in the slash home directory so we are logged in as the student user our home is slash home slash student if I just briefly show you I'm currently in this window logged in as the instructor user my home is slash home slash instructor ok different users have different homes same as what is it users and settings or documents and settings or whatever it's called in Windows different users have different directories now as an example let's go back to the root directory a quick way to go home is just type CD with no arguments CD on its own will always take you home another shortcut for the home directory is the tilde character a squiggly line as an example go into the root directory CD tilde also takes me to the home directory so that the squiggly line the tilde character really means your home directory and that can be useful because we can talk about directories relative to our home we'll see in a moment that's a little bit about directories but more importantly what about files and what is inside directories so I'll go home make sure I am there yes we want to see what's inside a directory we want to list the contents of the directory we use LS LS returns what's inside this current directory and in my case it's there are four things code posters as vienen VM and as a hint when it's blue on your window it means those four things those things are a directory not a file normally we talk about files and directories and there are some other special types but we'll deal with files and directories because I've set this up I know that those four items code posters SBN and VM are directories inside your home directory so let's go into one of them maybe the posters directory and we can LS there and we see a set of files and you can guess that they're files right your extension PDF and the fact that they're not blue is that they're files not directories don't always rely on the color coding because different systems may have different colors and also some may be black and white or someone may be colorblind so there's another way to show what is a file and directory we'll see shortly actually we will see now so LS shows lists the contents of a directory we can pass arguments to LS we can not just list the current directory but list a specific directory LS slash lists the contents of the root directory and it shows the in the root directory there are some sub directories called bin home Lib root user and others and some special files that is the like the C Drive directory and some of those directories are common across many different unixlike operating systems here's an example of listing the contents of a directory VM relative to my home directory that tilde or squiggly line means slash home slash student so that's really the same as doing this the tool does just a shortcut there many commands so we've seen PWD CD LS we'll see more many commands have options extra features and I usually specifies using a dash as the option a dash followed by a letter so LS currently it shows the list of files in my directory I'd like to see the file sizes so I want to see the list of files and get the long output I'll use the minus L option LS minus L and now we see that same list of files but we see some more details about each of those files the same way in Windows that you can show the file list in the Explorer as icons or you can show the details I'm not going to explain all of this information today because some of it may be come up later or is not relevant just yet but going backwards say for the biography biographies dot PDF file there's the file name the date and time of the last modification of that file when it was last modified files actually have different time stamps associated with them not just when they were modify but when they were created this is the last modified time what this the size in what the units bytes this is the size in bytes so this file is about six megabytes this PDF the next two going backwards are something about who owns this file because we have multiple users on the computer each file has some ownership one particular user owns that file which user the student user owns the file there's also some ownership e with respect to groups of users not just the individual user but a group of users it turns out in this computer setup that there's also a group called student this number one not relevant it's about links to the file let's ignore it these 10 characters the first character if it's a it's a file if it's the letter D it's a directory we'll see another example in a moment the next ten the lakes nine characters about the permissions on the file can we read write and execute that file and that's related to the users we're not going to cover that today the permissions but just be aware to find the file size and the date and time even the owner use LS L if I LS L meaning upper directory we see that these are have the letter D meaning they had sub directories so that's how we really know it's a directory or file whether that output is a D or a let's go home sometimes I may use clear just to clear out the screen so if things are at the top you don't need to you if you did you fail okay no it's alright I'll just do it so it's a bit clearer on the screen you don't need to because it's sometimes useful to see what you've just done LS there are four directories we know in our home directory in Windows you have hidden files and directories okay some files and directories are not displayed by default though of we refer to as hidden files and directories the same in our Linux operating system we can have hidden files and directories I know you all love security and cryptography and learning about security hidden files are not a security mechanism they hidden from a presentation perspective it's easy to see them to see them use LS a to see all files this shows you the hidden files and directories and if you look closely you'll note that the hidden ones start with a dot so to create a hidden file or directory just create one that starts with a dot dot profile is a hidden file dot bash alias is another hidden file dot cache is a hidden directory in my home directory a shows us all files L gives the output in long format we can combine options sorry that was maybe some people didn't see it LS a L you can do both or as a shortcut just LS al in any order al l a show me the long format output for all phones you can change into those hidden directories just the same as a normal directory I'm gonna keep going with a demo but make sure you ask that the TAS get their attention and ask some questions as we go we'll give some time to have a break a little bit later let's create some things we're in my home directory let's make a directory mkdir and then supply the name of this directory I want to make and let's change into that new directory and let's maybe make some others so mkdir makes a directory we'll make some files shortly we can change in directories doing things on the command line of course you realize we need to type a lot sometimes we'd like to speed things up so there are often keyboard shortcuts that we can take advantage of to speed things up one of them is the autocomplete feature so in my example I've got three sub directories security Steve and test I want to change I know I've got them there I want to change into the test directory so cdrom and I type test but I am what I can do is I can type T and of typing the e I hit the tab key so the tab key hit that see what happens it autocompletes for me so if you start to use this autocomplete you can save on your typing and speed things up if I type cd' I want to go into the security directory I know it starts with an s CD s press tab nothing happens press it again because there are two possible directories that start with S it doesn't autocomplete one of them but if I press tab twice it shows me those two options security or Steve which one do you want I type II press tab again and there's only one unique directory that starts with se security it works on files and directories many things so the tab key on your keyboard is used for autocomplete we can remove directories rmdir RM for remove directory another keyboard shortcut if you want to run a command that you've previously run you can scroll through the previous commands using the arrow keys on your keyboard on your keyboard try the up and down arrow if I press up here Scrolls through the previous commands down takes me back I want to make the directory Steve again done the up and down keys the arrow keys back in my home directory let's remove this directory IT s35 what happened it gave me an error message often when a command runs if it's successful it doesn't print anything on the screen unless there's some output like LS like but CD rmdir and so on here is printed something right I've tried to remove IT s35 but it says that directory is not empty there's something in it rmdir by default will not you let you remove a directory if that directory has something in it so that's just a precaution there if I want to do it there are different ways but I couldn't remove the subdirectories first now so I could remove I will not do it I could remove the directory i TS 3 5 2 s slash security then remove the test directory what's in there let me check to make the example a bit of a little bit more fun I'll make Steve again you can name yours different but in my case I have security Steve and test I want to remove all of them then I can use rmdir now or I can to capture multiple values I can use some expression regular expression and simple ways to use star star means all values that match anything they're all gone I'll make mine again just to illustrate that I've got three directories security Steve and test maybe I just want to remove the s directories security and Steve rmdir s star remove everything that starts with an S we're left just with the test directory so the star this wildcard value can be used in many places where we use files and directories when we list LS when we make things edit files copy files we can use star where necessary before we move on to files one last special directory the current directory if I do LS al notice LS al there's a subdirectory called test it it shows me that there's a directory up so it's a bit strange but a keeps track that up there's a directory above my directories dot dot we know and it shows me dot means this directory dot is a special character that we used to refer to the current directory CD dot just takes you to the same directory that you're currently in though it's not useful there but we'll see in later users the dot refers to the current directory these commands are on the printed reference card in front of you the middle sheet treated on your desk is the commands on going through let me see if I've got it available on the course website the reference sheet you have in front of you printed and you have it in every quiz so you can use that in the quiz we've gone through directory operations special directories some other LS options will now go through some file operations I'm currently in my home directory I already have this IT s35 directory let's go into that and make some files in there there's nothing in there actually there is there's still a test directory let's get rid of that IT s35 in my case is empty doesn't have to be let's deal with files and a very basic thing let's create an empty file an empty file is there's think there's a placeholder for the file there's no content so we can use touch followed by a file name choose any file name touch creates an empty file empty means there's the file system has a record of the file but there no not no data in it and we can check by using LS L the size of the file abc.txt that I created with touch is zero bytes right we don't commonly do that and in this lab but sometimes it's useful to create something for testing purposes we can create files with touch but a better thing to do is to create a text file and use a text editor what's your favorite text editor notepad nice selection notepad any others no pad + + okay any others TextEdit many there's many different text editors nowadays ok no pad comes standard on on Windows but very basic or same on on Ubuntu Linux there are different text editors installed and we can install others but on the command line just to get started today we're going to use one called nano nano you type in Nano and it opens a text editor press Enter Nano and we can do our normal text editing down the bottom of the window are some menu items and the the hat character or the this character means the control key so down the bottom you see if you press ctrlg you'll get the help control X will exit control o right out mean save write the file to disk ctrl o says what's the file name you want to write let's give it a file name you can use a different one my file dot txt be present oh he wrote three line lines it saved three lines on disk so my file is saved there are other options one that we may use briefly today you want a copy and paste normally we don't have the mouse available no we're not rely on the mouse so let's try and do everything with a keyboard for now copy and paste well a simple or a quick way to do with it we can use ctrl K to cut control u to an cut and cut is like paste ctrl K and ctrl ctrl K cuts control U and cuts so that's a quick way and it works on lines there are other ways to do it on on selected text let's make a file which has lots of lines in it right just want a file so that we can use it for testing let's exit doesn't matter what's in your text file I want something with lots of lines in it so that we can use it with some other programs ctrl X to exit it prompts me to save because I've modified the file yes I want to save Y for yes what filename just press Enter I don't want to change the file name now I have a file of 711 bytes let's find a few more statistics about the file we can count the words in my file WC word count it's more than just the words it says there are 42 lines 145 words and 711 characters if I just want to know the number of lines minus L is an option word count minus L my file 42 lines in my file for today if you can't remember the commands then use the reference card printed in front of you over time as you use them you'll start to memorize them but sometimes remembering the options minus L is there a way to show just the number of characters or a number of words well sometimes it's hard to remember that all the detailed options so we can try some help and usually commands have their own manual and we can access the manual using the man can make command the manual page or the man page followed by the command is like showing the help for that command try it man WC this is the help page for the WC command and you can scroll up and down with your keyboard up and down arrows if I want to print the bytes only see the characters M the new lines that is the lines L the words W so I now learn a bunch of options for WC we can scroll up and down press Q to quit this is a special type of text editor to get out of it press Q this is the man page most commands have a have their own man page man LS all the options for the LS command a has many options sometimes I'll ask a quiz question oh say how to do this particular thing where you've used the command but you need to go and find the option to get the very special case read the man page cue to quit let's do some more things on our text files we've created a text file with did a word count let me just clear and show what I have I've got two files one of them is empty my file contains some some content instead of using a text editor to display the file there are some other commands to display a very simple one is called cat cat is not an animal but it is a program that shows the contents of a file it's short for concatenate it simply prints off the contents of the file on the screen cat followed by the file name prints it on the screen you may have noticed in my case because there are lots of lines on that file when I did the cat I missed the first lines so instead of using cat sometimes we can use less less again shows the contents of the file on the screen but page by page and now I can scroll up and down with my arrow keys so it's got the top lines and I scroll down and I get to the bottom of the phone so less is us is slightly more advanced than cat cat just shows it less Joseph but but has paid breaks Q to quit less like the man page Q to quit you wanted to see the start of a file the head of the file head by default shows the first ten lines of the file or the end the tail tail shows the last 10 lines of the file you want to just get the first three lines of the file ed entry mo file or the last five lines you can actually do minus five as a shortcut n3 or simply minus three shows that selection of or that number of lines are the head or tail cat shows the full file less shows the file pagebypage head shows the first n lines tail shows the last n lines the reason we have all these commands on files is because many programs in Linux and UNIX systems are configured via files the operating system configuration is not done in a registry or a separate database but in plain text files and similar for many applications and many programs on the command line use text files to do processing so it's useful to be able to process those text files let's copy some files CP to copy copy my file dot txt new dot txt and we now have a copy of that file copy doesn't have to go to the same directory I can copy my file back a directory and change it the name to another file and if we look in the higher directory we see that new file so copy uses a source and destination the source and destination can you include the the path the directory of the farm what if I want to copy another dot txt into my current directory how would I do that I mean I TS 352 in the higher directory there's a file called another dot txt and i want to copy it into this directory copy another dot txt from the higher directory what's the destination the destination is this directory the shortcut for this directory is dot copy another dot txt from the higher directory into this directory and we now have a copy so be careful or make note that I use the dot there when you redo a copy we must always specify source and destination sometimes we can use the dot to represent this current directory move is similar to copy move new dot txt upper level new dot text is gone from this directory it's now in the higher level directory move moves the file we can move it back I moved from the higher directory new txt into this directory moving the file there's also the same as renaming a file you want to change the name here I simply rename you txt to XYZ dot txt so we can use move to rename note that we can rename files and the names of files in Linux the extension doesn't matter in the examples I've used I've used dot txt because we we knew there were txt files but the extension is not important if I change the name you use a different extension it doesn't change the format of the file X Y Zed is still the same text file as before contain some text I can move X Y Z to X Y Z dot dot it's not a Microsoft Word document is still just a text file extensions are not necessary and are not necessarily interpreted so we can use any extension but it's common sense to or common practice to use an extension that is informative to the user and the last thing we can remove files are M followed by the file name well let's remove all of our text files star dot txt when I say text files I mean those would I've given the extension dot txt RM removes or deletes files there is no recycle bin there is no trash on the command line if you delete a file it's gone so you need to be careful in the graphical interface there is a trash bin but we're not using that when you delete a file here it's no longer available so be careful when you remove files especially if you use a wild card like star RM star delete everything if you have a thousand files in that directory they're all gone sometimes the permissions on directories mean you can't delete everything but you can do some damage if you can delete delete your own files accidentally before we have a break let's do the last few things on files let's find some files on our file system I'll go home clear I'm in my home directory often we want to search for files that is somewhere on my hard drive there's a file that I'm looking for I know the name or the the structure of the name there are different ways to locate files one is using locate locate followed by a file name maybe Wireshark I know there should be some files about Wireshark Wireshark is installed locate may tell me about those and it tells me all the files that have the name Wireshark you know and you you can scroll up and down I will not but it returns a whole set of files the complete path the sub directory and the file name that refers to Wireshark so locate okay if there's no file then it will return nothing then locate I had x1 what IDs 3 5 to locate X Y Z dot dot this is interesting I have a directory called IDs 3 5 2 and I inside that I have a file called X Y Z dot doc if I try to locate X Y Z dot doc it doesn't return an answer locate is a very well locate uses a database of files to find the answer it's very fast to find the answer but the way that it works is that oh maybe the past hour or so the operating system has done a search for all the files and put them in a database but as not up to date recently I've created Xyz dog if I try to locate it it's not currently in the database so locate cannot find that so locate is very quick but doesn't cover all the files so a more powerful command to find files is using find it's more powerful but slightly more complex find the pattern we'll use find specify the directory we want to search in and then the option name because we want to find based upon the name star dot docx so there's three arguments to this find command the directory I want to search in including the sub directories then I say I want to search based upon the file name because actually you can search on other criteria file size creation date permissions and I want to find anything that ends with a dot dot and that finds X Y Zed dot dot so it does an actual search if I want to search for my current directory it's good practice to include the double quotes especially when you use a wildcard there and the star character fine searching through my current directory files with name the end with dot PDF and it shows me all the PDF files what if I want to find all the PDF files on the hard disk fine / name star dot PDF that is search from the root directory and end including all sub directories and you say it may see many results you may also see some errors permission denied Arabs so it searched through the entire harddisk returns all the PDFs but some directories the student user is not allowed to access to do the search through so you'll often see permission denied in there but you have many results we can locate files although it doesn't get the most recent files more powerfully we can find files you think the command find the last way that we've commonly used to search for files is to search for application files or executables before we search for Wireshark and it returned many directories files related to Wireshark but I want to find where is the application Wireshark so there must be a program and executable on my computer that is Wireshark we can use which it's in slash user slash bin LS is also an application it's in slash bin nano is an application so these are the executables the things that are executed when we type the command it's in slash user slash bin bin is short for binary and it's usually it really means the application the program there executable which searches for programs locate and find search for any type of files so I'm back into my home directory let's go into my IT s35 directory what's in there my XYZ dot doc make sure you have a file with a few lines in it doesn't matter what's in it I'll just check my own X Y Zed my file has some text in there one thing that we need to know is how to process text files so we've seen some commands for dealing with text files displaying showing the head the tail word count it's very powerful if on a command line if we can automatically process text files to help configuring our computer so the next thing we're going to do is first search through a text file and one way to search through a text file is called a program called grep and a simple way to use a grep then you specify a pattern what do you want to search for maybe you want to search for the word example in my file and grep will return all of the lines in that file that match that pattern in my file yours may be different so maybe your word you search for can be different depends on what's in your file mine returns three lines inside the file which contain the word example so very simple search through the file return all the lines which contain that pattern we can use wildcards there if we want what did i do there that's a bad example don't use a wildcard there let's avoid that one the grep so what I did there was a mistake for what we want to do grep has a number of options where we can specify regular expressions and use wildcards and other special characters to match different patterns but we will not deal with those right now it's takes some time to look at the syntax so let's simplistik was searching through four particular words in a file for now so grep can search through files we can do an inverted search find all the lines that don't match that word again all the lines the minus v4 inverted is all the lines that don't have that word and it shouldn't show the ones with example so a very quick use of grep to search for a file we'll see some other examples later next thing up until now all of the programs who have been running we've interacted with with those programs by running it and then they usually show something on the screen so grep for example printed out the answer on the screen the screen is how we get the output of this program but in fact we don't have to print it on the screen we can put it inside a file so we're going to look at how we can put the output of a program in a file rather than printing it on the screen and it's quite easy in fact do that again grep I want to search for all the lines in my file which don't contain the word lines if I do that those lines are printed on the screen what I can do is redirect the output of that program using the greater than sign into a file I can name it what I like my output txt ran it see what happens it doesn't print anything on the screen the grep program rum runs but the output of that program is redirected from the screen which is called the standard output the standard location to put the output and is instead sent to into a file now let's look inside our file my out we can use less look inside your file see what you get you see the output of grip so this concept is called redirection we redirect the output of a command to some other location and the very common way we do it is redirect the output of the command from the screen to a file LS we know has LS L as an option so the long output we can LS a particular directory LS L from the root directory we can also recursively LS a recursive LS means show me the contents of that directory and its sub directories and their sub directories and their sub directories it keeps going that's what the uppercase R does with LS let's list all the files on our hard disk it may take some time to list them you see it's going through the hard disk listing all of the files to stop that because I'm too impatient you can try ctrl c ctrl c kills or cancels the the program from running that was LS L are up against our / maybe I want to know all the files on the hard disk instead of showing on the screen put them inside a file now what's happening here are some errors being displayed the files themselves are not being displayed but the error messages are what's happened when a program runs that program produces two types of output the program produces output the standard output from the program that normal output it it it produces when there's no problems but if there are error messages they are also printed on the screen but the error messages are considered separate from the standard output what you see on the screen now are the set of error messages from the command a run with redirection and the greater than sign it only just shows the normal output and puts it into this file the error messages are still printed on the screen the concept and it's on one of the slides on the website the concept is with any command when we run a command there are in fact three ways three interfaces to that command there's the input to the command some commands take you or accept input from you we haven't seen any yet we may see some later some commands we can supply input it's called the standard input then the command runs and the command does something and it produces two type of output the normal output the standard output which is the expected output LS shows a list of files grep shows a list of lines that match some criteria but if there's errors it may also print error messages there's it goes my mouse and that's referred as the standard error so there are three interactions to a command the standard input the standard output and the standard error normally the standard import comes from what we type both the standard output and standard error are printed on the screen after when the command runs that's what normally happens with redirection using the greater than sign the standard input is normal that doesn't change the error messages are still displayed on the terminal but with redirection with a greater than sign these standard output is saved in a file okay so instead of printing on the terminal it prints it into a file so we can look at it later it's very useful to get a record of what's happened you don't want to look at it as it goes you want to look at it later redirect into a file there are different options you can redirect both the standard output and the standard error into a farm note the difference here's the ampersand character and the grade of n with just greater at greater than the standard output is saved to a file but not the arrows with this one both the output and errors are saved into a file and there are other variations one of them the common one we'll use is this just greater than sign run a command don't print the output on the screen print it into a file another one which I don't have on the slides if you use two greater than signs it appends to the file one greater than sign over writes the contents of the file to ads to the end of the existence of the file if it exists so let's try those two commands again the others with the ampersand will not try I think will not use let's try a couple more redirections two files just check that command I run all files dot txt it's only 30 megabytes in size that if we have a quick look at it not all of it of course it's the list of all files and directories on my hard disk except for those which I didn't have permission to look at I'm going to delete that if you create a one delete it so you don't take up space we'll do a few more simple redirections and to do them let's introduce some other commands who are you logged in as if you forget who you are then ask the computer computer Who am I ok Hugh Who am I tells you the current user you're logged in as in my other terminal I'm logged in as the instructor ok there are different users on here we can redirect the output of Who am I into a file all right so instead of printing on the screen it just goes inside that file another command echo echo echoes that string onto this the terminal very simple whatever we type after the echo is printed does nothing other than print on the screen it's like a printf statement in a you know programming language or a print statement so we can echo into a file and if we want to append to a file instead of instead of overwrite it use 2 greater than science name already contained student and now I'm going to append to the end of that hello to greater than signs echoes one of them over writes just to confirm that if you just use a single greater than sign you'll delete what was in the file before so the greater than sign the two greater than Xand there are some other variations are called redirection redirect especially the output to a file next and another new concept is that when we run commands often we'd like to do more complex things than what we've done so far and we can do that by running multiple multiple commands not just one after the other but run a command take the output of that command and use it as input to the next command and this is called a pipe combine multiple commands together using a pipe let's see some examples what's my IP address I told you at the start 10 10.16 dot 201 what's yours do you know the command to find her Who am I tells you who your login is your IP address is which is not the topic for today I think we're may have seen it last semester you may have seen me use I have confident you don't need to remember that yet but it's useful for the example ifconfig shows you details about your interfaces and if you scroll up you'll see your IP address somewhere which interface does it has an IP address for you I don't have scroll on my terminal so I just scroll up here I have conflict I know ETH 010 10.16 dot 201 and I know that's the Internet address I net address I don't want all this other information I just want my IP address so what we can do is maybe try Grip run ifconfig and take the output of i of config and then use that as an input to grip searching for eye net address try that where the way to combine the two commands is this vertical bar which is shift back back thoughts backspace what's that backslash backslash is the key shift backslash this is called the pipe character it means take the output of the first command and use it as input to the next and it returns all lines which were output from ifconfig which match inet addr and we see two there can we improve upon that what if I just want the IP address now let's run I have config again but we can run I have config with a sub option with the specific interface I want this is a little bit outside of the scope today we'll cover later but with I of config at shows I have 88 0 1 2 and ello I'm looking just for eth0 so I have config 88 0 and now grip into I net a DDR the internet address and I get a single line which includes my IP address plus my broadcast address and a network mask I just want that IP address so let's try and do some operations on that single line there's different ways to do it we can take that output and pipe it into another command this other command we can use one is called cut cut takes a string of text and splits it into chunks where we can specify the delimiter and say is the colon character that is the chunks are separated by that character and the chunks actually called fields this is going to take this line of text and cut it up into fields separated by the call on character so this would be field 1 field2 field3 I want field to that's what the minus F does what do we get can we do another cut and just get their IP address let's pipe that into another cut the delimiter what is a space maybe field one now I've extracted my IP address from ifconfig annex and removed all other information there may be better ways to do that but and it's may only work in certain cases but it's an illustration that we can combine multiple commands together using the pipe operator that vertical bar and in doing that I've introduced this new command of text processing called cut and the a simple way used to use cut we specify the thing that separates the fields the delimiter and it can only be a single character and then we specify the fields that we want and cut is given on the Linux reference sheet as well many commands can be combined using the pipe operator as long as one produces output and the other takes some input what's the port number used for a web server remember remember a common quiz question not this week later weeks the port number for web server not 50 stars with an 880 different applications have different port numbers some we won't remember on a Linux operating system there's a file that lists the set of port numbers it's in the EDC directory and the file is called services again this is outside of the scope for today but we'll use it as the example we can see the port numbers of different services secure shell servers use port 22 HTTP if you scroll down uses port 80 and others queue to quit maybe we can search through rather than having to browse through let's look for all the lines that contain HTTP and we get well we get a few extra lines that we don't really want here if we want to filter out we can actually specify this specific word of HTTP a gets rid of some and then we could actually we don't even need the word we could type that into a a cut and get rid of the comments for example separate the fields by the hash character grabbing only the first field maybe you want to sort them so all I'm doing is building up one larger command by combining them a smaller ones with pipe operations sort the output HDTV all becomes before HTTP maybe we just want to cut and get rid of everything before the after the slash so just another example of building up and getting information from a text file especially using pipe grep cut sort and some of the other text operation commands can be used in the same manner last week we introduced some some basic commands to get around on the in the Linux operating system so we'll continue today and look at some different things look up running processes connecting to other computers and a little bit about permissions who can do what on a on a computer the first thing we'll look at is processes and when we run a command LS for example LS is actually a program on this computer we know that if we use which LS LS is actually an executable installed on the computer in the bin directory so when i type LS that is the program is executed it does something that is at this the the files or the directories and then it stops executing so that's common with most commands it starts the application it does something and it stops we talk about that it starts a software process a process runs does something and then so we want to look at that in a terminal normally we just ran one process at a time I type ls' I press Enter LS execute the process runs stops then I do another command so just sequential we can do more complex than that we can run some processes leave them running and then run some other processes so we'll introduce how to do that the concept is that we can have one process that we can run and interact with by typing things in and then other processes we say are running in the background they're running but we don't interact with them so let's see how we do that and give some examples of why it's useful first let's see one of our commands we did we did last week LS if we want to list all of our files on our hard disk LS l showed us in the long format and there's a minus r option recursive and we want to list everything on the hard disk so let's list all files in long format recursively starting from the root directory recursively means list the files in that directory and then all of its sub directories and all of its sub directories and so on so essentially lists everything on the hard disk run it see what happens so LS L uppercase R /to mean lists in the root directory and when we run it you see it prints all the files on the hard is there some we can't can't see I want to stop so the process is running all right I can't interact with the terminal I can't run other processes while this one's running it stopped okay now I can run other commands for the next command so that process took a long time or some things we may want to do maybe I run it and I realize I'm not so patient so I run it again how do I stop it before it finishes one way is ctrl C so you don't see the command oppressed but note down here it showed I press control C character there know the two keys so that stops it but that's what we say you stops or cancels or process and sometimes we say we kill the process so we talked about the process was running to stop it before it completes normally controlc will do that could cancel the process so that's useful when you have something that you cease going to run for a long time and you realize you don't want to wait for the end or if you've done something wrong or done typed in the wrong command and it's sitting there waiting for input you've got nothing no idea what to do then ctrl C will cancel or kill that process and you can return to the terminal you need to interact just to show that because doing that that to demonstrate that we need a process that will run a long time the LS minus LR does run for a long time let's find another process just for the demonstration I'll just clear that try yes what does yes do yes Prince Weis forever this process will run for a long time it will run until the computer shuts down so it's just for testing all right so just Prince Weis forever so how how do we stop it well we can control CD to cancel or kill the process so we'll just use yes just as an easy demo of manipulating processes we can so when the program runs when I run yes it's running I can kill or cancel the process with control C and it and the operating system stops the process and deletes any information about it but we can also pause the process or suspend the process put it to sleep and to put a process to sleep suspend control Z control see kills control Zed suspends or puts it to sleep that is the operating system still has some information about this process in memory it's just not executing at this stage it stopped it says on that command line it's not running it but note with it suspended we can still interact with the terminal we would like to us maybe if it's pause to restart to resume so what we can do to see the set of processes that are stopped or paused from this bash shell they referred to as jobs what jobs are paused if we type jobs it says the jobs that are proposed or suspended or stopped at this stage yes he's stopped and it's job number one so that's a paused process we can bring it back and start it again and we say that there's always one process that can run it with interactivity with the terminal and we say that process is in the foreground so to bring that process back we can say foreground followed by the job number is job number one fg1 or if you just type FG on its own it will still work because it brings the most recent one pause back but FG one will bring our process yes back to the foreground that is it's running again controlz we'll stop it again and we see it's listed as the jobs foreground we'll bring it back FG followed by the number or if you want the most recent one just FG it's now in the foreground a process in the foreground when I do something on the terminal I'm interacting with that process in the foreground alright there's nothing to interact with this program it just prints on the screen so I can't run other programs at the moment we can control seed kill the process there's no jobs suspended now so jobs list those that have been suspended or stopped FGM brings can you be used to bring one that was suspended back to foreground and have it running again so that's useful if we want to pause something and then go do something else in the meantime then come back to that process let's try that in some different ways let's run yes and let's output that to a file remember redirection from last week the greater than sign says instead of print the output of yes on the screen print it inside a file try that then it doesn't take up the screen it's running the process isn't in the foreground I can't do anything I can't issue commands you can try and type but I can't run anything it's running we can suspend it control Z it's stopped just check the file how big is it one of the options for LS if you want humanfriendly h humanfriendly gives the the prefixes its 2.1 gigabytes mine note that what yes does is just prints wise to a file and does as fast as possible so it filled up two gigabytes in those 10 or 20 seconds when I ran it note that it's not getting any bigger that process is suspended it's not running there's some state information about it but it's not running if we want to start it again bring it back to the foreground just check the jobs there's only one I can do FG 1 to bring job number 1 back to the foreground and it's running again I'll suspend it again and look at the file size mine's now up to 2 point 6 gigabytes okay so that just illustrates that something was added to the file then it started again it's suspended so it's not doing anything at this stage and we says it's stopped what we can do is take that process instead of having a paused have it run but have it run in the background we say have it run such that it's executing but we can still interact with the terminal and to put a process into the background we use bheegi bheegi followed by the process number or simply BG because there's only 1 to 1 job to deal with BG puts that process into the background let's check the jobs so now that job yes redirect to the app dot txt file is running and let's check our file size mine's 4.7 gigabytes if I check again it's now five point two gigabytes all right so just to illustrate that it is running now but I can still interact with the terminal because that process we say is in the background and we can have as many processes as we like running in the background how do I stop it I'm gonna fill up the hard disk soon so how do I stop my my yes process we could bring it back to the foreground it's in the background from running to bring it back to the foreground simply FG or FG followed by the number there's only one so f G's fun it's running again and now it's in the foreground and I can interact with it by the terminal the commands I issue affect that process so I can control C to kill the process look at the files eyes there's no jobs running now and that that process is stopped the files not getting any better it's gone so really three states of our process the process is in the foreground it's running and in the foreground means that when we interact with it via the terminal when we issue commands it's interacting with that process in the foreground the process can be paused or suspended with controlz means it's not running but there's still some the operating system stores some information about the process so we can resume if we like and the third state is the processes in the background it is running but we cannot interact with it via the terminal it's running in the background we say let's delete that file so I don't fill up my hard disk and I suggest you do the same let's do similar again but we'll introduce different ways to do that yes redirect to our file it's running I'll control Z just pause it BG puts it into the background so it's running again it's a gigabyte it's 1.5 gigabytes it's 2 gigabytes so it's running there in the background so that's common if you start a process normally and then you realize let's put it in the background let's have it running but but in the background then a quick way to do that controls it suspends and then BG puts it into the background so it's still running you want to back foreground and it's back back to the background controlz DPG so we usually combine those two controls edge followed by BG puts it into the background it's getting big the file we said to stop the process to kill it or cancel we use controlc but there's another way so we see the jobs that yes program is running we can also see the processes PS lists the processes a little bit more detail it's the processes that you you're running in this terminal and there are three listed so this program PS runs a process that tells us what processes are running which processes did it list it listed itself that is when it runs it records it eat itself is a process running PS yes is a process that our operating system is running the program that we've got running and bash bash is the software that interprets your commands on the command line that's the shell software we call it the bourneagain shell it's the it handles the the commands that we can issue so you always see bash there as the output you almost always see PS and you may see other processes that you've got running in the background like yes in this case it tells us something about how long it's running and more importantly or useful for now is the process ID the operating system assigns a process ID we know yes has the process ID five five seven five how BIG's my file only 19 gig so we better stop it rather than bring it back to the foreground we can kill the process without ctrl C but using Q followed by the process ID so that's why we use PS there to learn the process ID and now q five five seven five make sure you choose the correct process ID yours will be different than mine PS shows that yes is not there we also got a nice information saying that yes has been terminal terminated sorry I did a mistake there what do I do when I get a mistake what's happened here it's waiting for more input I hit the wrong key I hit the backslash key ctrl C will get me out of that what I want is this so another way to kill the process is if you know the process ID issue the kill command ctrl C is the keyboard shortcut the kill command will do it based on process ID let me delete the file so different ways to interact with processes try them you know useful let's say I want to run my yes command and I know I want to run it in the background I don't want to have it in the foreground I don't want to have to suspend and type BG if you want to run a process immediately in the background then add the ampersand character at the end this means run the process and immediately put it into the background so we don't have to control zbg just add the ampersand character and it's running in the background already jobs this it's running PS shows it's running process ID u5 606 the file is 2 gig 2.5 gig and so on so it's getting larger the process is running and we run it in the background using the ampersand character and you can do this for any command all right we're using yes as a simple demo you know since I know the process ID I can kill that now when we run kill it tries to what we say gracefully shut down the process tries to end it normally and it's terminated let's delete the file just to clean up so Q tries to stop the process like if thinkof say we in Windows you try to close a program and it will try and save the file before exits that's what kill does a graceful shutdown but sometimes we can't do that maybe something's not responding so maybe in Windows you try and close a program and it says it's not responding do you want to force a shutdown or stopping so we can do that with kill if we run our process again in the background process five six one eight if something will not stop using Q then you can try even harder using minus nine that really means even if you can't save any information just just stop the process for sure all right so this is just used if if something's not responding even with a normal kill that's not responding kill no means really try hard to kill it and it usually works so that's useful if something's hung so that killed the process is slightly different than terminating slightly worse than terminating a process so we can interact we saw PS list the processes and only by default shows the processes in my this terminal running by me bash and PS so there's not much interesting there if you want to see more because our operating system is running processes for different users if you want to see them all PS II will show lots of processes and I'll pipe it into less remember the grip the the vertical bar means take the output of PS e and send that into the program less and less just shows me the output page by page so it shows me all the processes running on my operating system starting with process ID 1 the initialization process that it starts everything and many operating system processes for starting networking all the different tasks and we scroll down we may see some we recognize there's a MySQL server running Apache web servers running there's processes for that and if we scroll down we get to them you may see Firefox running secure shell server is running on my computer because all of you have logged into my computer so there's a process handling the login and to view the demo we're using software called Tmax so that's running on my computer yours will be different and if we get to the bottom alright PS and lesser running so PS e shows all processes quit that or if you want even more details PS f uppercase a there are other ways as well to show pS has many options this shows all the processes but also gives things like who is the user that was running that process the user ID the student user is running these processes the root user is running the instructor user on my computer is running some processes as I'm logged in as the instructor the root user is running some processes there the core operating system PS shows us process information one last way to see process information we can see a realtime feedback is to use top to show the top processes try top this gives us every one second an updated list of the processes plus the top the first five lines show us some summary statistics about the processes on our operating system those that are running or the total number of processes there's one running and there's many sleeping something about the CPU utilization the amount of memory we have 16 gigabytes how much is used the amount a swap space and so on and then the list of processes and usually it's well by default it's sorted by the amount of CPU they're using yours will be slightly different from mine because I'm running some software in the background I'm recording the video and audio and the process sorry it doesn't show here but on yours you will see on the the right side then process name mine's running some recording software so there are many options with top you can change which items you sort by but will not go through them if you want to see the processes interactively use top in Windows this is like what in Windows the task manager you can bring up the task manager and see a similar output q to quit so I'm just showing you how to find this information so that's the main commands we use to interact with processes there are others but that's the most common ones we can we can do this also with processes which start graphical programs so we're doing everything on the command line but from the command line we can start GUI based programs we know that we have Firefox installed the the PDF viewer so we don't have Acrobat it's called events I know that events is the a program that opens PDFs so they are two programs that open up a separate graphical window we can interact with them as processes as well to demonstrate this I need to switch to another window where I'm logged in as instructor on my computer so let's do that I'll just close my instance of Firefox and then we'll start on the command line and to start Firefox we type the command Firefox and opens up the the web browser and note that that process is in the foreground from our terminals perspective we can no longer issue commands Firefox is the process running the foreground I can't do other things while far Firefox is running so that process is in the foreground but I would like to do other things I'd like to have both windows open well we can close it we could interact with it same with any other process I'll control C kills Firefox we can run it in the background by adding ampersand and there was a bit of an error or warning in my case but it is running just to show I can do LS now so I can now run commands on the terminal and at the same time use Firefox okay so this is useful when we have graphical programs started from the terminal we start them in the background so that we actually have both of them running we can bring it back to the foreground and Firefox is still running but I can't interact with it in the shell in the terminal I can suspend it control Z I can now run commands can I use Firefox the process is there but it's suspended or paused and the window manager has shown that it's grayed out because I can't do anything on Firefox now because it's not running it's paused so I can't do anything I'd have to put it into the background if I want to use it at the same time now I can do something so remember the foreground means that the process is running and it's it's got control of the terminal paused or suspended means it's not running but there's some state information stored about it so we can resume later background means it's running but we don't have control of it via the terminal we can run other commands Firefox is running it's also started another process for maybe some plugin for plugins on firefox if we kill the Firefox process ID it kills Firefox it produces some error but let's ignore that it kills its children as well so when we killed Firefox process the children process of Firefox were also killed so we lost that plugin container as well so we can interact with processes using control C control Z there are some other ones as well F gbg foreground and background jobs PS and the ampersand character to start a process in the background let's look at users on their system Who am I remember Who am I returns the current logged in user the user for this terminal if I run it in a different terminal I'm a different person I'm instructor on this terminal Who am I for this terminal and logged in as the instructor and here the student user so Who am I returns the user what users are on this computer so we know we're logged in a student you can guess as an instructor user which other users are have accounts on these computers can anyone tell me what other users are there well when you have the quiz question how you're going to find the users well there's different ways remember think about your home directory the normal case is each user has a home directory I'm currently in slash home slash student the student users home directory is slash home slash student so we'd expect other users would have slash home slash user name let's look in the slash home directory LS slash home and see what other directories are there and that may tell us about some of the other users and I'll use less because I know there's a long list there and we see there a bunch of users and we guess that these are users because they have home directories and you recognize some other names so that's a quick way to see something about users maybe a more precise way is that the operating system stores a list of users and when a user logs in the operating system needs to check the user name and password so when you log in you use apply your username and password and the operating system checks what you supplied against who's already had a account created so the operating system stores the list of users in a file let's have a look at that for Linux it's common that configuration files for the operating system are stored in the e.t.c directory etc but it's a common place to store config files so use less to look at there's a txt file in there to list the txt file that stores the list of users on this system is passwd short for password because the the usernames usually have passwords associated with so this is a text file that lists all the users and some information about them have a look at it the format is one user per line and on each line for each user will there's some fields separated by the colon character and we'll go through one of the examples the details first we know there are many users here the root user daemon user bin user sis user the root user is the admin so you you can log in as the root user they have a home directory a special home directory it's actually slash root you can do things as of the root user if you know the password the daemon user and many of these others are what we call system users and they're not real or normal users that can login they used to run operating system programs or applications servers usually so normally we don't use these users they're not something we can login as and you may note at the end it says something about no login so it's a special type of system user if we scroll through so system users are for special operating system tasks I think somewhere you'll see MySQL there's a for example there's a system user for running the MySQL database server we don't log in as that user normally it is just for running the server so we want to focus on the normal users there's a root user system users the normal users there is instructor you scroll down you see some they start to recognize ta student and then what I've done as you notice I've set up users for each of us or each of you based upon your name so just some some fake user or user accounts that we can use for testing let's look at the student user the structure of this file is for every line the first field is the username the second field is the password the third field is the user number so we have a name and a number so a unique number users belong to groups and they must be in one group so this is the default group there in the but the group number this information is some human friendly information about the user may be their full name so note well what's different here the s uppercase s this may be displayed on the graphical login when you see your name there note for the named users I haven't given the full name I've just repeated the user name but you could see the full name here the email address the phone number and so on this is the home directory alright slash home slash student and you see most of them are slash home slash username that's the default setup and this is the software that runs when this user logs in and we've said before Bash is the software that interprets the commands on the command line it it understands what you type so that's the normal set up we care about the username and the password well you notice that the password for all the users is X it's not the actual password that X here means the password information is stored in another file all right so it's not actually stored in this file this is the operating system list of users where is the password information stored it's in another file it's called in a shadow file so let's have a look at that quit cue to quit open up the shadow file that stores the password information for those users include the user names and then information about all their passwords and you can see the password of all the other users well no you can alright so the normal user cannot see the password of other users by default the permissions are set up so that you cannot look at this file it is a text file I'll show you later but the normal user the student user in this case cannot look inside this file they can see the set of users in the passwd file but they cannot see the password information in the shadow file that's the security measure to do some access control we can change between users all right so we we do everything as the student user but you may have realized that I've created a separate user account based on your name it's your first name followed by the first letter of your last name and you can log in as that user just for doing some small tasks or demos so to change users we can switch between users using su and I'll just choose a random user from from the list you you switched to you okay type in your name su switches users switches to that user and you need the password for that user and for this I've setup it's the same as your username so I'm now logged in as a different user if I go home CD I'm now in Maya the home directory of this is second use I'm logged in as so now everything I do it I do it as as this named user not as the student user su switches users very simple just note the password was the same as the username just so we can easily switch between different users some of the tasks today I will say use your name and user that is switched to the name the user based on your name not the student user if you want to exit and go back to the other user use exit and now I'm back as the student user so su switches to the name user exit comes back I can switch to the root user or if I just use su switch user on itself it by default goes to the root user the other meaning of su is super user super user is like admin or root user so su and on its own we sometime thinks means switch to super user and our login is the super user which is actually named the root user omi root CD note their home directory slightly different their home directory is just slash root of course you need the password to switch to other users and you don't have the root password so you can't switch to the root user probably wouldn't be too hard to guess it but there's no need for and as the root user I can do anything including looking the shadow file so the shadow file was the one we said stores the password information and we see it's similar as a username and then some information about the password let's go down to our student user and look at the password information the password information is this long field the numbers at the end are something like when you last change your password when you need to read change your password in the future but this is the long field which is the password information you notice it's not the password we know the password for student is student this is not the password we don't in fact we don't encrypt that the password we do something which has similar purpose we calculate the hash of the password and we'll cover this in the security and cryptography course what we do is we take the password we attach another usually random number this value here between the two dollar signs it's called the salt we take the password we give us some salt to make it more tasty and then we hash that salted password we use a hash algorithm hash algorithm number six and the hash takes that input and generates a basically a random output that is for that particular input and that random hash value is here so the idea is the password information the password itself is not stored but a hash of the password is stored such that even though we can see this file now you can't see the password and to find the password given this hash value is practically impossible because the cryptographic nature of the hash algorithm is that if you have the hash value as output it's practically impossible to take a find the original input okay so that's a security measure so that no one can see the actual password even if they can see this file the other security measure is that the normal users can't even see this file when a student logs in they supply their password the system calculates the hash of the password and compares against this value and again another property of the hash function the hash of two inputs which are the same will produce the same output if they match the user logs in we will see the details of that in authentication in security and crypto so you can see the hash be can't see the password Q to quit exit out last last command when we talk about users and permissions so we saw that some users cannot do some things that is the the student user couldn't look at the shadow file will return later after the break about permissions on files but similarly some users cannot run programs right some programs are protected especially programs that give you special privileges or need special privileges on the operating system like network type programs I'll just switched my other terminal because I need to be logged in as the instructor or and not to a different user but you can do it as the student user there's a program called IP traffic it shows us the Internet Protocol traffic IP traffic it's a networking program while using later labs just it shows their packets being sent and received most networking programs or some of them are protected not any user can run them so when I try to run IP trap it says this program can only be run by the system admin we don't have permissions to run it but I would like to allow everyone to run it so that we can actually see the network traffic so the common way to do that is to set up the computer so that some programs the student user and the instructor user can run these special programs and I've set that up what we want to do is we want to run this program as the system administrator the other name of the system administrator is root or another name is the super user so we'd like to do this program as the super user do IP TRAF as a super user super user do IP TRAF and you've heard of sudo i think before the idea to do this program run this program as a different user as a super user by default we can actually switch to a different user if we want and that tries to run this program as the super user and our set up these computers so that you're allowed to do that it asks for your password you should be doing this as student not as your named user I'm doing it his instructor I type in my instructor password and I see that it returns an error in my case because I've zoomed in too far try it again okay so sudo followed by the command tries to execute that command as the super user now it needs to be set up in advance as to which commands you can try you can't do anything with sudo you can try it will return an error if you try other things and just to demonstrate IP trapping just shows some statistics about packets being sent and received there's not much happening on my computer just shows packets being sent and received on my computer so sudo allows us to run a command as the super user as the the root user when it's protected command we'll use that later in some some networking commands if it doesn't if you don't have permissions try sudo first X to exit so we can switch users we can run commands as super user using sudo we've seen a little bit about where passwords and user information is stored later we'll see permissions on files we've seen already that some things that we we can't access some files we can't access the student user couldn't see the shadow file that said permission denied if we try to run some programs that may be permission denied so there are some permissions on files in general every file and a directory is a special case of a file every file has some ownership the person who owns it and some permissions what are you allowed to do with it so that's what we want to look at briefly here I'll login as a named user and I suggest you do that too so whereas one of our name users note that when you log in you're in the student directory but that's not my home I've logged in as a name user so I want to go home CD and now I'm in my home so let's create a file just to demonstrate here echo some something into my file and just be to make a clear Who am I and let's look at the details of this file so I have created a file abc.txt when we see the details we see the file name the date and time and that this column tells us the user that owns the file right every file has a user that owns it belongs to one person so by default when you're logged in as a user when you create a file you own that file we'll see later we can change who owns it but by default we own that file the second column and yours are we different the second column shows the group that owns the file so in fact each file has a user an individual user that owns it as well as a group that owns it and a group as you may guess contains a set of users one or more users and when we say the group owns it it means anyone in that group can do some things some special things with it so with respect to this file we say there's one user that owns it there's one group of users that own it and then there's all the the rest of the world everyone else the others so on our computers we saw there are what hundred plus users for this file one of those users owns it some users are in the group blue one that own it and then as there all the other users the other 99 users or however many there are so we'll distinguish between three sets of users the user that owns the group that owns and others others are not the user that owns and not in the group user group others yugioh we'll come back to those letters so the ownership for those three sets of users user group others they can do different things potentially with the file what things can they do with a file well there are three main operations in Linux we can read a file means opener and look at the contents we can write to the file which means modify the contents delete modifying deleting is just the same as modify so write to a file means change or edit and in some cases we may want to execute files if it's a program we make it executable so we can read write and execute and the three letters are W and X X for execute so what can our user do with this file how do we know these nine characters tell us have a look the first character tells us if it's a file or directory' this dash here says this is a file not a directory the next nine we split them into three groups of three so let's look at them these three characters just zoom in so everyone can see W dash the three characters in the order of read write execute read write execute so these three characters belong as specified the permissions of the user that owns a file so the use of the owns the file what can they do with it they can read it because there's an R there they can write to it because of the W they cannot execute because there's no X if they're if they're allowed to execute there'll be an X there not an a so our user can read and write the file but they cannot execute that's what this tells us the next three characters are what the group can do with the file anyone in the group blue one is allowed to read the file write the file but not execute the last three characters are what others can do with it others in this case cannot do anything they cannot read write or execute so that's how to read the permissions you may see an R here I think in your case write the default in your case may be an art that is others can read it let's try zoom out here this example the reason I had didn't have an R here's because that fire was already created and modified before the file X Y Zed read and write the user can read and write the group can read and write the others can read only meaning the others can look inside the file but they can't modify it they can't write it no one can execute so that's how to read those 9 characters if you can't remember they're on the reference card in front of you ok it takes some time to practice and remember them so we'll have some practice now what we'd like to do is to change the values so let's try Who am I first what groups am I in type groups this tells me the groups I'm in so we see I'm in a group that is based on my username that's usually the default group everyone's usually in a group which has the same name as their username and in these computers I've set up so that this user is in blue one group you will see hopefully if you've logged in as your user you're in a colored group as well the color based upon the desk and probably the color followed by the number five section five so these are the groups I'm in if you want to see what people are in different groups there's a file in the e.t.c directory called group and you can look in that and at least all the groups on the system and you scroll down and you see who's in red blue one and at least the the users in that group so there's one way to see who's in a particular group that's similar the passwd file it shows the but this shows information about the groups not the individual users EDC slash group the command group shows what you're in so our file X Y Z dot txt I would like to be able to change I would like to be able to change who owns the file the user their owns and the group that owns let's change the group there are different ways to do it CH own chain that change the ownership CH own change ownership and we take two inputs the the user name the user name that we want to own call on followed by the group don't copy mine use it for yours so maybe you can change it so that previously it was owned by this user I don't want to change that I want the user to be the same but the group was this one I want to change to blue one in my case maybe you change your file to be in your colored group and the file name change the ownership of this file can you see the the group has now changed from the original group to blue one so in fact that changed the group only you could also change the user as well but there may be some restrictions on which users you can change to there's a short way to change groups chgrp change group I've just changed it back to the original group so CH own change the user and the group chgrp change just the group so you can use either let me change it back to blue one in my case so we can change the ownership of files we can also change the permissions on those files and sometimes it's not called permissions it's it's the the modes of which we can access that file there are three modes read write and execute so we can change the mode for the file so the to change the mode CH mo d change chmod and this is a little bit complex but if you remember there are three sets of users the user the owns you the group that owns G others oh and there are three types of modes or permissions read/write/execute rwx so we can add and subtract permissions plus or minus our current file the others can read to file let's change the permissions so others cannot read Oh subtract or revoke the permission to read that file so the syntax here is specify the the set of users and they know either plus or minus usually plus gives the permission revokes the permission and then what permission in this case read the R's gone I subtracted the ass meaning for the others meaning other people can no longer read this file if you're the user you can read it if you're in the group you can read it but if yours anyone else you cannot read it and you can have other combinations chmod the group don't let the group edit the file group subtract the right permissions now the W has gone here all right so the group can only the group users can only read they cannot write if you want to change that back you can grant permissions or add permissions plus give them a permission to do that and now the W is back CH own changes the user and the group that owns the file chgrp just changes the group chmod changes the permissions and you can set combinations based upon user group and others grant or revoke plus or minus read write execute and with that you can set up what you aim to do to secure the files so this needs practice so what I'll do is just put up a couple of tasks that you can try very simple and just learn some of the syntax for chmod and CH own try some different things do this as your your named user not a student and to test that the permissions do what you expect and the way to test is to get your friend to log into your computer and see if they can read the file so try to set up some permissions so that it protects some of the files to get started what can you do to show the groups you're in your run groups I'll just leave that up there to change the mode chmod to change the owner CH own you can also use CH GRP and some tasks and just so it shows on the screen very easy task but try some others as well and get your friend to test by see if they can access those files get different friends to test one that's in the group and one that's not in your group and see if you can set different things up