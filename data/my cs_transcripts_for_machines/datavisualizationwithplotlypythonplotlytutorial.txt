in this first video I want to talk to you about bar charts I'm here in my Jupiter notebook in side of Microsoft edge my web browser I have navigated to the folder that contains the files that I want to work with and in my case it's in my onedrive file I've created a folder called YouTube and inside of that data visualization with a plucky for Python I have a style sheet a cascading style sheet that will be uploaded to github so that you can use that as well I have a Python cheat sheet a PDF which I'll also download you can get that from the plucky website there's a style template which I just always save just to open up and it's got the bare bones of which I want to work with but here's the file we're looking for the simple bar chart let's open it up and there you go everything is ready you'll see the first cell that I have here is just the input of the cascading style sheet it's a Python code display and from that I import HTML I reference the file this cascading style sheet file and that lives in the same folder as this notebook and I just use the HTML function they open the CSS file in read mode and we read it and if I execute that you'd see that I have this new style I have my h1 color of the texture being blue h2 being this nice orange etc just styles the notebook for me so let's have a look at the simple bar chart now first of all I want to set up my plotly library and what we're going to use here is called notebook mode so I don't want to have these files uploaded to the plotly website to live in the cloud I just want to use them locally so I'm going to use the notebook mode so from plotly dot offline I'm going to import I plot and in it notebook mode as you can see here and I'm just going to call this function init notebook mode so if we run this that'll just import the I plot and initializing this netbook mode and we'll initialize this netbook mode so what do we actually want to import from pluckley what we're gonna start off with these high level charts so bar charged charged scatter charts etc these are high level and I can just use them as is so I can say import plot lead graph objects so graph underscore obj is as geo as go let's do that so let's start off with a very bare bones chart the first thing we want to set up is just what is called the the the trace we call it trace here is just a computer variable but that just creates on on top of the figure that we are creating this blank figure we're going to put on these elements and it's just a loom or to call them trace so go remember that's my graph objects dot bar so immediately the arguments here are specifically for a bar chart that's why we call this high level chart I didn't have to design every single little element most of it's already designed inside of this bar object and I just have to pass some arguments to it and I'm going to pass X arguments for the x axis and y arguments for the y axis so what is a bar chart for a bar chart is for categorical variables so anything that is not necessarily a number although numbers can also be categorical variables but they are not numerical and as such as the difference between them are not set and standard so I could call January February March one two and three for the first second and third months of the year but that does not make them numerical variables they are they are still in that instance categorical variables so bar charts are for categorical variables so my xaxis here I'm going to have the categories January February and March and on my yaxis I'm going to have numerical values so how many things whatever the situation might be and my instance here I'm gonna use use you'll see later on I'm gonna call him sales so in January there were ten unit sales in February March 14 so those are numerical values on the yaxis categorical variables on the xaxis now I'm going to introduce a second computer variable I'm going to call it data and I'm going to pass into that a list so it goes inside of square brackets I'm going to pass a list of all the traces these are these elements that go on top of my blank figure and in this case I only have one chase but I've got to put that inside of these square brackets I'm referencing trace here as a list element and element inside of this list third computer variable that I use ESS fig now these are the standard they used in pluckley all the time so might as well stick with those and I'm going to call another graph object called a figure that's a blank canvas a blank figure and figure with the capital F as you can see there it takes a couple of arguments in this instance when you're gonna use one argument and it's the data argument as you can see here and we're gonna set that equal to data which is this data which contains a list of chase and the chase is a bar so it just builds one thing on top of the others so inside of this data that I'm referencing there's a list and the first element in the list is Trace and in trace is this element called a bar chart finally I'm going to call I plot remember which we imported up here I plot this for plotting directly in the notebook not using online mode not going to the cloud and I'm going to plot this figure f IG think that I've created let's hold down shift and hit enter/return and there you go your first beautiful your first V beautiful plot a chart so again we can see the xaxis here January February March and we can see the yaxis the values that we put in 10 11 and 14 now I'm going to use my mouse on the left hand side look what happens when I hover over the text over this element this the cell the elements on this blank figure so the godot figure was this blank background and I put these elements on top of it which is on a high level with a bar chart I hover over it and you see that January at the bottom it gets highlighted and the number 10 at the top gets highlighted that's very nice I really that because if I give a presentation and I don't use PowerPoint for presentations I'm not a PowerPoint use or fan well I mean you've got to use it sometime but I try to stick with my triple notebooks and it's very nice to have this interactive plots as you do your presentations and look what happened at the top here as well I get quite a few little buttons here to place and then I really find very useful because I can download this plot as a PNG file directly on my hard drive and I can put that inside of a hard copy if I were writing a report and it's got to go inside of a Word document etc I can just do that I can save this for editing in chart studio that's online in your pluckley online account you can zoom you can pan you can select a box and we're going to see all of these because they become very useful I can zoom in I can zoom out and out even further not even further I can just go back home and let's just reset everything for me I can show the closest data on hover so if I do this you're only gonna see January being 10 February 11 March 14 and a fiveclick of that you see the highlight happens at the bottom on the xaxis and instead of on top at the at the top there and then I can just open pluckley the website itself so very nice especially this download as PNG file so that is fantastic so let's add a little title because you can see at the top my chart has no title so I'm going to introduce a new variable called layout and this layout is going to be a Python dictionary so and goes inside of curly braces and it has the key value pair so the key the value the key is title and these go inside of quotation marks so the title that's the key and the value for the dictionary for this key is sales for first quarter now I'm going to redo my fig from up here it's still going to have the trace it's still going to have the data all I'm changing is this fig so godot figure my data still is the data from our first one but the layout is now this dictionary called layout so this data and layout these are the argument names and argument values well we gave the computer variables they're exactly the same name don't worry there won't be any confusion for Python it'll understand pluckley this plot if a figure will understand what's going on so data just refers to the data that I created with a trace list and layout this layout refers to this layout so let's plug this shift enter shift return and now at the top I have sales for first quarter so a beautiful title now on the top of my figure what about some axis labels now with these categories that we put in January February March it's easy to see that these are months but I might want to specify that and more importantly I want to specify what's on this yaxis because what is one two three four you know you need to you need to know what these are so I'm going to just change my layout computer variable so going to be a Python dictionary title still gonna be first code elements now the xaxis that's the key it holds a value but the value is another dictionary and that dictionary is again a key and value pay so the title is going to be months and the same for yaxis the key is yaxis the value is another dictionary and that technique contains a key value pay the key being title and available units now I'm going to do something different remember up here we just say theta cos theta and lay articles layout but we're going to do something a bit different here so instead of creating a blank figure I'm just going to pass everything as a Python live as a Python Python dictionary so here we have I plot and inside of that dayss dictionary and the dictionary is just a key key value pay comma another key value pay so data is just data stole the data from upstairs and the lay artist is this new layout so let's shift an inter shift and return and now we can see that we have months yeah as our x axis title and units as our y axis title so that's how many units were sold in January February and March see the difference here between the two so I did not invoke the figure the Godot figure object here I just passed every everything to I plot as a dictionary and sometimes it gets confusing because there's many ways ompletely to do something you'll see more ways as we carry on so so when it comes to the layout and such I try to stick with these just to stick with the Python dictionaries when you think of the dictionaries become slightly less confusing and you can you can find something that's just you know stuck in your mind and it works for you and just carry on with that so I like just useful layout and then plotting just the this dictionary way of doing things although you don't have to stick with it as we could see here here we created this blank figure and we passed these arguments to it but I can also just use it as a pass to I plot just a dictionary and and as I say there are many things that I can do with this xaxis this xaxis being a key and the value pay there are many more things than just a title and we'll see some of them just in this in this tutorial so it just it lessens the confusing confusion for me but look at the website the plot a website and you might find other ways and we'll we'll look at some of these in future videos but stick I stick with this but look look what what works for you so let's just rotate these labels at the bottom you know jamieferry March it quite quite small here so they fit in with this big chart that we have here but sometimes you have long categorical variable names here data point values here and and we've also in plugs with these names actually you know stop printing on top of each other and the easiest way to get rid of that is of obviously to shorten the data point values these the your sample space values but sometimes it's not possible and you just want to rotate them and look at this and that's the reason why I like these dictionaries because look at this I have layout again which is a dictionary key value pay here's another key value pay but now I have to the elements here in this value side of the xaxis being the key and the value being another dictionary and inside of that dictionary they are two key value pairs title is months and the tick angle is minus 20 I then put that inside of quotation marks because it's not this is just a value numerical value so I'm going to say minus 20 and that rotates at negative 20 degrees and my yaxis is still all the same so let's run that and if we scroll down we see we have this negative 20 degree and from from the horizontal it's tilted down negative 20 degrees so if you have these long words and sentences there you know they can all fit in because of that angle now let's color these bars the blue is fantastic I like this color but you're free to do what you want so I'm going to just change my trace here it's still a bar I live a bar chart I still have the xaxis values being categorical Jen if every March I still have my Y values being a miracle 10 11 14 but now I'm going to change the marker I'm going to introduce this marker and again it's a dictionary but this isn't another way just to do diction so I'm gonna call this dict here and the first thing I want to pass this color and the palate color is going to be a list and this list refers to the elements as you passed them on the xaxis so I have one two three elements January March I've gotta pass three colors here and I'm going to use this format note that I have these quotation marks they can be single or double they single in this instance but it's rgba e rgba means i can i can also pass a fourth value here which would be transparency zero being fully transparent one being completely opaque and anything in between so it's red green and blue channel and then opacity so RGB a and in parentheses 255 that's maximum on the rate zero for blue green and zero for blue and full full of pinkness so value of one day the second one is 204 204 204 so this can be this light gray and it's gonna be totally opaque and again totally opaque so jenny is going to be this red color and March and April is going to be this light gray color and the data is still the trace now I can't just use the ones I used up before because data referred to too different trace and I've changed the trace yes I've just got to do data equals trace again as a list element and then the layout exactly the same and I'm passing this dictionary to I plot nothing new they and now you can see these beautiful colors because I can now have January being as red and the other colors beamless like grey fantastic now why is this one red and these ones J well I might want to indicate to my audience why this was done so I can actually change this hover text remember if I hit this one show closest data on hover it's going to do both the xaxis and yaxis in one little tooltip there January or hover text edge anything and if I do that it's just going to highlight them separately now hover text means I can individualize every element that I hover over to have its own text so we've had marker we see nets of introducing a new argument here to the bar to bar here text and I've got to do it individually so the red was going to be below target above target and above target everything else is the same let's run that and now if I hover I see this extra text appear in this hover so that was I put at in and let's below target and that one was above target and that one is above target so you can see you can build in this beautiful narrative here because you can put a lot of information in this text if you really want to to draw attention to what's happening here to inform your audience so that's fantastic so let's move things up just with a grouped bar chart and now I want to have two sets of elements on here and so I've changed my computer variable to trace zero and trace one and with a bar chart be careful now because we want the same sort of space for both I've got Jenny if every March and Jenny February March and I've got my yvalues 10 11 14 as before and the second wife has 12 13 17 but now I'm going to add a name because I need to tell party that these two things are separate so I'm gonna say name equals last year and this name equals this year so you can well imagine that I'm just going to take this yes data and compared to last year that might be interesting and now look how data has changed are now passing two elements to this list still gotta be a list still inside of square brackets I've got trace zero and trace one the layout is going to be exactly the same but I'm introducing this new key value pair of bar mode and the bar the bar mode that I want you to use here is group so what it's going to do it's going to group January in January February in February March and March hints they've got to be the same and then I'm still gonna use this dictionary to pass to I plot and now they've been grouped and we see last year in blue and let's see an orange that would be the default colors and you see that they are indeed grouped so I've got this year and last year this year and last year this year last year a beautiful way just to do that now we need them group them like this we can stack them as well and you have exactly the same thing but instead of bar mode being group I've made bar mode being stacked as the key value pay here and if we run that we see that now we now have this step version of it but if I hover you know you can still see that this year's is 12 and last year was thin you don't have to go to the xaxis in your mind and your audience have to mentally try and see where's that top and subtract from the 10 you see that it actually gets to 12 no no pluckley makes it brilliantly easy with your hover you can give a beautiful presentation just do hover over these and explain so that's our first tutorial on plotting my alltime favorite library for plotting inside of Python but inside of other languages as well and a nice introduction for you start playing with us and we'll carry on with this playlist on YouTube and I'll introduce you to a lot more plotting using plotly for python before you do go there please subscribe to this channel all information that I'm trying to get you hit that notification button the little bell there to let you know when new videos are uploaded thanks a lot my name is Jean cava and I'm a surgeon at kritis care hospital in senior lecturer at the University of Cape Town now I run the copper research group we are really supported our postgraduate students in May research my main field of research is machine learning in the clinical setting in the support of research I have a lot of online courses here on YouTube but also on udemy and the massive open online course platform Coursera where I really teach biostatistics it's what it's all about now when we use Python locally one of my favorite parking libraries is plotly you can do pluckley online but you can also use it in Python and many other computer languages as well so this whole series is going to be about plot D and I'm going to start off with by just showing you the basics and the easiest way to get going is through a bar chart so subscribe to this channel hit that notification button every time a new lecture comes out a new tutorial comes out you'll be notified about it so please do that let's watch this first video on bar charts you so in today's tutorial we're going to talk about the humble histogram so in my first cell here in my Jupiter notebook I'm just importing my cascading style sheet as per usual just to get away from this blend looking black to do something a bit more interesting there we go if I run the cell we see these nice little colors and different funds for the markdown that is used so let's set up the library I'm going to import from plot lead off line my I plot so that I can plug directly in the strip the notebook and to the inert notebook mode just to English initialize the notebook we did that with the previous tutorial on the bar chart we're going to do exactly the same here and again we're going to make use of one of the high level charts so we're gonna do plot leeteuk graph objects as geo will do that import as well now for this case i just want to generate some random values so i'm going to import the random module the python a random module so that's very easy import random and i also want to import the numerical python library numpy and i'm going to use this namespace abbreviation so I'm going to say import numpy as in P now I'm going to just see this see the random number generator so that we get the same results every time we generate these random values and I'm just going to see that with a value of 1 2 3 4 and there we go so let's create a few random values my first variable here is called age and I'm going to just use a uniform distribution I'm so I'm gonna say in NP for numpy dot random so I'm doing the random module and thus numpy library and from there I want a uniform distribution my lowest value must be 21 my highest value is 75 and in the last argument here size meaning I want 100 values from that distribution the next one I'm just gonna use the computer variable salary again that's numpy dot random and this time from a normal distribution I want the mean which has the argument LOC to be 3000 I want a standard deviation which is the scale argument here to be a and again the size the number of samples I went wrong being a hundred now I'm just going to use a choice between just purely for the sake of simplicity use a gender binary gender here just for purely for the sake of simplicity we use and I'm going to create the the computer variable binary gender and I'm going to use from the random module I'm going to use random dot choices and what you can do with the this choices function is just to pass a list of all these various text the string elements that you want to choose from so I've got female than male and I'm going to say draw at random 100 of those and it is it is drawing that at random with replacement so the first one might be female outputs female back in the box chose another one blindly out of the box that might be female again throw it back so a hundred of those choices now I want to place these inside of a panda's data frame it's a beautiful thing to use I urge you to have a look at pandas I'm going to import pandas and use the abbreviation PD and I'm doing that because I want to create a data frame I'm gonna call my data frame DF and I'm going to call the data frame function here PD data frame and I'm going to grate this data frame art of using a dictionary so I'm gonna have this age column and underneath that each column think of a spreadsheet so the header in the first first row I have my header values my variables and I'm gonna call this first on age and down that column all the rows au can be populated by these 100 age values the salary is going to be the next column header and my spreadsheet basically which was what a day frame can be seen as in a simplistic way past all the 100 salary values and in gender the spine agenda values of mine so let's run that and ask a to the data frame and I'm gonna split my data frame into one for female and one for male and the one that we're going to do how the way we're going to do that create these two computer variables female and male the first one says take this data frame and then we're going to use the square bracket notation because it wants to run down row by row so I'm just indexing this gender column so it's going to look down the gender column and only select those so this is a boolean double equal sign only the females and then male will only be continued to contain the male so I have two data frames now female in male so let's create our first babe ons histogram now that we have some data again per usual just by convention I'm gonna use the strace computer variable and it's go go because this was a graph object one of the high level graph objects and it's a histogram I'm gonna pass at the x value because this is stop there for moment what you know just to discuss what a histogram is where is a bar chart looked at categorical variables on the x axis the histogram is going to look at numerical variables so age is definitely a numerical variable ratio type numerical variable because there's a true zero and we have we can just split that up into little bins and if we just pass the age here pluckley will decide how large those buns are so what are bins well as soon as I show you the histogram I can show you what buns are again the computer variable data and pass the list of all these histogram elements I want to put in my figure and then instead of using go that figure I'm just going to use this dictionary notation so I plot and then data please and we see here look at the bottom this is these are numerical variables it's not categorical and what it's done is it seems to be having plot from 20 to 25 25 to 30 30 to 35 35 to 40 and that's what I mean by these little bins so all it's going to do it takes those 100 values and it's and it decides how many are between 20 and 25 and it'll count them in it note that there was 8 and between 25 and 30 there was 30 between 30 and 35 there was 5 sorry between 25 and 30 there was 8 etc and so it goes on so that is why a histogram is not a bar chart and what you can see also there is really no spaces between these just to indicate that we're talking about a continuous a continuity here where is a bar chart by definition has these gaps in just recreate this visual impression that we are dealing with categorical variables that this is not a and yeah we do have a continuous random variable at the bottom called age now let's just change that to a frequency distribution otherwise known as a normalized histogram because what you can see on the top one here as we count we count how many was between 20 and 25 but if we normalize that it gives us a frequency distribution and the way that we do that is just by in this histogram element that we create at the top we pass a new argument hiss known and we pass to it this equals probability I'm going to introduce a layout here by a format by a dictionary format i've title and it's frequency distribution of the age chain edge variable and my x axis I'm gonna bring in a title also a dictionary with a key value pay the value pair being a dictionary itself consisting of a key and a value and by I plot via a dictionary as well and now we can see frequency distribution of age I have age in five year increments here at the bottom but most notably you'll know now you'll see now that this is normalized so the area under this curve which is the area of this rectangle and this rectangle and this rectangle and this rectangle is going to sum up to be 1 it's mutually these these bins are mutually exclusive but collectively exhaustive so they are all here and the area under this stepwise curve is going to be 1 so it's a frequency distribution so I'll have to if I want to get how many they are this increment is 5 times 0.08 to get to to get to the value that we have there that we have well let's have a look so that was eight so remember these are now units of 1 so 0.08 times times 100 is going to say is going to give you that 8 so let's get to in an overlay fashion so to do that I'm going to grade two traces by convention calling them k0m trace 1 so go dot histogram and I have x equals female age and this time I'm going to give it a name so that we can have this little side bar that indicates what is what and the second one that I plotting it's going to lay them from the back to the front so the back one is going to be female the one in front is going to be male so I just want to lower the opacity of the front one so we can still see the bottom the bottom histogram the bottom trace through that I'm gonna set a pencil T equals 0.8 everything else being the same I'm bringing in my little layout there and now we can see I've got to plot C it's going to give me this little legend on the side and I've created a bit of a pasty here in the orange which is the male just so that this female at the black at the back Sunshine's through and but if we hover over them beautiful bit of its beautiful what pluckley does and you can see that it's still going to give you the values let's stack them so I don't have to do the Pesa T there and it is just going to stack them but it's talking to give me these values to say and male there was four and in the female there was 12 and look at one thing though a difference that it made it is now making these blocks of unit length of 10 years so I've put in that is 10 years that didn't that didn't influence that this was done I drew this first and so by you know automatically a chose 10 and I put the 10 in there after the fact so let's do that it's control the bun size and the way that we do that is by introducing inside of our traces here we introduce the X bins argument and I'm going to pass a dictionary for that in this format not the curly braces format so if start as 20 in that 80 so just the left hand side of the xaxis the right ends the xaxis and I want to bend size of five units I'm gonna do the same for male and I'm changing my title year to five because now I'm in control of it and if we run this we'll see that now we and we are back with us increments of five we back with this increments of five let's just do that again this time we're just going to stack them and just for argument's sake this time I'm looking at female dot salary and mail dot salary and we have introduced a bin size of 200 years starting at 500 inning and 5500 and because we do that from a normal distribution you can see this painting towards this normal distribution the last thing I want to show you just in this little tutorial is the cumulative histogram and when you do statistics you start looking at cumulative cumulative distribution functions etc this is important but we're not dealing with that at the moment this is just a histogram and the way that I do that inside of this histogram object that I've created I'm going to use the argument cumulative and pass through that a dictionary with a key value P of enabled being true and I part use the dict function instead of the curly braces notation here and if we just execute that we see this beautiful step wise and we can see the large steps here meaning we are dealing with a normal distribution you can see that from this cumulative distribution function so that is that for the humble histogram remember that is for numerical variables and we're just going to start counting them or putting them in a frequency distribution by creating these artificial little buns and we can control the bin size as I've shown you so that's the histogram I'll see you in the next lecture where we continue our look at this wonderful world of plotly and this wonderful library plotting memory that pluckley is please please please remember to subscribe and hit the notification button because that's going to allow you to know when new videos new tutorials do come out I'll see you again another tutorial on plotly using Python so here we are in interpreter notebook I'm going to execute this first cell as per usual importing on cascading style sheet so that we have a bit of a better looking notebook here so distribution plots let's start off by just importing plotly library as per usual importing I plot because I want to plug right inside of my notebook and I've got to initialize this notebook mode so let's do that and then I'm going to import the high level graph objects as geo so import plot a graph underscore obj is for objects as go but something new I'm also going to import the figure factory as FF let's do that let's create but of data firsts for working with on this netbook so I'm going to import there and a module and I'm going to import numpy using the abbreviation the standard abbreviation in P and I'm also going to seed the pseudorandom number generator so let's create three computer variables I'm going to call them age salary and binary gender so for age we're going to do a uniform distribution so n P dot random dot uniform the low must be 21 the high 75 and I 1000 data point values in that uniform distribution and that domain from 21 375 next the salary I'm taking from a normal distribution and you see the three arguments here LOC means the mean scale means the standard deviation and science just a number of values I won so from a mean of 3000 with a standard deviation of a thousand I want a thousand data point values from this normal distribution and lastly from the random module we're just going to do random choices and purely to keep things easy see here and easy to explain at least we're going to stick with this binary distribution binary values sample space for my pipe for my gender variable here so only female amount just to make things easy and a thousand of those please I'm going to import pandas because I just want to create a data frame and here we have the computer variable DF and I'm going to do a panda's data frame and I created by key value pairs for a with a Python dictionary so I have age as my column header and then the age variable that we created a salary with salary and gender with a binary gender and I'm just going to to clay to sub data frames there so if we look down the gender column only include female and down the gender column only include male and I'm gonna call those subterra frames female and male so let's run that and then just let's look at the first five rows so we just call the head function a female dot head method day and we have the first five rows we see the age there and the gender column we'll only find female say and we find the salary column lace you can see that with these pen Estelle frames they actually look like just flat spreadsheet kind of files and let's look at the last five rows of the male and again just to make sure that gender column will only contain males so let's create our first pair bonds distribution plot and in the way that we're going to do that is this create a computer available called fig and let it's going to be FF for our figure Factory date dot one of the methods a as they create just plot and it takes a couple of arguments the first one is histor data and that's the data we want in this distribution plot now this this distribution plots going to look like a histogram it's nothing other than a special kind of histogram so we've got a given a list to work with and what we going to do is take the whole data frame go down the salary column and we say the values Annette and in to list the to list function lay we call on this on the values of the salary because we just want to create this the sir list to work with and you see it is there inside of the square brackets the group labels well we're only going to do one group here and I'm just going to call it salary you sell a salary distribution and as with a histogram we have to have a bun size and for each we have to have its own bun size but we only have one here so in our list we'll only have 200 so that might not make a lot of sense until we actually see what the distribution what looks like so let's run that and there we have our distribution plot we have the nice histogram down the bottom here and indeed the bun size is 200 and we also see this kernel estimate kernel density estimate is tries to draw this this distribution line here and there is our group label we only have we only plotting one thing and that's the salary distribution so there we go this is called the rug plot underneath and each of these little vertical lines is actually one of our salary values and you can see the distribution there you can also see that we took this from a normal distribution and you can see the Gaussian type bellshaped at least that it attempts to take there so let's just add a title and we're going to do that by just using one of the ways to do it at least and let us just call Fink layout update so I've created my figure just as above and I'm going to update the layout so just another way of doing it instead of doing it via dictionary as you've seen before and I'm just going to add a title and that title is just gonna be salary distribution there we go we've got a beautiful beautiful title up above so that's not too much fun let's just create two data sets so now my hist atuh i'm going to make a list of those so this is so many ways of doing things and in pluckley and you might find it confusing to start off with but it also creates a lot of power and you can find the way that works for you so here I'm going to take his data create a computer variable and I'm gonna pass a list of values the first list times I'm going to take the female sub their frame the salary column the value my column and then create a list of that so the to list they and in same for the mail my group labels are now going to be female salary and male salary and now I'm going to grade my fig and let's create this plot to the his theater and I just passed the history to this I'm not saying his data equals his data because these are just keywords the normal statement keywords and we actually don't have to use them and then group labels is going to be that list and in my bin size I want 200 and 200 so the same band size which which means you can make the button sizes different for each of those let's do that I plot and now we can see we have male salary in orange day in female salary in this bluish color and you see the rug plot for each of those beautifully done let's change the colors of this so everything exactly the same but I'm gonna bring in a new argument to my create this plot here and colors I'm going to do an RGB with with the opacity here and 0.8 0.8 for the peso tea you can see 20 20 20 so that's going to be very dark green 150 150 150 it's like sort of a middle gray color let's run that and have a look and there we go you can see the light colorful mail the darker color for female layer and because we set the peso tea so you can see the one shine through the other now instead of this kernel density estimate plot here we can actually just use the data that comes out of that it create a mean and a standard deviation so that we can create this normal distribution as as instead of this kernel density estimate that we see they we again have our history our group labels we create this this plot we have the his state her the group labels the bin sizes but now the curve type is new it's a new argument and we're just gonna set it to normal and yes just one other way that we can update this layer to create this layout I'm going to call figured layouts instead of inverted in the quotation marks and square brackets a miss Kolling dot layout and dot update and I'm passing yeah I'm passing this dictionary to it so key value pay the title fitted so just another way it just makes it so powerful and easy to use you can use whatever way fits you so now we can see this normal curve that it took from the data just doing the mean and the standard deviation so that we can draw this normal distribution here and you can see the two values there for male and female so in case you want to omit some things there's three things here that's our curve our histogram in our egg plot so we're going to met a few things so we're going to say show histogram as being false and show the rug plot also as false everything else exactly the same except that we've added an xaxis inside of our update to our layout here as a key value pair the key being xaxis the value being another dictionary and that dictionary having two key value pairs title being salary and the domain being a thousand to five thousand so we can even bring that in and there we go we just have these two very nice smooth curves there so you can see with this distribution plot you can do so much and you can well imagine some data that look beautifully if represented with these distribution plots I'll see you in the next tutorial you debris on the next tutorial we're going to look at the scatter plot first of all my cascading style sheet let's run net and we have this notebook that looks a bit better scatter plots let's set up our plucky library as per usual we're going to import I plot so that we can plot right inside of the netbook and we've got to initialize this notebook mode so we can import it and then we going to execute that function with these parentheses there I should say we also going to import the highlevel chart objects so plot click graph objects as Gogi oh there we go indeed we're gonna import the numerical Python library so numpy and we can use the abbreviation NP and then we're going to see this cedar number generator so let's go lump ID or denim seed let's get a bit of data with some data point values for us to work with we can have 1 2 3 4 and then 5 6 7 8 computer variables here female age male age we can stick to just for the sake of ease of explanation just to this binary way of looking at gender so only female and male and we are going to have female so let's create these data points we're gonna have female age and male age we just for the sake of ease of explanation here I'll stick to the spidery view of gender so any female and male we have the age there we have salary and we have debt so female age is going to be from a random integer with a low of 20 high of 65 and 100 values and then the same for males the salary we just going to play a bit so we're gonna take female age and we're gonna add to that random uniform value from negative 10 to 10 and add another thousand so this is going to be element wise so for each element in the list of 100 values that we have yen does numpy array we're gonna add the corresponding your value in this uniform value of 100 and add another thousand and we're gonna do the same to male salary there and then we're gonna as female debt equals male debt so that's the way to make two computer variables and they make them exactly the same as each other and that's going to be a random integer from 15 to 30 with 100 values so instead of using the keyword name saying low equals high equals because these are normal keywords you don't actually have to use the names and so it's 15 30 100 and then the text we're gonna create some of those and again just add 10 to each of those values so let's run that let's do a babe owned scatterplot that's what it's all about so we're gonna go go dot scatter scatter being this highly plot that we can use when it's created on top of our figure and we're going to use x equals female age y equals female salary so what can you see here with a scatterplot it's numerical variable against numerical variable and each one of them will be dot that we create in the scatter plot will be part of a pay and the mode that we're going to use is just markers and data equals trace so just this trace part of a list and we're going to use this key value pair of a Python dictionary to pass it to the eye plot and let's run that and there we can see the way that we created it by adding those values that there's some sort of correlation between what we have at the bottom age and the salary on the left hand side the yaxis that we can see here so those are quite small dots we can really do something about that so let's change these markers so I'm gonna have mode still be markers but then for marker we're gonna pass a dictionary our values so the dict function here in Python so the size being 12 and the marker being this orange color with a bit of a peso T they're only 90% of the peso T and let's change the layout so the way that I'm going to use layout here is again as a Python dictionary so we're gonna have title being correlation between female agent salary the xaxis is the key the value is another dictionary with a couple of key value pairs title being age and zero line being false and with the yaxis title being salary and the zero line being false as well and I plot the data as data and the layout is layered as be usual there we go so now we have an x axis title here a yaxis title we have a title here at the top correlation between female agent salary and we see these much larger orange dots and if I just hover on one you can see that the value for then for that one was 1039 and the age was 34 that we can see at the bottom we can change that and now we can see them plotted the hover there being 31 age and 1021 being the salary 0.16 one so let's do more than one data set so for that I'm going to try to separate traces and one being the female one being male and again its age against salary I think you know what's going on here now data will be the list of the two traces and the data I'm going to just pass the data that I've created here this list of the two traces to the data key value my dictionary here and we can I plot that so there we go we've got female and orange in the male in this blue and we can see all the values as we go up we can see this beautiful correlation between age and salary there so let's add a third variable in this 2d space and that's what scatter plots are all about and I can do that in a few ways one is by marker size and and the other one is by marker color so let's start with us with this marker color and let's do introduce a color scale and you can see all those color scales that are available grays and this is Annette Annette Annette Annette etc we can use Portland as Portland Lea so in a greater trace in its x equals female age y equals female salary mode being markers the marker being addictive the size of 10 the color is color is going to be the female death and the color scale is Portland so we have age salary and debt all in the same t 2d plot and let's create a scale on the right hand side a color scale and we want that scale to be true look at the layout what we've done there let's do the eye plot there we go and now we've added this third variable because we've got age and salary but this color is also going to be this color that we introduced here as the debt level so down from 16 up here 28 so these red ones have more debt say than these blue markers here so that's one way to introduce a third variable the other one is just by way of what we would know as a bubble chart actually but that's just the marker size so what we're going to do here is just change from female to male and the marker is going to be the size of the marker as passed as a part of a dictionary here and we give it a color let's have a look at at this so now we see that this debt is now the size of these so the larger the size the larger the debt so that's one extra way of of bringing in this filtered variable so that means we can actually have four variables that we plot in 2d space because we can just combine we can just combine the color scale and the size so yeah I've made the size the debt and the color the tax so that I have four variables actually drawn right here in my twodimensional scatter plot and that's actually quite fantastic to do so we've added this four variables just in this flat file by just looking at this bubble size the marker size and then this color scale and you can see the the size with the debt and the scale here was the text so I had the text value here the more Brown these values are and we've again used earth this time we've used earth just as the color scale that we have on the right hand side so I have a lot of fun with your scatter plots you can merely convey a lot of interesting information just using scatter plot so I'll see you in the next in the next tutorial please remember to subscribe and hit the bell so that you can receive notification of all the tutorials that I do upload to YouTube so welcome to this new tutorial we're going to look at line charts something that you might want use quite often so first cell of course we're going to just run cascading style sheet there we have a header one and a header to setting up our plotting plot the library and SP job we're going to import I plot and initialize the notebook mode so let's just do that initialize the notebook mode and then we're going to import plot a graph objects graph underscore obj is as geo and there we go let's create some data point values I'm going to go to computer variables they're gonna be days and sales and day is gonna go from Monday through Sunday and sales I'm just gonna have these seven values 11 14 11 14 10 11 10 and that's it let's run that to execute and we now have our two computer variables let's just do a simple line chart so to do a line chart we're actually gonna use the scatter so scatter is in scatter plots so what we're gonna power sisters these three arguments X being the day is wiping the sales but the mode just being lines so our data space and we're gonna use this key value pair diction Python dictionary here to do the eye plot and let's run that and we see that we have the lines and we go from 11 up to 14 down to 11 up to 14 down to 10 up to 11 and entertain for Sunday so beautiful there what we can also do is just to fill up the the area under this curve under the lines that we have here so we have full and we're gonna fold to 0 x so whatever the lowest line here is we're gonna fall today the full color I'm using a hex code in this instance my mode is still lines and let's plot that and we see it's just going to use the default color and it's gonna to 0 meaning this bottom line of the y value here is gonna fill up everything below that now they're different line types that you can try this actually dash dot and dash dot so let's do mode as well as the lines again in the line we're gonna pass to that a dictionary because it has these sub key words that I can use of color we're gonna stick to this color the width we can't win to do with the four and the type we're just gonna do a dash and what we're also going to do is just to lay out the xaxis key value pair keeping x axis the value being another dictionary with a key value pair zero line being false we don't want to have the zero line at the bottom and there we go we see this orange color we see it's quite thick with a four and everything is still there we just change this line type now we can also add some markers so instead of the mode testing lines we can have lines plus markers and we can give the size to these markers and markers marker we're going to equal a dict with one of the arguments being size and the size being 16 and this time I'm gonna add a layout the layout I'm going to do as a just as a Python dictionary here so it's gonna have a title and an xaxis so the key value pairs title and the title sales for last week but what you can see here I've got some HTML code in here so I for italics and close to italic so we can even do that as far as titles concerned an xaxis key its value is another dictionary with a key value paid the zero line being false again and then for I plot I'm just using this dictionary way to do it and as I say mention before there's so many ways to do things and plotly which might make it confusing initially but actually makes it much more powerful and you can actually choose you know what works for you so there we go we've added the sales for last week so we've got this title we can see the last week is in italics and now we've added these markers that might give it a bit more clarity as to what is going on here now we can also do some interpolation these are the straight lines so let's do a spline interpolation so what we've got use mode again being lines plus markers the marker having a size but the line we're going to do one of its arguments they're being shaped and we're gonna make the shape a spline so let's run that and there we go we can see instead of these straight lines we have the spline curve in between these values we can also do vertical and then horizontal the shape is vh vertical and main horizontal so let's run let's say that you can see so what it would do from this value it will go vertical vertically first until we get to the level of the second one and then go horizontal this is going to go vertical to the level of the next one and then go horizontal as opposed to HV which is horizontal and then vertical so now it's going to go vertical to this line of a second one and horizontal I mean and then vertical up so horizontal first and then vertical so you can play with those two and there's actually a few more ways that you can go about this filling of the gaps so let's do that let's take the third value there for sales remember it's actually fourth because it's Python and it comes from zero and we're just going to make that value in the list being none and if we were to plot this we see that we have this gap so there was nothing for Thursday and this gap they exists this gap now and we can actually just fill in that gap by this connect gaps keyword in our scatter plot here and everything else being exactly the same what it'll do now is it'll just fill that gap beyond this data point which does not exist that's none now and it'll just fill that gap so you can see line charts quite a bit of fun and quite a few useful things something that we use quite often and there we go line charts or line plots I'll see you in the next tutorial so here we are in another tutorial we're going to talk about the box and whisker plot and it is a very common type of plot to use and quite informative now we're going to import the cascading style sheet style that CSS as we usually do and let's set up our pluckley library here so from platy dot offline we import I plot and initialize notebook mode and we actually call that function init notebook mode so that we can plot directly inside off the trip the notebook and again we're gonna use high level charts the box plot is a high level chart so from plot a graph objects or graph underscore OBJ's we're gonna import that as go so let's import numerical Python because we can use that and we gets going to sita cedar and a random number generator so that we can get the same random values every time so I'm going to create three computer variables here let's just increase the screen size here so you can see properly we have group a group b and the control group and I'm going to draw 500 values each time as you can see the size argument here from a normal distribution with a mean of 100 in the first instance and a standard deviation of 10 so the keyword arguments they all LOC and scale the mean of 110 and the standard deviation of 15 in the mean of 105 and a standard deviation of 20 so we're just creating these three lists or raise at least of 500 numbers each each so let's do a simple box plot again we can have a trace and our high level chart is this box so it's geo dot box and on the y axis we want the groups the data is then a list of all the traces we only have a single trace and we use this key data per key value P here an addiction area just to the I plot and there we go and it's because we said y equals group a so on the y axis here we have all the levels and that gives us this vertical box plots so if I hover over there we can see a maximum we can see a minimum we can see the whiskers the upper and lower fences there we can see the medium and the first and third quartile values there we can also see these outliers that are beyond the whiskers and I can actually hover over them and we can see those values as well so let's just do more than one data set and the way that we're going to do that is in a Python equation so this is I mean new I haven't shown you before let's increase the size one more time so it's nice and clear so I'm going to have this empty list here called trace and I'm going to have values inside of a less the Python let's group a group b and control group those are the arrays that i created above and in groups I'm going to have this list of strings Group a group B and Group C so I'm going to use a little for loops I'm going to say for I in range 0 to the length of the groups so the group's here is 1 2 3 so it's going to go from 0 to 3 which in Python language means 0 1 & 2 so it's going to loop through 0 instance of one instance in a to instance so I'm going to append to the strace empty list a box and the Y's going to be valves I so the first one is valves of 0 well 0 is group ie so I'm gonna say y equals group a and the name equals the first one or the 0 with 1 here in this groups list so they'll be group a and my data is going to be a trace now I'm going to run through this three times so I'm actually gonna have just have three traces and this trace is a list it's inside of square brackets so I'm just gonna have all of them there so I hope you can see what's going on with us for loop it's a pythonic way of handling this instead of making three traces I'm making one single I'm doing it once in a for loop so if I were to run that well let's let's run three values day three computer variable say and then run our for loop and now we can see we've got three traces name Group a group B and Group C and we've plotted each of them no problem now let's go through this again and what we're going to say yeah the only difference we're going to make is that we're going to do box plot equals outliers so it's another argument that I'm adding to this box chart that I am creating here and although it's no different from what we've seen there we've just explicitly said that we want these outliers now to be identified properly I can also say I met the outliers and then these will disappear they won't be shown here at all now the more than one ways of doing horizontal box plots but the easiest way is just to change from the y axis to the x axis so that's the only thing that I'm changing here is to say that this must now be on the x axis and we see these values of my variables are now on the y axis making these box plots horizontal no problem whatsoever now instead of just these outliers we can actually have all the box plots in Leh and another argument I'm going to add here is box points and I'm gonna say all I'm going to add a jitter of 0.2 in a point position of negative 1.5 let me show you what that ends up being there we go it just shows all those 500 points in here the jitter means it's not down a straight line which means usually can't see them I'm making them left right left right left right there's a bit of jitter on the XS here just too so that they can see them all and the point position is negative 1.5 so that means on the left just move them slightly away from this little box plot that we have here and now we see all the Box points all the values plotted there I can add a mean so another argument that I'm adding here is box mean because remember what we see here in the middle is the median we can also add the mean let's do that and that'll draw this little horizontal line I hope you can see it there which because we've taken this from normal distributions there's not going to be much difference between the mean and median for all three of these we can also do the mean and the standard deviation by setting box mean equal to this is d if we run that we can see that we have the mean and we have the standard deviation not here on this dotted line let's play with the line colors so nothing really changed I'm going to introduce a line and let's a dict with a color and we're going to make this black zero comma zero comma zero there we go that's us black with a width of one we're not going to show the legends so I can also take away the legend that we have here on the side let's run that and there we see that everything is now in this gray scale which perhaps is a better way to submit for publication we can actually have a lot of control over what happens and in this instance I'm making my line black again my full color is just I'm going to iterate over the with us for loop and every time I'm going to change that so that's a Darkrai middle gray and a lighter gray so that is the full color for this line which I didn't specify there and I'm also going to have the marker the outliers I'm going to specifically change the color of the outliers and this is a bit of an orange and I'm going to use this open circle circle one of the key value pairs inside of this dictionary assemble and then also the size so a lot of things that I can really play with and if we look at this this is actually quite beautiful we have our dark gray our middle gonna light ray as I said they and our outliers here are these 10 points eyes open circles that are colored in orange so really a lot that you can play with when dealing with with these with these box plots you here we are in another tutorial and this time around we're going to look at subplots how can we add a few more plots to the same figure let's run our first cell they just importing our cascading style sheet there we go we're going to import a plot and in it notebook mode from placket offline and we're going to initialize this in that book mode I'm also going to import the the high level chart objects as Gio go and a new one we are also going to import tools just from the plotly library also importing America Python and then we're going to see the serial number generator just with a value of 1 2 3 4 first of all two plots on the same row so I'm going to create two traces they both going to be scatter plots now we've created this data they tell that we've seen before just a random integer chosen from a low of 20 a high of 65 and 100 of those we're going to call that female age then male age female salary male salary and now we have depth and we have female text equals male text just a bunch of random data that we've created we've looked at it before so trace 0 is a scatter plot on the y axis we can have the female salary on the x axis I should say and on the y axis a female age we have markers as the mode so not lines or lines and Marcus just markers we're gonna call this female and the marker size gonna have a certain color in a certain size we're gonna have trace 1 also scatter exactly the same thing here comes the new part I'm going to create a figure a figure object here just going to call it fig and that's going to be tools dot make underscore subplots and that's how you do those and I want one row in two columns if you think about it if there is a single growing two columns these plots are gonna be next to each other and I'm going to give each subplot a title so I'm also gonna use the arguments up plot underscore titles and I'm going to use this list of female and male now we need to append the traces to this figure so weenus a fig dot append underscore trace chase zero goes in position Row one column one and trace one goes in Row one column two so very easy to figure out how this is going to work figure dot layout update can also update a few more things in this instance just a title let's run this and see what it looks like and there we go we see the two plots sidebyside the subplot with the name drawn from the name in the trace mail on the side the colours we've drawn in and we see the plots sidebyside so our first subplot now if we look at it the yaxis here exactly the same twenty and twenty thirty and thirty we might as well just have one on the lefthand side so let's look at how to share that yaxis again the two traces nothing has changed the twos the subplots I've created one note two columns female and male have now added a new argument called shade underscore yaxis yes and when I set that to true everything else is exactly the same and if we run this we see indeed that the X's on this righthand side the male side has disappeared we are now shading the same y axis okay what about two rows in one column so or we introduced us to shift us around with make underscore subplots here we're going to have two rows on one column and we're gonna say a shared xaxis and you've got to think about this these two traces that you are creating or the number of traces educating they've got to have the same domain and range here otherwise this might not make a lot of sense so you've got to think about that and if we run that we see we have two rows in one column and also we should be sharing this single xaxis and no matter where we are we can still get all the data because this is plot Lee you know no matter where we hover we're still going to get our so what about constraining the proportions now this one gets a bit more difficult and we need to pay a bit of attention here we still going to create our trace that's a scatter but our trace the second one we trading a trace one I'm going to put two new arguments and let us xaxis equals x2 as a string and yaxis equals y2 telling pluckley that this goes on a different axis altogether now we don't need to do that if we're not doing anything fancy as we've seen before but here we want to do something so I'm going to use a different way of creating the data that's a Python less tracer and taste one and I'm going to have a separate layout as we've had before and all the other tutorials that we've had so let's go out I'm still going to have a title I'm going to have an xaxis and I'm going to pass a dictionary to that in that dictionary is a domain and think about this xaxis going from 0 to 1 so 0 to 100% of the width of what you have available and yet the domain we're saying use the leftmost 70 percent of the area of our figure for our first trace so the xaxis goes from 0 to 0.7 xaxis to remember which comes in this one here we said x axis to equals x2 so exactly x axis to goes from 80% to 100% so that 20% on the right hand side and we just have to say that Y X is 2 so the second plot is anchored to x2 so it will know that it has to anchor the second y axis to this part that we've specified appear so go and method about and put it in the first one and then figures go dot figure so we've done it this way around remember you could just say I plot and use the standard dictionary format that we've seen before so let's run that and now we can see we constraining this like right hand side to the last 80 percent and 70 percent on this side and this yaxis was told to fit with this little one on the right side okay let's customize the axis a little bit more here's a long one for you we're just creating these four traces they're all histograms we're gonna make a subplot and we're gonna say we want two rows and two columns we give a name to each of those you don't have to but we're going to kind of call it figure ABC and D and I append each of those to the position that I won't draw one column 1 Row 1 column 2 Row two column 1 Row 2 column 2 so it's always very first to name column and it's got to line up with what you specified up here so fig dot layout xaxis one update its title x axis to update its title x axis 3 and 4 and then YX is 1 2 3 4 these are all gonna line up with a number of plots you've created day and I can give each of the axis its own separate title we're just going to update to the main title and one new thing here I'm just gonna say show a legend equals false because I'm building in all the detail into each of these little subplots let's run there and there we go we get our four histograms that we created here figure ABCD they've all got the X's they all nicely labeled no problem what's all whatsoever so you can see female agent frequency male agent frequency female salary frequency male salary frequency so I can individually name each of these X's so we know what it's all about this is look lastly at the odd pairing so I'm going to introduce a new argument here to the tools that makes up lots and one mm two columns but you can see I've only listed three things here that's because I want the bottom two to be combined and I wanted to make up one single long plot so two at the top the first row will have two columns the second row just a single column so it's going to go all the way across so I've got to introduce the specs now look at it we see it's a list and it's a listing two parts the first part is going to be for this first row just showing the Tuesday and the second one we're going to say the column span spans both of the columns and then none because it is just a full thing that we won't because we only want these three figures otherwise everything is exactly the same as we've seen before and there we go see what we did it spans the whole the third when here Spain's this whole row on both sides so look and play around with this spec specs argument but you can clearly see how that was built up for the two rows and we want those two in the first row but we want a single one in the second row there and that is subplots have some fun enjoying your subplots it really helps to be able to do subplots and specially created reports or manuscripts for publication to have more than one element in this same plot remember to subscribe and hit that like button if you want to hit the notification button though that's important so that you can get notified if new material is released remember that you can also find all of these files on get up a link is in the description below speak to you next time you in this tutorial I want to show you how easy it is to import images into a collaboratory notebooks I'm on my Google Drive here I've navigated to I keep my YouTube tutorials and I'm going to simply say new scroll down to more and then collaboratory after a few seconds it opens a jupiter notebook for me let's change the name of this notebook I'm just going to highlight untitled 0 and we can just say display images as the title for for our Jupiter notebook so we've got our first cell here and I'm going to import two things I'm going to say from Google Doc collab you can just say import files be important because we're going to use that files to actually import our image and then to display the image in a notebook I'm going to say from I Python dot display import image so those two lines of code and we're going to use them SSA to import our image and then to display our image will add a new code cell and in here we generate a computer available called uploaded and that is going to be files got upload file start upload so we're gonna call this upload and we can now choose a file it's going to open the browser that is putting into our operating system and I'm going to choose from one of those files it's going to upload now as you can see 0% 18% 35% and there you go 100% now you'll notice it says saving kog logo dot light PNG to kog logo light space so I've got two other netbooks open and I've already loaded these logos they and an instance of that will exist and it is this name that I now have to use to display whatever it was called during the upload is what I'm now going to use so let's use image and inside of image we're now going to use KRG logo light and then dot PNG and I just want to add one more argument because it's a quite a large image that I'm importing here so its width let's set the width here in my case 1200 let's run that and there we go we can see the logo being displayed there beautifully so that is how you import an image and how you display an image in a collaboratory jupiter notebook in this tutorial i want to talk to you about using plotly inside of googles collaboratory so I went to my Google Drive and I've opened a new jupiter notebook as a collaboratory file here I've given it a name and imported my research groups image so let's talk about importing or using plotly inside of collaboratory now it is one of the libraries that has already been loaded so it is no problem just to use plotly you can just import it as you would usually do so you can import numpy as NP from Sify I'm going to import stats just so that we can simulate some data and then from plotly got offline i'm going to import i plot and init notebook mode and I'm also going to import plot a graph objects as Geo now notice carefully I'm not initializing the notebook mode right now so to run this we click on the little arrow to the left hand side and that cell executes you'll notice on the top righthand corner it has connected and it is connected to the Google engine as far as Python is concerned now you can pause the video here and copy this function you've gotta create a function that you then call in every cell that you want to use plotly in so I've called it configure underscore plotly underscore underscore state and we're going to import ipython and we're going to write this display script as I said you can just copy and paste it it's running and now let's get to simulating some data so I'm just going to see the pseudorandom number generator they just with the number 1 and I'm going to create a computer available call WCC for instance white cell count and I'm going to take that from a normal distribution with a mean of 15 standard deviation of 3 and I want 1000 of these data point values and now we can plot now as I mentioned here it's required in every cell that you want to run a plot the graph in so you've got to use these two lines of code so we're going to call this function and then we're going to initialize the notebook mode with connected equal false so you can copy and paste that as well that is got to go in every cell and now it's just normal plot ly I'm going to use trace 0 as is the log out histogram my xx is going to be the white cell count my data object it's going to hold the trace is a single list element and I'm just going to make the plot look a bit better by introducing some layout and then I can call I plot and I use as always the dictionary format so data being data and layout being layout let's run that and there you go we have a plot the graph right inside of a collaboratory Python notebook beautiful so copy and paste the definition and remember to call that the function and to call that function in every cell that you are going to use today the plot egg off