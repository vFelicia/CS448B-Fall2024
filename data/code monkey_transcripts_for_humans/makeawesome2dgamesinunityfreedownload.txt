With timestamps:

00:00 - hello and welcome I'm your Cod monkey
00:02 - Unity CI tools have massively improved
00:04 - over the past few years they've already
00:05 - been used to make several gorgeous
00:07 - awesome games notable examples include
00:09 - games like cuphead Hollow Knight Among
00:11 - Us or even games that makes 2D and 3D
00:14 - like Dave the diver or comp the lamb to
00:16 - help you make games like that Unity has
00:18 - just released an excellent brand new
00:19 - sample with all of their 2D tools you
00:21 - can get it for free from the ssur so
00:23 - check the link description alongside the
00:25 - sample there are also various blog posts
00:27 - help you learn and use all of these
00:28 - awesome TD tools that has you can use
00:30 - studio lights and normal maps to make
00:31 - your game look really excellent you can
00:33 - add shadows and day night cycles then
00:35 - you can build worms and lots of logic
00:37 - using these 2D to Maps next you can use
00:39 - Tod rigging and AK to set up your
00:41 - character with bones you can use the PSC
00:43 - importer to easily import your
00:44 - characters and animate them inside unity
00:46 - and finally you can learn all about how
00:48 - to use the VFX ra to make awesome 2D
00:50 - particle effects so let's inspect this
00:52 - sample and read all these articles to
00:53 - learn about all of these awesome 2D
00:55 - tools that exist nowadays there are many
00:57 - of these that you might not be familiar
00:59 - with and might be incredibly useful to
01:00 - you if you're working on 3D games for me
01:02 - lately I've been working mostly on 3D so
01:04 - a lot of this has been new to me and
01:06 - I've already learned quite a lot from
01:07 - this sample also this video is sponsored
01:09 - by unity check the links in the
01:10 - description to download the free sample
01:12 - and read all the Articles there's a ton
01:13 - of info on all those articles so here
01:15 - I'm just going to cover a quick hand
01:16 - level overview of all this so do make
01:19 - sure that afterwards you check all these
01:20 - articles and you read through them
01:21 - yourself there's time SS in the video if
01:23 - you want to jump ahead okay so here I've
01:25 - got the project load into Unity there's
01:27 - nice main menu and then it jumps right
01:29 - into
01:30 - gameplay so it starts off on this really
01:32 - nice inside scene right away you can see
01:35 - a bunch of really interesting Dynamic
01:36 - lights you can see the light effects on
01:38 - the character you can see the character
01:39 - rotates as I move the mouse you can see
01:41 - the timer the coins menu and so on and
01:44 - of course if we go down here we can go
01:46 - into the exterior and if there you go
01:48 - there's a really nice exterior so we got
01:50 - a house a really nice Pig again the time
01:52 - keeps going and down here we have a
01:54 - really nice Farm the game is basically a
01:56 - mini farming mini game so I've got a
01:59 - bunch of tools down here for example
02:00 - I've got this hoe I think so I can go
02:03 - down I can I don't know prepare the land
02:05 - whatever this means I can water some
02:07 - plants and I can take one of these seeds
02:10 - and just plant a bunch of stuff so let's
02:11 - plant what is this this is wheat yep
02:14 - let's plant it then using this little
02:16 - basket I can start harvesting some
02:17 - things and yep I'm picking up a bunch of
02:19 - things and that one is already starting
02:21 - to grow and some carrots over here and
02:23 - also note how the lighting is changing
02:24 - so this has a really nice day night
02:26 - cycle and again note all the rim light
02:29 - effects of the effects making it look
02:30 - really nice and then at night there's
02:32 - also a bunch more Dynamic lights so you
02:34 - can see over here this Dynamic light
02:36 - moving and moves around so it looks
02:37 - really good then up here there are also
02:39 - some buttons to control the weather so
02:41 - this can be nice clear skies or we can
02:43 - enable some rain or even some really
02:45 - intense rain and lighting effects so
02:47 - there you go look at that it looks
02:48 - really gorgeous so some really nice
02:50 - particle effects on the background
02:51 - there's the rain falling down of course
02:53 - it's all being affect by light so
02:54 - everything looks really gorgeous really
02:55 - nice all of it nicely animated and I can
02:59 - walk around I can explore this I can see
03:01 - a bunch more effects there's a bunch of
03:02 - water there's also collisions and so on
03:04 - and over here on the market then I can
03:06 - sell a bunch of things so let's sell a
03:07 - bunch of wheat a bunch of carrots and
03:09 - let's buy a bunch more seeds and so on
03:11 - so I can do this and then I can continue
03:13 - so let's pick up some more wheat and so
03:16 - on and as you can see it's a really nice
03:18 - really complete mini game so right away
03:20 - you can already see quite a lot of stuff
03:22 - you can see how it's got a to map in the
03:24 - background you've seen all the lighting
03:25 - effects you've seen how they interact
03:27 - the lighting interacts with the
03:28 - character in different ways all the
03:30 - animations all the interactions the
03:32 - particle effects and so on so yep that's
03:34 - pretty much how this is a really nice
03:35 - really cool sample showcasing all the
03:37 - unity 2D tools honestly playing through
03:39 - this one really makes me want to make a
03:41 - step-by-step course on making a farming
03:43 - mini game kind of like this something
03:44 - like stard Valley I'm currently busy
03:46 - working on my upcoming steam game d
03:48 - Guardians by the way go ahead and addit
03:49 - your wish list but after I finish this
03:51 - game I do want to get back to making
03:52 - complete course so don't let me know if
03:53 - a course like this on making something
03:55 - like sard Valley something like a
03:56 - farming Min game if you'd be interested
03:58 - in that so anyways yep like I said said
03:59 - this is a great sample a great very
04:01 - functional miname as you can see all the
04:03 - great 2D tools being used and the main
04:04 - one really is lighting so let's begin
04:06 - with that one there's a really article
04:08 - SL tutorial that goes into a lot of
04:10 - detail over how all of this works as you
04:12 - can see this is insanely detailed so
04:14 - like I said in this video I'm pretty
04:15 - much just going to cover an overview but
04:16 - definitely do make sure that you check
04:17 - the links and you go through them in
04:19 - detail one by one there's a ton of info
04:21 - here so if you want to make 2D games
04:23 - definitely spend some time learning all
04:24 - about this starting off with Dynamic
04:26 - lighting now some of you might not be
04:28 - familiar with the fact that Unity
04:29 - actually has 2D specific lights if
04:31 - you're making a 2d game you should
04:32 - definitely use these and not the 3D
04:34 - lights over here in the inspector when
04:36 - you go into to add some object you can
04:38 - go into light and over here you've got
04:39 - these up top These are 3D lights and
04:41 - then down here these are the 2D specific
04:43 - lights if you don't see these that means
04:44 - you probably don't have the 2D packages
04:46 - installed so over here make sure you
04:48 - have these 2D packages and then of
04:50 - course make sure you are using urp and
04:51 - make sure you are using a 2d renderer
04:54 - with that you should be able to see the
04:55 - 2D lights of all these types for these
04:57 - ones free form is basically a two light
04:58 - that can have any shap shape you want by
05:00 - the way another quick tip over here on
05:01 - the search you can press T then colon
05:04 - and then you can write some kind of type
05:06 - so for example over here I want to see
05:07 - all the lights so I'm going to type
05:08 - light 2D and Y there you go I can see
05:10 - all of the lights that exist in this
05:12 - nice demo scene so for example here is a
05:14 - free form light and this one free form
05:17 - has a certain shape and you can create
05:18 - this shape on all kinds of vertices this
05:20 - is free form then you have Sprite lights
05:23 - these can use any Sprite you want for
05:25 - example over here the Street Lamp this
05:26 - one has a sprite light and you can see
05:28 - over there exactly what the shape of the
05:30 - light is so it basically takes a Sprite
05:31 - and use that as a light shape then you
05:33 - have spotlights these are super basic so
05:36 - these are your standard lights that hit
05:37 - a certain area so as you can see that is
05:39 - a basic Spotlight and then you have
05:41 - Global lights this one does not have any
05:43 - shape this one simply affects every
05:44 - single object on the world also when
05:46 - using to the lights it is important over
05:48 - here to look at the Target sorting
05:49 - layers this is which layers will
05:51 - actually be affected by this light for
05:53 - example over here if I move this light
05:54 - you can see that it does affect the
05:56 - background but if I put it over there
05:57 - near the character you can see it does
05:58 - not like the character whereas if I
06:00 - modify this one to include another let's
06:02 - say the objects and I move it over there
06:04 - and yep now it does indeed light up the
06:06 - character also another very important
06:07 - part about lights is make sure that your
06:09 - material is using a Sprite Shader so go
06:10 - into any Sprite runer you have and make
06:12 - sure that on your material you're using
06:13 - a Sprite lit material you can check out
06:15 - the Shader and make sure that you are
06:17 - using a Sprite lid Shader if you're not
06:19 - using this 2D Shader if you're using the
06:21 - regular one just by urp that will not be
06:23 - affected by two lights then to take your
06:24 - two lights even further one thing you
06:26 - can add are secondary textures this is
06:28 - how you can add this nice little Rim
06:30 - lighting by default the entire Sprite
06:32 - won't be lit but by using secondary
06:34 - textures you can make sure the light
06:36 - only affects a certain part of it to use
06:38 - to the textures you basically just go
06:39 - into your texture map so over here this
06:41 - is the texture map for the entire
06:43 - character and over there on the Sprite
06:45 - import settings we can see that this one
06:47 - is being imported as it to the Sprite
06:48 - and we can open up the Sprite editor and
06:50 - over here we see all the body parts so
06:52 - how that is set up and if we go on the
06:53 - top left corner over here we can go down
06:55 - into secondary textures and you can see
06:57 - that this texure does have two secondary
06:59 - textures it has a normal map and a mask
07:01 - map then if we click on these we can see
07:03 - how these are set up you can see the
07:05 - normal map here with these gradients
07:07 - this normal map this is how you get that
07:08 - almost 3d effect where the light hits
07:11 - different parts of the Sprite
07:12 - differently if I grab this light and I
07:13 - move it around you can see a pretty big
07:15 - difference look at how the Sprite is lit
07:17 - depending on where exactly the light is
07:19 - the other map you can apply is a mask
07:21 - map so masks are how you control where
07:23 - the lights affect the Sprite and
07:25 - specifically over here on this game the
07:26 - mass map is used as a rim light you can
07:29 - see that little Rim lighting over there
07:31 - on the top of the hair you can see how
07:33 - that one is different from the rest of
07:34 - the Sprites that really helps the
07:36 - readability in the game itself as to how
07:38 - you make those normal maps in the
07:39 - article over here they mentioned several
07:41 - options if your workflow involves 3D
07:43 - modeling something before creating the
07:44 - Sprite then doing those should be pretty
07:46 - easy to generate if not then apparently
07:48 - there are some tools that can help you
07:49 - build them now I'm not familiar with any
07:51 - of these so I can't speak to the
07:52 - specific process but regardless of which
07:55 - of these tools you use in the end you
07:56 - probably want to have an artist manually
07:58 - paint the lights and Shadows for the
08:00 - really important Sprites like the main
08:01 - character you probably want an artist to
08:03 - manually go ahead and modify each
08:05 - generated Sprite to make it look exactly
08:06 - as you want it now something really
08:08 - important in this sample is the day
08:10 - night cycle this sample contains a
08:11 - really awesome script that also contains
08:13 - a really nice custom editor where you
08:14 - can easily modify everything to see the
08:16 - change you can see all the various
08:18 - lights that they use as well as all the
08:19 - gradients basically the way they make it
08:21 - work is with a global light and a
08:23 - directional light now technically in 2D
08:25 - you don't have a directional light so
08:27 - the way they actually fake a directional
08:28 - light is simply by using a regular
08:30 - Spotlight with an angle of 360 and then
08:33 - they simply rotate where exactly that
08:34 - light comes from so over here you can
08:36 - see that inside the main camera there's
08:38 - a lights Rotator this is an empty game
08:40 - object where inside of it they've got
08:42 - all kinds of day and night lights and
08:44 - then the day night cycle script that one
08:45 - basically just rotates this game object
08:47 - you can see over there the Z rotation
08:49 - you can see it rotates and if we select
08:51 - both these we can see day light and yep
08:53 - you can see that it rotates up and down
08:55 - and the NightLight pretty much does the
08:56 - opposite so this is a really clever way
08:58 - of how to handle on directional lights
09:00 - even though the 2D system doesn't
09:02 - technically have directional lights this
09:04 - definitely a really clever approach
09:05 - personally I never thought of it but
09:07 - obviously it makes a lot of sense a
09:09 - spotlight that you move around pretty
09:10 - much acts like a directional light so if
09:12 - you'd like to implement a day night
09:13 - cycle into your own 2D games I highly
09:16 - recommend you download this sampl and
09:17 - look at this script look at how all this
09:19 - set up I think this looks really nice
09:21 - the way they have multiple lights with
09:22 - multiple mask and over here using the
09:24 - gradients I think this looks really good
09:26 - and the other important thing related to
09:27 - lighting is obviously Shadows now there
09:29 - are multiple ways to add Shadows one way
09:32 - which is somewhat counterintuitive is to
09:34 - actually use a light that is how they
09:36 - handle the shadows for this little
09:37 - building again in 2D this building
09:40 - doesn't actually have a shape so in
09:41 - order to create this shape they made a
09:43 - free form light and then they simply
09:45 - tinted that light and black another
09:47 - technique you can use are 2D realtime
09:49 - Shadows so there over there the Shadow
09:51 - on this little Barrel as I move it
09:52 - around yep it has a perfect realtime
09:54 - Shadow adding this is super simple you
09:56 - just go into any Sprite and you add the
09:58 - shadow Caster comp component then you
09:59 - can addit the shape in order to modify
10:01 - the shape that generates the Shadow and
10:03 - they also have a really excellent tip
10:05 - for how to apply Shadows to your
10:06 - character how you probably do not want
10:08 - to add Shadows to the entire character
10:10 - itself doing that would make it look
10:11 - quite weird so instead just add it to De
10:13 - feat and like this it looks really nice
10:15 - you basically just go inside the field
10:17 - bones and you add the same Shadow Caster
10:18 - component although these Shadows these
10:20 - are actually pretty harsh and infinite
10:23 - as you can see in the article they
10:24 - essentially are better suited for night
10:25 - scenes and not really for daytime scenes
10:28 - however during daytime you still want
10:29 - some shadows in order to make your game
10:30 - look good so for that you can
10:32 - essentially use fake Shadows here in the
10:34 - daytime we can see how they made those
10:35 - fake Shadows so you can see over here
10:38 - this one this Shadow for this tree you
10:39 - can see how it rotates around and this
10:41 - Shadow is actually technically just a
10:43 - light it is enlightened in Black this
10:46 - one is a sprite light so it has this
10:48 - little Shadow Sprite and then the day
10:51 - night cycle script that one simply
10:52 - rotates this Parent Game object again
10:54 - these are not perfect to the lights but
10:55 - this method looks much better during the
10:57 - daytime and coming back to the shadow
11:00 - for the house over here as we saw in the
11:02 - article they basically use a free form
11:04 - light but if I modify the time you can
11:06 - see how the shape actually changes in a
11:08 - really nice really smooth way this yet
11:10 - another thing that you can take directly
11:12 - from this really nice sample basically
11:14 - they have a really great script here
11:15 - inside the light 2D warehouse and it's a
11:18 - script that they call light interpolator
11:19 - so basically inside they've got all
11:21 - kinds of free form lights these have all
11:23 - kinds of points and then they basically
11:24 - use the script in order to generate a
11:26 - light Shadow a free form light shadow
11:28 - that way interpolates between all these
11:30 - various frame points and that is how you
11:32 - get this really nice interpolated free
11:34 - form Shadow and one more nice tip is
11:36 - using blob Shadows so for things like
11:38 - the character for that one during the
11:39 - daytime you probably don't want a hard
11:41 - Shadow so you really just want a simple
11:43 - Sprite right to feed the character it's
11:45 - a simple thing but it looks really great
11:47 - and that's pretty much what all 2D games
11:48 - use now when it comes to lighting one
11:50 - big concern is always with regards to
11:51 - Performance especially if you're making
11:53 - mobile games so this article has a bunch
11:55 - of tips to help you in that regard the
11:57 - main one that you can use is really just
11:59 - use a frame debugger this lets you
12:01 - basically see how each frame is being
12:02 - rendered that can really help you figure
12:04 - out bottle necks in your GPU rendering
12:06 - down here you can see all the various
12:08 - tips make sure your lights are batchable
12:11 - try to keep the render scale as low as
12:13 - possible minimize the number of Shadow
12:15 - casting lights on screen this is
12:16 - probably the best one that you can
12:17 - easily modify also minimize the number
12:19 - of blend styles again there is a
12:21 - significant cost in all the algorithms
12:23 - that make up the blend Styles or simply
12:25 - adjust the max number of Lights okay so
12:28 - all of this is a t info on the 2D
12:29 - lighting system then another tool that
12:32 - is used heavily in this sample is the 2D
12:34 - T map again there's another really
12:36 - detailed article with tons of info on
12:38 - making art and gameplay using to the T
12:39 - Maps I covered a simple tutorial on how
12:41 - to use the T map some time ago basically
12:44 - you can create a Sprite asset you can
12:45 - create tiles by slicing some Sprites
12:48 - then you can easily place them in a
12:49 - Unity grid using a simple brush then on
12:51 - top of that you can add collisions you
12:53 - can make more tile maps and build more
12:55 - complex things which this article covers
12:57 - so here in the sample we we can see all
12:59 - the ti Maps they're all in here under
13:01 - this grid game object so we've got
13:03 - underwater tiles water ground base and
13:05 - so on so tons of tiles for all kinds of
13:07 - different types each one of these uses a
13:09 - different TI map if we select one of the
13:12 - ti maps and over here we click on open
13:13 - tile pallet over here we can see all the
13:16 - various tiles that make up this stle map
13:18 - so as you can see we've got a water tile
13:19 - a bunch of grass we've got all kinds of
13:21 - walls ceilings floors and so on this is
13:25 - all nicely separated into various layers
13:27 - and the way you paint is you simply
13:28 - select the tile and then you simply draw
13:30 - on top of it so if you're making 2D
13:32 - games the to map is really one of the
13:33 - most useful things you can use and just
13:35 - like with lighting you can also use
13:37 - secondary textures so you can use normal
13:38 - maps in order to modify how the light
13:40 - impacts the various tiles one of the
13:42 - most useful things is the rule tile so
13:44 - this is how you can basically Define
13:46 - some rules and then easily paint and
13:47 - every time you paint it follows along
13:49 - with these rules in order to figure out
13:50 - which Sprite to select in this sample
13:52 - you can find all of the various R tiles
13:54 - over here so inside happy harvest inside
13:56 - art tiles and then you've got the
13:57 - various ones and most of these got a
13:59 - kind of rule tile and over here yep we
14:01 - can see all the rules so for example the
14:03 - first rule if you place a tile and there
14:05 - is no tile above it no to to the left
14:08 - but there is a dirt to to the right
14:10 - under to the right and under if so then
14:12 - it's going to select this corner tole
14:14 - then if it follows this rule it selects
14:16 - this one this one this one and so on so
14:17 - yep Ru Tils are super important super
14:19 - useful if you're using the 2D to map
14:21 - definitely make sure you'll learn how
14:23 - this to works it's actually pretty
14:24 - simple and super useful definitely Mak
14:26 - selecting all of these round Tils much
14:27 - much easier you just Define the rules
14:29 - and then easily paint and everything
14:30 - looks correct here in the article
14:32 - there's a really nice explainer on how
14:34 - all the various sound maps are
14:35 - structured how they separated them and
14:37 - why they did it so why did they make in
14:39 - underwater tiles water and so on and
14:41 - actually in here in this article I
14:43 - learned about one thing that I did not
14:44 - know which is the game object brush I
14:47 - did not know that this existed this one
14:49 - apparently lets you use a brush like you
14:50 - use with any of the time ups but instead
14:52 - of painting tiles you can actually paint
14:54 - regular game objects this is something
14:55 - that I've seen being done by a bunch of
14:57 - tools on the osur but I I didn't know
14:58 - that Unity itself could do it so I just
15:00 - learned something new that's right one
15:02 - area where it's really useful to spawn
15:04 - separate objects instead of just one
15:05 - towel is for example for dealing with
15:07 - sorting orders if you put one town map
15:09 - then the entire town map won't have the
15:11 - same sorting order but of course if you
15:13 - have a tree over here and you've got
15:14 - another one down here you want those to
15:16 - be on different sorting orders in order
15:17 - to show up one above the other one so
15:19 - for objects that are not directly
15:21 - painted on the floor for those you
15:23 - probably want to use a separate object
15:24 - and using that game object brush is
15:26 - super useful to place them easily
15:28 - however TI maps are not just for visuals
15:30 - that's the main thing but it can be used
15:32 - for more than that like it says here in
15:34 - this article you can use a t map API in
15:36 - order to handle all kinds of gameplay in
15:38 - this game which is a farming game for
15:39 - example the ground to map this one
15:41 - contains some logic based on the S Tils
15:43 - to indicate where the player can dig and
15:44 - pl seeds you can inspect the terrain
15:46 - manager in order to see all the
15:47 - functions that it uses to interact with
15:48 - the to map API in order to read the
15:50 - various things and update the tiles that
15:52 - one is placed over here directly on the
15:53 - grid game object here we have the
15:55 - terrain manager and in this script we
15:57 - can see how it has references to the
15:59 - various T maps and then it's using
16:01 - various functions like the ti map. set
16:03 - tile in order to modify a certain tile
16:04 - on a certain position so if you want to
16:06 - learn how to handle gameplay directly
16:08 - inside the T map make sure you check out
16:09 - this script although personally I must
16:11 - say for me when I want to handle some
16:13 - logic inside of a grid personally I
16:15 - really just use my own grid system which
16:17 - is really made to use generic so it
16:18 - feels much more adaptable but if you
16:21 - just want to use the built-in into tell
16:22 - map then definitely look into this one
16:23 - to figure out what you can do with it
16:25 - then you have another set of tools that
16:27 - was used heavily in this sample are the
16:28 - 2D rigging and ik tools again there's
16:31 - another excellent article super detailed
16:33 - exactly on this topic this one is really
16:35 - insanely detailed if you've never played
16:37 - around with the 2D bone tools and Sprite
16:39 - swapping like for me I haven't then I
16:41 - highly recommend reading through this
16:42 - entire article it all starts off
16:44 - obviously by drawing the character
16:45 - properly by drawing the body part
16:47 - separately now for this you can draw the
16:49 - body in really any image program but if
16:51 - you use Photoshop then the PSC import
16:53 - can be extremely useful here I have the
16:56 - character PSC file select the unity and
16:57 - if I open this Sprite editor look that
16:59 - all the body parts all neatly separated
17:02 - however here is a file open up in
17:03 - Photoshop note how all of the body parts
17:06 - is are on placed correctly except for
17:08 - the hair that one for some reason is
17:09 - appearing in front of the face but
17:11 - everything else on the arms and legs and
17:12 - so on all those are placed correctly and
17:14 - note how they are all on separate layers
17:16 - all on separate folders the old way of
17:18 - drawing some spreadsheets would be to
17:20 - draw them manually separated so you draw
17:23 - one arm here one leg here one foot here
17:25 - one hand here and so on drawing it like
17:27 - that is really tricky to make sure that
17:28 - everything fits correctly so this is
17:30 - obviously a much better method and if
17:31 - you use the PS import you can do it EXA
17:33 - like this place it on separate layers
17:35 - and then Unity automatically separates
17:37 - all of those layers into separate parts
17:39 - makes them fit correctly as tightly as
17:41 - possible and automatically creates
17:42 - individual Sprites out of each body part
17:44 - so just as soon alone is insanely useful
17:46 - personally I remember trying to manually
17:48 - draw Sprite sheets quite a long time ago
17:50 - and it was all such a huge pain to draw
17:51 - them manually so being able to automate
17:53 - this process this is super awesome if
17:55 - you make 2D games definitely make sure
17:56 - you use the PSD importer so with this
17:58 - here we have all the separate body parts
18:01 - now for this game it's a 2d top down
18:03 - game so they opted to go for just four
18:04 - directions as you can see it's up to you
18:06 - to decide how many directions you want
18:08 - to have obviously the more you have the
18:09 - more responsive your game looks but
18:11 - obviously a lot more work to create all
18:13 - of these individual directions as
18:14 - opposed to just these over here for the
18:16 - Sprites we can see we've got the head
18:18 - front the head back and the head to the
18:19 - side and for the other side they simply
18:21 - invert this one then note how they also
18:23 - Drew various hand poses these are used
18:25 - in the animation which I'm going to
18:26 - cover in a bit alongside this section is
18:28 - something that we've already seen which
18:29 - are the secondary textures so we can see
18:31 - and Yep this one also has a normal map
18:33 - and mass texture this is how we can get
18:34 - those really nice lighting info and then
18:36 - here in the article here is the really
18:38 - awesome part rigging in the Sprite
18:39 - editor this is how you can very easily
18:42 - create bones directly inside of unity so
18:44 - over here again selecting the PSD
18:46 - character here is the entire character
18:48 - and on the top left corner we can go
18:49 - down into the skinning editor and up
18:51 - here we can see the skin for our
18:53 - character for our mesh along with all
18:54 - the bones and what objects they affect
18:56 - this bone tool is really super powerful
18:58 - using this makes building 2D animations
19:00 - so much easier than using Sprite sheet
19:02 - animations adding bones is really easy
19:04 - which means you can set up all kinds of
19:06 - individual bones you can really go super
19:08 - detail and make sure to animate just the
19:09 - ears the eyes and so on they also added
19:12 - bones just to the eyelids the eyebrows
19:14 - and so on so using this tool building
19:16 - something like face animations that is
19:18 - so much easier then after assigning
19:20 - bones there's a button to automatically
19:22 - add some geometry you can play around
19:24 - with this but obviously don't go way too
19:25 - crazy otherwise you end up with a
19:27 - million polygons and once the geometry
19:29 - is set up then you can play around over
19:30 - here with the weights and you basically
19:32 - just select the bones and then draw
19:34 - directly on the Sprite so for example
19:36 - double click over here on this bone so
19:38 - on this shoulder bone right now it's
19:40 - obviously only affecting the right
19:41 - shoulder but if I want I can paint the
19:43 - left shoulder and there you go now it
19:44 - affects both them so it just takes a bit
19:46 - of work in order to go individually by
19:48 - each bone in order to paint exactly
19:49 - where you want it and everything behaves
19:51 - perfectly when you have everything set
19:53 - up correctly you should be able to play
19:54 - around with most of the bones in order
19:56 - to get any animation any pose that you
19:57 - want this character is already really
19:59 - nicely animated so you can see how very
20:01 - easily I can build all kinds of
20:02 - interesting animations interesting poses
20:04 - and everything works great then of
20:06 - course one huge benefit of bone based
20:08 - animation instead of handdrawn
20:09 - spreadsheets is you can easily apply the
20:11 - same animation to multiple different
20:13 - characters in this game all the
20:14 - characters share the same animation
20:16 - despite having very different visuals
20:18 - you can do that using Sprite swap which
20:20 - lets you use the same bones or animation
20:21 - but swap these Sprites on top of it all
20:23 - the thata is stored in these various
20:25 - Sprite Library assets so this one the
20:27 - character itself has the Sprite Library
20:29 - using this asset and we can inspect it
20:31 - here as you can see this one has both
20:32 - caries and labels this one is the dummy
20:35 - base Herer so they set up this base
20:38 - Sprite Library acid with the nose from
20:40 - the front the side the ears and so on
20:42 - they set up all of these and then they
20:44 - basically just extend them in order to
20:46 - make these various other ones so for
20:47 - example here for the head for the Farmer
20:49 - they simply use a different reference to
20:50 - a different Sprite with all of that here
20:52 - is the character and in order to swap
20:54 - out the character really just swap out
20:55 - over here the Sprite liy asset so I
20:57 - swapped that out for the farming Sprite
20:59 - library but for some reason this one
21:01 - doesn't update immediately but if I play
21:03 - the game yep there's my completely
21:05 - different character and if I want to
21:06 - change it just swap out the Sprite
21:07 - Library asset and yep there's another
21:09 - character and there's another character
21:10 - again all of them sharing the same
21:12 - animations but having some really nice
21:13 - different visuals and of course for the
21:15 - animations these are set up in the
21:16 - regular animator you create animations
21:19 - by modifying the bone positions so
21:21 - pretty simple just like you would
21:22 - normally do and the animator itself also
21:24 - has an interesting setup note how they
21:26 - use different layers for both The Head
21:28 - and the base animations also note how
21:30 - this little a here this means that this
21:33 - this means that this layer over here the
21:34 - blending is set to additive meaning it
21:36 - adds on top of all the other animations
21:39 - then the base layer has the various
21:40 - movement and action so w watering eating
21:42 - and so on and finally for the last layer
21:44 - flip this one just has two animations
21:46 - face right and face left and if we go
21:48 - into the character and we inspect those
21:50 - animations we can see that really all
21:52 - they are doing all they are recording is
21:54 - over there the scale. X so on face right
21:56 - that one is on one and on face left
21:58 - that one is on minus one so they really
22:00 - just modify the scale. X in order to
22:02 - look left or right and then the base
22:04 - layer works on up the flip layer and the
22:05 - head layer on top of that now for
22:07 - building animations like we saw you can
22:09 - just use the regular animat window just
22:11 - manually move all the limbs all the
22:13 - bones and everything will work correctly
22:15 - or you can also use ik which is inverse
22:17 - kinematics basically this how you can
22:19 - move just a hand and then it will
22:21 - automatically move the lower and the
22:23 - upper arm in order to place them in a
22:24 - position where it makes sense for the
22:26 - hand to reach that point using is always
22:28 - really awesome I already covered the
22:30 - tool that is used for making it in 3D
22:32 - and over here as you can see that tool
22:34 - also exists in 2D this one really helps
22:36 - speed up the animation process
22:37 - significantly the way this works is over
22:39 - here the prefab character base this one
22:41 - has an ik manager and as you can see
22:43 - this one has all kinds of limb solvers
22:45 - so let's see this one the arm right limb
22:47 - solver and if you ever Ed any ik tool
22:50 - then this should be pretty familiar you
22:51 - really just got the effector which is
22:53 - what is going to be affected by this and
22:55 - then you've got the target so the target
22:57 - this really just an invisible position
22:59 - and now if I move just as Target look
23:00 - what happens to the rest of the arm as
23:02 - you can see everything moves correctly
23:04 - in order to make sure that the hand
23:05 - always places exactly where I'm
23:07 - targeting so you can see how it saves a
23:09 - ton of time to be able to animate just
23:11 - this one target instead of having to
23:13 - animate every individual bone to make
23:15 - sure it makes sense and of course you
23:17 - can also make this Dynamic meaning
23:19 - instead of controlling the effector with
23:20 - a static animation you could simply
23:22 - control it through code to make it grab
23:23 - a dynamic object or something like that
23:26 - exactly like I covered in 3D in a
23:27 - previous video you can do the exact same
23:29 - thing with this 2D tool but remember
23:31 - that while using bones and ik is indeed
23:33 - super useful sometimes a simple
23:34 - animation is more than good enough for
23:36 - example if we look at the lamp we can
23:38 - see how the lamp over here has a simple
23:40 - animation just swinging left and right
23:43 - so for these kind of use case you really
23:44 - just need an animation so not even an
23:46 - animator just the old school animation
23:48 - component it is super simple but of
23:50 - course works great for the super simple
23:52 - use case then yet another animation you
23:54 - have are just simply flip book
23:55 - animations so for things like splashing
23:57 - water or these kinds of effects these
24:00 - can be super simple flipbook animations
24:01 - that are simply played by a simple
24:03 - Shader and speaking of shaders that is
24:05 - obviously something that always gives
24:06 - some excellent polish and for that there
24:08 - is yet another super detailed article
24:10 - that is coming soon all about 2D special
24:12 - effects with the VFX R and shade graph
24:14 - which again some of you might not even
24:15 - know that VFX gra already Works in 2D
24:18 - when it came out it was 3D only but in a
24:20 - previous version they've already added
24:21 - 2D support and if this sample in all
24:23 - these examples is enough if you want to
24:25 - learn even more about in2d there's even
24:27 - a a bunch more links you can check out
24:29 - the previous excellent 2D samples one of
24:31 - them is the Lo script this one has tons
24:33 - of interesting particles lots of
24:34 - interesting stuff and then you've got
24:36 - the dragon precious demo this one has
24:38 - tons of bone animations Sprite shapes
24:39 - and lots of stuff I also made a video
24:41 - doing an overview on this one and for
24:43 - more ebooks there's one all about 2D
24:45 - game art and animation there's one an
24:47 - introduction to urp for advanced Unity
24:49 - creators I also made a nice video
24:51 - overview on this one if you got a book
24:53 - all about hrp just in case you want to
24:54 - push Unity to its visual limits and you
24:57 - got another ebook this this one is all
24:58 - about Advanced visual effects in unity
24:59 - so if you want to dive deeper into the
25:01 - VFX graph definitely go ahead and read
25:02 - this one all right so that is the latest
25:04 - official Unity 2D sample showcasing all
25:06 - of these awesome 2D tools to help you
25:07 - make awesome 2D games if you do want to
25:09 - make 2D games then I highly encourage
25:11 - you to download this free sample and
25:12 - check out all of these ebooks personally
25:14 - I've been more into 3D recently so for
25:16 - me it was great to read all this and get
25:18 - a refresher on all the 2D tools that un
25:20 - has it's really amazing how much un 2D
25:22 - has involved over the past few years
25:24 - when I started making games with un back
25:25 - in 2012 back then I was making 2D games
25:27 - but I had to use all kinds of weird 3D
25:29 - tools and make them look like 2D so it's
25:31 - really amazing that there are so many
25:33 - dedicated 2D tools nowadays nowadays
25:35 - thanks to all these aesome 2D tools you
25:36 - can make excellent games like the ones I
25:38 - mentioned in the intro so check the link
25:40 - description to download the s for
25:41 - yourself check out all these articles
25:43 - and read through all them thank you for
25:44 - watching and I'll see you next time

Cleaned transcript:

hello and welcome I'm your Cod monkey Unity CI tools have massively improved over the past few years they've already been used to make several gorgeous awesome games notable examples include games like cuphead Hollow Knight Among Us or even games that makes 2D and 3D like Dave the diver or comp the lamb to help you make games like that Unity has just released an excellent brand new sample with all of their 2D tools you can get it for free from the ssur so check the link description alongside the sample there are also various blog posts help you learn and use all of these awesome TD tools that has you can use studio lights and normal maps to make your game look really excellent you can add shadows and day night cycles then you can build worms and lots of logic using these 2D to Maps next you can use Tod rigging and AK to set up your character with bones you can use the PSC importer to easily import your characters and animate them inside unity and finally you can learn all about how to use the VFX ra to make awesome 2D particle effects so let's inspect this sample and read all these articles to learn about all of these awesome 2D tools that exist nowadays there are many of these that you might not be familiar with and might be incredibly useful to you if you're working on 3D games for me lately I've been working mostly on 3D so a lot of this has been new to me and I've already learned quite a lot from this sample also this video is sponsored by unity check the links in the description to download the free sample and read all the Articles there's a ton of info on all those articles so here I'm just going to cover a quick hand level overview of all this so do make sure that afterwards you check all these articles and you read through them yourself there's time SS in the video if you want to jump ahead okay so here I've got the project load into Unity there's nice main menu and then it jumps right into gameplay so it starts off on this really nice inside scene right away you can see a bunch of really interesting Dynamic lights you can see the light effects on the character you can see the character rotates as I move the mouse you can see the timer the coins menu and so on and of course if we go down here we can go into the exterior and if there you go there's a really nice exterior so we got a house a really nice Pig again the time keeps going and down here we have a really nice Farm the game is basically a mini farming mini game so I've got a bunch of tools down here for example I've got this hoe I think so I can go down I can I don't know prepare the land whatever this means I can water some plants and I can take one of these seeds and just plant a bunch of stuff so let's plant what is this this is wheat yep let's plant it then using this little basket I can start harvesting some things and yep I'm picking up a bunch of things and that one is already starting to grow and some carrots over here and also note how the lighting is changing so this has a really nice day night cycle and again note all the rim light effects of the effects making it look really nice and then at night there's also a bunch more Dynamic lights so you can see over here this Dynamic light moving and moves around so it looks really good then up here there are also some buttons to control the weather so this can be nice clear skies or we can enable some rain or even some really intense rain and lighting effects so there you go look at that it looks really gorgeous so some really nice particle effects on the background there's the rain falling down of course it's all being affect by light so everything looks really gorgeous really nice all of it nicely animated and I can walk around I can explore this I can see a bunch more effects there's a bunch of water there's also collisions and so on and over here on the market then I can sell a bunch of things so let's sell a bunch of wheat a bunch of carrots and let's buy a bunch more seeds and so on so I can do this and then I can continue so let's pick up some more wheat and so on and as you can see it's a really nice really complete mini game so right away you can already see quite a lot of stuff you can see how it's got a to map in the background you've seen all the lighting effects you've seen how they interact the lighting interacts with the character in different ways all the animations all the interactions the particle effects and so on so yep that's pretty much how this is a really nice really cool sample showcasing all the unity 2D tools honestly playing through this one really makes me want to make a stepbystep course on making a farming mini game kind of like this something like stard Valley I'm currently busy working on my upcoming steam game d Guardians by the way go ahead and addit your wish list but after I finish this game I do want to get back to making complete course so don't let me know if a course like this on making something like sard Valley something like a farming Min game if you'd be interested in that so anyways yep like I said said this is a great sample a great very functional miname as you can see all the great 2D tools being used and the main one really is lighting so let's begin with that one there's a really article SL tutorial that goes into a lot of detail over how all of this works as you can see this is insanely detailed so like I said in this video I'm pretty much just going to cover an overview but definitely do make sure that you check the links and you go through them in detail one by one there's a ton of info here so if you want to make 2D games definitely spend some time learning all about this starting off with Dynamic lighting now some of you might not be familiar with the fact that Unity actually has 2D specific lights if you're making a 2d game you should definitely use these and not the 3D lights over here in the inspector when you go into to add some object you can go into light and over here you've got these up top These are 3D lights and then down here these are the 2D specific lights if you don't see these that means you probably don't have the 2D packages installed so over here make sure you have these 2D packages and then of course make sure you are using urp and make sure you are using a 2d renderer with that you should be able to see the 2D lights of all these types for these ones free form is basically a two light that can have any shap shape you want by the way another quick tip over here on the search you can press T then colon and then you can write some kind of type so for example over here I want to see all the lights so I'm going to type light 2D and Y there you go I can see all of the lights that exist in this nice demo scene so for example here is a free form light and this one free form has a certain shape and you can create this shape on all kinds of vertices this is free form then you have Sprite lights these can use any Sprite you want for example over here the Street Lamp this one has a sprite light and you can see over there exactly what the shape of the light is so it basically takes a Sprite and use that as a light shape then you have spotlights these are super basic so these are your standard lights that hit a certain area so as you can see that is a basic Spotlight and then you have Global lights this one does not have any shape this one simply affects every single object on the world also when using to the lights it is important over here to look at the Target sorting layers this is which layers will actually be affected by this light for example over here if I move this light you can see that it does affect the background but if I put it over there near the character you can see it does not like the character whereas if I modify this one to include another let's say the objects and I move it over there and yep now it does indeed light up the character also another very important part about lights is make sure that your material is using a Sprite Shader so go into any Sprite runer you have and make sure that on your material you're using a Sprite lit material you can check out the Shader and make sure that you are using a Sprite lid Shader if you're not using this 2D Shader if you're using the regular one just by urp that will not be affected by two lights then to take your two lights even further one thing you can add are secondary textures this is how you can add this nice little Rim lighting by default the entire Sprite won't be lit but by using secondary textures you can make sure the light only affects a certain part of it to use to the textures you basically just go into your texture map so over here this is the texture map for the entire character and over there on the Sprite import settings we can see that this one is being imported as it to the Sprite and we can open up the Sprite editor and over here we see all the body parts so how that is set up and if we go on the top left corner over here we can go down into secondary textures and you can see that this texure does have two secondary textures it has a normal map and a mask map then if we click on these we can see how these are set up you can see the normal map here with these gradients this normal map this is how you get that almost 3d effect where the light hits different parts of the Sprite differently if I grab this light and I move it around you can see a pretty big difference look at how the Sprite is lit depending on where exactly the light is the other map you can apply is a mask map so masks are how you control where the lights affect the Sprite and specifically over here on this game the mass map is used as a rim light you can see that little Rim lighting over there on the top of the hair you can see how that one is different from the rest of the Sprites that really helps the readability in the game itself as to how you make those normal maps in the article over here they mentioned several options if your workflow involves 3D modeling something before creating the Sprite then doing those should be pretty easy to generate if not then apparently there are some tools that can help you build them now I'm not familiar with any of these so I can't speak to the specific process but regardless of which of these tools you use in the end you probably want to have an artist manually paint the lights and Shadows for the really important Sprites like the main character you probably want an artist to manually go ahead and modify each generated Sprite to make it look exactly as you want it now something really important in this sample is the day night cycle this sample contains a really awesome script that also contains a really nice custom editor where you can easily modify everything to see the change you can see all the various lights that they use as well as all the gradients basically the way they make it work is with a global light and a directional light now technically in 2D you don't have a directional light so the way they actually fake a directional light is simply by using a regular Spotlight with an angle of 360 and then they simply rotate where exactly that light comes from so over here you can see that inside the main camera there's a lights Rotator this is an empty game object where inside of it they've got all kinds of day and night lights and then the day night cycle script that one basically just rotates this game object you can see over there the Z rotation you can see it rotates and if we select both these we can see day light and yep you can see that it rotates up and down and the NightLight pretty much does the opposite so this is a really clever way of how to handle on directional lights even though the 2D system doesn't technically have directional lights this definitely a really clever approach personally I never thought of it but obviously it makes a lot of sense a spotlight that you move around pretty much acts like a directional light so if you'd like to implement a day night cycle into your own 2D games I highly recommend you download this sampl and look at this script look at how all this set up I think this looks really nice the way they have multiple lights with multiple mask and over here using the gradients I think this looks really good and the other important thing related to lighting is obviously Shadows now there are multiple ways to add Shadows one way which is somewhat counterintuitive is to actually use a light that is how they handle the shadows for this little building again in 2D this building doesn't actually have a shape so in order to create this shape they made a free form light and then they simply tinted that light and black another technique you can use are 2D realtime Shadows so there over there the Shadow on this little Barrel as I move it around yep it has a perfect realtime Shadow adding this is super simple you just go into any Sprite and you add the shadow Caster comp component then you can addit the shape in order to modify the shape that generates the Shadow and they also have a really excellent tip for how to apply Shadows to your character how you probably do not want to add Shadows to the entire character itself doing that would make it look quite weird so instead just add it to De feat and like this it looks really nice you basically just go inside the field bones and you add the same Shadow Caster component although these Shadows these are actually pretty harsh and infinite as you can see in the article they essentially are better suited for night scenes and not really for daytime scenes however during daytime you still want some shadows in order to make your game look good so for that you can essentially use fake Shadows here in the daytime we can see how they made those fake Shadows so you can see over here this one this Shadow for this tree you can see how it rotates around and this Shadow is actually technically just a light it is enlightened in Black this one is a sprite light so it has this little Shadow Sprite and then the day night cycle script that one simply rotates this Parent Game object again these are not perfect to the lights but this method looks much better during the daytime and coming back to the shadow for the house over here as we saw in the article they basically use a free form light but if I modify the time you can see how the shape actually changes in a really nice really smooth way this yet another thing that you can take directly from this really nice sample basically they have a really great script here inside the light 2D warehouse and it's a script that they call light interpolator so basically inside they've got all kinds of free form lights these have all kinds of points and then they basically use the script in order to generate a light Shadow a free form light shadow that way interpolates between all these various frame points and that is how you get this really nice interpolated free form Shadow and one more nice tip is using blob Shadows so for things like the character for that one during the daytime you probably don't want a hard Shadow so you really just want a simple Sprite right to feed the character it's a simple thing but it looks really great and that's pretty much what all 2D games use now when it comes to lighting one big concern is always with regards to Performance especially if you're making mobile games so this article has a bunch of tips to help you in that regard the main one that you can use is really just use a frame debugger this lets you basically see how each frame is being rendered that can really help you figure out bottle necks in your GPU rendering down here you can see all the various tips make sure your lights are batchable try to keep the render scale as low as possible minimize the number of Shadow casting lights on screen this is probably the best one that you can easily modify also minimize the number of blend styles again there is a significant cost in all the algorithms that make up the blend Styles or simply adjust the max number of Lights okay so all of this is a t info on the 2D lighting system then another tool that is used heavily in this sample is the 2D T map again there's another really detailed article with tons of info on making art and gameplay using to the T Maps I covered a simple tutorial on how to use the T map some time ago basically you can create a Sprite asset you can create tiles by slicing some Sprites then you can easily place them in a Unity grid using a simple brush then on top of that you can add collisions you can make more tile maps and build more complex things which this article covers so here in the sample we we can see all the ti Maps they're all in here under this grid game object so we've got underwater tiles water ground base and so on so tons of tiles for all kinds of different types each one of these uses a different TI map if we select one of the ti maps and over here we click on open tile pallet over here we can see all the various tiles that make up this stle map so as you can see we've got a water tile a bunch of grass we've got all kinds of walls ceilings floors and so on this is all nicely separated into various layers and the way you paint is you simply select the tile and then you simply draw on top of it so if you're making 2D games the to map is really one of the most useful things you can use and just like with lighting you can also use secondary textures so you can use normal maps in order to modify how the light impacts the various tiles one of the most useful things is the rule tile so this is how you can basically Define some rules and then easily paint and every time you paint it follows along with these rules in order to figure out which Sprite to select in this sample you can find all of the various R tiles over here so inside happy harvest inside art tiles and then you've got the various ones and most of these got a kind of rule tile and over here yep we can see all the rules so for example the first rule if you place a tile and there is no tile above it no to to the left but there is a dirt to to the right under to the right and under if so then it's going to select this corner tole then if it follows this rule it selects this one this one this one and so on so yep Ru Tils are super important super useful if you're using the 2D to map definitely make sure you'll learn how this to works it's actually pretty simple and super useful definitely Mak selecting all of these round Tils much much easier you just Define the rules and then easily paint and everything looks correct here in the article there's a really nice explainer on how all the various sound maps are structured how they separated them and why they did it so why did they make in underwater tiles water and so on and actually in here in this article I learned about one thing that I did not know which is the game object brush I did not know that this existed this one apparently lets you use a brush like you use with any of the time ups but instead of painting tiles you can actually paint regular game objects this is something that I've seen being done by a bunch of tools on the osur but I I didn't know that Unity itself could do it so I just learned something new that's right one area where it's really useful to spawn separate objects instead of just one towel is for example for dealing with sorting orders if you put one town map then the entire town map won't have the same sorting order but of course if you have a tree over here and you've got another one down here you want those to be on different sorting orders in order to show up one above the other one so for objects that are not directly painted on the floor for those you probably want to use a separate object and using that game object brush is super useful to place them easily however TI maps are not just for visuals that's the main thing but it can be used for more than that like it says here in this article you can use a t map API in order to handle all kinds of gameplay in this game which is a farming game for example the ground to map this one contains some logic based on the S Tils to indicate where the player can dig and pl seeds you can inspect the terrain manager in order to see all the functions that it uses to interact with the to map API in order to read the various things and update the tiles that one is placed over here directly on the grid game object here we have the terrain manager and in this script we can see how it has references to the various T maps and then it's using various functions like the ti map. set tile in order to modify a certain tile on a certain position so if you want to learn how to handle gameplay directly inside the T map make sure you check out this script although personally I must say for me when I want to handle some logic inside of a grid personally I really just use my own grid system which is really made to use generic so it feels much more adaptable but if you just want to use the builtin into tell map then definitely look into this one to figure out what you can do with it then you have another set of tools that was used heavily in this sample are the 2D rigging and ik tools again there's another excellent article super detailed exactly on this topic this one is really insanely detailed if you've never played around with the 2D bone tools and Sprite swapping like for me I haven't then I highly recommend reading through this entire article it all starts off obviously by drawing the character properly by drawing the body part separately now for this you can draw the body in really any image program but if you use Photoshop then the PSC import can be extremely useful here I have the character PSC file select the unity and if I open this Sprite editor look that all the body parts all neatly separated however here is a file open up in Photoshop note how all of the body parts is are on placed correctly except for the hair that one for some reason is appearing in front of the face but everything else on the arms and legs and so on all those are placed correctly and note how they are all on separate layers all on separate folders the old way of drawing some spreadsheets would be to draw them manually separated so you draw one arm here one leg here one foot here one hand here and so on drawing it like that is really tricky to make sure that everything fits correctly so this is obviously a much better method and if you use the PS import you can do it EXA like this place it on separate layers and then Unity automatically separates all of those layers into separate parts makes them fit correctly as tightly as possible and automatically creates individual Sprites out of each body part so just as soon alone is insanely useful personally I remember trying to manually draw Sprite sheets quite a long time ago and it was all such a huge pain to draw them manually so being able to automate this process this is super awesome if you make 2D games definitely make sure you use the PSD importer so with this here we have all the separate body parts now for this game it's a 2d top down game so they opted to go for just four directions as you can see it's up to you to decide how many directions you want to have obviously the more you have the more responsive your game looks but obviously a lot more work to create all of these individual directions as opposed to just these over here for the Sprites we can see we've got the head front the head back and the head to the side and for the other side they simply invert this one then note how they also Drew various hand poses these are used in the animation which I'm going to cover in a bit alongside this section is something that we've already seen which are the secondary textures so we can see and Yep this one also has a normal map and mass texture this is how we can get those really nice lighting info and then here in the article here is the really awesome part rigging in the Sprite editor this is how you can very easily create bones directly inside of unity so over here again selecting the PSD character here is the entire character and on the top left corner we can go down into the skinning editor and up here we can see the skin for our character for our mesh along with all the bones and what objects they affect this bone tool is really super powerful using this makes building 2D animations so much easier than using Sprite sheet animations adding bones is really easy which means you can set up all kinds of individual bones you can really go super detail and make sure to animate just the ears the eyes and so on they also added bones just to the eyelids the eyebrows and so on so using this tool building something like face animations that is so much easier then after assigning bones there's a button to automatically add some geometry you can play around with this but obviously don't go way too crazy otherwise you end up with a million polygons and once the geometry is set up then you can play around over here with the weights and you basically just select the bones and then draw directly on the Sprite so for example double click over here on this bone so on this shoulder bone right now it's obviously only affecting the right shoulder but if I want I can paint the left shoulder and there you go now it affects both them so it just takes a bit of work in order to go individually by each bone in order to paint exactly where you want it and everything behaves perfectly when you have everything set up correctly you should be able to play around with most of the bones in order to get any animation any pose that you want this character is already really nicely animated so you can see how very easily I can build all kinds of interesting animations interesting poses and everything works great then of course one huge benefit of bone based animation instead of handdrawn spreadsheets is you can easily apply the same animation to multiple different characters in this game all the characters share the same animation despite having very different visuals you can do that using Sprite swap which lets you use the same bones or animation but swap these Sprites on top of it all the thata is stored in these various Sprite Library assets so this one the character itself has the Sprite Library using this asset and we can inspect it here as you can see this one has both caries and labels this one is the dummy base Herer so they set up this base Sprite Library acid with the nose from the front the side the ears and so on they set up all of these and then they basically just extend them in order to make these various other ones so for example here for the head for the Farmer they simply use a different reference to a different Sprite with all of that here is the character and in order to swap out the character really just swap out over here the Sprite liy asset so I swapped that out for the farming Sprite library but for some reason this one doesn't update immediately but if I play the game yep there's my completely different character and if I want to change it just swap out the Sprite Library asset and yep there's another character and there's another character again all of them sharing the same animations but having some really nice different visuals and of course for the animations these are set up in the regular animator you create animations by modifying the bone positions so pretty simple just like you would normally do and the animator itself also has an interesting setup note how they use different layers for both The Head and the base animations also note how this little a here this means that this this means that this layer over here the blending is set to additive meaning it adds on top of all the other animations then the base layer has the various movement and action so w watering eating and so on and finally for the last layer flip this one just has two animations face right and face left and if we go into the character and we inspect those animations we can see that really all they are doing all they are recording is over there the scale. X so on face right that one is on one and on face left that one is on minus one so they really just modify the scale. X in order to look left or right and then the base layer works on up the flip layer and the head layer on top of that now for building animations like we saw you can just use the regular animat window just manually move all the limbs all the bones and everything will work correctly or you can also use ik which is inverse kinematics basically this how you can move just a hand and then it will automatically move the lower and the upper arm in order to place them in a position where it makes sense for the hand to reach that point using is always really awesome I already covered the tool that is used for making it in 3D and over here as you can see that tool also exists in 2D this one really helps speed up the animation process significantly the way this works is over here the prefab character base this one has an ik manager and as you can see this one has all kinds of limb solvers so let's see this one the arm right limb solver and if you ever Ed any ik tool then this should be pretty familiar you really just got the effector which is what is going to be affected by this and then you've got the target so the target this really just an invisible position and now if I move just as Target look what happens to the rest of the arm as you can see everything moves correctly in order to make sure that the hand always places exactly where I'm targeting so you can see how it saves a ton of time to be able to animate just this one target instead of having to animate every individual bone to make sure it makes sense and of course you can also make this Dynamic meaning instead of controlling the effector with a static animation you could simply control it through code to make it grab a dynamic object or something like that exactly like I covered in 3D in a previous video you can do the exact same thing with this 2D tool but remember that while using bones and ik is indeed super useful sometimes a simple animation is more than good enough for example if we look at the lamp we can see how the lamp over here has a simple animation just swinging left and right so for these kind of use case you really just need an animation so not even an animator just the old school animation component it is super simple but of course works great for the super simple use case then yet another animation you have are just simply flip book animations so for things like splashing water or these kinds of effects these can be super simple flipbook animations that are simply played by a simple Shader and speaking of shaders that is obviously something that always gives some excellent polish and for that there is yet another super detailed article that is coming soon all about 2D special effects with the VFX R and shade graph which again some of you might not even know that VFX gra already Works in 2D when it came out it was 3D only but in a previous version they've already added 2D support and if this sample in all these examples is enough if you want to learn even more about in2d there's even a a bunch more links you can check out the previous excellent 2D samples one of them is the Lo script this one has tons of interesting particles lots of interesting stuff and then you've got the dragon precious demo this one has tons of bone animations Sprite shapes and lots of stuff I also made a video doing an overview on this one and for more ebooks there's one all about 2D game art and animation there's one an introduction to urp for advanced Unity creators I also made a nice video overview on this one if you got a book all about hrp just in case you want to push Unity to its visual limits and you got another ebook this this one is all about Advanced visual effects in unity so if you want to dive deeper into the VFX graph definitely go ahead and read this one all right so that is the latest official Unity 2D sample showcasing all of these awesome 2D tools to help you make awesome 2D games if you do want to make 2D games then I highly encourage you to download this free sample and check out all of these ebooks personally I've been more into 3D recently so for me it was great to read all this and get a refresher on all the 2D tools that un has it's really amazing how much un 2D has involved over the past few years when I started making games with un back in 2012 back then I was making 2D games but I had to use all kinds of weird 3D tools and make them look like 2D so it's really amazing that there are so many dedicated 2D tools nowadays nowadays thanks to all these aesome 2D tools you can make excellent games like the ones I mentioned in the intro so check the link description to download the s for yourself check out all these articles and read through all them thank you for watching and I'll see you next time
