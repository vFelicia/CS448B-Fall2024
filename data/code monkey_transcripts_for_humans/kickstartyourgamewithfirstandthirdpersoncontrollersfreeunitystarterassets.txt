With timestamps:

00:00 - hello and welcome i'm your code monkey
00:02 - and here let's check out two awesome
00:04 - assets made officially by unity in order
00:06 - to give you a great starting point
00:08 - you have the first person and third
00:10 - person character controllers
00:11 - they are very feature rich and super
00:13 - simple to use if you don't already have
00:15 - some controllers you made yourself then
00:17 - these assets can help you get a
00:18 - prototype up and running very quickly
00:20 - they feature movement gravity camera
00:22 - animations and even some pre-built touch
00:24 - controls
00:25 - they are completely free so after this
00:27 - you can go ahead and try them out
00:28 - yourself
00:29 - so let's inspect to see exactly what
00:31 - features they have and then we're going
00:32 - to do a very quick guide on how to add
00:34 - them to a brand new game
00:36 - now before that if you prefer a more
00:39 - guided path with step-by-step
00:40 - lectures then check out my complete
00:42 - courses learn how to make a bundler
00:44 - defender game using c sharp just like i
00:46 - make my own steam games
00:48 - or learn how to make games internally
00:49 - using visual scripting
00:51 - or learn all about unity with the
00:52 - ultimate overview course which contains
00:54 - over 13 lectures each covering a
00:56 - different tool or feature of the engine
00:58 - to help you make
00:59 - better games faster i'm always available
01:01 - in the courses q a section answering
01:02 - your questions every single day so check
01:04 - out all the courses with the link in the
01:06 - description
01:06 - okay so let's look at these two assets
01:09 - the first person
01:10 - and third person controllers like i said
01:12 - you can grab them for free from the
01:13 - unity assessor
01:15 - just search for it or use the links in
01:16 - the description just add them to your
01:18 - assets and open them up in ent
01:20 - now first of all these are made to work
01:22 - with unity 20.3 which is the latest lts
01:25 - version it's the version that i'm using
01:26 - here
01:27 - so you've got both assets the first
01:28 - person and the third person you can
01:30 - import them both into the same project
01:32 - they share quite a lot of files
01:38 - now as soon as you import them you might
01:39 - see a pop-up talking about the input
01:41 - system
01:42 - these packages are made to work with the
01:43 - new input system so you get this popup
01:46 - which has
01:46 - if you want to disable the legacy input
01:48 - and restart this project with only the
01:50 - new input
01:51 - so if you want you can just go ahead and
01:52 - click on yes in here but personally i
01:54 - still like to use the legacy input
01:56 - system especially for these demo videos
01:58 - since it's so easy to use
01:59 - and thankfully you can use them both at
02:01 - once so for me i'm just going to click
02:03 - on no
02:03 - and then go up here into edit to go into
02:05 - project settings
02:07 - and on the player tab just scroll down
02:09 - under other settings
02:10 - and down here you see a film for the
02:12 - active input handling
02:14 - and you can select the old input manager
02:16 - the new package or select them both
02:18 - so do that and it will restart the
02:19 - editor okay so with that
02:21 - everything is nice and important so i've
02:23 - got my star assets and over here i've
02:25 - got both packages the first person and
02:27 - the third person controller
02:28 - now these packages actually have some
02:30 - dependencies they use the new input
02:32 - system like we saw and also syn machine
02:34 - those should be installed automatically
02:35 - but if not you can go up here into tools
02:38 - start assets and reinstall dependencies
02:40 - so the answers themselves they've got a
02:42 - nice readme file
02:43 - so you've got links to the asset
02:45 - packages got some notes on dependencies
02:48 - and there's also a link if you want to
02:49 - give feedback on these packages
02:51 - and then there's also a pdf with
02:52 - documentation so here you've got a bunch
02:55 - more detailed info
02:56 - okay now to see them in action let's
02:58 - simply open up the demo scene
02:59 - so let's begin with the third person
03:01 - controller go inside the scenes and open
03:02 - up the playground so here it is and
03:04 - right away we see that everything is on
03:06 - pink
03:06 - now these packages come with shader for
03:08 - the built-in render pipeline
03:10 - but as usual they can be automatically
03:11 - converted to work with any pipeline
03:13 - so here i'm using urp that's why it's on
03:15 - pink if you're using the built-in then
03:17 - you don't have to do anything
03:19 - and if you're using urp or grp just go
03:21 - into edit
03:22 - go down here into the render pipeline
03:24 - universal and upgrade project materials
03:26 - to urp materials
03:27 - so just that and yep now everything is
03:29 - correctly using urp shaders
03:31 - okay and with this we can test out our
03:32 - scene to see it in action
03:34 - okay so right away here we have a really
03:36 - nice character in a third person view
03:38 - so by moving the mouse i can actually
03:39 - move the camera around the character
03:42 - and by pressing the usual movement keys
03:44 - was d
03:45 - i can simply move the character this
03:46 - demo comes with a bunch of animations so
03:48 - you've got the normal idle animation
03:50 - you've got a wonk animation by holding
03:52 - down shift i can sprint
03:54 - and by pressing space i can jump so all
03:57 - these animations are really nice
03:58 - all included in the project this
04:00 - character controller supports going up
04:02 - some ramps there you go
04:03 - as well as going up some stairs so as
04:05 - you can see everything works exactly as
04:06 - you would expect in a third person
04:08 - controller
04:08 - and now here i am on the other demo for
04:10 - the first person and once again
04:12 - everything works is all the same so i
04:13 - can walk i can sprint i can jump i can
04:15 - look around and yep everything works
04:17 - correctly so go up the ramp go up the
04:19 - stairs
04:20 - yep all of it perfect so as you can see
04:22 - these two assets make for a really
04:23 - awesome starting point
04:24 - and since this is made to be using the
04:26 - new input system it also automatically
04:28 - supports pretty much any input
04:30 - so i can move around with the keyboard
04:32 - all the great and look around the mouse
04:34 - and over here i've got an xbox gamepad
04:36 - so just by moving the joystick there you
04:38 - go
04:38 - everything works so i can sprint i can
04:40 - jump and yep
04:42 - and i can automatically change between
04:43 - keyboard mousepad everything perfect
04:45 - and on top of that the assets also
04:47 - include some pre-made touch controls
04:49 - you just set up the prefabs and
04:50 - everything works okay now that we've
04:52 - seen the final product
04:53 - let's see how the scene is set up so
04:55 - over here on the hierarchy the first
04:56 - thing that we have is the main camera
04:58 - so it's a pretty standard camera and
05:01 - it's got a send machine brain
05:02 - so that's pretty much it everything else
05:04 - is normal then you've got the player
05:06 - follow camera
05:07 - this is the virtual camera and on the
05:10 - type here on the body it's set up to
05:11 - third person follow
05:13 - and over here on the follow target it's
05:15 - set up on the player camera root which
05:16 - is an object inside the player
05:18 - so if you select it you can see yep it's
05:20 - that object it's an invisible object
05:21 - that is right around shoulder height so
05:23 - on the virtual camera of course you can
05:25 - play around all of these settings
05:26 - for example if you want to modify how
05:28 - far or close the camera is to the
05:30 - shoulder
05:30 - you can just here modify the camera
05:32 - distance make it closer or further away
05:34 - if you want to make it a bit more offset
05:36 - you can play around over here with the
05:37 - shoulder offset put it a bit more to the
05:39 - side
05:39 - and then you can play around with the
05:41 - camera side in order to shift from the
05:42 - left or right shoulder then for example
05:45 - if you were to build upon this to make a
05:46 - third person shooter
05:48 - you would have this as your normal
05:49 - camera setup and then you would make a
05:51 - separate
05:52 - virtual camera for the zoom in state so
05:54 - on that second virtual camera you would
05:56 - lower the fov in order to zoom in
05:58 - you'd perhaps go a bit more to the side
06:00 - you would push the camera a little bit
06:02 - forward and so on
06:03 - so you would make one virtual camera for
06:04 - normal state another one for the aim
06:06 - state and just swap between them
06:08 - let me know in the comments if you'd
06:09 - like to see a full tutorial on how you
06:10 - could take this and build a third person
06:12 - shooter on top
06:13 - now this virtual camera over here also
06:15 - has the optical setting
06:16 - so that makes it so that the camera does
06:18 - not go through walls
06:20 - so it's got a collision filter so any
06:21 - object with physics on the default it
06:23 - will not collide with this
06:24 - and obviously it's going to ignore the
06:26 - player then down here on the noise it
06:28 - also has a bunch of simple noise
06:30 - so if you play the scene if you can see
06:33 - the camera slightly swaying back and
06:34 - forth
06:35 - just to add a little bit more life to
06:37 - the scene by the way if you find the
06:38 - video helpful please hit the like button
06:40 - it's a tiny thing but it really does
06:42 - help thanks and over here on the first
06:44 - person for the player follow camera
06:46 - everything is pretty much exactly the
06:47 - same over here they are also still using
06:50 - the third person follow camera type
06:52 - however one thing here which is on the
06:54 - shoulder offset the x is set to one
06:56 - now only this is a mistake since it
06:57 - should be on zero so it's right on top
06:59 - of the camera
07:00 - so if you're watching this in the future
07:01 - chances are there's been an update that
07:03 - fixed this
07:04 - so that's pretty much it and everything
07:05 - else is exactly the same now back on the
07:07 - third person scene
07:08 - the next object we can inspect is the
07:10 - player itself so the first thing it's
07:12 - got is a simple animator
07:14 - the first person has no animation so no
07:16 - no matter what this one does
07:17 - and on the included animations you can
07:19 - see a whole bunch of animations
07:20 - so you've got idle wonk run you've got
07:23 - jumping in the air jumping and landing
07:25 - so it's a pretty simple state machine
07:27 - over here with a handful of parameters
07:29 - and some
07:30 - entries and some transitions so just
07:32 - with this you've got the basics and you
07:33 - can easily build upon this to add tons
07:35 - more states
07:36 - then on the player it's using a standard
07:37 - character controller everything is
07:39 - pretty normal with a height of 1.8
07:41 - meters
07:41 - then you've got the third person
07:43 - controller script now you can mouse over
07:45 - each of these to see
07:46 - exactly what they do you've got the
07:48 - basic things like you can modify the
07:49 - movespeed the sprint speed and so on
07:51 - you've got some jump logic then some
07:53 - ground logic and over here the send
07:55 - machine part
07:56 - now here there is actually one pretty
07:58 - important thing that is missing which is
07:59 - the
08:00 - rotation speed for me based on my mouse
08:02 - settings the sensitivity is
08:04 - way too high so just by moving the mouse
08:06 - a bit i can see
08:07 - it rotates way too much so this
08:09 - sensitivity field isn't exposed anywhere
08:11 - but you can inspect and see all the
08:13 - source code
08:14 - so here it is the third person
08:15 - controller and you can see all this
08:17 - it's all written in a nice clean way so
08:19 - you can take some time to study this
08:21 - code
08:21 - now for example in order to add that
08:23 - sensitivity field we can just go and
08:25 - find
08:26 - the function that handles the rotation
08:27 - of the camera so here it is the camera
08:29 - rotation function
08:31 - and here you can see that all they're
08:32 - doing is taking the input log
08:34 - x and look y and just multiplying by
08:36 - delta time so you can modify this and
08:38 - add a simple flow to multiply
08:40 - so for example going up here making a
08:42 - public float or a serialized field i'm
08:45 - just keeping with the same standard use
08:46 - here
08:47 - so let's go with look sensitivity
08:51 - and just default it to 1f and then down
08:54 - here on the camera rotation
08:55 - we multiply the unlock by time dot all
08:58 - the time and then by our analog
08:59 - sensitivity
09:01 - and yeah that's pretty much it so now
09:02 - here we do have a field for look
09:04 - sensitivity and since mine was way too
09:06 - intense we need to put maybe 0.5
09:08 - and yep now as i move the mouse around
09:10 - now it looks a bit more natural
09:12 - so just like this you can easily
09:13 - customize the sensitivity which will
09:15 - work both with mouse or gamepad or touch
09:17 - input
09:18 - so the other components you've got a
09:19 - basic region body push
09:21 - this is simply to apply a force to push
09:23 - some other objects and then you've got
09:25 - the script that handles the inputs
09:27 - now this one is using the new input
09:29 - system and if you want to see all the
09:31 - inputs you can open up this input action
09:33 - asset
09:34 - so you click on it and shows up over
09:35 - here on the project files so just double
09:37 - click on it and it shows up this window
09:39 - and here you can see all of the actions
09:41 - that are defined and they are defined
09:43 - both for keyboard as well as the mouse
09:45 - so this new input system is actually
09:47 - something that i haven't yet covered on
09:48 - a dedicated video but i might do it soon
09:50 - it's insanely powerful so you just
09:52 - define the actions and it works with
09:54 - pretty much anything
09:56 - and then again back on the player script
09:58 - over here you can see you've got a
09:59 - toggle for auto switch
10:00 - so that's how you can very easily
10:02 - transition from using the keyboard to a
10:03 - gamepad without having to do anything
10:05 - so it's a really awesome system okay
10:07 - that's the third person controller
10:09 - and on the first person it's all pretty
10:11 - much exactly the same so you've got the
10:12 - usual parameters
10:13 - and on this one you actually have the
10:15 - rotation speed exposed here
10:17 - so this one kind of works like
10:18 - sensitivity and everything else is
10:20 - pretty standard so
10:21 - same inputs and so on okay so now that
10:23 - we've seen how the demo works let's see
10:25 - how you can add this to an existing
10:27 - environment
10:28 - now over here i've got a really nice map
10:30 - this is from the
10:31 - cindy studios battleground pack there's
10:33 - a link in the description if you want to
10:34 - get it
10:34 - now for starters let's first import the
10:36 - first person controller since it's so
10:38 - simple
10:39 - let's just go into the certain assets
10:40 - inside the first person controller
10:42 - inside the prefabs folder over here
10:44 - we've got all the prefabs now the first
10:46 - thing that we need is the main camera
10:48 - so just drop the prefab here yep there
10:50 - it is and now if you have a main camera
10:52 - on your scene just delete it
10:54 - in my case i already deleted that so
10:56 - there's only one camera
10:57 - then next thing that we need is the
10:59 - player follow camera this is the virtual
11:01 - camera
11:02 - and then we need the player itself so
11:03 - just the player capsule and there it is
11:05 - now to set this up we just need to
11:06 - assign some things so first over here on
11:09 - the main camera by default this one
11:11 - isn't using post processing
11:12 - so if you have some effects just enable
11:14 - it there it is then on the player funnel
11:16 - camera the virtual camera
11:18 - over here it requires the follow to be
11:20 - assigned so this phone should be the
11:21 - object inside the player so just expand
11:23 - it grab the player camera root and put
11:25 - it there there it is
11:26 - everything else is already set and with
11:28 - just that if we hit on a play
11:30 - and yep here i am inside the map i can
11:32 - walk around i can see everything and yep
11:34 - everything works so as you can see it
11:36 - literally takes just 30 seconds to add
11:38 - it to a new scene
11:39 - now let's see how to add the third
11:40 - person controller it's pretty much the
11:42 - same thing so let's go inside of that
11:44 - folder let's go inside the third person
11:45 - folder
11:46 - and let's see the prefabs yep so first
11:49 - thing drag the camera
11:51 - then the player follow camera then if
11:53 - you don't want any animations you can
11:55 - just import the player capsule
11:57 - but i do want some animation so let's
11:59 - import the player armature
12:01 - okay there it is there's the character
12:02 - now the same thing let's just go into
12:04 - the font camera and just assign the
12:06 - player camera root
12:07 - there it is and once again just with
12:08 - this just hit play
12:10 - and yeah there you go it's already
12:11 - working so here i am in the map i can
12:13 - walk around i can run i can jump i can
12:15 - do anything
12:16 - yep it's got collisions everything works
12:18 - perfectly all right so now the next
12:19 - thing is i want a different character
12:22 - so on this same battleground pack
12:23 - there's a whole bunch of characters so
12:25 - let me pick just a random one
12:26 - so i've got a random character right
12:28 - there now i can drag this onto the scene
12:31 - and there's the character okay and
12:33 - inside it
12:34 - i can see this one is using this mesh so
12:36 - if i click on the mesh and look at it
12:38 - and let's see the fbx file here it is
12:40 - the characters
12:41 - and over here very importantly you can
12:43 - see on the rig that this one has an
12:44 - animation type of humanoid
12:46 - so that means that i can very easily
12:47 - swap out this character and use the
12:49 - exact same animations that we were using
12:50 - previously
12:51 - you can do this with any character that
12:53 - is set to a humanoid brick now in order
12:55 - to modify the character
12:56 - first of all we should not do any
12:57 - modifications to the original prefab
12:59 - so for that you can just right click go
13:01 - into prefab and unpack completely so
13:03 - that essentially breaks the prefab
13:05 - connection so now these are just normal
13:06 - game objects
13:07 - and over here inside the geometry let me
13:10 - just drag the character
13:11 - and get rid of the previous one and over
13:13 - here on this character prefab it comes
13:15 - with an animator but we don't need this
13:16 - since the animator is all the way up
13:18 - here
13:19 - okay then the skeleton which belongs to
13:21 - the other armature we can also get rid
13:23 - of this one
13:23 - and then on the player armature game
13:25 - object over here we can simply swap out
13:27 - the avatar for the one using this mesh
13:29 - so over here i've got the characters
13:32 - that's the mesh that we're using
13:33 - and down here it has the avatar so just
13:35 - drag this one and there you go
13:37 - all the warnings go away and everything
13:39 - works so if i just hit on play
13:41 - and there it is here is my custom
13:43 - character fully working
13:45 - so once again in just a few seconds i
13:47 - got a custom character fully working i
13:48 - can walk run jump and look around
13:51 - everything works i'm reusing the same
13:53 - animations included in the free package
13:54 - and this time with my nice new character
13:57 - alright so as you can see these two
13:58 - assets are really awesome they are the
14:00 - perfect starting point based on how easy
14:02 - this is to implement i could see this
14:04 - being a huge help in making some quick
14:06 - prototypes or some game jam games
14:08 - you really just have to drag and drop
14:10 - swap the assets and you have a fully
14:12 - working character in literally seconds
14:13 - really awesome stuff and once again it's
14:15 - all completely free so go ahead and
14:17 - download the packages and check them out
14:18 - for yourself
14:19 - again if you're looking for a more
14:21 - guided path with step-by-step lectures
14:23 - then check out my complete courses
14:25 - alright hope that's useful check out
14:26 - these videos to learn some more
14:28 - thanks to these awesome patreon
14:30 - supporters for making these videos
14:31 - possible
14:32 - thank you for watching and i'll see you
14:33 - next time

Cleaned transcript:

hello and welcome i'm your code monkey and here let's check out two awesome assets made officially by unity in order to give you a great starting point you have the first person and third person character controllers they are very feature rich and super simple to use if you don't already have some controllers you made yourself then these assets can help you get a prototype up and running very quickly they feature movement gravity camera animations and even some prebuilt touch controls they are completely free so after this you can go ahead and try them out yourself so let's inspect to see exactly what features they have and then we're going to do a very quick guide on how to add them to a brand new game now before that if you prefer a more guided path with stepbystep lectures then check out my complete courses learn how to make a bundler defender game using c sharp just like i make my own steam games or learn how to make games internally using visual scripting or learn all about unity with the ultimate overview course which contains over 13 lectures each covering a different tool or feature of the engine to help you make better games faster i'm always available in the courses q a section answering your questions every single day so check out all the courses with the link in the description okay so let's look at these two assets the first person and third person controllers like i said you can grab them for free from the unity assessor just search for it or use the links in the description just add them to your assets and open them up in ent now first of all these are made to work with unity 20.3 which is the latest lts version it's the version that i'm using here so you've got both assets the first person and the third person you can import them both into the same project they share quite a lot of files now as soon as you import them you might see a popup talking about the input system these packages are made to work with the new input system so you get this popup which has if you want to disable the legacy input and restart this project with only the new input so if you want you can just go ahead and click on yes in here but personally i still like to use the legacy input system especially for these demo videos since it's so easy to use and thankfully you can use them both at once so for me i'm just going to click on no and then go up here into edit to go into project settings and on the player tab just scroll down under other settings and down here you see a film for the active input handling and you can select the old input manager the new package or select them both so do that and it will restart the editor okay so with that everything is nice and important so i've got my star assets and over here i've got both packages the first person and the third person controller now these packages actually have some dependencies they use the new input system like we saw and also syn machine those should be installed automatically but if not you can go up here into tools start assets and reinstall dependencies so the answers themselves they've got a nice readme file so you've got links to the asset packages got some notes on dependencies and there's also a link if you want to give feedback on these packages and then there's also a pdf with documentation so here you've got a bunch more detailed info okay now to see them in action let's simply open up the demo scene so let's begin with the third person controller go inside the scenes and open up the playground so here it is and right away we see that everything is on pink now these packages come with shader for the builtin render pipeline but as usual they can be automatically converted to work with any pipeline so here i'm using urp that's why it's on pink if you're using the builtin then you don't have to do anything and if you're using urp or grp just go into edit go down here into the render pipeline universal and upgrade project materials to urp materials so just that and yep now everything is correctly using urp shaders okay and with this we can test out our scene to see it in action okay so right away here we have a really nice character in a third person view so by moving the mouse i can actually move the camera around the character and by pressing the usual movement keys was d i can simply move the character this demo comes with a bunch of animations so you've got the normal idle animation you've got a wonk animation by holding down shift i can sprint and by pressing space i can jump so all these animations are really nice all included in the project this character controller supports going up some ramps there you go as well as going up some stairs so as you can see everything works exactly as you would expect in a third person controller and now here i am on the other demo for the first person and once again everything works is all the same so i can walk i can sprint i can jump i can look around and yep everything works correctly so go up the ramp go up the stairs yep all of it perfect so as you can see these two assets make for a really awesome starting point and since this is made to be using the new input system it also automatically supports pretty much any input so i can move around with the keyboard all the great and look around the mouse and over here i've got an xbox gamepad so just by moving the joystick there you go everything works so i can sprint i can jump and yep and i can automatically change between keyboard mousepad everything perfect and on top of that the assets also include some premade touch controls you just set up the prefabs and everything works okay now that we've seen the final product let's see how the scene is set up so over here on the hierarchy the first thing that we have is the main camera so it's a pretty standard camera and it's got a send machine brain so that's pretty much it everything else is normal then you've got the player follow camera this is the virtual camera and on the type here on the body it's set up to third person follow and over here on the follow target it's set up on the player camera root which is an object inside the player so if you select it you can see yep it's that object it's an invisible object that is right around shoulder height so on the virtual camera of course you can play around all of these settings for example if you want to modify how far or close the camera is to the shoulder you can just here modify the camera distance make it closer or further away if you want to make it a bit more offset you can play around over here with the shoulder offset put it a bit more to the side and then you can play around with the camera side in order to shift from the left or right shoulder then for example if you were to build upon this to make a third person shooter you would have this as your normal camera setup and then you would make a separate virtual camera for the zoom in state so on that second virtual camera you would lower the fov in order to zoom in you'd perhaps go a bit more to the side you would push the camera a little bit forward and so on so you would make one virtual camera for normal state another one for the aim state and just swap between them let me know in the comments if you'd like to see a full tutorial on how you could take this and build a third person shooter on top now this virtual camera over here also has the optical setting so that makes it so that the camera does not go through walls so it's got a collision filter so any object with physics on the default it will not collide with this and obviously it's going to ignore the player then down here on the noise it also has a bunch of simple noise so if you play the scene if you can see the camera slightly swaying back and forth just to add a little bit more life to the scene by the way if you find the video helpful please hit the like button it's a tiny thing but it really does help thanks and over here on the first person for the player follow camera everything is pretty much exactly the same over here they are also still using the third person follow camera type however one thing here which is on the shoulder offset the x is set to one now only this is a mistake since it should be on zero so it's right on top of the camera so if you're watching this in the future chances are there's been an update that fixed this so that's pretty much it and everything else is exactly the same now back on the third person scene the next object we can inspect is the player itself so the first thing it's got is a simple animator the first person has no animation so no no matter what this one does and on the included animations you can see a whole bunch of animations so you've got idle wonk run you've got jumping in the air jumping and landing so it's a pretty simple state machine over here with a handful of parameters and some entries and some transitions so just with this you've got the basics and you can easily build upon this to add tons more states then on the player it's using a standard character controller everything is pretty normal with a height of 1.8 meters then you've got the third person controller script now you can mouse over each of these to see exactly what they do you've got the basic things like you can modify the movespeed the sprint speed and so on you've got some jump logic then some ground logic and over here the send machine part now here there is actually one pretty important thing that is missing which is the rotation speed for me based on my mouse settings the sensitivity is way too high so just by moving the mouse a bit i can see it rotates way too much so this sensitivity field isn't exposed anywhere but you can inspect and see all the source code so here it is the third person controller and you can see all this it's all written in a nice clean way so you can take some time to study this code now for example in order to add that sensitivity field we can just go and find the function that handles the rotation of the camera so here it is the camera rotation function and here you can see that all they're doing is taking the input log x and look y and just multiplying by delta time so you can modify this and add a simple flow to multiply so for example going up here making a public float or a serialized field i'm just keeping with the same standard use here so let's go with look sensitivity and just default it to 1f and then down here on the camera rotation we multiply the unlock by time dot all the time and then by our analog sensitivity and yeah that's pretty much it so now here we do have a field for look sensitivity and since mine was way too intense we need to put maybe 0.5 and yep now as i move the mouse around now it looks a bit more natural so just like this you can easily customize the sensitivity which will work both with mouse or gamepad or touch input so the other components you've got a basic region body push this is simply to apply a force to push some other objects and then you've got the script that handles the inputs now this one is using the new input system and if you want to see all the inputs you can open up this input action asset so you click on it and shows up over here on the project files so just double click on it and it shows up this window and here you can see all of the actions that are defined and they are defined both for keyboard as well as the mouse so this new input system is actually something that i haven't yet covered on a dedicated video but i might do it soon it's insanely powerful so you just define the actions and it works with pretty much anything and then again back on the player script over here you can see you've got a toggle for auto switch so that's how you can very easily transition from using the keyboard to a gamepad without having to do anything so it's a really awesome system okay that's the third person controller and on the first person it's all pretty much exactly the same so you've got the usual parameters and on this one you actually have the rotation speed exposed here so this one kind of works like sensitivity and everything else is pretty standard so same inputs and so on okay so now that we've seen how the demo works let's see how you can add this to an existing environment now over here i've got a really nice map this is from the cindy studios battleground pack there's a link in the description if you want to get it now for starters let's first import the first person controller since it's so simple let's just go into the certain assets inside the first person controller inside the prefabs folder over here we've got all the prefabs now the first thing that we need is the main camera so just drop the prefab here yep there it is and now if you have a main camera on your scene just delete it in my case i already deleted that so there's only one camera then next thing that we need is the player follow camera this is the virtual camera and then we need the player itself so just the player capsule and there it is now to set this up we just need to assign some things so first over here on the main camera by default this one isn't using post processing so if you have some effects just enable it there it is then on the player funnel camera the virtual camera over here it requires the follow to be assigned so this phone should be the object inside the player so just expand it grab the player camera root and put it there there it is everything else is already set and with just that if we hit on a play and yep here i am inside the map i can walk around i can see everything and yep everything works so as you can see it literally takes just 30 seconds to add it to a new scene now let's see how to add the third person controller it's pretty much the same thing so let's go inside of that folder let's go inside the third person folder and let's see the prefabs yep so first thing drag the camera then the player follow camera then if you don't want any animations you can just import the player capsule but i do want some animation so let's import the player armature okay there it is there's the character now the same thing let's just go into the font camera and just assign the player camera root there it is and once again just with this just hit play and yeah there you go it's already working so here i am in the map i can walk around i can run i can jump i can do anything yep it's got collisions everything works perfectly all right so now the next thing is i want a different character so on this same battleground pack there's a whole bunch of characters so let me pick just a random one so i've got a random character right there now i can drag this onto the scene and there's the character okay and inside it i can see this one is using this mesh so if i click on the mesh and look at it and let's see the fbx file here it is the characters and over here very importantly you can see on the rig that this one has an animation type of humanoid so that means that i can very easily swap out this character and use the exact same animations that we were using previously you can do this with any character that is set to a humanoid brick now in order to modify the character first of all we should not do any modifications to the original prefab so for that you can just right click go into prefab and unpack completely so that essentially breaks the prefab connection so now these are just normal game objects and over here inside the geometry let me just drag the character and get rid of the previous one and over here on this character prefab it comes with an animator but we don't need this since the animator is all the way up here okay then the skeleton which belongs to the other armature we can also get rid of this one and then on the player armature game object over here we can simply swap out the avatar for the one using this mesh so over here i've got the characters that's the mesh that we're using and down here it has the avatar so just drag this one and there you go all the warnings go away and everything works so if i just hit on play and there it is here is my custom character fully working so once again in just a few seconds i got a custom character fully working i can walk run jump and look around everything works i'm reusing the same animations included in the free package and this time with my nice new character alright so as you can see these two assets are really awesome they are the perfect starting point based on how easy this is to implement i could see this being a huge help in making some quick prototypes or some game jam games you really just have to drag and drop swap the assets and you have a fully working character in literally seconds really awesome stuff and once again it's all completely free so go ahead and download the packages and check them out for yourself again if you're looking for a more guided path with stepbystep lectures then check out my complete courses alright hope that's useful check out these videos to learn some more thanks to these awesome patreon supporters for making these videos possible thank you for watching and i'll see you next time
