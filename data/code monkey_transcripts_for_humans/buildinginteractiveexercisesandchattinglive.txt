With timestamps:

00:28 - for
00:58 - for
01:03 - oh it's not all
01:05 - [Music]
01:28 - right
01:53 - all right hey everyone how's it going
01:55 - hope you're having a great Friday thanks
01:57 - for being here all right all right all
02:03 - right can you change timing for next
02:06 - time uh sure I'd like to try that
02:08 - although I got to be honest I still have
02:10 - a big issues with my voice in that my
02:13 - voice doesn't really work in the morning
02:14 - for some reason when I wake up my voice
02:16 - is all messed up I got to I got to go to
02:18 - the gym walk my dogs do something in
02:20 - order for my voice to work so yeah for
02:22 - me life stream in the morning doesn't
02:25 - quite work so that's why I always do it
02:26 - around this time which is pretty much
02:27 - afternoon around here so right now it's
02:29 - 4:45 p.m. around here so yeah that's uh
02:33 - I'd like to try it out should be uh a
02:36 - fun interesting experiment trying out
02:37 - doing a a live stream as soon as I wake
02:39 - up maybe about 6: a.m. that that could
02:41 - be fun but yeah I'm not sure my my voice
02:43 - would work for
02:48 - that s I'm learning Game Dev this year
02:50 - and I couldn't have made progress I have
02:51 - made without your VI oh that's awesome
02:53 - thank you hey I'm I'm glad my videos
02:55 - have helped you yeah that's awesome
02:57 - congrats and keep on learning all right
03:00 - okay so basically I got a little bit of
03:03 - work to do so I figured I might as well
03:04 - do some work on the live stream so I've
03:06 - got my my companion project for my C
03:09 - course and I've got a bunch of exercises
03:12 - and there are a bunch that are still
03:13 - missing the hint text and the completed
03:15 - text so that's basically the text that
03:17 - shows up when you need a hint with some
03:19 - kind of exercise and then the text that
03:20 - shows up when you finally complete it so
03:23 - yep got a write a bunch of this so
03:24 - that's pretty much what I'm going to do
03:26 - while also trying to answer some of your
03:28 - questions in chat as soon as I I can so
03:31 - yep that's pretty much the goal here all
03:33 - right make a t an attachment system
03:36 - similar to escape from tarov I'm not
03:38 - sure how if there's anything specific to
03:41 - escape from tarov but I did make a
03:42 - weapon attachment system so if you want
03:44 - you can go look at this one you can even
03:47 - download the project files and just use
03:48 - this one as is so I assume that I mean
03:52 - basically lets you uh Define multiple
03:54 - parts and then connect multiple Parts
03:55 - together in specific points so yeah if
03:57 - you have the right asset pack with all
04:00 - the assets all perfectly prepared it's
04:02 - actually relatively simple to make a
04:04 - system like that and if you have enough
04:05 - enough parts for your weapons you can
04:07 - actually get quite a lot of variety so
04:08 - that's actually something really awesome
04:10 - if you have the asset to do it so
04:13 - yeah so yeah I don't know if it's form
04:15 - Taro as something specific but if not
04:18 - then yeah for the basics that should
04:19 - probably work think about making a video
04:22 - on procedural generating one thing that
04:23 - I've always want to research I keep
04:25 - forgetting the name what's it called the
04:27 - thing where it falls down it it
04:29 - collapses into oh God what do you call
04:32 - it wave function collapse that's it
04:34 - that's the the one method that I've that
04:37 - I've seen about and studied about it a
04:39 - little bit but I'd like to really
04:41 - research it probably because it seems
04:42 - it's something really simple but also
04:44 - really awesome like you define a bunch
04:46 - of basic rules and basically just
04:47 - collapses each node into one specific
04:49 - State and when you do that to the entire
04:51 - grid to the entire world it generates
04:53 - something really awesome so yeah that is
04:54 - definitely a topic that has been on my
04:56 - to-do list for a very long time so yeah
04:59 - hopefully one day
05:01 - hopefully uh make course on real engine
05:04 - uh not really I mean the reason why I
05:06 - can make courses teaching knowledge that
05:08 - I know is because it's knowledge that I
05:09 - do know because I've been using Unity
05:10 - for over 10 years I've made nine games
05:12 - with it so it's something that I'm very
05:14 - confident with my own knowledge that is
05:16 - why I feel confident enough to teach you
05:18 - whereas in real I've never used in real
05:20 - so yeah I'm definitely not the right
05:21 - person to teach about that uh okay so
05:24 - let me try doing this so let me first do
05:27 - the exercise and then write the hint
05:29 - right the complete the text and yep so
05:31 - on this one first of all I'm on lecture
05:34 - number five on the intermediate this is
05:35 - the lecture on properties oh do I have
05:38 - an exercise open yeah probably probably
05:41 - do it's probably not that one oh yeah he
05:43 - was still
05:45 - checking the other
05:48 - [Music]
05:50 - one
05:53 - okay want to ask do you think it's
05:55 - possible to create a game similar to
05:57 - Wipeout yes I mean I I have haven't
05:59 - played but isn't that the boat game if
06:02 - so then you could even just start from
06:03 - the the uh Unity boat attack demo so
06:08 - yeah I mean Unity made this this demo
06:11 - quite a long time ago which I which I
06:13 - believe is pretty close to that game so
06:16 - yep you can definitely just take this
06:17 - take this project as a base build upon
06:19 - it and build something like that so you
06:20 - got a bunch of boats a bunch of
06:22 - customization this project also has that
06:24 - really nice water Shader so yeah for
06:26 - making a game like that this would be a
06:28 - really great start Point anti-gravity
06:31 - Wipeout okay I'm not sure what that
06:32 - means but gravity gun that's fun I'd
06:35 - actually like to make that that that
06:36 - would be a a fun little uh prototype
06:39 - mechanic it would be pretty fun to do
06:44 - uh okay so let me try so on this
06:47 - exercise the goal is create a simple
06:48 - Auto Implement property uh string player
06:52 - name okay so here the goal is to Define
06:55 - that so that is pretty simple so let's
06:57 - go public uh
07:00 - uh actually don't remember if at this
07:02 - point oh yeah this is on the
07:03 - intermediate so I have thought about
07:04 - public and private okay so this meant to
07:06 - return string and call player name then
07:10 - has a get and a set yep that's it that's
07:14 - the property just like that love kitchen
07:17 - cars oh that's awesome so much for
07:20 - making all right yeah thanks so much for
07:22 - going through it I I hope you'll learn
07:24 - the lot from it that was a that was a
07:25 - fun one to work
07:28 - on soelling for properties found the
07:31 - property property is auto Implement so
07:33 - success all right so yeah this exercise
07:35 - is actually quite simple so let me go up
07:37 - there and now I just got to pretty much
07:40 - write the hint Tex okay so the hint
07:43 - remember the Syntax for how an auto
07:47 - implemented property is
07:51 - made how it has no specific code for the
07:56 - get and the set so basically this is the
08:00 - hint that shows up when you when you go
08:02 - through an exercise and you click on
08:05 - show hint basically it shows up that one
08:06 - cl show solution it shows that one click
08:09 - on apply solution and it applies that
08:11 - solution so yep that's pretty much it so
08:13 - basically just got to write a ton of
08:14 - this text for a ton of the
08:17 - things what is your favorite course
08:19 - you've made wow that's a really tricky
08:22 - question I have to say I mean right now
08:24 - my latest one C course I really love
08:25 - this one but I love this one
08:26 - specifically because all programming so
08:29 - it's really nice for that but at the
08:30 - same time I also really love the kitchen
08:32 - chaos course I love how how many people
08:35 - that course has helped I mean that is by
08:36 - far the most successful video on on my
08:38 - channel so I really love how how that
08:41 - course reached so many people and the
08:42 - comments have all been super positive
08:44 - then I also really love my turn-based
08:46 - strategy course that one was also really
08:47 - awesome I I love games like XCOM so
08:50 - being able to build that one from
08:51 - scratch step by step that was really
08:52 - awesome that was really cool so yeah
08:55 - sorry that's kind of that's kind of a a
08:57 - tough question to to answer because
09:00 - out of many of the courses that I that
09:01 - I've made for many different reasons
09:03 - between them so I can't really pick a
09:05 - favorite one uh okay so remember the
09:09 - Syntax for how automl property is made
09:11 - yep that's it no specific code completed
09:13 - so in this exercise you'll learn how to
09:17 - define how to define how to implement a
09:21 - auto or no implemented property how to
09:24 - define a is it a or N I never know that
09:27 - but yeah Define autom implemented
09:30 - property this a great way when you don't
09:33 - need any specific logic specific custom
09:37 - logic so basally Auto auto implemented
09:40 - properties really awesome really easy
09:42 - just to find the get in the set and yeah
09:44 - pretty much that that works although
09:46 - honestly for me personally I normally
09:48 - the only thing that I use this for is
09:50 - when I'm trying to make the Singleton
09:51 - pattern so I just Define some kind of
09:53 - instense with a public yet in a private
09:56 - set that's pretty much the only way the
09:57 - only time in which I use property this
09:59 - is actually really really interesting
10:01 - topic because I know a lot of people
10:02 - like to use them quite a lot but me
10:03 - personally I never like how the fact
10:05 - that properties uh look like uh look
10:10 - like variables but AC can like functions
10:11 - that's pretty much it how it
10:12 - simultaneously stores data although in
10:14 - reality it doesn't this one is just Auto
10:16 - implement but it kind of stores thata
10:17 - and at the same time runs some logic in
10:19 - order to get ins set that data so for me
10:21 - I find that needlessly confusing so that
10:23 - is why I personally I prefer having just
10:24 - basic field just basic variables and
10:26 - then having get and set functions I
10:28 - prefer that quite quite a bit more so
10:30 - yeah I use private set over protected
10:34 - because usually I only want to if I'm
10:36 - doing some kind of Singleton instance
10:39 - for that usually I want this class I
10:40 - don't want any extended class to be able
10:42 - to assign this I only want this one to
10:44 - set itself so yeah usually for that just
10:47 - go with private instead of
10:52 - protected huge fan of your channel nice
10:54 - I'm making a course about procedural
10:56 - animation in unity do you have any
10:58 - advice about how to do a good course
11:00 - because I'm new to this you mean how to
11:03 - make a course I mean my best advice is
11:04 - do it more than once that's that's
11:07 - pretty much the best basically for all
11:08 - the course that I've made what you see
11:11 - in the final video is basically after
11:12 - I've done the course about three times
11:14 - so the first time I first do a prototype
11:16 - just doing it by myself no camera no
11:18 - recording no nothing just do it by
11:19 - myself in order to figure out what is
11:21 - the rough structure of what I'm trying
11:23 - to build so that's a first time just a
11:24 - quick andary prototype getting all the
11:26 - elements then the second time I try to
11:28 - write start writing the actual course
11:30 - script and try to write okay step by
11:32 - step I'm going to do this this this and
11:33 - this and then after that after I've
11:35 - written the entire script then I go
11:36 - through the course the second time at
11:38 - that second time I'm trying to follow
11:39 - step by step and at the same time
11:41 - correcting all the all the steps in the
11:43 - script text and at the same time after I
11:45 - finish that one then the third time that
11:46 - is the actual time in which I finally
11:48 - press the record button start recording
11:50 - things and pretty much everything so
11:52 - yeah basically every course of mine that
11:55 - you see what you see in the final video
11:57 - is basically at least the third time
11:59 - that I'm I'm going through the entire
12:00 - thing so yeah that is my best advice
12:02 - don't don't assume that the first thing
12:03 - you record is going to be perfect
12:05 - because chances are it's really not
12:06 - going to be so yeah just get into the
12:08 - habit of doing it multiple times and oh
12:12 - crap I shouldn't do this
12:14 - um and yeah get in the habit of doing it
12:17 - multiple times and the more you do it
12:18 - the easier it becomes okay so let me
12:22 - just uh all right so yeah so this one is
12:24 - working it's done completed so the hint
12:27 - is done let's complete the exercise and
12:29 - move on to the next one okay now also
12:31 - got a nice cup of tea set of my usual
12:34 - water just trying to see if it helps my
12:36 - voice cuz for me my voice always gets
12:37 - messed up after about 1 hour so let's
12:40 - see if this one helps on this live
12:41 - stream so far I'm feeling pretty
12:45 - good I am banana
12:48 - okay all right nice comment uh okay so
12:51 - lecture on properties what's the next
12:54 - one where am I properties
12:56 - multi-dimensional Rays that's a fun
12:58 - thing
13:00 - okay so on this one the goal is Define
13:01 - and create a 2d array so Define a 2d
13:04 - array of inss with three of length on
13:06 - the First Dimension and four in the
13:07 - second dimension then set the value on
13:09 - index 02 to 56 return the array from the
13:12 - function okay let's do that one love
13:15 - from Portugal hey nice hey thanks for
13:17 - being
13:18 - here thank for free course yeah that's
13:20 - cool turn on making a farming game like
13:23 - Farmville actually I uh I don't remember
13:26 - did I make the uh cuz I I did do a quick
13:29 - farming game once yeah on this one when
13:32 - there was a really awesome Humble Bundle
13:34 - and I made some so if you want to see
13:36 - the rough idea for how I would build it
13:39 - that's it but yeah farming game is
13:42 - actually something that I've wanted to
13:43 - do for quite a while so where's the
13:46 - that's the RTS game the farming
13:49 - game yeah basically I would love to make
13:51 - a a basically complete tutorial SL mini
13:55 - course on how to make a game come like
13:57 - this it's actually relatively simple I
13:58 - mean if you know about interactions so
14:00 - for example if you watch my NPC interact
14:02 - video if you watch that with a little
14:04 - bit of setup you can build something
14:06 - pretty much similar to this it's
14:07 - actually not that difficult you just
14:09 - make a little grid set it up on the
14:11 - floor then check how to how to interact
14:14 - how to get the mouse position in order
14:15 - to find the point in the grid then you
14:17 - place some kind of prefab that prefab
14:19 - has some basic logic in order for the
14:21 - vegetable to grow and so on so yeah that
14:23 - is actually I don't know for some reason
14:26 - personally I like farming games I think
14:27 - they're they're pretty fun so yeah I'd
14:30 - love to do a more detailed detailed
14:33 - tutorial on making something like this
14:34 - that would be that would be interesting
14:38 - s daily routine video got the question
14:39 - what helps you stay
14:41 - motivated uh have you limited yourself
14:43 - to news and political events uh sort of
14:47 - I don't know I don't don't necessarily
14:50 - pay too much attention but I'm not sure
14:52 - though those two things are linked at
14:54 - least not in my not in my case I don't
14:56 - know I mean staying motivated it's
14:57 - always for me when when it comes to
14:59 - motivation the the phrase that always
15:01 - jumps to mind is self-discipline over
15:05 - motivation that's pretty much it because
15:06 - motivation I find it comes and go it's
15:07 - not really uh reliable to rely on that
15:10 - so basically for me I try not rely on
15:12 - that I try to have a list of things that
15:14 - I got to do and then just try to do them
15:16 - one by one going through like that so
15:17 - basically instead of relying on feeling
15:19 - like I because I mean to be honest doing
15:22 - live streams this is something that is
15:23 - still very unnatural to me so right now
15:25 - I am pretty much forcing myself to be
15:27 - here doing this live stream and the
15:28 - reason I'm forcing myself is because
15:30 - well I want to do it I want to be able
15:32 - to do it so yeah I I got to do it
15:35 - whether I feel like it or not I'm trying
15:36 - to force myself to try to gain this
15:38 - skill so that's kind of it so yeah in
15:41 - general I mean do something you like and
15:44 - that way it becomes a little bit easier
15:46 - to do it and then secondly just go do it
15:48 - just go do it I mean it sounds overly
15:51 - simplistic I wish I had some some better
15:53 - more practical actionable advice but
15:56 - yeah it's
15:57 - really uh that's the best I've got uh
16:01 - okay so let's do this one so Define and
16:02 - create an array with size 34 that I
16:05 - mentioned the top of the array probably
16:07 - not but say with number 56 Let's do an
16:10 - INT array this meant to be a
16:12 - two-dimensional array so so 2D no I
16:16 - can't do int array 2D equals a new int
16:21 - array and it's meant to have size three
16:23 - and four and then on index 0 and two it
16:27 - is meant to have the number 56
16:29 - then let's return the int array to
16:32 - D okay love from India hey nice thanks
16:34 - for being here uh okay so that should be
16:37 - the exercise so basally just defining an
16:39 - array of hint with three four so just a
16:42 - basic multi-dimensional array let's run
16:44 - test and see if it is
16:46 - working so it's calling it checking the
16:49 - First Dimension it is correct second one
16:50 - it is correct checking the value it is
16:52 - correct so everything is correct okay so
16:54 - that's the exercise now let's write the
16:56 - hint and the completed one so where is
16:58 - this this one that's on lecture 206 so
17:01 - that's this one right here Define a TOD
17:03 - array okay
17:05 - so uh remember the difference between
17:12 - multi-dimensional arrays and arrays of
17:17 - arrays uh create a 2d
17:21 - multi-dimensional array with the correct
17:25 - Dimension
17:26 - properties then access the index like in
17:30 - a normal array and set the new
17:34 - value so that should be a nice hint
17:37 - basically the usual problem that people
17:40 - have with multi-dimensional arrays is
17:41 - the fact that it's it's different
17:43 - between making a 2d array versus an
17:45 - array of arrays so that is always
17:47 - something that has to be uh done
17:49 - differently and then complete text here
17:51 - you learn how to define a
17:54 - multi-dimensional array this is a really
17:58 - useful data
17:59 - type when you have something like a grid
18:03 - you want to
18:05 - represent
18:07 - and remember how you can have as many
18:12 - dimensions as you
18:14 - want all right so over here show the
18:17 - hint yeah remember the difference
18:19 - between multidimensional and arrays of
18:20 - arrays and yep that should that should
18:22 - work okay nice so let's go complete the
18:25 - exercise that's
18:27 - cool
18:33 - can I make a tutorial about a Reload
18:34 - animation I'm I'm really not the best
18:37 - channel to talk about animation because
18:39 - I am not an animator animator and
18:41 - programmer those are two completely
18:42 - different things so yeah uh I'm pretty
18:45 - sure there are a bunch of nice channels
18:48 - on YouTube teaching about animation
18:49 - probably with blender if you find for
18:52 - blender animation tutorial I'm sure you
18:53 - will find a ton of stuff so yeah then
18:55 - when it comes to Unity the things are
18:58 - actually
18:59 - uh the logic is pretty simple you just
19:00 - Define some kind of trigger in order to
19:02 - play the animation to go from idle into
19:04 - reload just go into that one when the
19:06 - reload animation finishes go back into
19:07 - the animal animation so yeah in terms of
19:09 - logic implementing a Reload animation is
19:11 - pretty simple the complexity is really
19:13 - just actually making the animation so
19:15 - you need to be an animator for that and
19:17 - I am not the right person to to teach
19:20 - that okay so let's go on to the next one
19:23 - lecture on nested loops and it's all
19:25 - about write a basic nested Loop so write
19:27 - a basic nested Loop for the outer loop
19:29 - runs three times and the inner loop runs
19:31 - two times call the exercise validate
19:33 - function and passing the current I and J
19:35 - for every iteration of the inner loop
19:37 - okay so simple uh there's no mention of
19:40 - the type okay so like that should be
19:44 - simple is there any chance your current
19:46 - course coming to UD me any time nope not
19:48 - really because UD me has some very
19:50 - strict rules about courses with free
19:52 - versions so for example right now I
19:54 - publish the beginner uh version for free
19:57 - and that one is about 4 hours whereas UD
19:59 - me limits it to about an hour or 2 hours
20:01 - something like that so nope I I'm not
20:03 - allowed to do that yud me really does
20:05 - not like things that are both paid and
20:08 - free at the same time so nope sorry
20:10 - that's not a
20:13 - possibility okay so let's write the
20:15 - loops the outer loop should run three
20:17 - times and inner loop should run two
20:18 - times so 4 in I equals let's go what is
20:21 - it three three * I ++ and for in j j
20:26 - under is it two times
20:30 - j++ and then inside call the exercise
20:34 - validate
20:36 - function passing in
20:39 - inj okay I think that's pretty much it
20:42 - so let's
20:53 - see hope for a small challenge I'm
20:56 - already doing a challenge but sure
20:59 - uh sleeping time is it I guess it's the
21:03 - fun thing about different time zones
21:04 - it's for me right now it's afternoon but
21:06 - yeah on a different part of the world
21:08 - I'm sure it's sleeping
21:09 - time uh okay so yeah waiting for the
21:12 - function to call it got all the indexes
21:13 - iteration six 3 two yep so exercise
21:17 - completed successfully so basically this
21:19 - one is on teaching all about nested
21:21 - loops and how the loop time so this one
21:25 - is on uh 207 so let me find over here
21:28 - exercise 207 write the as Loop okay so
21:31 - for a hint you can use any Loop type but
21:35 - for this case a for Loop is probably the
21:44 - simplest uh be careful about how many
21:48 - times you run the outer and inner
21:51 - Loops yep that's pretty much it this one
21:53 - is pretty simple about how to do that so
21:56 - in this exercise you'll learn how to to
21:59 - make a nested Loop a loop within another
22:07 - loop and is this one before the uh yep
22:11 - okay
22:13 - so this is especially useful when
22:17 - working with two the arrays or arrays of
22:20 - arrays so you can cycle through every
22:23 - single
22:24 - element yep n and Loops nice try the new
22:28 - Unity 6000 it's kind of funny how how
22:31 - they Define that how they said the the
22:33 - version is version 6000 so that's going
22:35 - to be interesting I mean it's going to
22:37 - be fun in let's say four years when they
22:39 - get to Unity version 10 so it's going to
22:41 - be version 10,000 that's going to be
22:45 - funny but yeah I guess they have a bunch
22:48 - of a bunch of logic where it assumes
22:52 - that the version number has to have
22:54 - three or four digits so that's why they
22:56 - went to 6,000 instead of just six so
22:58 - that is going to be it's going to be
23:00 - it's going to be an interesting thing
23:01 - later on this year when they finally
23:03 - upgrade the version to Unity 6 and uh
23:07 - yeah that should be fun have a Goku mug
23:09 - yeah I do it's really nice where's my my
23:13 - camera hey it's pretty
23:17 - cool got this one got another one with
23:19 - Vegeta so yeah always always fun
23:26 - uh would you say it's worth it learn C
23:29 - outside of an engine to learn the skills
23:31 - further I made a 2d platform but feel I
23:33 - relied too much on the
23:34 - engine
23:36 - uh my question to you is what why do you
23:39 - feel you relied on the engine and why do
23:41 - you feel that is a negative thing that
23:42 - is that is kind of thing I mean usually
23:45 - when it comes to using an engine versus
23:46 - not using an engine that is really a
23:49 - question you have to ask yourself do you
23:50 - want to make a game or do you want to
23:51 - make a game engine cuz usually for most
23:53 - people you can't really do both at the
23:54 - same time you either focus on one or
23:56 - focus on the other make an engine or
23:57 - make game so so if you want to make
23:59 - games focus on making games use
24:01 - everything the engine has available to
24:02 - help you that's the entire Point behind
24:04 - an engine is to make game making super
24:06 - easy or uh as easy as it can be so yeah
24:10 - definitely use the tools at your
24:12 - disposal in order to make whatever game
24:14 - you're trying to make but of course if
24:16 - you're trying to do programming for fun
24:18 - as kind of a challenge then yeah maybe
24:20 - try making your own engine just for fun
24:23 - just learn about it but do know that in
24:24 - most cases unless you are super gifted
24:26 - chances are you probably can't make a
24:28 - game and nine at the same
24:30 - time uh let's go and complete the
24:34 - exercise let me just this
24:38 - is the window is a little bit odd why is
24:41 - it odd I don't
24:44 - know like
24:50 - this
24:52 - okay oh boy now I now I lost myself in
24:55 - the
24:57 - chat
24:59 - is there a chance of motion matching
25:00 - coming to Unity I'm not sure what is
25:03 - motion matching but just the other day I
25:05 - was doing my my uh top 10 new systems
25:08 - and tools uh list and I I saw one that
25:12 - was really
25:14 - interesting oh God yeah now now finding
25:17 - it would be quite tricky but uh oh God
25:22 - cuz yeah I saw one that looked really
25:24 - interesting one oh boy because I got a a
25:27 - ton of things so that makes it quite a
25:29 - bit tricky in order to find it so how
25:32 - was it is this one oh know it's called
25:34 - motion warping yeah this one seemed like
25:37 - a really fascinating very interesting
25:41 - asset so now cookies yes I accept
25:47 - cookies so yeah I don't know
25:50 - specifically what is motion matching
25:52 - what does it mean but yeah there's a
25:53 - bunch of there's a bunch of really
25:54 - impressive animation aets uh on the aaur
25:58 - that apparently are really good for
26:00 - combining multiple animations to do all
26:02 - kinds of things those are really
26:04 - interesting this is one thing that
26:05 - usually for me uh in terms of Animation
26:07 - I really just stick with the Bare Bones
26:10 - the absolute Basics so I've never
26:12 - touched really one of these complex
26:14 - animation controller type things but
26:16 - yeah that is definitely something that I
26:17 - I would love to do I mean I would love
26:19 - to one day do some kind of tutorial SL
26:22 - mini course on making a game kind of
26:23 - like Assassin's Creed so something very
26:25 - much focused on animations and lcking up
26:27 - different animations ling up animation
26:29 - for some kind of attack where you got an
26:30 - attacker and Defender ling up both of
26:32 - those so yeah that is one of the things
26:34 - that I very much would like to do
26:36 - someday because yeah because I do know
26:38 - there are tons of these assets so I I
26:40 - assume the reason why there are assets
26:42 - because it's usually really complicated
26:43 - to do but with these ass should be
26:44 - relatively simle to do so that should be
26:47 - pretty
26:48 - fun that's that allowed me to code and
26:50 - learn C at the same time oh really are
26:52 - you talking about one of those hot
26:54 - reload uh assets those are also really
26:58 - really nice really
26:59 - fun uh that is one of the one of the
27:02 - video topics that I would love to start
27:05 - doing again uh is pretty much doing more
27:08 - asset reviews because there are so many
27:09 - awesome so many useful assets on the
27:12 - store but so many of them are really
27:14 - tricky to to use so I really enjoy the
27:17 - the videos that I've made it's a visual
27:19 - script tool that converts to C oh that's
27:21 - interesting yeah converting from visual
27:23 - scri that was the goal behind bone 2.0
27:26 - before it eventually got killed or
27:30 - something so yeah that was a that was
27:33 - an that was interesting how they were
27:35 - going for bone 2.0 in order to do some
27:37 - interesting things but apparently pulled
27:39 - back I haven't touched visual visual
27:40 - scripting in a while I wonder how much
27:42 - it has progressed in the past few months
27:44 - it should be interesting okay so to go
27:47 - on this exercise Implement a simple
27:49 - recursive function oh I got to say I
27:50 - really dislike recursion I really just
27:53 - like it but I do know that some people
27:54 - especially people who are into math
27:56 - really like recursion so that why I
27:58 - covered it I I have a lecture on
28:01 - recursion over here in my course but
28:03 - yeah personally I really dis like it
28:04 - always it always makes me more confused
28:07 - needlessly confused so yeah personally
28:09 - for me yeah I'm definitely not into
28:11 - recursion but y it is it is something I
28:14 - mean if you if you like it if you like
28:16 - math and recursion can definitely be a
28:18 - nice thing okay so let's make a
28:21 - recursive function so do I return void I
28:25 - think
28:26 - so cursive
28:29 - function now in order to call it
28:31 - multiple times let's just store an i
28:33 - variable okay now see that's the thing
28:35 - if I'm doing a a for Loop where I call
28:38 - this three times that's it's pretty
28:40 - simple I just write it automatically I
28:42 - don't even have to think about it but in
28:43 - order to do this I really got to think
28:45 - so okay let me think so if I is zero if
28:51 - so then I'm just going to return and if
28:54 - not then I'm going to call recursive
28:56 - function with I minus minus is this it I
28:59 - think that is
29:04 - it okay I think that is it so it pass in
29:06 - with three and if it is above that it
29:09 - goes I minus minus it passes in again
29:11 - okay so I think it's like this but again
29:14 - recursion always confus me I never know
29:16 - 100% if it is
29:20 - correct about proced M generation will
29:22 - be fun yep sure one day oh boy yep there
29:26 - you go I just messed it up stack
29:28 - Overflow uh why did
29:43 - I
29:45 - uh isn't oh boy recursion always always
29:48 - drives me
29:55 - crazy yeah why is it a stack overflow
29:58 - okay now I'm a little bit confused as to
30:00 - why this one throws a stack Overflow
30:02 - because it should
30:05 - be isn't the ey going down am I
30:11 - crazy so let's see
30:14 - it talk about how to do proper research
30:16 - and develop When developing
30:18 - mechanics uh I don't know play play
30:21 - similar games that have similar
30:23 - mechanics and if you're trying to talk
30:25 - about oh boy I think I just broke Unity
30:29 - that's not nice uh if you're talking
30:32 - about research um yeah definitely play
30:35 - similar games that have similar oh
30:37 - Jesus everything got messed
30:40 - up okay stop playing stop getting all
30:42 - messed up oh Jesus where's my I can't ah
30:46 - I can't find it now sorry I got to hide
30:49 - the characters just so I can move it go
30:51 - up there why is it on
30:53 - three is it always calling the oh crap
30:56 - that's not it that one
31:00 - uh yeah but basically for research just
31:02 - play similar games that have similar
31:03 - mechanics can you please not spam in
31:06 - chat I'm trying
31:07 - to do something trying to answer things
31:10 - so please uh uh anyway so yeah in order
31:14 - to do uh research mechanics yeah play
31:18 - similar games that have similar
31:19 - mechanics and then try to
31:22 - do that I know that doesn't make sense
31:25 - uh yeah basically play similar games
31:27 - that have similar
31:35 - mechanics and uh yeah then for making it
31:39 - try making it piece by piece so start
31:41 - making something really simple so if you
31:42 - want to do some kind of hook shock
31:44 - mechanic first figure out how do I find
31:46 - where am I hitting the the mouse
31:48 - position so first find that then find
31:50 - out okay how do I push the player
31:51 - towards that how do I make my character
31:53 - control do that then figure out okay
31:55 - what happens when the player touches
31:56 - that so really research comes from
31:59 - seeing all kinds of games that do
32:01 - similar mechanics and figuring out
32:02 - analyzing how those games Implement
32:04 - those mechanics and then how to actually
32:06 - develop them that comes from learning
32:08 - how to do things step by step trying to
32:10 - do all kinds of
32:12 - things
32:20 - uh oh is it because
32:24 - of that actually makes no
32:28 - since okay recursion really drives me
32:31 - crazy my brain isn't working yeah I
32:33 - think I might as might as well fix it
32:35 - but that doesn't that makes no
32:39 - sense yeah I think yeah actually never
32:41 - mind yeah now I know why why it makes no
32:44 - sense ah God damn it this is why I hit
32:47 - recursion because that's it doing I
32:49 - minus minus breaks doing I minus one
32:51 - this works cuz the issue is that it was
32:53 - decrementing the variable itself but it
32:55 - was decrementing like before it calls
32:56 - the function with the parameters or
32:57 - something oh boy yeah or doing I minus
33:00 - minus that is always oh
33:03 - boy so this is a live example of why oh
33:06 - no and now my Unity just broke so that's
33:09 - not
33:10 - nice oh
33:12 - boy yeah turns out if you have a stack
33:16 - Overflow amount of amount of messages in
33:19 - the console turns out everything break
33:22 - so yeah that is really not
33:26 - nice all right
33:29 - and why is my my overlay is
33:31 - also a bit strange isn't
33:35 - it I don't know it feels like sometimes
33:38 - messages show up and sometimes they
33:43 - don't let me just put that one like
33:49 - that uh all right so back in here am I
33:52 - back on the same place I think
33:56 - so that's not the
33:58 - Loop oh boy cuz now I broke
34:02 - my I broke my exercise thing but am I on
34:05 - the correct exercise scene I don't even
34:07 - know yeah turns out if Unity breaks in
34:09 - the
34:10 - middle that kind of messes things up so
34:14 - okay let me just where was I I was on
34:17 - one of these on right rightness and loop
34:20 - no simple recursion yeah cu the did it
34:22 - save okay it did save that so at least
34:24 - that that's good but yeah
34:29 - okay let me just TR Ling see if now it
34:32 - does
34:34 - work got Z iteration expect oh right
34:37 - because I forgot to actually call it so
34:39 - let me just exercise validate and yeah
34:42 - okay but yeah for some reason my I think
34:45 - my overlay might have died which is a
34:48 - bit annoying because now I can only see
34:50 - that messages on the
34:56 - side I got a iteration one two and three
35:00 - I hope that works so yeah all right how
35:04 - do I find if I'm doing clean coding or
35:05 - not I mean it starts by making an effort
35:09 - in order to write good clean code and
35:11 - then it comes from your own experience
35:12 - of being able to identify what is good
35:14 - code what is bad code and being able
35:17 - to uh as you learn that you'll learn
35:19 - quite a bit more on what is good code
35:21 - what is bad code so over time you become
35:23 - a lot better at being able to see code
35:25 - and being able to identify am I doing
35:26 - this right or should I do this some
35:28 - other way that would work quite a bit
35:30 - better so yeah that really comes with
35:33 - the
35:34 - experience it's possible to learn how to
35:36 - code things in unity the correct way
35:38 - without working at a studio sure yeah I
35:41 - mean you can definitely learn Unity you
35:43 - can learn all kinds of things just by
35:45 - yourself I mean nowadays the amount of
35:47 - information that you have available is
35:49 - really quite a massive amount so that is
35:52 - something that is really
35:53 - awesome uh so yeah although at the same
35:56 - time every studio is going to have
35:59 - different things different ways of
36:00 - working let me just change this because
36:02 - I think this was broken I don't know why
36:05 - uh but yeah every studio is going to
36:06 - have different things so regardless of
36:08 - how much you learn by yourself once you
36:10 - join some kind of Studio you're still
36:11 - going to need to oh boy now it's
36:13 - sprinting all the messages that's messed
36:15 - up uh yeah once you join the studio then
36:18 - you're going to have to adapt to
36:20 - whatever way they they work on that
36:22 - studio whatever things they do okay let
36:24 - me just okay so go so
36:28 - recursion is all about a function that
36:31 - calls
36:34 - itself so in order to define a limit you
36:38 - need to pass in all that data in the
36:41 - function parameters
36:44 - and and do some kind of empty return
36:49 - When you want the function to
36:52 - end when you want the function Conant to
36:56 - end yep and now the complete text so
36:58 - here you learn how to do simple
37:02 - recursion if you are
37:05 - a uh if you are more of a math person
37:09 - then doing
37:11 - recursion might be simpler than is my my
37:16 - overlay is all messed up might be
37:18 - similar than doing Loops although
37:20 - personally I find a lot more
37:24 - confusing so I only tend to to use Loops
37:29 - all right yep so recursion definitely a
37:31 - complex
37:37 - topic what is recursion recursion is
37:39 - when a function calls itself so it's
37:42 - basically what I've got over here I've
37:43 - got a recursive function and note how
37:45 - this function is calling itself and if
37:47 - it calls itself too many times it leads
37:49 - to a sack overflow which leads to a lot
37:51 - of messed up errors a lot of problems
37:52 - which as you saw eventually crashed my
37:54 - Unity so when working with recursion you
37:56 - got to be very careful about your end
37:59 - conditions like over here the mistake
38:01 - that I had was instead of doing IUS one
38:03 - I was doing IUS minus which in turn was
38:05 - apparently calling this function with
38:07 - the previous value of I and only
38:09 - updating the local variable after
38:10 - calling it so that is why this thing was
38:12 - all messed up and doing I minus one that
38:15 - does fix it so yep that is recursion and
38:18 - except by doing that it also messed up
38:21 - this uh this part of
38:24 - the can I modify it nope
38:28 - oh boy so that really messed things
38:30 - up oh no oh
38:35 - God
38:38 - okay oh
38:40 - no I
38:42 - just am I still alive is everything
38:44 - still working cuz yeah my overlay just
38:49 - crashed and I don't even know did the
38:52 - live stream go down did it go down okay
38:55 - no OBS seems to be working
38:59 - but
39:01 - yeah oh boy yeah so I got to let me just
39:07 - I got to fix out you are still alive
39:09 - okay thank you because yeah that really
39:12 - I don't know what happened with the uh
39:14 - live chat overlay because it's the first
39:17 - time that it's got really messed up to
39:18 - the point where it pretty much broke so
39:20 - I basally need to manually modify this
39:23 - one thing so what time is it like that
39:26 - all right
39:30 - so let me just modify this and see if I
39:32 - can get it working again
39:36 - so like
39:38 - this and today is
39:47 - that okay so let's see if like this the
39:50 - overl is working
39:56 - again
40:03 - okay I think it might be working again
40:05 - so I just need to make another build and
40:08 - hopefully it should be
40:10 - working uh right
40:13 - so why is this going into the oh right
40:16 - because I created The Nest Loop and then
40:18 - did that and then that
40:24 - happened okay so yeah the n and loop and
40:27 - the other one is hopefully now
40:31 - working so let me just start this up put
40:35 - it on this
40:36 - Monitor
40:38 - [Music]
40:39 - and hopefully like this it is
40:43 - working let me do a message myself and
40:46 - see if it shows
40:47 - up okay my message does show up okay so
40:50 - I still don't know what exactly went
40:51 - wrong but anyways it should be working
40:54 - now so that should be good okay so where
40:56 - was I I was on recursion
40:58 - so I did that one I did write the one on
41:00 - recursion simple recursion I did write
41:02 - the hint write the completed text so
41:04 - let's go into next one so the dictionary
41:06 - let's go onto this exercise
41:09 - okay how do you secure your data when
41:12 - when you are on social
41:14 - media I am not sure what you mean by
41:17 - secure your data I want to create
41:20 - similar Condy growth in a similar field
41:22 - are you talking about people copying
41:24 - things I mean usually you can't really
41:27 - uh uh prevent that so yeah I'm not
41:31 - entirely sure what you mean I mean
41:32 - technically right now anyone can take
41:34 - videos from my channel and publish them
41:36 - on their channel so technically there's
41:38 - really not much I I can do about that
41:40 - the only thing I can do that is be right
41:42 - here continue making content because if
41:44 - someone is copying me they can only do
41:45 - the content that I've already done so
41:47 - they can't do all the things that I'm
41:48 - going to do in the future so they can
41:50 - technically copy my content but they
41:51 - can't really copy my brain so yeah so
41:55 - yeah I'm not entirely sure what you mean
41:57 - by by that but
42:03 - yeah hey in and out thanks thanks for
42:05 - the Super Chat when was the last time
42:07 - you wrote A C program outside Unity do
42:09 - you like WPF I always forget what what
42:12 - that one stands for but uh it's actually
42:14 - been a while I mean I do I've written
42:16 - some what was the last thing that I
42:20 - did I remember when I was like looking
42:25 - to buy something I don't remember what I
42:26 - was going to buy but I basically wrote a
42:28 - program in order to scrape a uh a bunch
42:31 - of websites in order to find the price
42:33 - for some kind of item something like
42:34 - that so I did something where I had some
42:36 - kind of overlay that ran every time I
42:38 - open up my desktop it ran it would check
42:40 - the price for something and then give me
42:41 - a message if it was under something I
42:43 - don't remember what I used it for but it
42:45 - was yeah I don't remember but something
42:47 - like that and uh another one that I did
42:50 - really interesting a very long time ago
42:52 - that was uh like I don't know like seven
42:54 - years ago was I made a bunch of programs
42:56 - that would basically uh scrape the
42:59 - homepage of steam in order to find all
43:00 - the steam new releases and find out how
43:02 - many reviews they had in order to find
43:04 - what games were're finding success and
43:05 - coming out every day so again that was
43:07 - something that I made that run on every
43:09 - single uh every single time that I
43:10 - turned on my PC it would run that
43:12 - program and it would show me some kind
43:13 - of window Okay so yesterday uh these
43:15 - three games came out which had more than
43:17 - 10 reviews then I could click on them
43:19 - inspect them and so on so yeah there was
43:21 - a bunch of time in which I was really
43:23 - really focusing really hard on learning
43:26 - what exactly works on on seam what
43:27 - doesn't work and at that point I built
43:29 - that little program in order to help me
43:30 - research and that was actually surpris
43:32 - it was surprisingly easy to make and
43:34 - quite valuable in order to learn how
43:37 - seam Works what kinds of games were
43:38 - coming out so yeah that was actually
43:40 - pretty interesting but but yeah usually
43:41 - when I make things uh in C outside of
43:44 - unity usually when I make that I
43:45 - basically just make them super basic
43:47 - console apps usually I don't do anything
43:49 - with kind of uh visuals so it's been a
43:51 - very long time since I've used like Wind
43:53 - forms and stuff like that usually I just
43:55 - make the most usually when I do things
43:57 - outside of unity I just want some kind
43:59 - of logic to run automatically if I do
44:02 - want some visuals then I will probably
44:04 - use Unity as opposed to building
44:06 - something like wind form so yeah whether
44:09 - you want visual or not that's usually
44:11 - how I handle things
44:16 - okay okay so let me try doing this what
44:19 - was the goal of this exercise so the
44:21 - goal create dictionary of type resource
44:23 - type int and set goal to five with to 12
44:26 - call exerise valid and pass in the
44:28 - dictionary okay so over here let's
44:30 - create a brand new dictionary so we want
44:32 - to create dictionary of type with the
44:34 - key resource type and the other one is
44:37 - meant to be an INT so uh this is going
44:40 - to be resource amount dictionary
44:42 - something like this so let's what that's
44:44 - not wait for frame that's strange um is
44:49 - that it just creating it oh no and then
44:51 - set gold to five and wood to 12 so over
44:54 - here let's go and set the on resource
44:57 - tye. gold set that one to five and for
45:02 - wood set that one to 12 then call the
45:05 - exercise validate and pass in the
45:08 - resource amount
45:10 - dictionary okay I think that is
45:18 - it I'm from India or my game development
45:21 - Mentor I'm 14 years old oh that's
45:22 - awesome that's really cool I mean I
45:24 - started learning programming by myself
45:27 - alone when I was 10 years old so yeah if
45:28 - you're starting at 14 you're starting
45:30 - really great really nice and young so
45:32 - yeah definitely take advantage of all
45:34 - the videos on YouTube on tutorials all
45:35 - the free course all the kind of things
45:37 - and yeah if you are active in your own
45:40 - Learning Journey that early then yeah by
45:41 - the time you're 1820 you're going to be
45:44 - very knowledgeable very successful so
45:46 - yeah I definitely wish you the best of
45:48 - luck continue on learning okay waiting
45:50 - for dictionary function was called gold
45:53 - does F5 wood does F12 and yep that is
45:55 - correctly successful so y that's the
45:57 - exercise on how to define a dictionary
46:00 - so let's do this one write the hint and
46:02 - text okay so for this one
46:06 - so so what's a good hint uh remember the
46:10 - Syntax for how to define a dictionary
46:15 - with key and uh
46:18 - value then remember how it dictionary is
46:22 - an object which needs to be constructed
46:26 - with
46:29 - new dictionary is an object needs to be
46:31 - constructed with
46:33 - new
46:34 - and in order to set uh values on certain
46:40 - Keys you access it like a array like an
46:45 - array yep that should be good enough in
46:48 - order to guide
46:50 - it I think the biggest barrier on my gim
46:53 - def career is Art yeah that is
46:55 - definitely the exact same thing for me
46:57 - as well so yeah that is why for me uh
47:00 - using the AET swur has been really
47:01 - awesome I definitely wish I had the AET
47:04 - swur back when I was a kid I mean
47:05 - because I was making games that
47:08 - were relatively ugly steam power.com uh
47:14 - all because I really could not draw
47:16 - anything so if I check out my first game
47:19 - my Survivor Squad visually it definitely
47:23 - looks very much subpar I mean to be
47:26 - honest I'm very proud of what I managed
47:28 - to achieve given my extremely limited
47:31 - art skills I'm really happy with the the
47:33 - inl characters I do think those came out
47:35 - quite nice I mean I drew all that myself
47:37 - which I mean for an artist this is not
47:40 - impressive but for myself yeah I'm
47:41 - definitely very happy with how I managed
47:43 - to build that but yeah look at how those
47:45 - those uh pieces of glass the glass
47:47 - itself is extremely simple the uh sentry
47:50 - guns I think they look really great but
47:52 - they are also extremely simple extremely
47:54 - basic they're the the weapons lights all
47:58 - the things and yeah basically this oh
48:01 - boy the hand for that little smoker
48:04 - Zombie
48:05 - thing yeah that was uh it's been a long
48:08 - time since I played it so yeah I
48:10 - definitely would like to play this game
48:13 - again CU it's been a a very long time
48:15 - since I tried doing that cuz yeah look
48:16 - at this I drew all this so I drew those
48:19 - little Beds which look very strange I
48:21 - drew the character I made the animation
48:23 - and uh yeah but I also you can obviously
48:27 - see how I drew those portraits by how
48:30 - super basic they are so yeah that that
48:32 - was the the extent the limit of my art
48:34 - skills at the time it was pretty much
48:37 - drawing it like this which is definitely
48:39 - extremely basic extremely simple look at
48:41 - that
48:42 - smoke so yeah basically when I made this
48:45 - back in 2013 back then I really wish I I
48:49 - had the knowledge to be able to use the
48:51 - accur cuz I could have just come down
48:53 - here in order to find all kinds of
48:55 - really awesome Sprites so I could just
48:57 - combine my programming knowledge with
48:59 - some really awesome Sprites and the game
49:02 - probably would have looked quite a lot
49:04 - better I mean I'm still happy with how
49:06 - it came out but it would have been quite
49:08 - look at this it's got a bunch of top
49:10 - down things and quick tip if you're
49:11 - making 2D games you can also just buy uh
49:14 - 3D assets These are 3D meaning you can
49:16 - place the camera anywhere so you can buy
49:18 - a 3D asset like this and if you're
49:19 - making a top down 2D game just take the
49:21 - camera move it upwards take a screenshot
49:23 - and boom you've got a really awesome 2D
49:26 - assets to use use in your top down game
49:27 - so yeah it's uh if you know how to use
49:30 - the asset swore thankfully nowadays lack
49:33 - of art skills is not an issue or it it
49:37 - is not an issue to the point of being
49:39 - limiting so if you if you know how to
49:40 - use it if you know the kind of game that
49:42 - you're going for even if you have no art
49:44 - skills you can still build something
49:45 - pretty awesome hey with that a nice cute
49:48 - custom
49:50 - character nice hey thanks for making
49:52 - that um and by the way for those of you
49:55 - who don't know you can customize your
49:56 - character so you can go you can draw a
49:58 - bunch of things just follow the
50:00 - instructions over here on this page you
50:02 - can download this image then you can
50:03 - draw on top of it you can draw whatever
50:05 - character you want in either way you
50:07 - want you can draw something as long as
50:08 - you draw on the correct points you can
50:10 - draw whatever you want and then you have
50:12 - then the character over here will look
50:14 - exactly like that uh okay so let me do
50:16 - where was I oh right he
50:20 - completed so in this exercise you learn
50:24 - how to create a a
50:29 - dictionary this is one of the most
50:32 - useful data structures you can
50:35 - use especially in games for things like
50:40 - inventories yep dictionaries are
50:42 - actually really awesome having a key
50:44 - value pair is something that is useful
50:45 - in so many scenarios it is really so
50:48 - very good so very
50:51 - nice reminds me of an era flash games
50:53 - were really fun great yeah flash really
50:56 - was awesome it's quite it's a shame how
50:59 - nothing like flash exists nowadays I
51:01 - mean of course you've got things like
51:02 - itch and so on but yeah flash was just
51:06 - it was a magical time you could just
51:08 - download Flash start making a simple
51:10 - game upload it on new grounds and boom
51:12 - 500 people a thousand people were
51:13 - playing your game giving you feedback
51:14 - that was really something magical
51:16 - something really awesome whereas
51:18 - nowadays technically you have itch you
51:19 - can put up any game but it's much
51:21 - trickier in order to get people to
51:24 - download your game or if you make it a
51:25 - web game then there's all kinds of
51:27 - limitations actually I haven't used
51:28 - webgl in in quite a long time maybe I
51:30 - should look into that one but yeah
51:32 - basically with flash there was pretty
51:34 - much no friction nothing go on to a web
51:36 - page downloads automatically you start
51:37 - playing right away you can play it you
51:39 - can give Fe give feedback do all kinds
51:41 - of things so yeah flesh was really
51:43 - awesome and how straightforward it was
51:45 - and how fast it was to both make games
51:47 - and get feedback for games that really I
51:49 - feel like the four years that I was five
51:51 - years that I was working on flash and I
51:53 - made 40 games with it those were really
51:55 - tiny games but the fact that I made so
51:57 - many and I got so much feedback out of
51:58 - it I feel like that really helped me
52:00 - improve my skills both as a game
52:02 - developer and a programmer so yeah I do
52:04 - think that was really part of the reason
52:06 - why I have the skills that I have today
52:08 - so yeah it's really such a shame that
52:10 - nowadays you can't really get something
52:12 - Exel like that you can do game jams
52:14 - which I guess I mean there are pros and
52:15 - cons there are a bunch of things that
52:16 - are much better nowadays than there were
52:18 - previously but yeah losing flash was
52:20 - really sadly quite a a negative
52:23 - thing create a stack and populated with
52:26 - strings so let's do a stack of type
52:28 - string so that's a string stack and
52:30 - let's do one why is this one constantly
52:32 - doing that do a stack of string and for
52:35 - my string stack let's push let's say the
52:38 - string code monkey and then let's say
52:40 - the string Iron Man just like that uh
52:44 - then what am I supposed to do oh I think
52:46 - I was supposed to
52:48 - actually let me see the exercise oh yep
52:51 - that was it Code Monkey Iron Man and
52:53 - then Black Widow push those in order so
52:55 - black wiow all right where's my where am
53:01 - I one my
53:03 - windows oh no it's there okay
53:12 - good I have me why can't I resize Unity
53:16 - interface really
53:18 - doesn't huh I I I'm sorry I have no idea
53:22 - I mean you go onto Unity preferences and
53:25 - in theory over here I don't don't even
53:28 - remember where it
53:31 - is UI scaling so in theory over here you
53:34 - should be able to modify it so don't you
53:36 - see this menu at all on Mac if not then
53:39 - yeah I wonder if it is possible or maybe
53:41 - Mac is just based on the desktop setting
53:44 - so maybe you have to go on the Mac
53:46 - desktop setting and modify that it seems
53:48 - strange that it wouldn't work at all
53:50 - especially because Max have so many
53:52 - resolutions so yeah sorry I don't know
53:55 - if you don't see this many if it doesn't
53:57 - work then yeah I really really don't
53:59 - know hey I love your videos hey I love
54:02 - you for watching them so yeah thanks for
54:05 - being here watching the videos hope
54:06 - you're having a great Friday okay so uh
54:09 - let's play and thanks again and out for
54:12 - the Super Chat all
54:16 - right checking the sa count three
54:18 - expected three so yep that is correct
54:20 - trying to pop it with black widow like
54:22 - expected Iron Man and Code Monkey so yep
54:25 - that is it that is how you handle a
54:27 - stack which is another interesting
54:28 - collection type one that I randomely use
54:31 - myself but if you do need to use some
54:34 - kind of stack of papers or things then
54:37 - stack can be quite
54:39 - nice uh so over here
54:43 - remember
54:44 - uh how a stack is created how it uses
54:49 - the stack type inside angle
54:52 - brackets brackets then remember how
54:57 - stack uh then remember the the functions
55:02 - to add add elements to a stack remember
55:07 - the function to add elements onto a
55:09 - stack which is not
55:12 - add which is not named
55:16 - add okay so here you learn how to create
55:20 - and work with a stack this can be a
55:25 - useful a structure when you need
55:29 - to uh always remember when you need a
55:34 - what is a stack the stack
55:36 - is uh I always remember I always forget
55:40 - it's a follow collection
55:42 - right first in last out that's it right
55:46 - because I push pop yeah it's a follow
55:48 - yeah
55:51 - uh yeah this can be a useful data
55:53 - structure when you need a follow
55:55 - collection first and last out so yep
55:57 - that is pretty much
55:58 - it you SX for generating a procedural
56:01 - path oh really oh that's actually
56:03 - interesting that's a nice use case yeah
56:05 - you can pretty much just push okay go
56:07 - here then here then here then here and
56:09 - yeah then you can reverse the stack and
56:11 - then pretty much just pop each
56:12 - individual stuff oh that's nice that's a
56:15 - that's a cool one that's that's a great
56:17 - use case
56:20 - nice okay let's complete the exercise
56:23 - like
56:24 - that when will you 6 be released as far
56:27 - as I know I believe they said by the end
56:29 - of this year so if I had to guess I
56:32 - would guess around the same time as uh
56:35 - the unite conference which I believe
56:37 - usually happens September October
56:39 - November so that is probably going to be
56:43 - so I would probably assume either
56:44 - shortly before that or EXA on that so by
56:47 - the end this year that's that's pretty
56:49 - much
56:50 - it then also an interesting comment
56:52 - what's your thoughts on Devon Ai and I
56:54 - actually have a very video exactly on
56:57 - that topic coming out
56:59 - later uh can I
57:03 - even yeah so definitely stay tuned for
57:06 - this video and right away by the title
57:08 - you can see what's my thoughts on Devon
57:10 - AI so yeah basically this is the video
57:12 - coming out what time is it 5:41 so in
57:15 - about 20 minutes yeah I'm going to end
57:18 - the live stream shortly before that so
57:20 - after that go ahead and watch just a
57:21 - quick video just because I saw some
57:23 - people were really scared about this AI
57:25 - thinking okay this is the end of
57:26 - programmers or software developers
57:29 - software Engineers all of this and the
57:30 - reality is really not quite like it it's
57:33 - really one of those things where the
57:34 - hype is really insane and reality is
57:37 - quite a bit different from the hype so
57:39 - uh basically the the premen and Theo
57:41 - made some really interesting videos on
57:43 - that so basically over here I just give
57:44 - my super quick take on it just don't
57:47 - worry about it but then definitely watch
57:49 - these videos in order to get more of a
57:51 - more detail on why exactly it isn't
57:54 - exactly like it seems on their marketing
57:55 - material so yeah definitely an
57:57 - interesting topic so yeah definitely
57:58 - stay tuned for this video coming out in
58:00 - about 20 minutes so let me quickly do a
58:03 - bunch more exercises uh so that I can do
58:06 - that okay so the stack I wrote this one
58:08 - let's go to the next one so that's the
58:11 - other collections function prams let's
58:13 - do this
58:18 - exercise is there a way to visualize the
58:21 - Audio Waves in a unity game just like in
58:23 - an audio
58:24 - editor huh that's a good
58:29 - question I don't know because I'm not
58:31 - very I'm not very experienced with audio
58:35 - but if you go onto the audio
58:38 - listener does it have maybe does have
58:40 - some kind of function in order to get
58:43 - that but I actually don't
58:46 - know get output data get Spectrum data
58:49 - maybe
58:51 - that maybe that could be it you're ready
58:55 - to populate with audio
58:57 - samples the channel to sample from and I
59:00 - have no idea what is an fft window see
59:03 - The Listener get output data get
59:06 - Spectrum okay but yeah it does seem like
59:08 - it is exactly that so I mean it's doing
59:10 - debug. line so I assume this is going to
59:13 - draw the spectrum of whatever the audio
59:15 - listener is trying to get
59:17 - so so yeah that's a very interesting
59:19 - question I've never tried making an
59:21 - audio visualizer but apparently with
59:23 - this function you can probably do
59:24 - something similar to that at least this
59:26 - code seems to be quite like that yeah
59:28 - that that would be a fun thing to build
59:30 - a little audio visualizer or you could
59:33 - also do all kinds of logic on that so if
59:35 - the audio really spikes maybe spawn an
59:37 - enemy some kind of monster some kind of
59:39 - thing so that could be a fun mechanic to
59:41 - work on in some kind of horror game that
59:43 - could be could be interesting okay let
59:46 - me do a few more so I don't got much
59:47 - time left so let's do this so this
59:50 - exercise write a function to add any
59:52 - numbers so write a function add numbers
59:54 - that has a params parameter for ins and
59:57 - Returns the total sum of all of them
59:58 - okay so that should be pretty simple so
60:01 - this one Returns the sum so int add
60:04 - numbers and now inside it I want to have
60:07 - an
60:07 - interray A A prams
60:10 - interray it's prams right this one is
60:12 - not the yeah it's on the function prams
60:15 - not the optional ones uh so numbers
60:19 - array and let me do an end for result
60:23 - starting off at zero return the result
60:26 - and then for each and number in the
60:29 - numbers array for each of this result
60:32 - equals the
60:33 - number
60:36 - number okay I think that should do it so
60:39 - if you have add numbers add the numbers
60:41 - results adds each of each of them so it
60:44 - should work let's
60:50 - see morning I just starred my son on
60:52 - your Unity class oh that's awesome
60:54 - that's cool somewhere things up he is at
60:57 - the animation
60:58 - steps oh I mean uh if it gets really
61:02 - messed up to the point where the project
61:03 - is broken you can download the I assume
61:05 - you're tell oh boy my voice is already
61:07 - messed up I assume you're talking about
61:10 - the kitchen cow course so if so on that
61:12 - one you can go on to the course website
61:14 - and you can download the project files
61:16 - for each specific thing so over here if
61:19 - you go on to Ah that's not the link
61:20 - that's the link uh over here on this one
61:23 - you've got all the lectures and on each
61:24 - of them you can download the project
61:26 - fils at that point so if things had
61:28 - messed up to the point where there's no
61:30 - coming back that's not that's not a
61:32 - problem just come here Download Project
61:34 - files and continue falling on from that
61:35 - but yeah yeah really awesome how you're
61:37 - going through with your son that's
61:38 - really cool continue doing that yeah all
61:43 - right looking at it did find it does
61:45 - have the prams corrector it calls it one
61:48 - two three and Y it is correct yep so
61:50 - that's how you make a function to add
61:52 - any number of numbers I guess
61:56 - okay so on this one let's write write
61:59 - the hint so the hint
62:01 - so uh the Syntax for using prams is like
62:06 - any other parameter type ex except it
62:11 - must be an array type in this case an
62:16 - array of
62:18 - int okay that should do
62:20 - it and for the adding logic just a
62:24 - simple for or for each Loop
62:28 - cycling through all the elements and
62:31 - adding them
62:35 - together uh let me just put four and for
62:38 - each like
62:41 - this is that I don't know uh so here
62:45 - you'll learn how to define a params
62:48 - parameter which allows a function to
62:51 - take take in any number of
62:54 - parameters which can be really useful
62:58 - when you have some logic that you want
63:01 - to work with any number of parameters
63:05 - that's cool so the params keyword which
63:08 - is actually surprisingly
63:14 - useful that's the add numbers and let's
63:17 - go and complete the
63:22 - exercise all people running around
63:24 - bottom yeah those are the people
63:26 - chatting right now so uh yeah basically
63:31 - it's working with the uh YouTube API so
63:34 - if you want to know how all the how this
63:36 - little overlay Works actually covered a
63:38 - bunch of tutorials at the bottom of this
63:40 - page so if you go on there yep if you
63:43 - want to figure out how to make this yep
63:45 - it's pretty simple it's basically a
63:46 - transparent un window this is running on
63:48 - top of my desktop then for the
63:50 - characters the way they are animated
63:51 - these are mesh based animations and the
63:53 - way it's talking with the YouTube API is
63:55 - by doing an htttp request from inside
63:57 - unity and then the characters the way
63:58 - they are randomized with all kinds of
64:00 - colors and shapes that's really the same
64:02 - system that I use in my game battle
64:03 - round Tycoon for making all kinds of
64:07 - characters love s streams oh nice
64:10 - streams will have to follow along for
64:12 - more all right that's cool yeah thanks
64:14 - for thanks for being here yeah I
64:16 - definitely would like to do live streams
64:18 - a a bit more regularly because it's um
64:21 - every time I do them I enjoy them it's
64:23 - always it's always nice chatting to
64:25 - people directly
64:26 - so yeah definitely something that I
64:28 - would like to do more often but as you
64:30 - can see from my voice I'm really not I'm
64:33 - really not the kind of person who can do
64:34 - live streams for long so it's been what
64:37 - about one hour and yeah my voice is
64:38 - already quite messed up so yeah I would
64:40 - like to do them more often so shorter
64:44 - but more often so pretty much just one
64:45 - hour live stream like two times a week I
64:47 - think that would be a fun little uh
64:50 - schedule that would be that would be fun
64:52 - okay so this
64:54 - exercise qual fun fun set a player but
64:56 - only passing the player name parameter
64:58 - something other than null and the player
65:00 - HTH something other than two okay so
65:02 - this one is the lecture on optional
65:05 - parameters and yeah so call the setup
65:08 - player function and the goal is passing
65:10 - the player name something other than
65:13 - null so let's pass in the player name so
65:17 - something other than null
65:19 - okay so I pass in that one and the
65:22 - player health so player Health something
65:24 - other than zero so like this so yeah in
65:27 - case you don't know this syntax this is
65:29 - how you can set up optional parameters
65:31 - you can call the parameters in any order
65:33 - as long as you specifically specify
65:35 - exactly what parameter name it is so use
65:37 - a parameter name then a colon and then
65:39 - whatever value you want to call so note
65:41 - how down here this function this one has
65:43 - all these parameters defined as optional
65:45 - parameters that is why they have the
65:46 - little equals these are optional
65:48 - parameters and they are defined like
65:49 - this so Vector three for the player
65:51 - position then the health and then the
65:52 - player name but if you use the name for
65:54 - the parameters if you use this then you
65:55 - can actually call the parameters out of
65:57 - order so that is why over here I'm
65:58 - calling the player name and then the
65:59 - player health and Y this is perfectly
66:01 - valid code so it should work like
66:08 - that let's
66:13 - go uh okay setup player has been called
66:16 - that one was left his defa that one was
66:18 - set that one was set yep success all
66:20 - right so that's really cool so that's a
66:22 - lecture on the the call optional
66:25 - parameters so the hint on this one
66:28 - remember the Syntax for calling optional
66:31 - parameters
66:33 - you uh write the parameter name then a
66:38 - colon then the
66:40 - value with this you can even call
66:43 - parameters out of order so that's fun so
66:47 - here you learn how to call optional
66:51 - parameters and how to call them out of
66:55 - ay new member nice uh and how to call
66:58 - them out of order this can be
67:02 - great uh sometimes for making the code
67:05 - more readable since you define since you
67:09 - define since you write the
67:11 - parameter name when calling the
67:16 - function all right good hey new member
67:19 - thank you so much yeah it's been a while
67:21 - since I saw this little popup here so
67:23 - yeah major blue 7 thank you so much much
67:25 - for becoming a channel member
67:31 - thanks thanks for all the work you put
67:33 - through your tutorials ah nice hey
67:35 - thanks Ricard yeah I'm glad people like
67:38 - the tutorials and as long as people like
67:40 - like the tutorials I will continue
67:42 - making them so yeah thanks for watching
67:45 - them I really hope the tutorials have
67:46 - helped you a lot and yep I do plan to
67:48 - continue doing this for many many years
67:50 - so yeah hopefully if you if you want to
67:53 - continue making games for a long time
67:54 - hopefully you can join me on this
67:56 - journey so we can all make games
67:57 - together for the next 50 years that's
68:00 - pretty much my goal so yeah if you want
68:02 - to join me definitely join me uh okay
68:05 - let's complete this
68:09 - exercise I never created the video on
68:11 - hfsm for player controller I don't know
68:15 - what you mean by that hierarchical state
68:18 - machine is that what you mean
68:21 - hierarch hierarchal finite State machine
68:24 - I assume that's what you mean
68:26 - I've used a bunch of sa machines but
68:27 - usually for me I use sa machines like
68:29 - the most basically basic thing possible
68:32 - so yeah for me I if you want to make a
68:36 - did
68:38 - uh
68:39 - the did he make I think he made a really
68:42 - awesome
68:43 - video IH heart Game Dev I think he made
68:46 - a really awesome video on state machine
68:50 - yeah there you go he
68:52 - made Nikki made a bunch of really
68:55 - awesome videos on pring Unity State
68:58 - machines making a better State machine
69:01 - so yeah if you want to learn about State
69:03 - machines like more complex seate
69:04 - machines definitely check out his videos
69:06 - videos are really awesome really really
69:08 - detailed really excellent editing I'm
69:10 - always amazed every time he he makes a
69:13 - brand new video it's always really
69:15 - excellent really nicely edited so yeah
69:17 - if you want some really complex State
69:18 - machines yeah there's this one from two
69:20 - years ago I don't remember how what is
69:23 - the differences between them but yeah
69:24 - definitely watch both them
69:25 - really awesome so if you want to dive
69:28 - really deep onto State machines I can
69:29 - definitely recommend these videos really
69:33 - awesome uh okay so where was I so the
69:36 - optional
69:37 - parameters I did finish that one okay
69:39 - let's see what time is it oh 54 because
69:42 - I got to make sure to finish the live
69:45 - stream by 6 PM otherwise it might mess
69:48 - up the actually I don't know if it cuz I
69:51 - think I did that once like I I published
69:53 - a video and then finished live stream
69:54 - afterwards and I think that really
69:56 - messed things up so that is why I didn't
69:58 - want things to be messed up right now
70:00 - but I don't know maybe I'll go for like
70:03 - five minutes more and then see what
70:05 - happens with the analytics I don't know
70:07 - let's see either way let's go on to the
70:10 - next one where was I value versus
70:12 - reference types another extremely
70:13 - important topic very
70:17 - important watching your kitchen chaos
70:19 - course and I'm almost done what can I do
70:21 - after copy all the games watch the C
70:23 - course create simple games I would
70:25 - definitely say that you can uh make some
70:27 - kind of simple game or build upon it in
70:30 - some way that that is what I would say
70:32 - so basically try to modify things and oh
70:35 - God what was
70:37 - the uh what did I title
70:40 - it uh my game
70:44 - better no oh crap I can't remember the
70:48 - title if I just search for kitchen cows
70:51 - might show up basically there was a
70:54 - developer who yep took my game and made
70:57 - some took the game from the uh kitchen
70:59 - caros course and basically bu upon it
71:01 - and made something completely different
71:02 - so yeah I would definitely encourage you
71:03 - to do something like this so pretty much
71:06 - take that as a base and build upon it do
71:07 - something so as you can see over here
71:09 - there's all kinds of new visuals all
71:11 - kinds of new items there's a bunch of a
71:13 - bunch of things that have new new uh
71:16 - there's a bunch of you know there's like
71:18 - cooking eggs
71:20 - there's uh there was tips from the from
71:23 - the customers the customers actually
71:24 - show up and so on so yeah but I would
71:26 - definitely encourage you to do something
71:29 - like that like the
71:32 - um uh
71:35 - yeah I would encourage you to continue
71:37 - building upon it I think that's the best
71:39 - way to do it just try to since you
71:41 - should be if you fully understood
71:42 - everything in the kitchen chaos course
71:44 - you should be very familiar with that
71:45 - code base so hopefully that should allow
71:47 - you in order to actually build things
71:48 - upon it in order to uh really modify
71:52 - things and figure out how things work
71:53 - when you modify them that's really what
71:55 - of the best ways to work so one of the
71:57 - best ways to learn is learn by doing so
71:59 - definitely make sure you modify some
72:01 - things to see what what happens what
72:03 - changes and the more modifications you
72:05 - make so if you were to make something
72:06 - like this so pretty much still the same
72:08 - genre so you use the same base but you
72:10 - build something very different on top of
72:12 - it doing that is a really great way a
72:14 - really great uh learning exercise that
72:16 - will definitely improve your skills
72:17 - quite a
72:18 - bit I think the member notification
72:20 - should be short yeah this one is it's
72:23 - basically manual so B it shows up here
72:26 - and yeah and sometimes there's another
72:28 - one there's another button to que but
72:29 - yeah thanks so much for becoming a
72:31 - member nice how can I get access to
72:34 - these exercise these are part of the uh
72:36 - premium version of the course so yeah if
72:38 - you have that you can download the
72:40 - companion project which is this entire
72:42 - project which contains all of this okay
72:44 - so let's do this exercise let's see what
72:47 - is the goal addit the second parameter
72:51 - on the function to what matches the
72:52 - score inside each object note what the
72:55 - modify score function does okay so this
72:57 - should be a simple one so basically
72:59 - there's a struct which is a valid type
73:01 - and a class which is a reference type
73:03 - and then constructing brand new uh
73:05 - struct brand new class and calling the
73:07 - function to modify that one just sets
73:08 - the score to that and basically in order
73:11 - to modify here is it going to be five
73:13 - the initial value or is it going to be
73:14 - 12 now in this case structs are value
73:17 - types meaning they are passed in as
73:18 - copies so if you modify a copy inside of
73:20 - it it is not going to modify it so over
73:23 - here this one is going to remain with
73:24 - five
73:25 - but classes these are reference types so
73:27 - it is going to modify just like that one
73:30 - and if you have no idea what I what I
73:32 - just said definitely watch my video on
73:35 - uh structs versus uh valid types versus
73:38 - reference types if you don't know what
73:39 - those two are you definitely need to
73:41 - learn them because those are really
73:43 - important things to know because if you
73:45 - don't know and you're working sometimes
73:47 - with something that is a copy you will
73:48 - go quite insane because you don't know
73:50 - why something isn't modifying the answer
73:52 - is because you're working with a copy as
73:53 - opposed to the original
73:55 - see validate 55 122 and yep that is a
73:59 - success so let's write the let's write
74:01 - the hint and the
74:05 - completed so completing remember the
74:08 - differences between value types and
74:11 - reference types how if you pass in a
74:15 - value type onto a function you pass in a
74:18 - copy so if you modify that value inside
74:22 - that function you are modifying the copy
74:26 - value and not the original value so that
74:31 - is the big difference between value
74:33 - types and reference types okay so here
74:37 - you learn the difference between value
74:41 - and reference types and how they
74:45 - behave very
74:49 - differently uh especially when pass then
74:53 - as a parameter onto a
74:57 - function yep just like
75:00 - that all right that was cool
75:05 - nice difference between functions and
75:08 - methods really uh the exact same thing
75:10 - technically in C the technical correct
75:13 - term is methods but I don't know I don't
75:15 - like the I don't like the word methods I
75:17 - don't know it feels
75:19 - strange so yeah for me I call them
75:21 - functions but in C technically a
75:23 - function is a method so yeah but it's
75:25 - really just a name thing if you tell
75:27 - anyone I wrote a c function they know
75:29 - exactly what you mean if you say I wrote
75:31 - a c method they also know what you mean
75:33 - so yeah really just different words that
75:35 - people use
75:42 - interchangeably video tutorial on
75:44 - importing 3D assets and maybe some sites
75:47 - where to get them for free or blender if
75:48 - you use it I did make a video just like
75:51 - that on or rather about animations
75:53 - rather than things B pretty much the
75:55 - same thing so if you want some free
75:58 - characters and free animations I highly
75:59 - recommend you look into mixo it's a
76:02 - really awesome website where you can get
76:04 - all kinds of free characters and
76:06 - animation I think you need to log in
76:08 - yeah okay uh but yeah you can get
76:10 - characters and animations so if you want
76:12 - something simple this is great if not
76:14 - then of course the asset stur I mean you
76:15 - can just go browse the asset stur so for
76:17 - example let's go into one of these menus
76:20 - disable this okay so the assur has
76:22 - 93,000 results and and now you can go
76:25 - over here into pricing put it on free
76:27 - assets and boom there you go you got
76:29 - almost 9,000 assets for free so you got
76:32 - free Sky boxes free uh 2D packs free 3D
76:35 - environments you got free tools you got
76:39 - more low poly acids some high resolution
76:41 - textures you've got some characters
76:43 - third person controllers a bunch of
76:45 - sounds sound effects more sky boxes more
76:48 - characters even a really nice CTI
76:50 - Studios asset which by the
76:53 - way uh just
76:57 - just in case you need some I said
76:59 - something that I mentioned on the on the
77:01 - other on the last video which oh it's
77:04 - already SI so I got to go see that one
77:06 - uh but yeah uh basically if you if you
77:09 - don't like Cy style then there's right
77:10 - now a really awesome bundle so for 25
77:13 - bucks you can get tons of assets to do
77:15 - all kinds of things personally I really
77:17 - love this one I really every time I see
77:19 - this one makes me want to make a game
77:20 - kind of like 300 because there's one
77:22 - part right here that has some really
77:25 - awesome Spartans really flying around
77:27 - look at this uh right there look at that
77:30 - doesn't not look really awesome so yeah
77:32 - every time I see this pack makes me want
77:33 - to make some kind of already bought it
77:35 - hey I hope you put it to good use
77:37 - because this is it's a really awesome
77:39 - pack really tons of assets and there's a
77:40 - bunch of more stuff for zombies and so
77:42 - on so yeah basically if you want uh free
77:44 - stuff I would recommend you just go onto
77:46 - the UN accur and browse there's a m of
77:49 - free stuff and if you like low poly
77:51 - assets for 25 bucks there's an pretty
77:53 - excellent bundle uh
77:55 - I already have pretty much most of these
77:57 - but if I didn't have yeah I would
77:58 - definitely be picking this up and doing
78:00 - all kinds of prototypes in all of these
78:02 - interesting actually a while ago I we
78:04 - were talking about someone asked about a
78:06 - farming game so yeah this is when there
78:10 - was another bundle this was I don't know
78:12 - like two years ago 22 so yeah two years
78:14 - ago so when this happened I took a
78:16 - bundle like that and I made a bunch of
78:19 - interesting videos so I made an
78:20 - interesting uh RTS using a Sci-Fi pack I
78:23 - made a nice farming Mini game with a
78:25 - farming pack and made a nice Taxi Driver
78:27 - game using the city pack so yeah
78:30 - definitely you can pick up that bundle
78:32 - and then you can watch that video to see
78:34 - all the kinds of things you can build
78:35 - with it so yeah it's a if you want to
78:38 - build some fun prototypes this weekend
78:40 - then yeah hey that sounds like a a great
78:42 - way to use your weekend
78:45 - okay let me just do this okay create a
78:48 - struck let's do one or two more and then
78:51 - yeah I got to got to stop talking for a
78:53 - little bit because my voice already Prem
78:55 - messed
78:57 - up okay create a struct so the goal is
78:59 - to find a struct named World position
79:01 - with in X and Y Fields then Define a
79:03 - field of that type on start create an
79:06 - object of that type with X1 Y2 and
79:08 - assign it to the field okay so let's do
79:11 - exactly that so first Define a struct
79:12 - that is pretty simple so a public struct
79:15 - named World position and now inside it I
79:18 - want a public int X and a public int
79:22 - y why okay then Define a field of this
79:26 - type so World position World position
79:30 - and now over here let's create a brand
79:31 - new object and let's assign it the x = 1
79:36 - and y =
79:40 - 2 yep exact just like that let C use
79:44 - them to make a bunker idea for a game oh
79:46 - that's cool what something like fallout
79:48 - shelter that is a that is a game that
79:50 - I've seen many times and I've wanted to
79:52 - play many times but I still haven't
79:54 - haven't been able to do it but yeah I
79:56 - would love to make a game kind of like
79:57 - Fallout charish so something where it's
79:59 - a side view seeing all kinds of bunkers
80:02 - all kinds of things and being able to uh
80:05 - interact and do all kinds of management
80:06 - and all the things that is a I think
80:08 - that is a fun gen so yeah that's
80:09 - definitely a game that I would like to
80:11 - make that would be would be a fun one
80:13 - okay so Define a struck Define a field
80:16 - and assign it create it like that
80:19 - yep drink ginger tea with honey I've
80:22 - been trying oh okay okay I just
80:26 - messed myself up I didn't know this
80:27 - still had liquid oh
80:29 - boy okay that that wasn't intended oh
80:33 - crap all right anyways doesn't matter uh
80:36 - yeah I've been trying all kinds of te's
80:38 - but honestly it doesn't really help like
80:40 - I drink tea and my voice still gets
80:42 - messed up after one hour of talking so I
80:44 - don't know if that just means that I
80:46 - just need to pretty much train my voice
80:48 - a little bit more I don't know but uh
80:52 - yeah for me whatever I do it does not
80:54 - seem to work um anyways okay let's head
80:57 - on play and see how this works managing
81:00 - full-time job in game development uh
81:02 - that's definitely quite
81:04 - tricky uh I mean doing Game Dev on the
81:07 - side or doing Game Dev uh with kids or
81:10 - so on yeah that definitely becomes quite
81:12 - a bit more more difficult but it can be
81:14 - done I mean for example
81:17 - um where was he oh for example over here
81:20 - Nikki from iHeart gev I mean he makes a
81:23 - ton of really excellent tutorials and he
81:26 - does have a a a uh software engineer job
81:30 - so he does have a normal job and then
81:31 - does video tutorials on the side so we
81:33 - could also do that uh make games instead
81:36 - then there's Dev duck who has been
81:38 - working on his RPG for like 5 years now
81:42 - working alongside a job so technically
81:44 - it can be done but it definitely
81:46 - requires quite a bit more uh managing
81:48 - your own time that is yeah maning is a
81:52 - strong word cling to life yeah it's
81:54 - definitely
81:55 - Game Dev on hard on hard mode trying to
81:57 - do everything at once yeah that is I can
82:01 - definitely feel that uh okay so this one
82:04 - is working where is Danny good question
82:07 - I don't know uh all right so yep this
82:10 - one did work success so let me just
82:12 - write the hint and so on and then yeah I
82:16 - think I'll do one more and then that's
82:18 - it okay so defining struct so remember
82:21 - how structs are very similar to classes
82:25 - just with the struct
82:29 - keyword then Define field of that type
82:34 - just like a class and construct it also
82:38 - just like a
82:39 - class so here you learn how to define a
82:44 - struct this
82:46 - is very similar to a class but remember
82:50 - the one big difference how stru are
82:55 - value types
82:56 - whereas classes are reference
83:01 - types yep that's the one big difference
83:04 - between
83:05 - them and let's complete the
83:08 - exercise do you think it's possible to
83:10 - make an audio editor in
83:13 - unity
83:15 - I audio is really one of the main things
83:19 - that I really don't know much about so
83:22 - I'm definitely not the best person to
83:24 - answer that because I'm not entirely
83:25 - sure what does audio editor mean but
83:28 - yeah I mean in unity you can do all
83:31 - kinds of things with audio clips Unity
83:33 - audio clip you can just see all the
83:36 - functions that it has you can get the
83:38 - channels frequency and so on so yeah I
83:40 - don't know much about uh audio but if
83:44 - you can get the data get the sample data
83:46 - from the audio and you can set the data
83:48 - then I assume if you combine these two
83:50 - you could build some kind of interface
83:51 - where you can connect things uh
83:55 - connecting together in order to be able
83:56 - to make Cuts in order to be able to
83:58 - modify things and so on so yeah
84:00 - technically I do think it is possible
84:01 - and also uh Unity also has a audio mixer
84:07 - so if you want to do some kind of
84:09 - complex audio mixing like I said I'm not
84:11 - an audio expert I've only used the
84:12 - absolute Basics but I do know the audio
84:14 - mixer is very powerful with lots of
84:16 - things so
84:19 - yep are you going to GDC no sadly no
84:23 - it's what it would be fun I would like
84:25 - to but yeah it's uh pretty much on the
84:27 - other side of the world so that makes it
84:29 - for a very expensive trip so yeah sadly
84:32 - sadly no but yeah I won't be at home uh
84:35 - watching the keynote I assume they're
84:38 - going to do some kind of keynote or
84:39 - maybe not actually that's a good
84:41 - question I haven't thought about it
84:43 - until right now but yeah if they do some
84:45 - kind of keynote I will definitely be
84:47 - listening to it I won't be uh watching
84:50 - all the talks if they have any and then
84:52 - doing some kind of uh some kind of
84:54 - summary video so nope sadly not going to
84:57 - be there uh physically but yep I will
84:59 - definitely try try to cover try to do
85:01 - some kind of news on all the kinds of
85:03 - things that they might announce
85:05 - there how's your dogs doing they're
85:08 - sleeping very carefully very peacefully
85:10 - so yeah let them
85:12 - sleep uh
85:16 - okay thought of Hosting your own
85:18 - Community game Jam I have but then I
85:20 - remember just how much effort it takes
85:22 - to organize that whole thing and then I
85:24 - remember okay that would be a fun idea
85:26 - but I'm already insanely busy with work
85:28 - so adding a really insane event on top
85:31 - that would be quite tricky so definitely
85:32 - something that I would like to make at
85:34 - some point but yeah figuring out all the
85:37 - logistics to make that work and make it
85:38 - work properly that is quite difficult so
85:41 - maybe someday but definitely not
85:43 - planning anytime soon okay let me do one
85:45 - more
85:47 - okay so lecture on class intermediate
85:50 - basic inheritance so the goal is to find
85:52 - a base unit class with a get speed
85:53 - function that should return three then
85:55 - Define an enemy class that inherits from
85:57 - unity and then Define a player class
85:59 - that inherits from unit and should
86:01 - override the get speed to return five
86:04 - okay so let's do exactly that so this is
86:06 - pretty simple so Define a unit class
86:08 - okay then it should have an INT get
86:11 - speed and by default this one should
86:14 - return three okay then Define a enemy
86:19 - class and this one should inherit from
86:22 - unit and just like this nothing else
86:24 - and then Define a player class and this
86:27 - one also inherits from unit except for
86:30 - this one this one needs to override so
86:33 - this one needs to be marked as
86:35 - virtual so for this one uh let's
86:39 - override override the get speed function
86:41 - and this one should return
86:44 - five okay that's it pretty simple so
86:47 - this exercise teaches you about
86:50 - inheritance uh let's run and see if it
86:52 - does work let's see
86:56 - okay it did find the unit class the
86:58 - enemy class the player class the enemy
87:00 - does inherit does inherit it did find it
87:02 - calling it on Unity get that and he got
87:04 - that that is really cool that worked all
87:08 - right nice inheritance is always a a
87:10 - tricky thing it has many ways to go
87:12 - wrong but when it goes right it's
87:14 - actually quite fun okay so that's this
87:17 - one right basic inheritance so the hint
87:21 - remember the syntax for
87:25 - inheritance first you define a base
87:28 - class
87:31 - then Define the uh what do I call
87:35 - it oh boy what is the name the extended
87:38 - class no then Define the other classes
87:41 - and extend the base class with con base
87:49 - class in order to provide a different
87:53 - implement mentation for some
87:56 - function the base function needs to be
88:00 - marked
88:02 - as override and no not override virtual
88:06 - as virtual and the
88:11 - uh uh in the oh what do you call it
88:14 - extended function I don't know extended
88:16 - function needs to be marked as uh
88:21 - override just over here needs like
88:25 - that so here you'll learn how to
88:29 - implement basic inheritance where you
88:32 - have a base class and then classes that
88:36 - extend That Base Class and overwrite
88:40 - some logic to
88:42 - provide a different
88:45 - implementation
88:49 - yep
88:51 - okay that's it
89:01 - how are you checking the code are you
89:03 - using reflection or checking the code
89:04 - Itself by reading R text the answer is
89:06 - both it depends on the on the exercise
89:08 - some of them uh do uh read the text
89:11 - itself as if it's uh just basic text but
89:14 - yeah most of it is where's
89:16 - the right here but most of it is
89:19 - actually indeed by using all kinds of
89:21 - reflection so for example on this one
89:23 - the exercise the go on the exercise to
89:24 - define a unit uh class and Define an
89:27 - enemy class that extends unit and a
89:29 - player class that extends it and has
89:30 - this function so yep over here I'm using
89:32 - all kinds of reflection so going into
89:35 - the type of exercise to get the N type
89:37 - of type unit so I get the unit type the
89:39 - enemy type and the player type and then
89:40 - just checks if all of those types
89:42 - actually exist and if it does find them
89:44 - then all of this is
89:47 - correct then it checks the if the enemy
89:50 - type is a subass of unit type if so then
89:53 - yep it means that the enemy correctly
89:54 - inherits then same thing for the player
89:56 - type check that it does inherit then
89:58 - using the get method in order to get the
90:01 - function called get speed so if it finds
90:03 - that one then this one is not going to
90:05 - be null so it does find that one and
90:07 - then checks the return time for that
90:08 - method and over here the complex thing
90:11 - about having to create an instance of a
90:12 - unit object learning how to do this was
90:14 - actually quite tricky I must say I had
90:16 - not used reflection as much as I had to
90:19 - do by making this score so this was a a
90:21 - fun learning challenge for me so having
90:23 - to create a brand new object in order to
90:25 - invoke it pass in an object reference
90:26 - and so on in order to get the return
90:28 - type so passing in a unit object and
90:30 - then player object calling it on that
90:32 - and so on so yeah so yeah basically it's
90:35 - all reflection it's all actually a
90:37 - pretty fun thing learning how to do all
90:39 - this how to do reflection to build all
90:40 - these interactive exercise that was
90:42 - actually quite an interesting
90:45 - thing and yeah in the end it does work
90:48 - great uh okay what time is it yeah 6:15
90:52 - okay so I think that's going to that's
90:54 - going to be it let me just go and okay
90:58 - so that one is done all right
91:02 - good
91:03 - okay I do want to learn how to make a
91:06 - pinball game that is physics based in
91:07 - colliders oh that's that sounds
91:09 - interesting although physics is usually
91:12 - a little bit of a headache so I wish you
91:13 - the best of luck with that because yeah
91:15 - making a game where the game design
91:18 - relies on physics that is always always
91:21 - has quite a lot of headaches so that is
91:23 - always quite tricking but yeah
91:24 - definitely best of luck with
91:26 - that
91:29 - uh you be interested in doing how to
91:31 - make a functional file manager inside
91:33 - Unity wow that's a tricky one I mean
91:36 - it's not tricky it's actually relatively
91:38 - simple but it is very laborious let's
91:40 - say in order to be able to to do that I
91:42 - mean takes all kinds of scroll bars
91:45 - learning how to populate it but
91:47 - populating it's actually relatively
91:49 - simple but yeah it's um it's actually
91:52 - it's one of those things that is simple
91:53 - to do but requires a ton of work so yeah
91:55 - it would be a fun challenge so if you
91:58 - have some time definitely do that but if
91:59 - not I'm pretty sure you can find some
92:02 - kind of file manager on the
92:05 - aaur uh well actually no wow that's oh
92:09 - cuz it's on free okay okay yeah I
92:12 - thought it was a little bit strange how
92:13 - didn't have any but having a file dialog
92:15 - file manager and so on so yeah yeah but
92:17 - if you want to do a fun programming
92:19 - challenge yeah I would definitely
92:20 - encourage you to do that learn how to
92:21 - make a file manager It's relatively
92:23 - straightforward and actually pretty
92:26 - pretty fun to do should be nice so
92:31 - yeah C course is really helpful for me
92:34 - watching from India that's cool that's
92:36 - awesome definitely go ahead and watch it
92:37 - take your time and go through it step by
92:40 - step do you recommend building a highend
92:42 - PC for game development love your
92:43 - channel oh nice uh the answer is for PC
92:47 - specs it really depends on what kinds of
92:48 - games you're making so if you're making
92:50 - something like Flappy Bird you really
92:52 - just need the Bare Bones Basics you
92:53 - really don't need anything special but
92:55 - if you're trying to make something like
92:56 - pubg you definitely need something very
92:58 - intense so yeah the specs really depend
93:00 - on what kinds of games you're trying to
93:02 - make but if you're
93:03 - making uh quote unquote simple games
93:06 - like the kinds of games that I make then
93:09 - yeah pretty much anything doesn't need
93:11 - to be super high-end especially not a
93:13 - super high-end graphics card unless of
93:14 - course you're going for that but for me
93:16 - usually my games are very simple on the
93:18 - graphics ront so yeah for me usually
93:20 - don't really need a highend PC just
93:22 - something basic work actually quite
93:27 - great but your turn-based strategy
93:29 - course Sha of course will be cheaper or
93:31 - some discounts yeah over time I will uh
93:33 - increase discounts I mean right now I'm
93:35 - still focused on really polishing up the
93:38 - the rest of the intermediate and I still
93:39 - got to build the entire Advance section
93:41 - but yeah over time I will be doing more
93:43 - and more discounts on the course so yeah
93:46 - and either way if you can't afford
93:48 - definitely check out the uh free uh
93:52 - video on the inner C course and on that
93:56 - one I talked about my plan was if the
93:58 - course sounds 100 copies I'm going to
94:00 - make the intermediate version for free
94:01 - within a month and it has already passed
94:03 - that so within next month what time is
94:05 - it we're in mid-march so yeah by uh the
94:08 - beginning of April you can look forward
94:10 - to the intermediate uh section of the
94:13 - course to be free over here on YouTube
94:14 - so definitely stay tuned for that and
94:17 - yeah so basically even if you can afford
94:18 - it I want to make sure you can still
94:19 - learn so yep that is why you've got this
94:21 - one then stay tuned for the next one
94:24 - all right so I think that's going
94:26 - to I think that's going to be it so this
94:29 - one I do think this one work great
94:32 - so yeah it's already 620 so
94:37 - yeah any y the code is working here
94:40 - completed it does say the correct
94:42 - message it does have the hints and so on
94:44 - all right so yeah I think that's that's
94:46 - going to be it that should be like that
94:49 - like I said I would like to make live
94:51 - streams a bit more regularly just make
94:54 - them uh about 1 hour cuz yeah my voice
94:57 - is already messed up I definitely can't
94:59 - go any longer so yeah that's going to be
95:01 - it let me just complete the exercise and
95:03 - everything over here is done so yeah
95:06 - definitely and uh like I was saying a
95:07 - while ago definitely go watch the video
95:09 - which is actually out right now so the
95:11 - video on don't be afraid do just in case
95:13 - you're you're uh you're seeing some news
95:16 - on Twitter and you're a little bit
95:18 - scared definitely go watch this video
95:19 - which should be yeah it was published 20
95:21 - minutes ago so go watch that and don't
95:23 - worry too much about it but anyways okay
95:25 - so that's going to be it for me let me
95:27 - just go on turn on the background let me
95:31 - put where's my OBS there's my OBS all
95:35 - right so yeah so that's it for me yeah
95:36 - thank you so much for joining me and I
95:38 - hope you have a great weekend all right
95:40 - so bye everyone see you next time bye
95:42 - thank you
95:52 - bye
96:22 - e
96:52 - e
97:20 - e

Cleaned transcript:

for for oh it's not all right all right hey everyone how's it going hope you're having a great Friday thanks for being here all right all right all right can you change timing for next time uh sure I'd like to try that although I got to be honest I still have a big issues with my voice in that my voice doesn't really work in the morning for some reason when I wake up my voice is all messed up I got to I got to go to the gym walk my dogs do something in order for my voice to work so yeah for me life stream in the morning doesn't quite work so that's why I always do it around this time which is pretty much afternoon around here so right now it's 445 p.m. around here so yeah that's uh I'd like to try it out should be uh a fun interesting experiment trying out doing a a live stream as soon as I wake up maybe about 6 a.m. that that could be fun but yeah I'm not sure my my voice would work for that s I'm learning Game Dev this year and I couldn't have made progress I have made without your VI oh that's awesome thank you hey I'm I'm glad my videos have helped you yeah that's awesome congrats and keep on learning all right okay so basically I got a little bit of work to do so I figured I might as well do some work on the live stream so I've got my my companion project for my C course and I've got a bunch of exercises and there are a bunch that are still missing the hint text and the completed text so that's basically the text that shows up when you need a hint with some kind of exercise and then the text that shows up when you finally complete it so yep got a write a bunch of this so that's pretty much what I'm going to do while also trying to answer some of your questions in chat as soon as I I can so yep that's pretty much the goal here all right make a t an attachment system similar to escape from tarov I'm not sure how if there's anything specific to escape from tarov but I did make a weapon attachment system so if you want you can go look at this one you can even download the project files and just use this one as is so I assume that I mean basically lets you uh Define multiple parts and then connect multiple Parts together in specific points so yeah if you have the right asset pack with all the assets all perfectly prepared it's actually relatively simple to make a system like that and if you have enough enough parts for your weapons you can actually get quite a lot of variety so that's actually something really awesome if you have the asset to do it so yeah so yeah I don't know if it's form Taro as something specific but if not then yeah for the basics that should probably work think about making a video on procedural generating one thing that I've always want to research I keep forgetting the name what's it called the thing where it falls down it it collapses into oh God what do you call it wave function collapse that's it that's the the one method that I've that I've seen about and studied about it a little bit but I'd like to really research it probably because it seems it's something really simple but also really awesome like you define a bunch of basic rules and basically just collapses each node into one specific State and when you do that to the entire grid to the entire world it generates something really awesome so yeah that is definitely a topic that has been on my todo list for a very long time so yeah hopefully one day hopefully uh make course on real engine uh not really I mean the reason why I can make courses teaching knowledge that I know is because it's knowledge that I do know because I've been using Unity for over 10 years I've made nine games with it so it's something that I'm very confident with my own knowledge that is why I feel confident enough to teach you whereas in real I've never used in real so yeah I'm definitely not the right person to teach about that uh okay so let me try doing this so let me first do the exercise and then write the hint right the complete the text and yep so on this one first of all I'm on lecture number five on the intermediate this is the lecture on properties oh do I have an exercise open yeah probably probably do it's probably not that one oh yeah he was still checking the other one okay want to ask do you think it's possible to create a game similar to Wipeout yes I mean I I have haven't played but isn't that the boat game if so then you could even just start from the the uh Unity boat attack demo so yeah I mean Unity made this this demo quite a long time ago which I which I believe is pretty close to that game so yep you can definitely just take this take this project as a base build upon it and build something like that so you got a bunch of boats a bunch of customization this project also has that really nice water Shader so yeah for making a game like that this would be a really great start Point antigravity Wipeout okay I'm not sure what that means but gravity gun that's fun I'd actually like to make that that that would be a a fun little uh prototype mechanic it would be pretty fun to do uh okay so let me try so on this exercise the goal is create a simple Auto Implement property uh string player name okay so here the goal is to Define that so that is pretty simple so let's go public uh uh actually don't remember if at this point oh yeah this is on the intermediate so I have thought about public and private okay so this meant to return string and call player name then has a get and a set yep that's it that's the property just like that love kitchen cars oh that's awesome so much for making all right yeah thanks so much for going through it I I hope you'll learn the lot from it that was a that was a fun one to work on soelling for properties found the property property is auto Implement so success all right so yeah this exercise is actually quite simple so let me go up there and now I just got to pretty much write the hint Tex okay so the hint remember the Syntax for how an auto implemented property is made how it has no specific code for the get and the set so basically this is the hint that shows up when you when you go through an exercise and you click on show hint basically it shows up that one cl show solution it shows that one click on apply solution and it applies that solution so yep that's pretty much it so basically just got to write a ton of this text for a ton of the things what is your favorite course you've made wow that's a really tricky question I have to say I mean right now my latest one C course I really love this one but I love this one specifically because all programming so it's really nice for that but at the same time I also really love the kitchen chaos course I love how how many people that course has helped I mean that is by far the most successful video on on my channel so I really love how how that course reached so many people and the comments have all been super positive then I also really love my turnbased strategy course that one was also really awesome I I love games like XCOM so being able to build that one from scratch step by step that was really awesome that was really cool so yeah sorry that's kind of that's kind of a a tough question to to answer because out of many of the courses that I that I've made for many different reasons between them so I can't really pick a favorite one uh okay so remember the Syntax for how automl property is made yep that's it no specific code completed so in this exercise you'll learn how to define how to define how to implement a auto or no implemented property how to define a is it a or N I never know that but yeah Define autom implemented property this a great way when you don't need any specific logic specific custom logic so basally Auto auto implemented properties really awesome really easy just to find the get in the set and yeah pretty much that that works although honestly for me personally I normally the only thing that I use this for is when I'm trying to make the Singleton pattern so I just Define some kind of instense with a public yet in a private set that's pretty much the only way the only time in which I use property this is actually really really interesting topic because I know a lot of people like to use them quite a lot but me personally I never like how the fact that properties uh look like uh look like variables but AC can like functions that's pretty much it how it simultaneously stores data although in reality it doesn't this one is just Auto implement but it kind of stores thata and at the same time runs some logic in order to get ins set that data so for me I find that needlessly confusing so that is why I personally I prefer having just basic field just basic variables and then having get and set functions I prefer that quite quite a bit more so yeah I use private set over protected because usually I only want to if I'm doing some kind of Singleton instance for that usually I want this class I don't want any extended class to be able to assign this I only want this one to set itself so yeah usually for that just go with private instead of protected huge fan of your channel nice I'm making a course about procedural animation in unity do you have any advice about how to do a good course because I'm new to this you mean how to make a course I mean my best advice is do it more than once that's that's pretty much the best basically for all the course that I've made what you see in the final video is basically after I've done the course about three times so the first time I first do a prototype just doing it by myself no camera no recording no nothing just do it by myself in order to figure out what is the rough structure of what I'm trying to build so that's a first time just a quick andary prototype getting all the elements then the second time I try to write start writing the actual course script and try to write okay step by step I'm going to do this this this and this and then after that after I've written the entire script then I go through the course the second time at that second time I'm trying to follow step by step and at the same time correcting all the all the steps in the script text and at the same time after I finish that one then the third time that is the actual time in which I finally press the record button start recording things and pretty much everything so yeah basically every course of mine that you see what you see in the final video is basically at least the third time that I'm I'm going through the entire thing so yeah that is my best advice don't don't assume that the first thing you record is going to be perfect because chances are it's really not going to be so yeah just get into the habit of doing it multiple times and oh crap I shouldn't do this um and yeah get in the habit of doing it multiple times and the more you do it the easier it becomes okay so let me just uh all right so yeah so this one is working it's done completed so the hint is done let's complete the exercise and move on to the next one okay now also got a nice cup of tea set of my usual water just trying to see if it helps my voice cuz for me my voice always gets messed up after about 1 hour so let's see if this one helps on this live stream so far I'm feeling pretty good I am banana okay all right nice comment uh okay so lecture on properties what's the next one where am I properties multidimensional Rays that's a fun thing okay so on this one the goal is Define and create a 2d array so Define a 2d array of inss with three of length on the First Dimension and four in the second dimension then set the value on index 02 to 56 return the array from the function okay let's do that one love from Portugal hey nice hey thanks for being here thank for free course yeah that's cool turn on making a farming game like Farmville actually I uh I don't remember did I make the uh cuz I I did do a quick farming game once yeah on this one when there was a really awesome Humble Bundle and I made some so if you want to see the rough idea for how I would build it that's it but yeah farming game is actually something that I've wanted to do for quite a while so where's the that's the RTS game the farming game yeah basically I would love to make a a basically complete tutorial SL mini course on how to make a game come like this it's actually relatively simple I mean if you know about interactions so for example if you watch my NPC interact video if you watch that with a little bit of setup you can build something pretty much similar to this it's actually not that difficult you just make a little grid set it up on the floor then check how to how to interact how to get the mouse position in order to find the point in the grid then you place some kind of prefab that prefab has some basic logic in order for the vegetable to grow and so on so yeah that is actually I don't know for some reason personally I like farming games I think they're they're pretty fun so yeah I'd love to do a more detailed detailed tutorial on making something like this that would be that would be interesting s daily routine video got the question what helps you stay motivated uh have you limited yourself to news and political events uh sort of I don't know I don't don't necessarily pay too much attention but I'm not sure though those two things are linked at least not in my not in my case I don't know I mean staying motivated it's always for me when when it comes to motivation the the phrase that always jumps to mind is selfdiscipline over motivation that's pretty much it because motivation I find it comes and go it's not really uh reliable to rely on that so basically for me I try not rely on that I try to have a list of things that I got to do and then just try to do them one by one going through like that so basically instead of relying on feeling like I because I mean to be honest doing live streams this is something that is still very unnatural to me so right now I am pretty much forcing myself to be here doing this live stream and the reason I'm forcing myself is because well I want to do it I want to be able to do it so yeah I I got to do it whether I feel like it or not I'm trying to force myself to try to gain this skill so that's kind of it so yeah in general I mean do something you like and that way it becomes a little bit easier to do it and then secondly just go do it just go do it I mean it sounds overly simplistic I wish I had some some better more practical actionable advice but yeah it's really uh that's the best I've got uh okay so let's do this one so Define and create an array with size 34 that I mentioned the top of the array probably not but say with number 56 Let's do an INT array this meant to be a twodimensional array so so 2D no I can't do int array 2D equals a new int array and it's meant to have size three and four and then on index 0 and two it is meant to have the number 56 then let's return the int array to D okay love from India hey nice thanks for being here uh okay so that should be the exercise so basally just defining an array of hint with three four so just a basic multidimensional array let's run test and see if it is working so it's calling it checking the First Dimension it is correct second one it is correct checking the value it is correct so everything is correct okay so that's the exercise now let's write the hint and the completed one so where is this this one that's on lecture 206 so that's this one right here Define a TOD array okay so uh remember the difference between multidimensional arrays and arrays of arrays uh create a 2d multidimensional array with the correct Dimension properties then access the index like in a normal array and set the new value so that should be a nice hint basically the usual problem that people have with multidimensional arrays is the fact that it's it's different between making a 2d array versus an array of arrays so that is always something that has to be uh done differently and then complete text here you learn how to define a multidimensional array this is a really useful data type when you have something like a grid you want to represent and remember how you can have as many dimensions as you want all right so over here show the hint yeah remember the difference between multidimensional and arrays of arrays and yep that should that should work okay nice so let's go complete the exercise that's cool can I make a tutorial about a Reload animation I'm I'm really not the best channel to talk about animation because I am not an animator animator and programmer those are two completely different things so yeah uh I'm pretty sure there are a bunch of nice channels on YouTube teaching about animation probably with blender if you find for blender animation tutorial I'm sure you will find a ton of stuff so yeah then when it comes to Unity the things are actually uh the logic is pretty simple you just Define some kind of trigger in order to play the animation to go from idle into reload just go into that one when the reload animation finishes go back into the animal animation so yeah in terms of logic implementing a Reload animation is pretty simple the complexity is really just actually making the animation so you need to be an animator for that and I am not the right person to to teach that okay so let's go on to the next one lecture on nested loops and it's all about write a basic nested Loop so write a basic nested Loop for the outer loop runs three times and the inner loop runs two times call the exercise validate function and passing the current I and J for every iteration of the inner loop okay so simple uh there's no mention of the type okay so like that should be simple is there any chance your current course coming to UD me any time nope not really because UD me has some very strict rules about courses with free versions so for example right now I publish the beginner uh version for free and that one is about 4 hours whereas UD me limits it to about an hour or 2 hours something like that so nope I I'm not allowed to do that yud me really does not like things that are both paid and free at the same time so nope sorry that's not a possibility okay so let's write the loops the outer loop should run three times and inner loop should run two times so 4 in I equals let's go what is it three three * I ++ and for in j j under is it two times j++ and then inside call the exercise validate function passing in inj okay I think that's pretty much it so let's see hope for a small challenge I'm already doing a challenge but sure uh sleeping time is it I guess it's the fun thing about different time zones it's for me right now it's afternoon but yeah on a different part of the world I'm sure it's sleeping time uh okay so yeah waiting for the function to call it got all the indexes iteration six 3 two yep so exercise completed successfully so basically this one is on teaching all about nested loops and how the loop time so this one is on uh 207 so let me find over here exercise 207 write the as Loop okay so for a hint you can use any Loop type but for this case a for Loop is probably the simplest uh be careful about how many times you run the outer and inner Loops yep that's pretty much it this one is pretty simple about how to do that so in this exercise you'll learn how to to make a nested Loop a loop within another loop and is this one before the uh yep okay so this is especially useful when working with two the arrays or arrays of arrays so you can cycle through every single element yep n and Loops nice try the new Unity 6000 it's kind of funny how how they Define that how they said the the version is version 6000 so that's going to be interesting I mean it's going to be fun in let's say four years when they get to Unity version 10 so it's going to be version 10,000 that's going to be funny but yeah I guess they have a bunch of a bunch of logic where it assumes that the version number has to have three or four digits so that's why they went to 6,000 instead of just six so that is going to be it's going to be it's going to be an interesting thing later on this year when they finally upgrade the version to Unity 6 and uh yeah that should be fun have a Goku mug yeah I do it's really nice where's my my camera hey it's pretty cool got this one got another one with Vegeta so yeah always always fun uh would you say it's worth it learn C outside of an engine to learn the skills further I made a 2d platform but feel I relied too much on the engine uh my question to you is what why do you feel you relied on the engine and why do you feel that is a negative thing that is that is kind of thing I mean usually when it comes to using an engine versus not using an engine that is really a question you have to ask yourself do you want to make a game or do you want to make a game engine cuz usually for most people you can't really do both at the same time you either focus on one or focus on the other make an engine or make game so so if you want to make games focus on making games use everything the engine has available to help you that's the entire Point behind an engine is to make game making super easy or uh as easy as it can be so yeah definitely use the tools at your disposal in order to make whatever game you're trying to make but of course if you're trying to do programming for fun as kind of a challenge then yeah maybe try making your own engine just for fun just learn about it but do know that in most cases unless you are super gifted chances are you probably can't make a game and nine at the same time uh let's go and complete the exercise let me just this is the window is a little bit odd why is it odd I don't know like this okay oh boy now I now I lost myself in the chat is there a chance of motion matching coming to Unity I'm not sure what is motion matching but just the other day I was doing my my uh top 10 new systems and tools uh list and I I saw one that was really interesting oh God yeah now now finding it would be quite tricky but uh oh God cuz yeah I saw one that looked really interesting one oh boy because I got a a ton of things so that makes it quite a bit tricky in order to find it so how was it is this one oh know it's called motion warping yeah this one seemed like a really fascinating very interesting asset so now cookies yes I accept cookies so yeah I don't know specifically what is motion matching what does it mean but yeah there's a bunch of there's a bunch of really impressive animation aets uh on the aaur that apparently are really good for combining multiple animations to do all kinds of things those are really interesting this is one thing that usually for me uh in terms of Animation I really just stick with the Bare Bones the absolute Basics so I've never touched really one of these complex animation controller type things but yeah that is definitely something that I I would love to do I mean I would love to one day do some kind of tutorial SL mini course on making a game kind of like Assassin's Creed so something very much focused on animations and lcking up different animations ling up animation for some kind of attack where you got an attacker and Defender ling up both of those so yeah that is one of the things that I very much would like to do someday because yeah because I do know there are tons of these assets so I I assume the reason why there are assets because it's usually really complicated to do but with these ass should be relatively simle to do so that should be pretty fun that's that allowed me to code and learn C at the same time oh really are you talking about one of those hot reload uh assets those are also really really nice really fun uh that is one of the one of the video topics that I would love to start doing again uh is pretty much doing more asset reviews because there are so many awesome so many useful assets on the store but so many of them are really tricky to to use so I really enjoy the the videos that I've made it's a visual script tool that converts to C oh that's interesting yeah converting from visual scri that was the goal behind bone 2.0 before it eventually got killed or something so yeah that was a that was an that was interesting how they were going for bone 2.0 in order to do some interesting things but apparently pulled back I haven't touched visual visual scripting in a while I wonder how much it has progressed in the past few months it should be interesting okay so to go on this exercise Implement a simple recursive function oh I got to say I really dislike recursion I really just like it but I do know that some people especially people who are into math really like recursion so that why I covered it I I have a lecture on recursion over here in my course but yeah personally I really dis like it always it always makes me more confused needlessly confused so yeah personally for me yeah I'm definitely not into recursion but y it is it is something I mean if you if you like it if you like math and recursion can definitely be a nice thing okay so let's make a recursive function so do I return void I think so cursive function now in order to call it multiple times let's just store an i variable okay now see that's the thing if I'm doing a a for Loop where I call this three times that's it's pretty simple I just write it automatically I don't even have to think about it but in order to do this I really got to think so okay let me think so if I is zero if so then I'm just going to return and if not then I'm going to call recursive function with I minus minus is this it I think that is it okay I think that is it so it pass in with three and if it is above that it goes I minus minus it passes in again okay so I think it's like this but again recursion always confus me I never know 100% if it is correct about proced M generation will be fun yep sure one day oh boy yep there you go I just messed it up stack Overflow uh why did I uh isn't oh boy recursion always always drives me crazy yeah why is it a stack overflow okay now I'm a little bit confused as to why this one throws a stack Overflow because it should be isn't the ey going down am I crazy so let's see it talk about how to do proper research and develop When developing mechanics uh I don't know play play similar games that have similar mechanics and if you're trying to talk about oh boy I think I just broke Unity that's not nice uh if you're talking about research um yeah definitely play similar games that have similar oh Jesus everything got messed up okay stop playing stop getting all messed up oh Jesus where's my I can't ah I can't find it now sorry I got to hide the characters just so I can move it go up there why is it on three is it always calling the oh crap that's not it that one uh yeah but basically for research just play similar games that have similar mechanics can you please not spam in chat I'm trying to do something trying to answer things so please uh uh anyway so yeah in order to do uh research mechanics yeah play similar games that have similar mechanics and then try to do that I know that doesn't make sense uh yeah basically play similar games that have similar mechanics and uh yeah then for making it try making it piece by piece so start making something really simple so if you want to do some kind of hook shock mechanic first figure out how do I find where am I hitting the the mouse position so first find that then find out okay how do I push the player towards that how do I make my character control do that then figure out okay what happens when the player touches that so really research comes from seeing all kinds of games that do similar mechanics and figuring out analyzing how those games Implement those mechanics and then how to actually develop them that comes from learning how to do things step by step trying to do all kinds of things uh oh is it because of that actually makes no since okay recursion really drives me crazy my brain isn't working yeah I think I might as might as well fix it but that doesn't that makes no sense yeah I think yeah actually never mind yeah now I know why why it makes no sense ah God damn it this is why I hit recursion because that's it doing I minus minus breaks doing I minus one this works cuz the issue is that it was decrementing the variable itself but it was decrementing like before it calls the function with the parameters or something oh boy yeah or doing I minus minus that is always oh boy so this is a live example of why oh no and now my Unity just broke so that's not nice oh boy yeah turns out if you have a stack Overflow amount of amount of messages in the console turns out everything break so yeah that is really not nice all right and why is my my overlay is also a bit strange isn't it I don't know it feels like sometimes messages show up and sometimes they don't let me just put that one like that uh all right so back in here am I back on the same place I think so that's not the Loop oh boy cuz now I broke my I broke my exercise thing but am I on the correct exercise scene I don't even know yeah turns out if Unity breaks in the middle that kind of messes things up so okay let me just where was I I was on one of these on right rightness and loop no simple recursion yeah cu the did it save okay it did save that so at least that that's good but yeah okay let me just TR Ling see if now it does work got Z iteration expect oh right because I forgot to actually call it so let me just exercise validate and yeah okay but yeah for some reason my I think my overlay might have died which is a bit annoying because now I can only see that messages on the side I got a iteration one two and three I hope that works so yeah all right how do I find if I'm doing clean coding or not I mean it starts by making an effort in order to write good clean code and then it comes from your own experience of being able to identify what is good code what is bad code and being able to uh as you learn that you'll learn quite a bit more on what is good code what is bad code so over time you become a lot better at being able to see code and being able to identify am I doing this right or should I do this some other way that would work quite a bit better so yeah that really comes with the experience it's possible to learn how to code things in unity the correct way without working at a studio sure yeah I mean you can definitely learn Unity you can learn all kinds of things just by yourself I mean nowadays the amount of information that you have available is really quite a massive amount so that is something that is really awesome uh so yeah although at the same time every studio is going to have different things different ways of working let me just change this because I think this was broken I don't know why uh but yeah every studio is going to have different things so regardless of how much you learn by yourself once you join some kind of Studio you're still going to need to oh boy now it's sprinting all the messages that's messed up uh yeah once you join the studio then you're going to have to adapt to whatever way they they work on that studio whatever things they do okay let me just okay so go so recursion is all about a function that calls itself so in order to define a limit you need to pass in all that data in the function parameters and and do some kind of empty return When you want the function to end when you want the function Conant to end yep and now the complete text so here you learn how to do simple recursion if you are a uh if you are more of a math person then doing recursion might be simpler than is my my overlay is all messed up might be similar than doing Loops although personally I find a lot more confusing so I only tend to to use Loops all right yep so recursion definitely a complex topic what is recursion recursion is when a function calls itself so it's basically what I've got over here I've got a recursive function and note how this function is calling itself and if it calls itself too many times it leads to a sack overflow which leads to a lot of messed up errors a lot of problems which as you saw eventually crashed my Unity so when working with recursion you got to be very careful about your end conditions like over here the mistake that I had was instead of doing IUS one I was doing IUS minus which in turn was apparently calling this function with the previous value of I and only updating the local variable after calling it so that is why this thing was all messed up and doing I minus one that does fix it so yep that is recursion and except by doing that it also messed up this uh this part of the can I modify it nope oh boy so that really messed things up oh no oh God okay oh no I just am I still alive is everything still working cuz yeah my overlay just crashed and I don't even know did the live stream go down did it go down okay no OBS seems to be working but yeah oh boy yeah so I got to let me just I got to fix out you are still alive okay thank you because yeah that really I don't know what happened with the uh live chat overlay because it's the first time that it's got really messed up to the point where it pretty much broke so I basally need to manually modify this one thing so what time is it like that all right so let me just modify this and see if I can get it working again so like this and today is that okay so let's see if like this the overl is working again okay I think it might be working again so I just need to make another build and hopefully it should be working uh right so why is this going into the oh right because I created The Nest Loop and then did that and then that happened okay so yeah the n and loop and the other one is hopefully now working so let me just start this up put it on this Monitor and hopefully like this it is working let me do a message myself and see if it shows up okay my message does show up okay so I still don't know what exactly went wrong but anyways it should be working now so that should be good okay so where was I I was on recursion so I did that one I did write the one on recursion simple recursion I did write the hint write the completed text so let's go into next one so the dictionary let's go onto this exercise okay how do you secure your data when when you are on social media I am not sure what you mean by secure your data I want to create similar Condy growth in a similar field are you talking about people copying things I mean usually you can't really uh uh prevent that so yeah I'm not entirely sure what you mean I mean technically right now anyone can take videos from my channel and publish them on their channel so technically there's really not much I I can do about that the only thing I can do that is be right here continue making content because if someone is copying me they can only do the content that I've already done so they can't do all the things that I'm going to do in the future so they can technically copy my content but they can't really copy my brain so yeah so yeah I'm not entirely sure what you mean by by that but yeah hey in and out thanks thanks for the Super Chat when was the last time you wrote A C program outside Unity do you like WPF I always forget what what that one stands for but uh it's actually been a while I mean I do I've written some what was the last thing that I did I remember when I was like looking to buy something I don't remember what I was going to buy but I basically wrote a program in order to scrape a uh a bunch of websites in order to find the price for some kind of item something like that so I did something where I had some kind of overlay that ran every time I open up my desktop it ran it would check the price for something and then give me a message if it was under something I don't remember what I used it for but it was yeah I don't remember but something like that and uh another one that I did really interesting a very long time ago that was uh like I don't know like seven years ago was I made a bunch of programs that would basically uh scrape the homepage of steam in order to find all the steam new releases and find out how many reviews they had in order to find what games were're finding success and coming out every day so again that was something that I made that run on every single uh every single time that I turned on my PC it would run that program and it would show me some kind of window Okay so yesterday uh these three games came out which had more than 10 reviews then I could click on them inspect them and so on so yeah there was a bunch of time in which I was really really focusing really hard on learning what exactly works on on seam what doesn't work and at that point I built that little program in order to help me research and that was actually surpris it was surprisingly easy to make and quite valuable in order to learn how seam Works what kinds of games were coming out so yeah that was actually pretty interesting but but yeah usually when I make things uh in C outside of unity usually when I make that I basically just make them super basic console apps usually I don't do anything with kind of uh visuals so it's been a very long time since I've used like Wind forms and stuff like that usually I just make the most usually when I do things outside of unity I just want some kind of logic to run automatically if I do want some visuals then I will probably use Unity as opposed to building something like wind form so yeah whether you want visual or not that's usually how I handle things okay okay so let me try doing this what was the goal of this exercise so the goal create dictionary of type resource type int and set goal to five with to 12 call exerise valid and pass in the dictionary okay so over here let's create a brand new dictionary so we want to create dictionary of type with the key resource type and the other one is meant to be an INT so uh this is going to be resource amount dictionary something like this so let's what that's not wait for frame that's strange um is that it just creating it oh no and then set gold to five and wood to 12 so over here let's go and set the on resource tye. gold set that one to five and for wood set that one to 12 then call the exercise validate and pass in the resource amount dictionary okay I think that is it I'm from India or my game development Mentor I'm 14 years old oh that's awesome that's really cool I mean I started learning programming by myself alone when I was 10 years old so yeah if you're starting at 14 you're starting really great really nice and young so yeah definitely take advantage of all the videos on YouTube on tutorials all the free course all the kind of things and yeah if you are active in your own Learning Journey that early then yeah by the time you're 1820 you're going to be very knowledgeable very successful so yeah I definitely wish you the best of luck continue on learning okay waiting for dictionary function was called gold does F5 wood does F12 and yep that is correctly successful so y that's the exercise on how to define a dictionary so let's do this one write the hint and text okay so for this one so so what's a good hint uh remember the Syntax for how to define a dictionary with key and uh value then remember how it dictionary is an object which needs to be constructed with new dictionary is an object needs to be constructed with new and in order to set uh values on certain Keys you access it like a array like an array yep that should be good enough in order to guide it I think the biggest barrier on my gim def career is Art yeah that is definitely the exact same thing for me as well so yeah that is why for me uh using the AET swur has been really awesome I definitely wish I had the AET swur back when I was a kid I mean because I was making games that were relatively ugly steam power.com uh all because I really could not draw anything so if I check out my first game my Survivor Squad visually it definitely looks very much subpar I mean to be honest I'm very proud of what I managed to achieve given my extremely limited art skills I'm really happy with the the inl characters I do think those came out quite nice I mean I drew all that myself which I mean for an artist this is not impressive but for myself yeah I'm definitely very happy with how I managed to build that but yeah look at how those those uh pieces of glass the glass itself is extremely simple the uh sentry guns I think they look really great but they are also extremely simple extremely basic they're the the weapons lights all the things and yeah basically this oh boy the hand for that little smoker Zombie thing yeah that was uh it's been a long time since I played it so yeah I definitely would like to play this game again CU it's been a a very long time since I tried doing that cuz yeah look at this I drew all this so I drew those little Beds which look very strange I drew the character I made the animation and uh yeah but I also you can obviously see how I drew those portraits by how super basic they are so yeah that that was the the extent the limit of my art skills at the time it was pretty much drawing it like this which is definitely extremely basic extremely simple look at that smoke so yeah basically when I made this back in 2013 back then I really wish I I had the knowledge to be able to use the accur cuz I could have just come down here in order to find all kinds of really awesome Sprites so I could just combine my programming knowledge with some really awesome Sprites and the game probably would have looked quite a lot better I mean I'm still happy with how it came out but it would have been quite look at this it's got a bunch of top down things and quick tip if you're making 2D games you can also just buy uh 3D assets These are 3D meaning you can place the camera anywhere so you can buy a 3D asset like this and if you're making a top down 2D game just take the camera move it upwards take a screenshot and boom you've got a really awesome 2D assets to use use in your top down game so yeah it's uh if you know how to use the asset swore thankfully nowadays lack of art skills is not an issue or it it is not an issue to the point of being limiting so if you if you know how to use it if you know the kind of game that you're going for even if you have no art skills you can still build something pretty awesome hey with that a nice cute custom character nice hey thanks for making that um and by the way for those of you who don't know you can customize your character so you can go you can draw a bunch of things just follow the instructions over here on this page you can download this image then you can draw on top of it you can draw whatever character you want in either way you want you can draw something as long as you draw on the correct points you can draw whatever you want and then you have then the character over here will look exactly like that uh okay so let me do where was I oh right he completed so in this exercise you learn how to create a a dictionary this is one of the most useful data structures you can use especially in games for things like inventories yep dictionaries are actually really awesome having a key value pair is something that is useful in so many scenarios it is really so very good so very nice reminds me of an era flash games were really fun great yeah flash really was awesome it's quite it's a shame how nothing like flash exists nowadays I mean of course you've got things like itch and so on but yeah flash was just it was a magical time you could just download Flash start making a simple game upload it on new grounds and boom 500 people a thousand people were playing your game giving you feedback that was really something magical something really awesome whereas nowadays technically you have itch you can put up any game but it's much trickier in order to get people to download your game or if you make it a web game then there's all kinds of limitations actually I haven't used webgl in in quite a long time maybe I should look into that one but yeah basically with flash there was pretty much no friction nothing go on to a web page downloads automatically you start playing right away you can play it you can give Fe give feedback do all kinds of things so yeah flesh was really awesome and how straightforward it was and how fast it was to both make games and get feedback for games that really I feel like the four years that I was five years that I was working on flash and I made 40 games with it those were really tiny games but the fact that I made so many and I got so much feedback out of it I feel like that really helped me improve my skills both as a game developer and a programmer so yeah I do think that was really part of the reason why I have the skills that I have today so yeah it's really such a shame that nowadays you can't really get something Exel like that you can do game jams which I guess I mean there are pros and cons there are a bunch of things that are much better nowadays than there were previously but yeah losing flash was really sadly quite a a negative thing create a stack and populated with strings so let's do a stack of type string so that's a string stack and let's do one why is this one constantly doing that do a stack of string and for my string stack let's push let's say the string code monkey and then let's say the string Iron Man just like that uh then what am I supposed to do oh I think I was supposed to actually let me see the exercise oh yep that was it Code Monkey Iron Man and then Black Widow push those in order so black wiow all right where's my where am I one my windows oh no it's there okay good I have me why can't I resize Unity interface really doesn't huh I I I'm sorry I have no idea I mean you go onto Unity preferences and in theory over here I don't don't even remember where it is UI scaling so in theory over here you should be able to modify it so don't you see this menu at all on Mac if not then yeah I wonder if it is possible or maybe Mac is just based on the desktop setting so maybe you have to go on the Mac desktop setting and modify that it seems strange that it wouldn't work at all especially because Max have so many resolutions so yeah sorry I don't know if you don't see this many if it doesn't work then yeah I really really don't know hey I love your videos hey I love you for watching them so yeah thanks for being here watching the videos hope you're having a great Friday okay so uh let's play and thanks again and out for the Super Chat all right checking the sa count three expected three so yep that is correct trying to pop it with black widow like expected Iron Man and Code Monkey so yep that is it that is how you handle a stack which is another interesting collection type one that I randomely use myself but if you do need to use some kind of stack of papers or things then stack can be quite nice uh so over here remember uh how a stack is created how it uses the stack type inside angle brackets brackets then remember how stack uh then remember the the functions to add add elements to a stack remember the function to add elements onto a stack which is not add which is not named add okay so here you learn how to create and work with a stack this can be a useful a structure when you need to uh always remember when you need a what is a stack the stack is uh I always remember I always forget it's a follow collection right first in last out that's it right because I push pop yeah it's a follow yeah uh yeah this can be a useful data structure when you need a follow collection first and last out so yep that is pretty much it you SX for generating a procedural path oh really oh that's actually interesting that's a nice use case yeah you can pretty much just push okay go here then here then here then here and yeah then you can reverse the stack and then pretty much just pop each individual stuff oh that's nice that's a that's a cool one that's that's a great use case nice okay let's complete the exercise like that when will you 6 be released as far as I know I believe they said by the end of this year so if I had to guess I would guess around the same time as uh the unite conference which I believe usually happens September October November so that is probably going to be so I would probably assume either shortly before that or EXA on that so by the end this year that's that's pretty much it then also an interesting comment what's your thoughts on Devon Ai and I actually have a very video exactly on that topic coming out later uh can I even yeah so definitely stay tuned for this video and right away by the title you can see what's my thoughts on Devon AI so yeah basically this is the video coming out what time is it 541 so in about 20 minutes yeah I'm going to end the live stream shortly before that so after that go ahead and watch just a quick video just because I saw some people were really scared about this AI thinking okay this is the end of programmers or software developers software Engineers all of this and the reality is really not quite like it it's really one of those things where the hype is really insane and reality is quite a bit different from the hype so uh basically the the premen and Theo made some really interesting videos on that so basically over here I just give my super quick take on it just don't worry about it but then definitely watch these videos in order to get more of a more detail on why exactly it isn't exactly like it seems on their marketing material so yeah definitely an interesting topic so yeah definitely stay tuned for this video coming out in about 20 minutes so let me quickly do a bunch more exercises uh so that I can do that okay so the stack I wrote this one let's go to the next one so that's the other collections function prams let's do this exercise is there a way to visualize the Audio Waves in a unity game just like in an audio editor huh that's a good question I don't know because I'm not very I'm not very experienced with audio but if you go onto the audio listener does it have maybe does have some kind of function in order to get that but I actually don't know get output data get Spectrum data maybe that maybe that could be it you're ready to populate with audio samples the channel to sample from and I have no idea what is an fft window see The Listener get output data get Spectrum okay but yeah it does seem like it is exactly that so I mean it's doing debug. line so I assume this is going to draw the spectrum of whatever the audio listener is trying to get so so yeah that's a very interesting question I've never tried making an audio visualizer but apparently with this function you can probably do something similar to that at least this code seems to be quite like that yeah that that would be a fun thing to build a little audio visualizer or you could also do all kinds of logic on that so if the audio really spikes maybe spawn an enemy some kind of monster some kind of thing so that could be a fun mechanic to work on in some kind of horror game that could be could be interesting okay let me do a few more so I don't got much time left so let's do this so this exercise write a function to add any numbers so write a function add numbers that has a params parameter for ins and Returns the total sum of all of them okay so that should be pretty simple so this one Returns the sum so int add numbers and now inside it I want to have an interray A A prams interray it's prams right this one is not the yeah it's on the function prams not the optional ones uh so numbers array and let me do an end for result starting off at zero return the result and then for each and number in the numbers array for each of this result equals the number number okay I think that should do it so if you have add numbers add the numbers results adds each of each of them so it should work let's see morning I just starred my son on your Unity class oh that's awesome that's cool somewhere things up he is at the animation steps oh I mean uh if it gets really messed up to the point where the project is broken you can download the I assume you're tell oh boy my voice is already messed up I assume you're talking about the kitchen cow course so if so on that one you can go on to the course website and you can download the project files for each specific thing so over here if you go on to Ah that's not the link that's the link uh over here on this one you've got all the lectures and on each of them you can download the project fils at that point so if things had messed up to the point where there's no coming back that's not that's not a problem just come here Download Project files and continue falling on from that but yeah yeah really awesome how you're going through with your son that's really cool continue doing that yeah all right looking at it did find it does have the prams corrector it calls it one two three and Y it is correct yep so that's how you make a function to add any number of numbers I guess okay so on this one let's write write the hint so the hint so uh the Syntax for using prams is like any other parameter type ex except it must be an array type in this case an array of int okay that should do it and for the adding logic just a simple for or for each Loop cycling through all the elements and adding them together uh let me just put four and for each like this is that I don't know uh so here you'll learn how to define a params parameter which allows a function to take take in any number of parameters which can be really useful when you have some logic that you want to work with any number of parameters that's cool so the params keyword which is actually surprisingly useful that's the add numbers and let's go and complete the exercise all people running around bottom yeah those are the people chatting right now so uh yeah basically it's working with the uh YouTube API so if you want to know how all the how this little overlay Works actually covered a bunch of tutorials at the bottom of this page so if you go on there yep if you want to figure out how to make this yep it's pretty simple it's basically a transparent un window this is running on top of my desktop then for the characters the way they are animated these are mesh based animations and the way it's talking with the YouTube API is by doing an htttp request from inside unity and then the characters the way they are randomized with all kinds of colors and shapes that's really the same system that I use in my game battle round Tycoon for making all kinds of characters love s streams oh nice streams will have to follow along for more all right that's cool yeah thanks for thanks for being here yeah I definitely would like to do live streams a a bit more regularly because it's um every time I do them I enjoy them it's always it's always nice chatting to people directly so yeah definitely something that I would like to do more often but as you can see from my voice I'm really not I'm really not the kind of person who can do live streams for long so it's been what about one hour and yeah my voice is already quite messed up so yeah I would like to do them more often so shorter but more often so pretty much just one hour live stream like two times a week I think that would be a fun little uh schedule that would be that would be fun okay so this exercise qual fun fun set a player but only passing the player name parameter something other than null and the player HTH something other than two okay so this one is the lecture on optional parameters and yeah so call the setup player function and the goal is passing the player name something other than null so let's pass in the player name so something other than null okay so I pass in that one and the player health so player Health something other than zero so like this so yeah in case you don't know this syntax this is how you can set up optional parameters you can call the parameters in any order as long as you specifically specify exactly what parameter name it is so use a parameter name then a colon and then whatever value you want to call so note how down here this function this one has all these parameters defined as optional parameters that is why they have the little equals these are optional parameters and they are defined like this so Vector three for the player position then the health and then the player name but if you use the name for the parameters if you use this then you can actually call the parameters out of order so that is why over here I'm calling the player name and then the player health and Y this is perfectly valid code so it should work like that let's go uh okay setup player has been called that one was left his defa that one was set that one was set yep success all right so that's really cool so that's a lecture on the the call optional parameters so the hint on this one remember the Syntax for calling optional parameters you uh write the parameter name then a colon then the value with this you can even call parameters out of order so that's fun so here you learn how to call optional parameters and how to call them out of ay new member nice uh and how to call them out of order this can be great uh sometimes for making the code more readable since you define since you define since you write the parameter name when calling the function all right good hey new member thank you so much yeah it's been a while since I saw this little popup here so yeah major blue 7 thank you so much much for becoming a channel member thanks thanks for all the work you put through your tutorials ah nice hey thanks Ricard yeah I'm glad people like the tutorials and as long as people like like the tutorials I will continue making them so yeah thanks for watching them I really hope the tutorials have helped you a lot and yep I do plan to continue doing this for many many years so yeah hopefully if you if you want to continue making games for a long time hopefully you can join me on this journey so we can all make games together for the next 50 years that's pretty much my goal so yeah if you want to join me definitely join me uh okay let's complete this exercise I never created the video on hfsm for player controller I don't know what you mean by that hierarchical state machine is that what you mean hierarch hierarchal finite State machine I assume that's what you mean I've used a bunch of sa machines but usually for me I use sa machines like the most basically basic thing possible so yeah for me I if you want to make a did uh the did he make I think he made a really awesome video IH heart Game Dev I think he made a really awesome video on state machine yeah there you go he made Nikki made a bunch of really awesome videos on pring Unity State machines making a better State machine so yeah if you want to learn about State machines like more complex seate machines definitely check out his videos videos are really awesome really really detailed really excellent editing I'm always amazed every time he he makes a brand new video it's always really excellent really nicely edited so yeah if you want some really complex State machines yeah there's this one from two years ago I don't remember how what is the differences between them but yeah definitely watch both them really awesome so if you want to dive really deep onto State machines I can definitely recommend these videos really awesome uh okay so where was I so the optional parameters I did finish that one okay let's see what time is it oh 54 because I got to make sure to finish the live stream by 6 PM otherwise it might mess up the actually I don't know if it cuz I think I did that once like I I published a video and then finished live stream afterwards and I think that really messed things up so that is why I didn't want things to be messed up right now but I don't know maybe I'll go for like five minutes more and then see what happens with the analytics I don't know let's see either way let's go on to the next one where was I value versus reference types another extremely important topic very important watching your kitchen chaos course and I'm almost done what can I do after copy all the games watch the C course create simple games I would definitely say that you can uh make some kind of simple game or build upon it in some way that that is what I would say so basically try to modify things and oh God what was the uh what did I title it uh my game better no oh crap I can't remember the title if I just search for kitchen cows might show up basically there was a developer who yep took my game and made some took the game from the uh kitchen caros course and basically bu upon it and made something completely different so yeah I would definitely encourage you to do something like this so pretty much take that as a base and build upon it do something so as you can see over here there's all kinds of new visuals all kinds of new items there's a bunch of a bunch of things that have new new uh there's a bunch of you know there's like cooking eggs there's uh there was tips from the from the customers the customers actually show up and so on so yeah but I would definitely encourage you to do something like that like the um uh yeah I would encourage you to continue building upon it I think that's the best way to do it just try to since you should be if you fully understood everything in the kitchen chaos course you should be very familiar with that code base so hopefully that should allow you in order to actually build things upon it in order to uh really modify things and figure out how things work when you modify them that's really what of the best ways to work so one of the best ways to learn is learn by doing so definitely make sure you modify some things to see what what happens what changes and the more modifications you make so if you were to make something like this so pretty much still the same genre so you use the same base but you build something very different on top of it doing that is a really great way a really great uh learning exercise that will definitely improve your skills quite a bit I think the member notification should be short yeah this one is it's basically manual so B it shows up here and yeah and sometimes there's another one there's another button to que but yeah thanks so much for becoming a member nice how can I get access to these exercise these are part of the uh premium version of the course so yeah if you have that you can download the companion project which is this entire project which contains all of this okay so let's do this exercise let's see what is the goal addit the second parameter on the function to what matches the score inside each object note what the modify score function does okay so this should be a simple one so basically there's a struct which is a valid type and a class which is a reference type and then constructing brand new uh struct brand new class and calling the function to modify that one just sets the score to that and basically in order to modify here is it going to be five the initial value or is it going to be 12 now in this case structs are value types meaning they are passed in as copies so if you modify a copy inside of it it is not going to modify it so over here this one is going to remain with five but classes these are reference types so it is going to modify just like that one and if you have no idea what I what I just said definitely watch my video on uh structs versus uh valid types versus reference types if you don't know what those two are you definitely need to learn them because those are really important things to know because if you don't know and you're working sometimes with something that is a copy you will go quite insane because you don't know why something isn't modifying the answer is because you're working with a copy as opposed to the original see validate 55 122 and yep that is a success so let's write the let's write the hint and the completed so completing remember the differences between value types and reference types how if you pass in a value type onto a function you pass in a copy so if you modify that value inside that function you are modifying the copy value and not the original value so that is the big difference between value types and reference types okay so here you learn the difference between value and reference types and how they behave very differently uh especially when pass then as a parameter onto a function yep just like that all right that was cool nice difference between functions and methods really uh the exact same thing technically in C the technical correct term is methods but I don't know I don't like the I don't like the word methods I don't know it feels strange so yeah for me I call them functions but in C technically a function is a method so yeah but it's really just a name thing if you tell anyone I wrote a c function they know exactly what you mean if you say I wrote a c method they also know what you mean so yeah really just different words that people use interchangeably video tutorial on importing 3D assets and maybe some sites where to get them for free or blender if you use it I did make a video just like that on or rather about animations rather than things B pretty much the same thing so if you want some free characters and free animations I highly recommend you look into mixo it's a really awesome website where you can get all kinds of free characters and animation I think you need to log in yeah okay uh but yeah you can get characters and animations so if you want something simple this is great if not then of course the asset stur I mean you can just go browse the asset stur so for example let's go into one of these menus disable this okay so the assur has 93,000 results and and now you can go over here into pricing put it on free assets and boom there you go you got almost 9,000 assets for free so you got free Sky boxes free uh 2D packs free 3D environments you got free tools you got more low poly acids some high resolution textures you've got some characters third person controllers a bunch of sounds sound effects more sky boxes more characters even a really nice CTI Studios asset which by the way uh just just in case you need some I said something that I mentioned on the on the other on the last video which oh it's already SI so I got to go see that one uh but yeah uh basically if you if you don't like Cy style then there's right now a really awesome bundle so for 25 bucks you can get tons of assets to do all kinds of things personally I really love this one I really every time I see this one makes me want to make a game kind of like 300 because there's one part right here that has some really awesome Spartans really flying around look at this uh right there look at that doesn't not look really awesome so yeah every time I see this pack makes me want to make some kind of already bought it hey I hope you put it to good use because this is it's a really awesome pack really tons of assets and there's a bunch of more stuff for zombies and so on so yeah basically if you want uh free stuff I would recommend you just go onto the UN accur and browse there's a m of free stuff and if you like low poly assets for 25 bucks there's an pretty excellent bundle uh I already have pretty much most of these but if I didn't have yeah I would definitely be picking this up and doing all kinds of prototypes in all of these interesting actually a while ago I we were talking about someone asked about a farming game so yeah this is when there was another bundle this was I don't know like two years ago 22 so yeah two years ago so when this happened I took a bundle like that and I made a bunch of interesting videos so I made an interesting uh RTS using a SciFi pack I made a nice farming Mini game with a farming pack and made a nice Taxi Driver game using the city pack so yeah definitely you can pick up that bundle and then you can watch that video to see all the kinds of things you can build with it so yeah it's a if you want to build some fun prototypes this weekend then yeah hey that sounds like a a great way to use your weekend okay let me just do this okay create a struck let's do one or two more and then yeah I got to got to stop talking for a little bit because my voice already Prem messed up okay create a struct so the goal is to find a struct named World position with in X and Y Fields then Define a field of that type on start create an object of that type with X1 Y2 and assign it to the field okay so let's do exactly that so first Define a struct that is pretty simple so a public struct named World position and now inside it I want a public int X and a public int y why okay then Define a field of this type so World position World position and now over here let's create a brand new object and let's assign it the x = 1 and y = 2 yep exact just like that let C use them to make a bunker idea for a game oh that's cool what something like fallout shelter that is a that is a game that I've seen many times and I've wanted to play many times but I still haven't haven't been able to do it but yeah I would love to make a game kind of like Fallout charish so something where it's a side view seeing all kinds of bunkers all kinds of things and being able to uh interact and do all kinds of management and all the things that is a I think that is a fun gen so yeah that's definitely a game that I would like to make that would be would be a fun one okay so Define a struck Define a field and assign it create it like that yep drink ginger tea with honey I've been trying oh okay okay I just messed myself up I didn't know this still had liquid oh boy okay that that wasn't intended oh crap all right anyways doesn't matter uh yeah I've been trying all kinds of te's but honestly it doesn't really help like I drink tea and my voice still gets messed up after one hour of talking so I don't know if that just means that I just need to pretty much train my voice a little bit more I don't know but uh yeah for me whatever I do it does not seem to work um anyways okay let's head on play and see how this works managing fulltime job in game development uh that's definitely quite tricky uh I mean doing Game Dev on the side or doing Game Dev uh with kids or so on yeah that definitely becomes quite a bit more more difficult but it can be done I mean for example um where was he oh for example over here Nikki from iHeart gev I mean he makes a ton of really excellent tutorials and he does have a a a uh software engineer job so he does have a normal job and then does video tutorials on the side so we could also do that uh make games instead then there's Dev duck who has been working on his RPG for like 5 years now working alongside a job so technically it can be done but it definitely requires quite a bit more uh managing your own time that is yeah maning is a strong word cling to life yeah it's definitely Game Dev on hard on hard mode trying to do everything at once yeah that is I can definitely feel that uh okay so this one is working where is Danny good question I don't know uh all right so yep this one did work success so let me just write the hint and so on and then yeah I think I'll do one more and then that's it okay so defining struct so remember how structs are very similar to classes just with the struct keyword then Define field of that type just like a class and construct it also just like a class so here you learn how to define a struct this is very similar to a class but remember the one big difference how stru are value types whereas classes are reference types yep that's the one big difference between them and let's complete the exercise do you think it's possible to make an audio editor in unity I audio is really one of the main things that I really don't know much about so I'm definitely not the best person to answer that because I'm not entirely sure what does audio editor mean but yeah I mean in unity you can do all kinds of things with audio clips Unity audio clip you can just see all the functions that it has you can get the channels frequency and so on so yeah I don't know much about uh audio but if you can get the data get the sample data from the audio and you can set the data then I assume if you combine these two you could build some kind of interface where you can connect things uh connecting together in order to be able to make Cuts in order to be able to modify things and so on so yeah technically I do think it is possible and also uh Unity also has a audio mixer so if you want to do some kind of complex audio mixing like I said I'm not an audio expert I've only used the absolute Basics but I do know the audio mixer is very powerful with lots of things so yep are you going to GDC no sadly no it's what it would be fun I would like to but yeah it's uh pretty much on the other side of the world so that makes it for a very expensive trip so yeah sadly sadly no but yeah I won't be at home uh watching the keynote I assume they're going to do some kind of keynote or maybe not actually that's a good question I haven't thought about it until right now but yeah if they do some kind of keynote I will definitely be listening to it I won't be uh watching all the talks if they have any and then doing some kind of uh some kind of summary video so nope sadly not going to be there uh physically but yep I will definitely try try to cover try to do some kind of news on all the kinds of things that they might announce there how's your dogs doing they're sleeping very carefully very peacefully so yeah let them sleep uh okay thought of Hosting your own Community game Jam I have but then I remember just how much effort it takes to organize that whole thing and then I remember okay that would be a fun idea but I'm already insanely busy with work so adding a really insane event on top that would be quite tricky so definitely something that I would like to make at some point but yeah figuring out all the logistics to make that work and make it work properly that is quite difficult so maybe someday but definitely not planning anytime soon okay let me do one more okay so lecture on class intermediate basic inheritance so the goal is to find a base unit class with a get speed function that should return three then Define an enemy class that inherits from unity and then Define a player class that inherits from unit and should override the get speed to return five okay so let's do exactly that so this is pretty simple so Define a unit class okay then it should have an INT get speed and by default this one should return three okay then Define a enemy class and this one should inherit from unit and just like this nothing else and then Define a player class and this one also inherits from unit except for this one this one needs to override so this one needs to be marked as virtual so for this one uh let's override override the get speed function and this one should return five okay that's it pretty simple so this exercise teaches you about inheritance uh let's run and see if it does work let's see okay it did find the unit class the enemy class the player class the enemy does inherit does inherit it did find it calling it on Unity get that and he got that that is really cool that worked all right nice inheritance is always a a tricky thing it has many ways to go wrong but when it goes right it's actually quite fun okay so that's this one right basic inheritance so the hint remember the syntax for inheritance first you define a base class then Define the uh what do I call it oh boy what is the name the extended class no then Define the other classes and extend the base class with con base class in order to provide a different implement mentation for some function the base function needs to be marked as override and no not override virtual as virtual and the uh uh in the oh what do you call it extended function I don't know extended function needs to be marked as uh override just over here needs like that so here you'll learn how to implement basic inheritance where you have a base class and then classes that extend That Base Class and overwrite some logic to provide a different implementation yep okay that's it how are you checking the code are you using reflection or checking the code Itself by reading R text the answer is both it depends on the on the exercise some of them uh do uh read the text itself as if it's uh just basic text but yeah most of it is where's the right here but most of it is actually indeed by using all kinds of reflection so for example on this one the exercise the go on the exercise to define a unit uh class and Define an enemy class that extends unit and a player class that extends it and has this function so yep over here I'm using all kinds of reflection so going into the type of exercise to get the N type of type unit so I get the unit type the enemy type and the player type and then just checks if all of those types actually exist and if it does find them then all of this is correct then it checks the if the enemy type is a subass of unit type if so then yep it means that the enemy correctly inherits then same thing for the player type check that it does inherit then using the get method in order to get the function called get speed so if it finds that one then this one is not going to be null so it does find that one and then checks the return time for that method and over here the complex thing about having to create an instance of a unit object learning how to do this was actually quite tricky I must say I had not used reflection as much as I had to do by making this score so this was a a fun learning challenge for me so having to create a brand new object in order to invoke it pass in an object reference and so on in order to get the return type so passing in a unit object and then player object calling it on that and so on so yeah so yeah basically it's all reflection it's all actually a pretty fun thing learning how to do all this how to do reflection to build all these interactive exercise that was actually quite an interesting thing and yeah in the end it does work great uh okay what time is it yeah 615 okay so I think that's going to that's going to be it let me just go and okay so that one is done all right good okay I do want to learn how to make a pinball game that is physics based in colliders oh that's that sounds interesting although physics is usually a little bit of a headache so I wish you the best of luck with that because yeah making a game where the game design relies on physics that is always always has quite a lot of headaches so that is always quite tricking but yeah definitely best of luck with that uh you be interested in doing how to make a functional file manager inside Unity wow that's a tricky one I mean it's not tricky it's actually relatively simple but it is very laborious let's say in order to be able to to do that I mean takes all kinds of scroll bars learning how to populate it but populating it's actually relatively simple but yeah it's um it's actually it's one of those things that is simple to do but requires a ton of work so yeah it would be a fun challenge so if you have some time definitely do that but if not I'm pretty sure you can find some kind of file manager on the aaur uh well actually no wow that's oh cuz it's on free okay okay yeah I thought it was a little bit strange how didn't have any but having a file dialog file manager and so on so yeah yeah but if you want to do a fun programming challenge yeah I would definitely encourage you to do that learn how to make a file manager It's relatively straightforward and actually pretty pretty fun to do should be nice so yeah C course is really helpful for me watching from India that's cool that's awesome definitely go ahead and watch it take your time and go through it step by step do you recommend building a highend PC for game development love your channel oh nice uh the answer is for PC specs it really depends on what kinds of games you're making so if you're making something like Flappy Bird you really just need the Bare Bones Basics you really don't need anything special but if you're trying to make something like pubg you definitely need something very intense so yeah the specs really depend on what kinds of games you're trying to make but if you're making uh quote unquote simple games like the kinds of games that I make then yeah pretty much anything doesn't need to be super highend especially not a super highend graphics card unless of course you're going for that but for me usually my games are very simple on the graphics ront so yeah for me usually don't really need a highend PC just something basic work actually quite great but your turnbased strategy course Sha of course will be cheaper or some discounts yeah over time I will uh increase discounts I mean right now I'm still focused on really polishing up the the rest of the intermediate and I still got to build the entire Advance section but yeah over time I will be doing more and more discounts on the course so yeah and either way if you can't afford definitely check out the uh free uh video on the inner C course and on that one I talked about my plan was if the course sounds 100 copies I'm going to make the intermediate version for free within a month and it has already passed that so within next month what time is it we're in midmarch so yeah by uh the beginning of April you can look forward to the intermediate uh section of the course to be free over here on YouTube so definitely stay tuned for that and yeah so basically even if you can afford it I want to make sure you can still learn so yep that is why you've got this one then stay tuned for the next one all right so I think that's going to I think that's going to be it so this one I do think this one work great so yeah it's already 620 so yeah any y the code is working here completed it does say the correct message it does have the hints and so on all right so yeah I think that's that's going to be it that should be like that like I said I would like to make live streams a bit more regularly just make them uh about 1 hour cuz yeah my voice is already messed up I definitely can't go any longer so yeah that's going to be it let me just complete the exercise and everything over here is done so yeah definitely and uh like I was saying a while ago definitely go watch the video which is actually out right now so the video on don't be afraid do just in case you're you're uh you're seeing some news on Twitter and you're a little bit scared definitely go watch this video which should be yeah it was published 20 minutes ago so go watch that and don't worry too much about it but anyways okay so that's going to be it for me let me just go on turn on the background let me put where's my OBS there's my OBS all right so yeah so that's it for me yeah thank you so much for joining me and I hope you have a great weekend all right so bye everyone see you next time bye thank you bye e e e
