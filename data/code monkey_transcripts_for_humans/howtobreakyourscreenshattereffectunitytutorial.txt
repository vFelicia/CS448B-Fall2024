With timestamps:

00:00 - hello and welcome i'm your code monkey
00:02 - so a while ago i made a really
00:03 - interesting video on how to handle
00:05 - destruction in unity it's a great video
00:07 - and a pretty simple method so definitely
00:09 - go watch it if you haven't seen it
00:11 - in the comments someone asked for an
00:12 - interesting application of this system
00:14 - how to use it to make a screen shatter
00:16 - effect that's a really interesting
00:18 - effect and it's pretty easy to do so
00:20 - let's do it it really just involves
00:21 - using that simple destruction combined
00:24 - with some basic logic so it makes a
00:26 - really nice effect that is perfect for
00:28 - making a game over screen or maybe hide
00:30 - a scene transition or just an
00:31 - interesting player skill do you want to
00:33 - learn how to make games from a veteran
00:35 - in the games industry then check out
00:37 - this video's sponsor jason wyman who
00:38 - makes some great game development
00:40 - courses they are all extremely detailed
00:42 - and very well planned with expert life
00:44 - support from jason himself whenever you
00:45 - need help and right now as part of a
00:48 - black friday sale you can get each
00:49 - course at 50 off or you can get the
00:52 - black friday bundle including all of
00:53 - them for 75 off the bundle includes all
00:56 - three courses so you start off by
00:58 - learning c-sharp with the programmer
01:00 - course then build several games with the
01:02 - mastery course and finally learn how to
01:04 - structure your project plan and design
01:06 - your game with the game architecture
01:08 - course jason is a veteran in the
01:10 - industry with many years of experience
01:11 - working on large teams and very complex
01:13 - triple a projects the bundle also
01:15 - includes several other bonuses like two
01:17 - months of unity pause high definition
01:19 - art assets and even a really nice hoodie
01:21 - check it out with a link in the
01:22 - description before the lens okay so
01:25 - let's learn how to shatter our screen
01:27 - now this is actually quite simple over
01:29 - here i've got my demo scene this is from
01:31 - the polygon cinti asset pack there's a
01:34 - link in the description if you want to
01:35 - get it so in order to make this effect
01:37 - the first thing we need is some
01:38 - destruction and since we want to destroy
01:40 - a rectangular screen then we could just
01:43 - make a 3d make it a quant so we could
01:45 - just break up this mesh however i think
01:48 - the effect actually looks a bit better
01:50 - with some thickness so instead of making
01:51 - a completely flat quad let's go with a
01:53 - simple cube
01:54 - so that's a cube and pretty much just
01:56 - flatten it out on the set there you go
01:58 - just a bit of thickness i think the
01:59 - final effect looks a bit better like
02:01 - this
02:04 - now the next thing that is very
02:06 - important is the aspect ratio we're
02:08 - going to want to place this mesh
02:10 - directly from the camera so it needs to
02:11 - have the same shape
02:13 - now for the aspect ratio i'm assuming
02:14 - the final game will be in the common
02:16 - 16x9 so 1080p 720p 4k all of those so
02:20 - you can just easily put this one with a
02:22 - scale on 1.6 by 0.9 there you go we've
02:25 - got our nice cube and 16 by 9. now
02:27 - before we start slicing this object
02:29 - first let's just apply the final
02:30 - material so the slicing works correctly
02:33 - so for that just make a material and
02:34 - assign it and now just for fun instead
02:36 - of looking at this completely black box
02:39 - let's use a nice random texture so over
02:41 - here i'm just going to duplicate the
02:42 - main camera
02:43 - make sure it's not tagged as the main
02:45 - camera and down here on the output
02:46 - texture over here i've got a render
02:48 - texture all i did was set the size to be
02:50 - 1920x1080
02:52 - and just set this camera to render onto
02:54 - that texture and finally make sure that
02:55 - the material is rendering using this
02:57 - texture i covered random textures in
02:59 - another video if you want to learn more
03:01 - and just like this we have a nice view
03:02 - of our camera in our virtual screen and
03:04 - the aspect ratio matches perfectly all
03:07 - right so far so good now the next thing
03:09 - we need is to slice this mesh so for
03:11 - that you can do it using the pro bundle
03:13 - tool exam like i covered in the
03:14 - destruction video
03:16 - so the first thing is just convert this
03:17 - one into a pro builder so open up the
03:19 - pro builder window
03:20 - and propellerize this object then you
03:23 - need another object for the slice so
03:24 - let's make another cube object also
03:27 - programmatize this one and again let's
03:29 - go into experimental open the bowling
03:31 - tool and select both them again go watch
03:34 - that other video to see this process in
03:36 - more detail then all you need to do is
03:37 - make sure that the cube occupies the
03:39 - whole area then for the slices really
03:41 - just position it and here's some tips
03:43 - for how you can do this pretty quickly
03:45 - you can put the scene in 2d mode so
03:47 - appear you've got the button for 2d so
03:49 - just click on it and everything is in 2d
03:51 - and right now you can actually see
03:52 - anything but you can just hide all of
03:54 - the environment objects so either
03:56 - disable the game object or over here
03:57 - click on this button to hide them either
03:59 - way it works okay so in this 2d view you
04:02 - can now just go and go into pro bundler
04:04 - onto the vertex mode and just make sure
04:06 - select hidden is on so that it selects
04:08 - both of the vertices this is in 2d but
04:10 - there's still two vertices there and
04:12 - just click and drag to select them and
04:15 - position them anywhere there you go
04:17 - something like this then just go ahead
04:18 - hit on reply there you go we've got our
04:20 - new object and now like i mentioned in
04:22 - that video you might have a pivot error
04:24 - so just go back into object mode and
04:27 - over here you've got a button for center
04:28 - pivot and for some reason you need to
04:30 - click twice so you click once and it
04:32 - doesn't work yet the pivot is still
04:34 - somewhere else but you click it again
04:36 - there you go now it's in there alright
04:38 - so it's really just repeating this
04:39 - process you can just hide the original
04:41 - object doesn't have to be enabled for it
04:43 - to work so then just once again select
04:45 - the cube select the vertices and just
04:47 - position them a bit differently so this
04:49 - way you can see where the last slice was
04:51 - so you can just go position them as
04:53 - close as you want there you go maybe
04:55 - something like this hit on apply
04:57 - go into the object center center and
04:59 - back into that one back into vertices
05:01 - and move them again there you go it's a
05:03 - manual process but it's pretty easy to
05:04 - do so just keep doing that and keep
05:06 - making all the slices so over here i've
05:08 - got an object that i sliced previously
05:10 - so i just did example that to cut up all
05:12 - these slices
05:13 - then on all the children objects i just
05:15 - selected all of them and then i added a
05:17 - rigid body and a magical letter so just
05:20 - like that all these objects have physics
05:22 - so if just with this if i hit on play
05:25 - and if there you go all the object parts
05:27 - fall down all right so far so good now
05:29 - we want to apply some force we don't
05:31 - want it to just fall straight down for
05:33 - that let's make a simple script
05:37 - and now let's place it on the parent of
05:39 - all of the slices so these slices are a
05:41 - child of this object and then over here
05:43 - let's simply apply a force to all those
05:45 - parts so that's pretty easy let's make a
05:48 - simple awake and then awake we just
05:50 - cycle through all the children
05:53 - so just do a for each on the transform
05:56 - then you try to get the rigid body
06:01 - so you get the rigid body and then with
06:02 - that one
06:03 - you can just call the function at
06:05 - explosion force
06:07 - this one takes a certain force then it
06:09 - takes an explosion position now this is
06:11 - a global position so we need to find
06:18 - that so here in the editor just position
06:21 - a game object
06:23 - somewhere around here let's say we want
06:24 - to hit it more on the lower side so that
06:26 - it explodes up and back okay so let's
06:28 - use sort of this position and yep that's
06:31 - pretty much it now just play around
06:32 - these values and now as soon as we hit
06:35 - on play
06:36 - and if there it is we've got our nice
06:38 - screen explosion
06:39 - all right awesome so far so good so we
06:41 - have our virtual screen all sliced up
06:43 - and flying away but of course we don't
06:45 - want to run this in the middle of our
06:47 - world we want it to be exactly in front
06:49 - of the screen and we also want to
06:51 - manually trigger the explosion by the
06:53 - way if you find the video helpful please
06:54 - hit the like button it's a tiny thing
06:56 - but it really does help thanks so for
06:58 - that let's first position this object
07:00 - all the way off screen the size of the
07:02 - unity world is pretty much infinite so
07:04 - let's put it on a thousand a thousand a
07:06 - thousand so it's way far away from
07:08 - anything else
07:09 - then let's make another camera just
07:11 - render the slice quand so if you're just
07:13 - going to create create a new camera
07:17 - then just position it looking straight
07:19 - at the quad by the way here's a quick
07:21 - tip for quickly positioning a camera
07:24 - just select the object then position the
07:26 - scene view then you click on control
07:29 - shift and f and it positions the camera
07:31 - exactly where the screen view is so just
07:33 - like that it's looking
07:34 - and then you can just go ahead and make
07:36 - this perfect so put all of these on zero
07:39 - like that
07:41 - now in order to make sure that this
07:43 - camera renders on top of the other one
07:44 - make sure this one has a higher priority
07:46 - so usually the main camera starts off on
07:48 - -1 so putting this one on zero does work
07:50 - then next thing is over here on the
07:52 - background type instead of skybox let's
07:54 - go with a solid color and for example
07:56 - make the background all in black and
07:58 - i'll really just position everything so
07:59 - in this case let's move the camera
08:01 - slightly forward
08:02 - there you go just make sure that it fits
08:04 - perfectly now this effect will happen
08:06 - really quickly so it doesn't have to be
08:08 - mathematically perfect just like this is
08:09 - perfectly good so just do all that let's
08:12 - make the camera also a child of the
08:14 - object and start off with this disable
08:16 - there you go that's the normal view then
08:17 - we're going to press a button enable
08:19 - this one and everything blows up
08:21 - okay so let's handle another script to
08:22 - make that simple action
08:25 - then just make a game object to run this
08:28 - and then over here pretty simple let's
08:30 - first add the reference so let's make it
08:32 - a serialized field
08:34 - of a transform
08:37 - so here in the editorial let's just drag
08:38 - the reference okay
08:40 - and then just on private void update
08:43 - let's listen to a key down
08:50 - and if that's it we just enable the game
08:52 - object okay so just like that it should
08:54 - already be working last thing we just
08:56 - need is to reposition over here the
08:58 - explosion position so here it is the
09:00 - scene is looking perfectly normal now
09:02 - let's say that i finally win or i get a
09:04 - game over or transition into something
09:06 - and boom and there you go everything
09:08 - turns into an image and everything gets
09:09 - shattered all right awesome okay so with
09:12 - this we have most of it working let me
09:14 - just mention one last thing
09:16 - in my reply to that original comment i
09:18 - said you could achieve this result with
09:20 - a rendered texture and that's true
09:21 - that's one approach it's exactly what we
09:23 - have working here
09:25 - however unlike this we're getting a view
09:26 - of the world that is updating now this
09:29 - scene is pretty static there's pretty
09:30 - much just only some smoke there
09:32 - so when it turns into an image in
09:34 - shatters you don't actually see it
09:35 - updating but if there were moving cars
09:37 - in people then it would be very
09:38 - noticeable now maybe that's the effect
09:40 - you're going for if so then this works
09:42 - perfectly but for this effect i think it
09:44 - makes more sense to have the game look
09:46 - frozen while the effect plays
09:48 - this is meant as a game over or a scene
09:50 - transition effect so i think being
09:51 - static makes a bit more sense so if what
09:53 - we want is instead a static image then
09:55 - what that really means is that we just
09:57 - need to take a screenshot of the whole
09:58 - view and then use it on the exploding
10:00 - object
10:02 - so instead of the render texture method
10:04 - let's use the screenshot method which i
10:06 - also covered in another video in that
10:08 - video i covered multiple methods
10:10 - depending on what you want to do here
10:12 - i've got one of the methods shown in
10:13 - that video so in this case i'm using the
10:15 - coroutine method so i use the code
10:17 - routine to wait for the end of the frame
10:18 - then i grab the screen width and height
10:21 - i take it onto the screenshot so using
10:23 - read pixels and apply and then i simply
10:25 - got a reference to the shadow material
10:26 - and then just calls that texture
10:28 - and now for the name here for some
10:30 - materials especially older materials the
10:33 - main map is actually called the
10:35 - underscore main text however here i'm
10:37 - using the universal render pipeline lit
10:39 - material and for this one it's called
10:41 - the base map and the reference name is
10:42 - underscore base map so just in case you
10:44 - use underscore main text and doesn't
10:46 - work then go ahead and make this change
10:48 - and the other thing is if you want to
10:49 - take a screenshot naturally we want to
10:51 - take that screenshot before we actually
10:53 - enable the explode transform otherwise
10:55 - we would just see the slices and not the
10:56 - actual screenshot we want okay so that's
10:58 - pretty much it we're capturing a
11:00 - screenshot rendering it onto a texture
11:02 - and then using that texture onto our
11:04 - materials so just like this our entire
11:06 - effect should be working
11:08 - so here is the scene now let's say i get
11:10 - a game over or i beat this level and
11:12 - then suddenly
11:13 - boom and yep there it is so a really
11:15 - nice screenshot effect
11:17 - so i'm playing the game then triggers
11:19 - the whole thing turns into an image and
11:20 - it explodes and the whole thing falls
11:22 - off so we have a really nice screenshot
11:24 - effect awesome so you can see how this
11:27 - would be perfect for making an
11:28 - interesting transition or a game over
11:30 - screen there's also one more interesting
11:32 - thing you could do with this you could
11:34 - take the exploding screen camera the one
11:35 - that sees the parts
11:37 - and lower the alpha down to zero and
11:39 - then for the render type make this an
11:41 - overlay camera and then on the main
11:43 - camera over here on the camera stack
11:45 - just go ahead add that one on top of
11:46 - this one
11:49 - and now if you point like this here it
11:51 - is the game is playing and i trigger it
11:52 - and boom there you go the whole thing
11:54 - blows up but the game is still playing
11:56 - so this would be yet another variation
11:58 - of this effect so maybe this could be a
12:00 - special ability on the player where it
12:01 - would deal tons of damage in order to
12:03 - show that much damage it would shatter
12:05 - the screen but then the game would keep
12:06 - going so as you can see this effect is
12:08 - quite easy to do and looks pretty nice
12:10 - thanks again for that comment suggestion
12:12 - this was a fun effect to make also don't
12:14 - forget to check out jason's black friday
12:16 - course bundle in the link in the
12:17 - description get a deep discount and
12:19 - learn how to make games from a veteran
12:21 - in the games industry alright hope
12:23 - that's useful check out these videos to
12:25 - learn some more thanks to these awesome
12:27 - patreon supporters for making these
12:28 - videos possible thank you for watching
12:30 - and i'll see you next time
12:34 - [Music]
12:38 - you

Cleaned transcript:

hello and welcome i'm your code monkey so a while ago i made a really interesting video on how to handle destruction in unity it's a great video and a pretty simple method so definitely go watch it if you haven't seen it in the comments someone asked for an interesting application of this system how to use it to make a screen shatter effect that's a really interesting effect and it's pretty easy to do so let's do it it really just involves using that simple destruction combined with some basic logic so it makes a really nice effect that is perfect for making a game over screen or maybe hide a scene transition or just an interesting player skill do you want to learn how to make games from a veteran in the games industry then check out this video's sponsor jason wyman who makes some great game development courses they are all extremely detailed and very well planned with expert life support from jason himself whenever you need help and right now as part of a black friday sale you can get each course at 50 off or you can get the black friday bundle including all of them for 75 off the bundle includes all three courses so you start off by learning csharp with the programmer course then build several games with the mastery course and finally learn how to structure your project plan and design your game with the game architecture course jason is a veteran in the industry with many years of experience working on large teams and very complex triple a projects the bundle also includes several other bonuses like two months of unity pause high definition art assets and even a really nice hoodie check it out with a link in the description before the lens okay so let's learn how to shatter our screen now this is actually quite simple over here i've got my demo scene this is from the polygon cinti asset pack there's a link in the description if you want to get it so in order to make this effect the first thing we need is some destruction and since we want to destroy a rectangular screen then we could just make a 3d make it a quant so we could just break up this mesh however i think the effect actually looks a bit better with some thickness so instead of making a completely flat quad let's go with a simple cube so that's a cube and pretty much just flatten it out on the set there you go just a bit of thickness i think the final effect looks a bit better like this now the next thing that is very important is the aspect ratio we're going to want to place this mesh directly from the camera so it needs to have the same shape now for the aspect ratio i'm assuming the final game will be in the common 16x9 so 1080p 720p 4k all of those so you can just easily put this one with a scale on 1.6 by 0.9 there you go we've got our nice cube and 16 by 9. now before we start slicing this object first let's just apply the final material so the slicing works correctly so for that just make a material and assign it and now just for fun instead of looking at this completely black box let's use a nice random texture so over here i'm just going to duplicate the main camera make sure it's not tagged as the main camera and down here on the output texture over here i've got a render texture all i did was set the size to be 1920x1080 and just set this camera to render onto that texture and finally make sure that the material is rendering using this texture i covered random textures in another video if you want to learn more and just like this we have a nice view of our camera in our virtual screen and the aspect ratio matches perfectly all right so far so good now the next thing we need is to slice this mesh so for that you can do it using the pro bundle tool exam like i covered in the destruction video so the first thing is just convert this one into a pro builder so open up the pro builder window and propellerize this object then you need another object for the slice so let's make another cube object also programmatize this one and again let's go into experimental open the bowling tool and select both them again go watch that other video to see this process in more detail then all you need to do is make sure that the cube occupies the whole area then for the slices really just position it and here's some tips for how you can do this pretty quickly you can put the scene in 2d mode so appear you've got the button for 2d so just click on it and everything is in 2d and right now you can actually see anything but you can just hide all of the environment objects so either disable the game object or over here click on this button to hide them either way it works okay so in this 2d view you can now just go and go into pro bundler onto the vertex mode and just make sure select hidden is on so that it selects both of the vertices this is in 2d but there's still two vertices there and just click and drag to select them and position them anywhere there you go something like this then just go ahead hit on reply there you go we've got our new object and now like i mentioned in that video you might have a pivot error so just go back into object mode and over here you've got a button for center pivot and for some reason you need to click twice so you click once and it doesn't work yet the pivot is still somewhere else but you click it again there you go now it's in there alright so it's really just repeating this process you can just hide the original object doesn't have to be enabled for it to work so then just once again select the cube select the vertices and just position them a bit differently so this way you can see where the last slice was so you can just go position them as close as you want there you go maybe something like this hit on apply go into the object center center and back into that one back into vertices and move them again there you go it's a manual process but it's pretty easy to do so just keep doing that and keep making all the slices so over here i've got an object that i sliced previously so i just did example that to cut up all these slices then on all the children objects i just selected all of them and then i added a rigid body and a magical letter so just like that all these objects have physics so if just with this if i hit on play and if there you go all the object parts fall down all right so far so good now we want to apply some force we don't want it to just fall straight down for that let's make a simple script and now let's place it on the parent of all of the slices so these slices are a child of this object and then over here let's simply apply a force to all those parts so that's pretty easy let's make a simple awake and then awake we just cycle through all the children so just do a for each on the transform then you try to get the rigid body so you get the rigid body and then with that one you can just call the function at explosion force this one takes a certain force then it takes an explosion position now this is a global position so we need to find that so here in the editor just position a game object somewhere around here let's say we want to hit it more on the lower side so that it explodes up and back okay so let's use sort of this position and yep that's pretty much it now just play around these values and now as soon as we hit on play and if there it is we've got our nice screen explosion all right awesome so far so good so we have our virtual screen all sliced up and flying away but of course we don't want to run this in the middle of our world we want it to be exactly in front of the screen and we also want to manually trigger the explosion by the way if you find the video helpful please hit the like button it's a tiny thing but it really does help thanks so for that let's first position this object all the way off screen the size of the unity world is pretty much infinite so let's put it on a thousand a thousand a thousand so it's way far away from anything else then let's make another camera just render the slice quand so if you're just going to create create a new camera then just position it looking straight at the quad by the way here's a quick tip for quickly positioning a camera just select the object then position the scene view then you click on control shift and f and it positions the camera exactly where the screen view is so just like that it's looking and then you can just go ahead and make this perfect so put all of these on zero like that now in order to make sure that this camera renders on top of the other one make sure this one has a higher priority so usually the main camera starts off on 1 so putting this one on zero does work then next thing is over here on the background type instead of skybox let's go with a solid color and for example make the background all in black and i'll really just position everything so in this case let's move the camera slightly forward there you go just make sure that it fits perfectly now this effect will happen really quickly so it doesn't have to be mathematically perfect just like this is perfectly good so just do all that let's make the camera also a child of the object and start off with this disable there you go that's the normal view then we're going to press a button enable this one and everything blows up okay so let's handle another script to make that simple action then just make a game object to run this and then over here pretty simple let's first add the reference so let's make it a serialized field of a transform so here in the editorial let's just drag the reference okay and then just on private void update let's listen to a key down and if that's it we just enable the game object okay so just like that it should already be working last thing we just need is to reposition over here the explosion position so here it is the scene is looking perfectly normal now let's say that i finally win or i get a game over or transition into something and boom and there you go everything turns into an image and everything gets shattered all right awesome okay so with this we have most of it working let me just mention one last thing in my reply to that original comment i said you could achieve this result with a rendered texture and that's true that's one approach it's exactly what we have working here however unlike this we're getting a view of the world that is updating now this scene is pretty static there's pretty much just only some smoke there so when it turns into an image in shatters you don't actually see it updating but if there were moving cars in people then it would be very noticeable now maybe that's the effect you're going for if so then this works perfectly but for this effect i think it makes more sense to have the game look frozen while the effect plays this is meant as a game over or a scene transition effect so i think being static makes a bit more sense so if what we want is instead a static image then what that really means is that we just need to take a screenshot of the whole view and then use it on the exploding object so instead of the render texture method let's use the screenshot method which i also covered in another video in that video i covered multiple methods depending on what you want to do here i've got one of the methods shown in that video so in this case i'm using the coroutine method so i use the code routine to wait for the end of the frame then i grab the screen width and height i take it onto the screenshot so using read pixels and apply and then i simply got a reference to the shadow material and then just calls that texture and now for the name here for some materials especially older materials the main map is actually called the underscore main text however here i'm using the universal render pipeline lit material and for this one it's called the base map and the reference name is underscore base map so just in case you use underscore main text and doesn't work then go ahead and make this change and the other thing is if you want to take a screenshot naturally we want to take that screenshot before we actually enable the explode transform otherwise we would just see the slices and not the actual screenshot we want okay so that's pretty much it we're capturing a screenshot rendering it onto a texture and then using that texture onto our materials so just like this our entire effect should be working so here is the scene now let's say i get a game over or i beat this level and then suddenly boom and yep there it is so a really nice screenshot effect so i'm playing the game then triggers the whole thing turns into an image and it explodes and the whole thing falls off so we have a really nice screenshot effect awesome so you can see how this would be perfect for making an interesting transition or a game over screen there's also one more interesting thing you could do with this you could take the exploding screen camera the one that sees the parts and lower the alpha down to zero and then for the render type make this an overlay camera and then on the main camera over here on the camera stack just go ahead add that one on top of this one and now if you point like this here it is the game is playing and i trigger it and boom there you go the whole thing blows up but the game is still playing so this would be yet another variation of this effect so maybe this could be a special ability on the player where it would deal tons of damage in order to show that much damage it would shatter the screen but then the game would keep going so as you can see this effect is quite easy to do and looks pretty nice thanks again for that comment suggestion this was a fun effect to make also don't forget to check out jason's black friday course bundle in the link in the description get a deep discount and learn how to make games from a veteran in the games industry alright hope that's useful check out these videos to learn some more thanks to these awesome patreon supporters for making these videos possible thank you for watching and i'll see you next time you
