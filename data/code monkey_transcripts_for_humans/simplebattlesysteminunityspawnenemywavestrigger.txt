With timestamps:

00:00 - this video is sponsored by dashlane in
00:01 - this video we're going to make a simple
00:04 - battle system like the one I used in the
00:06 - top-down shooter game I made recently
00:07 - we're going to have a trigger to start
00:09 - the battle spawn the enemies in waves
00:11 - and when all of them are dead the battle
00:13 - will be over let's begin
00:17 - [Music]
00:22 - hello and welcome I'm your code monkey
00:24 - and this channel is all about helping
00:25 - you learn how to make your own games
00:27 - with NF tutorials made by a professional
00:29 - indie game developer so if you find the
00:31 - video helpful consider subscribing okay
00:33 - so here's what we want to make over here
00:35 - is my player character and I can move
00:37 - around and in here we can see a nice
00:39 - very inviting door being open and in
00:42 - there we have a nice key that we want to
00:43 - grab so it seems empty but as soon as we
00:45 - approach if there you go the door comes
00:47 - behind us and a bunch of enemies start
00:49 - being spawned on multiple ways so they
00:51 - start being strong they start attacking
00:53 - me and I'm closed inside of this battle
00:55 - arena so here they are one less enemy
01:04 - and I shoot him and there go the battle
01:06 - is over all the enemies are dead and the
01:08 - exit door is now open so now I can go
01:10 - through the door I can open this door
01:12 - using the key and now I can go touch a
01:14 - trophy and there you go I've won this
01:16 - nice mini game so here we have a nice
01:18 - battle system which is exactly what I
01:20 - use in the top-down shooter game I made
01:22 - recently so go check out that video and
01:24 - play that game to see of this in action
01:26 - the system is built in a very simple way
01:29 - and can easily be adapted and expand
01:31 - upon a bunch of the things that you see
01:33 - in here were made in previous videos so
01:35 - go to the page to play that game which
01:36 - contains links to on with these elements
01:38 - and since we're talking about a battle
01:40 - system you should also think about your
01:42 - personal online security with this video
01:44 - sponsor dashlane is your all-in-one
01:45 - internet shortcut to help you improve
01:47 - your productivity and security while
01:49 - using the web it's available on all your
01:51 - devices it saves on your passwords
01:53 - credit card and personal information
01:55 - safely in one place and makes the
01:57 - internet a one-click autofill experience
01:59 - as I'm sure you've heard it's extremely
02:01 - important to use strong unique passwords
02:03 - on every account you create the biggest
02:05 - mistake people do is use a single
02:07 - password on every single service they
02:08 - sign up for doing that means that if one
02:10 - account is compromised and all their
02:12 - accounts are compromised so the solution
02:14 - is to use a unique password for each
02:15 - service but it can be quite challenging
02:17 - to remember all those passwords get the
02:19 - free dash line app on your smart phone
02:21 - tablet or computer and you'll be able to
02:23 - generate super strong unique passwords
02:25 - for each service you sign up for whilst
02:27 - only having to remember a single master
02:29 - password your master password is never
02:31 - transmitted or stored anywhere all your
02:33 - information is stored using dash
02:35 - patented zero knowledge security
02:37 - architecture which features the
02:38 - strongest encryption available and is
02:40 - recognised as a safest way to store
02:42 - personal data so even if something were
02:44 - to happen to dashing servers your info
02:46 - would still be secure it is also more
02:48 - than just a password manager one feature
02:50 - that I love is secure notes and
02:52 - documents you can serve whatever
02:53 - sensitive or very important information
02:55 - you have and to always be available
02:57 - everywhere through the app so for
02:59 - example you can make a note with your
03:00 - banking info or social security number
03:02 - and keep it with you at all times on
03:04 - your phone or tablet or computer once
03:06 - again everything is secured with
03:08 - best-in-class encryption without the
03:09 - master password no one can decrypt your
03:11 - info not even - Lee download Aisling for
03:14 - free on your first device by clicking
03:16 - the link in the description and
03:17 - automatically get a 30-day free trial of
03:19 - premium by downloading the free app
03:21 - you'll be supporting channel in getting
03:22 - an awesome program to help you manage
03:24 - your online info
03:25 - thank you to dashlane and also thank you
03:27 - to these awesome supporters for making
03:29 - this video possible all right so here's
03:31 - our battle system this is our goal let's
03:33 - get to it okay here we are in our CERN
03:36 - scene I just have my player character
03:38 - I'm looking around and I can shoot I've
03:40 - covered the weapon aim in a previous
03:42 - video so check that out and I'm also
03:44 - using a nice particle system for the
03:46 - ball shell so check them out as well
03:48 - okay let's make our battle system so
03:51 - here in the editor let's begin by making
03:53 - a new C sharp script and call this the
03:55 - battle system let's make a game object
04:00 - to run our script so call it battle
04:02 - system and drag the script on to it okay
04:04 - now in here this is going to be a very
04:07 - simple script
04:08 - so let's first make a function to start
04:10 - our battle so let's make a front void
04:13 - call it start bow and in here let's just
04:16 - do a debug log and call start bow and
04:21 - now let's make a start just to test
04:23 - things out and on started we're going to
04:25 - start our about okay there it is very
04:28 - simple let's test any of there's our
04:31 - console showing start battle alright so
04:33 - far so good now we want to spawn enemies
04:35 - in our battle system so over here I have
04:38 - a bunch of prefabs for the various
04:40 - enemies that I made for the top-down
04:41 - shooter game so for example let's grab
04:44 - the archer enemy and place it somewhere
04:45 - over here so right there now here the
04:48 - enemies
04:49 - have this enemy spawn script so inside
04:51 - the enemy spawn script we have a simple
04:54 - spawn function so by default the enemy
04:56 - starts off hidden and when this function
04:57 - is called it won't actually be spawned
04:59 - so if I just run the game like this and
05:02 - yet there you go there's no enemy
05:03 - currently spawned so we need to
05:05 - instantiate our prefab and then combat
05:07 - function in order to actually spawn our
05:08 - enemy so we're here on the battle system
05:10 - let's add a reference field for our
05:12 - enemy and on start' battle we're going
05:19 - to go into the transform get the
05:20 - components of type enemy spawn then we
05:22 - call these font function okay just like
05:27 - that
05:27 - now let's track the reference in the
05:29 - editor so this one put it in there okay
05:31 - what's this and if there it is here we
05:33 - are any up there's the enemy he spawned
05:36 - immediately and became spawn all right
05:38 - great
05:39 - now we don't want the battle to start
05:41 - immediately but rather only when the
05:42 - player reaches a certain position so the
05:44 - way we're going to do that is using a
05:46 - Collider trigger so back in the editor
05:49 - let's make an empty game object conflict
05:52 - our battle trigger and inside we're
05:56 - going to add a box Collider 2d component
05:58 - and we make sure that we set is trigger
06:00 - to true and now make it big enough right
06:02 - here in the middle okay just like that
06:04 - so when the player enters into this area
06:07 - then the battle will actually begin
06:08 - again remember to set this trigger to
06:11 - true so now let's make a script to
06:13 - handle these collisions so in here let's
06:15 - make a new c-sharp script call this our
06:18 - collider trigger and drag the script
06:21 - onto our game object ok and now in here
06:23 - we just do the trigger functions so we
06:26 - simply do the ontriggerenter 2d so this
06:30 - function gets called whenever another
06:32 - Collider enters inside the area of this
06:34 - trigger Collider so when that happens
06:36 - let's see if it's the player that
06:38 - entered so we do a gift component on the
06:43 - collider that entered inside of this
06:45 - trigger and you simply test if it is not
06:47 - known then we have the player inside the
06:51 - trigger area so it's in here that we
06:53 - actually want to start our bow however
06:55 - we want to make sure that this class is
06:57 - nice and simple and keep it clean so
06:59 - let's make sure that it's separated from
07:01 - the battle system
07:02 - so the way we keep them separate but
07:04 - still now when this happens is by using
07:06 - an event so in here we can make a new
07:08 - event let's call this on player in turn
07:12 - trigger and now we have this event and
07:16 - we simply fire it in here so we do
07:18 - invoke press in this and even our it's
07:20 - empty
07:23 - all right there it is so again this
07:25 - class does not have any reference to the
07:27 - balance system at all now before we see
07:29 - how we're going to connect it let's
07:31 - simply add a debug table lets you see if
07:35 - this fires ok here we are and we have
07:37 - our start battle since it's starting
07:39 - right on start and if we go in if there
07:41 - you go we have the player inside the
07:42 - trigger right great ok so now that we
07:45 - have the trigger working let's attach
07:47 - the event on our battle system so here
07:50 - we had another field of type collider
07:54 - trigger and then here on start we
07:58 - subscribe to the on player enter trigger
08:00 - event and when that happens then we
08:02 - start our bell alright so let's see if
08:05 - the enemy stays hidden and only gets
08:06 - spawned whenever the player enters this
08:08 - area ok here we are and if we go in yup
08:11 - there you go there is no enemy spawn so
08:13 - the battle has not started and as soon
08:15 - as I go in if there you go we have our
08:17 - battle starting the enemy get spawned
08:18 - and there he goes ok so this is working
08:21 - but we also have one issue now the issue
08:23 - is that currently I'm outside of the
08:25 - trigger and now if I go back in there yo
08:27 - the spawn function gets called again so
08:29 - every time I enter it gets in obviously
08:31 - we only want the battle to start - once
08:33 - so let's sort that now the way that we
08:35 - make sure that the battle only starts
08:37 - once is by making a very simple state
08:39 - machine so we're here let's define a
08:41 - noon for all of our possible States
08:45 - so our states are idle so before the
08:48 - battle has been activated and then we
08:49 - have active whilst the battle is active
08:51 - so then we have a field to store our
08:54 - current state and by default we start
08:57 - off at idle and then when the player
09:00 - enters the trigger we test if the states
09:03 - equals state title if so then we do
09:06 - start the battle and over here we set
09:08 - the state equals state active all right
09:11 - so that should have fixed the problem of
09:13 - the battle starting multiple times let's
09:14 - see ok
09:16 - here we are and as I move up there you
09:18 - go the battle starts and I get away from
09:19 - the trigger and back inside any of the
09:21 - battle no longer starts more than once
09:22 - and if we check the thing there you go
09:25 - as you can see the player is going
09:26 - inside multiple times but the battle
09:28 - only started once all right awesome now
09:31 - here since we're using events another
09:32 - way that we can make sure this gets
09:33 - called only once is to unsubscribed
09:36 - after the event is triggered so that way
09:38 - we're not wasting CPU cycles by having
09:41 - this function be called more than is
09:42 - absolutely necessary
09:43 - all right so we have our battle starting
09:46 - when the player enters the trigger now
09:48 - in here we're currently only spawning
09:49 - one enemy now let's spawn a bunch more
09:51 - so if here instead of just having our
09:53 - enemy transform let's have an array of
09:56 - enemy spawns so instead of a single one
10:01 - we have an array of enemy spawns and
10:03 - making it by enemy spawns won't save us
10:05 - the yet component call so when we start
10:08 - the battle we simply cycle through the
10:09 - array it only do is trigger all of the
10:17 - enemy spawns that spawn all right so
10:19 - this should be working for spawning
10:20 - multiple enemies let's see the editor so
10:23 - here we are and there's our battle
10:24 - system script as you can see we have no
10:26 - right now here let's place a bunch more
10:28 - enemies you know here's a quick unity
10:30 - tip we can use the nice inspector and
10:32 - lock button right there so we click now
10:33 - the inspector is locked so now I can go
10:35 - over here and select all four of my
10:37 - enemies and drag them directly in there
10:39 - you go it fills up the array
10:40 - automatically now just position them all
10:47 - right so here's all the enemy set up
10:49 - inside of the enemy spawn alright so
10:50 - let's see that okay here we are
10:52 - everything is empty there's no enemies
10:54 - nothing and as soon as I go inside there
10:56 - we go the battle starts and all of them
10:57 - get spawned instantly and they're all
10:59 - attacking me and yep there you go just
11:01 - like that all right great
11:05 - so essentially in here we built what we
11:08 - could call a enemy spawn wave so we have
11:10 - a bunch of enemies getting spawned right
11:11 - at once now we can expand upon our
11:14 - battle system in order to make multiple
11:16 - waves separated by a certain timer so to
11:19 - handle the concept of waves instead of
11:20 - having multiple arrays of race let's
11:23 - simply create a specific object so in
11:25 - here we create a nice class let's call
11:29 - this the
11:32 - and now inside of here is when we're
11:35 - going to have our enemy spawn array and
11:39 - up here instead of having an array of
11:41 - enemy spawns in here we just have a
11:42 - weight so on start Venom we simply go
11:46 - into the wave and we call spawn enemies
11:47 - so let's make this function which won't
11:50 - do exactly this all right there it is
11:55 - very simple but we're now using a nice
11:57 - nested class now let's go into the
11:59 - editor in order to set up this wave and
12:02 - over here in the editor after the code
12:03 - compounds as you can see we do not have
12:05 - our wave visible now the reason for that
12:07 - is because custom objects do not show up
12:09 - in the inspector by default in order to
12:11 - make them show up we need to go in here
12:13 - and we need to add the attribute system
12:16 - dot serializable and by doing that yep
12:20 - there you go over here in the editor we
12:21 - can now see our wave so our way which
12:23 - contains the enemies phone ring so let's
12:25 - use the same lock inspector trick in
12:27 - order to drag all these references like
12:29 - that ok so it says to make sure that
12:31 - it's working exactly the same ok here we
12:33 - are let's go up and if there you go all
12:35 - of them get spawned immediately as
12:37 - intended so all of the logic is still
12:39 - working exactly the same as before ok so
12:43 - here we now have an object to represent
12:45 - a single enemy spawn wave and obviously
12:48 - you can guess where we're going with
12:49 - this so in here instead of having a
12:51 - single wave let's have an array of waves
12:53 - so we have the wave right so we're going
12:56 - to have multiple ways that we can spawn
12:58 - but we don't want them to spawn all at
13:00 - once since that would really just be one
13:02 - wave so let's add another field in here
13:06 - we're going to have a field for a simple
13:08 - timer so this is how much time since the
13:10 - battle has started will this wave
13:12 - actually spawn and then instead of
13:14 - exposing the spawn enemies directly
13:16 - let's expose a update function on update
13:20 - we simply reduce the countdown time and
13:24 - then we test if the timer is under zero
13:26 - then let's actually spawn enemies and
13:30 - again in order to make sure that our
13:31 - code is nice and clean we're going to
13:33 - make this one a try so outside and we
13:35 - need to do is call this function however
13:37 - in here you can probably already yes
13:39 - that there's an issue in here and the
13:41 - issue is that essentially we're going to
13:42 - on enemies every single frame after the
13:44 - timer reaches under zero so here we're
13:46 - only going to run this logic if the
13:48 - timer is bigger than zero so if the
13:53 - timer is bigger than zero we're going to
13:55 - count down after we count down we check
13:57 - if it's under or equal to zero and if so
13:59 - then we spawn off the enemies inside of
14:01 - this way all right so this is our logic
14:03 - for a single wave and now here we have
14:05 - this our panel okay now let's also add a
14:08 - update and inside this update we're
14:11 - simply going to cycle through all the
14:12 - waves and all we got to do is cone wave
14:16 - that update and that's it however we're
14:20 - also using a state machine so we do not
14:22 - want this to be calmed whenever the
14:23 - battle system is idle so we simply do a
14:26 - switch on the current state and we
14:30 - already run this once the paddle is
14:31 - active all right so here is all of our
14:35 - logic in order to support multiple waves
14:37 - and each of them separated by a
14:39 - different timer and then here we should
14:40 - actually include the zero as well in
14:42 - case we want set timer to zero to start
14:44 - right as soon as the battle starts so
14:47 - now we can go into the editor in order
14:49 - to fill up our wave array and test
14:50 - things out
15:03 - all right so here we have everything set
15:05 - up so we have three different waves that
15:08 - we are currently spawning so element 0 1
15:10 - & 2 okay
15:11 - each of them has an enemy spawn array
15:13 - and the timers so on the first wave
15:16 - we're going to spawn right on the 0
15:17 - second so as soon as the battle starts
15:19 - it won't spawn this and turn spawn 3
15:21 - archers then after 2 seconds it won't
15:23 - spawn the second wave which won't spawn
15:25 - 3 Chargers and after 5 seconds it won't
15:27 - spawn the last wave with 3 shooters okay
15:30 - let's test okay here we are and yep
15:33 - there's nothing happening you know
15:34 - battle is active and since I go in give
15:37 - their yo the archers get spawn there you
15:38 - go 3 of them after a while 3 charges get
15:40 - spawn and after a while yep three
15:42 - shooters get spawn so just like this we
15:45 - already have way too many enemies but
15:47 - yep our wave logic is working correctly
15:53 - alright so just like this we have
15:55 - multiple waves spawning multiple enemies
15:57 - at different times and everything looks
15:59 - great
16:00 - awesome all right now all that's left is
16:02 - to hem on the end of the battle so to
16:05 - hell on the end there are many ways we
16:06 - can do that let's go with the simplest
16:08 - one so we're going to check if all of
16:11 - the enemies that were spawn have already
16:12 - been killed so if every single wave has
16:15 - already spawned and all the enemies in
16:17 - each of those waves are dead then the
16:19 - battle is over so here let's make a
16:21 - public bone call it is wave over and now
16:25 - the wave will be over if the enemies
16:27 - have been spawned so we check if the
16:29 - timer is under 0 that means the wave has
16:33 - been spawned and if it hasn't been
16:36 - spawned then we simply return false
16:37 - since the enemies have not spawned yet
16:40 - and if they have been spawned then we
16:44 - psych on through our enemy spawns and in
16:49 - that script we can ask if the enemy
16:52 - spawn dot is alive so if the enemies
16:56 - don't live then the wave has not been
16:58 - finished so we return false
17:01 - and if we get all the way down here that
17:03 - means that none of them are alive so we
17:05 - return true ok so this is the logic for
17:09 - testing if the wave is over so first we
17:11 - check if it's spawn
17:12 - if it didn't then we simply return
17:14 - phones if the wave has spawned then we
17:16 - go through every single enemy if at
17:18 - least one of them is still alive then we
17:20 - return false if none of them is alive
17:22 - then we return true and the wave is
17:23 - indeed over so then outside here in our
17:26 - battle script let's make a function test
17:29 - if the battle is over and we do that is
17:33 - we just call this function on every
17:35 - single way so we cycle through all the
17:37 - waves all right so here we have a
18:01 - function to ask if one of the waves are
18:03 - over so we use the is wave over function
18:06 - that we built down here if it is not
18:07 - over return false if we go through all
18:09 - of them then we return true and in here
18:11 - we test if the battle is over we only
18:13 - test if the battle is still active and
18:15 - if so and all the battles are over then
18:17 - the battle is over so let's add another
18:19 - state for when the battle is over when
18:24 - it is over we modify the state and let's
18:27 - also do a debug log saying battle over
18:31 - all right so now we need to do is call
18:33 - this function all the way in here all
18:36 - right this should be working
18:37 - let's test all right they're days I've
18:45 - come Alton and yep over here we can see
18:47 - start battle and then the battle is over
18:48 - all right right so we are correctly
18:50 - identifying when the battle has ended
18:52 - now here the way we set things up we are
18:55 - testing if the battle is over on every
18:57 - single frame now that's free wasteful
18:59 - since most frames nothing will change so
19:01 - a better case would be to test this only
19:03 - when the enemy spawn actually dies so
19:06 - you could have an event on the enemy
19:07 - spawn to test when it dies and if so
19:09 - then we update a simple point in here to
19:11 - test if the wave is over so that's one
19:13 - way that we could greatly improve
19:14 - performance in here but just for testing
19:17 - purposes this way that we did works nice
19:19 - so just like this we have pretty much
19:21 - our entire very simple final system now
19:24 - we can apply this with a bunch of doors
19:25 - in a bunch of thing
19:26 - in order to make everything look nice
19:43 - alright so here I've had a bunch of
19:46 - things there's a key right in the middle
19:48 - of the room and the key won't open this
19:49 - door which allows us to reach the trophy
19:51 - now the key and or were made in the key
19:53 - door system video so we'll go check that
19:55 - out and then we have a bunch of doors
19:57 - that do not require keys so much is seen
19:59 - like this and yep this one starts off
20:02 - open and there's a key in there and that
20:05 - door in there starts off close ok so
20:08 - what we want is for the battle to start
20:10 - when the battle starts we want to close
20:11 - this door and when the battle is over we
20:13 - want to open this door ok so let's make
20:15 - a testing script to connect all of that
20:17 - together so you create an empty game
20:19 - object let's just call it testing and
20:22 - let's create a testing script ok now in
20:26 - this script we can use events to keep
20:28 - our logic nice and clean and still make
20:30 - everything nicely connected so here
20:33 - let's add fields for both of our doors
20:38 - ok we have the entry door in the exit
20:41 - door and now let's also have a field for
20:43 - our battle system ok there it is now in
20:47 - the editor let's drag those references
20:48 - so here drag the entry door right there
20:51 - drag the exit door in there and now the
20:53 - battle system up here ok so back in here
20:56 - we have all of our references and now on
20:58 - our start we're going to handle our
21:00 - logic so we want to close this one when
21:03 - the battle starts and open this one when
21:05 - the battle ends so to do that let's go
21:07 - into the battle system and in here we're
21:09 - going to add some events an event on
21:15 - Battlestar one on battle over so now we
21:18 - can go down here and simply far off
21:19 - these events so in here what I don't
21:21 - start we invoke and in here on the test
21:25 - battle over we invoke the other one
21:29 - alright so we have these two events and
21:32 - we can now go back into our testing and
21:34 - connect both of those
21:45 - all right so here we are making our
21:47 - connections using some nice events so
21:50 - when the baton starts we're going to
21:51 - close the entry door and set the corner
21:53 - to read and when the barrel ends we're
21:55 - going to open the exit door not this one
21:57 - alright open the exit door and we set
21:59 - the color to green so again you can see
22:01 - how by using events we can make sure
22:03 - that all of our code is nicely dekopon
22:05 - so the valence system in this case knows
22:07 - absolutely nothing about whatever doors
22:10 - are opening or closing all it knows is
22:11 - how to handle the baton system and here
22:14 - on testing we handle whatever
22:15 - connections we need between the battle
22:17 - system and any other behavior we want
22:19 - all right so let's test so here we are
22:22 - with the first door nicely open and the
22:24 - second one is closed and as soon as you
22:26 - go in and we trigger yep there you go
22:27 - the entry door is closed and the exit
22:30 - door is still closed now let's try to
22:32 - kill all of our enemies so alright all
22:39 - of them are out and there you go as soon
22:40 - as they all died we ran the logic on the
22:43 - battle is over which opened this door so
22:45 - now I can grab this key I can go up here
22:47 - now I open this door and there's a nice
22:49 - trophy and there you go the trophy zooms
22:51 - in and you play the nice animation
22:53 - awesome so here we have our complete
22:55 - nice battle system we made sure to write
22:58 - clean code so this system is easily
23:00 - adaptable and expandable we also made
23:02 - this very simple Collider trigger script
23:04 - that can be used in multitude of
23:05 - scenarios so we just place this and then
23:07 - we have a nice event that we can connect
23:09 - with any other logic we want and again
23:11 - the barrel system we made sure that it
23:13 - works with two nice events so we can
23:15 - connect the start and the end of the
23:16 - battle with whatever other things we
23:18 - want to happen so here it is again our
23:20 - nice battle system we go in everything
23:22 - starts on the enemies at spawn they get
23:24 - spawn in multiple waves they attack and
23:27 - after killing all of them and there you
23:31 - go with the battle ends the door opens I
23:33 - can go in I can open this door and enter
23:35 - it into the nice trophy you can see this
23:37 - used in action in the top-down shooter
23:39 - game I made recently
23:40 - so go apply that to see a practical
23:42 - application of this battle system
23:43 - thank you to dashlane and also thank you
23:46 - to these awesome supporters for making
23:47 - this video possible as always you can
23:49 - download the project
23:50 - the new tony's from unity karmic account
23:52 - subscribe to the channel for more ent
23:54 - deterrents post any question having it
23:56 - comes and I'll see you next time
23:58 - [Music]

Cleaned transcript:

this video is sponsored by dashlane in this video we're going to make a simple battle system like the one I used in the topdown shooter game I made recently we're going to have a trigger to start the battle spawn the enemies in waves and when all of them are dead the battle will be over let's begin hello and welcome I'm your code monkey and this channel is all about helping you learn how to make your own games with NF tutorials made by a professional indie game developer so if you find the video helpful consider subscribing okay so here's what we want to make over here is my player character and I can move around and in here we can see a nice very inviting door being open and in there we have a nice key that we want to grab so it seems empty but as soon as we approach if there you go the door comes behind us and a bunch of enemies start being spawned on multiple ways so they start being strong they start attacking me and I'm closed inside of this battle arena so here they are one less enemy and I shoot him and there go the battle is over all the enemies are dead and the exit door is now open so now I can go through the door I can open this door using the key and now I can go touch a trophy and there you go I've won this nice mini game so here we have a nice battle system which is exactly what I use in the topdown shooter game I made recently so go check out that video and play that game to see of this in action the system is built in a very simple way and can easily be adapted and expand upon a bunch of the things that you see in here were made in previous videos so go to the page to play that game which contains links to on with these elements and since we're talking about a battle system you should also think about your personal online security with this video sponsor dashlane is your allinone internet shortcut to help you improve your productivity and security while using the web it's available on all your devices it saves on your passwords credit card and personal information safely in one place and makes the internet a oneclick autofill experience as I'm sure you've heard it's extremely important to use strong unique passwords on every account you create the biggest mistake people do is use a single password on every single service they sign up for doing that means that if one account is compromised and all their accounts are compromised so the solution is to use a unique password for each service but it can be quite challenging to remember all those passwords get the free dash line app on your smart phone tablet or computer and you'll be able to generate super strong unique passwords for each service you sign up for whilst only having to remember a single master password your master password is never transmitted or stored anywhere all your information is stored using dash patented zero knowledge security architecture which features the strongest encryption available and is recognised as a safest way to store personal data so even if something were to happen to dashing servers your info would still be secure it is also more than just a password manager one feature that I love is secure notes and documents you can serve whatever sensitive or very important information you have and to always be available everywhere through the app so for example you can make a note with your banking info or social security number and keep it with you at all times on your phone or tablet or computer once again everything is secured with bestinclass encryption without the master password no one can decrypt your info not even Lee download Aisling for free on your first device by clicking the link in the description and automatically get a 30day free trial of premium by downloading the free app you'll be supporting channel in getting an awesome program to help you manage your online info thank you to dashlane and also thank you to these awesome supporters for making this video possible all right so here's our battle system this is our goal let's get to it okay here we are in our CERN scene I just have my player character I'm looking around and I can shoot I've covered the weapon aim in a previous video so check that out and I'm also using a nice particle system for the ball shell so check them out as well okay let's make our battle system so here in the editor let's begin by making a new C sharp script and call this the battle system let's make a game object to run our script so call it battle system and drag the script on to it okay now in here this is going to be a very simple script so let's first make a function to start our battle so let's make a front void call it start bow and in here let's just do a debug log and call start bow and now let's make a start just to test things out and on started we're going to start our about okay there it is very simple let's test any of there's our console showing start battle alright so far so good now we want to spawn enemies in our battle system so over here I have a bunch of prefabs for the various enemies that I made for the topdown shooter game so for example let's grab the archer enemy and place it somewhere over here so right there now here the enemies have this enemy spawn script so inside the enemy spawn script we have a simple spawn function so by default the enemy starts off hidden and when this function is called it won't actually be spawned so if I just run the game like this and yet there you go there's no enemy currently spawned so we need to instantiate our prefab and then combat function in order to actually spawn our enemy so we're here on the battle system let's add a reference field for our enemy and on start' battle we're going to go into the transform get the components of type enemy spawn then we call these font function okay just like that now let's track the reference in the editor so this one put it in there okay what's this and if there it is here we are any up there's the enemy he spawned immediately and became spawn all right great now we don't want the battle to start immediately but rather only when the player reaches a certain position so the way we're going to do that is using a Collider trigger so back in the editor let's make an empty game object conflict our battle trigger and inside we're going to add a box Collider 2d component and we make sure that we set is trigger to true and now make it big enough right here in the middle okay just like that so when the player enters into this area then the battle will actually begin again remember to set this trigger to true so now let's make a script to handle these collisions so in here let's make a new csharp script call this our collider trigger and drag the script onto our game object ok and now in here we just do the trigger functions so we simply do the ontriggerenter 2d so this function gets called whenever another Collider enters inside the area of this trigger Collider so when that happens let's see if it's the player that entered so we do a gift component on the collider that entered inside of this trigger and you simply test if it is not known then we have the player inside the trigger area so it's in here that we actually want to start our bow however we want to make sure that this class is nice and simple and keep it clean so let's make sure that it's separated from the battle system so the way we keep them separate but still now when this happens is by using an event so in here we can make a new event let's call this on player in turn trigger and now we have this event and we simply fire it in here so we do invoke press in this and even our it's empty all right there it is so again this class does not have any reference to the balance system at all now before we see how we're going to connect it let's simply add a debug table lets you see if this fires ok here we are and we have our start battle since it's starting right on start and if we go in if there you go we have the player inside the trigger right great ok so now that we have the trigger working let's attach the event on our battle system so here we had another field of type collider trigger and then here on start we subscribe to the on player enter trigger event and when that happens then we start our bell alright so let's see if the enemy stays hidden and only gets spawned whenever the player enters this area ok here we are and if we go in yup there you go there is no enemy spawn so the battle has not started and as soon as I go in if there you go we have our battle starting the enemy get spawned and there he goes ok so this is working but we also have one issue now the issue is that currently I'm outside of the trigger and now if I go back in there yo the spawn function gets called again so every time I enter it gets in obviously we only want the battle to start once so let's sort that now the way that we make sure that the battle only starts once is by making a very simple state machine so we're here let's define a noon for all of our possible States so our states are idle so before the battle has been activated and then we have active whilst the battle is active so then we have a field to store our current state and by default we start off at idle and then when the player enters the trigger we test if the states equals state title if so then we do start the battle and over here we set the state equals state active all right so that should have fixed the problem of the battle starting multiple times let's see ok here we are and as I move up there you go the battle starts and I get away from the trigger and back inside any of the battle no longer starts more than once and if we check the thing there you go as you can see the player is going inside multiple times but the battle only started once all right awesome now here since we're using events another way that we can make sure this gets called only once is to unsubscribed after the event is triggered so that way we're not wasting CPU cycles by having this function be called more than is absolutely necessary all right so we have our battle starting when the player enters the trigger now in here we're currently only spawning one enemy now let's spawn a bunch more so if here instead of just having our enemy transform let's have an array of enemy spawns so instead of a single one we have an array of enemy spawns and making it by enemy spawns won't save us the yet component call so when we start the battle we simply cycle through the array it only do is trigger all of the enemy spawns that spawn all right so this should be working for spawning multiple enemies let's see the editor so here we are and there's our battle system script as you can see we have no right now here let's place a bunch more enemies you know here's a quick unity tip we can use the nice inspector and lock button right there so we click now the inspector is locked so now I can go over here and select all four of my enemies and drag them directly in there you go it fills up the array automatically now just position them all right so here's all the enemy set up inside of the enemy spawn alright so let's see that okay here we are everything is empty there's no enemies nothing and as soon as I go inside there we go the battle starts and all of them get spawned instantly and they're all attacking me and yep there you go just like that all right great so essentially in here we built what we could call a enemy spawn wave so we have a bunch of enemies getting spawned right at once now we can expand upon our battle system in order to make multiple waves separated by a certain timer so to handle the concept of waves instead of having multiple arrays of race let's simply create a specific object so in here we create a nice class let's call this the and now inside of here is when we're going to have our enemy spawn array and up here instead of having an array of enemy spawns in here we just have a weight so on start Venom we simply go into the wave and we call spawn enemies so let's make this function which won't do exactly this all right there it is very simple but we're now using a nice nested class now let's go into the editor in order to set up this wave and over here in the editor after the code compounds as you can see we do not have our wave visible now the reason for that is because custom objects do not show up in the inspector by default in order to make them show up we need to go in here and we need to add the attribute system dot serializable and by doing that yep there you go over here in the editor we can now see our wave so our way which contains the enemies phone ring so let's use the same lock inspector trick in order to drag all these references like that ok so it says to make sure that it's working exactly the same ok here we are let's go up and if there you go all of them get spawned immediately as intended so all of the logic is still working exactly the same as before ok so here we now have an object to represent a single enemy spawn wave and obviously you can guess where we're going with this so in here instead of having a single wave let's have an array of waves so we have the wave right so we're going to have multiple ways that we can spawn but we don't want them to spawn all at once since that would really just be one wave so let's add another field in here we're going to have a field for a simple timer so this is how much time since the battle has started will this wave actually spawn and then instead of exposing the spawn enemies directly let's expose a update function on update we simply reduce the countdown time and then we test if the timer is under zero then let's actually spawn enemies and again in order to make sure that our code is nice and clean we're going to make this one a try so outside and we need to do is call this function however in here you can probably already yes that there's an issue in here and the issue is that essentially we're going to on enemies every single frame after the timer reaches under zero so here we're only going to run this logic if the timer is bigger than zero so if the timer is bigger than zero we're going to count down after we count down we check if it's under or equal to zero and if so then we spawn off the enemies inside of this way all right so this is our logic for a single wave and now here we have this our panel okay now let's also add a update and inside this update we're simply going to cycle through all the waves and all we got to do is cone wave that update and that's it however we're also using a state machine so we do not want this to be calmed whenever the battle system is idle so we simply do a switch on the current state and we already run this once the paddle is active all right so here is all of our logic in order to support multiple waves and each of them separated by a different timer and then here we should actually include the zero as well in case we want set timer to zero to start right as soon as the battle starts so now we can go into the editor in order to fill up our wave array and test things out all right so here we have everything set up so we have three different waves that we are currently spawning so element 0 1 & 2 okay each of them has an enemy spawn array and the timers so on the first wave we're going to spawn right on the 0 second so as soon as the battle starts it won't spawn this and turn spawn 3 archers then after 2 seconds it won't spawn the second wave which won't spawn 3 Chargers and after 5 seconds it won't spawn the last wave with 3 shooters okay let's test okay here we are and yep there's nothing happening you know battle is active and since I go in give their yo the archers get spawn there you go 3 of them after a while 3 charges get spawn and after a while yep three shooters get spawn so just like this we already have way too many enemies but yep our wave logic is working correctly alright so just like this we have multiple waves spawning multiple enemies at different times and everything looks great awesome all right now all that's left is to hem on the end of the battle so to hell on the end there are many ways we can do that let's go with the simplest one so we're going to check if all of the enemies that were spawn have already been killed so if every single wave has already spawned and all the enemies in each of those waves are dead then the battle is over so here let's make a public bone call it is wave over and now the wave will be over if the enemies have been spawned so we check if the timer is under 0 that means the wave has been spawned and if it hasn't been spawned then we simply return false since the enemies have not spawned yet and if they have been spawned then we psych on through our enemy spawns and in that script we can ask if the enemy spawn dot is alive so if the enemies don't live then the wave has not been finished so we return false and if we get all the way down here that means that none of them are alive so we return true ok so this is the logic for testing if the wave is over so first we check if it's spawn if it didn't then we simply return phones if the wave has spawned then we go through every single enemy if at least one of them is still alive then we return false if none of them is alive then we return true and the wave is indeed over so then outside here in our battle script let's make a function test if the battle is over and we do that is we just call this function on every single way so we cycle through all the waves all right so here we have a function to ask if one of the waves are over so we use the is wave over function that we built down here if it is not over return false if we go through all of them then we return true and in here we test if the battle is over we only test if the battle is still active and if so and all the battles are over then the battle is over so let's add another state for when the battle is over when it is over we modify the state and let's also do a debug log saying battle over all right so now we need to do is call this function all the way in here all right this should be working let's test all right they're days I've come Alton and yep over here we can see start battle and then the battle is over all right right so we are correctly identifying when the battle has ended now here the way we set things up we are testing if the battle is over on every single frame now that's free wasteful since most frames nothing will change so a better case would be to test this only when the enemy spawn actually dies so you could have an event on the enemy spawn to test when it dies and if so then we update a simple point in here to test if the wave is over so that's one way that we could greatly improve performance in here but just for testing purposes this way that we did works nice so just like this we have pretty much our entire very simple final system now we can apply this with a bunch of doors in a bunch of thing in order to make everything look nice alright so here I've had a bunch of things there's a key right in the middle of the room and the key won't open this door which allows us to reach the trophy now the key and or were made in the key door system video so we'll go check that out and then we have a bunch of doors that do not require keys so much is seen like this and yep this one starts off open and there's a key in there and that door in there starts off close ok so what we want is for the battle to start when the battle starts we want to close this door and when the battle is over we want to open this door ok so let's make a testing script to connect all of that together so you create an empty game object let's just call it testing and let's create a testing script ok now in this script we can use events to keep our logic nice and clean and still make everything nicely connected so here let's add fields for both of our doors ok we have the entry door in the exit door and now let's also have a field for our battle system ok there it is now in the editor let's drag those references so here drag the entry door right there drag the exit door in there and now the battle system up here ok so back in here we have all of our references and now on our start we're going to handle our logic so we want to close this one when the battle starts and open this one when the battle ends so to do that let's go into the battle system and in here we're going to add some events an event on Battlestar one on battle over so now we can go down here and simply far off these events so in here what I don't start we invoke and in here on the test battle over we invoke the other one alright so we have these two events and we can now go back into our testing and connect both of those all right so here we are making our connections using some nice events so when the baton starts we're going to close the entry door and set the corner to read and when the barrel ends we're going to open the exit door not this one alright open the exit door and we set the color to green so again you can see how by using events we can make sure that all of our code is nicely dekopon so the valence system in this case knows absolutely nothing about whatever doors are opening or closing all it knows is how to handle the baton system and here on testing we handle whatever connections we need between the battle system and any other behavior we want all right so let's test so here we are with the first door nicely open and the second one is closed and as soon as you go in and we trigger yep there you go the entry door is closed and the exit door is still closed now let's try to kill all of our enemies so alright all of them are out and there you go as soon as they all died we ran the logic on the battle is over which opened this door so now I can grab this key I can go up here now I open this door and there's a nice trophy and there you go the trophy zooms in and you play the nice animation awesome so here we have our complete nice battle system we made sure to write clean code so this system is easily adaptable and expandable we also made this very simple Collider trigger script that can be used in multitude of scenarios so we just place this and then we have a nice event that we can connect with any other logic we want and again the barrel system we made sure that it works with two nice events so we can connect the start and the end of the battle with whatever other things we want to happen so here it is again our nice battle system we go in everything starts on the enemies at spawn they get spawn in multiple waves they attack and after killing all of them and there you go with the battle ends the door opens I can go in I can open this door and enter it into the nice trophy you can see this used in action in the topdown shooter game I made recently so go apply that to see a practical application of this battle system thank you to dashlane and also thank you to these awesome supporters for making this video possible as always you can download the project the new tony's from unity karmic account subscribe to the channel for more ent deterrents post any question having it comes and I'll see you next time
