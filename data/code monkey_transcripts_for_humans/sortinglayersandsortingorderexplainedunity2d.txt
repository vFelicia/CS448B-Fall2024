With timestamps:

00:00 - in this video we're going to learn
00:01 - everything about sorting layers and
00:03 - sorting order
00:04 - in unity this is how you define the
00:06 - order in which 2d sprites are rendered
00:08 - and what shows up on top
00:09 - let's begin
00:10 - [Music]
00:15 - okay so this is a very simple very quick
00:16 - video just explaining how sorting layers
00:18 - and sorting order works
00:20 - now over here i have a bunch of sprites
00:22 - i have a background then a building and
00:25 - a health bar
00:26 - and on each sprite render component over
00:28 - here you can see two films one for the
00:30 - sorting layer and one for the order in
00:32 - layer
00:33 - now in a 3d game the position of the
00:34 - objects is what defines which object is
00:36 - on top of which
00:38 - so an object closer to the camera shows
00:40 - up in front of another object that is
00:41 - further away
00:42 - however in a 2d game we don't really
00:44 - have any depth
00:45 - so how we define which objects are in
00:47 - front and which are behind is with
00:49 - soaring layers
00:50 - so as an example i have some assets from
00:52 - my builder defender course
00:54 - so the background there's a building and
00:56 - there's also a simple health bar
00:58 - now we always want the background to be
01:00 - behind the buildings and we always want
01:01 - the health bar to be on top
01:03 - now right now we can't even see the
01:04 - health bar even though it isn't there
01:06 - that is because right now everything is
01:08 - on the exact same sorting layer and also
01:10 - on the same sorting order
01:12 - so with this what we have is
01:13 - non-deterministic behavior meaning that
01:15 - sometimes
01:16 - for example the health bar won't be on
01:17 - top and sometimes the background will be
01:19 - on top
01:20 - now we want our game to always work the
01:21 - same so let's fix this and organize
01:23 - everything
01:24 - now if we click over here on the sorting
01:26 - layer we have this button to add new
01:27 - sorting layer
01:28 - and if we click yeah there you go we go
01:30 - into this window showing our tags and
01:32 - layers
01:33 - and right away we can see that we have
01:34 - the default layer and we can click on
01:36 - this button in order to add a bunch more
01:38 - so let's add one for the background
01:40 - and another one for the top and now in
01:43 - here we can also drag in order to
01:45 - modify the order and now this order in
01:48 - here represents the rendering order
01:50 - so first the one on top gets rendered
01:52 - then the one underneath
01:54 - gets rendered on top of the first one
01:55 - and so on so for example the background
01:58 - is meant to be behind everything so here
01:59 - we put it on top of the list
02:01 - meaning that the background will be
02:02 - rendered first then the default gets
02:04 - rendered and then the top gets rendered
02:06 - so the top will be on top of everything
02:09 - alright so that's how you add sorting
02:10 - layers
02:11 - now go into the sprite and here let's
02:13 - change the background from sorting layer
02:15 - from default and put it on the
02:16 - background
02:17 - and as soon as we do we see that lights
02:19 - go out so the object is still there but
02:21 - it's completely black
02:22 - now this is related to the fact that in
02:23 - this demo scene i'm using the 2d
02:25 - renderer
02:26 - so over here on the project files i'm
02:28 - using this universal render pipeline
02:29 - asset
02:30 - and it's using a 2d render so here it is
02:33 - and then over here on the scene i'm
02:35 - using a global light 2d
02:37 - so the reason why everything went black
02:39 - is because this light by default only
02:41 - targets the default sorting layer
02:43 - so all of the other layers are not being
02:44 - affected by this light so as we move the
02:46 - background to a different layer the
02:48 - light node gets applied to it
02:50 - so over here just select instead of just
02:52 - hitting the default let's hit all of our
02:53 - layers
02:54 - and if there you go now the light is
02:55 - correctly being applied to all objects
02:57 - alright so that's a background sorting
02:59 - then over here on the building
03:01 - we're going to leave it on the sorting
03:02 - layer default okay that makes sense
03:05 - and lastly over here we have a health
03:07 - bar and for this one we want to show up
03:08 - on top so let's
03:09 - just select the top alright so
03:11 - everything is now organized we've got
03:13 - our background then we've got buildings
03:15 - and then we've got the health bar on top
03:16 - of
03:16 - everything so this is what sorting
03:18 - layers do they define which objects show
03:20 - up on top of which
03:22 - so first we define all the layers then
03:23 - we define the order in which they are
03:25 - rendered
03:25 - and then we set individually each object
03:28 - in its own sorting layer
03:29 - now the other film that we see in here
03:30 - is the ordinal layer or the sorting
03:32 - order
03:33 - so this is how you sort things within
03:35 - the same layer
03:36 - so for example let's duplicate this
03:38 - building and there it is now we have two
03:40 - buildings
03:41 - and both of them are on the exact same
03:43 - sorting layer and both of them also want
03:44 - the exact same sorting order
03:46 - now if we leave them on the same sorting
03:47 - order and same sorting layer then we
03:49 - have the issue that we saw previously
03:50 - which is that the behavior is not
03:52 - deterministic so sometimes this one will
03:54 - be on top and sometimes this one will
03:56 - now we want our game to always behave in
03:58 - the same way so make sure you always use
04:00 - different orders
04:01 - so here if the wood harvester is on
04:02 - sorting in order to zero
04:04 - then over here on the tower building we
04:05 - put a non 10 in order to show up above
04:08 - so with this it's on top and if we set
04:09 - it to -10 then yep now it's behind that
04:12 - one
04:12 - so the sorting order is how you sort
04:15 - objects within that same layer
04:17 - and another thing about the sorting
04:19 - order is how this is stored in a short
04:21 - so that means that you can only use
04:23 - whole numbers you can't use decimals and
04:25 - also if you try putting
04:26 - a massive number and click enter yep
04:29 - there you go it clamps down to 32 000.
04:31 - so this is the maximum value and also
04:33 - the same thing if you go into a massive
04:35 - negative number
04:36 - yep it clamps down into minus 32 000.
04:39 - so the sorting order must be between
04:41 - minus 32 000 and plus 32 000
04:43 - meaning that you have a total of 65 000
04:46 - possible values to sort within each
04:48 - layer
04:48 - and of course each layer has its own
04:50 - sorting order so for example
04:52 - if i put this tower object on plus 32
04:55 - 000
04:56 - and then the health bar let's move it on
04:58 - top
04:59 - and it's on the top starting layer and
05:00 - put it at minus 32 000
05:02 - if there you go this one is on top so an
05:05 - object on default at plus 32 000 will
05:07 - still be behind an object on top with
05:09 - -32
05:10 - 000 and since we're talking about
05:11 - sorting let me just quickly mention how
05:13 - sorting works in the ui
05:14 - so sorting in the ui is different over
05:17 - here i have an image and as you can see
05:19 - there's no sorting order or certain
05:21 - layer anywhere now instead the sorting
05:23 - in the ui
05:24 - is handled by the position in the
05:25 - hierarchy so over here i have the canvas
05:27 - with two squares a white square and a
05:29 - blue square
05:30 - and down here if i drag the blue image
05:32 - and put it up here on top on the
05:34 - hierarchy yep there you go now it shows
05:35 - up behind
05:36 - so the sorting order here works similar
05:38 - to like i said for the soaring layers
05:40 - so going from top to bottom you have the
05:42 - rendering order
05:44 - so first this object renders then this
05:46 - one gets rendered on top and so on
05:48 - and if you have objects with children
05:49 - then the same logic applies
05:51 - so first the parrot gets rendered and
05:53 - then the channel gets rendered
05:54 - also related to that is the world space
05:56 - canvas now i covered this in detail in
05:58 - another video
05:59 - but essentially you can create a new ui
06:01 - canvas and over here you can get rid of
06:04 - these two components
06:05 - and then on this option instead of
06:06 - choosing screen space overlay you can
06:08 - choose world space
06:09 - and when you do you can see a field for
06:11 - the sorting layer and
06:12 - sorting order so we can just place this
06:15 - in
06:15 - our world and then inside let's say we
06:18 - create an image so now you can set the
06:20 - canvas for example put it on top and now
06:22 - it shows up on top of everything
06:24 - and put it on default and behind it and
06:26 - yep it's behind both buildings
06:28 - so this is yet another place where
06:29 - sorting layers are used and lastly just
06:31 - to clarify one thing here which is
06:33 - sorting layers are different from
06:35 - regular layers
06:36 - when you select the game object up here
06:38 - we see a layer field
06:39 - and you can see all these layers and you
06:41 - can even click on add layer
06:43 - and yep it goes to the same as the
06:44 - previous one so we have a list of
06:46 - sorting layers and over here only seven
06:47 - layers
06:48 - so these ones are used in many places
06:50 - like for example camera rendering
06:51 - physics collisions and so on
06:53 - but they have absolutely no relation to
06:55 - the sorting layers which define how 2d
06:57 - objects are sorted
06:58 - so they have similar names but are
07:00 - completely different things alright so
07:02 - that's everything about sorting layers
07:03 - and sorting order
07:05 - when working on 2d games this is
07:06 - extremely important knowledge to have
07:08 - always keep your sprites nicely
07:09 - organized into specific layers rather
07:11 - than having all of them just on default
07:13 - so that's sorting layers and sorting
07:15 - order if you found this video helpful
07:17 - consider liking and subscribing
07:18 - this video is made possible thanks to
07:20 - these awesome supporters
07:21 - go to patreon.com unitycodemonkey to get
07:24 - some perks and help keep the videos free
07:26 - for everyone
07:27 - as always you can download the project
07:28 - files and utilities from
07:29 - unitycodemonkey.com
07:31 - subscribe to the channel for more ent
07:32 - tutorials post any questions in the
07:34 - comments and i'll see you next time
08:01 - you

Cleaned transcript:

in this video we're going to learn everything about sorting layers and sorting order in unity this is how you define the order in which 2d sprites are rendered and what shows up on top let's begin okay so this is a very simple very quick video just explaining how sorting layers and sorting order works now over here i have a bunch of sprites i have a background then a building and a health bar and on each sprite render component over here you can see two films one for the sorting layer and one for the order in layer now in a 3d game the position of the objects is what defines which object is on top of which so an object closer to the camera shows up in front of another object that is further away however in a 2d game we don't really have any depth so how we define which objects are in front and which are behind is with soaring layers so as an example i have some assets from my builder defender course so the background there's a building and there's also a simple health bar now we always want the background to be behind the buildings and we always want the health bar to be on top now right now we can't even see the health bar even though it isn't there that is because right now everything is on the exact same sorting layer and also on the same sorting order so with this what we have is nondeterministic behavior meaning that sometimes for example the health bar won't be on top and sometimes the background will be on top now we want our game to always work the same so let's fix this and organize everything now if we click over here on the sorting layer we have this button to add new sorting layer and if we click yeah there you go we go into this window showing our tags and layers and right away we can see that we have the default layer and we can click on this button in order to add a bunch more so let's add one for the background and another one for the top and now in here we can also drag in order to modify the order and now this order in here represents the rendering order so first the one on top gets rendered then the one underneath gets rendered on top of the first one and so on so for example the background is meant to be behind everything so here we put it on top of the list meaning that the background will be rendered first then the default gets rendered and then the top gets rendered so the top will be on top of everything alright so that's how you add sorting layers now go into the sprite and here let's change the background from sorting layer from default and put it on the background and as soon as we do we see that lights go out so the object is still there but it's completely black now this is related to the fact that in this demo scene i'm using the 2d renderer so over here on the project files i'm using this universal render pipeline asset and it's using a 2d render so here it is and then over here on the scene i'm using a global light 2d so the reason why everything went black is because this light by default only targets the default sorting layer so all of the other layers are not being affected by this light so as we move the background to a different layer the light node gets applied to it so over here just select instead of just hitting the default let's hit all of our layers and if there you go now the light is correctly being applied to all objects alright so that's a background sorting then over here on the building we're going to leave it on the sorting layer default okay that makes sense and lastly over here we have a health bar and for this one we want to show up on top so let's just select the top alright so everything is now organized we've got our background then we've got buildings and then we've got the health bar on top of everything so this is what sorting layers do they define which objects show up on top of which so first we define all the layers then we define the order in which they are rendered and then we set individually each object in its own sorting layer now the other film that we see in here is the ordinal layer or the sorting order so this is how you sort things within the same layer so for example let's duplicate this building and there it is now we have two buildings and both of them are on the exact same sorting layer and both of them also want the exact same sorting order now if we leave them on the same sorting order and same sorting layer then we have the issue that we saw previously which is that the behavior is not deterministic so sometimes this one will be on top and sometimes this one will now we want our game to always behave in the same way so make sure you always use different orders so here if the wood harvester is on sorting in order to zero then over here on the tower building we put a non 10 in order to show up above so with this it's on top and if we set it to 10 then yep now it's behind that one so the sorting order is how you sort objects within that same layer and another thing about the sorting order is how this is stored in a short so that means that you can only use whole numbers you can't use decimals and also if you try putting a massive number and click enter yep there you go it clamps down to 32 000. so this is the maximum value and also the same thing if you go into a massive negative number yep it clamps down into minus 32 000. so the sorting order must be between minus 32 000 and plus 32 000 meaning that you have a total of 65 000 possible values to sort within each layer and of course each layer has its own sorting order so for example if i put this tower object on plus 32 000 and then the health bar let's move it on top and it's on the top starting layer and put it at minus 32 000 if there you go this one is on top so an object on default at plus 32 000 will still be behind an object on top with 32 000 and since we're talking about sorting let me just quickly mention how sorting works in the ui so sorting in the ui is different over here i have an image and as you can see there's no sorting order or certain layer anywhere now instead the sorting in the ui is handled by the position in the hierarchy so over here i have the canvas with two squares a white square and a blue square and down here if i drag the blue image and put it up here on top on the hierarchy yep there you go now it shows up behind so the sorting order here works similar to like i said for the soaring layers so going from top to bottom you have the rendering order so first this object renders then this one gets rendered on top and so on and if you have objects with children then the same logic applies so first the parrot gets rendered and then the channel gets rendered also related to that is the world space canvas now i covered this in detail in another video but essentially you can create a new ui canvas and over here you can get rid of these two components and then on this option instead of choosing screen space overlay you can choose world space and when you do you can see a field for the sorting layer and sorting order so we can just place this in our world and then inside let's say we create an image so now you can set the canvas for example put it on top and now it shows up on top of everything and put it on default and behind it and yep it's behind both buildings so this is yet another place where sorting layers are used and lastly just to clarify one thing here which is sorting layers are different from regular layers when you select the game object up here we see a layer field and you can see all these layers and you can even click on add layer and yep it goes to the same as the previous one so we have a list of sorting layers and over here only seven layers so these ones are used in many places like for example camera rendering physics collisions and so on but they have absolutely no relation to the sorting layers which define how 2d objects are sorted so they have similar names but are completely different things alright so that's everything about sorting layers and sorting order when working on 2d games this is extremely important knowledge to have always keep your sprites nicely organized into specific layers rather than having all of them just on default so that's sorting layers and sorting order if you found this video helpful consider liking and subscribing this video is made possible thanks to these awesome supporters go to patreon.com unitycodemonkey to get some perks and help keep the videos free for everyone as always you can download the project files and utilities from unitycodemonkey.com subscribe to the channel for more ent tutorials post any questions in the comments and i'll see you next time you
