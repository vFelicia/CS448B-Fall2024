With timestamps:

00:00 - hello and welcome I'm your kmy so when
00:02 - learning pretty much anything there's
00:03 - something called tutorial hell this
00:05 - basically where people just watch
00:06 - tutorials non-stop they might watch a
00:08 - 100 videos teaching them all kinds of
00:10 - things but then when they stop watching
00:12 - and they try doing something at that
00:14 - point they get Frozen and are unable to
00:15 - build pretty much anything from scratch
00:17 - so despite watching hours and hours of
00:19 - really high quality tutorial content
00:21 - despite that those people feel like they
00:23 - haven't really learned anything so if
00:25 - this is you if you feel like you're
00:26 - watching tons of tutorials and not
00:28 - really learning anything if so then my
00:30 - best advice to you is to stop blindly
00:31 - watching tutorials and go actually do
00:33 - something specifically I think the issue
00:35 - is that some people think that watching
00:36 - just the tutorials is the only step on
00:38 - your Learning Journey some people think
00:39 - that just watching video tutorials is
00:41 - enough that if you watch enough hours of
00:43 - tutorials if you do that you won't gain
00:44 - enough knowledge however in reality
00:46 - watching these video tutorials this is
00:48 - really just one step it is the first and
00:50 - actually the smallest step now don't get
00:52 - me wrong tutorials are excellent I've
00:54 - made tons and tons of tutorials myself
00:55 - and I truly believe they are helpful in
00:57 - teaching you how to build all kinds of
00:58 - things that's really why I make all
01:00 - these videos however I want you to know
01:02 - that you don't learn just by watching
01:04 - you need to put what you learn into
01:06 - practice in order to actually solidify
01:07 - that knowledge so you need to open up
01:09 - some project and start writing some code
01:11 - modify it in various ways to see exactly
01:12 - what happens and specifically in terms
01:14 - of programming the more code you write
01:15 - the more you TR to learn so yes do watch
01:17 - tutorials but stop blly watching
01:19 - tutorials meaning don't just watch
01:21 - something in order to just take some box
01:23 - or tell people you saw some video the
01:25 - goal is watch a tutorial in order to
01:26 - learn and then take some action to
01:28 - actively apply that knowledge for for
01:29 - example if you want to learn how an
01:31 - interaction system works for that you
01:33 - can watch my tutorial on it to learn how
01:34 - it works to learn the theory behind it
01:36 - and how all these systems all the
01:38 - elements connect to one another but then
01:40 - very importantly do not ignore the
01:41 - crucial next step after watching the
01:43 - video then open up a brand new project
01:45 - and write some code to yourself you only
01:46 - truly learn by doing so do not skip this
01:48 - second step my C course that I just
01:50 - released was made exactly with this in
01:52 - mind I want you to truly learn so that
01:54 - is why I designed the frequently asked
01:56 - questions the quizzes and the
01:57 - interactive exercises you are supposed
01:59 - to go through all these after watching
02:00 - each individual video lecture by reading
02:03 - the frequently asked questions by doing
02:04 - that you are a bit more active than just
02:06 - watching and listening to a video Then
02:08 - by doing all these quizzes you are even
02:10 - more active and in order to answer
02:11 - correctly you have to retrieve the
02:13 - knowledge that you gained from the
02:14 - lecture and finally the interactive
02:16 - exercises these require you to actually
02:18 - write some code and actually put into
02:19 - practice what you learn I specifically
02:21 - designed all of these to have an
02:22 - increasing level of participation that
02:24 - is required from you meaning you go from
02:26 - passively watching just the video
02:27 - lectures to actively reading the
02:29 - frequently Asked question questions to
02:30 - actively answering some questions and
02:32 - finally very actively writing some
02:33 - actual real code if you just blindly
02:36 - watch videos you won't really learn much
02:38 - but if you put in the effort to actively
02:40 - learn and actively apply all the
02:41 - knowledge that you're gaining if you do
02:42 - that that's how you truly learn also let
02:44 - me make one quick note here the
02:46 - companion project for my C course that
02:48 - contains all this that is part of the
02:50 - premium version of the course however if
02:52 - you can't afford that's fine you can
02:53 - still learn I've already published the
02:55 - free beginner section here on YouTube
02:56 - and I will publish the free intermediate
02:58 - section next month in the video lectures
02:59 - at the very end I included the titles
03:01 - for the questions quiz and exercise so
03:03 - even when watching the completely free
03:05 - videos over here on YouTube you can
03:06 - still follow exactly what I'm saying
03:07 - here watch every lecture then actively
03:09 - go do all of this you just need to
03:11 - basically guide yourself and put in the
03:13 - effort to find the answers to all these
03:14 - questions and remember to actively write
03:16 - some code yourself if you do that then
03:18 - yep you will earn a great amount and on
03:20 - these two videos completely for free
03:21 - however if you can afford the premium
03:23 - version that's really great because it
03:24 - gives you a simple pre-plan guide path
03:26 - all you have to do is follow my
03:27 - instructions and put in the work and if
03:29 - you do that then I guarantee that by the
03:30 - end you will have gained a ton of C
03:32 - knowledge and also on this topic let me
03:34 - say I'm no different from you for
03:36 - example something recent that I had to
03:37 - learned from Squatch was dots I made a
03:39 - really detailed video tutorial about two
03:41 - months ago and the way that I researched
03:42 - for that topic was very simple first I
03:44 - watched a bunch of video tutorials on
03:46 - that topic then I read a ton of the
03:48 - official documentation and then very
03:50 - very importantly I took the next step of
03:52 - loading up a brand new Unity project and
03:54 - just started writing code so I tried
03:56 - creating a basic entity building a
03:57 - component writing a simple system and so
03:59 - on that is really how you TR learn that
04:01 - is true for you as it is for me if I had
04:03 - just watched videos and just read
04:04 - documentation then I wouldn't have been
04:06 - able to gain the knowledge that I gained
04:08 - which I then Ed to make that video
04:09 - teaching you everything that I learned
04:10 - so really what I'm saying here applies
04:12 - to both beginners and more advanced
04:13 - users regardless of how scill you are at
04:16 - something you still need to actively
04:17 - apply it in order to continue learning
04:19 - and truly learn whatever it is you're
04:20 - trying to learn and somewhat related to
04:22 - this is something that I always tell in
04:23 - the comments in my courses if you're
04:26 - following some kind of long course that
04:27 - is multiple hours if you do that and you
04:29 - don't understand some kind of part my
04:31 - advice is do not blindly keep going
04:33 - forward if you do then you're probably
04:35 - just going to be more and more confused
04:37 - so if there are some course you're
04:38 - following and there are some topics some
04:39 - part of it that you don't understand if
04:41 - so then stick with it stay there until
04:43 - you do understand research that specific
04:45 - topics more open up a project write some
04:47 - code modify some things to see what
04:49 - changes and ask some questions but
04:51 - importantly stick with it and only move
04:53 - forward once you finally fully
04:54 - understand that topic if you want to get
04:56 - the most out of pretty much any course
04:58 - my course or anyone else's courses if
05:00 - you want to truly learn definitely make
05:01 - sure what I'm saying here go through it
05:03 - step by step and don't go on to the next
05:04 - step until you fully understand the
05:06 - previous steps now this topic being
05:08 - stuck in tutorial heal this something
05:09 - that I see in a lot of comments soly now
05:11 - I can send them a link to this video
05:13 - instead of constantly rewriting the same
05:14 - thing every time if you want a guided
05:16 - path to actively learn by doing if so
05:19 - then check out my complete C course Link
05:20 - in the description like I said I
05:22 - specifically designed it to have all
05:24 - these kinds of interactive things to
05:25 - help you truly learn by doing all right
05:27 - so thanks for watching and I'll see you
05:28 - next time

Cleaned transcript:

hello and welcome I'm your kmy so when learning pretty much anything there's something called tutorial hell this basically where people just watch tutorials nonstop they might watch a 100 videos teaching them all kinds of things but then when they stop watching and they try doing something at that point they get Frozen and are unable to build pretty much anything from scratch so despite watching hours and hours of really high quality tutorial content despite that those people feel like they haven't really learned anything so if this is you if you feel like you're watching tons of tutorials and not really learning anything if so then my best advice to you is to stop blindly watching tutorials and go actually do something specifically I think the issue is that some people think that watching just the tutorials is the only step on your Learning Journey some people think that just watching video tutorials is enough that if you watch enough hours of tutorials if you do that you won't gain enough knowledge however in reality watching these video tutorials this is really just one step it is the first and actually the smallest step now don't get me wrong tutorials are excellent I've made tons and tons of tutorials myself and I truly believe they are helpful in teaching you how to build all kinds of things that's really why I make all these videos however I want you to know that you don't learn just by watching you need to put what you learn into practice in order to actually solidify that knowledge so you need to open up some project and start writing some code modify it in various ways to see exactly what happens and specifically in terms of programming the more code you write the more you TR to learn so yes do watch tutorials but stop blly watching tutorials meaning don't just watch something in order to just take some box or tell people you saw some video the goal is watch a tutorial in order to learn and then take some action to actively apply that knowledge for for example if you want to learn how an interaction system works for that you can watch my tutorial on it to learn how it works to learn the theory behind it and how all these systems all the elements connect to one another but then very importantly do not ignore the crucial next step after watching the video then open up a brand new project and write some code to yourself you only truly learn by doing so do not skip this second step my C course that I just released was made exactly with this in mind I want you to truly learn so that is why I designed the frequently asked questions the quizzes and the interactive exercises you are supposed to go through all these after watching each individual video lecture by reading the frequently asked questions by doing that you are a bit more active than just watching and listening to a video Then by doing all these quizzes you are even more active and in order to answer correctly you have to retrieve the knowledge that you gained from the lecture and finally the interactive exercises these require you to actually write some code and actually put into practice what you learn I specifically designed all of these to have an increasing level of participation that is required from you meaning you go from passively watching just the video lectures to actively reading the frequently Asked question questions to actively answering some questions and finally very actively writing some actual real code if you just blindly watch videos you won't really learn much but if you put in the effort to actively learn and actively apply all the knowledge that you're gaining if you do that that's how you truly learn also let me make one quick note here the companion project for my C course that contains all this that is part of the premium version of the course however if you can't afford that's fine you can still learn I've already published the free beginner section here on YouTube and I will publish the free intermediate section next month in the video lectures at the very end I included the titles for the questions quiz and exercise so even when watching the completely free videos over here on YouTube you can still follow exactly what I'm saying here watch every lecture then actively go do all of this you just need to basically guide yourself and put in the effort to find the answers to all these questions and remember to actively write some code yourself if you do that then yep you will earn a great amount and on these two videos completely for free however if you can afford the premium version that's really great because it gives you a simple preplan guide path all you have to do is follow my instructions and put in the work and if you do that then I guarantee that by the end you will have gained a ton of C knowledge and also on this topic let me say I'm no different from you for example something recent that I had to learned from Squatch was dots I made a really detailed video tutorial about two months ago and the way that I researched for that topic was very simple first I watched a bunch of video tutorials on that topic then I read a ton of the official documentation and then very very importantly I took the next step of loading up a brand new Unity project and just started writing code so I tried creating a basic entity building a component writing a simple system and so on that is really how you TR learn that is true for you as it is for me if I had just watched videos and just read documentation then I wouldn't have been able to gain the knowledge that I gained which I then Ed to make that video teaching you everything that I learned so really what I'm saying here applies to both beginners and more advanced users regardless of how scill you are at something you still need to actively apply it in order to continue learning and truly learn whatever it is you're trying to learn and somewhat related to this is something that I always tell in the comments in my courses if you're following some kind of long course that is multiple hours if you do that and you don't understand some kind of part my advice is do not blindly keep going forward if you do then you're probably just going to be more and more confused so if there are some course you're following and there are some topics some part of it that you don't understand if so then stick with it stay there until you do understand research that specific topics more open up a project write some code modify some things to see what changes and ask some questions but importantly stick with it and only move forward once you finally fully understand that topic if you want to get the most out of pretty much any course my course or anyone else's courses if you want to truly learn definitely make sure what I'm saying here go through it step by step and don't go on to the next step until you fully understand the previous steps now this topic being stuck in tutorial heal this something that I see in a lot of comments soly now I can send them a link to this video instead of constantly rewriting the same thing every time if you want a guided path to actively learn by doing if so then check out my complete C course Link in the description like I said I specifically designed it to have all these kinds of interactive things to help you truly learn by doing all right so thanks for watching and I'll see you next time
