With timestamps:

00:00 - in this video we're going to look at
00:01 - four ways we can interact with doors and
00:03 - unity we previously saw three methods
00:06 - for opening and closing doors and now
00:07 - we're going to look at four ways into
00:09 - those actions using a button key
00:11 - pressure plate and automatic let's begin
00:16 - [Music]
00:21 - hello and welcome I'm your code monkey
00:23 - and this channel is all about helping
00:24 - you learn how to make your own games
00:26 - with enough tutorials made by a
00:28 - professional indie game developer so if
00:30 - you find the video helpful consider
00:31 - subscribing okay so in this video we're
00:34 - going to look at four ways that we can
00:35 - interact with our doors so over here I
00:37 - have my four doors now in the previous
00:39 - video we looked at three ways that we
00:41 - can handle doors so go check out that
00:43 - video if you haven't seen it yet there's
00:45 - a link in the description and now here
00:46 - the four interaction methods that we're
00:48 - going to make can be used with any of
00:49 - those three door types so just for this
00:52 - demo I'm using the animation door but
00:54 - you can use any type you want okay so
00:56 - first of all here on the left is the
00:58 - simplest one this one is a button
01:00 - interaction so if I try to go through
01:02 - nope
01:02 - some of the object cannot go through but
01:04 - as long as I'm near it I can press
01:06 - interact button any of there you go the
01:07 - door opens and I can now pass through
01:09 - and if I press again there you go the
01:11 - door closes now one thing about this
01:13 - method is how he made it distance
01:15 - limited so if I move way too far away
01:17 - now press the button yep
01:18 - nothing happens so I need to be near the
01:21 - door in order to interact with it the
01:23 - way we set things up means that we can
01:25 - work with any door since its distance
01:27 - based I can make it interact with this
01:29 - door by pressing button by being near it
01:31 - but now if I go near this door I can
01:33 - interact with this one so the same
01:35 - script is not hard-coded to a specific
01:37 - door okay so that's the button method
01:39 - now for here we have the automatic door
01:41 - so this is pretty much the simplest one
01:43 - as I approach it there you go the door
01:45 - opens and I go through and I move away
01:47 - any of the door closes so just a very
01:50 - basic automatic door next over here is
01:54 - the really interesting pressure plate so
01:56 - this would be great for any type of
01:57 - puzzle game over here is the door and
01:59 - once again I cannot go through it but
02:02 - down here is a pressure plate and when I
02:03 - step on it
02:04 - there you go it opens the door and if I
02:06 - stay on top of the pressure plate and
02:07 - the door stays open and as I move away
02:09 - the timer starts counting down and after
02:12 - the timer goes down to zero then the
02:13 - door closes so I have to open it in
02:15 - order to go very quickly go through it
02:17 - and there you go it calls behind me and
02:21 - finally over here on the right is the
02:23 - key door system affectionately covered
02:25 - this one in detail in another video so
02:27 - here I won't just give an overview of
02:29 - how the system is set up now it works
02:31 - exactly like you might expect it so
02:33 - first without a key
02:34 - as I approached it nope I cannot open
02:35 - the door but then if I go down I grab
02:38 - the key there we go the key is now in
02:39 - the UI and I approach the door and there
02:42 - you go now I can use the key in order to
02:44 - open the door so that's the key method
02:46 - which would be perfect for any type of
02:48 - Metroidvania or Zelda game and again as
02:50 - I said all of these methods can be
02:52 - applied to any door type the way they
02:54 - work is through an interface so as long
02:56 - as the object has an open door and
02:57 - closed or functions then everything
02:59 - works
02:59 - you could even further generalizes to
03:01 - work with any object type so you could
03:04 - easily make all these methods work with
03:05 - lights to turn them on and off with
03:07 - pretty much the exact same code alright
03:09 - so here are the four methods one using a
03:12 - button on the player in order to open
03:14 - and close the door one automatic based
03:16 - on the player being nearby when using a
03:18 - pressure plate to open and close after a
03:20 - while and one using a key this video is
03:22 - made possible thanks to these awesome
03:24 - supporters go to patreon.com/scishow to
03:26 - code monkey to get some perks and help
03:28 - keep the videos free for everyone all
03:30 - right so this is our goal let's get to
03:32 - it ok so here we are in our starting
03:35 - scene now first of all we're going to
03:37 - see how we can interact with any type of
03:39 - door so here I have the three door types
03:41 - that we made in a previous video so they
03:44 - are all interactable with a simple
03:45 - mobile key input so as I press the key
03:48 - if there you go that door opens press
03:50 - another and it closes same thing for
03:53 - this one and for that so let's look at
03:55 - the script here is the door trigger
03:58 - button script and as you can see all the
04:00 - types are completely hard-coded so
04:03 - pressing the R key only opens exactly
04:05 - this door pressing the F key opens
04:07 - example this one and so on so we're
04:10 - going to fix this to make our code
04:11 - cleaner and more reusable and for that
04:13 - we're going to use an interface I have a
04:16 - dedicated video covering interfaces
04:18 - coming up so if you're not familiar with
04:19 - them then make sure you're subscribed
04:21 - and hit the bell icon so here let's
04:23 - create a new C sharp script and we're
04:25 - going to call this the AI door and in
04:28 - here first of all this is not a class
04:30 - but rather an interface and it's called
04:32 - AI door ok and now in here we're going
04:36 - to have a couple functions so first of
04:37 - all a void open door and a void closed
04:41 - door so these are the ones that were
04:43 - implemented in the other video and then
04:45 - let's also implement a nice
04:47 - so toggle door alright so that's it this
04:51 - is our very nice simple interface that
04:53 - we're going to apply to all of our door
04:54 - types now it's just implemented over
04:58 - here is the door set active so it
05:00 - similarly sets the game object to active
05:02 - or not and in here we just implement a
05:05 - door and the only one we need to
05:09 - implement is really deep toggle so let's
05:11 - do that
05:14 - and just like that
05:16 - now let's implement the same interface
05:18 - on all the other types all right so I
05:26 - implemented the interface on all three
05:28 - door types and now we can go on to the
05:30 - interact script and in here now the one
05:33 - issue that we have is that interfaces do
05:35 - not show up in the editor so if I change
05:38 - the type to this to ID or and here in
05:41 - the editor there it is you can see the
05:43 - first field
05:44 - so one workaround that we can do is
05:46 - instead we have films for game objects
05:50 - so you get a field for a game object and
05:53 - then on the private Freud awake we
05:56 - assign a ID or field so we have a door a
06:02 - field of type I door and we're going
06:05 - into the door game object a in order to
06:07 - get the component of type ID or now we
06:10 - have film for a game object so we can
06:11 - drag our door set active alright let's
06:13 - do the same thing for the other fields
06:18 - alright there it is we have three
06:20 - generic door types all of them using the
06:23 - ID or interface and we're using it by
06:25 - using the interface so this should be
06:27 - working
06:27 - let's test ok here we are there's the
06:30 - animated or press the button and there
06:32 - you go it plays the animation and same
06:34 - thing for this one it opens and now this
06:36 - one it's like to unlock and push it in
06:38 - the up there you go right awesome so
06:40 - over here we have three separate door
06:42 - types but they are all being used by
06:44 - using a common interface so just like
06:47 - this we've successfully converted all of
06:49 - our code to work with an interface so
06:50 - our interaction methods will not be
06:52 - hard-coded to a specific door tank right
06:55 - awesome
06:56 - ok so with that then now we can finally
06:58 - get to work on our floor
07:00 - so we're going to make a simple button
07:01 - for testing I'm going to use right now
07:04 - is the animated door now for the button
07:06 - we're going to start off pretty much
07:08 - examine like the script that we saw so
07:10 - let's make a new script and we're going
07:12 - to call this the door interact button so
07:16 - we're going to use a button to interact
07:17 - to the door let's make a game object to
07:20 - run and drag the script okay now here
07:25 - let's start off by having a door film
07:27 - then using the interface like we did
07:28 - previously all right so we have a film
07:33 - for our door game object and we grab the
07:35 - interface component spike in the editor
07:38 - we have the film and we can drag our
07:39 - door okay so far so good now back in our
07:42 - code let's make a front voice update and
07:45 - on update let's listen to a gate key
07:47 - down and let's say on the e key when we
07:51 - press the e key then let's toggle our
07:53 - doors to do door dot cough on door so
07:57 - just like this we should be able to open
07:59 - and close our door with a single heat
08:00 - let's test so here we are in doors sound
08:03 - and it's closed press a button and there
08:05 - you go starts opening I can go through
08:07 - press again and it closed all right good
08:09 - so far so good
08:10 - so like this we have it working as a
08:12 - mobile button however we don't really
08:15 - want it to be global in this case if we
08:17 - move all the way over here there's door
08:19 - right down there and I press the button
08:20 - and yep it still opens now what we want
08:24 - to do is to have it only interactive
08:25 - doors that are near the player so let's
08:28 - do that over here first we're going to
08:30 - need the player reference so let's add
08:33 - another field or a transform for the
08:36 - player transform and now when you press
08:40 - E we can grab the player transform dog
08:42 - position
08:43 - okay so now the question becomes is how
08:46 - do we find out what doors are near the
08:47 - player now one way would be to second
08:50 - through all the doors in the world like
08:52 - I did in the melee combat system now
08:55 - that would work but would not be very
08:56 - reusable with that method if you had too
08:59 - many doors it will become very promised
09:01 - intensive so another approach is like
09:03 - how I handled collisions in the shoot
09:05 - projectiles video in there I used
09:07 - physics so let's do that here when we
09:10 - press the key let's use the
09:12 - physics 2d in order to make a overlap
09:15 - circle all this one takes a point which
09:19 - is going to be our player transform
09:21 - position and then a radius so that's
09:23 - going to be our interact radius so just
09:27 - like that now what this does is it
09:30 - creates a circle Collider and it's going
09:33 - to return all the colliders that are
09:35 - overlapping within that circle so this
09:37 - returns an array of collided TD and now
09:41 - we can cycle through our colliders so
09:44 - for each Collider and we try to get a
09:48 - component of type ID or so commodity V
09:50 - get component of type i door and if door
09:56 - is not known then we have a door within
10:00 - our interaction range so in here we can
10:03 - do the orthogonal door all right so
10:06 - that's it so we do a overlap circle
10:09 - around the player and use the physics
10:11 - engine to locate off the doors around it
10:13 - and if there are any then it tells the
10:15 - door so since we are looking for doors
10:17 - automatically using the physics system
10:18 - then we no longer need to have a
10:20 - specific door set in here so we can get
10:22 - rid of this this and all of this all
10:24 - right
10:25 - there it is very simple now for this to
10:27 - work we actually need to make sure one
10:29 - more thing so back in the editor first
10:31 - let's drag the player reference in there
10:33 - okay and then over here we have our door
10:36 - and the way that this door works is it
10:39 - only has the colliders on the inner
10:40 - doors so on the ones that move that's
10:43 - ones that have the colliders so if we
10:45 - run it just like this it won't actually
10:47 - find this object and not the parent
10:48 - object so in order to get the parent we
10:51 - need to make sure that this one also has
10:52 - a Collider so just like that I had the
10:55 - collider I made a trigger and just right
10:57 - there in the middle of the door so just
10:59 - like this it should work our overlap
11:01 - circle should find this game object and
11:03 - it should be able to grab the door names
11:05 - which does implement our door interface
11:06 - so let's test ok so here we are and
11:09 - first of all let's move away
11:11 - ok so door is all the way over there and
11:13 - now if I press the button and if there
11:15 - you go nothing is actually happening
11:17 - it's not happening because there are no
11:19 - doors nearby a player but now if I
11:21 - approach the door I go near it and I
11:23 - press the button again there you don't
11:24 - know I'm near it
11:25 - I can actually activate and use that
11:27 - door and as I move I press again and yep
11:30 - nothing happens so I can only interact
11:32 - to the door when I'm near it now let's
11:34 - verify that it's working correctly by
11:36 - adding some more doors so let's take
11:38 - this door and just duplicate it and
11:40 - place a bunch more so one there and one
11:41 - there okay and now here let's approach
11:44 - this door down here press the button any
11:45 - of there you go I only interacted with
11:47 - this one now go towards this one press
11:49 - the button there you go with that one
11:50 - and here wait down all right so here we
11:53 - have our button interaction method fully
11:55 - working
11:56 - it works by pressing a button and it's
11:57 - smart enough to look for whatever
11:59 - objects are near so in this case we're
12:01 - working with doors but you could very
12:03 - easily make this exact same system work
12:05 - for any type of object so for example
12:07 - instead of a door you can have some
12:08 - lights with an interface that defines
12:10 - the methods to turn it on and off and by
12:12 - pressing a button you would interact
12:14 - with the lights in the exact same way by
12:16 - using the nearby ones so here is the
12:19 - first method fully working based on
12:21 - using a button now let's check out the
12:23 - second method the automatic door now
12:26 - this one is actually going to be pretty
12:27 - much easy simplest method possible we're
12:29 - going to open the door when the player
12:31 - goes in and we close it when he goes out
12:33 - and the way we're going to do that is by
12:35 - using a Collider trigger so let's make a
12:38 - new game object call this the door
12:40 - interact automatic let's position it
12:44 - right on top of the door so right in
12:46 - there okay and now let's add a box
12:49 - Collider component and we make it a
12:51 - trigger so that it's not a solid object
12:53 - and now simply extend it out okay just
12:57 - like that so when the player goes inside
12:59 - this area we're going to open the door
13:01 - and when he leaves we're going to close
13:02 - it so let's make our very simple script
13:05 - in here and you see our script our door
13:08 - interact automatic drag the script onto
13:12 - our object and open now in here it's
13:14 - going to be very simple all we really
13:16 - need to do is make the function private
13:18 - void on trigger enter to D we set the
13:22 - collider to be a trigger so we're using
13:23 - trigger and we're using enter which is
13:26 - only going to be called once when a
13:27 - Collider enters this Collider so this
13:29 - function has our Collider that called
13:32 - with this Collider and now when that
13:35 - happens we can verify if it's a player
13:37 - so to do that
13:39 - you can check if the collider
13:40 - getcomponent and in this case the player
13:43 - is using the character controller 2d so
13:47 - if that one is not known then the player
13:51 - entered this Collider and now to open
13:54 - the door and let's apply the door and
13:55 - like we did previously so you have our
14:01 - door game object to grab the door that
14:03 - appoints the interface and in here all
14:05 - we do is open our door and then we're
14:07 - going to do the same thing on the
14:09 - private void on trigger exit 2d and we
14:14 - do the same thing check if it's the
14:16 - player and if so then we call it the
14:18 - door alright so there it is very simple
14:24 - this is all we need to do so let's test
14:27 - ok here we are in the door is closed and
14:29 - now as I approach it there you go the
14:31 - door opens and I go through it now I
14:33 - move out of the area and there you go
14:35 - the door automatically closes right
14:37 - awesome so just like this we have our
14:40 - automatic trigger working so pretty much
14:42 - a very simple very automatic door so
14:45 - this is probably the simplest method
14:46 - possible and here in the code we're
14:49 - testing specifically for the player
14:51 - script but we could easily do the exact
14:53 - same thing that we did with the door
14:54 - interface you could create a sort of
14:57 - door interact object interface and apply
15:00 - it to the player and whatever other
15:01 - objects you also wanted to open the door
15:03 - so that way the door would work with a
15:05 - player with NPCs with animals whatever
15:07 - you want all right so here is the second
15:10 - method based on automatically opening
15:11 - the door when the player is near now
15:14 - let's check out the third method this
15:16 - one is going to be using a pressure
15:17 - plate so we want the player to step on a
15:20 - pressure plate and the door stays open
15:21 - while he's on there and when he leaves
15:23 - it won't count down a timer and after a
15:25 - while it will close the door
15:27 - so let's do that first let's make our
15:30 - simple pressure plate so we create a new
15:32 - to the object a sprite and let's choose
15:35 - a sprite all right here's a very basic
15:39 - sprite now let's add a box Collider and
15:43 - make it a trigger ok that's it now let's
15:46 - make the script so a new C sharp script
15:48 - for the door interact pressure plate
15:52 - and let's drag our script now in here
15:55 - we're going to do very much the same
15:57 - thing that we did with the automatic
15:58 - door so let's copy this okay so we have
16:02 - when the player enters the trigger when
16:05 - that happens we're going to open the
16:06 - door all right sounds good
16:07 - however when the player leaves we don't
16:09 - want it to close immediately so let's
16:12 - remove this one and instead up here
16:14 - let's make a private point for a timer
16:17 - now we can set it to a certain volume
16:20 - let's say one second when the player
16:21 - enters the collider and then we have our
16:24 - private voice update and on update we
16:26 - check if the timer is bigger than zero
16:29 - so if we have Valentine where we just
16:31 - count it down all right so that's it
16:35 - very simple however you can probably
16:38 - guess that just like this it won't
16:39 - actually work if we try one see over
16:43 - here I go in and there you go it does
16:44 - open but it causes immediately even
16:47 - though I'm still on top of the pressure
16:48 - plate what we want this order to say
16:50 - open as long as the player is standing
16:52 - on top of the pressure plate so in here
16:54 - instead of setting our timer on the
16:56 - trigger and there to dien we're going to
16:58 - set it on the on trigger stay 2d this
17:02 - function is called on every frame well
17:03 - there's a Collider inside the trigger so
17:06 - when that happens then we actually set
17:08 - our timer all right just like that so
17:13 - this should work let's see okay so this
17:15 - should be working but we might still
17:17 - have one issue but let's test so we go
17:19 - in step on top it opens and as we stay
17:22 - on top and yep after a while it actually
17:25 - closes so there's something wrong
17:27 - happening here and the answer is due to
17:29 - how the physics system works in order to
17:31 - have good performance the physics system
17:33 - is smart enough in order to not check
17:35 - everything on every single frame so some
17:37 - physics objects are set to sleep and
17:39 - while they're sleeping they're not
17:40 - actually interacting with the physics
17:42 - world so the issue in this case is that
17:44 - the player rigid body is falling asleep
17:46 - and in doing so it's no longer
17:47 - triggering the collider event and in
17:50 - doing so it starts closing door so the
17:52 - solution for that is very simple over
17:54 - here I have my character control which
17:55 - has the rigidbody and here you have the
17:58 - sleeping mode instead of just starting
18:00 - on awake let's make sure that it never
18:01 - sleeps and if we test okay so here we
18:04 - are and we
18:05 - on top of the pressure plate and it
18:07 - opens and yep as long as we stay there
18:09 - we stay with the door open so we have
18:13 - our pressure plate exactly working as
18:14 - intended and as soon as I move out the
18:16 - timer starts counting down and in this
18:18 - case after one second the door closed so
18:20 - step on it opens move away and after a
18:22 - while holds this and now I'm stuck so
18:25 - here is our pressure plate fully working
18:27 - and like I said before you can easily
18:28 - make an interface to interact with the
18:30 - pressure plate with more than just the
18:31 - player so you could very easily apply
18:34 - this to a puzzle game and create some
18:35 - sort of box that you can push around and
18:37 - make that box interact with the pressure
18:39 - plate all right so here is our third
18:41 - method of interaction this one using a
18:43 - pressure plate now for the final method
18:45 - this one is actually something I already
18:47 - covered in detail in a previous video
18:49 - it's the key door system I made an
18:51 - entire video about it so here I'll just
18:53 - do an overview of how it works all right
18:55 - so here is everything already set up
18:57 - there's the normal door and there's the
18:59 - key now if I go towards the door yep I
19:01 - can't open it
19:02 - it even plays a nice animation saying
19:04 - that I fail to open it but if I go and
19:06 - touch the key there you go now we have a
19:09 - UI element saying that I've picked up
19:10 - the key and now I go into the door and
19:12 - yep now the door knows that I have the
19:14 - key and it opens and I can now go
19:15 - through so let's look at how this system
19:18 - works there are three parts to it
19:20 - first there's the door then there's a
19:22 - key and finally there's the player which
19:24 - holds a key holder so first of all here
19:27 - is the key it just has a simple circle
19:29 - coiler with a trigger and then it has a
19:32 - key script here this it's a very small
19:34 - very simple script and essentially all
19:36 - it does is it stores a film for a key
19:39 - type so this is how we have various
19:40 - colors of Kings and it's all that this
19:42 - script does then over here on the player
19:45 - character there's a keyholder script and
19:47 - what this one does is pretty much it
19:49 - just stores a list of all the keys then
19:52 - down here it has a ontriggerenter and if
19:55 - it finds an object with the key then it
19:58 - adds this key and destroys the key game
20:00 - object so it adds a key to the list and
20:02 - finally we have door with a basic key
20:04 - door script and in here all occur only
20:07 - does is it holds the field for the key
20:09 - type and then the normal function to
20:11 - open the door so then the key holder on
20:13 - the trigger enter he also checks if
20:15 - there is a key door and we test if on
20:17 - the key holder we currently
20:19 - holding a key that matches the same key
20:21 - type that door requires and if so then
20:23 - we remove that key and we open the door
20:25 - and if not then we play the open film
20:27 - animation then finally there's the UI
20:29 - display so over here inside the UI on
20:33 - the canvas there's the UI key holder and
20:35 - inside there as the visual for the key
20:37 - and now it has is this script and in
20:40 - here we have a reference to the key
20:42 - holder so this is the one that it's
20:43 - placed on the player and on start we are
20:46 - subscribing to the event on when the
20:48 - keys changed and when they do we simply
20:50 - update the visual some of those very
20:51 - scripts make up the key door system and
20:54 - as you can see they are all very tiny
20:55 - and everything is nicely separated so
20:58 - let's see it in action so here we are
21:00 - and we approached red open door and nope
21:02 - we cannot open we do not have the key
21:04 - and we play nice door fail open
21:06 - animation and now as I approach a key if
21:09 - there you go I picked up the key and I
21:11 - can see it in the UI and now if I
21:13 - approach the door there you go the key
21:14 - is consumed it vanishes from the UI and
21:16 - it opens the door and I can go through
21:18 - and go on with my life again if you want
21:21 - to see the whole system being created
21:22 - from scratch and check out the full
21:24 - video on linked in the description all
21:26 - right so here we have our four methods
21:27 - of interacting the doors now the first
21:29 - one here is using a button but the
21:31 - button is also a locum so if I'm Way too
21:34 - far in a press button nothing happens I
21:36 - need to approach it press the button and
21:38 - now I open this door and press again and
21:40 - it closes and again since this system is
21:43 - smart enough to look for nearby doors I
21:44 - can use the exact same thing with
21:45 - multiple doors so down here here is
21:48 - another door so I approach this one and
21:50 - press the button and I open this one but
21:51 - not that one then our participant
21:53 - presses on any of this opens and not
21:55 - down okay so this is the first method
21:57 - using a button now the second method is
22:00 - in here this is the most basic one it's
22:02 - an automatic door so as I approach it
22:04 - opens and as I move away it causes so
22:07 - very nice very basic very simple next is
22:10 - over here the pressure plate so as I
22:12 - step on a plate the door opens and if I
22:15 - say on top of the plate then the door
22:17 - stays open and as I leave it counts on a
22:19 - timer and after the timer lapses the
22:21 - door closes so here we have the time
22:24 - pressure point method then finally here
22:26 - is the key door system so without the
22:27 - key I approach and nope nothing happens
22:29 - I cannot open the door then I move
22:31 - towards the key I grabbed
22:33 - and now if I go towards door there you
22:35 - go the door opens with the correct key
22:36 - so here you have four methods of
22:39 - interacting with doors and once again
22:40 - this is all set up to work with an
22:41 - interface so it works with any type of
22:43 - door and you could easily modify the
22:45 - interface to make this interact with any
22:47 - object type you want like some lights or
22:49 - an elevator or whatever else this video
22:51 - is made possible thanks to these awesome
22:53 - supporters go to patreon.com/scishow to
22:56 - code monkey to get some perks and help
22:58 - keep the videos free for everyone as
23:00 - always you can download the project
23:01 - files in the Tonys from unity karma calm
23:03 - subscribe to the channel for more ent
23:05 - tutorials post any questions on the
23:06 - comments and I'll see you next time
23:09 - [Music]

Cleaned transcript:

in this video we're going to look at four ways we can interact with doors and unity we previously saw three methods for opening and closing doors and now we're going to look at four ways into those actions using a button key pressure plate and automatic let's begin hello and welcome I'm your code monkey and this channel is all about helping you learn how to make your own games with enough tutorials made by a professional indie game developer so if you find the video helpful consider subscribing okay so in this video we're going to look at four ways that we can interact with our doors so over here I have my four doors now in the previous video we looked at three ways that we can handle doors so go check out that video if you haven't seen it yet there's a link in the description and now here the four interaction methods that we're going to make can be used with any of those three door types so just for this demo I'm using the animation door but you can use any type you want okay so first of all here on the left is the simplest one this one is a button interaction so if I try to go through nope some of the object cannot go through but as long as I'm near it I can press interact button any of there you go the door opens and I can now pass through and if I press again there you go the door closes now one thing about this method is how he made it distance limited so if I move way too far away now press the button yep nothing happens so I need to be near the door in order to interact with it the way we set things up means that we can work with any door since its distance based I can make it interact with this door by pressing button by being near it but now if I go near this door I can interact with this one so the same script is not hardcoded to a specific door okay so that's the button method now for here we have the automatic door so this is pretty much the simplest one as I approach it there you go the door opens and I go through and I move away any of the door closes so just a very basic automatic door next over here is the really interesting pressure plate so this would be great for any type of puzzle game over here is the door and once again I cannot go through it but down here is a pressure plate and when I step on it there you go it opens the door and if I stay on top of the pressure plate and the door stays open and as I move away the timer starts counting down and after the timer goes down to zero then the door closes so I have to open it in order to go very quickly go through it and there you go it calls behind me and finally over here on the right is the key door system affectionately covered this one in detail in another video so here I won't just give an overview of how the system is set up now it works exactly like you might expect it so first without a key as I approached it nope I cannot open the door but then if I go down I grab the key there we go the key is now in the UI and I approach the door and there you go now I can use the key in order to open the door so that's the key method which would be perfect for any type of Metroidvania or Zelda game and again as I said all of these methods can be applied to any door type the way they work is through an interface so as long as the object has an open door and closed or functions then everything works you could even further generalizes to work with any object type so you could easily make all these methods work with lights to turn them on and off with pretty much the exact same code alright so here are the four methods one using a button on the player in order to open and close the door one automatic based on the player being nearby when using a pressure plate to open and close after a while and one using a key this video is made possible thanks to these awesome supporters go to patreon.com/scishow to code monkey to get some perks and help keep the videos free for everyone all right so this is our goal let's get to it ok so here we are in our starting scene now first of all we're going to see how we can interact with any type of door so here I have the three door types that we made in a previous video so they are all interactable with a simple mobile key input so as I press the key if there you go that door opens press another and it closes same thing for this one and for that so let's look at the script here is the door trigger button script and as you can see all the types are completely hardcoded so pressing the R key only opens exactly this door pressing the F key opens example this one and so on so we're going to fix this to make our code cleaner and more reusable and for that we're going to use an interface I have a dedicated video covering interfaces coming up so if you're not familiar with them then make sure you're subscribed and hit the bell icon so here let's create a new C sharp script and we're going to call this the AI door and in here first of all this is not a class but rather an interface and it's called AI door ok and now in here we're going to have a couple functions so first of all a void open door and a void closed door so these are the ones that were implemented in the other video and then let's also implement a nice so toggle door alright so that's it this is our very nice simple interface that we're going to apply to all of our door types now it's just implemented over here is the door set active so it similarly sets the game object to active or not and in here we just implement a door and the only one we need to implement is really deep toggle so let's do that and just like that now let's implement the same interface on all the other types all right so I implemented the interface on all three door types and now we can go on to the interact script and in here now the one issue that we have is that interfaces do not show up in the editor so if I change the type to this to ID or and here in the editor there it is you can see the first field so one workaround that we can do is instead we have films for game objects so you get a field for a game object and then on the private Freud awake we assign a ID or field so we have a door a field of type I door and we're going into the door game object a in order to get the component of type ID or now we have film for a game object so we can drag our door set active alright let's do the same thing for the other fields alright there it is we have three generic door types all of them using the ID or interface and we're using it by using the interface so this should be working let's test ok here we are there's the animated or press the button and there you go it plays the animation and same thing for this one it opens and now this one it's like to unlock and push it in the up there you go right awesome so over here we have three separate door types but they are all being used by using a common interface so just like this we've successfully converted all of our code to work with an interface so our interaction methods will not be hardcoded to a specific door tank right awesome ok so with that then now we can finally get to work on our floor so we're going to make a simple button for testing I'm going to use right now is the animated door now for the button we're going to start off pretty much examine like the script that we saw so let's make a new script and we're going to call this the door interact button so we're going to use a button to interact to the door let's make a game object to run and drag the script okay now here let's start off by having a door film then using the interface like we did previously all right so we have a film for our door game object and we grab the interface component spike in the editor we have the film and we can drag our door okay so far so good now back in our code let's make a front voice update and on update let's listen to a gate key down and let's say on the e key when we press the e key then let's toggle our doors to do door dot cough on door so just like this we should be able to open and close our door with a single heat let's test so here we are in doors sound and it's closed press a button and there you go starts opening I can go through press again and it closed all right good so far so good so like this we have it working as a mobile button however we don't really want it to be global in this case if we move all the way over here there's door right down there and I press the button and yep it still opens now what we want to do is to have it only interactive doors that are near the player so let's do that over here first we're going to need the player reference so let's add another field or a transform for the player transform and now when you press E we can grab the player transform dog position okay so now the question becomes is how do we find out what doors are near the player now one way would be to second through all the doors in the world like I did in the melee combat system now that would work but would not be very reusable with that method if you had too many doors it will become very promised intensive so another approach is like how I handled collisions in the shoot projectiles video in there I used physics so let's do that here when we press the key let's use the physics 2d in order to make a overlap circle all this one takes a point which is going to be our player transform position and then a radius so that's going to be our interact radius so just like that now what this does is it creates a circle Collider and it's going to return all the colliders that are overlapping within that circle so this returns an array of collided TD and now we can cycle through our colliders so for each Collider and we try to get a component of type ID or so commodity V get component of type i door and if door is not known then we have a door within our interaction range so in here we can do the orthogonal door all right so that's it so we do a overlap circle around the player and use the physics engine to locate off the doors around it and if there are any then it tells the door so since we are looking for doors automatically using the physics system then we no longer need to have a specific door set in here so we can get rid of this this and all of this all right there it is very simple now for this to work we actually need to make sure one more thing so back in the editor first let's drag the player reference in there okay and then over here we have our door and the way that this door works is it only has the colliders on the inner doors so on the ones that move that's ones that have the colliders so if we run it just like this it won't actually find this object and not the parent object so in order to get the parent we need to make sure that this one also has a Collider so just like that I had the collider I made a trigger and just right there in the middle of the door so just like this it should work our overlap circle should find this game object and it should be able to grab the door names which does implement our door interface so let's test ok so here we are and first of all let's move away ok so door is all the way over there and now if I press the button and if there you go nothing is actually happening it's not happening because there are no doors nearby a player but now if I approach the door I go near it and I press the button again there you don't know I'm near it I can actually activate and use that door and as I move I press again and yep nothing happens so I can only interact to the door when I'm near it now let's verify that it's working correctly by adding some more doors so let's take this door and just duplicate it and place a bunch more so one there and one there okay and now here let's approach this door down here press the button any of there you go I only interacted with this one now go towards this one press the button there you go with that one and here wait down all right so here we have our button interaction method fully working it works by pressing a button and it's smart enough to look for whatever objects are near so in this case we're working with doors but you could very easily make this exact same system work for any type of object so for example instead of a door you can have some lights with an interface that defines the methods to turn it on and off and by pressing a button you would interact with the lights in the exact same way by using the nearby ones so here is the first method fully working based on using a button now let's check out the second method the automatic door now this one is actually going to be pretty much easy simplest method possible we're going to open the door when the player goes in and we close it when he goes out and the way we're going to do that is by using a Collider trigger so let's make a new game object call this the door interact automatic let's position it right on top of the door so right in there okay and now let's add a box Collider component and we make it a trigger so that it's not a solid object and now simply extend it out okay just like that so when the player goes inside this area we're going to open the door and when he leaves we're going to close it so let's make our very simple script in here and you see our script our door interact automatic drag the script onto our object and open now in here it's going to be very simple all we really need to do is make the function private void on trigger enter to D we set the collider to be a trigger so we're using trigger and we're using enter which is only going to be called once when a Collider enters this Collider so this function has our Collider that called with this Collider and now when that happens we can verify if it's a player so to do that you can check if the collider getcomponent and in this case the player is using the character controller 2d so if that one is not known then the player entered this Collider and now to open the door and let's apply the door and like we did previously so you have our door game object to grab the door that appoints the interface and in here all we do is open our door and then we're going to do the same thing on the private void on trigger exit 2d and we do the same thing check if it's the player and if so then we call it the door alright so there it is very simple this is all we need to do so let's test ok here we are in the door is closed and now as I approach it there you go the door opens and I go through it now I move out of the area and there you go the door automatically closes right awesome so just like this we have our automatic trigger working so pretty much a very simple very automatic door so this is probably the simplest method possible and here in the code we're testing specifically for the player script but we could easily do the exact same thing that we did with the door interface you could create a sort of door interact object interface and apply it to the player and whatever other objects you also wanted to open the door so that way the door would work with a player with NPCs with animals whatever you want all right so here is the second method based on automatically opening the door when the player is near now let's check out the third method this one is going to be using a pressure plate so we want the player to step on a pressure plate and the door stays open while he's on there and when he leaves it won't count down a timer and after a while it will close the door so let's do that first let's make our simple pressure plate so we create a new to the object a sprite and let's choose a sprite all right here's a very basic sprite now let's add a box Collider and make it a trigger ok that's it now let's make the script so a new C sharp script for the door interact pressure plate and let's drag our script now in here we're going to do very much the same thing that we did with the automatic door so let's copy this okay so we have when the player enters the trigger when that happens we're going to open the door all right sounds good however when the player leaves we don't want it to close immediately so let's remove this one and instead up here let's make a private point for a timer now we can set it to a certain volume let's say one second when the player enters the collider and then we have our private voice update and on update we check if the timer is bigger than zero so if we have Valentine where we just count it down all right so that's it very simple however you can probably guess that just like this it won't actually work if we try one see over here I go in and there you go it does open but it causes immediately even though I'm still on top of the pressure plate what we want this order to say open as long as the player is standing on top of the pressure plate so in here instead of setting our timer on the trigger and there to dien we're going to set it on the on trigger stay 2d this function is called on every frame well there's a Collider inside the trigger so when that happens then we actually set our timer all right just like that so this should work let's see okay so this should be working but we might still have one issue but let's test so we go in step on top it opens and as we stay on top and yep after a while it actually closes so there's something wrong happening here and the answer is due to how the physics system works in order to have good performance the physics system is smart enough in order to not check everything on every single frame so some physics objects are set to sleep and while they're sleeping they're not actually interacting with the physics world so the issue in this case is that the player rigid body is falling asleep and in doing so it's no longer triggering the collider event and in doing so it starts closing door so the solution for that is very simple over here I have my character control which has the rigidbody and here you have the sleeping mode instead of just starting on awake let's make sure that it never sleeps and if we test okay so here we are and we on top of the pressure plate and it opens and yep as long as we stay there we stay with the door open so we have our pressure plate exactly working as intended and as soon as I move out the timer starts counting down and in this case after one second the door closed so step on it opens move away and after a while holds this and now I'm stuck so here is our pressure plate fully working and like I said before you can easily make an interface to interact with the pressure plate with more than just the player so you could very easily apply this to a puzzle game and create some sort of box that you can push around and make that box interact with the pressure plate all right so here is our third method of interaction this one using a pressure plate now for the final method this one is actually something I already covered in detail in a previous video it's the key door system I made an entire video about it so here I'll just do an overview of how it works all right so here is everything already set up there's the normal door and there's the key now if I go towards the door yep I can't open it it even plays a nice animation saying that I fail to open it but if I go and touch the key there you go now we have a UI element saying that I've picked up the key and now I go into the door and yep now the door knows that I have the key and it opens and I can now go through so let's look at how this system works there are three parts to it first there's the door then there's a key and finally there's the player which holds a key holder so first of all here is the key it just has a simple circle coiler with a trigger and then it has a key script here this it's a very small very simple script and essentially all it does is it stores a film for a key type so this is how we have various colors of Kings and it's all that this script does then over here on the player character there's a keyholder script and what this one does is pretty much it just stores a list of all the keys then down here it has a ontriggerenter and if it finds an object with the key then it adds this key and destroys the key game object so it adds a key to the list and finally we have door with a basic key door script and in here all occur only does is it holds the field for the key type and then the normal function to open the door so then the key holder on the trigger enter he also checks if there is a key door and we test if on the key holder we currently holding a key that matches the same key type that door requires and if so then we remove that key and we open the door and if not then we play the open film animation then finally there's the UI display so over here inside the UI on the canvas there's the UI key holder and inside there as the visual for the key and now it has is this script and in here we have a reference to the key holder so this is the one that it's placed on the player and on start we are subscribing to the event on when the keys changed and when they do we simply update the visual some of those very scripts make up the key door system and as you can see they are all very tiny and everything is nicely separated so let's see it in action so here we are and we approached red open door and nope we cannot open we do not have the key and we play nice door fail open animation and now as I approach a key if there you go I picked up the key and I can see it in the UI and now if I approach the door there you go the key is consumed it vanishes from the UI and it opens the door and I can go through and go on with my life again if you want to see the whole system being created from scratch and check out the full video on linked in the description all right so here we have our four methods of interacting the doors now the first one here is using a button but the button is also a locum so if I'm Way too far in a press button nothing happens I need to approach it press the button and now I open this door and press again and it closes and again since this system is smart enough to look for nearby doors I can use the exact same thing with multiple doors so down here here is another door so I approach this one and press the button and I open this one but not that one then our participant presses on any of this opens and not down okay so this is the first method using a button now the second method is in here this is the most basic one it's an automatic door so as I approach it opens and as I move away it causes so very nice very basic very simple next is over here the pressure plate so as I step on a plate the door opens and if I say on top of the plate then the door stays open and as I leave it counts on a timer and after the timer lapses the door closes so here we have the time pressure point method then finally here is the key door system so without the key I approach and nope nothing happens I cannot open the door then I move towards the key I grabbed and now if I go towards door there you go the door opens with the correct key so here you have four methods of interacting with doors and once again this is all set up to work with an interface so it works with any type of door and you could easily modify the interface to make this interact with any object type you want like some lights or an elevator or whatever else this video is made possible thanks to these awesome supporters go to patreon.com/scishow to code monkey to get some perks and help keep the videos free for everyone as always you can download the project files in the Tonys from unity karma calm subscribe to the channel for more ent tutorials post any questions on the comments and I'll see you next time
