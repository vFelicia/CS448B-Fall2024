With timestamps:

00:00 - hello and welcome I'm your code monkey
00:01 - and in this video we're continuing our
00:03 - level design based on a texture and
00:05 - we're going to add multiple object types
00:07 - let's begin
00:10 - so here is the scene from the previous
00:13 - video we have our player being spawned
00:15 - in a specific position that position is
00:17 - defined by a tilted pixel in our texture
00:20 - so as you can see our texture in here
00:21 - has a player defined by a blue color
00:25 - being spun on position - - since it
00:27 - starts on 0 so 0 1 2 so this is 2 0 - 1
00:31 - T - so okay and as you can see in here
00:34 - we are correctly reading that the player
00:36 - is spun on - 2 and since we define the
00:39 - units per pixel as 20f the player is on
00:42 - the world position 40 40 so 2 times 20
00:46 - 40 okay great we can view the code in
00:49 - here we are cycling through the width
00:51 - and then the height of the texture so in
00:53 - here we are checking every single pixel
00:55 - we grab the color we convert that color
00:58 - into a hexadecimal string then we do a
01:00 - switch on that string and compare it to
01:02 - our console our player constant which is
01:05 - a blue color so 0 0 0 0 FF so pure blue
01:09 - if he does find that pixel then he says
01:12 - that the player was found on XY he sets
01:15 - the player spawn position based on the
01:17 - XY x a units per pixel defined in here
01:21 - and then we spawned a player on that
01:23 - position so just looking at how we set
01:25 - up our code here you can probably guess
01:27 - how we're going to implement multiple
01:28 - object types the first thing we need to
01:31 - do is to go up here and define another
01:33 - color string now let's make the ammo
01:36 - drop so in here make a private cons
01:38 - string for the mo Cowan and we're going
01:42 - to define the mo color and let's say in
01:44 - yellow so ffff 0 0
01:47 - we're using pure colors just to keep our
01:49 - code nice and simple now down here on
01:52 - our switch we do a case camo color if we
01:57 - do find the pics on that as the mo color
01:59 - defined in here then we're going to
02:01 - spawn some mammals so we're going to use
02:02 - the functions that we have down here we
02:04 - have a function to spawn the player
02:06 - health pack and Mopac enemy or a won't
02:09 - so we're going to spawn a mo pack and
02:11 - now for the position we can actually
02:14 - calculate this position outside of our
02:16 - switch since the position is the same
02:17 - regardless of what type we find so in
02:19 - here and let's just define our
02:22 - positioned by the XY x in its first
02:24 - pixel
02:25 - okay so in here we spawn the player in
02:27 - that position and we spawn a ammo pack
02:29 - on that position all right so now we can
02:32 - go into our level texture and here we're
02:34 - going to set the color to our pure color
02:37 - so we're going to set it to F F F F zero
02:41 - zero so a pure yellow this will be the
02:43 - color that references our ammo pack so
02:46 - let's put it somewhere to the right of
02:47 - our player right there okay so now let's
02:50 - test and we should be able to see amo
02:52 - pack being spawned to the right of our
02:54 - player so here we are and as you can see
02:56 - there is indeed an ammo pack spawned in
02:58 - there so I can spend some ammo then I go
03:01 - in there and I replenish my ammo great
03:04 - so we have added another different
03:06 - object spawn type now let's add the rest
03:08 - of our objects so again down here we
03:11 - have all of our objects the player the
03:12 - health bag the ammo enemy and the wall
03:15 - so let's go up here and define colors
03:17 - for all those object types so for the
03:22 - wall let's make it in black so zero zero
03:24 - zero zero zero zero okay for the health
03:27 - let's make it in green so 0 0 FF 0 0 and
03:31 - for the enemy let's make him in red so
03:34 - ff0000 again we're defining the colors
03:37 - as pure colors just to make things
03:39 - easier but as long as the hexadecimal
03:41 - value is unique we can use anything so
03:43 - for example the enemy in here could be
03:46 - defined by say FF 8 B 1 9 which if we go
03:51 - up here we can see that that color is a
03:53 - somewhat orange we could use that and it
03:56 - works just as well but again in order to
03:58 - keep our code nice and simple let's just
04:00 - keep it to a pure red alright so now
04:02 - that we have defined all of our colors
04:04 - now in our switch let's count on that
04:06 - function whenever it matches the color
04:09 - that we define so here let's do a case
04:11 - our health card so if you do find a
04:14 - pixel that matches the health color
04:16 - let's spawn a health pack on our
04:18 - position case we find a pixel that
04:21 - matches the enemy color let's spawn an
04:25 - enemy on that position and finally case
04:29 - we find a pixel that matches the WOM
04:31 - color let's spawn a
04:36 - all right so again the code is very
04:38 - simple we are simply going through every
04:40 - single pixel we are getting the
04:42 - hexadecimal value of the color of that
04:44 - pixel and we are spawning the correct
04:47 - object depending on the color of that
04:49 - pixel so now our code part is setup
04:52 - let's handle our texture so in here we
04:55 - have our player position our ammo
04:56 - position now next to the Emma let's
04:59 - spawn some health so our health is
05:01 - defined by 0 0 FF 0 0 so it spawn the
05:05 - health next day ammo
05:07 - then let's spawn some walls down here so
05:10 - walls are in pure black so put a bunch
05:12 - of walls in there and finally let's fun
05:14 - an enemy our enemy is in pure red and
05:17 - let's find him in there so just looking
05:19 - at this image you can probably imagine
05:21 - how the final game will turn out this
05:23 - won't be an enemy this will be an ammo
05:24 - pack a health pack our player and some
05:27 - walls underneath so with our test level
05:29 - setup let's see it in game ok so here I
05:32 - am the player being positioned in there
05:34 - a bunch of walls on here there's the
05:35 - enemy he's coming from that corner yep
05:38 - and here we have a health pack and our
05:40 - ammo pack and everything works perfectly
05:43 - fine I've got 18 ammo and if I go there
05:45 - boom now I got 20 and our health is max
05:47 - but I can still pick it up and
05:49 - everything works fine ok so we have now
05:52 - set up multiple object types now using
05:56 - what we've created so far let's try to
05:57 - create a somewhat interesting level now
06:00 - first of all our code in here should
06:02 - flawlessly support any one level
06:03 - texercise
06:04 - so let's just change the size of our
06:06 - texture to test that out so in here I'm
06:09 - going to change the canvas of my texture
06:12 - instead of being 10 by 10 let's say it's
06:14 - a hundred by 40 paint the background in
06:18 - white okay let me move the player from
06:22 - there and put him somewhere down here
06:24 - okay so this should be a much bigger
06:27 - level and let's go into our code and
06:31 - let's automatically create some wall
06:32 - surrounding the level so our player
06:34 - stays inside the level bounds so after
06:37 - we spawn everything down here let's do a
06:39 - couple of fours or int X
06:43 - X less than the level textures out width
06:47 - + X + + so essentially we're going to
06:50 - cycle through the entire x-axis and here
06:53 - and let's calculate a position and spawn
06:56 - a wall now for that position we want to
06:58 - spawn a wall at the bottom and at the
07:00 - top so for the Y since the Y start at 0
07:04 - let's spawn an outside wall on minus 1
07:07 - so after spawning a wall on the bottom
07:09 - let's 1 another one on the top so using
07:12 - the level texture dot height we're going
07:15 - to spawn some walls in there ok now
07:18 - let's find the vertical walls all right
07:26 - so we should be spawning some horizontal
07:27 - walls on top and bottom and some
07:29 - vertical walls on the left side and on
07:31 - the right side so this just so we can
07:34 - easily see the bounds of our level and
07:36 - on our level texture and let's add some
07:38 - ammo drops on the exact bottom and on
07:41 - the exact top just to make sure that our
07:44 - walls are being correctly spawned okay
07:47 - let's see okay as you can see our player
07:51 - is now on the lower left corner of our
07:53 - map and if I go to the right here I
07:55 - should be able to see yep there it is a
07:57 - ammo pack right on the zero on the map
08:00 - so our walls are on the outside of our
08:02 - map ok great so now that we have the
08:05 - size of our map correct and walls on the
08:07 - outside of it we can now go paint our
08:09 - texture and make a really cool level so
08:12 - let's do that
08:51 - all right so here is a somewhat complex
08:54 - level we got walls around all over the
08:57 - place we have some corridors some open
09:00 - areas multiple enemy spawns throughout
09:02 - the map various mo and health drops and
09:05 - the player spawning in here so let's see
09:08 - how this level is represented in game
09:10 - alright so at first glance everything
09:12 - seems correct I'm spawning on an
09:14 - enclosed space which matches that and in
09:17 - front of here we have in corner ok
09:19 - everything seems right if I keep going
09:22 - there should be some enemies and yep
09:24 - there they are I can shoot them yep and
09:29 - down here there should be a hidden area
09:31 - yep there you go they're in the corner
09:33 - and more enemies and I'm almost out of
09:36 - ammo so let me go into my hidden area
09:38 - and pick up some health and ammo
09:59 - yep so as you can see the level is
10:02 - working exactly as we define in our
10:04 - texture so there you have it we took our
10:06 - own level design texture code and added
10:08 - the ability for spawning multiple object
10:10 - types we can all easily draw our Maps
10:12 - pixel by pixel and everything spawns
10:14 - correctly when in-game in the next video
10:16 - we're going to make several levels and
10:18 - load them one after the other
10:19 - as always you can download the project
10:21 - files in utilities from Unity code
10:23 - monkey comm if you have any questions
10:25 - post them in the comments and I'll do my
10:26 - best answer them subscribe for more
10:28 - videos and I'll see you next time

Cleaned transcript:

hello and welcome I'm your code monkey and in this video we're continuing our level design based on a texture and we're going to add multiple object types let's begin so here is the scene from the previous video we have our player being spawned in a specific position that position is defined by a tilted pixel in our texture so as you can see our texture in here has a player defined by a blue color being spun on position since it starts on 0 so 0 1 2 so this is 2 0 1 T so okay and as you can see in here we are correctly reading that the player is spun on 2 and since we define the units per pixel as 20f the player is on the world position 40 40 so 2 times 20 40 okay great we can view the code in here we are cycling through the width and then the height of the texture so in here we are checking every single pixel we grab the color we convert that color into a hexadecimal string then we do a switch on that string and compare it to our console our player constant which is a blue color so 0 0 0 0 FF so pure blue if he does find that pixel then he says that the player was found on XY he sets the player spawn position based on the XY x a units per pixel defined in here and then we spawned a player on that position so just looking at how we set up our code here you can probably guess how we're going to implement multiple object types the first thing we need to do is to go up here and define another color string now let's make the ammo drop so in here make a private cons string for the mo Cowan and we're going to define the mo color and let's say in yellow so ffff 0 0 we're using pure colors just to keep our code nice and simple now down here on our switch we do a case camo color if we do find the pics on that as the mo color defined in here then we're going to spawn some mammals so we're going to use the functions that we have down here we have a function to spawn the player health pack and Mopac enemy or a won't so we're going to spawn a mo pack and now for the position we can actually calculate this position outside of our switch since the position is the same regardless of what type we find so in here and let's just define our positioned by the XY x in its first pixel okay so in here we spawn the player in that position and we spawn a ammo pack on that position all right so now we can go into our level texture and here we're going to set the color to our pure color so we're going to set it to F F F F zero zero so a pure yellow this will be the color that references our ammo pack so let's put it somewhere to the right of our player right there okay so now let's test and we should be able to see amo pack being spawned to the right of our player so here we are and as you can see there is indeed an ammo pack spawned in there so I can spend some ammo then I go in there and I replenish my ammo great so we have added another different object spawn type now let's add the rest of our objects so again down here we have all of our objects the player the health bag the ammo enemy and the wall so let's go up here and define colors for all those object types so for the wall let's make it in black so zero zero zero zero zero zero okay for the health let's make it in green so 0 0 FF 0 0 and for the enemy let's make him in red so ff0000 again we're defining the colors as pure colors just to make things easier but as long as the hexadecimal value is unique we can use anything so for example the enemy in here could be defined by say FF 8 B 1 9 which if we go up here we can see that that color is a somewhat orange we could use that and it works just as well but again in order to keep our code nice and simple let's just keep it to a pure red alright so now that we have defined all of our colors now in our switch let's count on that function whenever it matches the color that we define so here let's do a case our health card so if you do find a pixel that matches the health color let's spawn a health pack on our position case we find a pixel that matches the enemy color let's spawn an enemy on that position and finally case we find a pixel that matches the WOM color let's spawn a all right so again the code is very simple we are simply going through every single pixel we are getting the hexadecimal value of the color of that pixel and we are spawning the correct object depending on the color of that pixel so now our code part is setup let's handle our texture so in here we have our player position our ammo position now next to the Emma let's spawn some health so our health is defined by 0 0 FF 0 0 so it spawn the health next day ammo then let's spawn some walls down here so walls are in pure black so put a bunch of walls in there and finally let's fun an enemy our enemy is in pure red and let's find him in there so just looking at this image you can probably imagine how the final game will turn out this won't be an enemy this will be an ammo pack a health pack our player and some walls underneath so with our test level setup let's see it in game ok so here I am the player being positioned in there a bunch of walls on here there's the enemy he's coming from that corner yep and here we have a health pack and our ammo pack and everything works perfectly fine I've got 18 ammo and if I go there boom now I got 20 and our health is max but I can still pick it up and everything works fine ok so we have now set up multiple object types now using what we've created so far let's try to create a somewhat interesting level now first of all our code in here should flawlessly support any one level texercise so let's just change the size of our texture to test that out so in here I'm going to change the canvas of my texture instead of being 10 by 10 let's say it's a hundred by 40 paint the background in white okay let me move the player from there and put him somewhere down here okay so this should be a much bigger level and let's go into our code and let's automatically create some wall surrounding the level so our player stays inside the level bounds so after we spawn everything down here let's do a couple of fours or int X X less than the level textures out width + X + + so essentially we're going to cycle through the entire xaxis and here and let's calculate a position and spawn a wall now for that position we want to spawn a wall at the bottom and at the top so for the Y since the Y start at 0 let's spawn an outside wall on minus 1 so after spawning a wall on the bottom let's 1 another one on the top so using the level texture dot height we're going to spawn some walls in there ok now let's find the vertical walls all right so we should be spawning some horizontal walls on top and bottom and some vertical walls on the left side and on the right side so this just so we can easily see the bounds of our level and on our level texture and let's add some ammo drops on the exact bottom and on the exact top just to make sure that our walls are being correctly spawned okay let's see okay as you can see our player is now on the lower left corner of our map and if I go to the right here I should be able to see yep there it is a ammo pack right on the zero on the map so our walls are on the outside of our map ok great so now that we have the size of our map correct and walls on the outside of it we can now go paint our texture and make a really cool level so let's do that all right so here is a somewhat complex level we got walls around all over the place we have some corridors some open areas multiple enemy spawns throughout the map various mo and health drops and the player spawning in here so let's see how this level is represented in game alright so at first glance everything seems correct I'm spawning on an enclosed space which matches that and in front of here we have in corner ok everything seems right if I keep going there should be some enemies and yep there they are I can shoot them yep and down here there should be a hidden area yep there you go they're in the corner and more enemies and I'm almost out of ammo so let me go into my hidden area and pick up some health and ammo yep so as you can see the level is working exactly as we define in our texture so there you have it we took our own level design texture code and added the ability for spawning multiple object types we can all easily draw our Maps pixel by pixel and everything spawns correctly when ingame in the next video we're going to make several levels and load them one after the other as always you can download the project files in utilities from Unity code monkey comm if you have any questions post them in the comments and I'll do my best answer them subscribe for more videos and I'll see you next time
