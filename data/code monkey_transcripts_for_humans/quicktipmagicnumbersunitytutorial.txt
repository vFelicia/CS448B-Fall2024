With timestamps:

00:02 - hi there this is a quick tip for how to
00:04 - free your code from magic numbers now
00:07 - one very important concept in writing
00:08 - clean code is never using magic numbers
00:11 - magic numbers are numbers which are used
00:13 - without being clear about what they're
00:15 - doing so I have some code in here a
00:17 - simple unit class it has a basic update
00:20 - and running this code now in here I'm
00:22 - increasing the position by this vector
00:25 - multiplied by this amount and then I'm
00:27 - doing a distance check and seeing if
00:29 - it's under 5f this is some simple code
00:32 - so you might be able to figure out what
00:34 - it means but still it should be clear
00:36 - what the code is doing so the
00:37 - subtraction here is getting the
00:39 - direction vector towards our target
00:41 - position the 20 here signifies our
00:44 - movement speed and the 5 F is the attack
00:46 - distance so essentially he's moving this
00:48 - unit towards this target at 20 units per
00:51 - second and if he gets within 5 units he
00:54 - won't execute an attack so we can make
00:56 - this code much more readable by simply
00:58 - defining variables for each of these
01:00 - numbers so in here the first thing we
01:02 - get a vector 3 for the move direction
01:04 - and move Direction is this in here so we
01:07 - replace this with moved ear
01:09 - ok then the 20 F represents our movement
01:13 - speed so we replace that and finally our
01:19 - 5 F in here represents our attack
01:21 - distance so the final code for the
01:23 - attack distance and use that instead so
01:27 - the code now has more lines but it is
01:28 - much more readable we can clearly see
01:31 - that we are increasing the position by
01:32 - the direction multiplied by a movement
01:34 - speed and here testing for the distance
01:36 - if it is within our attack distance and
01:38 - if these numbers were being used
01:40 - elsewhere then we would also have
01:42 - various instances of 20 F and 5 F
01:45 - without being connected to one another
01:46 - so in that case we should define these
01:48 - as member variables so everyone uses the
01:51 - same variable so always remember to keep
01:53 - your code clean by defining clear
01:54 - variables instead of using magic numbers
01:56 - and that's it hope you found this tip
01:59 - useful alright see you next time

Cleaned transcript:

hi there this is a quick tip for how to free your code from magic numbers now one very important concept in writing clean code is never using magic numbers magic numbers are numbers which are used without being clear about what they're doing so I have some code in here a simple unit class it has a basic update and running this code now in here I'm increasing the position by this vector multiplied by this amount and then I'm doing a distance check and seeing if it's under 5f this is some simple code so you might be able to figure out what it means but still it should be clear what the code is doing so the subtraction here is getting the direction vector towards our target position the 20 here signifies our movement speed and the 5 F is the attack distance so essentially he's moving this unit towards this target at 20 units per second and if he gets within 5 units he won't execute an attack so we can make this code much more readable by simply defining variables for each of these numbers so in here the first thing we get a vector 3 for the move direction and move Direction is this in here so we replace this with moved ear ok then the 20 F represents our movement speed so we replace that and finally our 5 F in here represents our attack distance so the final code for the attack distance and use that instead so the code now has more lines but it is much more readable we can clearly see that we are increasing the position by the direction multiplied by a movement speed and here testing for the distance if it is within our attack distance and if these numbers were being used elsewhere then we would also have various instances of 20 F and 5 F without being connected to one another so in that case we should define these as member variables so everyone uses the same variable so always remember to keep your code clean by defining clear variables instead of using magic numbers and that's it hope you found this tip useful alright see you next time
