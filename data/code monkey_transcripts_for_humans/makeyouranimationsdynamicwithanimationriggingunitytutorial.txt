With timestamps:

00:00 - hello and welcome i'm your code monkey
00:02 - and here let's learn how to use the
00:03 - animation rigging package this is an
00:05 - extremely useful package to help make
00:07 - your game feel much more polished by
00:09 - adding all kinds of dynamic movement on
00:11 - top of your animations you can easily
00:13 - make your characters look at a moving
00:15 - object or maybe grab a dynamic item from
00:17 - the scene or make a skeleton with a
00:19 - chain of bones or a character in a third
00:22 - person shooter make it aim perfectly the
00:24 - package is excellent and really easy to
00:26 - use the final results look great and
00:28 - they definitely make your game feel much
00:29 - more polished also this video is a
00:31 - lecture taken from my ultimate unity
00:33 - overview course unity is massive so in
00:35 - the course i explain over 50 features
00:37 - and tools of the engine that you might
00:39 - not know about there's individual
00:40 - lectures explaining tons of things like
00:42 - shadowgraph similar definitions
00:44 - animation avatar video player and so on
00:46 - as well as many other niche things that
00:48 - i couldn't possibly cover in normal
00:50 - youtube videos also the course will
00:52 - continuously be updated with free
00:53 - updates as i add more lectures
00:55 - explaining more tools and features
00:57 - this specific lecture was added as part
00:59 - of the second free update that explains
01:01 - more tools and features so go ahead and
01:03 - get the phone course to learn how to
01:04 - master all the unity tools to help you
01:06 - make better games faster in this lecture
01:08 - we're going to learn all about the
01:10 - animation rigging package this one is an
01:12 - extremely useful package that makes a
01:14 - bunch of complex animation logic very
01:16 - easy
01:17 - it's all about adding dynamic animations
01:19 - on top of your static animations so for
01:21 - example having a static normal idle
01:23 - animation but then making the head point
01:25 - towards a dynamic object moving around
01:27 - the scene it also helps you handle ik or
01:29 - inverse kinematics so for example you
01:31 - move the hand and automatically the
01:33 - upper and lower arm moves to where it
01:35 - makes sense so let's first look at how
01:37 - to install the package and browse some
01:38 - of the official samples
01:40 - then after that let's learn how to
01:42 - create three scenarios how to make a
01:44 - head look at a dynamic object then how
01:46 - to make a leg bandwidth ik and finally
01:49 - how to combine it all to make a
01:50 - character aim perfectly at a target okay
01:53 - so let's do it now first of all this one
01:55 - is a package so you get it by going
01:57 - through the package manager up here make
01:59 - sure you select the unity registry and
02:01 - then simply find the animation rating
02:02 - package and hit on install when you
02:04 - install it then you should be able to
02:06 - see a menu up here called animation
02:07 - rigging so it's installed now also on
02:10 - the package manager over here you've got
02:11 - a samples so you can import these these
02:14 - are extremely useful for seeing all of
02:16 - the various use cases when you import
02:18 - them it adds a unity folder and then
02:19 - inside you've got the samples for all
02:22 - the various things so here it is all of
02:24 - the scenes showcasing tons of different
02:25 - scenarios and on top of that in terms of
02:27 - documentation it also adds a really nice
02:29 - readme file so as you can see there's
02:31 - tons of demos all of them with nice
02:33 - description here telling you exactly
02:34 - what they showcase so let's see some of
02:36 - these demos for example here is the
02:39 - simple aim demo
02:40 - so in this one there's a simple object
02:43 - moving around the scene
02:44 - then as you can see the head of the
02:46 - character is constantly pointing towards
02:47 - the object and same thing for that model
02:49 - cannon it's always pointing perfectly
02:51 - towards a moving object now you can
02:53 - obviously inspect all this to see how
02:55 - it's all set up so over here the root
02:57 - model has a rig and here is the aim head
02:59 - component which is using a multi-m
03:01 - constraint
03:02 - so it's contraining the head bone and
03:04 - it's pointing towards the aim target
03:06 - object
03:07 - and all of it is set up and same thing
03:09 - for the gun just doing the same thing
03:10 - now the main going with this package is
03:12 - that this is not a pre-made animation so
03:15 - i can stop the bomb from animating i can
03:17 - place it anywhere in my scene and as you
03:19 - can see the head and the cannon always
03:21 - looks perfectly so i can put this
03:22 - anywhere and everything works so the
03:24 - animation reading package is
03:26 - automatically calculating how to rotate
03:28 - the head bone and the canon bone how to
03:30 - rotate it to make it face towards a
03:31 - dynamic position and this sample is also
03:34 - showcasing leg ik
03:36 - so the animation on these legs is being
03:38 - driven by these target objects so the
03:40 - animation is just moving up and down and
03:42 - then these cubes and the logic is
03:44 - complicating where to put the knee the
03:45 - bones and so on then here's another
03:47 - sample showcasing the chain ik
03:50 - so it's a scorpion with a ton of bones
03:52 - that make up the whole tail and again
03:54 - the animation rating system there's a
03:56 - target moving around and the system is
03:58 - being used in order to make sure that
03:59 - tail hits a very specific point so as
04:02 - the thing jumps about there you go it
04:04 - hits it so here you can see how i can
04:06 - place the target anywhere and all of the
04:08 - bones go to where it makes sense the
04:10 - animation breaking package is constantly
04:11 - calculating where the bones need to be
04:13 - in order to make sure that it hits this
04:15 - point exactly with the tip so as you can
04:17 - see all these demos are super useful
04:20 - and the official documentation is also
04:22 - excellent
04:23 - it shows very clear examples of what
04:25 - each constraint does how it works and
04:27 - what each setting does okay so with all
04:29 - of that let's learn how to use it over
04:31 - here i've got my character and it's just
04:33 - playing a basic title animation
04:35 - now let's build one of the simplest
04:36 - things you can do to add a bit more life
04:38 - to your games let's just make it so that
04:40 - our character can look at a dynamic
04:41 - object
04:42 - so the character is on pre-standard it's
04:44 - got a basic animator then inside there's
04:46 - a skin mesh renderer with the actual
04:48 - visual
04:49 - as well as a simple humanoid rig i cover
04:51 - animations and animator in detail in
04:53 - other lectures and this character is
04:55 - from miximo which i also covered in the
04:57 - animation avatar and lecture so first of
04:59 - all the way animation breaking works is
05:01 - based on creating rigs
05:03 - so let's select the main character game
05:04 - object then go up here into the
05:06 - animation rig menu and hit on rig setup
05:09 - as soon as you do you can see that on
05:10 - this game object it has a ray builder
05:12 - with a reference super rig and this is a
05:14 - game object that was created which has a
05:15 - ray component
05:17 - so this is the ring and now inside our
05:18 - rig this is where we can add any
05:20 - constraints that we want so for example
05:22 - inside the rig let's make a new game
05:23 - object call this the head aim and then
05:26 - just go up here into add component let's
05:28 - go inside animation rigging and now for
05:30 - this case we want the head to aim and
05:32 - look towards the target so let's pick
05:34 - the multi-aim constraint now we have all
05:36 - of these fields to set up our constraint
05:38 - starting off with the constrained object
05:40 - this is whatever bone we want to
05:42 - constrain to aim towards something
05:44 - now thankfully on the animation ringing
05:46 - package there's also a really harmful
05:48 - tool included you can select the main
05:50 - game object then go up here into
05:51 - animation rigging and click on the bone
05:53 - render setup and yep this is super
05:55 - useful this adds a really nice
05:57 - visualizer for all the bones and over
05:59 - here on the component you can change the
06:00 - color change the shape size and so on so
06:02 - this is a super useful utility to be
06:04 - able to see exactly all the bones that
06:06 - make up the character and also super
06:07 - useful is that if you click directly on
06:09 - the bone it actually selects the bone
06:11 - whereas if you don't have this and you
06:12 - click on it just select the skin mesh
06:14 - render so this is super useful okay so
06:16 - now that we can see the bones let's set
06:18 - up our constraint over here on our
06:20 - settings the first one is the constraint
06:21 - object so this is whatever bone we want
06:23 - to apply this constraint to now in this
06:25 - case we want the head so let's just pick
06:27 - the head bone here it is the miximo rig
06:29 - head and just drag that reference
06:31 - next up we've got the aim axis and the
06:33 - up axes
06:35 - these are the axes that the animation
06:36 - breaking system won't use in order to
06:38 - correctly point towards the target now
06:40 - if you get issues for example your
06:42 - character is pointing towards the target
06:44 - using the top of the head instead of
06:45 - actually looking with the face if you
06:47 - got issues with that then you play
06:48 - around those
06:50 - if you want to figure out which axis you
06:51 - should use just go ahead and select the
06:53 - head bone
06:54 - then up here you've got this really nice
06:56 - button that swaps from global into local
06:58 - so this changes the world space over
07:00 - here on the tool handle so you can see
07:02 - on global if i move over here to the
07:04 - right then i'm moving on the x
07:06 - then the z is in there and the y isn't
07:08 - there but this bone or any parent bones
07:10 - might be rotated so if you click on
07:12 - local then you see different axes so
07:14 - this is the one that you have to pay
07:15 - attention to so make sure that one isn't
07:17 - local so right here we can see that the
07:19 - one pointing forward is over here the
07:21 - blue one so the blue one is the z axis
07:23 - so this one that we're going to use for
07:25 - the aim and for the up we've got the
07:27 - green so in this case the y so point
07:29 - forward on the z and aim up on the y
07:32 - so over here let's set up like that so
07:33 - the aim x is on the z and the up axis is
07:36 - on the y okay then for the warm web type
07:38 - for this one you probably don't need to
07:40 - play around it then the next important
07:42 - setting is over here the source object
07:44 - so this is the actual target that you
07:46 - want to look at
07:47 - so for that let's make a new game object
07:49 - inside of our head aim and just call the
07:51 - target
07:52 - now this one doesn't have to be a child
07:53 - of this game object you can place it
07:55 - anywhere but in order to keep things
07:56 - organized and putting it in here makes
07:58 - sense so just create it and just drag
08:00 - the reference
08:02 - so here's the target and now we can move
08:03 - it around one more super useful thing in
08:06 - this package are the effectors so over
08:08 - here on the lower right corner on the
08:10 - scene view you can see this little tool
08:12 - window and over here you see the plus
08:13 - button so if you click on it now you can
08:15 - add an effector for this game object so
08:18 - this is kind of like a visual gizmo
08:20 - you can click on one on circle icon and
08:22 - just choose you can use any mesh you
08:24 - want but there's also a bunch of
08:26 - effectors included in the package so you
08:28 - can search for effector and over here if
08:31 - you don't see anything that's because
08:32 - this button so it's not showing hidden
08:33 - packages so if you type in effector and
08:36 - you don't see anything make sure you
08:37 - click here so that it actually shows the
08:39 - hidden ones and if you have these four
08:41 - included ones so you can use a box so
08:43 - there you go a nice little cube there or
08:45 - you can go with the ball with a simple
08:47 - 2d circle with a locator just a nice
08:49 - cross or a simple square
08:51 - now for this case for target object
08:52 - let's go with the ball that looks pretty
08:54 - good then again you can play around the
08:56 - collar size and so on okay so this way
08:58 - we've got a really nice visual to make
08:59 - sure that we see where the character is
09:01 - looking at now on the rig we still have
09:03 - a bunch more settings but just with this
09:05 - everything should already be working
09:07 - however another thing related to the
09:08 - animation rigging package which is just
09:10 - like this if i move the target you can
09:12 - see it's not actually working naturally
09:14 - here i made a slight mistake this gizmo
09:17 - should be on the target not on this game
09:18 - object it's a target that we're going to
09:20 - use so let's actually remove it from
09:22 - this one and add it over here
09:25 - and also one more thing that you might
09:26 - be seeing you might be seeing these
09:28 - images these are the gizmos for the rig
09:30 - component and the various constraints
09:33 - this can be slightly annoying so while
09:35 - you're setting it up if you want you can
09:36 - just disable gizmos up there or you can
09:38 - manually go here and find the various
09:40 - constraints so for example over here the
09:42 - multi-unconstrained you can just hide
09:44 - this gizmo individual so either do it
09:46 - individually or hide them all so just
09:48 - keep things nice and clean okay
09:50 - so as i was saying the way that
09:52 - animation reading works
09:53 - just like this if i now take and i move
09:55 - the target you can see the head is
09:57 - definitely not looking towards the
09:58 - target now there are two ways that we
10:00 - can see the animation rigging in action
10:02 - now one way is obviously by hitting on
10:04 - play and playing the game but another
10:06 - one that might also be very useful is if
10:08 - we are in the animation preview state so
10:10 - over here i've got the animation preview
10:12 - window
10:13 - and if i click over here on the preview
10:15 - button
10:16 - now there you go the character actually
10:18 - goes into the animation preview
10:20 - and while this preview is active now
10:22 - animation rigging is indeed working so
10:23 - this one is great if you want to
10:25 - continue setting up the animation
10:26 - without having to hit play just make
10:28 - sure you go into the animation window
10:29 - and enable preview and yet another thing
10:32 - that you should learn about how
10:33 - animation reading works is that the way
10:35 - this works since it's on based on jobs
10:37 - in order to make it super performant
10:39 - since it works like that it means that
10:41 - if you change any settings over here
10:43 - they won't be applied immediately so for
10:45 - example let's say that i want to aim
10:46 - with the top of the head instead so
10:48 - let's put it maybe on a y and now if i
10:51 - move the target then nope it's still
10:52 - working exactly the same as previously
10:54 - again that's because we were already on
10:56 - preview so i have to leave preview mode
10:58 - and now re-enter and yep now it is
11:00 - indeed using the new settings so that's
11:02 - another specific thing for how animation
11:04 - rigging works so as you can see i need
11:06 - to exit and re-enter preview and same
11:08 - thing for plane
11:09 - so right now the game is playing and the
11:11 - character is aiming like that but if you
11:13 - go over here and you swap it back and
11:15 - nope it didn't actually change that's
11:17 - because these changes are only applied
11:19 - when the actual game starts running
11:20 - after it starts running you can't really
11:22 - change this so swap this one back into
11:24 - the z hit on play
11:26 - and yep there it is everything is
11:27 - already working so i can take this
11:29 - target object i can put it there
11:30 - anywhere and yep it looks perfectly so i
11:32 - can look left and right up and down i
11:35 - can look anywhere and yep the character
11:37 - always looks perfectly towards the
11:38 - target and again keep in mind that the
11:40 - character is still playing the basic
11:41 - channel animation so the animation
11:43 - itself doesn't have any of this dynamic
11:45 - movement it's all being handled by the
11:47 - animation breaking package alright
11:49 - awesome so for example you can see how
11:51 - this very simple use case would be
11:53 - extremely useful for things like for
11:54 - example having this character talk to
11:56 - the player so let's say the player was
11:57 - right there and the character is looking
11:59 - at it that makes it much more immersive
12:01 - than if the character is always pointing
12:02 - straight ahead and the players off to
12:04 - the side then the player could even move
12:06 - and the character would continue looking
12:07 - at the player or maybe for example this
12:09 - one is a player and there's an item to
12:11 - grab right there on the floor so the
12:13 - player can look at that and make sure
12:14 - that it's looking directly at the object
12:16 - so again just with this very simple
12:18 - example you can already see tons of
12:19 - potential use case okay now for these
12:22 - other settings there are two offsets
12:24 - now the first one maintain rotation
12:26 - offset so if this one is unticked and
12:28 - over here look at how the target is to
12:30 - the left of the character if i hit on
12:32 - play then the character starts looking
12:34 - perfectly towards the target
12:36 - however if i now enable this now it's
12:38 - essentially going to keep this offset so
12:40 - when i hit on play if the character is
12:42 - now still looking forward so it's
12:44 - essentially applying the offset to this
12:46 - target as it was when i hit on play so
12:48 - now if i move it's still looking it's
12:50 - essentially applying the offset that
12:52 - this object had when i had on play
12:54 - and then you have an actual offset so
12:56 - this one will essentially make the
12:57 - character look towards that object plus
12:59 - whatever offset is in here however for
13:01 - some reason the scale is strange so if i
13:04 - put just one on the y you would assume
13:06 - it wouldn't look around one unit above
13:07 - so it shouldn't look around here but now
13:09 - it's still looking pretty much perfectly
13:11 - towards that one so this is working but
13:13 - for some reason the scale in here is a
13:15 - bit weird
13:16 - if i put it on 50 you can see that it is
13:18 - indeed working so right now it is
13:20 - working although once again the axes are
13:22 - slightly different depending on the bone
13:24 - so adding 50 on the y over here on this
13:27 - constraint
13:28 - adding that apparently adds here and
13:30 - left to right so if i'm looking left and
13:31 - right you can see it's always looking
13:32 - slightly to the right so here if i put
13:35 - minus 50 on the x now it is indeed
13:37 - looking above wherever i put the target
13:39 - so for example let's say you want the
13:40 - character to look towards a really tall
13:42 - something you can put this on the base
13:44 - and simply add the offset so the scale
13:46 - over here is very strange but it does
13:48 - work exactly as in them next up over
13:50 - here we've got the constrained axes
13:52 - so this is which of the axes will be
13:55 - affected by this constraint for example
13:57 - right now if i hit on play
13:59 - and if i take the target and i put it
14:01 - somewhere right next to the bone you can
14:02 - see how the head is rotating like that
14:05 - so left and right way too much let's say
14:07 - you only want the head to actually go
14:09 - left and right and not like this
14:12 - then over here you could disable the
14:13 - axes
14:14 - so for that one that would be the z axis
14:17 - and now if i try putting it on that same
14:19 - place you can see yep the head no longer
14:20 - rotates like that it only goes left
14:22 - right up down it no longer shifts to the
14:24 - side like that or for example let's say
14:26 - you only want it to look up down and not
14:28 - left right
14:29 - then for that case you would disable the
14:31 - y axis and yep now the head doesn't look
14:33 - up and down but it does not look left
14:36 - and right
14:36 - and the final one we have here are the
14:38 - rotation limits so the minimum and the
14:40 - maximum
14:41 - so for example a normal human head
14:43 - usually cannot rotate 180 degrees so
14:46 - this is not human-like behavior
14:49 - usually the head stops roughly around
14:50 - there so roughly 90 degrees that's
14:52 - pretty much how much your neck can
14:53 - actually rotate so you can set it here
14:55 - for example say go from minus 80 to plus
14:58 - 80.
15:00 - and now if you take this and put it
15:01 - straight behind nope once it gets to
15:02 - minus 0 plus 80 then no longer rotates
15:05 - more all right great
15:07 - the next thing that we see is over here
15:09 - the constraint has a certain weight
15:11 - and then if you look in the rig itself
15:13 - the array also has a weight
15:15 - this is how you define just how much
15:17 - impact this rig or this specific
15:18 - constraint has on the final thing so for
15:21 - example let's say the goal here is for
15:22 - this character to look at an object
15:24 - so we would place the target directly on
15:26 - the object but then let's say that we
15:28 - only want the character to look at the
15:30 - object when close enough well we can
15:32 - easily do that by modifying the weight
15:34 - so if the weight is at one then it is
15:36 - indeed looking straight towards the
15:37 - object but if the weight is slowly going
15:39 - down to zero then nope now it's just
15:41 - playing the normal idle animation so the
15:43 - character would be like this then as the
15:45 - character moves forward and approaches
15:46 - the object then you would slowly
15:48 - increase this one and yep now it's
15:49 - looking towards the object
15:50 - so that's a super simple example that
15:52 - adds quite a bit of immersion to your
15:53 - game and it's also super simple to do so
15:56 - let's see how we can do that through
15:57 - code
15:58 - over here let's make a simple c-sharp
16:00 - script call this look at object
16:03 - animation rigging
16:05 - and now for attaching the script let's
16:07 - attach it directly over here onto our
16:08 - ring okay
16:10 - so now here the only thing that we need
16:11 - is a reference to that rig component
16:14 - which also means we need to find out
16:15 - where this rig class exists if over here
16:18 - if i just do a private void awake and
16:21 - unawake i try to get component of type
16:23 - rig
16:24 - if i just do this then nope does not
16:26 - work it does not recognize what is a rig
16:29 - so that means we need to find out how we
16:30 - can access this class
16:32 - and actually cover that in another
16:33 - lecture i covered how you can find any
16:35 - class for any tool line feature
16:37 - definitely go watch that lecture if you
16:39 - haven't seen it
16:40 - so here you can just right click on the
16:42 - rig and go into edit script and when you
16:44 - do yep it opens up the actual script
16:47 - so with this we can now see that this
16:49 - one is inside the unity engine and
16:51 - missions rigging namespace and then the
16:53 - rig component itself is named right so
16:55 - all we need to do is add this using
16:58 - so over here just add using
17:00 - that and there we go now we get our rig
17:02 - component
17:03 - okay so with this let's just make some
17:04 - simple code for modifying the weight
17:13 - okay so here it is some very basic logic
17:16 - so as i press the t key it's going to
17:17 - set the target weight to one and as i
17:19 - press the white key it's going to set it
17:21 - to zero then i'm just using math.lab in
17:23 - order to have a nice smooth
17:24 - interpolation instead of being instant
17:26 - so that's it very simple logic let's
17:28 - test
17:29 - so here we are and there's the character
17:31 - playing the normal idol animation now
17:33 - let's say the character approaches a
17:35 - certain npc and i press a button and yep
17:37 - now the character is looking towards
17:38 - where that character would be
17:41 - now let's say the character moves away
17:42 - and yep back into playing the normal
17:44 - idol animation just looking forward
17:46 - so you can see how easy it is to play
17:48 - around with all of your constraints
17:49 - through code by just easily playing
17:51 - around the weights
17:52 - this simple example alone is already
17:54 - great for adding that extra bit of
17:55 - polish to your game
17:57 - okay now let's build another very common
17:59 - example for ik let's make some foot
18:01 - placement
18:02 - here is my character again and again
18:04 - let's add a rig so go into the menu rake
18:06 - setup okay automatically adds the rig
18:08 - all right now inside the rail let's make
18:10 - our game object so create a new empty
18:12 - game object let's call it foot ik and
18:15 - then go into that component and in this
18:17 - case we're going to use down here a two
18:19 - bone ik constraint
18:20 - so this one as you can see takes a root
18:22 - bone a mid bone and a tip bone
18:25 - so for a leg this would be the hip and
18:27 - then the knee and then the foot
18:29 - and if we were to use this on an arm
18:31 - then instead this would be the shoulder
18:33 - the elbow and finally the hand now
18:35 - there's also a really useful tool for
18:36 - this component
18:37 - instead of having to assign all of these
18:39 - and create the source objects you can
18:41 - just start by assigning the tip so in
18:43 - this case we want the leg so let's
18:46 - select this one right here so we've got
18:47 - our right foot so just go in there
18:50 - assign the right foot onto the tip and
18:52 - then right click on the constraint
18:53 - itself and then down here auto setup
18:55 - from tip transform and when you do that
18:57 - yep it automatically fills up on the
18:59 - other ones so it goes from the tip and
19:01 - essentially automatically chooses the
19:03 - two parent game objects above it so
19:05 - you've got the left foot then we've got
19:06 - the leg and right a point so you can see
19:08 - the foot down there the leg that's that
19:10 - bone and that bone
19:12 - okay so all that is correct and it also
19:14 - automatically creates a foot ik target
19:16 - and a hint now the target is where we
19:18 - want the foot to actually be placed and
19:20 - then for the hint this is kind of a soft
19:23 - target meant for the middle joint so in
19:25 - this case would be the knee and if we
19:27 - were playing with an arm that would be
19:28 - the elbow
19:29 - so based on how humans work you would
19:31 - want this one to be in front since human
19:33 - knees generally don't bend backwards so
19:36 - you would place this one in front and
19:37 - then the target down there by the way
19:39 - this one is also optional so you can
19:41 - choose not to use the hint and if you
19:43 - don't assign it then essentially the
19:45 - animation rating system will try to
19:46 - guess where the knee should bend to okay
19:48 - so that's pretty much how easy it is to
19:50 - set this up now again we can use down
19:52 - here the really awesome gizmos so let's
19:54 - place one on the target
19:58 - for target let's go with the box and for
20:00 - the hint
20:03 - over here let's go with maybe a locator
20:07 - effector okay so here we've got the
20:09 - target for the foot and over there we've
20:10 - got the hint so just like this with this
20:13 - very simple setup so all we did was
20:14 - assign the tip and then use the menu so
20:16 - just with this if we hit on play and you
20:19 - have just with this as you can see it's
20:20 - already working now this specific ik
20:22 - also takes the rotation of the final
20:24 - object into account so that is why the
20:26 - leg over there the foot isn't looking
20:28 - very strange so just rotate it to make
20:31 - it make a bit more sense okay so like
20:33 - that the foot is looking kind of normal
20:35 - and again like you see that effector the
20:38 - hint is used for where it should bend so
20:40 - right now if i move the leg like this
20:41 - then obviously it makes sense so the
20:43 - knee is bending correctly but if i put
20:44 - it above then that goes backwards so
20:46 - that's essentially how the hint is used
20:48 - to make this so in the case of a
20:50 - humanoid that's pretty much all you need
20:51 - to do then over here you can see how
20:53 - easily you could animate just this final
20:55 - object and the leg would correctly move
20:57 - to match
20:58 - then of course from the side you can see
21:00 - that it matches up not just up and down
21:01 - but also from side to side and then over
21:03 - here the hint also has an impact going
21:05 - left and right all you need to do is
21:07 - just put it like this and yep there's
21:08 - another perfect leg
21:10 - so this is yet another super useful
21:12 - constraint the two bone ik constraint so
21:14 - this one as you can see is perfect for
21:16 - handling foot placement so for example
21:18 - let's say this character instead of
21:19 - being just on a flat plane it was
21:21 - actually on some kind of hill
21:23 - so in that case you wouldn't want the
21:24 - foot to be straight flat on the ground
21:26 - if it was a hill if it had something
21:28 - then you could easily apply some
21:29 - rotation and maybe move it a bit and
21:31 - that way the foot would match perfectly
21:33 - with whatever surface you're working on
21:35 - so this one is super useful or of course
21:37 - as you can see this one is just a two
21:39 - bone so those two bones can be a foot or
21:41 - it can also be an arm so you could apply
21:43 - this constraint onto an arm in order to
21:45 - very easily grab a dynamic object okay
21:48 - now let's build one final common example
21:50 - we want to make a weapon aim perfectly
21:52 - at a target
21:53 - over here is my character with a simple
21:55 - aim animation as you can see the aim is
21:58 - fixed so the character is just aiming
21:59 - forward now that's not very good you
22:02 - want the character to be aiming at an
22:04 - exact position not just a generic
22:05 - forward so let's see if the target was
22:07 - down here on the floor you wouldn't want
22:08 - it to be aiming in that direction so
22:11 - once again we can use animation rigging
22:12 - to take this basic static animation and
22:15 - make it aim perfectly towards any point
22:17 - so again we select our character
22:19 - and we go and set up our break so rig
22:21 - setup all right we have a rig now inside
22:24 - let's first make an empty game object
22:26 - let's call this our aim rig
22:29 - and then over here we're going to add a
22:31 - component and once again we're trying to
22:33 - aim somewhere so let's use a multi-m
22:34 - constraint so just like we did on the
22:36 - very first example now we need to set
22:39 - the constraint object
22:40 - now for aiming we're going to want to
22:42 - aim with the hand so let's use the right
22:45 - hand
22:46 - so let's go into our constraint and drag
22:48 - the hand as a constrained object and by
22:50 - the way as you can see the weapon is
22:52 - over here i've got a nice weapon prefab
22:54 - and it's placed as a child of the
22:55 - handgame object so as this one moves you
22:58 - can see that the
22:59 - weapon moves along with it so we need to
23:01 - do is rotate the hand and the weapon
23:03 - will rotate with it now again over here
23:05 - we need to play around with the aim axis
23:07 - and the up axes and again in order to
23:10 - identify which one you should be using
23:11 - here you can go ahead select the right
23:13 - hand and once again make sure that up
23:15 - here you're in local
23:16 - so you can see everything
23:18 - and over here we can see that the green
23:20 - one is the one painting forward
23:22 - so the green one is the y axis so let's
23:24 - go up here for the aim axis let's go
23:26 - with a y and then for the up axis we've
23:29 - got over here the red one that's the x
23:31 - but it's pointing down so pointing up we
23:33 - would want a minus x so up here put
23:36 - minus x and that's it now the final
23:38 - thing that we need is just our target
23:40 - so let's make an empty game object
23:42 - inside of this let's call it the target
23:44 - and just drag the reference
23:46 - and again let's add a nice effector
23:49 - okay so there's our target and just with
23:52 - this let's hit on play and here right
23:53 - away you can see the hand is indeed
23:55 - aiming perfectly towards the target so i
23:57 - can place the target anywhere and yep
23:58 - the hand actually aims correctly towards
24:01 - it so i can put it up down left right
24:03 - and yep the target is always perfectly
24:05 - aiming all right that's great also
24:08 - here's a quick tip if you want to verify
24:09 - that it's aiming correctly you can go
24:12 - for example on the right hand where
24:13 - we're moving and over here let's create
24:15 - a cube inside of it
24:17 - and then you just make it really thin
24:19 - and pointing forward
24:21 - so in this case pointing forward on the
24:22 - y so you can do it like this and really
24:24 - increase the y massively and you can see
24:26 - yep it is aiming perfectly so now as i
24:28 - move this yep you can see it's always
24:30 - aiming perfectly go up down and as
24:32 - always perfectly intersect
24:34 - so just a quick tip to ensure that it is
24:36 - aiming perfectly and if it isn't then of
24:38 - course you can either play around with
24:40 - where you place the aim target or again
24:42 - over here like we saw on the settings
24:44 - you can play around over here and add a
24:45 - slight offset okay so what we have here
24:48 - is indeed working so as you can see the
24:49 - weapon is perfectly aiming towards our
24:51 - position
24:52 - but of course it looks quite a bit odd
24:55 - right now the only thing that is turning
24:57 - is just the hand so the rest of the body
24:59 - is static the second hand is also static
25:01 - so just like this it's not enough looks
25:03 - still quite a bit odd just like in real
25:06 - life you wouldn't aim just by moving
25:07 - your hand you would actually move your
25:09 - entire body so let's do that on our same
25:11 - ring we can create another empty game
25:13 - object let's do the body aim rig
25:17 - so we're going to want to rotate the
25:19 - body and once again let's add a
25:21 - component animation breaking and once
25:22 - again use the multium constraint now for
25:24 - the bone this time we want to apply to
25:26 - the hips so let's see over here the
25:28 - spine so that's good so just select the
25:30 - spine and once again let's play around
25:32 - with the aim axes so make sure this one
25:34 - is on local okay so the four is the blue
25:36 - one so that's the z so over there fourth
25:39 - on the z okay and the up one is green
25:41 - that's the y and yep that's already
25:42 - correct so on the source object let's
25:44 - use the exact same one so up here the
25:46 - target just assign it and that's pretty
25:48 - much it so let's see
25:50 - and yep now it looks quite a bit better
25:51 - so as you can see now the chest does
25:53 - rotate to face the target so it's no
25:55 - longer 100 static so pointing up down
25:58 - the chest rotates along with it so
26:00 - that's great however you can also see
26:02 - that over here the hand is no longer
26:04 - perfectly pointing so the hand is
26:06 - definitely not pointing in that
26:07 - direction so the hand is definitely
26:08 - looking very strange why is the hand
26:10 - looking like that now the reality is
26:12 - that this has to do with the order in
26:14 - which the system calculates the rotation
26:16 - for all the joints basically what is
26:18 - happening right now is the hands are
26:19 - rotating to face the target perfectly so
26:21 - just like before it's still doing that
26:24 - but the issue is that after the hand is
26:26 - rotated then we're rotating the body and
26:28 - of course the hand is connected to the
26:30 - body so by moving the body we are once
26:32 - again moving the hand
26:33 - so in the end after the body rotates the
26:35 - hand is no longer facing perfectly now
26:37 - the issue here is that we're rotating
26:39 - the hand first and then the body second
26:41 - when really we want to reverse we want
26:43 - to first aim by rotating the body and
26:45 - then we want to aim the hand perfectly
26:47 - thankfully that is super easy to solve
26:49 - the order in which the rigs are
26:51 - evaluated is based on the order in the
26:53 - hierarchy so all you really need to do
26:55 - is take the body aim and just drag this
26:57 - game object and put it above the aim rig
26:59 - so that's it now it's going to calculate
27:02 - the body aim and then it's going to
27:04 - complete the hand aim and yep there it
27:06 - is now the hand is indeed rotating
27:07 - perfectly so it's perfectly aiming
27:09 - towards the target and as you can see
27:10 - the body is also rotating
27:12 - all right awesome everything is working
27:14 - great however the body is also rotating
27:16 - a bit too much
27:18 - so this is kind of personal preference
27:19 - but like this the body is rotating
27:21 - perfectly so i guess if you want your
27:23 - character to look really mechanic then
27:24 - maybe this is it but if you want it a
27:26 - bit more natural then lowering the
27:28 - rotation by a little bit would probably
27:29 - be best thankfully that is something
27:31 - that we can easily do we can go into the
27:34 - body aim break and over here we've got
27:35 - the usual weight so you can just lower
27:37 - this down we still wanted to aim just
27:39 - not aim perfectly so maybe let's say 0.7
27:42 - and now as we move the target yep the
27:44 - body rotates just not perfectly so it
27:46 - rotates just enough to be natural once
27:49 - the hand still points perfectly all
27:51 - right great
27:52 - now there's just one last thing that we
27:54 - need
27:54 - right now the chest and the hand they
27:56 - are rotating so they all look great but
27:58 - of course the other hand is not moving
28:00 - at all so that looks very strange the
28:02 - character is supposed to be holding the
28:03 - front end of the rifle with this hand
28:05 - once again we can solve this with
28:07 - another constraint let's make another
28:09 - one so another empty game object what's
28:11 - called the second hand
28:14 - rig
28:14 - and over here we are going to add an
28:16 - animation bringing we're going to make a
28:18 - two bone ik constrained so just like we
28:20 - did for the legs now set it up once
28:22 - again we can just set up the tip so for
28:24 - this one we're going to want the other
28:26 - hand so let's select the left hand
28:29 - okay so let's go into this one select
28:31 - the left hand put it on the tip
28:33 - and then once again use the super useful
28:35 - tool so auto setup
28:37 - all right and it automatically creates
28:38 - our target and our hint
28:40 - now for this we want to grab directly on
28:42 - the weapon so let's take both of these
28:44 - game objects instead of being child of
28:46 - this object let's make a child of the
28:48 - right hand okay and now we just need to
28:50 - position them so let's put them right on
28:52 - the hand
28:53 - now we just need to play around the
28:55 - position so let's hit on play
28:57 - and yep as you can see the second hand
28:58 - is there so now it's really just a case
29:00 - of rotating this one to where it makes
29:02 - sense and then same thing for the hint
29:04 - we want the elbow to rotate from the
29:06 - other side
29:11 - okay so when it looks correct
29:13 - we can just copy the position on this
29:15 - one so let's select the target and over
29:16 - here you're going to transform
29:18 - and just copy the component then stop
29:20 - playing then select the target and up
29:22 - here right click and paste component
29:24 - values and now it should be placed on
29:26 - the correct place and if we hit on play
29:28 - and yep the second hand is there and
29:30 - let's just play around the hint so let's
29:32 - put it slightly there so that's how the
29:34 - elbow should bend and once again just
29:36 - right click copy this one and paste it
29:39 - back all right so here is our final
29:41 - result we've got our target i can put it
29:43 - anywhere and as you can see the
29:44 - character is always aiming perfectly so
29:47 - i can move up down left right and
29:49 - everything aims perfectly so the body
29:50 - rotates the left hand the right hand all
29:52 - of them rotate and everything aims
29:54 - perfectly and again keep in mind that
29:56 - the animation itself is just a simple
29:57 - static animation pointing straight ahead
30:00 - it's the animation rigging system that
30:01 - is overriding the animation to make all
30:03 - of these bones aim perfectly towards the
30:05 - target so you can put it anywhere and
30:07 - always aims perfectly then of course you
30:09 - can combine what we'll learn here with
30:11 - what we learned in the animation avatar
30:13 - video
30:14 - in there i teach you about how to use
30:15 - avatars in avatar masks to make
30:17 - essentially a separate layer from the
30:19 - upper body and the lower body
30:21 - so that's how you could make the upper
30:23 - body exam like this so just rotating aim
30:25 - perfectly and then leave the lower body
30:28 - playing an idol or a movement animation
30:30 - and just with that you would have a very
30:32 - good character aim controller so here it
30:34 - is really nice extremely useful the
30:36 - character aiming perfectly now let's see
30:39 - a few more things that this package can
30:40 - do so far we've been looking at how it's
30:43 - used to dynamically apply changes to the
30:45 - animation that's one of the best use
30:47 - cases but this package can also be used
30:49 - to modify any animation you already have
30:51 - so there's a way to modify the actual
30:53 - animation itself rather than making it
30:55 - dynamic meaning that you can essentially
30:57 - bake the constrained motion directly in
30:59 - the animation that way you're not
31:00 - spending any processing power running
31:02 - the rig so here is another scene from
31:04 - the official samples this is the twist
31:06 - chain so it shows a twist chain
31:08 - constraint and on the animation as you
31:10 - can see over here the only keyframes are
31:12 - for the root and the tip
31:14 - so these objects are the only thing
31:15 - that's animated and then the animation
31:17 - rigging package decides how to move all
31:19 - these cubes that make up the chain now
31:21 - let's say you want this exact animation
31:22 - every time maybe you're making a
31:24 - cutscene animation and you don't need
31:26 - anything dynamic
31:28 - if you don't want it to ever change then
31:29 - there is no reason to spend processing
31:31 - power running the animation rating
31:33 - package so instead you can make this
31:35 - exact animation directly on the
31:36 - animation itself to do that just select
31:38 - the animation over here on the animation
31:40 - window and make sure you have a
31:42 - duplicate so you have a backup if you
31:44 - need it and then you can select the root
31:47 - and then you can go into the rig builder
31:49 - and right click and over here you see
31:51 - this option transform motion to skeleton
31:53 - and if you choose it and yep it
31:55 - automatically created all the keyframes
31:57 - for all of these objects so if i hit on
31:59 - play i still get the exact same
32:00 - animation although right now you can see
32:02 - that over here the rig weight is set to
32:04 - zero meaning that this rig is no longer
32:06 - used so this whole animation is baked
32:08 - directly into the object themselves and
32:10 - in order to bake like you saw we can do
32:12 - it over here on the rig builder so
32:14 - select the object on the rig builder you
32:15 - can do this but you can also do it over
32:17 - here individually on each rig or even
32:20 - individually on each constraint so you
32:22 - have all those options for baking
32:24 - and after baking you can even delete all
32:26 - the rig components so you can delete
32:28 - them on the animation itself delete all
32:30 - this and then just here to delete the
32:32 - rig and go into this one delete the rig
32:34 - builder and if you hit on play yep there
32:36 - you go you can still see the exact same
32:38 - animation everything works perfectly so
32:40 - this is another super powerful use case
32:42 - for this package you can essentially
32:44 - modify any animations you already have
32:46 - however there is one pretty important
32:48 - limitation with this utility it does not
32:50 - work on humanoid characters so over here
32:52 - back in the previous scene this one is
32:54 - using a humanoid rig and if i right
32:56 - click nope those options are grayed out
32:58 - however on the forums i did found a
33:00 - slight workaround if you absolutely need
33:02 - it
33:03 - according to this official response the
33:05 - bi-directional baking on humanoid
33:07 - characters is not on the roadmap but as
33:09 - a workaround you can use the fpx
33:11 - exporter so using that apparently you
33:13 - can bake the constraints back into a
33:15 - generic rig as opposed to a humanoid rig
33:17 - and then it should work and then
33:18 - re-import it back as humanoid so if you
33:21 - absolutely need to do exactly that then
33:22 - maybe this is the way to do it
33:24 - okay so we just saw how you can turn a
33:26 - constraint into an animation but you can
33:28 - also do the opposite you can turn an
33:30 - animation back into a constraint
33:32 - so here is the animation that we just
33:34 - created but the rig is not active
33:36 - now you can select the constraint itself
33:38 - and right click and this time transfer
33:40 - motion to constraint and if you do that
33:42 - and you could apply that motion back
33:44 - over here onto the constrained objects
33:46 - so the root object position rotation
33:48 - same thing for the tip so now you can
33:50 - once again delete all of these ones that
33:52 - were created previously and if you had
33:54 - on play and yep we still have the exact
33:55 - same behavior as previously so as you
33:58 - can see you can go one way or the other
33:59 - way alright so that's the animation
34:01 - rigging package as you can see it's full
34:03 - of features this one is perfect for when
34:05 - you want to apply dynamic modifications
34:07 - to your animations
34:09 - so as you can see it's perfect for
34:10 - dynamic foot placement or aiming exactly
34:13 - at where the player is aiming or even
34:15 - some other things like for example
34:16 - grabbing a moving object or maybe making
34:18 - a character touch the door while going
34:20 - through it this is an excellent package
34:22 - that will make all your animations feel
34:24 - much more natural alright so this was a
34:26 - lecture from my ultimate in the overview
34:28 - course there's lots more explaining tons
34:30 - of things like shadowgraph similar
34:32 - definitions animation avatar the video
34:34 - player and so on as well as many niche
34:36 - things that i couldn't possibly cover in
34:37 - normal youtube videos go ahead and get
34:39 - the full course and learn how to master
34:41 - all the unity tools and features to help
34:43 - you make better games faster

Cleaned transcript:

hello and welcome i'm your code monkey and here let's learn how to use the animation rigging package this is an extremely useful package to help make your game feel much more polished by adding all kinds of dynamic movement on top of your animations you can easily make your characters look at a moving object or maybe grab a dynamic item from the scene or make a skeleton with a chain of bones or a character in a third person shooter make it aim perfectly the package is excellent and really easy to use the final results look great and they definitely make your game feel much more polished also this video is a lecture taken from my ultimate unity overview course unity is massive so in the course i explain over 50 features and tools of the engine that you might not know about there's individual lectures explaining tons of things like shadowgraph similar definitions animation avatar video player and so on as well as many other niche things that i couldn't possibly cover in normal youtube videos also the course will continuously be updated with free updates as i add more lectures explaining more tools and features this specific lecture was added as part of the second free update that explains more tools and features so go ahead and get the phone course to learn how to master all the unity tools to help you make better games faster in this lecture we're going to learn all about the animation rigging package this one is an extremely useful package that makes a bunch of complex animation logic very easy it's all about adding dynamic animations on top of your static animations so for example having a static normal idle animation but then making the head point towards a dynamic object moving around the scene it also helps you handle ik or inverse kinematics so for example you move the hand and automatically the upper and lower arm moves to where it makes sense so let's first look at how to install the package and browse some of the official samples then after that let's learn how to create three scenarios how to make a head look at a dynamic object then how to make a leg bandwidth ik and finally how to combine it all to make a character aim perfectly at a target okay so let's do it now first of all this one is a package so you get it by going through the package manager up here make sure you select the unity registry and then simply find the animation rating package and hit on install when you install it then you should be able to see a menu up here called animation rigging so it's installed now also on the package manager over here you've got a samples so you can import these these are extremely useful for seeing all of the various use cases when you import them it adds a unity folder and then inside you've got the samples for all the various things so here it is all of the scenes showcasing tons of different scenarios and on top of that in terms of documentation it also adds a really nice readme file so as you can see there's tons of demos all of them with nice description here telling you exactly what they showcase so let's see some of these demos for example here is the simple aim demo so in this one there's a simple object moving around the scene then as you can see the head of the character is constantly pointing towards the object and same thing for that model cannon it's always pointing perfectly towards a moving object now you can obviously inspect all this to see how it's all set up so over here the root model has a rig and here is the aim head component which is using a multim constraint so it's contraining the head bone and it's pointing towards the aim target object and all of it is set up and same thing for the gun just doing the same thing now the main going with this package is that this is not a premade animation so i can stop the bomb from animating i can place it anywhere in my scene and as you can see the head and the cannon always looks perfectly so i can put this anywhere and everything works so the animation reading package is automatically calculating how to rotate the head bone and the canon bone how to rotate it to make it face towards a dynamic position and this sample is also showcasing leg ik so the animation on these legs is being driven by these target objects so the animation is just moving up and down and then these cubes and the logic is complicating where to put the knee the bones and so on then here's another sample showcasing the chain ik so it's a scorpion with a ton of bones that make up the whole tail and again the animation rating system there's a target moving around and the system is being used in order to make sure that tail hits a very specific point so as the thing jumps about there you go it hits it so here you can see how i can place the target anywhere and all of the bones go to where it makes sense the animation breaking package is constantly calculating where the bones need to be in order to make sure that it hits this point exactly with the tip so as you can see all these demos are super useful and the official documentation is also excellent it shows very clear examples of what each constraint does how it works and what each setting does okay so with all of that let's learn how to use it over here i've got my character and it's just playing a basic title animation now let's build one of the simplest things you can do to add a bit more life to your games let's just make it so that our character can look at a dynamic object so the character is on prestandard it's got a basic animator then inside there's a skin mesh renderer with the actual visual as well as a simple humanoid rig i cover animations and animator in detail in other lectures and this character is from miximo which i also covered in the animation avatar and lecture so first of all the way animation breaking works is based on creating rigs so let's select the main character game object then go up here into the animation rig menu and hit on rig setup as soon as you do you can see that on this game object it has a ray builder with a reference super rig and this is a game object that was created which has a ray component so this is the ring and now inside our rig this is where we can add any constraints that we want so for example inside the rig let's make a new game object call this the head aim and then just go up here into add component let's go inside animation rigging and now for this case we want the head to aim and look towards the target so let's pick the multiaim constraint now we have all of these fields to set up our constraint starting off with the constrained object this is whatever bone we want to constrain to aim towards something now thankfully on the animation ringing package there's also a really harmful tool included you can select the main game object then go up here into animation rigging and click on the bone render setup and yep this is super useful this adds a really nice visualizer for all the bones and over here on the component you can change the color change the shape size and so on so this is a super useful utility to be able to see exactly all the bones that make up the character and also super useful is that if you click directly on the bone it actually selects the bone whereas if you don't have this and you click on it just select the skin mesh render so this is super useful okay so now that we can see the bones let's set up our constraint over here on our settings the first one is the constraint object so this is whatever bone we want to apply this constraint to now in this case we want the head so let's just pick the head bone here it is the miximo rig head and just drag that reference next up we've got the aim axis and the up axes these are the axes that the animation breaking system won't use in order to correctly point towards the target now if you get issues for example your character is pointing towards the target using the top of the head instead of actually looking with the face if you got issues with that then you play around those if you want to figure out which axis you should use just go ahead and select the head bone then up here you've got this really nice button that swaps from global into local so this changes the world space over here on the tool handle so you can see on global if i move over here to the right then i'm moving on the x then the z is in there and the y isn't there but this bone or any parent bones might be rotated so if you click on local then you see different axes so this is the one that you have to pay attention to so make sure that one isn't local so right here we can see that the one pointing forward is over here the blue one so the blue one is the z axis so this one that we're going to use for the aim and for the up we've got the green so in this case the y so point forward on the z and aim up on the y so over here let's set up like that so the aim x is on the z and the up axis is on the y okay then for the warm web type for this one you probably don't need to play around it then the next important setting is over here the source object so this is the actual target that you want to look at so for that let's make a new game object inside of our head aim and just call the target now this one doesn't have to be a child of this game object you can place it anywhere but in order to keep things organized and putting it in here makes sense so just create it and just drag the reference so here's the target and now we can move it around one more super useful thing in this package are the effectors so over here on the lower right corner on the scene view you can see this little tool window and over here you see the plus button so if you click on it now you can add an effector for this game object so this is kind of like a visual gizmo you can click on one on circle icon and just choose you can use any mesh you want but there's also a bunch of effectors included in the package so you can search for effector and over here if you don't see anything that's because this button so it's not showing hidden packages so if you type in effector and you don't see anything make sure you click here so that it actually shows the hidden ones and if you have these four included ones so you can use a box so there you go a nice little cube there or you can go with the ball with a simple 2d circle with a locator just a nice cross or a simple square now for this case for target object let's go with the ball that looks pretty good then again you can play around the collar size and so on okay so this way we've got a really nice visual to make sure that we see where the character is looking at now on the rig we still have a bunch more settings but just with this everything should already be working however another thing related to the animation rigging package which is just like this if i move the target you can see it's not actually working naturally here i made a slight mistake this gizmo should be on the target not on this game object it's a target that we're going to use so let's actually remove it from this one and add it over here and also one more thing that you might be seeing you might be seeing these images these are the gizmos for the rig component and the various constraints this can be slightly annoying so while you're setting it up if you want you can just disable gizmos up there or you can manually go here and find the various constraints so for example over here the multiunconstrained you can just hide this gizmo individual so either do it individually or hide them all so just keep things nice and clean okay so as i was saying the way that animation reading works just like this if i now take and i move the target you can see the head is definitely not looking towards the target now there are two ways that we can see the animation rigging in action now one way is obviously by hitting on play and playing the game but another one that might also be very useful is if we are in the animation preview state so over here i've got the animation preview window and if i click over here on the preview button now there you go the character actually goes into the animation preview and while this preview is active now animation rigging is indeed working so this one is great if you want to continue setting up the animation without having to hit play just make sure you go into the animation window and enable preview and yet another thing that you should learn about how animation reading works is that the way this works since it's on based on jobs in order to make it super performant since it works like that it means that if you change any settings over here they won't be applied immediately so for example let's say that i want to aim with the top of the head instead so let's put it maybe on a y and now if i move the target then nope it's still working exactly the same as previously again that's because we were already on preview so i have to leave preview mode and now reenter and yep now it is indeed using the new settings so that's another specific thing for how animation rigging works so as you can see i need to exit and reenter preview and same thing for plane so right now the game is playing and the character is aiming like that but if you go over here and you swap it back and nope it didn't actually change that's because these changes are only applied when the actual game starts running after it starts running you can't really change this so swap this one back into the z hit on play and yep there it is everything is already working so i can take this target object i can put it there anywhere and yep it looks perfectly so i can look left and right up and down i can look anywhere and yep the character always looks perfectly towards the target and again keep in mind that the character is still playing the basic channel animation so the animation itself doesn't have any of this dynamic movement it's all being handled by the animation breaking package alright awesome so for example you can see how this very simple use case would be extremely useful for things like for example having this character talk to the player so let's say the player was right there and the character is looking at it that makes it much more immersive than if the character is always pointing straight ahead and the players off to the side then the player could even move and the character would continue looking at the player or maybe for example this one is a player and there's an item to grab right there on the floor so the player can look at that and make sure that it's looking directly at the object so again just with this very simple example you can already see tons of potential use case okay now for these other settings there are two offsets now the first one maintain rotation offset so if this one is unticked and over here look at how the target is to the left of the character if i hit on play then the character starts looking perfectly towards the target however if i now enable this now it's essentially going to keep this offset so when i hit on play if the character is now still looking forward so it's essentially applying the offset to this target as it was when i hit on play so now if i move it's still looking it's essentially applying the offset that this object had when i had on play and then you have an actual offset so this one will essentially make the character look towards that object plus whatever offset is in here however for some reason the scale is strange so if i put just one on the y you would assume it wouldn't look around one unit above so it shouldn't look around here but now it's still looking pretty much perfectly towards that one so this is working but for some reason the scale in here is a bit weird if i put it on 50 you can see that it is indeed working so right now it is working although once again the axes are slightly different depending on the bone so adding 50 on the y over here on this constraint adding that apparently adds here and left to right so if i'm looking left and right you can see it's always looking slightly to the right so here if i put minus 50 on the x now it is indeed looking above wherever i put the target so for example let's say you want the character to look towards a really tall something you can put this on the base and simply add the offset so the scale over here is very strange but it does work exactly as in them next up over here we've got the constrained axes so this is which of the axes will be affected by this constraint for example right now if i hit on play and if i take the target and i put it somewhere right next to the bone you can see how the head is rotating like that so left and right way too much let's say you only want the head to actually go left and right and not like this then over here you could disable the axes so for that one that would be the z axis and now if i try putting it on that same place you can see yep the head no longer rotates like that it only goes left right up down it no longer shifts to the side like that or for example let's say you only want it to look up down and not left right then for that case you would disable the y axis and yep now the head doesn't look up and down but it does not look left and right and the final one we have here are the rotation limits so the minimum and the maximum so for example a normal human head usually cannot rotate 180 degrees so this is not humanlike behavior usually the head stops roughly around there so roughly 90 degrees that's pretty much how much your neck can actually rotate so you can set it here for example say go from minus 80 to plus 80. and now if you take this and put it straight behind nope once it gets to minus 0 plus 80 then no longer rotates more all right great the next thing that we see is over here the constraint has a certain weight and then if you look in the rig itself the array also has a weight this is how you define just how much impact this rig or this specific constraint has on the final thing so for example let's say the goal here is for this character to look at an object so we would place the target directly on the object but then let's say that we only want the character to look at the object when close enough well we can easily do that by modifying the weight so if the weight is at one then it is indeed looking straight towards the object but if the weight is slowly going down to zero then nope now it's just playing the normal idle animation so the character would be like this then as the character moves forward and approaches the object then you would slowly increase this one and yep now it's looking towards the object so that's a super simple example that adds quite a bit of immersion to your game and it's also super simple to do so let's see how we can do that through code over here let's make a simple csharp script call this look at object animation rigging and now for attaching the script let's attach it directly over here onto our ring okay so now here the only thing that we need is a reference to that rig component which also means we need to find out where this rig class exists if over here if i just do a private void awake and unawake i try to get component of type rig if i just do this then nope does not work it does not recognize what is a rig so that means we need to find out how we can access this class and actually cover that in another lecture i covered how you can find any class for any tool line feature definitely go watch that lecture if you haven't seen it so here you can just right click on the rig and go into edit script and when you do yep it opens up the actual script so with this we can now see that this one is inside the unity engine and missions rigging namespace and then the rig component itself is named right so all we need to do is add this using so over here just add using that and there we go now we get our rig component okay so with this let's just make some simple code for modifying the weight okay so here it is some very basic logic so as i press the t key it's going to set the target weight to one and as i press the white key it's going to set it to zero then i'm just using math.lab in order to have a nice smooth interpolation instead of being instant so that's it very simple logic let's test so here we are and there's the character playing the normal idol animation now let's say the character approaches a certain npc and i press a button and yep now the character is looking towards where that character would be now let's say the character moves away and yep back into playing the normal idol animation just looking forward so you can see how easy it is to play around with all of your constraints through code by just easily playing around the weights this simple example alone is already great for adding that extra bit of polish to your game okay now let's build another very common example for ik let's make some foot placement here is my character again and again let's add a rig so go into the menu rake setup okay automatically adds the rig all right now inside the rail let's make our game object so create a new empty game object let's call it foot ik and then go into that component and in this case we're going to use down here a two bone ik constraint so this one as you can see takes a root bone a mid bone and a tip bone so for a leg this would be the hip and then the knee and then the foot and if we were to use this on an arm then instead this would be the shoulder the elbow and finally the hand now there's also a really useful tool for this component instead of having to assign all of these and create the source objects you can just start by assigning the tip so in this case we want the leg so let's select this one right here so we've got our right foot so just go in there assign the right foot onto the tip and then right click on the constraint itself and then down here auto setup from tip transform and when you do that yep it automatically fills up on the other ones so it goes from the tip and essentially automatically chooses the two parent game objects above it so you've got the left foot then we've got the leg and right a point so you can see the foot down there the leg that's that bone and that bone okay so all that is correct and it also automatically creates a foot ik target and a hint now the target is where we want the foot to actually be placed and then for the hint this is kind of a soft target meant for the middle joint so in this case would be the knee and if we were playing with an arm that would be the elbow so based on how humans work you would want this one to be in front since human knees generally don't bend backwards so you would place this one in front and then the target down there by the way this one is also optional so you can choose not to use the hint and if you don't assign it then essentially the animation rating system will try to guess where the knee should bend to okay so that's pretty much how easy it is to set this up now again we can use down here the really awesome gizmos so let's place one on the target for target let's go with the box and for the hint over here let's go with maybe a locator effector okay so here we've got the target for the foot and over there we've got the hint so just like this with this very simple setup so all we did was assign the tip and then use the menu so just with this if we hit on play and you have just with this as you can see it's already working now this specific ik also takes the rotation of the final object into account so that is why the leg over there the foot isn't looking very strange so just rotate it to make it make a bit more sense okay so like that the foot is looking kind of normal and again like you see that effector the hint is used for where it should bend so right now if i move the leg like this then obviously it makes sense so the knee is bending correctly but if i put it above then that goes backwards so that's essentially how the hint is used to make this so in the case of a humanoid that's pretty much all you need to do then over here you can see how easily you could animate just this final object and the leg would correctly move to match then of course from the side you can see that it matches up not just up and down but also from side to side and then over here the hint also has an impact going left and right all you need to do is just put it like this and yep there's another perfect leg so this is yet another super useful constraint the two bone ik constraint so this one as you can see is perfect for handling foot placement so for example let's say this character instead of being just on a flat plane it was actually on some kind of hill so in that case you wouldn't want the foot to be straight flat on the ground if it was a hill if it had something then you could easily apply some rotation and maybe move it a bit and that way the foot would match perfectly with whatever surface you're working on so this one is super useful or of course as you can see this one is just a two bone so those two bones can be a foot or it can also be an arm so you could apply this constraint onto an arm in order to very easily grab a dynamic object okay now let's build one final common example we want to make a weapon aim perfectly at a target over here is my character with a simple aim animation as you can see the aim is fixed so the character is just aiming forward now that's not very good you want the character to be aiming at an exact position not just a generic forward so let's see if the target was down here on the floor you wouldn't want it to be aiming in that direction so once again we can use animation rigging to take this basic static animation and make it aim perfectly towards any point so again we select our character and we go and set up our break so rig setup all right we have a rig now inside let's first make an empty game object let's call this our aim rig and then over here we're going to add a component and once again we're trying to aim somewhere so let's use a multim constraint so just like we did on the very first example now we need to set the constraint object now for aiming we're going to want to aim with the hand so let's use the right hand so let's go into our constraint and drag the hand as a constrained object and by the way as you can see the weapon is over here i've got a nice weapon prefab and it's placed as a child of the handgame object so as this one moves you can see that the weapon moves along with it so we need to do is rotate the hand and the weapon will rotate with it now again over here we need to play around with the aim axis and the up axes and again in order to identify which one you should be using here you can go ahead select the right hand and once again make sure that up here you're in local so you can see everything and over here we can see that the green one is the one painting forward so the green one is the y axis so let's go up here for the aim axis let's go with a y and then for the up axis we've got over here the red one that's the x but it's pointing down so pointing up we would want a minus x so up here put minus x and that's it now the final thing that we need is just our target so let's make an empty game object inside of this let's call it the target and just drag the reference and again let's add a nice effector okay so there's our target and just with this let's hit on play and here right away you can see the hand is indeed aiming perfectly towards the target so i can place the target anywhere and yep the hand actually aims correctly towards it so i can put it up down left right and yep the target is always perfectly aiming all right that's great also here's a quick tip if you want to verify that it's aiming correctly you can go for example on the right hand where we're moving and over here let's create a cube inside of it and then you just make it really thin and pointing forward so in this case pointing forward on the y so you can do it like this and really increase the y massively and you can see yep it is aiming perfectly so now as i move this yep you can see it's always aiming perfectly go up down and as always perfectly intersect so just a quick tip to ensure that it is aiming perfectly and if it isn't then of course you can either play around with where you place the aim target or again over here like we saw on the settings you can play around over here and add a slight offset okay so what we have here is indeed working so as you can see the weapon is perfectly aiming towards our position but of course it looks quite a bit odd right now the only thing that is turning is just the hand so the rest of the body is static the second hand is also static so just like this it's not enough looks still quite a bit odd just like in real life you wouldn't aim just by moving your hand you would actually move your entire body so let's do that on our same ring we can create another empty game object let's do the body aim rig so we're going to want to rotate the body and once again let's add a component animation breaking and once again use the multium constraint now for the bone this time we want to apply to the hips so let's see over here the spine so that's good so just select the spine and once again let's play around with the aim axes so make sure this one is on local okay so the four is the blue one so that's the z so over there fourth on the z okay and the up one is green that's the y and yep that's already correct so on the source object let's use the exact same one so up here the target just assign it and that's pretty much it so let's see and yep now it looks quite a bit better so as you can see now the chest does rotate to face the target so it's no longer 100 static so pointing up down the chest rotates along with it so that's great however you can also see that over here the hand is no longer perfectly pointing so the hand is definitely not pointing in that direction so the hand is definitely looking very strange why is the hand looking like that now the reality is that this has to do with the order in which the system calculates the rotation for all the joints basically what is happening right now is the hands are rotating to face the target perfectly so just like before it's still doing that but the issue is that after the hand is rotated then we're rotating the body and of course the hand is connected to the body so by moving the body we are once again moving the hand so in the end after the body rotates the hand is no longer facing perfectly now the issue here is that we're rotating the hand first and then the body second when really we want to reverse we want to first aim by rotating the body and then we want to aim the hand perfectly thankfully that is super easy to solve the order in which the rigs are evaluated is based on the order in the hierarchy so all you really need to do is take the body aim and just drag this game object and put it above the aim rig so that's it now it's going to calculate the body aim and then it's going to complete the hand aim and yep there it is now the hand is indeed rotating perfectly so it's perfectly aiming towards the target and as you can see the body is also rotating all right awesome everything is working great however the body is also rotating a bit too much so this is kind of personal preference but like this the body is rotating perfectly so i guess if you want your character to look really mechanic then maybe this is it but if you want it a bit more natural then lowering the rotation by a little bit would probably be best thankfully that is something that we can easily do we can go into the body aim break and over here we've got the usual weight so you can just lower this down we still wanted to aim just not aim perfectly so maybe let's say 0.7 and now as we move the target yep the body rotates just not perfectly so it rotates just enough to be natural once the hand still points perfectly all right great now there's just one last thing that we need right now the chest and the hand they are rotating so they all look great but of course the other hand is not moving at all so that looks very strange the character is supposed to be holding the front end of the rifle with this hand once again we can solve this with another constraint let's make another one so another empty game object what's called the second hand rig and over here we are going to add an animation bringing we're going to make a two bone ik constrained so just like we did for the legs now set it up once again we can just set up the tip so for this one we're going to want the other hand so let's select the left hand okay so let's go into this one select the left hand put it on the tip and then once again use the super useful tool so auto setup all right and it automatically creates our target and our hint now for this we want to grab directly on the weapon so let's take both of these game objects instead of being child of this object let's make a child of the right hand okay and now we just need to position them so let's put them right on the hand now we just need to play around the position so let's hit on play and yep as you can see the second hand is there so now it's really just a case of rotating this one to where it makes sense and then same thing for the hint we want the elbow to rotate from the other side okay so when it looks correct we can just copy the position on this one so let's select the target and over here you're going to transform and just copy the component then stop playing then select the target and up here right click and paste component values and now it should be placed on the correct place and if we hit on play and yep the second hand is there and let's just play around the hint so let's put it slightly there so that's how the elbow should bend and once again just right click copy this one and paste it back all right so here is our final result we've got our target i can put it anywhere and as you can see the character is always aiming perfectly so i can move up down left right and everything aims perfectly so the body rotates the left hand the right hand all of them rotate and everything aims perfectly and again keep in mind that the animation itself is just a simple static animation pointing straight ahead it's the animation rigging system that is overriding the animation to make all of these bones aim perfectly towards the target so you can put it anywhere and always aims perfectly then of course you can combine what we'll learn here with what we learned in the animation avatar video in there i teach you about how to use avatars in avatar masks to make essentially a separate layer from the upper body and the lower body so that's how you could make the upper body exam like this so just rotating aim perfectly and then leave the lower body playing an idol or a movement animation and just with that you would have a very good character aim controller so here it is really nice extremely useful the character aiming perfectly now let's see a few more things that this package can do so far we've been looking at how it's used to dynamically apply changes to the animation that's one of the best use cases but this package can also be used to modify any animation you already have so there's a way to modify the actual animation itself rather than making it dynamic meaning that you can essentially bake the constrained motion directly in the animation that way you're not spending any processing power running the rig so here is another scene from the official samples this is the twist chain so it shows a twist chain constraint and on the animation as you can see over here the only keyframes are for the root and the tip so these objects are the only thing that's animated and then the animation rigging package decides how to move all these cubes that make up the chain now let's say you want this exact animation every time maybe you're making a cutscene animation and you don't need anything dynamic if you don't want it to ever change then there is no reason to spend processing power running the animation rating package so instead you can make this exact animation directly on the animation itself to do that just select the animation over here on the animation window and make sure you have a duplicate so you have a backup if you need it and then you can select the root and then you can go into the rig builder and right click and over here you see this option transform motion to skeleton and if you choose it and yep it automatically created all the keyframes for all of these objects so if i hit on play i still get the exact same animation although right now you can see that over here the rig weight is set to zero meaning that this rig is no longer used so this whole animation is baked directly into the object themselves and in order to bake like you saw we can do it over here on the rig builder so select the object on the rig builder you can do this but you can also do it over here individually on each rig or even individually on each constraint so you have all those options for baking and after baking you can even delete all the rig components so you can delete them on the animation itself delete all this and then just here to delete the rig and go into this one delete the rig builder and if you hit on play yep there you go you can still see the exact same animation everything works perfectly so this is another super powerful use case for this package you can essentially modify any animations you already have however there is one pretty important limitation with this utility it does not work on humanoid characters so over here back in the previous scene this one is using a humanoid rig and if i right click nope those options are grayed out however on the forums i did found a slight workaround if you absolutely need it according to this official response the bidirectional baking on humanoid characters is not on the roadmap but as a workaround you can use the fpx exporter so using that apparently you can bake the constraints back into a generic rig as opposed to a humanoid rig and then it should work and then reimport it back as humanoid so if you absolutely need to do exactly that then maybe this is the way to do it okay so we just saw how you can turn a constraint into an animation but you can also do the opposite you can turn an animation back into a constraint so here is the animation that we just created but the rig is not active now you can select the constraint itself and right click and this time transfer motion to constraint and if you do that and you could apply that motion back over here onto the constrained objects so the root object position rotation same thing for the tip so now you can once again delete all of these ones that were created previously and if you had on play and yep we still have the exact same behavior as previously so as you can see you can go one way or the other way alright so that's the animation rigging package as you can see it's full of features this one is perfect for when you want to apply dynamic modifications to your animations so as you can see it's perfect for dynamic foot placement or aiming exactly at where the player is aiming or even some other things like for example grabbing a moving object or maybe making a character touch the door while going through it this is an excellent package that will make all your animations feel much more natural alright so this was a lecture from my ultimate in the overview course there's lots more explaining tons of things like shadowgraph similar definitions animation avatar the video player and so on as well as many niche things that i couldn't possibly cover in normal youtube videos go ahead and get the full course and learn how to master all the unity tools and features to help you make better games faster
