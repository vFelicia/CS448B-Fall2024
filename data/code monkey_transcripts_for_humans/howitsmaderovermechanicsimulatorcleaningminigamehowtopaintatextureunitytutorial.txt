With timestamps:

00:00 - hello and welcome i'm your code monkey
00:02 - here is the game
00:03 - rover mechanic simulator which features
00:04 - some interesting mechanics and systems
00:06 - let's inspect and remake the cleaning
00:08 - minigame to see how it works
00:10 - it involves working with textures copy
00:12 - pasting some pixels and listening to
00:14 - where on the object the player clicks
00:16 - hopefully you'll learn something new
00:17 - that you can then apply to mechanics in
00:19 - your own games
00:20 - by the way i'm trying out this format
00:21 - because there were a lot of comments on
00:23 - my game design breakdown videos asking
00:25 - for a more actionable tutorial format so
00:28 - let me know if you like this type of
00:29 - video
00:30 - do you prefer learning through a more
00:31 - guided path rather than separate
00:33 - tutorials
00:34 - then check out my complete step-by-step
00:35 - courses starting from scratch until the
00:37 - final polished games
00:38 - if you're into programming then get the
00:40 - awesome builder defender course
00:41 - learn how i make my own games using code
00:44 - build an awesome game that involves
00:45 - mechanics from city builders tower
00:47 - defense and survival games
00:48 - or if you're into visual scripting then
00:50 - you get the vs course which features not
00:53 - one but three complete games
00:54 - a simple platformer an action rpg and
00:57 - awesome fps
00:58 - in the visual scripting course all of
00:59 - this is built without a single line of
01:01 - code
01:02 - all games in both courses start commonly
01:04 - from scratch and go step by step until
01:05 - the final polished games
01:07 - all of the unleashers have their project
01:08 - files available at every step of the way
01:10 - and i'm always active answering
01:12 - questions every single day in the q a
01:14 - section
01:15 - so if you are looking for a more guided
01:16 - path then check out the courses at
01:18 - unitycodemonkey.com
01:20 - courses alright so first just a quick
01:22 - overview of what the game is about
01:23 - like the name implies it simulates being
01:25 - a rover mechanic
01:27 - so you're on mars you accept orders they
01:29 - give you a list of the components that
01:30 - need to be repaired or cleaned
01:32 - you then identify those components
01:34 - remove them by unscrewing all the screws
01:36 - and everything that's connected to it
01:38 - then you can take those components and
01:40 - either clean them up or remove the
01:41 - broken components and 3d print some new
01:43 - ones
01:44 - then you put it all back together and
01:46 - complete the order it's a relatively
01:48 - simple game plan loop which is quite
01:49 - appealing if you enjoy
01:50 - taking things apart and putting them
01:52 - back together and it is also
01:54 - a game made with unity if you want to
01:56 - pick it up there's a film link in the
01:57 - description and if you use that it will
01:58 - also be supporting the channel
02:00 - and follow the curator page on steam if
02:02 - you want to see more of these types of
02:03 - videos
02:04 - the game features a bunch of interesting
02:05 - systems and mechanics with one of them
02:07 - being the
02:08 - cleaning minigame so let's see how it
02:09 - works when you dismantle some objects
02:12 - they might be dirty
02:13 - if so then you need to go into the
02:15 - cleaning station to clean them up
02:16 - this opens up a nice mini game where you
02:19 - use the mouse to click and move the
02:20 - mouse to clean up the object
02:22 - so you have to clean up the front then
02:24 - rotate it clean the back and keep
02:26 - spraying until the dirt is all cleaned
02:27 - off
02:28 - so in terms of logic what this means is
02:30 - you need to store the dirty state
02:32 - throughout the whole object mesh
02:34 - so you need to know not just whether or
02:35 - not the object as a whole is dirty
02:38 - but rather you need to know exactly
02:39 - where that dirt is
02:41 - and you also need to know exactly where
02:42 - the player has clicked so you know what
02:44 - part of the object
02:45 - dirt should be cleaned so there are many
02:47 - ways you can achieve this
02:49 - one approach would be by actually
02:50 - painting a texture you can do all sorts
02:53 - of actions working directly with pixels
02:54 - inside of unity
02:56 - i've covered lots of those methods when
02:58 - i did the guest spreadsheets videos just
03:00 - like i used them in my game battleground
03:01 - tycoon
03:02 - you can use the function get pixel which
03:04 - will grab any pixel from a texture
03:07 - this returns a color and with that color
03:09 - you can do whatever you want with it
03:11 - so you can for example compare it with
03:13 - another color
03:14 - and then paste that new color into
03:16 - another texture by using set pixel
03:18 - using these simple functions you can
03:20 - achieve all this functionality
03:22 - so in this case you have the normal
03:24 - solar panel texture
03:26 - so the object is looking completely
03:28 - normal then you have another texture
03:30 - except this one is of the object one
03:32 - fully dirty
03:33 - so everything's done paint normal but
03:35 - painted with dirt on top
03:37 - and then you have another texture which
03:39 - works as the dirt mask
03:41 - for the mask you can make it a full rgb
03:43 - texture or since you just need one
03:45 - channel
03:46 - you can just have a single color so for
03:48 - example just green
03:49 - with those three textures you can then
03:50 - make a very simple shader either
03:52 - manually or with shadow graph
03:54 - take those three textures as inputs and
03:56 - the output
03:57 - is the final visual which is composed of
03:59 - the dirty texture where the mask is
04:01 - and a normal clean texture where there's
04:03 - no dirt mask so by combining all these
04:05 - you can probably see where this is going
04:06 - by the way if you find the video helpful
04:08 - please hit the like button
04:09 - it's a tiny thing but it really does
04:11 - help thanks all i need to do to make
04:13 - this minigame work
04:14 - is start off with the mask showing off
04:15 - all of the dirt and then as the player
04:18 - clicks on the object you simply paint
04:19 - some of those pixels in black
04:21 - and as the mask becomes more painted in
04:23 - black the dirt gets removed and the
04:25 - objects start slowing clean
04:26 - for that another crucial part is knowing
04:28 - where the player actually clicks
04:30 - you can do a simple raycast from the
04:32 - mouse position and hit the object
04:34 - then inside the raycast head structure
04:36 - you have the field texture cord
04:39 - this gives you the uv coordinates where
04:40 - the raycasts actually hit
04:42 - it means that on zero zero is on the
04:44 - lower left corner whereas one one is on
04:46 - the upper right corner
04:48 - so those are uv coordinates if you want
04:50 - to learn some more about meshes and uvs
04:52 - check out my mesh video it's very useful
04:54 - to understand how all of this works
04:56 - under the hood
04:57 - so again with that you have normalized
04:58 - uv coordinates then you just need to do
05:00 - some math in order to convert it into
05:02 - pixel coordinates
05:03 - then like i said you can use those
05:04 - functions to copy and paste pixels
05:07 - you can go with the very simple approach
05:08 - of clicking on a part of an
05:10 - object and just making a square area
05:12 - fully clean you can inspect the mass
05:14 - section real time to see what is being
05:16 - painted
05:17 - but making a square doesn't really look
05:19 - too good so you can just combine it with
05:21 - a simple brush texture
05:23 - in this case i made one with black in
05:24 - the middle and green outside
05:26 - meaning that in terms of numbers it has
05:28 - zeros all the way down the middle and
05:30 - one on the outside so this makes it
05:32 - perfect for some multiplication
05:34 - you just cycle through the home brush
05:36 - grab the pixel color on that position
05:38 - on the brush then you grab the pixel
05:40 - color of that position on the dirt mask
05:42 - and just multiply them both with that
05:44 - now when the player clicks you have a
05:46 - nice smooth area
05:47 - now there's one last thing missing from
05:49 - this minigame it's how you identify
05:51 - just how much of the object is clean and
05:53 - how much is dirty
05:54 - for this you really just have some
05:56 - simple math so you have the full dirt
05:58 - mask texture with foam green on the
06:00 - whole object area
06:02 - then when you start the mini game you
06:03 - essentially duplicate that dirt mask
06:05 - texture and the clone one is what you
06:07 - actually use to paint so not the
06:08 - original
06:09 - and with those two you can do some
06:11 - simple math first you cycle through the
06:13 - home phone dirt mask and count up all of
06:15 - the dirty pixels
06:16 - with that you have the total then you
06:18 - simply cycle through the whole
06:20 - clone texture and again count up all of
06:21 - the dirty pixels
06:23 - just divide one by the other one and you
06:25 - have the full percentage of dirt
06:26 - if you don't want the object to start
06:28 - off with 100 dirt then you can also just
06:30 - apply some simple noise after you clone
06:32 - the phone dirt mask
06:33 - then you just do that math as the player
06:35 - is painting the dirt mask
06:37 - when the dirt mask texture is fully
06:38 - blanked then their percentage will be at
06:40 - zero and the object will appear fully
06:42 - clean
06:43 - and finally in order to handle both
06:44 - sides you really just apply a very basic
06:46 - animation
06:47 - since the whole system is based on
06:49 - raycasts everything works perfectly
06:51 - just literally rotate the object with a
06:52 - simple animation and all the connections
06:54 - will work perfectly
06:55 - and that's how you can recreate the
06:57 - simple minigame which works quite well
06:59 - if you want to pick up the game there's
07:01 - in the film link in the description and
07:02 - if you use that one you'll also be
07:04 - supporting the channel
07:05 - and follow the curator page on steam if
07:06 - you want to see more of these types of
07:08 - videos
07:09 - as i said i'm trying out this format
07:10 - because there were a lot of comments on
07:11 - my game design breakdown videos asking
07:13 - for a more actionable tutorial format so
07:15 - let me know if you find this format
07:17 - helpful
07:18 - also let me know what other games have
07:19 - some interesting mechanics that you'd
07:21 - like to know how they work
07:22 - alright hope that's useful check out
07:24 - these videos to learn some more
07:26 - thanks to these awesome patreon
07:27 - supporters for making these videos
07:29 - possible thank you for watching and i'll
07:31 - see you next time

Cleaned transcript:

hello and welcome i'm your code monkey here is the game rover mechanic simulator which features some interesting mechanics and systems let's inspect and remake the cleaning minigame to see how it works it involves working with textures copy pasting some pixels and listening to where on the object the player clicks hopefully you'll learn something new that you can then apply to mechanics in your own games by the way i'm trying out this format because there were a lot of comments on my game design breakdown videos asking for a more actionable tutorial format so let me know if you like this type of video do you prefer learning through a more guided path rather than separate tutorials then check out my complete stepbystep courses starting from scratch until the final polished games if you're into programming then get the awesome builder defender course learn how i make my own games using code build an awesome game that involves mechanics from city builders tower defense and survival games or if you're into visual scripting then you get the vs course which features not one but three complete games a simple platformer an action rpg and awesome fps in the visual scripting course all of this is built without a single line of code all games in both courses start commonly from scratch and go step by step until the final polished games all of the unleashers have their project files available at every step of the way and i'm always active answering questions every single day in the q a section so if you are looking for a more guided path then check out the courses at unitycodemonkey.com courses alright so first just a quick overview of what the game is about like the name implies it simulates being a rover mechanic so you're on mars you accept orders they give you a list of the components that need to be repaired or cleaned you then identify those components remove them by unscrewing all the screws and everything that's connected to it then you can take those components and either clean them up or remove the broken components and 3d print some new ones then you put it all back together and complete the order it's a relatively simple game plan loop which is quite appealing if you enjoy taking things apart and putting them back together and it is also a game made with unity if you want to pick it up there's a film link in the description and if you use that it will also be supporting the channel and follow the curator page on steam if you want to see more of these types of videos the game features a bunch of interesting systems and mechanics with one of them being the cleaning minigame so let's see how it works when you dismantle some objects they might be dirty if so then you need to go into the cleaning station to clean them up this opens up a nice mini game where you use the mouse to click and move the mouse to clean up the object so you have to clean up the front then rotate it clean the back and keep spraying until the dirt is all cleaned off so in terms of logic what this means is you need to store the dirty state throughout the whole object mesh so you need to know not just whether or not the object as a whole is dirty but rather you need to know exactly where that dirt is and you also need to know exactly where the player has clicked so you know what part of the object dirt should be cleaned so there are many ways you can achieve this one approach would be by actually painting a texture you can do all sorts of actions working directly with pixels inside of unity i've covered lots of those methods when i did the guest spreadsheets videos just like i used them in my game battleground tycoon you can use the function get pixel which will grab any pixel from a texture this returns a color and with that color you can do whatever you want with it so you can for example compare it with another color and then paste that new color into another texture by using set pixel using these simple functions you can achieve all this functionality so in this case you have the normal solar panel texture so the object is looking completely normal then you have another texture except this one is of the object one fully dirty so everything's done paint normal but painted with dirt on top and then you have another texture which works as the dirt mask for the mask you can make it a full rgb texture or since you just need one channel you can just have a single color so for example just green with those three textures you can then make a very simple shader either manually or with shadow graph take those three textures as inputs and the output is the final visual which is composed of the dirty texture where the mask is and a normal clean texture where there's no dirt mask so by combining all these you can probably see where this is going by the way if you find the video helpful please hit the like button it's a tiny thing but it really does help thanks all i need to do to make this minigame work is start off with the mask showing off all of the dirt and then as the player clicks on the object you simply paint some of those pixels in black and as the mask becomes more painted in black the dirt gets removed and the objects start slowing clean for that another crucial part is knowing where the player actually clicks you can do a simple raycast from the mouse position and hit the object then inside the raycast head structure you have the field texture cord this gives you the uv coordinates where the raycasts actually hit it means that on zero zero is on the lower left corner whereas one one is on the upper right corner so those are uv coordinates if you want to learn some more about meshes and uvs check out my mesh video it's very useful to understand how all of this works under the hood so again with that you have normalized uv coordinates then you just need to do some math in order to convert it into pixel coordinates then like i said you can use those functions to copy and paste pixels you can go with the very simple approach of clicking on a part of an object and just making a square area fully clean you can inspect the mass section real time to see what is being painted but making a square doesn't really look too good so you can just combine it with a simple brush texture in this case i made one with black in the middle and green outside meaning that in terms of numbers it has zeros all the way down the middle and one on the outside so this makes it perfect for some multiplication you just cycle through the home brush grab the pixel color on that position on the brush then you grab the pixel color of that position on the dirt mask and just multiply them both with that now when the player clicks you have a nice smooth area now there's one last thing missing from this minigame it's how you identify just how much of the object is clean and how much is dirty for this you really just have some simple math so you have the full dirt mask texture with foam green on the whole object area then when you start the mini game you essentially duplicate that dirt mask texture and the clone one is what you actually use to paint so not the original and with those two you can do some simple math first you cycle through the home phone dirt mask and count up all of the dirty pixels with that you have the total then you simply cycle through the whole clone texture and again count up all of the dirty pixels just divide one by the other one and you have the full percentage of dirt if you don't want the object to start off with 100 dirt then you can also just apply some simple noise after you clone the phone dirt mask then you just do that math as the player is painting the dirt mask when the dirt mask texture is fully blanked then their percentage will be at zero and the object will appear fully clean and finally in order to handle both sides you really just apply a very basic animation since the whole system is based on raycasts everything works perfectly just literally rotate the object with a simple animation and all the connections will work perfectly and that's how you can recreate the simple minigame which works quite well if you want to pick up the game there's in the film link in the description and if you use that one you'll also be supporting the channel and follow the curator page on steam if you want to see more of these types of videos as i said i'm trying out this format because there were a lot of comments on my game design breakdown videos asking for a more actionable tutorial format so let me know if you find this format helpful also let me know what other games have some interesting mechanics that you'd like to know how they work alright hope that's useful check out these videos to learn some more thanks to these awesome patreon supporters for making these videos possible thank you for watching and i'll see you next time
