With timestamps:

00:00 - in this video we're going to make a nice
00:01 - simple inventory system this is a very
00:03 - simple class that lets the store unique
00:05 - and sack of all items we can spawn them
00:08 - in the world pick them up use them and
00:10 - drop them let's begin
00:14 - [Music]
00:18 - hello and welcome I'm your code monkey
00:21 - and this channel is all about helping
00:22 - you learn how to make your own games
00:24 - with NF tutorials made by a professional
00:26 - indie game developer so if you find the
00:27 - video helpful consider subscribing okay
00:30 - so here's what we want to create over
00:32 - here is my player and I can simply move
00:34 - around then in here in the UI you can
00:36 - see my current inventory so I'm carrying
00:39 - a sword a health potion and a mana
00:41 - potion scattered throughout the map you
00:43 - can see a bunch of items on the floor
00:45 - now if I move I can click up there you
00:48 - go when I picked it up it was added into
00:50 - my inventory as you can see some items
00:52 - are stackable and some are not so if I
00:54 - grab this sword there you go that one is
00:56 - not stackable as you can see in here is
00:58 - a 10 coin there you go I've got ten
01:01 - coins now ten eleven and twelve thirteen
01:02 - yep then in the inventory I can right
01:05 - click in order to drop an item and I can
01:07 - also left-click to use them so over here
01:09 - the mana potion left-click and there you
01:11 - go I use a metal potion and I've used a
01:13 - health potion so just like that we have
01:15 - a very nice and very functional
01:17 - inventory class so click drop and so on
01:20 - and we can do anything right awesome so
01:23 - this is our goal let's get to it so over
01:26 - here is my starting scene I just have
01:28 - the player walking around and nothing
01:29 - else ok let's begin making our inventory
01:32 - class here we make a new c-sharp script
01:35 - let's call this the inventory and open
01:38 - it up now in here well let's first get
01:41 - rid of mana behavior since this will be
01:43 - a simple class and now in here we're
01:47 - going to have a very simple list of
01:48 - items so that means we need to define
01:51 - our item type so here back in the editor
01:54 - let's create another script this won't
01:56 - be our item and again get rid of
01:58 - monobehaviour
02:00 - okay in here very simple we just define
02:03 - a public noone of our item type can't
02:07 - let's put some items
02:11 - and then in the item class itself we
02:14 - simply have a item type field and also a
02:18 - int for the amount all right here's our
02:21 - very simple item class now we can go
02:23 - back into the inventory and in here we
02:26 - make a list of items and on the
02:29 - constructor we simply initialize the
02:33 - list okay let you do it
02:35 - let's do a debug down log just for
02:38 - testing just like that okay now let's
02:41 - see how we're going to test this let's
02:43 - go into the player class okay here it is
02:46 - the rest of the code is irrelevant for
02:48 - our case here how we care about is the
02:49 - inventory so we're here on the awake
02:52 - let's simply instantiate our inventory
02:54 - so here to find a field maybe here we
02:59 - simply do new invitar all right let's
03:01 - test and there it is we have the
03:03 - inventory in the console so everything
03:04 - is working right okay so far so good now
03:07 - here in the inventory let's make a
03:09 - function to add an item in order to add
03:13 - we simply added to the list item list
03:15 - add our item and now for testing when we
03:19 - start let's have an item onto it so
03:23 - let's call an item inside we create the
03:25 - new item let's say it's a weapon type
03:29 - sword and amount just one and just like
03:34 - that then let's do it
03:35 - debug log on the item list count okay so
03:39 - we should be able to add an atom to our
03:41 - list and be able to see a one any of
03:43 - there it is we have one item inside of
03:45 - our in other okay great now let's make a
03:48 - visual for the inventory so over here
03:50 - inside my game handler I have the UI and
03:53 - inside I have the canvas so in here
03:55 - let's start off by making an empty game
03:57 - object call this the UI inventory now
04:01 - inside with a background
04:31 - now let's make a container game object
04:35 - for the item slot container so this is
04:38 - what we're going to fill up with all our
04:40 - item slots and then inside let's make
04:42 - the game object for each inventory slot
05:00 - okay so here's the item slot template so
05:03 - this is the game object that we're going
05:05 - to duplicate in order to show all of our
05:06 - items so for the template we're going to
05:08 - start off as hidden okay so that's it
05:11 - for the UI setup as you can see very
05:12 - simple just the background a container
05:14 - and a template now let's make the code
05:16 - to handle this so a new c-sharp script
05:19 - and to call this the UI inventory this
05:23 - when we drag it in here okay now in here
05:25 - the first thing we're going to need is a
05:26 - reference to our inventory so let's make
05:31 - a function to receive it okay now we
05:35 - need to call this from somewhere so
05:37 - let's go onto our player and in here
05:40 - let's add a serialize feel for our UI
05:44 - inventory so we can now go back into the
05:49 - editor and here with the player selected
05:51 - there it is there's the field and just
05:53 - drag the script on to it okay and then
05:55 - here in the player we create the
05:57 - inventory and then we go into the UI
05:59 - inventory and call set the inventory in
06:02 - tustin this part so we are passing in
06:04 - the inventory object onto our UI script
06:06 - okay so far so good now on the inventory
06:09 - window in here on let's make a function
06:12 - to display the items
06:20 - okay so first on awake we grab all of
06:23 - our references now here on let's make
06:25 - our function and now here we need to
06:28 - cycle through all the items in the
06:30 - inventory so we need to go into our
06:32 - inventory and here we need to expose our
06:35 - item list okay now I can go back into
06:40 - the UI and here we can cycle through it
06:43 - and now here all we need to do is
06:45 - instantiate our template and now the
06:54 - template is disabled so the first thing
06:55 - we need to do is call game object and
06:57 - set this one to active so that visible
06:59 - okay then we need to position it okay so
07:13 - here we have some code in order to
07:14 - locate our item slots in a grid array so
07:17 - just like this we should be able to see
07:19 - the window correctly display how many
07:20 - items are in our inventory now we need
07:23 - this to call this function in here so
07:26 - let's go into our inventory and add a
07:28 - couple more so we have a sword
07:29 - let's add a health potion and a manifold
07:35 - okay so we should be able to see three
07:38 - items total let's see and if there it is
07:40 - we have our nice three items all right
07:42 - awesome
07:43 - now obviously let's set the proper
07:45 - visuals so for that let's make a class
07:48 - that won't hold a reference to all the
07:49 - assets that we need so in here we make a
07:51 - new class let's call this the item
07:53 - passes in here let's make this a
07:56 - singleton
08:01 - so we have a nice static field to access
08:04 - this script and I'm here we add all our
08:06 - essence all right here we have all our
08:13 - assets now we can go into the item class
08:16 - and then here we can make it get sprite
08:18 - function so inside all we do is a switch
08:22 - on our item type and depending on the
08:24 - type we return the asset all right
08:33 - that's it now we can ask the item in
08:35 - order to give us the sprite so we can go
08:37 - back into the UI inventory here we are
08:40 - placing the thing okay great and now
08:42 - let's go into the item slot in order to
08:44 - find the image and we simply set the
08:50 - image without sprite and we go into the
08:51 - item and we get the spray all right okay
08:55 - so now we go into the editor in order to
08:57 - add our sprites here in the editor let's
08:59 - make an empty game object for our item
09:01 - assets and we drag our script onto it
09:05 - and I mean here we drag all our sprites
09:07 - okay just like that
09:09 - so let's test and if there is we have
09:11 - these three items is playing with the
09:12 - three different sprites awesome okay now
09:15 - let's make some items in the world that
09:16 - we can pick up by moving our player so
09:19 - here in the editor on let's begin with
09:21 - an empty game object let's call this the
09:23 - item world inside let's add a sprite
09:26 - renderer let's just drag something out
09:29 - to there okay and now let's also add a
09:31 - box Collider 2d and we want to make this
09:34 - a trigger and final let's also add a
09:37 - rigidbody 2d and make sure that gravity
09:40 - is disabled all right okay so here we
09:46 - have our item and if we run the game if
09:49 - there you there's the visual for our
09:51 - item on the ground okay so now let's
09:53 - make this into a prefab so we can
09:56 - incentive owner for our prefabs keep
09:59 - things nice and organized and we drag
10:01 - the animal
10:02 - onto it and let's rename this to PF item
10:05 - work okay so now we have our nice prefab
10:08 - now let's make a script to handle it
10:11 - so a new script let's call this the item
10:14 - world and drag it on to our prefab now
10:17 - in here let's make a function to set the
10:19 - item that this our world is scary
10:21 - so a polyploid call it set item and we
10:24 - receive an item okay and let's also make
10:30 - a static function to instantiate a new
10:32 - item world so here we instantiate that
10:38 - means that we need a reference for our
10:40 - prefab so again we can use the I own
10:41 - assets in here we just add a public
10:44 - transform for our item well prefab and
10:48 - then here on the other one we can
10:50 - instantiate that one okay we instantiate
10:59 - our transform then we get the component
11:01 - to type on world and recall set item and
11:06 - we pass in this item all right so just
11:10 - like that over here we have a nice
11:12 - static function to spawn items into our
11:14 - world and here when you have the set
11:16 - item let's also set our sprite so here
11:24 - we do the same thing we ask the item in
11:26 - order to return the sprite
11:27 - all right now let's go to the player in
11:29 - order to test this so here just for
11:31 - testing let's call item world and we
11:34 - call the function to spawn something on
11:36 - the atom world and let's spawn three
11:38 - items
11:45 - okay let's test any of theirs our items
11:48 - being spawned into world awesome now
11:52 - just for fun let's have some lights to
11:53 - the prefab and color them and depending
11:55 - on the type any of there it is now our
12:22 - items have some nice light okay great so
12:25 - now let's see how we can grab them over
12:27 - here on the atom well prefab we added a
12:29 - nice box Collider and we made it a
12:31 - trigger so in the player we can use that
12:33 - over here in the player let's do a on
12:36 - trigger enter 2d now here on let's test
12:41 - if it's an item so here we are touching
12:47 - the item and if so let's add it to our
12:50 - inventory so go into the inventory and
12:52 - call an item so now we need to go into
12:55 - the atom world and make a function to
12:57 - get the item and then we also need to go
13:00 - into the item world and make a function
13:03 - to destroy itself
13:06 - okay so here in the atom world make a
13:09 - public item and get item and here we
13:12 - simply return our item and a public boy
13:16 - destroy cell and here let's just destroy
13:20 - this game object okay there it is very
13:25 - simple let's test so here we are now I
13:28 - approach this health potion and if I go
13:30 - if there we go the health potion
13:31 - disappeared and it was added to my
13:33 - inventory now grab the mana potion and
13:35 - the sword and there you I found them all
13:37 - all right great however you obviously
13:40 - did see that the inventory did not
13:41 - update so let's do that here in the
13:45 - inventory class let's make a event to
13:47 - trigger on update
13:51 - so we have an event on item list change
13:53 - then here when we add an item let's
13:55 - trigger this event okay there it is we
13:59 - have our event now we can go into the UI
14:01 - inventory and now here when we have the
14:04 - set inventory
14:05 - let's subscribe to this event so we
14:07 - going to the inventory and subscribe to
14:08 - this alright so when they are always
14:11 - changes we simply refresh it however
14:14 - before we test this we need to make sure
14:16 - that we destroy the old transforms
14:18 - before we build the new ones so before
14:20 - we do this let's go here go through each
14:24 - transform child inside the container and
14:30 - now let's make sure we destroy them
14:32 - except the template so if the child is
14:40 - template we simply continue and if not
14:44 - we destroy the game object all right
14:49 - that should do it
14:50 - let's test okay here we are let's grab
14:52 - the health potion give there this it was
14:54 - added correctly alright now for the
14:56 - amount of potion and you if I grabbed it
14:58 - and now the sword and yep I grabbed it
15:00 - as well alright awesome so now that we
15:02 - have the atoms being evident let's make
15:04 - a simple way to spawn items in the world
15:06 - by adding them to the hierarchy so here
15:08 - let's make a new script we're going to
15:12 - call this the item world spawner and
15:14 - inside this script the only thing we're
15:16 - going to have is a field for a public
15:19 - item right just like this now in order
15:23 - for this to show up in the editor we
15:25 - need to go into our item and in this
15:27 - class we need to mark it as serializable
15:30 - which is inside the using system alright
15:35 - so we need to make sure that this is
15:36 - serializable in order to show up in the
15:38 - editor so let's see how it looks in here
15:41 - let's make a new item world spawner and
15:45 - drive the script onto it and yet there
15:48 - you go as you can see we have a field
15:49 - for an item and we can pick let's also
15:52 - add a sprite runner just so we can see
15:57 - so let's try putting a sword in there
16:04 - okay so here it is I made a bunch of
16:07 - game objects each of them has the Adam
16:09 - Warren spawn a script and just say
16:11 - sprite in order to display it and now
16:13 - back in this script in here so we have
16:16 - the film for the item then let's make
16:17 - our private void awake and on awake all
16:21 - we want to do is spawn this item so we
16:23 - go into the item world and we call spawn
16:26 - the outer world on to this position and
16:28 - with this item so we spawn it and then
16:31 - we destroy this game object now we can
16:34 - go back into our player and here we can
16:37 - remove our testing codes and all of our
16:38 - spawn these through here okay
16:40 - let's test and if there it is our final
16:43 - items were correctly spawn so we can
16:45 - pause and we can look and see that the
16:47 - item spawners were destroyed and they
16:49 - were replaced with actual items in the
16:50 - world right great so now with all this
16:53 - for he nicely and we can still pick them
16:55 - up and see the inventory update okay now
16:58 - let's deal with stackable items over
17:00 - here in the item class let's make
17:02 - another function let's make a public
17:05 - ball is stackable
17:12 - so we're here we asked if the item is
17:14 - stackable so the coins health potions
17:16 - and mana potions are stackable and sorts
17:18 - and med kits are not so now let's go
17:21 - into our inventory and in here when we
17:23 - add an item instead of always doing this
17:26 - let's test if this item is stackable so
17:30 - if it is stackable we're going to have
17:31 - some logic and if it is not stackable
17:33 - then we just add it right no ok so if it
17:36 - is stackable let's check if this item
17:38 - type already exists in the inventory so
17:46 - if they are already of the same item
17:47 - type then we simply add the amount
17:49 - instead so just like that and if they
17:53 - aren't already placed so in here if the
17:58 - item is not already in the inventory
18:00 - then we simply add it ok just like that
18:04 - very simple
18:05 - ok now let's quickly test so here I
18:08 - already have a health potion in my
18:10 - inventory so if I grab this one it
18:11 - should not spawn a new one and give the
18:14 - recurrence one all right great so the
18:16 - logic is working now we just need a
18:18 - display in order to know how many amount
18:19 - we have in there so let's go to our UI
18:23 - inventory let's inspect our template and
18:26 - in here let's add a new text object
18:36 - so here we have the amount text and now
18:39 - here on the UI let's instantiate our
18:43 - item slot okay in here so we set the
18:45 - anchored positions of the image now it's
18:47 - also said he text so here we set the
18:57 - text based on the item that amount
18:59 - however let's also hide the text if the
19:03 - amount is only one so let's do an if
19:08 - alright so if we have more than one we
19:11 - show the amount if not then we just show
19:12 - an empty text okay that should do it
19:15 - let's test okay here we are and here are
19:17 - a bunch of our items so we already have
19:19 - a sword a health potion and the amount
19:21 - of potion we only have one of each so
19:23 - that's why the text is invisible now
19:25 - let's grab this whole potion and if
19:26 - there we go now it says to worldy mana
19:28 - and there you go it went in there now
19:30 - we're at the first coin and there's the
19:31 - first one and grab a now a 2 a 3 and a 4
19:34 - now these two are not stackable so we're
19:37 - at the sword there we go there's a sword
19:39 - and there's a medkit so just like that
19:41 - we have made our inventory support
19:43 - stackable items awesome now that we have
19:46 - this let's also add an amount to the
19:48 - world items so let's go here into the
19:50 - item our prefab and let's also add a
19:54 - text object so here it is just like that
20:02 - now let's go to the script here in the
20:05 - admin world script we set the item now
20:07 - let's on set the text
20:18 - all right here it is we did the exact
20:20 - same thing only show if it's above one
20:22 - so now in here let's make one of these
20:24 - coins actually home not just one coin
20:26 - let's say ten points okay let's see any
20:30 - of here we are and their days that one
20:32 - has ten coins now I move around let's
20:34 - grab the sword there you got the sword
20:36 - got that got another health potion of
20:38 - the mana now let's grab the ten coins
20:39 - first and there you go we have ten coins
20:42 - now eleven twelve and thirteen all right
20:44 - great
20:44 - now it said the ability to use and drop
20:47 - our items so let's go here into our UI
20:49 - into our item solid template and now in
20:52 - order to capture clicks let's use the
20:53 - button UI component which is part of the
20:55 - code monkey Tony's as always you can
20:57 - download the eternities for free from
20:58 - unity code monkey calm this is a very
21:00 - simple script that just lets us easily
21:02 - set actions for left and right click so
21:04 - let's go into the UI so here let's go to
21:07 - our button UI okay so here we can set an
21:13 - action for the left click and the right
21:14 - point now on the right point let's drop
21:16 - our item and on the left click we're
21:18 - going to use alright so first the drop
21:21 - it's very simple we just need to remove
21:24 - it from the inventory and spawn it in
21:26 - the world so let's go to the inventory
21:28 - and call remove item so we have to make
21:30 - that function and we fasten our item and
21:33 - then what's going to the item world and
21:36 - here we're going to make a similar
21:37 - function and what's wrong with drop item
21:42 - so first let's make the remove item so
21:45 - on the inventory here it's very simple
22:01 - okay so here we're just doing very
22:03 - similar to the ad except instead of
22:05 - increasing we decrease the amount and
22:07 - we'll remove it from the atom list so
22:10 - now we need to make the drop item
22:11 - function now we need to know the
22:16 - position of where we're going to drop it
22:18 - so that means here on the Y we need to
22:20 - know where the player is so we have a
22:29 - function to set the player and then we
22:30 - drop the item using the player okay this
22:34 - is just so we can have a drop position
22:49 - all right so we have a nice drop item
22:52 - function it simply spawns it in the
22:54 - world and pushes it away okay with all
22:56 - this it should be working and now we
22:58 - should be able to right click in order
23:00 - to drop items from our inventory okay
23:02 - here we are
23:03 - now I right click and you've there you
23:05 - go I drop the item okay so it looks good
23:07 - but now we actually have one tiny issue
23:10 - which is let's grab the item that we
23:12 - just dropped and now grab another one
23:15 - and there you go it is now no longer
23:16 - correctly saying to and if I drop it
23:18 - there give it just one is no longer has
23:20 - two so let's see why this is happening
23:22 - so here if I already have one grab
23:25 - another one grab two now I drop it and
23:27 - yep it just dropped one so let's see
23:29 - what is going on this is that here when
23:31 - we call remove item we're passing in
23:33 - this item reference and then in here
23:36 - we're taking this item which also
23:38 - matches this item and we're decreasing
23:40 - this amount which in turn also ends up
23:42 - decreasing this amount so the issue here
23:44 - is because we are modifying the exact
23:46 - same I have reference so the solution in
23:48 - here is to make a duplicate item so we
23:54 - make our new item then we remove it from
23:56 - the inventory and we make sure that we
23:58 - dropped what we have previously seen
24:00 - here we drop DW this is an issue related
24:04 - to the fact that we made item a class we
24:06 - could have made this
24:07 - dropped in order to avoid this item but
24:09 - that depends on what type of game you're
24:11 - making whether it's suitable in order to
24:12 - make a struct or class so in this case
24:14 - with the class you have this problem and
24:15 - let's see if this solution works okay so
24:17 - here we are with one now we have another
24:19 - one now drop and there we go now we
24:21 - dropped you so now we grab that one and
24:22 - we grab two so where are this and this
24:24 - and so on and we can grab everything and
24:27 - I'll drop 13 coins to help potions and
24:31 - to mana potion right great so now with
24:34 - this working let's make the use function
24:36 - over here we have our left-click
24:38 - function all right now here on let's
24:42 - call use on this item in the inventory
24:44 - so we go into the inventory and let's
24:46 - make a function call used item and we
24:49 - pass in this item let's make this down
24:54 - here we make a public void use item and
24:57 - receive an item so now here we need to
25:01 - use it and we want to use it on the
25:02 - player but in here we don't want to have
25:05 - a direct reference to the player so
25:06 - instead let's make a action that takes
25:10 - an item and let's call this to use item
25:14 - action and will receive this on the
25:17 - constructor
25:23 - and then down here we use this just like
25:31 - that okay
25:32 - now in action is just a void delegate so
25:35 - in this case with an item as a parameter
25:37 - so now on the player when we create our
25:40 - new inventory we need to pass in that
25:42 - function so let's make it in here and we
25:47 - pass in this function onto our inventory
25:49 - so now we have this function on our
25:51 - player that we can use to do whatever we
25:53 - want with our I don't let's do a switch
26:07 - okay so here on this function we are
26:10 - doing a switch on the item type and
26:12 - let's have some behavior for the health
26:14 - and mana potion so if we have a health
26:16 - potion let's wash our character green
26:18 - north to indicate a healing and then we
26:20 - go into the inventory and you remove an
26:21 - item of type health potion and just one
26:24 - amount then same thing for the amount of
26:26 - potion so let's see if we can click to
26:28 - use our items okay here we are let's
26:30 - grab a health potion okay we have two
26:32 - health in one mana let's use the mana
26:34 - and there yo you saw it flashing blue no
26:37 - it's left click on the health potion it
26:39 - should flash in green and we should have
26:41 - instead of two just one click any of
26:43 - there you go we have our flash and went
26:45 - from two down to one click again and
26:47 - there you go it's gone now where this
26:49 - one click and there you go very nice and
26:51 - this one doesn't have any behavior so it
26:53 - doesn't do anything same thing for the
26:54 - coins also no behavior and met get also
26:57 - no behavior so we can now use objects
27:00 - inside our inventory in order to trigger
27:01 - custom logic awesome and just like that
27:04 - we have our completed inventory system
27:06 - we have the inventory being in Senshi
27:08 - ated inside our player and displayed
27:10 - over here in the UI we have a nice item
27:13 - class that defines only items in their
27:15 - behavior so each item has a unique
27:17 - sprite which is based on its type and
27:20 - also an amount we can spawn items in the
27:22 - world and move around them in order to
27:24 - pick them up then on the inventory we
27:27 - can right click in order to drop an item
27:29 - or left-click to use it and we can pick
27:33 - them all up and everything looks very
27:35 - nice
27:35 - the way we set up our inventory class it
27:37 - would be very easy to apply this to
27:39 - other units rather than just the point
27:41 - so if you wanted each enemy to have an
27:43 - inventory you would just instantiate the
27:45 - inventory class like we did and just
27:47 - like that the enemy would want an
27:48 - inventory that for example it could drop
27:50 - on that as always you can now all the
27:52 - project comes in its own ease from ent
27:54 - code monkey calm subscribe to channel
27:56 - for more unity tutorials post any
27:58 - questions you have in the comments and
27:59 - I'll see you next time
28:01 - [Music]

Cleaned transcript:

in this video we're going to make a nice simple inventory system this is a very simple class that lets the store unique and sack of all items we can spawn them in the world pick them up use them and drop them let's begin hello and welcome I'm your code monkey and this channel is all about helping you learn how to make your own games with NF tutorials made by a professional indie game developer so if you find the video helpful consider subscribing okay so here's what we want to create over here is my player and I can simply move around then in here in the UI you can see my current inventory so I'm carrying a sword a health potion and a mana potion scattered throughout the map you can see a bunch of items on the floor now if I move I can click up there you go when I picked it up it was added into my inventory as you can see some items are stackable and some are not so if I grab this sword there you go that one is not stackable as you can see in here is a 10 coin there you go I've got ten coins now ten eleven and twelve thirteen yep then in the inventory I can right click in order to drop an item and I can also leftclick to use them so over here the mana potion leftclick and there you go I use a metal potion and I've used a health potion so just like that we have a very nice and very functional inventory class so click drop and so on and we can do anything right awesome so this is our goal let's get to it so over here is my starting scene I just have the player walking around and nothing else ok let's begin making our inventory class here we make a new csharp script let's call this the inventory and open it up now in here well let's first get rid of mana behavior since this will be a simple class and now in here we're going to have a very simple list of items so that means we need to define our item type so here back in the editor let's create another script this won't be our item and again get rid of monobehaviour okay in here very simple we just define a public noone of our item type can't let's put some items and then in the item class itself we simply have a item type field and also a int for the amount all right here's our very simple item class now we can go back into the inventory and in here we make a list of items and on the constructor we simply initialize the list okay let you do it let's do a debug down log just for testing just like that okay now let's see how we're going to test this let's go into the player class okay here it is the rest of the code is irrelevant for our case here how we care about is the inventory so we're here on the awake let's simply instantiate our inventory so here to find a field maybe here we simply do new invitar all right let's test and there it is we have the inventory in the console so everything is working right okay so far so good now here in the inventory let's make a function to add an item in order to add we simply added to the list item list add our item and now for testing when we start let's have an item onto it so let's call an item inside we create the new item let's say it's a weapon type sword and amount just one and just like that then let's do it debug log on the item list count okay so we should be able to add an atom to our list and be able to see a one any of there it is we have one item inside of our in other okay great now let's make a visual for the inventory so over here inside my game handler I have the UI and inside I have the canvas so in here let's start off by making an empty game object call this the UI inventory now inside with a background now let's make a container game object for the item slot container so this is what we're going to fill up with all our item slots and then inside let's make the game object for each inventory slot okay so here's the item slot template so this is the game object that we're going to duplicate in order to show all of our items so for the template we're going to start off as hidden okay so that's it for the UI setup as you can see very simple just the background a container and a template now let's make the code to handle this so a new csharp script and to call this the UI inventory this when we drag it in here okay now in here the first thing we're going to need is a reference to our inventory so let's make a function to receive it okay now we need to call this from somewhere so let's go onto our player and in here let's add a serialize feel for our UI inventory so we can now go back into the editor and here with the player selected there it is there's the field and just drag the script on to it okay and then here in the player we create the inventory and then we go into the UI inventory and call set the inventory in tustin this part so we are passing in the inventory object onto our UI script okay so far so good now on the inventory window in here on let's make a function to display the items okay so first on awake we grab all of our references now here on let's make our function and now here we need to cycle through all the items in the inventory so we need to go into our inventory and here we need to expose our item list okay now I can go back into the UI and here we can cycle through it and now here all we need to do is instantiate our template and now the template is disabled so the first thing we need to do is call game object and set this one to active so that visible okay then we need to position it okay so here we have some code in order to locate our item slots in a grid array so just like this we should be able to see the window correctly display how many items are in our inventory now we need this to call this function in here so let's go into our inventory and add a couple more so we have a sword let's add a health potion and a manifold okay so we should be able to see three items total let's see and if there it is we have our nice three items all right awesome now obviously let's set the proper visuals so for that let's make a class that won't hold a reference to all the assets that we need so in here we make a new class let's call this the item passes in here let's make this a singleton so we have a nice static field to access this script and I'm here we add all our essence all right here we have all our assets now we can go into the item class and then here we can make it get sprite function so inside all we do is a switch on our item type and depending on the type we return the asset all right that's it now we can ask the item in order to give us the sprite so we can go back into the UI inventory here we are placing the thing okay great and now let's go into the item slot in order to find the image and we simply set the image without sprite and we go into the item and we get the spray all right okay so now we go into the editor in order to add our sprites here in the editor let's make an empty game object for our item assets and we drag our script onto it and I mean here we drag all our sprites okay just like that so let's test and if there is we have these three items is playing with the three different sprites awesome okay now let's make some items in the world that we can pick up by moving our player so here in the editor on let's begin with an empty game object let's call this the item world inside let's add a sprite renderer let's just drag something out to there okay and now let's also add a box Collider 2d and we want to make this a trigger and final let's also add a rigidbody 2d and make sure that gravity is disabled all right okay so here we have our item and if we run the game if there you there's the visual for our item on the ground okay so now let's make this into a prefab so we can incentive owner for our prefabs keep things nice and organized and we drag the animal onto it and let's rename this to PF item work okay so now we have our nice prefab now let's make a script to handle it so a new script let's call this the item world and drag it on to our prefab now in here let's make a function to set the item that this our world is scary so a polyploid call it set item and we receive an item okay and let's also make a static function to instantiate a new item world so here we instantiate that means that we need a reference for our prefab so again we can use the I own assets in here we just add a public transform for our item well prefab and then here on the other one we can instantiate that one okay we instantiate our transform then we get the component to type on world and recall set item and we pass in this item all right so just like that over here we have a nice static function to spawn items into our world and here when you have the set item let's also set our sprite so here we do the same thing we ask the item in order to return the sprite all right now let's go to the player in order to test this so here just for testing let's call item world and we call the function to spawn something on the atom world and let's spawn three items okay let's test any of theirs our items being spawned into world awesome now just for fun let's have some lights to the prefab and color them and depending on the type any of there it is now our items have some nice light okay great so now let's see how we can grab them over here on the atom well prefab we added a nice box Collider and we made it a trigger so in the player we can use that over here in the player let's do a on trigger enter 2d now here on let's test if it's an item so here we are touching the item and if so let's add it to our inventory so go into the inventory and call an item so now we need to go into the atom world and make a function to get the item and then we also need to go into the item world and make a function to destroy itself okay so here in the atom world make a public item and get item and here we simply return our item and a public boy destroy cell and here let's just destroy this game object okay there it is very simple let's test so here we are now I approach this health potion and if I go if there we go the health potion disappeared and it was added to my inventory now grab the mana potion and the sword and there you I found them all all right great however you obviously did see that the inventory did not update so let's do that here in the inventory class let's make a event to trigger on update so we have an event on item list change then here when we add an item let's trigger this event okay there it is we have our event now we can go into the UI inventory and now here when we have the set inventory let's subscribe to this event so we going to the inventory and subscribe to this alright so when they are always changes we simply refresh it however before we test this we need to make sure that we destroy the old transforms before we build the new ones so before we do this let's go here go through each transform child inside the container and now let's make sure we destroy them except the template so if the child is template we simply continue and if not we destroy the game object all right that should do it let's test okay here we are let's grab the health potion give there this it was added correctly alright now for the amount of potion and you if I grabbed it and now the sword and yep I grabbed it as well alright awesome so now that we have the atoms being evident let's make a simple way to spawn items in the world by adding them to the hierarchy so here let's make a new script we're going to call this the item world spawner and inside this script the only thing we're going to have is a field for a public item right just like this now in order for this to show up in the editor we need to go into our item and in this class we need to mark it as serializable which is inside the using system alright so we need to make sure that this is serializable in order to show up in the editor so let's see how it looks in here let's make a new item world spawner and drive the script onto it and yet there you go as you can see we have a field for an item and we can pick let's also add a sprite runner just so we can see so let's try putting a sword in there okay so here it is I made a bunch of game objects each of them has the Adam Warren spawn a script and just say sprite in order to display it and now back in this script in here so we have the film for the item then let's make our private void awake and on awake all we want to do is spawn this item so we go into the item world and we call spawn the outer world on to this position and with this item so we spawn it and then we destroy this game object now we can go back into our player and here we can remove our testing codes and all of our spawn these through here okay let's test and if there it is our final items were correctly spawn so we can pause and we can look and see that the item spawners were destroyed and they were replaced with actual items in the world right great so now with all this for he nicely and we can still pick them up and see the inventory update okay now let's deal with stackable items over here in the item class let's make another function let's make a public ball is stackable so we're here we asked if the item is stackable so the coins health potions and mana potions are stackable and sorts and med kits are not so now let's go into our inventory and in here when we add an item instead of always doing this let's test if this item is stackable so if it is stackable we're going to have some logic and if it is not stackable then we just add it right no ok so if it is stackable let's check if this item type already exists in the inventory so if they are already of the same item type then we simply add the amount instead so just like that and if they aren't already placed so in here if the item is not already in the inventory then we simply add it ok just like that very simple ok now let's quickly test so here I already have a health potion in my inventory so if I grab this one it should not spawn a new one and give the recurrence one all right great so the logic is working now we just need a display in order to know how many amount we have in there so let's go to our UI inventory let's inspect our template and in here let's add a new text object so here we have the amount text and now here on the UI let's instantiate our item slot okay in here so we set the anchored positions of the image now it's also said he text so here we set the text based on the item that amount however let's also hide the text if the amount is only one so let's do an if alright so if we have more than one we show the amount if not then we just show an empty text okay that should do it let's test okay here we are and here are a bunch of our items so we already have a sword a health potion and the amount of potion we only have one of each so that's why the text is invisible now let's grab this whole potion and if there we go now it says to worldy mana and there you go it went in there now we're at the first coin and there's the first one and grab a now a 2 a 3 and a 4 now these two are not stackable so we're at the sword there we go there's a sword and there's a medkit so just like that we have made our inventory support stackable items awesome now that we have this let's also add an amount to the world items so let's go here into the item our prefab and let's also add a text object so here it is just like that now let's go to the script here in the admin world script we set the item now let's on set the text all right here it is we did the exact same thing only show if it's above one so now in here let's make one of these coins actually home not just one coin let's say ten points okay let's see any of here we are and their days that one has ten coins now I move around let's grab the sword there you got the sword got that got another health potion of the mana now let's grab the ten coins first and there you go we have ten coins now eleven twelve and thirteen all right great now it said the ability to use and drop our items so let's go here into our UI into our item solid template and now in order to capture clicks let's use the button UI component which is part of the code monkey Tony's as always you can download the eternities for free from unity code monkey calm this is a very simple script that just lets us easily set actions for left and right click so let's go into the UI so here let's go to our button UI okay so here we can set an action for the left click and the right point now on the right point let's drop our item and on the left click we're going to use alright so first the drop it's very simple we just need to remove it from the inventory and spawn it in the world so let's go to the inventory and call remove item so we have to make that function and we fasten our item and then what's going to the item world and here we're going to make a similar function and what's wrong with drop item so first let's make the remove item so on the inventory here it's very simple okay so here we're just doing very similar to the ad except instead of increasing we decrease the amount and we'll remove it from the atom list so now we need to make the drop item function now we need to know the position of where we're going to drop it so that means here on the Y we need to know where the player is so we have a function to set the player and then we drop the item using the player okay this is just so we can have a drop position all right so we have a nice drop item function it simply spawns it in the world and pushes it away okay with all this it should be working and now we should be able to right click in order to drop items from our inventory okay here we are now I right click and you've there you go I drop the item okay so it looks good but now we actually have one tiny issue which is let's grab the item that we just dropped and now grab another one and there you go it is now no longer correctly saying to and if I drop it there give it just one is no longer has two so let's see why this is happening so here if I already have one grab another one grab two now I drop it and yep it just dropped one so let's see what is going on this is that here when we call remove item we're passing in this item reference and then in here we're taking this item which also matches this item and we're decreasing this amount which in turn also ends up decreasing this amount so the issue here is because we are modifying the exact same I have reference so the solution in here is to make a duplicate item so we make our new item then we remove it from the inventory and we make sure that we dropped what we have previously seen here we drop DW this is an issue related to the fact that we made item a class we could have made this dropped in order to avoid this item but that depends on what type of game you're making whether it's suitable in order to make a struct or class so in this case with the class you have this problem and let's see if this solution works okay so here we are with one now we have another one now drop and there we go now we dropped you so now we grab that one and we grab two so where are this and this and so on and we can grab everything and I'll drop 13 coins to help potions and to mana potion right great so now with this working let's make the use function over here we have our leftclick function all right now here on let's call use on this item in the inventory so we go into the inventory and let's make a function call used item and we pass in this item let's make this down here we make a public void use item and receive an item so now here we need to use it and we want to use it on the player but in here we don't want to have a direct reference to the player so instead let's make a action that takes an item and let's call this to use item action and will receive this on the constructor and then down here we use this just like that okay now in action is just a void delegate so in this case with an item as a parameter so now on the player when we create our new inventory we need to pass in that function so let's make it in here and we pass in this function onto our inventory so now we have this function on our player that we can use to do whatever we want with our I don't let's do a switch okay so here on this function we are doing a switch on the item type and let's have some behavior for the health and mana potion so if we have a health potion let's wash our character green north to indicate a healing and then we go into the inventory and you remove an item of type health potion and just one amount then same thing for the amount of potion so let's see if we can click to use our items okay here we are let's grab a health potion okay we have two health in one mana let's use the mana and there yo you saw it flashing blue no it's left click on the health potion it should flash in green and we should have instead of two just one click any of there you go we have our flash and went from two down to one click again and there you go it's gone now where this one click and there you go very nice and this one doesn't have any behavior so it doesn't do anything same thing for the coins also no behavior and met get also no behavior so we can now use objects inside our inventory in order to trigger custom logic awesome and just like that we have our completed inventory system we have the inventory being in Senshi ated inside our player and displayed over here in the UI we have a nice item class that defines only items in their behavior so each item has a unique sprite which is based on its type and also an amount we can spawn items in the world and move around them in order to pick them up then on the inventory we can right click in order to drop an item or leftclick to use it and we can pick them all up and everything looks very nice the way we set up our inventory class it would be very easy to apply this to other units rather than just the point so if you wanted each enemy to have an inventory you would just instantiate the inventory class like we did and just like that the enemy would want an inventory that for example it could drop on that as always you can now all the project comes in its own ease from ent code monkey calm subscribe to channel for more unity tutorials post any questions you have in the comments and I'll see you next time
