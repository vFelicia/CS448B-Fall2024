With timestamps:

00:00 - hello and welcome i'm your code monkey
00:02 - so here's the story
00:03 - a while ago i was playing dyson sphere
00:05 - program it's an awesome factory
00:06 - automation game similar to the likes of
00:08 - factorio or satisfactory
00:10 - i even made a game that review with some
00:12 - interesting game design lessons
00:13 - so i was playing it a lot and i thought
00:15 - well why don't i try to make my own mini
00:17 - factory game it's one of my favorite
00:19 - genres to play but i never actually made
00:20 - my own
00:21 - so that's exactly what i did try to see
00:23 - how fast i could make the simplest
00:24 - version of the genre
00:26 - in total i worked on this minigame for
00:28 - about 16 hours and i'm quite pleased
00:29 - with the end result
00:30 - it's got all of the base mechanics you
00:32 - would expect as well as a nice amount of
00:34 - polish
00:34 - after watching this video you can go
00:36 - ahead and play it for yourself on the
00:37 - steam app
00:38 - it did involve some interesting
00:39 - challenges that are specific to this
00:41 - genre which i'll go over in a bit
00:43 - and 16 hours is a pretty small amount of
00:45 - time considering the complexity of the
00:46 - design and the number of features
00:48 - that means that if i was making this
00:50 - while working a regular 9 to 5 job i
00:52 - could get this mini game done within
00:53 - about a month
00:54 - and that's sort of what i did i'm always
00:56 - working on multiple projects
00:58 - and multiple videos at the same time so
00:59 - each is kind of its own side project
01:02 - so let's see how i managed to get all of
01:03 - this done in such a short amount of time
01:05 - but before we see that do you want to
01:08 - learn how to make games from a veteran
01:09 - in the games industry
01:11 - then check out this video's sponsor
01:12 - jason wyman who makes some great game
01:14 - development courses
01:15 - they are all extremely detailed and very
01:17 - well planned with expert life support
01:19 - whenever you need help
01:20 - as a special deal you can get the code
01:22 - monkey course bundle which includes not
01:24 - one but
01:24 - all three courses for the price of one
01:26 - it's a great guided path i will teach
01:28 - you how to make games from beginner to
01:30 - advanced
01:31 - learn all about c-sharp with the
01:32 - programmer course then master unity
01:35 - along with all of its tools
01:36 - and finally dive deep into the code
01:38 - architecture course where you will learn
01:39 - how to structure your games and write
01:41 - good clean code to help you make even
01:43 - better games
01:44 - jason is a veteran in the industry with
01:46 - many years of experience working on
01:47 - large teams and very complex tripoli
01:49 - projects
01:50 - through the course you also gain access
01:51 - to an exclusive discord server where you
01:53 - can chat and share ideas with fellow
01:55 - students
01:56 - also as a bonus if you pick up the
01:57 - course bundle through the link you get
01:59 - steam keys for all of my games as a nice
02:01 - free bonus along with a mug hoodie and
02:03 - discount on future courses
02:04 - so if you want to learn how to make
02:06 - games check out the link in the
02:07 - description
02:08 - now as i try to mention as much as
02:10 - possible on this channel if you want to
02:11 - be a successful indie game developer you
02:13 - should always write clean code so you
02:15 - can easily reuse it in the future
02:17 - so for my starting project instead of
02:19 - starting from a completely empty new
02:21 - project i started directly from the grid
02:23 - building system that i made recently
02:25 - in that video i showcase how to make it
02:27 - using city builder as an example
02:28 - but i also mentioned how you can use it
02:30 - to place down any object
02:32 - it doesn't have to be just a city i can
02:34 - use it to place down resource nodes and
02:35 - conveyor belts so it's perfect just for
02:37 - this use case
02:38 - in about 60 minutes i took the code from
02:40 - that video and just made some new object
02:42 - types making some resource nodes some
02:44 - buildings and some belts
02:45 - and everything was working flawlessly so
02:47 - this really shows you the power of
02:49 - writing clean reusable code
02:50 - i first made the underlying grid class
02:53 - over two years ago
02:54 - and then i made the building system on
02:55 - top of it just a few weeks ago and now
02:57 - i'm using it to very quickly get a game
02:59 - up and running
03:00 - so with that i had some objects placed
03:02 - down and now it was time to think of how
03:04 - they should work
03:04 - by the way if you find the video helpful
03:06 - please hit the like button
03:07 - it's a tiny thing but really does help
03:09 - thanks actually even before i start the
03:11 - project i first made a very rough sketch
03:13 - of the game design that i was going for
03:16 - personally i like to think on paper in
03:17 - terms of design and then when i've
03:19 - thought enough then i get to writing
03:20 - code
03:21 - so i wanted the simplest form of a
03:23 - factory automation game as possible
03:25 - i define just two base resource types
03:27 - then processed versions of those
03:29 - resources
03:30 - and a final item that gets crafted from
03:32 - those resources
03:33 - just to find the buildings needed to
03:34 - make all of that work along with some
03:36 - conveyor belts
03:37 - and that's pretty much it that was my
03:39 - rough base design
03:40 - you should always have a basic idea of
03:42 - what you're trying to accomplish
03:43 - otherwise you'll just be spinning your
03:44 - wheels without knowing where you're
03:46 - trying to reach
03:46 - so i got to work on implementing that
03:48 - design first logic i handled was the
03:50 - mining machine
03:52 - just something that generates resources
03:53 - over time thanks to how i structured my
03:55 - code it was super easy to add
03:57 - just make a script that inherits from my
03:58 - generic placed object class and attach
04:00 - it to the prefab
04:01 - then just write a very simple timer code
04:04 - and that's pretty much it
04:05 - the mining machine is generating
04:06 - resources next up i started working on
04:08 - the grabber it's supposed to grab an
04:10 - item from one location and place it in
04:12 - another
04:13 - so all i needed to know was to grab the
04:15 - grid position from the graph position
04:17 - and the grid position from the drop
04:18 - position with those two i can then lock
04:20 - in the grid and see if there are any
04:21 - buildings placed on those two positions
04:23 - it's very simple and just with this i
04:25 - already had an interesting interaction
04:26 - between these two buildings
04:28 - now after grabbing the item i want to
04:30 - drop it so it was time to make some
04:31 - conveyor belts
04:32 - again i made the building and the script
04:34 - attached to it the goal was to take
04:36 - whatever item is on top and move it to
04:38 - the next position
04:39 - and for that to work they all need to
04:41 - know what is the next position which is
04:42 - defined by the rotation of the object
04:45 - and by the way sometimes i post gifts
04:46 - with what i'm working on in the youtube
04:48 - community or on twitter
04:49 - so if you want to see what i'm working
04:51 - on as i'm doing it then make sure you're
04:52 - following me there
04:53 - now there's one really interesting thing
04:55 - that requires some trickery to make it
04:56 - work that you might never have thought
04:58 - about if you've never made a game in
04:59 - this genre
05:00 - so a simple question how do you move
05:02 - objects in the conveyor belts
05:03 - it seems simple doesn't it you start on
05:05 - this belt and then if it has an item you
05:07 - check if there's space on the next belt
05:09 - and you move the atom
05:10 - then you check the next belt again see
05:11 - if this one has an item and if the space
05:13 - is clear and if so move the atom
05:15 - simple enough but now comes the tricky
05:17 - part let's say you first test this belt
05:19 - instead of the other one
05:20 - this one will test for the next belt if
05:22 - it is empty and right now it's not empty
05:24 - so it does not move
05:25 - same thing for the next one this one is
05:27 - full so it does not move
05:29 - in the end the only one that moves is
05:30 - the very first one and all the other
05:32 - items stay stuck
05:33 - so if you're not careful you end up with
05:35 - belts that only move if there's one
05:37 - empty spot
05:38 - in between the atoms one solution to
05:39 - that is to start moving the atoms from
05:41 - the last position in the bound and move
05:43 - backwards that means we need to keep
05:45 - track of each belt path
05:46 - so where it starts and where it ends
05:48 - that was one of the tasks that took the
05:50 - longest time to implement
05:51 - about two hours trying to wrap my head
05:53 - around how i could set all this up
05:55 - i need to create a belt system to handle
05:57 - all the belts of their connections and
05:59 - sort them all correctly
06:00 - it was very tricky to get it all working
06:02 - in fact i had a handful of infinite
06:04 - loops that just crashed unity
06:06 - one issue was with loops the way the
06:07 - code identifies the first belt is by
06:09 - essentially going backwards to
06:11 - the path well if the path loops then by
06:13 - doing that on logic it will continue
06:14 - going on and on and on
06:16 - so yeah that was a very tricky system
06:18 - with a bunch of issues and some weird
06:20 - edge cases in the end i got a really
06:22 - nice system i can place bounce anywhere
06:24 - and the system automatically detects
06:26 - and groups and merges various belts into
06:28 - a handful of paths
06:29 - it was very trick to do but the end
06:30 - result looks great i even made a handy
06:33 - debug visual so i could see
06:34 - exactly where each belt starts and ends
06:36 - for the timing of the bounce i once
06:38 - again reused a very useful class that i
06:40 - covered in a video two years ago
06:42 - the time takes system this is something
06:44 - that i've used in pretty much all of my
06:46 - steam games
06:47 - for example in blueprint tycoon all the
06:49 - logic on the blueprints runs on the tick
06:51 - instead of on every update that's an
06:53 - excellent way for keeping everything in
06:55 - sync and also saving up on performance
06:57 - so here i defined the tick as every 200
06:59 - milliseconds and made the bounce work on
07:01 - that
07:01 - every tick the belt system listens to it
07:03 - and takes an action on every single belt
07:05 - with the bounce working the next task
07:07 - was finishing up work on the grabbers
07:08 - they need to grab items from one
07:10 - position and drop in another
07:12 - while making this game i was always
07:13 - thinking about keeping a good clean code
07:15 - architecture
07:17 - so instead of interacting directly with
07:18 - a specific item type
07:20 - instead i have two interfaces one for
07:22 - holding world items another one for
07:25 - storing just virtual items
07:27 - wrong items means they already exist in
07:28 - the world whereas these stored items are
07:30 - simply a number
07:31 - i covered interface in detail in another
07:33 - video they are extremely useful
07:35 - essentially i can make the code work
07:36 - with the interfaces and that means it
07:38 - automatically works with anything that
07:40 - implements those interfaces
07:41 - so the grabber works directly with those
07:43 - interface so it can work with all kinds
07:45 - of buildings
07:46 - it can grab or drop an item from
07:48 - anything that implements either the
07:50 - storage or the worm item slot
07:51 - so it's some simple code but it's
07:53 - extremely versatile the next task was
07:55 - implementing storage and that was again
07:57 - extremely simple just implement the
07:59 - interface and that's it
08:00 - it instantly worked perfectly in
08:02 - conjunction with the grabbers with that
08:04 - i had a working base system
08:05 - still needing lots of rules but the
08:07 - basics are there buildings can be placed
08:09 - the mining machine generates resources
08:11 - the grabber takes those resources and
08:13 - drops them on a belt the belt moves
08:14 - around and the final grabber takes it
08:16 - from the belt and drops in storage
08:18 - next it was time to make some proper
08:20 - resource item types
08:21 - for this once again i reused scriptable
08:24 - objects
08:24 - i did pretty much the exact same thing
08:26 - that i did in my crafting system video
08:28 - i defined a scriptable object for each
08:30 - item type another one for each recipe
08:33 - the recipes just have certain input and
08:35 - output items along with the type amount
08:37 - and the effort needed to craft
08:39 - again using scriptable objects is an
08:41 - excellent way to keep things nicely
08:43 - organized
08:43 - and with this i have all my discrete
08:45 - objects in my project files for each
08:47 - item type
08:48 - with the item types defined then it was
08:49 - time to finally use them this was also
08:51 - the point when i made the
08:52 - live stream i needed to keep working on
08:54 - the game so i figured if i'm going to
08:56 - work on it i might as well make it a
08:57 - live stream just in case people want to
08:59 - watch me work
09:00 - that was quite a bit of fun answering
09:01 - questions from chat and having all those
09:03 - people alongside me
09:05 - i'll probably do more live streams
09:06 - whenever i do another project like this
09:08 - one
09:08 - it wasn't really pre-planned i only set
09:10 - it up 30 minutes before so make sure you
09:12 - hit the bell icon so you know whenever i
09:14 - do another one
09:15 - so the next goal was to make the smelter
09:17 - to finally have some proper crafting
09:19 - i wanted to turn iron ore into iron
09:21 - ingots
09:22 - handling the crafting was relatively
09:24 - simple again i defined a scriptable
09:26 - object for the item recipes
09:28 - it has some inputs and some outputs then
09:30 - the crafting itself is just a simple
09:32 - flow timer
09:33 - and after some time the base items get
09:35 - consumed and the final item is created
09:37 - so it's some pretty simple logic up
09:39 - until this point the items were still
09:40 - manual
09:41 - so i was manually saying that the
09:43 - grabber was instantiating a specific
09:44 - type of items
09:46 - and also up until this point the mining
09:48 - machine had some resource generation but
09:49 - it wasn't based on anything
09:51 - so the next task was to add some rules
09:53 - to that i needed to identify
09:54 - what resources were in range and how
09:56 - many but before i could add that logic i
09:59 - first needed to place down some resource
10:00 - nodes on the map so i made a simple
10:02 - script that let me place them in the
10:04 - editor and they get spawned as soon as
10:05 - the map starts with that i had some
10:07 - starting iron and gold resource nodes
10:09 - then on the mining machine to identify
10:11 - those resources on my builder defender
10:13 - game that i made for my complete course
10:15 - in there for the resource logic i made
10:18 - it using a physics cast
10:19 - but since this game is grid based i
10:21 - defined a great shape and set
10:23 - i went for the simplest thing possible
10:24 - just a basic square shape
10:26 - if it is within a certain number of
10:28 - cells on the x and y then it is within
10:30 - range
10:30 - so just ask the grid if there's a
10:32 - resource node in that position if so
10:34 - grab the type
10:35 - with that i now had two resource node
10:37 - types and by placing the mining machine
10:39 - near each of them i could mine different
10:41 - resources
10:42 - next up it was getting tricky to
10:43 - identify the atom types without proper
10:45 - icons
10:46 - so for that thankfully i already had
10:48 - some items drawn from many years ago
10:50 - about five years ago i made blueprint
10:52 - tycoon and i drew a bunch of items for
10:54 - that and thankfully i had exactly what i
10:56 - needed
10:56 - i had some gold ore gold ingots iron ore
10:59 - iron ingots and also a computer
11:01 - so that's another benefit when you work
11:03 - on mini-games over many years you end up
11:05 - building a library of not just code but
11:07 - also assets
11:08 - so i quickly added those to the game and
11:09 - everything started to take shape
11:11 - at this point i had resource nodes i
11:13 - could place mining machines and mine
11:15 - those resources
11:16 - then some grabbers to grab them and drop
11:17 - them in the belts and then further ahead
11:19 - added smelters to make ingots
11:21 - and finally just for testing i could add
11:23 - another smelter to turn those ingots
11:24 - into computers
11:25 - so really awesome stuff this was when
11:27 - the live stream ended
11:29 - it was actually quite productive thank
11:30 - you if you join me on the livestream
11:32 - if you want to be notified whenever i go
11:34 - live next make sure you hit the bell
11:35 - icon
11:36 - so the game was looking good but still
11:38 - tons more to do
11:39 - next up it was making some sort of ui up
11:41 - until this point there was really no
11:43 - proper ui at all
11:44 - i started making the ui for the smelter
11:46 - to be able to click on it to choose a
11:48 - recipe
11:49 - it's pretty simple to do just make some
11:50 - templates go through the code and set
11:52 - them up
11:53 - then with the button i make it change
11:54 - the recipe scriptable object on the
11:56 - smelter
11:57 - also it was super easy to add the window
11:59 - track ability since i already did that
12:00 - in a previous video just add the script
12:02 - and everything works
12:03 - and with that the smelter ui was
12:05 - functional then at this point the game
12:07 - was close to being done in terms of
12:08 - functionality so it was time to get some
12:10 - proper working visuals
12:11 - i went through all of the acid packs
12:13 - that i bought over the years and grabbed
12:14 - a bunch of acids
12:16 - i made some blue rocks for the iron some
12:18 - yellow for the gold
12:19 - then i drew some simple moving arrows
12:21 - for the conveyor belts
12:22 - made a simple grabber added a bunch of
12:24 - props and buildings to make the storage
12:26 - mining machine and smelter
12:28 - so it's all composed of various props
12:29 - they honestly really don't make much
12:31 - sense
12:32 - i mean why does the mining machine have
12:33 - a truck or why does the assembler have a
12:35 - huge color
12:36 - so it looks weird but anyways it does
12:38 - work the game now had some proper
12:40 - visuals
12:41 - then making some proper ui buttons i
12:43 - just took some screenshots from the
12:44 - prefabs and made some icons
12:46 - making good visuals or even just
12:47 - choosing good visuals is definitely not
12:49 - my strong point but i'm quite happy with
12:51 - this look
12:52 - i'm especially happy with the ui buttons
12:54 - i think they look really good having the
12:55 - icon pop out from the background
12:57 - next up it was adding some particle
12:59 - effects then making the map
13:01 - a bit bigger and more interesting
13:02 - playing around the terrain adding some
13:04 - grass some rocks
13:05 - then a bunch of sound effects and then
13:07 - it was just polishing a bit of
13:08 - everything and here's the final result
13:11 - alright so here i am starting off on
13:13 - game so just got a terrain with a bunch
13:15 - of bushes a bunch of rocks and things
13:17 - and as you can see all the various
13:19 - resource nodes so
13:20 - first we want to gather some resources
13:23 - so over here i've got my icons for all
13:25 - the various building types
13:26 - so i've got my mining machine and as
13:29 - soon as i click it enables the tile map
13:31 - to show the buildable and non-buildable
13:33 - areas
13:34 - so right now i can simply go and place a
13:36 - mining machine near my iron ore and now
13:38 - it's going to be mining iron so if i
13:40 - click on it i can see that
13:41 - it is already mining so next up
13:44 - i want to grab the atoms from the mining
13:46 - machine so i can press
13:48 - r to just rotate and now the grabber
13:50 - will be grabbing items from this grid
13:52 - position onto this grid position
13:54 - so if i now just place a belt on top of
13:56 - it yep there you go now it starts
13:58 - grabbing the items that the mining
13:59 - machine is mining
14:00 - alright so that's the first step next up
14:02 - i've got these basic items this is just
14:04 - iron ore
14:05 - and the next thing i want to do is
14:06 - convert it into ingots so over here the
14:09 - other building type is the smelter
14:10 - so i can go i can rotate it and place it
14:13 - and in order to feed the atoms onto this
14:15 - mounter
14:16 - i need the graver so just rotate it and
14:17 - place it then i can click on the smelter
14:20 - itself to open up the nice ui where i
14:21 - can select what recipe i want to do so
14:23 - in this case i want to make some iron
14:25 - ingots
14:26 - so the grabber is going to input all the
14:28 - iron ore and over there we've got the
14:30 - crafting
14:30 - and after crafting is done yep got some
14:32 - outputs so here i've got
14:34 - a lot of the basics already working so
14:36 - i've got some resource nodes i've got a
14:38 - mining machine i've got a grabber that
14:39 - takes items from one place and puts them
14:41 - in another
14:41 - i've got the conveyor belt which
14:43 - constantly moves the atoms around
14:44 - and another one which takes an item and
14:46 - process it into another item type
14:48 - okay so over here i've got some iron
14:50 - ingots and then let's say i want to grab
14:53 - them
14:53 - and i want to dump them in storage so
14:55 - this is another building type
14:56 - so just storage place it in there and i
14:59 - bring those in there
15:00 - and just replace the last position with
15:02 - a grabber so i can also demolish
15:03 - buildings
15:04 - so just go place it in there and there
15:06 - you go now my storage is indeed
15:07 - receiving iron ingots
15:09 - alright so this is the most basic thing
15:12 - now let's do the same thing over here
15:13 - to gather some gold ore
15:19 - all right so there it is now i've got
15:20 - another production line so this one is
15:22 - mining some gold ore then moves it
15:24 - around
15:24 - puts it on the smelter and the smelter
15:26 - converts condor into gold ingots
15:28 - okay now for another building type over
15:30 - here we have the assembler
15:32 - so this is what makes a more complex
15:33 - building assembly so let's place it over
15:36 - here
15:36 - there you go looks really nice and again
15:38 - i can click on it and see what can i
15:40 - build
15:40 - so i can build some computers or some
15:42 - microchips so let's make some microchips
15:44 - first
15:45 - and this one actually requires gold
15:47 - ingots and then copper ingots
15:49 - so copper is another resource i placed
15:51 - all the way over here
15:57 - all right i've got copper being produced
15:59 - and as soon as it is then it gets placed
16:00 - over here in storage
16:02 - so now comes another really interesting
16:03 - feature which is that the
16:05 - gravers can actually grab just a
16:07 - specific time so over here i've got my
16:09 - storage
16:09 - i want to grab just what i need so i
16:11 - just need some gold and copper so let's
16:13 - grab those
16:14 - so i'm going to place these drivers
16:16 - these two and now i can click on the
16:18 - grabber and i can set a certain filter
16:20 - so this one will grab anything this one
16:22 - won't grab nothing or
16:23 - a specific item type so in this case
16:25 - let's grab some copper ingots
16:27 - and on the next one we're going to grab
16:29 - just the gold ingots
16:31 - and as i put them if there you go now it
16:33 - does start grabbing so now just feed
16:35 - them into the assembler
16:36 - and it will now start assembling some
16:38 - microchips
16:40 - so now with microchips let's just make
16:42 - some laptops
16:45 - all right there you go so i've got some
16:46 - microchips coming out of here and they
16:48 - go in there and we're starting to make
16:49 - some
16:50 - laptops and then finally just dump them
16:52 - into this storage
16:54 - just like this there's already a really
16:56 - nice base here so i can continue
16:58 - expanding upon this
17:02 - alright so i just built something really
17:04 - nice using all these mechanics and as
17:05 - you can see yep this definitely
17:07 - looks like a factory automation mini so
17:09 - all the resources going in all of them
17:11 - being crafted
17:12 - and my final output in here so
17:14 - everything is looking really nice
17:16 - all right so this was really interesting
17:17 - to make you can play it for yourself on
17:19 - the steam app
17:20 - you can also download the projects files
17:22 - to see how everything works for yourself
17:24 - and most of what i built here i covered
17:25 - in separate tutorials
17:27 - the core of it is the grid building
17:28 - system which i covered in detail in
17:30 - another video
17:31 - and the base for the grid system which
17:32 - was also made in several videos that you
17:34 - can find on the playlist
17:35 - so check the links in the description
17:37 - for references to all of those videos
17:39 - also hit the bell icon if you want to be
17:40 - notified the next time i go live working
17:42 - on my next project
17:44 - and don't forget to check out jason
17:45 - wyman's courses with the link in the
17:46 - description
17:47 - get the code monkey bundle and enjoy all
17:49 - of my games as a free bonus
17:51 - if you found this video helpful please
17:52 - hit the like button this video is made
17:54 - possible thanks to these awesome
17:56 - supporters
17:56 - go to patreon.com unitycodemonkey to get
17:59 - some perks and help keep the videos free
18:01 - for everyone
18:02 - thanks for watching and i'll see you
18:04 - next time
18:15 - you

Cleaned transcript:

hello and welcome i'm your code monkey so here's the story a while ago i was playing dyson sphere program it's an awesome factory automation game similar to the likes of factorio or satisfactory i even made a game that review with some interesting game design lessons so i was playing it a lot and i thought well why don't i try to make my own mini factory game it's one of my favorite genres to play but i never actually made my own so that's exactly what i did try to see how fast i could make the simplest version of the genre in total i worked on this minigame for about 16 hours and i'm quite pleased with the end result it's got all of the base mechanics you would expect as well as a nice amount of polish after watching this video you can go ahead and play it for yourself on the steam app it did involve some interesting challenges that are specific to this genre which i'll go over in a bit and 16 hours is a pretty small amount of time considering the complexity of the design and the number of features that means that if i was making this while working a regular 9 to 5 job i could get this mini game done within about a month and that's sort of what i did i'm always working on multiple projects and multiple videos at the same time so each is kind of its own side project so let's see how i managed to get all of this done in such a short amount of time but before we see that do you want to learn how to make games from a veteran in the games industry then check out this video's sponsor jason wyman who makes some great game development courses they are all extremely detailed and very well planned with expert life support whenever you need help as a special deal you can get the code monkey course bundle which includes not one but all three courses for the price of one it's a great guided path i will teach you how to make games from beginner to advanced learn all about csharp with the programmer course then master unity along with all of its tools and finally dive deep into the code architecture course where you will learn how to structure your games and write good clean code to help you make even better games jason is a veteran in the industry with many years of experience working on large teams and very complex tripoli projects through the course you also gain access to an exclusive discord server where you can chat and share ideas with fellow students also as a bonus if you pick up the course bundle through the link you get steam keys for all of my games as a nice free bonus along with a mug hoodie and discount on future courses so if you want to learn how to make games check out the link in the description now as i try to mention as much as possible on this channel if you want to be a successful indie game developer you should always write clean code so you can easily reuse it in the future so for my starting project instead of starting from a completely empty new project i started directly from the grid building system that i made recently in that video i showcase how to make it using city builder as an example but i also mentioned how you can use it to place down any object it doesn't have to be just a city i can use it to place down resource nodes and conveyor belts so it's perfect just for this use case in about 60 minutes i took the code from that video and just made some new object types making some resource nodes some buildings and some belts and everything was working flawlessly so this really shows you the power of writing clean reusable code i first made the underlying grid class over two years ago and then i made the building system on top of it just a few weeks ago and now i'm using it to very quickly get a game up and running so with that i had some objects placed down and now it was time to think of how they should work by the way if you find the video helpful please hit the like button it's a tiny thing but really does help thanks actually even before i start the project i first made a very rough sketch of the game design that i was going for personally i like to think on paper in terms of design and then when i've thought enough then i get to writing code so i wanted the simplest form of a factory automation game as possible i define just two base resource types then processed versions of those resources and a final item that gets crafted from those resources just to find the buildings needed to make all of that work along with some conveyor belts and that's pretty much it that was my rough base design you should always have a basic idea of what you're trying to accomplish otherwise you'll just be spinning your wheels without knowing where you're trying to reach so i got to work on implementing that design first logic i handled was the mining machine just something that generates resources over time thanks to how i structured my code it was super easy to add just make a script that inherits from my generic placed object class and attach it to the prefab then just write a very simple timer code and that's pretty much it the mining machine is generating resources next up i started working on the grabber it's supposed to grab an item from one location and place it in another so all i needed to know was to grab the grid position from the graph position and the grid position from the drop position with those two i can then lock in the grid and see if there are any buildings placed on those two positions it's very simple and just with this i already had an interesting interaction between these two buildings now after grabbing the item i want to drop it so it was time to make some conveyor belts again i made the building and the script attached to it the goal was to take whatever item is on top and move it to the next position and for that to work they all need to know what is the next position which is defined by the rotation of the object and by the way sometimes i post gifts with what i'm working on in the youtube community or on twitter so if you want to see what i'm working on as i'm doing it then make sure you're following me there now there's one really interesting thing that requires some trickery to make it work that you might never have thought about if you've never made a game in this genre so a simple question how do you move objects in the conveyor belts it seems simple doesn't it you start on this belt and then if it has an item you check if there's space on the next belt and you move the atom then you check the next belt again see if this one has an item and if the space is clear and if so move the atom simple enough but now comes the tricky part let's say you first test this belt instead of the other one this one will test for the next belt if it is empty and right now it's not empty so it does not move same thing for the next one this one is full so it does not move in the end the only one that moves is the very first one and all the other items stay stuck so if you're not careful you end up with belts that only move if there's one empty spot in between the atoms one solution to that is to start moving the atoms from the last position in the bound and move backwards that means we need to keep track of each belt path so where it starts and where it ends that was one of the tasks that took the longest time to implement about two hours trying to wrap my head around how i could set all this up i need to create a belt system to handle all the belts of their connections and sort them all correctly it was very tricky to get it all working in fact i had a handful of infinite loops that just crashed unity one issue was with loops the way the code identifies the first belt is by essentially going backwards to the path well if the path loops then by doing that on logic it will continue going on and on and on so yeah that was a very tricky system with a bunch of issues and some weird edge cases in the end i got a really nice system i can place bounce anywhere and the system automatically detects and groups and merges various belts into a handful of paths it was very trick to do but the end result looks great i even made a handy debug visual so i could see exactly where each belt starts and ends for the timing of the bounce i once again reused a very useful class that i covered in a video two years ago the time takes system this is something that i've used in pretty much all of my steam games for example in blueprint tycoon all the logic on the blueprints runs on the tick instead of on every update that's an excellent way for keeping everything in sync and also saving up on performance so here i defined the tick as every 200 milliseconds and made the bounce work on that every tick the belt system listens to it and takes an action on every single belt with the bounce working the next task was finishing up work on the grabbers they need to grab items from one position and drop in another while making this game i was always thinking about keeping a good clean code architecture so instead of interacting directly with a specific item type instead i have two interfaces one for holding world items another one for storing just virtual items wrong items means they already exist in the world whereas these stored items are simply a number i covered interface in detail in another video they are extremely useful essentially i can make the code work with the interfaces and that means it automatically works with anything that implements those interfaces so the grabber works directly with those interface so it can work with all kinds of buildings it can grab or drop an item from anything that implements either the storage or the worm item slot so it's some simple code but it's extremely versatile the next task was implementing storage and that was again extremely simple just implement the interface and that's it it instantly worked perfectly in conjunction with the grabbers with that i had a working base system still needing lots of rules but the basics are there buildings can be placed the mining machine generates resources the grabber takes those resources and drops them on a belt the belt moves around and the final grabber takes it from the belt and drops in storage next it was time to make some proper resource item types for this once again i reused scriptable objects i did pretty much the exact same thing that i did in my crafting system video i defined a scriptable object for each item type another one for each recipe the recipes just have certain input and output items along with the type amount and the effort needed to craft again using scriptable objects is an excellent way to keep things nicely organized and with this i have all my discrete objects in my project files for each item type with the item types defined then it was time to finally use them this was also the point when i made the live stream i needed to keep working on the game so i figured if i'm going to work on it i might as well make it a live stream just in case people want to watch me work that was quite a bit of fun answering questions from chat and having all those people alongside me i'll probably do more live streams whenever i do another project like this one it wasn't really preplanned i only set it up 30 minutes before so make sure you hit the bell icon so you know whenever i do another one so the next goal was to make the smelter to finally have some proper crafting i wanted to turn iron ore into iron ingots handling the crafting was relatively simple again i defined a scriptable object for the item recipes it has some inputs and some outputs then the crafting itself is just a simple flow timer and after some time the base items get consumed and the final item is created so it's some pretty simple logic up until this point the items were still manual so i was manually saying that the grabber was instantiating a specific type of items and also up until this point the mining machine had some resource generation but it wasn't based on anything so the next task was to add some rules to that i needed to identify what resources were in range and how many but before i could add that logic i first needed to place down some resource nodes on the map so i made a simple script that let me place them in the editor and they get spawned as soon as the map starts with that i had some starting iron and gold resource nodes then on the mining machine to identify those resources on my builder defender game that i made for my complete course in there for the resource logic i made it using a physics cast but since this game is grid based i defined a great shape and set i went for the simplest thing possible just a basic square shape if it is within a certain number of cells on the x and y then it is within range so just ask the grid if there's a resource node in that position if so grab the type with that i now had two resource node types and by placing the mining machine near each of them i could mine different resources next up it was getting tricky to identify the atom types without proper icons so for that thankfully i already had some items drawn from many years ago about five years ago i made blueprint tycoon and i drew a bunch of items for that and thankfully i had exactly what i needed i had some gold ore gold ingots iron ore iron ingots and also a computer so that's another benefit when you work on minigames over many years you end up building a library of not just code but also assets so i quickly added those to the game and everything started to take shape at this point i had resource nodes i could place mining machines and mine those resources then some grabbers to grab them and drop them in the belts and then further ahead added smelters to make ingots and finally just for testing i could add another smelter to turn those ingots into computers so really awesome stuff this was when the live stream ended it was actually quite productive thank you if you join me on the livestream if you want to be notified whenever i go live next make sure you hit the bell icon so the game was looking good but still tons more to do next up it was making some sort of ui up until this point there was really no proper ui at all i started making the ui for the smelter to be able to click on it to choose a recipe it's pretty simple to do just make some templates go through the code and set them up then with the button i make it change the recipe scriptable object on the smelter also it was super easy to add the window track ability since i already did that in a previous video just add the script and everything works and with that the smelter ui was functional then at this point the game was close to being done in terms of functionality so it was time to get some proper working visuals i went through all of the acid packs that i bought over the years and grabbed a bunch of acids i made some blue rocks for the iron some yellow for the gold then i drew some simple moving arrows for the conveyor belts made a simple grabber added a bunch of props and buildings to make the storage mining machine and smelter so it's all composed of various props they honestly really don't make much sense i mean why does the mining machine have a truck or why does the assembler have a huge color so it looks weird but anyways it does work the game now had some proper visuals then making some proper ui buttons i just took some screenshots from the prefabs and made some icons making good visuals or even just choosing good visuals is definitely not my strong point but i'm quite happy with this look i'm especially happy with the ui buttons i think they look really good having the icon pop out from the background next up it was adding some particle effects then making the map a bit bigger and more interesting playing around the terrain adding some grass some rocks then a bunch of sound effects and then it was just polishing a bit of everything and here's the final result alright so here i am starting off on game so just got a terrain with a bunch of bushes a bunch of rocks and things and as you can see all the various resource nodes so first we want to gather some resources so over here i've got my icons for all the various building types so i've got my mining machine and as soon as i click it enables the tile map to show the buildable and nonbuildable areas so right now i can simply go and place a mining machine near my iron ore and now it's going to be mining iron so if i click on it i can see that it is already mining so next up i want to grab the atoms from the mining machine so i can press r to just rotate and now the grabber will be grabbing items from this grid position onto this grid position so if i now just place a belt on top of it yep there you go now it starts grabbing the items that the mining machine is mining alright so that's the first step next up i've got these basic items this is just iron ore and the next thing i want to do is convert it into ingots so over here the other building type is the smelter so i can go i can rotate it and place it and in order to feed the atoms onto this mounter i need the graver so just rotate it and place it then i can click on the smelter itself to open up the nice ui where i can select what recipe i want to do so in this case i want to make some iron ingots so the grabber is going to input all the iron ore and over there we've got the crafting and after crafting is done yep got some outputs so here i've got a lot of the basics already working so i've got some resource nodes i've got a mining machine i've got a grabber that takes items from one place and puts them in another i've got the conveyor belt which constantly moves the atoms around and another one which takes an item and process it into another item type okay so over here i've got some iron ingots and then let's say i want to grab them and i want to dump them in storage so this is another building type so just storage place it in there and i bring those in there and just replace the last position with a grabber so i can also demolish buildings so just go place it in there and there you go now my storage is indeed receiving iron ingots alright so this is the most basic thing now let's do the same thing over here to gather some gold ore all right so there it is now i've got another production line so this one is mining some gold ore then moves it around puts it on the smelter and the smelter converts condor into gold ingots okay now for another building type over here we have the assembler so this is what makes a more complex building assembly so let's place it over here there you go looks really nice and again i can click on it and see what can i build so i can build some computers or some microchips so let's make some microchips first and this one actually requires gold ingots and then copper ingots so copper is another resource i placed all the way over here all right i've got copper being produced and as soon as it is then it gets placed over here in storage so now comes another really interesting feature which is that the gravers can actually grab just a specific time so over here i've got my storage i want to grab just what i need so i just need some gold and copper so let's grab those so i'm going to place these drivers these two and now i can click on the grabber and i can set a certain filter so this one will grab anything this one won't grab nothing or a specific item type so in this case let's grab some copper ingots and on the next one we're going to grab just the gold ingots and as i put them if there you go now it does start grabbing so now just feed them into the assembler and it will now start assembling some microchips so now with microchips let's just make some laptops all right there you go so i've got some microchips coming out of here and they go in there and we're starting to make some laptops and then finally just dump them into this storage just like this there's already a really nice base here so i can continue expanding upon this alright so i just built something really nice using all these mechanics and as you can see yep this definitely looks like a factory automation mini so all the resources going in all of them being crafted and my final output in here so everything is looking really nice all right so this was really interesting to make you can play it for yourself on the steam app you can also download the projects files to see how everything works for yourself and most of what i built here i covered in separate tutorials the core of it is the grid building system which i covered in detail in another video and the base for the grid system which was also made in several videos that you can find on the playlist so check the links in the description for references to all of those videos also hit the bell icon if you want to be notified the next time i go live working on my next project and don't forget to check out jason wyman's courses with the link in the description get the code monkey bundle and enjoy all of my games as a free bonus if you found this video helpful please hit the like button this video is made possible thanks to these awesome supporters go to patreon.com unitycodemonkey to get some perks and help keep the videos free for everyone thanks for watching and i'll see you next time you
