With timestamps:

00:00 - hello and welcome I'm your code monkey
00:02 - and here's a quick video on how to
00:03 - change postprocessing through code now
00:06 - in this video I'm talking about
00:07 - postprocessing when using urp not the
00:09 - package that you use with the buin
00:11 - runner pipeline those are two completely
00:13 - different systems if you don't know
00:14 - difference between those two go watch my
00:16 - quick video on it and this method I'm
00:18 - showing it here in urp but it works
00:20 - exactly the same in hrp just not with
00:22 - the built-in RP if you want a 10-second
00:24 - answer then here it is just go inside
00:26 - the volume grab the profile call the try
00:28 - get and get the bloom compon or the
00:30 - effect that you want then just go inside
00:32 - that effect and modify anything you want
00:34 - but if you want to learn how I actually
00:35 - learn how to find this then keep
00:36 - watching the video quick mention the
00:38 - Black Friday sale is starting this week
00:40 - there will be tons of assets and tools
00:42 - on sale there are Flash Deals up to 70%
00:44 - off which will last for a little while
00:46 - but you can see exactly when they are
00:47 - coming up so check it out to the link in
00:48 - the description so here's the scene and
00:50 - I just have a simple postprocessing
00:52 - volume over here I got a game object
00:54 - with the volume component and a bunch of
00:55 - effects so I've got Bloom so we have a
00:57 - nice glow and call adjustment just
00:59 - setting set a bit of contrast and a bit
01:01 - of saturation also if you don't know how
01:03 - to get bloom or a glow working check out
01:05 - my quick checklist now the goal here is
01:07 - I want to modify this through code for
01:09 - example I want to press a button and
01:11 - over here modify the bloom intensity now
01:13 - due to how the postprocessing system
01:15 - works it's actually a bit tricky to
01:16 - figure out how to do this you might
01:18 - think you can just access the volume
01:19 - component so let's try doing that so
01:21 - let's make a new CP script call this
01:24 - change post processing let's make a game
01:27 - object to run it and attach a script
01:30 - okay now here let's first add a very
01:32 - simple serialized
01:34 - field make it of type volume and in
01:37 - order to access volume we need to add
01:39 - using Unity engine and it's inside the
01:42 - rendering so we add a volume let's call
01:44 - it volume okay this now in the editor
01:48 - let's drag our reference all right and
01:50 - now here let's do a very simple on a
01:52 - private void update and on update let's
01:54 - listen to input so input let's say get
01:56 - key down Fort for testing so when this
02:00 - happens we want to change the bloom so
02:03 - for example if we go inside the volume
02:04 - and let's say we find something called
02:06 - intensity and nope we can find it if I
02:09 - try to find Bloom nope also cannot find
02:11 - it I cannot find color adjustments any
02:14 - saturation anything like that nope none
02:16 - of that exists all we can modify is for
02:18 - example the weight then we can also
02:20 - modify the profile so these are pretty
02:23 - much the only things that we have access
02:24 - to and in the inspector over here we can
02:26 - see what those things are so basically
02:28 - we can access everything up here so mode
02:30 - weight priority and profile but nothing
02:32 - down here so nothing on the actual
02:33 - specific effects so this is the tricky
02:36 - part the way that this volume system
02:38 - works is with a kind of component system
02:40 - so very much like with regular game
02:42 - objects where you attach components like
02:44 - for example over here the volume
02:45 - component you've got the transform
02:46 - component and so on for the volume this
02:49 - whole thing works pretty much exactly
02:50 - the same way so you have the volume and
02:52 - then each effect is that as kind of a
02:53 - component so over here we added two
02:55 - components so the bloom and the color
02:57 - adjustment and the reason why I know
02:58 - this is because thankfully this system
03:00 - has all of the source code available one
03:03 - way to get there is simply to right
03:04 - click on the volume component and just
03:06 - click on edit script and here it is it
03:08 - shows up the script on my visual studio
03:10 - alternatively if that doesn't work for
03:12 - you you can browse that script by going
03:15 - over here onto the project window and if
03:17 - you scroll down you can see the packages
03:18 - drop down menu so you can see all the
03:20 - packages that are installed and by the
03:22 - way if this one does not appear so if
03:23 - you click here and the packages is empty
03:25 - if so then up here on the top right
03:27 - there's this button with a little I icon
03:29 - if this this one is toggled then it
03:30 - pretty much hides the packages so we
03:31 - cannot expand it if this one is UN
03:33 - toggled then you can see them with the
03:35 - packages visible now we can scroll down
03:36 - and you can find all of the various
03:38 - packages and all the various things so
03:40 - all the source codes over here included
03:42 - now in this case finding the volume
03:43 - component inside all this actually Prett
03:45 - complex but thankfully over here we also
03:47 - have a really nice search bar so over
03:49 - here we can search for volume and now by
03:52 - default this one will probably be over
03:54 - here only searching in assets so it's
03:56 - only going through your own assets for
03:58 - this project and looking for anything
03:59 - anything with that text now here of
04:01 - course we don't find the EXT volume
04:02 - component because does not exist in the
04:04 - assets but rather in the packages so if
04:06 - you click on this yep there you go now
04:07 - it shows you everything and now here if
04:09 - you scroll down yep over here we can see
04:11 - the actual volume component and if we
04:13 - click on the x button on the search bar
04:15 - over here we can see where it is exactly
04:17 - so it lives inside the core RP library
04:19 - inside runtime then we've got the volume
04:21 - and over here the volume component so
04:23 - you can double click on this and yep
04:25 - here is all of the source code for the
04:26 - actual volume component and if we look
04:28 - at this we can find all the things that
04:30 - we can actually see on the inspector so
04:32 - for example the is global we can see the
04:35 - priority the blend distance the weight
04:37 - and over here the volume profile both
04:39 - the shared one and the normal one so
04:41 - here in the inspector yep we are seeing
04:43 - all of these fields and how this system
04:45 - works is that the effects are not really
04:46 - attached to the volume but rather each
04:48 - volume has a profile and then the
04:49 - profile is what contains the various
04:51 - effects so over here if we go inside the
04:53 - profile which let's see the type so this
04:54 - one is of type volume profile so once
04:56 - again in the project files let's go over
04:58 - here and we find the volume profile
05:00 - right next to the volume and now here we
05:01 - can see right away the way that this
05:03 - works is over here we've got a list of
05:05 - volume component for all of our
05:06 - components so this is how all of the
05:08 - effects are added they basically all
05:09 - extend this base volume component so now
05:12 - for example we can do the exact same
05:13 - thing to find the bloom effect so let's
05:15 - use the search bar let's look for Bloom
05:18 - and over here yep we find it right away
05:19 - so here it is let's click the X to see
05:21 - where it's located so it's here on the
05:23 - universal RP runtime under overrides yep
05:26 - here we've got the bloom and over here
05:27 - we can see that that one does EX and the
05:29 - volume components and then over here we
05:31 - do see our field so finally we have
05:33 - access to the intensity so basically
05:35 - what we need to do is access the volume
05:37 - then from the volume we access the
05:38 - profile then on the profile we have the
05:40 - script and on this script we have the
05:42 - components list we can either cycle
05:44 - through this one or this one actually
05:45 - also has a very useful function down
05:48 - here we can see a try get function so we
05:50 - can pass in a component type and it will
05:52 - return it if it contains that effect so
05:54 - we do that to get the bloom and then we
05:55 - can modify the intensity so let's do all
05:57 - of that over here on the volume let's
05:59 - first grab the profile then let's call
06:01 - try get and we're going to try to get of
06:03 - type Bloom and for Bloom we need to
06:05 - figure out where it exists so we can go
06:07 - inside the bloom field over here we can
06:08 - see it exists inside this Unity engine
06:10 - rendering Universal so then here we add
06:13 - our using so we find Bloom out Bloom for
06:16 - our Bloom and if the profile has this
06:19 - effect then over here now we can go into
06:21 - bloom and modify the intensity and set
06:23 - the value to something so let's say
06:25 - 10f okay so that's really it let's test
06:28 - so here it is everything is looking
06:30 - pretty normal now I press the button and
06:31 - you there you go everything nice and
06:33 - shiny all right awesome now to Showcase
06:36 - how this works with literally everything
06:37 - let's try modifying the color
06:38 - adjustments let's modify the saturation
06:40 - so over here let's do the exact same
06:42 - thing let's do it on a different button
06:43 - so let's say on the Y instead of getting
06:45 - the bloom let's get the color
06:49 - adjustments so here it is exactly the
06:51 - same thing then we go inside this one in
06:53 - this case we want to modify the
06:54 - saturation let's set the value and let's
06:56 - put it at minus 100 to get everything
06:57 - perfectly black and white
07:00 - okay so let's test okay so here we are
07:02 - everything went nice and colors now if I
07:04 - press the white key there you go
07:05 - everything perfect black and white all
07:07 - right great so as you can see this is
07:08 - how it works finally just for fun here I
07:10 - have another script this one is using
07:12 - some animation curves to animate the
07:14 - changing of the effects now if you don't
07:16 - know about animation curves I covered
07:17 - them in detail in another video they are
07:19 - a really awesome Unity feature with so
07:20 - many use cases not just animation so
07:23 - here I defined two curves one of them to
07:25 - increase intensity and go down another
07:26 - one to decrease saturation and go back
07:28 - to zero and over here in the code I just
07:30 - got these I do the exact same thing go
07:32 - inside the volume profile to get the
07:34 - bloom and the color adjustments with
07:36 - those two references then on a button I
07:37 - simply reset the time and then I
07:39 - evaluate the curve and get the value so
07:41 - everything is pretty much the same
07:42 - really simple script just get it nice
07:43 - and animated so here it is and if I
07:46 - press a button yep there you go really
07:47 - nice and shiny the intensity really goes
07:49 - up and then down and for the other
07:51 - effect press the button there you go
07:53 - everything becomes nice and black and
07:54 - white all right awesome so here it is
07:57 - this is how you can modify post
07:58 - processing through code and actually the
08:00 - same method is how you can also modify s
08:02 - machine through code which works very
08:04 - much in the same way with a component
08:06 - system this method that I showed here is
08:08 - one of the things that I teach in my
08:09 - ultimate unity overview course in there
08:11 - I teach this method for how to modify
08:13 - any field in any package or Unity tool
08:16 - and also another more advanced method on
08:18 - how to load the package source code
08:19 - directly into Visual Studio on top of
08:22 - that that course also has over 50
08:23 - lectures each covering a different tool
08:25 - or feature of the engine so if you want
08:27 - to learn more on how to better use Unity
08:28 - check it out and also before I end this
08:31 - video let me just briefly mention yet
08:32 - another way to change effects which is
08:34 - simply to play with the weight so
08:36 - instead of having just one post Crossing
08:38 - volume component instead of that you can
08:39 - have two then on the second one let's
08:41 - say use a different post Crossing
08:43 - profile let's add just the bloom so this
08:45 - one is R intense and you would make sure
08:47 - that this one has a higher priority and
08:49 - over here with the weight you push it
08:50 - down to zero so with this with this one
08:52 - with the higher priority but weight of
08:53 - zero and the base one with the standard
08:55 - priority and a weight of one but this
08:57 - one if you want to add a nice quick
08:59 - flash you could simply increase the
09:01 - weight and then decrease so for example
09:03 - when the player takes damage you could
09:04 - just flash the screen by modifying the
09:05 - weight instead of having to actually
09:07 - modify the effect itself so that's just
09:09 - another quick tip for how you can play
09:10 - around the effects during gameplay
09:12 - there's many options depending on how
09:13 - you want to use them all right hope
09:15 - that's useful check out these videos to
09:17 - learn some more thanks to these awesome
09:19 - patreon supporters for making these
09:20 - videos possible thank you for watching
09:22 - and I'll see you next
09:28 - time
09:30 - yeah

Cleaned transcript:

hello and welcome I'm your code monkey and here's a quick video on how to change postprocessing through code now in this video I'm talking about postprocessing when using urp not the package that you use with the buin runner pipeline those are two completely different systems if you don't know difference between those two go watch my quick video on it and this method I'm showing it here in urp but it works exactly the same in hrp just not with the builtin RP if you want a 10second answer then here it is just go inside the volume grab the profile call the try get and get the bloom compon or the effect that you want then just go inside that effect and modify anything you want but if you want to learn how I actually learn how to find this then keep watching the video quick mention the Black Friday sale is starting this week there will be tons of assets and tools on sale there are Flash Deals up to 70% off which will last for a little while but you can see exactly when they are coming up so check it out to the link in the description so here's the scene and I just have a simple postprocessing volume over here I got a game object with the volume component and a bunch of effects so I've got Bloom so we have a nice glow and call adjustment just setting set a bit of contrast and a bit of saturation also if you don't know how to get bloom or a glow working check out my quick checklist now the goal here is I want to modify this through code for example I want to press a button and over here modify the bloom intensity now due to how the postprocessing system works it's actually a bit tricky to figure out how to do this you might think you can just access the volume component so let's try doing that so let's make a new CP script call this change post processing let's make a game object to run it and attach a script okay now here let's first add a very simple serialized field make it of type volume and in order to access volume we need to add using Unity engine and it's inside the rendering so we add a volume let's call it volume okay this now in the editor let's drag our reference all right and now here let's do a very simple on a private void update and on update let's listen to input so input let's say get key down Fort for testing so when this happens we want to change the bloom so for example if we go inside the volume and let's say we find something called intensity and nope we can find it if I try to find Bloom nope also cannot find it I cannot find color adjustments any saturation anything like that nope none of that exists all we can modify is for example the weight then we can also modify the profile so these are pretty much the only things that we have access to and in the inspector over here we can see what those things are so basically we can access everything up here so mode weight priority and profile but nothing down here so nothing on the actual specific effects so this is the tricky part the way that this volume system works is with a kind of component system so very much like with regular game objects where you attach components like for example over here the volume component you've got the transform component and so on for the volume this whole thing works pretty much exactly the same way so you have the volume and then each effect is that as kind of a component so over here we added two components so the bloom and the color adjustment and the reason why I know this is because thankfully this system has all of the source code available one way to get there is simply to right click on the volume component and just click on edit script and here it is it shows up the script on my visual studio alternatively if that doesn't work for you you can browse that script by going over here onto the project window and if you scroll down you can see the packages drop down menu so you can see all the packages that are installed and by the way if this one does not appear so if you click here and the packages is empty if so then up here on the top right there's this button with a little I icon if this this one is toggled then it pretty much hides the packages so we cannot expand it if this one is UN toggled then you can see them with the packages visible now we can scroll down and you can find all of the various packages and all the various things so all the source codes over here included now in this case finding the volume component inside all this actually Prett complex but thankfully over here we also have a really nice search bar so over here we can search for volume and now by default this one will probably be over here only searching in assets so it's only going through your own assets for this project and looking for anything anything with that text now here of course we don't find the EXT volume component because does not exist in the assets but rather in the packages so if you click on this yep there you go now it shows you everything and now here if you scroll down yep over here we can see the actual volume component and if we click on the x button on the search bar over here we can see where it is exactly so it lives inside the core RP library inside runtime then we've got the volume and over here the volume component so you can double click on this and yep here is all of the source code for the actual volume component and if we look at this we can find all the things that we can actually see on the inspector so for example the is global we can see the priority the blend distance the weight and over here the volume profile both the shared one and the normal one so here in the inspector yep we are seeing all of these fields and how this system works is that the effects are not really attached to the volume but rather each volume has a profile and then the profile is what contains the various effects so over here if we go inside the profile which let's see the type so this one is of type volume profile so once again in the project files let's go over here and we find the volume profile right next to the volume and now here we can see right away the way that this works is over here we've got a list of volume component for all of our components so this is how all of the effects are added they basically all extend this base volume component so now for example we can do the exact same thing to find the bloom effect so let's use the search bar let's look for Bloom and over here yep we find it right away so here it is let's click the X to see where it's located so it's here on the universal RP runtime under overrides yep here we've got the bloom and over here we can see that that one does EX and the volume components and then over here we do see our field so finally we have access to the intensity so basically what we need to do is access the volume then from the volume we access the profile then on the profile we have the script and on this script we have the components list we can either cycle through this one or this one actually also has a very useful function down here we can see a try get function so we can pass in a component type and it will return it if it contains that effect so we do that to get the bloom and then we can modify the intensity so let's do all of that over here on the volume let's first grab the profile then let's call try get and we're going to try to get of type Bloom and for Bloom we need to figure out where it exists so we can go inside the bloom field over here we can see it exists inside this Unity engine rendering Universal so then here we add our using so we find Bloom out Bloom for our Bloom and if the profile has this effect then over here now we can go into bloom and modify the intensity and set the value to something so let's say 10f okay so that's really it let's test so here it is everything is looking pretty normal now I press the button and you there you go everything nice and shiny all right awesome now to Showcase how this works with literally everything let's try modifying the color adjustments let's modify the saturation so over here let's do the exact same thing let's do it on a different button so let's say on the Y instead of getting the bloom let's get the color adjustments so here it is exactly the same thing then we go inside this one in this case we want to modify the saturation let's set the value and let's put it at minus 100 to get everything perfectly black and white okay so let's test okay so here we are everything went nice and colors now if I press the white key there you go everything perfect black and white all right great so as you can see this is how it works finally just for fun here I have another script this one is using some animation curves to animate the changing of the effects now if you don't know about animation curves I covered them in detail in another video they are a really awesome Unity feature with so many use cases not just animation so here I defined two curves one of them to increase intensity and go down another one to decrease saturation and go back to zero and over here in the code I just got these I do the exact same thing go inside the volume profile to get the bloom and the color adjustments with those two references then on a button I simply reset the time and then I evaluate the curve and get the value so everything is pretty much the same really simple script just get it nice and animated so here it is and if I press a button yep there you go really nice and shiny the intensity really goes up and then down and for the other effect press the button there you go everything becomes nice and black and white all right awesome so here it is this is how you can modify post processing through code and actually the same method is how you can also modify s machine through code which works very much in the same way with a component system this method that I showed here is one of the things that I teach in my ultimate unity overview course in there I teach this method for how to modify any field in any package or Unity tool and also another more advanced method on how to load the package source code directly into Visual Studio on top of that that course also has over 50 lectures each covering a different tool or feature of the engine so if you want to learn more on how to better use Unity check it out and also before I end this video let me just briefly mention yet another way to change effects which is simply to play with the weight so instead of having just one post Crossing volume component instead of that you can have two then on the second one let's say use a different post Crossing profile let's add just the bloom so this one is R intense and you would make sure that this one has a higher priority and over here with the weight you push it down to zero so with this with this one with the higher priority but weight of zero and the base one with the standard priority and a weight of one but this one if you want to add a nice quick flash you could simply increase the weight and then decrease so for example when the player takes damage you could just flash the screen by modifying the weight instead of having to actually modify the effect itself so that's just another quick tip for how you can play around the effects during gameplay there's many options depending on how you want to use them all right hope that's useful check out these videos to learn some more thanks to these awesome patreon supporters for making these videos possible thank you for watching and I'll see you next time yeah
