With timestamps:

00:00 - hello and welcome I'm your code Monken
00:02 - in this video I'm going to cover my
00:03 - highlights for the unity 20 19.1 release
00:06 - let's begin so the most important thing
00:16 - to me is that dots is finally fully
00:18 - released if you don't know dots means
00:21 - data oriented technology stack and is
00:24 - the new name for the entity component
00:26 - system job system and birth compound
00:28 - this is somewhat of a completely new way
00:30 - of writing code in making games with a
00:32 - promise of massively increased
00:34 - performance it's all about making your
00:36 - games data-driven so they can easily be
00:38 - split into parts to benefit from
00:40 - multi-threading so you keep writing code
00:42 - in c-sharp then the first compiler takes
00:45 - all of that code and converts it into an
00:47 - extremely fast assembly code and the end
00:49 - result is hundreds of thousands of
00:51 - objects all running at once with great
00:53 - performance now that it's fully out I'm
00:56 - going to do some research so I can make
00:57 - some videos covering how it works and
00:59 - what benefits you can expect from if
01:01 - you're interested in games with lots of
01:03 - different agents like a massive city
01:05 - builder or a RTS this should be insanely
01:08 - useful they also fully released the
01:10 - megacity project so if you're interested
01:12 - in learning how dots works this is
01:14 - probably a great example to try to mess
01:16 - around with the shader graph is also now
01:19 - production-ready
01:20 - shaders i've always been something that
01:22 - I'm interested in but never really had
01:24 - time to learn how the language works so
01:26 - for me the issue that we're off is
01:28 - definitely something I want to get into
01:29 - and now that its production ready I'm
01:31 - going to do just that the UI is very
01:34 - intuitive and appears to be just as
01:35 - powerful as if you were writing code you
01:37 - just create a node drag the connections
01:39 - and move everything around being able to
01:42 - see a preview of the result is also
01:43 - immensely helpful since every time I
01:45 - tried to write a shader the biggest
01:47 - issue was always not knowing exactly
01:49 - what was going wrong so with the
01:51 - previews you can see the result at every
01:53 - step of the process shaders are
01:56 - wonderful and they can do so many things
01:58 - they almost seem like magic if you know
01:59 - how to work with them you have the full
02:01 - performance of GPU at your disposal so
02:03 - this is something I'm extremely
02:05 - interested in and will be making some
02:07 - videos on after doing some research then
02:09 - there's the shortcut manager this
02:11 - quite powerful since you can map any of
02:13 - hundreds of different actions to a
02:15 - simple key for us I'll have to review my
02:18 - own workflow to see what shortcuts I can
02:20 - create to improve it you can also switch
02:22 - between various groups of keybinds so
02:24 - you can have certain key binds for
02:25 - testing others for level designers for
02:27 - prototyping and so on this is one of
02:30 - those tools that can be immensely
02:31 - powerful if you take the time to adapt
02:33 - it to your own workflow then something
02:35 - which seems pretty small but also really
02:37 - cool which is stacktrace links usually
02:40 - the only thing you can do when you have
02:42 - something on blog is double click and it
02:44 - would open the visual studio on the line
02:46 - that cause the one so that means you are
02:48 - limited to the very last line so if you
02:51 - have many nested function calls you need
02:52 - to manually go through these tactics
02:54 - however now you can click on each line
02:56 - to take you exactly where the code
02:58 - winter since my stack traces are usually
03:01 - pre big this will likely be quite a nice
03:03 - feature now if you go into window and
03:06 - quick search you have a very nice new
03:08 - window that can search anything anywhere
03:10 - so anything you type phone automatically
03:12 - search in the current hierarchy inside
03:14 - other scenes your project folders and
03:16 - also search in unity answers as your
03:18 - project grows this is immensely useful
03:20 - since you don't want to need to worry
03:22 - about searching in various places one at
03:24 - a time it's all in just one place prefab
03:28 - editing in the editor is also a
03:29 - wonderful thing usually my prefabs are
03:32 - pretty simple with just one or two game
03:34 - objects and the components in scripts
03:36 - placed on the root object so previously
03:38 - you need to open the prefab in order to
03:40 - modify it but in 2019 if you want to
03:43 - modify the components on the root you
03:45 - can do it straight from the inspector so
03:47 - depending on how you set up your prefabs
03:49 - this can end up saving you a lot of time
03:51 - and clicks then there's also a new way
03:54 - to create a custom editor UI for your
03:56 - components keeping with the performance
03:58 - by the fault mantra the whole thing is
04:00 - put into the hierarchy styles and logic
04:03 - it seemed like a great way to create
04:05 - custom editors especially if you already
04:07 - have knowledge of web development and
04:09 - CSS you can also now showing height
04:12 - objects in your scene the difference we
04:15 - just disabling the game object is when
04:17 - you run the game they won't still be
04:18 - enabled so if your scene is cluttered
04:21 - with lots of objects that are essential
04:23 - you can
04:23 - keep them in a bowl and just hider then
04:26 - a couple more interesting things in the
04:27 - changelog WebGL has been officially
04:30 - upgraded into webassembly
04:31 - this should make web films more
04:33 - performant for those of you who run
04:35 - Linux there is now a preview of the
04:37 - editor this is yet another thing that
04:39 - helps make unity an insanely for style
04:41 - game engine that you can play and now
04:43 - edits on pretty much every platform
04:45 - there's the incremental garbage
04:47 - collector which is still experimental
04:49 - but it's a move in the right direction
04:50 - to make sure your game is more stable
04:52 - instead of clearing garbage all at once
04:54 - it will be done smoothly over frame so
04:56 - you don't get a massive performance
04:57 - spike the 2d sprite shape improvements
05:01 - means you can now get better fitting
05:02 - colliders which is very useful if you
05:04 - use the irregular shapes in your games
05:06 - and the to the animation improvements
05:09 - also seems to have better performance
05:10 - due to the underlying code using the job
05:13 - system and birth compound so all in all
05:16 - unity just keeps getting better and
05:18 - better I really love their approach
05:20 - these past few years of moving towards
05:22 - performance by the font
05:23 - I like making games with lots of Units
05:25 - so to me performance is always a tricky
05:27 - thing and anything which makes it easier
05:29 - is always welcome and all of their
05:31 - features targeted towards a more code
05:33 - for approach like the shader graph and
05:35 - the VFX graph are also wonderful for
05:37 - helping people get started
05:39 - so if you're new to game development and
05:41 - are wondering which engine is best I
05:43 - would say unity is a great choice and
05:46 - they have proven time and time again
05:48 - that they're focused on the long term
05:49 - which is extremely important if you're
05:51 - thinking of making games as a career the
05:54 - future is looking bright and I look
05:55 - forward to doing my research so I can do
05:57 - videos on these new exciting features so
06:00 - stay tuned alright see you next time
06:06 - [Music]

Cleaned transcript:

hello and welcome I'm your code Monken in this video I'm going to cover my highlights for the unity 20 19.1 release let's begin so the most important thing to me is that dots is finally fully released if you don't know dots means data oriented technology stack and is the new name for the entity component system job system and birth compound this is somewhat of a completely new way of writing code in making games with a promise of massively increased performance it's all about making your games datadriven so they can easily be split into parts to benefit from multithreading so you keep writing code in csharp then the first compiler takes all of that code and converts it into an extremely fast assembly code and the end result is hundreds of thousands of objects all running at once with great performance now that it's fully out I'm going to do some research so I can make some videos covering how it works and what benefits you can expect from if you're interested in games with lots of different agents like a massive city builder or a RTS this should be insanely useful they also fully released the megacity project so if you're interested in learning how dots works this is probably a great example to try to mess around with the shader graph is also now productionready shaders i've always been something that I'm interested in but never really had time to learn how the language works so for me the issue that we're off is definitely something I want to get into and now that its production ready I'm going to do just that the UI is very intuitive and appears to be just as powerful as if you were writing code you just create a node drag the connections and move everything around being able to see a preview of the result is also immensely helpful since every time I tried to write a shader the biggest issue was always not knowing exactly what was going wrong so with the previews you can see the result at every step of the process shaders are wonderful and they can do so many things they almost seem like magic if you know how to work with them you have the full performance of GPU at your disposal so this is something I'm extremely interested in and will be making some videos on after doing some research then there's the shortcut manager this quite powerful since you can map any of hundreds of different actions to a simple key for us I'll have to review my own workflow to see what shortcuts I can create to improve it you can also switch between various groups of keybinds so you can have certain key binds for testing others for level designers for prototyping and so on this is one of those tools that can be immensely powerful if you take the time to adapt it to your own workflow then something which seems pretty small but also really cool which is stacktrace links usually the only thing you can do when you have something on blog is double click and it would open the visual studio on the line that cause the one so that means you are limited to the very last line so if you have many nested function calls you need to manually go through these tactics however now you can click on each line to take you exactly where the code winter since my stack traces are usually pre big this will likely be quite a nice feature now if you go into window and quick search you have a very nice new window that can search anything anywhere so anything you type phone automatically search in the current hierarchy inside other scenes your project folders and also search in unity answers as your project grows this is immensely useful since you don't want to need to worry about searching in various places one at a time it's all in just one place prefab editing in the editor is also a wonderful thing usually my prefabs are pretty simple with just one or two game objects and the components in scripts placed on the root object so previously you need to open the prefab in order to modify it but in 2019 if you want to modify the components on the root you can do it straight from the inspector so depending on how you set up your prefabs this can end up saving you a lot of time and clicks then there's also a new way to create a custom editor UI for your components keeping with the performance by the fault mantra the whole thing is put into the hierarchy styles and logic it seemed like a great way to create custom editors especially if you already have knowledge of web development and CSS you can also now showing height objects in your scene the difference we just disabling the game object is when you run the game they won't still be enabled so if your scene is cluttered with lots of objects that are essential you can keep them in a bowl and just hider then a couple more interesting things in the changelog WebGL has been officially upgraded into webassembly this should make web films more performant for those of you who run Linux there is now a preview of the editor this is yet another thing that helps make unity an insanely for style game engine that you can play and now edits on pretty much every platform there's the incremental garbage collector which is still experimental but it's a move in the right direction to make sure your game is more stable instead of clearing garbage all at once it will be done smoothly over frame so you don't get a massive performance spike the 2d sprite shape improvements means you can now get better fitting colliders which is very useful if you use the irregular shapes in your games and the to the animation improvements also seems to have better performance due to the underlying code using the job system and birth compound so all in all unity just keeps getting better and better I really love their approach these past few years of moving towards performance by the font I like making games with lots of Units so to me performance is always a tricky thing and anything which makes it easier is always welcome and all of their features targeted towards a more code for approach like the shader graph and the VFX graph are also wonderful for helping people get started so if you're new to game development and are wondering which engine is best I would say unity is a great choice and they have proven time and time again that they're focused on the long term which is extremely important if you're thinking of making games as a career the future is looking bright and I look forward to doing my research so I can do videos on these new exciting features so stay tuned alright see you next time
