With timestamps:

00:00 - hello and welcome i'm your code monkey
00:02 - in this video we're going to look at my
00:03 - very first asset store package which is
00:05 - camoly free the key door system
00:08 - this is a very easy to use system for
00:10 - quickly placing doors and keys in your
00:11 - levels
00:12 - you can create more keys and more doors
00:13 - by using simple scriptable objects i'm
00:16 - also going to talk about the process on
00:17 - how to publish your own assets on the
00:19 - asset store which is something that i've
00:20 - always wanted to try doing
00:22 - the asset store is a really interesting
00:24 - platform and i'm fascinated by the fact
00:25 - that you can make a living as a tools
00:27 - developer
00:28 - just creating tools to help other
00:29 - developers so as a test i wanted to
00:31 - start with something simple so i made
00:33 - the key door system
00:34 - it's completely free so check out the
00:36 - store page in the description and just
00:37 - go ahead and download it
00:39 - as you can see by the name this asset is
00:40 - also officially proved to work with the
00:42 - fps micro microgame
00:43 - so if you're making some quick fps
00:45 - prototypes then this system will be
00:47 - really easy to add
00:48 - and you can use it in any game it's not
00:50 - limited to just the fps micro game it
00:52 - features a bunch of 3d keys and doors
00:54 - so go to the webpage click on the button
00:56 - to add to your assets and then
00:58 - open in unity once you click that button
01:00 - it will automatically open the package
01:02 - manager in unity and scroll down to the
01:04 - key door system
01:05 - if it doesn't then just manually open it
01:07 - by going into window package manager and
01:08 - then click on load more until you find
01:10 - the key door system
01:11 - then go ahead just download and hit on
01:13 - import just go ahead select everything
01:15 - and import
01:19 - okay so all the files get added to the
01:20 - project files and right away you can see
01:23 - a really nice readme
01:24 - so here you see just some basic
01:26 - instructions on how to get started
01:28 - and the readme file itself also looks
01:30 - really nice with some images and links
01:32 - so this is actually really simple to
01:34 - make in reality
01:35 - this file in here is just a scriptable
01:37 - object then there's a custom inspector
01:39 - in order to display all the films in
01:41 - this nice custom manner
01:42 - i figured if i had to make a readme file
01:44 - then i might as well spend some time
01:46 - making it look good and i'm quite happy
01:48 - with the result
01:48 - i covered both custom inspectors and
01:51 - scriptable objects
01:52 - in previous videos so go check those out
01:54 - if you want to learn more
01:55 - so in here let's follow our readme
01:57 - instructions now the first thing we need
01:59 - is to drag the
02:00 - key prefab onto the level so over here
02:02 - let's open up the
02:03 - objects folder and inside over here
02:05 - let's drag the key prefab red
02:08 - so just drag it straight onto the level
02:09 - by the way this level that i'm using
02:11 - here is the fps micro game project
02:13 - i'm using this to demo the system signal
02:15 - because it already has a very nice fps
02:17 - character controller
02:19 - okay so we added the key onto our level
02:22 - now next let's go to the readme okay so
02:24 - secondly
02:25 - drag the door prefab onto the level make
02:27 - sure it's the same color
02:29 - so in here we have the prefab red and
02:31 - just drag that one
02:32 - let's rotate to face the right direction
02:35 - and just place on this nice little door
02:37 - hole
02:40 - all right so there's the door let's
02:42 - check out the next step
02:44 - so in here place the key okay place door
02:46 - okay now select the player game object
02:48 - and we add the dorky holder script
02:50 - so over here we select the player it
02:52 - already has a bunch of scripts but these
02:54 - don't matter
02:55 - the key door system works separate from
02:56 - anything else so in here let's simply
02:58 - add a component
02:59 - and search for the door key holder yep
03:02 - this one
03:02 - and there you go so this script
03:04 - essentially holds some keys it also
03:06 - detects four collisions in order to add
03:07 - the keys to the key holder
03:09 - and just like this everything is done so
03:11 - if you look in the readme
03:13 - yep these are the three essential steps
03:15 - and then we have an optional step
03:16 - which is to add a ui element so we go
03:19 - into our ui canvas
03:21 - which in this project is located over
03:23 - here under the game manager we
03:25 - have the game hud
03:30 - and we're going to drag the dorky ui
03:33 - prefab
03:34 - all right so there it is a very nice key
03:36 - indicator in our ui
03:38 - now this one is optional because
03:40 - everything works without it but
03:41 - you might as well edit so you have a
03:43 - nice ui indicator showing you what keys
03:45 - you're holding
03:49 - so the indicator as you can see has a
03:51 - field for the door key holder
03:53 - so in here we select this and the key
03:55 - holder is on the player so just drag the
03:56 - player object straight into that field
03:58 - alright
03:59 - okay so back in the readme following the
04:00 - instructions and next one is just to
04:02 - play the game
04:03 - okay so let's try okay here we are in
04:06 - our game and we have a nice door in
04:08 - front of us
04:09 - and if i try to go through it nope the
04:10 - door is closed does not open
04:12 - and if i pick up the key yep i touch the
04:14 - key and gets added to my ui
04:16 - and now if i approach the door there you
04:18 - go it consumes the key it opens the door
04:20 - and now i can move through it
04:21 - alright awesome so here is a very simple
04:24 - system that you can very quickly and
04:25 - very easily add to your games
04:27 - the whole package comes complete with
04:29 - everything so you can just inspect this
04:31 - old folder
04:32 - there's only a handful of files so if
04:34 - you want to check how it works you can
04:35 - view all the source code so over here
04:37 - under the scripts folder you can see all
04:39 - the various scripts
04:40 - now longtime viewers of the channel
04:42 - might actually realize that this system
04:43 - looks quite familiar
04:44 - that's because the origin for this
04:46 - system was made quite a while ago in a
04:47 - dedicated video
04:48 - in that video i created the whole system
04:50 - from scratch so if you want to learn how
04:52 - all these scripts were made then check
04:53 - that out
04:54 - i originally made in 2d but as you can
04:56 - see it works perfectly well in 3d as
04:58 - well
04:59 - this system works on scriptable objects
05:01 - which i've already covered in another
05:03 - video
05:04 - essentially each key is a scriptable
05:06 - object so that's why it's so easy to
05:08 - make another type of key
05:09 - so let's try making that now in here
05:12 - under the keys we have all of our
05:13 - various keys so these are scriptable
05:15 - objects as you can see all they have is
05:16 - pretty much just a color
05:18 - so we can right click in order to go
05:20 - into create go into add-ons code monkey
05:22 - key door system and create a key
05:24 - let's make this the key purple and for
05:27 - the column let's select a purple
05:31 - all right there's our purple key script
05:33 - object so this is just the data for the
05:35 - key
05:35 - now down here we have the base key
05:37 - prefab along with the variants for
05:39 - red green and blue and now we can right
05:41 - click in order to create
05:43 - and we're going to create a new prefab
05:45 - variant and let's call this the key
05:47 - prefab purple
05:49 - and let's open the prefab and here we
05:51 - have our basic key mesh
05:53 - the key itself holds this script which
05:55 - itself holds a reference to the
05:57 - scriptable object
05:58 - so instead of the key red for this one
06:00 - let's use the key purple scriptable
06:02 - object and on the mesh we can also
06:04 - modify the material in order to make it
06:05 - visual
06:06 - so in here let's make another material
06:08 - for the key purple
06:11 - okay we have our purple key now let's do
06:14 - the same thing for the door
06:15 - so select door prefab in order to create
06:17 - a new prefab variant
06:19 - for the door prefab purple
06:24 - and open the prefab and here do the same
06:26 - thing so it has the door lock script
06:29 - which again has a reference to the
06:30 - scriptable object that opens this door
06:32 - so in this case let's go with the purple
06:34 - and here you can also see a nice tunnel
06:36 - in case you want to consume the key on
06:38 - open or not
06:39 - so by default it uses up the key but you
06:41 - could make it so you have reusable keys
06:44 - okay so that's a key and then over here
06:46 - on the unlock we can modify the material
06:54 - all right there it is so just like this
06:56 - we created the brand new key type
06:58 - so we first made the scriptable object
07:00 - then we made a key prefab variant
07:02 - to use that scriptable object and the
07:03 - same thing with the door now if we go
07:05 - back into our scene here
07:06 - and let's replace these so instead of
07:08 - having this key prefab
07:10 - and this door let's drag our purple key
07:12 - prefab
07:13 - and then also our purple door
07:21 - okay so let's test okay there it is the
07:23 - purple door as well as the purple key so
07:25 - move in
07:26 - yep there you go grab the purple key
07:28 - move in and if there you go the purple
07:29 - key opens the purple door
07:31 - alright so everything works and we have
07:33 - very easily created a brand new type of
07:35 - key indoor
07:36 - awesome then here in the project files
07:38 - it also comes with a really nice demo
07:40 - scene
07:41 - so this scene is already all set up here
07:43 - it is with all the standard doors and
07:45 - the standard keys
07:46 - so if i move in nope i cannot open now
07:49 - let's grab this key and grab this key
07:51 - and also this key
07:52 - and just open that one that one and that
07:54 - one and they all open
07:55 - so if you have trouble following the
07:57 - instructions just check out the demo
07:59 - scene
07:59 - so as you can see this whole system is
08:01 - very simple and very easy to use
08:03 - now let's just quickly look at the code
08:05 - here is the scripts folder
08:07 - and inside for example we have the key
08:09 - script so this as you can see is a
08:11 - scriptable object
08:12 - and all it really has is just the color
08:14 - of the key and over here a very nice
08:16 - menu so everything is nice and organized
08:18 - then we have the door key which is the
08:20 - script that is added to the key object
08:22 - and all it really has is a reference to
08:24 - the key then there is the door lock
08:26 - which is on the door object
08:27 - so this is just a basic model behavior
08:30 - it has a reference to the key that opens
08:31 - this door
08:32 - and then just some functions in order to
08:34 - play the animations then we also have
08:36 - the ui
08:37 - element which is optional so the whole
08:38 - system works without this
08:40 - and all it really takes is just the key
08:42 - ui prefab
08:43 - which is already set by default and then
08:46 - it takes a reference to the door key
08:47 - holder
08:48 - so in this case we're placing the door
08:50 - key holder on the player but really
08:51 - anything can hold some keys
08:53 - so for example you could have the
08:55 - enemies hold keys using this system
08:57 - and then here just listening to some
08:59 - events and refreshing all the visuals
09:01 - so it destroys all the old visuals and
09:03 - then resets and adds all of them
09:05 - so this can display as many keys as your
09:07 - dorky holding script is holding
09:08 - and finally we have the door key holder
09:10 - script which in this case it's attached
09:12 - to the player
09:13 - so this is what actually holds the keys
09:15 - it just has a list of all the keys that
09:17 - this one is holding
09:19 - and it simply does the ontrigger enter
09:21 - so it listens for collisions
09:22 - and if it collides with a dorky then
09:24 - destroys that dorky object and adds that
09:27 - key
09:27 - onto this list so that's it as you can
09:30 - see all these scripts are very simple
09:31 - and it's a very nice and easy to use
09:33 - system
09:34 - so here is my very first asset store
09:36 - package which is the completely free key
09:37 - door system
09:39 - this is my first asset so please give it
09:40 - a download and also make sure you
09:42 - leave a review with your thoughts so i
09:44 - know what you liked and what i can do to
09:45 - improve in the future
09:46 - now going through the asset store
09:48 - publisher process was actually pretty
09:49 - standard
09:50 - you need to first create a publisher
09:52 - account then you create a package
09:54 - you give it a title description add a
09:57 - couple of images
09:58 - and videos you can also set a price or
10:00 - make it free
10:02 - and then you upload the actual package
10:03 - contents from inside unity
10:05 - and finally you set it up for review
10:07 - after a while it gets reviewed and you
10:08 - can launch it on the asset or
10:10 - so it's a pretty simple and easy process
10:12 - if you have an idea for some tool or
10:14 - just some assets you want to share
10:15 - definitely give it a shot
10:16 - i have some ideas for some complex
10:18 - assets that i'd love to make so stay
10:20 - tuned and hit the bell icon
10:22 - if you found this video helpful consider
10:23 - liking and subscribing this video is
10:25 - made possible thanks to these awesome
10:27 - supporters
10:27 - go to patreon.com unitycodemonkey to get
10:30 - some perks and help keep the videos free
10:32 - for everyone
10:33 - subscribe to the channel for more unity
10:34 - tutorials post any questions you have in
10:36 - the comments and i'll see you next time

Cleaned transcript:

hello and welcome i'm your code monkey in this video we're going to look at my very first asset store package which is camoly free the key door system this is a very easy to use system for quickly placing doors and keys in your levels you can create more keys and more doors by using simple scriptable objects i'm also going to talk about the process on how to publish your own assets on the asset store which is something that i've always wanted to try doing the asset store is a really interesting platform and i'm fascinated by the fact that you can make a living as a tools developer just creating tools to help other developers so as a test i wanted to start with something simple so i made the key door system it's completely free so check out the store page in the description and just go ahead and download it as you can see by the name this asset is also officially proved to work with the fps micro microgame so if you're making some quick fps prototypes then this system will be really easy to add and you can use it in any game it's not limited to just the fps micro game it features a bunch of 3d keys and doors so go to the webpage click on the button to add to your assets and then open in unity once you click that button it will automatically open the package manager in unity and scroll down to the key door system if it doesn't then just manually open it by going into window package manager and then click on load more until you find the key door system then go ahead just download and hit on import just go ahead select everything and import okay so all the files get added to the project files and right away you can see a really nice readme so here you see just some basic instructions on how to get started and the readme file itself also looks really nice with some images and links so this is actually really simple to make in reality this file in here is just a scriptable object then there's a custom inspector in order to display all the films in this nice custom manner i figured if i had to make a readme file then i might as well spend some time making it look good and i'm quite happy with the result i covered both custom inspectors and scriptable objects in previous videos so go check those out if you want to learn more so in here let's follow our readme instructions now the first thing we need is to drag the key prefab onto the level so over here let's open up the objects folder and inside over here let's drag the key prefab red so just drag it straight onto the level by the way this level that i'm using here is the fps micro game project i'm using this to demo the system signal because it already has a very nice fps character controller okay so we added the key onto our level now next let's go to the readme okay so secondly drag the door prefab onto the level make sure it's the same color so in here we have the prefab red and just drag that one let's rotate to face the right direction and just place on this nice little door hole all right so there's the door let's check out the next step so in here place the key okay place door okay now select the player game object and we add the dorky holder script so over here we select the player it already has a bunch of scripts but these don't matter the key door system works separate from anything else so in here let's simply add a component and search for the door key holder yep this one and there you go so this script essentially holds some keys it also detects four collisions in order to add the keys to the key holder and just like this everything is done so if you look in the readme yep these are the three essential steps and then we have an optional step which is to add a ui element so we go into our ui canvas which in this project is located over here under the game manager we have the game hud and we're going to drag the dorky ui prefab all right so there it is a very nice key indicator in our ui now this one is optional because everything works without it but you might as well edit so you have a nice ui indicator showing you what keys you're holding so the indicator as you can see has a field for the door key holder so in here we select this and the key holder is on the player so just drag the player object straight into that field alright okay so back in the readme following the instructions and next one is just to play the game okay so let's try okay here we are in our game and we have a nice door in front of us and if i try to go through it nope the door is closed does not open and if i pick up the key yep i touch the key and gets added to my ui and now if i approach the door there you go it consumes the key it opens the door and now i can move through it alright awesome so here is a very simple system that you can very quickly and very easily add to your games the whole package comes complete with everything so you can just inspect this old folder there's only a handful of files so if you want to check how it works you can view all the source code so over here under the scripts folder you can see all the various scripts now longtime viewers of the channel might actually realize that this system looks quite familiar that's because the origin for this system was made quite a while ago in a dedicated video in that video i created the whole system from scratch so if you want to learn how all these scripts were made then check that out i originally made in 2d but as you can see it works perfectly well in 3d as well this system works on scriptable objects which i've already covered in another video essentially each key is a scriptable object so that's why it's so easy to make another type of key so let's try making that now in here under the keys we have all of our various keys so these are scriptable objects as you can see all they have is pretty much just a color so we can right click in order to go into create go into addons code monkey key door system and create a key let's make this the key purple and for the column let's select a purple all right there's our purple key script object so this is just the data for the key now down here we have the base key prefab along with the variants for red green and blue and now we can right click in order to create and we're going to create a new prefab variant and let's call this the key prefab purple and let's open the prefab and here we have our basic key mesh the key itself holds this script which itself holds a reference to the scriptable object so instead of the key red for this one let's use the key purple scriptable object and on the mesh we can also modify the material in order to make it visual so in here let's make another material for the key purple okay we have our purple key now let's do the same thing for the door so select door prefab in order to create a new prefab variant for the door prefab purple and open the prefab and here do the same thing so it has the door lock script which again has a reference to the scriptable object that opens this door so in this case let's go with the purple and here you can also see a nice tunnel in case you want to consume the key on open or not so by default it uses up the key but you could make it so you have reusable keys okay so that's a key and then over here on the unlock we can modify the material all right there it is so just like this we created the brand new key type so we first made the scriptable object then we made a key prefab variant to use that scriptable object and the same thing with the door now if we go back into our scene here and let's replace these so instead of having this key prefab and this door let's drag our purple key prefab and then also our purple door okay so let's test okay there it is the purple door as well as the purple key so move in yep there you go grab the purple key move in and if there you go the purple key opens the purple door alright so everything works and we have very easily created a brand new type of key indoor awesome then here in the project files it also comes with a really nice demo scene so this scene is already all set up here it is with all the standard doors and the standard keys so if i move in nope i cannot open now let's grab this key and grab this key and also this key and just open that one that one and that one and they all open so if you have trouble following the instructions just check out the demo scene so as you can see this whole system is very simple and very easy to use now let's just quickly look at the code here is the scripts folder and inside for example we have the key script so this as you can see is a scriptable object and all it really has is just the color of the key and over here a very nice menu so everything is nice and organized then we have the door key which is the script that is added to the key object and all it really has is a reference to the key then there is the door lock which is on the door object so this is just a basic model behavior it has a reference to the key that opens this door and then just some functions in order to play the animations then we also have the ui element which is optional so the whole system works without this and all it really takes is just the key ui prefab which is already set by default and then it takes a reference to the door key holder so in this case we're placing the door key holder on the player but really anything can hold some keys so for example you could have the enemies hold keys using this system and then here just listening to some events and refreshing all the visuals so it destroys all the old visuals and then resets and adds all of them so this can display as many keys as your dorky holding script is holding and finally we have the door key holder script which in this case it's attached to the player so this is what actually holds the keys it just has a list of all the keys that this one is holding and it simply does the ontrigger enter so it listens for collisions and if it collides with a dorky then destroys that dorky object and adds that key onto this list so that's it as you can see all these scripts are very simple and it's a very nice and easy to use system so here is my very first asset store package which is the completely free key door system this is my first asset so please give it a download and also make sure you leave a review with your thoughts so i know what you liked and what i can do to improve in the future now going through the asset store publisher process was actually pretty standard you need to first create a publisher account then you create a package you give it a title description add a couple of images and videos you can also set a price or make it free and then you upload the actual package contents from inside unity and finally you set it up for review after a while it gets reviewed and you can launch it on the asset or so it's a pretty simple and easy process if you have an idea for some tool or just some assets you want to share definitely give it a shot i have some ideas for some complex assets that i'd love to make so stay tuned and hit the bell icon if you found this video helpful consider liking and subscribing this video is made possible thanks to these awesome supporters go to patreon.com unitycodemonkey to get some perks and help keep the videos free for everyone subscribe to the channel for more unity tutorials post any questions you have in the comments and i'll see you next time
