With timestamps:

00:00 - in this video we're going to make a
00:01 - simple chat bubble in unity this is
00:04 - great if you want to show some messages
00:06 - on top of your characters or as a simple
00:08 - messaging system in a multiplayer game
00:09 - for example I use Czech bubbles on
00:12 - Parramatta kun to display a guest
00:14 - thoughts let's begin
00:18 - [Music]
00:22 - hello and welcome I'm your code monkey
00:25 - and this channel is all about helping
00:26 - you will learn how to make your own
00:27 - games with nf2 turns made by a
00:29 - professional indie game developer so if
00:31 - you find the video helpful consider
00:33 - subscribing okay so what we're going to
00:35 - create here is a very simple but very
00:36 - effective system we're going to show
00:38 - some text using some icon and display it
00:41 - above a character like I said I use this
00:43 - extensively in my own West game pattern
00:45 - real tycoon in order to display guest
00:47 - thoughts it's a very simple system
00:49 - designed to provide the player with a
00:50 - bit more information without having to
00:52 - go through a specific UI so if you have
00:54 - a game with lots of Units roaming around
00:56 - like some management or strategy game
00:58 - then this system is an excellent way of
01:00 - adding some extra information in an easy
01:02 - way
01:02 - okay so here is what we're trying to
01:04 - make I have some characters roaming
01:06 - around randomly and they randomly say
01:08 - some things which you can see popping up
01:10 - above their heads so we have an icon and
01:13 - a message and as you can see the message
01:15 - gets written over time so this is made
01:17 - using the text writer that we made in a
01:19 - previous video
01:20 - I'm also controlling my basic player
01:23 - character here and I can press a button
01:25 - and there's a very nice text input
01:28 - window which again also made in another
01:30 - video and in here I can say anything so
01:37 - I just write something press ok any of
01:39 - there you go there's my nice message so
01:42 - you can see how this system is useful
01:44 - for showcasing any type of text like
01:46 - download between characters or you can
01:48 - also use this in a multiplayer game for
01:50 - a basic chat display check out the code
01:53 - monkey app on Steam interactive
01:54 - tutorials complete games and more click
01:57 - knowing the description and add it to
01:58 - your wish list this video is made
02:00 - possible thanks to these awesome
02:01 - supporters go to patreon.com/scishow to
02:04 - code monkey to get some perks and help
02:06 - keep the videos free for everyone
02:07 - alright so this circle let's get to it
02:09 - okay so here we are in our starting
02:12 - scene I have my player character that I
02:14 - can move around and there's a bunch of
02:15 - NPCs just randomly roaming around all
02:18 - right so let's begin making our chat
02:20 - bubble so first of all the approach
02:22 - we're going to take is to make our chat
02:24 - bubble live in the world as a child of
02:26 - each NPC or player instead of doing it
02:29 - in the UI by doing it this way we
02:31 - essentially avoid some conversion so
02:34 - first let's begin by making
02:35 - new empty game object call the seed chat
02:39 - bubble and now inside let's make a 2d
02:42 - sprite this will be the background then
02:46 - duplicate and make one for the icon and
02:48 - then final let's right click create a 3d
02:51 - object of text mesh pro text so this
02:54 - will be our text now here my textures I
02:58 - have a simple chat bubble texture yep
03:01 - just like that and then for the icon I
03:03 - also have a whole bunch of random icons
03:14 - and for the sorting order over here I'm
03:18 - going to place them on the top layer so
03:20 - off the main sprites like the character
03:22 - and the NPCs live on the default layer
03:24 - then the background obviously on the
03:26 - background so this one won't be on top
03:27 - so it will show up on top of everything
03:29 - else set the background on top then the
03:31 - icon on top and increase the order by a
03:34 - bit and same thing for the text also go
03:37 - here to add or sorting layer on top and
03:40 - once again put around 10 and for the
03:42 - text let's align it on the left side put
03:44 - it down the middle for the width and
03:47 - height put both at 0 and down here and
03:49 - let's disable our wrapping alright so
03:52 - this is pretty much our setup we have a
03:55 - background a icon and the text now
03:57 - through code we're going to dynamically
03:59 - select the icon set the text and modify
04:02 - the background to fit to whatever text
04:04 - we write so let's make that script in
04:06 - you see sharp script call this our chat
04:08 - bubble and let's drag it on to our game
04:11 - object okay now in here let's first make
04:15 - a simple private void awake and let's
04:18 - grab all of our references
04:27 - all right so here we have all our
04:29 - references when working with text mesh
04:31 - crowd and forget to add the using
04:33 - statement now let's make a function to
04:35 - set our text let's call this our setup
04:42 - so we're going to set up our chat bubble
04:45 - and inside we just access the text mesh
04:48 - browser set the text and we pass in this
04:51 - text all right now just for testing
04:55 - let's countdown our start we call our
04:58 - setup and pass in a random string okay
05:03 - that should do it
05:03 - let's test any of there it is we have
05:06 - our chat bubble indeed saying our text
05:08 - all right so far so good
05:10 - now let's make our background actually
05:12 - match the text so here we're setting the
05:14 - text and now we need the background to
05:17 - match the size now we can get the
05:19 - visible render bounds by accessing the
05:22 - text mesh Pro object and call get
05:25 - rendered values so this returns a vector
05:28 - to with our size and now here we might
05:32 - get some issues in certain scenarios
05:34 - related to the text not rendering
05:36 - instantly so in order to avoid that from
05:39 - ever happening we can access our object
05:42 - to call our force mesh update so just
05:46 - adding this to make sure that it always
05:47 - works so here we have our render bounds
05:51 - now we just need to modify the size of
05:53 - the background and add a little extra
05:55 - padding so for the size the background
05:57 - we acts as a sprite renderer and we're
06:00 - going to modify the size and let's say
06:03 - the text size + V offset
06:12 - all right so just like this it should
06:14 - work however in order to make the size
06:16 - film actually be used we need to set our
06:19 - strike render to use these sliced mode
06:20 - so back in the editor here when we have
06:23 - our sprite renderer instead of drama
06:24 - being simple we modify this set to
06:27 - sliced so as you can see now we not also
06:29 - need to modify our chat bubble so let's
06:32 - select the texture in here so like the
06:34 - mesh from tight going into foam rect and
06:36 - hit apply now since we're looking at
06:39 - this we can also look at another issue
06:40 - which is now if we go back and we modify
06:43 - our width if there you go it actually
06:45 - does work however look at the corners
06:48 - when we increase it very further if
06:50 - there it is right there it's not really
06:52 - looking very good so again we can just
06:54 - go into the texture click on the sprite
06:56 - editor and in here we can simply drag
06:59 - our edges so this way the corners will
07:04 - not be stretched so if we hit apply and
07:05 - if there you go now that looks much
07:07 - better
07:08 - all right so everything is set up let's
07:10 - test any of there it is it doesn't need
07:12 - to have the exact perfect science if we
07:14 - stop and we place the background right
07:17 - down the middle of the word and if there
07:20 - you go it works it sounded perfect all
07:22 - right so the size is working correctly
07:24 - we just need to position it a bit
07:26 - differently and also add a bit more
07:28 - extra padding so that it does occupy
07:30 - also for the icon now with regard to
07:33 - positioning that is also going to depend
07:36 - on what you said here on these fright
07:37 - import settings here we have the pivot
07:40 - and right now it's at the center so one
07:43 - approach we could take is for example
07:44 - change this from the center and put it
07:46 - on the on website and now with the pivot
07:48 - on the left side we could simply move
07:50 - this to where we want and then just play
07:51 - around with that however this bright
07:53 - might also be used elsewhere in our game
07:55 - so if we modify the pivot we could
07:58 - possibly cause some unintentional
07:59 - breaking changes so instead let's leave
08:02 - it at the center and do some math to
08:04 - figure out where we want our background
08:06 - to be so back in the code here we have
08:08 - our padding and we are modifying the
08:10 - size and now first of all we need to add
08:12 - some extra padding in order to make sure
08:14 - that we also occupy the icon so here on
08:17 - let's just try this out and let's also
08:19 - try out a bigger message
08:23 - okay there it is with a bigger text
08:26 - message and now if we shift this to the
08:28 - right side just like that we can see yep
08:31 - the size is pretty much correct all
08:32 - right now we just need a position so we
08:34 - just take our spread trailer access the
08:36 - transform to modify the unload
08:38 - composition and let's just put that half
08:40 - the size so we're using at half of our
08:47 - size width let's see any of there it is
08:49 - correctly right down the middle of the
08:52 - text now we just need to shift it a bit
08:54 - and left to occupy the icon any of their
08:59 - lists so the text background and icon
09:01 - all match perfectly depending on what
09:03 - text is written awesome
09:04 - alright now let's customize our icon
09:07 - first let's make you known for all of
09:10 - our possible icon types so we have all
09:15 - of our types and now down here on our
09:17 - setup function we receive the text then
09:20 - let's also receive our icon type so now
09:25 - here we have to modify our sprite
09:27 - renderer dot sprite so let's make a
09:29 - function to get the icon okay we just do
09:41 - switch and now we need to return the
09:43 - sprite so up here and let's set some
09:45 - fields for it all right we have them and
09:52 - we just returned them down here all
10:00 - right so that's it very simple and then
10:03 - on our setup lets press in and right now
10:06 - let's say angry alright so finally in
10:09 - the editor now here we have our films
10:11 - and we just need to drag them alright
10:13 - let's test and if there's the chat
10:16 - bubble with our angry icon looking great
10:18 - awesome
10:19 - so functionally everything is pretty
10:21 - much working now let's just make our
10:23 - class more robust and very easy to use
10:25 - now we're going to do that by making the
10:27 - class itself be responsible for in
10:29 - Senshi ating of the chat bubbles I'm
10:31 - going to use a simple pattern that I've
10:32 - used many times so if you've seen my
10:34 - videos and this should be very familiar
10:36 - now here on our chat bubble let's simply
10:40 - make a public static void on create we
10:46 - receive a transform for the parent then
10:49 - in vector 3 for the own little
10:50 - composition and icon type and finally a
10:55 - string for our text now here we just
10:58 - call instantiate and we incent she ate
11:01 - our chat bubble prefab so that means
11:03 - that we're going to need our prefab
11:05 - reference so in my scene I have this
11:07 - game object with this game asset script
11:09 - now this class was fully created in a
11:12 - previous video it's extremely useful to
11:14 - grab asset references from elsewhere in
11:16 - our code so we really need to do is that
11:19 - a public field in this case for a
11:20 - transform let's commit for our prefab
11:23 - chat bubble so just a public field and
11:26 - we have a static instance now back in
11:29 - the editor we can see our field in here
11:31 - for our chat bubble so first let's make
11:33 - the chat bubble in to a prefab just drag
11:35 - it onto the folder yep and now here we
11:38 - drag our prefab reference right in there
11:40 - okay so with that we can now go here on
11:42 - our chat bubble to access the game
11:44 - assets as is the instance and we're at
11:47 - each half bubble Precog so in sin she
11:49 - ate our chat bubble as a child of this
11:52 - parent then we set the whole composition
11:55 - and then lastly we get the component of
11:59 - type chat bubble and we call our setup
12:04 - function and passing the icon type and E
12:06 - text all right so that's pretty much it
12:10 - now we have this function which is a
12:12 - static function that we can come from
12:14 - anywhere in our code and it will
12:15 - automatically spawn a chat bubble so
12:18 - let's try it now here in my scene I have
12:21 - a main game object it has this simple
12:24 - script here it is all it has is a
12:27 - reference to our player and all of the
12:28 - various NPCs so we can use this just for
12:31 - testing so let's make our private void
12:34 - start and on start let's spawn a chat
12:37 - bubble on top of the deployer so we
12:39 - access our chat bubble access the static
12:41 - create function passing the employer
12:43 - transform now we certain local position
12:46 - let's put it up and to the right now for
12:49 - a icon
12:50 - let's like neutral and now for some text
12:56 - alright that's pretty much it we just
12:58 - have this one function call and
13:00 - everything is handled automatically
13:01 - let's try and if there is each half
13:04 - bubble on top of the player and since it
13:07 - is a child of the player transform as I
13:09 - move the player yep there you go it also
13:11 - moves the text alright awesome so right
13:14 - now the chat bubble actually lives
13:16 - forever so this one will never go away
13:18 - so let's make it vanish after some time
13:20 - now in order to do that it's actually
13:22 - extremely simple we can use the destroy
13:26 - function this one takes an object and
13:28 - then we have an optional time parameter
13:30 - so we can tell it to destroy the chat
13:32 - bubble transform game object and then
13:35 - after some time so let's say after four
13:37 - seconds
13:38 - destroy the chat bubble we could also
13:40 - expose that as a parameter up here but
13:42 - just in this simple case this should
13:44 - work what says and yep there's our
13:46 - message and after four seconds we wait
13:49 - any up there we go the message gets a
13:51 - strike all right awesome okay so now
13:53 - let's polish this up and add a simple
13:55 - animation so let's open up our chat
13:58 - bubble prefab and in here and let's add
14:00 - a animation clip then we create a new
14:03 - animation alright so here it is a very
14:12 - basic animation just a fade in it
14:15 - automatically plays when the object is
14:17 - instantiated so everything should be
14:18 - working ok here we are any of there it
14:21 - is a nice and simple Faden so it fades
14:24 - in shows the message and gets destroyed
14:25 - now for some more polish let's add the
14:28 - text writer that we made in a previous
14:30 - video so here is the class that we made
14:33 - and we made it very easy to use all we
14:36 - need to do is just call one function so
14:39 - back in our chat bubble on the setup we
14:41 - first set the text we forced it to
14:43 - update in order to get the text size and
14:45 - then afterwards just for a visual
14:47 - let's use our text writer
14:59 - okay here we are and if there is a nice
15:03 - animation and a nice text writer so once
15:06 - again a great example of the power of
15:08 - writing clean code we made the text
15:10 - writer a long time ago and since we made
15:12 - it in a way that's very easy to use all
15:14 - it took was just one line of code and
15:16 - our chat bubble is now looking more
15:18 - polished now let's just randomly add
15:20 - some messages to all of the NPCs now in
15:23 - this script I have a simple array of all
15:25 - the NPC transforms and then a function
15:28 - to get a we're in the message so I just
15:30 - had our random messages alright so here
15:45 - it is I'm using the function periodic
15:47 - from the code monkey utilities which is
15:49 - almost like maghreb for free from unity
15:50 - Comic Con so this one similarly trigger
15:53 - this action every certain amount of time
15:55 - so we simply grab a random NPC transform
15:58 - from the array we grab a random message
16:00 - then a random icon and we simply call
16:03 - our nice function all right let's see
16:06 - menu here we are with all of our NPCs
16:08 - saying we're in the messages and all the
16:10 - chat buttons are working correctly
16:11 - they're animated they've got the text
16:13 - writer and everything looks pretty great
16:15 - alright awesome now let's go for one
16:18 - last thing so just for fun over here I
16:21 - have the nice input window which again
16:23 - was fully made in a previous video so
16:25 - yet another example of clean code so we
16:28 - can write something and click on submit
16:30 - let's use this don't let the player talk
16:33 - let's make a script to handle just that
16:36 - so a new script code our player taunt
16:39 - now here let's do our private Foley
16:43 - update and we're going to listen to the
16:47 - input get key down on the key code enter
16:50 - so when we press enter and let's say
16:53 - that we want the input window to show up
17:05 - okay so we have our input window with
17:07 - our nice static function again go watch
17:10 - the other video to see how all this was
17:11 - created from scratch but essentially we
17:13 - have an action which returns our input
17:16 - text so it's in here that we can spawn
17:17 - our chat power all right that's it
17:23 - what's test okay so here we are down to
17:25 - our NPC sing your random messages and I
17:28 - press ENTER and there you go there's the
17:30 - nice input window so let's say something
17:32 - and press ok and there you go there's
17:37 - our nice chat message so we can input
17:39 - whatever text we want we input whatever
17:45 - text we 1 press ok and there you go just
17:47 - like that we have a custom chat box so
17:49 - you can see how this simple chat button
17:51 - could be used as a very basic messaging
17:54 - system in a multiplayer game so here it
17:56 - is all of our chat bubbles at work and
17:58 - we wrote our code very nicely so all I
18:00 - need to do to add this to your game is
18:02 - just call the create function and
18:04 - everything is working perfectly this
18:06 - video is made possible thanks to these
18:07 - awesome supporters go to
18:09 - patreon.com/scishow to code monkey to
18:11 - get some perks and help keep the videos
18:13 - free for everyone as always you can
18:15 - download the project found in a tony's
18:16 - from minty Kermit calm subscribe the
18:18 - channel for more unity tutorials post
18:20 - any question comes and I'll see you next
18:22 - time
18:24 - [Music]
18:26 - you

Cleaned transcript:

in this video we're going to make a simple chat bubble in unity this is great if you want to show some messages on top of your characters or as a simple messaging system in a multiplayer game for example I use Czech bubbles on Parramatta kun to display a guest thoughts let's begin hello and welcome I'm your code monkey and this channel is all about helping you will learn how to make your own games with nf2 turns made by a professional indie game developer so if you find the video helpful consider subscribing okay so what we're going to create here is a very simple but very effective system we're going to show some text using some icon and display it above a character like I said I use this extensively in my own West game pattern real tycoon in order to display guest thoughts it's a very simple system designed to provide the player with a bit more information without having to go through a specific UI so if you have a game with lots of Units roaming around like some management or strategy game then this system is an excellent way of adding some extra information in an easy way okay so here is what we're trying to make I have some characters roaming around randomly and they randomly say some things which you can see popping up above their heads so we have an icon and a message and as you can see the message gets written over time so this is made using the text writer that we made in a previous video I'm also controlling my basic player character here and I can press a button and there's a very nice text input window which again also made in another video and in here I can say anything so I just write something press ok any of there you go there's my nice message so you can see how this system is useful for showcasing any type of text like download between characters or you can also use this in a multiplayer game for a basic chat display check out the code monkey app on Steam interactive tutorials complete games and more click knowing the description and add it to your wish list this video is made possible thanks to these awesome supporters go to patreon.com/scishow to code monkey to get some perks and help keep the videos free for everyone alright so this circle let's get to it okay so here we are in our starting scene I have my player character that I can move around and there's a bunch of NPCs just randomly roaming around all right so let's begin making our chat bubble so first of all the approach we're going to take is to make our chat bubble live in the world as a child of each NPC or player instead of doing it in the UI by doing it this way we essentially avoid some conversion so first let's begin by making new empty game object call the seed chat bubble and now inside let's make a 2d sprite this will be the background then duplicate and make one for the icon and then final let's right click create a 3d object of text mesh pro text so this will be our text now here my textures I have a simple chat bubble texture yep just like that and then for the icon I also have a whole bunch of random icons and for the sorting order over here I'm going to place them on the top layer so off the main sprites like the character and the NPCs live on the default layer then the background obviously on the background so this one won't be on top so it will show up on top of everything else set the background on top then the icon on top and increase the order by a bit and same thing for the text also go here to add or sorting layer on top and once again put around 10 and for the text let's align it on the left side put it down the middle for the width and height put both at 0 and down here and let's disable our wrapping alright so this is pretty much our setup we have a background a icon and the text now through code we're going to dynamically select the icon set the text and modify the background to fit to whatever text we write so let's make that script in you see sharp script call this our chat bubble and let's drag it on to our game object okay now in here let's first make a simple private void awake and let's grab all of our references all right so here we have all our references when working with text mesh crowd and forget to add the using statement now let's make a function to set our text let's call this our setup so we're going to set up our chat bubble and inside we just access the text mesh browser set the text and we pass in this text all right now just for testing let's countdown our start we call our setup and pass in a random string okay that should do it let's test any of there it is we have our chat bubble indeed saying our text all right so far so good now let's make our background actually match the text so here we're setting the text and now we need the background to match the size now we can get the visible render bounds by accessing the text mesh Pro object and call get rendered values so this returns a vector to with our size and now here we might get some issues in certain scenarios related to the text not rendering instantly so in order to avoid that from ever happening we can access our object to call our force mesh update so just adding this to make sure that it always works so here we have our render bounds now we just need to modify the size of the background and add a little extra padding so for the size the background we acts as a sprite renderer and we're going to modify the size and let's say the text size + V offset all right so just like this it should work however in order to make the size film actually be used we need to set our strike render to use these sliced mode so back in the editor here when we have our sprite renderer instead of drama being simple we modify this set to sliced so as you can see now we not also need to modify our chat bubble so let's select the texture in here so like the mesh from tight going into foam rect and hit apply now since we're looking at this we can also look at another issue which is now if we go back and we modify our width if there you go it actually does work however look at the corners when we increase it very further if there it is right there it's not really looking very good so again we can just go into the texture click on the sprite editor and in here we can simply drag our edges so this way the corners will not be stretched so if we hit apply and if there you go now that looks much better all right so everything is set up let's test any of there it is it doesn't need to have the exact perfect science if we stop and we place the background right down the middle of the word and if there you go it works it sounded perfect all right so the size is working correctly we just need to position it a bit differently and also add a bit more extra padding so that it does occupy also for the icon now with regard to positioning that is also going to depend on what you said here on these fright import settings here we have the pivot and right now it's at the center so one approach we could take is for example change this from the center and put it on the on website and now with the pivot on the left side we could simply move this to where we want and then just play around with that however this bright might also be used elsewhere in our game so if we modify the pivot we could possibly cause some unintentional breaking changes so instead let's leave it at the center and do some math to figure out where we want our background to be so back in the code here we have our padding and we are modifying the size and now first of all we need to add some extra padding in order to make sure that we also occupy the icon so here on let's just try this out and let's also try out a bigger message okay there it is with a bigger text message and now if we shift this to the right side just like that we can see yep the size is pretty much correct all right now we just need a position so we just take our spread trailer access the transform to modify the unload composition and let's just put that half the size so we're using at half of our size width let's see any of there it is correctly right down the middle of the text now we just need to shift it a bit and left to occupy the icon any of their lists so the text background and icon all match perfectly depending on what text is written awesome alright now let's customize our icon first let's make you known for all of our possible icon types so we have all of our types and now down here on our setup function we receive the text then let's also receive our icon type so now here we have to modify our sprite renderer dot sprite so let's make a function to get the icon okay we just do switch and now we need to return the sprite so up here and let's set some fields for it all right we have them and we just returned them down here all right so that's it very simple and then on our setup lets press in and right now let's say angry alright so finally in the editor now here we have our films and we just need to drag them alright let's test and if there's the chat bubble with our angry icon looking great awesome so functionally everything is pretty much working now let's just make our class more robust and very easy to use now we're going to do that by making the class itself be responsible for in Senshi ating of the chat bubbles I'm going to use a simple pattern that I've used many times so if you've seen my videos and this should be very familiar now here on our chat bubble let's simply make a public static void on create we receive a transform for the parent then in vector 3 for the own little composition and icon type and finally a string for our text now here we just call instantiate and we incent she ate our chat bubble prefab so that means that we're going to need our prefab reference so in my scene I have this game object with this game asset script now this class was fully created in a previous video it's extremely useful to grab asset references from elsewhere in our code so we really need to do is that a public field in this case for a transform let's commit for our prefab chat bubble so just a public field and we have a static instance now back in the editor we can see our field in here for our chat bubble so first let's make the chat bubble in to a prefab just drag it onto the folder yep and now here we drag our prefab reference right in there okay so with that we can now go here on our chat bubble to access the game assets as is the instance and we're at each half bubble Precog so in sin she ate our chat bubble as a child of this parent then we set the whole composition and then lastly we get the component of type chat bubble and we call our setup function and passing the icon type and E text all right so that's pretty much it now we have this function which is a static function that we can come from anywhere in our code and it will automatically spawn a chat bubble so let's try it now here in my scene I have a main game object it has this simple script here it is all it has is a reference to our player and all of the various NPCs so we can use this just for testing so let's make our private void start and on start let's spawn a chat bubble on top of the deployer so we access our chat bubble access the static create function passing the employer transform now we certain local position let's put it up and to the right now for a icon let's like neutral and now for some text alright that's pretty much it we just have this one function call and everything is handled automatically let's try and if there is each half bubble on top of the player and since it is a child of the player transform as I move the player yep there you go it also moves the text alright awesome so right now the chat bubble actually lives forever so this one will never go away so let's make it vanish after some time now in order to do that it's actually extremely simple we can use the destroy function this one takes an object and then we have an optional time parameter so we can tell it to destroy the chat bubble transform game object and then after some time so let's say after four seconds destroy the chat bubble we could also expose that as a parameter up here but just in this simple case this should work what says and yep there's our message and after four seconds we wait any up there we go the message gets a strike all right awesome okay so now let's polish this up and add a simple animation so let's open up our chat bubble prefab and in here and let's add a animation clip then we create a new animation alright so here it is a very basic animation just a fade in it automatically plays when the object is instantiated so everything should be working ok here we are any of there it is a nice and simple Faden so it fades in shows the message and gets destroyed now for some more polish let's add the text writer that we made in a previous video so here is the class that we made and we made it very easy to use all we need to do is just call one function so back in our chat bubble on the setup we first set the text we forced it to update in order to get the text size and then afterwards just for a visual let's use our text writer okay here we are and if there is a nice animation and a nice text writer so once again a great example of the power of writing clean code we made the text writer a long time ago and since we made it in a way that's very easy to use all it took was just one line of code and our chat bubble is now looking more polished now let's just randomly add some messages to all of the NPCs now in this script I have a simple array of all the NPC transforms and then a function to get a we're in the message so I just had our random messages alright so here it is I'm using the function periodic from the code monkey utilities which is almost like maghreb for free from unity Comic Con so this one similarly trigger this action every certain amount of time so we simply grab a random NPC transform from the array we grab a random message then a random icon and we simply call our nice function all right let's see menu here we are with all of our NPCs saying we're in the messages and all the chat buttons are working correctly they're animated they've got the text writer and everything looks pretty great alright awesome now let's go for one last thing so just for fun over here I have the nice input window which again was fully made in a previous video so yet another example of clean code so we can write something and click on submit let's use this don't let the player talk let's make a script to handle just that so a new script code our player taunt now here let's do our private Foley update and we're going to listen to the input get key down on the key code enter so when we press enter and let's say that we want the input window to show up okay so we have our input window with our nice static function again go watch the other video to see how all this was created from scratch but essentially we have an action which returns our input text so it's in here that we can spawn our chat power all right that's it what's test okay so here we are down to our NPC sing your random messages and I press ENTER and there you go there's the nice input window so let's say something and press ok and there you go there's our nice chat message so we can input whatever text we want we input whatever text we 1 press ok and there you go just like that we have a custom chat box so you can see how this simple chat button could be used as a very basic messaging system in a multiplayer game so here it is all of our chat bubbles at work and we wrote our code very nicely so all I need to do to add this to your game is just call the create function and everything is working perfectly this video is made possible thanks to these awesome supporters go to patreon.com/scishow to code monkey to get some perks and help keep the videos free for everyone as always you can download the project found in a tony's from minty Kermit calm subscribe the channel for more unity tutorials post any question comes and I'll see you next time you
