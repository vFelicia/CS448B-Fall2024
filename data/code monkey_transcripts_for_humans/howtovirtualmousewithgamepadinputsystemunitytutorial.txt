With timestamps:

00:00 - hello and welcome I'm your Kaki here's a
00:02 - simple tutorial on how to make a virtual
00:04 - cursor which acts like a mouse but you
00:06 - can drive it Using a Gamepad controller
00:08 - this is something that I need to make
00:09 - for my own game dinky Guardians by the
00:11 - way you can go pick it up on seam here's
00:13 - the game and as you can see I can
00:14 - control the character I can move it
00:16 - around with my controller and then as I
00:18 - inspect any building like this grab
00:19 - machine there you go now I've got a nice
00:21 - dot so I can control the mouse using my
00:23 - controller I can click on any of these
00:25 - and everything works perfectly I can do
00:27 - any kind of interaction just like I can
00:28 - if I move the mouse and there you go now
00:30 - I'm using the mouse and everything works
00:32 - and now I swap out the control and
00:34 - everything works perfectly so let's see
00:36 - how we can build a nice cursor that we
00:37 - control either with the mouse itself or
00:39 - with a game pad controller also if
00:41 - you're looking for a guided step-by-step
00:42 - path instead of individual tutorials and
00:44 - check out my complete courses start off
00:46 - with my free course AED at complete
00:47 - beginners which won teach you a ton then
00:49 - watch a followup free multiplayer course
00:52 - after that if you want something more
00:53 - advanced and check out my turnbas
00:54 - strategy course that one involves the
00:56 - making of a relatively complex game and
00:57 - of course the entire thing has a heavy
00:59 - focus on writing good clean code with a
01:02 - good project structure or in general for
01:04 - any Unity developer check out my
01:05 - ultimate unity overview course which has
01:07 - over 16 lectures each covering a
01:09 - different tool or feature of the engine
01:10 - that you might not know about check them
01:12 - all out with the link in the description
01:13 - okay so there are two ways you can
01:15 - Implement Gamepad menu logic in your
01:17 - game one is using the regular built-in
01:19 - gam pad navigation this one lets you
01:21 - define which button is selected and how
01:23 - to change the selection based on game
01:25 - pad input if you just have some simple
01:27 - buttons like for example just a main
01:28 - menu where all the buttons are organized
01:30 - vertically then for that the navigation
01:32 - system would work just fine but if you
01:34 - have some more complex interfaces like
01:36 - for example in my game which is an
01:38 - automation game so some of the UI is
01:39 - quite complex for those use cases having
01:42 - a virtual cursor is potentially a much
01:44 - better option now I was actually going
01:46 - to build this myself from scratch when I
01:47 - thought to search and see if the input
01:49 - system already has it and yep it turns
01:51 - out that it does although there are some
01:53 - really tricky things to get it working
01:55 - properly which took me quite a while to
01:56 - figure out so hopefully this video is
01:58 - helpful if you encounter some strange
02:00 - Behavior make sure you watch the video
02:01 - to the end I will try to cover all these
02:03 - strange issues that I encountered and
02:04 - how I solve them so first you should be
02:06 - using the input system if not if you've
02:09 - never used it then go watch my tutorial
02:11 - on it by the way over here on the
02:12 - package manager if you go under samples
02:15 - and you scroll down you can see the
02:16 - GamePad mouse cursor so if you want you
02:18 - can download their official sample and
02:19 - look at it then once you have the input
02:22 - system set up over here I've got my
02:24 - basic player input actions controller
02:26 - it's really just a super basic super
02:27 - barebone setup so there's nothing in
02:30 - here that is specific to the virtual
02:31 - Mouse just yet then in my Hier I've got
02:34 - my canvas so here it is I have it set up
02:36 - like this so it's in screen space
02:38 - overlay mode then for the kind of a
02:40 - scaler over here it is scale with screen
02:42 - size for the reference resolution I like
02:43 - to put it 1920 x 1080 then match with
02:46 - width or height and over here set the
02:48 - height to one and reference pixels of
02:50 - 100 so this is how I only set up my UI
02:53 - pretty basic now let's make a new game
02:54 - object inside UI so over here let's
02:56 - create an empty game object call it the
02:58 - virtual Mouse UI and now this part is
03:00 - extremely important on the right
03:02 - transform make sure you anchor this one
03:04 - over here on the lower left corner make
03:06 - sure it is anchored onto this one and
03:07 - then put zero on everything so zero on
03:09 - position x y z and also width and height
03:12 - also both at zero again this is very
03:14 - important if you leave it anchored on
03:16 - the center you will get some weird
03:18 - results also very important is make sure
03:20 - that this object is a direct child of
03:22 - the canvas if we make it a child of
03:24 - another game object that does not have
03:25 - the same size the same setup as the
03:27 - canvas if you do that it will not match
03:29 - and again you won't find some weird
03:30 - issues so make sure this one is set up
03:32 - Exel like this and make sure it is a
03:34 - direct channel of your canvas okay so
03:37 - now for the visual technically you can
03:38 - just go into add component over here add
03:40 - an image directly but personally I like
03:42 - to keep things organized and separated
03:44 - so I'm going to create a child UI image
03:46 - game object going to call this the mouse
03:49 - Visual and then for the Sprite in my
03:51 - project files I've got a simple Circle
03:53 - Sprite it is literally just a circle
03:55 - texture so there it is I'm going to move
03:57 - it over here just so it's a bit more
03:58 - visible although the position does not
04:00 - really matter what does matter is the
04:02 - size this is obviously way too big for a
04:04 - controller so let's go with something
04:05 - like 2020 so just a nice little dot in
04:08 - order to make sure that the dot does not
04:09 - become invisible just in case our
04:11 - background is white let's add a simple
04:13 - built-in outline so the outline
04:15 - component let's put it on 2x two and put
04:18 - it on black with full Alpha okay so
04:20 - that's our basic Visual and now another
04:22 - extremely important thing which is over
04:24 - here on the image on the recast Target
04:26 - make sure this one is not toggled this
04:28 - is very important if you only the toggle
04:30 - basically the virtual Mouse will be
04:31 - hitting this image and it will not
04:33 - interact with whatever button is behind
04:34 - it so again extremely important make
04:36 - sure this rast target is disabled and
04:39 - same thing on the parent make sure the
04:40 - anchors are set up correctly like this
04:42 - make sure width and height is zero and
04:44 - on this one make sure the anchor is over
04:46 - there on the middle and with whatever
04:48 - width and height you want again I'm
04:49 - repeating this several times because if
04:51 - you make one tiny mistake then
04:52 - everything will look very strange and
04:53 - you won't be very confused just like it
04:55 - happened to me okay so now let's go into
04:57 - the virtual mes UI game object and over
04:59 - here let's set a component and let's
05:00 - search for the virtual Mouse this is a
05:03 - built-in component from the input system
05:05 - here it is a virtual Mouse input and I
05:07 - let's begin by dragging the actual
05:09 - visual reference so the mouse visual
05:10 - drag this one again drag this one not
05:12 - the container so the underlying Mouse
05:14 - visual drag it for both the cursor
05:16 - graphic and the cursor transform then
05:18 - over here on cursor mode go ahead and
05:20 - leave it as software because we want to
05:21 - control this image and not control the
05:23 - actual Mouse Hardware cursor then for
05:25 - the speed let's put it a little bit
05:27 - faster so let's put it at 1,000 scroll
05:29 - speed let's leave it like that and then
05:31 - down here we have the various actions so
05:33 - you have pretty much every action that
05:35 - you would have on a mouse the most
05:36 - important ones are obviously the STI
05:38 - action in order to move our cursor and
05:40 - the left button in order to essentially
05:41 - fake a click now for defining these
05:43 - actions we have two options we can
05:44 - either add the action directly over here
05:46 - so let's click on the plus icon here and
05:49 - let's add a binding and now I have my
05:51 - Xbox One controller enabled so I'm going
05:53 - to double click this binding and over
05:55 - here on path let's click on it let's
05:57 - listen to input and I'm going to to
05:59 - assign the left stick on the game pad
06:01 - okay so I'm going to use the left stick
06:03 - in order to basically move the virtual
06:04 - cursor then for the left Mouse button
06:07 - again let's click on plus let's add a
06:09 - binding and double click and let's go
06:11 - into the path let's listen and I'm going
06:13 - to put it on the a so let's go button
06:15 - south on the game pad so this would be a
06:17 - on an Xbox controller or for example on
06:19 - a PlayStation controller this would be
06:21 - the cross and so on okay so that's how
06:23 - it is but like I said you can either add
06:25 - the action directly or you can use a
06:26 - reference now if you click on reference
06:28 - and basically you get this field and if
06:30 - you assign this field then basically you
06:32 - can assign any action that you need find
06:34 - in any player input actions so for the
06:36 - input actions over here all of the
06:38 - actions that you got here all of these
06:40 - various actions you can use them as
06:41 - reference in that one so for example in
06:43 - here instead of binding directly to the
06:45 - left sick you could bind directly to
06:46 - this action the benefit of that one
06:49 - would be if you rebind this action then
06:50 - you wouldn't need to update over here
06:52 - the virtual Mouse since it would always
06:54 - go through this action but to keep it
06:55 - simple for this example I'm going to use
06:57 - directly instead of using references I'm
06:59 - actually going to talk about this in a
07:00 - little bit because there was a sneaky
07:02 - issue over here that tripped me up but
07:03 - for now let's keep it just like this so
07:05 - just with this if we test okay here I am
07:08 - the game is playing and if I move my
07:09 - game pad stick and there you go it does
07:11 - indeed move the virtual cursor all right
07:13 - awesome so far so good now again if your
07:16 - cursor is not moving correctly again go
07:18 - back and double check your anchors here
07:20 - is how my Canabis is set up here is how
07:22 - the virtual Mouse UI set up and inside
07:24 - the mouse visual with all this we have
07:26 - everything working except now if I make
07:28 - a button so so I'm going to go inside
07:30 - the canvas create a new uui object let's
07:32 - make it a button and let's make it quite
07:34 - a bit bigger so something like this then
07:37 - just for testing let's modify over here
07:39 - the highlighted color so this is the
07:41 - color when the mouse is on top so let's
07:43 - put this on a green just so it's nice
07:45 - and visible by the way also remember how
07:47 - the Sorting works in the UI basically
07:49 - the Sorting order is based on the order
07:51 - in the hierarchy and things below when
07:53 - the rqy will actually render on top so
07:56 - since we want the virtual mesui to
07:57 - render on top let's make sure to drag
07:59 - this one to the bottom of the hierarchy
08:00 - so that it's above the button okay so
08:02 - with this let's test okay here I am and
08:05 - I can move and if I go above the button
08:07 - and nope it is not working the button is
08:09 - not changing color if I use the regular
08:12 - Mouse and I go above yep you can see it
08:14 - does recognize but the cursor the one by
08:16 - the game pad nope this one does not work
08:18 - so this is one of the main tricky issues
08:20 - that I encountered thankfully this one
08:21 - has a simple fix the fix is actually on
08:24 - the Hy let's go in the Advent system and
08:26 - up over here you do see a nice warning
08:28 - message basically it's telling you you
08:29 - should be using a different event system
08:31 - for the input module thankfully it's
08:33 - super simple literally just click on
08:35 - this button and there you go it replaced
08:36 - with a different component also before
08:38 - we test one very very important thing
08:40 - here which is on the game view over here
08:43 - make sure you are under full AG this is
08:45 - very important make sure it's full HD
08:46 - and not 16x9 or any other it needs to be
08:48 - full HD and on the K scalar over here
08:51 - make sure it is also 1080p so it needs
08:53 - to be 1080p both up here and down here
08:56 - I'll cover why this is extremely
08:57 - important in a bit and in the end of the
08:58 - video I'll cover the the solution to the
08:59 - problem but for now just make sure you
09:01 - have it set up exactly like this and now
09:03 - if we test again and now I move and yep
09:06 - now it does work if on your end it
09:08 - doesn't work then make sure you have
09:09 - full HD 1080p selected over here on the
09:11 - game View and also on the canvas same
09:13 - thing canvas scaler make sure it is full
09:15 - 1080p like this it is working however if
09:18 - I were to swap this out to 16 by9 note
09:21 - how over there the canvas scale that one
09:22 - is now at point4 instead of one it is
09:24 - under one so the canvas is basally
09:26 - scaled and now if I try moving the
09:28 - button over it it does not work but for
09:30 - some reason it works when I go onto this
09:31 - corner so that's a really strange issue
09:34 - that took me a lot of time to debug it
09:35 - has to do with the canvas scale I'll
09:37 - cover the solution a little bit after I
09:38 - cover some more potential problems but
09:40 - right now as long as you set it up here
09:42 - as full HD everything should work so I
09:44 - can move the cursor and yep it does work
09:46 - although in your case maybe it won't
09:48 - work I'm saying that because when I
09:50 - tested in my game actually for some
09:51 - reason this did not work now in this
09:53 - case it works so that's great but just
09:55 - in case it doesn't work for you like it
09:57 - didn't work for me let me go over what I
09:58 - did to to fix it I believe the issue may
10:00 - have been because I was already
10:02 - controlling the player with a player
10:03 - input actions whereas over here I really
10:05 - just have an empty project so basically
10:07 - when we click on that button it swapped
10:08 - out to this component and over here on
10:11 - this component you can see it used the
10:12 - default input actions asset so this is
10:14 - the one that is down here inside the
10:16 - actual packages so this is the default
10:18 - one now just in case you have issues
10:20 - here's what I did basically I just went
10:22 - into the over here this default input
10:24 - actions so the one inside the package I
10:27 - just open up this one then I just grabed
10:29 - the UI action map so just right click
10:31 - and let's copy this one okay close and
10:34 - now up here I went into my own player
10:36 - input actions which again I only had the
10:39 - player action map so then over here
10:41 - right click and paste and there you go
10:42 - now we have the UI input actions then I
10:45 - also went here onto the point action and
10:47 - for this one I added a new binding and
10:49 - for the path I found the virtual Mouse
10:52 - and yep I add this one the position for
10:54 - the virtual Mouse same thing over here
10:56 - on the click add a new binding go and
10:59 - search for virtual Mouse and for the
11:01 - left button on the virtual Mouse so just
11:04 - this and then save asset and then on the
11:06 - hierarchy back into the event system
11:08 - back into this component instead of
11:09 - using the default input actions let's
11:11 - assign the player input actions and just
11:13 - like that since we copy the action map
11:15 - everything should already be
11:16 - automatically matched so it should be
11:18 - using dii point and so on so all these
11:20 - should be matched exactly perfectly and
11:22 - now here if I move the controller cursor
11:24 - and if there you go it does work I go
11:25 - above and it does indeed turn green now
11:28 - again if you have isues on this one the
11:29 - main thing is on the mouse visual make
11:31 - sure rast Target is disabled if I enable
11:34 - this one and now I try moving above it
11:35 - nope you can see it does not change that
11:38 - is because basically the virtual cursor
11:39 - is hitting this image instead of hitting
11:41 - the button behind it so if this is the
11:43 - case make sure the visual has rast
11:45 - Target disabled and make sure there are
11:47 - no more visuals over here under the
11:48 - virtual mous UI make sure there are no
11:50 - more images nothing else that can
11:52 - basically block the virtual Mouse and if
11:54 - you do that then yep you should see this
11:56 - working so over here it works with the
11:57 - virtual cursor and it works works with
11:59 - the regular cursor okay so really that's
12:01 - pretty much it but let me cover some
12:03 - more potentially sneaky issues now
12:05 - there's one that is really very strange
12:07 - and it's actually on the virtual Mouse
12:09 - component as you can see down here we
12:11 - assigned the actions directly so just
12:12 - the move and the click action and as you
12:15 - saw in the editor this works perfectly
12:16 - there are no errors nothing no problem
12:19 - however if you make a build just like
12:20 - this you will get a ton of errors and
12:22 - not just errors but actually crashes as
12:24 - well now when I made the build just like
12:26 - this for the steam deck for my game it
12:28 - completely broke everything because it
12:29 - was triggering non-stop errors so
12:31 - basically the build would run on the
12:32 - steam deck and then immediately crash
12:34 - just because way too many errors and the
12:36 - error itself was some really strange
12:38 - argument exception now this one took me
12:40 - a real long time to figure out the cause
12:42 - and it turns out the cause is because
12:44 - all of these actions are not assigned
12:46 - apparently some of the backend code for
12:48 - the input system apparently that one
12:50 - assumes that these fields are always
12:52 - assigned for some reason that logic runs
12:54 - differently in a build than the editor
12:56 - so here in the editor there's no problem
12:57 - but apparently in a build it assumes
12:59 - these are always assigned so in order to
13:01 - prevent that error just make sure that
13:03 - you assign all of them so for example
13:05 - use the reference and then just drag all
13:07 - the references so inside my player input
13:09 - action for example for the middle click
13:10 - I'm just going to drag the same one
13:12 - again even if I don't use them because
13:13 - for example in my own game I never use
13:15 - middle clicks or right clicks but just
13:17 - go ahead and sign them just so they
13:18 - don't have that strange error okay so
13:21 - this should solve that strange issue now
13:23 - the next issue is potential conflicts
13:25 - with the menu navigation like I said in
13:27 - the beginning there are two ways to
13:28 - handle menu controller support is either
13:30 - with a virtual cursor or the navigation
13:32 - system if you don't even know what it is
13:34 - you can basically look at any button let
13:36 - me actually just take this button and
13:38 - duplicate and put another button over
13:39 - here off to the side now if you look
13:41 - inside the button component over here
13:43 - you see something called navigation and
13:44 - by default this will be set to automatic
13:47 - and then you've got this button saying
13:48 - visualize and if you click on it and you
13:50 - look on the scene view you can see a
13:51 - bunch of arrows so you can see there's
13:53 - one Arrow coming from this button onto
13:54 - this one another one from this one onto
13:56 - this one so basically what that means is
13:57 - if you have this button but selected and
13:59 - you move to the left then it's going to
14:01 - select this button and if you have this
14:02 - one selected move to the right and
14:04 - select this one now in order to easily
14:05 - visualize this let's select both buttons
14:07 - and over here on the selected color
14:09 - let's put something more visible so
14:10 - let's say a nice blue okay so now let's
14:13 - test this now here I'm going to use a
14:14 - little trick in order to select a button
14:16 - so basically I'm going to left click
14:18 - inside this button and then I'm going to
14:19 - release it outside the button just so I
14:21 - don't trigger a click and just like this
14:23 - Yep this one is now selected and now
14:26 - with this button selected and the
14:28 - navigation enabled now for my game pad
14:30 - stick I move to the right yep there you
14:32 - go it select this button and I move left
14:34 - and there you go select that one so
14:35 - that's how it works that's how the
14:37 - automatic navigation system works except
14:39 - of course if you have both this system
14:41 - and the virtual cursor obviously you've
14:43 - got some conflicts between the both of
14:44 - them so really you should pick just one
14:46 - or the other assuming that you want to
14:48 - use just the virtual Mouse and disable
14:50 - the automatic navigation for that you
14:52 - can either select the button and down
14:54 - here under navigation just set it to
14:56 - none that's one option however obviously
14:58 - it's quite tricky if you have tons and
15:00 - tons of individual buttons having to go
15:02 - and set this to none for all of them
15:03 - that's quite tricky so a better method
15:05 - is to just ignore that and then just go
15:08 - into the event system and over here we
15:10 - can see the action for move this is the
15:12 - action that actually moves which button
15:13 - is selected so for this one we can
15:15 - simply swap from navigate and go into
15:17 - none so basically we're going to have no
15:19 - input in order to trigger the navigation
15:21 - menu and with this now if we are and
15:23 - again let me click hold and release
15:25 - outside so that one is selected and now
15:27 - I move right on the stick and there you
15:29 - go it no longer selects that one so the
15:30 - navigation menu is no longer working and
15:32 - I can now just go up here click onto
15:34 - that one and I click onto that one and
15:35 - so on and everything works next we have
15:38 - one more issue and that is the game pad
15:39 - going off screen now this is a bit of a
15:42 - strange one because it seems like
15:44 - something that the input system should
15:45 - really have by default but apparently it
15:47 - doesn't so here I've got the game
15:49 - running and I've got side by side My
15:50 - Scene view so there's my cursor and and
15:53 - if I move it on to the left and I keep
15:54 - moving and there you go now my cursor
15:56 - was way off screen and now if I was
15:58 - player and I was only seeing this and
15:59 - now I move the game pad to the right
16:02 - there you go I can't see where's my
16:03 - cursor why is my cursor invisible that
16:05 - is because it is way off screen
16:07 - obviously you don't want this you don't
16:09 - want the cursor to ever leave the game
16:10 - screen now fixing this was actually
16:12 - quite a bit tricky it's another thing
16:14 - that took me quite a while to figure out
16:15 - we're going to need a script to do this
16:17 - so let's do that let's go ahead and
16:19 - create a new C script let's call it the
16:22 - virtual Mouse UI let's select the
16:24 - virtual Mouse UI and attach the script
16:27 - okay like this and let's open over here
16:29 - let's remove the regular code and let's
16:31 - write a simple private void late update
16:34 - we want it on late update just because
16:36 - we want to run this at the very end of
16:38 - the frame after the input system has
16:39 - done its movement and now here basically
16:41 - we just need to clamp the mouse position
16:43 - and we move it so first let's actually
16:45 - grab the virtual Mouse so let's go up
16:46 - here make a private make it of type
16:48 - virtual Mouse input which again this one
16:51 - exists inside using Unity engine. input
16:53 - system.ui so if your Visual Studio
16:55 - doesn't add automatically make sure you
16:57 - add this line so this is going to be our
16:59 - virtual Mouse input so that is that
17:01 - component that we saw so let's grab it
17:03 - so we can just grab it over here on an
17:05 - awake Let's see we get component of our
17:08 - virtual Mouse input and now that we have
17:10 - this over here on our late update we can
17:13 - go into this one and first we need to
17:14 - grab the current position so inside the
17:16 - virtual Mouse input let's grab the
17:18 - actual virtual Mouse so this is the
17:20 - actual mouse that that component drives
17:22 - and we can grab the position this one is
17:24 - a vector to control so let's grab the
17:26 - value which is the actual underlying
17:28 - Vector 2 so let's grab the vector 2 for
17:31 - the virtual Mouse position okay so we
17:35 - have this and obviously we just need to
17:37 - clamp this within the valid values so
17:39 - let's simply validate first the X so we
17:41 - can use math f. clamp clamp just in case
17:44 - you don't know this one takes a certain
17:46 - value and make sure it is within a
17:47 - minimum and a maximum so that's exactly
17:49 - what we want so let's clamp the virtual
17:51 - Mouse position. X and for the minimum
17:54 - let's put a minimum of zero and for the
17:56 - maximum let's use scre do with wi so
17:58 - there you go that makes sure that the
18:00 - virtual Mouse position never leaves the
18:01 - screen and let's do the exact same thing
18:03 - for the Y but for the Y we're going to
18:05 - clamp it to the height so that's e and
18:08 - that's e also by the way if you wanted
18:10 - to add some kind of Border just make
18:11 - sure it doesn't really reach the edge
18:13 - you could just add it here just some
18:14 - simple math so then when this position
18:16 - is clamped when this position is now
18:18 - validated then we can use the class
18:20 - input state which again this one exists
18:23 - inside Unity engine input system L level
18:25 - so make sure you add that and then we
18:27 - can call the function change
18:29 - and then this one takes a certain device
18:31 - so for the device let's go into the
18:32 - virtual Mouse input and inside virtual
18:35 - Mouse input let's grab the virtual Mouse
18:37 - and we're going to want to modify the
18:38 - position for that virtual Mouse and the
18:40 - position is going to be the new one that
18:41 - we saw so the virtual Mouse position
18:43 - okay so that's it basically we grab the
18:45 - position we clamp it within the valid
18:47 - values and then we set it again so let's
18:48 - test okay so here we are and if I move
18:51 - all the way over to the left and nope it
18:52 - no longer leaves the screen and I go up
18:54 - nope does not leave go down nope does
18:57 - not leave go to the right and nope does
18:58 - not leave so now the cursor is always
19:01 - inside the screen okay great now the
19:04 - next bug is the one that we saw a while
19:05 - ago sof up here is set as full HG and
19:08 - the scale of the canvas is one if I do
19:10 - that then yep it works look that I'm
19:11 - mousing over the buttons exactly as I
19:13 - should be but if I now Swap this out for
19:15 - 16 by9 and now I try to pass the cursor
19:18 - over there nope does not work and for
19:20 - some reason if I go let's say over here
19:22 - and there there you go the button is
19:25 - somehow for some reason all the way over
19:26 - here this is really range this is
19:28 - another issue that drove me insane for
19:30 - quite some time how the cursor is not on
19:32 - the actual cursor position so hopefully
19:35 - this video helps prevent you from going
19:36 - insane just like I did the problem has
19:38 - to do with scaling if the canvas is not
19:41 - scaled which happens if I set this one
19:42 - to f g like this there's no scaling and
19:45 - yep everything works but for some reason
19:46 - if there is scaling of any kind so over
19:49 - here it's at point4 and now for some
19:51 - reason it appears that the cursor itself
19:52 - that one is also being scaled so this
19:54 - strange position just so happen to be
19:56 - that one is at 04 so this one is about
19:58 - 40% of the actual position the
20:00 - difference from here to here thankfully
20:02 - the solution is pretty simple here in
20:04 - our virtual Mouse UI class let's just
20:06 - add a field let's make it a serialized
20:09 - field make it a wrecked transform for
20:11 - the canvas wed transform then here in
20:14 - the editor let's drag the reference of
20:16 - the canvas itself okay there it is and
20:18 - now we basically just need to do some
20:19 - math to correct it so for that let's do
20:21 - it on a regular update so on update
20:23 - let's grab the transform. local scale so
20:25 - that's the scale of the virtual Mouse
20:28 - and and for this one we're going to
20:29 - basically make it the inverse of the
20:30 - canvas R transform so we can invert it
20:33 - just do 1f / by the canvas Rec transform
20:35 - let's grab the local scale and since all
20:38 - of them are exactly the same the X Y and
20:40 - Z let's just grab the X but of course
20:42 - this is just a regular float so to
20:44 - convert this float into a vector 3 Let's
20:46 - just multiply it by Vector 3.1 also by
20:49 - the way since you're here just another
20:50 - quick tip if you want to make sure that
20:52 - the cursor is always on top you can use
20:54 - transform. set as last sibling and this
20:56 - will basically always move it to the end
20:58 - of the hierarchy just making sure that
20:59 - the virtual cursor is always on top okay
21:02 - so this should pretty much fix that
21:03 - issue basically we're going to scale
21:05 - this virtual Mouse up or down depending
21:07 - on the scaling of the canvas which
21:08 - should put it on the correct position
21:10 - let's see so here and first let's verify
21:12 - okay with f g with no scaling on the
21:14 - canvas itself so over here no scaling
21:16 - and as I move and Yep this one works and
21:18 - that button is over there okay works now
21:19 - let's scale it and now there's my cursor
21:23 - and as I move over that one yep it works
21:25 - and move over that one and yep it also
21:26 - works so not like this even if the
21:28 - canvas is scaled you can see that the
21:30 - cursor is now in the correct position so
21:32 - if I put the cursor visually over there
21:34 - over that button then yep it does
21:35 - trigger that button now of course then
21:37 - as we scale the virtual cursor this game
21:40 - object you can see that the visual
21:41 - scaled upwards so again if you want to
21:43 - counteract that you could do another
21:44 - basic math so you could just go inside
21:46 - the actual Mouse Visual and over here on
21:48 - this one let's say put this one on
21:50 - point4 to match that one and yep now we
21:51 - have the exact same size cursor but the
21:53 - important thing is just by doing that
21:54 - math now the cursor is visually exactly
21:56 - where it should be so then another thing
21:58 - is how to detect Mouse versus Gamepad so
22:01 - for that I'm going to Showcase code from
22:02 - my game in my game I can seamlessly swap
22:05 - between Mouse and gamad controls note
22:08 - how the virtual cursor only shows up
22:09 - when I actually touch the game pad so
22:12 - here's a code for how I identify which
22:14 - input is active in my game I've got a
22:16 - general game input class that does lots
22:18 - of things regarding input but the
22:20 - important thing for identifying that one
22:21 - is I simply have an inom so just a game
22:23 - device so it can either be the keyboard
22:25 - and mouse or the GamePad and then I
22:27 - simply got a field for the active game
22:29 - device then down here on the awake
22:31 - inside the awake I subscribe to this
22:33 - event this callback the onaction change
22:36 - inside the input system this one is
22:37 - going to get triggered pretty much
22:39 - anytime the player touches any input so
22:41 - that is going to call this function over
22:43 - here and then on this function this one
22:44 - takes two arguments and one of them is
22:46 - input action change so here I'm
22:48 - basically just testing the external
22:50 - phase for the action if it is an action
22:52 - performed if it's not then I'm just
22:53 - going to ignore it so if it is an action
22:55 - performed then I'm basically going to
22:57 - ignore if it is a virtual Mouse because
22:59 - again I'm only trying to chest between
23:00 - the GamePad and the actual Mouse so if
23:03 - it is a virtual Mouse and I don't care
23:04 - about it I'm going to ignore it if it
23:06 - isn't the virtual Mouse then I'm going
23:07 - to check if the input action action
23:09 - control device if it is of type Gamepad
23:11 - so if it is an Xbox controller or a
23:13 - PlayStation or switch or anything if it
23:15 - is a Gamepad then I'm basically going to
23:16 - change the active device to Gamepad and
23:18 - if it is not then I'm going to say that
23:19 - the keyboard mouse is active then this
23:21 - function over here this one just sets
23:23 - the active game device then I also
23:25 - either show or disable the regular
23:27 - cursor based on whether the keyboard
23:28 - mouse is enabled or not and then I'm
23:30 - going to fire off this event on game
23:32 - device changed and then I have this
23:34 - other script which is pretty much
23:35 - exactly the same thing that we saw the
23:37 - virtual cursor UI script and then on
23:39 - this one over here on start I am
23:41 - listening to that event on game device
23:42 - changes and when that changes over here
23:45 - I'm really just updating the visibility
23:47 - and I'm really just checking the game
23:48 - input instance if the game pad is the
23:51 - one that is active then I'm going to
23:52 - show it if not then I'm going to hide it
23:53 - and that literally just enables or
23:55 - disables this game object so y this is
23:57 - how I handle swapping between Mouse and
23:59 - gam pad in my game also one more note
24:01 - instead of using the built-in component
24:03 - you can actually just build yourself
24:04 - manually from scratch if you want to
24:06 - learn how to do that I suggest you look
24:08 - at Sam yam's excellent tutorial on it
24:10 - she covers how to create the underlying
24:12 - input object and how to manually move it
24:14 - okay so the virtual cursor is finally
24:16 - working and here is the exact same thing
24:17 - in my game so I can inspect any
24:19 - buildings whilst in here I am
24:20 - controlling the character just as usual
24:22 - and as I inspect the building yep I've
24:23 - got my virtual mouse cursor and I can
24:25 - move around I can fake click to select
24:28 - anything and I can do pretty much
24:29 - anything that I can do with a mouse this
24:31 - is actually a big part of the reason why
24:32 - it was so easy to make my game playable
24:34 - on a steam deck I just need a regular
24:36 - controller to control my character and
24:38 - then as I inspect any of these buildings
24:40 - I just need the virtual cursor
24:41 - controller just like I would with a
24:42 - mouse with all this and yep the entire
24:44 - game everything works perfectly with the
24:46 - controller if you like games with
24:47 - automation Colony building and defense
24:49 - mechanics then check out ninky Guardians
24:50 - on scene all right hope that's useful
24:52 - check out these videos to learn some
24:54 - more thanks to these awesome patreon
24:56 - supporters for making these videos as
24:58 - possible thank you for watching and I'll
25:00 - see you next
25:05 - [Music]
25:07 - time

Cleaned transcript:

hello and welcome I'm your Kaki here's a simple tutorial on how to make a virtual cursor which acts like a mouse but you can drive it Using a Gamepad controller this is something that I need to make for my own game dinky Guardians by the way you can go pick it up on seam here's the game and as you can see I can control the character I can move it around with my controller and then as I inspect any building like this grab machine there you go now I've got a nice dot so I can control the mouse using my controller I can click on any of these and everything works perfectly I can do any kind of interaction just like I can if I move the mouse and there you go now I'm using the mouse and everything works and now I swap out the control and everything works perfectly so let's see how we can build a nice cursor that we control either with the mouse itself or with a game pad controller also if you're looking for a guided stepbystep path instead of individual tutorials and check out my complete courses start off with my free course AED at complete beginners which won teach you a ton then watch a followup free multiplayer course after that if you want something more advanced and check out my turnbas strategy course that one involves the making of a relatively complex game and of course the entire thing has a heavy focus on writing good clean code with a good project structure or in general for any Unity developer check out my ultimate unity overview course which has over 16 lectures each covering a different tool or feature of the engine that you might not know about check them all out with the link in the description okay so there are two ways you can Implement Gamepad menu logic in your game one is using the regular builtin gam pad navigation this one lets you define which button is selected and how to change the selection based on game pad input if you just have some simple buttons like for example just a main menu where all the buttons are organized vertically then for that the navigation system would work just fine but if you have some more complex interfaces like for example in my game which is an automation game so some of the UI is quite complex for those use cases having a virtual cursor is potentially a much better option now I was actually going to build this myself from scratch when I thought to search and see if the input system already has it and yep it turns out that it does although there are some really tricky things to get it working properly which took me quite a while to figure out so hopefully this video is helpful if you encounter some strange Behavior make sure you watch the video to the end I will try to cover all these strange issues that I encountered and how I solve them so first you should be using the input system if not if you've never used it then go watch my tutorial on it by the way over here on the package manager if you go under samples and you scroll down you can see the GamePad mouse cursor so if you want you can download their official sample and look at it then once you have the input system set up over here I've got my basic player input actions controller it's really just a super basic super barebone setup so there's nothing in here that is specific to the virtual Mouse just yet then in my Hier I've got my canvas so here it is I have it set up like this so it's in screen space overlay mode then for the kind of a scaler over here it is scale with screen size for the reference resolution I like to put it 1920 x 1080 then match with width or height and over here set the height to one and reference pixels of 100 so this is how I only set up my UI pretty basic now let's make a new game object inside UI so over here let's create an empty game object call it the virtual Mouse UI and now this part is extremely important on the right transform make sure you anchor this one over here on the lower left corner make sure it is anchored onto this one and then put zero on everything so zero on position x y z and also width and height also both at zero again this is very important if you leave it anchored on the center you will get some weird results also very important is make sure that this object is a direct child of the canvas if we make it a child of another game object that does not have the same size the same setup as the canvas if you do that it will not match and again you won't find some weird issues so make sure this one is set up Exel like this and make sure it is a direct channel of your canvas okay so now for the visual technically you can just go into add component over here add an image directly but personally I like to keep things organized and separated so I'm going to create a child UI image game object going to call this the mouse Visual and then for the Sprite in my project files I've got a simple Circle Sprite it is literally just a circle texture so there it is I'm going to move it over here just so it's a bit more visible although the position does not really matter what does matter is the size this is obviously way too big for a controller so let's go with something like 2020 so just a nice little dot in order to make sure that the dot does not become invisible just in case our background is white let's add a simple builtin outline so the outline component let's put it on 2x two and put it on black with full Alpha okay so that's our basic Visual and now another extremely important thing which is over here on the image on the recast Target make sure this one is not toggled this is very important if you only the toggle basically the virtual Mouse will be hitting this image and it will not interact with whatever button is behind it so again extremely important make sure this rast target is disabled and same thing on the parent make sure the anchors are set up correctly like this make sure width and height is zero and on this one make sure the anchor is over there on the middle and with whatever width and height you want again I'm repeating this several times because if you make one tiny mistake then everything will look very strange and you won't be very confused just like it happened to me okay so now let's go into the virtual mes UI game object and over here let's set a component and let's search for the virtual Mouse this is a builtin component from the input system here it is a virtual Mouse input and I let's begin by dragging the actual visual reference so the mouse visual drag this one again drag this one not the container so the underlying Mouse visual drag it for both the cursor graphic and the cursor transform then over here on cursor mode go ahead and leave it as software because we want to control this image and not control the actual Mouse Hardware cursor then for the speed let's put it a little bit faster so let's put it at 1,000 scroll speed let's leave it like that and then down here we have the various actions so you have pretty much every action that you would have on a mouse the most important ones are obviously the STI action in order to move our cursor and the left button in order to essentially fake a click now for defining these actions we have two options we can either add the action directly over here so let's click on the plus icon here and let's add a binding and now I have my Xbox One controller enabled so I'm going to double click this binding and over here on path let's click on it let's listen to input and I'm going to to assign the left stick on the game pad okay so I'm going to use the left stick in order to basically move the virtual cursor then for the left Mouse button again let's click on plus let's add a binding and double click and let's go into the path let's listen and I'm going to put it on the a so let's go button south on the game pad so this would be a on an Xbox controller or for example on a PlayStation controller this would be the cross and so on okay so that's how it is but like I said you can either add the action directly or you can use a reference now if you click on reference and basically you get this field and if you assign this field then basically you can assign any action that you need find in any player input actions so for the input actions over here all of the actions that you got here all of these various actions you can use them as reference in that one so for example in here instead of binding directly to the left sick you could bind directly to this action the benefit of that one would be if you rebind this action then you wouldn't need to update over here the virtual Mouse since it would always go through this action but to keep it simple for this example I'm going to use directly instead of using references I'm actually going to talk about this in a little bit because there was a sneaky issue over here that tripped me up but for now let's keep it just like this so just with this if we test okay here I am the game is playing and if I move my game pad stick and there you go it does indeed move the virtual cursor all right awesome so far so good now again if your cursor is not moving correctly again go back and double check your anchors here is how my Canabis is set up here is how the virtual Mouse UI set up and inside the mouse visual with all this we have everything working except now if I make a button so so I'm going to go inside the canvas create a new uui object let's make it a button and let's make it quite a bit bigger so something like this then just for testing let's modify over here the highlighted color so this is the color when the mouse is on top so let's put this on a green just so it's nice and visible by the way also remember how the Sorting works in the UI basically the Sorting order is based on the order in the hierarchy and things below when the rqy will actually render on top so since we want the virtual mesui to render on top let's make sure to drag this one to the bottom of the hierarchy so that it's above the button okay so with this let's test okay here I am and I can move and if I go above the button and nope it is not working the button is not changing color if I use the regular Mouse and I go above yep you can see it does recognize but the cursor the one by the game pad nope this one does not work so this is one of the main tricky issues that I encountered thankfully this one has a simple fix the fix is actually on the Hy let's go in the Advent system and up over here you do see a nice warning message basically it's telling you you should be using a different event system for the input module thankfully it's super simple literally just click on this button and there you go it replaced with a different component also before we test one very very important thing here which is on the game view over here make sure you are under full AG this is very important make sure it's full HD and not 16x9 or any other it needs to be full HD and on the K scalar over here make sure it is also 1080p so it needs to be 1080p both up here and down here I'll cover why this is extremely important in a bit and in the end of the video I'll cover the the solution to the problem but for now just make sure you have it set up exactly like this and now if we test again and now I move and yep now it does work if on your end it doesn't work then make sure you have full HD 1080p selected over here on the game View and also on the canvas same thing canvas scaler make sure it is full 1080p like this it is working however if I were to swap this out to 16 by9 note how over there the canvas scale that one is now at point4 instead of one it is under one so the canvas is basally scaled and now if I try moving the button over it it does not work but for some reason it works when I go onto this corner so that's a really strange issue that took me a lot of time to debug it has to do with the canvas scale I'll cover the solution a little bit after I cover some more potential problems but right now as long as you set it up here as full HD everything should work so I can move the cursor and yep it does work although in your case maybe it won't work I'm saying that because when I tested in my game actually for some reason this did not work now in this case it works so that's great but just in case it doesn't work for you like it didn't work for me let me go over what I did to to fix it I believe the issue may have been because I was already controlling the player with a player input actions whereas over here I really just have an empty project so basically when we click on that button it swapped out to this component and over here on this component you can see it used the default input actions asset so this is the one that is down here inside the actual packages so this is the default one now just in case you have issues here's what I did basically I just went into the over here this default input actions so the one inside the package I just open up this one then I just grabed the UI action map so just right click and let's copy this one okay close and now up here I went into my own player input actions which again I only had the player action map so then over here right click and paste and there you go now we have the UI input actions then I also went here onto the point action and for this one I added a new binding and for the path I found the virtual Mouse and yep I add this one the position for the virtual Mouse same thing over here on the click add a new binding go and search for virtual Mouse and for the left button on the virtual Mouse so just this and then save asset and then on the hierarchy back into the event system back into this component instead of using the default input actions let's assign the player input actions and just like that since we copy the action map everything should already be automatically matched so it should be using dii point and so on so all these should be matched exactly perfectly and now here if I move the controller cursor and if there you go it does work I go above and it does indeed turn green now again if you have isues on this one the main thing is on the mouse visual make sure rast Target is disabled if I enable this one and now I try moving above it nope you can see it does not change that is because basically the virtual cursor is hitting this image instead of hitting the button behind it so if this is the case make sure the visual has rast Target disabled and make sure there are no more visuals over here under the virtual mous UI make sure there are no more images nothing else that can basically block the virtual Mouse and if you do that then yep you should see this working so over here it works with the virtual cursor and it works works with the regular cursor okay so really that's pretty much it but let me cover some more potentially sneaky issues now there's one that is really very strange and it's actually on the virtual Mouse component as you can see down here we assigned the actions directly so just the move and the click action and as you saw in the editor this works perfectly there are no errors nothing no problem however if you make a build just like this you will get a ton of errors and not just errors but actually crashes as well now when I made the build just like this for the steam deck for my game it completely broke everything because it was triggering nonstop errors so basically the build would run on the steam deck and then immediately crash just because way too many errors and the error itself was some really strange argument exception now this one took me a real long time to figure out the cause and it turns out the cause is because all of these actions are not assigned apparently some of the backend code for the input system apparently that one assumes that these fields are always assigned for some reason that logic runs differently in a build than the editor so here in the editor there's no problem but apparently in a build it assumes these are always assigned so in order to prevent that error just make sure that you assign all of them so for example use the reference and then just drag all the references so inside my player input action for example for the middle click I'm just going to drag the same one again even if I don't use them because for example in my own game I never use middle clicks or right clicks but just go ahead and sign them just so they don't have that strange error okay so this should solve that strange issue now the next issue is potential conflicts with the menu navigation like I said in the beginning there are two ways to handle menu controller support is either with a virtual cursor or the navigation system if you don't even know what it is you can basically look at any button let me actually just take this button and duplicate and put another button over here off to the side now if you look inside the button component over here you see something called navigation and by default this will be set to automatic and then you've got this button saying visualize and if you click on it and you look on the scene view you can see a bunch of arrows so you can see there's one Arrow coming from this button onto this one another one from this one onto this one so basically what that means is if you have this button but selected and you move to the left then it's going to select this button and if you have this one selected move to the right and select this one now in order to easily visualize this let's select both buttons and over here on the selected color let's put something more visible so let's say a nice blue okay so now let's test this now here I'm going to use a little trick in order to select a button so basically I'm going to left click inside this button and then I'm going to release it outside the button just so I don't trigger a click and just like this Yep this one is now selected and now with this button selected and the navigation enabled now for my game pad stick I move to the right yep there you go it select this button and I move left and there you go select that one so that's how it works that's how the automatic navigation system works except of course if you have both this system and the virtual cursor obviously you've got some conflicts between the both of them so really you should pick just one or the other assuming that you want to use just the virtual Mouse and disable the automatic navigation for that you can either select the button and down here under navigation just set it to none that's one option however obviously it's quite tricky if you have tons and tons of individual buttons having to go and set this to none for all of them that's quite tricky so a better method is to just ignore that and then just go into the event system and over here we can see the action for move this is the action that actually moves which button is selected so for this one we can simply swap from navigate and go into none so basically we're going to have no input in order to trigger the navigation menu and with this now if we are and again let me click hold and release outside so that one is selected and now I move right on the stick and there you go it no longer selects that one so the navigation menu is no longer working and I can now just go up here click onto that one and I click onto that one and so on and everything works next we have one more issue and that is the game pad going off screen now this is a bit of a strange one because it seems like something that the input system should really have by default but apparently it doesn't so here I've got the game running and I've got side by side My Scene view so there's my cursor and and if I move it on to the left and I keep moving and there you go now my cursor was way off screen and now if I was player and I was only seeing this and now I move the game pad to the right there you go I can't see where's my cursor why is my cursor invisible that is because it is way off screen obviously you don't want this you don't want the cursor to ever leave the game screen now fixing this was actually quite a bit tricky it's another thing that took me quite a while to figure out we're going to need a script to do this so let's do that let's go ahead and create a new C script let's call it the virtual Mouse UI let's select the virtual Mouse UI and attach the script okay like this and let's open over here let's remove the regular code and let's write a simple private void late update we want it on late update just because we want to run this at the very end of the frame after the input system has done its movement and now here basically we just need to clamp the mouse position and we move it so first let's actually grab the virtual Mouse so let's go up here make a private make it of type virtual Mouse input which again this one exists inside using Unity engine. input system.ui so if your Visual Studio doesn't add automatically make sure you add this line so this is going to be our virtual Mouse input so that is that component that we saw so let's grab it so we can just grab it over here on an awake Let's see we get component of our virtual Mouse input and now that we have this over here on our late update we can go into this one and first we need to grab the current position so inside the virtual Mouse input let's grab the actual virtual Mouse so this is the actual mouse that that component drives and we can grab the position this one is a vector to control so let's grab the value which is the actual underlying Vector 2 so let's grab the vector 2 for the virtual Mouse position okay so we have this and obviously we just need to clamp this within the valid values so let's simply validate first the X so we can use math f. clamp clamp just in case you don't know this one takes a certain value and make sure it is within a minimum and a maximum so that's exactly what we want so let's clamp the virtual Mouse position. X and for the minimum let's put a minimum of zero and for the maximum let's use scre do with wi so there you go that makes sure that the virtual Mouse position never leaves the screen and let's do the exact same thing for the Y but for the Y we're going to clamp it to the height so that's e and that's e also by the way if you wanted to add some kind of Border just make sure it doesn't really reach the edge you could just add it here just some simple math so then when this position is clamped when this position is now validated then we can use the class input state which again this one exists inside Unity engine input system L level so make sure you add that and then we can call the function change and then this one takes a certain device so for the device let's go into the virtual Mouse input and inside virtual Mouse input let's grab the virtual Mouse and we're going to want to modify the position for that virtual Mouse and the position is going to be the new one that we saw so the virtual Mouse position okay so that's it basically we grab the position we clamp it within the valid values and then we set it again so let's test okay so here we are and if I move all the way over to the left and nope it no longer leaves the screen and I go up nope does not leave go down nope does not leave go to the right and nope does not leave so now the cursor is always inside the screen okay great now the next bug is the one that we saw a while ago sof up here is set as full HG and the scale of the canvas is one if I do that then yep it works look that I'm mousing over the buttons exactly as I should be but if I now Swap this out for 16 by9 and now I try to pass the cursor over there nope does not work and for some reason if I go let's say over here and there there you go the button is somehow for some reason all the way over here this is really range this is another issue that drove me insane for quite some time how the cursor is not on the actual cursor position so hopefully this video helps prevent you from going insane just like I did the problem has to do with scaling if the canvas is not scaled which happens if I set this one to f g like this there's no scaling and yep everything works but for some reason if there is scaling of any kind so over here it's at point4 and now for some reason it appears that the cursor itself that one is also being scaled so this strange position just so happen to be that one is at 04 so this one is about 40% of the actual position the difference from here to here thankfully the solution is pretty simple here in our virtual Mouse UI class let's just add a field let's make it a serialized field make it a wrecked transform for the canvas wed transform then here in the editor let's drag the reference of the canvas itself okay there it is and now we basically just need to do some math to correct it so for that let's do it on a regular update so on update let's grab the transform. local scale so that's the scale of the virtual Mouse and and for this one we're going to basically make it the inverse of the canvas R transform so we can invert it just do 1f / by the canvas Rec transform let's grab the local scale and since all of them are exactly the same the X Y and Z let's just grab the X but of course this is just a regular float so to convert this float into a vector 3 Let's just multiply it by Vector 3.1 also by the way since you're here just another quick tip if you want to make sure that the cursor is always on top you can use transform. set as last sibling and this will basically always move it to the end of the hierarchy just making sure that the virtual cursor is always on top okay so this should pretty much fix that issue basically we're going to scale this virtual Mouse up or down depending on the scaling of the canvas which should put it on the correct position let's see so here and first let's verify okay with f g with no scaling on the canvas itself so over here no scaling and as I move and Yep this one works and that button is over there okay works now let's scale it and now there's my cursor and as I move over that one yep it works and move over that one and yep it also works so not like this even if the canvas is scaled you can see that the cursor is now in the correct position so if I put the cursor visually over there over that button then yep it does trigger that button now of course then as we scale the virtual cursor this game object you can see that the visual scaled upwards so again if you want to counteract that you could do another basic math so you could just go inside the actual Mouse Visual and over here on this one let's say put this one on point4 to match that one and yep now we have the exact same size cursor but the important thing is just by doing that math now the cursor is visually exactly where it should be so then another thing is how to detect Mouse versus Gamepad so for that I'm going to Showcase code from my game in my game I can seamlessly swap between Mouse and gamad controls note how the virtual cursor only shows up when I actually touch the game pad so here's a code for how I identify which input is active in my game I've got a general game input class that does lots of things regarding input but the important thing for identifying that one is I simply have an inom so just a game device so it can either be the keyboard and mouse or the GamePad and then I simply got a field for the active game device then down here on the awake inside the awake I subscribe to this event this callback the onaction change inside the input system this one is going to get triggered pretty much anytime the player touches any input so that is going to call this function over here and then on this function this one takes two arguments and one of them is input action change so here I'm basically just testing the external phase for the action if it is an action performed if it's not then I'm just going to ignore it so if it is an action performed then I'm basically going to ignore if it is a virtual Mouse because again I'm only trying to chest between the GamePad and the actual Mouse so if it is a virtual Mouse and I don't care about it I'm going to ignore it if it isn't the virtual Mouse then I'm going to check if the input action action control device if it is of type Gamepad so if it is an Xbox controller or a PlayStation or switch or anything if it is a Gamepad then I'm basically going to change the active device to Gamepad and if it is not then I'm going to say that the keyboard mouse is active then this function over here this one just sets the active game device then I also either show or disable the regular cursor based on whether the keyboard mouse is enabled or not and then I'm going to fire off this event on game device changed and then I have this other script which is pretty much exactly the same thing that we saw the virtual cursor UI script and then on this one over here on start I am listening to that event on game device changes and when that changes over here I'm really just updating the visibility and I'm really just checking the game input instance if the game pad is the one that is active then I'm going to show it if not then I'm going to hide it and that literally just enables or disables this game object so y this is how I handle swapping between Mouse and gam pad in my game also one more note instead of using the builtin component you can actually just build yourself manually from scratch if you want to learn how to do that I suggest you look at Sam yam's excellent tutorial on it she covers how to create the underlying input object and how to manually move it okay so the virtual cursor is finally working and here is the exact same thing in my game so I can inspect any buildings whilst in here I am controlling the character just as usual and as I inspect the building yep I've got my virtual mouse cursor and I can move around I can fake click to select anything and I can do pretty much anything that I can do with a mouse this is actually a big part of the reason why it was so easy to make my game playable on a steam deck I just need a regular controller to control my character and then as I inspect any of these buildings I just need the virtual cursor controller just like I would with a mouse with all this and yep the entire game everything works perfectly with the controller if you like games with automation Colony building and defense mechanics then check out ninky Guardians on scene all right hope that's useful check out these videos to learn some more thanks to these awesome patreon supporters for making these videos as possible thank you for watching and I'll see you next time
