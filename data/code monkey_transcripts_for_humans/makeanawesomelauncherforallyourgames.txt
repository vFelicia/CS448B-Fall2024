With timestamps:

00:00 - in this video we're going to make a
00:01 - launcher with unity
00:03 - this is very easy to do and it's exactly
00:05 - what i did to make the code monkey steam
00:07 - app
00:07 - it's a great project to build for
00:09 - example to organize all of your
00:11 - prototypes and mini games into one nice
00:13 - complete package
00:14 - let's begin
00:17 - [Music]
00:22 - hello and welcome i'm your code monkey
00:24 - and this channel is all about helping
00:25 - you learn how to make your own games
00:27 - with
00:27 - in-depth tutorials made by a
00:28 - professional indie game developer so if
00:30 - you find the video helpful consider
00:32 - subscribing
00:32 - okay so this is going to be a very
00:34 - simple video since this
00:36 - is quite easy to do the goal is to make
00:38 - a launcher very much like i did for the
00:40 - free code monkey steam app
00:42 - there's a link in the description in
00:43 - case you want to try it out
00:45 - now over here i have my three other
00:47 - minigames that we're going to launch
00:49 - so there's the top down shooter there's
00:51 - minesweeper
00:53 - and the wash your hands video game these
00:55 - are all standard windows builds
00:57 - and they were all made or showcased in
00:59 - previous videos so check those out link
01:01 - below
01:02 - this video is made possible thanks to
01:03 - these awesome supporters
01:05 - go to patreon.com unitycodemonkey to get
01:07 - some perks and help keep the videos free
01:09 - for everyone
01:10 - so okay here i am in my basic empty
01:13 - scene
01:14 - let's begin by making a basic ui for our
01:16 - launcher
01:17 - so first just go into the canvas and
01:20 - first let's make a container for all of
01:22 - our buttons
01:23 - so let's call this the launcher ui let's
01:26 - extend to occupy the whole thing
01:28 - all right that's the container now
01:31 - inside let's make a container for a
01:32 - button
01:33 - so for example let's call this the top
01:35 - down shooter button
01:37 - and then inside let's make a nice image
01:39 - so we can click on it
01:47 - alright so there it is now let's make
01:49 - this a simple button
01:51 - now if you want you can use the standard
01:53 - unity button
01:55 - here i'm going to use the button ui from
01:57 - the utilities which is always you can
01:59 - grab for free from unitycodemonkey.com
02:02 - and with this button class i can easily
02:04 - add some mouse over behavior just to
02:05 - make it look just a little bit better
02:07 - so let's just make a nice image that's
02:09 - going to be enabled when we mouse over
02:15 - all right now let's see this basic
02:16 - button in action so here it is and as i
02:19 - mouse over yep there you go there's the
02:21 - nice image all right so far so good now
02:23 - let's make our script to handle our
02:25 - actual launcher
02:26 - so a new c-sharp script call this the
02:28 - launcher ui
02:30 - let's drag it onto the launcher now in
02:32 - here we're going to launch our apps
02:34 - so let's first add the code to our mouse
02:36 - click so we make a private void awake
02:39 - and awake let's find our button
02:43 - we get the button component
02:50 - and we modify the click function so this
02:52 - is the action that will be triggered
02:54 - when we click on the button
02:57 - so it's in here that we want to launch
02:59 - the game now the way we're going to
03:00 - launch an external executable is with
03:02 - the process class
03:04 - and that class is inside using
03:07 - system.diagnostics
03:10 - now we can access the process class and
03:13 - inside we've got a very nice function
03:15 - called start
03:17 - and here you see that we have a string
03:19 - for the file name
03:20 - so that means that we're going to need
03:21 - the path to the actual executable
03:24 - and now in order to find the string for
03:26 - the path we're going to first start off
03:28 - by accessing
03:29 - application in order to get the data
03:31 - path so this will be the path to the
03:33 - assets folder
03:34 - okay so here i am in the explorer and
03:36 - this is our project
03:38 - now the builds for our games are inside
03:40 - this folder and in here we have the
03:42 - builds and the various builds
03:43 - so it's in here that we're going to
03:45 - construct a build for the actual
03:47 - launcher
03:48 - so let's first see that to see where the
03:50 - application.datapath won't go to
03:52 - so here let's just quickly make a build
03:54 - go into build settings and we're going
03:56 - to make a build
03:57 - and choose the belt folder and build
03:59 - okay so here we have our build created
04:02 - and now here the application.datapath
04:05 - will go
04:05 - towards the path inside this data folder
04:08 - so it won't give us this path up here
04:11 - and now our builds are on the folder
04:12 - above it and inside the folder builds
04:15 - so taking our current path we go into
04:17 - the folder above it with
04:18 - dot dot all right so now we're on this
04:21 - folder now we go inside builds
04:25 - and then inside builds in this case we
04:27 - want to launch a top-down shooter
04:29 - and then inside the actual executable is
04:32 - yep
04:32 - like this one
04:36 - all right so that's our complete path
04:37 - and that's all we need to send
04:39 - to our process okay so just like this
04:42 - our top-down shooter should be able to
04:43 - be played when we click on the button
04:46 - let's try so here we make the build
04:48 - again place it in the same place and let
04:50 - it run
04:56 - all right here's our build let's run
04:59 - okay here it is there's the button and
05:01 - click on it and you have the top down
05:03 - shooter starts playing so hit play
05:06 - and there you go now i'm playing the
05:07 - really nice top down shooter
05:10 - so everything works it's the exact same
05:12 - executable all right awesome
05:14 - and as soon as i quit from the actual
05:16 - game now i go back into our launcher
05:17 - alright so we've got the basics pretty
05:19 - much down now we can easily apply this
05:21 - to the other games and then expand upon
05:23 - it
05:33 - alright so i've added two more buttons
05:35 - for the two other games
05:36 - and just for fun i've gone ahead and
05:38 - swap the images for some simple videos
05:40 - so it just looks really nice okay now
05:43 - let's check out the code
05:45 - now here we just have to do the exact
05:46 - same thing for the other buttons
05:48 - so one of them is going to be the mine
05:50 - sweeper button
05:52 - and the wash your hands button
05:56 - now once again we need to modify the
05:58 - path
06:02 - all right so just like that it should be
06:03 - working once again let's test
06:06 - so that means we need to make our build
06:08 - and now one thing here which is
06:10 - previously you saw that launcher was
06:11 - launching on full screen
06:13 - now maybe that's what you want to happen
06:16 - however in this case i think for a
06:17 - launcher it makes more sense to be in an
06:19 - actual window
06:20 - so over here you can click on player
06:22 - settings which opens up this nice window
06:24 - and then in here you can change from
06:26 - full screen mode and set it to windowed
06:29 - and just set it default screen width and
06:31 - height so in this case let's go with
06:33 - 1280 by 720
06:34 - so just basic 720p so again this is not
06:37 - necessary just
06:38 - i find it better to have the launcher on
06:40 - an actual window rather than on phone
06:42 - screen
06:42 - so that's why it's nicely separated
06:44 - between what is the launcher and what
06:45 - are the games
06:46 - right so just like this let's launch it
06:51 - okay here we are let's open up the
06:52 - launcher
06:54 - and yep we have our very nice launcher
06:56 - window and now click on this one
07:01 - and there you go we are now inside the
07:02 - fully playable top-down shooter
07:04 - so just click roll around and yep
07:06 - everything works
07:08 - all right let's quit
07:12 - next week we've got the minesweeper so
07:14 - let's try
07:16 - and yep here we are now playing some
07:18 - minesweeper so there you go
07:20 - and yep
07:24 - and if there you go it does work and
07:26 - lastly the wash your hands video game
07:30 - and yep here we are inside our build so
07:32 - let's spray everything around
07:34 - on this one to wash his hands and yep
07:35 - there you go this is a really nice game
07:37 - all right so everything is working we
07:39 - can launch any of our games from our
07:41 - separate launcher app
07:42 - awesome okay so with all of the basics
07:45 - of the launcher fully working
07:46 - now let's expand upon it and play around
07:48 - with some things
07:49 - now over here when we call process dot
07:51 - start we can actually grab
07:53 - the active process reference so let's
07:55 - store that in a field
07:57 - so a private process for our process
08:02 - and when we start let's set it
08:05 - and then we can also make a private void
08:07 - update
08:09 - and one of the things that we can ask on
08:10 - the process is going to process
08:12 - and ask has exited so this one will be
08:16 - true
08:16 - if the process has exited
08:20 - okay so with this we know when it has
08:22 - exited and after it has
08:24 - let's set it to null so this one only
08:25 - triggers once
08:28 - and now in here let's show a really nice
08:30 - message here in our canvas let's add
08:32 - something on top
08:40 - okay so we have a nice little message
08:42 - window so we want to show this once the
08:44 - games are active and then hide it when
08:46 - no game is active
08:48 - so for that let's grab our message
08:55 - and by default let's hide it so set
08:58 - active to false
09:01 - then when a process is launched then we
09:03 - set it to true
09:06 - and afterwards when it exits then we set
09:09 - it back to phones
09:10 - all right so very basic very simple
09:12 - let's see if it's working
09:16 - okay here we are and now let's click
09:18 - let's launch minesweeper
09:20 - and if there you go as soon as it starts
09:21 - we can see the message and if i quit
09:23 - right away in here
09:24 - if there you go the message is gone so
09:25 - we are correctly identifying when the
09:27 - process is launched and when the process
09:29 - exits
09:30 - okay now let's customize the message
09:37 - okay we have a reference to our text now
09:39 - let's clean up our code a bit and make a
09:41 - proper function
09:49 - all right we have two separate functions
09:51 - so in here we hide it
09:53 - and on a week we also hide it
09:58 - and then on show we're going to call
10:00 - this function
10:07 - okay the message should be working let's
10:09 - test
10:13 - okay so here are let's run launching the
10:15 - wash your hands
10:16 - and yep we saw the message just briefly
10:18 - so the washer hands game is now running
10:20 - now we can all tab
10:21 - and yep there you go we can see the
10:23 - message so now go back into the game
10:25 - and now let's quit and if there you go
10:27 - the message is gone
10:28 - and now if we open up a different one
10:30 - yep there you go we see a different
10:31 - message and yep there you go it's gone
10:34 - alright so here we have our launcher
10:36 - fully working
10:37 - now as i was making the code monkey
10:38 - steam app i actually found an issue with
10:40 - this system
10:41 - the launcher for the code monkey steam
10:43 - app is actually pretty complex
10:44 - it has tons of videos playing so it was
10:47 - actually using up quite a bit of cpu and
10:49 - gpu
10:50 - so with that being used it was actually
10:52 - causing the underlying games to play
10:54 - much slower since the launcher was
10:55 - taking resources in the background
10:57 - now we can easily solve that by making
10:59 - sure that launcher does not run
11:01 - whilst it's in the background so to do
11:03 - that it's extremely simple
11:05 - over here on the launcher we can do it
11:07 - through code so we just access
11:09 - application and go into run in
11:10 - background and set this to false
11:12 - so don't make sure that the application
11:14 - does not run in the background
11:15 - another thing you can also do related to
11:17 - performance is access application the
11:20 - target frame rate
11:21 - just in case your launcher is running
11:23 - way too fast so you can limit it to
11:25 - let's say just 100 frames per second
11:28 - so just another option in case you have
11:29 - some performance issues
11:31 - so with this it should no longer go
11:33 - above 100 fps
11:34 - and it should not be running on the
11:36 - background another place where you can
11:37 - change that setting is going here onto
11:40 - build settings
11:40 - player settings and if down here you
11:43 - have one for run in background so you
11:44 - can just untick it in here
11:46 - or do it through code whatever you
11:47 - prefer so let's test
11:54 - okay here we are and the launch is
11:55 - running so we can see all the video is
11:57 - currently active
11:58 - now let's launch a game and there you go
12:00 - right away as soon as this window goes
12:02 - into the foreground
12:04 - that one now stops so the launcher is no
12:06 - longer taking up any resources
12:08 - and as soon as you quit and goes back to
12:09 - the foreground if there you go it goes
12:11 - back to being active
12:12 - so doing it this way you're not going to
12:14 - have any performance issues by using
12:15 - launcher to launch your actual games
12:18 - all right so that's pretty much it here
12:19 - we have a real nice launcher that we can
12:21 - use with some custom buttons all of them
12:23 - nicely polished with some nice videos
12:26 - and we can click on it and there you go
12:28 - now we are launching one of the games
12:30 - then click on another one and there you
12:31 - go we're launching another one and click
12:33 - on another one
12:36 - and yep here we are in full screen
12:38 - playing our full game
12:41 - so as you can see this is really simple
12:43 - and it's something you can easily build
12:45 - to organize all of your various
12:47 - prototypes or any games that you've made
12:49 - so perhaps if you're looking for a job
12:51 - you can make a launcher and attach it to
12:52 - your cv and that should help you really
12:54 - showcase your skills
12:56 - or you can also use it to launch
12:57 - anything you want from it you can run
12:59 - any executable you want so you could
13:01 - just make a really simple launcher with
13:03 - some nice visuals to
13:04 - have buttons to run all the programs
13:06 - that you normally use
13:07 - alright so if you found this video
13:09 - helpful consider liking and subscribing
13:11 - this video is made possible thanks to
13:13 - these awesome supporters
13:14 - go to patreon.com unitycodemonkey to get
13:17 - some perks and help keep the videos free
13:19 - for everyone as always you can download
13:20 - the project files and utilities from
13:22 - unitycodemonkey.com
13:23 - subscribe to the channel for more unity
13:25 - tutorials post any questions have any
13:27 - comments and i'll see you next time

Cleaned transcript:

in this video we're going to make a launcher with unity this is very easy to do and it's exactly what i did to make the code monkey steam app it's a great project to build for example to organize all of your prototypes and mini games into one nice complete package let's begin hello and welcome i'm your code monkey and this channel is all about helping you learn how to make your own games with indepth tutorials made by a professional indie game developer so if you find the video helpful consider subscribing okay so this is going to be a very simple video since this is quite easy to do the goal is to make a launcher very much like i did for the free code monkey steam app there's a link in the description in case you want to try it out now over here i have my three other minigames that we're going to launch so there's the top down shooter there's minesweeper and the wash your hands video game these are all standard windows builds and they were all made or showcased in previous videos so check those out link below this video is made possible thanks to these awesome supporters go to patreon.com unitycodemonkey to get some perks and help keep the videos free for everyone so okay here i am in my basic empty scene let's begin by making a basic ui for our launcher so first just go into the canvas and first let's make a container for all of our buttons so let's call this the launcher ui let's extend to occupy the whole thing all right that's the container now inside let's make a container for a button so for example let's call this the top down shooter button and then inside let's make a nice image so we can click on it alright so there it is now let's make this a simple button now if you want you can use the standard unity button here i'm going to use the button ui from the utilities which is always you can grab for free from unitycodemonkey.com and with this button class i can easily add some mouse over behavior just to make it look just a little bit better so let's just make a nice image that's going to be enabled when we mouse over all right now let's see this basic button in action so here it is and as i mouse over yep there you go there's the nice image all right so far so good now let's make our script to handle our actual launcher so a new csharp script call this the launcher ui let's drag it onto the launcher now in here we're going to launch our apps so let's first add the code to our mouse click so we make a private void awake and awake let's find our button we get the button component and we modify the click function so this is the action that will be triggered when we click on the button so it's in here that we want to launch the game now the way we're going to launch an external executable is with the process class and that class is inside using system.diagnostics now we can access the process class and inside we've got a very nice function called start and here you see that we have a string for the file name so that means that we're going to need the path to the actual executable and now in order to find the string for the path we're going to first start off by accessing application in order to get the data path so this will be the path to the assets folder okay so here i am in the explorer and this is our project now the builds for our games are inside this folder and in here we have the builds and the various builds so it's in here that we're going to construct a build for the actual launcher so let's first see that to see where the application.datapath won't go to so here let's just quickly make a build go into build settings and we're going to make a build and choose the belt folder and build okay so here we have our build created and now here the application.datapath will go towards the path inside this data folder so it won't give us this path up here and now our builds are on the folder above it and inside the folder builds so taking our current path we go into the folder above it with dot dot all right so now we're on this folder now we go inside builds and then inside builds in this case we want to launch a topdown shooter and then inside the actual executable is yep like this one all right so that's our complete path and that's all we need to send to our process okay so just like this our topdown shooter should be able to be played when we click on the button let's try so here we make the build again place it in the same place and let it run all right here's our build let's run okay here it is there's the button and click on it and you have the top down shooter starts playing so hit play and there you go now i'm playing the really nice top down shooter so everything works it's the exact same executable all right awesome and as soon as i quit from the actual game now i go back into our launcher alright so we've got the basics pretty much down now we can easily apply this to the other games and then expand upon it alright so i've added two more buttons for the two other games and just for fun i've gone ahead and swap the images for some simple videos so it just looks really nice okay now let's check out the code now here we just have to do the exact same thing for the other buttons so one of them is going to be the mine sweeper button and the wash your hands button now once again we need to modify the path all right so just like that it should be working once again let's test so that means we need to make our build and now one thing here which is previously you saw that launcher was launching on full screen now maybe that's what you want to happen however in this case i think for a launcher it makes more sense to be in an actual window so over here you can click on player settings which opens up this nice window and then in here you can change from full screen mode and set it to windowed and just set it default screen width and height so in this case let's go with 1280 by 720 so just basic 720p so again this is not necessary just i find it better to have the launcher on an actual window rather than on phone screen so that's why it's nicely separated between what is the launcher and what are the games right so just like this let's launch it okay here we are let's open up the launcher and yep we have our very nice launcher window and now click on this one and there you go we are now inside the fully playable topdown shooter so just click roll around and yep everything works all right let's quit next week we've got the minesweeper so let's try and yep here we are now playing some minesweeper so there you go and yep and if there you go it does work and lastly the wash your hands video game and yep here we are inside our build so let's spray everything around on this one to wash his hands and yep there you go this is a really nice game all right so everything is working we can launch any of our games from our separate launcher app awesome okay so with all of the basics of the launcher fully working now let's expand upon it and play around with some things now over here when we call process dot start we can actually grab the active process reference so let's store that in a field so a private process for our process and when we start let's set it and then we can also make a private void update and one of the things that we can ask on the process is going to process and ask has exited so this one will be true if the process has exited okay so with this we know when it has exited and after it has let's set it to null so this one only triggers once and now in here let's show a really nice message here in our canvas let's add something on top okay so we have a nice little message window so we want to show this once the games are active and then hide it when no game is active so for that let's grab our message and by default let's hide it so set active to false then when a process is launched then we set it to true and afterwards when it exits then we set it back to phones all right so very basic very simple let's see if it's working okay here we are and now let's click let's launch minesweeper and if there you go as soon as it starts we can see the message and if i quit right away in here if there you go the message is gone so we are correctly identifying when the process is launched and when the process exits okay now let's customize the message okay we have a reference to our text now let's clean up our code a bit and make a proper function all right we have two separate functions so in here we hide it and on a week we also hide it and then on show we're going to call this function okay the message should be working let's test okay so here are let's run launching the wash your hands and yep we saw the message just briefly so the washer hands game is now running now we can all tab and yep there you go we can see the message so now go back into the game and now let's quit and if there you go the message is gone and now if we open up a different one yep there you go we see a different message and yep there you go it's gone alright so here we have our launcher fully working now as i was making the code monkey steam app i actually found an issue with this system the launcher for the code monkey steam app is actually pretty complex it has tons of videos playing so it was actually using up quite a bit of cpu and gpu so with that being used it was actually causing the underlying games to play much slower since the launcher was taking resources in the background now we can easily solve that by making sure that launcher does not run whilst it's in the background so to do that it's extremely simple over here on the launcher we can do it through code so we just access application and go into run in background and set this to false so don't make sure that the application does not run in the background another thing you can also do related to performance is access application the target frame rate just in case your launcher is running way too fast so you can limit it to let's say just 100 frames per second so just another option in case you have some performance issues so with this it should no longer go above 100 fps and it should not be running on the background another place where you can change that setting is going here onto build settings player settings and if down here you have one for run in background so you can just untick it in here or do it through code whatever you prefer so let's test okay here we are and the launch is running so we can see all the video is currently active now let's launch a game and there you go right away as soon as this window goes into the foreground that one now stops so the launcher is no longer taking up any resources and as soon as you quit and goes back to the foreground if there you go it goes back to being active so doing it this way you're not going to have any performance issues by using launcher to launch your actual games all right so that's pretty much it here we have a real nice launcher that we can use with some custom buttons all of them nicely polished with some nice videos and we can click on it and there you go now we are launching one of the games then click on another one and there you go we're launching another one and click on another one and yep here we are in full screen playing our full game so as you can see this is really simple and it's something you can easily build to organize all of your various prototypes or any games that you've made so perhaps if you're looking for a job you can make a launcher and attach it to your cv and that should help you really showcase your skills or you can also use it to launch anything you want from it you can run any executable you want so you could just make a really simple launcher with some nice visuals to have buttons to run all the programs that you normally use alright so if you found this video helpful consider liking and subscribing this video is made possible thanks to these awesome supporters go to patreon.com unitycodemonkey to get some perks and help keep the videos free for everyone as always you can download the project files and utilities from unitycodemonkey.com subscribe to the channel for more unity tutorials post any questions have any comments and i'll see you next time
