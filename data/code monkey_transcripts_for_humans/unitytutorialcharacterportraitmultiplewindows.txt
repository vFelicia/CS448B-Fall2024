With timestamps:

00:00 - hello and welcome I'm your code monkey
00:02 - and in this video we're continuing to
00:03 - make a character portrait window we're
00:05 - going to add support from multiple
00:07 - windows at once
00:08 - let's get sir
00:12 - so we previously created our portrait
00:14 - window we can click the character to
00:16 - show the window and it shows a view of
00:18 - the character I can click this button to
00:20 - hide the window but if I click on this
00:23 - character and then on this one then the
00:25 - first one is no longer visible since we
00:27 - only have one window let's add support
00:29 - to be able to view both characters at
00:31 - once
00:31 - first let's spawn one window for a
00:33 - character so in order to do that let's
00:35 - convert our window into a prefab which
00:38 - won't be instantiated every time we
00:39 - click on a different character let's
00:41 - start off by making a new folder name it
00:44 - prefabs and make a new prefab and call
00:48 - it PF window character portrait let's
00:51 - drag our window into our prefab so this
00:54 - will we're going to instantiate per
00:56 - character okay so in our character
00:58 - portrait code so in here we're going to
01:01 - make a public static void show static
01:04 - this will be the static function that
01:06 - we're going to use to create new windows
01:09 - in here we're going to spawn our prefab
01:12 - now in order to spawn we need a
01:13 - reference to the prefab and our canvas
01:16 - now normally I would create a separate
01:18 - class to handle asset references but in
01:20 - order to keep this video focused on the
01:22 - character portrait window let's just add
01:23 - the references in here in our game
01:25 - handler so in here let me make a public
01:28 - static game handler for my instance and
01:31 - add a public canvas for my canvas and a
01:35 - public transform for the PF window
01:38 - character portrait again if you're using
01:41 - this in your own game make sure you
01:42 - place the acid references where they
01:44 - make sense on awake let's set the
01:46 - instance to this and on the character
01:49 - portrait let's instantiate the prefab
01:51 - into the canvas
01:52 - so in Senshi 8 the game handler the
01:55 - instance and grab the PF character
01:58 - portrait set the parent to our canvas
02:04 - transform parents and let's give it a
02:07 - random position so they don't spawn on
02:09 - top of each other
02:15 - okay let's grab the getcomponent
02:17 - of our window character portrait script
02:22 - and we're going to call the show
02:25 - function using the follow transform that
02:28 - we're going to receive in here send it
02:32 - in here now we want this class to only
02:34 - be accessed through this static function
02:36 - so let's make this show private okay so
02:40 - now on our game handler let's use the
02:42 - show static function instead of the
02:44 - normal show function in order to use
02:46 - static we're going to access the class
02:48 - directly instead of an instance and we
02:51 - no longer need this instance so let's
02:53 - drag our references in the editor and
02:55 - test alright so here I am and I should
02:58 - be able to spawn a new window every time
03:00 - we click on a character click on that
03:02 - one Windows Phones click on that one any
03:04 - Windows Phones yep there you go I can
03:07 - close them and open them again great all
03:10 - right so now as you can see there's an
03:12 - issue with the camera view it's finding
03:14 - two windows but they're both showing the
03:15 - same thing the reason is because we're
03:17 - using only one rendered texture we need
03:19 - to create a new rendered texture for
03:21 - each window so back in our character
03:24 - portrait script on our show let's create
03:27 - a new rendered texture let's apply this
03:33 - render texture to our camera so
03:36 - transform dog find our camera get the
03:40 - camera component and set the target
03:44 - texture to our render texture we also
03:48 - need to set the raw image to display
03:49 - this rendered texture so go into the
03:51 - transfer now find our raw image get the
03:55 - component of our raw image which is part
04:00 - of the using Unity engine UI get the raw
04:05 - image and set the texture to our render
04:07 - texture alright so we're now creating a
04:10 - render texture dynamically per each
04:12 - window let's give it a try and see if
04:14 - it's working okay here's the characters
04:17 - I click on this one and there's that
04:19 - camera
04:19 - and this one any creating new rendered
04:21 - texture so each window is now correctly
04:23 - displaying a separate view alright so
04:26 - now that the spawning
04:27 - seems to be working let's handle on our
04:29 - cleanup when we hide the window
04:31 - since we are instantiating a new
04:34 - character every time we use the show
04:36 - static we are no longer going to mess
04:38 - around with a set active so we can
04:40 - remove this from here and from here and
04:42 - remove the hide in there now on our hein
04:45 - first of all it's going to be private
04:47 - and hide will no longer actually hide
04:50 - the window but rather destroy it so
04:51 - let's rename this to a more accurate
04:53 - name and call it to destroy window so in
04:57 - here we're going to destroy our game
05:00 - object all right so let's test and
05:03 - everything should be exactly the same
05:04 - but now each window should be destroyed
05:06 - rather than simply hidden so here I am I
05:09 - can point this one in this one I can
05:10 - close and close and at all causes and if
05:13 - you check out the canvas you can see
05:15 - that it's completely empty I spawn one
05:17 - and there's one I close it and it
05:20 - vanishes okay great so now as you can
05:22 - see there is a potential issue I click
05:25 - on this camera and it shows the window
05:26 - as it should but I click again and it
05:28 - shows another window now this might be
05:30 - intended behavior for your game but
05:32 - chances are what you really want is only
05:33 - one window for a character so let's keep
05:36 - track of what windows are spawned and
05:38 - who they are following so in our code
05:40 - here in order to keep track of our
05:42 - windows and let's use a dictionary a
05:44 - private static dictionary now a
05:48 - dictionary contains a key and a value so
05:51 - we're going to use the follow transform
05:53 - as our key and a window character
05:55 - portrait as our valve window dictionary
06:00 - so on our show static when we are in sin
06:03 - she ating new windows let's first of all
06:06 - if it equals gnome let's instantiate our
06:10 - dictionary and before we spawn anything
06:14 - let's test if that key already exist in
06:17 - the dictionary
06:17 - so if dictionary that contains key and
06:21 - the key is going to be this phone will
06:23 - transform if it does contain that key
06:25 - then there's already window following
06:27 - this phone will transform so we don't
06:29 - want to spawn a duplicate so we only
06:31 - want to execute this code if the
06:33 - dictionary does not contain that King
06:36 - and after we do it
06:38 - we're
06:39 - - a sign into the follow transform into
06:42 - this key we're going to send our
06:44 - character portrait alright so as you can
06:46 - see on our show static we are calling it
06:49 - with a phone transform inside we're
06:51 - testing if our private dictionary is in
06:54 - Senshi ated if not then we instantiate
06:56 - it we're going to test if I don't worry
06:58 - contains a key to test whether or not a
07:01 - window following this particular
07:02 - transform is already spawned if it does
07:05 - not contain that key then no window is
07:08 - currently active so let's spawn a window
07:10 - and set it to show and phone with this
07:13 - transform and finally set this
07:15 - dictionary on this key to contain this
07:18 - window okay so now the spawning logic
07:21 - should be correct now when we destroy
07:23 - them let's remove the entry from the
07:24 - dictionary
07:26 - all right let's test it out so here I am
07:30 - I can click this one and choose that
07:31 - window click down choose our window now
07:34 - if I click again and there we go no more
07:37 - windows our spawn since this one is
07:38 - already in here if I hide it and I click
07:40 - it again it shows another one and same
07:43 - for this character can't spawn
07:45 - duplicates but I can close and hide it
07:47 - again great so there you have it we have
07:49 - added support for multiple windows
07:51 - showing different views and limited to
07:53 - one window per character in the next
07:55 - video we're going to add some character
07:57 - stats to our window as always you can
07:59 - download the project files in utilities
08:01 - from unity code monkey comm if you have
08:03 - any questions post them in the comments
08:04 - and I'll do my best to answer them
08:06 - subscribe for more videos and I'll see
08:07 - you next time

Cleaned transcript:

hello and welcome I'm your code monkey and in this video we're continuing to make a character portrait window we're going to add support from multiple windows at once let's get sir so we previously created our portrait window we can click the character to show the window and it shows a view of the character I can click this button to hide the window but if I click on this character and then on this one then the first one is no longer visible since we only have one window let's add support to be able to view both characters at once first let's spawn one window for a character so in order to do that let's convert our window into a prefab which won't be instantiated every time we click on a different character let's start off by making a new folder name it prefabs and make a new prefab and call it PF window character portrait let's drag our window into our prefab so this will we're going to instantiate per character okay so in our character portrait code so in here we're going to make a public static void show static this will be the static function that we're going to use to create new windows in here we're going to spawn our prefab now in order to spawn we need a reference to the prefab and our canvas now normally I would create a separate class to handle asset references but in order to keep this video focused on the character portrait window let's just add the references in here in our game handler so in here let me make a public static game handler for my instance and add a public canvas for my canvas and a public transform for the PF window character portrait again if you're using this in your own game make sure you place the acid references where they make sense on awake let's set the instance to this and on the character portrait let's instantiate the prefab into the canvas so in Senshi 8 the game handler the instance and grab the PF character portrait set the parent to our canvas transform parents and let's give it a random position so they don't spawn on top of each other okay let's grab the getcomponent of our window character portrait script and we're going to call the show function using the follow transform that we're going to receive in here send it in here now we want this class to only be accessed through this static function so let's make this show private okay so now on our game handler let's use the show static function instead of the normal show function in order to use static we're going to access the class directly instead of an instance and we no longer need this instance so let's drag our references in the editor and test alright so here I am and I should be able to spawn a new window every time we click on a character click on that one Windows Phones click on that one any Windows Phones yep there you go I can close them and open them again great all right so now as you can see there's an issue with the camera view it's finding two windows but they're both showing the same thing the reason is because we're using only one rendered texture we need to create a new rendered texture for each window so back in our character portrait script on our show let's create a new rendered texture let's apply this render texture to our camera so transform dog find our camera get the camera component and set the target texture to our render texture we also need to set the raw image to display this rendered texture so go into the transfer now find our raw image get the component of our raw image which is part of the using Unity engine UI get the raw image and set the texture to our render texture alright so we're now creating a render texture dynamically per each window let's give it a try and see if it's working okay here's the characters I click on this one and there's that camera and this one any creating new rendered texture so each window is now correctly displaying a separate view alright so now that the spawning seems to be working let's handle on our cleanup when we hide the window since we are instantiating a new character every time we use the show static we are no longer going to mess around with a set active so we can remove this from here and from here and remove the hide in there now on our hein first of all it's going to be private and hide will no longer actually hide the window but rather destroy it so let's rename this to a more accurate name and call it to destroy window so in here we're going to destroy our game object all right so let's test and everything should be exactly the same but now each window should be destroyed rather than simply hidden so here I am I can point this one in this one I can close and close and at all causes and if you check out the canvas you can see that it's completely empty I spawn one and there's one I close it and it vanishes okay great so now as you can see there is a potential issue I click on this camera and it shows the window as it should but I click again and it shows another window now this might be intended behavior for your game but chances are what you really want is only one window for a character so let's keep track of what windows are spawned and who they are following so in our code here in order to keep track of our windows and let's use a dictionary a private static dictionary now a dictionary contains a key and a value so we're going to use the follow transform as our key and a window character portrait as our valve window dictionary so on our show static when we are in sin she ating new windows let's first of all if it equals gnome let's instantiate our dictionary and before we spawn anything let's test if that key already exist in the dictionary so if dictionary that contains key and the key is going to be this phone will transform if it does contain that key then there's already window following this phone will transform so we don't want to spawn a duplicate so we only want to execute this code if the dictionary does not contain that King and after we do it we're a sign into the follow transform into this key we're going to send our character portrait alright so as you can see on our show static we are calling it with a phone transform inside we're testing if our private dictionary is in Senshi ated if not then we instantiate it we're going to test if I don't worry contains a key to test whether or not a window following this particular transform is already spawned if it does not contain that key then no window is currently active so let's spawn a window and set it to show and phone with this transform and finally set this dictionary on this key to contain this window okay so now the spawning logic should be correct now when we destroy them let's remove the entry from the dictionary all right let's test it out so here I am I can click this one and choose that window click down choose our window now if I click again and there we go no more windows our spawn since this one is already in here if I hide it and I click it again it shows another one and same for this character can't spawn duplicates but I can close and hide it again great so there you have it we have added support for multiple windows showing different views and limited to one window per character in the next video we're going to add some character stats to our window as always you can download the project files in utilities from unity code monkey comm if you have any questions post them in the comments and I'll do my best to answer them subscribe for more videos and I'll see you next time
