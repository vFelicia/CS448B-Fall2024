With timestamps:

00:00 - in this video we're going to make an
00:01 - enemy view cone to detect the player
00:03 - this is a line-of-sight effect that
00:05 - interacts with walls that the enemies
00:06 - cannot see through if the player is
00:08 - found inside the view cone it's game
00:09 - over let's begin
00:13 - [Music]
00:18 - hello and welcome I'm your code monkey
00:20 - and this channel is all about helping
00:21 - you learn how to make your own games
00:23 - with nf2 torrents made by a professional
00:25 - indie game developer so if you find the
00:27 - video helpful consider subscribing so in
00:30 - a previous video we made this very nice
00:31 - film the view effect it's attached to
00:33 - the player and as I move around you can
00:35 - see the effect interact with the various
00:37 - walls and now in this video we want to
00:39 - take this effect and apply it to the
00:41 - enemies instead of the player an example
00:43 - of this type of effect being used is in
00:45 - the awesome commandos and thus proudest
00:47 - games I spent a lot of time during my
00:49 - childhood playing those games and always
00:50 - loved the view con mechanic that's also
00:52 - one of the reasons why my very first
00:54 - Unity game survivor squad was using this
00:56 - same effect you can pick up that game
00:58 - and its sequel include an indie game
01:00 - bundle so this is our final goal Here I
01:03 - am moving around in my ninja character
01:05 - and the enemies as you can see are
01:06 - patrolling around and each of them has a
01:09 - nice view come the view cone is the
01:11 - online of side effect where it collides
01:12 - with our walls so if I send behind this
01:15 - wall I'm perfectly safe however if I
01:18 - step inside the view cone and there you
01:20 - go he targets and shoot me instantly now
01:22 - I can hit restart and I mean here let's
01:25 - try to avoid them and go through the
01:26 - home map so that one is coming down now
01:29 - wait
01:29 - and now he's doing your way now I can go
01:31 - through I try to go and go through these
01:33 - two and now wait for this one and when
01:36 - he goes down he goes away now pass and
01:39 - run and yep there you go I've reached my
01:41 - trophy and I won the model all right
01:43 - awesome
01:43 - so just like this I've made it and won
01:45 - this nice stealth minigame alright so
01:47 - this is our goal let's get to it so
01:50 - here's our starting effect we're
01:51 - starting where we left off in the field
01:53 - of view video in that video we created
01:55 - this effect come only from scratch so
01:57 - check the link in the description and
01:59 - now in here the first thing we want is
02:01 - to apply this same effect but to the
02:03 - enemies inside of the player so here's
02:05 - the scene from the end of the previous
02:06 - video as you can see I have the
02:08 - character and then the field of view and
02:10 - here we are in this scene which has a
02:12 - nice level of these shadows here are the
02:15 - various enemies and we start down here
02:17 - and have to reach the trophy at the end
02:19 - in there so here we have the field of
02:21 - view from previous video let's see how
02:22 - this is working the way that it's
02:24 - working is essentially by having a
02:26 - civilized field for our field of view
02:28 - script and then on update we can set the
02:30 - in direction and set the organ all right
02:32 - so now instead of using this in here
02:34 - let's use it in our enemy code here is
02:37 - the enemy script now in here the way
02:39 - this script is set up isn't really
02:40 - relevant for our effect he's just
02:42 - walking around a certain patron path
02:43 - here they are in our scene as you can
02:46 - see all of them they go from certain
02:48 - positions and they fall with their
02:50 - patron ok so here on the script let's do
02:53 - what we did for the other one we're
02:55 - going to add a serious film for our
02:57 - field of view ok and then we just need
03:03 - to go into our update and here on our
03:05 - update we simply call set the origin to
03:07 - be this transform dot position and we
03:12 - also call set the aim direction all
03:18 - right so just like that with two
03:19 - function calls we should be able to see
03:21 - it working so back in the editor and
03:23 - let's just apply to this enamine here so
03:26 - we drag the film to view script onto
03:28 - that field okay and now let's test and
03:31 - yep there it is just like that you can
03:33 - see that this enemy now has a field of
03:35 - view effect and as you can see it is
03:37 - correctly interacting with the walls and
03:38 - we can pause and here we can see that
03:41 - the mesh is indeed correct all right
03:43 - awesome so you can see how simple this
03:45 - was to have because of how cleanly we
03:47 - created our original class
03:49 - there's no references to the player
03:50 - directly so our code is very clean and
03:52 - easy to reuse so now with this working
03:54 - let's apply to all our other enemies now
03:57 - here in the editor we could just
03:59 - duplicate this game object and set it
04:01 - like with it for this one but that would
04:02 - be a bit messy so let's set it up on the
04:04 - enemy start method instead so for that
04:07 - we're going to want to instantiate this
04:08 - game object so let's drag it into here
04:10 - in order to make a prefab okay there it
04:12 - is now here on the enemy class let's set
04:15 - a field for the prefab instead and then
04:20 - we're just going to have a normal field
04:22 - of view okay
04:24 - let's drag the prefab reference here we
04:27 - are and let's drag this reference okay
04:29 - and now here let's go into our start
04:31 - method and in here let's instantiate our
04:33 - prekow
04:40 - so we instantiate our prefab then we get
04:42 - the component field of view in order to
04:44 - get our new field of view alright so
04:46 - that should do it
04:47 - let's see and if there it is and now all
04:50 - of our enemies now have their own field
04:52 - of view so you can see all of them
04:54 - already have it and it's all very nice
04:56 - right awesome now let's make the angle
04:58 - and view distance customizable for each
05:00 - enemy so up here let's just add two more
05:03 - fields let's add a float for the fov and
05:10 - then another float for the view business
05:12 - and here the way we create our field of
05:15 - view class makes this very easy we can
05:18 - simply go into it and we set the fov to
05:20 - this fov and set the view distance
05:25 - alright there it is very nice now we can
05:28 - go into the editor and here each enemy
05:30 - now has the fields in here for the FOV
05:32 - and view distance
05:48 - and yep here we are and you can see that
05:50 - each enemy does indeed have a different
05:53 - film the view and view distance so here
05:55 - we are these are very short down very
05:57 - low and so on right great
05:59 - now let's deal with the enemy actually
06:01 - detecting the player so here on our
06:03 - enemy script and let's go to our update
06:05 - and here we're going to make a function
06:08 - let's going with find target player and
06:15 - we're going to call this on our update
06:19 - ok so now in this function let's first
06:22 - comment like just the distance to the
06:24 - player so we're going to do an if a
06:25 - vector 3 dot distance between this
06:28 - position and the player position and if
06:32 - that distance is under our view distance
06:38 - then the player is inside the V distance
06:41 - so if he is let's start attacking ok so
06:47 - here we are and let's test it out with
06:49 - this enemy so I go in here now its move
06:52 - inside his view distance and if there
06:54 - yogi attacked me instantly ok great so
06:57 - we are correctly testing the player
06:58 - distance now obviously we also need to
07:01 - test for the angle so here we just view
07:03 - distance you can see that if I go out
07:05 - here in theory I'm outside of his angle
07:07 - but we're just asking for distance so he
07:09 - hits me instantly all right so now that
07:11 - we're currently testing distance let's
07:13 - also test for the angle so okay here we
07:15 - are we're testing inside distance all
07:17 - right now in here on let's calculate the
07:19 - direction to the player so here we have
07:26 - our direction to the player and now in
07:28 - here we need to calculate the angle
07:30 - between the direction to the player and
07:31 - our actual aim direction now unity
07:34 - already has a great function to do just
07:35 - that it's the vector three angle this
07:39 - returns the angle in degrees between a
07:41 - from and a 2 so it has the angle between
07:44 - the aim direction and the direction to
07:46 - the player so this returns our angle now
07:49 - we need to do is test if this angle is
07:51 - less than our film review so if it's
07:53 - less than the FOV
07:58 - however in here the film the view
08:01 - variable contains the total field of
08:03 - view since we are completing the angle
08:05 - from the middle direction we're going to
08:07 - be inside the field of view if we are
08:08 - smaller than half of the field of view
08:10 - okay let you do it
08:12 - let's test here we are again there is
08:15 - our enemy now let's move in here on the
08:18 - side and let's go inside his view
08:20 - distance any of there you go he cannot
08:22 - spot me since I am NOT inside his field
08:24 - of view and now I move from the side
08:26 - into his field of view any of there you
08:28 - go he finds me instantly and shoots me
08:30 - all right awesome
08:31 - now the last thing we need is to make
08:32 - sure that the player is actually visible
08:34 - inside the field of view so as you can
08:36 - see his film the view goes all the way
08:37 - in here then the view this isn't here
08:39 - but in here it's walked by that wall so
08:41 - in theory if I go in there I shouldn't
08:42 - be spotted but right now yep I am
08:44 - spotter okay so let's deal with that
08:46 - okay so back in here we're testing for
08:49 - the view distance then for the field of
08:51 - view and finally let's also make sure
08:53 - that there is nothing in between the
08:54 - enemy and the player so here we can
08:57 - simply go into our physics 2d to do a
08:59 - nice ray cast the origin is this get
09:02 - position for direction is the direction
09:05 - to the player and for distance let's do
09:07 - our view distance so this returns a ray
09:10 - cast hit 2d and I'm here what's test if
09:17 - we hit something so if the color is not
09:20 - known then we hit something and now
09:22 - let's test if that something is the
09:24 - player
09:31 - so here we go into the game object we
09:33 - get the player component if it is not
09:35 - known then we have hit the player so
09:37 - here we start hitting him and if it is
09:39 - not the player then we hit something
09:40 - else so we ignore it
09:41 - alright let's see ok Here I am there's
09:44 - the enemy first let's try on this side
09:46 - and if there you go I'm inside the V
09:47 - distance but not inside the fov so he's
09:49 - not hitting me now let's go into the
09:51 - other side and let's go inside in here
09:54 - let's wait for them to go go inside and
09:57 - yep he's not hitting me and now if I
09:59 - move inside his field of view yep there
10:01 - you go he starts eating me right awesome
10:04 - so we now have our nice and min
10:05 - detection working they test for inside
10:08 - the view distance then inside the field
10:10 - of view and finally not hidden behind
10:11 - anyone so again here we are and that
10:14 - enemy can only spot me if I'm inside
10:16 - these view distance inside the field of
10:18 - view and not hiding behind so in here
10:20 - I'm fine and I can move in here and now
10:23 - I try to go and I that insulin so just
10:26 - like this we already have a very nice
10:27 - effect that would be suitable for any
10:29 - sort of stealth or horror game ok so now
10:31 - I can try to make my way through the
10:33 - entire map and reach my goal
10:34 - so get past this one ok now that one is
10:36 - coming wait for him to go it's coming
10:39 - wait and yep now I go now go go go
10:42 - yep now I'm in here now wait for both of
10:45 - them and yep now that one is going wait
10:51 - for him to go there now let's wait for
10:52 - him to go back and yep and there you go
10:57 - I want I got the trophy alright awesome
11:00 - so this is a really great fact if you're
11:02 - working on any sort of stealth or horror
11:04 - game you can use it on the player like
11:06 - we did in the previous video or add it
11:08 - to the enemies like in here now you
11:10 - could expand upon this further to
11:12 - implement the crop zone like in
11:13 - commandos and the Sprouse you could also
11:16 - add a smooth rotation to the enemy so
11:18 - their view cones were easier to avoid if
11:20 - you want to see the underlying field of
11:21 - view effect using a complete game then
11:23 - check out my survivor squad games
11:25 - included in the game bundle those games
11:27 - are all about controlling your survivors
11:29 - and managing each field of view to make
11:31 - sure you cover all the corners
11:32 - personally I really enjoy it and
11:34 - survivor squad gauntlets is definitely
11:36 - one of my favorite games so go play it
11:38 - to see how you can apply this effect to
11:40 - your own games as always you can
11:42 - download the project
11:43 - the attorneys from mythical Malcolm
11:45 - subscribe to channel for more inti
11:47 - tutorials post any questions you have in
11:49 - the comments and I'll see you next time
11:52 - [Music]

Cleaned transcript:

in this video we're going to make an enemy view cone to detect the player this is a lineofsight effect that interacts with walls that the enemies cannot see through if the player is found inside the view cone it's game over let's begin hello and welcome I'm your code monkey and this channel is all about helping you learn how to make your own games with nf2 torrents made by a professional indie game developer so if you find the video helpful consider subscribing so in a previous video we made this very nice film the view effect it's attached to the player and as I move around you can see the effect interact with the various walls and now in this video we want to take this effect and apply it to the enemies instead of the player an example of this type of effect being used is in the awesome commandos and thus proudest games I spent a lot of time during my childhood playing those games and always loved the view con mechanic that's also one of the reasons why my very first Unity game survivor squad was using this same effect you can pick up that game and its sequel include an indie game bundle so this is our final goal Here I am moving around in my ninja character and the enemies as you can see are patrolling around and each of them has a nice view come the view cone is the online of side effect where it collides with our walls so if I send behind this wall I'm perfectly safe however if I step inside the view cone and there you go he targets and shoot me instantly now I can hit restart and I mean here let's try to avoid them and go through the home map so that one is coming down now wait and now he's doing your way now I can go through I try to go and go through these two and now wait for this one and when he goes down he goes away now pass and run and yep there you go I've reached my trophy and I won the model all right awesome so just like this I've made it and won this nice stealth minigame alright so this is our goal let's get to it so here's our starting effect we're starting where we left off in the field of view video in that video we created this effect come only from scratch so check the link in the description and now in here the first thing we want is to apply this same effect but to the enemies inside of the player so here's the scene from the end of the previous video as you can see I have the character and then the field of view and here we are in this scene which has a nice level of these shadows here are the various enemies and we start down here and have to reach the trophy at the end in there so here we have the field of view from previous video let's see how this is working the way that it's working is essentially by having a civilized field for our field of view script and then on update we can set the in direction and set the organ all right so now instead of using this in here let's use it in our enemy code here is the enemy script now in here the way this script is set up isn't really relevant for our effect he's just walking around a certain patron path here they are in our scene as you can see all of them they go from certain positions and they fall with their patron ok so here on the script let's do what we did for the other one we're going to add a serious film for our field of view ok and then we just need to go into our update and here on our update we simply call set the origin to be this transform dot position and we also call set the aim direction all right so just like that with two function calls we should be able to see it working so back in the editor and let's just apply to this enamine here so we drag the film to view script onto that field okay and now let's test and yep there it is just like that you can see that this enemy now has a field of view effect and as you can see it is correctly interacting with the walls and we can pause and here we can see that the mesh is indeed correct all right awesome so you can see how simple this was to have because of how cleanly we created our original class there's no references to the player directly so our code is very clean and easy to reuse so now with this working let's apply to all our other enemies now here in the editor we could just duplicate this game object and set it like with it for this one but that would be a bit messy so let's set it up on the enemy start method instead so for that we're going to want to instantiate this game object so let's drag it into here in order to make a prefab okay there it is now here on the enemy class let's set a field for the prefab instead and then we're just going to have a normal field of view okay let's drag the prefab reference here we are and let's drag this reference okay and now here let's go into our start method and in here let's instantiate our prekow so we instantiate our prefab then we get the component field of view in order to get our new field of view alright so that should do it let's see and if there it is and now all of our enemies now have their own field of view so you can see all of them already have it and it's all very nice right awesome now let's make the angle and view distance customizable for each enemy so up here let's just add two more fields let's add a float for the fov and then another float for the view business and here the way we create our field of view class makes this very easy we can simply go into it and we set the fov to this fov and set the view distance alright there it is very nice now we can go into the editor and here each enemy now has the fields in here for the FOV and view distance and yep here we are and you can see that each enemy does indeed have a different film the view and view distance so here we are these are very short down very low and so on right great now let's deal with the enemy actually detecting the player so here on our enemy script and let's go to our update and here we're going to make a function let's going with find target player and we're going to call this on our update ok so now in this function let's first comment like just the distance to the player so we're going to do an if a vector 3 dot distance between this position and the player position and if that distance is under our view distance then the player is inside the V distance so if he is let's start attacking ok so here we are and let's test it out with this enemy so I go in here now its move inside his view distance and if there yogi attacked me instantly ok great so we are correctly testing the player distance now obviously we also need to test for the angle so here we just view distance you can see that if I go out here in theory I'm outside of his angle but we're just asking for distance so he hits me instantly all right so now that we're currently testing distance let's also test for the angle so okay here we are we're testing inside distance all right now in here on let's calculate the direction to the player so here we have our direction to the player and now in here we need to calculate the angle between the direction to the player and our actual aim direction now unity already has a great function to do just that it's the vector three angle this returns the angle in degrees between a from and a 2 so it has the angle between the aim direction and the direction to the player so this returns our angle now we need to do is test if this angle is less than our film review so if it's less than the FOV however in here the film the view variable contains the total field of view since we are completing the angle from the middle direction we're going to be inside the field of view if we are smaller than half of the field of view okay let you do it let's test here we are again there is our enemy now let's move in here on the side and let's go inside his view distance any of there you go he cannot spot me since I am NOT inside his field of view and now I move from the side into his field of view any of there you go he finds me instantly and shoots me all right awesome now the last thing we need is to make sure that the player is actually visible inside the field of view so as you can see his film the view goes all the way in here then the view this isn't here but in here it's walked by that wall so in theory if I go in there I shouldn't be spotted but right now yep I am spotter okay so let's deal with that okay so back in here we're testing for the view distance then for the field of view and finally let's also make sure that there is nothing in between the enemy and the player so here we can simply go into our physics 2d to do a nice ray cast the origin is this get position for direction is the direction to the player and for distance let's do our view distance so this returns a ray cast hit 2d and I'm here what's test if we hit something so if the color is not known then we hit something and now let's test if that something is the player so here we go into the game object we get the player component if it is not known then we have hit the player so here we start hitting him and if it is not the player then we hit something else so we ignore it alright let's see ok Here I am there's the enemy first let's try on this side and if there you go I'm inside the V distance but not inside the fov so he's not hitting me now let's go into the other side and let's go inside in here let's wait for them to go go inside and yep he's not hitting me and now if I move inside his field of view yep there you go he starts eating me right awesome so we now have our nice and min detection working they test for inside the view distance then inside the field of view and finally not hidden behind anyone so again here we are and that enemy can only spot me if I'm inside these view distance inside the field of view and not hiding behind so in here I'm fine and I can move in here and now I try to go and I that insulin so just like this we already have a very nice effect that would be suitable for any sort of stealth or horror game ok so now I can try to make my way through the entire map and reach my goal so get past this one ok now that one is coming wait for him to go it's coming wait and yep now I go now go go go yep now I'm in here now wait for both of them and yep now that one is going wait for him to go there now let's wait for him to go back and yep and there you go I want I got the trophy alright awesome so this is a really great fact if you're working on any sort of stealth or horror game you can use it on the player like we did in the previous video or add it to the enemies like in here now you could expand upon this further to implement the crop zone like in commandos and the Sprouse you could also add a smooth rotation to the enemy so their view cones were easier to avoid if you want to see the underlying field of view effect using a complete game then check out my survivor squad games included in the game bundle those games are all about controlling your survivors and managing each field of view to make sure you cover all the corners personally I really enjoy it and survivor squad gauntlets is definitely one of my favorite games so go play it to see how you can apply this effect to your own games as always you can download the project the attorneys from mythical Malcolm subscribe to channel for more inti tutorials post any questions you have in the comments and I'll see you next time
