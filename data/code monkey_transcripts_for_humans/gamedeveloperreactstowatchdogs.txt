With timestamps:

00:00 - check out the code monkey upon scene
00:01 - interactive tutorials complete games and
00:04 - more and here you can also see that all
00:05 - the various NPCs within range and if it
00:07 - was a physically accurate free cast and
00:09 - his filmed of you probably only goes
00:10 - from minus one hello and welcome I'm
00:17 - your code monkey a professional indie
00:18 - game developer and this is an
00:20 - interesting video where I will react and
00:22 - analyze a game trailer I will talk about
00:24 - how things work behind scenes and how
00:26 - you could build them in your own games
00:27 - in this case we're looking at the watch
00:29 - dogs gameplay trailer that was shown at
00:31 - e3 in 2013 alright so let's hit play ok
00:42 - so it starts off with the player
00:43 - controlling the camera so here it's in a
00:45 - state where the input controls only
00:47 - affect the camera so the player can look
00:48 - around but he cannot move then as you
00:51 - saw it smoothly transitions back into
00:52 - the normal camera following the player
00:54 - so we're here he's controlling the
00:56 - camera and just like this mule
00:57 - interpolates in sit down
00:58 - so when using same machine this is
01:00 - actually very easy to do you just
01:02 - position both of your cameras so for
01:03 - example there is one here controlling
01:05 - this nice camera and there's the one
01:07 - here controlling the car so you place
01:10 - these two virtual cameras and then
01:12 - through scene machine all you need to do
01:13 - is set this one as active and as he
01:17 - needs to do it won't automatically
01:18 - interpolate all the values between the
01:19 - both of them so just like this yep very
01:22 - easy to do and it's a very good and
01:24 - looking effect you can place virtual
01:26 - cameras all over your game and smuggle
01:27 - interpolate between them then here as
01:30 - you can see we have this nice little
01:31 - element showing a phone call and you can
01:34 - see that this actually lives inside of
01:36 - the world so as the camera rotates the
01:38 - element also moves around so for example
01:41 - this is something that you could build
01:42 - by building a canvas and positioning it
01:44 - in the world and using UI elements to
01:46 - build up all of this or you could build
01:49 - this whole thing using normal game
01:50 - objects and sprite renders now since the
01:53 - objects themselves in here are position
01:54 - in 3d so you can see that this square
01:56 - behind it is slightly behind it so as
01:58 - they move you can see that there is a
02:00 - bit of a parallax
02:02 - on the main track once I lose them I'll
02:04 - come for you alright so as you eye comes
02:12 - up the first thing that we see is over
02:13 - here the minima it is showcasing a
02:15 - simplified version of the world so
02:16 - there's a bunch of symbols to identify
02:18 - each object in the world and the
02:20 - mini-map is also set up in 3d I covered
02:22 - how to do a mini-map like this in a
02:23 - previous video
02:24 - now the main difference in here is that
02:26 - the edges in here are faded rather than
02:29 - being sewn so you could easily apply
02:30 - this fade effect with either a mask or a
02:32 - shader effect another difference from
02:34 - where I covered in that video is that
02:36 - this one is actually in 3d so you can
02:38 - see as he moves that the helicopter is
02:40 - an actual object so that really just
02:42 - means swapping the camera from
02:43 - orthographic to perspective and all of
02:45 - the elements from simple sprites into
02:46 - some basic meshes and in here we see an
02:53 - interactive ball element shown so
02:55 - essentially as the player is driving the
02:57 - mouse is locked into the center of the
02:59 - screen and then it just checks for
03:00 - interactable elements nearby that mouse
03:02 - position now the way that it does that
03:04 - is for example using a box cast starting
03:06 - from the camera position so it does a
03:10 - box cast and then locate some of the
03:12 - objects within this area it finds out
03:15 - whichever ones are interactable it finds
03:17 - this one and it applies a simple
03:18 - highlight and showcase the UI element
03:20 - then for the original outline you can do
03:22 - that with a simple shader for now effect
03:26 - and here as the camera rotates you can
03:30 - see it in action with this NPC so over
03:33 - here that NPC is not visible yet within
03:36 - the interactable range so once again
03:38 - it's probably doing some sort of box
03:39 - cast and as he rotates more you can see
03:42 - that the icons are showing up above the
03:44 - NPC so this is probably doing two boxes
03:47 - one that is much larger in order to show
03:49 - the UI element and one that is smaller
03:51 - where the object or the NPC is actually
03:53 - interacted on so as the camera rotates
03:55 - once it gets within a certain position
03:58 - if there you go now he's interactable
04:00 - now here you can see that the officers
04:02 - are in search mode so one way you could
04:05 - do that is to store the last position
04:07 - they saw the player then you just tell
04:08 - them to go to a random position within a
04:10 - certain radius of that last position
04:15 - [Music]
04:18 - and then here we see the helicopters
04:20 - family walking around it's doing pretty
04:22 - much the same thing so you just have the
04:24 - helicopter up there probably moving a
04:26 - bit left and right and then he's just
04:27 - randomly pointing the spotlight into
04:29 - various positions so this can be done by
04:31 - having an actual spotlight object and
04:33 - then on the ground you can have some
04:35 - sort of target game object and then just
04:37 - write a simple script for the spotlight
04:39 - to always look at that target then he
04:41 - simply moved that target around and
04:43 - spotlight automatically what's worked
04:47 - watch station filters to the suspect
04:53 - okay then here the player finally gets
04:55 - spotted and for the on earth element
04:57 - here it's actually very simple but it
04:58 - looks great so you can build this by
05:00 - just having 3 UI images set to film then
05:03 - you increase the film mount as the timer
05:05 - increases and do some simple math to
05:07 - figure out how much film each image
05:08 - should have so you increase them over
05:11 - time once the player is in the right
05:12 - view of the helicopter and it looks like
05:14 - a pretty good element then when the
05:22 - player goes way too far you can see that
05:24 - the home computer alerts us and I win
05:26 - here the helicopter is still up there
05:28 - still searching for the player but as he
05:30 - searches naturally he also does a recast
05:32 - so as the player goes underneath this
05:34 - tunnel you can see that the helicopter
05:36 - will try and locate the player and erase
05:38 - and we collide with this overpass so
05:40 - when the player goes into the tunnel the
05:42 - raycast fails and the helicopter cannot
05:44 - find them
05:48 - now here the player goes into a hidden
05:50 - area and then shits off his car so this
05:53 - puts him in a hidden state that does
05:55 - something like we do see detection
05:56 - radius it's possible they also add the
05:58 - ability to lower the tax rate that is
06:00 - even further when behind transparent
06:02 - objects like this fence so as a cop
06:04 - rolls by here the car AI is probably
06:07 - doing a recast directly towards the
06:08 - player and normally probably checks if
06:10 - the distance is under a certain value
06:12 - and if so then he is detected and then
06:14 - in here the fact that the car is offline
06:16 - probably acts as a negative multiplier
06:18 - on the detection radius and the same
06:20 - thing for defense here so let's say the
06:23 - fence gives it minus ten points on the
06:25 - detection range and the carving off also
06:27 - minus ten points so qui all modifiers
06:29 - then do some simple math to figure out
06:31 - if the player is at X bar or not so in
06:33 - this case the cop car goes by and yep
06:34 - he's not detected
06:40 - now over here you can finally
06:42 - interesting object now for example this
06:44 - could use a system like I covered in the
06:46 - four ways of opening doors in there I
06:48 - used an interface that all of the
06:50 - interactable objects must implement so
06:52 - then you simply do a box case or a
06:54 - sphere cast and locate all of the I
06:56 - interactive all objects within range of
06:57 - the player and if so then it shows up
06:59 - the UI element so in terms of coding the
07:01 - player doesn't actually know what is
07:03 - interacting Linde only knows is that he
07:04 - is interacting with something that
07:06 - implements the eye interact among
07:07 - interface so that's a great way of
07:08 - writing some clean code and making sure
07:10 - that your player can interact with a
07:11 - variety of objects and for the actual
07:13 - interaction could be just a simple
07:14 - function call and the object would
07:16 - simply increase the float by time down
07:18 - to time as long as the player is holding
07:20 - that button
07:20 - then for the visual it works pretty much
07:22 - the same way as the alert so increase on
07:24 - each side and then after it is
07:27 - completely films then the action enables
07:29 - any in this case opens the door
07:36 - now hear this news report comes on just
07:39 - as soon as the player enters so in this
07:41 - case it's just very simply you have a
07:43 - box Collider in here set to trigger and
07:46 - whenever the player enters this area you
07:48 - simply trigger this event now for the
07:52 - video you can use the video player
07:54 - component to play any video and display
07:56 - it on a simple kuan so this is how all
07:58 - of the TVs and billboards work so the
08:03 - video starts playing and then this guy
08:05 - in here starts becoming suspicious once
08:07 - again there's a suspicion meter
08:08 - increasing it's using pretty much
08:10 - exactly the same logic as the cops timer
08:11 - so he transitions from suspicious state
08:14 - to alert and he starts calling 9-1-1 and
08:17 - the player goes after him and can
08:18 - interrupt that copy and here you can
08:20 - also see that all the various NPCs
08:22 - within range they react to the player's
08:23 - action so once again it's probably just
08:26 - doing a simple sphere cast around the
08:27 - player and locating all of the objects
08:29 - that can react to the player's actions
08:30 - and then depending on the player action
08:32 - you can make them react differently so
08:34 - in this case the player simply destroyed
08:35 - the NPC's phone so all of these people
08:37 - aren't actually going to do anything
08:39 - other than Sara but you can see how this
08:41 - system is exactly the same thing that
08:42 - applies to all other actions so for
08:44 - example if the player had shot this NPC
08:46 - instead then the sphere cast would
08:48 - probably me much wiser and probably
08:49 - these ones would also react to the
08:51 - player's action and if he was shooting
08:52 - them they would probably start running
08:54 - away and calling the police now here we
09:03 - see the cameras in action again so once
09:05 - again something that's very easy to do
09:07 - with sim machine so the player in here
09:09 - has a virtual camera and as soon as he
09:10 - interacts he activates the second
09:12 - virtual camera and it's middle
09:14 - interpolates between both node and once
09:16 - they are in transition there's also a
09:18 - very nice shader fact you can do this by
09:20 - adding a renderer feature and apply an
09:22 - over eye to all the materials so you
09:24 - apply this effect to all the materials
09:26 - and as soon as the camera reach a
09:27 - necessarily position then you go back
09:29 - into the normal state
09:31 - then here he simply bounces from camera
09:34 - to camera I thought this mechanic was
09:36 - really interesting so again what he's
09:37 - doing here is doing once again a rake
09:39 - house to make sure that the interactable
09:41 - object is within the field of view and
09:43 - then it does a second direct break has
09:45 - to ensure that the actual camera isn't a
09:47 - code by any object now here we see a
09:57 - really interesting mechanic where the
09:58 - player has to distract the guards and
10:00 - let the NPC go safely
10:01 - so in our data the player interacts with
10:04 - this object which caused a sound so once
10:06 - again it does a sort of sphere cast it
10:08 - locates on the object within a radius
10:10 - that can actually listen to sound then
10:13 - if the guard is actually within range
10:14 - then he hears the sound then he moves on
10:15 - to investigate so for the interaction
10:18 - here it's pretty much the same as we saw
10:19 - previously for the door so the guard
10:21 - knows that when he listens to a sound he
10:24 - moves in to investigate and he moves to
10:25 - the sound position so right here oh and
10:27 - for the NPC movement that looks to be
10:29 - automatic so he's probably constantly
10:31 - checking around doing a cast on this
10:34 - area and he stays idle if the guard is
10:36 - in there and as soon as the guard steps
10:37 - out of that area then he finally does
10:39 - his animation and moves away go
10:42 - someone's got to be doing that
10:57 - now on the outside instead of being
11:00 - automatic the player actually manually I
11:02 - see NPC you can see how the move
11:04 - interaction is depends on where the
11:06 - player is looking at so in this case
11:08 - does a ray cast were the mouse position
11:09 - then checks if it hits onto any object
11:12 - and if so then it calculates in actual
11:15 - valid move position so in this case it
11:16 - appears to be simply on the base of the
11:19 - object so you just do a ray cast find
11:21 - this point then set the y equals zero
11:23 - and you get this point down here then
11:25 - simply position the um right on top of
11:27 - that position then once the player tells
11:33 - the NPC goes straight in there and here
11:35 - with this special object the assumption
11:37 - is that the enemies would spot him if
11:38 - the object is in this state so that is
11:41 - probably handle straight through code so
11:43 - the actual boxing ladder is probably
11:45 - just a basic one and while it's in this
11:48 - state then the object will probably
11:50 - behave pretty much like a fence so you
11:52 - would likely apply some sort of negative
11:53 - modifier onto the detection speed but he
11:56 - would still be detected you're probably
11:58 - worse like that rather than being an
11:59 - actual physically accurate ray cast
12:01 - since that would lead to a lot of player
12:03 - confusion so for example the NPC could
12:05 - be all the way in here and if it was a
12:08 - physically accurate free cast then maybe
12:10 - you could actually locate the NPC
12:12 - through here so that would probably
12:13 - cause a lot of player confusion so
12:15 - that's why this one is probably either
12:16 - solid or not solid and as it changes
12:19 - state then it probably goes into a point
12:21 - solid you caress any moves in that guy
12:24 - now will not find ya
12:27 - go quit go now here the player is going
12:35 - to use the Sun system again so as the
12:37 - object starts make noise once again it
12:38 - does a sort of sphere cast and then
12:41 - finds that this guy is within range so
12:43 - it calls some sort of noise function and
12:45 - then the AI simply points him to look in
12:47 - that direction now the first thing that
12:50 - the enemy does is obviously rotate to
12:52 - face the sound origin and then for
12:54 - detecting the player they use some sort
12:56 - of field of view value so the enemy is
12:59 - pointing in that direction and they're
13:01 - accommodating the vector towards the
13:02 - player position then simply column
13:04 - weights the angle so in this case the
13:05 - players at like 180 degrees and his film
13:08 - the view probably only goes from minus
13:10 - 45 to plus 45 on this side so just a
13:13 - simple math calculation to figure out if
13:15 - the enemies within the field of view and
13:16 - if not then he's not detected so in this
13:18 - case the player simply approaches in
13:19 - takes down the enemy stomper all right
13:26 - you're good
13:33 - oh yes on the squad no we're here it is
13:39 - a really interesting boat where it's
13:41 - looking for another player so this is a
13:43 - really cool feature essentially a player
13:45 - on a tablet or a phone could play along
13:47 - in a different way so after some quick
13:48 - matchmaking it finds another player the
13:50 - other player as you can see it has a
13:51 - different UI and in this gay is he can
13:54 - take an action to take down the
13:55 - helicopter and help the player and over
14:06 - here he can lift up some Walker's in
14:08 - order to do so yep it's a really cool
14:10 - feature I wonder how many people
14:11 - actually use it then over here to the
14:16 - players finally caught but the cops
14:17 - didn't shoot right away so for that they
14:19 - could just store a simple boolean if the
14:21 - player was seen using deadly force so if
14:24 - it were true they would similarly shoot
14:25 - to kill and if it's phone sending
14:26 - attempt to approach him and arrest the
14:28 - player instead and for the player action
14:30 - here it probably has just a very simple
14:32 - timer so if the player stops for a long
14:35 - enough then it goes into the surrender
14:36 - animation and then the special skills
14:38 - show up so here it's a very nice radar
14:41 - menu I covered something similar in the
14:43 - apex legends pink video so you just keep
14:45 - track of the Mars Delta and some like
14:47 - the appropriate skill then he selects a
14:49 - point out action which it's on all the
14:51 - lights on the building site
14:53 - now here the buildings don't actually
14:54 - have some real actual lights doing that
14:57 - you would have thousands of all these
14:59 - lights so that would be way too
15:00 - expensive so instead what they do have
15:02 - are simply emissive textures so for the
15:04 - vision for the White House all you do is
15:05 - simply disable the emission or set all
15:07 - those innocent actors to watch and
15:10 - everything goes for bright to nice and
15:11 - dark
15:15 - and for the effects there's all these
15:17 - parts happening right here so once again
15:19 - probably just doing a sphere cast around
15:21 - the player was for all the objects
15:23 - nearby that have some sort of electrical
15:25 - component and just spawned some particle
15:26 - effects right on top so the easiest way
15:35 - to do this is simply to modify the time
15:37 - dot time scale so if you set it to one
15:38 - then it runs at normal speed
15:40 - if you said at that point one that runs
15:41 - at ten percent of the speed so if you
15:44 - set it to a small bone and everything
15:45 - that depends on down to time won't be
15:46 - slowed down then d-cups also change
15:48 - their material to the same as the
15:50 - ha'la'tha fact we saw previously so just
15:51 - a simple for now shader effect and at
15:54 - the same time it's showing the non
15:55 - critical spots at point incident so just
15:58 - some game objects position atthenes now
16:00 - if the player shoots near that position
16:01 - then the game keeps track of that and
16:03 - knows that player went in non-lethal
16:04 - route otherwise the game has some sort
16:07 - of honor system where the lethal so he
16:14 - takes down both the cops then he gets on
16:15 - a boat and drives away
16:19 - those buildings are gone that mission of
16:24 - the winds come on and everything
16:36 - all right so that's it this was a very
16:39 - different video from my normal ones it
16:41 - was really interesting to take a look at
16:43 - a game trailer and try to identify all
16:45 - the various elements and how you could
16:46 - possibly recreate them I hope you found
16:48 - this video interesting and useful and
16:50 - learn something along the way let me
16:52 - know in the comments if you'd like to
16:53 - see more videos like this feel free to
16:55 - leave suggestions on what other trailers
16:57 - I should react to check out the code
16:59 - monkey app on steam interactive
17:01 - tutorials complete games and more click
17:03 - knowing the description and add it to
17:05 - your wish list this video is made
17:06 - possible thanks to these awesome
17:08 - supporters go to patreon.com/scishow
17:10 - code monkey to get some perks and help
17:12 - keep the videos free for everyone like
17:14 - the video and subscribe to the channel
17:15 - if you'd like to see more post any
17:17 - question I have in the comments and I'll
17:18 - see you next time
17:24 - [Music]

Cleaned transcript:

check out the code monkey upon scene interactive tutorials complete games and more and here you can also see that all the various NPCs within range and if it was a physically accurate free cast and his filmed of you probably only goes from minus one hello and welcome I'm your code monkey a professional indie game developer and this is an interesting video where I will react and analyze a game trailer I will talk about how things work behind scenes and how you could build them in your own games in this case we're looking at the watch dogs gameplay trailer that was shown at e3 in 2013 alright so let's hit play ok so it starts off with the player controlling the camera so here it's in a state where the input controls only affect the camera so the player can look around but he cannot move then as you saw it smoothly transitions back into the normal camera following the player so we're here he's controlling the camera and just like this mule interpolates in sit down so when using same machine this is actually very easy to do you just position both of your cameras so for example there is one here controlling this nice camera and there's the one here controlling the car so you place these two virtual cameras and then through scene machine all you need to do is set this one as active and as he needs to do it won't automatically interpolate all the values between the both of them so just like this yep very easy to do and it's a very good and looking effect you can place virtual cameras all over your game and smuggle interpolate between them then here as you can see we have this nice little element showing a phone call and you can see that this actually lives inside of the world so as the camera rotates the element also moves around so for example this is something that you could build by building a canvas and positioning it in the world and using UI elements to build up all of this or you could build this whole thing using normal game objects and sprite renders now since the objects themselves in here are position in 3d so you can see that this square behind it is slightly behind it so as they move you can see that there is a bit of a parallax on the main track once I lose them I'll come for you alright so as you eye comes up the first thing that we see is over here the minima it is showcasing a simplified version of the world so there's a bunch of symbols to identify each object in the world and the minimap is also set up in 3d I covered how to do a minimap like this in a previous video now the main difference in here is that the edges in here are faded rather than being sewn so you could easily apply this fade effect with either a mask or a shader effect another difference from where I covered in that video is that this one is actually in 3d so you can see as he moves that the helicopter is an actual object so that really just means swapping the camera from orthographic to perspective and all of the elements from simple sprites into some basic meshes and in here we see an interactive ball element shown so essentially as the player is driving the mouse is locked into the center of the screen and then it just checks for interactable elements nearby that mouse position now the way that it does that is for example using a box cast starting from the camera position so it does a box cast and then locate some of the objects within this area it finds out whichever ones are interactable it finds this one and it applies a simple highlight and showcase the UI element then for the original outline you can do that with a simple shader for now effect and here as the camera rotates you can see it in action with this NPC so over here that NPC is not visible yet within the interactable range so once again it's probably doing some sort of box cast and as he rotates more you can see that the icons are showing up above the NPC so this is probably doing two boxes one that is much larger in order to show the UI element and one that is smaller where the object or the NPC is actually interacted on so as the camera rotates once it gets within a certain position if there you go now he's interactable now here you can see that the officers are in search mode so one way you could do that is to store the last position they saw the player then you just tell them to go to a random position within a certain radius of that last position and then here we see the helicopters family walking around it's doing pretty much the same thing so you just have the helicopter up there probably moving a bit left and right and then he's just randomly pointing the spotlight into various positions so this can be done by having an actual spotlight object and then on the ground you can have some sort of target game object and then just write a simple script for the spotlight to always look at that target then he simply moved that target around and spotlight automatically what's worked watch station filters to the suspect okay then here the player finally gets spotted and for the on earth element here it's actually very simple but it looks great so you can build this by just having 3 UI images set to film then you increase the film mount as the timer increases and do some simple math to figure out how much film each image should have so you increase them over time once the player is in the right view of the helicopter and it looks like a pretty good element then when the player goes way too far you can see that the home computer alerts us and I win here the helicopter is still up there still searching for the player but as he searches naturally he also does a recast so as the player goes underneath this tunnel you can see that the helicopter will try and locate the player and erase and we collide with this overpass so when the player goes into the tunnel the raycast fails and the helicopter cannot find them now here the player goes into a hidden area and then shits off his car so this puts him in a hidden state that does something like we do see detection radius it's possible they also add the ability to lower the tax rate that is even further when behind transparent objects like this fence so as a cop rolls by here the car AI is probably doing a recast directly towards the player and normally probably checks if the distance is under a certain value and if so then he is detected and then in here the fact that the car is offline probably acts as a negative multiplier on the detection radius and the same thing for defense here so let's say the fence gives it minus ten points on the detection range and the carving off also minus ten points so qui all modifiers then do some simple math to figure out if the player is at X bar or not so in this case the cop car goes by and yep he's not detected now over here you can finally interesting object now for example this could use a system like I covered in the four ways of opening doors in there I used an interface that all of the interactable objects must implement so then you simply do a box case or a sphere cast and locate all of the I interactive all objects within range of the player and if so then it shows up the UI element so in terms of coding the player doesn't actually know what is interacting Linde only knows is that he is interacting with something that implements the eye interact among interface so that's a great way of writing some clean code and making sure that your player can interact with a variety of objects and for the actual interaction could be just a simple function call and the object would simply increase the float by time down to time as long as the player is holding that button then for the visual it works pretty much the same way as the alert so increase on each side and then after it is completely films then the action enables any in this case opens the door now hear this news report comes on just as soon as the player enters so in this case it's just very simply you have a box Collider in here set to trigger and whenever the player enters this area you simply trigger this event now for the video you can use the video player component to play any video and display it on a simple kuan so this is how all of the TVs and billboards work so the video starts playing and then this guy in here starts becoming suspicious once again there's a suspicion meter increasing it's using pretty much exactly the same logic as the cops timer so he transitions from suspicious state to alert and he starts calling 911 and the player goes after him and can interrupt that copy and here you can also see that all the various NPCs within range they react to the player's action so once again it's probably just doing a simple sphere cast around the player and locating all of the objects that can react to the player's actions and then depending on the player action you can make them react differently so in this case the player simply destroyed the NPC's phone so all of these people aren't actually going to do anything other than Sara but you can see how this system is exactly the same thing that applies to all other actions so for example if the player had shot this NPC instead then the sphere cast would probably me much wiser and probably these ones would also react to the player's action and if he was shooting them they would probably start running away and calling the police now here we see the cameras in action again so once again something that's very easy to do with sim machine so the player in here has a virtual camera and as soon as he interacts he activates the second virtual camera and it's middle interpolates between both node and once they are in transition there's also a very nice shader fact you can do this by adding a renderer feature and apply an over eye to all the materials so you apply this effect to all the materials and as soon as the camera reach a necessarily position then you go back into the normal state then here he simply bounces from camera to camera I thought this mechanic was really interesting so again what he's doing here is doing once again a rake house to make sure that the interactable object is within the field of view and then it does a second direct break has to ensure that the actual camera isn't a code by any object now here we see a really interesting mechanic where the player has to distract the guards and let the NPC go safely so in our data the player interacts with this object which caused a sound so once again it does a sort of sphere cast it locates on the object within a radius that can actually listen to sound then if the guard is actually within range then he hears the sound then he moves on to investigate so for the interaction here it's pretty much the same as we saw previously for the door so the guard knows that when he listens to a sound he moves in to investigate and he moves to the sound position so right here oh and for the NPC movement that looks to be automatic so he's probably constantly checking around doing a cast on this area and he stays idle if the guard is in there and as soon as the guard steps out of that area then he finally does his animation and moves away go someone's got to be doing that now on the outside instead of being automatic the player actually manually I see NPC you can see how the move interaction is depends on where the player is looking at so in this case does a ray cast were the mouse position then checks if it hits onto any object and if so then it calculates in actual valid move position so in this case it appears to be simply on the base of the object so you just do a ray cast find this point then set the y equals zero and you get this point down here then simply position the um right on top of that position then once the player tells the NPC goes straight in there and here with this special object the assumption is that the enemies would spot him if the object is in this state so that is probably handle straight through code so the actual boxing ladder is probably just a basic one and while it's in this state then the object will probably behave pretty much like a fence so you would likely apply some sort of negative modifier onto the detection speed but he would still be detected you're probably worse like that rather than being an actual physically accurate ray cast since that would lead to a lot of player confusion so for example the NPC could be all the way in here and if it was a physically accurate free cast then maybe you could actually locate the NPC through here so that would probably cause a lot of player confusion so that's why this one is probably either solid or not solid and as it changes state then it probably goes into a point solid you caress any moves in that guy now will not find ya go quit go now here the player is going to use the Sun system again so as the object starts make noise once again it does a sort of sphere cast and then finds that this guy is within range so it calls some sort of noise function and then the AI simply points him to look in that direction now the first thing that the enemy does is obviously rotate to face the sound origin and then for detecting the player they use some sort of field of view value so the enemy is pointing in that direction and they're accommodating the vector towards the player position then simply column weights the angle so in this case the players at like 180 degrees and his film the view probably only goes from minus 45 to plus 45 on this side so just a simple math calculation to figure out if the enemies within the field of view and if not then he's not detected so in this case the player simply approaches in takes down the enemy stomper all right you're good oh yes on the squad no we're here it is a really interesting boat where it's looking for another player so this is a really cool feature essentially a player on a tablet or a phone could play along in a different way so after some quick matchmaking it finds another player the other player as you can see it has a different UI and in this gay is he can take an action to take down the helicopter and help the player and over here he can lift up some Walker's in order to do so yep it's a really cool feature I wonder how many people actually use it then over here to the players finally caught but the cops didn't shoot right away so for that they could just store a simple boolean if the player was seen using deadly force so if it were true they would similarly shoot to kill and if it's phone sending attempt to approach him and arrest the player instead and for the player action here it probably has just a very simple timer so if the player stops for a long enough then it goes into the surrender animation and then the special skills show up so here it's a very nice radar menu I covered something similar in the apex legends pink video so you just keep track of the Mars Delta and some like the appropriate skill then he selects a point out action which it's on all the lights on the building site now here the buildings don't actually have some real actual lights doing that you would have thousands of all these lights so that would be way too expensive so instead what they do have are simply emissive textures so for the vision for the White House all you do is simply disable the emission or set all those innocent actors to watch and everything goes for bright to nice and dark and for the effects there's all these parts happening right here so once again probably just doing a sphere cast around the player was for all the objects nearby that have some sort of electrical component and just spawned some particle effects right on top so the easiest way to do this is simply to modify the time dot time scale so if you set it to one then it runs at normal speed if you said at that point one that runs at ten percent of the speed so if you set it to a small bone and everything that depends on down to time won't be slowed down then dcups also change their material to the same as the ha'la'tha fact we saw previously so just a simple for now shader effect and at the same time it's showing the non critical spots at point incident so just some game objects position atthenes now if the player shoots near that position then the game keeps track of that and knows that player went in nonlethal route otherwise the game has some sort of honor system where the lethal so he takes down both the cops then he gets on a boat and drives away those buildings are gone that mission of the winds come on and everything all right so that's it this was a very different video from my normal ones it was really interesting to take a look at a game trailer and try to identify all the various elements and how you could possibly recreate them I hope you found this video interesting and useful and learn something along the way let me know in the comments if you'd like to see more videos like this feel free to leave suggestions on what other trailers I should react to check out the code monkey app on steam interactive tutorials complete games and more click knowing the description and add it to your wish list this video is made possible thanks to these awesome supporters go to patreon.com/scishow code monkey to get some perks and help keep the videos free for everyone like the video and subscribe to the channel if you'd like to see more post any question I have in the comments and I'll see you next time
