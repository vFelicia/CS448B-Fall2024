With timestamps:

00:00 - hello and welcome I'm your code monkey
00:02 - and in this video we're going to take a
00:03 - resource gatherer ai and keep track of
00:05 - resource amounts let's get started
00:10 - so here's the resource gatherer from the
00:12 - previous video he starts off and all
00:14 - goes to a resource node mines that node
00:16 - and takes it to storage
00:18 - right now the resources don't really
00:20 - exist it's just a number going up being
00:22 - reset and lost forever let's make a
00:24 - class to handle those resource amounts
00:26 - so make a new c-sharp script and name it
00:29 - game resources this class is going to be
00:33 - responsible for holding all the player
00:35 - resources essentially a resource bank
00:37 - this is what were later going to use to
00:39 - check if we have enough resources to
00:40 - construct a building inside this is
00:43 - going to be a very simple class so let's
00:45 - get rid of all this it will also be
00:48 - static since we only have one resource
00:50 - Bank in our game and to start with let's
00:53 - make a private static int for our goal
00:55 - amount let's make some functions to add
00:58 - gold so public static void add gold
01:02 - amount and we're going to receive an end
01:05 - for the amount and inside we're simply
01:07 - going to increase our internals on the
01:09 - mount by that amount and let's make a
01:12 - public static int function to get our
01:16 - goal amount and inside we are simply
01:19 - going to return our goal amount now
01:21 - let's go up here and make an event to
01:24 - fire when the resource amount changes so
01:26 - a public static event event handler
01:29 - called on gold amount change if an
01:33 - handler is part of the system namespace
01:35 - so in here when we change our gold
01:38 - amount if we have subscribers let's
01:41 - notify them send them know an event RMP
01:45 - alright this class is now setup we can
01:48 - add a resource amount get the current
01:50 - amount and it fires an event whenever
01:53 - that amount changes the class is static
01:55 - so it can be used from anywhere in our
01:57 - game now all we need to do is our
01:59 - gatherer a I called the add function in
02:01 - this class to add the resources so let's
02:04 - go into our gather AI and down here when
02:08 - we finally arrive at the storage
02:10 - position before we reset our mount let's
02:14 - go into game resources and add the gold
02:16 - amount based on the amount that
02:18 - are caring then we reset it go back to
02:21 - idle and so on now here just for testing
02:24 - let's do a debug dialog of the game
02:27 - resources get the gold amount so now
02:33 - when he reaches the storage area he
02:35 - should increase our game called amount
02:37 - so first it should display one then on
02:39 - the second time it should display two
02:40 - let's see
02:41 - there he is mines that when he gets
02:44 - there he should see in the console yep
02:45 - one gold amount he goes mines the second
02:48 - one and now boom there you go it says to
02:51 - you alright so we now have a column on
02:53 - counter keeping track of our resources
02:56 - so let's make a very simple UI to
02:59 - display the resources so we don't have
03:00 - to look in the console let's go into our
03:02 - UI canvas in here let's make a new game
03:06 - object and name it window game resources
03:10 - let's expand it inside and let's make a
03:15 - text object and we're going to name it
03:16 - gold amount add the text component
03:33 - all right we have our window set up now
03:36 - let's make this script make a new C
03:38 - sharp script and let's name it window
03:40 - game resources inside let's make a
03:43 - function to update the tag so Freud
03:46 - update resource text object and here I'm
03:52 - let's go into the transform find the
03:54 - gold amount which is the text object get
03:57 - the text component and set the text to
04:00 - go and then go into game resources dot
04:04 - to get the goal amount now on our
04:12 - private void awake let's go into game
04:17 - resources and subscribe to the ongoing
04:19 - amount changed event and when it does
04:27 - change let's update our text alright so
04:34 - we have a function to update our text
04:36 - object based on the game resources that
04:38 - catcon the mount and when it changes the
04:40 - game resources fires this event which
04:42 - again updates the text object so let's
04:45 - test and we should be able to see it
04:47 - displayed in our UI add the component
04:51 - and let's try ok says goal zero he goes
04:55 - in he drops it and boom there you go
04:57 - world one he grabs another one goes
04:59 - there and going to okay great so there
05:02 - you have it we create a static class to
05:04 - handle our game resources and made our
05:06 - AI interface with it in the next video
05:09 - we're going to create a resource node
05:10 - object to handle resource node depletion
05:12 - if you have any questions post them in
05:14 - the comments and I'll do my best to
05:16 - answer them subscribe for more videos
05:18 - and I'll see you next time

Cleaned transcript:

hello and welcome I'm your code monkey and in this video we're going to take a resource gatherer ai and keep track of resource amounts let's get started so here's the resource gatherer from the previous video he starts off and all goes to a resource node mines that node and takes it to storage right now the resources don't really exist it's just a number going up being reset and lost forever let's make a class to handle those resource amounts so make a new csharp script and name it game resources this class is going to be responsible for holding all the player resources essentially a resource bank this is what were later going to use to check if we have enough resources to construct a building inside this is going to be a very simple class so let's get rid of all this it will also be static since we only have one resource Bank in our game and to start with let's make a private static int for our goal amount let's make some functions to add gold so public static void add gold amount and we're going to receive an end for the amount and inside we're simply going to increase our internals on the mount by that amount and let's make a public static int function to get our goal amount and inside we are simply going to return our goal amount now let's go up here and make an event to fire when the resource amount changes so a public static event event handler called on gold amount change if an handler is part of the system namespace so in here when we change our gold amount if we have subscribers let's notify them send them know an event RMP alright this class is now setup we can add a resource amount get the current amount and it fires an event whenever that amount changes the class is static so it can be used from anywhere in our game now all we need to do is our gatherer a I called the add function in this class to add the resources so let's go into our gather AI and down here when we finally arrive at the storage position before we reset our mount let's go into game resources and add the gold amount based on the amount that are caring then we reset it go back to idle and so on now here just for testing let's do a debug dialog of the game resources get the gold amount so now when he reaches the storage area he should increase our game called amount so first it should display one then on the second time it should display two let's see there he is mines that when he gets there he should see in the console yep one gold amount he goes mines the second one and now boom there you go it says to you alright so we now have a column on counter keeping track of our resources so let's make a very simple UI to display the resources so we don't have to look in the console let's go into our UI canvas in here let's make a new game object and name it window game resources let's expand it inside and let's make a text object and we're going to name it gold amount add the text component all right we have our window set up now let's make this script make a new C sharp script and let's name it window game resources inside let's make a function to update the tag so Freud update resource text object and here I'm let's go into the transform find the gold amount which is the text object get the text component and set the text to go and then go into game resources dot to get the goal amount now on our private void awake let's go into game resources and subscribe to the ongoing amount changed event and when it does change let's update our text alright so we have a function to update our text object based on the game resources that catcon the mount and when it changes the game resources fires this event which again updates the text object so let's test and we should be able to see it displayed in our UI add the component and let's try ok says goal zero he goes in he drops it and boom there you go world one he grabs another one goes there and going to okay great so there you have it we create a static class to handle our game resources and made our AI interface with it in the next video we're going to create a resource node object to handle resource node depletion if you have any questions post them in the comments and I'll do my best to answer them subscribe for more videos and I'll see you next time
