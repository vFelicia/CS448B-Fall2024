With timestamps:

00:00 - hello and welcome I'm your code monkey
00:01 - and in this video we're continuing our
00:03 - resource gatherer AI we're going to use
00:05 - our resources and some simple building
00:07 - construction let's begin
00:11 - so here's our scene I have the two
00:14 - gatherers in here I can select either
00:16 - one of them and I can give them orders I
00:18 - can tell this one to go mind some gold
00:20 - and listen to you chop some wood and
00:22 - they go they gather the note gets
00:24 - depleted as you can see and then they go
00:26 - for another one after some time the note
00:28 - gets replenished and they can mine it
00:31 - again okay great so now that we have
00:34 - this basic ecosystem working let's use
00:36 - our resources to actually build
00:37 - something we're going to construct a
00:39 - tower object and let's say it takes ten
00:41 - wood and five gold so four stars let's
00:44 - go into our game Handler and in here
00:47 - we're going to construct the tower on
00:49 - the right mouse button so let's go on
00:51 - the update make a private void update
00:55 - and in here if input back yet mouse
00:59 - button down and in here we want to test
01:02 - on the right mouse button so that's my
01:04 - button one if we have them in here that
01:07 - we want to construct a tower so to test
01:11 - our logic let's use this p.m. debug
01:13 - quanis which is part of the code mock
01:14 - utilities that you can grab from unity
01:16 - code Maki calm let's go there and do a
01:18 - text pop up on the mouse just to make
01:21 - sure that this is triggering so
01:23 - construct our and let's test right here
01:26 - I am hit the right mouse button and yep
01:28 - we are capturing the right mouse button
01:29 - okay now in here let's test if we have
01:32 - enough resources so in order to do that
01:35 - we are going to go if game resources and
01:38 - in that class we have the function get
01:41 - resource amount then we take the
01:43 - resource type which in this case let's
01:46 - first test for wood and let's test if
01:49 - the wood amount if it is bigger than 10
01:52 - and again get resource amount of our
01:56 - gold and we're going to make sure that
01:58 - it is above 5 so if in here then we do
02:02 - have resources tell us not enough
02:07 - resources so in here the CM debug
02:14 - all right so we are testing if we have
02:16 - ten wood and five gold so let's see okay
02:20 - so just like that we had zero zero so if
02:22 - I click no resources
02:23 - okay so let's grab some gold and some
02:26 - wood okay we have twelve gaunt of wood
02:33 - and if I right click yep we now have
02:35 - resource okay great so in here if we do
02:37 - have resource then we're going to spawn
02:39 - a tower if not and we're not going to
02:41 - spawn before we do spawn the tower we
02:44 - need to remove those resources from the
02:46 - game resource game resources and in here
02:49 - we need a function to remove resource
02:51 - amount and we're going to move remove
02:55 - game resources that resource type remove
02:58 - would let's say ten and remove five of
03:02 - gold so let's go into that class and
03:06 - make this function so in here make a
03:08 - public static void remove resource
03:11 - amount and here we're going to take a
03:13 - resource type and also an amount and in
03:17 - here simply do the same thing that we
03:18 - did in here and also fire the event sort
03:22 - of increasing we decrease okay great so
03:24 - we can now remove resources from this
03:26 - class all right so let's test again make
03:28 - sure the resource are being removed okay
03:31 - here I am no resources tell them to
03:33 - gather there they go
03:35 - all right we have enough now let's try
03:36 - and poof has resource and as you can see
03:39 - they were removed okay great so the
03:41 - logic for testing our resource amount
03:44 - and removing them is working perfectly
03:46 - right now let's visually spawn the tower
03:48 - in order to keep our code clean let's
03:51 - first create a tower class so let's
03:53 - create a new C sharp script and let's
03:55 - name it tower now in here we're going to
03:57 - make this a simple class so remove
03:59 - monobehaviour and these functions and
04:01 - first of all let's make a static
04:03 - function to try to spend the resources
04:05 - so make a public static ball try spend
04:09 - resources cost
04:12 - and in here we're going to do the test
04:15 - for the resource cost which we used in
04:18 - here so copy this code and drop it in
04:21 - here so this class is the one that is
04:24 - responsible for testing how much
04:26 - eight-hour cost and removing that cost
04:28 - so in here if we do have resources then
04:30 - we return a true if not then we return a
04:33 - false okay so now back in our game
04:36 - handler instead of using this we're
04:39 - going to do if tower dot try spend the
04:42 - resources cost if that one returns true
04:44 - then we have spent the resources so in
04:47 - here let's construct a tower so we're
04:49 - going to make a tower and make a create
04:51 - function so let's make our public static
04:54 - create function so public static it will
04:57 - return a tower object and let's call it
04:59 - create now in here we're going to
05:01 - receive a vector3 for the position to
05:04 - spawn the tower and we're also going to
05:06 - receive a transform for the tower prefab
05:10 - okay now in here let's instantiate that
05:13 - prefab in sin she ate it into the
05:18 - position and put turn n dot identity
05:21 - then we're going to create a tower
05:23 - object and make a new tower and give it
05:26 - the tower transform and then we're going
05:29 - to return that and down here let's make
05:31 - our constructor for the tower which will
05:35 - receive a transformed for the tower
05:37 - transfer all right so we're doing this
05:42 - just to keep our code nice and clean so
05:44 - we call this function from the outside
05:45 - and this function returns the only
05:47 - constructed tower object so let's go
05:49 - into our game handler so let's go up
05:51 - here and add another serialize field for
05:53 - our tower prefab
05:55 - okay that's what we're going to send to
05:58 - instantiate and for the position let's
06:00 - go into the utils class and get the
06:02 - mouse world position ok so this is the
06:05 - code for now now let's make that prefab
06:07 - so in here I have various sprites for
06:09 - the tower and various stages of
06:10 - construction so here let's create an
06:13 - empty game object we're going to get a
06:15 - sprite renderer and let's just give it
06:18 - the phone tower just for now ok so
06:20 - that's all we need for the prefab so
06:23 - let's go up here create a new prefab
06:25 - let's go
06:26 - PAF town we're going to drag this in
06:29 - there okay so let's drag the prefab in
06:31 - here and let's test now in order to make
06:34 - testing easier and let's go into the
06:36 - game resources and in here when we
06:37 - initialize instead of starting with zero
06:40 - let's start with nine nine nine this is
06:42 - just so testing is easier so we don't
06:44 - have to wait for our gatherers to gather
06:47 - the resources so let's go all right I
06:49 - have nine nine nine and if I right click
06:51 - yep there you go the tower has been
06:54 - spawned and the cost went down okay
06:56 - great
06:56 - now let's an oldy tower construction so
06:59 - back in our tower script in here on
07:02 - let's spawn it in construction and do a
07:03 - simple construction tech timer so first
07:06 - let's grab a reference to the sprite
07:08 - renderer sprite renderer and we're going
07:11 - to grab it based on the tower transform
07:14 - docket component type sprite Brennan so
07:18 - now first let's set the sprite we start
07:20 - with the first construction sprite and
07:23 - now we're going to do a simple
07:24 - construction take timer if you've seen
07:26 - the video on the time.take system this
07:28 - would be a great place to use it but for
07:30 - now let's do the logic in a very simple
07:32 - way so in here let's simply make a
07:34 - private int for the construction tick
07:37 - and a private int for the construction
07:39 - tick max so down here let's start off
07:43 - the construction tick at zero and set
07:45 - the construction take max to be in let's
07:47 - say ten now let's make a function a
07:50 - private void increase construction tick
07:53 - and in here if the construction tick if
07:57 - it is under construction technics then
08:00 - we're going to increase it and here let
08:02 - us also swap the sprite so do a switch
08:05 - on our construction tick we have a total
08:09 - of four sprites so in here let's first
08:11 - put on three
08:17 - okay so in here we are very similar
08:19 - changing the construction based on the
08:21 - tick if you wanted this to be applicable
08:23 - to more than just this tick max you
08:25 - would do some simple calculation to get
08:27 - a normalized value but in this case
08:29 - let's just leave it like this to keep it
08:30 - nice and simple so this function is
08:32 - increasing our construction takes and
08:34 - updating the sprite let us also make a
08:36 - private ball for testing if is
08:39 - constructing and to simply return if the
08:43 - construction tick if it is under
08:45 - construction take backs and this is what
08:48 - we're going to use up here to keep our
08:50 - code very nice and descriptive and now
08:53 - up here let us actually trigger this
08:56 - function so in order to do that we're
08:57 - going to use the function periodic we're
09:00 - going to use it to trigger the increased
09:02 - construction tick and we're going to
09:04 - increase it every and let's say second
09:06 - so every second this function won't be
09:08 - triggered this function won't test if it
09:10 - is constructing if so it won't increase
09:12 - the tick and update the sprite so let's
09:15 - see if all that is working okay so here
09:17 - I am I right click there's the tower and
09:19 - it is Colonel in construction as you see
09:21 - the sprite that's right and yep now it's
09:24 - fully built okay great so we have the
09:26 - construction time we're being activated
09:28 - and increasing and the tower is
09:30 - constructing okay
09:31 - now let's add a construction bar so here
09:34 - we're going to use the world bar which
09:37 - again is on the code monkey Tonys to
09:39 - create a construction bar trying to
09:43 - create a new one let's place it as a
09:45 - child of this transform and put it
09:47 - slightly under
09:59 - going to store that construction bar as
10:02 - a member variable so that we can go down
10:08 - here and after we increase the construct
10:10 - untick let's actually update it so in
10:12 - order to do that we do need to calculate
10:14 - a normalized value so let's we flew
10:17 - construction normalized which will be
10:21 - the construction tick x 1f in order to
10:24 - convert it into a float and then divide
10:26 - by the construction takes max so this is
10:29 - the normalized value that we're going to
10:31 - do use set size and set the size of our
10:34 - construction bar okay so let's test here
10:38 - I am and if I right click yep there's
10:40 - the tower and there's the bar as you can
10:41 - see it is increasing on every tick and
10:44 - yep it's foam that's completely okay
10:46 - great
10:46 - so we got the tower construction fully
10:49 - working now let's actually do something
10:51 - when the tower is fully constructed for
10:53 - example let's spawn another together so
10:56 - in order to do that let's make a prefab
10:57 - a new prefab and let's make it the PF
11:01 - together unit now we're going to drag
11:04 - this in here so now let's go into the
11:06 - game Handler and at mother's he realized
11:09 - field for the gatherer unit prefab now
11:14 - in order to spawn our gatherer we're
11:15 - going to pass in a function on our tower
11:18 - create so in here when we create let's
11:21 - also pass in an action which we have to
11:24 - go up here and do using the system now
11:26 - this action will actually do something
11:29 - when the tower is fully constructed so
11:31 - in here let's call it on tower
11:33 - constructive action and we're going to
11:38 - pass it on to our constructor and
11:40 - receive it down here
11:42 - okay this is our action let's store it
11:45 - internally
11:50 - okay so now down here if construction
11:55 - tic if it is equal to the construction
11:58 - techniques then the tower is fully
12:01 - constructed so in here let's also hide
12:04 - our bar so hide this construction bar
12:08 - and we're going to trigger this action
12:11 - so the tower doesn't care what happens
12:13 - when it's constructed it just receives
12:15 - an action and triggers it so now let's
12:17 - go back into our game hammer so in here
12:20 - let's make a private void spawn gatherer
12:24 - unit and we're going to receive a
12:26 - vector3 for the position and what we're
12:29 - going to do is in sin she ate our
12:31 - gatherer unit prefab spawn it on the
12:36 - position returning that identity okay
12:38 - and that's all we need to do to spawn
12:41 - and you gather up so in here and let's
12:43 - give it the action that won't trigger on
12:45 - construction and the action that you
12:47 - will execute won't be spawn and gather a
12:50 - unit on this position so in here let's
12:54 - make a vector3 for the tower spawn
12:56 - position which will be this use that in
12:59 - here and down here and let's go on
13:03 - together unit in that and let's put it a
13:05 - bit under so new vector3 let's say on
13:07 - 0-2 okay so on right-click we try to
13:10 - spend the resources if we can't spend
13:12 - the resources necessary to construct it
13:14 - tower then we actually construct the
13:16 - tower we get the tower spawn position
13:18 - based on the mouse position we create a
13:21 - tower using the tower prefab when the
13:24 - tower is fully constructed it won't fire
13:25 - this action and this action won't spawn
13:28 - a new gatherer on the spawn position
13:30 - well as - ooh so a bit under the tower
13:32 - and this won't simply instantiate the
13:35 - gather prefab so let's see if all of
13:37 - that is working exactly as intended okay
13:40 - so here I am the resource up back on 0
13:42 - so let's grab this one tell them to
13:44 - gather some gold this one gather some
13:47 - wood and if I right-click you can see
13:49 - nothing happens because we do not have
13:51 - enough resources so let's see them grab
13:54 - and then we can test so go three wood
13:56 - three let's wait until we have ten wood
13:59 - and five gold so you can see nothing
14:01 - happened so let's wait
14:03 - okay we now have enough so if I right
14:06 - click yep there's a tower there's the
14:08 - construction bar it's going up these
14:10 - prices updating and yep the tower is
14:13 - fully constructed the bar disappeared
14:15 - and we now have any together and I can
14:17 - select them and tell them go mine this
14:19 - and there he goes and once I've got
14:21 - enough right now so let's go spawn
14:23 - another one there he goes they are
14:25 - mining and construct and yep there's
14:29 - another one and again tell him to mine
14:31 - and when I got enough I guess what not
14:33 - okay
14:33 - worked so there you have it we
14:35 - constructed a building using the
14:37 - resources that are gatherers picked up
14:39 - the tower has a simple construction
14:41 - timer and when completed it spawned
14:43 - another gatherer that we can use to mine
14:45 - more resources so in this series we
14:47 - covered everything regarding a simple
14:49 - resource gatherer he can look for
14:51 - resource nodes independently or be told
14:53 - where to go the system supports multiple
14:56 - resource types and the nodes have a
14:58 - limited amount of resources they also
15:00 - replenish that resource amount after
15:02 - some time we then add the ability to
15:05 - construct a building using those
15:06 - resources and spawned another gatherer
15:08 - when the building is completed I hope
15:10 - you enjoyed this series and learned
15:11 - something useful from it now go ahead
15:13 - and apply it to your own games as always
15:16 - you can download the project files in
15:18 - utilities from Unity code monkey comm if
15:20 - you have any questions post them in the
15:22 - comments and I'll do my best to answer
15:23 - them subscribe for more videos and I'll
15:26 - see you next time

Cleaned transcript:

hello and welcome I'm your code monkey and in this video we're continuing our resource gatherer AI we're going to use our resources and some simple building construction let's begin so here's our scene I have the two gatherers in here I can select either one of them and I can give them orders I can tell this one to go mind some gold and listen to you chop some wood and they go they gather the note gets depleted as you can see and then they go for another one after some time the note gets replenished and they can mine it again okay great so now that we have this basic ecosystem working let's use our resources to actually build something we're going to construct a tower object and let's say it takes ten wood and five gold so four stars let's go into our game Handler and in here we're going to construct the tower on the right mouse button so let's go on the update make a private void update and in here if input back yet mouse button down and in here we want to test on the right mouse button so that's my button one if we have them in here that we want to construct a tower so to test our logic let's use this p.m. debug quanis which is part of the code mock utilities that you can grab from unity code Maki calm let's go there and do a text pop up on the mouse just to make sure that this is triggering so construct our and let's test right here I am hit the right mouse button and yep we are capturing the right mouse button okay now in here let's test if we have enough resources so in order to do that we are going to go if game resources and in that class we have the function get resource amount then we take the resource type which in this case let's first test for wood and let's test if the wood amount if it is bigger than 10 and again get resource amount of our gold and we're going to make sure that it is above 5 so if in here then we do have resources tell us not enough resources so in here the CM debug all right so we are testing if we have ten wood and five gold so let's see okay so just like that we had zero zero so if I click no resources okay so let's grab some gold and some wood okay we have twelve gaunt of wood and if I right click yep we now have resource okay great so in here if we do have resource then we're going to spawn a tower if not and we're not going to spawn before we do spawn the tower we need to remove those resources from the game resource game resources and in here we need a function to remove resource amount and we're going to move remove game resources that resource type remove would let's say ten and remove five of gold so let's go into that class and make this function so in here make a public static void remove resource amount and here we're going to take a resource type and also an amount and in here simply do the same thing that we did in here and also fire the event sort of increasing we decrease okay great so we can now remove resources from this class all right so let's test again make sure the resource are being removed okay here I am no resources tell them to gather there they go all right we have enough now let's try and poof has resource and as you can see they were removed okay great so the logic for testing our resource amount and removing them is working perfectly right now let's visually spawn the tower in order to keep our code clean let's first create a tower class so let's create a new C sharp script and let's name it tower now in here we're going to make this a simple class so remove monobehaviour and these functions and first of all let's make a static function to try to spend the resources so make a public static ball try spend resources cost and in here we're going to do the test for the resource cost which we used in here so copy this code and drop it in here so this class is the one that is responsible for testing how much eighthour cost and removing that cost so in here if we do have resources then we return a true if not then we return a false okay so now back in our game handler instead of using this we're going to do if tower dot try spend the resources cost if that one returns true then we have spent the resources so in here let's construct a tower so we're going to make a tower and make a create function so let's make our public static create function so public static it will return a tower object and let's call it create now in here we're going to receive a vector3 for the position to spawn the tower and we're also going to receive a transform for the tower prefab okay now in here let's instantiate that prefab in sin she ate it into the position and put turn n dot identity then we're going to create a tower object and make a new tower and give it the tower transform and then we're going to return that and down here let's make our constructor for the tower which will receive a transformed for the tower transfer all right so we're doing this just to keep our code nice and clean so we call this function from the outside and this function returns the only constructed tower object so let's go into our game handler so let's go up here and add another serialize field for our tower prefab okay that's what we're going to send to instantiate and for the position let's go into the utils class and get the mouse world position ok so this is the code for now now let's make that prefab so in here I have various sprites for the tower and various stages of construction so here let's create an empty game object we're going to get a sprite renderer and let's just give it the phone tower just for now ok so that's all we need for the prefab so let's go up here create a new prefab let's go PAF town we're going to drag this in there okay so let's drag the prefab in here and let's test now in order to make testing easier and let's go into the game resources and in here when we initialize instead of starting with zero let's start with nine nine nine this is just so testing is easier so we don't have to wait for our gatherers to gather the resources so let's go all right I have nine nine nine and if I right click yep there you go the tower has been spawned and the cost went down okay great now let's an oldy tower construction so back in our tower script in here on let's spawn it in construction and do a simple construction tech timer so first let's grab a reference to the sprite renderer sprite renderer and we're going to grab it based on the tower transform docket component type sprite Brennan so now first let's set the sprite we start with the first construction sprite and now we're going to do a simple construction take timer if you've seen the video on the time.take system this would be a great place to use it but for now let's do the logic in a very simple way so in here let's simply make a private int for the construction tick and a private int for the construction tick max so down here let's start off the construction tick at zero and set the construction take max to be in let's say ten now let's make a function a private void increase construction tick and in here if the construction tick if it is under construction technics then we're going to increase it and here let us also swap the sprite so do a switch on our construction tick we have a total of four sprites so in here let's first put on three okay so in here we are very similar changing the construction based on the tick if you wanted this to be applicable to more than just this tick max you would do some simple calculation to get a normalized value but in this case let's just leave it like this to keep it nice and simple so this function is increasing our construction takes and updating the sprite let us also make a private ball for testing if is constructing and to simply return if the construction tick if it is under construction take backs and this is what we're going to use up here to keep our code very nice and descriptive and now up here let us actually trigger this function so in order to do that we're going to use the function periodic we're going to use it to trigger the increased construction tick and we're going to increase it every and let's say second so every second this function won't be triggered this function won't test if it is constructing if so it won't increase the tick and update the sprite so let's see if all that is working okay so here I am I right click there's the tower and it is Colonel in construction as you see the sprite that's right and yep now it's fully built okay great so we have the construction time we're being activated and increasing and the tower is constructing okay now let's add a construction bar so here we're going to use the world bar which again is on the code monkey Tonys to create a construction bar trying to create a new one let's place it as a child of this transform and put it slightly under going to store that construction bar as a member variable so that we can go down here and after we increase the construct untick let's actually update it so in order to do that we do need to calculate a normalized value so let's we flew construction normalized which will be the construction tick x 1f in order to convert it into a float and then divide by the construction takes max so this is the normalized value that we're going to do use set size and set the size of our construction bar okay so let's test here I am and if I right click yep there's the tower and there's the bar as you can see it is increasing on every tick and yep it's foam that's completely okay great so we got the tower construction fully working now let's actually do something when the tower is fully constructed for example let's spawn another together so in order to do that let's make a prefab a new prefab and let's make it the PF together unit now we're going to drag this in here so now let's go into the game Handler and at mother's he realized field for the gatherer unit prefab now in order to spawn our gatherer we're going to pass in a function on our tower create so in here when we create let's also pass in an action which we have to go up here and do using the system now this action will actually do something when the tower is fully constructed so in here let's call it on tower constructive action and we're going to pass it on to our constructor and receive it down here okay this is our action let's store it internally okay so now down here if construction tic if it is equal to the construction techniques then the tower is fully constructed so in here let's also hide our bar so hide this construction bar and we're going to trigger this action so the tower doesn't care what happens when it's constructed it just receives an action and triggers it so now let's go back into our game hammer so in here let's make a private void spawn gatherer unit and we're going to receive a vector3 for the position and what we're going to do is in sin she ate our gatherer unit prefab spawn it on the position returning that identity okay and that's all we need to do to spawn and you gather up so in here and let's give it the action that won't trigger on construction and the action that you will execute won't be spawn and gather a unit on this position so in here let's make a vector3 for the tower spawn position which will be this use that in here and down here and let's go on together unit in that and let's put it a bit under so new vector3 let's say on 02 okay so on rightclick we try to spend the resources if we can't spend the resources necessary to construct it tower then we actually construct the tower we get the tower spawn position based on the mouse position we create a tower using the tower prefab when the tower is fully constructed it won't fire this action and this action won't spawn a new gatherer on the spawn position well as ooh so a bit under the tower and this won't simply instantiate the gather prefab so let's see if all of that is working exactly as intended okay so here I am the resource up back on 0 so let's grab this one tell them to gather some gold this one gather some wood and if I rightclick you can see nothing happens because we do not have enough resources so let's see them grab and then we can test so go three wood three let's wait until we have ten wood and five gold so you can see nothing happened so let's wait okay we now have enough so if I right click yep there's a tower there's the construction bar it's going up these prices updating and yep the tower is fully constructed the bar disappeared and we now have any together and I can select them and tell them go mine this and there he goes and once I've got enough right now so let's go spawn another one there he goes they are mining and construct and yep there's another one and again tell him to mine and when I got enough I guess what not okay worked so there you have it we constructed a building using the resources that are gatherers picked up the tower has a simple construction timer and when completed it spawned another gatherer that we can use to mine more resources so in this series we covered everything regarding a simple resource gatherer he can look for resource nodes independently or be told where to go the system supports multiple resource types and the nodes have a limited amount of resources they also replenish that resource amount after some time we then add the ability to construct a building using those resources and spawned another gatherer when the building is completed I hope you enjoyed this series and learned something useful from it now go ahead and apply it to your own games as always you can download the project files in utilities from Unity code monkey comm if you have any questions post them in the comments and I'll do my best to answer them subscribe for more videos and I'll see you next time
