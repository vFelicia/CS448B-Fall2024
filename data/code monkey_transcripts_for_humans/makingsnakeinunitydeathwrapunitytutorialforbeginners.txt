With timestamps:

00:00 - hello and welcome I'm your code monkey
00:01 - miniseries were making snake in unity in
00:03 - this video we're going to add snake
00:05 - death and wrap around the level let's
00:07 - begin
00:10 - okay so here's our game so far we have
00:13 - the snake move around we can eat food
00:15 - which will grow the snake by one segment
00:17 - and all the sprites are correctly
00:20 - displayed you can see the corners when
00:21 - the snake moves they look correctly
00:23 - right now I can go through the snake
00:25 - like that there you go that should cause
00:27 - a game over but right now nothing
00:29 - happens so let's deal with that so here
00:33 - is the snake class let's go down to the
00:35 - function where we handle our grid
00:37 - movement so in here we are doing a timer
00:39 - and then moving our snake based on the
00:41 - grid move direction so in here we move
00:43 - the grid position so it's in here that
00:46 - we need to check if this new position is
00:48 - empty or it's a body position so after
00:51 - we do the movement and move the entire
00:53 - body let's go through every single snake
00:56 - body part and in here all we need to do
01:02 - is check if the snake body parts get
01:05 - bred position we're going to make that
01:07 - function soon so it's gonna return a
01:10 - vector to int for the snake body parts
01:14 - for its position so we get the grid
01:18 - position from that specific snake body
01:20 - part and then all we need to do is do a
01:22 - check for the grid position which is the
01:24 - position of the head if it's the same as
01:27 - the snake body part grid position then
01:29 - we have a game over so let's make this
01:38 - function on the snake body part we want
01:40 - a get grid position so down here make it
01:43 - public it's one returning vector to int
01:45 - now in here we want to return the
01:47 - current grid position so the grid
01:49 - position is based on the snake move
01:50 - position so we return that that get
01:53 - grade position again the snake move
01:56 - position was created in the previous
01:57 - video and it simply handles one move
01:59 - position for the snake so just like this
02:01 - we shouldn't have the basics for testing
02:04 - for snake tap so let's go up here and
02:06 - this is what's happening we go through
02:08 - the entire body part list we get the
02:10 - grid position that that body part is in
02:12 - we check if it's the same as the head
02:14 - grid position and if so we got a pop-up
02:17 - saying game over so let's see okay so
02:20 - here's the snake with enough of a body
02:21 - size to test for our game over
02:23 - so let's go
02:24 - now I wrap around and yep there you go
02:26 - there's the pop up when we went through
02:28 - our body we see the pop up where we
02:30 - should have a game over okay so
02:33 - everything is working correctly now
02:35 - obviously we don't want the snake to
02:37 - keep moving after achieving a game over
02:39 - so let's sort that out
02:40 - so in our snake class we can simply go
02:43 - all the way up here and we're going to
02:45 - create a state and the update will only
02:47 - run this code once the state is alive so
02:50 - let's do that make a private room for
02:53 - the state of our snake and the possible
02:57 - states are alive or dead and let's store
03:01 - a private state for our state and by
03:04 - default let's make our state equal state
03:07 - out alive and in our update simply do a
03:12 - switch on the state in case we are on
03:16 - state are alive then we run this code
03:18 - same as previously in case we are on
03:21 - state then we do nothing all right so
03:24 - now all we need to do is modify our
03:26 - state to become dead so let's go down
03:28 - here onto our pop-up saying that we are
03:31 - dead and what simply set the state
03:32 - equals state that dead okay so let's see
03:36 - if our snake stops moving when it dies
03:37 - okay here's our snake now let's wrap
03:40 - around and hit the body and yep there
03:41 - you go it's dead and these snakes
03:43 - stopped all right great so we now have a
03:45 - correct game over state so now that we
03:48 - have death working let's deal with
03:49 - another part of the design which is the
03:51 - 11 wraparound right now the level has no
03:53 - boundaries so here on start if I go to
03:56 - the right you can see that this net just
03:57 - keeps going forever obviously we want
03:59 - the snake to stay inside the level so
04:01 - when it gets to the right side it should
04:03 - appear on the left side so let's do that
04:06 - here on this necklace let's see where we
04:08 - are moving our snake here is the great
04:10 - position and after we move it let's ask
04:13 - the 11th grade to validate our new word
04:15 - position so let's make a function on the
04:17 - 11 where in in that function we're going
04:20 - to return a vector to end for the
04:21 - validated great position now let's count
04:24 - to validate great position so we receive
04:29 - a red position and we make sure it is
04:31 - valid so if the grid position that X is
04:35 - under zero then we've
04:37 - on off the map to the left side in that
04:39 - case let's set the grid position that X
04:41 - to be width minus 1 so the width
04:45 - contains the entire size of the grid so
04:47 - in our case we are setting it with 20/20
04:50 - so that means that our grid goes from 0
04:52 - to 19 so in here we are setting to the
04:54 - complete right side which is 20 minus
04:56 - 119 now let's do the same thing for the
04:59 - height and after we validate let's
05:05 - return our grid position okay this
05:08 - should be correct so now let's go into
05:09 - the snake so we can call this function
05:11 - here in our snake we move our grid
05:13 - position then we ask the 11 grid to
05:16 - validate our grid position and we
05:19 - replace the grid position with the
05:21 - validated right position so let's test
05:23 - our code and see if everything is
05:24 - working okay there's a snake going to
05:26 - the left let's see what happens it goes
05:29 - there and yep it now showed up on the
05:31 - right side so now let's test the border
05:34 - down and it's moving down and yep it
05:36 - showed up up there all right
05:38 - great so now let's apply the same logic
05:40 - to the right and upper sides so all we
05:43 - do is if the grit position that X if it
05:46 - is bigger than the width minus 1 then we
05:48 - have gone off the map from the right
05:50 - side so we simply set the grid position
05:53 - that X to be 0 same thing on the height
06:00 - okay so let's test and see if the right
06:03 - border and the upper border are also
06:05 - wrapping around correctly there's a
06:07 - snake moving to the right and yep there
06:10 - you go it gets their town ports on the
06:12 - left side from the left teleport to the
06:13 - right from Downey teleport up and from
06:17 - up you teleport down so there you go we
06:19 - got our level wraparound working
06:22 - correctly and also let's make sure
06:24 - everything still works with a large body
06:26 - ok there's a very large body now let's
06:28 - try going into a corner and if there you
06:31 - go it shows up in there now I try going
06:33 - down there and there it is and there
06:35 - this so we have our snake right position
06:38 - correctly wrapping around all of them
06:39 - and works perfectly fine for all the
06:41 - other body parts and we can still eat an
06:43 - apple and there you go show up on that
06:45 - side eat another one and
06:47 - everything works perfectly fine and
06:48 - finally let's also make sure our game
06:51 - over is still working so let's wrap
06:53 - around that side and now back to down
06:55 - and crash and yep there you go our snake
06:57 - has done so there you have it we added a
06:59 - game over state when we hit the snake
07:01 - body and also the ability to wrap around
07:03 - the level in the next video we're going
07:05 - to set up the UI to show our current
07:07 - score as always you can download the
07:09 - project fountain attorneys from in
07:11 - Tacoma keep calm if you have any
07:12 - questions possum any comments around in
07:14 - my best answer them subscribe for more
07:16 - videos and I'll see you next time

Cleaned transcript:

hello and welcome I'm your code monkey miniseries were making snake in unity in this video we're going to add snake death and wrap around the level let's begin okay so here's our game so far we have the snake move around we can eat food which will grow the snake by one segment and all the sprites are correctly displayed you can see the corners when the snake moves they look correctly right now I can go through the snake like that there you go that should cause a game over but right now nothing happens so let's deal with that so here is the snake class let's go down to the function where we handle our grid movement so in here we are doing a timer and then moving our snake based on the grid move direction so in here we move the grid position so it's in here that we need to check if this new position is empty or it's a body position so after we do the movement and move the entire body let's go through every single snake body part and in here all we need to do is check if the snake body parts get bred position we're going to make that function soon so it's gonna return a vector to int for the snake body parts for its position so we get the grid position from that specific snake body part and then all we need to do is do a check for the grid position which is the position of the head if it's the same as the snake body part grid position then we have a game over so let's make this function on the snake body part we want a get grid position so down here make it public it's one returning vector to int now in here we want to return the current grid position so the grid position is based on the snake move position so we return that that get grade position again the snake move position was created in the previous video and it simply handles one move position for the snake so just like this we shouldn't have the basics for testing for snake tap so let's go up here and this is what's happening we go through the entire body part list we get the grid position that that body part is in we check if it's the same as the head grid position and if so we got a popup saying game over so let's see okay so here's the snake with enough of a body size to test for our game over so let's go now I wrap around and yep there you go there's the pop up when we went through our body we see the pop up where we should have a game over okay so everything is working correctly now obviously we don't want the snake to keep moving after achieving a game over so let's sort that out so in our snake class we can simply go all the way up here and we're going to create a state and the update will only run this code once the state is alive so let's do that make a private room for the state of our snake and the possible states are alive or dead and let's store a private state for our state and by default let's make our state equal state out alive and in our update simply do a switch on the state in case we are on state are alive then we run this code same as previously in case we are on state then we do nothing all right so now all we need to do is modify our state to become dead so let's go down here onto our popup saying that we are dead and what simply set the state equals state that dead okay so let's see if our snake stops moving when it dies okay here's our snake now let's wrap around and hit the body and yep there you go it's dead and these snakes stopped all right great so we now have a correct game over state so now that we have death working let's deal with another part of the design which is the 11 wraparound right now the level has no boundaries so here on start if I go to the right you can see that this net just keeps going forever obviously we want the snake to stay inside the level so when it gets to the right side it should appear on the left side so let's do that here on this necklace let's see where we are moving our snake here is the great position and after we move it let's ask the 11th grade to validate our new word position so let's make a function on the 11 where in in that function we're going to return a vector to end for the validated great position now let's count to validate great position so we receive a red position and we make sure it is valid so if the grid position that X is under zero then we've on off the map to the left side in that case let's set the grid position that X to be width minus 1 so the width contains the entire size of the grid so in our case we are setting it with 20/20 so that means that our grid goes from 0 to 19 so in here we are setting to the complete right side which is 20 minus 119 now let's do the same thing for the height and after we validate let's return our grid position okay this should be correct so now let's go into the snake so we can call this function here in our snake we move our grid position then we ask the 11 grid to validate our grid position and we replace the grid position with the validated right position so let's test our code and see if everything is working okay there's a snake going to the left let's see what happens it goes there and yep it now showed up on the right side so now let's test the border down and it's moving down and yep it showed up up there all right great so now let's apply the same logic to the right and upper sides so all we do is if the grit position that X if it is bigger than the width minus 1 then we have gone off the map from the right side so we simply set the grid position that X to be 0 same thing on the height okay so let's test and see if the right border and the upper border are also wrapping around correctly there's a snake moving to the right and yep there you go it gets their town ports on the left side from the left teleport to the right from Downey teleport up and from up you teleport down so there you go we got our level wraparound working correctly and also let's make sure everything still works with a large body ok there's a very large body now let's try going into a corner and if there you go it shows up in there now I try going down there and there it is and there this so we have our snake right position correctly wrapping around all of them and works perfectly fine for all the other body parts and we can still eat an apple and there you go show up on that side eat another one and everything works perfectly fine and finally let's also make sure our game over is still working so let's wrap around that side and now back to down and crash and yep there you go our snake has done so there you have it we added a game over state when we hit the snake body and also the ability to wrap around the level in the next video we're going to set up the UI to show our current score as always you can download the project fountain attorneys from in Tacoma keep calm if you have any questions possum any comments around in my best answer them subscribe for more videos and I'll see you next time
