With timestamps:

00:00 - in this video we're going to make a
00:01 - shader to blur sprite in shadow bruh
00:03 - this is a simple shader that is
00:05 - customizable and easily animated let's
00:07 - begin
00:11 - [Music]
00:15 - hello and welcome I'm your code monkey
00:17 - and this channel is all about helping
00:19 - you learn how to make your own games
00:20 - with nf2 torrents made by a professional
00:22 - indie game developer so if you find the
00:24 - video helpful consider subscribing okay
00:27 - so this is what we want to make over
00:28 - here is my character looking normal now
00:31 - using a very nice simple script I can
00:33 - press a button and there you go there
00:35 - Daisy sprite is nicely animated and
00:37 - becomes more so press it again and there
00:40 - you go it goes back to normal
00:41 - here I can use the inspector to manually
00:44 - change it as well so as you can see we
00:46 - have our nice slider for the Marmont and
00:48 - with the power amount of zero the sprite
00:49 - looks perfectly normal and now I can
00:52 - increase it and as I do there you go the
00:54 - sprite becomes more and more blurred the
00:56 - whole shader is extremely simple
00:57 - especially if you've seen my previous
00:59 - outline chatter alright so this is our
01:02 - goal let's get to it
01:03 - okay so here I am in my starring scene
01:06 - let's begin by making our shader so we
01:09 - make a new shader go up here to the
01:12 - renderer and a sprite lit graph let's
01:16 - call this our boarder and open it up
01:18 - okay here we are in our shadow graph
01:20 - there are simple sprite master node now
01:22 - the first thing we need is obviously a
01:24 - texture so go into our properties and
01:26 - create a new texture 2d call this the
01:29 - main text and set the reference to
01:32 - underscore main text this is the default
01:35 - name for the primary texture it needs to
01:38 - be set exactly like this in order for
01:39 - the sprite renderer to apply to the
01:41 - sprite so here for deform let's unlike
01:43 - the character sprite so now we drag the
01:45 - texture onto our board and now in here
01:48 - this node is of type texture and our
01:50 - Messer node requires a color so we need
01:52 - to simple this texture so make a sample
01:54 - texture 2d node and we just drag the
01:58 - texture and drag out the RGB a so there
02:01 - it is just like that our character just
02:03 - right click and it's unlike the preview
02:04 - guys are quiet okay there it is okay so
02:07 - far so good
02:08 - let's test this out on our
02:09 - character so first we save the asset
02:11 - back in project files let's create a new
02:14 - material and now we go into our shader
02:17 - drop down go into graphs and select
02:19 - our color shader and there it is already
02:21 - selected with default spreadsheet over
02:23 - here I have my player character inside
02:25 - there is the body with the mesh renderer
02:27 - and just drag it
02:28 - there okay let's test and if there is
02:31 - there's a character and looking normal
02:33 - just sitting around okay
02:34 - so far so good now back in our shadow
02:36 - graph our goal is to make a polar shader
02:38 - so the way we're going to do that is
02:40 - very similar to how we did in the
02:42 - outline chatter so if you've seen that
02:44 - video you'll be able to easily
02:45 - understand how this effect works we have
02:47 - our texture and now we need to offset it
02:50 - by a little bit so we make a tiling and
02:52 - offset node we drag the output of this
02:55 - onto our UV and now here we can modify
02:57 - the x-value so as you can see it shifts
02:59 - the texture and left or right so let's
03:01 - put this on point zero one just shift it
03:04 - slightly to the left
03:05 - so this is how our effect is going to
03:07 - work now you can duplicate this and drag
03:10 - it down here and on this one let's shift
03:13 - it on - point zero one so this one is
03:15 - shifted to the left and listen to the
03:17 - right then we both these two shifts we
03:20 - can create a nice add node now we have
03:25 - this texture onto this texture and there
03:28 - you can already see kind of the effect
03:30 - and now we take this output and just
03:32 - drag it into our sprite master okay
03:34 - there it is let's test and if there it
03:37 - is and the character is indeed shifted
03:38 - to the left and to the right however you
03:40 - can obviously see that it is a bit way
03:42 - too bright so let's go back to the
03:44 - shader and in here the reason why it's
03:46 - too bright is because we're simply
03:47 - adding two textures one on to another so
03:50 - after we combine both textures we need
03:52 - to add a divide node in order to make
03:55 - sure that we divide this input by how
03:57 - many texture samples we have so in this
03:59 - case - now we take this output put it in
04:01 - there now test and if there's our
04:04 - character already looking a bit blurred
04:06 - with the correct course awesome now
04:08 - let's make our blur amount customizable
04:10 - so back in our shader graph we have our
04:12 - nice graph very simple okay now let's
04:14 - add another property this will be a
04:16 - vector one so essentially a float and
04:18 - we're going to call this the blur amount
04:20 - and let's set the reference to
04:23 - underscore blur amount and now let's
04:26 - drag it in here before our tiling and
04:28 - offsets okay so we have this vector
04:30 - which is exposed okay however in here we
04:33 - need to use this float as part of a
04:35 - vector - so we need to construct that
04:37 - for active - and the way we do that is
04:38 - with a combined node
04:40 - now here it's a bit confusing because
04:42 - the labels are set for colors but it
04:45 - works the same way for a position vector
04:46 - so the R equals the X and the G equals
04:49 - the Y and the B would equal to Z so in
04:52 - this case let's drag the polar amount
04:54 - onto the R so the X and you grab the RG
04:58 - output which is going to be the XY
05:00 - output and we drag it in there and there
05:02 - you go
05:03 - if we set the same amount which was at
05:05 - point zero one there you go it looks
05:07 - exactly the same
05:08 - all right great now we need for this one
05:11 - and this one is going to be exactly the
05:13 - same amount except its offset on the
05:15 - opposite direction so we can simply take
05:18 - this node add a nice negate node and we
05:21 - negate this output and we use this one
05:24 - as our offset and there it is everything
05:26 - looks exactly the same so we have this
05:27 - one and if I shift it there you go as
05:30 - you can see there shifted a bit more or
05:31 - bit less right great
05:44 - okay so here's our effect so far we have
05:46 - our blur amount we combine it to
05:48 - construct our nice vector two to use on
05:50 - the offset one of them is normal and one
05:52 - is negated then we have our two texture
05:54 - samples we add both of them together
05:56 - then we divide them by two in order to
05:58 - match up the colors then we pass them
05:59 - all into the sprite master okay let's
06:02 - test okay here we are with our children
06:04 - and as you can see we have our poor
06:05 - amount and now we can modify this we can
06:08 - increase it and decrease it and there
06:10 - you go as you can see it's working
06:11 - correctly all right so we have exposed
06:13 - this nice property
06:14 - now it's had a nice little quality of
06:16 - life improvement so right now over here
06:19 - on the employment we are working with a
06:20 - very tiny value we are using 0.01 we
06:24 - have to use such a tiny amount because
06:25 - the values are normalized for the
06:27 - texture so the entire texture from this
06:29 - side it's zero and from here it's one
06:31 - however we can use some simpler numbers
06:34 - by adding a simple constant so in here
06:36 - we add a vector one node and let's set
06:38 - it to point zero one and now before we
06:40 - do all of our math let's simply multiply
06:44 - our nice point amount by the vector one
06:47 - and then we take this output and we
06:50 - connect it into the are so by doing this
06:54 - we can now use some more normal values
06:55 - on the employer amount for example one
06:57 - that's what we had previously now we can
06:59 - use two three four and so on and we are
07:02 - working with most important numbers so
07:04 - in here let's also switches into a
07:05 - slider put it from zero to let's say ten
07:08 - so again this is not a necessary step
07:11 - it's just a nice quality of life
07:12 - improvement so let's see this in game ok
07:15 - so here we are and we have our nice blur
07:17 - amount slider and it's currently at zero
07:19 - so this problem looks perfectly normal
07:20 - and drag it and there you go we can see
07:22 - our effect start to happen so there you
07:24 - go just like that we have our nice
07:26 - slider right awesome so right now you
07:28 - can all really see how the effect works
07:30 - all we need to do is add two more
07:32 - directions going up and going down so
07:34 - back in the shadow graph here is our
07:36 - shader so far we have our two texture
07:38 - samples now all we need to do is
07:40 - actually duplicate this so let's
07:42 - duplicate both the samples as well as
07:45 - the telling offset then also duplicate
07:47 - the ad and let's also duplicate the
07:49 - construction of the vector and the
07:51 - negate so hit control D in order to
07:53 - duplicate and drag them all down here
07:57 - now the only difference for this sector
07:59 - is that instead of applying the molar
08:01 - amount on the X field which over here
08:03 - we're setting on the R we're going to
08:05 - apply it to the Y field which is going
08:07 - to be G so let's say this value in here
08:10 - and we're going to apply it into our
08:12 - gene and everything else is pretty much
08:14 - the same so over here we can already see
08:16 - if we put a large apparently there it is
08:18 - this one is shifted down this one is
08:20 - shifted up and there it is the ad okay
08:22 - so now we can take this output in here
08:24 - and we need to add it together with the
08:26 - horizontal so when you add note let's
08:29 - add this one on to this one and there it
08:32 - is now we have four directions and now
08:35 - we simply do it divided after this one
08:39 - except again in here we are using four
08:42 - sample textures so instead of dividing
08:43 - everything by two we divide everything
08:44 - by 4 and there it is our colors are now
08:47 - correct all right so that's pretty much
08:49 - it we have our blur on the x-axis
08:52 - and the employer on the y-axis let's
08:54 - test okay here's the sprite with the
08:56 - polar amount at zero so it looks
08:58 - perfectly normal
08:58 - all right now let's drag it up and there
09:01 - you can already see a very nice boring
09:03 - effect so if we increase it massively we
09:05 - can see how they diverge we see one
09:07 - above one down one right and one left
09:09 - all right awesome so just like this the
09:13 - effect already looks great and if you
09:15 - have performance limits this is probably
09:17 - good enough for most cases however let's
09:19 - try to push it one step further and blur
09:21 - on the diagonals as well so for that
09:24 - over here I'm going to do pretty much
09:25 - the same thing in simple form or
09:27 - textures except in this case on the
09:29 - diagonals
09:47 - any up here it is I have had it for more
09:50 - samples down here so on this one we are
09:52 - constructing a vector on the RN on the G
09:55 - so on the x and y so it's going to be 1
09:58 - 1 and then when we negate it we have
10:00 - minus 1 minus 1 so you can see the
10:02 - output
10:02 - this one goes left down this one up
10:04 - right and here it is both of them
10:06 - combined and then down here we are
10:08 - combining a vector with 1 on the X and
10:11 - minus 1 on the Y so for this one in here
10:14 - we have up and to the left and this one
10:16 - down in to the right and here it is them
10:17 - add it then we add both diagonals
10:19 - together then we have the diagonals on
10:21 - top of the horizontals so here it is and
10:24 - as you can see the cones are all massive
10:26 - so then we have to divide and in this
10:27 - case we have 8 samples so we divide
10:29 - everything by 8 so as you can see very
10:31 - simple it's just copying the exact same
10:34 - logic every single time all right so now
10:36 - let's check it out in game so here we
10:38 - have our completely unplug and now if I
10:42 - increase the ball mount and there yo you
10:43 - can see our very nice effect so increase
10:46 - it massively and there you go we can't
10:48 - see anything there it is
10:49 - just like that very nice blur effect now
10:52 - in here I have a very simple script that
10:54 - we can use to modify the employer
10:56 - through code so it's extremely simple we
10:59 - just have a field for our material then
11:01 - we have a float or amount any boolean if
11:03 - the bar is active then our update we
11:06 - simply listen to a key input to test it
11:08 - out and if the bowler is active we
11:10 - increase the amount and if the bowler is
11:12 - not active then we decrease it then
11:14 - after modifying it we simply clamp it so
11:16 - in here instead of being between 0 & 1
11:18 - we're going to clamp it between 0 and 10
11:20 - F and then finally simply go into the
11:23 - material in order to set the float of
11:24 - underscore for amount again remember
11:27 - that name is the one that we use here on
11:29 - the reference so underscore polar mount
11:30 - this is the field we're going to modify
11:32 - so we set that one to this wire month
11:34 - there it is extremely simple let's see
11:36 - okay so here we are and there's the
11:38 - sprite Foley visible now I can press a
11:40 - button and there you go the sprite
11:42 - becomes WordPress again and comes back
11:44 - to normal so press GO press normal
11:46 - alright so here it is very simple to
11:48 - control our shader through our
11:50 - interactive code so again here is the
11:52 - shadowgraph
11:53 - it's extremely simple we just really
11:55 - need to sample the same texture multiple
11:57 - times every time we do we offset it in
12:00 - a different direction then we add all of
12:02 - them together and once we do the colors
12:04 - are almost white since their own being
12:06 - added together so we need to divide them
12:08 - and then we simply pass it into our
12:10 - sprite light master so as you can see
12:12 - the logic is extremely simple and here
12:14 - is the effect again and it looks quite
12:16 - great as always you can download the
12:18 - project files in utilities from in
12:20 - Tacoma com subscribe to the channel for
12:22 - more unity tutorials post any questions
12:24 - you have in the comments and I'll see
12:25 - you next time
12:28 - [Music]

Cleaned transcript:

in this video we're going to make a shader to blur sprite in shadow bruh this is a simple shader that is customizable and easily animated let's begin hello and welcome I'm your code monkey and this channel is all about helping you learn how to make your own games with nf2 torrents made by a professional indie game developer so if you find the video helpful consider subscribing okay so this is what we want to make over here is my character looking normal now using a very nice simple script I can press a button and there you go there Daisy sprite is nicely animated and becomes more so press it again and there you go it goes back to normal here I can use the inspector to manually change it as well so as you can see we have our nice slider for the Marmont and with the power amount of zero the sprite looks perfectly normal and now I can increase it and as I do there you go the sprite becomes more and more blurred the whole shader is extremely simple especially if you've seen my previous outline chatter alright so this is our goal let's get to it okay so here I am in my starring scene let's begin by making our shader so we make a new shader go up here to the renderer and a sprite lit graph let's call this our boarder and open it up okay here we are in our shadow graph there are simple sprite master node now the first thing we need is obviously a texture so go into our properties and create a new texture 2d call this the main text and set the reference to underscore main text this is the default name for the primary texture it needs to be set exactly like this in order for the sprite renderer to apply to the sprite so here for deform let's unlike the character sprite so now we drag the texture onto our board and now in here this node is of type texture and our Messer node requires a color so we need to simple this texture so make a sample texture 2d node and we just drag the texture and drag out the RGB a so there it is just like that our character just right click and it's unlike the preview guys are quiet okay there it is okay so far so good let's test this out on our character so first we save the asset back in project files let's create a new material and now we go into our shader drop down go into graphs and select our color shader and there it is already selected with default spreadsheet over here I have my player character inside there is the body with the mesh renderer and just drag it there okay let's test and if there is there's a character and looking normal just sitting around okay so far so good now back in our shadow graph our goal is to make a polar shader so the way we're going to do that is very similar to how we did in the outline chatter so if you've seen that video you'll be able to easily understand how this effect works we have our texture and now we need to offset it by a little bit so we make a tiling and offset node we drag the output of this onto our UV and now here we can modify the xvalue so as you can see it shifts the texture and left or right so let's put this on point zero one just shift it slightly to the left so this is how our effect is going to work now you can duplicate this and drag it down here and on this one let's shift it on point zero one so this one is shifted to the left and listen to the right then we both these two shifts we can create a nice add node now we have this texture onto this texture and there you can already see kind of the effect and now we take this output and just drag it into our sprite master okay there it is let's test and if there it is and the character is indeed shifted to the left and to the right however you can obviously see that it is a bit way too bright so let's go back to the shader and in here the reason why it's too bright is because we're simply adding two textures one on to another so after we combine both textures we need to add a divide node in order to make sure that we divide this input by how many texture samples we have so in this case now we take this output put it in there now test and if there's our character already looking a bit blurred with the correct course awesome now let's make our blur amount customizable so back in our shader graph we have our nice graph very simple okay now let's add another property this will be a vector one so essentially a float and we're going to call this the blur amount and let's set the reference to underscore blur amount and now let's drag it in here before our tiling and offsets okay so we have this vector which is exposed okay however in here we need to use this float as part of a vector so we need to construct that for active and the way we do that is with a combined node now here it's a bit confusing because the labels are set for colors but it works the same way for a position vector so the R equals the X and the G equals the Y and the B would equal to Z so in this case let's drag the polar amount onto the R so the X and you grab the RG output which is going to be the XY output and we drag it in there and there you go if we set the same amount which was at point zero one there you go it looks exactly the same all right great now we need for this one and this one is going to be exactly the same amount except its offset on the opposite direction so we can simply take this node add a nice negate node and we negate this output and we use this one as our offset and there it is everything looks exactly the same so we have this one and if I shift it there you go as you can see there shifted a bit more or bit less right great okay so here's our effect so far we have our blur amount we combine it to construct our nice vector two to use on the offset one of them is normal and one is negated then we have our two texture samples we add both of them together then we divide them by two in order to match up the colors then we pass them all into the sprite master okay let's test okay here we are with our children and as you can see we have our poor amount and now we can modify this we can increase it and decrease it and there you go as you can see it's working correctly all right so we have exposed this nice property now it's had a nice little quality of life improvement so right now over here on the employment we are working with a very tiny value we are using 0.01 we have to use such a tiny amount because the values are normalized for the texture so the entire texture from this side it's zero and from here it's one however we can use some simpler numbers by adding a simple constant so in here we add a vector one node and let's set it to point zero one and now before we do all of our math let's simply multiply our nice point amount by the vector one and then we take this output and we connect it into the are so by doing this we can now use some more normal values on the employer amount for example one that's what we had previously now we can use two three four and so on and we are working with most important numbers so in here let's also switches into a slider put it from zero to let's say ten so again this is not a necessary step it's just a nice quality of life improvement so let's see this in game ok so here we are and we have our nice blur amount slider and it's currently at zero so this problem looks perfectly normal and drag it and there you go we can see our effect start to happen so there you go just like that we have our nice slider right awesome so right now you can all really see how the effect works all we need to do is add two more directions going up and going down so back in the shadow graph here is our shader so far we have our two texture samples now all we need to do is actually duplicate this so let's duplicate both the samples as well as the telling offset then also duplicate the ad and let's also duplicate the construction of the vector and the negate so hit control D in order to duplicate and drag them all down here now the only difference for this sector is that instead of applying the molar amount on the X field which over here we're setting on the R we're going to apply it to the Y field which is going to be G so let's say this value in here and we're going to apply it into our gene and everything else is pretty much the same so over here we can already see if we put a large apparently there it is this one is shifted down this one is shifted up and there it is the ad okay so now we can take this output in here and we need to add it together with the horizontal so when you add note let's add this one on to this one and there it is now we have four directions and now we simply do it divided after this one except again in here we are using four sample textures so instead of dividing everything by two we divide everything by 4 and there it is our colors are now correct all right so that's pretty much it we have our blur on the xaxis and the employer on the yaxis let's test okay here's the sprite with the polar amount at zero so it looks perfectly normal all right now let's drag it up and there you can already see a very nice boring effect so if we increase it massively we can see how they diverge we see one above one down one right and one left all right awesome so just like this the effect already looks great and if you have performance limits this is probably good enough for most cases however let's try to push it one step further and blur on the diagonals as well so for that over here I'm going to do pretty much the same thing in simple form or textures except in this case on the diagonals any up here it is I have had it for more samples down here so on this one we are constructing a vector on the RN on the G so on the x and y so it's going to be 1 1 and then when we negate it we have minus 1 minus 1 so you can see the output this one goes left down this one up right and here it is both of them combined and then down here we are combining a vector with 1 on the X and minus 1 on the Y so for this one in here we have up and to the left and this one down in to the right and here it is them add it then we add both diagonals together then we have the diagonals on top of the horizontals so here it is and as you can see the cones are all massive so then we have to divide and in this case we have 8 samples so we divide everything by 8 so as you can see very simple it's just copying the exact same logic every single time all right so now let's check it out in game so here we have our completely unplug and now if I increase the ball mount and there yo you can see our very nice effect so increase it massively and there you go we can't see anything there it is just like that very nice blur effect now in here I have a very simple script that we can use to modify the employer through code so it's extremely simple we just have a field for our material then we have a float or amount any boolean if the bar is active then our update we simply listen to a key input to test it out and if the bowler is active we increase the amount and if the bowler is not active then we decrease it then after modifying it we simply clamp it so in here instead of being between 0 & 1 we're going to clamp it between 0 and 10 F and then finally simply go into the material in order to set the float of underscore for amount again remember that name is the one that we use here on the reference so underscore polar mount this is the field we're going to modify so we set that one to this wire month there it is extremely simple let's see okay so here we are and there's the sprite Foley visible now I can press a button and there you go the sprite becomes WordPress again and comes back to normal so press GO press normal alright so here it is very simple to control our shader through our interactive code so again here is the shadowgraph it's extremely simple we just really need to sample the same texture multiple times every time we do we offset it in a different direction then we add all of them together and once we do the colors are almost white since their own being added together so we need to divide them and then we simply pass it into our sprite light master so as you can see the logic is extremely simple and here is the effect again and it looks quite great as always you can download the project files in utilities from in Tacoma com subscribe to the channel for more unity tutorials post any questions you have in the comments and I'll see you next time
