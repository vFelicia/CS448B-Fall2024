With timestamps:

00:00 - hello and welcome I'm your Cod monkey
00:02 - here's a super quick video about a
00:03 - really useful Visual Studio feature that
00:05 - you might not know about when working
00:07 - with Json you need to define the class
00:09 - or stru to hold the data with all the
00:11 - names and types so as an example over
00:13 - here is the YouTube API which has tons
00:15 - of endpoints this one is for listening
00:17 - videos and if we scroll down we can see
00:19 - how it's structured so here it is this
00:21 - is the structure for the response it's
00:23 - got a bunch of string fields and the
00:24 - page info and then array with all the
00:26 - items and the items are all of type
00:27 - video resource which in turn then has
00:30 - this huge definition so manually you'd
00:32 - have to build all of these films
00:33 - yourself if you want to get this Json in
00:35 - your game or app or alternatively there
00:37 - is a much simpler automated method that
00:39 - I just found out a few months ago first
00:41 - thing you do is you get the Json so over
00:43 - here I'm going to make a request on this
00:45 - endpoint let's just grab my liked videos
00:48 - then just run this query and if there
00:50 - you go here is all of the return data so
00:52 - now what I can do is just pick up all
00:54 - this Chon so let me copy the whole thing
00:56 - select it all and copy and then over
00:58 - here in Visual Studio here is the one
01:00 - second method you just go up into edit
01:02 - then go into paste special and then
01:04 - paste Json as classes and if there you
01:06 - go it creates the entire structure for
01:08 - all the Json in the clipboard so our
01:10 - entire complex Json object was
01:12 - automatically converted into a proper
01:14 - class definition you can see that on the
01:16 - root object we've got the kind e tag
01:18 - which over here yep that's exactly what
01:20 - we've got and then we've got an array of
01:22 - items for all of our video resources and
01:24 - Y here it is the same thing so we've got
01:25 - items so it has an objective type item
01:28 - so here it is it's got the kind e then
01:30 - inside we've got the snippet then the
01:31 - snippet has the channel ID title
01:33 - description and so on so the simple
01:35 - method just going into edit paste
01:37 - special and past on classes this is
01:39 - super awesome it really saves you a ton
01:40 - of work for example I have my live
01:42 - stream overlay which use the YouTube API
01:45 - when I first built it I did not know
01:46 - about this so I had to manually
01:48 - painstakingly create the entire
01:50 - structure one by one knowing about this
01:52 - awesome visual studio feature would have
01:53 - definitely saved me a ton of time so
01:55 - hopefully this quick video helps someone
01:57 - and another quick mention C also has the
01:59 - Dynamic keyword so one alternative is if
02:03 - you're using json.net you can do it just
02:05 - like this all right hope that's useful
02:07 - check out these videos to learn some
02:08 - more thanks to these awesome patreon
02:10 - supporters for making these videos
02:12 - possible thank you for watching and I'll
02:14 - see you next
02:18 - [Music]
02:21 - time

Cleaned transcript:

hello and welcome I'm your Cod monkey here's a super quick video about a really useful Visual Studio feature that you might not know about when working with Json you need to define the class or stru to hold the data with all the names and types so as an example over here is the YouTube API which has tons of endpoints this one is for listening videos and if we scroll down we can see how it's structured so here it is this is the structure for the response it's got a bunch of string fields and the page info and then array with all the items and the items are all of type video resource which in turn then has this huge definition so manually you'd have to build all of these films yourself if you want to get this Json in your game or app or alternatively there is a much simpler automated method that I just found out a few months ago first thing you do is you get the Json so over here I'm going to make a request on this endpoint let's just grab my liked videos then just run this query and if there you go here is all of the return data so now what I can do is just pick up all this Chon so let me copy the whole thing select it all and copy and then over here in Visual Studio here is the one second method you just go up into edit then go into paste special and then paste Json as classes and if there you go it creates the entire structure for all the Json in the clipboard so our entire complex Json object was automatically converted into a proper class definition you can see that on the root object we've got the kind e tag which over here yep that's exactly what we've got and then we've got an array of items for all of our video resources and Y here it is the same thing so we've got items so it has an objective type item so here it is it's got the kind e then inside we've got the snippet then the snippet has the channel ID title description and so on so the simple method just going into edit paste special and past on classes this is super awesome it really saves you a ton of work for example I have my live stream overlay which use the YouTube API when I first built it I did not know about this so I had to manually painstakingly create the entire structure one by one knowing about this awesome visual studio feature would have definitely saved me a ton of time so hopefully this quick video helps someone and another quick mention C also has the Dynamic keyword so one alternative is if you're using json.net you can do it just like this all right hope that's useful check out these videos to learn some more thanks to these awesome patreon supporters for making these videos possible thank you for watching and I'll see you next time
