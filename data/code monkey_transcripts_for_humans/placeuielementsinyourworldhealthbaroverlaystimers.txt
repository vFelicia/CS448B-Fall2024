With timestamps:

00:00 - in this video we're going to learn about
00:01 - using a world space canvas
00:03 - this is a very interesting feature that
00:04 - allows you to play around with ui
00:06 - elements that are placed physically in
00:07 - your world
00:08 - let's begin
00:09 - [Music]
00:13 - okay so this is going to be a really
00:15 - quick video since it's such a simple
00:17 - thing but still i want to make a video
00:18 - just in case you're not familiar with
00:20 - now this is the way that you can use the
00:22 - extremely powerful ui elements
00:24 - and position them in your world for
00:26 - example in my complete builder defender
00:28 - course i used a warrant canvas for
00:30 - displaying the construction timer circle
00:32 - display
00:33 - just a very simple rotating effect that
00:35 - would be very tricky to do with normal
00:36 - sprite renders but it is very easy with
00:38 - a world canvas
00:40 - check out the complete course linked in
00:41 - the description if you want to learn
00:42 - more
00:43 - now let's say you're working on some
00:44 - sort of rts so you have a whole bunch of
00:46 - units
00:47 - and you want to make a health bar on top
00:48 - of each unit now the first approach is
00:51 - you can make a health bar using sprite
00:53 - renders in fact i already covered how to
00:55 - do that in several videos
01:06 - so for example here is a health bar so
01:09 - we have a container game object then
01:10 - inside a border which is just a black
01:12 - sprite then inside we have a container
01:15 - for the actual bar
01:16 - and it's set up in such a way so that i
01:18 - can modify the scale on this object and
01:19 - moves from left to right
01:20 - and then inside i have the actual bar
01:22 - sprite visual alright so like this it
01:24 - works
01:25 - but you can see it's pretty complex to
01:26 - make just a normal bar
01:28 - so let's see how we can make a simple
01:30 - health bar just in the ui
01:32 - so let's open up the ui go into the
01:34 - canvas and here it's really very simple
01:36 - you just go
01:37 - add a ui image and there you go tint it
01:40 - in red
01:41 - give it a certain sprite and now here
01:44 - the ui
01:45 - image has this really nice image type so
01:47 - let's set it to filled
01:48 - and in here set it to horizontal
01:50 - starting from the left and there you go
01:52 - now just size it accordingly and just
01:54 - with this we already have a working
01:56 - health bar so in here it's set to film
01:58 - fill on the horizontal and we can easily
02:00 - set the fill amount and it automatically
02:02 - fills it correctly
02:03 - so if you want we can then add another
02:05 - one on the background
02:06 - and even add the outline script
02:09 - and there you go over here we have a
02:11 - much simpler much easier to use health
02:12 - bar
02:13 - so making a health bar in the ui using
02:15 - an image is much simpler than making the
02:17 - world using sprite renders
02:19 - then obviously this has even more
02:21 - options so we can fill it
02:23 - for example let's fill it radially and
02:26 - just like that now we got this real nice
02:27 - effect that would be really difficult to
02:29 - do when using normal sprite renders
02:31 - then we also have for example the shadow
02:33 - effect
02:34 - so there we have nice shadow outline and
02:37 - we can also put this inside a container
02:41 - and add the component canvas group and
02:44 - with this we can easily modify the alpha
02:46 - of all of our elements
02:47 - which again would be something that
02:48 - would be very tricky to do when working
02:50 - with sprite renders
02:52 - all right so as you can see the ui has
02:53 - tons of really useful features
02:55 - and when you think about all of these ui
02:57 - elements in the canvas you might think
02:58 - that they can only be used for the ui
03:00 - but that's where a world canvas comes in
03:02 - now if we select the canvas
03:04 - over here we have the canvas script and
03:06 - we have a render mode
03:08 - and right now it's set to screen space
03:10 - overlay which is the default one
03:12 - however we can select the other ones we
03:13 - can select screen space camera which
03:15 - makes it so that the ui is visible by a
03:17 - specific camera
03:19 - and lastly we have world's face which
03:20 - will make this a world canvas
03:22 - so if we selected and now we go into the
03:25 - game view
03:26 - and right away we don't see anything now
03:28 - the reason you don't see anything is
03:30 - because the canvas now exists in our
03:31 - world
03:32 - so it will be rendered by the main
03:33 - camera and if we go into the scene view
03:34 - we can see that the main camera is
03:36 - rendering down there
03:37 - but our ui elements all the way in there
03:39 - so let's bring it back over here into
03:41 - zero zero zero
03:42 - okay and now in here we can also get rid
03:44 - of the canvas scaler and just set the
03:46 - scale onto one one one
03:48 - and on the width and height for a world
03:50 - space canvas setting it to zero zero
03:51 - makes sense
03:52 - so if you look in the game view yep now
03:54 - we see our ui element
03:55 - placed in our canvas and is being
03:57 - rendered by the main camera
03:59 - alright so with this we now have a
04:00 - canvas where we can place ui elements
04:02 - and it's being rendered in our world
04:04 - now obviously the scale of this health
04:05 - bar is massive that is because the
04:07 - screen space overlay takes essentially
04:10 - a screen size for all the objects but in
04:12 - the world the units that we're using are
04:13 - much smaller so let's just resize all
04:26 - these
04:29 - so there it is here we have both of our
04:31 - health bars so one of them is made up of
04:33 - sprite renders and one of them made up
04:34 - of ui objects
04:36 - and again with this now we can use all
04:38 - the normal ui elements that exist
04:40 - so over here for example let's create an
04:42 - input field
04:44 - and there you go here is this element
04:45 - and it shows up in the world
04:47 - we could also add a really interesting
04:49 - scroll view we could add a slider
04:52 - and just about anything and over here if
04:54 - you want you can also access the sorting
04:56 - layer in order to for example make sure
04:57 - that it's always on top
04:59 - so with this now i can just copy this so
05:01 - hit copy
05:02 - go inside the prefab and just paste it
05:04 - right in here
05:09 - and there you go now this unit has a
05:11 - world canvas for its health bar
05:13 - and if there it is now every single unit
05:15 - has a really nice worm canvas health bar
05:17 - so then through a script setting all the
05:19 - film amount is extremely easy
05:21 - and like i showed using the canvas group
05:22 - makes transparency much easier than
05:24 - working with sprite renders
05:26 - so for example you could fade the health
05:27 - bar in and out much easier with this
05:29 - than using sprite renders
05:30 - and by the way here i'm showcasing this
05:32 - in 2d but everything works exactly the
05:34 - same in 3d
05:35 - so here is a 3d demo and you can see
05:38 - that over there we have a really nice
05:40 - world space canvas
05:41 - and you can see that it respects the
05:42 - camera's depth so as i go behind this
05:44 - one yep there you go it stays behind the
05:46 - object
05:47 - so it's made up of ui elements but it's
05:49 - positioned in the world
05:50 - and can be hidden by other objects just
05:52 - like pretty much any other element
05:54 - so there it is a very simple very useful
05:56 - feature
05:57 - now i should also mention that as usual
05:59 - there are pros and cons to every
06:00 - approach
06:01 - using a world space canvas is awesome
06:03 - and it can be extremely useful but also
06:05 - has some downsides
06:06 - specifically with regards to performance
06:08 - if you abuse it
06:10 - so each separate canvas uses its own
06:12 - drawcon
06:13 - so here on the frame debugger we can see
06:15 - that each renderer batch
06:16 - is being drawn separately so there you
06:19 - go each of them
06:20 - yep one by one so if you have a lot of
06:22 - canvases active at once you should
06:24 - probably make a system to disable them
06:25 - when not needed
06:27 - however a single canvas isn't really
06:29 - very expensive especially if you take
06:30 - away the raycaster component
06:32 - now another pro of using multiple
06:34 - canvases is that in a single canvas if
06:36 - anything changes then all of the
06:37 - elements need to be repainted
06:39 - so keeping static elements in a separate
06:41 - canvas from the ones that update
06:42 - constantly can actually help with
06:44 - performance
06:44 - so that's a benefit more related to
06:46 - normal canvas rather than a worm canvas
06:48 - but still nice to know
06:49 - so as long as you don't go crazy with
06:51 - hundreds of world canvas at once you
06:53 - should be fine
06:54 - alright so that's it like i said this is
06:55 - a very quick video but i'm hoping it
06:57 - helped you in case you weren't aware
06:58 - that this was an
06:59 - option it's yet another tool in your
07:01 - tonebox for making your games more
07:02 - efficiently
07:03 - this video is made possible thanks to
07:04 - these awesome supporters
07:06 - go to patreon.com unitycodemonkey to get
07:09 - some perks and help keep the videos free
07:10 - for everyone
07:11 - if you found this video helpful consider
07:13 - liking and subscribing as long as you
07:14 - can download the project files and
07:16 - utilities from unitycodemarket.com
07:17 - subscribe to the channel for more unity
07:19 - tutorials post any questions having
07:21 - comments and i'll see you next time

Cleaned transcript:

in this video we're going to learn about using a world space canvas this is a very interesting feature that allows you to play around with ui elements that are placed physically in your world let's begin okay so this is going to be a really quick video since it's such a simple thing but still i want to make a video just in case you're not familiar with now this is the way that you can use the extremely powerful ui elements and position them in your world for example in my complete builder defender course i used a warrant canvas for displaying the construction timer circle display just a very simple rotating effect that would be very tricky to do with normal sprite renders but it is very easy with a world canvas check out the complete course linked in the description if you want to learn more now let's say you're working on some sort of rts so you have a whole bunch of units and you want to make a health bar on top of each unit now the first approach is you can make a health bar using sprite renders in fact i already covered how to do that in several videos so for example here is a health bar so we have a container game object then inside a border which is just a black sprite then inside we have a container for the actual bar and it's set up in such a way so that i can modify the scale on this object and moves from left to right and then inside i have the actual bar sprite visual alright so like this it works but you can see it's pretty complex to make just a normal bar so let's see how we can make a simple health bar just in the ui so let's open up the ui go into the canvas and here it's really very simple you just go add a ui image and there you go tint it in red give it a certain sprite and now here the ui image has this really nice image type so let's set it to filled and in here set it to horizontal starting from the left and there you go now just size it accordingly and just with this we already have a working health bar so in here it's set to film fill on the horizontal and we can easily set the fill amount and it automatically fills it correctly so if you want we can then add another one on the background and even add the outline script and there you go over here we have a much simpler much easier to use health bar so making a health bar in the ui using an image is much simpler than making the world using sprite renders then obviously this has even more options so we can fill it for example let's fill it radially and just like that now we got this real nice effect that would be really difficult to do when using normal sprite renders then we also have for example the shadow effect so there we have nice shadow outline and we can also put this inside a container and add the component canvas group and with this we can easily modify the alpha of all of our elements which again would be something that would be very tricky to do when working with sprite renders all right so as you can see the ui has tons of really useful features and when you think about all of these ui elements in the canvas you might think that they can only be used for the ui but that's where a world canvas comes in now if we select the canvas over here we have the canvas script and we have a render mode and right now it's set to screen space overlay which is the default one however we can select the other ones we can select screen space camera which makes it so that the ui is visible by a specific camera and lastly we have world's face which will make this a world canvas so if we selected and now we go into the game view and right away we don't see anything now the reason you don't see anything is because the canvas now exists in our world so it will be rendered by the main camera and if we go into the scene view we can see that the main camera is rendering down there but our ui elements all the way in there so let's bring it back over here into zero zero zero okay and now in here we can also get rid of the canvas scaler and just set the scale onto one one one and on the width and height for a world space canvas setting it to zero zero makes sense so if you look in the game view yep now we see our ui element placed in our canvas and is being rendered by the main camera alright so with this we now have a canvas where we can place ui elements and it's being rendered in our world now obviously the scale of this health bar is massive that is because the screen space overlay takes essentially a screen size for all the objects but in the world the units that we're using are much smaller so let's just resize all these so there it is here we have both of our health bars so one of them is made up of sprite renders and one of them made up of ui objects and again with this now we can use all the normal ui elements that exist so over here for example let's create an input field and there you go here is this element and it shows up in the world we could also add a really interesting scroll view we could add a slider and just about anything and over here if you want you can also access the sorting layer in order to for example make sure that it's always on top so with this now i can just copy this so hit copy go inside the prefab and just paste it right in here and there you go now this unit has a world canvas for its health bar and if there it is now every single unit has a really nice worm canvas health bar so then through a script setting all the film amount is extremely easy and like i showed using the canvas group makes transparency much easier than working with sprite renders so for example you could fade the health bar in and out much easier with this than using sprite renders and by the way here i'm showcasing this in 2d but everything works exactly the same in 3d so here is a 3d demo and you can see that over there we have a really nice world space canvas and you can see that it respects the camera's depth so as i go behind this one yep there you go it stays behind the object so it's made up of ui elements but it's positioned in the world and can be hidden by other objects just like pretty much any other element so there it is a very simple very useful feature now i should also mention that as usual there are pros and cons to every approach using a world space canvas is awesome and it can be extremely useful but also has some downsides specifically with regards to performance if you abuse it so each separate canvas uses its own drawcon so here on the frame debugger we can see that each renderer batch is being drawn separately so there you go each of them yep one by one so if you have a lot of canvases active at once you should probably make a system to disable them when not needed however a single canvas isn't really very expensive especially if you take away the raycaster component now another pro of using multiple canvases is that in a single canvas if anything changes then all of the elements need to be repainted so keeping static elements in a separate canvas from the ones that update constantly can actually help with performance so that's a benefit more related to normal canvas rather than a worm canvas but still nice to know so as long as you don't go crazy with hundreds of world canvas at once you should be fine alright so that's it like i said this is a very quick video but i'm hoping it helped you in case you weren't aware that this was an option it's yet another tool in your tonebox for making your games more efficiently this video is made possible thanks to these awesome supporters go to patreon.com unitycodemonkey to get some perks and help keep the videos free for everyone if you found this video helpful consider liking and subscribing as long as you can download the project files and utilities from unitycodemarket.com subscribe to the channel for more unity tutorials post any questions having comments and i'll see you next time
