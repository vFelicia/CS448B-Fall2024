With timestamps:

00:00 - hello and welcome I'm your code monkey
00:01 - so 10 years ago I made a video that I
00:04 - think is one of the most interesting
00:06 - videos that I've ever done it is
00:07 - basically a development time lapse of my
00:09 - very first steam game called Survivor
00:11 - Squad I'm actually currently working on
00:12 - my eight or nine steam game I don't even
00:15 - know how many in total I've made so far
00:16 - so I thought it would be fun let's
00:18 - re-watch this video and I'll give you
00:19 - some notes and see how things have
00:21 - changed in the 10 years since I've been
00:22 - using Unity
00:23 - [Music]
00:30 - all right so it starts off right away on
00:32 - the super old I believe this is Unity
00:34 - 3.5 so this old interface definitely
00:37 - works quite a bit dated right now all
00:39 - the buttons with the gradients kind of
00:40 - funny how you can just look at a UI and
00:42 - be able to see just how old it is and
00:44 - for the game itself you can see here is
00:45 - the very beginning so at the beginning
00:47 - of Development I've only just had the
00:49 - basic field of view mechanics so that
00:50 - was kind of the core thing of the game I
00:52 - had a character that I could click and
00:54 - move around and over there you can see
00:55 - the character has its made and the blue
00:57 - thing over there is actually the
00:58 - pathfinding that's another thing that
01:00 - was absolutely essential and it's
01:01 - actually another thing that I at the
01:03 - time had no skills I was not able to do
01:06 - it by myself so for this you can see
01:07 - over here the ASR this is actually the
01:09 - ASR pathfinding project this is an asset
01:11 - that I've talked about many times on
01:12 - this channel it's pretty much the best
01:13 - pathfinding solution and back then since
01:15 - I did not have the skills of making
01:17 - super fast fast funny I just use this
01:18 - asset I use the free version pretty much
01:20 - right up until the actual release of the
01:22 - game and it was great by using this
01:24 - asset I was actually able to bring my
01:25 - vision to life
01:30 - so yeah being able to rotate and look
01:32 - around that was really interesting there
01:33 - you can see the pathfinding you can see
01:34 - the new map you can see the path being
01:36 - calculated and right there the doors
01:38 - it's actually really interesting again
01:40 - this was 10 years ago this was being
01:42 - developed uh back in 2013 and back then
01:45 - Unity did not have any 2D tools so there
01:47 - was no 2D specific engine so over here
01:49 - that is why you can see these doors
01:51 - these doors Sprites which you can't
01:52 - really see there because it's a bit too
01:53 - dark but those oars those are
01:55 - essentially just cubes those are cubes
01:57 - using 3D collectors 3D physics all of
01:59 - that that is pretty much how I made it
02:00 - work so the camera is top down in
02:03 - orthographic mode but the actual game
02:05 - the actual objects everything over here
02:06 - it's all in 3D honestly when I made this
02:08 - when I made the actual doors moving
02:10 - around that was really awesome I really
02:11 - enjoyed making that it's something that
02:13 - is so simple just being able to add some
02:15 - Physics
02:17 - right there just have the door open as
02:19 - the character moves that is one of those
02:21 - things that is so simple and so
02:22 - satisfying
02:23 - then over here for actually interacting
02:25 - with the objects being able to go there
02:26 - interact with an object and a bunch of
02:28 - items come out and down here we can also
02:30 - see a bit of the UI work
02:33 - we can also see the zombie evidence
02:34 - start to appear so the home game is all
02:36 - about survivors versus Zombies so there
02:38 - you go some basic interactions some
02:40 - basic attacks with zombies once again
02:42 - lots of 3D objects and some quads on top
02:44 - then using a bunch of points I believe
02:46 - these were these spawn points so
02:48 - basically as soon as I played the game
02:49 - there was a script that would go through
02:50 - every single one of these points on the
02:52 - side either to spawn an object there
02:53 - like a zombie or something or make them
02:55 - actually roam around you can see over
02:57 - there that I was using prefabs in order
02:59 - to set up the blocks for the actual
03:00 - cities so the final game actually has
03:02 - quite a bit of interesting procedural
03:04 - generation so all the levels are
03:06 - randomly generated and they are randomly
03:07 - generated based on these parts so these
03:09 - blocks so I pretty much handcrafted a
03:11 - bunch of pieces and then simply put them
03:12 - together randomly
03:19 - so there you go going in opening the
03:21 - door and yep it caused the visibility
03:23 - then it automatically starts to attack
03:24 - so we're here trying to handle some aeon
03:27 - logic that was really interesting
03:29 - then starting to deal with the click and
03:32 - drag in order to actually move the
03:33 - player in that direction
03:36 - then over here this is one of the things
03:37 - that was really tricky this took a ton
03:39 - of work to make it work properly this is
03:42 - essentially the persistent fog of four
03:43 - method so you can see as the player
03:45 - looks around there's a darker area and a
03:47 - semi darker area so pretty much like you
03:49 - have on any kind of RTS game but making
03:51 - it here in this game with this kind of
03:53 - granularity this was really difficult
03:55 - look at that as the character moves it
03:57 - slowly reveals more and more of the map
03:59 - and you have a look at that it's
04:00 - constantly being revealed and with
04:01 - multiple characters and so on so yeah
04:03 - this part was really extremely difficult
04:05 - first it was extremely difficult just to
04:07 - get it working and then it was even more
04:09 - difficult to make it actually performant
04:10 - basically the way that I did is kind of
04:12 - like a grid system on top so on top of
04:15 - the entire game I've got pretty much
04:16 - just the wrong split into grids and
04:19 - pretty much just got tiny quads on every
04:20 - single position above the world and then
04:22 - when a player unit when it calculates
04:24 - this field of view it basically goes
04:26 - into all of those squads and sees okay
04:27 - is this one revealed or not and swaps a
04:29 - bullying in order to actually generate
04:31 - the mesh underneath or not but again
04:32 - making this work was super difficult
04:34 - even on a relatively small map that
04:36 - still will require generating like tens
04:38 - of thousands of quads on top and doing
04:40 - all the logic on the raycast in order to
04:42 - figure out which ones to show which ones
04:43 - to hide this was one of the places where
04:45 - I first realized the super importance
04:47 - about memory optimization and
04:49 - specifically when to use classes versus
04:50 - when to use structs I cover the
04:52 - differences between those two in a
04:53 - previous video that is super important
04:55 - basically how classes are reference
04:57 - types and they are sort of a certain way
04:58 - in memory where Valley time so they are
05:00 - stored in a different way and over here
05:02 - I remember this system this was pretty
05:04 - much unusable when using classes
05:05 - basically because the memory had to jump
05:07 - around all over the place but when I
05:09 - swapped the trucks everything became
05:10 - much much faster which is kind of funny
05:11 - because right now 10 years later Unity
05:13 - dots is finally out of preview it's
05:15 - finally 1.0 and using dots that would
05:18 - make this system much much easier to
05:19 - build
05:23 - so there you go all of them moving and
05:25 - look at that everything being revealed
05:27 - it's kind of funny how as a player you
05:28 - take these kinds of Mechanics for Grant
05:30 - but I remember this was quite a
05:31 - nightmare to actually build and then
05:33 - over here the random generation for the
05:35 - known logic these are basically on the
05:37 - cities so the red cities those have some
05:39 - Infected so basically you would move
05:41 - there then clear the infected then move
05:43 - away move to a different place and so on
05:44 - I remember how generating this logic was
05:47 - actually some pretty fun programming
05:48 - basically the way it works is there are
05:50 - a whole bunch of different circles on
05:52 - different distances
05:53 - so it kind of gets those in order to
05:55 - generate the various positions for the
05:56 - cities to be placed and then you can see
05:58 - there's Logic for calculating the
05:59 - connections again all of this is
06:01 - procedurally generated so it kind of
06:03 - tries to randomly connect some cities
06:04 - together then also it had to make sure
06:06 - that there were some connections between
06:08 - the various circles the various
06:10 - positions so that every one of them is
06:11 - reachable I remember this was really fun
06:13 - to work on this is one of those problems
06:15 - that is really very programmer focused
06:17 - which for me that is perfect that is
06:18 - exactly the kind of problems that I like
06:19 - to solve
06:23 - and if there you go every time that I
06:25 - click there's a brand new map really
06:26 - nice
06:29 - then over here starting to see some UI
06:31 - so that was interesting starting to see
06:33 - the visibility and even the backpack
06:34 - that was another one that was really
06:35 - tricky to make it actually performant
06:37 - then starting to add more Logic for
06:39 - actually Scavenging for resources in
06:41 - order to be able to find them and pick
06:42 - them up
06:44 - then trying to figure out the loadout
06:45 - trying to handle the different survivors
06:47 - this was also another thing that was
06:48 - quite tricky
06:51 - you can obviously see all the
06:53 - programmers that I used you can
06:56 - obviously see how back then I had no
06:58 - idea how to use the answer I don't even
07:00 - know if the assets were actually exists
07:01 - back then so all the art that you're
07:03 - seeing here the reason why it looks
07:04 - terrible is because I draw this myself
07:07 - you can see over there the UI going up
07:09 - and down showing then click to drag move
07:12 - all the positions and so on yeah that
07:14 - was really interesting
07:16 - setting up the loadout for those I don't
07:19 - actually remember how I actually did
07:20 - this did I use some kind of grid system
07:22 - I'm actually not entirely sure just last
07:24 - year I think I made a really interesting
07:26 - Tetris grid inventory system that's a
07:28 - really fun system that is kind of what I
07:30 - did over here so different items they've
07:31 - got different shapes so you got to click
07:33 - and drag in order to place them anywhere
07:35 - then you can equip some weapons some
07:37 - armor some backpack and so on so that
07:38 - was a really interesting system then
07:40 - over here starting to see the tone tip
07:42 - so implementing the dangerous level so
07:44 - different nodes you've got different
07:45 - digital levels
07:46 - some only have a handful of zombies some
07:48 - have tons of them they're the enlarge
07:50 - node so once again that goes back to the
07:51 - procedural generation so some levels are
07:53 - really big and some are really small
07:54 - then also the gas cost so how much is
07:56 - going to cost to actually get there and
07:58 - get back that was a really interesting
07:59 - mechanic
08:01 - foreign
08:03 - ly generate names for the actual cities
08:05 - that one as well as the survivors it's
08:08 - kind of funny I remember looking up just
08:10 - random lists random names of cities and
08:12 - people I had those lists of names so my
08:14 - utilities in order to be able to
08:15 - randomly generate some names and those
08:17 - are actually still there so if you want
08:19 - to see the actual names that I use in
08:20 - the entire game you can see them in my
08:21 - utilities
08:24 - then working quite a bit more with the
08:26 - AI and with the Enemy visibility
08:31 - building some kind of Health System
08:36 - oh then handling the animation so this
08:38 - was another thing that was really
08:39 - interesting and really tricky you can
08:41 - see how the character the Survivor this
08:44 - is actually made up of tons of different
08:45 - pieces
08:47 - so basically there's a quad for the head
08:48 - then one for the body then one for the
08:50 - upper arm one for the lower arms and the
08:52 - legs and so on so everything is
08:54 - separated into different body parts
08:55 - different game objects and this actually
08:57 - became a real big issue in terms of
08:58 - performance which I'm not sure if I
09:00 - mentioned over here in the rest of this
09:01 - video but basically the problem was that
09:03 - I could only have like 10 or 20 infected
09:05 - at the same time because if each
09:07 - character is made up of like 10 or 15
09:09 - different game objects that really makes
09:11 - things really heavy really quickly my
09:13 - solution ended up being making some kind
09:15 - of tune where I could take all these
09:16 - animations and pretty much just make
09:17 - them into Sprite sheets and that way
09:19 - then the enemies they are simply only
09:21 - one quad where it's constantly rotating
09:22 - the Sprite sheet once I did that then I
09:24 - was able to handle hundreds of infected
09:26 - and everything work great but yep in the
09:28 - beginning you don't work just like this
09:30 - manually making the animations again I
09:32 - didn't know how to use assets so I just
09:33 - built it all myself
09:35 - so there you go on the new animation so
09:37 - trying to knife enemies trying to find
09:39 - them then the animations for the zombies
09:40 - which again tons of game objects so that
09:42 - was really interesting
09:45 - then here I made some really interesting
09:47 - tool to help me with level design
09:48 - basically I was able to place the walls
09:50 - as the entire solid objects and that I
09:52 - made some code that looked for all of
09:54 - the door objects as well as of the
09:57 - window objects and pretty much just
09:58 - figure out where to slice the walls in
10:00 - order to make them so that when the game
10:01 - runs and yep there you go everything
10:03 - gets nice so there are no longer walls
10:05 - on top of doors that was a really useful
10:07 - tool when it came to level design
10:12 - then Jeremy of the various geometry
10:14 - Parts again I made a whole bunch of them
10:16 - by myself and then I automatically
10:18 - generated them using precisional
10:19 - generation
10:22 - and all the characters going in then
10:24 - getting attacked by some special
10:25 - infected with some special skills
10:31 - against a bunch of programmer art with
10:33 - that really ugly car
10:39 - then I started playing around with some
10:41 - lighting effects so that was really
10:42 - interesting and again on the left side
10:44 - you can see the editor View
10:46 - so here I was playing with spawning the
10:48 - blood and all the various things this
10:50 - was another thing that required a lot of
10:51 - work in order to actually make it
10:52 - performant I actually made a video on
10:54 - how I did this system basically it's a
10:56 - persistent particle system so I wanted
10:58 - the blood to actually stay on the floor
11:00 - for how long the player lasted on that
11:02 - level and my solution for doing that was
11:04 - pretty much just generating a mesh
11:05 - several time the player shoots a zombie
11:08 - it spawns out some particles and those
11:09 - particles are part of the mesh and that
11:11 - way I can have I think it was something
11:12 - like 20 000 different bullet splatters
11:14 - and they all rendered on just one mesh
11:16 - which made them super performant
11:25 - then here I've got the intro so that was
11:27 - fun finally got a nice interesting car
11:28 - so the intro that plays that animation
11:30 - then they come out and looks really good
11:33 - then this is the death lab mode which
11:35 - pretty much just randomly generates a
11:37 - nice maze so this was another thing that
11:39 - was really fun to program then trying to
11:41 - add some Polish trying to figure out how
11:43 - to make some nice wheel selection
11:50 - then trying to add some sets trying to
11:51 - improve the visuals do the best of my
11:53 - ability that is
11:54 - and trying to make a nice main menu
11:58 - and yep so that's the end of the trailer
12:00 - so that's the game really interesting
12:01 - and we can see over here on the end so
12:03 - the asset count these are I think it was
12:05 - the files on pretty much the entire
12:06 - assets folder so that went up to 2400 so
12:09 - that's nice and the lines of code were
12:10 - 30 000. it's kind of funny how just
12:13 - recently I did a Sprint in order to make
12:15 - the actual demo for my game dinky
12:17 - Guardians and for that I wrote 16 000
12:19 - lines of code in about two weeks whereas
12:22 - over here it took me about one year to
12:23 - write 30 000 and these were not on the
12:25 - same level of quality as the code that I
12:27 - write nowadays so if this was on the
12:28 - same level of quality then these 30 000
12:30 - would probably be around fifteen
12:31 - thousand so it's kind of funny how 10
12:33 - years ago it took me one year to build a
12:35 - game like this whereas nowadays with my
12:37 - current skill set I could build this in
12:38 - probably maybe a month so yeah this was
12:40 - the development of my very first team
12:42 - game Survivor Squad the game actually
12:44 - had to go through seam green light so
12:46 - this was their service where you had to
12:47 - get a ton of votes in order to actually
12:48 - get on scene so the game I finished the
12:50 - initial version of the game right around
12:52 - may but back then I was only able to
12:53 - actually sell the game on my website so
12:55 - it took me until November to make my
12:57 - very first steam launch so in totally
12:59 - did take about one year to build this
13:00 - game I started it around the end of
13:02 - December 2012 so that was when I first
13:04 - encountered UNT and pretty much one year
13:06 - later here it was on Steam and that's
13:07 - pretty much how I became a professional
13:09 - in the developer it's definitely an
13:10 - interesting game I still quite enjoy the
13:11 - mechanic likes the reviews as you can
13:13 - see are mixed which for a first game six
13:15 - seven percent honestly I'm pretty happy
13:17 - with that and using these same mechanics
13:18 - actually then expand upon it and made a
13:20 - direct sequel now this one did not do as
13:22 - well but in terms of the technicality in
13:24 - terms of the game I was really happy
13:25 - with how this one came out if you like
13:27 - the concept of that field of view
13:28 - mechanic then maybe go try out the game
13:30 - I've got a bundle on the website
13:31 - containing pretty much every single one
13:32 - of my game including D2 Survivor Squad
13:34 - games and don't forget to add my
13:36 - upcoming game then Gardens to your
13:37 - wishlist alright so this was a fun video
13:39 - I really enjoyed re-watching this I hope
13:41 - you found it interesting to hear my
13:43 - comments on this Learning Journey I
13:44 - can't believe it's been 10 years since I
13:46 - actually made this now perhaps in 10
13:47 - years I'll look back into this video
13:49 - alright so thanks for watching and I'll
13:51 - see you next time
13:58 - foreign
14:04 - [Music]

Cleaned transcript:

hello and welcome I'm your code monkey so 10 years ago I made a video that I think is one of the most interesting videos that I've ever done it is basically a development time lapse of my very first steam game called Survivor Squad I'm actually currently working on my eight or nine steam game I don't even know how many in total I've made so far so I thought it would be fun let's rewatch this video and I'll give you some notes and see how things have changed in the 10 years since I've been using Unity all right so it starts off right away on the super old I believe this is Unity 3.5 so this old interface definitely works quite a bit dated right now all the buttons with the gradients kind of funny how you can just look at a UI and be able to see just how old it is and for the game itself you can see here is the very beginning so at the beginning of Development I've only just had the basic field of view mechanics so that was kind of the core thing of the game I had a character that I could click and move around and over there you can see the character has its made and the blue thing over there is actually the pathfinding that's another thing that was absolutely essential and it's actually another thing that I at the time had no skills I was not able to do it by myself so for this you can see over here the ASR this is actually the ASR pathfinding project this is an asset that I've talked about many times on this channel it's pretty much the best pathfinding solution and back then since I did not have the skills of making super fast fast funny I just use this asset I use the free version pretty much right up until the actual release of the game and it was great by using this asset I was actually able to bring my vision to life so yeah being able to rotate and look around that was really interesting there you can see the pathfinding you can see the new map you can see the path being calculated and right there the doors it's actually really interesting again this was 10 years ago this was being developed uh back in 2013 and back then Unity did not have any 2D tools so there was no 2D specific engine so over here that is why you can see these doors these doors Sprites which you can't really see there because it's a bit too dark but those oars those are essentially just cubes those are cubes using 3D collectors 3D physics all of that that is pretty much how I made it work so the camera is top down in orthographic mode but the actual game the actual objects everything over here it's all in 3D honestly when I made this when I made the actual doors moving around that was really awesome I really enjoyed making that it's something that is so simple just being able to add some Physics right there just have the door open as the character moves that is one of those things that is so simple and so satisfying then over here for actually interacting with the objects being able to go there interact with an object and a bunch of items come out and down here we can also see a bit of the UI work we can also see the zombie evidence start to appear so the home game is all about survivors versus Zombies so there you go some basic interactions some basic attacks with zombies once again lots of 3D objects and some quads on top then using a bunch of points I believe these were these spawn points so basically as soon as I played the game there was a script that would go through every single one of these points on the side either to spawn an object there like a zombie or something or make them actually roam around you can see over there that I was using prefabs in order to set up the blocks for the actual cities so the final game actually has quite a bit of interesting procedural generation so all the levels are randomly generated and they are randomly generated based on these parts so these blocks so I pretty much handcrafted a bunch of pieces and then simply put them together randomly so there you go going in opening the door and yep it caused the visibility then it automatically starts to attack so we're here trying to handle some aeon logic that was really interesting then starting to deal with the click and drag in order to actually move the player in that direction then over here this is one of the things that was really tricky this took a ton of work to make it work properly this is essentially the persistent fog of four method so you can see as the player looks around there's a darker area and a semi darker area so pretty much like you have on any kind of RTS game but making it here in this game with this kind of granularity this was really difficult look at that as the character moves it slowly reveals more and more of the map and you have a look at that it's constantly being revealed and with multiple characters and so on so yeah this part was really extremely difficult first it was extremely difficult just to get it working and then it was even more difficult to make it actually performant basically the way that I did is kind of like a grid system on top so on top of the entire game I've got pretty much just the wrong split into grids and pretty much just got tiny quads on every single position above the world and then when a player unit when it calculates this field of view it basically goes into all of those squads and sees okay is this one revealed or not and swaps a bullying in order to actually generate the mesh underneath or not but again making this work was super difficult even on a relatively small map that still will require generating like tens of thousands of quads on top and doing all the logic on the raycast in order to figure out which ones to show which ones to hide this was one of the places where I first realized the super importance about memory optimization and specifically when to use classes versus when to use structs I cover the differences between those two in a previous video that is super important basically how classes are reference types and they are sort of a certain way in memory where Valley time so they are stored in a different way and over here I remember this system this was pretty much unusable when using classes basically because the memory had to jump around all over the place but when I swapped the trucks everything became much much faster which is kind of funny because right now 10 years later Unity dots is finally out of preview it's finally 1.0 and using dots that would make this system much much easier to build so there you go all of them moving and look at that everything being revealed it's kind of funny how as a player you take these kinds of Mechanics for Grant but I remember this was quite a nightmare to actually build and then over here the random generation for the known logic these are basically on the cities so the red cities those have some Infected so basically you would move there then clear the infected then move away move to a different place and so on I remember how generating this logic was actually some pretty fun programming basically the way it works is there are a whole bunch of different circles on different distances so it kind of gets those in order to generate the various positions for the cities to be placed and then you can see there's Logic for calculating the connections again all of this is procedurally generated so it kind of tries to randomly connect some cities together then also it had to make sure that there were some connections between the various circles the various positions so that every one of them is reachable I remember this was really fun to work on this is one of those problems that is really very programmer focused which for me that is perfect that is exactly the kind of problems that I like to solve and if there you go every time that I click there's a brand new map really nice then over here starting to see some UI so that was interesting starting to see the visibility and even the backpack that was another one that was really tricky to make it actually performant then starting to add more Logic for actually Scavenging for resources in order to be able to find them and pick them up then trying to figure out the loadout trying to handle the different survivors this was also another thing that was quite tricky you can obviously see all the programmers that I used you can obviously see how back then I had no idea how to use the answer I don't even know if the assets were actually exists back then so all the art that you're seeing here the reason why it looks terrible is because I draw this myself you can see over there the UI going up and down showing then click to drag move all the positions and so on yeah that was really interesting setting up the loadout for those I don't actually remember how I actually did this did I use some kind of grid system I'm actually not entirely sure just last year I think I made a really interesting Tetris grid inventory system that's a really fun system that is kind of what I did over here so different items they've got different shapes so you got to click and drag in order to place them anywhere then you can equip some weapons some armor some backpack and so on so that was a really interesting system then over here starting to see the tone tip so implementing the dangerous level so different nodes you've got different digital levels some only have a handful of zombies some have tons of them they're the enlarge node so once again that goes back to the procedural generation so some levels are really big and some are really small then also the gas cost so how much is going to cost to actually get there and get back that was a really interesting mechanic foreign ly generate names for the actual cities that one as well as the survivors it's kind of funny I remember looking up just random lists random names of cities and people I had those lists of names so my utilities in order to be able to randomly generate some names and those are actually still there so if you want to see the actual names that I use in the entire game you can see them in my utilities then working quite a bit more with the AI and with the Enemy visibility building some kind of Health System oh then handling the animation so this was another thing that was really interesting and really tricky you can see how the character the Survivor this is actually made up of tons of different pieces so basically there's a quad for the head then one for the body then one for the upper arm one for the lower arms and the legs and so on so everything is separated into different body parts different game objects and this actually became a real big issue in terms of performance which I'm not sure if I mentioned over here in the rest of this video but basically the problem was that I could only have like 10 or 20 infected at the same time because if each character is made up of like 10 or 15 different game objects that really makes things really heavy really quickly my solution ended up being making some kind of tune where I could take all these animations and pretty much just make them into Sprite sheets and that way then the enemies they are simply only one quad where it's constantly rotating the Sprite sheet once I did that then I was able to handle hundreds of infected and everything work great but yep in the beginning you don't work just like this manually making the animations again I didn't know how to use assets so I just built it all myself so there you go on the new animation so trying to knife enemies trying to find them then the animations for the zombies which again tons of game objects so that was really interesting then here I made some really interesting tool to help me with level design basically I was able to place the walls as the entire solid objects and that I made some code that looked for all of the door objects as well as of the window objects and pretty much just figure out where to slice the walls in order to make them so that when the game runs and yep there you go everything gets nice so there are no longer walls on top of doors that was a really useful tool when it came to level design then Jeremy of the various geometry Parts again I made a whole bunch of them by myself and then I automatically generated them using precisional generation and all the characters going in then getting attacked by some special infected with some special skills against a bunch of programmer art with that really ugly car then I started playing around with some lighting effects so that was really interesting and again on the left side you can see the editor View so here I was playing with spawning the blood and all the various things this was another thing that required a lot of work in order to actually make it performant I actually made a video on how I did this system basically it's a persistent particle system so I wanted the blood to actually stay on the floor for how long the player lasted on that level and my solution for doing that was pretty much just generating a mesh several time the player shoots a zombie it spawns out some particles and those particles are part of the mesh and that way I can have I think it was something like 20 000 different bullet splatters and they all rendered on just one mesh which made them super performant then here I've got the intro so that was fun finally got a nice interesting car so the intro that plays that animation then they come out and looks really good then this is the death lab mode which pretty much just randomly generates a nice maze so this was another thing that was really fun to program then trying to add some Polish trying to figure out how to make some nice wheel selection then trying to add some sets trying to improve the visuals do the best of my ability that is and trying to make a nice main menu and yep so that's the end of the trailer so that's the game really interesting and we can see over here on the end so the asset count these are I think it was the files on pretty much the entire assets folder so that went up to 2400 so that's nice and the lines of code were 30 000. it's kind of funny how just recently I did a Sprint in order to make the actual demo for my game dinky Guardians and for that I wrote 16 000 lines of code in about two weeks whereas over here it took me about one year to write 30 000 and these were not on the same level of quality as the code that I write nowadays so if this was on the same level of quality then these 30 000 would probably be around fifteen thousand so it's kind of funny how 10 years ago it took me one year to build a game like this whereas nowadays with my current skill set I could build this in probably maybe a month so yeah this was the development of my very first team game Survivor Squad the game actually had to go through seam green light so this was their service where you had to get a ton of votes in order to actually get on scene so the game I finished the initial version of the game right around may but back then I was only able to actually sell the game on my website so it took me until November to make my very first steam launch so in totally did take about one year to build this game I started it around the end of December 2012 so that was when I first encountered UNT and pretty much one year later here it was on Steam and that's pretty much how I became a professional in the developer it's definitely an interesting game I still quite enjoy the mechanic likes the reviews as you can see are mixed which for a first game six seven percent honestly I'm pretty happy with that and using these same mechanics actually then expand upon it and made a direct sequel now this one did not do as well but in terms of the technicality in terms of the game I was really happy with how this one came out if you like the concept of that field of view mechanic then maybe go try out the game I've got a bundle on the website containing pretty much every single one of my game including D2 Survivor Squad games and don't forget to add my upcoming game then Gardens to your wishlist alright so this was a fun video I really enjoyed rewatching this I hope you found it interesting to hear my comments on this Learning Journey I can't believe it's been 10 years since I actually made this now perhaps in 10 years I'll look back into this video alright so thanks for watching and I'll see you next time foreign
