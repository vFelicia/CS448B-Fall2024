With timestamps:

00:00 - hello and welcome I'm your code monkey
00:01 - and here's a complete overview of my
00:04 - turn-based strategy course all of these
00:05 - steps that we're going to take starting
00:07 - from a completely empty project until
00:08 - the final polish game and also including
00:11 - the two free bonus expansion this course
00:13 - is targeted for more intermediate users
00:15 - who want to take their skills from
00:16 - beginner to the next level the goal is
00:18 - not just to learn how to make a game
00:20 - like this but rather how to do it
00:21 - properly so it has a heavy focus on
00:23 - writing good clean code and good project
00:25 - structure so you can then expand upon it
00:27 - in many different ways so here's how
00:29 - we're going to do it we're going to
00:31 - start coupling from scratch so the first
00:33 - thing we're going to do is create a
00:34 - brand new project after opening up Unity
00:36 - we're going to set up the layout then
00:38 - we're going to verify that the universal
00:39 - random pipeline is on sound correctly
00:41 - and we're going to import the asset pack
00:43 - that we're going to use after that we're
00:45 - going to set up some basic post
00:46 - processing to make the game look nice
00:48 - without the basic setup won't be done
00:49 - then for starting to actually make the
00:51 - game we're going to begin in the unit
00:53 - movement and unit selection section
00:54 - first by setting up the actual unit
00:56 - again the focus on this course is on
00:58 - build the game and building it directly
01:00 - so it's very important that we are
01:01 - careful with how we set up all of our
01:03 - game objects with the unit setup we're
01:05 - going to begin handling movement then
01:07 - we're going to handle the mouse learn
01:08 - how to do a raycast and learn the
01:10 - differences between screen space and
01:12 - World space with that we're going to
01:13 - calculate the mouse run position and
01:15 - learn about layer masks then we have one
01:17 - of the most important lectures on this
01:19 - course it's all about why you should
01:20 - never make anything public and what is
01:22 - the alternative that you should use then
01:24 - we have everything ready to add the
01:26 - ability to click on the world and have
01:27 - the unit move to that position after
01:29 - that we're going to download some
01:31 - animations and import them into unity
01:33 - and set them up then we're going to
01:34 - learn about the NT animator and how we
01:36 - can add some animations then learn about
01:38 - how to control animations using animator
01:40 - parameters so that the unit has the
01:42 - proper idle and wonk animations of them
01:44 - working correctly with that done we're
01:46 - going to handle the unit rotation to
01:47 - face the move Direction and do it nice
01:49 - and smoothly next we're going to create
01:51 - a unit Action System and add the ability
01:53 - to select the units so we can have
01:55 - multiple units and give different
01:57 - Origins to each one individually with
01:59 - the unit selection working we need some
02:00 - visual so we're going to do that once
02:02 - also learning about another extremely
02:04 - powerful c-sharp feature called events
02:06 - and the final lecture on this section
02:07 - covers another extremely important topic
02:09 - which is the Singleton pattern and how
02:11 - we're going to use it in this course
02:12 - after that we move on to the crucial
02:14 - section all about the grid system and
02:16 - the camera this is really the core of
02:17 - the game so we're going to spend some
02:19 - time just going over the design that
02:20 - we're going to implement then we start
02:22 - building the grid system creating the
02:24 - class and setting up the basics with
02:25 - that then we're going to create a grid
02:27 - object class that won't be instantiated
02:28 - in every grid position these objects are
02:31 - difficult to see since they really have
02:32 - no visual so we're going to create a
02:34 - nice debug visual object that we can
02:36 - easily see so we can inspect what is
02:38 - going on inside each grid position then
02:40 - with the core grid system done we're
02:41 - going to create a nice level great class
02:43 - that will manage the entire level Grid
02:45 - next we're going to install cinemachine
02:46 - this is a Unity tool that makes camera
02:48 - handling super easy we're going to use
02:50 - it to create a script to move and rotate
02:52 - the camera and then we're going to
02:53 - handle zooming in and out with all that
02:55 - done we move on to the next section
02:56 - covering actions in the UI We Begin by
02:58 - making the most simple action just a
03:00 - basic move action this is another very
03:02 - important lecture because covers
03:03 - something that is extremely important
03:05 - part of game development which is
03:06 - refactoring code with the basic move
03:08 - action working we're going to add some
03:10 - validation logic to match our game rules
03:12 - next we're going to create a grid visual
03:14 - prefab so we can visualize which
03:15 - repositions the unit can move to after
03:17 - that we're going to build our second
03:19 - action again we start off by making
03:21 - something extremely basic just a spin
03:23 - action basically the goal of this is to
03:25 - refenter the code to be able to support
03:26 - multiple actions with multiple actions
03:28 - implemented we're going to handle the
03:30 - logic to make sure only one action can
03:32 - be active at a time then it's going to
03:33 - be time to implement the UI we're going
03:35 - to create the canvas and set it up then
03:37 - build a simple UI so we can see all the
03:40 - actions available on the selected unit
03:42 - after that we handle clicking on the
03:43 - action buttons to select the active
03:45 - action and then once again we're going
03:47 - to refactor some code to create a nice
03:48 - and generic take action function then
03:50 - we're going to handle updating the UI
03:52 - this is another extremely important
03:53 - lecture because it covers how to
03:55 - properly decouple your code by using
03:56 - c-sharp events the underlying actions
03:58 - and the units they don't care about the
04:00 - UI at all the game runs perfectly fine
04:02 - with or without UI it's completely
04:04 - decoupled next we're going to create a
04:06 - simple element to show while an action
04:08 - is busy then introduce the concept of
04:10 - action points so that units have a
04:12 - limited number of actions they can take
04:13 - and then create a nice certain system
04:15 - which will handle keeping track of the
04:17 - current turn and resetting action point
04:19 - then we move on to the enemies and
04:20 - combat section We Begin by creating an
04:23 - enemy again all while focus on writing
04:25 - good clean code and good project
04:26 - structure so it's going to be based on
04:28 - the regular unit object once we have the
04:30 - enemies the next obvious step is to
04:31 - implement a shoot action so we can
04:33 - damage them with the action logic
04:34 - working we're going to implement the
04:36 - animations to make it nice and visual
04:37 - and then add a nice Bond visual we're
04:40 - going to use the trail render and the
04:41 - particle system to make it look good
04:43 - with the shooting working we need some
04:44 - concepts of homes so we're going to
04:46 - create a nice sound system with health
04:48 - working we're going to implement a very
04:50 - fun thing we're going to use the unity
04:51 - ragdon wizard to make a fun breakdown
04:53 - that won't fall to the floor when the
04:55 - unit dies next we're going to learn all
04:57 - about another very useful ENT feature
04:59 - which is one canvases with this we're
05:01 - going to create a nice UI element on top
05:03 - of each unit to display the health and
05:04 - the action points then we're going to
05:06 - publish our shoot action by adding a
05:08 - nice action camera once again using
05:09 - cinemachine so it's going to be pretty
05:11 - easy next we're going to modify the grid
05:13 - visual to support different colors that
05:14 - way the move action has one color and
05:16 - the shoot action as another then for
05:18 - something pretty important we're going
05:19 - to implement some basic Envy AI just add
05:22 - the logic for the enemy to take their
05:23 - turn and then we're going to build upon
05:25 - that in order to add some more complex
05:27 - AI so the enemies can actually move
05:28 - towards the player units and shoot at a
05:30 - Target once again the focus on this
05:32 - course is writing good clean code that
05:33 - we can expand upon so the pattern that
05:35 - we're going to use to make the AI it can
05:37 - then be expand upon with all kinds of
05:39 - new AI rooms afterwards we get to
05:41 - another very important section this one
05:43 - is all about pathfinding in order to
05:44 - implement this properly the first thing
05:46 - we need to do is actually learn about
05:47 - c-sharp generics this is another
05:48 - extremely important c-sharp feature with
05:50 - that knowledge we're going to refactor
05:52 - the grid system to support generics
05:54 - doing that will enable us to reuse the
05:56 - exact same class for both the
05:57 - pathfinding and the grid logic but
05:59 - before we get to where work on implement
06:00 - the pathfinding we're going to look at
06:01 - the design of the algorithm that we're
06:03 - going to implement so we're going to
06:04 - learn how a-star pathfinding Works after
06:06 - that we begin by creating the main
06:08 - script and set it up with a great object
06:10 - with all of the pathfinding data that
06:11 - we're going to need and then we begin to
06:13 - actually implement the algorithm this is
06:15 - something that sounds pretty complex but
06:16 - it's actually not it might take a while
06:18 - to click but once you understand how the
06:19 - algorithm works it's actually pretty
06:21 - straightforward with some basic
06:22 - pathfinding working we're going to add
06:24 - support for obstacles and then use some
06:26 - visual assets to make an interesting
06:27 - level after that we just refactor our
06:29 - move action to use our pathfinding
06:31 - algorithm with that done we come to the
06:32 - Polish section we begin with a fun
06:34 - simple effect just adding some screen
06:36 - Shake then we add another phone action a
06:38 - nice grenade that deals damage in radius
06:40 - after the logic is working then we
06:42 - implement the visuals on top next we add
06:44 - some destructible cranes this involves
06:46 - learning how to update the pathfinding
06:48 - when an object is destroying then we're
06:49 - going to learn how to make some nice
06:50 - satisfying destruction in Unity by using
06:52 - Pro Builder which is their built-in
06:54 - modeling tool using that we're going to
06:55 - slice the crate into parts and then make
06:57 - them explode after that for another fun
06:58 - action we're going to make a sword melee
07:00 - attack this one has a very short range
07:02 - but deals a ton of damage next we make a
07:04 - super important action a generic
07:06 - interact action and then we have another
07:08 - extremely important lecture where we're
07:09 - going to make it so that the interact
07:11 - action that one can be used to do all
07:13 - kinds of things like for example opening
07:14 - doors or destroying a prod really this
07:16 - interact action can do anything you can
07:18 - think of and this really just involves
07:20 - learning about c-sharp interfaces which
07:21 - is another must-know c-sharp feature
07:23 - after that we're going to refactor our
07:25 - input to use the new input system
07:27 - package and then we're going to take
07:28 - everything that we've built and make a
07:30 - really nice playable level that has
07:31 - several player units lots of actions a
07:34 - nice one with some level scripting and
07:36 - various enemies with that we're going to
07:37 - have our nice final polish game however
07:39 - that is really just the main course
07:41 - portion since the course was originally
07:43 - released I have since added two free
07:44 - expansions after the main course
07:46 - contents the first expansion is on
07:48 - adding hex word support So how to
07:50 - convert the main course code which has a
07:52 - square grid and convert that into a hex
07:53 - grid thanks to how all of the code is
07:55 - set up in a nice clean way this actually
07:57 - relatively simple change to do this
07:59 - we're going to first look at the design
08:00 - that we're going to implement and how
08:02 - hexes differ from Square grids then we
08:04 - start by implementing the design
08:05 - beginning with the conversion from and
08:07 - to World inquiry position and then we're
08:09 - going to refactor the pathfinding to
08:11 - also work with hexes that's pretty much
08:12 - all it takes to implement this nice
08:13 - expansion with this everything in the
08:15 - game all the actions all the AI
08:17 - everything works on a perfect hexagram
08:19 - and then for the second expansion this
08:21 - one is adding multi-forward support and
08:22 - this can be added to either the square
08:24 - Grid or the hex Rin first we're going to
08:26 - refactor the main level Grid to support
08:28 - multiple grid systems then refactor the
08:30 - pathfinding to make it work with
08:31 - multiple Force after that we're going to
08:33 - create a nice editor script for defining
08:35 - pathfinding links then handle the visual
08:37 - for making a proper jump and file
08:39 - animation and finally handle the
08:40 - visibility so the player can still play
08:42 - on the bottom horse alright so that's it
08:44 - that's the overview of the home course
08:46 - including the two free bonus expansions
08:48 - we started coming from scratch and by
08:49 - going through it step by step we end up
08:51 - with a really awesome turn-based
08:52 - strategy game and again the most
08:54 - important thing is you will learn a ton
08:55 - about how to write good clean code and
08:57 - how to manage a complex project by the
08:59 - end you won't have gained the massive
09:00 - amount of knowledge that will enable you
09:02 - to build all kinds of games by either
09:04 - expanding upon this game or making
09:05 - something completely original check the
09:07 - link in the description to get the
09:08 - course and I really hope it helps you on
09:09 - your Learning Journey

Cleaned transcript:

hello and welcome I'm your code monkey and here's a complete overview of my turnbased strategy course all of these steps that we're going to take starting from a completely empty project until the final polish game and also including the two free bonus expansion this course is targeted for more intermediate users who want to take their skills from beginner to the next level the goal is not just to learn how to make a game like this but rather how to do it properly so it has a heavy focus on writing good clean code and good project structure so you can then expand upon it in many different ways so here's how we're going to do it we're going to start coupling from scratch so the first thing we're going to do is create a brand new project after opening up Unity we're going to set up the layout then we're going to verify that the universal random pipeline is on sound correctly and we're going to import the asset pack that we're going to use after that we're going to set up some basic post processing to make the game look nice without the basic setup won't be done then for starting to actually make the game we're going to begin in the unit movement and unit selection section first by setting up the actual unit again the focus on this course is on build the game and building it directly so it's very important that we are careful with how we set up all of our game objects with the unit setup we're going to begin handling movement then we're going to handle the mouse learn how to do a raycast and learn the differences between screen space and World space with that we're going to calculate the mouse run position and learn about layer masks then we have one of the most important lectures on this course it's all about why you should never make anything public and what is the alternative that you should use then we have everything ready to add the ability to click on the world and have the unit move to that position after that we're going to download some animations and import them into unity and set them up then we're going to learn about the NT animator and how we can add some animations then learn about how to control animations using animator parameters so that the unit has the proper idle and wonk animations of them working correctly with that done we're going to handle the unit rotation to face the move Direction and do it nice and smoothly next we're going to create a unit Action System and add the ability to select the units so we can have multiple units and give different Origins to each one individually with the unit selection working we need some visual so we're going to do that once also learning about another extremely powerful csharp feature called events and the final lecture on this section covers another extremely important topic which is the Singleton pattern and how we're going to use it in this course after that we move on to the crucial section all about the grid system and the camera this is really the core of the game so we're going to spend some time just going over the design that we're going to implement then we start building the grid system creating the class and setting up the basics with that then we're going to create a grid object class that won't be instantiated in every grid position these objects are difficult to see since they really have no visual so we're going to create a nice debug visual object that we can easily see so we can inspect what is going on inside each grid position then with the core grid system done we're going to create a nice level great class that will manage the entire level Grid next we're going to install cinemachine this is a Unity tool that makes camera handling super easy we're going to use it to create a script to move and rotate the camera and then we're going to handle zooming in and out with all that done we move on to the next section covering actions in the UI We Begin by making the most simple action just a basic move action this is another very important lecture because covers something that is extremely important part of game development which is refactoring code with the basic move action working we're going to add some validation logic to match our game rules next we're going to create a grid visual prefab so we can visualize which repositions the unit can move to after that we're going to build our second action again we start off by making something extremely basic just a spin action basically the goal of this is to refenter the code to be able to support multiple actions with multiple actions implemented we're going to handle the logic to make sure only one action can be active at a time then it's going to be time to implement the UI we're going to create the canvas and set it up then build a simple UI so we can see all the actions available on the selected unit after that we handle clicking on the action buttons to select the active action and then once again we're going to refactor some code to create a nice and generic take action function then we're going to handle updating the UI this is another extremely important lecture because it covers how to properly decouple your code by using csharp events the underlying actions and the units they don't care about the UI at all the game runs perfectly fine with or without UI it's completely decoupled next we're going to create a simple element to show while an action is busy then introduce the concept of action points so that units have a limited number of actions they can take and then create a nice certain system which will handle keeping track of the current turn and resetting action point then we move on to the enemies and combat section We Begin by creating an enemy again all while focus on writing good clean code and good project structure so it's going to be based on the regular unit object once we have the enemies the next obvious step is to implement a shoot action so we can damage them with the action logic working we're going to implement the animations to make it nice and visual and then add a nice Bond visual we're going to use the trail render and the particle system to make it look good with the shooting working we need some concepts of homes so we're going to create a nice sound system with health working we're going to implement a very fun thing we're going to use the unity ragdon wizard to make a fun breakdown that won't fall to the floor when the unit dies next we're going to learn all about another very useful ENT feature which is one canvases with this we're going to create a nice UI element on top of each unit to display the health and the action points then we're going to publish our shoot action by adding a nice action camera once again using cinemachine so it's going to be pretty easy next we're going to modify the grid visual to support different colors that way the move action has one color and the shoot action as another then for something pretty important we're going to implement some basic Envy AI just add the logic for the enemy to take their turn and then we're going to build upon that in order to add some more complex AI so the enemies can actually move towards the player units and shoot at a Target once again the focus on this course is writing good clean code that we can expand upon so the pattern that we're going to use to make the AI it can then be expand upon with all kinds of new AI rooms afterwards we get to another very important section this one is all about pathfinding in order to implement this properly the first thing we need to do is actually learn about csharp generics this is another extremely important csharp feature with that knowledge we're going to refactor the grid system to support generics doing that will enable us to reuse the exact same class for both the pathfinding and the grid logic but before we get to where work on implement the pathfinding we're going to look at the design of the algorithm that we're going to implement so we're going to learn how astar pathfinding Works after that we begin by creating the main script and set it up with a great object with all of the pathfinding data that we're going to need and then we begin to actually implement the algorithm this is something that sounds pretty complex but it's actually not it might take a while to click but once you understand how the algorithm works it's actually pretty straightforward with some basic pathfinding working we're going to add support for obstacles and then use some visual assets to make an interesting level after that we just refactor our move action to use our pathfinding algorithm with that done we come to the Polish section we begin with a fun simple effect just adding some screen Shake then we add another phone action a nice grenade that deals damage in radius after the logic is working then we implement the visuals on top next we add some destructible cranes this involves learning how to update the pathfinding when an object is destroying then we're going to learn how to make some nice satisfying destruction in Unity by using Pro Builder which is their builtin modeling tool using that we're going to slice the crate into parts and then make them explode after that for another fun action we're going to make a sword melee attack this one has a very short range but deals a ton of damage next we make a super important action a generic interact action and then we have another extremely important lecture where we're going to make it so that the interact action that one can be used to do all kinds of things like for example opening doors or destroying a prod really this interact action can do anything you can think of and this really just involves learning about csharp interfaces which is another mustknow csharp feature after that we're going to refactor our input to use the new input system package and then we're going to take everything that we've built and make a really nice playable level that has several player units lots of actions a nice one with some level scripting and various enemies with that we're going to have our nice final polish game however that is really just the main course portion since the course was originally released I have since added two free expansions after the main course contents the first expansion is on adding hex word support So how to convert the main course code which has a square grid and convert that into a hex grid thanks to how all of the code is set up in a nice clean way this actually relatively simple change to do this we're going to first look at the design that we're going to implement and how hexes differ from Square grids then we start by implementing the design beginning with the conversion from and to World inquiry position and then we're going to refactor the pathfinding to also work with hexes that's pretty much all it takes to implement this nice expansion with this everything in the game all the actions all the AI everything works on a perfect hexagram and then for the second expansion this one is adding multiforward support and this can be added to either the square Grid or the hex Rin first we're going to refactor the main level Grid to support multiple grid systems then refactor the pathfinding to make it work with multiple Force after that we're going to create a nice editor script for defining pathfinding links then handle the visual for making a proper jump and file animation and finally handle the visibility so the player can still play on the bottom horse alright so that's it that's the overview of the home course including the two free bonus expansions we started coming from scratch and by going through it step by step we end up with a really awesome turnbased strategy game and again the most important thing is you will learn a ton about how to write good clean code and how to manage a complex project by the end you won't have gained the massive amount of knowledge that will enable you to build all kinds of games by either expanding upon this game or making something completely original check the link in the description to get the course and I really hope it helps you on your Learning Journey
