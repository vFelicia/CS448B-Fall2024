With timestamps:

00:00 - hello and welcome I am your code McKean
00:01 - in this video we're continuing to create
00:03 - a graph in unity we're going to add
00:05 - tooltips to display the exact value of
00:07 - each data point let's begin
00:11 - so I have my graphing here it is showing
00:14 - some values and I have various buttons
00:16 - to modify the display I can change the
00:18 - visual type between a bar chart or a
00:21 - line graph I can modify how many entries
00:24 - are visible and I can convert the values
00:27 - that are shown so as you can see in
00:28 - there it is converting between dollars
00:30 - and euros so now we're going to add a
00:32 - tool tip that will appear when we pass
00:35 - the mouse over a dot or a bar and
00:37 - display the value of that data point so
00:39 - if I place the mouse in here I want to
00:42 - see a tooltip around here saying about
00:44 - 41 okay so let's first go into the
00:47 - editor and create our tooltip game
00:49 - object so let's go to our graph
00:51 - container and in here create an empty
00:53 - game object and let's call it tilted
00:57 - inside let's create another empty game
00:59 - object we can meet background and give
01:02 - it the image component okay
01:03 - then another game object and let's name
01:07 - this one text add the text component set
01:12 - some text the font size and let's say
01:14 - about twelve and now let's position
01:16 - everything anchors to the unloader left
01:18 - position so in here use shift so we
01:20 - modify both the anchor and the pivot so
01:23 - click in there and let's put them on
01:25 - four four set the width and height to
01:28 - zero and overflow on both of these and
01:30 - set it to a line on the left side and
01:33 - down there okay so this one will
01:36 - represent our tooltip text and for the
01:39 - background
01:40 - let's also anchor it down in there okay
01:43 - and now for the width and height that
01:45 - won't be dynamically modified based on
01:47 - the size of our text so this is our
01:50 - tooltip game object setup now let's go
01:52 - into the code so in here the first thing
01:55 - we need is to grab a reference to our
01:57 - tooltip game object so let's go in here
02:00 - and make a private game object for our
02:03 - total game object and we're going to
02:06 - grab it in here on our away equals the
02:09 - graph container dot find our total game
02:12 - object okay now let's make two functions
02:15 - so when we go down here and let's make a
02:18 - private void show tanta
02:23 - and then we're going to have a private
02:24 - void hide taunted on our home let's
02:29 - simply set the tooltip game object that
02:31 - set active to bounce and so it hides the
02:35 - game object and now in our show the
02:38 - first thing we're going to do is enable
02:39 - the game object and as a parameter we're
02:45 - going to receive a string for the
02:46 - tooltip text and we're also going to
02:49 - receive a vector3
02:50 - for the anchor position this is the
02:53 - position that we want to place our toe
02:54 - tip in
02:55 - so now let's set the object text so
02:58 - first go into the Haunted game object
03:00 - dot transform that find we're going to
03:03 - find the text sub game object and get a
03:06 - text component inside it and set the
03:09 - text to our tooltip text so this way we
03:13 - are assigning our tooltip text to the
03:14 - text game object now that we have that
03:17 - we need to calculate the size of our
03:19 - background so let's calculate a vector3
03:22 - for the background size and now for this
03:26 - we're going to have a new vector2 and
03:28 - for the width of our background we're
03:31 - going to go into the text component and
03:34 - grab the preferred width and for the
03:38 - height we're going to have the preferred
03:40 - height so this is the exact perfect size
03:47 - that would occupy our text now we have a
03:50 - bit of padding when we set up our game
03:52 - object as you can see in the editor our
03:55 - text game object is on four four in
03:57 - order to give a little bit of space on
03:59 - the on left side and under
04:00 - so using that let's make a float for the
04:03 - attacks padding size and set it to four
04:06 - F which is what we set up in there and
04:08 - we're going to increase the background
04:10 - size on both the width and the height by
04:13 - the padding x to F so this way our
04:18 - background will have the text padding
04:20 - size of four F on the on left side right
04:21 - up and down now let's just clean up this
04:24 - coding here by making a text so we don't
04:26 - have to do all these fines so the
04:29 - tooltip UI text which is this and
04:33 - replace all of this
04:37 - all right so our code is nice and clean
04:39 - now after calculating the background
04:42 - size let's go into the tool tip game
04:44 - object the transform dot fine we need to
04:48 - find our background and then grab the
04:51 - get component of right transform and set
04:56 - the size Delta to be the background size
04:58 - okay so our show tone tip function
05:01 - should now be working so let's go up
05:02 - here and just for testing let's show a
05:05 - tilted so you show total let's give it
05:09 - some text this is a total tab and for
05:13 - the anchored position just for testing
05:15 - let's put it on a hundred AHA okay
05:17 - so again here first we set the main game
05:20 - object to true so that it is visible we
05:23 - grab a reference to the child text game
05:25 - object we set the text to our tooltip
05:28 - tags that we receive up here we define a
05:30 - padding size which is the same that we
05:32 - set up when we create the game object we
05:35 - calculate the background size based on
05:37 - the width and height of our text and
05:39 - then we simply apply that background
05:41 - size into our background rect transform
05:44 - so let's see all of that in action yep
05:46 - there it is as you can see the tooltip
05:48 - is currently saying this is a tooltip
05:50 - and the background is correctly sized
05:52 - now just for testing let's make it's a
05:55 - very saying so we can make sure that the
05:57 - background is always being correctly
05:58 - calculated so in here very quickly make
06:01 - a function periodic which is part of the
06:03 - code monkey utilities that you can grab
06:05 - for free from unity code monkey comm and
06:07 - in here I'm going to create an action
06:10 - and that action will be triggered every
06:13 - 100 milliseconds and let's say something
06:15 - else
06:24 - yep as you can see regardless of what
06:26 - text we give the tooltip the background
06:28 - size always fits whatever text is on
06:31 - there okay now there is actually a
06:33 - slight issue in here
06:35 - which you can see if I reduce the number
06:37 - of values so there you go and as you can
06:39 - see the tooltip is behind the bars
06:41 - obviously this is not what we want now
06:44 - the reason it's behind is because the UI
06:46 - sorting order is based on the hierarchy
06:48 - and since the bars were created after
06:50 - they show up on top you can see in here
06:54 - on the edit area the tooltip is in here
06:57 - and if I were to drag it all the way
06:58 - down there you can see that it now shows
07:01 - up on top so whenever we show the
07:03 - tooltip we have to make sure we set it
07:05 - as the last sibling so let's go back
07:07 - into our code and on the shuttle tip
07:09 - function after we do all of this then
07:12 - let's simply set the tooltip game object
07:15 - transform dot set as last sibling this
07:18 - sort sit on the last position on the
07:20 - hierarchy so now let's test and if I
07:24 - reduce yep as you can see it shows up on
07:27 - top of the bars alright so now that we
07:29 - have the basic concept working let's
07:31 - apply it to show up whenever we set the
07:33 - mouse over a certain bar now in here
07:36 - there are several ways that we can show
07:37 - our tooltip when we mouse over the bar
07:40 - the simplest way we're going to do it is
07:42 - first of all we need to go down here and
07:44 - modify our graph visual to also send in
07:47 - the tooltip text then once we do that in
07:50 - here when we receive the attentive text
07:52 - we have to capture a mouse over on top
07:55 - of this game object and make it display
07:57 - that text on the tooltip which also
08:00 - means that we need to go up here and
08:01 - make a static reference to show our
08:04 - Taunton so let's want that one by one so
08:07 - the first thing is to go in here onto
08:10 - the ad where our visual and we're also
08:12 - going to pass a string for the tooltip
08:14 - text now obviously we need to rework all
08:19 - of these whenever you got the a graph
08:20 - visual need to add that down here the
08:23 - same thing at where a visual and up here
08:26 - we need to call this function using the
08:28 - e2 until the text so first let's go here
08:30 - make a tooltip text and now we're going
08:33 - to grab the tooltip text you
08:35 - in the get axis label y which won't give
08:38 - us a visual representation of this value
08:41 - and then let's pass in our taunted text
08:44 - okay
08:44 - so now all the way down here on the bar
08:48 - chart and here we are creating a bar so
08:51 - using this bar game object let us simply
08:54 - add a component and I'm going to use the
08:57 - button UI which again is also part of
08:59 - the code monkey utilities and this
09:01 - simply and lets me easily access various
09:04 - pointer events so I have a mouse over
09:08 - once func which triggers only once when
09:11 - the mouse passes over and I'm going to
09:14 - add an action to that and now in the
09:18 - action it's in here that I need to do a
09:20 - shota in order to show my tooltip text
09:25 - but now I need a way to call this
09:27 - function again there are many ways we
09:29 - can do that but a simple one won't be by
09:32 - making a public static void show tooltip
09:35 - static and it won't simply call the same
09:38 - thing so receive the same parameters and
09:41 - then we have to go up here and make a
09:43 - static instance so a private static
09:47 - window graph for our instance and set
09:50 - the instance on our away so now using
09:55 - that instance we can go into this static
09:57 - and call the shell tooltip function and
10:01 - give it these parameters okay so
10:06 - essentially we just created a static
10:08 - function so we don't need an instance
10:10 - reference inside of our graph visuals so
10:13 - in here instead of using show tooltip
10:14 - I'm going to use show Tom type static
10:16 - since that no longer requires a
10:18 - reference to our window graph and with
10:20 - that we now should have to type text
10:22 - being shown on graph position whenever
10:25 - we pass the mouse over this bar and up
10:28 - here the one thing we didn't set was the
10:30 - anchored position so for that we simply
10:33 - take the tooltip game object and get the
10:36 - rect transform component and set the
10:40 - anchored position to this anchor
10:41 - position
10:42 - all right let's test ok Here I am if I
10:45 - pass the mouse over if there you go
10:47 - there's that on tape saying that this
10:48 - bar
10:49 - represents a value of 98 and if I mouse
10:52 - over this one yep 56 and move over
10:54 - various and as you can see we now have
10:56 - tooltips displaying the exact value that
10:58 - each bar represents now let's just make
11:01 - sure our tongue tip disappears when we
11:03 - move the mouse away so for now we simply
11:05 - go up here and use another function
11:07 - inside the button UI we also have to
11:17 - make a static for the height on tip so
11:19 - let's do that alright so we have a
11:33 - height on tip static function which
11:35 - calls this one on the instance and down
11:38 - here we add a button UI to our bar game
11:41 - object then on mouse-over we show the
11:44 - toe tip and onmouseout we hide the total
11:46 - and here if I mouse over yep says 98 and
11:49 - if I Mouse out it no longer says
11:51 - anything okay great now let's just apply
11:54 - this to our online graph so on our line
11:57 - graph we're going to do very much the
11:58 - same thing that we did in here so let's
12:00 - go down into our line graph visual onto
12:02 - the ad where a visual and here we have
12:05 - our tag game object being created so
12:08 - we're going to do the same thing but for
12:10 - our talcum object so in here let's call
12:13 - it dot button UI and we're going to add
12:15 - it to deed that game object and
12:17 - everything else should be the same
12:18 - here's the graph switch into a line
12:22 - graph and now if I mouse over any of you
12:24 - can see the tooltip that shows the value
12:26 - which is represented in this data point
12:29 - so in there and here we have a 30 and as
12:31 - you can see it is 30 in there you got a
12:33 - 5 and it is a fun so there you have it
12:36 - we added some tooltips to our graph to
12:37 - be able to view the exact value of each
12:39 - data point in the next video we're going
12:41 - to create a graph visual object
12:43 - interface so we can later update our
12:45 - graph in real time as always you can
12:48 - download the project files in utilities
12:49 - from Unity code monkey comm if you have
12:52 - any questions post them in the comments
12:53 - and I'll do my best to answer them
12:54 - subscribe for more videos and I'll see
12:56 - you next time

Cleaned transcript:

hello and welcome I am your code McKean in this video we're continuing to create a graph in unity we're going to add tooltips to display the exact value of each data point let's begin so I have my graphing here it is showing some values and I have various buttons to modify the display I can change the visual type between a bar chart or a line graph I can modify how many entries are visible and I can convert the values that are shown so as you can see in there it is converting between dollars and euros so now we're going to add a tool tip that will appear when we pass the mouse over a dot or a bar and display the value of that data point so if I place the mouse in here I want to see a tooltip around here saying about 41 okay so let's first go into the editor and create our tooltip game object so let's go to our graph container and in here create an empty game object and let's call it tilted inside let's create another empty game object we can meet background and give it the image component okay then another game object and let's name this one text add the text component set some text the font size and let's say about twelve and now let's position everything anchors to the unloader left position so in here use shift so we modify both the anchor and the pivot so click in there and let's put them on four four set the width and height to zero and overflow on both of these and set it to a line on the left side and down there okay so this one will represent our tooltip text and for the background let's also anchor it down in there okay and now for the width and height that won't be dynamically modified based on the size of our text so this is our tooltip game object setup now let's go into the code so in here the first thing we need is to grab a reference to our tooltip game object so let's go in here and make a private game object for our total game object and we're going to grab it in here on our away equals the graph container dot find our total game object okay now let's make two functions so when we go down here and let's make a private void show tanta and then we're going to have a private void hide taunted on our home let's simply set the tooltip game object that set active to bounce and so it hides the game object and now in our show the first thing we're going to do is enable the game object and as a parameter we're going to receive a string for the tooltip text and we're also going to receive a vector3 for the anchor position this is the position that we want to place our toe tip in so now let's set the object text so first go into the Haunted game object dot transform that find we're going to find the text sub game object and get a text component inside it and set the text to our tooltip text so this way we are assigning our tooltip text to the text game object now that we have that we need to calculate the size of our background so let's calculate a vector3 for the background size and now for this we're going to have a new vector2 and for the width of our background we're going to go into the text component and grab the preferred width and for the height we're going to have the preferred height so this is the exact perfect size that would occupy our text now we have a bit of padding when we set up our game object as you can see in the editor our text game object is on four four in order to give a little bit of space on the on left side and under so using that let's make a float for the attacks padding size and set it to four F which is what we set up in there and we're going to increase the background size on both the width and the height by the padding x to F so this way our background will have the text padding size of four F on the on left side right up and down now let's just clean up this coding here by making a text so we don't have to do all these fines so the tooltip UI text which is this and replace all of this all right so our code is nice and clean now after calculating the background size let's go into the tool tip game object the transform dot fine we need to find our background and then grab the get component of right transform and set the size Delta to be the background size okay so our show tone tip function should now be working so let's go up here and just for testing let's show a tilted so you show total let's give it some text this is a total tab and for the anchored position just for testing let's put it on a hundred AHA okay so again here first we set the main game object to true so that it is visible we grab a reference to the child text game object we set the text to our tooltip tags that we receive up here we define a padding size which is the same that we set up when we create the game object we calculate the background size based on the width and height of our text and then we simply apply that background size into our background rect transform so let's see all of that in action yep there it is as you can see the tooltip is currently saying this is a tooltip and the background is correctly sized now just for testing let's make it's a very saying so we can make sure that the background is always being correctly calculated so in here very quickly make a function periodic which is part of the code monkey utilities that you can grab for free from unity code monkey comm and in here I'm going to create an action and that action will be triggered every 100 milliseconds and let's say something else yep as you can see regardless of what text we give the tooltip the background size always fits whatever text is on there okay now there is actually a slight issue in here which you can see if I reduce the number of values so there you go and as you can see the tooltip is behind the bars obviously this is not what we want now the reason it's behind is because the UI sorting order is based on the hierarchy and since the bars were created after they show up on top you can see in here on the edit area the tooltip is in here and if I were to drag it all the way down there you can see that it now shows up on top so whenever we show the tooltip we have to make sure we set it as the last sibling so let's go back into our code and on the shuttle tip function after we do all of this then let's simply set the tooltip game object transform dot set as last sibling this sort sit on the last position on the hierarchy so now let's test and if I reduce yep as you can see it shows up on top of the bars alright so now that we have the basic concept working let's apply it to show up whenever we set the mouse over a certain bar now in here there are several ways that we can show our tooltip when we mouse over the bar the simplest way we're going to do it is first of all we need to go down here and modify our graph visual to also send in the tooltip text then once we do that in here when we receive the attentive text we have to capture a mouse over on top of this game object and make it display that text on the tooltip which also means that we need to go up here and make a static reference to show our Taunton so let's want that one by one so the first thing is to go in here onto the ad where our visual and we're also going to pass a string for the tooltip text now obviously we need to rework all of these whenever you got the a graph visual need to add that down here the same thing at where a visual and up here we need to call this function using the e2 until the text so first let's go here make a tooltip text and now we're going to grab the tooltip text you in the get axis label y which won't give us a visual representation of this value and then let's pass in our taunted text okay so now all the way down here on the bar chart and here we are creating a bar so using this bar game object let us simply add a component and I'm going to use the button UI which again is also part of the code monkey utilities and this simply and lets me easily access various pointer events so I have a mouse over once func which triggers only once when the mouse passes over and I'm going to add an action to that and now in the action it's in here that I need to do a shota in order to show my tooltip text but now I need a way to call this function again there are many ways we can do that but a simple one won't be by making a public static void show tooltip static and it won't simply call the same thing so receive the same parameters and then we have to go up here and make a static instance so a private static window graph for our instance and set the instance on our away so now using that instance we can go into this static and call the shell tooltip function and give it these parameters okay so essentially we just created a static function so we don't need an instance reference inside of our graph visuals so in here instead of using show tooltip I'm going to use show Tom type static since that no longer requires a reference to our window graph and with that we now should have to type text being shown on graph position whenever we pass the mouse over this bar and up here the one thing we didn't set was the anchored position so for that we simply take the tooltip game object and get the rect transform component and set the anchored position to this anchor position all right let's test ok Here I am if I pass the mouse over if there you go there's that on tape saying that this bar represents a value of 98 and if I mouse over this one yep 56 and move over various and as you can see we now have tooltips displaying the exact value that each bar represents now let's just make sure our tongue tip disappears when we move the mouse away so for now we simply go up here and use another function inside the button UI we also have to make a static for the height on tip so let's do that alright so we have a height on tip static function which calls this one on the instance and down here we add a button UI to our bar game object then on mouseover we show the toe tip and onmouseout we hide the total and here if I mouse over yep says 98 and if I Mouse out it no longer says anything okay great now let's just apply this to our online graph so on our line graph we're going to do very much the same thing that we did in here so let's go down into our line graph visual onto the ad where a visual and here we have our tag game object being created so we're going to do the same thing but for our talcum object so in here let's call it dot button UI and we're going to add it to deed that game object and everything else should be the same here's the graph switch into a line graph and now if I mouse over any of you can see the tooltip that shows the value which is represented in this data point so in there and here we have a 30 and as you can see it is 30 in there you got a 5 and it is a fun so there you have it we added some tooltips to our graph to be able to view the exact value of each data point in the next video we're going to create a graph visual object interface so we can later update our graph in real time as always you can download the project files in utilities from Unity code monkey comm if you have any questions post them in the comments and I'll do my best to answer them subscribe for more videos and I'll see you next time
