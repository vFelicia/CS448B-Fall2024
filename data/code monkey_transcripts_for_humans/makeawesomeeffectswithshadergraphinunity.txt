With timestamps:

00:00 - in this video we're going to cover how
00:01 - to set up and start using the shader
00:03 - graph
00:04 - this is a very powerful unity tool that
00:06 - lets you easily make some really cool
00:07 - shaders by dragging and dropping various
00:09 - nodes and simply connecting the dots
00:11 - let's begin
00:19 - hello and welcome i'm your code monkey
00:21 - and this channel is all about helping
00:23 - you
00:23 - learn how to make your own games with
00:25 - in-depth tutorials made by a
00:26 - professional indie game developer so if
00:28 - you find the video helpful consider
00:29 - subscribing
00:30 - okay so let's check out shadowgraph in
00:32 - unity this is an extremely powerful and
00:34 - very easy to use feature
00:36 - i've already done a bunch of different
00:37 - shadowgraph effects in previous videos
00:39 - there's a playlist linked in the
00:41 - description
00:41 - and i also covered how you can apply
00:43 - shadowgraph shaders as a post-processing
00:45 - effect
00:46 - so after watching this beginner video go
00:48 - check those out to see some more
00:49 - concrete examples
00:51 - now here we're going to go through the
00:52 - setup process to be able to start using
00:54 - shadow graph
00:55 - then we're going to look at the basics
00:56 - for how it works how we can add
00:58 - properties to our shader
01:00 - understand how the board works add nodes
01:02 - and connect them to make our effects
01:04 - the process is the same for making 3d
01:06 - and 2d shaders with just the output node
01:08 - being different
01:08 - and lastly in the end we're also going
01:10 - to see how you can manipulate our
01:11 - shaders through code
01:13 - this video is made possible thanks to
01:14 - these awesome supporters
01:16 - go to patreon.com unitycodemonkey to get
01:19 - some perks and help keep the videos free
01:20 - for everyone
01:21 - okay so let's begin now first of all in
01:24 - order to use shadow graph you need to be
01:25 - using one of the new render pipelines
01:28 - so that's the high definition rather
01:29 - pipeline or the universal render
01:31 - pipeline
01:32 - the shadow graph does not work on the
01:34 - old built-in render pipeline
01:36 - so over here i have a completely empty
01:38 - project so right now it is not using any
01:40 - of the render pipelines so let's install
01:42 - that quickly
01:43 - we just go into window and open up the
01:45 - package manager
01:46 - and now here we see tons of available
01:48 - packages
01:50 - so here we want to find the universal
01:52 - render pipeline
01:53 - all right here it is so just hit on
01:55 - download and then install
01:59 - all right it's installed and over here
02:01 - we can also see the shadow graph package
02:03 - and make sure that it has been
02:04 - automatically installed as soon as we
02:06 - install the universal render pipeline
02:08 - okay so now that it's installed we can
02:09 - go into edit and go down here to the
02:12 - project settings
02:13 - and then we have the graphics tab and
02:15 - here we can see a field for a render
02:17 - pipeline asset
02:18 - so down here in my project files just
02:20 - right click and we're going to create
02:22 - go into rendering universal renderer
02:24 - pipeline and create a new pipeline asset
02:26 - so just like that hit enter and there
02:28 - you go so now we can simply drag this
02:30 - drag it onto that field and yep just
02:32 - like that okay so now our project is
02:34 - using the universal render pipeline
02:36 - all right so with the render pipeline
02:38 - setup we can start playing around with
02:39 - shadowgraph
02:40 - now to do that we just right click then
02:43 - we go into create
02:45 - and over here we have shaders and then
02:47 - over here we have the various shadow
02:49 - graphs
02:50 - so you have a basic unknown graph which
02:51 - does not receive light
02:53 - you have a pvr which receives physically
02:55 - accurate light
02:56 - then we have a subgraph which is more
02:57 - complex if you want to compose it of
02:59 - various subgraphs
03:01 - and the vfx shadow graph which is meant
03:02 - to be used with the visual effects graph
03:04 - then you also have the 2d renderer for
03:06 - some basic 2d graphs
03:08 - okay so in this case let's select a
03:10 - basic pbr graph
03:11 - let's call it testing shadow graph
03:14 - all right here's the asset and just
03:16 - double click to open it
03:18 - all right so here we see the shadow
03:19 - graph window so the first thing you see
03:21 - here is this node
03:22 - now this is our master node which is
03:24 - essentially our output
03:26 - and here in the corner we can see a
03:28 - preview so right now it just shows the
03:30 - default sphere
03:32 - and we can right click to change the
03:34 - preview mesh so in this case let's
03:35 - select the cube just for testing
03:37 - and there you go we have our basic cube
03:39 - so let's try out using this completely
03:42 - empty shader
03:43 - now to save we go up here on the left
03:44 - side and click on save asset
03:46 - there you go it's been saved and now
03:48 - down here in our project files
03:50 - let's right click to create a new
03:52 - material
03:55 - alright here's our new material and now
03:57 - over here we can change the shader so
03:59 - just click on
04:00 - it and we go down into the folder called
04:01 - shadow graphs
04:03 - and then inside we have all the
04:04 - graphs that were made with shadow graph
04:06 - so here let's select our custom one and
04:09 - yep there it is now we have this
04:10 - material
04:11 - so now just for testing let's go to our
04:13 - scene and in here let's create a new 3d
04:16 - object
04:16 - make it a cube and just drag our
04:18 - material onto it
04:20 - and yep here we have our very busy cube
04:22 - using our custom shader made in
04:24 - shadowgraph right
04:25 - awesome okay so now having this basic
04:27 - cube isn't really very interesting
04:28 - so let's go back into shadow graph okay
04:31 - here we are
04:31 - now just a simple note on a very useful
04:33 - hotkey which is you press
04:35 - shift and space and it automatically
04:37 - maximizes the window that you're using
04:39 - so in here just select shadow graph
04:41 - shift and space and there you go we have
04:42 - a very nice window that we can work with
04:44 - okay now up here on the left side we
04:47 - have the properties area
04:49 - so this is where we can add properties
04:50 - that our shader requires over here we
04:52 - can click on the plus icon
04:54 - and we can see the various types that we
04:55 - can create so in this case let's select
04:58 - a simple type texture 2d
05:01 - and just like that our shader now has a
05:03 - property and here we see the various
05:05 - films related to this property
05:07 - now the property has a name and a
05:09 - reference so the name is
05:10 - up here and we can double click to
05:12 - rename it so in this case
05:14 - let's call it main text and then over
05:16 - here we have the reference name
05:18 - so in this one we're going to call it
05:20 - underscore main text
05:22 - the is the name we're going to use if we
05:24 - want to modify shader properties through
05:26 - code
05:26 - and normally they start with an
05:28 - underscore and the name has to exactly
05:30 - match what you write in code and what
05:31 - you're writing here so be careful with
05:33 - how it's case sensitive
05:35 - all right so we have our basic texture
05:36 - property now if we just save our asset
05:39 - and now select our material and look in
05:41 - the inspector and
05:42 - over here we can see we have a nice
05:44 - texture field
05:45 - so i can click on this and if there you
05:47 - go i can select any texture
05:49 - so if i select the texture let's say
05:50 - this nice one
05:52 - and go into the scene view and nope our
05:55 - cube is still showing the same basic
05:56 - gray cue
05:57 - so we set a texture but it's currently
05:59 - not yet being applied
06:01 - so let's go back into shadow graph and
06:03 - now here we can take this texture
06:06 - and just click and drag and drop it
06:08 - straight into our board
06:09 - and over here we have our main texture
06:11 - texture node
06:12 - now we want to apply this to our master
06:14 - node here so we can visually see the
06:16 - texture
06:16 - so in order to affect the color what we
06:18 - need to modify is over here the albedo
06:20 - so you really just need to connect the
06:22 - dots however if i try to grab this one
06:25 - and try to connect it to that one
06:27 - and nope you can see that it does not
06:28 - accept it now here inside parentheses we
06:31 - can see the type for each input and
06:33 - output and over here you can see that
06:35 - the input for this one
06:37 - it shows a 3 which means that it's
06:39 - expecting a rgb color value
06:41 - but over here on the texture it's
06:43 - outputting a t2 which is a 2d texture
06:46 - so in this case it means that we need to
06:47 - sample the texture to get the color
06:49 - values which we can then use in here
06:51 - now in order to add a node onto our
06:53 - board we can right click in here
06:55 - then go into create node and over here
06:58 - we have our nodes
06:59 - now in here you can browse around and
07:01 - see all of the various nodes that are
07:02 - available
07:03 - so in this case we can go over here to
07:05 - input
07:06 - go into texture and over here we have
07:09 - the sample texture 2d
07:11 - so that's one way that we can get this
07:13 - or another way is simply over here in
07:15 - the middle of nothing i click on space
07:17 - and then i write sample and over here i
07:19 - find the texture
07:20 - so just a quick way of adding nodes by
07:22 - using text
07:24 - okay so now on this node you can see
07:25 - that over here we have an input of type
07:27 - t2
07:28 - and we have an output of all the colors
07:30 - so very simple over here we can just
07:32 - connect the dots so just connect the t2
07:33 - onto this input
07:35 - and now on the output we have the rgba
07:37 - and we're going to connect it onto our
07:38 - albedo
07:40 - alright so everything is nicely
07:41 - connected now we just hit on save
07:44 - asset any up here we are in our scene
07:46 - and we do indeed see our queue with our
07:48 - very nice texture
07:49 - all right awesome so just like this
07:52 - we'll learn how to create the most basic
07:53 - shader
07:54 - so it just has a texture and applies it
07:56 - to our mesh
07:58 - pretty much any effect you want to build
07:59 - is just extending upon this concept
08:01 - so here in shadowgraph another tip is
08:03 - how you can set the default texture
08:05 - so over here you pre-selected and now we
08:07 - can see our very nice preview
08:09 - and then here you can simply just browse
08:11 - around all the nodes so you can see
08:13 - there's tons of nodes tons of master
08:14 - nodes
08:15 - input nodes artistic nodes and anything
08:17 - you want
08:18 - now in order to be able to create an
08:20 - effect you want you just need to start
08:21 - thinking in terms of colors and
08:23 - mathematical operations
08:25 - so for example let's make a simple tint
08:27 - to our texture so let's replace this one
08:29 - with this one that is in black and white
08:31 - and now we want to tint this with any
08:33 - color
08:34 - now if you've ever used an image program
08:35 - you should be familiar with the basic
08:37 - multiply tint
08:38 - we have an image and we tend everything
08:40 - with a certain color
08:42 - now here we can simply add a new
08:44 - property so click on the plus sign we
08:46 - add a
08:46 - color let's call it color and on the
08:49 - reference call it underscore
08:50 - color now let's drag the color onto our
08:53 - board
08:54 - yep there's the color and now over here
08:56 - let's hit space
08:57 - and we want to add a multiply node
09:00 - all right there it is it takes one value
09:02 - and multiplies by another one
09:04 - and we have the output so in this case
09:06 - let's take our color
09:08 - and then we're going to multiply our
09:10 - color by our texture color
09:12 - so just input that one in there and
09:14 - let's change the default color let's put
09:16 - it
09:16 - on a nice green yep just like that and
09:20 - we take this output and simply put it on
09:21 - the albedo
09:22 - and yep over here we have a very basic
09:24 - 10 color shader
09:26 - so by modifying this property we modify
09:28 - the final effect that we get down here
09:30 - so again you just need to think about
09:32 - this in terms of colors and math
09:34 - so what we're doing here on this
09:35 - multiply node is you have to imagine the
09:38 - texture
09:38 - has a comma value per each pixel and
09:41 - then we're going through each pixel one
09:42 - by one
09:43 - and we're multiplying it by our color
09:45 - constant so it multiplies the red and
09:47 - green then blue and so on
09:49 - and then we have our output so we're
09:51 - working with textures but in the end
09:53 - always remember that this is really just
09:55 - numbers
09:56 - all right so let's try this just save
09:57 - the asset and yep back in the scene here
10:00 - and we have our material and yep we have
10:02 - a field for our color property
10:04 - and we can select and now we can tint
10:06 - this so let's change the texture for the
10:08 - gray one and yep there you go now we can
10:10 - tint this with
10:11 - any color so you can see that all of the
10:13 - base pixels of the texture are being
10:15 - multiplied by whatever color value we
10:17 - use
10:18 - so you can see how easy it is to build
10:20 - upon this to make any effect you want
10:21 - it's all about placing nodes and
10:23 - connecting the dots so here in the
10:25 - properties you can see we have tons of
10:27 - fields that we can add
10:28 - so for example let's add one of type
10:30 - vector1 which is essentially a float
10:33 - let's call this our saturation and again
10:36 - give it a nice reference name
10:38 - and over here we have the mode we can
10:40 - click on this and change from default
10:42 - and select a slider
10:43 - and now we can select a nice minimum and
10:45 - maximum so in this case let's leave it
10:46 - between zero and one
10:48 - and if we save and look in the material
10:51 - yep there it is now over here we can see
10:52 - our saturation field and yep it's a nice
10:54 - slider goes from zero all the way to one
10:56 - so now here for example let's drag it in
10:58 - there and let's press
11:00 - space and add a saturation node and
11:02 - there you go it takes an input and
11:04 - saturation
11:06 - so for example for the input let's take
11:08 - this color
11:09 - for the saturation let's take our field
11:11 - and output the whole thing all the way
11:13 - in there so if we save
11:15 - and yep here we are in our scene and
11:17 - saturation of zero then everything is in
11:18 - black and white and increase it and we
11:20 - get our nice color
11:21 - so change the texture for this one use a
11:24 - white color so that it looks the
11:25 - original and then tinted black in black
11:28 - and white and with color and so on
11:30 - alright so here you can see a very nice
11:32 - different type of property
11:34 - all right now just one last thing over
11:36 - here we are working with a 3d shader
11:38 - since we're using a pbr master
11:41 - however if you remember over here if we
11:42 - hit on create
11:44 - shader we can create some 2d renderer
11:46 - shaders
11:47 - now what this does is we only just
11:48 - change the master node
11:50 - so over here we can create a new node go
11:52 - down here to master and you can change
11:54 - any of the masters for example let's say
11:56 - sprite unlit
11:58 - and now we can right click in order to
11:59 - make this the active master
12:01 - and then let's change this to make it a
12:03 - quant and then everything else is pretty
12:05 - much the same so just take this one
12:07 - take the output of that color and just
12:09 - drag it in there
12:10 - and yep there we go now we have a very
12:12 - simple 2d sprite
12:14 - so here in the scene let's make a new
12:15 - object make it a 2d object
12:17 - make it a sprite let's give it a basic
12:20 - sprite
12:21 - all right here's our flat 2d sprite and
12:24 - for the material let's use the same
12:25 - material
12:26 - using our nice shader and if there you
12:28 - go now everything is working the same so
12:29 - we have a nice sprite shader being
12:31 - applied to our sprite render which is
12:33 - using a 2d sprite
12:34 - and whatever sprite you select over here
12:36 - on the sprite render
12:38 - is going to be set on the shader on the
12:40 - main text so again
12:41 - always be careful with the exact name
12:43 - all right now another thing related to
12:45 - shaders is how you can modify them
12:47 - through code
12:48 - so over here i have this very simple
12:50 - script it just has a film for the
12:52 - material
12:53 - and then we access that material and we
12:55 - set color
12:56 - then we pass in the name of the property
12:58 - that we want to change
12:59 - and then the value that we want to
13:01 - change it to so in this case when we
13:02 - press the t
13:03 - key it's going to set the color to green
13:05 - so over here i have my basic cube
13:07 - and let's add this script onto it and
13:10 - let's drag the reference to our material
13:12 - yep now let's hit play all right there's
13:15 - the cube now if i press the t key
13:17 - if there you go it changes the property
13:19 - which changes the color
13:20 - so i modified the shader property
13:22 - through code which modified my material
13:24 - now using this you can build just about
13:26 - anything in your shaders and control
13:27 - them in any way you want
13:29 - you can make shaders that are really
13:30 - simple or go really crazy and complex
13:33 - the only limit is really just your
13:34 - imagination alright so with this
13:36 - introductory video you should now be
13:38 - able to get started making your own
13:39 - shaders
13:40 - if you want to see some specific
13:41 - tutorial videos check out the shader
13:43 - graph playlist where you can view the
13:44 - tutorials for various effects
13:46 - i've already covered a bunch of them
13:48 - like glow blur pixelate and so on
13:50 - and i also covered how to apply those
13:52 - shaders as post-processing effects
13:54 - so now go ahead and make something
13:56 - awesome if you found this video helpful
13:58 - consider liking and subscribing
14:00 - this video is made possible thanks to
14:02 - these awesome supporters go to
14:04 - patreon.com
14:05 - unitycodemonkey to get some perks and
14:07 - help keep the videos free for everyone
14:09 - as always you can download the project
14:10 - files and utilities from
14:11 - unitycodemonkey.com
14:13 - subscribe to the channel for more unity
14:14 - tutorials post any query 7 comments and
14:16 - i'll see you next time

Cleaned transcript:

in this video we're going to cover how to set up and start using the shader graph this is a very powerful unity tool that lets you easily make some really cool shaders by dragging and dropping various nodes and simply connecting the dots let's begin hello and welcome i'm your code monkey and this channel is all about helping you learn how to make your own games with indepth tutorials made by a professional indie game developer so if you find the video helpful consider subscribing okay so let's check out shadowgraph in unity this is an extremely powerful and very easy to use feature i've already done a bunch of different shadowgraph effects in previous videos there's a playlist linked in the description and i also covered how you can apply shadowgraph shaders as a postprocessing effect so after watching this beginner video go check those out to see some more concrete examples now here we're going to go through the setup process to be able to start using shadow graph then we're going to look at the basics for how it works how we can add properties to our shader understand how the board works add nodes and connect them to make our effects the process is the same for making 3d and 2d shaders with just the output node being different and lastly in the end we're also going to see how you can manipulate our shaders through code this video is made possible thanks to these awesome supporters go to patreon.com unitycodemonkey to get some perks and help keep the videos free for everyone okay so let's begin now first of all in order to use shadow graph you need to be using one of the new render pipelines so that's the high definition rather pipeline or the universal render pipeline the shadow graph does not work on the old builtin render pipeline so over here i have a completely empty project so right now it is not using any of the render pipelines so let's install that quickly we just go into window and open up the package manager and now here we see tons of available packages so here we want to find the universal render pipeline all right here it is so just hit on download and then install all right it's installed and over here we can also see the shadow graph package and make sure that it has been automatically installed as soon as we install the universal render pipeline okay so now that it's installed we can go into edit and go down here to the project settings and then we have the graphics tab and here we can see a field for a render pipeline asset so down here in my project files just right click and we're going to create go into rendering universal renderer pipeline and create a new pipeline asset so just like that hit enter and there you go so now we can simply drag this drag it onto that field and yep just like that okay so now our project is using the universal render pipeline all right so with the render pipeline setup we can start playing around with shadowgraph now to do that we just right click then we go into create and over here we have shaders and then over here we have the various shadow graphs so you have a basic unknown graph which does not receive light you have a pvr which receives physically accurate light then we have a subgraph which is more complex if you want to compose it of various subgraphs and the vfx shadow graph which is meant to be used with the visual effects graph then you also have the 2d renderer for some basic 2d graphs okay so in this case let's select a basic pbr graph let's call it testing shadow graph all right here's the asset and just double click to open it all right so here we see the shadow graph window so the first thing you see here is this node now this is our master node which is essentially our output and here in the corner we can see a preview so right now it just shows the default sphere and we can right click to change the preview mesh so in this case let's select the cube just for testing and there you go we have our basic cube so let's try out using this completely empty shader now to save we go up here on the left side and click on save asset there you go it's been saved and now down here in our project files let's right click to create a new material alright here's our new material and now over here we can change the shader so just click on it and we go down into the folder called shadow graphs and then inside we have all the graphs that were made with shadow graph so here let's select our custom one and yep there it is now we have this material so now just for testing let's go to our scene and in here let's create a new 3d object make it a cube and just drag our material onto it and yep here we have our very busy cube using our custom shader made in shadowgraph right awesome okay so now having this basic cube isn't really very interesting so let's go back into shadow graph okay here we are now just a simple note on a very useful hotkey which is you press shift and space and it automatically maximizes the window that you're using so in here just select shadow graph shift and space and there you go we have a very nice window that we can work with okay now up here on the left side we have the properties area so this is where we can add properties that our shader requires over here we can click on the plus icon and we can see the various types that we can create so in this case let's select a simple type texture 2d and just like that our shader now has a property and here we see the various films related to this property now the property has a name and a reference so the name is up here and we can double click to rename it so in this case let's call it main text and then over here we have the reference name so in this one we're going to call it underscore main text the is the name we're going to use if we want to modify shader properties through code and normally they start with an underscore and the name has to exactly match what you write in code and what you're writing here so be careful with how it's case sensitive all right so we have our basic texture property now if we just save our asset and now select our material and look in the inspector and over here we can see we have a nice texture field so i can click on this and if there you go i can select any texture so if i select the texture let's say this nice one and go into the scene view and nope our cube is still showing the same basic gray cue so we set a texture but it's currently not yet being applied so let's go back into shadow graph and now here we can take this texture and just click and drag and drop it straight into our board and over here we have our main texture texture node now we want to apply this to our master node here so we can visually see the texture so in order to affect the color what we need to modify is over here the albedo so you really just need to connect the dots however if i try to grab this one and try to connect it to that one and nope you can see that it does not accept it now here inside parentheses we can see the type for each input and output and over here you can see that the input for this one it shows a 3 which means that it's expecting a rgb color value but over here on the texture it's outputting a t2 which is a 2d texture so in this case it means that we need to sample the texture to get the color values which we can then use in here now in order to add a node onto our board we can right click in here then go into create node and over here we have our nodes now in here you can browse around and see all of the various nodes that are available so in this case we can go over here to input go into texture and over here we have the sample texture 2d so that's one way that we can get this or another way is simply over here in the middle of nothing i click on space and then i write sample and over here i find the texture so just a quick way of adding nodes by using text okay so now on this node you can see that over here we have an input of type t2 and we have an output of all the colors so very simple over here we can just connect the dots so just connect the t2 onto this input and now on the output we have the rgba and we're going to connect it onto our albedo alright so everything is nicely connected now we just hit on save asset any up here we are in our scene and we do indeed see our queue with our very nice texture all right awesome so just like this we'll learn how to create the most basic shader so it just has a texture and applies it to our mesh pretty much any effect you want to build is just extending upon this concept so here in shadowgraph another tip is how you can set the default texture so over here you preselected and now we can see our very nice preview and then here you can simply just browse around all the nodes so you can see there's tons of nodes tons of master nodes input nodes artistic nodes and anything you want now in order to be able to create an effect you want you just need to start thinking in terms of colors and mathematical operations so for example let's make a simple tint to our texture so let's replace this one with this one that is in black and white and now we want to tint this with any color now if you've ever used an image program you should be familiar with the basic multiply tint we have an image and we tend everything with a certain color now here we can simply add a new property so click on the plus sign we add a color let's call it color and on the reference call it underscore color now let's drag the color onto our board yep there's the color and now over here let's hit space and we want to add a multiply node all right there it is it takes one value and multiplies by another one and we have the output so in this case let's take our color and then we're going to multiply our color by our texture color so just input that one in there and let's change the default color let's put it on a nice green yep just like that and we take this output and simply put it on the albedo and yep over here we have a very basic 10 color shader so by modifying this property we modify the final effect that we get down here so again you just need to think about this in terms of colors and math so what we're doing here on this multiply node is you have to imagine the texture has a comma value per each pixel and then we're going through each pixel one by one and we're multiplying it by our color constant so it multiplies the red and green then blue and so on and then we have our output so we're working with textures but in the end always remember that this is really just numbers all right so let's try this just save the asset and yep back in the scene here and we have our material and yep we have a field for our color property and we can select and now we can tint this so let's change the texture for the gray one and yep there you go now we can tint this with any color so you can see that all of the base pixels of the texture are being multiplied by whatever color value we use so you can see how easy it is to build upon this to make any effect you want it's all about placing nodes and connecting the dots so here in the properties you can see we have tons of fields that we can add so for example let's add one of type vector1 which is essentially a float let's call this our saturation and again give it a nice reference name and over here we have the mode we can click on this and change from default and select a slider and now we can select a nice minimum and maximum so in this case let's leave it between zero and one and if we save and look in the material yep there it is now over here we can see our saturation field and yep it's a nice slider goes from zero all the way to one so now here for example let's drag it in there and let's press space and add a saturation node and there you go it takes an input and saturation so for example for the input let's take this color for the saturation let's take our field and output the whole thing all the way in there so if we save and yep here we are in our scene and saturation of zero then everything is in black and white and increase it and we get our nice color so change the texture for this one use a white color so that it looks the original and then tinted black in black and white and with color and so on alright so here you can see a very nice different type of property all right now just one last thing over here we are working with a 3d shader since we're using a pbr master however if you remember over here if we hit on create shader we can create some 2d renderer shaders now what this does is we only just change the master node so over here we can create a new node go down here to master and you can change any of the masters for example let's say sprite unlit and now we can right click in order to make this the active master and then let's change this to make it a quant and then everything else is pretty much the same so just take this one take the output of that color and just drag it in there and yep there we go now we have a very simple 2d sprite so here in the scene let's make a new object make it a 2d object make it a sprite let's give it a basic sprite all right here's our flat 2d sprite and for the material let's use the same material using our nice shader and if there you go now everything is working the same so we have a nice sprite shader being applied to our sprite render which is using a 2d sprite and whatever sprite you select over here on the sprite render is going to be set on the shader on the main text so again always be careful with the exact name all right now another thing related to shaders is how you can modify them through code so over here i have this very simple script it just has a film for the material and then we access that material and we set color then we pass in the name of the property that we want to change and then the value that we want to change it to so in this case when we press the t key it's going to set the color to green so over here i have my basic cube and let's add this script onto it and let's drag the reference to our material yep now let's hit play all right there's the cube now if i press the t key if there you go it changes the property which changes the color so i modified the shader property through code which modified my material now using this you can build just about anything in your shaders and control them in any way you want you can make shaders that are really simple or go really crazy and complex the only limit is really just your imagination alright so with this introductory video you should now be able to get started making your own shaders if you want to see some specific tutorial videos check out the shader graph playlist where you can view the tutorials for various effects i've already covered a bunch of them like glow blur pixelate and so on and i also covered how to apply those shaders as postprocessing effects so now go ahead and make something awesome if you found this video helpful consider liking and subscribing this video is made possible thanks to these awesome supporters go to patreon.com unitycodemonkey to get some perks and help keep the videos free for everyone as always you can download the project files and utilities from unitycodemonkey.com subscribe to the channel for more unity tutorials post any query 7 comments and i'll see you next time
