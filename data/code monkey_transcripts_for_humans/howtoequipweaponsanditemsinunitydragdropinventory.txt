With timestamps:

00:00 - in this video we're going to create an
00:01 - inventory equip system we're going to
00:03 - have our basic inventory and then drag
00:05 - out items to specific positions in order
00:08 - to equip them let's begin
00:12 - [Music]
00:16 - hello and welcome I'm your code monkey
00:19 - and this channel is all about helping
00:20 - you learn how to make your own games
00:22 - with enough tutorials made by a
00:23 - professional indie game developer so if
00:25 - you find the video helpful consider
00:27 - subscribing okay so this is what we want
00:29 - to make over here is my player character
00:31 - and I can move maram as you can see
00:33 - right now he has no harmer no helmet and
00:36 - when I attack I can only use punches and
00:38 - kicks and in here I have the inventory
00:41 - where you can see the various items that
00:43 - I'm carrying and in here on the player
00:45 - equip you can see the various items that
00:47 - I can equip so for example I can click
00:49 - on this helmet drag it and place it on
00:52 - the helmet slot and drop it and there
00:54 - you go the player equip the helmet
00:56 - however if I try to drag an armor into
00:59 - the helmet slot as you can see it
01:00 - doesn't work so it needs a helmet item
01:02 - onto this helmet slot and then you can
01:04 - see that I'm attacking using punches but
01:07 - now let's go and equip this sword and
01:09 - there you go now I'm attacking with a
01:10 - sword so I can drop any item I want in
01:13 - the valid correct position and
01:15 - everything works great so over here we
01:17 - have a very versatile system for
01:19 - equipping items and weapons there are
01:21 - several things that we built previously
01:22 - that we're going to use in order to make
01:24 - this first we're going to use the
01:26 - inventory system to hold our items then
01:29 - we're going to use what we learned in
01:30 - the drag-and-drop video in order to
01:32 - equip our items and the way that you're
01:34 - equipped is based on modifying the
01:36 - texture which I covered any modular
01:38 - spreadsheets video so again here is our
01:40 - character and our equip you I and we can
01:42 - modify our loadout and do anything we
01:44 - want this video is made possible thanks
01:46 - to these awesome supporters go to
01:48 - patreon.com/scishow to code monkey to
01:51 - get some perks and help keep the videos
01:52 - free for everyone alright so this is our
01:55 - goal let's get to it okay so here's our
01:57 - starring scene over here I have a player
01:59 - character and I can move them around as
02:02 - you can see there is no helmet no armor
02:04 - and if I attack I can only attack with
02:06 - punches and kicks then down here we have
02:08 - our inventory as you can see we have a
02:11 - bunch of items so we have an element two
02:13 - swords and two armors this inventory was
02:16 - fully created from scratch in a previous
02:17 - video so go check that out if you
02:19 - haven't seen it already alright so with
02:21 - this let's begin making our equip UI
02:23 - here in the editor let's go into the
02:26 - hierarchy
02:26 - go inside of our UI canvas and in here
02:29 - what
02:30 - make a new game object let's call this
02:32 - our UI character equipment now enzyme
02:36 - let's make some slots okay so here we
02:45 - have a weapon slot the visual is set up
02:48 - exactly the same as the inventory now
02:51 - inside let's make an image for the empty
02:53 - image and in this case this is for the
02:55 - weapons so let's drag the sword icon and
02:58 - now here I have a simple black in white
03:00 - shooter so let's use that one and there
03:02 - you go now it's in black and white and
03:03 - just reduce the Alpha by a little bit
03:05 - okay so here is the black and white
03:07 - children as you can see very simple we
03:09 - just take our texture we sample it we
03:11 - use the saturation node set saturation
03:13 - to zero in order to make it black and
03:14 - white and then we simply take the Alpha
03:16 - and apply it on to it so just like this
03:18 - we have an empty weapon slot now let's
03:21 - make the other two alright so here we
03:29 - have our three equipment slots now let's
03:32 - see how we're going to drop something in
03:33 - here now in here we already have drag
03:35 - and drop working so I can click and drag
03:38 - a certain item and place it in a
03:39 - different position in the inventory this
03:42 - was made in the drag drop video so check
03:44 - that out so I can drag it to a new
03:46 - position and if I drag into an invalid
03:48 - position it simply goes back in there
03:49 - now what we need is in order to capture
03:51 - when I drag an item from the inventory
03:53 - and drop it inside one of our equipment
03:56 - slots so let's make that script down
03:58 - here in our scripts and let's make a new
04:00 - c-sharp script call this our UI
04:03 - character equipment slot and let's drag
04:08 - it into all three of our slots so drag
04:09 - it in there okay
04:10 - now in here first we need to add the
04:13 - event system so using unity engine dot
04:17 - event systems and now we can implement I
04:23 - drop handler so this function is called
04:26 - whenever something is dropped on top of
04:28 - this object okay now we need to check
04:30 - what item is being dragged now the class
04:32 - that handles the atom drag is in here
04:34 - all we're doing is updating the position
04:36 - so that it follows the mouse position
04:38 - and we have some functions in order to
04:40 - show and hide it and set a specific item
04:42 - so we always know which
04:44 - we are dragon so when we drop something
04:46 - in here let's see if we're dragging
04:48 - something so we go into the UI item drag
04:51 - we access the static instance and we get
04:55 - the item that is currently being dragged
04:58 - so over here we now know when an item is
05:00 - dropped onto this slot so for example
05:03 - let's test you would debug log so here
05:06 - we are now let's drag this item drop it
05:08 - in there and if there you go we have our
05:09 - helmet all right so we are correctly
05:11 - identifying when an item gets dragged
05:13 - and dropped into a certain position so
05:15 - now that we know that we need to know
05:17 - when the item is dropped in each
05:18 - specific slot so let's make a script to
05:20 - handle the entire character equipment
05:22 - window so we make a new script come to
05:26 - our UI character equipment and we drag
05:29 - it in to our character equipment window
05:31 - now in here on let's grab references to
05:33 - our slots all right so here we have all
05:46 - three of our references now that we have
05:48 - that we need to know when an item is
05:50 - dropped in a specific slot so for that
05:52 - let's go back into the slot script and
05:54 - in here we're going to use an event that
05:56 - is fired when something is dropped in
05:58 - here so we make a public event and in
06:05 - here when we have something dropped we
06:07 - invoke this let's make an event our X
06:11 - class so we can pass in the item that
06:12 - was dropped all right so we have the
06:19 - event which uses this type of event art
06:21 - so in here we invoke we pass in this as
06:23 - the sender and a new event args and
06:26 - inside we pass in the item that was
06:28 - dropped in here all right so we have
06:31 - this nice event firing now we can go
06:32 - back into our main UI window and in here
06:35 - we can subscribe to those events so for
06:37 - example the weapon slot would subscribe
06:39 - to the on item drop so here we know when
06:45 - an item has been dropped into the weapon
06:47 - slot when you do let's do a a bug
06:49 - download all right let's test
06:53 - okay here we are let's pick up this
06:55 - sword drag it on top of the item weapon
06:58 -  and there you go here in our
07:00 - console we can see equip weapon sword
07:02 - one alright so everything is working
07:04 - correctly awesome
07:05 - now with this working we should also
07:06 - update the visual and we should make
07:09 - sure that we keep the UI and the
07:10 - implementation separate so let's make a
07:12 - class to handle the actual character
07:14 - equipment so here let's make a new
07:16 - script call it our character equipment
07:20 - and let's apply this to our player game
07:24 - object so drag it in there okay now here
07:26 - we're going to have the items that we're
07:28 - currently equipping so here this is
07:33 - going to be a very simple class that
07:35 - simply contains what the character is
07:37 - currently equipping and on the UI we're
07:39 - going to display the state of this class
07:40 - so on the UI window let's make a
07:43 - function to receive a character
07:44 - equipment alright we have our character
07:52 - equipment now let's make a function to
07:54 - update our visual and in here we need to
07:58 - grab the currently equipped items so
08:00 - let's go back into our character
08:01 - equipment script and make some getter
08:03 - functions alright so we have three
08:11 - functions to get the weapon helmet and
08:13 - armor and now we can go back into the UI
08:16 - window and now we want to update our
08:18 - visual and for the visual you can use
08:21 - the same UI item that we're using on the
08:23 - inventory
08:43 - okay so here's our script we had the new
08:46 - field for the UI an item prefab we also
08:48 - added a transform for a item container
08:51 - so that's where we're going to be in
08:52 - Senshi ating our UI items and down here
08:55 - on the update visual first we clear all
08:57 - the items that were previously in the
08:58 - container then we get the currently
09:00 - equipped weapon item from our character
09:02 - equipment if it is not known that means
09:04 - we are equipping something so we
09:06 - instantiate our UI item we position it
09:09 - on top of the weapon slot then we get
09:11 - the component of UI atom and we set the
09:13 - item that is currently carrying and we
09:15 - hide our empty image and if we're not
09:17 - carrying a weapon then we simply show
09:19 - the MTU image all right so this should
09:21 - be correct now for this to work we need
09:23 - to call this function so let's make a
09:25 - script that won't set that connection
09:27 - here in the scene I already have a
09:29 - testing script as you can see we're
09:31 - doing the connection between the player
09:32 - and the inventory now let's set a field
09:35 - for the UI script and a field for our
09:39 - character equipment so we set it on our
09:46 - UI all right now fine let's just drag
09:48 - the references so there's our two fields
09:50 - drag the UI character equipment and the
09:52 - character equipment which is on the
09:54 - player and here in the character
09:56 - equipment let's start off with a weapon
09:58 - on our awake any of here we are and as
10:01 - you can see we are currently equipping a
10:02 - weapon alright so far so good now let's
10:05 - actually handle being able to drop a
10:07 - weapon in order to drop we're already
10:09 - capturing that event so all we need to
10:11 - do is set that in our character
10:12 - equipment so in here and let's first get
10:14 - rid of our default and now let's make
10:16 - some setters
10:25 - all right we have some setters so we can
10:28 - go back into the UI and in here when we
10:30 - have our character item drop let's go
10:32 - into the character equipment script and
10:35 - we simply set something this case we set
10:38 - the weapon item to the one that was
10:40 - dropped in here now when we do let's
10:42 - also tell the character what we equipped
10:44 - so for that we can use the character
10:46 - equipment since this script is placed on
10:48 - top of the player and on the player we
10:56 - can simply use a function called set
10:59 - equipment and we passing the weapon item
11:02 - dot item type all right there it is very
11:07 - simple now finally in our UI we need to
11:10 - call this function to update our visual
11:12 - so we could do directly after setting
11:14 - this but a better way is for the
11:17 - character equipment to fire off an event
11:18 - when something changes that way it won't
11:20 - still work if we equip something without
11:22 - using this specific script so in here we
11:25 - just make a new event and we simply fire
11:31 - off whenever we change something all
11:35 - right so now in the UI we can subscribe
11:37 - to this when we receive our character
11:42 - and when that happens all we need to do
11:44 - is come our update their own function
11:45 - alright that should do it so if we drop
11:48 - something inside of our weapon slot
11:50 - we're going to call the character
11:51 - equipment call it set weapon item we
11:54 - pass in the item that was dropped so
11:56 - then this one won't change the internal
11:57 - weapon item it won't tell the player
11:59 - that it modified the equipment and it
12:01 - won't fire off the event then that event
12:04 - is captured by the UI window which then
12:05 - updates the visual correctly showing
12:07 - everything so let's test that ok so here
12:11 - we are and we have no equipment and if I
12:13 - click there you go and just got punches
12:14 - and kicks now let's take this sword and
12:17 - drag it into the weapon and yep there we
12:19 - go we are currently equipping this
12:20 - weapon and if I attack if there you go
12:22 - now I'm attacking with a weapon and now
12:24 - let's try dragging this one and
12:26 - equipping it and there you go now I'm
12:28 - using this weapon alright so just like
12:30 - this we have everything working now one
12:32 - major issue that we have is for example
12:35 - if we drop the helmet into the weapon
12:37 - slot
12:39 - and if we do there you equip the helmet
12:40 - so that is obviously not supposed to
12:43 - happen
12:43 - so let's validate our item type when
12:45 - trying to drop something so let's make
12:47 - that here in the character equipment
12:49 - script let's make a function to try to
12:51 - equip something so a totally boy try
12:53 - equip item and we also need to know
12:57 - where we're trying to equip something so
13:00 - let's define a and noon
13:02 - so if phone we can don't call it the
13:04 - equip slot so you have the helmet armor
13:08 - and weapon so down here on this function
13:11 - you will receive the equip slot and then
13:14 - we receive an item that we want to equip
13:17 - and now here we're going to test the
13:18 - item type based on the equipment so here
13:21 - we do a switch on the equip slot and do
13:24 - switches on the atom type or we can also
13:26 - make that on the item class itself so
13:29 - let's put it in here in order to make
13:30 - our code easier to follow so here we
13:32 - have a bunch of functions for each item
13:34 - so we get sprite color and so on and now
13:37 - in here let's make a public to and
13:39 - return a character equipment dot equip
13:44 - slot and you can't get equip select all
13:58 - right so we have a function which the
14:00 - switch on our item type and returns a
14:02 - matching equip slot so here we can
14:03 - simply test if the item equips not
14:05 - matches this equivalent if so then we
14:12 - can equip it alright this should be
14:22 - working now we need to make sure that we
14:23 - work with this function instead of all
14:25 - of these so let's make these private
14:27 - keep our code nice and clean ok that
14:31 - should do it
14:32 - so now we're going to use this function
14:33 - let's go into the UI character equipment
14:36 - and up here where we have our drop
14:38 - instead of using that one directly let's
14:40 - use the try equip item and now this is
14:43 - the comeback on the weapons want some
14:45 - lights passing the equipment slot for
14:46 - the weapon and then the drop item
14:49 - let's subscribe to the others as well
14:59 - alright so just like this let's see if
15:02 - we can now equip things and we can only
15:04 - equip them on the actual correct slot
15:06 - okay here we are again just punches now
15:09 - let's drag the weapon on tv' weapon slot
15:11 - and there you go equip the weapon yep
15:13 - just like that now if I try to drag the
15:15 - helmet into the weapon slot and there
15:17 - you go nothing changes and we're still
15:18 - doing that now try to drag the helmet
15:21 - into the helmet slot and yep he did
15:23 - equip the helmet we just forgot to
15:25 - update the visual and the same thing
15:28 - with the armor equip the Harmon there
15:29 - and yeah nothing changes now put in
15:32 - there and there you go he equipped it so
15:33 - let's fix the visual here the fixes down
15:36 - here when we are updating Divisional
15:37 - right now we're only testing for weapon
15:39 - item let's test the other two all right
15:54 - so now we have the case for updating our
15:56 - weapon armor and helmets visuals now
15:59 - obviously we got a lot of code
16:00 - duplication here so after we check that
16:02 - this is working we should really clean
16:04 - this up but let's first test ok here we
16:07 - are and let's equip the sword there you
16:09 - go there's a sword equip the helmet and
16:10 - if there's the helmet and equip the
16:12 - armor and there you go there's our armor
16:14 - alright so just like this we have our
16:16 - working in character equip window now
16:19 - just for fun let's have a chem review in
16:21 - our UI I've covered how to do a portrait
16:23 - camera in another video so check that
16:25 - out for an in-depth look in here I'm
16:27 - just going to add it very simply
16:58 - all right so here we have the camera
17:00 - view on to you I only have is a raw
17:02 - image and then a camera on the player
17:04 - and you up here we have our character
17:06 - and our UI showing our character so we
17:09 - could have the main camera very far away
17:11 - and we'd still be able to see the player
17:12 - when we're equipping items so let's
17:15 - equip a sword and there you go now we
17:17 - have our sword and equip this armor and
17:19 - this helmet and there you go there's our
17:21 - player now equip this armor equip this
17:24 - sword and so on and there yo everything
17:26 - all x squared all right so here we have
17:28 - our system fully working we can drag
17:30 - items from our inventory into their
17:32 - slots if we drag an incorrect item then
17:34 - we cannot equip but if we drag the
17:36 - correct one then we can indeed equipped
17:38 - and when we equip an item we can see the
17:40 - atoms change in our player visual this
17:43 - video is made possible thanks to these
17:44 - awesome supporters go to
17:46 - patreon.com/scishow new code monkey to
17:48 - get some perks and help keep the videos
17:50 - free for everyone as always you can
17:52 - download the project files in a tony's
17:53 - frumenty code monkey comm subscribe the
17:55 - channel for more unity tutorials post
17:58 - any questions I have in the comments and
17:59 - I'll see you next time
18:01 - [Music]

Cleaned transcript:

in this video we're going to create an inventory equip system we're going to have our basic inventory and then drag out items to specific positions in order to equip them let's begin hello and welcome I'm your code monkey and this channel is all about helping you learn how to make your own games with enough tutorials made by a professional indie game developer so if you find the video helpful consider subscribing okay so this is what we want to make over here is my player character and I can move maram as you can see right now he has no harmer no helmet and when I attack I can only use punches and kicks and in here I have the inventory where you can see the various items that I'm carrying and in here on the player equip you can see the various items that I can equip so for example I can click on this helmet drag it and place it on the helmet slot and drop it and there you go the player equip the helmet however if I try to drag an armor into the helmet slot as you can see it doesn't work so it needs a helmet item onto this helmet slot and then you can see that I'm attacking using punches but now let's go and equip this sword and there you go now I'm attacking with a sword so I can drop any item I want in the valid correct position and everything works great so over here we have a very versatile system for equipping items and weapons there are several things that we built previously that we're going to use in order to make this first we're going to use the inventory system to hold our items then we're going to use what we learned in the draganddrop video in order to equip our items and the way that you're equipped is based on modifying the texture which I covered any modular spreadsheets video so again here is our character and our equip you I and we can modify our loadout and do anything we want this video is made possible thanks to these awesome supporters go to patreon.com/scishow to code monkey to get some perks and help keep the videos free for everyone alright so this is our goal let's get to it okay so here's our starring scene over here I have a player character and I can move them around as you can see there is no helmet no armor and if I attack I can only attack with punches and kicks then down here we have our inventory as you can see we have a bunch of items so we have an element two swords and two armors this inventory was fully created from scratch in a previous video so go check that out if you haven't seen it already alright so with this let's begin making our equip UI here in the editor let's go into the hierarchy go inside of our UI canvas and in here what make a new game object let's call this our UI character equipment now enzyme let's make some slots okay so here we have a weapon slot the visual is set up exactly the same as the inventory now inside let's make an image for the empty image and in this case this is for the weapons so let's drag the sword icon and now here I have a simple black in white shooter so let's use that one and there you go now it's in black and white and just reduce the Alpha by a little bit okay so here is the black and white children as you can see very simple we just take our texture we sample it we use the saturation node set saturation to zero in order to make it black and white and then we simply take the Alpha and apply it on to it so just like this we have an empty weapon slot now let's make the other two alright so here we have our three equipment slots now let's see how we're going to drop something in here now in here we already have drag and drop working so I can click and drag a certain item and place it in a different position in the inventory this was made in the drag drop video so check that out so I can drag it to a new position and if I drag into an invalid position it simply goes back in there now what we need is in order to capture when I drag an item from the inventory and drop it inside one of our equipment slots so let's make that script down here in our scripts and let's make a new csharp script call this our UI character equipment slot and let's drag it into all three of our slots so drag it in there okay now in here first we need to add the event system so using unity engine dot event systems and now we can implement I drop handler so this function is called whenever something is dropped on top of this object okay now we need to check what item is being dragged now the class that handles the atom drag is in here all we're doing is updating the position so that it follows the mouse position and we have some functions in order to show and hide it and set a specific item so we always know which we are dragon so when we drop something in here let's see if we're dragging something so we go into the UI item drag we access the static instance and we get the item that is currently being dragged so over here we now know when an item is dropped onto this slot so for example let's test you would debug log so here we are now let's drag this item drop it in there and if there you go we have our helmet all right so we are correctly identifying when an item gets dragged and dropped into a certain position so now that we know that we need to know when the item is dropped in each specific slot so let's make a script to handle the entire character equipment window so we make a new script come to our UI character equipment and we drag it in to our character equipment window now in here on let's grab references to our slots all right so here we have all three of our references now that we have that we need to know when an item is dropped in a specific slot so for that let's go back into the slot script and in here we're going to use an event that is fired when something is dropped in here so we make a public event and in here when we have something dropped we invoke this let's make an event our X class so we can pass in the item that was dropped all right so we have the event which uses this type of event art so in here we invoke we pass in this as the sender and a new event args and inside we pass in the item that was dropped in here all right so we have this nice event firing now we can go back into our main UI window and in here we can subscribe to those events so for example the weapon slot would subscribe to the on item drop so here we know when an item has been dropped into the weapon slot when you do let's do a a bug download all right let's test okay here we are let's pick up this sword drag it on top of the item weapon and there you go here in our console we can see equip weapon sword one alright so everything is working correctly awesome now with this working we should also update the visual and we should make sure that we keep the UI and the implementation separate so let's make a class to handle the actual character equipment so here let's make a new script call it our character equipment and let's apply this to our player game object so drag it in there okay now here we're going to have the items that we're currently equipping so here this is going to be a very simple class that simply contains what the character is currently equipping and on the UI we're going to display the state of this class so on the UI window let's make a function to receive a character equipment alright we have our character equipment now let's make a function to update our visual and in here we need to grab the currently equipped items so let's go back into our character equipment script and make some getter functions alright so we have three functions to get the weapon helmet and armor and now we can go back into the UI window and now we want to update our visual and for the visual you can use the same UI item that we're using on the inventory okay so here's our script we had the new field for the UI an item prefab we also added a transform for a item container so that's where we're going to be in Senshi ating our UI items and down here on the update visual first we clear all the items that were previously in the container then we get the currently equipped weapon item from our character equipment if it is not known that means we are equipping something so we instantiate our UI item we position it on top of the weapon slot then we get the component of UI atom and we set the item that is currently carrying and we hide our empty image and if we're not carrying a weapon then we simply show the MTU image all right so this should be correct now for this to work we need to call this function so let's make a script that won't set that connection here in the scene I already have a testing script as you can see we're doing the connection between the player and the inventory now let's set a field for the UI script and a field for our character equipment so we set it on our UI all right now fine let's just drag the references so there's our two fields drag the UI character equipment and the character equipment which is on the player and here in the character equipment let's start off with a weapon on our awake any of here we are and as you can see we are currently equipping a weapon alright so far so good now let's actually handle being able to drop a weapon in order to drop we're already capturing that event so all we need to do is set that in our character equipment so in here and let's first get rid of our default and now let's make some setters all right we have some setters so we can go back into the UI and in here when we have our character item drop let's go into the character equipment script and we simply set something this case we set the weapon item to the one that was dropped in here now when we do let's also tell the character what we equipped so for that we can use the character equipment since this script is placed on top of the player and on the player we can simply use a function called set equipment and we passing the weapon item dot item type all right there it is very simple now finally in our UI we need to call this function to update our visual so we could do directly after setting this but a better way is for the character equipment to fire off an event when something changes that way it won't still work if we equip something without using this specific script so in here we just make a new event and we simply fire off whenever we change something all right so now in the UI we can subscribe to this when we receive our character and when that happens all we need to do is come our update their own function alright that should do it so if we drop something inside of our weapon slot we're going to call the character equipment call it set weapon item we pass in the item that was dropped so then this one won't change the internal weapon item it won't tell the player that it modified the equipment and it won't fire off the event then that event is captured by the UI window which then updates the visual correctly showing everything so let's test that ok so here we are and we have no equipment and if I click there you go and just got punches and kicks now let's take this sword and drag it into the weapon and yep there we go we are currently equipping this weapon and if I attack if there you go now I'm attacking with a weapon and now let's try dragging this one and equipping it and there you go now I'm using this weapon alright so just like this we have everything working now one major issue that we have is for example if we drop the helmet into the weapon slot and if we do there you equip the helmet so that is obviously not supposed to happen so let's validate our item type when trying to drop something so let's make that here in the character equipment script let's make a function to try to equip something so a totally boy try equip item and we also need to know where we're trying to equip something so let's define a and noon so if phone we can don't call it the equip slot so you have the helmet armor and weapon so down here on this function you will receive the equip slot and then we receive an item that we want to equip and now here we're going to test the item type based on the equipment so here we do a switch on the equip slot and do switches on the atom type or we can also make that on the item class itself so let's put it in here in order to make our code easier to follow so here we have a bunch of functions for each item so we get sprite color and so on and now in here let's make a public to and return a character equipment dot equip slot and you can't get equip select all right so we have a function which the switch on our item type and returns a matching equip slot so here we can simply test if the item equips not matches this equivalent if so then we can equip it alright this should be working now we need to make sure that we work with this function instead of all of these so let's make these private keep our code nice and clean ok that should do it so now we're going to use this function let's go into the UI character equipment and up here where we have our drop instead of using that one directly let's use the try equip item and now this is the comeback on the weapons want some lights passing the equipment slot for the weapon and then the drop item let's subscribe to the others as well alright so just like this let's see if we can now equip things and we can only equip them on the actual correct slot okay here we are again just punches now let's drag the weapon on tv' weapon slot and there you go equip the weapon yep just like that now if I try to drag the helmet into the weapon slot and there you go nothing changes and we're still doing that now try to drag the helmet into the helmet slot and yep he did equip the helmet we just forgot to update the visual and the same thing with the armor equip the Harmon there and yeah nothing changes now put in there and there you go he equipped it so let's fix the visual here the fixes down here when we are updating Divisional right now we're only testing for weapon item let's test the other two all right so now we have the case for updating our weapon armor and helmets visuals now obviously we got a lot of code duplication here so after we check that this is working we should really clean this up but let's first test ok here we are and let's equip the sword there you go there's a sword equip the helmet and if there's the helmet and equip the armor and there you go there's our armor alright so just like this we have our working in character equip window now just for fun let's have a chem review in our UI I've covered how to do a portrait camera in another video so check that out for an indepth look in here I'm just going to add it very simply all right so here we have the camera view on to you I only have is a raw image and then a camera on the player and you up here we have our character and our UI showing our character so we could have the main camera very far away and we'd still be able to see the player when we're equipping items so let's equip a sword and there you go now we have our sword and equip this armor and this helmet and there you go there's our player now equip this armor equip this sword and so on and there yo everything all x squared all right so here we have our system fully working we can drag items from our inventory into their slots if we drag an incorrect item then we cannot equip but if we drag the correct one then we can indeed equipped and when we equip an item we can see the atoms change in our player visual this video is made possible thanks to these awesome supporters go to patreon.com/scishow new code monkey to get some perks and help keep the videos free for everyone as always you can download the project files in a tony's frumenty code monkey comm subscribe the channel for more unity tutorials post any questions I have in the comments and I'll see you next time
