With timestamps:

00:00 - hello and welcome i'm your code monkey
00:02 - and here's a really awesome project that
00:03 - i made it's a turn-based strategy action
00:06 - game very much inspired by the likes of
00:07 - xcom and so it only took me about 30
00:10 - hours to build this project and i'm
00:11 - quite happy with the final result it's
00:13 - got all of the mechanics you expect
00:14 - there's turn-based combat and movement
00:16 - it has line of sight both full and half
00:19 - cover an overwatch mechanic and of
00:21 - course a hit percentage for those
00:22 - awesome 99 misses in this video let's
00:25 - check out how i made it starting from
00:26 - scratch until the final polished game
00:28 - also stick around to the end where i
00:30 - have a very exciting announcement to
00:31 - share if you prefer a more guided path
00:34 - with step-by-step lectures then check
00:36 - out my complete courses learn how to
00:38 - make a builder defender game using c
00:40 - sharp just like i make my own steam
00:41 - games or learn how to make games
00:43 - internally using visual scripting or
00:45 - learn all about unity with the ultimate
00:47 - overview course which contains over 13
00:50 - lectures each covering a different tool
00:51 - or feature of the engine to help you
00:53 - make better games faster i'm always
00:55 - available in the courses q a section
00:56 - answering your questions every single
00:58 - day so check out all the courses with
01:00 - the link in the description so i started
01:01 - off like i usually start these projects
01:03 - thinking on paper and writing down some
01:05 - basic design this is obviously inspired
01:07 - by xcom so i inspected the game to see
01:09 - what were the crucial features and i
01:12 - also took some time to think about how i
01:13 - would structure the code for example i
01:15 - realized that everything in the game is
01:17 - really an action shooting is an action
01:19 - abilities are an action and even just
01:21 - simple movement is also an action so i
01:24 - thought quite a bit on what is the best
01:25 - way to implement that logic in the code
01:27 - using a nice common interface then i
01:29 - open a new project and just start
01:30 - working on it like i said it's all about
01:33 - action so i start off implementing a
01:34 - basic movement action setting up the
01:36 - main unit class in the interface and
01:38 - making a move action that implements it
01:41 - with that the character was just moving
01:42 - in a straight line also for the visuals
01:44 - over here i'm using the super useful
01:46 - cinti studios prototype pack
01:48 - i think this one was free during a bunch
01:50 - of giveaways so chances are you already
01:52 - have it these are pretty nice simple
01:53 - assets then of course since the game is
01:55 - grid based i once again reused my super
01:57 - useful grid system if you are new to the
02:00 - channel check out the home playlist this
02:02 - class and this playlist is one of the
02:03 - best examples of the power writing clean
02:05 - reusable code
02:06 - i originally made it over three years
02:08 - ago and now it just took me five minutes
02:10 - to implement a working grid with that
02:12 - then i added some grid movement so
02:14 - instead of having the unit move directly
02:16 - to the path now it goes in a grid path
02:19 - one great position at a time however at
02:21 - this point still note pathfinding so it
02:23 - just moves all horizontally and then
02:24 - home vertically up next i want to be
02:26 - able to move to where i clicked so i
02:28 - implement the simple mouse click and
02:30 - mouse position once again we're using a
02:32 - super awesome class i made in a previous
02:34 - video it gets me the mouse position in
02:36 - the world then using that i can tell the
02:38 - unit where to move then with the grid
02:40 - position object i had the field for the
02:42 - unit and some logic to know where that
02:43 - unit was so just by looking at the grid
02:46 - itself i can know exactly what unit is
02:48 - occupying what position then for the
02:50 - installation once again i spend quite
02:52 - some time thinking about design thinking
02:54 - about what would be the best way to
02:56 - implement this and i came up with a
02:58 - simple class to manage the current
02:59 - active unit and action
03:01 - since i know which unit is on which grid
03:03 - position it's actually very easy to
03:05 - handle selection
03:06 - i just need to check the grid position
03:08 - under the mouse and check if there's a
03:09 - unit on it and if so select it then just
03:12 - add a simple visual to know which one is
03:13 - selected again all while writing some
03:15 - nice clean code so the visual is
03:17 - completely separated from the system
03:19 - then once again some more thinking time
03:20 - now this time thinking about how to best
03:22 - implement multiple actions i realized
03:24 - that a lot of them would have quite a
03:26 - lot of things in common like what unit
03:28 - that action belongs to and a combat they
03:30 - store on action complete so with that i
03:32 - made a base class with all of that
03:33 - common logic then i started implementing
03:36 - multiple actions starting with a simple
03:38 - spin action just spinning the character
03:40 - in place this action obviously makes no
03:42 - sense in the final game but over here
03:44 - it's very simple and very visual so it's
03:46 - great to make sure that the whole system
03:47 - works great with any number of actions
03:49 - of any type and at this point the game
03:51 - was already starting to take shape
03:52 - despite the fact that it was just two
03:54 - hours of development so this really
03:56 - showcases three things one it's the
03:58 - power of writing clean reasonable code i
04:00 - first made the grid system three years
04:01 - ago and now it just took me five minutes
04:03 - to reuse it and also the mouse position
04:05 - i also made that video about two years
04:07 - ago and here i just reused the same
04:09 - class
04:10 - another thing this showcase is the power
04:12 - of pre-production since i dedicated
04:14 - quite a few days to preparing an offline
04:16 - for what i want to build when i actually
04:18 - started building it i already had a
04:20 - pretty nice idea of exactly what i
04:21 - needed to build so what systems i needed
04:23 - to make and how they would interact with
04:25 - one another and finally this showcased
04:27 - the power of experience really if i had
04:29 - tried to make this game 10 years ago
04:31 - when i was just starting with unity back
04:33 - then it would have taken me weeks or
04:34 - maybe a month to get to this point but
04:36 - thanks to all of the experience i
04:38 - already have i really managed to build
04:39 - this in just under two hours so those
04:41 - are three really nice takeaways from
04:43 - just the beginning of this project okay
04:45 - so everything was already looking pretty
04:47 - good next up was adding one very crucial
04:49 - thing to this game adding action points
04:51 - and a turn system i want to be able to
04:53 - spend action points doing some actions
04:55 - then end the turn and have the action
04:57 - points reset
04:58 - for the character visual elements i use
05:01 - a world space canvas ui it's super
05:03 - useful i made a video on that each unit
05:05 - has a nice overlay showing the action
05:07 - points after that i implemented health
05:09 - once again reusing my health system from
05:11 - the very first video on this channel
05:13 - very simple to add just add the visual
05:15 - to the character overlay and made a
05:17 - simple shoot action so just by clicking
05:19 - on another unit it deals damage super
05:21 - simple also at this point you could spam
05:24 - click and take actions at the same time
05:26 - as other actions so this can really
05:27 - cause a lot of bugs so i just added a
05:30 - simple turn blocker basically it blocks
05:32 - any actions while the current one is
05:33 - running very simple and fixes tons of
05:36 - issues after that i just added some
05:38 - animations just to look a bit better so
05:40 - just some simple moving and shooting
05:42 - animations then for the actions instead
05:44 - of debug keys i made a proper ui just
05:46 - some simple buttons and when selected
05:49 - they enable a specific action on the
05:50 - current selected unit and for selecting
05:52 - units it's still the same so while in
05:54 - move action if you click on top of
05:56 - another unit then instead of moving
05:57 - there it just selects that unit after
05:59 - that was something very important having
06:01 - a grid visual here i went with a super
06:04 - simple approach just spawning a simple
06:06 - prefab on every single grid position now
06:09 - this one is not the most performant
06:10 - approach but it works pretty well in
06:12 - this case
06:13 - if i wanted maximum performance then i
06:15 - would implement a single mesh just like
06:17 - it did in the heat map video or even the
06:19 - 2d xcom video but for this quick demo
06:21 - this really works more than good enough
06:23 - with the grid visual done i then
06:25 - expanded each action to return a list of
06:27 - all of the valid grid positions so you
06:29 - can no longer move an infinite amount or
06:31 - move just 0 units also you cannot shoot
06:34 - an infinite distance so it needs to be
06:36 - within a certain range for the action to
06:38 - be valid thanks to how all of the code
06:40 - is set up in a nice clean way it's super
06:42 - simple to add unique rules for each
06:43 - action then i added something extremely
06:46 - important some simple pathfinding
06:48 - actually reuse the exact same script
06:49 - that i made in the pathfinding video
06:51 - that video teaches you how the a star
06:53 - pathfinding algorithm works so check it
06:55 - out if you want to understand it the
06:57 - only downside with the exact class made
06:59 - in that video is that it's not really
07:00 - intended to be performant but again in
07:03 - this case since this is a turn-based
07:04 - shooter maximum performance isn't really
07:06 - a requirement related to the pathfinding
07:09 - was obviously making some paths either
07:10 - walkable or unwalkable so for that i
07:13 - just added a collateral for each solid
07:15 - object that i want to block path and i
07:17 - play stack and ladder in a specific
07:19 - layer then right when the game starts
07:21 - the pathfinding is created and goes
07:22 - through every single grid position and
07:24 - there's a raycast to see if there's any
07:26 - walker there if so the grid position
07:28 - becomes unworkable and if not then it's
07:30 - normal so some pretty simple logic and
07:32 - with that pathfinding was fully working
07:34 - up next for a bit of fun i added a
07:36 - ragdoll to the units when they die it's
07:38 - really simple it's using unity's
07:40 - built-in breakdown wizard which is
07:42 - actually one of the tools that i cover
07:43 - in my ultimate unity overview course
07:45 - it's pretty easy to use a tool and make
07:47 - any character turn into a ragdoll so now
07:50 - when the inside they fall to the ground
07:52 - in a nice satisfying way also at this
07:54 - point there was no concept of enemy or
07:56 - friendly so i just quickly added that
07:58 - just a simple bowling variable so either
08:01 - unit is friendly or an enemy after that
08:03 - i implemented some camera movement super
08:05 - simple for this i use send machine which
08:08 - makes camera handling extremely easy
08:10 - just made the virtual camera follow a
08:12 - target object then with a simple script
08:14 - just move that object rotated and
08:16 - applied some zoom for another quick
08:17 - visual improvement i enabled screen
08:19 - space ambient occlusion this one is a
08:21 - subtle effect but it looks pretty great
08:23 - it's also somewhat hidden but i made a
08:25 - video on how to enable it if you don't
08:27 - know about it then it was finally time
08:29 - to tackle one of the more complex tasks
08:31 - start working on the enemy ai first
08:33 - start off with the easiest part just
08:35 - making the enemy take a turn so it just
08:37 - makes sure that it's the player's turn
08:39 - and then when the player ends their turn
08:40 - the enemy takes theirs with that basic
08:42 - logic working then it was time to make
08:44 - the enemy take actions again starting
08:46 - simple just testing the logic to make it
08:48 - take an action so all it does is take a
08:50 - spin action while it has action points
08:53 - and after all the enemies spend their
08:54 - action points then the enemy ends their
08:56 - turn and goes back to the player
08:58 - without working then it was time to make
09:00 - some proper ai
09:01 - i spent quite some time thinking about
09:03 - this naturally ai is a massive topic you
09:05 - could spend hours weeks or even years
09:08 - just working on ai for this quick demo i
09:10 - wanted something functional but as
09:12 - simple as possible so the rules that i
09:14 - implemented were pretty simple if you
09:16 - can shoot a player character then shoot
09:18 - if not move somewhere and to test where
09:21 - to move assign some points depending on
09:22 - the number of targets in range of that
09:24 - new position
09:25 - so basically it tries to move to where
09:27 - it can shoot at least one player unit
09:29 - and then if there's something in range
09:31 - then just shoot them
09:32 - also made them prioritize weaker units
09:35 - so if there's a unit with half health
09:37 - and one with full health then it targets
09:38 - the weakest this is also the best tactic
09:40 - when actually playing xcom you want to
09:43 - remove as many enemy units as possible
09:45 - okay so with that very basic ai done
09:47 - then i worked on a fun task making an
09:49 - action camera once again pretty easy
09:51 - thanks to using cinemachine just made
09:53 - another virtual camera then through code
09:56 - when someone takes an action it
09:58 - positions the camera right behind the
09:59 - shooter looking at the target
10:01 - and when the action is done it simply
10:03 - disables the virtual camera and it goes
10:05 - back to the regular virtual camera up
10:07 - next it was time to work on another
10:08 - crucial system making the cover system
10:11 - for defining cover it was pretty easy
10:13 - every object that's already blocking
10:15 - pathfinding meaning every solid object
10:17 - for all of those i just added another
10:19 - script which defines if that object
10:21 - works as half or full cover it's really
10:23 - similar to how the pathfinding works
10:25 - just goes through every single grid
10:27 - position to check the cover state
10:29 - and simply sets that state on that grid
10:31 - position so populating the world with
10:32 - cover points is super easy for the cover
10:35 - animation i just went into miximo and
10:37 - downloaded a free crouch idling mission
10:39 - mixamo is an awesome website where you
10:41 - can download free animations that work
10:42 - on any project i made a video on that
10:44 - home process then i decided to continue
10:46 - working on the game during a live stream
10:48 - thank you all for joining me first task
10:50 - on stream was a simple one just make a
10:52 - cover icon so it's just an image it
10:54 - listens to the events when the unit
10:55 - changes great position and just updates
10:57 - the icon super simple then i also
10:59 - quickly made some high crates just took
11:01 - out the normal crates stretch them out
11:03 - change the cover script value to say
11:04 - these are now phone cover with that done
11:06 - i then decided to build another action a
11:09 - throw grenade action creating the action
11:11 - itself was pretty easy thanks to how the
11:13 - code is set up in a nice clean way i
11:15 - just need to make an action script that
11:16 - implements the interface and write down
11:18 - the throw grenade code for throwing it
11:20 - just spawns a visual prefab and moves it
11:22 - over time since the player can throw at
11:24 - various distances then the grenade
11:26 - movement couldn't be a static animation
11:27 - it had to be driven by code for the
11:30 - horizontal movement i made it as normal
11:32 - but for the vertical movement i went
11:33 - with the approach of using an
11:35 - interesting animation curve this one is
11:37 - a really awesome unity feature that has
11:39 - tons of use cases don't be fooled by the
11:41 - name this can be used for anything not
11:42 - just animations you can place the points
11:45 - and draw the curve exactly as you want
11:46 - it so in my case i use the animation
11:48 - curve to define the y-axis so the
11:51 - grenade moves and then when it lands i
11:53 - just spawn some nice and simple
11:54 - particles and finally for dealing damage
11:57 - i just did a physics overlap sphere to
11:59 - find all the objects in range find all
12:01 - of the unit objects and call the deal
12:03 - damage function then i also wanted to
12:05 - add a nice destruction to the cover
12:07 - objects for that i used the method that
12:09 - i covered in a previous video just using
12:11 - pro builder to slice the crate into
12:13 - multiple pieces then i just spawn the
12:15 - prefab when the crate is destroyed and
12:17 - apply some force to make all the parts
12:18 - go fine as you can see it's really easy
12:20 - to add some destruction in your games
12:22 - and looks really awesome that was the
12:24 - end of the live stream thank you all for
12:25 - joining me back to working on it by
12:27 - myself i started working on the fog of
12:29 - war system units should not be able to
12:31 - see all over the map if an enemy is
12:33 - behind the wall it should be invisible
12:36 - handling that logic was very similar to
12:38 - what i covered in the line of sight
12:39 - field of view videos i just start from
12:41 - each unit position then i do some math
12:43 - to get all of the directions around the
12:45 - unit and test the grid positions at
12:47 - various distance points if the grid
12:49 - position has a full cover object then
12:51 - the unit cannot see further it's some
12:53 - pretty simple logic and it works great
12:55 - just need to then connect it to the
12:57 - enemy logic just add some simple code to
12:59 - hide the visual so the enemy still works
13:00 - as normal just invisible and that's
13:02 - pretty much it and it works next was
13:04 - adding a crucial mechanic for this game
13:07 - type calculating a hit percentage now
13:09 - this one is pretty easy to add you can
13:11 - make it as complex as you want in the
13:12 - math but really i just kept it simple
13:14 - basically just took into account the
13:16 - distance to the target also whether the
13:18 - target was in cover or not then with
13:20 - that i also had an accuracy film to each
13:23 - unit just to add a tiny bit of
13:24 - randomness if you had a more persistent
13:27 - game like xcom with the overwhelm then
13:29 - you could load your soldier accuracy
13:30 - stats for this simple prototype i'm
13:33 - happy with the simple math that i have
13:34 - here it adds a degree of randomness to
13:36 - your hits but it can also be managed by
13:38 - the player simply playing better by
13:40 - getting into cover and approaching the
13:41 - enemies before firing up next was a fun
13:44 - mechanic adding an overwatch this one is
13:46 - also quite simple thanks to how
13:48 - everything is set up for making the
13:50 - action since all the code is set up in a
13:52 - nice clean way it was pretty easy to add
13:53 - another action then for the logic
13:56 - basically i just need to know what is
13:58 - the overwatch range and since i already
14:00 - have events when every unit changes with
14:02 - position i just listen to that and see
14:04 - if the enemy unit entered within the
14:06 - overwatch range and if so just shoot
14:08 - them using the same cal hit percent with
14:10 - a bit of a penalty so that's really it
14:12 - it works great and this ability was
14:13 - super easy to make with that all of the
14:15 - mechanics were pretty much done so i
14:17 - just quickly set up a nice level placing
14:19 - down walls crates enemies and so on and
14:22 - with that over here is the final result
14:24 - alright so here i am on turn one
14:26 - i've got my team right here and over
14:28 - here is a bunch of enemies there is a
14:30 - fog war system so i can't see any more
14:32 - enemies around this area
14:34 - then down here i can select which action
14:36 - i want to take and by clicking i can
14:37 - select which unit and by default the
14:39 - move action shows me everywhere that i
14:41 - can move and of course there's the walls
14:43 - with phone cover and he creates some
14:44 - with phone cover some with half cover
14:46 - so i'm going to move my unit over there
14:48 - and there you go he runs and now he's
14:50 - got full cover
14:52 - and i can go into the shoot action and
14:54 - try to hit any of these and of course
14:55 - they've got a certain hit percentage
14:57 - that one is on phone cover so the hit
14:59 - percentage is really low then this one
15:01 - is closer than this one so let's try
15:02 - hitting this one 78 percent chance so
15:04 - click there you go the nice camera zoom
15:06 - in the nice shot and in this case it
15:08 - actually missed
15:09 - so now this one is out of action point
15:11 - so let's select another one
15:13 - move them into a bit of cover
15:16 - in this case maybe throw a grenade just
15:18 - throw and boom deals nice aoe damage
15:21 - and for this one just without moving
15:22 - just shoot down and try to hit if there
15:24 - you go nice hit another one and if there
15:26 - you go another nice hit and as soon as
15:28 - the enemy dies there goes a really nice
15:30 - ride off
15:31 - okay so i'm out of action points and now
15:33 - it's time to let the enemy take their
15:34 - turn
15:35 - the enemy ai is currently running
15:38 - and all of the various enemies are
15:40 - taking their action that one decides to
15:41 - take a shot and there you go once two
15:43 - shots then another one wins a shot there
15:45 - goes one of my units and another one
15:47 - getting hit
15:48 - yep as soon as the enemy takes all their
15:50 - turns now it's my turn again so once
15:51 - again i can move i can attack i can
15:53 - throw some grenades and so on
15:56 - the game also has some nice
15:57 - destructibility so if i fire a grenade
15:58 - over there and there's a crate just fire
16:00 - the grenade and boom there you go it
16:02 - also blows up the box
16:09 - and the final skill is the overwatch so
16:11 - i just enable overwatch and my turn
16:16 - and there's the enemy starts to move and
16:17 - as soon as he gets within range he gets
16:19 - a nice shot alright so that's the
16:21 - minigame pretty awesome now here's the
16:23 - exciting announcement that i mentioned
16:24 - in the beginning the reason why i made
16:26 - this quick pro tap is because this is
16:28 - going to be my next complete course this
16:30 - is a pretty fun genre i think a lot of
16:32 - people would like to learn how to make
16:33 - this specific type of game something
16:35 - turn-based strategy with actions combat
16:37 - abilities movement and so on and
16:39 - personally i also really like it so it's
16:41 - perfect for my next complete
16:42 - step-by-step course it's going to be in
16:44 - the same format as my other courses so
16:46 - starting commonly from scratch and going
16:48 - step by step until the final polish game
16:50 - so if that's something you're interested
16:52 - in there's a link description where you
16:53 - can sign up and i'll let you know when
16:55 - it's out as for timing it's always very
16:57 - tricky to know exactly but i already
16:59 - have this prototype and the outline and
17:01 - a lot of things already done so
17:02 - hopefully within the next one to two
17:04 - months so if you're interested in that
17:06 - course sign up on the website thank you
17:07 - for watching and i'll see you next time
17:23 - [Music]
17:26 - you

Cleaned transcript:

hello and welcome i'm your code monkey and here's a really awesome project that i made it's a turnbased strategy action game very much inspired by the likes of xcom and so it only took me about 30 hours to build this project and i'm quite happy with the final result it's got all of the mechanics you expect there's turnbased combat and movement it has line of sight both full and half cover an overwatch mechanic and of course a hit percentage for those awesome 99 misses in this video let's check out how i made it starting from scratch until the final polished game also stick around to the end where i have a very exciting announcement to share if you prefer a more guided path with stepbystep lectures then check out my complete courses learn how to make a builder defender game using c sharp just like i make my own steam games or learn how to make games internally using visual scripting or learn all about unity with the ultimate overview course which contains over 13 lectures each covering a different tool or feature of the engine to help you make better games faster i'm always available in the courses q a section answering your questions every single day so check out all the courses with the link in the description so i started off like i usually start these projects thinking on paper and writing down some basic design this is obviously inspired by xcom so i inspected the game to see what were the crucial features and i also took some time to think about how i would structure the code for example i realized that everything in the game is really an action shooting is an action abilities are an action and even just simple movement is also an action so i thought quite a bit on what is the best way to implement that logic in the code using a nice common interface then i open a new project and just start working on it like i said it's all about action so i start off implementing a basic movement action setting up the main unit class in the interface and making a move action that implements it with that the character was just moving in a straight line also for the visuals over here i'm using the super useful cinti studios prototype pack i think this one was free during a bunch of giveaways so chances are you already have it these are pretty nice simple assets then of course since the game is grid based i once again reused my super useful grid system if you are new to the channel check out the home playlist this class and this playlist is one of the best examples of the power writing clean reusable code i originally made it over three years ago and now it just took me five minutes to implement a working grid with that then i added some grid movement so instead of having the unit move directly to the path now it goes in a grid path one great position at a time however at this point still note pathfinding so it just moves all horizontally and then home vertically up next i want to be able to move to where i clicked so i implement the simple mouse click and mouse position once again we're using a super awesome class i made in a previous video it gets me the mouse position in the world then using that i can tell the unit where to move then with the grid position object i had the field for the unit and some logic to know where that unit was so just by looking at the grid itself i can know exactly what unit is occupying what position then for the installation once again i spend quite some time thinking about design thinking about what would be the best way to implement this and i came up with a simple class to manage the current active unit and action since i know which unit is on which grid position it's actually very easy to handle selection i just need to check the grid position under the mouse and check if there's a unit on it and if so select it then just add a simple visual to know which one is selected again all while writing some nice clean code so the visual is completely separated from the system then once again some more thinking time now this time thinking about how to best implement multiple actions i realized that a lot of them would have quite a lot of things in common like what unit that action belongs to and a combat they store on action complete so with that i made a base class with all of that common logic then i started implementing multiple actions starting with a simple spin action just spinning the character in place this action obviously makes no sense in the final game but over here it's very simple and very visual so it's great to make sure that the whole system works great with any number of actions of any type and at this point the game was already starting to take shape despite the fact that it was just two hours of development so this really showcases three things one it's the power of writing clean reasonable code i first made the grid system three years ago and now it just took me five minutes to reuse it and also the mouse position i also made that video about two years ago and here i just reused the same class another thing this showcase is the power of preproduction since i dedicated quite a few days to preparing an offline for what i want to build when i actually started building it i already had a pretty nice idea of exactly what i needed to build so what systems i needed to make and how they would interact with one another and finally this showcased the power of experience really if i had tried to make this game 10 years ago when i was just starting with unity back then it would have taken me weeks or maybe a month to get to this point but thanks to all of the experience i already have i really managed to build this in just under two hours so those are three really nice takeaways from just the beginning of this project okay so everything was already looking pretty good next up was adding one very crucial thing to this game adding action points and a turn system i want to be able to spend action points doing some actions then end the turn and have the action points reset for the character visual elements i use a world space canvas ui it's super useful i made a video on that each unit has a nice overlay showing the action points after that i implemented health once again reusing my health system from the very first video on this channel very simple to add just add the visual to the character overlay and made a simple shoot action so just by clicking on another unit it deals damage super simple also at this point you could spam click and take actions at the same time as other actions so this can really cause a lot of bugs so i just added a simple turn blocker basically it blocks any actions while the current one is running very simple and fixes tons of issues after that i just added some animations just to look a bit better so just some simple moving and shooting animations then for the actions instead of debug keys i made a proper ui just some simple buttons and when selected they enable a specific action on the current selected unit and for selecting units it's still the same so while in move action if you click on top of another unit then instead of moving there it just selects that unit after that was something very important having a grid visual here i went with a super simple approach just spawning a simple prefab on every single grid position now this one is not the most performant approach but it works pretty well in this case if i wanted maximum performance then i would implement a single mesh just like it did in the heat map video or even the 2d xcom video but for this quick demo this really works more than good enough with the grid visual done i then expanded each action to return a list of all of the valid grid positions so you can no longer move an infinite amount or move just 0 units also you cannot shoot an infinite distance so it needs to be within a certain range for the action to be valid thanks to how all of the code is set up in a nice clean way it's super simple to add unique rules for each action then i added something extremely important some simple pathfinding actually reuse the exact same script that i made in the pathfinding video that video teaches you how the a star pathfinding algorithm works so check it out if you want to understand it the only downside with the exact class made in that video is that it's not really intended to be performant but again in this case since this is a turnbased shooter maximum performance isn't really a requirement related to the pathfinding was obviously making some paths either walkable or unwalkable so for that i just added a collateral for each solid object that i want to block path and i play stack and ladder in a specific layer then right when the game starts the pathfinding is created and goes through every single grid position and there's a raycast to see if there's any walker there if so the grid position becomes unworkable and if not then it's normal so some pretty simple logic and with that pathfinding was fully working up next for a bit of fun i added a ragdoll to the units when they die it's really simple it's using unity's builtin breakdown wizard which is actually one of the tools that i cover in my ultimate unity overview course it's pretty easy to use a tool and make any character turn into a ragdoll so now when the inside they fall to the ground in a nice satisfying way also at this point there was no concept of enemy or friendly so i just quickly added that just a simple bowling variable so either unit is friendly or an enemy after that i implemented some camera movement super simple for this i use send machine which makes camera handling extremely easy just made the virtual camera follow a target object then with a simple script just move that object rotated and applied some zoom for another quick visual improvement i enabled screen space ambient occlusion this one is a subtle effect but it looks pretty great it's also somewhat hidden but i made a video on how to enable it if you don't know about it then it was finally time to tackle one of the more complex tasks start working on the enemy ai first start off with the easiest part just making the enemy take a turn so it just makes sure that it's the player's turn and then when the player ends their turn the enemy takes theirs with that basic logic working then it was time to make the enemy take actions again starting simple just testing the logic to make it take an action so all it does is take a spin action while it has action points and after all the enemies spend their action points then the enemy ends their turn and goes back to the player without working then it was time to make some proper ai i spent quite some time thinking about this naturally ai is a massive topic you could spend hours weeks or even years just working on ai for this quick demo i wanted something functional but as simple as possible so the rules that i implemented were pretty simple if you can shoot a player character then shoot if not move somewhere and to test where to move assign some points depending on the number of targets in range of that new position so basically it tries to move to where it can shoot at least one player unit and then if there's something in range then just shoot them also made them prioritize weaker units so if there's a unit with half health and one with full health then it targets the weakest this is also the best tactic when actually playing xcom you want to remove as many enemy units as possible okay so with that very basic ai done then i worked on a fun task making an action camera once again pretty easy thanks to using cinemachine just made another virtual camera then through code when someone takes an action it positions the camera right behind the shooter looking at the target and when the action is done it simply disables the virtual camera and it goes back to the regular virtual camera up next it was time to work on another crucial system making the cover system for defining cover it was pretty easy every object that's already blocking pathfinding meaning every solid object for all of those i just added another script which defines if that object works as half or full cover it's really similar to how the pathfinding works just goes through every single grid position to check the cover state and simply sets that state on that grid position so populating the world with cover points is super easy for the cover animation i just went into miximo and downloaded a free crouch idling mission mixamo is an awesome website where you can download free animations that work on any project i made a video on that home process then i decided to continue working on the game during a live stream thank you all for joining me first task on stream was a simple one just make a cover icon so it's just an image it listens to the events when the unit changes great position and just updates the icon super simple then i also quickly made some high crates just took out the normal crates stretch them out change the cover script value to say these are now phone cover with that done i then decided to build another action a throw grenade action creating the action itself was pretty easy thanks to how the code is set up in a nice clean way i just need to make an action script that implements the interface and write down the throw grenade code for throwing it just spawns a visual prefab and moves it over time since the player can throw at various distances then the grenade movement couldn't be a static animation it had to be driven by code for the horizontal movement i made it as normal but for the vertical movement i went with the approach of using an interesting animation curve this one is a really awesome unity feature that has tons of use cases don't be fooled by the name this can be used for anything not just animations you can place the points and draw the curve exactly as you want it so in my case i use the animation curve to define the yaxis so the grenade moves and then when it lands i just spawn some nice and simple particles and finally for dealing damage i just did a physics overlap sphere to find all the objects in range find all of the unit objects and call the deal damage function then i also wanted to add a nice destruction to the cover objects for that i used the method that i covered in a previous video just using pro builder to slice the crate into multiple pieces then i just spawn the prefab when the crate is destroyed and apply some force to make all the parts go fine as you can see it's really easy to add some destruction in your games and looks really awesome that was the end of the live stream thank you all for joining me back to working on it by myself i started working on the fog of war system units should not be able to see all over the map if an enemy is behind the wall it should be invisible handling that logic was very similar to what i covered in the line of sight field of view videos i just start from each unit position then i do some math to get all of the directions around the unit and test the grid positions at various distance points if the grid position has a full cover object then the unit cannot see further it's some pretty simple logic and it works great just need to then connect it to the enemy logic just add some simple code to hide the visual so the enemy still works as normal just invisible and that's pretty much it and it works next was adding a crucial mechanic for this game type calculating a hit percentage now this one is pretty easy to add you can make it as complex as you want in the math but really i just kept it simple basically just took into account the distance to the target also whether the target was in cover or not then with that i also had an accuracy film to each unit just to add a tiny bit of randomness if you had a more persistent game like xcom with the overwhelm then you could load your soldier accuracy stats for this simple prototype i'm happy with the simple math that i have here it adds a degree of randomness to your hits but it can also be managed by the player simply playing better by getting into cover and approaching the enemies before firing up next was a fun mechanic adding an overwatch this one is also quite simple thanks to how everything is set up for making the action since all the code is set up in a nice clean way it was pretty easy to add another action then for the logic basically i just need to know what is the overwatch range and since i already have events when every unit changes with position i just listen to that and see if the enemy unit entered within the overwatch range and if so just shoot them using the same cal hit percent with a bit of a penalty so that's really it it works great and this ability was super easy to make with that all of the mechanics were pretty much done so i just quickly set up a nice level placing down walls crates enemies and so on and with that over here is the final result alright so here i am on turn one i've got my team right here and over here is a bunch of enemies there is a fog war system so i can't see any more enemies around this area then down here i can select which action i want to take and by clicking i can select which unit and by default the move action shows me everywhere that i can move and of course there's the walls with phone cover and he creates some with phone cover some with half cover so i'm going to move my unit over there and there you go he runs and now he's got full cover and i can go into the shoot action and try to hit any of these and of course they've got a certain hit percentage that one is on phone cover so the hit percentage is really low then this one is closer than this one so let's try hitting this one 78 percent chance so click there you go the nice camera zoom in the nice shot and in this case it actually missed so now this one is out of action point so let's select another one move them into a bit of cover in this case maybe throw a grenade just throw and boom deals nice aoe damage and for this one just without moving just shoot down and try to hit if there you go nice hit another one and if there you go another nice hit and as soon as the enemy dies there goes a really nice ride off okay so i'm out of action points and now it's time to let the enemy take their turn the enemy ai is currently running and all of the various enemies are taking their action that one decides to take a shot and there you go once two shots then another one wins a shot there goes one of my units and another one getting hit yep as soon as the enemy takes all their turns now it's my turn again so once again i can move i can attack i can throw some grenades and so on the game also has some nice destructibility so if i fire a grenade over there and there's a crate just fire the grenade and boom there you go it also blows up the box and the final skill is the overwatch so i just enable overwatch and my turn and there's the enemy starts to move and as soon as he gets within range he gets a nice shot alright so that's the minigame pretty awesome now here's the exciting announcement that i mentioned in the beginning the reason why i made this quick pro tap is because this is going to be my next complete course this is a pretty fun genre i think a lot of people would like to learn how to make this specific type of game something turnbased strategy with actions combat abilities movement and so on and personally i also really like it so it's perfect for my next complete stepbystep course it's going to be in the same format as my other courses so starting commonly from scratch and going step by step until the final polish game so if that's something you're interested in there's a link description where you can sign up and i'll let you know when it's out as for timing it's always very tricky to know exactly but i already have this prototype and the outline and a lot of things already done so hopefully within the next one to two months so if you're interested in that course sign up on the website thank you for watching and i'll see you next time you
