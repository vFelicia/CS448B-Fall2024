With timestamps:

00:00 - hello and welcome I'm your Cod monkey
00:02 - it's time for a pretty big Unity release
00:04 - Unity 22.2 is out right now this is
00:07 - important for mainly two reasons first
00:10 - of all it contains tons of awesome
00:11 - additions and improvements which I'm
00:13 - going to cover in a bit and being
00:14 - version 0.2 means that this is the last
00:16 - big release until the LTS version so
00:19 - this is the version and feature set that
00:20 - you will probably spend most of your
00:22 - time over the next year for me this is
00:24 - especially important because I'm
00:25 - currently working on my SIM game
00:27 - turnover Liberation go ahead and add it
00:29 - to your wishlist if you haven't already
00:30 - since the game is only launching next
00:32 - year I'm building it in unity 2022 so
00:35 - this new version is one step closer to
00:36 - the LTS version that I will be using at
00:38 - launch UNT sponsored this video to do an
00:40 - overview of all of the new features and
00:42 - changes coming out in this version so
00:44 - let's first look at the new features and
00:45 - changes that they highlighted in their
00:47 - main page and then I also went through
00:49 - the entire huge change log so I'll talk
00:51 - about my own highlights from that list
00:52 - there's a bunch of new interesting
00:54 - things that do not appear on that main
00:55 - page there's quite a lot of stuff
00:57 - everything from Graphics multiplayer UI
00:59 - iteration speed to the physics lighting
01:01 - platforms and tons more so starting from
01:04 - the official highlights the very first
01:06 - very exciting very important thing is
01:08 - that dots is now finally efficiently
01:10 - supported it has graduated from
01:12 - experimental into preview which means it
01:13 - has now an officially supported DNT
01:15 - feature this gets it one step closer to
01:17 - the final production rated release which
01:19 - will happen in the 22 MTS version with
01:21 - that the most important thing is that
01:23 - dots now in version 1.0 the syntax is
01:25 - mostly fixed meaning that while it's not
01:27 - necessarily yet time for you to use it
01:29 - in projects that are out right now it is
01:31 - already stable enough for you to start
01:33 - learning the syntax so you can edit your
01:34 - own games when they come out next year
01:36 - for example that's exactly what I'm
01:38 - doing with my own game I'm learning the
01:39 - syntax right now so whenever I come
01:41 - across any performance issues as I
01:43 - develop the game I will remember that I
01:45 - have this awesome.co in my toolbox to
01:47 - help me solve any performance issues so
01:49 - that's the big news if you want to learn
01:51 - the syntax I made a super detailed video
01:52 - on it alongside NTS 1.0 comes a new
01:55 - graphics package also the dots physics
01:58 - and even a new DOT net code I haven't
02:01 - looked into this one myself but it's
02:02 - intended to be super ferment highly
02:04 - scalable so where netcode for game
02:06 - objects is meant for smart signal games
02:08 - that's netcode is meant to handle
02:10 - anything you can think of I definitely
02:11 - would like to link into it at least
02:13 - briefly before the final protection
02:14 - valid release and Beyond those new
02:16 - releases the other two parts of dots the
02:19 - burst compiler and the job system have
02:21 - also continued getting updates so this
02:23 - is definitely the most exciting new
02:24 - addition to UNT personally I'm big
02:27 - believer in dots and I can't wait until
02:28 - it's finally production ready to see all
02:30 - of the awesome games that will be built
02:31 - that could not have been built without
02:33 - dots the next highlighted section is on
02:35 - multiplayer a while ago they launched
02:37 - netcode for game objects so after years
02:39 - of unity not having any official
02:41 - multiplayer solution since they
02:43 - deprecated unit they finally have an
02:45 - official networking sack I made a really
02:47 - detailed tutorial on it it's a really
02:49 - awesome tool set it's very capable and
02:51 - very easy to use one of the best things
02:53 - about it is how ENT also has a whole ton
02:55 - of tools under their Unity gaming
02:57 - Services brand and all of those tools
02:59 - they work together to make multiplayer
03:00 - games really easy to build you have net
03:03 - code for game objects for handling your
03:04 - multiplayer Logic for joining players
03:06 - together you have Lobby for connecting
03:08 - them easily through firewalls you have
03:10 - reeling which by the way I've been
03:12 - working on two really detailed tutorials
03:13 - on these two tools so stay tuned for
03:16 - that those videos should be out soon and
03:18 - then the new updates is now game server
03:20 - hosting which by the way is what used to
03:22 - be called multiply this one is their
03:23 - dedicated server tool this one alongside
03:26 - Matchmaker which is a tune for defining
03:28 - rules to match your players with another
03:29 - both those tools are now in some serve
03:31 - meaning you don't need to manually
03:33 - contact Unity to start using them just
03:35 - go through the dashboard click a button
03:37 - and start using it right away all of
03:39 - these Stones can be used independently
03:40 - but they obviously have sdks that make
03:42 - them super easy to work with one another
03:44 - so for example like I mentioned a while
03:46 - ago netcode for entities you could use
03:48 - that in conjunction with Lobby and relay
03:50 - or another example you could use netcode
03:52 - for game objects with Lobby and Game
03:53 - Server hosting so if you want to make
03:55 - multiplayer games then UNT has a really
03:57 - awesome very complete tool set then the
03:59 - section on graphics for me I mostly use
04:02 - basic graphics with urp but even so
04:04 - there's some awesome stuff here then you
04:06 - should grab phone screen masternode is
04:08 - really nice previously if you wanted to
04:10 - use Shader graph to make phone screen
04:12 - effects it required some very nasty
04:13 - hacks so it's really nice to have a
04:15 - proper way now and thanks to that new
04:17 - node you also have custom post
04:19 - processing so you can create your own
04:20 - effects and add them to any volume
04:22 - component there is also LED Crossfade so
04:26 - instead of your lods just snapping in a
04:28 - very drastic manner now it's a nice
04:29 - invisible fade and with Ford plus
04:32 - rendering you now have the ability to
04:33 - support many more lights for hdrp you
04:36 - have tons of awesome new features
04:37 - there's a new water system you have
04:39 - Cloud layers and volumetric clouds and
04:42 - you even have the extremely high
04:43 - definition eye Shader from the enemies
04:45 - demo so building a super high fidelity
04:48 - game with egrp just gets easier and
04:49 - easier next up in terms of productivity
04:52 - improvements there's updates to the
04:54 - terrain tools there is a new AI
04:56 - navigation package although this is
04:58 - actually a package that has exists for
04:59 - quite a while but it was only available
05:01 - on their GitHub and not officially
05:03 - supported whereas now it is officially
05:05 - supported and won't show up on the
05:07 - package manager it has some more useful
05:09 - components for handling navigation and
05:10 - basically upgrades how navmesh used to
05:12 - work so now there's no more baking
05:14 - process you just assign navmesh service
05:17 - component and it automatically generates
05:18 - an app mesh the new spline package is
05:21 - also now part of the engine
05:22 - there are some improvements to 2D in
05:24 - lights and debugging editor support for
05:27 - sprite Atlas generation which I believe
05:29 - means you can now manually generate a
05:31 - Sprite Atlas without having to make a
05:32 - build then some more miscellaneous
05:34 - script compilation time improvements and
05:36 - also a bunch of upgrades to prefabs
05:38 - specifically they added the ability to
05:40 - replace prefabs as well as a bunch more
05:43 - things to do with overrides so all in
05:45 - all a nice bunch of additions then
05:47 - another pretty important update to the
05:48 - engine is with regards to UI token which
05:51 - is now the official recommended tool for
05:53 - making editor windows and tools all of
05:55 - the regular ENT property drawers are now
05:57 - being drawn using UI tonkit which makes
05:59 - them easier to integrate within your own
06:01 - editors in terms of runtime UI it is
06:04 - possible to use UI toolkit but for that
06:06 - so far the recommendation is still using
06:08 - Unity I believe the plan is for next
06:10 - year UI tonkit to reach parity with dnty
06:12 - so that you finally have just one tool
06:14 - that does every type of UI personally
06:17 - I've already done a bunch of research on
06:18 - UI tonkit although I really haven't made
06:20 - a decade video just yet it's an
06:22 - interesting tool it's definitely great
06:24 - if you're working in teams since it
06:25 - forced you to split things between the
06:27 - logic structure and visuals and being
06:29 - forced to do that leads to some better
06:31 - more organized code I also know that I
06:33 - hated working with I am GUI every time I
06:35 - used it so I'm very happy to replace it
06:37 - with the UI toolkit for editor tools
06:39 - there's also a vector drawing API looks
06:42 - very good if you want to draw some weird
06:43 - shapes in your UI
06:45 - and also some more options for Tree View
06:47 - controls including performance
06:48 - improvements then the section on
06:50 - platform integration
06:52 - Android is having a fast deploy setting
06:54 - making builds faster and easier
06:56 - iteration the X12 is now the recommended
06:58 - API for Windows and Xbox I remember in
07:01 - the unite keynote I mentioned how it was
07:03 - faster in pretty much every scenario
07:04 - it's always great to get some bonus free
07:07 - performance just for taking a checkbox
07:08 - then Ray tracing is Now supported on
07:11 - Xbox x and S and the PS5 and switch now
07:14 - also have incremental builds so some
07:17 - nice improvements mostly helping you
07:19 - iterate faster then the section on mixed
07:21 - reality as usual some more platforms
07:23 - pretty much the day the quest Pro came
07:25 - out UNT already had support psvr2 isn't
07:28 - even out yet and it's already supporting
07:29 - and the XR interaction toolkit is also
07:32 - getting a big update this is a tool set
07:34 - for helping you easily Implement all
07:36 - kinds of common interactions in your XR
07:38 - games things like picking up objects
07:40 - pushing buttons using levers grabbing
07:42 - weapons and so on XR is definitely a
07:44 - topic that I'd love to cover I wish I
07:46 - could find the time to dive deep into
07:47 - all these tools So based on these
07:49 - highlights there's quite a lot of things
07:51 - in this latest tech release both big and
07:53 - small now I went through the entire
07:55 - change log and here's the entries that's
07:57 - account to me first one which is small
07:59 - but extremely useful is on the package
08:01 - manager you can now Bonk install
08:02 - packages
08:04 - so you no longer need to do it one by
08:05 - one select them all and install them all
08:07 - for me this was especially useful
08:09 - because when working on my steam game I
08:11 - recently picked up the asset inventory
08:13 - which is an excellent tool for quickly
08:15 - searching inside all the se1 but for
08:18 - that to work it needs to download the
08:19 - asset at least once doing it one by one
08:21 - would have been a pain since I have
08:23 - hundreds of assets
08:24 - so this tiny little addition really
08:26 - helped me a ton the package manager
08:28 - itself also changed quite a bit there's
08:30 - now some tabs showing all the data
08:32 - nicely organized everything was
08:34 - reorganized both on the official
08:35 - packages as well as in the assets or
08:37 - packages then physics got some nice
08:40 - additions he can now apparently specify
08:42 - contact layers on a per object basis up
08:46 - until now the only controller you had
08:47 - over collisions was on the Collision
08:49 - Matrix which works on a perlier basis
08:51 - but now you can do it on a per object
08:54 - basis so this gives you much more
08:56 - control over all of your physics objects
08:58 - then urp got some decal layers so you
09:01 - can apply some decals kind of like blood
09:03 - spatter but make it affect only the
09:05 - ground and not your character they added
09:07 - foviated rendering support I think this
09:09 - one is related to them adding psvr to
09:11 - support which I believe has 4v8
09:13 - rendering and I think the quest Pro does
09:15 - as well this one is going to be a great
09:17 - feature especially for VR and AR in the
09:19 - future as usual there are some more
09:21 - performance improvements when entering
09:22 - and exiting point mode the unity web
09:25 - request class got a much needed upgrade
09:27 - previously it only supported sending
09:29 - forms you couldn't send regular Json
09:31 - without using some tricks when I was
09:33 - researching the cloud I need to send
09:35 - some Json and it was quite a headache to
09:37 - figure out how to make it work
09:39 - thankfully now this class is nicely
09:40 - standardized so if you want to send some
09:42 - Json you no longer need to search for it
09:44 - just like I did the VFX graph got some
09:46 - activation Boolean ports I haven't used
09:49 - VFX graph in ages but being able to
09:51 - easily enable our disable blocks sounds
09:53 - really useful Bloom also got some nice
09:55 - options for tweaking performance so you
09:58 - don't need to only either enable or
09:59 - disable if you're making mobile games
10:01 - for low end devices maybe you can leave
10:03 - it on and just lower the quality also
10:05 - many of the tools change to use the new
10:07 - overlay system these are some UI gizmos
10:10 - that give you many more options based on
10:12 - whatever objects you have selected they
10:14 - are very customizable you can place them
10:16 - anywhere scale and rotate them one fun
10:18 - one about physics is you can now run
10:20 - some queries asynchronously in a job so
10:23 - if you have lots of physics queries this
10:25 - can really help performance a nice small
10:27 - one is how they set the minimum Sprite
10:29 - preview size to 64 by 64. so this one
10:32 - should be helpful when trying to see
10:34 - some tiny images
10:35 - and there's a bunch more changes the
10:37 - entire change log is massive so as you
10:39 - can see it's a pretty big release with
10:41 - lots of things both big and small with
10:43 - this being version 0.2 means that this
10:45 - won't be very close in terms of features
10:46 - to the 22 LTS version which is what you
10:49 - will mostly be using over the next 12 to
10:51 - 18 months if you don't like me are also
10:53 - working on a game and for launch in next
10:55 - year then check out this version and of
10:57 - course stay tuned for the dots I can't
10:58 - believe the funnel release is just a few
11:00 - months away alright hope that's useful
11:03 - check out these videos to learn some
11:04 - more thanks to these awesome patreon
11:06 - supporters for making these videos
11:08 - possible thank you for watching and I'll
11:10 - see you next time
11:15 - foreign

Cleaned transcript:

hello and welcome I'm your Cod monkey it's time for a pretty big Unity release Unity 22.2 is out right now this is important for mainly two reasons first of all it contains tons of awesome additions and improvements which I'm going to cover in a bit and being version 0.2 means that this is the last big release until the LTS version so this is the version and feature set that you will probably spend most of your time over the next year for me this is especially important because I'm currently working on my SIM game turnover Liberation go ahead and add it to your wishlist if you haven't already since the game is only launching next year I'm building it in unity 2022 so this new version is one step closer to the LTS version that I will be using at launch UNT sponsored this video to do an overview of all of the new features and changes coming out in this version so let's first look at the new features and changes that they highlighted in their main page and then I also went through the entire huge change log so I'll talk about my own highlights from that list there's a bunch of new interesting things that do not appear on that main page there's quite a lot of stuff everything from Graphics multiplayer UI iteration speed to the physics lighting platforms and tons more so starting from the official highlights the very first very exciting very important thing is that dots is now finally efficiently supported it has graduated from experimental into preview which means it has now an officially supported DNT feature this gets it one step closer to the final production rated release which will happen in the 22 MTS version with that the most important thing is that dots now in version 1.0 the syntax is mostly fixed meaning that while it's not necessarily yet time for you to use it in projects that are out right now it is already stable enough for you to start learning the syntax so you can edit your own games when they come out next year for example that's exactly what I'm doing with my own game I'm learning the syntax right now so whenever I come across any performance issues as I develop the game I will remember that I have this awesome.co in my toolbox to help me solve any performance issues so that's the big news if you want to learn the syntax I made a super detailed video on it alongside NTS 1.0 comes a new graphics package also the dots physics and even a new DOT net code I haven't looked into this one myself but it's intended to be super ferment highly scalable so where netcode for game objects is meant for smart signal games that's netcode is meant to handle anything you can think of I definitely would like to link into it at least briefly before the final protection valid release and Beyond those new releases the other two parts of dots the burst compiler and the job system have also continued getting updates so this is definitely the most exciting new addition to UNT personally I'm big believer in dots and I can't wait until it's finally production ready to see all of the awesome games that will be built that could not have been built without dots the next highlighted section is on multiplayer a while ago they launched netcode for game objects so after years of unity not having any official multiplayer solution since they deprecated unit they finally have an official networking sack I made a really detailed tutorial on it it's a really awesome tool set it's very capable and very easy to use one of the best things about it is how ENT also has a whole ton of tools under their Unity gaming Services brand and all of those tools they work together to make multiplayer games really easy to build you have net code for game objects for handling your multiplayer Logic for joining players together you have Lobby for connecting them easily through firewalls you have reeling which by the way I've been working on two really detailed tutorials on these two tools so stay tuned for that those videos should be out soon and then the new updates is now game server hosting which by the way is what used to be called multiply this one is their dedicated server tool this one alongside Matchmaker which is a tune for defining rules to match your players with another both those tools are now in some serve meaning you don't need to manually contact Unity to start using them just go through the dashboard click a button and start using it right away all of these Stones can be used independently but they obviously have sdks that make them super easy to work with one another so for example like I mentioned a while ago netcode for entities you could use that in conjunction with Lobby and relay or another example you could use netcode for game objects with Lobby and Game Server hosting so if you want to make multiplayer games then UNT has a really awesome very complete tool set then the section on graphics for me I mostly use basic graphics with urp but even so there's some awesome stuff here then you should grab phone screen masternode is really nice previously if you wanted to use Shader graph to make phone screen effects it required some very nasty hacks so it's really nice to have a proper way now and thanks to that new node you also have custom post processing so you can create your own effects and add them to any volume component there is also LED Crossfade so instead of your lods just snapping in a very drastic manner now it's a nice invisible fade and with Ford plus rendering you now have the ability to support many more lights for hdrp you have tons of awesome new features there's a new water system you have Cloud layers and volumetric clouds and you even have the extremely high definition eye Shader from the enemies demo so building a super high fidelity game with egrp just gets easier and easier next up in terms of productivity improvements there's updates to the terrain tools there is a new AI navigation package although this is actually a package that has exists for quite a while but it was only available on their GitHub and not officially supported whereas now it is officially supported and won't show up on the package manager it has some more useful components for handling navigation and basically upgrades how navmesh used to work so now there's no more baking process you just assign navmesh service component and it automatically generates an app mesh the new spline package is also now part of the engine there are some improvements to 2D in lights and debugging editor support for sprite Atlas generation which I believe means you can now manually generate a Sprite Atlas without having to make a build then some more miscellaneous script compilation time improvements and also a bunch of upgrades to prefabs specifically they added the ability to replace prefabs as well as a bunch more things to do with overrides so all in all a nice bunch of additions then another pretty important update to the engine is with regards to UI token which is now the official recommended tool for making editor windows and tools all of the regular ENT property drawers are now being drawn using UI tonkit which makes them easier to integrate within your own editors in terms of runtime UI it is possible to use UI toolkit but for that so far the recommendation is still using Unity I believe the plan is for next year UI tonkit to reach parity with dnty so that you finally have just one tool that does every type of UI personally I've already done a bunch of research on UI tonkit although I really haven't made a decade video just yet it's an interesting tool it's definitely great if you're working in teams since it forced you to split things between the logic structure and visuals and being forced to do that leads to some better more organized code I also know that I hated working with I am GUI every time I used it so I'm very happy to replace it with the UI toolkit for editor tools there's also a vector drawing API looks very good if you want to draw some weird shapes in your UI and also some more options for Tree View controls including performance improvements then the section on platform integration Android is having a fast deploy setting making builds faster and easier iteration the X12 is now the recommended API for Windows and Xbox I remember in the unite keynote I mentioned how it was faster in pretty much every scenario it's always great to get some bonus free performance just for taking a checkbox then Ray tracing is Now supported on Xbox x and S and the PS5 and switch now also have incremental builds so some nice improvements mostly helping you iterate faster then the section on mixed reality as usual some more platforms pretty much the day the quest Pro came out UNT already had support psvr2 isn't even out yet and it's already supporting and the XR interaction toolkit is also getting a big update this is a tool set for helping you easily Implement all kinds of common interactions in your XR games things like picking up objects pushing buttons using levers grabbing weapons and so on XR is definitely a topic that I'd love to cover I wish I could find the time to dive deep into all these tools So based on these highlights there's quite a lot of things in this latest tech release both big and small now I went through the entire change log and here's the entries that's account to me first one which is small but extremely useful is on the package manager you can now Bonk install packages so you no longer need to do it one by one select them all and install them all for me this was especially useful because when working on my steam game I recently picked up the asset inventory which is an excellent tool for quickly searching inside all the se1 but for that to work it needs to download the asset at least once doing it one by one would have been a pain since I have hundreds of assets so this tiny little addition really helped me a ton the package manager itself also changed quite a bit there's now some tabs showing all the data nicely organized everything was reorganized both on the official packages as well as in the assets or packages then physics got some nice additions he can now apparently specify contact layers on a per object basis up until now the only controller you had over collisions was on the Collision Matrix which works on a perlier basis but now you can do it on a per object basis so this gives you much more control over all of your physics objects then urp got some decal layers so you can apply some decals kind of like blood spatter but make it affect only the ground and not your character they added foviated rendering support I think this one is related to them adding psvr to support which I believe has 4v8 rendering and I think the quest Pro does as well this one is going to be a great feature especially for VR and AR in the future as usual there are some more performance improvements when entering and exiting point mode the unity web request class got a much needed upgrade previously it only supported sending forms you couldn't send regular Json without using some tricks when I was researching the cloud I need to send some Json and it was quite a headache to figure out how to make it work thankfully now this class is nicely standardized so if you want to send some Json you no longer need to search for it just like I did the VFX graph got some activation Boolean ports I haven't used VFX graph in ages but being able to easily enable our disable blocks sounds really useful Bloom also got some nice options for tweaking performance so you don't need to only either enable or disable if you're making mobile games for low end devices maybe you can leave it on and just lower the quality also many of the tools change to use the new overlay system these are some UI gizmos that give you many more options based on whatever objects you have selected they are very customizable you can place them anywhere scale and rotate them one fun one about physics is you can now run some queries asynchronously in a job so if you have lots of physics queries this can really help performance a nice small one is how they set the minimum Sprite preview size to 64 by 64. so this one should be helpful when trying to see some tiny images and there's a bunch more changes the entire change log is massive so as you can see it's a pretty big release with lots of things both big and small with this being version 0.2 means that this won't be very close in terms of features to the 22 LTS version which is what you will mostly be using over the next 12 to 18 months if you don't like me are also working on a game and for launch in next year then check out this version and of course stay tuned for the dots I can't believe the funnel release is just a few months away alright hope that's useful check out these videos to learn some more thanks to these awesome patreon supporters for making these videos possible thank you for watching and I'll see you next time foreign
