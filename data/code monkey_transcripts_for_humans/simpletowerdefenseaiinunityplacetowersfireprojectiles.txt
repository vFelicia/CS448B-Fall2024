With timestamps:

00:00 - this video is sponsored by ad mix in
00:02 - this video we're going to make some
00:04 - simple tower defense AI we're going to
00:06 - have our towers that we can place and as
00:08 - enemies get spawned an approach within
00:10 - the attack range the tower will aim and
00:12 - shoot the towers are also upgradable
00:14 - with expandable range and damage let's
00:16 - begin
00:17 - [Music]
00:21 - okay so here is what we're trying to
00:24 - make over here is my tower placed in the
00:26 - map and when I mouse over I could see
00:29 - the attack range of this tower and by
00:32 - pressing a button I can start the enemy
00:34 - wave so the enemy start being spawned
00:36 - and they're going to follow their own
00:38 - path and as they get within the range of
00:40 - the tower the tower starts attacking and
00:42 - firing arrows and the arrows hit the
00:44 - enemies and they get damaged with enough
00:47 - hits the enemies die so I have one tower
00:49 - but I can also easily spawn a whole
00:51 - bunch more towers and the spawning is
00:53 - correctly placed on a grid so we're
00:55 - using the grid system that we created in
00:57 - a previous video and we can visualize it
00:59 - by enabling gizmos there it is here's
01:01 - our grid so it's one another tower right
01:03 - down here and yet there you go now we
01:05 - have our two towers and now we can spawn
01:07 - some more enemies and here they come and
01:09 - as you see the towers are also
01:11 - upgradable so here on the left side we
01:13 - can increase the range and on the right
01:15 - side we can increase the damage so it
01:18 - spawned a bunch more enemies and let's
01:20 - see and yep as soon as I get within
01:21 - range they start getting hit and now
01:22 - they're taking 4548 damage the damage
01:26 - pop ups we're also made in a previous
01:28 - video so check it out and just like this
01:30 - we have some very simple tower defense
01:32 - AI working so you can right-click to
01:34 - place a whole bunch more towers and now
01:36 - spawn a bunch more enemies and they
01:40 - start coming as they get within range of
01:41 - any of the towers the towers start
01:43 - hitting them and if I want I can upgrade
01:44 - them and so on and so on in order to
01:47 - continue building your games in the long
01:49 - run you need to think about monetization
01:51 - AB mix is a great tool to help you solve
01:53 - that with AD mix you can place
01:55 - unintrusive integrated ads inside of
01:57 - your game so instead of an ugly banner
01:59 - ad you have a billboard right inside
02:01 - your game this is especially useful for
02:03 - monetizing AR and VR content without
02:05 - breaking player immersion and since the
02:07 - ads are less intrusive that leads to a
02:09 - better player experience which leads to
02:10 - higher retention which allows you to
02:12 - make more money so you can keep building
02:14 - your awesome game the tool is extremely
02:16 - easy to use
02:17 - just download the unity plugin and
02:19 - import into your scene you'll see this
02:21 - window where you can select from a
02:22 - variety of sizes and drag and drop the
02:24 - ad mix object into your scene the object
02:27 - is very adaptable so it can fit any
02:28 - surface like something flat or put it
02:30 - around
02:31 - as you can see it's extremely simple to
02:33 - use and having in-game ads is a lot
02:35 - better than annoying banner ads once
02:37 - you've set up all your ads click this
02:39 - button to your website to validate your
02:40 - app once you do don't start generating
02:43 - revenue in under 24 hours so ad mix is
02:46 - an extremely easy to use tool that works
02:48 - better than standard ads unless you
02:50 - start earning revenue immediately go to
02:52 - ad mix start in and download the n mix
02:54 - unity plugin to start earning revenue
02:56 - today thank you to add mix and also
02:58 - thank you to these awesome supporters
03:00 - for making this video possible go to
03:02 - patreon.com/scishow
03:04 - code monkey to get some perks and help
03:06 - keep the videos free for everyone
03:07 - alright so this circle let's get to it
03:10 - okay so here we are in our starring
03:12 - scene all we have is the basic map setup
03:15 - so as you can see the path where they
03:17 - won't take by pressing a button I can
03:19 - spawn some enemies and there you go they
03:21 - get spawned on the corner there and they
03:23 - finally start moving the enemies go
03:25 - through the power through there there
03:26 - and out through there also in here I
03:28 - have a grid setup so if we enable gizmos
03:31 - there you go we can see all of the
03:32 - various grid positions the grid system
03:34 - was fully made in a previous video so
03:36 - check that out and in this case we're
03:38 - just going to use the grid in order to
03:40 - stamp the towers into their position so
03:42 - for example we'll be able to place a
03:43 - tower here one here one here and so on
03:45 - alright so let's begin by making the
03:47 - tower visual here in the project files I
03:49 - have some textures for example this one
03:51 - with a tower let's drag it onto the
03:54 - scene and now let's make a empty game
03:56 - object this will be our main tower and
03:59 - we drag the tower sprite inside of our
04:02 - tower game object so this way we can now
04:04 - easily locate the sprite in order to
04:07 - make sure that it matches with the grid
04:08 - position now let's also add another
04:10 - empty channel game object so an empty
04:13 - one yep and let's call this the
04:15 - projectile suit from position so this is
04:19 - the position where the projectiles will
04:20 - be fired from so in this case let's just
04:22 - locate it right up there at the top of
04:25 - the tower ok so just like this we have a
04:27 - very basic visual setup now let's make
04:30 - the script to handle so let's create a
04:32 - new C sharp script and come with just
04:33 - our tower let's drag it on to the game
04:36 - object and open ok now first let's grab
04:39 - reference to our shoot front position
04:45 - so there it is we just do a transform
04:47 - file and we get the position of that
04:49 - game object so this way we can visually
04:51 - locate it and then we get the position
04:53 - through code and now here let's also
04:56 - capture the mouse click so let's do a
04:58 - perfect boy update inside of our update
05:00 - you just do a simple input get mouse
05:03 - button down left mouse button and just
05:07 - for testing when we click let's use a
05:08 - function from the utilities to spawn a
05:10 - pop up as long as you can download the
05:14 - utilities for free from unity code
05:16 - monkey calm so just like this let's see
05:18 - if it's working okay here we are there's
05:20 - the tower and click and there you go we
05:22 - have our clicks correctly working all
05:24 - right so the tower script is correctly
05:25 - running so now that we have our tower
05:27 - let's fire off a projectile first let's
05:29 - create our projectile so over here I
05:32 - have a simple sprite of a arrow so just
05:35 - drag it onto the scene and yep there's
05:36 - the projectile arrow now let's make a
05:39 - script to control it so we create the
05:41 - new c-sharp script for projectile arrow
05:44 - and drag the script straight onto it ok
05:46 - now we want to spawn our arrows during
05:49 - runtime so in order to do that let's
05:51 - make our arrow into a prefab so first
05:53 - let's create a folder to form our
05:55 - prefabs and we simply drag the arrow
05:58 - onto it let's rename it PF projectile
06:01 - arrow alright so far so good we have a
06:04 - prefab for the projectile arrow now we
06:07 - want to spawn arrows when we shoot so
06:09 - let's open up the projectile arrow class
06:11 - and in here let's make a simple static
06:14 - function in order to spawn a arrow so
06:17 - private static void called create and in
06:21 - here we want to instantiate you're going
06:24 - to instantiate our PF projectile arrow
06:26 - so naturally in here we need a reference
06:28 - to our prefab and for that over here in
06:31 - the scene I already have a very home
06:32 - phone game assets class this was made in
06:35 - a previous video so this object as you
06:37 - can see it has a bunch of fields a bunch
06:39 - of references and it has this script and
06:41 - this script what it does is we have a
06:43 - static instance and then we have a whole
06:46 - bunch of public fields so in here I can
06:48 - simply add a pony transform for the PF
06:50 - projectile arrow
06:53 - and now back in the arrow script in here
06:56 - I can now access the game assets access
06:59 - these static instance and gravity
07:00 - projectile arrow again I cover the game
07:03 - asset script in detail in another video
07:05 - so check the link in the description so
07:07 - here we can spawn an arrow and let's
07:09 - also receive a vector 340 spawned
07:11 - position so we spawn in there with
07:14 - quaternion identity all right so this
07:17 - should spawn a projectile arrow so for
07:20 - testing let's try to spawn it on the
07:21 - mouse position so first instead of
07:23 - private let's make this public and now
07:25 - go into the tower and then here when you
07:27 - press on your left mouse button let's go
07:29 - into the project down arrow script in
07:31 - order to create a new arrow and a free
07:33 - position let's use the mouse position so
07:38 - here again using another function from
07:40 - the utilities in order to get the mouse
07:41 - little position here is the function in
07:44 - case you want to make it yourself as you
07:45 - can see very simple just grab the world
07:47 - camera and do a screen twirl point on
07:49 - the screen position all right so let's
07:51 - test and see if we see an arrow being in
07:53 - Senshi ated when are you pressing left
07:54 - mouse button
07:55 - the last thing we need is just to film
07:57 - with this reference so we just drag the
07:58 - prefab right in there okay let's test
08:01 - okay here we are and click and there you
08:03 - go there's the arrow correctly spawned
08:05 - right awesome so we have the arrow
08:07 - prefab being correctly spawned in the
08:09 - correct Mouse position now we don't want
08:11 - to spawn it on the mouse position but
08:13 - rather we want to spawn it on the tower
08:14 - and shoot towards a certain position so
08:16 - in this case shoot towards the mouse
08:18 - position so back in the arrow script
08:20 - let's receive a spawn position and then
08:22 - also a vector3 for the target position
08:25 - and now here in our object let's make a
08:29 - setup function just so that we can
08:33 - receive our vector three for the target
08:35 - position and when we create to
08:40 - instantiate and grab the arrow transform
08:44 - then we do get component of this type
08:47 - projectile arrow and then we can call
08:51 - setup and pass in our target position
08:55 - all right so now when we call this
08:57 - function we're going to pass in the
08:58 - spawn and Atari position and now that we
09:00 - have this position all we need to do is
09:02 - make sure that our project our arrow
09:04 - moves towards it so now here
09:06 - we need to ask a question which is how
09:08 - should we move the projector essentially
09:10 - we have two options we can move it
09:12 - manually or we can use the physics
09:14 - system so that's going to depend on your
09:16 - design goals and what you're trying to
09:18 - do with your game here we're going to do
09:19 - the simplest way possible so just
09:21 - manually moving the transform with no
09:23 - physics so just on our private boy
09:26 - update we calculate the direction
09:29 - towards the target position so we have
09:33 - the move direction we move towards the
09:38 - move direction by a certain move speed
09:40 - and after we do let's just check the
09:42 - distance so if we are close enough to
09:48 - the target position then we simply
09:50 - destroy this game object all right so
09:51 - there it is some very simple very basic
09:53 - movement code now we can go back into
09:55 - our tower script and in here now we have
09:57 - two parameters in our function the first
09:59 - one is a spawn position so we're going
10:01 - to use our projectile shoot from
10:03 - position and as the target let's shoot
10:05 - towards the mouse all right so let's
10:08 - test okay so here we are and click any
10:11 - of there you go there's the arrow and
10:12 - correctly goes so let's say click in
10:14 - here and it says it reaches yep it gets
10:16 - the strike all right awesome now we need
10:19 - to fix the speed as well as the rotation
10:21 - so let's do that for the speed let's
10:24 - just increase it and for the rotation
10:26 - let's get the oiler angles all right so
10:34 - there it is for the angles we're using a
10:36 - function to transform a vector three
10:38 - into a Euler angle and here is the
10:41 - function in case you want to make
10:42 - yourself and we just set the Euler
10:44 - angles and since we were working in 2d
10:46 - we only set on D Z okay let's see okay
10:49 - and click any of their yo now we have
10:51 - errors correctly being fired from the
10:54 - tower and towards the target mouse
10:56 - position all right awesome
10:58 - okay so we have our basic tower
11:00 - functionality now let's make it work
11:02 - with enemies now if I'm already set up a
11:05 - simple script in order to spawn some
11:06 - enemies so by pressing a simple key
11:09 - there you go the enemies start being
11:11 - spawn and they start showing up so the
11:13 - script is on this game object here it is
11:15 - here is the script it's very simple
11:17 - all we're doing is first of all making
11:19 - the grid
11:20 - so we have the function to validate it
11:21 - this is just so we can later snap our
11:23 - towers into position and then we just
11:25 - have three different types of waves in
11:27 - different difficulties and on each wave
11:30 - we just find a whole bunch of enemies
11:31 - and in terms of logic all they're doing
11:34 - is blindly following a simple Waypoint
11:36 - so there it is very simple now the
11:38 - enemies are created through this
11:40 - function here it is we're doing pretty
11:42 - much the same thing that we're doing on
11:43 - the projectile arrow
11:44 - so we insensate the enemy prefab and
11:47 - then we do a basic set up and now as the
11:50 - enemies are created here on awake they
11:52 - are added onto a certain enemy list so
11:54 - this is a static list which contains all
11:56 - of the alive enemies and with that over
11:59 - here I have a simple function to get the
12:01 - closest enemy it takes a position and a
12:04 - max range and simply cycles through all
12:06 - the enemies ignores if any of them are
12:08 - still dead and looks for the closest
12:11 - enemy within range so this function is
12:13 - what we're going to use in order to look
12:14 - for the closest enemy to our tower so
12:17 - let's go into our tower script and here
12:19 - let's stop manually firing our
12:21 - projectiles and in here and let's make a
12:23 - function to get the closest enemy now
12:27 - we're going to use the function on the
12:29 - enemy class so get closest enemy for the
12:32 - position passing this transform dart
12:34 - position and now for the max range let's
12:36 - store it in a field
12:40 - so just like this all right so now in
12:44 - our update we can try to get the closest
12:46 - enemy and if it is not know then we have
12:50 - a valid enemy so it's in here that we
12:54 - want to spawn our projectile arrow going
12:57 - to spawn from our shoot position towards
12:59 - the enemy position all right so there it
13:03 - is however like this we're going to have
13:05 - an issue but let's try it out just to
13:08 - see okay here we are and so far it seems
13:10 - good but let's spawn some enemies and
13:12 - here they come and now let's see what
13:15 - happens as they get within range and yep
13:18 - they're going with that that is insane
13:19 - all right so here we are seeing
13:21 - essentially one arrow being fired by
13:23 - every single friend so obviously we
13:25 - don't want to shoot that many arrows so
13:27 - let's add a simple shoot timer so let's
13:30 - make a
13:30 - phasic shoot timer all right so we have
13:40 - a very basic shoot timer coming down
13:41 - with our delta time and if we go under
13:44 - zero then we test if we have an enemy
13:46 - and we reset our shoot timer so there it
13:48 - is very simple let's see okay so here we
13:50 - are now let's spawn some enemies and
13:53 - here they come and as they are within
13:55 - range and there you go the tower start
13:56 - shooting a more manageable amount of
13:58 - arrows all right so far so good so right
14:00 - now there's no damage but the logic is
14:03 - actually working
14:04 - so let's damage our enemies now the
14:06 - enemies already have this damage
14:08 - function it takes in an int for a damage
14:11 - amount and simply spawn some particles
14:13 - and a bunch of things and reduces on the
14:15 - health system so let's use this function
14:17 - let's go back in our projectile and in
14:21 - here we have when the projectile reaches
14:22 - the target position so it's in here that
14:25 - we need to essentially call enemy damage
14:28 - so that means we need to receive a
14:30 - reference to our target enemy so let's
14:33 - go up here and our create instead of
14:34 - receiving a target position let's
14:36 - receive a enemy and we pass around each
14:39 - setup and here we define the target
14:43 - position as the enemy position and now
14:47 - here we can actually call our damage
14:49 - function so here we need the damage
14:51 - amount so let's also receive that all
14:56 - right so we also get the damage amount
14:58 - and in here we use it all right that
15:00 - should do it now back in the tower all
15:03 - we need is the person the enemy
15:04 - reference when spawning our freak out
15:07 - and now we also need the damage amount
15:10 - so let's the final like we did with the
15:11 - range okay we have a damage amount and
15:17 - here just for fun let's randomize it a
15:19 - bit all right that should do it
15:22 - let's test okay here we are and let's
15:24 - spawn some enemies and here they start
15:27 - to come and as the approach yep they
15:29 - start getting shot and there you go just
15:31 - like that they're all being shot and
15:32 - some of them are actually living but yep
15:34 - there we go
15:35 - we have the arrows working awesome okay
15:38 - so here we have our Tower and it's
15:39 - correctly shooting at nearby enemies now
15:42 - let's make a simple mini
15:43 - great system alright so here in the
15:46 - tower we already defined a field for the
15:48 - range and on for the damage amount so
15:50 - it's going to be very easy to manipulate
15:52 - these let's make some functions to do
15:54 - that all right so here let's do very
16:00 - simple functions just modifying our
16:02 - simple fields which again are then using
16:04 - this function and up here in this
16:06 - function now let's go into the editor to
16:09 - make our upgrade visual okay so in here
16:11 - let's create an empty game object let's
16:14 - call this the upgrade openly so this is
16:17 - the object that we're going to place on
16:18 - top of the tower in order to upgrade and
16:20 - inside let's add a sprite with this
16:22 - section here now it's made two buttons
16:28 - to upgrade and one button to close all
16:41 - right so there it is now here for the
16:44 - buttons I'm using the button scrap
16:46 - script which is also part of the code
16:48 - mock utilities it's just a simple sprite
16:50 - base button in order to capture Mouse
16:52 - interactions since this is a sprite it's
16:54 - based on doing break-ins so we require a
16:56 - simple Collider alright so here we have
16:59 - our upgrade overlay game object we're
17:01 - essentially going to place this right on
17:02 - top of a tower in order to upgrade that
17:04 - tower now let's make a script for this
17:07 - so a new script and just attach it okay
17:11 - now open it first let's make some very
17:13 - basic show and hide functions so just
17:19 - set the game object to true or false
17:20 - okay
17:21 - and now on the show let's also receive a
17:23 - tower that we're going to show on and
17:24 - when we set it to true we also set the
17:26 - transform doubt position to the tower
17:28 - transform position so it's right on top
17:31 - of the tower and now in order to make
17:33 - this script easy to use and let's make a
17:35 - static show function
17:43 - all right so here it is we just have a
17:45 - static instance we set it on awake and
17:47 - we have our show static function which
17:50 - in calls the instance - oh this is just
17:52 - so we have this function that is very
17:54 - easy to use now we need to do is call
17:56 - this when we pass the mouse over the
17:58 - tower so back in the editor
18:00 - let's unlike the tower and apply a box
18:03 - Collider onto it all right there's the
18:05 - collider
18:06 - and now we can go into the tower script
18:08 - and in here we can implement our own
18:11 - mouse enter function this gets triggered
18:15 - when the mouse passes over the collider
18:17 - attached to this object so in here let's
18:19 - just go into the upgrade overlay in
18:21 - order to call our show function and pass
18:24 - in our tower alright so just like this
18:27 - it should be working
18:27 - let's test okay here we are as I passed
18:30 - the mouse over any of there you go the
18:32 - overlay shows up alright good now let's
18:34 - just implement the functions for the
18:36 - buttons
18:50 - all right so here it is but awake we
18:53 - simply get the button sprite component
18:54 - and we set the colic function to these
18:56 - connect functions so in the hide reason
18:58 - behind on the upgrade range you simply
19:00 - call the functions to upgrade our tower
19:02 - and then we just have another function
19:03 - or to update the visuals all right so
19:06 - let's test okay so if you're and there's
19:08 - the tower and now place the mouse over
19:10 - yep there you go now we can see the home
19:12 - range all right very nice and we can
19:14 - also increase the range so by clicking
19:16 - the button and there you go the range
19:17 - actually does increase and this one also
19:20 - increases damage so if I spawned some
19:22 - enemies right now and we look at them
19:24 - and here they come and as soon as they
19:26 - get within range yep there you go they
19:27 - start getting shot and they take tons of
19:29 - damage let's keep increasing and there
19:31 - you go a lot more damage and a much
19:34 - bigger range
19:34 - all right so just like this we have our
19:37 - tower fully functioning with its own
19:39 - upgrade overlay awesome now finally
19:41 - let's just make our basic tower spawner
19:43 - now in order to spawn our tower it's
19:45 - going to be very simple we already have
19:47 - our tower all we need new is convert
19:49 - this into a prefab and then spawn that
19:51 - prefab so to make it a prefab just drag
19:53 - it on to the prefabs folder yep there
19:55 - you go and now it's going to the script
19:57 - that we're using to spawn our enemy so
19:59 - this one and in here we can easily add a
20:01 - spawn Tower function so first let's test
20:04 - for the input get mouse button down
20:07 - what's this for the right mouse button
20:11 - and we spawn a tower
20:21 - all right so there it is just like that
20:23 - so we're doing pretty much the same
20:25 - thing that we're always doing so we're
20:27 - in San Shi a ting grabbing the reference
20:29 - by the game assets and responding it on
20:31 - the mouse position which is being
20:33 - validated using our grip okay so that's
20:35 - it very simple and it should be working
20:37 - let's test okay so here we are and we
20:40 - have no towers now let's place the mouse
20:42 - in here and right click any of there we
20:44 - go we have our tower correctly spawned
20:45 - and if we spawn some enemies you don't
20:48 - see that tower is fully working so here
20:51 - they come and as they get within range
20:52 - if there you go the tower starts firing
20:55 - and there you go taking down enemies all
20:57 - right great
20:58 - and again this is working with our nice
21:00 - grid so there you go it's perfectly
21:02 - located in there now let's place another
21:03 - tower right here so right-click and if
21:05 - there you go now we have these two
21:07 - towers and they are individually
21:09 - upgradeable so let's find some more
21:11 - enemies and we hide our gizmos and there
21:15 - you go now taking out that and me that
21:17 - in me and so on any of their going with
21:19 - that very nice so now just two towers
21:21 - are enough to handle these enemies we
21:23 - can spawn a whole bunch more enemies and
21:26 - then we can try upgrading the tower so
21:28 - let's increase the range on this one and
21:30 - this one as well increase damage by
21:32 - quite a bit and these are way too many
21:34 - but yep there you go over here we have
21:36 - our system working so here we have a
21:38 - very nice simple tower defense AI
21:40 - working so we can place towers just by
21:43 - right-clicking and there you go we can
21:45 - place a whole bunch of towers the towers
21:47 - get placed don't look for enemies within
21:49 - range and if there are some then we
21:51 - simply attack them the towers also have
21:53 - a very nice mini upgrade system in order
21:55 - to increase the range as well as the
21:57 - damage so again here it is a very simple
22:00 - tower defense ai mini game thank you to
22:03 - add mix and also thank you to these
22:05 - awesome supporters for making this video
22:06 - possible go to patreon.com/scishow t
22:09 - code monkey to get some perks and help
22:11 - keep the videos free for everyone as
22:13 - long as you can download the project
22:14 - files in utilities from unity code
22:16 - monkey comm so start to the channel for
22:18 - more unity tutorials post any person
22:20 - have it accounts and I'll see you next
22:21 - time
22:23 - [Music]

Cleaned transcript:

this video is sponsored by ad mix in this video we're going to make some simple tower defense AI we're going to have our towers that we can place and as enemies get spawned an approach within the attack range the tower will aim and shoot the towers are also upgradable with expandable range and damage let's begin okay so here is what we're trying to make over here is my tower placed in the map and when I mouse over I could see the attack range of this tower and by pressing a button I can start the enemy wave so the enemy start being spawned and they're going to follow their own path and as they get within the range of the tower the tower starts attacking and firing arrows and the arrows hit the enemies and they get damaged with enough hits the enemies die so I have one tower but I can also easily spawn a whole bunch more towers and the spawning is correctly placed on a grid so we're using the grid system that we created in a previous video and we can visualize it by enabling gizmos there it is here's our grid so it's one another tower right down here and yet there you go now we have our two towers and now we can spawn some more enemies and here they come and as you see the towers are also upgradable so here on the left side we can increase the range and on the right side we can increase the damage so it spawned a bunch more enemies and let's see and yep as soon as I get within range they start getting hit and now they're taking 4548 damage the damage pop ups we're also made in a previous video so check it out and just like this we have some very simple tower defense AI working so you can rightclick to place a whole bunch more towers and now spawn a bunch more enemies and they start coming as they get within range of any of the towers the towers start hitting them and if I want I can upgrade them and so on and so on in order to continue building your games in the long run you need to think about monetization AB mix is a great tool to help you solve that with AD mix you can place unintrusive integrated ads inside of your game so instead of an ugly banner ad you have a billboard right inside your game this is especially useful for monetizing AR and VR content without breaking player immersion and since the ads are less intrusive that leads to a better player experience which leads to higher retention which allows you to make more money so you can keep building your awesome game the tool is extremely easy to use just download the unity plugin and import into your scene you'll see this window where you can select from a variety of sizes and drag and drop the ad mix object into your scene the object is very adaptable so it can fit any surface like something flat or put it around as you can see it's extremely simple to use and having ingame ads is a lot better than annoying banner ads once you've set up all your ads click this button to your website to validate your app once you do don't start generating revenue in under 24 hours so ad mix is an extremely easy to use tool that works better than standard ads unless you start earning revenue immediately go to ad mix start in and download the n mix unity plugin to start earning revenue today thank you to add mix and also thank you to these awesome supporters for making this video possible go to patreon.com/scishow code monkey to get some perks and help keep the videos free for everyone alright so this circle let's get to it okay so here we are in our starring scene all we have is the basic map setup so as you can see the path where they won't take by pressing a button I can spawn some enemies and there you go they get spawned on the corner there and they finally start moving the enemies go through the power through there there and out through there also in here I have a grid setup so if we enable gizmos there you go we can see all of the various grid positions the grid system was fully made in a previous video so check that out and in this case we're just going to use the grid in order to stamp the towers into their position so for example we'll be able to place a tower here one here one here and so on alright so let's begin by making the tower visual here in the project files I have some textures for example this one with a tower let's drag it onto the scene and now let's make a empty game object this will be our main tower and we drag the tower sprite inside of our tower game object so this way we can now easily locate the sprite in order to make sure that it matches with the grid position now let's also add another empty channel game object so an empty one yep and let's call this the projectile suit from position so this is the position where the projectiles will be fired from so in this case let's just locate it right up there at the top of the tower ok so just like this we have a very basic visual setup now let's make the script to handle so let's create a new C sharp script and come with just our tower let's drag it on to the game object and open ok now first let's grab reference to our shoot front position so there it is we just do a transform file and we get the position of that game object so this way we can visually locate it and then we get the position through code and now here let's also capture the mouse click so let's do a perfect boy update inside of our update you just do a simple input get mouse button down left mouse button and just for testing when we click let's use a function from the utilities to spawn a pop up as long as you can download the utilities for free from unity code monkey calm so just like this let's see if it's working okay here we are there's the tower and click and there you go we have our clicks correctly working all right so the tower script is correctly running so now that we have our tower let's fire off a projectile first let's create our projectile so over here I have a simple sprite of a arrow so just drag it onto the scene and yep there's the projectile arrow now let's make a script to control it so we create the new csharp script for projectile arrow and drag the script straight onto it ok now we want to spawn our arrows during runtime so in order to do that let's make our arrow into a prefab so first let's create a folder to form our prefabs and we simply drag the arrow onto it let's rename it PF projectile arrow alright so far so good we have a prefab for the projectile arrow now we want to spawn arrows when we shoot so let's open up the projectile arrow class and in here let's make a simple static function in order to spawn a arrow so private static void called create and in here we want to instantiate you're going to instantiate our PF projectile arrow so naturally in here we need a reference to our prefab and for that over here in the scene I already have a very home phone game assets class this was made in a previous video so this object as you can see it has a bunch of fields a bunch of references and it has this script and this script what it does is we have a static instance and then we have a whole bunch of public fields so in here I can simply add a pony transform for the PF projectile arrow and now back in the arrow script in here I can now access the game assets access these static instance and gravity projectile arrow again I cover the game asset script in detail in another video so check the link in the description so here we can spawn an arrow and let's also receive a vector 340 spawned position so we spawn in there with quaternion identity all right so this should spawn a projectile arrow so for testing let's try to spawn it on the mouse position so first instead of private let's make this public and now go into the tower and then here when you press on your left mouse button let's go into the project down arrow script in order to create a new arrow and a free position let's use the mouse position so here again using another function from the utilities in order to get the mouse little position here is the function in case you want to make it yourself as you can see very simple just grab the world camera and do a screen twirl point on the screen position all right so let's test and see if we see an arrow being in Senshi ated when are you pressing left mouse button the last thing we need is just to film with this reference so we just drag the prefab right in there okay let's test okay here we are and click and there you go there's the arrow correctly spawned right awesome so we have the arrow prefab being correctly spawned in the correct Mouse position now we don't want to spawn it on the mouse position but rather we want to spawn it on the tower and shoot towards a certain position so in this case shoot towards the mouse position so back in the arrow script let's receive a spawn position and then also a vector3 for the target position and now here in our object let's make a setup function just so that we can receive our vector three for the target position and when we create to instantiate and grab the arrow transform then we do get component of this type projectile arrow and then we can call setup and pass in our target position all right so now when we call this function we're going to pass in the spawn and Atari position and now that we have this position all we need to do is make sure that our project our arrow moves towards it so now here we need to ask a question which is how should we move the projector essentially we have two options we can move it manually or we can use the physics system so that's going to depend on your design goals and what you're trying to do with your game here we're going to do the simplest way possible so just manually moving the transform with no physics so just on our private boy update we calculate the direction towards the target position so we have the move direction we move towards the move direction by a certain move speed and after we do let's just check the distance so if we are close enough to the target position then we simply destroy this game object all right so there it is some very simple very basic movement code now we can go back into our tower script and in here now we have two parameters in our function the first one is a spawn position so we're going to use our projectile shoot from position and as the target let's shoot towards the mouse all right so let's test okay so here we are and click any of there you go there's the arrow and correctly goes so let's say click in here and it says it reaches yep it gets the strike all right awesome now we need to fix the speed as well as the rotation so let's do that for the speed let's just increase it and for the rotation let's get the oiler angles all right so there it is for the angles we're using a function to transform a vector three into a Euler angle and here is the function in case you want to make yourself and we just set the Euler angles and since we were working in 2d we only set on D Z okay let's see okay and click any of their yo now we have errors correctly being fired from the tower and towards the target mouse position all right awesome okay so we have our basic tower functionality now let's make it work with enemies now if I'm already set up a simple script in order to spawn some enemies so by pressing a simple key there you go the enemies start being spawn and they start showing up so the script is on this game object here it is here is the script it's very simple all we're doing is first of all making the grid so we have the function to validate it this is just so we can later snap our towers into position and then we just have three different types of waves in different difficulties and on each wave we just find a whole bunch of enemies and in terms of logic all they're doing is blindly following a simple Waypoint so there it is very simple now the enemies are created through this function here it is we're doing pretty much the same thing that we're doing on the projectile arrow so we insensate the enemy prefab and then we do a basic set up and now as the enemies are created here on awake they are added onto a certain enemy list so this is a static list which contains all of the alive enemies and with that over here I have a simple function to get the closest enemy it takes a position and a max range and simply cycles through all the enemies ignores if any of them are still dead and looks for the closest enemy within range so this function is what we're going to use in order to look for the closest enemy to our tower so let's go into our tower script and here let's stop manually firing our projectiles and in here and let's make a function to get the closest enemy now we're going to use the function on the enemy class so get closest enemy for the position passing this transform dart position and now for the max range let's store it in a field so just like this all right so now in our update we can try to get the closest enemy and if it is not know then we have a valid enemy so it's in here that we want to spawn our projectile arrow going to spawn from our shoot position towards the enemy position all right so there it is however like this we're going to have an issue but let's try it out just to see okay here we are and so far it seems good but let's spawn some enemies and here they come and now let's see what happens as they get within range and yep they're going with that that is insane all right so here we are seeing essentially one arrow being fired by every single friend so obviously we don't want to shoot that many arrows so let's add a simple shoot timer so let's make a phasic shoot timer all right so we have a very basic shoot timer coming down with our delta time and if we go under zero then we test if we have an enemy and we reset our shoot timer so there it is very simple let's see okay so here we are now let's spawn some enemies and here they come and as they are within range and there you go the tower start shooting a more manageable amount of arrows all right so far so good so right now there's no damage but the logic is actually working so let's damage our enemies now the enemies already have this damage function it takes in an int for a damage amount and simply spawn some particles and a bunch of things and reduces on the health system so let's use this function let's go back in our projectile and in here we have when the projectile reaches the target position so it's in here that we need to essentially call enemy damage so that means we need to receive a reference to our target enemy so let's go up here and our create instead of receiving a target position let's receive a enemy and we pass around each setup and here we define the target position as the enemy position and now here we can actually call our damage function so here we need the damage amount so let's also receive that all right so we also get the damage amount and in here we use it all right that should do it now back in the tower all we need is the person the enemy reference when spawning our freak out and now we also need the damage amount so let's the final like we did with the range okay we have a damage amount and here just for fun let's randomize it a bit all right that should do it let's test okay here we are and let's spawn some enemies and here they start to come and as the approach yep they start getting shot and there you go just like that they're all being shot and some of them are actually living but yep there we go we have the arrows working awesome okay so here we have our Tower and it's correctly shooting at nearby enemies now let's make a simple mini great system alright so here in the tower we already defined a field for the range and on for the damage amount so it's going to be very easy to manipulate these let's make some functions to do that all right so here let's do very simple functions just modifying our simple fields which again are then using this function and up here in this function now let's go into the editor to make our upgrade visual okay so in here let's create an empty game object let's call this the upgrade openly so this is the object that we're going to place on top of the tower in order to upgrade and inside let's add a sprite with this section here now it's made two buttons to upgrade and one button to close all right so there it is now here for the buttons I'm using the button scrap script which is also part of the code mock utilities it's just a simple sprite base button in order to capture Mouse interactions since this is a sprite it's based on doing breakins so we require a simple Collider alright so here we have our upgrade overlay game object we're essentially going to place this right on top of a tower in order to upgrade that tower now let's make a script for this so a new script and just attach it okay now open it first let's make some very basic show and hide functions so just set the game object to true or false okay and now on the show let's also receive a tower that we're going to show on and when we set it to true we also set the transform doubt position to the tower transform position so it's right on top of the tower and now in order to make this script easy to use and let's make a static show function all right so here it is we just have a static instance we set it on awake and we have our show static function which in calls the instance oh this is just so we have this function that is very easy to use now we need to do is call this when we pass the mouse over the tower so back in the editor let's unlike the tower and apply a box Collider onto it all right there's the collider and now we can go into the tower script and in here we can implement our own mouse enter function this gets triggered when the mouse passes over the collider attached to this object so in here let's just go into the upgrade overlay in order to call our show function and pass in our tower alright so just like this it should be working let's test okay here we are as I passed the mouse over any of there you go the overlay shows up alright good now let's just implement the functions for the buttons all right so here it is but awake we simply get the button sprite component and we set the colic function to these connect functions so in the hide reason behind on the upgrade range you simply call the functions to upgrade our tower and then we just have another function or to update the visuals all right so let's test okay so if you're and there's the tower and now place the mouse over yep there you go now we can see the home range all right very nice and we can also increase the range so by clicking the button and there you go the range actually does increase and this one also increases damage so if I spawned some enemies right now and we look at them and here they come and as soon as they get within range yep there you go they start getting shot and they take tons of damage let's keep increasing and there you go a lot more damage and a much bigger range all right so just like this we have our tower fully functioning with its own upgrade overlay awesome now finally let's just make our basic tower spawner now in order to spawn our tower it's going to be very simple we already have our tower all we need new is convert this into a prefab and then spawn that prefab so to make it a prefab just drag it on to the prefabs folder yep there you go and now it's going to the script that we're using to spawn our enemy so this one and in here we can easily add a spawn Tower function so first let's test for the input get mouse button down what's this for the right mouse button and we spawn a tower all right so there it is just like that so we're doing pretty much the same thing that we're always doing so we're in San Shi a ting grabbing the reference by the game assets and responding it on the mouse position which is being validated using our grip okay so that's it very simple and it should be working let's test okay so here we are and we have no towers now let's place the mouse in here and right click any of there we go we have our tower correctly spawned and if we spawn some enemies you don't see that tower is fully working so here they come and as they get within range if there you go the tower starts firing and there you go taking down enemies all right great and again this is working with our nice grid so there you go it's perfectly located in there now let's place another tower right here so rightclick and if there you go now we have these two towers and they are individually upgradeable so let's find some more enemies and we hide our gizmos and there you go now taking out that and me that in me and so on any of their going with that very nice so now just two towers are enough to handle these enemies we can spawn a whole bunch more enemies and then we can try upgrading the tower so let's increase the range on this one and this one as well increase damage by quite a bit and these are way too many but yep there you go over here we have our system working so here we have a very nice simple tower defense AI working so we can place towers just by rightclicking and there you go we can place a whole bunch of towers the towers get placed don't look for enemies within range and if there are some then we simply attack them the towers also have a very nice mini upgrade system in order to increase the range as well as the damage so again here it is a very simple tower defense ai mini game thank you to add mix and also thank you to these awesome supporters for making this video possible go to patreon.com/scishow t code monkey to get some perks and help keep the videos free for everyone as long as you can download the project files in utilities from unity code monkey comm so start to the channel for more unity tutorials post any person have it accounts and I'll see you next time
