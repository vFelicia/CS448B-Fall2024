With timestamps:

00:00 - in this video you're going to be
00:01 - building Netflix web 3.0 dap using
00:04 - next.js and third web now we're going to
00:06 - be using third web and you're going to
00:07 - learn how to nft get an application
00:10 - using the ethereum blockchain and all
00:12 - these blockchain Technologies so with
00:13 - that said let's just jump straight into
00:15 - the bill all right ladies and gentlemen
00:16 - time to get started with the build so as
00:20 - usual we're going to go ahead and type
00:22 - in and get started with our custom build
00:25 - CLI tool so just pop in your name and
00:28 - email in the opposite order
00:31 - and then all you got to do is start
00:34 - typing Netflix this is the only Netflix
00:36 - builds let's go ahead and get started
00:38 - with with it now straight away it will
00:42 - drive you it will direct you to third
00:45 - web
00:46 - now over here on third web we're just
00:49 - going to straight away dive into setting
00:51 - the project up don't even have to wait
00:53 - up uh wait for our uh CLI tool to finish
00:57 - it's gonna do its thing but we're gonna
00:59 - go ahead and get started creating an
01:02 - addition drop that is going to be the
01:06 - foundation of our nft gating for this
01:09 - project so let's go ahead and use that
01:11 - I'm just going to type in Netflix or
01:13 - something like that
01:15 - and whatever symbol you want to pop in
01:18 - there
01:20 - here you can add the description if you
01:22 - want to but you don't have to and what I
01:25 - like about uh
01:27 - so what I really like about our CLI tool
01:29 - is it actually super efficient and if
01:32 - you go into our project folder you will
01:34 - have already the files that are
01:36 - currently being installed and in the
01:39 - meantime RC light will finish but if if
01:41 - it hasn't finished yet you will already
01:43 - have access to most of these files now
01:46 - in here you have this n
01:48 - logo.png that's what we're going to be
01:51 - using as our logo for
01:55 - uh for the uh NF for the nft drop itself
01:59 - so I'll just pull it in there it's going
02:01 - to be uploaded and you're pretty much
02:04 - good to go you don't have to mess with
02:06 - anything else all you want to make sure
02:08 - is that you are on the girly Network so
02:10 - you want to set that here and you also
02:12 - want to make sure your meta mask wallet
02:14 - is on the girly test Network and you
02:17 - have some eth funds
02:19 - um available so let's go ahead hit
02:22 - deploy right now
02:24 - and as your metamask pops open just go
02:27 - ahead hit confirm you're good to go and
02:30 - also third up just secure the 24 million
02:33 - dollar funding that's pretty clutch now
02:37 - once you can see that little success
02:39 - sign and everything is going to start
02:40 - loading that's when you know your nft
02:43 - project has just got deployed it was
02:46 - that easy it's done you didn't even have
02:48 - to write a single line of code now
02:51 - straight away let's jump into our nfts
02:54 - page and what we'll do here is we'll
02:56 - just Mint one single nft and because
03:00 - this nft is compliant with the ERC 1155
03:04 - standard that means that one nft can
03:07 - have multiple owners and multiple people
03:10 - can claim that one in Ft so that is what
03:13 - we are going to be using as our Gateway
03:16 - and as our access token and access pass
03:19 - to our Netflix app so let's go ahead hit
03:22 - single upload and once again I'm just
03:24 - just going to go ahead and open up my
03:26 - finder window right here
03:28 - let's make it a little smaller and
03:31 - here's your
03:33 - nfd.jif file now this is a custom made
03:36 - bios animation whatever GIF we think it
03:40 - looks pretty cool so we're just going to
03:42 - use this but feel free to use whatever
03:44 - you want I just think it's cool anyways
03:47 - I'm going to name this Netflix access
03:50 - pass or
03:53 - premium
03:55 - access
03:57 - because that sounds better let's be
03:59 - let's be real once again you can add the
04:02 - description but you don't have to no
04:04 - need to add any kind of properties no
04:06 - need to mess with any of this metadata
04:09 - don't worry about it just hit lazy mint
04:11 - we're lazy around here no rush nothing
04:14 - crazy
04:15 - so let's wait for that
04:17 - and there you go my Minima has just
04:19 - opened and I'm gonna hit confirm it's
04:22 - gonna still take a little bit of a time
04:24 - to Mint it you can go ahead speed it up
04:28 - if you want to
04:31 - and then just wait for it now there you
04:33 - go it has just finished minting as you
04:36 - can see it already here now it's still
04:38 - going to load a little gonna fetch it
04:40 - and once you see this little success
04:42 - sign and the side window is going to go
04:45 - away you will have your nft right over
04:48 - here
04:49 - that's it you just minted it now a few
04:52 - more things we will set up and then
04:54 - we'll jump jump straight into vs code
04:56 - which by the way just got opened by the
05:00 - CLI tool once again
05:02 - so let's go ahead hit that guy and what
05:04 - you want to go for is the claim
05:06 - condition so if you don't know how that
05:08 - comes up once again just want to click
05:10 - this right here that page will open up
05:13 - hit claim conditions and it says no
05:15 - claim phase is set so let's go ahead and
05:18 - add one no need to worry about this face
05:21 - Stars just want to make sure that this
05:23 - time
05:24 - this timestamp is actually later that or
05:27 - earlier than or equal to your current
05:29 - time because up until this time frame uh
05:33 - up until this timestamp you will not be
05:36 - able to claim any nfts and you will not
05:38 - be able to use the app
05:41 - so what you want to do is leave most of
05:43 - these on uh on default the only thing uh
05:48 - the only two things that we're going to
05:50 - be changing are these two so first off
05:53 - this one will be one and the second one
05:57 - is going to be Unlimited
05:59 - and then the second one is going to be
06:01 - one as well now I just want to double
06:04 - check that everything is correct over
06:06 - here so
06:08 - let's go through everything how many
06:10 - nfts will you drop in this phase
06:12 - unlimited that is perfect that means
06:14 - unlimited amount of users will be able
06:16 - to claim your nfts second one how much
06:19 - do you afford the nft now you can choose
06:22 - between either zero for just saving your
06:25 - nft but I'm just gonna go with 0.1
06:28 - literally you can go with whatever just
06:30 - you want to make sure that you will have
06:32 - enough funds to Mint a couple of nfts
06:34 - because we're going to Mint and burn a
06:36 - few nfts throughout this build so feel
06:39 - free to just go with one uh or I mean
06:41 - zero
06:43 - you also want to make sure uh the
06:45 - currency is ethereum however you are
06:48 - given the option to do anything and you
06:51 - can also use custom currency also who
06:56 - can claim the nft during this phase for
06:58 - now we're just gonna go in any wallet
07:00 - you can also put a bunch a couple of
07:02 - Wallets on an allow list upload it here
07:05 - and then use that
07:07 - and then have a private uh and I have
07:10 - have a private list of a couple of
07:11 - wallets and then it still is trying to
07:14 - save it so I'm just gonna hit this guy
07:15 - that will pop open my meta mask and then
07:18 - I'm going to go ahead confirm this
07:20 - transaction
07:21 - if you mess something up no worries like
07:24 - don't worry about it you will be able to
07:26 - alter it later on uh just take a mental
07:29 - screenshot of this and just make sure
07:30 - for now all these configurations are
07:33 - matching your configuration so let's
07:36 - just wait for it just wait for this
07:37 - transaction to go through and let's see
07:39 - what do we got afterwards
07:41 - and there you go it says claim phase or
07:45 - saved claim phases whatever you can go
07:48 - ahead close this and let's go final into
07:50 - our vs code I'm going to go ahead full
07:53 - screen this bad boy and open up my
07:56 - terminal let's see what we got here so
07:59 - what I like to do is just have two
08:01 - terminals open just in case first one
08:04 - what I'm gonna do with is I already have
08:06 - my node modules installed so if you
08:08 - don't you can just run yarn and then
08:11 - we'll take care of that by the CLI tools
08:13 - should have done it already
08:15 - um second I'm just gonna say yarn depth
08:18 - and that will spin off my next app so
08:20 - that should be good to go so I'm gonna
08:23 - go ahead and open up a new page in my
08:25 - Chrome paste that guy right there and
08:28 - there it is there's my Netflix app kind
08:32 - of so let's go ahead and enable this uh
08:36 - so now is the time that we actually is
08:37 - going gonna go ahead and start
08:39 - implementing everything you have all the
08:42 - code uh prepared for your convenience so
08:46 - let's go ahead and get started
08:49 - all right so let's actually go ahead and
08:52 - zoom in a little bit over here make
08:55 - things nice and big that's what she said
08:58 - all the time
09:00 - so I'm gonna go into my app.js file and
09:03 - this is where actually we're gonna get
09:05 - started with everything without this
09:07 - not a lot of things are gonna work so
09:10 - you want to make sure that you will use
09:12 - the you will use third web's own uh
09:16 - context provider whatever so what we're
09:19 - gonna say is we're going to import chain
09:21 - ID first and then we're gonna go ahead
09:24 - and import third web provider
09:27 - from
09:30 - uh third Bob
09:32 - whoa
09:37 - [Music]
09:39 - third to have that third up Dash Dev
09:42 - slash react so that is our package
09:47 - and we're gonna go ahead and wrap that
09:49 - around our application so we're gonna go
09:51 - ahead and say third web provider
09:56 - like that go chain ID and instead of
09:59 - rinka b as copilot suggested we're gonna
10:02 - go with girly like that
10:04 - and there is my Auto close tag kicking
10:08 - in and there you go this is how it
10:10 - should look like so you want the third
10:12 - web provider to completely wrap around
10:14 - everything even the app provider which
10:16 - we have given to you for your
10:18 - convenience everything should be inside
10:21 - the third world provider that will
10:23 - ensure that even your contacts will have
10:25 - access to all these things so talking
10:28 - about context
10:31 - we want to we want to make sure that
10:33 - everything will be updated as soon as
10:35 - you connect your wallet so what we're
10:37 - going to do is we're going to go ahead
10:39 - and import it import one thing from
10:42 - again third book we're going to say uh
10:46 - use address and we're going to import it
10:48 - from the same package just like that and
10:51 - while you're at while we're at it we'll
10:53 - use that exact same thing that we just
10:55 - imported to uh save to extract our
10:59 - wallet address that will uh will connect
11:02 - to the application right here and then
11:04 - we're gonna go ahead and update this use
11:06 - state right here with the help of a use
11:09 - effect hook
11:10 - so you can use the use effect snippet
11:13 - right there and whenever address changes
11:16 - what I want to do is set the
11:19 - set the user address
11:21 - paste it right here and then put uh put
11:25 - to whatever the address is that will
11:27 - make sure that whenever I disconnect my
11:29 - application
11:31 - um
11:33 - whenever I disconnect my disconnect my
11:36 - meta mask from my app it will throw me
11:38 - right back onto the login screen and
11:40 - vice versa on the login screen it will
11:42 - throw me back to the app so let's go
11:44 - ahead test that out
11:46 - so let's actually test that
11:49 - so as you can see I have the button
11:51 - already set up but no matter how hard
11:54 - I'm clicking it nothing seems to be
11:55 - happening and
11:57 - you bet on clicking it hard so yeah it
12:01 - doesn't work yet the reason is we have
12:03 - to go into our login.js file and
12:06 - actually import one more thing that is
12:09 - ridiculously easy and
12:12 - I've said it a couple times but I'm
12:14 - still outraged how super easy it is to
12:18 - do everything with her like for real
12:21 - I feel myself I feel like I'm useless so
12:24 - what I'm going to do is use this use
12:26 - metamask that I just imported again from
12:28 - the same Library so use use use metamask
12:32 - say that five times fast
12:34 - and actually remove
12:36 - everything after this guy so there you
12:40 - go that is how you want to set up your
12:42 - function and you're good that should in
12:46 - theory enable everything so just so
12:48 - everything is refreshed I'm gonna go
12:50 - ahead refresh my app and go ahead
12:53 - connect that wallet and this is what you
12:56 - will see this is what you will see
12:58 - because you do not have access to your
13:00 - you do not have this
13:03 - um
13:04 - nft just yet in your wallet let's go
13:07 - ahead and do that right now all right so
13:10 - let's actually go ahead and now claim
13:12 - those nfts and then redirect the user
13:15 - based on whether they have the nfcs or
13:17 - do not let's see what do we got when we
13:20 - connect our meta mask here so that
13:22 - should technically redirect to us to
13:26 - this page so that that's working
13:28 - perfectly nowhere is there
13:32 - all right so we're going to be building
13:34 - on top of this prepared claim nft
13:37 - function that we got right over here but
13:40 - before we do that we'll actually need a
13:43 - helper function so let's create a new
13:45 - file inside of uh utils and it will be
13:48 - create sdk.js
13:51 - now all right so inside of here let's
13:53 - actually go ahead and import third web
13:56 - uh SDK
14:00 - from third web Dash tab uh Slash SDK
14:05 - we don't use no semi columns in here and
14:07 - you also want to go ahead and import
14:09 - ethers from ethers duh now we're gonna
14:14 - export cost the create SDK function that
14:18 - I was talking about earlier and it
14:19 - actually it doesn't have to be async no
14:23 - matter how much
14:25 - um
14:26 - copilot wants it to be and we're going
14:29 - to go ahead and create two
14:32 - um
14:33 - we're going to go ahead and create two
14:35 - uh variables here the first is going to
14:38 - be provider and that'll basically just
14:40 - go ahead and grab the ethereum
14:43 - code snippet that metamask injects into
14:46 - your window and that will generate the
14:49 - provider for us so we're going to say
14:51 - ethers the
14:53 - providers.web three provider like that
14:56 - and then pass in window.etheria and the
14:59 - second one is going to be signer
15:03 - which is going to be the provider dot
15:07 - get
15:08 - signer and that will be a function as
15:11 - far as I'm
15:12 - as far as I know and maybe get rid of
15:16 - all the typos because that's usually
15:18 - helpful
15:19 - and then uh with those oh
15:23 - and then using that signer that we just
15:26 - created we're actually going to generate
15:28 - the SDK so third web
15:31 - SDK Dot from signer like that cast in
15:35 - signer because that's helpful and then
15:37 - passing girly just to specify which
15:39 - network are we talking about
15:41 - and
15:43 - return SDK that's it that's going to be
15:47 - your helper function just double check
15:49 - it nowhere is cool
15:51 - now inside this very little beautiful
15:54 - use effect that we have right over here
15:56 - every single time somebody updates their
15:59 - wallet or disconnects or whatever we're
16:02 - going to run this just for fun so what
16:04 - we're going to do is we'll double check
16:06 - that this ethereum uh object that is
16:11 - being passed a theory their object that
16:14 - is being passed in from metamask to our
16:17 - window actually exists and if it doesn't
16:19 - we want we will return it immediately
16:22 - however it will be helpful if we
16:26 - destructured it from the window first
16:29 - so let's actually do that uh like that
16:32 - so that too works together and in this
16:35 - and only this order if you do it the
16:37 - other way around don't uh you will see
16:39 - errors you can try it but just trust me
16:41 - on that now we're gonna go ahead and get
16:44 - started with we're gonna make this use
16:46 - effect async and what I mean by that is
16:49 - we're just going to have a
16:50 - self-executing function in here
16:52 - uh because and once again you can try it
16:56 - just trust me it's not going to work use
16:58 - effects are not acing so don't anyone
17:01 - don't even worry about that so async
17:04 - function fire that guy off and then open
17:06 - close Brands because that's how it likes
17:08 - to be
17:08 - [Music]
17:10 - now inside of here what we're going to
17:12 - do is we're going to import that SDK
17:15 - file or that SDK thingy that we just
17:18 - generated so create SDK
17:22 - like that and that should in theory
17:24 - import it on the top so if it didn't
17:29 - like autocomplete it for you right there
17:31 - now is your call to action to do so
17:36 - next up
17:38 - next up using that SDK we're going to
17:41 - generate a
17:43 - generate the contract instance so we're
17:45 - going to say await because for whatever
17:47 - reason this returns a promise and it
17:49 - doesn't make sense but that's what it
17:51 - does so promise uh or await SDK dot get
17:57 - addition
17:58 - edit
18:00 - ation
18:02 - drop
18:04 - open close parenths and then you're
18:06 - gonna pass in process dot environment
18:09 - dot next underscore public underscore
18:14 - contract address like that all right now
18:18 - that we got that contract instance we
18:20 - actually going to go ahead and save it
18:22 - inside of our you state that we have
18:25 - just for this let's go ahead and
18:27 - actually take a look at what do we got
18:29 - so in the browser I'm going to go ahead
18:31 - console.log and not put a capital
18:34 - because that usually a better parent
18:35 - that doesn't work so I'm going to go
18:37 - ahead and double check that and if you
18:39 - see something like let me zoom in
18:44 - if you see something like this uh good
18:48 - good job and just to be just to make
18:52 - sure that everything is good to go uh
18:54 - you can also console log the SDK
18:59 - which one is that oh and if you look for
19:02 - a third of a SDK right here and then
19:05 - open that guy and then check signer and
19:08 - it says is sign or true you know you're
19:11 - good if it if you cannot verify that
19:14 - Designer is true you might as well start
19:17 - debugging right now why it's not
19:19 - happening once again this is the
19:21 - contract this is exactly the part where
19:23 - uh where we are generating everything
19:25 - that sign air has to be there if it's
19:28 - not there errors all right so save
19:30 - yourself the headache figure it out now
19:32 - and also might as well let's just get
19:35 - rid of this line because that doesn't
19:37 - have to do anything there so now that we
19:39 - have the construct contract instance
19:41 - initialized we can finally get started
19:45 - and build out this claim nft function so
19:48 - what do we got here
19:50 - uh basically before we do anything we
19:53 - want to make sure that the contract
19:54 - instance exists and the user is signed
19:57 - in so the way we're going to do that is
20:00 - we're going to have a second parentheses
20:02 - in here and we're going to say contract
20:04 - instance like that and and
20:08 - user address
20:10 - and I'm a super big fan of guard Clauses
20:12 - so we're gonna negate this whole thing
20:16 - and then put in put a return behind it
20:18 - okay let me explain contract instance
20:21 - user address both of them hex they exist
20:24 - if none of them exist
20:25 - you can see how uh these are like both
20:29 - falsy values so if you put a building
20:31 - around it and constant login you will
20:33 - see false now
20:36 - when this resolves to true and this
20:39 - resolves to true
20:41 - then both of these are going to resolve
20:43 - to true if any of them don't exist this
20:46 - whole end and situation is going to
20:47 - return a false
20:49 - now if this is this whole thing returns
20:53 - true and then you put an exclamation
20:55 - point in front of it it's going to be
20:57 - false
20:58 - which if this whole thing is going to
21:01 - return true meaning the true is go true
21:04 - it
21:06 - meaning the inner one is true which then
21:08 - turns into false and that is actually
21:10 - false which the whole which which will
21:12 - make the entire if statement true then
21:15 - it will return point is contract
21:18 - instance and user address has to exist
21:20 - otherwise this will return uh this will
21:23 - not run
21:25 - just take a second understand what is
21:28 - written over here
21:29 - um
21:30 - your future self and on technical
21:33 - interviews will thank you for it
21:35 - and once that guard Clause is passed you
21:39 - will have an await here and then you
21:41 - will use the contract instance
21:45 - like that and say claim and then pass in
21:49 - zero and one what's happening there you
21:52 - ask
21:53 - so zero is the token ID let me actually
21:57 - show you that
21:58 - so if we're going to nfcs right here
22:02 - and actually zoom in
22:04 - you can see the token ID is right there
22:06 - right
22:07 - and then this is going to be the amount
22:10 - and I believe there's some sort of
22:13 - documentation around it but for now just
22:15 - believe me that's what it is actually
22:17 - there is a code snippet right here which
22:20 - is like pretty similar but not the exact
22:23 - same
22:24 - and I found that sometimes it has like
22:26 - clunky features but basically that's
22:28 - what you pass in here as well the only
22:31 - difference is we're not passing an
22:33 - address because it is going to be the
22:35 - message sender that will be passed in as
22:37 - the address under the hood
22:39 - so that's what we got going on here in
22:43 - theory that should already be working
22:45 - but
22:46 - we're not going to know this unless we
22:49 - check the balance meaning we're we check
22:53 - that uh the user that is currently
22:56 - logged in actually has a NFC so let's
22:59 - actually do that before we go any
23:00 - further
23:01 - now
23:03 - we're going to use the exact same guard
23:04 - Clause because this function will be
23:06 - running multiple times uh around here
23:09 - and what I'm going to do here is just
23:11 - place this two comments here and let me
23:14 - show you some cool stuff
23:16 - so if your search for balance on this
23:19 - code code page
23:20 - and then actually find this get nft
23:23 - balance right here
23:25 - uh this is what we got here you can go
23:28 - ahead copy this whole thing
23:31 - and
23:33 - paste it right here
23:35 - like that
23:36 - and then instead of wallet address what
23:38 - we're going to say is user address which
23:40 - is the wallet address in this case
23:42 - and then token ID remember it's going to
23:45 - be zero
23:46 - and I just save you some headache
23:49 - and this is what I'm saying when I say
23:51 - uh third web is out making everything
23:54 - outrageously easy
23:57 - so there you go now you will have to
24:00 - kick this check balance every single
24:02 - time you load this app so what we're
24:04 - going to do is we're going to have a
24:06 - second use effect over here
24:08 - like so
24:12 - and instead of user address as suggested
24:15 - by Mr copilot we're going to go for
24:18 - contract instance here
24:21 - in the
24:23 - in the dependency array and we're just
24:26 - going to go ahead and say get balance
24:30 - is it get balance what is it
24:33 - check balance
24:35 - so we're going to fire the check balance
24:37 - function off and something was imported
24:38 - here don't worry about that that was
24:40 - just a mistake of my end so
24:43 - let's revise what which is done here
24:45 - we created the create SDK helper
24:49 - function basically takes the takes
24:53 - everything metamask metamask hat
24:55 - metamask has to offer and then we're
24:57 - we're gonna use that and generate the
24:59 - third of SDK which will grant third web
25:02 - the writer access
25:04 - to your wallet that mean that means that
25:08 - third group will be able to execute
25:10 - transaction on your on your behalf
25:13 - once we're back here in the context
25:15 - we're going to use that and generate a
25:18 - contract instance so that everything is
25:20 - going to be fast and everything and
25:22 - we're not going to take too much time uh
25:26 - wasting all that
25:29 - we're not going to take too much time
25:30 - setting everything up because we have
25:32 - everything ready to go now once that and
25:36 - the uh once that contract instance and
25:38 - the user address meaning the user is
25:41 - logged in exists
25:43 - we're going to go ahead and click using
25:45 - the third of SDK claiming an ft and then
25:49 - double check uh whether the user Has It
25:51 - or Not So in theory we should be ready
25:54 - to go
25:57 - okay
25:58 - let's see what we got here is error it
26:01 - says contract is not defined
26:09 - oh that's probably because here we are
26:13 - trying to use contract instead of
26:14 - contract instance yeah that could be
26:17 - helpful if uh we use the correct
26:19 - terminology there
26:21 - now
26:22 - let's see if I hit this
26:27 - what will happen
26:35 - okay so there you go the claim actually
26:37 - showed up in my metamask because I was
26:40 - uh
26:41 - I couldn't wait so I opened it up but it
26:44 - should technically pop your metamask
26:45 - open and once you hit confirm just wait
26:47 - for it to go through and you should in
26:51 - theory have this beautiful nft in the
26:53 - background enjoy
26:56 - and as you can see it just finished
26:59 - claiming So in theory if I refresh this
27:02 - nothing happens that's perfect
27:05 - so the reason why nothing happens is uh
27:09 - nothing is telling index.js to render
27:12 - out main over here because if you
27:14 - remember if you if we console log uh
27:18 - user nft
27:19 - our user has an ft which actually makes
27:23 - that whole shift happen
27:26 - it will actually return false and the
27:29 - reason for that is we never changed it
27:31 - from its original or like initial value
27:34 - now
27:36 - the way we're going to do that is we're
27:38 - going to go ahead and take this because
27:40 - this will return something we don't need
27:43 - to care about what it returns but what
27:46 - we're going to look for is whether it is
27:49 - more than zero or not
27:51 - now
27:52 - [Music]
27:53 - and also we don't care about the number
27:55 - itself we just need to understand
27:58 - whether if it's true or not so we're
27:59 - going to use the Boolean function uh
28:02 - function method over here we're going to
28:05 - use we're going to call the Boolean on
28:07 - that to uh decide whether we have more
28:11 - or equal to zero nftes like that and
28:14 - once we got that resolved we're just
28:16 - going to set that
28:18 - as the user has an FC and at that point
28:21 - there you go ladies and gentlemen you
28:24 - just uh
28:26 - you just nft gated your Netflix so if
28:29 - that went through and now you see this
28:32 - what you can see on my screen
28:34 - congratulations you just don't have to
28:36 - gated your Netflix uh so next up let's
28:39 - go ahead and make this work because
28:41 - there's some crazy stuff going on here
28:43 - and once we're done with that we're
28:45 - going to go ahead cancel our memberships
28:47 - because it should be an option and with
28:51 - that our app is going to be done
28:53 - all right now as I promised this kind of
28:56 - doesn't really work and that's actually
28:58 - a super simple fix so what I'm going to
29:00 - show you is something called tmdb or you
29:04 - can just go for the movie DB
29:07 - dot o r g
29:09 - so if you search on Google uh for tmdb
29:13 - and then like literally click the first
29:15 - option that is going to take you right
29:17 - here
29:19 - uh to to the movie
29:22 - db.org and then uh you can go ahead and
29:25 - create a new account
29:27 - username password and email that's all
29:29 - it requires but I already have mine so
29:32 - I'm just going to go ahead sign in here
29:34 - with a password
29:37 - and then once you're in
29:39 - it's literally all I use it for there's
29:42 - your
29:44 - there's your profile image
29:47 - so we'll click that and then go into
29:49 - settings right there and then by the way
29:51 - yours might look a little different yeah
29:54 - so this is how it's going to look like
29:55 - on your end because I have this dark
29:57 - Mode app installed anyways turn it off
30:01 - so go ahead click API right there
30:04 - and then this is going to be your API
30:07 - key now don't use mine it's not for you
30:10 - editor blur it
30:13 - anyways copy that and then we can go
30:16 - over into our EnV file and then in here
30:19 - we're just going to go ahead and say
30:21 - next underscore public
30:23 - uh underscore pmdb
30:27 - API key or whatever and then paste it
30:31 - right there
30:33 - now
30:34 - uh once you do once you're done with
30:37 - that go into your uterus and endpoints
30:39 - file and then uh
30:42 - this should
30:47 - these two should actually link up but
30:49 - you will need to restart your app so
30:52 - what we're going to do is bring over the
30:55 - terminal and then restart this app and
30:57 - whatever that's spinning all that false
30:59 - there I'm just going to go ahead and get
31:01 - rid of it so wherever there's console
31:04 - log you guys know how I always remove it
31:06 - so we don't need that thank you
31:10 - [Music]
31:12 - and as
31:15 - as you can see right over here it is
31:19 - actually reading from the EnV file and
31:22 - if you go back to your Chrome everything
31:25 - is loading up so that looks perfect and
31:27 - now the only thing left is canceling our
31:30 - membership so let's go ahead and do that
31:32 - right now all right the final stretch
31:35 - the last function canceling that
31:38 - membership because you realize you don't
31:40 - have time to watch Netflix like any
31:44 - Normie you have
31:46 - stuff to do you gotta get a job at
31:49 - Google and that's busy work so
31:52 - let's go ahead and cancel that
31:54 - membership no one needs to watch Netflix
31:55 - they gotta go bankrupt they are just
31:57 - living off of investor money so that's
31:59 - not helpful for its Society anyways what
32:02 - you want to do is go right here onto
32:05 - Line 47 or whatever line it is in your
32:09 - five because you're probably indent
32:10 - differently than I do
32:13 - um and basically what you will do is
32:15 - have a guard clause for contract
32:18 - instance
32:20 - so return if uh contract instance
32:24 - doesn't exist and
32:28 - um then you're just gonna wait contract
32:30 - instance and we're going to literally
32:32 - burn the nft kind of how
32:37 - I'm not gonna make that joke
32:40 - and we're going to burn the nft so what
32:42 - we were sick what you were going to do
32:44 - is
32:46 - we're going to say burn tokens and we're
32:49 - gonna go ahead and pass in zero as for
32:51 - token ID and one as in one
32:55 - like quantity
32:56 - so one piece of the nft it became
33:00 - awkward don't don't worry about it so
33:02 - that's pretty much it now I just want to
33:05 - make sure that we are
33:08 - we have it connected in our headers so
33:11 - go into your home and header
33:14 - and we should technically have this on
33:16 - click so if you see this right here that
33:18 - should be good to go the CI should have
33:21 - already done it but just double check
33:22 - for
33:24 - safety and let's see what do we got so
33:26 - I'm just gonna go ahead and refresh this
33:28 - guy
33:29 - yep it loads up nice and I'm gonna go
33:32 - ahead hit cancel
33:34 - okay my meta mask has popped up that's
33:36 - good sign hit confirm
33:40 - and now let's wait for good old
33:43 - girly to execute our transaction
33:49 - all right as you can see it's uh already
33:52 - burnt
33:54 - burnt down the only thing left of it is
33:57 - all about the only thing left are ashes
34:00 - so
34:01 - let's refresh and there you go now
34:04 - you're thrown back outside of the gate
34:06 - and you can go ahead and now crush your
34:09 - journey as a developer and go to Google
34:11 - work for a ton of money and live your
34:14 - life however you want to
34:16 - so basically that was the build thank
34:18 - you so much for joining along I hope you
34:20 - liked it if you did Smash that like
34:22 - button subscribe to the channel and do
34:24 - all kinds of stuff that helps us with
34:26 - the YouTube algorithm because that's
34:27 - good thank you for coming I'll see you
34:29 - in the next one peace

Cleaned transcript:

in this video you're going to be building Netflix web 3.0 dap using next.js and third web now we're going to be using third web and you're going to learn how to nft get an application using the ethereum blockchain and all these blockchain Technologies so with that said let's just jump straight into the bill all right ladies and gentlemen time to get started with the build so as usual we're going to go ahead and type in and get started with our custom build CLI tool so just pop in your name and email in the opposite order and then all you got to do is start typing Netflix this is the only Netflix builds let's go ahead and get started with with it now straight away it will drive you it will direct you to third web now over here on third web we're just going to straight away dive into setting the project up don't even have to wait up uh wait for our uh CLI tool to finish it's gonna do its thing but we're gonna go ahead and get started creating an addition drop that is going to be the foundation of our nft gating for this project so let's go ahead and use that I'm just going to type in Netflix or something like that and whatever symbol you want to pop in there here you can add the description if you want to but you don't have to and what I like about uh so what I really like about our CLI tool is it actually super efficient and if you go into our project folder you will have already the files that are currently being installed and in the meantime RC light will finish but if if it hasn't finished yet you will already have access to most of these files now in here you have this n logo.png that's what we're going to be using as our logo for uh for the uh NF for the nft drop itself so I'll just pull it in there it's going to be uploaded and you're pretty much good to go you don't have to mess with anything else all you want to make sure is that you are on the girly Network so you want to set that here and you also want to make sure your meta mask wallet is on the girly test Network and you have some eth funds um available so let's go ahead hit deploy right now and as your metamask pops open just go ahead hit confirm you're good to go and also third up just secure the 24 million dollar funding that's pretty clutch now once you can see that little success sign and everything is going to start loading that's when you know your nft project has just got deployed it was that easy it's done you didn't even have to write a single line of code now straight away let's jump into our nfts page and what we'll do here is we'll just Mint one single nft and because this nft is compliant with the ERC 1155 standard that means that one nft can have multiple owners and multiple people can claim that one in Ft so that is what we are going to be using as our Gateway and as our access token and access pass to our Netflix app so let's go ahead hit single upload and once again I'm just just going to go ahead and open up my finder window right here let's make it a little smaller and here's your nfd.jif file now this is a custom made bios animation whatever GIF we think it looks pretty cool so we're just going to use this but feel free to use whatever you want I just think it's cool anyways I'm going to name this Netflix access pass or premium access because that sounds better let's be let's be real once again you can add the description but you don't have to no need to add any kind of properties no need to mess with any of this metadata don't worry about it just hit lazy mint we're lazy around here no rush nothing crazy so let's wait for that and there you go my Minima has just opened and I'm gonna hit confirm it's gonna still take a little bit of a time to Mint it you can go ahead speed it up if you want to and then just wait for it now there you go it has just finished minting as you can see it already here now it's still going to load a little gonna fetch it and once you see this little success sign and the side window is going to go away you will have your nft right over here that's it you just minted it now a few more things we will set up and then we'll jump jump straight into vs code which by the way just got opened by the CLI tool once again so let's go ahead hit that guy and what you want to go for is the claim condition so if you don't know how that comes up once again just want to click this right here that page will open up hit claim conditions and it says no claim phase is set so let's go ahead and add one no need to worry about this face Stars just want to make sure that this time this timestamp is actually later that or earlier than or equal to your current time because up until this time frame uh up until this timestamp you will not be able to claim any nfts and you will not be able to use the app so what you want to do is leave most of these on uh on default the only thing uh the only two things that we're going to be changing are these two so first off this one will be one and the second one is going to be Unlimited and then the second one is going to be one as well now I just want to double check that everything is correct over here so let's go through everything how many nfts will you drop in this phase unlimited that is perfect that means unlimited amount of users will be able to claim your nfts second one how much do you afford the nft now you can choose between either zero for just saving your nft but I'm just gonna go with 0.1 literally you can go with whatever just you want to make sure that you will have enough funds to Mint a couple of nfts because we're going to Mint and burn a few nfts throughout this build so feel free to just go with one uh or I mean zero you also want to make sure uh the currency is ethereum however you are given the option to do anything and you can also use custom currency also who can claim the nft during this phase for now we're just gonna go in any wallet you can also put a bunch a couple of Wallets on an allow list upload it here and then use that and then have a private uh and I have have a private list of a couple of wallets and then it still is trying to save it so I'm just gonna hit this guy that will pop open my meta mask and then I'm going to go ahead confirm this transaction if you mess something up no worries like don't worry about it you will be able to alter it later on uh just take a mental screenshot of this and just make sure for now all these configurations are matching your configuration so let's just wait for it just wait for this transaction to go through and let's see what do we got afterwards and there you go it says claim phase or saved claim phases whatever you can go ahead close this and let's go final into our vs code I'm going to go ahead full screen this bad boy and open up my terminal let's see what we got here so what I like to do is just have two terminals open just in case first one what I'm gonna do with is I already have my node modules installed so if you don't you can just run yarn and then we'll take care of that by the CLI tools should have done it already um second I'm just gonna say yarn depth and that will spin off my next app so that should be good to go so I'm gonna go ahead and open up a new page in my Chrome paste that guy right there and there it is there's my Netflix app kind of so let's go ahead and enable this uh so now is the time that we actually is going gonna go ahead and start implementing everything you have all the code uh prepared for your convenience so let's go ahead and get started all right so let's actually go ahead and zoom in a little bit over here make things nice and big that's what she said all the time so I'm gonna go into my app.js file and this is where actually we're gonna get started with everything without this not a lot of things are gonna work so you want to make sure that you will use the you will use third web's own uh context provider whatever so what we're gonna say is we're going to import chain ID first and then we're gonna go ahead and import third web provider from uh third Bob whoa third to have that third up Dash Dev slash react so that is our package and we're gonna go ahead and wrap that around our application so we're gonna go ahead and say third web provider like that go chain ID and instead of rinka b as copilot suggested we're gonna go with girly like that and there is my Auto close tag kicking in and there you go this is how it should look like so you want the third web provider to completely wrap around everything even the app provider which we have given to you for your convenience everything should be inside the third world provider that will ensure that even your contacts will have access to all these things so talking about context we want to we want to make sure that everything will be updated as soon as you connect your wallet so what we're going to do is we're going to go ahead and import it import one thing from again third book we're going to say uh use address and we're going to import it from the same package just like that and while you're at while we're at it we'll use that exact same thing that we just imported to uh save to extract our wallet address that will uh will connect to the application right here and then we're gonna go ahead and update this use state right here with the help of a use effect hook so you can use the use effect snippet right there and whenever address changes what I want to do is set the set the user address paste it right here and then put uh put to whatever the address is that will make sure that whenever I disconnect my application um whenever I disconnect my disconnect my meta mask from my app it will throw me right back onto the login screen and vice versa on the login screen it will throw me back to the app so let's go ahead test that out so let's actually test that so as you can see I have the button already set up but no matter how hard I'm clicking it nothing seems to be happening and you bet on clicking it hard so yeah it doesn't work yet the reason is we have to go into our login.js file and actually import one more thing that is ridiculously easy and I've said it a couple times but I'm still outraged how super easy it is to do everything with her like for real I feel myself I feel like I'm useless so what I'm going to do is use this use metamask that I just imported again from the same Library so use use use metamask say that five times fast and actually remove everything after this guy so there you go that is how you want to set up your function and you're good that should in theory enable everything so just so everything is refreshed I'm gonna go ahead refresh my app and go ahead connect that wallet and this is what you will see this is what you will see because you do not have access to your you do not have this um nft just yet in your wallet let's go ahead and do that right now all right so let's actually go ahead and now claim those nfts and then redirect the user based on whether they have the nfcs or do not let's see what do we got when we connect our meta mask here so that should technically redirect to us to this page so that that's working perfectly nowhere is there all right so we're going to be building on top of this prepared claim nft function that we got right over here but before we do that we'll actually need a helper function so let's create a new file inside of uh utils and it will be create sdk.js now all right so inside of here let's actually go ahead and import third web uh SDK from third web Dash tab uh Slash SDK we don't use no semi columns in here and you also want to go ahead and import ethers from ethers duh now we're gonna export cost the create SDK function that I was talking about earlier and it actually it doesn't have to be async no matter how much um copilot wants it to be and we're going to go ahead and create two um we're going to go ahead and create two uh variables here the first is going to be provider and that'll basically just go ahead and grab the ethereum code snippet that metamask injects into your window and that will generate the provider for us so we're going to say ethers the providers.web three provider like that and then pass in window.etheria and the second one is going to be signer which is going to be the provider dot get signer and that will be a function as far as I'm as far as I know and maybe get rid of all the typos because that's usually helpful and then uh with those oh and then using that signer that we just created we're actually going to generate the SDK so third web SDK Dot from signer like that cast in signer because that's helpful and then passing girly just to specify which network are we talking about and return SDK that's it that's going to be your helper function just double check it nowhere is cool now inside this very little beautiful use effect that we have right over here every single time somebody updates their wallet or disconnects or whatever we're going to run this just for fun so what we're going to do is we'll double check that this ethereum uh object that is being passed a theory their object that is being passed in from metamask to our window actually exists and if it doesn't we want we will return it immediately however it will be helpful if we destructured it from the window first so let's actually do that uh like that so that too works together and in this and only this order if you do it the other way around don't uh you will see errors you can try it but just trust me on that now we're gonna go ahead and get started with we're gonna make this use effect async and what I mean by that is we're just going to have a selfexecuting function in here uh because and once again you can try it just trust me it's not going to work use effects are not acing so don't anyone don't even worry about that so async function fire that guy off and then open close Brands because that's how it likes to be now inside of here what we're going to do is we're going to import that SDK file or that SDK thingy that we just generated so create SDK like that and that should in theory import it on the top so if it didn't like autocomplete it for you right there now is your call to action to do so next up next up using that SDK we're going to generate a generate the contract instance so we're going to say await because for whatever reason this returns a promise and it doesn't make sense but that's what it does so promise uh or await SDK dot get addition edit ation drop open close parenths and then you're gonna pass in process dot environment dot next underscore public underscore contract address like that all right now that we got that contract instance we actually going to go ahead and save it inside of our you state that we have just for this let's go ahead and actually take a look at what do we got so in the browser I'm going to go ahead console.log and not put a capital because that usually a better parent that doesn't work so I'm going to go ahead and double check that and if you see something like let me zoom in if you see something like this uh good good job and just to be just to make sure that everything is good to go uh you can also console log the SDK which one is that oh and if you look for a third of a SDK right here and then open that guy and then check signer and it says is sign or true you know you're good if it if you cannot verify that Designer is true you might as well start debugging right now why it's not happening once again this is the contract this is exactly the part where uh where we are generating everything that sign air has to be there if it's not there errors all right so save yourself the headache figure it out now and also might as well let's just get rid of this line because that doesn't have to do anything there so now that we have the construct contract instance initialized we can finally get started and build out this claim nft function so what do we got here uh basically before we do anything we want to make sure that the contract instance exists and the user is signed in so the way we're going to do that is we're going to have a second parentheses in here and we're going to say contract instance like that and and user address and I'm a super big fan of guard Clauses so we're gonna negate this whole thing and then put in put a return behind it okay let me explain contract instance user address both of them hex they exist if none of them exist you can see how uh these are like both falsy values so if you put a building around it and constant login you will see false now when this resolves to true and this resolves to true then both of these are going to resolve to true if any of them don't exist this whole end and situation is going to return a false now if this is this whole thing returns true and then you put an exclamation point in front of it it's going to be false which if this whole thing is going to return true meaning the true is go true it meaning the inner one is true which then turns into false and that is actually false which the whole which which will make the entire if statement true then it will return point is contract instance and user address has to exist otherwise this will return uh this will not run just take a second understand what is written over here um your future self and on technical interviews will thank you for it and once that guard Clause is passed you will have an await here and then you will use the contract instance like that and say claim and then pass in zero and one what's happening there you ask so zero is the token ID let me actually show you that so if we're going to nfcs right here and actually zoom in you can see the token ID is right there right and then this is going to be the amount and I believe there's some sort of documentation around it but for now just believe me that's what it is actually there is a code snippet right here which is like pretty similar but not the exact same and I found that sometimes it has like clunky features but basically that's what you pass in here as well the only difference is we're not passing an address because it is going to be the message sender that will be passed in as the address under the hood so that's what we got going on here in theory that should already be working but we're not going to know this unless we check the balance meaning we're we check that uh the user that is currently logged in actually has a NFC so let's actually do that before we go any further now we're going to use the exact same guard Clause because this function will be running multiple times uh around here and what I'm going to do here is just place this two comments here and let me show you some cool stuff so if your search for balance on this code code page and then actually find this get nft balance right here uh this is what we got here you can go ahead copy this whole thing and paste it right here like that and then instead of wallet address what we're going to say is user address which is the wallet address in this case and then token ID remember it's going to be zero and I just save you some headache and this is what I'm saying when I say uh third web is out making everything outrageously easy so there you go now you will have to kick this check balance every single time you load this app so what we're going to do is we're going to have a second use effect over here like so and instead of user address as suggested by Mr copilot we're going to go for contract instance here in the in the dependency array and we're just going to go ahead and say get balance is it get balance what is it check balance so we're going to fire the check balance function off and something was imported here don't worry about that that was just a mistake of my end so let's revise what which is done here we created the create SDK helper function basically takes the takes everything metamask metamask hat metamask has to offer and then we're we're gonna use that and generate the third of SDK which will grant third web the writer access to your wallet that mean that means that third group will be able to execute transaction on your on your behalf once we're back here in the context we're going to use that and generate a contract instance so that everything is going to be fast and everything and we're not going to take too much time uh wasting all that we're not going to take too much time setting everything up because we have everything ready to go now once that and the uh once that contract instance and the user address meaning the user is logged in exists we're going to go ahead and click using the third of SDK claiming an ft and then double check uh whether the user Has It or Not So in theory we should be ready to go okay let's see what we got here is error it says contract is not defined oh that's probably because here we are trying to use contract instead of contract instance yeah that could be helpful if uh we use the correct terminology there now let's see if I hit this what will happen okay so there you go the claim actually showed up in my metamask because I was uh I couldn't wait so I opened it up but it should technically pop your metamask open and once you hit confirm just wait for it to go through and you should in theory have this beautiful nft in the background enjoy and as you can see it just finished claiming So in theory if I refresh this nothing happens that's perfect so the reason why nothing happens is uh nothing is telling index.js to render out main over here because if you remember if you if we console log uh user nft our user has an ft which actually makes that whole shift happen it will actually return false and the reason for that is we never changed it from its original or like initial value now the way we're going to do that is we're going to go ahead and take this because this will return something we don't need to care about what it returns but what we're going to look for is whether it is more than zero or not now and also we don't care about the number itself we just need to understand whether if it's true or not so we're going to use the Boolean function uh function method over here we're going to use we're going to call the Boolean on that to uh decide whether we have more or equal to zero nftes like that and once we got that resolved we're just going to set that as the user has an FC and at that point there you go ladies and gentlemen you just uh you just nft gated your Netflix so if that went through and now you see this what you can see on my screen congratulations you just don't have to gated your Netflix uh so next up let's go ahead and make this work because there's some crazy stuff going on here and once we're done with that we're going to go ahead cancel our memberships because it should be an option and with that our app is going to be done all right now as I promised this kind of doesn't really work and that's actually a super simple fix so what I'm going to show you is something called tmdb or you can just go for the movie DB dot o r g so if you search on Google uh for tmdb and then like literally click the first option that is going to take you right here uh to to the movie db.org and then uh you can go ahead and create a new account username password and email that's all it requires but I already have mine so I'm just going to go ahead sign in here with a password and then once you're in it's literally all I use it for there's your there's your profile image so we'll click that and then go into settings right there and then by the way yours might look a little different yeah so this is how it's going to look like on your end because I have this dark Mode app installed anyways turn it off so go ahead click API right there and then this is going to be your API key now don't use mine it's not for you editor blur it anyways copy that and then we can go over into our EnV file and then in here we're just going to go ahead and say next underscore public uh underscore pmdb API key or whatever and then paste it right there now uh once you do once you're done with that go into your uterus and endpoints file and then uh this should these two should actually link up but you will need to restart your app so what we're going to do is bring over the terminal and then restart this app and whatever that's spinning all that false there I'm just going to go ahead and get rid of it so wherever there's console log you guys know how I always remove it so we don't need that thank you and as as you can see right over here it is actually reading from the EnV file and if you go back to your Chrome everything is loading up so that looks perfect and now the only thing left is canceling our membership so let's go ahead and do that right now all right the final stretch the last function canceling that membership because you realize you don't have time to watch Netflix like any Normie you have stuff to do you gotta get a job at Google and that's busy work so let's go ahead and cancel that membership no one needs to watch Netflix they gotta go bankrupt they are just living off of investor money so that's not helpful for its Society anyways what you want to do is go right here onto Line 47 or whatever line it is in your five because you're probably indent differently than I do um and basically what you will do is have a guard clause for contract instance so return if uh contract instance doesn't exist and um then you're just gonna wait contract instance and we're going to literally burn the nft kind of how I'm not gonna make that joke and we're going to burn the nft so what we were sick what you were going to do is we're going to say burn tokens and we're gonna go ahead and pass in zero as for token ID and one as in one like quantity so one piece of the nft it became awkward don't don't worry about it so that's pretty much it now I just want to make sure that we are we have it connected in our headers so go into your home and header and we should technically have this on click so if you see this right here that should be good to go the CI should have already done it but just double check for safety and let's see what do we got so I'm just gonna go ahead and refresh this guy yep it loads up nice and I'm gonna go ahead hit cancel okay my meta mask has popped up that's good sign hit confirm and now let's wait for good old girly to execute our transaction all right as you can see it's uh already burnt burnt down the only thing left of it is all about the only thing left are ashes so let's refresh and there you go now you're thrown back outside of the gate and you can go ahead and now crush your journey as a developer and go to Google work for a ton of money and live your life however you want to so basically that was the build thank you so much for joining along I hope you liked it if you did Smash that like button subscribe to the channel and do all kinds of stuff that helps us with the YouTube algorithm because that's good thank you for coming I'll see you in the next one peace
