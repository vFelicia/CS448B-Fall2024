With timestamps:

00:00 - your boy sunny how's it going guys great
00:02 - to see you all
00:04 - guys i hope you are excited because
00:06 - today we're gonna be building the google
00:08 - clone
00:09 - what's absolutely insane about this
00:12 - build is that it's
00:13 - actually the google clone
00:17 - so this is not real google by the way so
00:20 - that's one thing i wanted to tell you
00:21 - guys
00:22 - this is not real google so for example
00:25 - let me just type in
00:26 - tesla and hit enter and take a look at
00:29 - this
00:30 - boom all the tesla stuff is open if i
00:32 - type in react
00:33 - and hit enter it didn't even refresh
00:38 - and you're here exactly and this is
00:41 - actually using the google
00:43 - uh custom search api so this is actually
00:46 - real google results so you can see even
00:48 - there we want like four trillion results
00:50 - that come up it actually shows you uh
00:52 - the exact value so it's actually pulling
00:54 - this from google guys
00:56 - yo i'm about to go on stack overflow and
00:58 - find value in an
00:59 - array damn
01:03 - it's actually oh yeah it's a working
01:05 - it's actually a fully
01:06 - working uh google cloud so this is a
01:10 - sick though
01:10 - i hope everyone's excited yep so there
01:14 - you guys go
01:14 - this is the app that we're going to be
01:16 - building i hope you guys are actually
01:18 - excited about this google
01:20 - uh clone i we have some people and
01:22 - they're like
01:23 - whoop whoop it's the sound of the police
01:25 - by adam
01:27 - and uh hajira is like yo
01:30 - hi everyone bojack is pumped felipe says
01:34 - clean
01:34 - he likes the app the build yeah
01:38 - and priyanshu says hey qazi you won't
01:40 - believe it but because
01:42 - of your hold on let me actually put this
01:45 - here
01:45 - holy crap he goes uh because of your
01:48 - skills i landed a job that's worth five
01:50 - lakh
01:51 - rupees that's actually 700 us dollars
01:55 - so that's actually no joke oh
01:59 - and he goes absolute thanks can't
02:01 - appreciate you more
02:03 - and he goes best part being that i'm
02:05 - only 14 years old
02:16 - that is actually huge wow
02:18 - congratulations priyanshu
02:22 - for you brother this is amazing guys
02:25 - keep showing up
02:26 - keep watching this banger content and
02:28 - your skills are going to go to the next
02:30 - level super pumped about this
02:33 - now with that
02:36 - dang we have over 500 people live we're
02:39 - actually about to hit 600 people live
02:41 - guys by the way if you are liking this
02:43 - right so let me actually just show you
02:45 - so if we type in tesla
02:47 - you know tesla let's just do tesla
02:48 - stocks
02:50 - let's do elon musk guys this is a google
02:53 - clone
02:53 - this is not real google all right
02:56 - and um this is massive
02:59 - so this is what we're going to be
03:01 - building if you guys are excited about
03:03 - this build
03:05 - what do they have to do sunny what can
03:07 - they do to help us out and
03:08 - reach out to so many more people
03:12 - all we need guys from you guys is that
03:14 - if you're enjoying this you find value
03:16 - in it
03:17 - just go ahead and smash that thumbs up
03:20 - button guys for us and this will help
03:21 - the video get out to as many people
03:23 - as possible yes so go ahead and just
03:27 - smash that button
03:28 - we worked um sunny worked really hard
03:31 - actually
03:32 - on this build and there are some amazing
03:34 - things that you're going to be learning
03:35 - in this build and we're going to share
03:37 - all of them
03:38 - with you in just a second all right so
03:41 - for sunny
03:42 - go ahead smash that like button uh thank
03:44 - you for the first donation
03:46 - and let's start talking about what uh
03:48 - this project is gonna cover so sunny
03:50 - what are we covering in this i know you
03:52 - said we're gonna be using context api
03:54 - which is kind of like
03:55 - redux and people are gonna be learning
03:56 - about that type of concept what else are
03:59 - we going to be covering
04:01 - so we're going to be using material ui
04:04 - for
04:04 - the icons and a lot of the design work
04:07 - so let me just pop that in
04:09 - so icons like this okay got it
04:12 - exactly those icons are coming straight
04:14 - from material ui which is google's
04:16 - design library
04:17 - and we're also going to be using react
04:19 - router so this is going to be something
04:20 - super powerful and useful
04:21 - for you guys to learn and this is how we
04:24 - go from the search
04:25 - page to that search results page right
04:28 - so we go how we go from this page
04:29 - to that search results page um and then
04:33 - we're going to be actually using an
04:34 - external api today so we're using
04:36 - google's custom
04:37 - search api and that's how we're getting
04:39 - all of that crazy functionality
04:41 - that you guys are seeing right now when
04:44 - you search something and you're actually
04:45 - pulling
04:46 - live information from google yeah so
04:48 - we're using actual google's official api
04:50 - and we're going to show you guys how to
04:51 - do that
04:52 - uh and then we're also actually we're
04:53 - actually doing something we've never
04:55 - done in a build
04:56 - before we're building our own custom
04:58 - hook today guys
05:00 - which is super cool all right so we all
05:02 - know about react hooks and if you don't
05:04 - you're going to find out what react
05:05 - hooks are in today's video
05:07 - but we actually went ahead and built our
05:08 - built our own custom hook today
05:10 - which is going to help us pull that
05:12 - information from the servers
05:15 - nice beautiful and then are we using
05:18 - firebase for anything yes
05:22 - so we're using five to set up the app we
05:24 - need to use fiber to set up the app so
05:26 - that we can connect it to google
05:28 - and then we're going to be using
05:29 - firebase deployment uh voice hosting to
05:32 - deploy our
05:39 - wow that is that those are a lot of
05:42 - things that we're going to be covering
05:43 - is there anything else that
05:45 - actually should add to the list sunny or
05:47 - this cover pretty much everything we're
05:48 - going to learn
05:50 - uh this is pretty much everything this
05:52 - is pretty much everything yeah
05:54 - oh we've got a bunch of flexbox guys a
05:56 - huge amount of flexboxes in today's
05:58 - video as well
05:59 - yep beautiful we just broke over 620
06:03 - concurrent viewers
06:04 - thank you guys for jumping on here
06:06 - subscribe to the channel if you want to
06:08 - take your developer skills to the next
06:10 - level
06:10 - land jobs make more income
06:14 - also make sure to like this video smash
06:18 - that like button
06:19 - it's free for you and it sends the video
06:21 - out to many many other people who are
06:23 - trying to become developers
06:24 - our goal for this year is to produce 5
06:28 - 000
06:29 - developers who get full-time jobs and
06:32 - our goal next year is going to be 10
06:34 - 000 developers or more that have
06:36 - full-time jobs we want to
06:38 - help produce the most amount of
06:39 - developers on the planet
06:41 - that's the number one goal and i also
06:44 - want to say
06:45 - this channel we clever programmers all
06:48 - of us the clever programmer fam
06:50 - is officially the number one fastest
06:53 - growing coding channel
06:54 - in the world it's faster than
06:58 - all it's growing faster officially now
07:00 - than any coding channel out there
07:03 - and that is a fact
07:07 - so indeed yep awesome
07:10 - so let's get going so should we jump
07:14 - straight into it sunny
07:16 - let's do it dude so right now
07:19 - to get started we are using vs code live
07:22 - share guys
07:23 - we're using vs4 livestream we've been
07:25 - doing this in every single one of our
07:26 - builds
07:27 - um so that me and kazi can code side by
07:29 - side together
07:31 - uh so to get started what we need to do
07:33 - is go ahead and pull up
07:35 - the command line so let's go ahead and
07:37 - open up vs liveshare
07:38 - when you're ready quasi
07:42 - uh think you're muted
07:45 - yup i should be good to go now can you
07:47 - hear me oh yeah
07:48 - yeah yeah now i can okay beautiful dope
07:51 - opened nice and let's get let's get a
07:54 - terminal up and running so let me type
07:55 - in
07:56 - and try and do ls and i'll request read
07:59 - right
08:01 - there we go so there we go and now we're
08:04 - going to do
08:04 - we're just going to create this app yep
08:08 - we're going to create the react app and
08:10 - this is going to be
08:12 - called the google clone
08:15 - yep okay and then i'm going to cd into
08:18 - this once
08:19 - it's done oh by the way thank you previn
08:21 - for your
08:22 - donation so that's pretty awesome so
08:25 - let's i'm gonna actually highlight that
08:27 - right over here
08:28 - and prevent says sunny and cosy enjoy
08:30 - your teaching style greatly
08:32 - thank you for excellent content all
08:33 - these react bills are inspiring
08:35 - keep the fire going nice thank you so
08:39 - much for everyone we appreciate you
08:41 - yeah awesome all right so we one
08:44 - while this is setting up guys we use
08:46 - create react app to get oh we got
08:47 - another donation nice
08:49 - shree swaminathan banasari i don't know
08:52 - if i spend that right because as you
08:53 - guys are awesome
08:54 - your live videos keep me motivated and
08:56 - energized nice
08:57 - damn thank you for that donate damn this
09:00 - is lit
09:01 - we're already starting out with banger
09:03 - donations thank you guys so much
09:05 - really appreciate it okay so this is
09:08 - where wow yep the app is being made
09:12 - right now so what should we do should we
09:14 - do firebase right now
09:17 - yeah so we're gonna need to set up
09:18 - firebase so that we can connect it to
09:20 - google
09:21 - and so that we can host it online okay
09:24 - cool
09:25 - yep all right here we go
09:34 - all right so we just hit over 750 views
09:37 - this is
09:37 - 750 live people right now that's crazy
09:40 - dude
09:40 - yeah that is absolutely insane
09:45 - so now guys you want to all you need is
09:47 - a gmail account to get started you want
09:48 - to go ahead and hit
09:50 - the add project button put in something
09:52 - like google dash clone
09:53 - to get started and then it will ask you
09:55 - if you need analytics you can just take
09:57 - yes or no depending on if you're
09:58 - interested in that but it's not really a
10:00 - major thing at that point
10:02 - but once this goes it hasn't get done
10:03 - the reason why we need to do this now is
10:05 - because this is we're not using the
10:06 - database today we're going to be using
10:07 - the
10:08 - hosting so this is actually going to be
10:10 - this is how you guys saw the website
10:12 - and this is how kazi was able to access
10:14 - the website from all the way in la
10:15 - because i deployed it online and then
10:17 - you can basically go ahead and go on it
10:19 - right
10:20 - so and then also we this will allow us
10:23 - to get
10:23 - our google custom search api key which
10:26 - we're going to be using
10:27 - later on in the build so now that that's
10:29 - done
10:30 - we'll still connecting a bunch of stuff
10:33 - uh
10:34 - we're still waiting for the build to
10:35 - finish and yeah perfect just finished
10:37 - nice yeah so let's go ahead and set up
10:39 - yeah
10:40 - all right so let's go ahead and i'm
10:43 - gonna go
10:44 - uh no we're done at this point on
10:46 - firebase got it okay we'll come back to
10:48 - this later
10:49 - all right awesome oh thank you for oh
10:51 - man this is freaking
10:53 - epic efosa just dropped a five
10:56 - euro donation and what did he say sunny
11:01 - he says i have seen tutorials but this
11:04 - takes everything to a whole new level
11:05 - keep popping in these legendary projects
11:07 - you guys are priceless
11:08 - we are massively appreciated that's a
11:11 - huge donation and
11:12 - that's insane nice yeah thank you
11:15 - brother
11:15 - appreciate that um all right so this is
11:19 - the build and
11:20 - yeah one thing i do want to let you guys
11:23 - know
11:23 - is if you want to take your training to
11:26 - the next
11:27 - freaking level then we have something
11:29 - really special for you
11:31 - uh make sure you guys go ahead and open
11:33 - up a new chrome
11:34 - tab right now and register for this okay
11:38 - so this is something you should just
11:39 - open up and register for we have a epic
11:42 - training
11:43 - uh top three mistakes to avoid when
11:45 - becoming a javascript developer so i
11:47 - know a lot of you guys are trying to
11:48 - learn
11:49 - because let's just talk for one second
11:50 - why you're doing this why you're even
11:52 - building this project
11:53 - and a lot of you people that are
11:55 - learning this is you want to add it to
11:57 - your portfolio
11:58 - and most of the people that we know
12:01 - sunny are trying to use these
12:02 - programming skills to get jobs
12:05 - just like that person we had earlier
12:08 - right that jumped on and said hey i
12:09 - landed 6 700
12:10 - client so the whole point of this
12:14 - training that i have put together for
12:15 - you guys
12:16 - is so you can see the roadmap from the
12:19 - coding skills to actually making an
12:21 - income so definitely go register for
12:23 - that training
12:24 - and check it out i think it's going to
12:26 - bring you a lot of value and with that
12:28 - said let's keep going and man we just
12:30 - had
12:30 - two other amazing donations thank you
12:34 - yeah i'm gonna just pop them up and the
12:36 - first one it says you guys are amazing
12:38 - for me
12:39 - so meet yep yeah you deserve to be on
12:42 - time
12:44 - nice and the next one can you guys
12:46 - please build a medium clone
12:48 - yeah sure we can that's actually a good
12:50 - idea but on the way to build everything
12:52 - yeah really good idea yeah medium is
12:55 - actually a good idea we should do that
12:57 - yeah okay so let's keep let's keep it
13:00 - now going
13:01 - so boom we got the firebase uh set up
13:03 - correctly
13:04 - and this is the app over here on the
13:06 - right hand side and then on the left
13:08 - hand side the
13:09 - thing is built so i'm just going to cd
13:11 - into it and then we can go ahead and get
13:13 - started now what i'm going to do is i'm
13:14 - going to do npm
13:15 - start npm start so on the right hand
13:19 - side
13:20 - the local host should pop up with the
13:22 - react logo spinning
13:24 - that essentially just means that our app
13:26 - that we just built on localhost is up
13:29 - and running
13:29 - and then we're gonna do a few things for
13:31 - the regular cleanup process that we
13:33 - normally
13:34 - do so here we can see this app
13:37 - is already running you guys now what i
13:40 - want to do
13:40 - is grab the logo grab the test and grab
13:44 - this test file here
13:45 - and delete it because just to clean it
13:47 - up a little bit because we don't need
13:48 - that right now
13:50 - and then we're going to go in app.js and
13:53 - it'll delete this line
13:54 - because that's what it's giving an error
13:55 - about and
13:57 - then let me go full screen here real
14:00 - quick
14:00 - and we're going to delete everything
14:02 - that's inside of the headers and
14:04 - i'm just going to go h1 and here
14:07 - we are building so let's say hey clever
14:10 - programmer fam let's build
14:15 - the google clone
14:20 - another donation thank you so much psy
14:22 - really appreciate it i'm gonna hit save
14:24 - here
14:24 - yeah and you guys can see that this app
14:28 - is now up and running it is showing
14:31 - our everything that we want to look at
14:33 - but what it's
14:35 - not what i don't like about it right now
14:36 - is that it has some styling kind of
14:38 - built into it so
14:39 - this is like centered and then also we
14:42 - have a little margin
14:43 - so we can just go ahead and get rid of
14:45 - that so let's go over here
14:48 - into our app.css and i'm just going to
14:50 - remove everything
14:52 - now when i hit save you'll see that i
14:54 - got removed of that centers you know how
14:56 - i was centering it and now it's just all
14:58 - left aligned and kind of default
15:00 - and then i'm going to go in my index.css
15:03 - and i want to remove that invisible
15:04 - margin
15:05 - that uh react often adds by default a
15:09 - margin of 10.
15:10 - so we're gonna just go ahead and give it
15:12 - give everything
15:14 - a margin of zero like this wow lots of
15:17 - donations come in
15:18 - you guys thank you gopi thank you romel
15:19 - for five dollars
15:21 - and um thank you buscar so i'm going to
15:25 - hit save right
15:26 - here now you saw that that
15:30 - margin actually just went away okay so
15:32 - i'm going to hit undo here so just
15:34 - just so you guys can actually see it
15:36 - happen live
15:37 - right and you saw that that margin now
15:39 - is gone
15:40 - i'm going to go back to my app.js for
15:44 - bam naming convention i'm going to lower
15:45 - case this
15:46 - i'll write that down here and with that
15:49 - said
15:49 - we're pretty much now ready to get
15:51 - started this is usually the cleanup
15:53 - process that you guys have seen
15:54 - multiple times already and uh let's
15:57 - continue
16:00 - that was dope dude that was a nice
16:02 - little entry there
16:03 - so nice once you get to this point guys
16:07 - you have a really nice clean starting
16:09 - template that you can work from so
16:11 - once we have this up and running what i
16:13 - like to do is
16:14 - get everything essentially sort of
16:16 - drafted out right so everything kind of
16:18 - should be a little bit drafted out
16:20 - so let's go ahead and just do a rough
16:23 - draft so we're going to have two pages
16:24 - in this app
16:25 - all right we're going to have a the home
16:27 - page and this is going to be
16:29 - the one with the search on right so this
16:32 - is
16:33 - going to be the one with the search on
16:34 - so start and then we're gonna before you
16:35 - continue before you continue
16:37 - all right so i just want to visualize
16:39 - everything sunny is saying because
16:41 - i love visuals and i hope you guys enjoy
16:44 - them as much as i do
16:45 - but sunny is about to like write all the
16:47 - components out here
16:48 - in comments so the home
16:51 - over here is essentially you're
16:53 - referring to this entire page here right
16:57 - exactly yeah got it okay so that's the
17:00 - home
17:00 - exactly i'm on board with you so let's
17:02 - go to the next thing
17:05 - yeah they're awesome so we have the home
17:07 - page and then we have the
17:09 - search page right so the search page
17:12 - like this right
17:13 - and this is going to be essentially the
17:15 - results page
17:16 - so this is where we have all the search
17:17 - results so let me type in something like
17:20 - uh let's type in joe rogan
17:25 - okay so let's go back boom i think
17:29 - you might have done the api i know i
17:31 - know
17:32 - yeah i think so yeah yeah
17:35 - right so in that case yes so this will
17:37 - be the results page that you would see
17:39 - right so this would be
17:40 - definitely pretty much it so it's this
17:42 - page let's just show it over here so
17:44 - let's i mean let me
17:45 - write in joe rogan so it'll be this page
17:47 - over here you guys
17:49 - it'll be this page okay yeah
17:56 - okay quite good there's so cause you're
18:05 - second broadcast just donated two
18:07 - dollars and he says this is awesome
18:09 - waiting for the day you guys do twitch
18:12 - let's go nice let's go
18:16 - we've also actually opened the other day
18:18 - we've been difficult to
18:20 - so you're interested in that no sunny
18:23 - your internet is
18:24 - acting really bad my friend you might
18:27 - want to just
18:28 - quit kill your video and i don't know
18:31 - maybe tell people in your house to stop
18:32 - using internet
18:36 - still bad now i can hear the audio a
18:39 - little bit better right
18:42 - what i might do is if we take questions
18:44 - for five minutes like just do five
18:46 - minutes and then i'll uh i'll quickly
18:48 - restart
18:48 - you're actually you're actually sounding
18:50 - a lot better right now by the way
18:52 - maybe maybe later maybe try it later
18:55 - yeah all right cool so we've got the
18:57 - search page now here
18:59 - um so we have the homepage and the
19:00 - search page and also kazi if you go back
19:02 - to
19:03 - the deployed version now uh-huh
19:07 - so let's go and then refresh it but do a
19:09 - hard refresh
19:11 - okay hard refresh
19:14 - yeah now what i've done is i've got a
19:18 - masked response so if you type in
19:20 - something like um
19:23 - type in tesla for example and hit enter
19:27 - yep nice go ahead and hit so you see now
19:30 - i'm pulling like rather than doing it's
19:32 - not going to be tesla but what i did
19:34 - is i pulled a like a default response so
19:38 - it doesn't ping the database every time
19:39 - it's ping the google search
19:41 - so that way you can develop with this
19:43 - result so this is just a sort of good
19:44 - idea
19:45 - for yeah just so you guys know like
19:47 - behind the scenes why this is happening
19:49 - is we're
19:49 - doing it in a way where we have a limit
19:51 - of a hundred requests
19:53 - and what actually has happened is people
19:55 - who are watching this live stream right
19:56 - now
19:57 - when on the url that's up there and spam
20:00 - the search
20:01 - to be over 100 requests and that's why
20:04 - it didn't open earlier so that's why
20:05 - sunny just built that like mass response
20:07 - and now it's good to go
20:09 - and viral just dropped freaking damn
20:12 - thank you viral that is huge
20:14 - viral just said we're all just dropped
20:17 - ten dollar donation
20:18 - thank you so much oh nice
20:21 - yeah that's insane thank you dude thank
20:25 - you
20:25 - yep and 800 viewers let's go 800 viewers
20:29 - and 800 likes
20:31 - damn you guys are freaking amazing
20:34 - guys you are representing that clever
20:36 - programmer family that clever programmer
20:38 - squad
20:39 - you know the deal smash that like button
20:41 - please and let's get this video out
20:43 - and let's bang it over 800 let's break
20:46 - that thousand concurrent viewers
20:50 - okay guys nice so you see now that's the
20:53 - screen we're talking about so the
20:55 - results page right yeah
20:57 - and what we do is
21:02 - i love you but we're gonna do a few
21:04 - minutes of questions so you guys drop in
21:06 - your questions sonny just please refresh
21:08 - your computer or restart your computer
21:11 - and we will be good to go you guys
21:13 - all right we got another two dollar
21:15 - donation by priyank
21:17 - and priyank says waiting for a dropbox
21:19 - clone
21:20 - love all their series thank you so
21:23 - much appreciate that
21:27 - so let me go ahead and do this so guys
21:29 - start dropping in
21:31 - let me go here and go let me take them
21:34 - out here real quick
21:36 - and i will
21:40 - okay so let's go
21:45 - boom
21:45 - [Music]
21:51 - uh sumeet says your ai face detection
21:54 - app landed me a
21:55 - great high paying job and just changed
21:58 - to a new company
22:00 - holy crap that is absolutely amazing
22:04 - damn um for some reason
22:07 - i am unable to zoom in which is fine
22:11 - which is fine okay guys
22:13 - so drop your questions that you have
22:15 - below i want to start taking on your
22:17 - questions and answering
22:18 - for you guys people are asking when are
22:20 - you going to make a uber clone we're
22:22 - going to be making an uber clone
22:24 - um at some point it's not on the agenda
22:27 - for this upcoming week
22:28 - but definitely today we just want to
22:30 - focus in on this google app that you
22:32 - guys
22:32 - are going to be building and then we
22:34 - have a few big clones lined up one of
22:36 - them is discord
22:38 - because i know a lot of you guys keep
22:39 - asking for it and then we're also gonna
22:42 - add new technologies like node.js
22:45 - node.js
22:46 - and start teaching as mongodb and i know
22:49 - a lot of you are trying to learn those
22:51 - skills as well
22:54 - behind me right now is actually frankie
22:57 - and
22:58 - i want to show you guys a little bit
22:59 - behind the scenes some of you guys might
23:01 - have known that we got a new place
23:03 - so this is actually our current studio
23:05 - setup
23:06 - right now so this is a new place that we
23:09 - have gotten
23:10 - for a clever programmer we call this the
23:12 - team cp mansion we can probably call it
23:14 - the high pass or the drip house
23:17 - you know but
23:20 - this is the studio and we're trying to
23:22 - set it up and this is actually where i'm
23:24 - live streaming and even if you see right
23:25 - now i have that cup of coffee that you
23:27 - saw in that photo
23:28 - i have that in my hands right now so
23:30 - this picture was actually taken today
23:34 - and um damn everybody says that's so
23:38 - sick
23:38 - thank you hey all right i think
23:42 - yo boy he's back that's better
23:46 - maybe just uh you can leave the video on
23:49 - yes give it a go all right let's go
23:52 - let's go so sunny is back i'm showing
23:55 - them my studio right now
23:57 - so let me actually share the screen with
23:58 - you too so you can see it
24:01 - so this is what the studio is looking
24:02 - like right now dude check it out
24:06 - oh dope holy crap that's nice dude yeah
24:09 - it's gonna get better but all right so
24:12 - let's keep going i was basically showing
24:15 - yo pick up homie that you said that yeah
24:18 - yeah
24:18 - that's hilarious it's kind of like
24:21 - how i imagine your ghost would be if you
24:24 - actually died
24:25 - i think you would speak to me through
24:26 - react comments that's how i think you
24:29 - would talk to it
24:30 - and like i would just see like you know
24:32 - freaking i would be like
24:33 - coding and react and i'll just see
24:35 - something like this and be like
24:38 - you're the best quasi i'm still here bro
24:41 - i'm still here
24:45 - you'll be like you're you'll be like
24:47 - you're not following them
24:48 - holy crap i was gonna just say that bro
24:50 - i was just gonna say that
24:54 - oh i peeked and broke some people's ears
24:56 - probably
24:57 - that's so funny damn good guys we're
25:00 - back
25:01 - all right we're back we're back to jump
25:03 - in the build let's go
25:05 - so talk to me what's going on here and
25:07 - let's keep going bro
25:09 - let's do it so now what we do is usually
25:12 - guys
25:12 - what we do is we i like to drop things
25:14 - out uh in a component layout right
25:17 - but today what we're doing is i'm
25:18 - actually going to show you how you can
25:20 - lay out your
25:21 - project in like in in pages and in
25:24 - components
25:25 - right so this is going to help you break
25:26 - down your projects and it's actually how
25:28 - they do it
25:29 - in a professional environment so it's
25:31 - going to be some good experience for you
25:32 - guys today
25:33 - so let's go ahead and go to our uh
25:36 - folders i can't see our photos for some
25:38 - reason oh man
25:39 - all right let's see this should load in
25:40 - a sec um
25:42 - yeah so kazi if i'll just run you
25:44 - through this as and i'll rejoin
25:45 - the live share so basically go to uh you
25:48 - want to go to
25:49 - your folders in source add a folder
25:52 - called pages
25:54 - all right yes i had a photo called
25:57 - i'll call i call i'll add a folder
25:59 - called pages
26:01 - all right dude all types of technical
26:03 - difficulties are happening it's kind of
26:04 - crazy my tv just shut down
26:06 - frank you want to help with that and uh
26:08 - all right let's keep going
26:10 - so paige it says it says the live i
26:12 - think you need to
26:14 - uh restart a live show because it says
26:17 - the host is offline yeah but basically
26:19 - we're gonna have pages
26:20 - and then we're gonna have components and
26:22 - we're to break things down into
26:24 - separate pages and break things down
26:25 - into separate components
26:28 - can you not you can't see it right now
26:30 - because it is live
26:31 - shared so maybe it just says it says the
26:34 - host of the work say
26:35 - seems to be offline so i think maybe
26:36 - what we'll do is if you press command
26:38 - shift p
26:39 - all right so let me actually go ahead
26:41 - and do that command shift p
26:43 - and let me add you to this screen over
26:45 - here so everybody can see oh let me
26:47 - actually flip that around boom
26:48 - boom there we go all right so command
26:51 - shift p and what else
26:53 - yeah and then type in uh live live share
26:56 - and stop
26:58 - so i think it'll be live share and stop
27:02 - okay so stop stop collaboration session
27:05 - exactly and then restart another one
27:09 - that should kick you out somebody just
27:11 - said they landed a job by the way from
27:13 - our like
27:14 - face detection clone no way
27:20 - see all right there we go oh nice i just
27:22 - got your message
27:23 - there you go so let's go ahead
27:27 - yes i can see yeah all right we survived
27:30 - that
27:31 - we survived that hopefully you're good
27:33 - are you in here
27:35 - i am in here i'm waiting for the file
27:38 - tree to load up
27:39 - it says opening session and we're in hey
27:42 - nice
27:42 - beautiful yeah there you go you got
27:44 - pages right here yep
27:46 - nice so with that said
27:49 - let's go ahead and do the following so
27:52 - let me get rid of this comment
27:54 - there we go so uh now we've got pages
27:56 - right so what we're going to do now is
27:58 - we're going to have pages and we're also
27:59 - going to create another folder and i'm
28:01 - going to call this one
28:02 - components right so this one's going to
28:04 - be pages and components
28:06 - and the reason why we're going to do
28:07 - this so if you
28:10 - open up your uh yeah there we go we've
28:11 - got pages and components
28:13 - and the components are going to be
28:14 - reusable components like we know right
28:16 - so we're going to refer to things like
28:18 - the search bar as a component
28:20 - but the pages are going to refer to the
28:22 - home page
28:23 - and the search page right so this is
28:26 - something which they actually do in
28:27 - professional environments
28:28 - i thought it was a good project to show
28:29 - you on this right so the first one that
28:31 - we're going to do is we're going to
28:32 - actually go ahead and build the home
28:34 - page
28:34 - right so i'm going to go ahead and type
28:36 - in home and what we're going to do is
28:38 - cause if you want to build the first
28:39 - component and then after that we can
28:41 - streamline it
28:43 - so let's go ahead and create a new
28:45 - component and we're going to call this
28:46 - one home
28:48 - all right home.js boom yeah
28:51 - and then we're going to use a really
28:52 - nice trick here guys and it's called
28:54 - rfce and it's from es7 snippet so that's
28:57 - an extension
28:58 - that's going to allow you to do what
28:59 - kazi just did and you just type in rfce
29:02 - and you get all of that code just pop
29:03 - out for you so once we do that we're
29:05 - going to basically get used to setting
29:07 - our apps up like this so it's going to
29:08 - be
29:09 - cast name home i'm also going to create
29:11 - a see a
29:12 - css file for this we're going to say
29:13 - import
29:15 - home dot css like that right and then
29:18 - i'm going to create
29:19 - the css file for this so notice how this
29:22 - one actually went into the wrong folder
29:25 - so what we're going to do now to fix
29:26 - this
29:27 - is uh we are going to go ahead and move
29:30 - this so we're going to go ahead and move
29:32 - these two so because if you want to do
29:34 - it so it's visual
29:35 - do what move home and home.css those two
29:38 - files
29:39 - push them into pages all right
29:42 - there we go push them yeah and then
29:45 - click move
29:46 - uh-huh yeah and the reason why we're
29:49 - doing this guys is because it's actually
29:50 - a page
29:51 - right it's not a component it's a page
29:52 - so it is a component but if we're
29:54 - referring to it
29:55 - as one of the pages on on our site so
29:57 - that's that done
29:59 - and what we can do now is go back to
30:00 - app.js and go ahead and import this
30:02 - so i can go ahead and import this like
30:05 - so so i go here and i say import
30:08 - um i think you have to follow me again
30:09 - quasi i'm in app.js now
30:13 - say import home from home like this
30:16 - right
30:17 - so now we have the component being
30:18 - pulled in and let's go ahead and double
30:20 - check that it's actually working so we
30:22 - can say h1
30:23 - so i haven't got my snippets which is
30:24 - fine i say h1 this
30:26 - is home page right like this
30:30 - right and if i save that now we go to
30:32 - 3000
30:33 - let's go ahead and see what's happening
30:35 - here so we can see ahead so now it's
30:37 - saying there's a problem because in the
30:38 - import now we have to do this we have to
30:40 - say
30:41 - forward slash pages home right
30:44 - and we save it there we go nice nice
30:48 - okay right so this is the home right
30:51 - and then what we're gonna also do is
30:52 - have a search page right so we're gonna
30:54 - have a home page and a search page
30:55 - we can leave the search page for now so
30:57 - let's go ahead and build some
30:58 - functionality
30:59 - uh so that way we can get everything up
31:00 - and running uh and then we'll go ahead
31:02 - and so is this technically
31:04 - still a component like home yes yep so
31:07 - it's still a component
31:08 - but your folder structure changes and
31:10 - this is what they kind of
31:11 - do in in production builds so you would
31:14 - have a pages folder
31:16 - and the reason why i thought it was good
31:17 - to bring up because in our coaching
31:18 - course a lot of students ask
31:20 - about this so i think it would be really
31:22 - valuable for everyone
31:24 - um to see another hold on
31:27 - jared says i am proud he goes i'm proud
31:30 - to be
31:31 - one among the 5 000 members who landed a
31:34 - full-time job
31:35 - love you clever programmers um dude
31:37 - that's insane
31:38 - i think we just hit a thousand likes
31:40 - dude damn
31:42 - thank you guys we are at forty dollars
31:44 - in revenue on this
31:46 - a stream thank you guys so much for that
31:48 - that is huge
31:50 - we are over a thousand likes and uh
31:52 - we're so pumped because one of our big
31:54 - goals is to get 5 000 people to become
31:57 - developers this year and then
32:01 - next year we want it to be 10 000 or
32:03 - more people to become full-time
32:04 - developers so this
32:05 - is a huge uh this is a huge
32:07 - accomplishment for us thank you
32:09 - for sharing that yeah that's insane love
32:11 - that
32:12 - right so now what we're going to do is
32:14 - in the home page
32:16 - in the home component we're going to go
32:17 - ahead and basically draft out what the
32:19 - home page is
32:20 - right so let's go ahead and do this so
32:23 - now i'm inside the
32:25 - um oops what's going on here so i'm
32:27 - inside the home.js
32:29 - one sec can you see that quasi so let me
32:31 - go ahead and reconnect
32:34 - yeah we'll give it two secs it's just
32:35 - doing a reconnect all kinds of tech
32:37 - today we're fighting against the skies
32:40 - it's
32:41 - a sync issue but we'll get past it it's
32:44 - all good
32:45 - it's impressive how much tech is coming
32:47 - in how many issues we're having
32:50 - exactly all right so you've got the home
32:51 - page now so what we're going to do
32:53 - is in the home page of google we have a
32:56 - header
32:57 - and we have a body right so the header
32:59 - so if we go ahead and pop open our
33:00 - deployed version kazi so let's pop open
33:04 - okay
33:04 - so let's open up the deployed version
33:06 - right here okay
33:07 - so what i'm going to do is draft it out
33:09 - now so we have a header so i'm going to
33:11 - go ahead and say
33:12 - div home um i'm just going to score
33:15 - header
33:16 - like this oh okay i don't get my
33:17 - snippets so i'm going to say div
33:20 - and this one's going to have a class
33:21 - name of home header
33:24 - like this right and then i'm also going
33:27 - to have
33:28 - a another one which is going to be home
33:30 - body
33:31 - right so this is going to be two
33:32 - sections of the web page and we can draw
33:34 - circles around this to show them
33:36 - uh what we're visually doing here so
33:39 - we have the header which is where we see
33:41 - about store
33:42 - gmail images and the user avatar
33:46 - and then we have everything below it so
33:49 - anything below it we're going to call it
33:51 - the body
33:52 - and anything in that top banner we're
33:54 - gonna be referring to
33:55 - as the header okay so hold on just so
33:58 - i'm gonna draw it out visually
33:59 - and sometimes if you're speaking about
34:00 - these things just you can let me know to
34:02 - draw
34:02 - the visuals i'll be your [ __ ] on the
34:04 - live stream that's okay yeah
34:06 - so i i actually did say uh but i'll say
34:09 - it again
34:10 - just wake me up like yo cause you're not
34:12 - paying attention because i'm looking at
34:13 - the
34:14 - comments and everything so when you say
34:16 - header this is what you're referring to
34:18 - yeah
34:19 - yeah exactly okay beautiful and then
34:22 - when you say
34:22 - body is it on everything underneath
34:25 - there
34:26 - so it's this yeah everything underneath
34:29 - we're referring to as the body
34:30 - got it yeah now i always talk about
34:34 - containerizing things because containers
34:36 - allow us to start things easily right
34:38 - so at the top we have like a header left
34:40 - which has about and store
34:42 - and on on the top right we have uh
34:44 - header right so i'm going to go ahead
34:46 - and create
34:47 - and i love this comment by the way this
34:49 - guy goes how goes
34:51 - alert investment the moment these two
34:54 - create a company put
34:55 - all your money and enjoy your retirement
34:57 - within five years
34:59 - hey that's what we're talking about guys
35:01 - that is what we're talking about
35:03 - that's actually 100 uh true like i feel
35:06 - that if we just went hard dude like real
35:09 - talk
35:10 - like we just went all in i do think a
35:12 - lot of people can just invest and retire
35:15 - yeah i think so we can make we can make
35:18 - tipple come alive
35:19 - yeah we will go we go public on the
35:23 - stock market
35:24 - yeah yeah nice so we've got
35:27 - um the header left and header right so
35:29 - here i mean
35:31 - we make tin dev and we're a lot like
35:33 - we're live company
35:35 - yeah exactly tinder oh yeah was it
35:38 - tinder and there's another one
35:39 - um oh yeah two that's so funny
35:43 - all right so we've got a class name here
35:44 - and i'm going to do header left so home
35:46 - underscore underscore header
35:48 - left oops left and then i'm going to
35:51 - copy this
35:52 - so i'm going to go ahead and copy this
35:53 - and i'm going to do header right
35:55 - right so these are going to be basically
35:57 - imagine we're drawing mini containers so
35:59 - now we've got one mini container in the
36:00 - header left and one mini container
36:02 - header right
36:02 - okay then what we're going to do is
36:04 - inside of here we're going to have two
36:06 - links
36:06 - so this is going to be the first link
36:09 - which is going to say that we're going
36:10 - to have two links here
36:11 - and then we're gonna have a link link so
36:14 - this is gonna be the gmail link
36:16 - the images link and then the icon
36:20 - the icon and then the avatar right so
36:23 - i'm gonna go ahead and draft this out so
36:24 - we've got the avatar after that
36:26 - right so how do we get this working now
36:28 - so
36:29 - uh we're going to need a few things to
36:31 - get these links we're going to have to
36:32 - use something called react router
36:34 - and to get these icons and avatars we're
36:36 - going to have to use something called
36:37 - material ui
36:39 - so we're gonna have to install a bunch
36:40 - of dependencies at this point
36:42 - and we do this once and we don't have to
36:43 - do it again so kazi let's go ahead
36:45 - and install material ui to begin with
36:53 - uh you're muted quasi
36:56 - material ui so we gotta do npm install
36:59 - uh you material ui core so i'm just
37:02 - gonna go here
37:03 - open up a new terminal cd in here anyway
37:06 - just
37:07 - paste this and install now next up what
37:10 - we need to do is we need to go to icons
37:12 - now once we're inside here cert click to
37:15 - search the full list of icons
37:18 - and here are going to be all your icons
37:20 - now one more
37:21 - install you guys need to do is if you
37:23 - open up you can open up another one or
37:25 - just wait for the first one to finish
37:27 - change the chord icons this will get you
37:30 - all the
37:30 - icons that you're going to use and why
37:32 - are we using these icons
37:34 - these icons are going to be used for
37:36 - this mic
37:38 - symbol here this search one that right
37:41 - gallery view
37:42 - and a few other things so that's why
37:44 - we're going to need this
37:45 - yeah even the buttons that you saw there
37:47 - where it says google search and i'm
37:48 - feeling lucky are actually being pulled
37:50 - from material ui so they get that nice
37:52 - little ripple effect
37:53 - ah nice so these buttons are coming from
37:55 - material ui so this is not material ui
37:57 - icons but
37:58 - it's still material ui yup
38:01 - dope okay so got it this is how you
38:03 - install it you guys once your
38:04 - installation is done
38:05 - you should be good to go exactly now
38:09 - because you want to show them how we can
38:10 - so
38:11 - yeah also you can just go here and this
38:14 - is the code that you can just copy and
38:16 - paste
38:16 - and you can search for the icons just by
38:18 - typing in whatever you're really looking
38:20 - for so for example here
38:21 - if i want the search i go here type in
38:24 - search hit enter
38:25 - this comes up copy this code go back to
38:27 - my app paste it in
38:29 - right over here and then i can actually
38:31 - use it
38:32 - exactly and that's how when you see me
38:34 - importing a bunch of like icons and
38:36 - stuff like that
38:36 - that's where we're getting them from so
38:38 - if you do get lost at any point
38:40 - know that that's how we found those
38:41 - icons right so with that said
38:43 - we now have material ui so i can go
38:46 - ahead and pop in
38:47 - the icon and the avatar so the icon uh
38:50 - actually before we do that
38:51 - let's go ahead and do one more step so
38:53 - we need to set up react router to get
38:54 - these links
38:55 - all right so i need a few links on the
38:57 - top um so let's go ahead and uh so if
39:00 - you go to react rear on google
39:02 - uh huh let's do it so
39:07 - okay
39:10 - yep so reactor uh and then you're gonna
39:12 - click on web and
39:14 - there should be i think it's yeah there
39:15 - we go in npm install react we're
39:17 - done that's the one we need
39:20 - dope
39:23 - all right and while that's loading what
39:25 - we can do is we can go ahead and
39:26 - actually write the rest of the code so
39:28 - heading over to app.js react requires
39:31 - that we set up something beforehand
39:33 - right and it's very simple how we use
39:34 - react through
39:35 - what we do is we essentially wrap our
39:37 - app in something called a router
39:39 - right so we need to import the required
39:40 - dependencies so at the top of the file
39:42 - i'm going to go ahead and pull this in
39:44 - so we have a bunch of dependencies that
39:46 - we put in at this point so we've got the
39:48 - router the switch and the route
39:50 - right and then what we do is everything
39:52 - inside of our app right everything
39:53 - inside of our app
39:54 - we're essentially going to go ahead and
39:57 - pop the following in so i'll explain
39:59 - exactly what we're doing here and i'll
40:00 - do it step by step so we basically first
40:03 - need to add a router
40:05 - right so we first need to add a router
40:07 - and then basically everything is going
40:08 - to go inside of that router
40:11 - so everything goes inside the rear at
40:12 - this point right then
40:14 - what we're going to do is we are going
40:17 - to
40:18 - add a switch because basically what we
40:21 - actually allows us to do is
40:22 - it allows us to render certain
40:24 - components based on
40:26 - if uh based on the route that we're in
40:28 - so at this point i'm going to add a
40:29 - switch
40:30 - here like this and then i'm going to add
40:33 - the roots
40:33 - so the roots that we're interested in
40:35 - are the following ones
40:37 - so this these two roots right so i can
40:39 - go ahead and get rid of this
40:41 - now what i've done here guys is very
40:43 - simple so i'm going to go ahead and
40:44 - assume that here we will say
40:46 - is this is the search page so let's go
40:48 - ahead and do
40:49 - this is the search
40:54 - page and i will show you exactly what
40:57 - we've done here so if you did get lost
40:58 - i'll explain what's happening
41:00 - right so let's go ahead and save this
41:03 - and we'll save this file
41:06 - nice so because this go ahead and open
41:09 - up localhost
41:12 - nope oh localhost okay okay
41:15 - whenever you see that i want to go to
41:17 - the command line
41:19 - nice so now we've got the homepage right
41:21 - but you see what we did is it says
41:23 - if your route is at the forward slash so
41:25 - if your route is at the
41:27 - home page right so we have forward slash
41:29 - which refers to the home page
41:30 - then it's going to render the home
41:32 - component right now if
41:34 - we go to forward slash search it will
41:36 - render
41:37 - this component so in this case i've just
41:39 - got h1 where it says this is a search
41:40 - page
41:41 - so cause if you want to go ahead and add
41:43 - a forward slash search to the url
41:49 - so i had a full slash search a
41:53 - a see that right and it's it's instant
41:56 - right
41:57 - yeah it's instant so super fast yeah
42:01 - super super fast and what we can do now
42:03 - is any component that sits inside here
42:06 - so we're talking root
42:08 - we're talking the home component the
42:09 - search page component we can use
42:11 - something called react router links
42:13 - inside of that component right so let's
42:15 - go ahead and go back to home
42:17 - now what do i mean by react rear links
42:19 - so let's go ahead and import
42:21 - the the correct thing that we need so we
42:23 - need the link
42:24 - from reactor or dom and this is actually
42:27 - a
42:27 - really really powerful piece of tech now
42:30 - guys so i'm going to go ahead and
42:31 - replace
42:31 - this link right here and i'm going to
42:34 - say the first link
42:35 - goes to the about page i think it was
42:38 - the about page
42:40 - like this right so we do this and then
42:43 - if i go ahead and sorry if i go ahead
42:45 - and basically what this is going to do
42:46 - is it basically replaces
42:48 - it's like an a tag so it's like a link
42:50 - right but it's just like a
42:52 - react ruler link so here if i just write
42:54 - about and then hit
42:55 - save and if we go to the let's just go
42:59 - to forward slash causes let's get rid of
43:00 - the
43:01 - search
43:05 - nice so you see there's a link now right
43:07 - and i've said it goes to the forward
43:09 - slash about
43:10 - so it needs to go to forward slash about
43:12 - so let's go ahead and click on about
43:16 - yeah there can you see the url the url
43:18 - changed yep
43:19 - it does yeah as soon as i click it boom
43:22 - it changes it
43:23 - exactly so what we can do now is we can
43:25 - go ahead and pop in
43:27 - the remaining two things we can have
43:29 - this one and this one
43:30 - and we can go ahead and have another
43:34 - link here another link here
43:36 - so i think it was about um what was the
43:39 - other links let me go ahead and pull up
43:40 - the app as well so i can see
43:41 - oops oh my alfred shot down looks like
43:46 - there you go your heart rate has shut
43:48 - down what'd you say
43:50 - my alfred oh okay i was like dude i
43:52 - really hope your heart rate is fine
43:55 - yeah let's go ahead and do the following
43:58 - so let's go ahead and check this out
44:00 - so we have about we have store
44:04 - right at the top so on the left side we
44:06 - have about and store and store goes to
44:08 - forward slash store
44:09 - this one goes to gmail here we have
44:11 - gmail
44:12 - and this one goes to images like this
44:16 - right and this one goes to images so you
44:18 - see that's it guys there's four
44:20 - four links and the reason why we're not
44:21 - using an a tag here is because if i use
44:24 - an a tag
44:25 - what's going to happen guys it's going
44:28 - to
44:28 - actually go to that page and refresh
44:31 - and we don't want that we want to use
44:34 - the link
44:35 - tag so it has no refresh and it does it
44:37 - instantly so the react way
44:39 - is to use link exactly
44:43 - exactly um oh man i don't know why
44:46 - i can't actually see the the the photos
44:50 - are so annoying you can't see the
44:52 - folders and my tv just died again so
44:54 - give me one second
44:55 - yeah i'm gonna rejoin the session guys
44:57 - so give me two seconds i'll
44:59 - rejoin that session that cause he was
45:00 - doing so
45:03 - [Music]
45:05 - oh guys i think we deserve i deserve to
45:07 - smash the
45:08 - like button for this today because this
45:10 - is a lot of techies
45:11 - a lot of tech issues like just in
45:13 - everything that has never happened
45:15 - before
45:17 - yeah like now i'm back in i'm back in
45:19 - nice
45:21 - damn holy crap guys when you're live
45:23 - this is this is trickier than it looks
45:25 - to debug this stuff so yeah nice
45:29 - awesome so we have that up and running
45:31 - um
45:32 - let's go ahead and follow me again quasi
45:35 - yep let me actually just go ahead
45:37 - and uh follow you and lift up a 55-inch
45:40 - tv and hit the on button at the same
45:42 - time
45:44 - nice so let's go ahead and do this and
45:46 - now yep
45:47 - it's nice following me so what we're
45:49 - going to do now guys is we're going to
45:50 - start this so it looks a little bit like
45:51 - what we want to get it to so the first
45:53 - step is let's go ahead
45:55 - and actually give this the appropriate
45:57 - style so we have we're inside of home
46:00 - header right that's where everything
46:01 - that we want to style is living so let's
46:03 - go ahead and do the following we say
46:04 - target home
46:05 - header give it display flex and what we
46:07 - should see at this point
46:09 - is everything inside that header should
46:11 - go in a row right because by default
46:13 - when you do flex
46:14 - uh everything goes into a row so if we
46:16 - do that
46:17 - we are importing the file we are using
46:19 - this home header
46:21 - there we go why is that not refreshing
46:24 - let's go ahead and see
46:25 - let's get rid of the this is home page
46:28 - go ahead and save this file and we've
46:31 - got oh yeah
46:32 - so right now this is actually correct so
46:34 - about
46:35 - and store uh yep we've done that
46:39 - so home header and then we're going to
46:41 - do is we're going to say justify content
46:44 - so justify content space between right
46:47 - it's going to do this
46:49 - save it and then what should happen here
46:52 - is if we refresh cozy let's go ahead and
46:56 - refresh
46:58 - is the app is the app running it is
47:00 - running right i'm on the about page
47:02 - i'm on the bob page that's fine yep
47:04 - that's all right
47:05 - so i feel like let's go ahead and double
47:08 - check
47:10 - so it seems to like that the changes
47:12 - that we're making
47:13 - aren't being home header home header
47:17 - should be i mean it's it seems fine i
47:19 - just saved it
47:21 - let me go ahead and do display flex on
47:23 - the home
47:25 - and we go ahead and do a flex direction
47:27 - column and a view of a hundred view
47:29 - height so it takes up the entire
47:30 - way hold on i'm where are you doing this
47:33 - because
47:34 - i'm following you are you on a css file
47:36 - right now
47:38 - yeah i mean home.css
47:41 - um it's showing me that you're in
47:44 - home.js yeah i can
47:47 - i can see you you can see that
47:50 - go ahead listen so now you can see me
47:53 - right in home.js
47:54 - i can see you in home.js right so
47:57 - unfollow me and follow me again
47:59 - i did many times but i'll do it again
48:02 - and let's go ahead and see if it follows
48:04 - me properly into home
48:06 - to css no yeah it does now now
48:09 - yeah you went to app.js so now i'm in
48:11 - app.js with you
48:13 - but now i'm in home.css um
48:16 - it doesn't want to go to any css files
48:18 - with you
48:21 - maybe maybe i'll just manually
48:24 - just call it out right now it's not even
48:28 - it didn't actually push the code that i
48:29 - wrote in here okay so you know what
48:32 - give me one say i'm gonna rejoin one
48:33 - more time
48:35 - it's good yeah this feels like
48:38 - somebody's just spanking me like left
48:40 - and right i know what it feels like
48:43 - it doesn't feel good at all like against
48:46 - my will
48:47 - somebody's just spanking me
48:50 - this guy can you see now
48:56 - can you see with me now if it's hyping
48:58 - hello
48:59 - cedric is like if you have any doubt
49:01 - just reboot he did that already
49:03 - let me actually try uh following you
49:06 - again try now moving around to
49:08 - different things okay so abc
49:11 - worked that's good never going to
49:14 - home.css
49:17 - no if i go into index or css
49:22 - what is okay so index.css worked
49:27 - but home.css didn't work
49:32 - app.js what the hell
49:35 - okay all right i have an idea i have a
49:37 - hunch
49:38 - pull everything out of pages yeah let's
49:41 - just pull this out of pages
49:42 - and let's go ahead all right let me let
49:44 - me test it i'll pull oh you're pulling
49:46 - it out
49:47 - yep i'll pull it out and let's get rid
49:49 - of pages
49:51 - let's get rid of components so we'll
49:53 - just do a flat hierarchy for today's
49:55 - world
49:57 - and then let's go ahead and fix our
49:59 - imports so we done
50:01 - four slash home here we have home
50:04 - there we go nice okay i think we're good
50:09 - yeah holy crap dude
50:12 - flute your code is like live sure
50:14 - completely drops when you have poor
50:15 - internet connection
50:16 - future code what happened we were
50:18 - supposed to do airbnb build
50:20 - the airbnb clone i was so excited and
50:22 - then i just stopped
50:24 - hearing from you i still want to build
50:26 - it
50:28 - um there we go finally there we go
50:32 - it's working yeah so these are the
50:34 - changes i made guys
50:35 - uh yeah so i guess it was a flat
50:36 - hierarchy i guess vs code didn't like
50:38 - that
50:39 - so yeah so now what we're going to do
50:41 - guys is i set on the home container
50:43 - itself i said display flex
50:45 - flex direction column and give it a
50:46 - height of 100 view height now what that
50:48 - did is
50:49 - if i go ahead and give this a background
50:50 - color of say red
50:52 - now you should see the entire thing goes
50:54 - red so let's go ahead and add semicolon
50:56 - nice that's what this height right here
50:58 - did and there that's it we're done
51:01 - that's it we're done that's that's
51:02 - that's good thumbs up
51:06 - that's actually how most developers show
51:08 - it you know that right like most
51:09 - developers will build something that
51:10 - looks like this and it'll be like well
51:12 - this just to give you an idea what's
51:13 - possible
51:14 - and they'll be like join my course and
51:16 - then i'll show you more
51:18 - exactly
51:22 - they get you like half in nice so we got
51:24 - that and then the home header guys so
51:26 - the header itself as well the links are
51:27 - living
51:28 - i wanted to do display flex this justify
51:31 - content if i go ahead and remove that
51:32 - you'll see it pulls all the
51:34 - header left and header right together so
51:35 - we need that to space between it
51:37 - padding means that 20 20 pixels top and
51:40 - bottom 30 pixels left and right
51:42 - right and then align them centrally so
51:44 - that they're all uh vertically aligned
51:47 - so now that we're back up to speed what
51:49 - i want to do is all of those links right
51:51 - by default they look like links which
51:53 - looks ugly right we don't want that
51:56 - so i'm going to add the following inside
51:57 - of here so i'm going to say in home
51:59 - header
52:00 - all of the links right so home header a
52:04 - tags because remember these links that
52:06 - you guys saw
52:07 - so these ones right here these actually
52:10 - convert to a tags but they're just like
52:12 - clever a tags right
52:14 - so what i'm going to do is to style it
52:16 - i'm going to say go ahead go into home
52:17 - header target the a tag
52:18 - give it a margin right 20 pixels this
52:21 - makes it actually go ahead and it fixes
52:24 - the uh
52:25 - the way that it gets rid of that
52:27 - underline by default
52:29 - and then this is the color that they use
52:31 - on google so it's a really
52:32 - strange car i tried to color picker it
52:34 - and i couldn't so i just literally
52:35 - grabbed the the source code color that
52:37 - they had
52:38 - and then the font size of 15 pixels now
52:40 - i'm gonna show you guys why i did this
52:42 - line as well so let's go ahead and save
52:43 - that
52:44 - and you can see it looks a lot cleaner
52:45 - right now cause if you hover over
52:48 - don't hover over what oh
52:52 - i'm hovering over it yeah it looks good
52:54 - yes
52:55 - and if you click it the links actually
52:57 - take you to uh to sort of new urls so if
53:00 - you go to the fourth search so
53:01 - i i see so i see the url and you guys
53:04 - should see that too yep
53:06 - yeah so that works but we want it to
53:08 - also show like an underline
53:10 - for it so what we do is because we
53:12 - removed all the styling with text
53:14 - decoration inherit now if we add this
53:18 - hover text decoration underline if you
53:20 - hover over it now
53:21 - check out what happens
53:25 - mmm nice it so we get the link
53:28 - functionality back
53:30 - and then we sort of uh man goes what
53:32 - about the data layer
53:33 - so we are using god damn
53:37 - [ __ ] jacked girlfriend girlfriend's
53:40 - getting jacked
53:47 - so now what we're going to do is we need
53:49 - to finish off the
53:50 - header right and the header right with
53:54 - the icon it seems like she's like dead
53:57 - serious too which makes it
53:59 - more hilarious and jacked
54:03 - sometimes she sends me text messages and
54:05 - they send me way off and i'm like god
54:06 - damn it
54:08 - so now i want to have like a grid right
54:10 - so i'm going to have a grid
54:12 - uh sort of icon and the grid icon that
54:14 - we're using in material ui is called
54:16 - apps icon
54:17 - so what i need to do is this one here
54:20 - apps icon
54:21 - and what we can do is we can go ahead
54:23 - and import that from material ui with
54:24 - the following line so apps icon from
54:26 - material ui icons apps
54:28 - so if i save that now you should see an
54:31 - icon pop
54:32 - in so that's how simple it is to get an
54:34 - icon in your app guys
54:36 - so it's very very clean very slick and
54:38 - then for the avatar
54:40 - basically i'm not going to go i'm
54:41 - actually going to use a blank avatar for
54:42 - now so we're going to go ahead and pop
54:44 - this in
54:45 - uh i need to go ahead and import that
54:48 - from material ui and when we say
54:49 - avatar we're talking about when you're
54:51 - logged in you know that little
54:53 - sort of circle icon rather than messing
54:55 - around with radiuses and circles and
54:57 - stuff we literally can use
54:59 - an avatar from material ui and it fixes
55:02 - all that headache for us
55:04 - uh if we save that
55:07 - um save that should what is that
55:12 - advertisement yes save that
55:16 - saved refresh guys saved it so wait why
55:20 - is that hold on hold on why is that
55:21 - thing happening because then we do
55:23 - um in settings didn't we set it up to be
55:25 - in a way where
55:27 - it auto saves let's go to auto save yeah
55:31 - yeah we did after yeah strange
55:35 - okay yeah really strange
55:39 - oh man today is just like this freaking
55:43 - strange day
55:46 - so guys we have the header right right
55:49 - now you see the header right doesn't
55:50 - look quite okay
55:52 - so i'm going to go ahead and do this so
55:53 - i'm going to target i'm going to say
55:55 - display flex
55:58 - yeah do that and you'll see it pops into
55:59 - a row so it's saved before
56:01 - there we go it pops into a row but
56:04 - everything's not
56:04 - vertically aligned right so i'm going to
56:06 - go ahead and do a line item
56:08 - centrally and watch what this one does
56:10 - so this will pull everything
56:11 - in the center on the vertical axes which
56:13 - is good then what i'm going to do is i'm
56:15 - going to say give it a minimum width of
56:17 - 13 view it because if you want to be
56:19 - responsive
56:20 - and then you see it didn't look like it
56:22 - did much but now if i say go ahead and
56:24 - space the i
56:25 - all of the children between itself if we
56:27 - do justify content space between it
56:30 - should have done
56:31 - uh it will do a good job when it goes
56:33 - bigger
56:34 - all right now what i'm going to do is
56:35 - i'm going to make sure that when we
56:36 - target any of the icons
56:38 - so this is how you target any icon
56:40 - inside so
56:41 - this is saying go inside header right
56:43 - and this is the class that material ui
56:45 - gives you by default right we can go
56:48 - ahead and do margin right of 20 pixels
56:51 - hold on hold up hold up hold up i don't
56:53 - think it's following you were you doing
56:54 - a lot of styling
56:57 - uh i think you're looking at it yeah i
56:59 - could see that one no now now it's
57:00 - following it wasn't following you for a
57:02 - little bit
57:03 - so i don't know how much styling you did
57:04 - in the last two three minutes but
57:07 - here it is i have no look at look at the
57:10 - comments
57:10 - they're saying we can't see the css
57:12 - don't see the css so they're the
57:14 - comments are coming in i caught i just i
57:16 - caught it pretty much right away
57:17 - but oh damn it okay that's cool
57:21 - i don't know how much css now here it is
57:26 - yeah this is what we're doing here guys
57:27 - so i've added header right so
57:29 - display flex align item centrally
57:31 - minimum width of 13 view it justify
57:33 - content space between
57:35 - and then to give that icon so that grid
57:37 - icon some space between that and the
57:39 - circle avatar
57:41 - i target the icon because this is the
57:42 - class name that material ui gives
57:44 - every icon and i add a margin right to
57:47 - it
57:48 - so that's why we're doing that okay uh
57:51 - awesome and then there we go we actually
57:52 - have like a
57:54 - the the top portion of the header done
57:56 - so cause if you go ahead and resize it
57:58 - now you'll see
57:59 - it's fully responsive that top uh that
58:02 - top uh header
58:03 - hey it is i'm just
58:06 - putting it through a stress test you
58:08 - know yeah
58:10 - that looks clean man i like it i like
58:12 - what you do
58:13 - bro yeah awesome uh
58:16 - oh frank says uh frank's in our inside
58:19 - of the prophet javascript course and won
58:20 - the coaching because he says the flexbox
58:22 - froggy website was great for learning
58:24 - flexbox foggy
58:25 - i was like nice yeah that that is a good
58:28 - um
58:29 - that's a really good resource by the way
58:32 - okay
58:32 - people are telling me i should put the
58:34 - title on top and i was kind of being
58:35 - lazy but i
58:37 - will do it because this is the second or
58:39 - third comment so i love
58:40 - that actually for calling me out
58:43 - let's do it so what are we working on
58:45 - right now sonny we just finished the
58:47 - header i imagine
58:49 - yeah so now we are working on adding the
58:52 - search bar functionality so we're
58:55 - actually adding the body
58:56 - of the the search page search
59:00 - bar yeah add google's box
59:03 - there we go the most english way of
59:06 - writing the title is possible
59:08 - boom sorry i exploited somebody's ear
59:10 - but it's right
59:11 - it's not nice
59:15 - so now what we're going to do guys is
59:17 - we've got the
59:18 - uh go back to home here and we've got
59:21 - inside
59:22 - the body right so inside the body i'm
59:24 - gonna add first i'm gonna add an image
59:26 - because we all love images so i'm gonna
59:28 - go ahead and add an image
59:29 - and that's gonna be the google logo so
59:31 - i've got a link here
59:33 - and this is simply the google logo okay
59:35 - so if we go ahead and save that you'll
59:36 - see
59:37 - massive google logo popped in then what
59:39 - i'm going to do
59:40 - is i'm going to target that and style it
59:43 - right so i'm going to go into home.css
59:47 - and i'm going to go and say that uh we
59:50 - should go ahead and that
59:51 - body so we're going to target the body
59:52 - we're going to target the image and say
59:54 - contain it but make it a height of 100
59:56 - pixels
59:57 - right so that will actually go ahead
60:00 - and um make it a lot more smaller and
60:03 - object fit contain keeps the aspect
60:05 - ratio so it doesn't like stretch and
60:06 - look weird
60:07 - then what we're going to do is here we
60:09 - have home body
60:10 - so like this i'm going to go ahead and
60:12 - target the home body and this is a
60:14 - neat little trick that you guys can do
60:16 - so i'm going to say the
60:17 - breath the body should take up the
60:19 - remainder of the space now the reason
60:20 - why it's going to work is because
60:22 - homebody sits inside of the home parent
60:26 - which we made flex uh and we've done the
60:28 - flex direction column
60:30 - so this is by saying flex 1 it's going
60:32 - to take up the majority of the space
60:34 - now margin top of 10 gives it a little
60:36 - bit of spacing from the top which is why
60:37 - if i remove it
60:39 - you'll see google goes up yo how'd you
60:42 - how did you center how did you center it
60:45 - so it was centered from that was
60:48 - actually from we did that
60:51 - with uh where did we do that um
60:56 - we centered that with let me go ahead
60:58 - and double check where did we do that
61:00 - yeah i was like how does this thing get
61:02 - centered so perfectly all right time for
61:04 - air horn
61:06 - [Music]
61:17 - says guys take a rest these bills are
61:20 - exhausting you guys deserve it
61:23 - i say we triple down on these guys
61:27 - we're trying to get to like seven bills
61:29 - a day
61:31 - yeah so oh this is why this is why it's
61:34 - very yeah because we're doing flex
61:36 - direction column so it spans the entire
61:38 - width
61:39 - so the direct child is is this uh home
61:42 - body so that's where you see the image
61:44 - tag
61:45 - hold on hold on so what's making it
61:46 - centered
61:48 - are you giving me like a politician
61:50 - roundabout answer or
61:52 - okay yeah you see that yeah
61:56 - so flex if i added flex direction column
61:59 - by default it's going to take up the
62:01 - entire
62:02 - row in that column right oh that is
62:06 - weird dude i would never think about
62:08 - that that like flex
62:09 - column like flex direction column would
62:12 - be used as centered
62:14 - yeah so like now if i add like a h2 or
62:16 - h1 tag or something oh why is my emit
62:18 - not working
62:19 - i say test you'll see now
62:22 - let's go ahead and do test so test so
62:25 - image won't but like if i take
62:26 - if i go ahead and pop another image in
62:28 - right you'll see
62:29 - that the image will sit and it should
62:32 - sit in the middle there we go got it
62:34 - okay got it um it would be doing it
62:38 - would actually be using the width
62:40 - but you would do text align center to
62:41 - get it centered yep
62:44 - yep oh i see what you're saying i see
62:46 - what you're saying okay it's still using
62:47 - the width with the text it's taking up
62:49 - the whole width but it's left aligned by
62:50 - default so even if the text is like
62:53 - boom this big the text is just taking up
62:56 - all the space to the left but with an
62:58 - image you're saying
63:00 - it will actually put the image in the
63:02 - middle
63:04 - exactly yeah but you see if i do a
63:06 - center tag
63:07 - it actually uses that and then i sent a
63:09 - tag and then h1 h1 yeah send today or
63:12 - that's how i center stuff dude that's
63:14 - how that's
63:18 - i was going to say because yes this uh
63:20 - double check if you go into um
63:23 - vs code settings quickly just double
63:25 - check that the prettier's on
63:27 - all right yeah that'll make developing a
63:30 - lot quicker so let's go ahead and do
63:32 - uh do s format on save so type in format
63:35 - on save
63:36 - all right so let's go all right format
63:40 - right there one save yep i got it
63:44 - okay and then you see it at the top it
63:46 - says uh go to so it says no
63:48 - right so click that and you want to
63:50 - click on oh my god
63:52 - which one is it default
63:56 - oh my mine's nose oh interesting
63:58 - prettier this one right here right
64:01 - i want to say yeah but i don't trust it
64:04 - so maybe
64:05 - i mean that looks right let's try it
64:07 - that's right
64:08 - let's try it yeah let's give it a shot
64:13 - um i don't really know i mean it didn't
64:15 - i don't know what it did bro but it
64:16 - seems like it's good
64:18 - yeah that's fine cool
64:22 - so there we go so then we have the
64:25 - image tag there and then what we're
64:27 - going to do is we have
64:28 - the i'm going to basically add a an
64:31 - input container here right
64:32 - so it's going to be input container and
64:34 - this one we're going to basically put a
64:36 - placeholder here
64:38 - for the search and the reason why so
64:40 - this is going to be like a search
64:42 - all i want to do is have a one search
64:44 - component and once that's built
64:46 - that will sit there and that will have
64:48 - the buttons it will have everything we
64:49 - need
64:50 - in that one search component the reason
64:52 - why i want it to be a component is that
64:53 - we can reuse that component then on the
64:56 - page
64:56 - the results page right so that will help
64:59 - us use
64:59 - have some reusability there so with that
65:02 - said what i'm going to do is go over to
65:05 - create a search search component so i'm
65:08 - going to create a file called search.js
65:10 - so search.js and we should pop in
65:13 - now um yep
65:16 - and i'm do rfce and my snippets aren't
65:20 - working so you're going to oh there it
65:21 - is there we go
65:22 - nice and then i can do class name search
65:26 - i'm gonna set up my css file so i'm
65:29 - gonna say import
65:31 - search dot css nice i'm gonna go ahead
65:34 - and create the search.css
65:36 - file so search.css boom
65:39 - and we should be inside there now all
65:41 - right awesome
65:42 - so we've got our search file set up and
65:44 - then what we're going to do now
65:46 - is we are going to
65:50 - go ahead and actually lay this one out
65:52 - so
65:53 - the search field right so the first
65:55 - thing we have in the search field is the
65:56 - input field
65:58 - so i'm going to go ahead and create
66:00 - create a container for that
66:02 - some say class name equals search this
66:05 - one's gonna be called
66:06 - input right and inside of here i'm gonna
66:08 - have three things i'm gonna have the
66:10 - search icon
66:11 - uh so i'm gonna have a search icon which
66:13 - is gonna be the hourglass
66:15 - so this one i'm gonna give that a class
66:16 - name of search input icon
66:18 - i'm going to have an input right so i'm
66:21 - going to actually have an input
66:25 - like this and that's going to be
66:27 - basically be where you type in some
66:29 - information
66:30 - and then you want to google something
66:31 - and then i'm going to have a mic icon
66:33 - right so i'm going to have three things
66:34 - inside of here and i'm going to import
66:36 - those at the top so we have access to
66:38 - them
66:39 - so let's go ahead and import them save
66:41 - the file
66:42 - go back to home and let's import it here
66:44 - so we can actually see our search
66:47 - working so let's go ahead and say import
66:50 - search from
66:51 - [Music]
66:53 - search like this right now we should see
66:57 - some kind of input and some icons pop on
66:59 - the screen in a second
67:01 - so let's go ahead and see it says import
67:04 - function home
67:05 - there we go you can see you got that
67:07 - little it's very ugly at the moment but
67:08 - you can see that it's there
67:10 - right so we've got the search input and
67:14 - the rest of the stuff so what i'm going
67:15 - to do is style that now so it doesn't
67:17 - look as ugly as we can see it there
67:19 - and the way we do that is i'm going to
67:21 - go inside of my
67:23 - search.css and i'm basically going to go
67:25 - ahead and type the following so i'm
67:26 - going to say
67:28 - search input to go ahead and target that
67:33 - and then i'm going to say display flex
67:37 - align item center right so let's go
67:39 - ahead and see that and i love doing this
67:40 - as we do it like this because then
67:42 - you'll see
67:43 - as things sort of get started the
67:44 - difference that it's going to make
67:46 - so if i go ahead and add a border around
67:48 - this of light gray so i'm going to go
67:50 - ahead and do border one pixel solid
67:52 - light gray
67:53 - and you can see it adds a border around
67:54 - it i'm going to set the height of this
67:56 - to be 30 pixels
67:59 - right so it should get a little taller
68:01 - i'm going to give it some padding
68:02 - and i bought a radius of 999 pixels
68:06 - right and the reason why i do 999 is i
68:07 - want that perfect curvature right so i
68:10 - added some padding i've done 10 pixels
68:12 - top and bottom
68:13 - 20 pixels left and right i'm going to do
68:15 - the width
68:16 - is going to be dynamic so it's going to
68:17 - say 75
68:19 - view width which means so you always use
68:21 - 75 in the screen width
68:23 - then i'm going to do margin 0 auto and
68:25 - this is a trick
68:26 - to make it horizontally centered okay so
68:30 - if i do this
68:30 - you should now see a centers
68:32 - horizontally then i'm going to do margin
68:34 - top 40 pixels
68:36 - and that will push it away from the
68:37 - google uh icon
68:39 - and then i'm going to do a max width of
68:41 - 560 pixels so that way it never grows
68:43 - past a certain high uh width so even if
68:45 - you're on a huge screen
68:46 - it's not gonna like basically take up
68:48 - like if you're on a 4k monitor which is
68:49 - like 50 inches
68:51 - you know you don't want that search bar
68:52 - to be huge so you give it a max width
68:55 - all right so very very clean uh look and
68:57 - feel there
68:58 - then what we're going to do is we're
68:59 - going to target the inner input field
69:01 - right that inner input fold and what i
69:04 - can do is i can say flex
69:05 - one because i want that input field to
69:07 - take up the majority of the space inside
69:09 - of it so you see it expand
69:10 - right then what i can do is i can say
69:12 - give it some padding so i want to do the
69:14 - same thing
69:14 - 10 pixels up and bottom top and bottom
69:17 - 20 pixels left and right
69:18 - i want to say make it a font size of
69:21 - medium so
69:22 - medium by default is one that they
69:23 - provide and it'll make the text that we
69:25 - type a little bigger
69:26 - i'm going to say give it a border of
69:27 - none so now you can see the input field
69:29 - has a little border around it
69:31 - but as soon as i add this line watch how
69:32 - everything snaps together so if i go
69:34 - ahead and pop this in
69:36 - there we go look at that you see how
69:37 - that like one simple change
69:39 - and now it's looking very clean right
69:41 - now kazi if you want to click on the
69:43 - input field
69:46 - right now why the hell do we see that
69:48 - blue ugly nastiness right you see that
69:51 - like outline
69:53 - yeah we don't want that and you don't
69:55 - see that in google
69:56 - so what we can do is if we target the
69:58 - input field
70:00 - and we say go to the input field and say
70:03 - colon focus so when you're
70:04 - focusing on the input so when you click
70:06 - it if we set a property
70:08 - called outline width to zero
70:13 - oh look at that that is nice
70:16 - that's cool right you do outline with
70:18 - two one
70:20 - uh let's do like one pixel uh-huh
70:23 - oh do it to 20 pixels yeah i wonder what
70:27 - happens if we do that
70:28 - is that hold on i don't know maybe it
70:31 - just has like it's either on or off
70:33 - you know yeah i think it's like a it's
70:35 - like a boolean i guess maybe yeah it's a
70:37 - boolean
70:38 - okay cool yeah zero is what we want
70:40 - right now it looks clean
70:42 - yeah so that's really nice right so that
70:45 - it's already looking super crisp
70:47 - like google right now we gave the search
70:50 - icon
70:50 - a um a color
70:54 - a class name of search input icon so i'm
70:55 - going to go ahead and target that
70:57 - because i want to make that color gray
70:59 - right so i'm just using default colors
71:01 - here
71:01 - they're kind of close to google's ones
71:03 - and it makes your life a little easier
71:04 - when you're making this
71:05 - so color gray there we go and then what
71:08 - we are going to do
71:09 - is we are actually going to go ahead and
71:11 - add some buttons okay
71:13 - so we're going to add some advanced
71:15 - underneath it because
71:16 - as you guys can see like it was very
71:18 - quick to sort of get to this point
71:20 - but like it's just all these little
71:21 - tricks and hacks and stuff like that
71:23 - that you sort of pick up along the way
71:24 - it's very important to get
71:25 - good at those so that way you can build
71:27 - at that speed as well that's why the
71:29 - greatest ever even he says
71:31 - the damn this outline width thing will
71:32 - be very helpful
71:35 - yeah really handy and honestly in some
71:37 - other builds
71:38 - i wish i did put in there because it is
71:39 - a really nice finishing touch
71:41 - to us especially to a search bar when
71:43 - you're making um
71:45 - when you have like an icon on the side
71:46 - and things like that
71:48 - so what we're going to do now is we're
71:50 - going to actually create a
71:52 - so underneath this div i'm gonna have
71:55 - a div called search buttons right
71:58 - and these buttons are gonna be primarily
72:01 - responsible for the two things that you
72:02 - see on google it says
72:03 - google search and it says i'm feeling
72:05 - lucky so let's go ahead and check all
72:07 - one that we built quasi
72:09 - all right let's go to it
72:17 - you want to go to the home page uh no so
72:19 - the one that we deployed
72:21 - oh i see okay yeah right over here yep
72:24 - so you see these two buttons google
72:25 - search and i'm feeling lucky
72:27 - right we need to get those working so
72:29 - i'm going to show you guys
72:30 - are we done with the search bar no yeah
72:33 - so this is all part of the search bar
72:36 - got it okay cool yeah this is all part
72:37 - of the search bar so we're almost we are
72:40 - we'll be done pretty quick
72:41 - um so now what we're going to do is
72:43 - we're going to add a button and the way
72:44 - we can do it
72:45 - and thank you deepak for that uh nice
72:47 - little donation and thank you come on
72:49 - nice because thank you for an amazing
72:50 - tutorial small contribution from my side
72:53 - massively appreciate that dude thank you
72:55 - debunk and thank you yeah that is
72:57 - amazing oh two donations like right at
72:59 - the same time that is
73:00 - odd unless they were friends and
73:02 - coordinated it together
73:05 - nice so what we're going to do now is
73:08 - add a button but we're adding it with a
73:10 - capital b
73:11 - because it's from material ui so i need
73:13 - to go ahead and import that from
73:14 - material ui so
73:16 - let's go ahead and pop that in and this
73:18 - button is going to say google search
73:19 - google search and i'm going to have
73:22 - another button
73:23 - which is going to say i'm feeling lucky
73:25 - right and you see i added a variant
73:27 - outline to this one
73:28 - so this is a google property so let's go
73:30 - ahead and open localhost
73:33 - all right so you see the second one had
73:37 - varian outlined and the first one didn't
73:39 - so this goes to show you
73:40 - that google actually can go ahead and
73:42 - provide you the material ui library
73:44 - design that we provide you with
73:46 - different props one of them is variant
73:48 - so in this case if we add variant
73:50 - outlined
73:50 - you can see that we get this by default
73:52 - which looks pretty clean
73:54 - yeah so we can go ahead and add that now
73:57 - what we're going to do
73:58 - is somebody says i suggest you use sas
74:01 - preprocessor for css
74:03 - guys that's why we use bam so trust me i
74:05 - used to use sas but bem's a lot cleaner
74:07 - when you get used to using it and it's a
74:09 - lot faster
74:10 - um yep so now what we're gonna do is we
74:13 - are going to add
74:15 - um okay
74:18 - so i actually i actually want to make
74:21 - the entire
74:22 - search field actually we'll do that
74:25 - afterwards with it afterwards so what
74:26 - these two buttons here google search
74:28 - and i'm feeling lucky let's go ahead and
74:30 - style these so they look
74:31 - like we want them to look right so let's
74:33 - go ahead and firstly let's go and
74:34 - style the search buttons container so
74:36 - i'm going to hop over to the css
74:38 - and say go ahead and pop in a margin top
74:41 - of 30
74:42 - pixels display flat nice justify content
74:45 - so justify content center was important
74:47 - here
74:47 - if i don't have that it's left aligned
74:50 - so it's flex start by default
74:52 - and we want to center it right and then
74:55 - what we do is
74:56 - we target the button and this is how we
74:58 - do that
74:59 - is we say inside the search bar
75:00 - container target and normal button
75:02 - because that's what gets rendered our
75:03 - material ui's button
75:05 - i'm going to say give it a margin of 5
75:07 - pixels a padding of 7 pixels
75:09 - top and bottom 15 pixels left and right
75:12 - let's go ahead and add that
75:13 - you can see it automatically spaces it
75:14 - apart give it a background color
75:18 - of a light gray and give it a white pic
75:20 - uh
75:21 - one pixel solid border so let's go ahead
75:23 - and do that
75:24 - and there you go like we started to look
75:26 - a lot more and you see by default
75:28 - material ui
75:30 - actually goes ahead and makes everything
75:32 - like capital letters which isn't very
75:33 - nice that we don't want to do that in
75:35 - our case
75:35 - so what we can do is we can override
75:37 - that by saying um
75:39 - uh checks transform inherit so if i go
75:42 - ahead and do that
75:43 - you'll see it drops down to the lower
75:45 - size right
75:46 - to finish it off i'm going to say color
75:48 - is this nice little gray
75:50 - and there we go we get a very nice sort
75:51 - of finishing touch right
75:54 - now uh please don't spam the chat guys
75:57 - you're just gonna get blocked so yeah
76:01 - yeah yeah so now um
76:04 - let's go ahead
76:09 - so now if you go ahead and hover over
76:11 - that button
76:13 - it's fun for me to block i just sit
76:14 - there and a lot of my work is blocking
76:16 - no i'm kidding
76:18 - yeah okay click here yeah so if you
76:21 - hover over the uh the buttons google
76:23 - search and i'm feeling lucky
76:24 - uh-huh and look at how nice it looks
76:26 - when i click it dude look at that so the
76:28 - click looks really nice but the hover
76:30 - doesn't it doesn't look like google's
76:32 - yet right
76:33 - yeah so wait what does google server
76:35 - look like let's see
76:36 - so let's look at the deployed oh yeah we
76:38 - can use this one yeah so you see that it
76:40 - gets like a
76:41 - nice hovered look right yeah but i like
76:44 - how even theirs is not responsive and
76:46 - ours is more responsive than actual
76:48 - google right yeah this is something i
76:50 - found yeah i was like i couldn't believe
76:51 - that it wasn't responsive when i saw it
76:54 - that's embarrassing dude that's actually
76:56 - embarrassing
76:57 - yeah like then they should literally
76:59 - like with a few lines of code look how
77:01 - much better that looks like yeah and i'm
77:04 - like
77:04 - zoomed in wow yeah
77:08 - so guys this shows you like even
77:10 - companies like google sometimes they
77:11 - don't
77:12 - get the responsiveness right you know um
77:16 - nice so what we're going to do now is
77:18 - actually add a hover functionality for
77:20 - the buttons
77:21 - so we target the same thing at the top
77:23 - so we say to go ahead target the buttons
77:25 - but the hover state
77:27 - and i'm going to add a box shadow so i'm
77:29 - going to add a little box shadow here
77:31 - so because if you just want to hover
77:32 - your mouse over it
77:34 - and then we can see it as as we uh as it
77:37 - changes yes
77:40 - yeah so just keep it hovered up there we
77:42 - go and then what we'll say is i'll say a
77:44 - background
77:45 - color wait wait wait wait wait wait wait
77:48 - wait wait
77:49 - anytime your screen is not showing like
77:51 - i'm gonna give it a shout
77:53 - cool yeah go for it so a background
77:56 - color
77:57 - of gray so now if you hover over it
78:00 - yep yes you see it's slightly changed
78:03 - right it's very hard to tell but it's
78:04 - like i can do it and
78:06 - comment it out and put it back uh
78:09 - i'll do these three and then and then
78:11 - you so
78:12 - these these three together are the ones
78:14 - that will be much more apparent to show
78:16 - so if i do that you see that yeah i can
78:18 - see it yep
78:19 - yeah because in that that way you can
78:20 - see a lot clearer when we do that so
78:22 - now um when we sort of hover over it you
78:26 - get that very very nice look and feel
78:28 - now there is a little other line that
78:30 - they added on the google button so this
78:32 - actually came directly from google
78:34 - button
78:34 - and it says add a linear gradient from
78:37 - the top to the bottom
78:38 - and it's basically a gray it's like a
78:40 - white color and it's very subtle
78:42 - like it's so so uncommented
78:46 - i mean comment it
78:50 - so you can see here here it's just like
78:52 - a gray
78:53 - but here if you do this it's actually oh
78:56 - nice it like
78:58 - yeah looks like more solid
79:01 - yeah you see that that's a flat button
79:03 - and then this has some kind of like
79:05 - shine to it looks like a little 3d
79:07 - button yeah it's so
79:09 - it's just it's really subtle but i can
79:11 - experience the difference
79:13 - yeah insane like small small tweaks like
79:15 - that are going to make a difference
79:17 - um yeah so we've got that in place
79:20 - now what i'm going to do is i'm going to
79:22 - say when you click this button so on
79:24 - click
79:26 - i'm going to say fire off the search
79:28 - function so fire off the search function
79:30 - and we need to obviously write the
79:32 - search function so con
79:33 - search equals it takes an event whenever
79:35 - we have an on click
79:36 - and we're gonna do e dot prevent default
79:38 - and what this will do guys
79:40 - is when you click that button we don't
79:41 - want it to refresh or do anything funky
79:44 - um so i'm gonna add that by default and
79:47 - some of you guys might be wondering that
79:48 - only happens in a form
79:49 - we are going to be making it form very
79:51 - soon so that's why
79:53 - i'm going to add that now um so
79:56 - now when whenever kazi types inside the
79:58 - the search bar so inside that middle bar
80:01 - we don't capture or save the input
80:04 - the input text right we need to keep
80:06 - track of it so in order to keep track of
80:08 - the input text
80:10 - we're going to basically use something
80:11 - called state and state essentially
80:13 - is how you write a variable inside of
80:15 - react so here i can say const this is
80:18 - the syntax for writing a piece of state
80:19 - and this is a functional component
80:21 - so we're using the use state hook so we
80:23 - say input
80:24 - set input and this is how we modify that
80:26 - value and we just got another donation
80:28 - thank you
80:30 - whoa nice thank you oh
80:34 - we just got 20 donation dude wait what
80:37 - where hold
80:38 - on wait for it to load bro you're too
80:39 - fast on your phone
80:41 - holy crap whoa
80:52 - thank you so much damn freaking 20
80:55 - donation and he goes thanks for the
80:58 - valuable content you
81:00 - got it we're gonna keep banging this
81:01 - content out so
81:03 - thank you for the love really appreciate
81:05 - you yeah
81:06 - that's huge dude thank you so much yeah
81:09 - so now we're gonna do um we have the
81:12 - search
81:13 - would you educate oh yeah we were saying
81:15 - up the state so input set input
81:17 - and then we say use state right and then
81:19 - by default
81:20 - we want that to be a blank string
81:22 - because you have nothing in the input
81:23 - field
81:24 - when you start off we need to import
81:26 - this so we can go ahead and do this
81:28 - so import oh yeah i'm gonna do the
81:32 - air horn because that's a good donation
81:34 - you guys and it's a little delayed but
81:36 - here it is
81:43 - that's where i got it from bro yeah
81:47 - yeah nice um there we go so now
81:51 - now what we're going to do is we have
81:54 - we are going to change the are we going
81:57 - to map that input to the input field
81:59 - right so we go to do that we say input
82:02 - value
82:03 - equals input and what this does is it
82:06 - maps the input
82:07 - here right so we're saying this input
82:09 - and state is always going to be mapped
82:11 - to this input but right now it's always
82:12 - going to be mapped to your blank string
82:14 - but we want to basically keep track of
82:15 - it as kazi types in so in order to do
82:17 - that
82:18 - we say on change so on change equals
82:21 - unchanged fires off an event right so
82:23 - we're gonna it fires off an event but we
82:25 - can just shorthand this and say e
82:28 - and then what we can say is this is an
82:29 - arrow function so we can say set the
82:31 - input text to be whatever cause you
82:34 - typed in which is e.target.value that's
82:36 - how we get that value
82:38 - right now what this means is if we've
82:41 - done it correctly if kazi types now it
82:43 - will just type normally
82:44 - but behind the scenes it's actually been
82:46 - captured in the state so kazi go ahead
82:48 - and type in the
82:49 - the input field nice
82:52 - can i okay cool so that's all good that
82:55 - means that we are
82:56 - we've connected it correctly if you guys
82:58 - get to this point
82:59 - and then you don't uh actually see
83:03 - the field being updated then you haven't
83:05 - done the unchanged correctly right so be
83:07 - sure to do that correctly
83:08 - now what when we click that google
83:11 - search button
83:12 - how do i connect the google search
83:15 - button
83:15 - so that whenever kazi types in and hits
83:17 - the enter key
83:19 - like it detects it and then something
83:21 - actually triggers by the way real
83:22 - real quick amanda's just joined and he
83:24 - goes wait what
83:26 - i just joined in after an interview is
83:28 - that really google or is it a clone
83:31 - nice he just joined after an interview
83:33 - dude he's 17.
83:35 - he's crushing it holy crap he's in pwj
83:38 - he's 17 and he's just he's yeah he's got
83:41 - a lot of talent
83:42 - like i'm really pumped to have him on
83:44 - our team dude
83:46 - yeah he's insane nice another donation
83:50 - thank you so much sayantan he says you
83:52 - guys are amazing dude your work inspires
83:54 - me a lot thank you for these live
83:55 - streams i made some of the projects by
83:57 - watching these live streams let's get it
83:59 - nice awesome
84:03 - all right so this is looking good i'm
84:05 - liking this now
84:06 - so input is the variable where
84:09 - everything i'm typing into this
84:11 - blah blah blah like whatever i'm typing
84:13 - in here right that's going
84:14 - straight into input yeah okay
84:17 - and then you can use that and you're
84:19 - probably using that right over here
84:21 - in the form we just got another twenty
84:25 - dollar donation
84:26 - what from dj spouse
84:34 - you guys are dope keep up the great work
84:37 - thank you
84:37 - so much bro thank you dude that's insane
84:41 - love that damn we're at eighty dollars
84:44 - we're about to break a hundred soon this
84:46 - is huge this is gonna be our like what
84:48 - eighth live stream if we did that yeah
84:50 - that's
84:50 - crazy so guys i'm gonna get back into
84:54 - the explanation i know i keep getting
84:55 - distracted by donations but i can't help
84:57 - it i
84:58 - always will appreciate it until i'm in
85:00 - the ground
85:01 - so um let's go here so for example
85:05 - so this is the input whatever i type
85:07 - gets stored in here
85:09 - and then it's also being stored in here
85:11 - giving giving it to
85:12 - as a value and then you're using set
85:15 - input to give it
85:16 - the actual value right to store an input
85:19 - you're pulling the value out of whatever
85:21 - i type in the
85:23 - form or the search bar and then you're
85:25 - making sure
85:26 - that when that search functionality runs
85:30 - you are um you're making sure that it's
85:33 - actually
85:33 - preventing the refresh yeah
85:37 - we're using this function we're using
85:39 - the search function
85:40 - uh so this is actually connected to when
85:43 - we click the google search button
85:45 - oh right here my bad okay i missed that
85:47 - what i'm trying to do now is i'm going
85:48 - to show you guys a really neat trick
85:51 - right now this trick is basically how
85:54 - to um how to make it so that when you
85:57 - hit the
85:57 - enter key when you're typing in the
86:00 - input field
86:00 - when you hit the enter key they will
86:02 - actually trigger this google search
86:03 - button
86:04 - right so how do we do that with very
86:05 - minimal lines of code and i'll show you
86:07 - and it's very impressive when we
86:08 - actually do this
86:09 - so to prove that this isn't working i'm
86:11 - going to do a console log
86:13 - and i'm going to say you hit
86:16 - search you hit the search button right
86:19 - so i'm going to do this so now because
86:21 - if you go ahead and open the terminal
86:23 - uh open the terminal sorry the inspector
86:27 - let me go ahead and open the inspector
86:30 - so i will go here inspect
86:34 - and uh console yep and this refresh
86:42 - and then let's type in all right so i'm
86:44 - gonna go ahead and do that so let's get
86:46 - out of here
86:53 - yeah and if you hit the enter key
86:57 - yeah i just did yeah nothing happened
87:00 - right
87:00 - nothing happened and i can prove it to
87:03 - you guys by
87:05 - showing the keyboard yep okay
87:08 - if you click the google search button
87:11 - this one here it actually says you
87:14 - search the button
87:15 - right so what we're going to do now is
87:17 - map it so that we can so that when kazi
87:19 - hits the enter key
87:20 - and i'm going to show you it will
87:21 - actually submit that that function so to
87:23 - do that in
87:24 - super super easy way let's go ahead and
87:26 - change this
87:27 - div to a form right which means you have
87:30 - to close the closing
87:31 - make the closing tag of form as well and
87:33 - then all we have to do guys
87:35 - is make the button type the submit and
87:38 - literally with that said whoa
87:42 - my god what's happening you oh god
87:51 - oh my god that's insane
87:55 - whoa okay let's go
87:58 - back on the screen
88:01 - uh frank says guys i just landed a
88:04 - six-figure consulting project
88:06 - for sonos that's
88:10 - insane holy crap
88:16 - [Music]
88:25 - that's crazy dude holy crap
88:29 - holy [ __ ] all right
88:32 - based on the spotify clown okay he goes
88:35 - to make their new react
88:37 - uh to make their new react and react
88:39 - native
88:40 - radio station prod wait what am i doing
88:43 - hold on people can't see the thing my
88:46 - bad
88:46 - so to make their new react and react
88:49 - native
88:50 - radio station product they hired me
88:53 - based on the spotify clone i built using
88:55 - sonny's live
88:57 - video on youtube bro
89:00 - that's insane holy crap
89:03 - oh my god bro bigger concerning project
89:08 - damn dude i'm so incredibly grateful for
89:11 - clever programmer team yo
89:13 - let's get this bread bro
89:16 - insane and guys just a reminder frank
89:19 - was i was speaking to frank on tuesday
89:21 - in a coaching call so right after we
89:23 - finished the whatsapp build
89:25 - i jumped straight on a coaching call and
89:26 - frank was in there talking with him so
89:28 - that's insane that's so so cool yo sonny
89:31 - let's get on
89:32 - let's get on a call after this bro i got
89:34 - some
89:35 - got some good news to share with you but
89:37 - let's get on a call after this
89:39 - yeah dude oh my god that's increds crazy
89:43 - nice so anyanya says definitely joining
89:47 - pwj
89:48 - let's get it yo the cp gang coming in
89:51 - guys
89:53 - profit with javascript join that course
89:55 - you guys already know the deal
89:57 - that's it love that guys love that
90:01 - everybody is wishing him uh let me see
90:04 - if i can do
90:05 - this all right so everybody's wishing
90:07 - him they're like well done frank
90:08 - you guys are rocking anonymous is
90:10 - definitely joining pwj
90:12 - uh good looking giving back frank best
90:15 - of luck that's crazy real motivation
90:18 - guys you are making it rain felipe says
90:20 - little john says oh [ __ ] sonos really
90:23 - uh you guys are doing a really good job
90:26 - awesome damn bro i'm just i'm too hyped
90:29 - man i'm too hyped
90:30 - i know saying that
90:37 - yeah that's like a six-figure job a
90:39 - six-figure con and with sonos sonos is
90:41 - such a big company like
90:43 - oh my god hey dude you know what we
90:46 - should do
90:46 - we should have a counter at the top how
90:48 - many people have landed
90:50 - how many people has clever programmer
90:53 - helped land
90:54 - jobs we should have a counter at the top
90:56 - i want to get to 5 000 this year
90:58 - 5 000 and then next year i want us to
91:01 - get to 10 000 people getting jobs
91:03 - yeah because honestly the amount of
91:05 - people especially in that coaching
91:06 - course or in live streams that say they
91:08 - landed a job like 100
91:09 - we should keep track of that that'd be
91:11 - awesome yeah
91:12 - i think that would be amazing if we did
91:15 - that i'm pumped
91:16 - yeah i definitely want to add a lot of
91:18 - those things in here
91:20 - super super legit and let's get back
91:23 - into the
91:24 - training nice this is crazy right so
91:27 - we changed the outer div into a form
91:30 - right so a form and the class name was
91:32 - search
91:33 - and what we're going to do now is
91:36 - we change the button type the one that
91:38 - we want to trigger
91:39 - when we have the enter key here we
91:41 - change that type to submit
91:42 - so now cause if you type if you i think
91:45 - you might need to refresh but if you
91:46 - type and what i'm gonna do is also i'm
91:47 - gonna say you hit the search button
91:48 - and i'm also gonna show what the input
91:50 - was at that point so
91:52 - let's go ahead and do this one sec one
91:54 - sec let me go ahead and save this
91:56 - uh there we go now if you refresh
92:00 - all right i'm gonna refresh
92:03 - okay so now if you type in and then you
92:06 - hit the enter key
92:07 - so type in some some stuff
92:11 - i see it oh it says you hit the search
92:13 - button and it pulled out what i said
92:15 - which is elon musk
92:16 - dude yeah we were yeah we were looking
92:18 - at your code right i just want to make
92:19 - sure we're following you properly
92:21 - okay yeah yeah so we changed the to get
92:24 - that working guys all we did was change
92:26 - the outer
92:27 - div to a form and change and change the
92:29 - button that we want to trigger on the
92:30 - enter key to
92:31 - type submit that's insane like uh if a
92:34 - lot of people end up doing this hacky
92:35 - way of listening to when the
92:37 - key is pressed don't do any of that just
92:39 - do this simple trick
92:40 - and that will save you uh so much what's
92:42 - the trick
92:43 - type submit so you change the div
92:46 - that you're in to a form so the entire
92:49 - all the children are part of the form
92:50 - and then you change the button type of
92:52 - the thing that you want to sort of
92:53 - submit
92:54 - so if we click that button it will
92:56 - launch uh the search function right
92:58 - but if you make the button type submit
93:00 - it also means when you're in any input
93:02 - field inside
93:04 - of that form and you hit the enter key
93:06 - it will submit this button which means
93:08 - it basically triggers the young click
93:10 - got it now why um i don't want to go too
93:14 - much down a rabbit hole but why do we
93:15 - have to make
93:16 - the entire thing oh because this whole
93:18 - thing is a form you want this entire
93:20 - input to act like a form
93:22 - yeah i want the entire that's okay okay
93:24 - got it got it yep
93:26 - so so even the yeah so you know the our
93:28 - input field is actually kind of a
93:30 - custom input field at this point so yeah
93:33 - so that's how you do it which is pretty
93:34 - cool nice
93:36 - so at that point guys what we're going
93:38 - to do is i'm basically going to say
93:40 - do something with the input right so
93:42 - we're going to come back to this point
93:43 - so i'm going to say come back
93:45 - and fix basically at this point right
93:47 - and then what we're going to do is
93:49 - here i'm going to say uh
93:52 - so so we're actually going to use react
93:54 - viewer gives us something called history
93:55 - right
93:56 - so in order to get the history i'm going
93:58 - to explain what this is but we pretty
93:59 - much need to import
94:00 - the history uh and i'll explain all of
94:03 - this in a sec so
94:04 - import use history this is a hook and
94:06 - this provides us with the browser's
94:08 - history right so what it does is it what
94:11 - we can say at this point is when you hit
94:12 - the search button
94:13 - let's go ahead and take you so we're
94:15 - saying push
94:17 - this page into your history so it's
94:19 - essentially redirecting you
94:21 - right so so push this page and then
94:23 - we're pushing you to the search page
94:26 - right so we're pushing into the search
94:27 - page now remember app.js we said if you
94:30 - go to the search page
94:31 - it renders this out right which means
94:33 - that now cause if you refresh
94:36 - all right let's go ahead and refresh
94:39 - here
94:40 - yep refresh and you type in something
94:45 - into that search bar
94:46 - why isn't it showing up okay there we go
94:48 - yep yeah
94:49 - so type something in and then you hit
94:50 - the enter key
94:56 - oh nice okay so now it's actually
94:59 - routing me to the search page and this
95:00 - is where you're gonna build
95:02 - the actual search page that's gonna have
95:04 - all the results i imagine
95:07 - exactly result one result two result
95:10 - three
95:11 - the little like bar at the top
95:14 - yep exactly but let's go back now so
95:17 - let's go back to
95:18 - forward slash so i'm going to make this
95:21 - component reusable now
95:23 - so i'm going to make a i'm going to
95:24 - slightly modify this component so that
95:26 - we can use it in other places right so
95:30 - in the next page on the results page we
95:31 - don't we want the we want that search
95:33 - bar but we don't want
95:35 - the buttons we don't want the google
95:36 - search and i'm feeling lucky button so
95:38 - what i can do is inside of search
95:42 - i can basically go ahead and this is
95:43 - where we pass in something called props
95:45 - right so i can actually pass a prop in
95:48 - called hide buttons
95:49 - right high buttons and by default
95:53 - that value is false so if we don't pass
95:55 - anything in i'm going to just assume
95:57 - it's false
95:57 - right and then what i can say is
96:01 - i can say right this is where the
96:03 - buttons are getting rendered
96:05 - so i can say if we don't pass the option
96:08 - to hide the buttons
96:10 - then i will render out this this is
96:11 - called a ternary yeah let's go tenory
96:13 - opera
96:14 - so you can go then i can go ahead and do
96:16 - this right so then i can show the
96:18 - buttons
96:19 - otherwise i can go ahead and show the
96:22 - same
96:23 - thing where i can show the same thing
96:24 - but i want to hide the buttons right
96:27 - so here very important thing now
96:31 - the buttons here we have in order to get
96:34 - the uh the enter functionality you still
96:36 - need to render the button
96:38 - but you just have to hide it in a very
96:39 - clever way okay
96:41 - so the way we do that now is i will show
96:43 - you so
96:45 - the way we do that is we pretty much go
96:46 - ahead and do search buttons
96:48 - hidden like this uh sorry we just do a
96:52 - button type i can go ahead and give the
96:55 - um
96:57 - a class name to this button so i can go
97:00 - ahead and give these buttons a class
97:01 - name
97:02 - i can say class name buttons hidden and
97:05 - then what i'm going to do is
97:06 - to hide it but keep its functionality
97:10 - i can go ahead and do this
97:13 - i can say search buttons hidden i can
97:15 - say display
97:17 - none important
97:20 - like this right and what this will do
97:24 - is you see now if i go ahead and where
97:28 - we render that
97:29 - if i go ahead and do the following if i
97:31 - say hide buttons
97:33 - you'll see on the right hand side the
97:35 - button should disappear
97:38 - so kazi check this one out yep this is
97:40 - quite a cool sort of reusability tray so
97:42 - now
97:43 - you see what we did is uh if we go
97:45 - inside so you see at the bottom it says
97:46 - hide buttons
97:48 - yep right i'm passing this prop in so if
97:50 - i if i don't hide the buttons
97:52 - then and i save it down this
97:56 - yeah and then if i hide the buttons
97:59 - oh nice so you can okay that's sick so
98:02 - you can use that search bar
98:04 - in the search that bar that you created
98:06 - you can use it in the search page
98:08 - and remove the google search and i'm
98:10 - feeling lucky buttons and then just be
98:12 - good to go
98:13 - exactly but if we refresh here you'll
98:16 - see that
98:17 - it actually does work right so it
98:19 - actually works
98:20 - and even if you type something in the
98:21 - hit the enter key so let's go ahead and
98:23 - type something in and hit enter key
98:27 - you see it still worked wow yeah even
98:30 - without the buttons present because the
98:32 - buttons are actually there
98:34 - on the dom so they're actually there on
98:35 - the web page yeah we're choosing to
98:37 - display none so we're actually hiding
98:40 - them
98:41 - right wow so that's a really cool
98:43 - important point and we do
98:44 - yeah that's pretty clean like in the
98:46 - ternary operator that you're using
98:49 - basically just goes if the height
98:51 - buttons prop is passed
98:54 - use this class that class displays none
98:59 - exactly damn boy really clean
99:03 - yeah really really clean and what we
99:05 - could do is this could actually be
99:07 - you can actually make this a quite easy
99:09 - like a quite neat
99:11 - um you can actually clean a lot of this
99:13 - up by putting it all inside of
99:15 - uh here so you can actually say class
99:17 - name
99:19 - but i mean we'll leave it as this
99:20 - because this is very explicit you can
99:21 - actually see what's going on but yeah
99:23 - you could make this even cleaner so
99:24 - what we're going to do at this point is
99:26 - we have done the search component
99:29 - right so we actually finished the search
99:30 - component so
99:32 - we have the search component down now
99:34 - what we want to do
99:36 - is whenever we whenever we essentially
99:40 - uh type something in the search field
99:42 - and we go to the search page
99:44 - we want to essentially push this search
99:47 - term into the data layer
99:50 - right we want to push this into the data
99:52 - so that we can use it
99:54 - in the search page right now the reason
99:57 - why you could do this in a number of
99:58 - ways you could use this you could also
99:59 - use react router to do this and
100:01 - pass the search term but it's always
100:03 - cool to show you guys how to use a sort
100:05 - of
100:05 - when i say the data layer i'm referring
100:07 - to the react context api
100:09 - yeah so the react context api is
100:11 - essentially where you can push
100:13 - information into it and you can pull
100:14 - information from internet and it's not
100:16 - and it doesn't matter
100:17 - where you are inside of your app right
100:21 - so it's essentially the redux pattern
100:23 - so what we're going to do now is i'm
100:24 - going to show you how to set up the data
100:26 - and i'm going to do it pretty fast
100:27 - and the reason why we're going to do it
100:28 - pretty fast is because we actually have
100:30 - an amazing little snippet
100:31 - where we explain how to use the entire
100:34 - react context api which we actually
100:35 - uploaded
100:36 - very recently which you can go out and
100:38 - check out after this if you get confused
100:40 - so let's go ahead and do the following
100:43 - so we need to introduce a few things
100:44 - here
100:45 - so inside of index.js we need to go
100:48 - ahead and do the following
100:50 - so this is our app we essentially need
100:52 - to wrap it
100:53 - in something called a state provider
100:55 - right so what this is going to do is
100:57 - essentially going to provide a data
100:58 - layer around our
100:59 - around our app right so it's going to be
101:03 - provide the data layer around our app
101:04 - and our app's going to break because it
101:06 - doesn't know what we're talking about
101:07 - here
101:08 - it's saying hang on but you don't have a
101:09 - state provider what is that so what we
101:11 - need to do is go ahead and create a file
101:13 - called
101:14 - state provider dot js
101:18 - right and inside of here i'm going to
101:20 - basically
101:21 - drop a snippet of code right and i'm
101:23 - going to explain each of the lines
101:25 - and like i said guys at this point if
101:27 - you get confused then remember we did we
101:29 - dropped a video which we explained the
101:32 - entire thing in a lot more detail about
101:34 - how you use the react context api
101:36 - right but i'll explain it right here
101:38 - ever in detail so that anyone watching
101:40 - can actually follow along
101:41 - so this is just importing the required
101:44 - dependencies
101:45 - this right here is basically preparing
101:48 - what we like to call the data layer so i
101:50 - i've referred to it as a data layer so
101:51 - it's actually easy to understand
101:53 - but this is essentially preparing the
101:55 - data layer
101:56 - right and then this right here
102:00 - is what we call a higher order component
102:02 - so you see it says state context and
102:04 - then children
102:05 - now the children that it's referring to
102:07 - is this so the app
102:09 - right the app is essentially the
102:10 - children that we're referring to here
102:11 - and then we pass two things we passed a
102:13 - reducer and an initial state
102:15 - a reducer an initial state you can see
102:17 - here i'll explain what they are
102:19 - in a second but essentially the initial
102:21 - state is what that data layer
102:23 - looks like when the app is loaded right
102:26 - the reducer is something which is clever
102:28 - and it listens to changes
102:30 - uh for the that will be needed from
102:32 - there that
102:33 - now this is a hook so this is a hook
102:36 - this is a hook
102:37 - which allows us which allows us to
102:40 - pull information from the data
102:47 - right so this is a hook which allows us
102:48 - to pull information from the data layer
102:50 - so with all of this information so this
102:53 - is again this is just one of those
102:54 - pieces of codes which is very very it's
102:56 - like a snippet of code
102:57 - which is going to allow you to actually
102:58 - set everything up so quick and easily
103:01 - right so make sure you do go ahead and
103:03 - check out that video that we talked
103:04 - about
103:04 - uh that we dropped and it's all about
103:06 - how you can pretty much understand the
103:08 - redux plan and understand the react
103:10 - context api
103:11 - but i'm going to show you the next thing
103:12 - that we need and we need
103:14 - the initial state and the reducer and
103:16 - all of this is going to live
103:18 - in a file called reducer.js it's
103:21 - lowercase because it's not a component
103:24 - so now we're inside of reducer.js so
103:26 - inside of here
103:28 - we're going to have a few things the
103:29 - first thing is we're going to have an
103:31 - initial state
103:32 - an initial state this is essentially
103:34 - what the date what does the data layer
103:36 - look like and you can notice as an
103:37 - object right and all we have inside this
103:40 - object is a term
103:41 - and in the beginning the term is no
103:43 - right but when we sort of add in
103:45 - so when you type in like elon musk you
103:47 - want this to change to something like
103:48 - this
103:49 - elon musk right so this is where the
103:51 - data is going to live
103:52 - inside of initial state right but
103:55 - initial state is essentially what it
103:56 - looks like when that first loads
103:59 - then we have something interesting
104:00 - called action types
104:02 - now here whenever we want to change the
104:05 - data layer
104:06 - we need to dispatch an action so imagine
104:08 - like if you
104:10 - whenever kazi types in the input field
104:12 - and hits the enter key
104:13 - i want to basically dispatch an action
104:15 - which says go ahead and change or set
104:18 - the search term right so this is what
104:21 - the action type is
104:22 - right so this is very important this is
104:23 - what the action type is in here we're
104:25 - just using
104:26 - set search term as our action type now
104:30 - to get all of this working we have one
104:32 - final piece of magic that goes along
104:34 - with everything and this
104:35 - is the reducer okay so this is the final
104:39 - bit and once we're done with this
104:40 - yeah everything will come together okay
104:42 - so so stick with me here
104:44 - so this is the final bit we have a
104:46 - reducer
104:48 - the state is the state of the data layer
104:50 - and the action is whatever we're
104:51 - dispatching
104:52 - into the into the data layer so into the
104:55 - the context
104:56 - api right i like to add a console log
104:59 - here
104:59 - for debugging purposes so that way
105:01 - whenever we do
105:02 - any manipulation to the data layer it
105:05 - will change
105:06 - um it will change it will actually log
105:08 - out the action that we dispatched
105:10 - right now what we do is inside the data
105:14 - layer so the reducer's job
105:15 - is to listen for any dispatched actions
105:19 - that's all it does if we don't know what
105:21 - the dispatch
105:22 - action is it just returns the initial
105:24 - whatever the state currently was
105:26 - but say for example if we know what it
105:27 - is so say for example if i dispatch
105:29 - an action called set search term like
105:32 - this one
105:33 - it's going to return what the new data
105:35 - layer should look like so this is saying
105:37 - return whatever the state currently
105:39 - looks like
105:40 - this is called a spread operator and
105:42 - then
105:43 - also change the term inside of the data
105:46 - with whatever action term you dispatched
105:50 - right so again this will make a lot of
105:52 - sense once we actually come into
105:54 - practice and we actually
105:55 - want to actually show you how this works
105:57 - and again just to reiterate
105:59 - this is um this is actually really
106:03 - broken down nicely
106:04 - and in a visual representation in one of
106:06 - the videos that we dropped previously
106:07 - and it says
106:08 - uh i think it's the missing explanation
106:10 - to the react context api
106:13 - uh or for slash redux so make sure you
106:15 - go and check that out
106:16 - because if somebody said you guys um i
106:18 - do you guys sell hoodies
106:21 - we should we should actually we should
106:23 - surely should
106:25 - yeah we should make some clever
106:27 - programming hoodies that'd be good
106:28 - that'd be nice yeah i would totally cop
106:29 - me as
106:30 - a cover program already yeah that'd be
106:32 - dope
106:34 - if somebody's good at that stuff
106:35 - designing uh hoodies and designing
106:38 - shirts
106:38 - and you also know about how things like
106:41 - teespring
106:42 - works just design it
106:45 - reach out to us on instagram like dm me
106:47 - and then i can actually we can have a
106:49 - conversation because
106:50 - that's something we want to launch we
106:52 - want to actually have a merch
106:54 - and so if you just dm me and you show me
106:56 - this stuff then we can actually like
106:58 - talk and
106:58 - make it kind of go live that'd be really
107:00 - really cool
107:02 - that'd be awesome nice so we've set up
107:05 - the reducer
107:06 - and now what we're going to do is to use
107:08 - this it's
107:09 - quite simple to actually so that was the
107:11 - hard part guys that was the that was the
107:12 - hardest part of
107:13 - the build right setting up this stuff
107:16 - and again we have a video which runs you
107:17 - through the entire thing so i recommend
107:19 - you go and check that out so
107:20 - we need to uh import some of the
107:22 - dependencies here so i'm going to import
107:24 - the reducer and the initial state from
107:26 - that reducer file and
107:27 - import the state provider from that
107:29 - magic statement provider file that we
107:31 - created earlier
107:32 - and you should have and you shouldn't
107:34 - have any errors when you get to this
107:35 - point so you should see
107:36 - the app continues to work as we expect
107:38 - it to
107:39 - but now what we've done is we've
107:40 - essentially wrapped the app inside of a
107:42 - data layer
107:43 - so we can push information into this
107:44 - data lab whenever we want so the search
107:46 - term for example
107:47 - and then we can also pull that data
107:49 - whenever we need to right
107:51 - so now let's go back into search and
107:53 - here what we do is to get that
107:54 - information remember that hook that we
107:56 - built inside of here so this one use
107:58 - state value
107:59 - all right we're going to go ahead and
108:00 - use that now inside of the search dot js
108:02 - so let's go ahead and go to search
108:05 - dot js over here and what i'm going to
108:07 - do is i'm going to go ahead and say this
108:09 - so i'm going to go ahead and pop this
108:11 - line in and basically we need to import
108:13 - the state value so that hook that i just
108:15 - showed you
108:15 - i need to import that and what we're
108:18 - doing here
108:19 - is this is actually it gives us two
108:21 - things it gives us the state so whatever
108:22 - the data layer looks like
108:24 - and a dispatch and this is like a gun
108:26 - that allows us to shoot
108:28 - actions into the data so that we can
108:30 - change it right
108:32 - so here what i'm going to say is break
108:34 - apart the state
108:35 - and give me the search term but in this
108:36 - case we don't need it right now
108:38 - but so i can just leave this blank all i
108:40 - need is a dispatch
108:42 - so whenever we type in the search field
108:44 - what i'm going to do is i'm going to
108:45 - dispatch
108:47 - right i'm going to dispatch an action
108:49 - and the type of the action
108:51 - so i need to insert i need to import the
108:53 - action types
108:54 - from the reducer so this was this thing
108:56 - right here i need to import that so we
108:58 - have those i need to say dispatch a type
109:01 - of action
109:02 - and the type of the action is going to
109:04 - be action types dot set search term
109:07 - right and you can do it like you can do
109:10 - it as a loose string
109:11 - but the reason why we do an object is so
109:13 - that they match perfectly
109:15 - from here to here so if we use an object
109:18 - we don't actually make any string
109:19 - mistakes
109:20 - so that's why i do i do action types dot
109:23 - set search term
109:24 - and then remember inside the reducer
109:27 - here we had term
109:28 - and then we actually changed the term
109:30 - inside the the state with this
109:32 - action.term right
109:33 - so the action.term that we're talking
109:35 - about is here
109:36 - so term so if i pass an abc it's going
109:39 - to be abc but
109:40 - remember we actually track the input up
109:43 - here right so we want the term to be
109:45 - whatever the input was
109:47 - because that makes sense right that
109:48 - makes a lot of sense we just got another
109:50 - donation thank you rb gaming squad he
109:52 - says good work guys love your videos
109:54 - give some project ideas on react
109:56 - awesome dude thank you yeah so now what
109:59 - this does is it dispatches an
110:01 - action so not only are we going to push
110:03 - the user to the search page
110:05 - but now we've pushed them to the search
110:08 - page
110:08 - and we've also said here put the search
110:11 - term inside the data there
110:12 - right and then what that allows us to do
110:14 - then is inside the search component
110:16 - we can now pull the search term that
110:18 - they had when they were at the home page
110:20 - in that google
110:21 - input field so with that said qazi let's
110:23 - go ahead
110:24 - and uh refresh why is this freaking out
110:27 - it's saying
110:28 - you state there we go
110:33 - nice yeah so now let's go back to uh
110:37 - forward slash
110:41 - yep oh somebody said update the title
110:43 - yeah we should uh i guess we still are
110:45 - doing the search term
110:46 - but we yeah we basically just set up we
110:50 - just set up the react context api
110:52 - yeah i mean i guess the whole freaking
110:53 - thing is a google search
110:55 - you know like we're building google
110:56 - search i feel like we're never gonna
110:57 - change that we
110:58 - might as well just change it yeah so
111:01 - now what functionality are we building
111:05 - um
111:06 - so now what we're doing is where
111:10 - we well we just set up the react context
111:12 - api but we're going to be moving to
111:14 - building the search page
111:16 - okay yeah that's really good build
111:18 - search page
111:20 - yeah search results page right
111:24 - yep cool all right i think that
111:27 - is that i think that's clean like that
111:30 - looks really good i'm just gonna put a
111:32 - little
111:34 - yeah that's the official sound of we're
111:37 - on on to the new stuff
111:39 - awesome so steve mccarthy says also
111:42 - somebody has to keep an eye on sonny
111:45 - i'm not sure what he means so now
111:48 - yeah so now what we're gonna do is um
111:52 - we are going to go ahead and test this
111:55 - so because
111:55 - if you type in something like let's type
111:57 - in uh
111:59 - this is a google clone inside the input
112:01 - field
112:03 - okay
112:07 - okay yeah and now if you hit enter
112:11 - we should redirect and we should see
112:13 - that it dispatched an action do you see
112:19 - yeah so that means that now we actually
112:22 - updated the term inside of our data
112:24 - layer to google clone which means inside
112:26 - this component now inside the search
112:27 - component
112:28 - we should be able to pull it right we
112:30 - should be able to put it
112:32 - so how do we do that let's go ahead and
112:35 - go to our home.js go to your app.js
112:38 - this is the search page that we see at
112:40 - the moment this is a search page but
112:41 - this is useless
112:43 - we want to see a search page component
112:45 - we want to see something like this
112:49 - yeah this is the search page right
112:53 - so let's go ahead and create that
112:55 - component so i'm going to go ahead and
112:56 - do search
112:57 - page dot js and then once that loads up
113:00 - i'm going to do rfce
113:03 - so rfce and boom like this
113:08 - i just want to share something so i
113:10 - dropped it in our pwj community
113:13 - uh that frank just landed a hundred
113:15 - thousand a year
113:16 - consulting project at sonos to build
113:18 - their new react uh
113:21 - our radio station product with react and
113:23 - react native
113:24 - and then david jonathan who was actually
113:27 - on these live streams if you remember
113:30 - yeah he's now in pwj and he's like
113:32 - congrats frank really excited for you my
113:34 - friend so
113:34 - uh soren who's awesome and then devin
113:36 - gray who also was on these live streams
113:39 - goes that's dope especially because i
113:42 - hate their current radio station apps
113:44 - please fix it so i can enjoy it sonos
113:46 - soon
113:48 - again and then frank um you know the
113:51 - person who actually got this one he goes
113:54 - i'm so excited to share this win with
113:55 - the entire community damn that's amazing
113:57 - dude
113:58 - it makes me so happy guys like i like
114:01 - the video for frank
114:03 - yeah exactly so guys like
114:06 - it's it's really like a no-brainer when
114:08 - you see that kind of stuff like
114:10 - the course whatever the course costs
114:12 - frank just made six figures
114:14 - inside right and literally and i shared
114:16 - this too with everybody like two weeks
114:18 - before that
114:19 - jen got an offer for 96k a year
114:22 - based on the covet tracker project so
114:24 - these are
114:25 - like i said here these projects that
114:27 - we're showing you are
114:28 - as real world as it gets yeah
114:32 - and like truth be told like what we're
114:34 - offering the course for at the moment
114:36 - is hugely underpriced like we will be
114:38 - pushing the price up
114:39 - soon so it should be 5 000
114:42 - 10 000 like you know coding boot camps
114:44 - but we are
114:46 - offering it in a way where more people
114:48 - can actually join it
114:50 - exactly exactly so that guy's like jump
114:53 - in why you got a chance because it will
114:55 - go up eventually and and
114:56 - because i mean like it's so much like
114:58 - the price is guaranteed it already went
115:00 - up and now it's gonna go up again
115:02 - when we do the react challenge in one to
115:05 - two weeks from now
115:07 - yeah exactly and also if you're pumped
115:09 - about that drop a thumbs up
115:11 - nice that would be fun yeah yeah so
115:14 - we're going to add a class name for bam
115:16 - so let's say class search page
115:18 - let's carry on guys so let's go ahead
115:19 - and do import
115:22 - search page dot css
115:25 - over here i'm going to go ahead and
115:27 - create that page so search page dot css
115:30 - search page css over there and we should
115:32 - go inside
115:32 - sonny if you get the 2k likes i'll buy
115:35 - you dinner tomorrow
115:37 - oh nice
115:38 - [Laughter]
115:40 - let's go guys
115:48 - oh man that's so funny you heard it here
115:51 - first guys get me those 500 likes
115:53 - yeah what if like that was your biggest
115:55 - driver
115:57 - i know right it's getting free dinner
116:04 - [Laughter]
116:09 - he's just on the streets like homeless
116:11 - bum coding in php
116:15 - building clones oh man
116:20 - let's go so we got the search page
116:23 - uh and now inside the search okay so the
116:26 - search page is one of the most sort of
116:29 - like
116:29 - fun components to build and we'll go
116:31 - through it and we'll break it down bit
116:33 - by bit
116:34 - um but basically it consists of a bunch
116:36 - of different sections so
116:38 - we'll stick to the way we do things
116:40 - typically and the search page currently
116:42 - has a header
116:43 - so let's go ahead and add that so we've
116:45 - got a div of the class name
116:48 - of search page
116:51 - this is search page underscore
116:54 - underscore
116:54 - uh header like this
116:58 - and i don't know why it does that but
116:59 - here we go so we've got this right so
117:01 - we've got the header at the top of the
117:02 - search page
117:03 - and then we have the search results
117:04 - underneath it right so the search
117:06 - results are going to be
117:08 - essentially underneath it here so we
117:10 - have the header
117:11 - and we have the results so two sections
117:13 - inside of here
117:16 - like this right we've got the header and
117:18 - the results and what we can do guys to
117:20 - test this out and have a little bit of
117:21 - fun
117:22 - remember we just pushed a value into the
117:24 - data layer so let's go ahead and
117:25 - actually check
117:26 - if that value came through so remember i
117:28 - said that when we
117:30 - whenever we grab a value from the data
117:31 - layer it gives us the state and the
117:33 - dispatch
117:33 - right so what i can do is firstly i need
117:35 - to go ahead and import the state
117:37 - value hook so use state value like this
117:40 - and here what i'm going to do is
117:41 - i'm going to destructure the state and
117:43 - say get me the search term
117:44 - which we put inside the state and now
117:48 - what i'm going to do is just to test if
117:49 - this works i'm going to say
117:52 - render a h1 tag with that search term
117:55 - inside of it
117:55 - if it exists right so this should be
117:58 - correct like this
117:59 - and then here so now if i go ahead and
118:02 - do say it says search page is not
118:04 - defined
118:05 - so now if we go to home.js
118:09 - and we go here search page inside of
118:12 - home
118:13 - hey ananya says he goes qazi
118:16 - i will be joining pwj in a few
118:19 - awesome once you're in there i will know
118:22 - you're in there in slack just give a
118:23 - shout out and tag me
118:25 - and i'm going to respond to you and then
118:26 - tomorrow livestream uh
118:28 - will definitely show that you have
118:29 - joined it i think that's going to be
118:31 - epic
118:32 - yeah that would be dope that'd be
118:34 - awesome
118:36 - search page
118:42 - no no that's fine yeah i'm good i'm good
118:46 - so if we save this now what we should
118:48 - see is
118:50 - inside i think hajira and the youtube
118:52 - comments will know what i'm talking
118:53 - about and maybe like one
118:55 - one or two people might but i'm not
118:57 - gonna say anything let's keep going
119:00 - yeah right so now if i save it what we
119:04 - should have
119:05 - is it says module okay yeah oops
119:07 - somebody actually pointed that out
119:09 - before so i saw that thank you guys uh
119:11 - so if i do that now so
119:13 - because if you want to go to the forward
119:15 - slash so let's go back to the forward
119:17 - slash
119:24 - yeah and now this go ahead and type in
119:28 - like
119:28 - any search term history tesla stock or
119:30 - something like that
119:41 - nice you're muted
119:46 - for a while okay all right so i
119:49 - basically said a
119:50 - robin hood app i mean that's not that
119:52 - interesting anymore
119:54 - and i said i love that you're actually
119:56 - pulling the search term man and showing
119:58 - it on the screen
119:59 - now we're actually able to uh get the
120:02 - search and actually query it and i'm
120:04 - sure
120:05 - the part that's coming up soon is going
120:07 - to be the google
120:08 - search api yeah exactly
120:12 - exactly yeah so guys dude frank this is
120:15 - awesome frank just said
120:17 - i can make uh hold up hold up i'm i'm
120:20 - getting uh
120:21 - ajira's like i know right all right
120:23 - frank basically says um
120:26 - i can make the shopify site for the cp
120:28 - shirts and hoodies
120:30 - that is awesome frank actually that
120:31 - would be really dope would love to like
120:33 - share it with everybody
120:37 - well it says easy i can make the shop oh
120:39 - nice kenny oh sick
120:41 - yeah so yeah that would be sick
120:44 - um awesome so we've got the rubbing head
120:47 - up being pulled through so the search
120:49 - term gets pulled through now which is
120:50 - nice right
120:53 - now obviously what we want to do at this
120:55 - point is we just want to kind of run a
120:57 - search on that right so i want to
120:59 - actually go ahead and connect to google
121:03 - and run a search on it right so what do
121:06 - we need to do in order to get that
121:07 - working so
121:08 - firstly we actually need a key so we're
121:11 - going to be using something called the
121:13 - custom search
121:14 - api so kazi if you go ahead and go over
121:17 - to
121:17 - this link right now i'm going to drop it
121:20 - inside of
121:21 - i'm going to drop it inside of um inside
121:23 - of here so you see it
121:25 - got it yes let's go let's go to that
121:27 - link command t command v
121:29 - enter by the way guys all of you guys
121:31 - should be doing that
121:32 - exactly people move way too slowly on
121:35 - their computers
121:36 - yeah all right here we go oh kareem the
121:40 - crew
121:40 - just said kazi how do i join pwj link in
121:43 - the description
121:44 - uh you can actually go ahead and check
121:46 - out and there will be a link where you
121:47 - can
121:48 - go ahead and here's how you can join it
121:50 - cleverprogrammer.com
121:52 - pwj that's it yeah
121:56 - and then you go here watch that
121:59 - badass video we have it's going to give
122:02 - you
122:03 - exactly what you're going to get inside
122:04 - of this program and then
122:06 - you know once you like it just jump in
122:08 - that's it
122:10 - that's it yeah cool let's keep going
122:15 - we also have a free training in the
122:17 - description guys so there's a link to
122:19 - the
122:19 - program and the free training in the
122:21 - description make sure you check that out
122:23 - um awesome so i'm here so
122:27 - yep so now you're here so if you go down
122:30 - to
122:33 - all right let's go down and it should
122:35 - say
122:37 - at some point uh go back up sorry so you
122:40 - actually need
122:43 - where is this it was in this page so let
122:45 - me go ahead and find this
122:47 - what are you looking for basically we
122:49 - need to get a
122:50 - api key so what you want to do is click
122:54 - on that um
122:56 - okay yeah so click on the identify your
122:58 - application so go up to the top
123:00 - so you see where i didn't i got it so
123:03 - you're going to click on that guys
123:04 - go to this link yeah click on get a key
123:06 - so this is the custom search api
123:08 - should i have it uh yeah yeah so you
123:12 - want to hide the screen yeah
123:14 - i'm hiding the screen yeah so
123:17 - at this point so you could probably show
123:20 - this bit quasi but don't click
123:21 - next yeah all right i'll show this bit
123:23 - right over here
123:24 - api okay so um
123:28 - let me actually switch to my other
123:30 - account real quick
123:33 - and now give me one second you guys now
123:35 - i'm gonna click get a key
123:37 - all right and um here
123:41 - on the create a project i'll choose the
123:43 - project that we're creating right now
123:44 - yeah
123:45 - the google clone yep and don't click
123:48 - next once you've done that but
123:49 - google click on the google chrome now
123:51 - i'm going to click next
123:53 - i'm gonna click all right i'll hide my
123:56 - screen
123:56 - next yeah it's gonna hide your screen
124:00 - and then click next and then what will
124:01 - happen here guys
124:02 - is you will get an api key right so you
124:06 - want to save this key
124:07 - and the reason why we're not showing you
124:09 - guys the key is because
124:10 - you have a free limit of 100 queries a
124:13 - day
124:13 - right which is enough for a portfolio
124:15 - but we don't want to
124:16 - like it's just it's just oh that's nice
124:18 - dude come on
124:20 - bro your boy is clean guys your key will
124:23 - look like this
124:25 - you know i didn't do that doing a little
124:28 - bit of live editing
124:30 - so that's what that page should look
124:32 - like by the way i'm just hiding mine
124:34 - yeah
124:35 - yeah hide it before you click save and
124:36 - copy here
124:38 - cool all right so now what are we doing
124:40 - sonny what do i do with that
124:42 - now awesome so once you have that key
124:45 - guys
124:46 - what you're going to do is let's go
124:47 - ahead and create a keys.js file so i'm
124:49 - going to go ahead and create keys
124:52 - dot js file okay like this
124:55 - yeah and what i'm going to do here is
124:58 - i'm basically going to hold on hold on
124:59 - hold on we're not looking at anything
125:00 - you're doing bro one second
125:02 - oh yeah so i just i just created the
125:04 - keys.js file i see it
125:06 - yeah so now what i'm going to do is i'm
125:09 - going to go ahead
125:10 - and give me one sec
125:14 - let's go ahead and do the following so
125:17 - you want to write the following inside
125:19 - of that so export const
125:21 - right so export cons api key and it
125:24 - equals your api key right and then
125:27 - export default api key so this is going
125:29 - to allow you
125:30 - to essentially uh put that value here
125:33 - and then use the api key throughout your
125:35 - app
125:35 - all right so at this point what we're
125:37 - going to do
125:38 - is uh i'm going to leave this screen so
125:41 - so
125:42 - and i'm going to ask quasi to replace
125:44 - this on his key
125:46 - actually unfollow me quasi for a sec bro
125:52 - do you want me to create like an end
125:53 - file and then pop it in there
125:56 - no we can do m-files but i think for
125:58 - this build we'll do it this way because
126:00 - they won't see this are you gonna you're
126:02 - gonna remember never to go into that
126:03 - file
126:05 - yeah all right let's do it bro i'm
126:08 - ready let's go hey
126:12 - i just pasted it nobody can see it oh
126:14 - wait okay
126:17 - [Laughter]
126:28 - level like you got to actually add and
126:30 - add in some hand eye coordination
126:32 - like mobility yeah just
126:36 - pretty cool so you want to basically
126:40 - you want to hide that so because you
126:41 - want to close that file just in case
126:43 - okay i just saved it i'm closed out of
126:45 - it all right
126:46 - okay so now we have access to our api
126:49 - key right so wherever we are we can
126:51 - access
126:51 - access to it so i think you might need
126:53 - to follow me again after that stuff
126:55 - somebody says qazi
126:58 - you're looking sexy bro
127:02 - thank you bro i appreciate it i
127:06 - appreciate it
127:07 - yeah john john james valencia cardona
127:11 - says one click away and you're
127:13 - busted
127:16 - yeah no it's all good you know i like to
127:18 - be smooth like that
127:20 - we like to live on the edge guys nice
127:23 - so with that what we're going to do now
127:25 - is go ahead and we're going to create
127:28 - a custom hook right so we've never done
127:30 - this before yeah we're at 184 dollars
127:32 - in super chats today dude that is crazy
127:36 - that is absolutely crazy i mean we might
127:39 - we might even break 200 today but you
127:41 - know let's keep going
127:44 - insane so guys what we're going to do
127:46 - now
127:47 - is we are going to go over to so in
127:50 - order to
127:50 - actually use the uh the google search
127:54 - uh sort of search uh api you actually
127:57 - have to do one more step right so you
127:58 - have to go ahead and go
127:59 - over to this link causey so this one
128:01 - here this is cse.google.com
128:03 - for cse create new so click that one
128:06 - okay i'm gonna and i can share i'm gonna
128:08 - show that on the computer right
128:09 - yeah yeah this this stuff we can share
128:11 - all right because
128:12 - this even if they have this i hate how
128:14 - nothing in google is responsive like
128:17 - look at that
128:18 - yeah it's super cool like firebase was
128:21 - actually
128:22 - frank told me this firebase was a
128:23 - startup company and i remember because i
128:25 - actually followed them when they were
128:26 - start before
128:27 - they got acquired by google yeah quick
128:30 - question
128:31 - yup um so uh should
128:35 - does it should it be all under the same
128:37 - email or does it
128:38 - not matter because this is a different
128:41 - email i'm looking at right now
128:42 - then you know what i'm saying oh uh yeah
128:46 - let's make it the same let's just just
128:48 - so because
128:48 - we ran into some stuff on the live but
128:50 - let's change it yeah i mean i want to
128:51 - change it but it's kind of not allowing
128:54 - me to
128:54 - like you know what i mean like it
128:56 - doesn't even give me the option right
128:57 - here if you're seeing that
128:59 - uh click sign out
129:03 - um okay
129:06 - god i hate doing that okay like my whole
129:09 - sinking is paused and my entire
129:11 - bookmarks
129:13 - oh my god what are you doing to me bro
129:18 - you know what you know what hold on hold
129:19 - on i'm not going to do that i'm i'm
129:21 - going to stay locked in oh
129:22 - you don't get incognito maybe yeah i was
129:25 - just going to do the incognito
129:27 - all right because your approach is it's
129:30 - too costly
129:32 - all right here we go create new
129:37 - let's open up incognito paste
129:43 - boom there we go now type in my email
129:53 - okay that should be good to go in a
129:55 - second
129:56 - okay it's asking me to verify on my
129:58 - phone
129:59 - nice and guys if you're enjoying this
130:01 - and you found like quite valuable
130:03 - whether it be like the react context api
130:06 - whether it be like this stuff what we're
130:07 - doing right now just literally
130:09 - all we ask is you smash the thumbs up
130:10 - button oh man that will help get this
130:12 - video
130:12 - out to as many people as we possibly can
130:15 - i wish there were more hurdles for me to
130:17 - jump over to get to this page but
130:20 - all right what do we do now right now
130:23 - what we're going to do is we're going to
130:24 - type in www.google.com
130:28 - so google.com and then
130:31 - what we're going to do is we'll just
130:32 - name this one google click create
130:34 - but we're not done there because they
130:36 - don't make it that easy this is kind of
130:38 - like aws
130:39 - so you want to basically go to edit
130:41 - search engine
130:43 - what where on the left on the left
130:47 - so yep and then click on
130:50 - setup
130:54 - yep and here you see where it says
130:57 - so let's go down
131:01 - uh down and then search the entire web
131:03 - click uh toggle that
131:06 - oh wow nice yeah
131:10 - and what's it called and then what we're
131:12 - going to do
131:13 - is uh we're going to go up
131:18 - let's go up to a search engine id so you
131:22 - see where it says search engine id you
131:23 - just want to grab that id
131:25 - got it yeah and let's just uh
131:29 - let's paste that inside so keep hold of
131:32 - that for now yeah
131:33 - so guys you're going to need that so
131:34 - keep a part of that and what i'm going
131:36 - to do is i'm going to create a file
131:38 - called use google search right use
131:41 - google search dot js so you anything
131:43 - that has used in front of it
131:45 - is a hook right so hey come on bro
131:48 - exactly so here i'm going to say rfce
131:52 - so like this and i'm actually going to
131:54 - go ahead and change a few things i want
131:56 - to say con so i want this to be an es6
131:58 - function it doesn't make a difference
131:59 - but it's going to be super clean
132:00 - are we still live
132:04 - okay yeah should still be uh okay it
132:06 - says my
132:07 - chat is disconnected so i'm just gonna
132:09 - refresh hopefully
132:12 - um hopefully everything keep going keep
132:15 - going sunny and then yeah i'm just
132:17 - joking
132:18 - okay no worries so now we
132:21 - where we have used google search i'm
132:22 - going to go ahead and it's not we don't
132:24 - need any of this stuff because it's not
132:26 - actually like a component like that as
132:27 - such
132:28 - but what we do need is we don't even
132:29 - need to import react because it's
132:31 - actually
132:31 - we need to use state and use effect so
132:33 - i'm going to import those two things
132:35 - and then i'm going to import the api key
132:38 - that we just
132:39 - sort of set up earlier from our keys so
132:41 - i'm going to import that key from our
132:43 - keys
132:44 - and then what i'm going to do is um
132:48 - save it oh kazi can you see my i can't
132:51 - see my code on your screen
132:53 - um okay let me
132:56 - wait why is that i'm fine yep we're back
133:00 - now we're back yeah
133:00 - yeah so now where it says use google
133:03 - search what i'm going to do here is i'm
133:04 - going to basically go ahead and put in
133:06 - the context key over here so i'm going
133:07 - to make a const contact
133:09 - uh context key and then cause if you
133:11 - want to replace this
133:12 - key with so this one right here replace
133:16 - that with our key that we just had got
133:18 - it let me do that
133:21 - boom done yeah so you're going to need
133:24 - this context key and that basically
133:25 - tells google
133:26 - which search engine to use so the one
133:28 - that we just created which searches the
133:29 - entire web
133:30 - that's the one that we want now what
133:32 - we're going to do is we're going to
133:33 - create a piece of states this is how you
133:35 - use it this is how you make a custom
133:37 - hook right
133:38 - so here what we're going to do is this
133:40 - hook is going to have its own piece of
133:42 - state
133:42 - called data right it's gonna have its
133:44 - own piece of state called data
133:46 - right so like it's just like a
133:47 - functional component does it's gonna
133:48 - have its own
133:49 - and this hook whenever we use it has a
133:53 - use effect right so whenever we use this
133:55 - hook
133:55 - it's gonna fire off a use effect and
133:58 - this use effect is dependent
134:00 - on term so term here right now so what
134:03 - we're saying is
134:04 - whenever and term we pass in by the way
134:07 - and we pass the term as a value inside
134:09 - the hook
134:09 - so what we're doing here is we're saying
134:11 - we pass in term
134:13 - to this inside of this uh this hook and
134:15 - then whenever term changes we're going
134:17 - to fire off this code inside of here
134:19 - okay it's essentially what we're saying
134:22 - now
134:22 - we need to do an async fetch right so
134:26 - some kind of function sunny real quick
134:28 - sunny real quick
134:30 - do i need this open any longer this here
134:34 - no okay yeah i'm just gonna keep it
134:38 - there like accessible anyway and then
134:41 - let's go
134:42 - to our local host now what your
134:46 - so what you're explaining about this
134:47 - term
134:49 - what you mean by this is if
134:52 - so the term is going to be whatever
134:53 - somebody types in here
134:56 - yes yep is that is that right or am i
134:59 - making that up
135:00 - no no that's correct yeah because
135:02 - remember what we do is we type it in
135:03 - there
135:04 - then we dispatch it into the data layer
135:06 - so it's now sitting in the data layer
135:08 - and then when the search page we're
135:10 - going to be doing is pulling that term
135:12 - and we're just going to be using this is
135:14 - a data layer variable
135:16 - so this will be the this will be a data
135:18 - layer variable yes
135:19 - got it okay so data layer and then
135:23 - whenever this changes is when we want
135:26 - this use effect to be called
135:28 - this hook to be called exactly yeah so
135:31 - for example
135:32 - if we not only typed in a new search
135:36 - not only did we hit enter on this new
135:38 - search
135:39 - but we passed it to our data layer our
135:42 - data layer
135:43 - got a new term like elon musk or
135:45 - whatever
135:47 - and then it fires this use effect
135:50 - and this use effect basically will get
135:53 - all the search results
135:55 - using the google yeah right and then
135:58 - take you to the search results page
136:01 - uh so it doesn't it doesn't take you to
136:03 - the search results but it'll get the
136:04 - search results
136:06 - yeah this is responsible for getting the
136:08 - search so when you get the search
136:09 - results are we putting that in the data
136:10 - layer as well where are we putting the
136:12 - results when we get them
136:14 - no no so this is actually a hook which
136:16 - means that like
136:18 - so imagine inside of the so this will
136:20 - return some data so you see here
136:22 - and then what happens is we pretty much
136:24 - will use it like this we'll say got it
136:26 - got it
136:27 - data equals use google search
136:30 - okay okay got it so it'll return the
136:32 - data and then we have access to it and
136:34 - then we just display it on the page
136:36 - okay exactly yeah so it's a really clean
136:40 - hook like this is i'm
136:41 - i was quite proud of him when i wrote
136:42 - this today like it's a really really
136:44 - nice hook
136:45 - and it's super clean like at the end
136:47 - result is really nice so
136:48 - um what we do is here we need to
136:50 - basically we want to
136:52 - do some kind of async fetch inside of
136:54 - and use effect and now whenever you have
136:56 - an async use a async function or async
136:59 - any action inside the user effect
137:01 - you have to make a function so for
137:03 - example here i do const fetch data
137:05 - and this is going to be an async
137:07 - function
137:09 - all right so it's an async function and
137:12 - what we're saying
137:12 - is um uh we're saying
137:15 - fetch right and then we're gonna put the
137:18 - url
137:19 - so i'm gonna use backticks because i'm
137:20 - gonna do string interpolation and i'm
137:22 - basically gonna go ahead and pop in
137:25 - uh the following so this is the url you
137:27 - guys are going to need
137:28 - right so this is the url that you guys
137:29 - are going to need so you can pretty much
137:30 - pause the video copy it do what you got
137:32 - to do
137:32 - and this is the endpoint that connects
137:34 - to google's custom search api
137:37 - and what happens is we pass in a key
137:39 - right
137:40 - we pass in a context which is the search
137:42 - engine the cx
137:43 - and this is takes the context key that
137:45 - we just put at the top and it takes a
137:47 - term so this is
137:48 - q stands for query and this is the term
137:50 - that we pass in right
137:52 - so that what because we set everything
137:55 - up
137:56 - what we can say is we can say make the
137:58 - response
137:59 - when you get back a response so when you
138:01 - get the response back
138:03 - go ahead and change the response into
138:06 - a response.json so basically get the
138:09 - json
138:10 - from the response right and this
138:11 - shouldn't be capitals it should be
138:13 - so i'm going to make this very clear i'm
138:14 - going to say response hey
138:18 - let's go you don't need marabon to buy
138:21 - you dinner anymore frankie
138:23 - frank it says sonny and qazi would love
138:26 - to send you guys an uber eats credit as
138:28 - a little thank you for helping me land a
138:29 - sonos gig
138:30 - let's go tonight
138:34 - that's so dope thank you dude that's
138:36 - insane
138:37 - thank you bro yeah thanks for saying
138:42 - thank you dude all right so now what
138:45 - we're gonna do
138:46 - is we are going to so we basically said
138:48 - when we get the response back
138:50 - we want to say change the response to
138:53 - get the json from the response
138:55 - and then what we're going to do is once
138:57 - we do that you can chain the ends up by
138:59 - the way guys so you can actually chain
139:00 - them up so we're going to say then
139:01 - whatever the result is so that json that
139:03 - you're talking about
139:04 - we're going to basically set that we're
139:07 - going to set the data
139:08 - to that result right so this is very
139:10 - interesting what we're doing here
139:12 - we're saying the data the piece of state
139:15 - that is par
139:16 - inside of this hook right we're setting
139:19 - that data
139:20 - right and then what we're doing is we
139:22 - need to execute that function so we're
139:23 - saying fetch there so this is actually
139:26 - a custom hook so this entire thing
139:30 - is a custom hook this is an example of
139:32 - like like you have use state use effect
139:34 - use everything
139:35 - whatever you want to do this is an
139:36 - example of a use google search we just
139:38 - created a custom hook
139:40 - okay and like the power of this is
139:43 - insane because what we're doing at the
139:44 - end is
139:45 - we're saying return data as an object
139:48 - it returns an object okay got it yes it
139:51 - returns an object yeah
139:52 - so now what we can do is we can actually
139:54 - go ahead and test this so we can go
139:56 - ahead and do this we can say go back to
139:58 - search page and we can say const data so
140:01 - whatever's
140:02 - returned as an object like what we saw
140:05 - use google search
140:09 - like this right and remember google
140:10 - search took a term
140:12 - right so it took some kind of time and
140:14 - that term we're pulling from the data
140:15 - layer
140:17 - right so that's going to be it's by
140:20 - default it's going to do this
140:21 - right so now what we can say is
140:24 - we can say i need to import the use
140:26 - google search so let's go ahead and do
140:28 - that so use google search let's go ahead
140:31 - and import that
140:34 - from the top here nice
140:37 - and now hold on one minute where did you
140:40 - import it
140:42 - at the top oh wait um how come i don't
140:46 - see it
140:47 - uh oh it's gonna have sync one sec um
140:50 - can you fix that i'm gonna highlight
140:52 - this comment this is a good comment by
140:54 - frank
140:54 - oh a good idea is to start with fetch
140:58 - since you don't need external
140:59 - dependencies and i recommend that as
141:01 - well
141:02 - once you start getting more familiar you
141:04 - guys can use
141:05 - axios as a powerful upgrade
141:08 - so that's what i would recommend for you
141:10 - guys like use axios later just first
141:12 - do it like this and here is the import
141:14 - use google search from use google search
141:19 - yeah exactly so
141:22 - i agree with uh with what firing said so
141:25 - you want to actually use fetch first
141:26 - because it just keeps everything clean
141:28 - axios is something really good though
141:30 - once you once you sort of get used to it
141:31 - and you get used to
141:32 - how it works um so we have this constant
141:35 - area called use google search term right
141:37 - so now what we're going to do is just to
141:39 - test this as well so i'm going to
141:40 - console.log
141:42 - the data right so my snippets are
141:44 - working console.log data
141:46 - like this right now if i save this let's
141:49 - go ahead and save this right so kazi
141:51 - if you want to type in like tesla for
141:53 - example right
141:55 - yeah so now before you don't hit insane
141:57 - uh sorry don't hit um
142:00 - enter yeah what the hell
142:03 - i don't know something
142:06 - something popped up and it was like
142:08 - insane content it was like a
142:09 - notification
142:10 - oh yeah yeah so something popped up
142:14 - i kind of was like but here don't hit
142:17 - enter yet
142:18 - uh type in like tesla or something
142:21 - got it so let's go to tesla
142:25 - oh don't hit enter yet you said right oh
142:28 - that's fine so you know
142:29 - okay you so so let's clear the uh the
142:31 - search
142:32 - so let's clear the the sort of um
142:34 - inspector
142:37 - no no no so so go back so
142:41 - go back to uh okay
142:46 - yeah nice so now they're typing tesla
142:52 - yeah and what we do now is whenever when
142:54 - we hit enter a few things are going to
142:55 - happen right
142:56 - we're going to hit enter it's going to
142:59 - redirect us
143:00 - to the forward slash search page right
143:03 - then what's going to happen
143:04 - is it's going to push tesla the search
143:07 - term
143:07 - into the data layer where it's going to
143:09 - push that into the data layer
143:11 - once that's in the data layer you can
143:13 - see in search page we pull it by using
143:15 - use state value so now we have that
143:17 - search term
143:18 - and then we use our custom hook that we
143:20 - created called use google search
143:22 - we pass that term and then we extra that
143:24 - will end up making a call to the google
143:26 - uh custom search api and then we return
143:29 - the data as an
143:30 - object right so it's a super super clean
143:34 - implementation of this now kazi if you
143:36 - want to go ahead and hit enter
143:40 - hit enter now boom yep so hit enter
143:44 - and if you see it passed so let's go
143:46 - ahead and click that yeah
143:48 - so this entire response is from google
143:50 - now so let's go ahead and click item
143:52 - hold on my face is blocking a lot of
143:54 - stuff
143:55 - yo damn tay has just donated a hundred
143:58 - uh rupees thank you so much for that
144:01 - it's crazy because uh because yeah
144:03 - earlier it got wild in there and i
144:05 - booted him out of chat because i got
144:07 - like i'm like man i don't like the vibes
144:10 - here but then
144:10 - he explained that he was following our
144:12 - content and been viewing it
144:14 - and i was like okay okay and then he
144:16 - came from another account so
144:18 - you know and thank you for the donation
144:20 - i really really appreciate that
144:22 - so i'm gonna what i'm gonna do is i'm
144:24 - blocking
144:25 - it a little bit right now so let's go
144:28 - like this and i think i'll make it even
144:29 - bigger so everybody can really see it
144:31 - clearly
144:32 - and this is what we're getting back you
144:34 - guys
144:35 - yeah so let's click on the items drop
144:38 - down so that's the one that will show us
144:39 - some interesting stuff so we search for
144:41 - tesla right
144:42 - so let's go ahead and click on the first
144:44 - item in the array
144:46 - okay so let's go ahead and click it so
144:48 - when you say first item you mean zeroth
144:50 - item
144:51 - yeah zero okay okay got it not trying to
144:53 - be a dick
144:55 - it's got like it's got like some tesla
144:58 - stuff inside there right
144:59 - so you can see that's actually returning
145:01 - a search term like a search result which
145:03 - and it has a bunch of information
145:05 - wow even the display link
145:07 - teslatheban.com
145:08 - the first one is tesla.com that would
145:11 - make sense
145:12 - yeah so he's actually going ahead it's
145:15 - using google to actually go ahead and do
145:17 - this right
145:18 - so remember don't spam this because
145:20 - you're gonna have a hundred
145:22 - limit i think it's a hundred limit free
145:23 - limit a day and then you can pretty much
145:25 - put a card on and then you can
145:27 - if you want to pay for it you have a
145:28 - huge limit after that for like five
145:29 - dollars but
145:30 - i would say stick to the three quarter
145:32 - and i'll show you a little trick now
145:33 - right
145:34 - so that entire response that cars you
145:36 - just got right so if you go ahead and
145:39 - open up the network final quasi ah okay
145:42 - i will
145:44 - yeah so go up network and click
145:47 - on um the so let's go ahead and make
145:50 - that a little bigger
145:51 - and let's just put the camera on us for
145:53 - a second because i don't want to show
145:55 - something
145:55 - it's going to check if it's good yeah
145:59 - yeah so let's go to all
146:03 - all okay so you know the camera is on us
146:06 - right now right
146:07 - yeah yeah that's fine i just want to
146:09 - check one thing before we do it so you
146:11 - see that bottom
146:11 - the on where it says v1 key equals
146:17 - yeah yeah click that so you see it
146:20 - it's going to end up showing the key
146:21 - here so if you click that and then you
146:23 - um make this bigger yes so click down
146:25 - click on response
146:28 - yep right there yeah so what we can do
146:31 - here
146:32 - is uh you can actually say if you drop
146:35 - blur this
146:35 - so make a screenshot of this and blur
146:37 - out the key on the left on the bottom
146:39 - left
146:41 - hold on is this the key yeah so
146:44 - basically
146:44 - let's do it let's do a screenshot of
146:46 - this and show them how we got to this so
146:47 - just draw some arrows that you click on
146:49 - the network tab
146:50 - you click on that um and then you click
146:52 - on the response to see
146:54 - does that make sense yeah all right so
146:57 - all right cool hold on i got you bro i
146:59 - got you don't worry don't even trip dog
147:03 - all right we got this here yeah
147:06 - all right now i'm gonna do this very
147:08 - carefully by the way i'm not showing it
147:10 - right now right
147:11 - it's good it's good it's good all right
147:13 - cool yeah so step one click network guys
147:16 - and then step two make sure you click
147:18 - response over here
147:20 - and then this is gonna show you and
147:22 - these are all the results
147:25 - right here yeah
147:28 - so this is really important guys so the
147:30 - reason why i was
147:31 - making this a point because once you see
147:34 - this response i want you to go ahead and
147:36 - do command a on that response and
147:38 - actually copy
147:40 - everything right so copy everything now
147:42 - this is really handy for when you're
147:44 - developing because
147:45 - you don't want to keep attacking the the
147:47 - api
147:48 - because you run out of your quota if we
147:50 - keep doing that while we're developing
147:51 - we're going to easily use up 100
147:52 - requests
147:53 - so we basically should we should we put
147:56 - it in
147:56 - so command a to select everything go
147:59 - into your actual response command a to
148:01 - select everything and then command c
148:03 - to copy everything now where should i
148:05 - put it should i just make a new file
148:07 - with like response
148:09 - yep so response.js response.js
148:13 - so i'm going to pop it the entire
148:16 - response
148:16 - into here and i will go
148:19 - and get out of my network tab and i'll
148:21 - go back to console
148:22 - hit x now i'm going to share my screen
148:25 - with everybody
148:26 - and now here this is the full response
148:29 - that we got back
148:31 - now what are we getting back in this
148:32 - response you guys like
148:34 - it's everything that you would type in
148:36 - if you typed in tesla that's kind of
148:37 - what you would get from google itself so
148:39 - if i just go to google.com
148:41 - and i type in tesla i imagine i would
148:45 - get the
148:46 - what would i get so there's tesla.com
148:49 - so let's see if it actually has that so
148:51 - let me look up tesla.com
148:53 - it has that yep and
148:56 - tesla is accelerating the world's
148:58 - transition to sustainable
149:01 - so see tesla is accelerating the world's
149:03 - transition to sustainable energy
149:06 - with electric so it's like actually
149:08 - giving me what
149:09 - the real google would give me
149:12 - yeah and you see this the display link
149:15 - is www.tesla.com
149:17 - which is you can see it right there
149:18 - which is awesome
149:20 - yeah exactly displaylink is tesla.com
149:23 - and then the display link
149:25 - for the next one is also yeah let's go
149:28 - down
149:30 - yeah tesla the band starts to show up
149:32 - soon
149:33 - dope okay so it may not be exactly to
149:36 - what the what google has done but it is
149:38 - is pulling it from google because
149:40 - remember they might have set their the
149:41 - engine up slightly different but
149:43 - yeah the point is it will get the
149:44 - majority of the search terms right
149:46 - thank you thank you tejas for another
149:48 - donation thank you onorak for
149:50 - another donation and anurag actually
149:54 - says check the dm
149:55 - for merch that he made for us so that is
149:59 - awesome
150:02 - all right so with that said guys we got
150:05 - that massive response right
150:07 - so how do we actually let's pass that
150:09 - response
150:10 - into something that we can use and the
150:12 - way we can do that
150:13 - is if i go ahead to the top of the file
150:15 - and i say export
150:18 - default right
150:21 - now what we just did is if i save this
150:23 - uh
150:24 - prettier's not going to do this the way
150:26 - i need it
150:27 - okay so what i'm going to do now is i'm
150:29 - actually going to basically
150:31 - take it to your printer in your computer
150:33 - save it there and bring it back
150:37 - genius that's good [ __ ] man
150:41 - i'm gonna do that save this
150:48 - [Music]
150:49 - nice that's smart okay so now what we're
150:52 - going to do is we have the tesla search
150:54 - right so you basically want to
150:56 - prettier guys if you install printer
150:58 - into your computer it will do that for
150:59 - you so you actually just make this into
151:01 - an object that you can use
151:02 - and then we say export default right
151:04 - export default and then that will allow
151:06 - us to use this response as a
151:07 - as an object right so now the reason why
151:09 - that's good
151:10 - is because what we can do is we can
151:12 - actually develop using that response so
151:14 - because you need to follow me again all
151:17 - right
151:19 - yeah so now if you if we go
151:22 - into a search page right so here is the
151:26 - live
151:26 - call right so this is our super powerful
151:29 - live
151:29 - course i'm going to say this is a live
151:31 - api call
151:32 - this one yeah and to make that super
151:34 - clear for you guys what i'm going to do
151:35 - is i'm going to chuck that above
151:37 - here like this that's the live api call
151:39 - this one yeah
151:40 - but we don't necessarily want to always
151:43 - do the live api call so
151:44 - what we can do is we can say cons data
151:46 - get the data from our response
151:48 - instead and our response could be from
151:50 - our local
151:51 - response file so this will actually go
151:54 - ahead and it's the exact same shape the
151:55 - exact same everything
151:57 - but it's just pulling it from this data
151:59 - instead so now
152:01 - um if i do console.log data so cause if
152:04 - we go to the search and we open the
152:08 - inspector
152:10 - i will open the inspector right now so
152:12 - boom
152:15 - okay now if we refresh and we open the
152:19 - console
152:21 - okay refresh
152:24 - yeah and now you should see we still get
152:28 - an object right but we're not
152:29 - pinging the the the google search term
152:31 - we're just getting that tesla search
152:33 - that you've done previously
152:34 - yeah so we basically this is like uh
152:37 - this is called um
152:39 - uh i can't remember it's called masking
152:41 - no it's not asking yes um
152:43 - yeah anyway it's got a name for it but
152:45 - basically what we're doing is we're
152:46 - mocking that's it we're mocking the api
152:48 - call
152:49 - right so now you can see that that
152:51 - search term so if you click that
152:52 - downward arrow kazi insert
152:54 - in the in the console there you go we've
152:56 - got we've got that exact same response
152:58 - so now what we can do is
153:00 - we we don't have to worry about using
153:02 - our quota up and what we can do is at
153:03 - the end of it we just can comment this
153:05 - out
153:05 - and uncomment the actual live one and
153:07 - it'll work right nice that's a very
153:10 - that's a nice little trick that you guys
153:11 - can do to sort of get around quotas and
153:14 - stuff like that because i know that can
153:15 - become quite a headache especially when
153:16 - you're developing
153:18 - all right so we now have the data from
153:20 - google we have the good stuff right
153:22 - so let's go ahead and make this all sort
153:25 - of pretty and look nice now so
153:27 - the search page header what we're going
153:29 - to do now is at the at the top of the
153:31 - page we're going to have a link
153:32 - and inside that link we're going to have
153:34 - a search page logo so i'm going to go
153:36 - ahead and save this
153:38 - so we have the link at the top and then
153:40 - we have an image this has
153:41 - a class name of search page logo and
153:43 - this is just the google logo
153:45 - right so link is not defined so we need
153:47 - to go ahead and import that from
153:48 - material
153:49 - from react group dom like this save that
153:53 - and then what i'm going to do is i'm
153:54 - going to go ahead and go to
153:56 - searchpage.css
153:58 - and i'm going to do the following i'm
153:59 - going to say go and target the search
154:01 - page logo
154:03 - search page logo and apply the following
154:06 - to it so i'm going to go ahead and do
154:08 - this
154:09 - so i'm going to go ahead and give it uh
154:11 - contain height 50 margin right 50 pixels
154:14 - so that way whatever's next to it it's
154:15 - not going to touch it
154:17 - okay then what we're going to do is
154:19 - we're going to go back
154:20 - and we're going to carry on so we've got
154:22 - the link at the top so that's cool
154:24 - and we want the next part is i think
154:27 - there's something
154:27 - wrong with the google like the search
154:29 - engine
154:31 - what you made uh so josh patel actually
154:34 - said that he searched um
154:37 - find me a better duo than sonny and kazi
154:39 - and he goes it responded with the 404
154:41 - not found
154:44 - nice
154:45 - [Laughter]
154:50 - [Music]
154:52 - i was thinking i was like oh [ __ ] what
154:53 - happened
154:55 - nice that's awesome thanks bro thanks
155:00 - nice so now what we're going to do is
155:02 - and guys let's push the 2k likes
155:04 - come on give me that free lunch
155:08 - let's go so let's go and next what we're
155:11 - going to do next
155:12 - is inside the search page header i'm
155:14 - going to basically go ahead
155:15 - and add a div here
155:19 - and i'm going to do this
155:23 - so i'm going to add a div with search
155:24 - page header and i'm going to change this
155:26 - one to the header body right so this is
155:28 - where the search is going to be in a
155:29 - bunch of other things
155:30 - so remember we built the search out
155:32 - earlier so to get it working here
155:34 - very simple i literally just do this i
155:36 - say search hide the buttons i don't want
155:38 - the buttons in there
155:39 - so it's as simple as that and this is
155:41 - the power of react so we just coded that
155:43 - up earlier
155:43 - and boom i can push that in there and
155:46 - everything will
155:47 - work so let's go ahead and see why
155:49 - that's not working it's because i've
155:50 - done two dots
155:51 - and we don't have it in components we
155:52 - have inside search so i can go ahead and
155:54 - save that
155:55 - and now we can see that look at that we
155:57 - have the search bar at the top
155:59 - which is awesome right we have that
156:01 - working and then
156:03 - what we can do is we have a bunch of
156:06 - like options underneath it so first i'm
156:07 - going to go ahead and style some of this
156:08 - stuff so
156:09 - the actual header itself i'm going to
156:11 - give the following to it i'm going to
156:13 - say it's
156:13 - display flex position is sticky because
156:16 - when we scroll down
156:17 - i want it to basically stick i'm going
156:19 - to say top of zero so it's going to
156:21 - stick to the top
156:22 - background color white z index of 100 so
156:24 - that way when we're scrolling down it
156:26 - always stays at the top of the screen so
156:28 - it'll be on top of any elements
156:29 - underneath it align items flex start
156:32 - i'll show explain what that does in a
156:33 - sec padding of 30 pixels
156:35 - and border bottom of one pixel which is
156:37 - why we have that little gray
156:39 - uh border color because we might need to
156:40 - do a 50 50 split now
156:43 - um for the responsiveness because i
156:45 - didn't the search page is a little bit
156:47 - less responsive so
156:48 - um let's go ahead and i think we're
156:52 - muted camera when you said 50 50 split
156:55 - so
156:56 - got it okay you mean boom like that
156:59 - yeah let's do a 50 50 yep nice
157:04 - uh and then what we're gonna do now is
157:06 - go to
157:07 - so we have that yep nice so now what i'm
157:11 - gonna say is
157:12 - inside of the header body what we can
157:14 - actually do at this point is the search
157:16 - itself so that search box uh so the
157:19 - search input
157:20 - item and this is where bem comes in
157:21 - really handy what we can say is
157:23 - go inside the header body right so where
157:26 - we have our search so this one here
157:28 - go inside the header body where we have
157:30 - our search here and basically
157:32 - go and override those search styles so
157:35 - in search we had search and search input
157:38 - so go inside find that
157:39 - change the margin top to zero unset the
157:42 - width unset the margins that we applied
157:44 - before and unset the max width
157:47 - and what it does is it overrides the
157:48 - style right so it overrides the styles
157:50 - that we previously put on it
157:52 - which is kind of nice right so that
157:54 - means we can reuse it but we can
157:55 - actually
157:56 - just from our css go ahead and change
157:58 - the styling of that search box
158:00 - um so that's really clean and then
158:02 - underneath there we have a bunch of
158:04 - options so let's go ahead and check out
158:05 - the deployed version kazi
158:09 - let's go ahead and check out the
158:10 - deployed version yep so boom
158:14 - and then let's type in the search terms
158:16 - like abc
158:18 - is it going to take us to that page uh
158:21 - no because i'm using a mock
158:22 - i did i redeployed it with a mock so i
158:24 - got it we did it
158:28 - yep so now you can see at the top of the
158:31 - page
158:31 - we've got uh where it says all news
158:33 - instagram
158:34 - images shopping maps and et cetera those
158:37 - things those are the options
158:39 - right so we're going to refer to those
158:40 - as like options okay
158:42 - so now what we're going to do so hold on
158:45 - let me just draw that out
158:47 - let me draw that out what you just said
158:49 - and just dropped a huge donation dude
158:52 - whoa that is
158:56 - damn thank you jessica jessica says guys
159:00 - you're so handsome and she goes moreover
159:03 - you're super talented in code
159:05 - thanks your stream i found how easy it
159:07 - is using firebase with react please keep
159:10 - doing it
159:11 - thank you so much i really really
159:13 - appreciate that that is huge i get my
159:15 - handsomeness from my dad
159:17 - and i'm sure sunny gets this from his
159:19 - mom
159:20 - and uh yeah you know my mom was handsome
159:24 - too you know
159:25 - yeah that's insane thank you so much
159:28 - jessica that means
159:29 - that means a world like i mean is that i
159:31 - think that's a hundred dollars dude
159:33 - that's crazy thank you so much thank you
159:35 - we're about to we're gonna break 200
159:37 - soon i'm
159:38 - pumped yeah oh my god thank you
159:41 - yeah um so now we have the header
159:45 - um the header body wait wait wait wait
159:48 - wait wait
159:48 - before we do that so we were gonna try
159:51 - this so when we go to search
159:52 - what were you saying we're gonna work on
159:54 - oh yeah so we're working on those
159:56 - um search page uh options
160:00 - so they're all news images shopping maps
160:02 - okay let me just draw that out it's very
160:04 - clear so okay so
160:07 - uh what about tools and settings uh yeah
160:11 - so all of that
160:12 - comes under the uh the uh
160:15 - options basically search page options
160:17 - yeah all right so this is going to be
160:19 - search page
160:20 - options okay is there any reason why
160:23 - it's called
160:23 - options yeah it's just when you're
160:26 - coding like this really quick in the
160:28 - library the namings
160:29 - the names always get a bit of a headache
160:31 - so in this case i just called it an
160:33 - option
160:34 - got it okay okay no worries no worries i
160:35 - understand now so
160:37 - yeah perfect okay i think that's pretty
160:39 - good so basically should we write
160:41 - working on the
160:45 - things under the search for our search
160:46 - page options working on search page
160:48 - options yeah
160:49 - working on the let's just maybe working
160:52 - on the search page because this is
160:54 - literally going to be building out the
160:55 - search page
160:56 - well that's what i'm yeah i have at the
160:58 - top working on bill search
161:00 - results page so this one we could do we
161:01 - could do uh building the search page
161:03 - options yeah
161:05 - okay cool building items
161:09 - yeah build items under yeah
161:13 - search bar i like that
161:16 - yeah i just like it when it's just plain
161:18 - english and i think like
161:19 - even developers right if you're writing
161:22 - commit messages
161:22 - it's better to just write plain english
161:25 - yeah
161:26 - exactly it's very true all right cool so
161:29 - this is looking good
161:32 - awesome so you want me to just go to the
161:35 - search page yeah and then just stay
161:37 - there
161:38 - yeah so go to the search page and
161:41 - remember guys we are actually
161:42 - mocking the response so we will see like
161:44 - uh once we start coding up it will just
161:46 - be pulling that mock tesla response
161:48 - so now and guys i saw a question earlier
161:51 - are we
161:52 - pulling from the google uh custom search
161:54 - api yes this is coming from google so
161:56 - it's going to be
161:57 - a complete build so with that said
162:00 - next what we're going to do is we're
162:01 - going to say div so div
162:04 - it's going to be class name equals
162:07 - search page options search page options
162:10 - like this right and this is going to be
162:13 - a container which can
162:14 - hold all of that stuff together right so
162:17 - now what we're going to do is i'm going
162:19 - to say
162:20 - um so i'm going to say dev search page
162:22 - options
162:23 - nice wait one sec what's going on here
162:29 - wait has it gone out of sync again i
162:30 - think it has
162:32 - mine looks super weird compared to yours
162:35 - let me go ahead and close that search
162:38 - page
162:41 - search page results wait i didn't like
162:44 - that
162:47 - oh yeah that was underneath right that
162:49 - was underneath
162:52 - this is the divs yeah oh dude it's
162:55 - because of that
162:56 - it's an annoying thing you know when it
162:58 - adds the extra closing tag
163:01 - yeah yeah yeah i don't know why it does
163:03 - that i don't understand super annoying
163:05 - yeah yeah right so now we've got the
163:08 - search page options
163:09 - so here i'm going to write oh thank you
163:11 - very much phenom just dropped a donation
163:13 - awesome dude he goes do you make android
163:15 - apps too we're we're going to be
163:16 - dropping react native
163:18 - soon so that that will actually be both
163:20 - ios and android
163:22 - yep so now what we're going to have is
163:25 - i'm going to split this into two
163:26 - containers i'm going to have options
163:28 - left and options right
163:30 - all right so options left is going to be
163:32 - inside of this container so it's going
163:34 - to
163:34 - div like this and then i'm going to have
163:36 - another one options right
163:38 - and options right is going to have the
163:39 - stuff on the right hand side options
163:41 - left is going to have the stuff on the
163:43 - left hand side so with that said
163:46 - let's go ahead and start pushing in the
163:48 - thing so every single option
163:50 - i'm going to make it easier for us later
163:52 - on frank just dropped another
163:54 - bite oh my god he just
163:57 - sent you both some ubereats credits nice
164:01 - nice i'm gonna order uber eats today
164:05 - thank you frank yeah thank you so much
164:08 - dude
164:09 - he goes thanks for all the work you do
164:10 - treat yourself yep
164:12 - i will and i'm now trying to um get back
164:15 - to my fitness
164:16 - fitness grind frank so i gotta be eating
164:19 - clean you know
164:20 - you know how clean stuff gets expensive
164:22 - so i can use those credits
164:25 - that's insane thank you dude
164:28 - so now what we're gonna do is we have
164:30 - options left
164:31 - so every single option i'm going to put
164:33 - inside of a container called
164:35 - search page option right so i know we're
164:37 - getting a bit nested here but
164:39 - it will make life a lot easier right so
164:41 - the first one
164:42 - i'm going to have a search icon and a
164:44 - link so we're using a react router link
164:46 - search i got a link to all and the
164:48 - option is just going to be all okay
164:50 - so i'm going to go ahead and import that
164:51 - here and you guys will see an example of
164:53 - what that looks like so let's go ahead
164:55 - and drop that in
164:56 - and also we need link from reactor or
164:58 - dom so let's go ahead and pull that we
164:59 - we are
165:00 - we do have that already so you can see
165:01 - it says all
165:03 - right so we have it there and i'm going
165:04 - to go ahead and copy a snippet now so
165:07 - i'm just going to keep the screen to the
165:09 - third
165:10 - just because i want everybody able to
165:11 - see the code i think people understand
165:13 - that this
165:14 - part might not be completely mobile
165:15 - responsive but once it goes
165:17 - full but neither is google but this is
165:20 - still more responsive than google so
165:21 - it's fine i think
165:22 - people will get that now yeah one thing
165:25 - i was gonna say was
165:26 - once you do want me to switch to it
165:28 - being bigger screen just
165:30 - in case there's something we need to
165:31 - show then let me know and i'll do that
165:33 - so nice damn we're at 198 we're two
165:36 - dollars away from hitting the 200
165:38 - donation goal we've never hit that so
165:40 - that is epic
165:42 - thank you guys that's insane
165:45 - nice so we added the search icon and
165:48 - this link so
165:50 - i basically added a bunch more here so
165:52 - this is what i've gone ahead and added a
165:54 - snippet from our code
165:56 - um so you can see here right here we
165:58 - have the rest of the the stuff here so
165:59 - you've got
166:00 - all of these icons description image
166:02 - local offer
166:03 - room and more vertical and i'll show you
166:05 - what each one comes out to be
166:07 - and this one is the news image shopping
166:09 - maps and more
166:10 - all right so let's go ahead and make the
166:11 - appropriate imports
166:13 - so let's go ahead and do the imports at
166:15 - the top
166:16 - so here you go save that file and now
166:20 - we'll see that those icons should be
166:22 - there alongside
166:23 - the uh the text right so that looks
166:25 - pretty good
166:27 - right so we have all that stuff um
166:30 - and then what we can do is we have
166:32 - options right so options right we're
166:34 - gonna have the same thing but we don't
166:36 - have the icons in this case so
166:38 - and so what i'm going to do here is drop
166:40 - it in
166:41 - like this and this internet so we've got
166:45 - the search page option but this one's
166:47 - just going to have a link sync settings
166:48 - and this one's just to have tools it
166:49 - doesn't have like an icon like these
166:50 - ones
166:51 - okay so i'm going to save that as well
166:53 - and you can see right now the layout is
166:54 - pretty crap it just looks like it just
166:56 - sits on top of everything right so i'm
166:59 - going to go ahead and start styling at
167:01 - this point before it gets a bit too
167:02 - crazy
167:03 - so i'm going to say for the options so
167:05 - for all of the options
167:06 - let's go ahead and apply the following
167:08 - display flex align the item center and
167:10 - make the color gray
167:11 - so if i do that you can see header
167:14 - options left and options right get
167:17 - pushed
167:18 - side by side because now it's in a row
167:20 - right so that's the first reason
167:23 - then what i'm going to say is for both
167:26 - for both
167:27 - options right and options left do
167:29 - display flex so that's why you can see
167:31 - now that everything goes into that
167:33 - into a row right so that's really clean
167:36 - then i'm going to say
167:37 - for the options anchor tags
167:40 - and for the options right anchor tags so
167:43 - for everything basically
167:44 - all of the anchor tags change the text
167:46 - decoration to none and the color to gray
167:48 - and that means it gets rid of that link
167:50 - look and feel so we don't want that link
167:52 - fill right
167:53 - and then i'm going to have options right
167:56 - so i'm going to target options right and
167:57 - i'm going to say
167:58 - it shouldn't touch right now settings is
168:00 - right next to that more icon
168:02 - it shouldn't touch if we want a margin
168:03 - left of 80 pixels so
168:06 - kazia's make it full screen i'll make it
168:08 - uh let's do the
168:09 - let's do half and half just for this
168:11 - point
168:15 - there we go so half and half just for
168:16 - this point and then we're good yep
168:18 - so here we have that and then what i'm
168:21 - going to do
168:22 - is i'm going to say for the
168:25 - option itself i'm going to say display
168:28 - flex and a line item center with a
168:30 - margin right of 20 pixels
168:32 - so this should get all of the icons
168:34 - centered centered with the text and it
168:36 - will give a margin right of 20 pixels
168:38 - which will space it out
168:40 - right so there we go see the sign
168:42 - already starts to look a lot cleaner
168:43 - yeah now we're going to say
168:45 - for the anchor tags inside of those
168:47 - options so for those links
168:48 - given that it's looking really clean
168:50 - look at that
168:52 - yeah so for margin uh left so give a
168:55 - margin left to that anchor tag so that
168:57 - they're sort of all
168:58 - news images shops and maps etc give that
169:01 - a five pixel margin let's say it pushes
169:03 - itself away
169:04 - a little bit from that text and with
169:06 - that guys
169:07 - that's pretty much that done so that's
169:08 - pretty nice and they're actually
169:10 - clickable links which take you to
169:11 - forward slash all four sessions
169:12 - news etc so um you can go ahead and
169:16 - build out those pages if you want to do
169:18 - that right
169:19 - um so that's cool so we've actually got
169:21 - the the options part
169:22 - finished so now we've got the final part
169:25 - which is the search page results
169:27 - so let's update the top bar because it
169:29 - is a final page
169:31 - building the search page results
169:34 - all right
169:38 - and this is where the nice last bit of
169:40 - magic happens
169:42 - hey so we're finished that part let's
169:44 - hear it with the air horns guys if you
169:46 - enjoyed that part smash that like button
169:48 - subscribe to the channel and turn on the
169:50 - notification bells
169:51 - because i think this is important to let
169:53 - you know that
169:54 - we're going to be doing these types of
169:56 - bills
169:57 - on a very regular basis and next week
170:00 - even though we don't have it completely
170:01 - mapped out
170:02 - but we're going to be building some
170:04 - amazing projects
170:05 - some of the things that are on our
170:07 - agenda are linkedin clone
170:09 - facebook clone um
170:13 - what do we what else do we got i think
170:14 - we're thinking about discord clone
170:17 - yep yep so we got some heavy hitter
170:19 - projects coming up
170:21 - so make sure you subscribe to the
170:22 - channel turn on the notification bell
170:24 - and uh keep helping us be the number one
170:28 - fastest growing coding channel on the
170:29 - planet
170:31 - yeah exactly and guys i saw a few
170:33 - questions there saying can you guys
170:34 - build a project using the man stack
170:36 - oh yeah so uh yeah me and nars are
170:38 - actually going to be building a few apps
170:39 - on that and and
170:40 - a few of the other team members so yeah
170:42 - 100
170:43 - damn dude you can even pair up with
170:45 - david rokosi like this guy
170:47 - is putting in some serious work yeah
170:49 - that would be dope
170:50 - i i i asked him about tinder and tick
170:53 - tock and he already built tank
170:55 - uh tick-tock clone completely like
170:57 - already and it's using express and other
170:59 - things nice i love that dude
171:02 - yeah 100 we could do that that would be
171:04 - fun
171:06 - yeah all right so travel zayn says
171:10 - wow it's so scary
171:13 - how real it looks compared to the actual
171:16 - one
171:16 - beautiful work kazzy and sunny we love
171:18 - you he's talking about how
171:20 - similar this looks to actual google yeah
171:23 - it's insane i actually got confused i
171:24 - was telling kazi before we went live oh
171:26 - yeah
171:26 - i actually got confused a bunch of times
171:28 - because i was googling stuff and i was
171:29 - like oh hang on
171:30 - i'm using localhost yeah it has a phenom
171:33 - says
171:34 - i'm my android developer here but you
171:36 - guys are op
171:37 - hell yeah nice thank you bro thank you
171:39 - so much
171:41 - and guys all we ask is if you're
171:42 - enjoying the video and you haven't
171:43 - already done so
171:44 - just please smash the thumbs up button
171:46 - and it will just help the video get out
171:48 - to as many people
171:49 - so that so many that that extra person
171:51 - would just get that value from this
171:52 - video
171:54 - yep dope nice all right let's keep this
171:56 - bad boy going
171:58 - so now what we're going to do is we're
171:59 - going to say we only want to render so
172:01 - we're going to put a protective block
172:02 - and we're going to
172:03 - only render that the search results if
172:06 - you provided a search term so we're
172:08 - actually protecting ourselves here
172:10 - uh by doing this so we're saying do that
172:13 - right and because
172:14 - at this point we can actually do a
172:15 - quarter or we could do we could do a
172:17 - half half split maybe
172:19 - i think that would be good
172:25 - yep so half off skin now what we're
172:28 - going to do here is
172:29 - we have um
172:32 - so yeah so we have the research page
172:36 - results
172:36 - so the first thing we're going to do is
172:38 - the result count right so where it says
172:40 - about 5 million results or however how
172:42 - the hell google do that i don't know
172:44 - but basically we're going to put that at
172:46 - the top so we're going to do that
172:47 - first we're going to say search page
172:49 - result count and here
172:51 - we say about so something like this
172:54 - about three million results or something
172:57 - yeah remember the results and then it's
172:59 - got brackets
173:02 - and saying something seconds would be
173:03 - like 0.3 seconds or something
173:06 - and then it will say four and then it'll
173:08 - say whatever search term you put in so
173:10 - it'll be like for tesla for example
173:12 - right
173:12 - so if we save this and we refresh the
173:16 - search page
173:20 - so this refresh to search it boom
173:25 - so now we should see underneath uh oh
173:28 - tom wasn't biased yeah so here i'm going
173:30 - to just say
173:31 - i'm just going to replace this with true
173:32 - for now and then we'll put that in at
173:34 - the end
173:37 - yeah so you see it says about 3 million
173:39 - seconds or something 0.3
173:41 - seconds for tesla right so i want to
173:43 - actually pull this from the information
173:44 - so
173:45 - this information is actually coming in
173:48 - from that response and i've actually
173:50 - done the hard work of diving into that
173:52 - object for you guys
173:53 - and this is what you need to type in so
173:55 - data and this and we put the optional
173:57 - trainings because data might be no for a
174:00 - little bit while it's fetching
174:01 - right and then what we're going to do is
174:03 - we're going to say search information so
174:05 - it gives us back a search information
174:06 - object
174:07 - and then it gives us back something
174:08 - called formatted total results
174:10 - so if we save this now you see it's
174:12 - actually 266 million that came from
174:14 - directly from the results right
174:18 - the next one we're going to do is for
174:20 - the seconds so for seconds we can go
174:22 - ahead and replace this
174:24 - with the seconds and let me go ahead and
174:26 - just do this
174:27 - so we've got data search information
174:29 - formatted search time
174:31 - so we need to refresh the search
174:35 - um i don't know why it doesn't do that
174:38 - yeah hey guys
174:39 - i got a quick i got a quick question i
174:41 - want us i want to just ask
174:43 - this to everybody um i want to see if
174:46 - our twitch has finally started working
174:48 - properly
174:49 - because our twitch kept being broken so
174:51 - i dropped the link in the chat
174:54 - and um if you guys want to check out our
174:56 - twitch it's
174:58 - right here whoa what's happening
175:02 - so let me bring that it's right here
175:05 - it's a twitch.tv clever programmer
175:09 - this is the url so if you guys can just
175:11 - go and take a look at that and just see
175:13 - if that's working properly and having
175:15 - weird feedback or issues because that'd
175:17 - be huge because we want to grow
175:19 - on twitch and we were having trouble
175:21 - last time because
175:22 - our stream just kept giving us tons of
175:24 - errors
175:26 - yeah that'd be massively useful guys
175:31 - nice so let's
175:34 - go ahead so we saw we were pulling the
175:36 - information we had data search
175:37 - information formatted search time
175:40 - there we go and now what we're going to
175:42 - do is we're also going to say
175:43 - 4 and rather than here doing tesla we're
175:46 - going to say term
175:48 - right so whatever the search term was
175:49 - and what we can do is we can replace
175:51 - term here and i can actually go up and
175:52 - protect um
175:53 - i can actually just say term equals by
175:55 - default let's just do tesla
175:57 - right so if you don't pass in the time
175:59 - we we protect him we say oh passing
176:00 - tesla
176:02 - uh that should work yeah so now if we
176:04 - refresh cozy i think i don't know why
176:06 - it doesn't it's not doing the refreshing
176:08 - in a nice way but we're gonna have to
176:10 - refresh identity
176:12 - oh we did right okay so this doesn't
176:14 - work this protection thing
176:16 - so i'm just gonna say true here and it
176:18 - will say
176:19 - four and it'll be blank right so let's
176:20 - go ahead and do this and i'll say four
176:22 - blank but that's fine because
176:24 - it will be mapped to the term right
176:27 - so at this point what we can do is we
176:29 - want to basically map through all the
176:31 - items remember we got like a list of
176:33 - items back right
176:34 - so here what i'm going to do is i'm
176:36 - going to say uh we want to map through
176:38 - all of them
176:39 - right so i'm going to say here um
176:42 - i'm going to say data remember optional
176:45 - training so it doesn't sort of crash
176:47 - itself or whatever
176:48 - say optional data dot items
176:52 - data.items.map and we'll say each item
176:55 - should get rendered out in the following
176:57 - way so i'm going to basically give each
176:58 - item a div
177:00 - right and that div let's do a closing
177:03 - all right so each item has a div and
177:05 - it's a class name and that class name
177:08 - is going to have search page results
177:09 - like this
177:11 - search page results okay now inside of
177:13 - that class uh inside of that result
177:15 - we're going to have an anchor right so
177:17 - an anchor tag
177:18 - and this anchor tag is going to have a
177:21 - few things right so it's going to say
177:24 - it's going to have the display link
177:25 - mainly right so firstly what we're going
177:27 - to do is we're going to say
177:29 - the item itself has a display link right
177:33 - and then it has this little carrot next
177:34 - to it so let's go ahead and do that
177:37 - and now you can see so guys you can you
177:39 - see it says um oh oops
177:41 - it says tesla tesla the band tesla.com
177:45 - wikipedia tesla shop.tesla yep i see it
177:49 - yes it's really cool this part like as
177:51 - you start to see everything pop in
177:52 - and then the next one is going to be an
177:55 - oh so that should have been an anchor
177:56 - tag sorry that should have been inside
177:57 - of an anchor tag so anchor
177:59 - like this and then this line of code
178:02 - should have gone in here
178:03 - and then the href so where does this
178:06 - anchor tag go to what's the link
178:08 - we say href equals and this is going to
178:10 - be item
178:12 - dot link right so that's where the link
178:15 - comes from
178:15 - so if we go ahead and we can save that
178:18 - and now you can see all of those are
178:20 - active links uh
178:22 - and then what we're gonna do is oh
178:23 - ingrid carson enrolled angry
178:25 - if that was a viewer let us know if you
178:27 - joined
178:29 - nice yeah that's epic ingrid carlson
178:32 - just joined
178:32 - profit with javascript welcome to the
178:35 - course
178:36 - yeah paul bento said landed a job by
178:39 - watching your videos and i'm so pumped
178:40 - to be here that's insane dude
178:42 - damn that is a beautiful comment
178:46 - yeah that's really nice uh let's see
178:50 - yep landed a job by watching your videos
178:52 - i'm so pumped to be here
178:53 - welcome paul and thank you for sharing
178:56 - that
178:56 - as another developer ding ding
179:01 - [Music]
179:03 - awesome so now what we're going to do is
179:05 - we have data items
179:07 - then we have another anchor tag and
179:09 - thank you guys for checking twitch i
179:10 - know joe
179:11 - diaz and everybody went and checked
179:13 - lauren and swann and checked and teja
179:15 - says it's okay so thank you guys for
179:16 - that
179:18 - yeah thank you guys so now if we go
179:20 - ahead and do
179:21 - this so an anchor tag here and what this
179:24 - one's gonna be for the result title so
179:26 - i'm giving it a class name a result out
179:27 - that link is going to be the same so
179:29 - it's hf to the item link
179:30 - because a few things are clickable right
179:32 - then here we're going to have a h2
179:34 - which has the item dot title so now
179:37 - once it says and it should save in a sec
179:41 - we'll see the actual text come as in the
179:43 - actual titles come in so you can see
179:44 - model three
179:45 - tesla the band has their incorporated
179:47 - model s all of these things right
179:51 - so that's really clean and really nice
179:52 - and then the last thing for this is we
179:54 - want to snip it
179:55 - so p tag sort of p tag
179:58 - which uh has a class name of result
180:01 - snippet so this is actually something
180:02 - pretty cool
180:03 - uh the google api provides a snippet
180:06 - back and basically what it does is
180:08 - they'll have some information like a
180:09 - description or something and they'll
180:11 - actually go ahead and it'll truncate it
180:12 - so i have
180:13 - dot dot if it's too big right so item
180:16 - dot snippet
180:17 - here so now if i save this now what we
180:20 - can see
180:24 - yes because i think you need to refresh
180:28 - okay so i'm gonna go ahead and boom do
180:31 - it
180:35 - yep so now you can see we've got the
180:37 - actual uh p
180:38 - tag so the actual description so you see
180:41 - this is all coming from that search term
180:43 - so it's really really nice
180:45 - and now the beautiful thing is that
180:46 - we've actually written a lot of what we
180:48 - need
180:48 - and we can actually go ahead and start
180:50 - styling this to make it look like the
180:52 - final product
180:53 - right so the first thing is we're going
180:55 - to do is we're going to make the result
180:56 - itself
180:57 - so the div which is actually each of
180:59 - those results so this one right here
181:01 - we're going to go ahead and style this
181:03 - and say make it have a margin 40 pixels
181:06 - and
181:06 - uh so forty pixels top and bottom and
181:08 - zero on left and right oh and tejas just
181:10 - dropped another donation he said keep it
181:12 - up guys
181:13 - stream is lit since i found this channel
181:15 - in recommendation i watched almost every
181:16 - video
181:17 - um everything is perfect except
181:20 - management hiding channel 4 is no reason
181:22 - good night
181:23 - that's great wow thank you tank thank
181:26 - you there's
181:27 - he's like stream is lit and this is
181:29 - amazing because he might have
181:31 - yes we broke 200.
181:35 - let's go wow
181:39 - thank you you guys we really really
181:41 - appreciate it
181:42 - that is awesome thank you yeah huge
181:47 - wow that's a mile that's a milestone
181:48 - that's our first honey
181:50 - yeah 200 dude insane wow
181:53 - we should invest it into um doing
181:56 - giveaways for everybody for shirts
181:58 - yeah that'll be insane let me show you
182:01 - some merch
182:03 - that'd be cool so now what we're going
182:05 - to have
182:06 - is we have the result link yeah so the
182:09 - result count
182:10 - is next so i'm going to change it so it
182:12 - says
182:13 - search page result count and this one
182:16 - you can see
182:16 - the result count now became this little
182:18 - gray so that's kind of cool
182:20 - and then what we're going to do is we're
182:23 - going to say
182:24 - the results so the actual container
182:27 - holding all of the results
182:29 - is going to say we're going to say max
182:31 - width of 650 pixels
182:33 - margin top is 20 pixels margin left of
182:35 - 240 pixels
182:37 - and a margin bottom of 100 so you see
182:39 - what it will do is it will pull
182:40 - everything in
182:41 - so that's how google do it they pull
182:43 - everything in and
182:45 - yeah that's awesome maybe there's 300
182:47 - more likes and sunny gets dinner on me
182:50 - i'm thinking oh don't don't worry
182:51 - maribon i think frank's already got the
182:53 - dinner
182:54 - i think i'm good i think we're good
182:56 - let's go
182:59 - frank actually yeah thanks frank gaming
183:01 - clutch with the
183:02 - the uber we got that we got the google
183:04 - credits
183:05 - that's insane nice so
183:09 - uh now we have the results styled
183:13 - um uh yeah so now what we're gonna do is
183:16 - for the result title
183:18 - so you can see the result title we have
183:21 - um text decoration none so as soon as i
183:24 - add that you'll see the underline goes
183:26 - right so that's cool but we want to keep
183:28 - the hovering
183:29 - so we want it to when you hover over it
183:31 - we want to underline it so if i do this
183:33 - then what we do is it says
183:37 - so now when we when we hover over it it
183:39 - will be
183:40 - a case of it will basically show you an
183:44 - underline right so that's really nice
183:45 - and then what we're going to do is we're
183:46 - going to target the h2
183:48 - we're going to target the h2
183:51 - and then we're going to do this and it
183:53 - says the font weight
183:55 - will change now so it becomes less bold
183:57 - so that's really clean at the end
183:59 - and then the final thing is the results
184:01 - snippet so that description is too close
184:03 - to
184:03 - the actual text so let's give it a
184:05 - margin 10 pixel
184:07 - away from it right so this is awesome
184:09 - it's looking
184:10 - really really clean and it's looking
184:13 - really really nice right
184:15 - so what we're going to do now is we're
184:17 - going to actually add a
184:18 - sort of um we're going to actually add
184:20 - an image
184:21 - to some of the values so some of these
184:24 - uh search page results actually return
184:26 - a really nice sort of image right so
184:29 - what we're gonna do here
184:30 - is and this is like a finishing touch on
184:32 - this right we're gonna go ahead
184:34 - over to the anchor tag over here
184:38 - all right i really like this message i
184:39 - want to give this a shout out the
184:41 - greatest ever says
184:42 - he goes sunny man whoops let me actually
184:45 - remove this he goes this is some amazing
184:47 - stuff
184:48 - qazi thanks for the platform as well
184:50 - every time i think about how i have been
184:52 - able to apply these lessons i get super
184:55 - grateful and almost teary
184:56 - thank you fam that's insane i love that
185:00 - dude
185:01 - that's insane i love seeing like when
185:03 - you actually see that people
185:05 - are really really like watching and even
185:07 - the donations like holy crap i remember
185:09 - when me and kazi started we got
185:10 - four dollars i think it was in the
185:12 - donation and we were like whoa
185:14 - yeah we lost our minds for because that
185:16 - was the most that we've
185:18 - ever done i was like yeah damn bro
185:23 - exactly all right so now
185:27 - what we're gonna do is we have
185:31 - the final thing so that that image right
185:33 - so that image that we were talking about
185:34 - so
185:35 - what we need to do is here i need to
185:36 - actually provide a check so i'm going to
185:38 - say
185:39 - uh inside of this a tag so i actually
185:41 - have it next to the a tag
185:43 - i'm going to say here so i'm going to
185:46 - add this
185:46 - right so i'm going to say if so this is
185:49 - actually where the image is located is
185:51 - strange
185:51 - it's weird i'm not sure what this all
185:53 - stands for but it's page maps yes the
185:55 - image.length
185:56 - i'm saying if there is an image in there
185:58 - right so if the length of that is
185:59 - longer than zero then go and access the
186:02 - source
186:03 - so then go ahead and go and access the
186:05 - source right
186:06 - and render the following so this is a
186:08 - bit of a messy bit of code but it will
186:10 - work
186:10 - and then what we're going to say is
186:11 - render an image like this
186:14 - where i say render the following image
186:16 - this image is a search page it has a
186:18 - search bar
186:19 - it says search page result image and the
186:21 - source
186:22 - is again that what we wrote earlier
186:25 - right so we don't actually need this one
186:27 - we can just use this
186:29 - and it will work awesome like that
186:33 - and now what we can do is we can go
186:34 - ahead and it says passing error line 87.
186:38 - let's go ahead and see why that's
186:40 - happening we see
186:42 - this we see this let's save it item
186:47 - all right double check what is happening
186:50 - so the anchor tag i'm going to go ahead
186:51 - and copy this in a bit
186:54 - replace this there we go nice
186:58 - so with that said i'm gonna go ahead and
187:00 - do a final finishing touch
187:02 - and i'm gonna copy this class name
187:06 - and basically style it with the
187:08 - following
187:09 - so i'm going to say for that image i'm
187:11 - going to do object fit contain
187:13 - height at 20 pixels width of 20 pixels
187:15 - and a margin right of 10 pixels so you
187:17 - notice how on the google
187:18 - on the actual app now because you check
187:21 - out it actually renders out like a
187:22 - little thumbnail it was meant to be a
187:24 - thumbnail
187:25 - if you scroll down they've all got like
187:27 - this sort of this look like these sort
187:28 - of images right
187:30 - so i'm going to add some rules to it so
187:32 - i'm going to say object fit
187:34 - height and width of 20 pixels and margin
187:35 - might have 10 pixels
187:37 - and then we do that and we get this nice
187:40 - little finishing touch
187:42 - so check that out
187:45 - so it adds that little image next to
187:47 - these oh yes
187:49 - i like that yeah that little clean image
187:52 - yep
187:53 - yep now to finish it we go back to our
187:56 - code change this
187:57 - back to term we go back to our mock
188:00 - and we take it away from the mock so
188:02 - this one was the mock api call so this
188:03 - one was the mock api call
188:07 - and we basically undo and we keep the
188:09 - live api call
188:10 - all right let me save it and now
188:14 - as you go ahead and click the google
188:16 - button firstly
188:18 - all right boom right
188:22 - and let's type something in so let's
188:23 - type in not tesla but let's type in
188:25 - something different that's typing maybe
188:27 - ssd hard drives oh yeah
188:31 - nice you would have never guessed me
188:34 - saying that so that possibly couldn't
188:35 - have been a mock or setup
188:37 - awesome right dude that is looking clean
188:39 - okay let's let's type in clever
188:41 - programmer now
188:45 - whoa that is clean that's insane right
188:49 - let's type in clever programmer google
188:51 - clown
188:54 - let's see if it comes out damn let's
188:57 - build a
188:58 - let's
189:01 - it's too good right here i can see the
189:04 - image
189:05 - i can see the image too i can zoom in on
189:07 - that image
189:09 - the clever programmer whatsapp let's
189:12 - check that
189:13 - type that in let's go
189:18 - awesome right very
189:22 - so super clean and guys notice how there
189:24 - wasn't a uh
189:25 - um there was no refresh when we did that
189:28 - when we navigated between the pages it
189:30 - just worked really nice and we're using
189:32 - um react context api to store the
189:34 - information inside of there
189:36 - um so hey just says look at the message
189:39 - you will laugh
189:40 - and i didn't see which message
189:44 - i was reading that too and i was like
189:46 - maybe i should have sonny read this
189:48 - but i don't understand hey i don't
189:50 - understand what it is oh nice dude
189:52 - she's got another donation wait what
189:55 - from
189:56 - miranda damn 50 mexican
189:59 - dollars or pesos thank you
190:02 - you did yo mx frankie mx is mexican
190:06 - yeah pesos right yeah damn nice allen
190:09 - says i love
190:10 - these projects thank you so much ellen
190:13 - we love you too yeah
190:18 - oh man frank i love that yeah yeah yeah
190:20 - i wanted to put that up too
190:22 - yeah so go ahead read it yes he says
190:26 - this is so mata
190:27 - uh meta googling yourself inside your
190:30 - own google cloud
190:33 - yeah that is hilarious that's really oh
190:36 - it's another donation william cruz
190:39 - appreciate that dude thank you so much
190:41 - whoa
190:42 - damn we're just oh my god we're we're
190:44 - broke i think we just what is this chief
190:46 - keef what is this um what is the
190:49 - currency what currencies are we getting
190:51 - into now
190:54 - chf uh william gave us five
190:57 - chf uh five that thank you dude
191:02 - really yeah what does that convert to
191:06 - 5.5 5.5
191:10 - damn that's bigger than dollars that's
191:13 - more than five dollars
191:15 - yeah oh damn thanks appreciate it
191:19 - yeah yeah steve says swiss francs frank
191:22 - sets
191:23 - five swiss francs thank you that is huge
191:26 - yo we're about to be we're over like 210
191:29 - now
191:29 - you guys this is unbelievable it's a new
191:32 - record
191:33 - new record damn
191:37 - global donation
191:42 - crazy guys okay i see the problem that's
191:46 - happening
191:46 - with the twitch i'll fix it on the next
191:48 - one big man says this guy said
191:51 - chief keef i know man i just chef and i
191:55 - just
191:55 - thought chief keef nice
191:59 - so guys with that said we could do it
192:01 - now i think kazi i think we're actually
192:03 - at the point
192:04 - of deploying tv is turned off
192:09 - all right let's get to the flooring bro
192:12 - let's
192:12 - go donation bro another donation i can't
192:15 - even
192:16 - give me one second let me pop it up
192:19 - stephen k
192:20 - thank you so much he says great job guys
192:23 - i massively appreciate you watching dude
192:25 - that's insane thank you
192:27 - what is happening why is this happening
192:30 - thank you thank you stephen king hey or
192:33 - stephen
192:35 - that is legendary bro thank you
192:38 - all right with that said let's we're
192:40 - ready to deploy let's get into it i'm
192:41 - going to change the bar at the top
192:43 - to let's deploy the damn thing
192:46 - all right
192:51 - there we go i wasn't kidding it's
192:52 - actually that and now what do we need to
192:55 - so now the process is pretty simple you
192:56 - guys know the deal by the way i got
192:58 - confused i thought it was actual real
192:59 - google but it's not
193:01 - are you ever gonna put the buttons i'm
193:03 - feeling lucky and stuff or no
193:04 - why did we style them oh right we got
193:07 - rid of that yeah so so we
193:08 - need to go back get app.js uh good catch
193:11 - good catch such guys the home yeah
193:15 - here we should have homegojs and we
193:17 - should not hide the buttons here
193:19 - yeah yeah all right
193:22 - but there we go okay let's do it
193:25 - mm-hmm yeah awesome
193:29 - now what we have is there we go
193:33 - beautiful now we're ready thank you dude
193:37 - thank you for everything very
193:39 - inspirational series guys cheers oh my
193:42 - god this is insane another donation ali
193:47 - parasharama says thank you very
193:49 - inspirational series guys cheers thank
193:51 - you so much for that
193:52 - another donation by ali damn we're never
193:56 - gonna deploy this thing
193:58 - thank you bro all right all right
194:00 - seriously
194:01 - frank gave another one
194:06 - hold on i don't see it yet i don't see
194:08 - it
194:14 - [Applause]
194:17 - deploy the google clone in firebase
194:19 - owned by google
194:20 - let's go all right i like it i like it
194:24 - all right guys i'm gonna speed through
194:26 - this before all these other donations
194:27 - start coming in
194:28 - i want this app to be live for all of
194:30 - you beautiful people to see
194:32 - and the first hundred people will get to
194:34 - actually use it after the first hundred
194:35 - people
194:36 - you will not get to use it please don't
194:38 - spam the search bar
194:40 - with that said let's do it so
194:43 - we're going to do firebase in it
194:46 - make sure you have to do firebase yeah
194:49 - make sure you guys
194:50 - log in with firebase and also install
194:52 - firebase tools
194:54 - yeah should we show them yeah should we
194:57 - show them the firebase tool command
194:59 - firebase tools wait hold on let's just
195:01 - go like this tools
195:03 - so this is the command you need to do to
195:04 - install it sudo npm install
195:07 - global fireplace firebase tools they'll
195:09 - get you that
195:10 - then you need to do firebase login but
195:12 - i'm already logged in
195:14 - so i'm not going to do that and then
195:15 - you're going to do init so now when
195:17 - we're going through this process over
195:19 - here
195:19 - thank you for another donation man wow
195:23 - jesus christ five euro what
195:26 - is happening and it's a five pound
195:29 - donation
195:30 - content out there oh yeah let me
195:32 - actually add his message here so we can
195:34 - actually show it yep
195:35 - best react content out there thank you
195:38 - brother
195:39 - all right here we go and uh let's go
195:42 - some
195:42 - we gotta go to hosting all right so
195:44 - we're gonna click hosting here
195:47 - now under we're gonna hit enter now
195:51 - that's all we need now we're gonna do
195:52 - use an existing project so hit
195:54 - enter and we are going to go
195:57 - to google clone so look for a g
196:04 - um ah right there weird sonata g
196:07 - apparently
196:08 - cool there we're gonna do build another
196:11 - donation
196:12 - brazil loves you say hi to us awesome
196:15 - job
196:15 - amazing what do you think about an xjs
196:17 - will it place really replace react
196:19 - it works with react dude but thank you
196:21 - so much attila
196:23 - yeah yeah it will definitely work with
196:26 - it
196:27 - yup thank you so much hit why so make
196:30 - sure you choose
196:31 - y and hit yes on a single page app it's
196:33 - it's a
196:34 - single page app all react apps are now
196:38 - if i go into this folder i will see
196:40 - something called build
196:41 - all right build is where everything is
196:43 - going to build so we're going to do npm
196:45 - run build yes honey yep
196:48 - cool so let's do npm run build and you
196:51 - guys are going to watch this folder over
196:53 - here
196:54 - start to get all the files now these are
196:56 - the files that go online
196:57 - and this excludes things that make you
196:59 - do hot reloading and all that stuff so
197:01 - it's going to be a much lighter
197:02 - optimized version you're going to put
197:04 - online
197:05 - so we're going to wait for that to
197:07 - finish building and then we're going to
197:08 - pretty much hit deploy
197:10 - and then we're going to be good to go in
197:12 - the meantime i will read out some
197:14 - comments because
197:15 - we're pretty much at the end finishing
197:17 - touchline
197:19 - emmanuel says the amount of knowledge
197:20 - you guys are giving to develop and
197:22 - inspire
197:23 - every developer is awesome and i can't
197:25 - thank you enough
197:26 - i would have made my donation but that
197:28 - option is not supported in my country
197:31 - well guess what thank you so much
197:34 - regardless of whether you donate or not
197:37 - we appreciate everybody equally okay
197:39 - whether you donate a hundred dollars or
197:41 - one dollar we appreciate
197:43 - all of you so thank you so much like
197:45 - even the sentiment really really matters
197:47 - like
197:47 - we just love your guys appreciation and
197:49 - love so thank you
197:52 - all right now it's done so now i'm going
197:54 - to do uh
197:55 - firebase deploy wait wait wait wait wait
197:58 - don't do it don't do it
197:59 - all right guys if you're excited and
198:01 - you're super pumped for this right
198:03 - like i want you all to pull out your
198:05 - phones right now
198:07 - and if you're literally watching this
198:08 - with us because i love this part
198:10 - right i love this part go ahead and
198:12 - shoot an instagram story
198:14 - and tag me and quasi in right here so
198:16 - there's always a case of trying to find
198:18 - it
198:19 - oh yeah you're doing a great job oh wow
198:21 - you're freaking
198:22 - your best perfect dude how are you how
198:25 - do you know that
198:26 - um okay so there we go that so
198:29 - he can't even see that shoot a story and
198:32 - then yeah
198:33 - tag me and quasi and then let's go ahead
198:35 - and deploy this thing dude
198:36 - yeah tag us in there uh one thing i
198:38 - noticed people keep making
198:39 - posts and tagging us in there and we
198:41 - never see those
198:43 - whoa adam just dropped
198:46 - a 10 pound donation
198:49 - jesus christ
198:53 - and he goes these clans these clones are
198:55 - sick bros
198:56 - where would you recommend freelance
198:58 - developers to go get gigs and projects
198:59 - and jobs like frank and others did
199:02 - so thank you so much few platforms i'm
199:04 - going to shoot out rapidly
199:05 - code mentor is a good one upwork is
199:08 - another great one
199:09 - outside of that build a solid network of
199:11 - people
199:12 - there's a reason why frank is inside of
199:14 - profit with javascript
199:15 - so for example that's another area you
199:17 - guys could join to build a deep
199:19 - network of people you don't have to join
199:21 - that program there are many other places
199:23 - but those are a few resources with that
199:25 - said i'm just going to continue and
199:26 - deploy guys because i don't want to
199:28 - i know if you're watching this is replay
199:29 - you kind of want to just get to the
199:30 - deploy so
199:32 - let's go ahead and do it yeah let's do
199:35 - it
199:35 - all right so i'm going to hit deploy and
199:39 - it's going to be deployed in five four
199:43 - three two
199:45 - [Music]
199:47 - one and
199:50 - oh my god oh my god
199:56 - you don't have a progress bar in windows
199:57 - whenever you're installing something it
199:59 - just
200:00 - 99 and it just stops like yeah it goes
200:02 - to 99
200:03 - like instantly and then it's just like
200:04 - forever there usually it beats us on the
200:07 - countdown
200:08 - yeah oh well yeah that's it oh it's
200:11 - going let's go
200:14 - [Music]
200:16 - all right i'm gonna open it up the first
200:17 - hundred people that jump on this or
200:19 - is gonna be less than 100 people guys
200:21 - don't spam it only one person
200:23 - once do just a few searches you know but
200:25 - this is the app
200:26 - it's up and running and it's online so
200:30 - go ahead and check it out should be good
200:31 - to go
200:32 - i think it okay let's do elon musk
200:37 - hey look at that nice there we go so you
200:42 - guys can look at the domain right that's
200:44 - the domain the same domain as we
200:45 - deployed to that's proof
200:50 - damn did it sunny
200:54 - we did it bro
200:57 - wow great work you guys
201:00 - and great work sunny this is phenomenal
201:03 - bro
201:05 - appreciate it dude like that was a that
201:07 - was a fun cool man that was insane and
201:09 - the energy from everyone today was just
201:11 - like off to the charts
201:12 - i loved it so meat says dude i've been
201:15 - here the entire afternoon watching you
201:17 - guys and it's totally worth it
201:19 - i might have to work overtime and do my
201:21 - workplace work now absolutely no regrets
201:24 - let's go nice
201:28 - wow thank you guys for all the love
201:32 - and all the appreciation really
201:35 - appreciate
201:36 - all of you guys here thank you for being
201:38 - here sunny do you want to add anything
201:40 - before we end this live stream
201:43 - i just want to again end it on saying
201:45 - thank you to
201:46 - each and every one of you guys or and
201:48 - girls for watching this stream right now
201:50 - like
201:50 - even the ones watching the replay of
201:52 - this like you guys are amazing for
201:53 - sticking with us
201:54 - massive shout out to zhao polo who just
201:57 - dropped another donation
201:58 - oh great job guys dude we are at 243
202:01 - in donation thank you
202:05 - let me actually pop that up wait hold on
202:07 - that does looks funny let me
202:09 - ah there we go wow thank you for the 20
202:12 - what's 20 r
202:13 - dude i feel like i'm finding out that
202:17 - another 10 donation hold on i don't see
202:20 - it yet
202:21 - oh my god this is it thank you thank you
202:24 - hal
202:24 - paolo really appreciate it i'm gonna
202:28 - why don't i see it dude we're 253.
202:34 - what mohan reddy says wow
202:37 - mohan ready wait i wasn't showing it my
202:40 - bad you guys i'm sorry
202:41 - mohan reddy says i am watching your
202:44 - videos
202:44 - for my interview prep this is really
202:47 - helpful in pair programming interview
202:49 - rounds
202:49 - thank you so much that's insane
202:53 - appreciate you so much dude when you
202:56 - land that job mohan
202:57 - let us know because we want that counter
202:59 - how many developers we've gotten jobs
203:02 - we want that counter showing up the
203:04 - clever programmer fam
203:05 - counter yeah that'll be insane love that
203:08 - guys
203:10 - that's huge damn dude this is insane
203:14 - the energy today is is unreal
203:18 - and we had some like we had some tech
203:20 - headaches and stuff like that so we
203:21 - appreciate you guys like
203:23 - even more in this video like you guys
203:26 - through the end
203:27 - yeah that is huge you guys thank you so
203:30 - much for sticking through everything for
203:32 - being here for not leaving during those
203:34 - because yeah that was
203:35 - uh quite a lot of work and yeah guys if
203:38 - you want
203:39 - definitely jump into this free training
203:41 - that we have for you
203:42 - the link is in the description below
203:44 - it's an epic
203:46 - one hour long webinar i think you're
203:47 - going to get a lot of value out of it
203:49 - so take a look into this and register
203:52 - other than that anything else sunny
203:54 - uh again just want to say massive thank
203:56 - you and yeah
203:57 - i think that's good because yeah should
203:58 - we wrap up all right with that said guys
204:01 - make sure to hit that like button if you
204:03 - haven't already
204:04 - subscribe to the channels and turn on
204:06 - your notification bells
204:08 - so then when we go and do the projects
204:10 - next week
204:12 - like discord clone like facebook clone
204:17 - or like linkedin clone we want it to pop
204:21 - up a notification
204:22 - on your phone right over here and give
204:25 - you a little
204:26 - bell and then whether you're bored you
204:29 - want to just watch
204:30 - netflix but you'd rather also do
204:32 - something that makes you six figures
204:34 - like our boy frank
204:37 - you can just click it and watch that and
204:39 - have fun
204:40 - but the only way you can get access to
204:42 - that is by subscribing
204:43 - hitting that bell notification so it
204:45 - comes straight to you
204:47 - with that said we love you guys we
204:49 - really appreciate you this is qazi
204:52 - this is sunny and we will see you
204:56 - in the next in the next video peace
204:59 - peace guys

Cleaned transcript:

your boy sunny how's it going guys great to see you all guys i hope you are excited because today we're gonna be building the google clone what's absolutely insane about this build is that it's actually the google clone so this is not real google by the way so that's one thing i wanted to tell you guys this is not real google so for example let me just type in tesla and hit enter and take a look at this boom all the tesla stuff is open if i type in react and hit enter it didn't even refresh and you're here exactly and this is actually using the google uh custom search api so this is actually real google results so you can see even there we want like four trillion results that come up it actually shows you uh the exact value so it's actually pulling this from google guys yo i'm about to go on stack overflow and find value in an array damn it's actually oh yeah it's a working it's actually a fully working uh google cloud so this is a sick though i hope everyone's excited yep so there you guys go this is the app that we're going to be building i hope you guys are actually excited about this google uh clone i we have some people and they're like whoop whoop it's the sound of the police by adam and uh hajira is like yo hi everyone bojack is pumped felipe says clean he likes the app the build yeah and priyanshu says hey qazi you won't believe it but because of your hold on let me actually put this here holy crap he goes uh because of your skills i landed a job that's worth five lakh rupees that's actually 700 us dollars so that's actually no joke oh and he goes absolute thanks can't appreciate you more and he goes best part being that i'm only 14 years old that is actually huge wow congratulations priyanshu for you brother this is amazing guys keep showing up keep watching this banger content and your skills are going to go to the next level super pumped about this now with that dang we have over 500 people live we're actually about to hit 600 people live guys by the way if you are liking this right so let me actually just show you so if we type in tesla you know tesla let's just do tesla stocks let's do elon musk guys this is a google clone this is not real google all right and um this is massive so this is what we're going to be building if you guys are excited about this build what do they have to do sunny what can they do to help us out and reach out to so many more people all we need guys from you guys is that if you're enjoying this you find value in it just go ahead and smash that thumbs up button guys for us and this will help the video get out to as many people as possible yes so go ahead and just smash that button we worked um sunny worked really hard actually on this build and there are some amazing things that you're going to be learning in this build and we're going to share all of them with you in just a second all right so for sunny go ahead smash that like button uh thank you for the first donation and let's start talking about what uh this project is gonna cover so sunny what are we covering in this i know you said we're gonna be using context api which is kind of like redux and people are gonna be learning about that type of concept what else are we going to be covering so we're going to be using material ui for the icons and a lot of the design work so let me just pop that in so icons like this okay got it exactly those icons are coming straight from material ui which is google's design library and we're also going to be using react router so this is going to be something super powerful and useful for you guys to learn and this is how we go from the search page to that search results page right so we go how we go from this page to that search results page um and then we're going to be actually using an external api today so we're using google's custom search api and that's how we're getting all of that crazy functionality that you guys are seeing right now when you search something and you're actually pulling live information from google yeah so we're using actual google's official api and we're going to show you guys how to do that uh and then we're also actually we're actually doing something we've never done in a build before we're building our own custom hook today guys which is super cool all right so we all know about react hooks and if you don't you're going to find out what react hooks are in today's video but we actually went ahead and built our built our own custom hook today which is going to help us pull that information from the servers nice beautiful and then are we using firebase for anything yes so we're using five to set up the app we need to use fiber to set up the app so that we can connect it to google and then we're going to be using firebase deployment uh voice hosting to deploy our wow that is that those are a lot of things that we're going to be covering is there anything else that actually should add to the list sunny or this cover pretty much everything we're going to learn uh this is pretty much everything this is pretty much everything yeah oh we've got a bunch of flexbox guys a huge amount of flexboxes in today's video as well yep beautiful we just broke over 620 concurrent viewers thank you guys for jumping on here subscribe to the channel if you want to take your developer skills to the next level land jobs make more income also make sure to like this video smash that like button it's free for you and it sends the video out to many many other people who are trying to become developers our goal for this year is to produce 5 000 developers who get fulltime jobs and our goal next year is going to be 10 000 developers or more that have fulltime jobs we want to help produce the most amount of developers on the planet that's the number one goal and i also want to say this channel we clever programmers all of us the clever programmer fam is officially the number one fastest growing coding channel in the world it's faster than all it's growing faster officially now than any coding channel out there and that is a fact so indeed yep awesome so let's get going so should we jump straight into it sunny let's do it dude so right now to get started we are using vs code live share guys we're using vs4 livestream we've been doing this in every single one of our builds um so that me and kazi can code side by side together uh so to get started what we need to do is go ahead and pull up the command line so let's go ahead and open up vs liveshare when you're ready quasi uh think you're muted yup i should be good to go now can you hear me oh yeah yeah yeah now i can okay beautiful dope opened nice and let's get let's get a terminal up and running so let me type in and try and do ls and i'll request read right there we go so there we go and now we're going to do we're just going to create this app yep we're going to create the react app and this is going to be called the google clone yep okay and then i'm going to cd into this once it's done oh by the way thank you previn for your donation so that's pretty awesome so let's i'm gonna actually highlight that right over here and prevent says sunny and cosy enjoy your teaching style greatly thank you for excellent content all these react bills are inspiring keep the fire going nice thank you so much for everyone we appreciate you yeah awesome all right so we one while this is setting up guys we use create react app to get oh we got another donation nice shree swaminathan banasari i don't know if i spend that right because as you guys are awesome your live videos keep me motivated and energized nice damn thank you for that donate damn this is lit we're already starting out with banger donations thank you guys so much really appreciate it okay so this is where wow yep the app is being made right now so what should we do should we do firebase right now yeah so we're gonna need to set up firebase so that we can connect it to google and so that we can host it online okay cool yep all right here we go all right so we just hit over 750 views this is 750 live people right now that's crazy dude yeah that is absolutely insane so now guys you want to all you need is a gmail account to get started you want to go ahead and hit the add project button put in something like google dash clone to get started and then it will ask you if you need analytics you can just take yes or no depending on if you're interested in that but it's not really a major thing at that point but once this goes it hasn't get done the reason why we need to do this now is because this is we're not using the database today we're going to be using the hosting so this is actually going to be this is how you guys saw the website and this is how kazi was able to access the website from all the way in la because i deployed it online and then you can basically go ahead and go on it right so and then also we this will allow us to get our google custom search api key which we're going to be using later on in the build so now that that's done we'll still connecting a bunch of stuff uh we're still waiting for the build to finish and yeah perfect just finished nice yeah so let's go ahead and set up yeah all right so let's go ahead and i'm gonna go uh no we're done at this point on firebase got it okay we'll come back to this later all right awesome oh thank you for oh man this is freaking epic efosa just dropped a five euro donation and what did he say sunny he says i have seen tutorials but this takes everything to a whole new level keep popping in these legendary projects you guys are priceless we are massively appreciated that's a huge donation and that's insane nice yeah thank you brother appreciate that um all right so this is the build and yeah one thing i do want to let you guys know is if you want to take your training to the next freaking level then we have something really special for you uh make sure you guys go ahead and open up a new chrome tab right now and register for this okay so this is something you should just open up and register for we have a epic training uh top three mistakes to avoid when becoming a javascript developer so i know a lot of you guys are trying to learn because let's just talk for one second why you're doing this why you're even building this project and a lot of you people that are learning this is you want to add it to your portfolio and most of the people that we know sunny are trying to use these programming skills to get jobs just like that person we had earlier right that jumped on and said hey i landed 6 700 client so the whole point of this training that i have put together for you guys is so you can see the roadmap from the coding skills to actually making an income so definitely go register for that training and check it out i think it's going to bring you a lot of value and with that said let's keep going and man we just had two other amazing donations thank you yeah i'm gonna just pop them up and the first one it says you guys are amazing for me so meet yep yeah you deserve to be on time nice and the next one can you guys please build a medium clone yeah sure we can that's actually a good idea but on the way to build everything yeah really good idea yeah medium is actually a good idea we should do that yeah okay so let's keep let's keep it now going so boom we got the firebase uh set up correctly and this is the app over here on the right hand side and then on the left hand side the thing is built so i'm just going to cd into it and then we can go ahead and get started now what i'm going to do is i'm going to do npm start npm start so on the right hand side the local host should pop up with the react logo spinning that essentially just means that our app that we just built on localhost is up and running and then we're gonna do a few things for the regular cleanup process that we normally do so here we can see this app is already running you guys now what i want to do is grab the logo grab the test and grab this test file here and delete it because just to clean it up a little bit because we don't need that right now and then we're going to go in app.js and it'll delete this line because that's what it's giving an error about and then let me go full screen here real quick and we're going to delete everything that's inside of the headers and i'm just going to go h1 and here we are building so let's say hey clever programmer fam let's build the google clone another donation thank you so much psy really appreciate it i'm gonna hit save here yeah and you guys can see that this app is now up and running it is showing our everything that we want to look at but what it's not what i don't like about it right now is that it has some styling kind of built into it so this is like centered and then also we have a little margin so we can just go ahead and get rid of that so let's go over here into our app.css and i'm just going to remove everything now when i hit save you'll see that i got removed of that centers you know how i was centering it and now it's just all left aligned and kind of default and then i'm going to go in my index.css and i want to remove that invisible margin that uh react often adds by default a margin of 10. so we're gonna just go ahead and give it give everything a margin of zero like this wow lots of donations come in you guys thank you gopi thank you romel for five dollars and um thank you buscar so i'm going to hit save right here now you saw that that margin actually just went away okay so i'm going to hit undo here so just just so you guys can actually see it happen live right and you saw that that margin now is gone i'm going to go back to my app.js for bam naming convention i'm going to lower case this i'll write that down here and with that said we're pretty much now ready to get started this is usually the cleanup process that you guys have seen multiple times already and uh let's continue that was dope dude that was a nice little entry there so nice once you get to this point guys you have a really nice clean starting template that you can work from so once we have this up and running what i like to do is get everything essentially sort of drafted out right so everything kind of should be a little bit drafted out so let's go ahead and just do a rough draft so we're going to have two pages in this app all right we're going to have a the home page and this is going to be the one with the search on right so this is going to be the one with the search on so start and then we're gonna before you continue before you continue all right so i just want to visualize everything sunny is saying because i love visuals and i hope you guys enjoy them as much as i do but sunny is about to like write all the components out here in comments so the home over here is essentially you're referring to this entire page here right exactly yeah got it okay so that's the home exactly i'm on board with you so let's go to the next thing yeah they're awesome so we have the home page and then we have the search page right so the search page like this right and this is going to be essentially the results page so this is where we have all the search results so let me type in something like uh let's type in joe rogan okay so let's go back boom i think you might have done the api i know i know yeah i think so yeah yeah right so in that case yes so this will be the results page that you would see right so this would be definitely pretty much it so it's this page let's just show it over here so let's i mean let me write in joe rogan so it'll be this page over here you guys it'll be this page okay yeah okay quite good there's so cause you're second broadcast just donated two dollars and he says this is awesome waiting for the day you guys do twitch let's go nice let's go we've also actually opened the other day we've been difficult to so you're interested in that no sunny your internet is acting really bad my friend you might want to just quit kill your video and i don't know maybe tell people in your house to stop using internet still bad now i can hear the audio a little bit better right what i might do is if we take questions for five minutes like just do five minutes and then i'll uh i'll quickly restart you're actually you're actually sounding a lot better right now by the way maybe maybe later maybe try it later yeah all right cool so we've got the search page now here um so we have the homepage and the search page and also kazi if you go back to the deployed version now uhhuh so let's go and then refresh it but do a hard refresh okay hard refresh yeah now what i've done is i've got a masked response so if you type in something like um type in tesla for example and hit enter yep nice go ahead and hit so you see now i'm pulling like rather than doing it's not going to be tesla but what i did is i pulled a like a default response so it doesn't ping the database every time it's ping the google search so that way you can develop with this result so this is just a sort of good idea for yeah just so you guys know like behind the scenes why this is happening is we're doing it in a way where we have a limit of a hundred requests and what actually has happened is people who are watching this live stream right now when on the url that's up there and spam the search to be over 100 requests and that's why it didn't open earlier so that's why sunny just built that like mass response and now it's good to go and viral just dropped freaking damn thank you viral that is huge viral just said we're all just dropped ten dollar donation thank you so much oh nice yeah that's insane thank you dude thank you yep and 800 viewers let's go 800 viewers and 800 likes damn you guys are freaking amazing guys you are representing that clever programmer family that clever programmer squad you know the deal smash that like button please and let's get this video out and let's bang it over 800 let's break that thousand concurrent viewers okay guys nice so you see now that's the screen we're talking about so the results page right yeah and what we do is i love you but we're gonna do a few minutes of questions so you guys drop in your questions sonny just please refresh your computer or restart your computer and we will be good to go you guys all right we got another two dollar donation by priyank and priyank says waiting for a dropbox clone love all their series thank you so much appreciate that so let me go ahead and do this so guys start dropping in let me go here and go let me take them out here real quick and i will okay so let's go boom uh sumeet says your ai face detection app landed me a great high paying job and just changed to a new company holy crap that is absolutely amazing damn um for some reason i am unable to zoom in which is fine which is fine okay guys so drop your questions that you have below i want to start taking on your questions and answering for you guys people are asking when are you going to make a uber clone we're going to be making an uber clone um at some point it's not on the agenda for this upcoming week but definitely today we just want to focus in on this google app that you guys are going to be building and then we have a few big clones lined up one of them is discord because i know a lot of you guys keep asking for it and then we're also gonna add new technologies like node.js node.js and start teaching as mongodb and i know a lot of you are trying to learn those skills as well behind me right now is actually frankie and i want to show you guys a little bit behind the scenes some of you guys might have known that we got a new place so this is actually our current studio setup right now so this is a new place that we have gotten for a clever programmer we call this the team cp mansion we can probably call it the high pass or the drip house you know but this is the studio and we're trying to set it up and this is actually where i'm live streaming and even if you see right now i have that cup of coffee that you saw in that photo i have that in my hands right now so this picture was actually taken today and um damn everybody says that's so sick thank you hey all right i think yo boy he's back that's better maybe just uh you can leave the video on yes give it a go all right let's go let's go so sunny is back i'm showing them my studio right now so let me actually share the screen with you too so you can see it so this is what the studio is looking like right now dude check it out oh dope holy crap that's nice dude yeah it's gonna get better but all right so let's keep going i was basically showing yo pick up homie that you said that yeah yeah that's hilarious it's kind of like how i imagine your ghost would be if you actually died i think you would speak to me through react comments that's how i think you would talk to it and like i would just see like you know freaking i would be like coding and react and i'll just see something like this and be like you're the best quasi i'm still here bro i'm still here you'll be like you're you'll be like you're not following them holy crap i was gonna just say that bro i was just gonna say that oh i peeked and broke some people's ears probably that's so funny damn good guys we're back all right we're back we're back to jump in the build let's go so talk to me what's going on here and let's keep going bro let's do it so now what we do is usually guys what we do is we i like to drop things out uh in a component layout right but today what we're doing is i'm actually going to show you how you can lay out your project in like in in pages and in components right so this is going to help you break down your projects and it's actually how they do it in a professional environment so it's going to be some good experience for you guys today so let's go ahead and go to our uh folders i can't see our photos for some reason oh man all right let's see this should load in a sec um yeah so kazi if i'll just run you through this as and i'll rejoin the live share so basically go to uh you want to go to your folders in source add a folder called pages all right yes i had a photo called i'll call i call i'll add a folder called pages all right dude all types of technical difficulties are happening it's kind of crazy my tv just shut down frank you want to help with that and uh all right let's keep going so paige it says it says the live i think you need to uh restart a live show because it says the host is offline yeah but basically we're gonna have pages and then we're gonna have components and we're to break things down into separate pages and break things down into separate components can you not you can't see it right now because it is live shared so maybe it just says it says the host of the work say seems to be offline so i think maybe what we'll do is if you press command shift p all right so let me actually go ahead and do that command shift p and let me add you to this screen over here so everybody can see oh let me actually flip that around boom boom there we go all right so command shift p and what else yeah and then type in uh live live share and stop so i think it'll be live share and stop okay so stop stop collaboration session exactly and then restart another one that should kick you out somebody just said they landed a job by the way from our like face detection clone no way see all right there we go oh nice i just got your message there you go so let's go ahead yes i can see yeah all right we survived that we survived that hopefully you're good are you in here i am in here i'm waiting for the file tree to load up it says opening session and we're in hey nice beautiful yeah there you go you got pages right here yep nice so with that said let's go ahead and do the following so let me get rid of this comment there we go so uh now we've got pages right so what we're going to do now is we're going to have pages and we're also going to create another folder and i'm going to call this one components right so this one's going to be pages and components and the reason why we're going to do this so if you open up your uh yeah there we go we've got pages and components and the components are going to be reusable components like we know right so we're going to refer to things like the search bar as a component but the pages are going to refer to the home page and the search page right so this is something which they actually do in professional environments i thought it was a good project to show you on this right so the first one that we're going to do is we're going to actually go ahead and build the home page right so i'm going to go ahead and type in home and what we're going to do is cause if you want to build the first component and then after that we can streamline it so let's go ahead and create a new component and we're going to call this one home all right home.js boom yeah and then we're going to use a really nice trick here guys and it's called rfce and it's from es7 snippet so that's an extension that's going to allow you to do what kazi just did and you just type in rfce and you get all of that code just pop out for you so once we do that we're going to basically get used to setting our apps up like this so it's going to be cast name home i'm also going to create a see a css file for this we're going to say import home dot css like that right and then i'm going to create the css file for this so notice how this one actually went into the wrong folder so what we're going to do now to fix this is uh we are going to go ahead and move this so we're going to go ahead and move these two so because if you want to do it so it's visual do what move home and home.css those two files push them into pages all right there we go push them yeah and then click move uhhuh yeah and the reason why we're doing this guys is because it's actually a page right it's not a component it's a page so it is a component but if we're referring to it as one of the pages on on our site so that's that done and what we can do now is go back to app.js and go ahead and import this so i can go ahead and import this like so so i go here and i say import um i think you have to follow me again quasi i'm in app.js now say import home from home like this right so now we have the component being pulled in and let's go ahead and double check that it's actually working so we can say h1 so i haven't got my snippets which is fine i say h1 this is home page right like this right and if i save that now we go to 3000 let's go ahead and see what's happening here so we can see ahead so now it's saying there's a problem because in the import now we have to do this we have to say forward slash pages home right and we save it there we go nice nice okay right so this is the home right and then what we're gonna also do is have a search page right so we're gonna have a home page and a search page we can leave the search page for now so let's go ahead and build some functionality uh so that way we can get everything up and running uh and then we'll go ahead and so is this technically still a component like home yes yep so it's still a component but your folder structure changes and this is what they kind of do in in production builds so you would have a pages folder and the reason why i thought it was good to bring up because in our coaching course a lot of students ask about this so i think it would be really valuable for everyone um to see another hold on jared says i am proud he goes i'm proud to be one among the 5 000 members who landed a fulltime job love you clever programmers um dude that's insane i think we just hit a thousand likes dude damn thank you guys we are at forty dollars in revenue on this a stream thank you guys so much for that that is huge we are over a thousand likes and uh we're so pumped because one of our big goals is to get 5 000 people to become developers this year and then next year we want it to be 10 000 or more people to become fulltime developers so this is a huge uh this is a huge accomplishment for us thank you for sharing that yeah that's insane love that right so now what we're going to do is in the home page in the home component we're going to go ahead and basically draft out what the home page is right so let's go ahead and do this so now i'm inside the um oops what's going on here so i'm inside the home.js one sec can you see that quasi so let me go ahead and reconnect yeah we'll give it two secs it's just doing a reconnect all kinds of tech today we're fighting against the skies it's a sync issue but we'll get past it it's all good it's impressive how much tech is coming in how many issues we're having exactly all right so you've got the home page now so what we're going to do is in the home page of google we have a header and we have a body right so the header so if we go ahead and pop open our deployed version kazi so let's pop open okay so let's open up the deployed version right here okay so what i'm going to do is draft it out now so we have a header so i'm going to go ahead and say div home um i'm just going to score header like this oh okay i don't get my snippets so i'm going to say div and this one's going to have a class name of home header like this right and then i'm also going to have a another one which is going to be home body right so this is going to be two sections of the web page and we can draw circles around this to show them uh what we're visually doing here so we have the header which is where we see about store gmail images and the user avatar and then we have everything below it so anything below it we're going to call it the body and anything in that top banner we're gonna be referring to as the header okay so hold on just so i'm gonna draw it out visually and sometimes if you're speaking about these things just you can let me know to draw the visuals i'll be your [ __ ] on the live stream that's okay yeah so i i actually did say uh but i'll say it again just wake me up like yo cause you're not paying attention because i'm looking at the comments and everything so when you say header this is what you're referring to yeah yeah exactly okay beautiful and then when you say body is it on everything underneath there so it's this yeah everything underneath we're referring to as the body got it yeah now i always talk about containerizing things because containers allow us to start things easily right so at the top we have like a header left which has about and store and on on the top right we have uh header right so i'm going to go ahead and create and i love this comment by the way this guy goes how goes alert investment the moment these two create a company put all your money and enjoy your retirement within five years hey that's what we're talking about guys that is what we're talking about that's actually 100 uh true like i feel that if we just went hard dude like real talk like we just went all in i do think a lot of people can just invest and retire yeah i think so we can make we can make tipple come alive yeah we will go we go public on the stock market yeah yeah nice so we've got um the header left and header right so here i mean we make tin dev and we're a lot like we're live company yeah exactly tinder oh yeah was it tinder and there's another one um oh yeah two that's so funny all right so we've got a class name here and i'm going to do header left so home underscore underscore header left oops left and then i'm going to copy this so i'm going to go ahead and copy this and i'm going to do header right right so these are going to be basically imagine we're drawing mini containers so now we've got one mini container in the header left and one mini container header right okay then what we're going to do is inside of here we're going to have two links so this is going to be the first link which is going to say that we're going to have two links here and then we're gonna have a link link so this is gonna be the gmail link the images link and then the icon the icon and then the avatar right so i'm gonna go ahead and draft this out so we've got the avatar after that right so how do we get this working now so uh we're going to need a few things to get these links we're going to have to use something called react router and to get these icons and avatars we're going to have to use something called material ui so we're gonna have to install a bunch of dependencies at this point and we do this once and we don't have to do it again so kazi let's go ahead and install material ui to begin with uh you're muted quasi material ui so we gotta do npm install uh you material ui core so i'm just gonna go here open up a new terminal cd in here anyway just paste this and install now next up what we need to do is we need to go to icons now once we're inside here cert click to search the full list of icons and here are going to be all your icons now one more install you guys need to do is if you open up you can open up another one or just wait for the first one to finish change the chord icons this will get you all the icons that you're going to use and why are we using these icons these icons are going to be used for this mic symbol here this search one that right gallery view and a few other things so that's why we're going to need this yeah even the buttons that you saw there where it says google search and i'm feeling lucky are actually being pulled from material ui so they get that nice little ripple effect ah nice so these buttons are coming from material ui so this is not material ui icons but it's still material ui yup dope okay so got it this is how you install it you guys once your installation is done you should be good to go exactly now because you want to show them how we can so yeah also you can just go here and this is the code that you can just copy and paste and you can search for the icons just by typing in whatever you're really looking for so for example here if i want the search i go here type in search hit enter this comes up copy this code go back to my app paste it in right over here and then i can actually use it exactly and that's how when you see me importing a bunch of like icons and stuff like that that's where we're getting them from so if you do get lost at any point know that that's how we found those icons right so with that said we now have material ui so i can go ahead and pop in the icon and the avatar so the icon uh actually before we do that let's go ahead and do one more step so we need to set up react router to get these links all right so i need a few links on the top um so let's go ahead and uh so if you go to react rear on google uh huh let's do it so okay yep so reactor uh and then you're gonna click on web and there should be i think it's yeah there we go in npm install react we're done that's the one we need dope all right and while that's loading what we can do is we can go ahead and actually write the rest of the code so heading over to app.js react requires that we set up something beforehand right and it's very simple how we use react through what we do is we essentially wrap our app in something called a router right so we need to import the required dependencies so at the top of the file i'm going to go ahead and pull this in so we have a bunch of dependencies that we put in at this point so we've got the router the switch and the route right and then what we do is everything inside of our app right everything inside of our app we're essentially going to go ahead and pop the following in so i'll explain exactly what we're doing here and i'll do it step by step so we basically first need to add a router right so we first need to add a router and then basically everything is going to go inside of that router so everything goes inside the rear at this point right then what we're going to do is we are going to add a switch because basically what we actually allows us to do is it allows us to render certain components based on if uh based on the route that we're in so at this point i'm going to add a switch here like this and then i'm going to add the roots so the roots that we're interested in are the following ones so this these two roots right so i can go ahead and get rid of this now what i've done here guys is very simple so i'm going to go ahead and assume that here we will say is this is the search page so let's go ahead and do this is the search page and i will show you exactly what we've done here so if you did get lost i'll explain what's happening right so let's go ahead and save this and we'll save this file nice so because this go ahead and open up localhost nope oh localhost okay okay whenever you see that i want to go to the command line nice so now we've got the homepage right but you see what we did is it says if your route is at the forward slash so if your route is at the home page right so we have forward slash which refers to the home page then it's going to render the home component right now if we go to forward slash search it will render this component so in this case i've just got h1 where it says this is a search page so cause if you want to go ahead and add a forward slash search to the url so i had a full slash search a a see that right and it's it's instant right yeah it's instant so super fast yeah super super fast and what we can do now is any component that sits inside here so we're talking root we're talking the home component the search page component we can use something called react router links inside of that component right so let's go ahead and go back to home now what do i mean by react rear links so let's go ahead and import the the correct thing that we need so we need the link from reactor or dom and this is actually a really really powerful piece of tech now guys so i'm going to go ahead and replace this link right here and i'm going to say the first link goes to the about page i think it was the about page like this right so we do this and then if i go ahead and sorry if i go ahead and basically what this is going to do is it basically replaces it's like an a tag so it's like a link right but it's just like a react ruler link so here if i just write about and then hit save and if we go to the let's just go to forward slash causes let's get rid of the search nice so you see there's a link now right and i've said it goes to the forward slash about so it needs to go to forward slash about so let's go ahead and click on about yeah there can you see the url the url changed yep it does yeah as soon as i click it boom it changes it exactly so what we can do now is we can go ahead and pop in the remaining two things we can have this one and this one and we can go ahead and have another link here another link here so i think it was about um what was the other links let me go ahead and pull up the app as well so i can see oops oh my alfred shot down looks like there you go your heart rate has shut down what'd you say my alfred oh okay i was like dude i really hope your heart rate is fine yeah let's go ahead and do the following so let's go ahead and check this out so we have about we have store right at the top so on the left side we have about and store and store goes to forward slash store this one goes to gmail here we have gmail and this one goes to images like this right and this one goes to images so you see that's it guys there's four four links and the reason why we're not using an a tag here is because if i use an a tag what's going to happen guys it's going to actually go to that page and refresh and we don't want that we want to use the link tag so it has no refresh and it does it instantly so the react way is to use link exactly exactly um oh man i don't know why i can't actually see the the the photos are so annoying you can't see the folders and my tv just died again so give me one second yeah i'm gonna rejoin the session guys so give me two seconds i'll rejoin that session that cause he was doing so oh guys i think we deserve i deserve to smash the like button for this today because this is a lot of techies a lot of tech issues like just in everything that has never happened before yeah like now i'm back in i'm back in nice damn holy crap guys when you're live this is this is trickier than it looks to debug this stuff so yeah nice awesome so we have that up and running um let's go ahead and follow me again quasi yep let me actually just go ahead and uh follow you and lift up a 55inch tv and hit the on button at the same time nice so let's go ahead and do this and now yep it's nice following me so what we're going to do now guys is we're going to start this so it looks a little bit like what we want to get it to so the first step is let's go ahead and actually give this the appropriate style so we have we're inside of home header right that's where everything that we want to style is living so let's go ahead and do the following we say target home header give it display flex and what we should see at this point is everything inside that header should go in a row right because by default when you do flex uh everything goes into a row so if we do that we are importing the file we are using this home header there we go why is that not refreshing let's go ahead and see let's get rid of the this is home page go ahead and save this file and we've got oh yeah so right now this is actually correct so about and store uh yep we've done that so home header and then we're going to do is we're going to say justify content so justify content space between right it's going to do this save it and then what should happen here is if we refresh cozy let's go ahead and refresh is the app is the app running it is running right i'm on the about page i'm on the bob page that's fine yep that's all right so i feel like let's go ahead and double check so it seems to like that the changes that we're making aren't being home header home header should be i mean it's it seems fine i just saved it let me go ahead and do display flex on the home and we go ahead and do a flex direction column and a view of a hundred view height so it takes up the entire way hold on i'm where are you doing this because i'm following you are you on a css file right now yeah i mean home.css um it's showing me that you're in home.js yeah i can i can see you you can see that go ahead listen so now you can see me right in home.js i can see you in home.js right so unfollow me and follow me again i did many times but i'll do it again and let's go ahead and see if it follows me properly into home to css no yeah it does now now yeah you went to app.js so now i'm in app.js with you but now i'm in home.css um it doesn't want to go to any css files with you maybe maybe i'll just manually just call it out right now it's not even it didn't actually push the code that i wrote in here okay so you know what give me one say i'm gonna rejoin one more time it's good yeah this feels like somebody's just spanking me like left and right i know what it feels like it doesn't feel good at all like against my will somebody's just spanking me this guy can you see now can you see with me now if it's hyping hello cedric is like if you have any doubt just reboot he did that already let me actually try uh following you again try now moving around to different things okay so abc worked that's good never going to home.css no if i go into index or css what is okay so index.css worked but home.css didn't work app.js what the hell okay all right i have an idea i have a hunch pull everything out of pages yeah let's just pull this out of pages and let's go ahead all right let me let me test it i'll pull oh you're pulling it out yep i'll pull it out and let's get rid of pages let's get rid of components so we'll just do a flat hierarchy for today's world and then let's go ahead and fix our imports so we done four slash home here we have home there we go nice okay i think we're good yeah holy crap dude flute your code is like live sure completely drops when you have poor internet connection future code what happened we were supposed to do airbnb build the airbnb clone i was so excited and then i just stopped hearing from you i still want to build it um there we go finally there we go it's working yeah so these are the changes i made guys uh yeah so i guess it was a flat hierarchy i guess vs code didn't like that so yeah so now what we're going to do guys is i set on the home container itself i said display flex flex direction column and give it a height of 100 view height now what that did is if i go ahead and give this a background color of say red now you should see the entire thing goes red so let's go ahead and add semicolon nice that's what this height right here did and there that's it we're done that's it we're done that's that's that's good thumbs up that's actually how most developers show it you know that right like most developers will build something that looks like this and it'll be like well this just to give you an idea what's possible and they'll be like join my course and then i'll show you more exactly they get you like half in nice so we got that and then the home header guys so the header itself as well the links are living i wanted to do display flex this justify content if i go ahead and remove that you'll see it pulls all the header left and header right together so we need that to space between it padding means that 20 20 pixels top and bottom 30 pixels left and right right and then align them centrally so that they're all uh vertically aligned so now that we're back up to speed what i want to do is all of those links right by default they look like links which looks ugly right we don't want that so i'm going to add the following inside of here so i'm going to say in home header all of the links right so home header a tags because remember these links that you guys saw so these ones right here these actually convert to a tags but they're just like clever a tags right so what i'm going to do is to style it i'm going to say go ahead go into home header target the a tag give it a margin right 20 pixels this makes it actually go ahead and it fixes the uh the way that it gets rid of that underline by default and then this is the color that they use on google so it's a really strange car i tried to color picker it and i couldn't so i just literally grabbed the the source code color that they had and then the font size of 15 pixels now i'm gonna show you guys why i did this line as well so let's go ahead and save that and you can see it looks a lot cleaner right now cause if you hover over don't hover over what oh i'm hovering over it yeah it looks good yes and if you click it the links actually take you to uh to sort of new urls so if you go to the fourth search so i i see so i see the url and you guys should see that too yep yeah so that works but we want it to also show like an underline for it so what we do is because we removed all the styling with text decoration inherit now if we add this hover text decoration underline if you hover over it now check out what happens mmm nice it so we get the link functionality back and then we sort of uh man goes what about the data layer so we are using god damn [ __ ] jacked girlfriend girlfriend's getting jacked so now what we're going to do is we need to finish off the header right and the header right with the icon it seems like she's like dead serious too which makes it more hilarious and jacked sometimes she sends me text messages and they send me way off and i'm like god damn it so now i want to have like a grid right so i'm going to have a grid uh sort of icon and the grid icon that we're using in material ui is called apps icon so what i need to do is this one here apps icon and what we can do is we can go ahead and import that from material ui with the following line so apps icon from material ui icons apps so if i save that now you should see an icon pop in so that's how simple it is to get an icon in your app guys so it's very very clean very slick and then for the avatar basically i'm not going to go i'm actually going to use a blank avatar for now so we're going to go ahead and pop this in uh i need to go ahead and import that from material ui and when we say avatar we're talking about when you're logged in you know that little sort of circle icon rather than messing around with radiuses and circles and stuff we literally can use an avatar from material ui and it fixes all that headache for us uh if we save that um save that should what is that advertisement yes save that saved refresh guys saved it so wait why is that hold on hold on why is that thing happening because then we do um in settings didn't we set it up to be in a way where it auto saves let's go to auto save yeah yeah we did after yeah strange okay yeah really strange oh man today is just like this freaking strange day so guys we have the header right right now you see the header right doesn't look quite okay so i'm going to go ahead and do this so i'm going to target i'm going to say display flex yeah do that and you'll see it pops into a row so it's saved before there we go it pops into a row but everything's not vertically aligned right so i'm going to go ahead and do a line item centrally and watch what this one does so this will pull everything in the center on the vertical axes which is good then what i'm going to do is i'm going to say give it a minimum width of 13 view it because if you want to be responsive and then you see it didn't look like it did much but now if i say go ahead and space the i all of the children between itself if we do justify content space between it should have done uh it will do a good job when it goes bigger all right now what i'm going to do is i'm going to make sure that when we target any of the icons so this is how you target any icon inside so this is saying go inside header right and this is the class that material ui gives you by default right we can go ahead and do margin right of 20 pixels hold on hold up hold up hold up i don't think it's following you were you doing a lot of styling uh i think you're looking at it yeah i could see that one no now now it's following it wasn't following you for a little bit so i don't know how much styling you did in the last two three minutes but here it is i have no look at look at the comments they're saying we can't see the css don't see the css so they're the comments are coming in i caught i just i caught it pretty much right away but oh damn it okay that's cool i don't know how much css now here it is yeah this is what we're doing here guys so i've added header right so display flex align item centrally minimum width of 13 view it justify content space between and then to give that icon so that grid icon some space between that and the circle avatar i target the icon because this is the class name that material ui gives every icon and i add a margin right to it so that's why we're doing that okay uh awesome and then there we go we actually have like a the the top portion of the header done so cause if you go ahead and resize it now you'll see it's fully responsive that top uh that top uh header hey it is i'm just putting it through a stress test you know yeah that looks clean man i like it i like what you do bro yeah awesome uh oh frank says uh frank's in our inside of the prophet javascript course and won the coaching because he says the flexbox froggy website was great for learning flexbox foggy i was like nice yeah that that is a good um that's a really good resource by the way okay people are telling me i should put the title on top and i was kind of being lazy but i will do it because this is the second or third comment so i love that actually for calling me out let's do it so what are we working on right now sonny we just finished the header i imagine yeah so now we are working on adding the search bar functionality so we're actually adding the body of the the search page search bar yeah add google's box there we go the most english way of writing the title is possible boom sorry i exploited somebody's ear but it's right it's not nice so now what we're going to do guys is we've got the uh go back to home here and we've got inside the body right so inside the body i'm gonna add first i'm gonna add an image because we all love images so i'm gonna go ahead and add an image and that's gonna be the google logo so i've got a link here and this is simply the google logo okay so if we go ahead and save that you'll see massive google logo popped in then what i'm going to do is i'm going to target that and style it right so i'm going to go into home.css and i'm going to go and say that uh we should go ahead and that body so we're going to target the body we're going to target the image and say contain it but make it a height of 100 pixels right so that will actually go ahead and um make it a lot more smaller and object fit contain keeps the aspect ratio so it doesn't like stretch and look weird then what we're going to do is here we have home body so like this i'm going to go ahead and target the home body and this is a neat little trick that you guys can do so i'm going to say the breath the body should take up the remainder of the space now the reason why it's going to work is because homebody sits inside of the home parent which we made flex uh and we've done the flex direction column so this is by saying flex 1 it's going to take up the majority of the space now margin top of 10 gives it a little bit of spacing from the top which is why if i remove it you'll see google goes up yo how'd you how did you center how did you center it so it was centered from that was actually from we did that with uh where did we do that um we centered that with let me go ahead and double check where did we do that yeah i was like how does this thing get centered so perfectly all right time for air horn says guys take a rest these bills are exhausting you guys deserve it i say we triple down on these guys we're trying to get to like seven bills a day yeah so oh this is why this is why it's very yeah because we're doing flex direction column so it spans the entire width so the direct child is is this uh home body so that's where you see the image tag hold on hold on so what's making it centered are you giving me like a politician roundabout answer or okay yeah you see that yeah so flex if i added flex direction column by default it's going to take up the entire row in that column right oh that is weird dude i would never think about that that like flex column like flex direction column would be used as centered yeah so like now if i add like a h2 or h1 tag or something oh why is my emit not working i say test you'll see now let's go ahead and do test so test so image won't but like if i take if i go ahead and pop another image in right you'll see that the image will sit and it should sit in the middle there we go got it okay got it um it would be doing it would actually be using the width but you would do text align center to get it centered yep yep oh i see what you're saying i see what you're saying okay it's still using the width with the text it's taking up the whole width but it's left aligned by default so even if the text is like boom this big the text is just taking up all the space to the left but with an image you're saying it will actually put the image in the middle exactly yeah but you see if i do a center tag it actually uses that and then i sent a tag and then h1 h1 yeah send today or that's how i center stuff dude that's how that's i was going to say because yes this uh double check if you go into um vs code settings quickly just double check that the prettier's on all right yeah that'll make developing a lot quicker so let's go ahead and do uh do s format on save so type in format on save all right so let's go all right format right there one save yep i got it okay and then you see it at the top it says uh go to so it says no right so click that and you want to click on oh my god which one is it default oh my mine's nose oh interesting prettier this one right here right i want to say yeah but i don't trust it so maybe i mean that looks right let's try it that's right let's try it yeah let's give it a shot um i don't really know i mean it didn't i don't know what it did bro but it seems like it's good yeah that's fine cool so there we go so then we have the image tag there and then what we're going to do is we have the i'm going to basically add a an input container here right so it's going to be input container and this one we're going to basically put a placeholder here for the search and the reason why so this is going to be like a search all i want to do is have a one search component and once that's built that will sit there and that will have the buttons it will have everything we need in that one search component the reason why i want it to be a component is that we can reuse that component then on the page the results page right so that will help us use have some reusability there so with that said what i'm going to do is go over to create a search search component so i'm going to create a file called search.js so search.js and we should pop in now um yep and i'm do rfce and my snippets aren't working so you're going to oh there it is there we go nice and then i can do class name search i'm gonna set up my css file so i'm gonna say import search dot css nice i'm gonna go ahead and create the search.css file so search.css boom and we should be inside there now all right awesome so we've got our search file set up and then what we're going to do now is we are going to go ahead and actually lay this one out so the search field right so the first thing we have in the search field is the input field so i'm going to go ahead and create create a container for that some say class name equals search this one's gonna be called input right and inside of here i'm gonna have three things i'm gonna have the search icon uh so i'm gonna have a search icon which is gonna be the hourglass so this one i'm gonna give that a class name of search input icon i'm going to have an input right so i'm going to actually have an input like this and that's going to be basically be where you type in some information and then you want to google something and then i'm going to have a mic icon right so i'm going to have three things inside of here and i'm going to import those at the top so we have access to them so let's go ahead and import them save the file go back to home and let's import it here so we can actually see our search working so let's go ahead and say import search from search like this right now we should see some kind of input and some icons pop on the screen in a second so let's go ahead and see it says import function home there we go you can see you got that little it's very ugly at the moment but you can see that it's there right so we've got the search input and the rest of the stuff so what i'm going to do is style that now so it doesn't look as ugly as we can see it there and the way we do that is i'm going to go inside of my search.css and i'm basically going to go ahead and type the following so i'm going to say search input to go ahead and target that and then i'm going to say display flex align item center right so let's go ahead and see that and i love doing this as we do it like this because then you'll see as things sort of get started the difference that it's going to make so if i go ahead and add a border around this of light gray so i'm going to go ahead and do border one pixel solid light gray and you can see it adds a border around it i'm going to set the height of this to be 30 pixels right so it should get a little taller i'm going to give it some padding and i bought a radius of 999 pixels right and the reason why i do 999 is i want that perfect curvature right so i added some padding i've done 10 pixels top and bottom 20 pixels left and right i'm going to do the width is going to be dynamic so it's going to say 75 view width which means so you always use 75 in the screen width then i'm going to do margin 0 auto and this is a trick to make it horizontally centered okay so if i do this you should now see a centers horizontally then i'm going to do margin top 40 pixels and that will push it away from the google uh icon and then i'm going to do a max width of 560 pixels so that way it never grows past a certain high uh width so even if you're on a huge screen it's not gonna like basically take up like if you're on a 4k monitor which is like 50 inches you know you don't want that search bar to be huge so you give it a max width all right so very very clean uh look and feel there then what we're going to do is we're going to target the inner input field right that inner input fold and what i can do is i can say flex one because i want that input field to take up the majority of the space inside of it so you see it expand right then what i can do is i can say give it some padding so i want to do the same thing 10 pixels up and bottom top and bottom 20 pixels left and right i want to say make it a font size of medium so medium by default is one that they provide and it'll make the text that we type a little bigger i'm going to say give it a border of none so now you can see the input field has a little border around it but as soon as i add this line watch how everything snaps together so if i go ahead and pop this in there we go look at that you see how that like one simple change and now it's looking very clean right now kazi if you want to click on the input field right now why the hell do we see that blue ugly nastiness right you see that like outline yeah we don't want that and you don't see that in google so what we can do is if we target the input field and we say go to the input field and say colon focus so when you're focusing on the input so when you click it if we set a property called outline width to zero oh look at that that is nice that's cool right you do outline with two one uh let's do like one pixel uhhuh oh do it to 20 pixels yeah i wonder what happens if we do that is that hold on i don't know maybe it just has like it's either on or off you know yeah i think it's like a it's like a boolean i guess maybe yeah it's a boolean okay cool yeah zero is what we want right now it looks clean yeah so that's really nice right so that it's already looking super crisp like google right now we gave the search icon a um a color a class name of search input icon so i'm going to go ahead and target that because i want to make that color gray right so i'm just using default colors here they're kind of close to google's ones and it makes your life a little easier when you're making this so color gray there we go and then what we are going to do is we are actually going to go ahead and add some buttons okay so we're going to add some advanced underneath it because as you guys can see like it was very quick to sort of get to this point but like it's just all these little tricks and hacks and stuff like that that you sort of pick up along the way it's very important to get good at those so that way you can build at that speed as well that's why the greatest ever even he says the damn this outline width thing will be very helpful yeah really handy and honestly in some other builds i wish i did put in there because it is a really nice finishing touch to us especially to a search bar when you're making um when you have like an icon on the side and things like that so what we're going to do now is we're going to actually create a so underneath this div i'm gonna have a div called search buttons right and these buttons are gonna be primarily responsible for the two things that you see on google it says google search and it says i'm feeling lucky so let's go ahead and check all one that we built quasi all right let's go to it you want to go to the home page uh no so the one that we deployed oh i see okay yeah right over here yep so you see these two buttons google search and i'm feeling lucky right we need to get those working so i'm going to show you guys are we done with the search bar no yeah so this is all part of the search bar got it okay cool yeah this is all part of the search bar so we're almost we are we'll be done pretty quick um so now what we're going to do is we're going to add a button and the way we can do it and thank you deepak for that uh nice little donation and thank you come on nice because thank you for an amazing tutorial small contribution from my side massively appreciate that dude thank you debunk and thank you yeah that is amazing oh two donations like right at the same time that is odd unless they were friends and coordinated it together nice so what we're going to do now is add a button but we're adding it with a capital b because it's from material ui so i need to go ahead and import that from material ui so let's go ahead and pop that in and this button is going to say google search google search and i'm going to have another button which is going to say i'm feeling lucky right and you see i added a variant outline to this one so this is a google property so let's go ahead and open localhost all right so you see the second one had varian outlined and the first one didn't so this goes to show you that google actually can go ahead and provide you the material ui library design that we provide you with different props one of them is variant so in this case if we add variant outlined you can see that we get this by default which looks pretty clean yeah so we can go ahead and add that now what we're going to do is somebody says i suggest you use sas preprocessor for css guys that's why we use bam so trust me i used to use sas but bem's a lot cleaner when you get used to using it and it's a lot faster um yep so now what we're gonna do is we are going to add um okay so i actually i actually want to make the entire search field actually we'll do that afterwards with it afterwards so what these two buttons here google search and i'm feeling lucky let's go ahead and style these so they look like we want them to look right so let's go ahead and firstly let's go and style the search buttons container so i'm going to hop over to the css and say go ahead and pop in a margin top of 30 pixels display flat nice justify content so justify content center was important here if i don't have that it's left aligned so it's flex start by default and we want to center it right and then what we do is we target the button and this is how we do that is we say inside the search bar container target and normal button because that's what gets rendered our material ui's button i'm going to say give it a margin of 5 pixels a padding of 7 pixels top and bottom 15 pixels left and right let's go ahead and add that you can see it automatically spaces it apart give it a background color of a light gray and give it a white pic uh one pixel solid border so let's go ahead and do that and there you go like we started to look a lot more and you see by default material ui actually goes ahead and makes everything like capital letters which isn't very nice that we don't want to do that in our case so what we can do is we can override that by saying um uh checks transform inherit so if i go ahead and do that you'll see it drops down to the lower size right to finish it off i'm going to say color is this nice little gray and there we go we get a very nice sort of finishing touch right now uh please don't spam the chat guys you're just gonna get blocked so yeah yeah yeah so now um let's go ahead so now if you go ahead and hover over that button it's fun for me to block i just sit there and a lot of my work is blocking no i'm kidding yeah okay click here yeah so if you hover over the uh the buttons google search and i'm feeling lucky uhhuh and look at how nice it looks when i click it dude look at that so the click looks really nice but the hover doesn't it doesn't look like google's yet right yeah so wait what does google server look like let's see so let's look at the deployed oh yeah we can use this one yeah so you see that it gets like a nice hovered look right yeah but i like how even theirs is not responsive and ours is more responsive than actual google right yeah this is something i found yeah i was like i couldn't believe that it wasn't responsive when i saw it that's embarrassing dude that's actually embarrassing yeah like then they should literally like with a few lines of code look how much better that looks like yeah and i'm like zoomed in wow yeah so guys this shows you like even companies like google sometimes they don't get the responsiveness right you know um nice so what we're going to do now is actually add a hover functionality for the buttons so we target the same thing at the top so we say to go ahead target the buttons but the hover state and i'm going to add a box shadow so i'm going to add a little box shadow here so because if you just want to hover your mouse over it and then we can see it as as we uh as it changes yes yeah so just keep it hovered up there we go and then what we'll say is i'll say a background color wait wait wait wait wait wait wait wait wait anytime your screen is not showing like i'm gonna give it a shout cool yeah go for it so a background color of gray so now if you hover over it yep yes you see it's slightly changed right it's very hard to tell but it's like i can do it and comment it out and put it back uh i'll do these three and then and then you so these these three together are the ones that will be much more apparent to show so if i do that you see that yeah i can see it yep yeah because in that that way you can see a lot clearer when we do that so now um when we sort of hover over it you get that very very nice look and feel now there is a little other line that they added on the google button so this actually came directly from google button and it says add a linear gradient from the top to the bottom and it's basically a gray it's like a white color and it's very subtle like it's so so uncommented i mean comment it so you can see here here it's just like a gray but here if you do this it's actually oh nice it like yeah looks like more solid yeah you see that that's a flat button and then this has some kind of like shine to it looks like a little 3d button yeah it's so it's just it's really subtle but i can experience the difference yeah insane like small small tweaks like that are going to make a difference um yeah so we've got that in place now what i'm going to do is i'm going to say when you click this button so on click i'm going to say fire off the search function so fire off the search function and we need to obviously write the search function so con search equals it takes an event whenever we have an on click and we're gonna do e dot prevent default and what this will do guys is when you click that button we don't want it to refresh or do anything funky um so i'm gonna add that by default and some of you guys might be wondering that only happens in a form we are going to be making it form very soon so that's why i'm going to add that now um so now when whenever kazi types inside the the search bar so inside that middle bar we don't capture or save the input the input text right we need to keep track of it so in order to keep track of the input text we're going to basically use something called state and state essentially is how you write a variable inside of react so here i can say const this is the syntax for writing a piece of state and this is a functional component so we're using the use state hook so we say input set input and this is how we modify that value and we just got another donation thank you whoa nice thank you oh we just got 20 donation dude wait what where hold on wait for it to load bro you're too fast on your phone holy crap whoa thank you so much damn freaking 20 donation and he goes thanks for the valuable content you got it we're gonna keep banging this content out so thank you for the love really appreciate you yeah that's huge dude thank you so much yeah so now we're gonna do um we have the search would you educate oh yeah we were saying up the state so input set input and then we say use state right and then by default we want that to be a blank string because you have nothing in the input field when you start off we need to import this so we can go ahead and do this so import oh yeah i'm gonna do the air horn because that's a good donation you guys and it's a little delayed but here it is that's where i got it from bro yeah yeah nice um there we go so now now what we're going to do is we have we are going to change the are we going to map that input to the input field right so we go to do that we say input value equals input and what this does is it maps the input here right so we're saying this input and state is always going to be mapped to this input but right now it's always going to be mapped to your blank string but we want to basically keep track of it as kazi types in so in order to do that we say on change so on change equals unchanged fires off an event right so we're gonna it fires off an event but we can just shorthand this and say e and then what we can say is this is an arrow function so we can say set the input text to be whatever cause you typed in which is e.target.value that's how we get that value right now what this means is if we've done it correctly if kazi types now it will just type normally but behind the scenes it's actually been captured in the state so kazi go ahead and type in the the input field nice can i okay cool so that's all good that means that we are we've connected it correctly if you guys get to this point and then you don't uh actually see the field being updated then you haven't done the unchanged correctly right so be sure to do that correctly now what when we click that google search button how do i connect the google search button so that whenever kazi types in and hits the enter key like it detects it and then something actually triggers by the way real real quick amanda's just joined and he goes wait what i just joined in after an interview is that really google or is it a clone nice he just joined after an interview dude he's 17. he's crushing it holy crap he's in pwj he's 17 and he's just he's yeah he's got a lot of talent like i'm really pumped to have him on our team dude yeah he's insane nice another donation thank you so much sayantan he says you guys are amazing dude your work inspires me a lot thank you for these live streams i made some of the projects by watching these live streams let's get it nice awesome all right so this is looking good i'm liking this now so input is the variable where everything i'm typing into this blah blah blah like whatever i'm typing in here right that's going straight into input yeah okay and then you can use that and you're probably using that right over here in the form we just got another twenty dollar donation what from dj spouse you guys are dope keep up the great work thank you so much bro thank you dude that's insane love that damn we're at eighty dollars we're about to break a hundred soon this is huge this is gonna be our like what eighth live stream if we did that yeah that's crazy so guys i'm gonna get back into the explanation i know i keep getting distracted by donations but i can't help it i always will appreciate it until i'm in the ground so um let's go here so for example so this is the input whatever i type gets stored in here and then it's also being stored in here giving giving it to as a value and then you're using set input to give it the actual value right to store an input you're pulling the value out of whatever i type in the form or the search bar and then you're making sure that when that search functionality runs you are um you're making sure that it's actually preventing the refresh yeah we're using this function we're using the search function uh so this is actually connected to when we click the google search button oh right here my bad okay i missed that what i'm trying to do now is i'm going to show you guys a really neat trick right now this trick is basically how to um how to make it so that when you hit the enter key when you're typing in the input field when you hit the enter key they will actually trigger this google search button right so how do we do that with very minimal lines of code and i'll show you and it's very impressive when we actually do this so to prove that this isn't working i'm going to do a console log and i'm going to say you hit search you hit the search button right so i'm going to do this so now because if you go ahead and open the terminal uh open the terminal sorry the inspector let me go ahead and open the inspector so i will go here inspect and uh console yep and this refresh and then let's type in all right so i'm gonna go ahead and do that so let's get out of here yeah and if you hit the enter key yeah i just did yeah nothing happened right nothing happened and i can prove it to you guys by showing the keyboard yep okay if you click the google search button this one here it actually says you search the button right so what we're going to do now is map it so that we can so that when kazi hits the enter key and i'm going to show you it will actually submit that that function so to do that in super super easy way let's go ahead and change this div to a form right which means you have to close the closing make the closing tag of form as well and then all we have to do guys is make the button type the submit and literally with that said whoa my god what's happening you oh god oh my god that's insane whoa okay let's go back on the screen uh frank says guys i just landed a sixfigure consulting project for sonos that's insane holy crap that's crazy dude holy crap holy [ __ ] all right based on the spotify clown okay he goes to make their new react uh to make their new react and react native radio station prod wait what am i doing hold on people can't see the thing my bad so to make their new react and react native radio station product they hired me based on the spotify clone i built using sonny's live video on youtube bro that's insane holy crap oh my god bro bigger concerning project damn dude i'm so incredibly grateful for clever programmer team yo let's get this bread bro insane and guys just a reminder frank was i was speaking to frank on tuesday in a coaching call so right after we finished the whatsapp build i jumped straight on a coaching call and frank was in there talking with him so that's insane that's so so cool yo sonny let's get on let's get on a call after this bro i got some got some good news to share with you but let's get on a call after this yeah dude oh my god that's increds crazy nice so anyanya says definitely joining pwj let's get it yo the cp gang coming in guys profit with javascript join that course you guys already know the deal that's it love that guys love that everybody is wishing him uh let me see if i can do this all right so everybody's wishing him they're like well done frank you guys are rocking anonymous is definitely joining pwj uh good looking giving back frank best of luck that's crazy real motivation guys you are making it rain felipe says little john says oh [ __ ] sonos really uh you guys are doing a really good job awesome damn bro i'm just i'm too hyped man i'm too hyped i know saying that yeah that's like a sixfigure job a sixfigure con and with sonos sonos is such a big company like oh my god hey dude you know what we should do we should have a counter at the top how many people have landed how many people has clever programmer helped land jobs we should have a counter at the top i want to get to 5 000 this year 5 000 and then next year i want us to get to 10 000 people getting jobs yeah because honestly the amount of people especially in that coaching course or in live streams that say they landed a job like 100 we should keep track of that that'd be awesome yeah i think that would be amazing if we did that i'm pumped yeah i definitely want to add a lot of those things in here super super legit and let's get back into the training nice this is crazy right so we changed the outer div into a form right so a form and the class name was search and what we're going to do now is we change the button type the one that we want to trigger when we have the enter key here we change that type to submit so now cause if you type if you i think you might need to refresh but if you type and what i'm gonna do is also i'm gonna say you hit the search button and i'm also gonna show what the input was at that point so let's go ahead and do this one sec one sec let me go ahead and save this uh there we go now if you refresh all right i'm gonna refresh okay so now if you type in and then you hit the enter key so type in some some stuff i see it oh it says you hit the search button and it pulled out what i said which is elon musk dude yeah we were yeah we were looking at your code right i just want to make sure we're following you properly okay yeah yeah so we changed the to get that working guys all we did was change the outer div to a form and change and change the button that we want to trigger on the enter key to type submit that's insane like uh if a lot of people end up doing this hacky way of listening to when the key is pressed don't do any of that just do this simple trick and that will save you uh so much what's the trick type submit so you change the div that you're in to a form so the entire all the children are part of the form and then you change the button type of the thing that you want to sort of submit so if we click that button it will launch uh the search function right but if you make the button type submit it also means when you're in any input field inside of that form and you hit the enter key it will submit this button which means it basically triggers the young click got it now why um i don't want to go too much down a rabbit hole but why do we have to make the entire thing oh because this whole thing is a form you want this entire input to act like a form yeah i want the entire that's okay okay got it got it yep so so even the yeah so you know the our input field is actually kind of a custom input field at this point so yeah so that's how you do it which is pretty cool nice so at that point guys what we're going to do is i'm basically going to say do something with the input right so we're going to come back to this point so i'm going to say come back and fix basically at this point right and then what we're going to do is here i'm going to say uh so so we're actually going to use react viewer gives us something called history right so in order to get the history i'm going to explain what this is but we pretty much need to import the history uh and i'll explain all of this in a sec so import use history this is a hook and this provides us with the browser's history right so what it does is it what we can say at this point is when you hit the search button let's go ahead and take you so we're saying push this page into your history so it's essentially redirecting you right so so push this page and then we're pushing you to the search page right so we're pushing into the search page now remember app.js we said if you go to the search page it renders this out right which means that now cause if you refresh all right let's go ahead and refresh here yep refresh and you type in something into that search bar why isn't it showing up okay there we go yep yeah so type something in and then you hit the enter key oh nice okay so now it's actually routing me to the search page and this is where you're gonna build the actual search page that's gonna have all the results i imagine exactly result one result two result three the little like bar at the top yep exactly but let's go back now so let's go back to forward slash so i'm going to make this component reusable now so i'm going to make a i'm going to slightly modify this component so that we can use it in other places right so in the next page on the results page we don't we want the we want that search bar but we don't want the buttons we don't want the google search and i'm feeling lucky button so what i can do is inside of search i can basically go ahead and this is where we pass in something called props right so i can actually pass a prop in called hide buttons right high buttons and by default that value is false so if we don't pass anything in i'm going to just assume it's false right and then what i can say is i can say right this is where the buttons are getting rendered so i can say if we don't pass the option to hide the buttons then i will render out this this is called a ternary yeah let's go tenory opera so you can go then i can go ahead and do this right so then i can show the buttons otherwise i can go ahead and show the same thing where i can show the same thing but i want to hide the buttons right so here very important thing now the buttons here we have in order to get the uh the enter functionality you still need to render the button but you just have to hide it in a very clever way okay so the way we do that now is i will show you so the way we do that is we pretty much go ahead and do search buttons hidden like this uh sorry we just do a button type i can go ahead and give the um a class name to this button so i can go ahead and give these buttons a class name i can say class name buttons hidden and then what i'm going to do is to hide it but keep its functionality i can go ahead and do this i can say search buttons hidden i can say display none important like this right and what this will do is you see now if i go ahead and where we render that if i go ahead and do the following if i say hide buttons you'll see on the right hand side the button should disappear so kazi check this one out yep this is quite a cool sort of reusability tray so now you see what we did is uh if we go inside so you see at the bottom it says hide buttons yep right i'm passing this prop in so if i if i don't hide the buttons then and i save it down this yeah and then if i hide the buttons oh nice so you can okay that's sick so you can use that search bar in the search that bar that you created you can use it in the search page and remove the google search and i'm feeling lucky buttons and then just be good to go exactly but if we refresh here you'll see that it actually does work right so it actually works and even if you type something in the hit the enter key so let's go ahead and type something in and hit enter key you see it still worked wow yeah even without the buttons present because the buttons are actually there on the dom so they're actually there on the web page yeah we're choosing to display none so we're actually hiding them right wow so that's a really cool important point and we do yeah that's pretty clean like in the ternary operator that you're using basically just goes if the height buttons prop is passed use this class that class displays none exactly damn boy really clean yeah really really clean and what we could do is this could actually be you can actually make this a quite easy like a quite neat um you can actually clean a lot of this up by putting it all inside of uh here so you can actually say class name but i mean we'll leave it as this because this is very explicit you can actually see what's going on but yeah you could make this even cleaner so what we're going to do at this point is we have done the search component right so we actually finished the search component so we have the search component down now what we want to do is whenever we whenever we essentially uh type something in the search field and we go to the search page we want to essentially push this search term into the data layer right we want to push this into the data so that we can use it in the search page right now the reason why you could do this in a number of ways you could use this you could also use react router to do this and pass the search term but it's always cool to show you guys how to use a sort of when i say the data layer i'm referring to the react context api yeah so the react context api is essentially where you can push information into it and you can pull information from internet and it's not and it doesn't matter where you are inside of your app right so it's essentially the redux pattern so what we're going to do now is i'm going to show you how to set up the data and i'm going to do it pretty fast and the reason why we're going to do it pretty fast is because we actually have an amazing little snippet where we explain how to use the entire react context api which we actually uploaded very recently which you can go out and check out after this if you get confused so let's go ahead and do the following so we need to introduce a few things here so inside of index.js we need to go ahead and do the following so this is our app we essentially need to wrap it in something called a state provider right so what this is going to do is essentially going to provide a data layer around our around our app right so it's going to be provide the data layer around our app and our app's going to break because it doesn't know what we're talking about here it's saying hang on but you don't have a state provider what is that so what we need to do is go ahead and create a file called state provider dot js right and inside of here i'm going to basically drop a snippet of code right and i'm going to explain each of the lines and like i said guys at this point if you get confused then remember we did we dropped a video which we explained the entire thing in a lot more detail about how you use the react context api right but i'll explain it right here ever in detail so that anyone watching can actually follow along so this is just importing the required dependencies this right here is basically preparing what we like to call the data layer so i i've referred to it as a data layer so it's actually easy to understand but this is essentially preparing the data layer right and then this right here is what we call a higher order component so you see it says state context and then children now the children that it's referring to is this so the app right the app is essentially the children that we're referring to here and then we pass two things we passed a reducer and an initial state a reducer an initial state you can see here i'll explain what they are in a second but essentially the initial state is what that data layer looks like when the app is loaded right the reducer is something which is clever and it listens to changes uh for the that will be needed from there that now this is a hook so this is a hook this is a hook which allows us which allows us to pull information from the data right so this is a hook which allows us to pull information from the data layer so with all of this information so this is again this is just one of those pieces of codes which is very very it's like a snippet of code which is going to allow you to actually set everything up so quick and easily right so make sure you do go ahead and check out that video that we talked about uh that we dropped and it's all about how you can pretty much understand the redux plan and understand the react context api but i'm going to show you the next thing that we need and we need the initial state and the reducer and all of this is going to live in a file called reducer.js it's lowercase because it's not a component so now we're inside of reducer.js so inside of here we're going to have a few things the first thing is we're going to have an initial state an initial state this is essentially what the date what does the data layer look like and you can notice as an object right and all we have inside this object is a term and in the beginning the term is no right but when we sort of add in so when you type in like elon musk you want this to change to something like this elon musk right so this is where the data is going to live inside of initial state right but initial state is essentially what it looks like when that first loads then we have something interesting called action types now here whenever we want to change the data layer we need to dispatch an action so imagine like if you whenever kazi types in the input field and hits the enter key i want to basically dispatch an action which says go ahead and change or set the search term right so this is what the action type is right so this is very important this is what the action type is in here we're just using set search term as our action type now to get all of this working we have one final piece of magic that goes along with everything and this is the reducer okay so this is the final bit and once we're done with this yeah everything will come together okay so so stick with me here so this is the final bit we have a reducer the state is the state of the data layer and the action is whatever we're dispatching into the into the data layer so into the the context api right i like to add a console log here for debugging purposes so that way whenever we do any manipulation to the data layer it will change um it will change it will actually log out the action that we dispatched right now what we do is inside the data layer so the reducer's job is to listen for any dispatched actions that's all it does if we don't know what the dispatch action is it just returns the initial whatever the state currently was but say for example if we know what it is so say for example if i dispatch an action called set search term like this one it's going to return what the new data layer should look like so this is saying return whatever the state currently looks like this is called a spread operator and then also change the term inside of the data with whatever action term you dispatched right so again this will make a lot of sense once we actually come into practice and we actually want to actually show you how this works and again just to reiterate this is um this is actually really broken down nicely and in a visual representation in one of the videos that we dropped previously and it says uh i think it's the missing explanation to the react context api uh or for slash redux so make sure you go and check that out because if somebody said you guys um i do you guys sell hoodies we should we should actually we should surely should yeah we should make some clever programming hoodies that'd be good that'd be nice yeah i would totally cop me as a cover program already yeah that'd be dope if somebody's good at that stuff designing uh hoodies and designing shirts and you also know about how things like teespring works just design it reach out to us on instagram like dm me and then i can actually we can have a conversation because that's something we want to launch we want to actually have a merch and so if you just dm me and you show me this stuff then we can actually like talk and make it kind of go live that'd be really really cool that'd be awesome nice so we've set up the reducer and now what we're going to do is to use this it's quite simple to actually so that was the hard part guys that was the that was the hardest part of the build right setting up this stuff and again we have a video which runs you through the entire thing so i recommend you go and check that out so we need to uh import some of the dependencies here so i'm going to import the reducer and the initial state from that reducer file and import the state provider from that magic statement provider file that we created earlier and you should have and you shouldn't have any errors when you get to this point so you should see the app continues to work as we expect it to but now what we've done is we've essentially wrapped the app inside of a data layer so we can push information into this data lab whenever we want so the search term for example and then we can also pull that data whenever we need to right so now let's go back into search and here what we do is to get that information remember that hook that we built inside of here so this one use state value all right we're going to go ahead and use that now inside of the search dot js so let's go ahead and go to search dot js over here and what i'm going to do is i'm going to go ahead and say this so i'm going to go ahead and pop this line in and basically we need to import the state value so that hook that i just showed you i need to import that and what we're doing here is this is actually it gives us two things it gives us the state so whatever the data layer looks like and a dispatch and this is like a gun that allows us to shoot actions into the data so that we can change it right so here what i'm going to say is break apart the state and give me the search term but in this case we don't need it right now but so i can just leave this blank all i need is a dispatch so whenever we type in the search field what i'm going to do is i'm going to dispatch right i'm going to dispatch an action and the type of the action so i need to insert i need to import the action types from the reducer so this was this thing right here i need to import that so we have those i need to say dispatch a type of action and the type of the action is going to be action types dot set search term right and you can do it like you can do it as a loose string but the reason why we do an object is so that they match perfectly from here to here so if we use an object we don't actually make any string mistakes so that's why i do i do action types dot set search term and then remember inside the reducer here we had term and then we actually changed the term inside the the state with this action.term right so the action.term that we're talking about is here so term so if i pass an abc it's going to be abc but remember we actually track the input up here right so we want the term to be whatever the input was because that makes sense right that makes a lot of sense we just got another donation thank you rb gaming squad he says good work guys love your videos give some project ideas on react awesome dude thank you yeah so now what this does is it dispatches an action so not only are we going to push the user to the search page but now we've pushed them to the search page and we've also said here put the search term inside the data there right and then what that allows us to do then is inside the search component we can now pull the search term that they had when they were at the home page in that google input field so with that said qazi let's go ahead and uh refresh why is this freaking out it's saying you state there we go nice yeah so now let's go back to uh forward slash yep oh somebody said update the title yeah we should uh i guess we still are doing the search term but we yeah we basically just set up we just set up the react context api yeah i mean i guess the whole freaking thing is a google search you know like we're building google search i feel like we're never gonna change that we might as well just change it yeah so now what functionality are we building um so now what we're doing is where we well we just set up the react context api but we're going to be moving to building the search page okay yeah that's really good build search page yeah search results page right yep cool all right i think that is that i think that's clean like that looks really good i'm just gonna put a little yeah that's the official sound of we're on on to the new stuff awesome so steve mccarthy says also somebody has to keep an eye on sonny i'm not sure what he means so now yeah so now what we're gonna do is um we are going to go ahead and test this so because if you type in something like let's type in uh this is a google clone inside the input field okay okay yeah and now if you hit enter we should redirect and we should see that it dispatched an action do you see yeah so that means that now we actually updated the term inside of our data layer to google clone which means inside this component now inside the search component we should be able to pull it right we should be able to put it so how do we do that let's go ahead and go to our home.js go to your app.js this is the search page that we see at the moment this is a search page but this is useless we want to see a search page component we want to see something like this yeah this is the search page right so let's go ahead and create that component so i'm going to go ahead and do search page dot js and then once that loads up i'm going to do rfce so rfce and boom like this i just want to share something so i dropped it in our pwj community uh that frank just landed a hundred thousand a year consulting project at sonos to build their new react uh our radio station product with react and react native and then david jonathan who was actually on these live streams if you remember yeah he's now in pwj and he's like congrats frank really excited for you my friend so uh soren who's awesome and then devin gray who also was on these live streams goes that's dope especially because i hate their current radio station apps please fix it so i can enjoy it sonos soon again and then frank um you know the person who actually got this one he goes i'm so excited to share this win with the entire community damn that's amazing dude it makes me so happy guys like i like the video for frank yeah exactly so guys like it's it's really like a nobrainer when you see that kind of stuff like the course whatever the course costs frank just made six figures inside right and literally and i shared this too with everybody like two weeks before that jen got an offer for 96k a year based on the covet tracker project so these are like i said here these projects that we're showing you are as real world as it gets yeah and like truth be told like what we're offering the course for at the moment is hugely underpriced like we will be pushing the price up soon so it should be 5 000 10 000 like you know coding boot camps but we are offering it in a way where more people can actually join it exactly exactly so that guy's like jump in why you got a chance because it will go up eventually and and because i mean like it's so much like the price is guaranteed it already went up and now it's gonna go up again when we do the react challenge in one to two weeks from now yeah exactly and also if you're pumped about that drop a thumbs up nice that would be fun yeah yeah so we're going to add a class name for bam so let's say class search page let's carry on guys so let's go ahead and do import search page dot css over here i'm going to go ahead and create that page so search page dot css search page css over there and we should go inside sonny if you get the 2k likes i'll buy you dinner tomorrow oh nice [Laughter] let's go guys oh man that's so funny you heard it here first guys get me those 500 likes yeah what if like that was your biggest driver i know right it's getting free dinner [Laughter] he's just on the streets like homeless bum coding in php building clones oh man let's go so we got the search page uh and now inside the search okay so the search page is one of the most sort of like fun components to build and we'll go through it and we'll break it down bit by bit um but basically it consists of a bunch of different sections so we'll stick to the way we do things typically and the search page currently has a header so let's go ahead and add that so we've got a div of the class name of search page this is search page underscore underscore uh header like this and i don't know why it does that but here we go so we've got this right so we've got the header at the top of the search page and then we have the search results underneath it right so the search results are going to be essentially underneath it here so we have the header and we have the results so two sections inside of here like this right we've got the header and the results and what we can do guys to test this out and have a little bit of fun remember we just pushed a value into the data layer so let's go ahead and actually check if that value came through so remember i said that when we whenever we grab a value from the data layer it gives us the state and the dispatch right so what i can do is firstly i need to go ahead and import the state value hook so use state value like this and here what i'm going to do is i'm going to destructure the state and say get me the search term which we put inside the state and now what i'm going to do is just to test if this works i'm going to say render a h1 tag with that search term inside of it if it exists right so this should be correct like this and then here so now if i go ahead and do say it says search page is not defined so now if we go to home.js and we go here search page inside of home hey ananya says he goes qazi i will be joining pwj in a few awesome once you're in there i will know you're in there in slack just give a shout out and tag me and i'm going to respond to you and then tomorrow livestream uh will definitely show that you have joined it i think that's going to be epic yeah that would be dope that'd be awesome search page no no that's fine yeah i'm good i'm good so if we save this now what we should see is inside i think hajira and the youtube comments will know what i'm talking about and maybe like one one or two people might but i'm not gonna say anything let's keep going yeah right so now if i save it what we should have is it says module okay yeah oops somebody actually pointed that out before so i saw that thank you guys uh so if i do that now so because if you want to go to the forward slash so let's go back to the forward slash yeah and now this go ahead and type in like any search term history tesla stock or something like that nice you're muted for a while okay all right so i basically said a robin hood app i mean that's not that interesting anymore and i said i love that you're actually pulling the search term man and showing it on the screen now we're actually able to uh get the search and actually query it and i'm sure the part that's coming up soon is going to be the google search api yeah exactly exactly yeah so guys dude frank this is awesome frank just said i can make uh hold up hold up i'm i'm getting uh ajira's like i know right all right frank basically says um i can make the shopify site for the cp shirts and hoodies that is awesome frank actually that would be really dope would love to like share it with everybody well it says easy i can make the shop oh nice kenny oh sick yeah so yeah that would be sick um awesome so we've got the rubbing head up being pulled through so the search term gets pulled through now which is nice right now obviously what we want to do at this point is we just want to kind of run a search on that right so i want to actually go ahead and connect to google and run a search on it right so what do we need to do in order to get that working so firstly we actually need a key so we're going to be using something called the custom search api so kazi if you go ahead and go over to this link right now i'm going to drop it inside of i'm going to drop it inside of um inside of here so you see it got it yes let's go let's go to that link command t command v enter by the way guys all of you guys should be doing that exactly people move way too slowly on their computers yeah all right here we go oh kareem the crew just said kazi how do i join pwj link in the description uh you can actually go ahead and check out and there will be a link where you can go ahead and here's how you can join it cleverprogrammer.com pwj that's it yeah and then you go here watch that badass video we have it's going to give you exactly what you're going to get inside of this program and then you know once you like it just jump in that's it that's it yeah cool let's keep going we also have a free training in the description guys so there's a link to the program and the free training in the description make sure you check that out um awesome so i'm here so yep so now you're here so if you go down to all right let's go down and it should say at some point uh go back up sorry so you actually need where is this it was in this page so let me go ahead and find this what are you looking for basically we need to get a api key so what you want to do is click on that um okay yeah so click on the identify your application so go up to the top so you see where i didn't i got it so you're going to click on that guys go to this link yeah click on get a key so this is the custom search api should i have it uh yeah yeah so you want to hide the screen yeah i'm hiding the screen yeah so at this point so you could probably show this bit quasi but don't click next yeah all right i'll show this bit right over here api okay so um let me actually switch to my other account real quick and now give me one second you guys now i'm gonna click get a key all right and um here on the create a project i'll choose the project that we're creating right now yeah the google clone yep and don't click next once you've done that but google click on the google chrome now i'm going to click next i'm gonna click all right i'll hide my screen next yeah it's gonna hide your screen and then click next and then what will happen here guys is you will get an api key right so you want to save this key and the reason why we're not showing you guys the key is because you have a free limit of 100 queries a day right which is enough for a portfolio but we don't want to like it's just it's just oh that's nice dude come on bro your boy is clean guys your key will look like this you know i didn't do that doing a little bit of live editing so that's what that page should look like by the way i'm just hiding mine yeah yeah hide it before you click save and copy here cool all right so now what are we doing sonny what do i do with that now awesome so once you have that key guys what you're going to do is let's go ahead and create a keys.js file so i'm going to go ahead and create keys dot js file okay like this yeah and what i'm going to do here is i'm basically going to hold on hold on hold on we're not looking at anything you're doing bro one second oh yeah so i just i just created the keys.js file i see it yeah so now what i'm going to do is i'm going to go ahead and give me one sec let's go ahead and do the following so you want to write the following inside of that so export const right so export cons api key and it equals your api key right and then export default api key so this is going to allow you to essentially uh put that value here and then use the api key throughout your app all right so at this point what we're going to do is uh i'm going to leave this screen so so and i'm going to ask quasi to replace this on his key actually unfollow me quasi for a sec bro do you want me to create like an end file and then pop it in there no we can do mfiles but i think for this build we'll do it this way because they won't see this are you gonna you're gonna remember never to go into that file yeah all right let's do it bro i'm ready let's go hey i just pasted it nobody can see it oh wait okay [Laughter] level like you got to actually add and add in some hand eye coordination like mobility yeah just pretty cool so you want to basically you want to hide that so because you want to close that file just in case okay i just saved it i'm closed out of it all right okay so now we have access to our api key right so wherever we are we can access access to it so i think you might need to follow me again after that stuff somebody says qazi you're looking sexy bro thank you bro i appreciate it i appreciate it yeah john john james valencia cardona says one click away and you're busted yeah no it's all good you know i like to be smooth like that we like to live on the edge guys nice so with that what we're going to do now is go ahead and we're going to create a custom hook right so we've never done this before yeah we're at 184 dollars in super chats today dude that is crazy that is absolutely crazy i mean we might we might even break 200 today but you know let's keep going insane so guys what we're going to do now is we are going to go over to so in order to actually use the uh the google search uh sort of search uh api you actually have to do one more step right so you have to go ahead and go over to this link causey so this one here this is cse.google.com for cse create new so click that one okay i'm gonna and i can share i'm gonna show that on the computer right yeah yeah this this stuff we can share all right because this even if they have this i hate how nothing in google is responsive like look at that yeah it's super cool like firebase was actually frank told me this firebase was a startup company and i remember because i actually followed them when they were start before they got acquired by google yeah quick question yup um so uh should does it should it be all under the same email or does it not matter because this is a different email i'm looking at right now then you know what i'm saying oh uh yeah let's make it the same let's just just so because we ran into some stuff on the live but let's change it yeah i mean i want to change it but it's kind of not allowing me to like you know what i mean like it doesn't even give me the option right here if you're seeing that uh click sign out um okay god i hate doing that okay like my whole sinking is paused and my entire bookmarks oh my god what are you doing to me bro you know what you know what hold on hold on i'm not going to do that i'm i'm going to stay locked in oh you don't get incognito maybe yeah i was just going to do the incognito all right because your approach is it's too costly all right here we go create new let's open up incognito paste boom there we go now type in my email okay that should be good to go in a second okay it's asking me to verify on my phone nice and guys if you're enjoying this and you found like quite valuable whether it be like the react context api whether it be like this stuff what we're doing right now just literally all we ask is you smash the thumbs up button oh man that will help get this video out to as many people as we possibly can i wish there were more hurdles for me to jump over to get to this page but all right what do we do now right now what we're going to do is we're going to type in www.google.com so google.com and then what we're going to do is we'll just name this one google click create but we're not done there because they don't make it that easy this is kind of like aws so you want to basically go to edit search engine what where on the left on the left so yep and then click on setup yep and here you see where it says so let's go down uh down and then search the entire web click uh toggle that oh wow nice yeah and what's it called and then what we're going to do is uh we're going to go up let's go up to a search engine id so you see where it says search engine id you just want to grab that id got it yeah and let's just uh let's paste that inside so keep hold of that for now yeah so guys you're going to need that so keep a part of that and what i'm going to do is i'm going to create a file called use google search right use google search dot js so you anything that has used in front of it is a hook right so hey come on bro exactly so here i'm going to say rfce so like this and i'm actually going to go ahead and change a few things i want to say con so i want this to be an es6 function it doesn't make a difference but it's going to be super clean are we still live okay yeah should still be uh okay it says my chat is disconnected so i'm just gonna refresh hopefully um hopefully everything keep going keep going sunny and then yeah i'm just joking okay no worries so now we where we have used google search i'm going to go ahead and it's not we don't need any of this stuff because it's not actually like a component like that as such but what we do need is we don't even need to import react because it's actually we need to use state and use effect so i'm going to import those two things and then i'm going to import the api key that we just sort of set up earlier from our keys so i'm going to import that key from our keys and then what i'm going to do is um save it oh kazi can you see my i can't see my code on your screen um okay let me wait why is that i'm fine yep we're back now we're back yeah yeah so now where it says use google search what i'm going to do here is i'm going to basically go ahead and put in the context key over here so i'm going to make a const contact uh context key and then cause if you want to replace this key with so this one right here replace that with our key that we just had got it let me do that boom done yeah so you're going to need this context key and that basically tells google which search engine to use so the one that we just created which searches the entire web that's the one that we want now what we're going to do is we're going to create a piece of states this is how you use it this is how you make a custom hook right so here what we're going to do is this hook is going to have its own piece of state called data right it's gonna have its own piece of state called data right so like it's just like a functional component does it's gonna have its own and this hook whenever we use it has a use effect right so whenever we use this hook it's gonna fire off a use effect and this use effect is dependent on term so term here right now so what we're saying is whenever and term we pass in by the way and we pass the term as a value inside the hook so what we're doing here is we're saying we pass in term to this inside of this uh this hook and then whenever term changes we're going to fire off this code inside of here okay it's essentially what we're saying now we need to do an async fetch right so some kind of function sunny real quick sunny real quick do i need this open any longer this here no okay yeah i'm just gonna keep it there like accessible anyway and then let's go to our local host now what your so what you're explaining about this term what you mean by this is if so the term is going to be whatever somebody types in here yes yep is that is that right or am i making that up no no that's correct yeah because remember what we do is we type it in there then we dispatch it into the data layer so it's now sitting in the data layer and then when the search page we're going to be doing is pulling that term and we're just going to be using this is a data layer variable so this will be the this will be a data layer variable yes got it okay so data layer and then whenever this changes is when we want this use effect to be called this hook to be called exactly yeah so for example if we not only typed in a new search not only did we hit enter on this new search but we passed it to our data layer our data layer got a new term like elon musk or whatever and then it fires this use effect and this use effect basically will get all the search results using the google yeah right and then take you to the search results page uh so it doesn't it doesn't take you to the search results but it'll get the search results yeah this is responsible for getting the search so when you get the search results are we putting that in the data layer as well where are we putting the results when we get them no no so this is actually a hook which means that like so imagine inside of the so this will return some data so you see here and then what happens is we pretty much will use it like this we'll say got it got it data equals use google search okay okay got it so it'll return the data and then we have access to it and then we just display it on the page okay exactly yeah so it's a really clean hook like this is i'm i was quite proud of him when i wrote this today like it's a really really nice hook and it's super clean like at the end result is really nice so um what we do is here we need to basically we want to do some kind of async fetch inside of and use effect and now whenever you have an async use a async function or async any action inside the user effect you have to make a function so for example here i do const fetch data and this is going to be an async function all right so it's an async function and what we're saying is um uh we're saying fetch right and then we're gonna put the url so i'm gonna use backticks because i'm gonna do string interpolation and i'm basically gonna go ahead and pop in uh the following so this is the url you guys are going to need right so this is the url that you guys are going to need so you can pretty much pause the video copy it do what you got to do and this is the endpoint that connects to google's custom search api and what happens is we pass in a key right we pass in a context which is the search engine the cx and this is takes the context key that we just put at the top and it takes a term so this is q stands for query and this is the term that we pass in right so that what because we set everything up what we can say is we can say make the response when you get back a response so when you get the response back go ahead and change the response into a response.json so basically get the json from the response right and this shouldn't be capitals it should be so i'm going to make this very clear i'm going to say response hey let's go you don't need marabon to buy you dinner anymore frankie frank it says sonny and qazi would love to send you guys an uber eats credit as a little thank you for helping me land a sonos gig let's go tonight that's so dope thank you dude that's insane thank you bro yeah thanks for saying thank you dude all right so now what we're gonna do is we are going to so we basically said when we get the response back we want to say change the response to get the json from the response and then what we're going to do is once we do that you can chain the ends up by the way guys so you can actually chain them up so we're going to say then whatever the result is so that json that you're talking about we're going to basically set that we're going to set the data to that result right so this is very interesting what we're doing here we're saying the data the piece of state that is par inside of this hook right we're setting that data right and then what we're doing is we need to execute that function so we're saying fetch there so this is actually a custom hook so this entire thing is a custom hook this is an example of like like you have use state use effect use everything whatever you want to do this is an example of a use google search we just created a custom hook okay and like the power of this is insane because what we're doing at the end is we're saying return data as an object it returns an object okay got it yes it returns an object yeah so now what we can do is we can actually go ahead and test this so we can go ahead and do this we can say go back to search page and we can say const data so whatever's returned as an object like what we saw use google search like this right and remember google search took a term right so it took some kind of time and that term we're pulling from the data layer right so that's going to be it's by default it's going to do this right so now what we can say is we can say i need to import the use google search so let's go ahead and do that so use google search let's go ahead and import that from the top here nice and now hold on one minute where did you import it at the top oh wait um how come i don't see it uh oh it's gonna have sync one sec um can you fix that i'm gonna highlight this comment this is a good comment by frank oh a good idea is to start with fetch since you don't need external dependencies and i recommend that as well once you start getting more familiar you guys can use axios as a powerful upgrade so that's what i would recommend for you guys like use axios later just first do it like this and here is the import use google search from use google search yeah exactly so i agree with uh with what firing said so you want to actually use fetch first because it just keeps everything clean axios is something really good though once you once you sort of get used to it and you get used to how it works um so we have this constant area called use google search term right so now what we're going to do is just to test this as well so i'm going to console.log the data right so my snippets are working console.log data like this right now if i save this let's go ahead and save this right so kazi if you want to type in like tesla for example right yeah so now before you don't hit insane uh sorry don't hit um enter yeah what the hell i don't know something something popped up and it was like insane content it was like a notification oh yeah yeah so something popped up i kind of was like but here don't hit enter yet uh type in like tesla or something got it so let's go to tesla oh don't hit enter yet you said right oh that's fine so you know okay you so so let's clear the uh the search so let's clear the the sort of um inspector no no no so so go back so go back to uh okay yeah nice so now they're typing tesla yeah and what we do now is whenever when we hit enter a few things are going to happen right we're going to hit enter it's going to redirect us to the forward slash search page right then what's going to happen is it's going to push tesla the search term into the data layer where it's going to push that into the data layer once that's in the data layer you can see in search page we pull it by using use state value so now we have that search term and then we use our custom hook that we created called use google search we pass that term and then we extra that will end up making a call to the google uh custom search api and then we return the data as an object right so it's a super super clean implementation of this now kazi if you want to go ahead and hit enter hit enter now boom yep so hit enter and if you see it passed so let's go ahead and click that yeah so this entire response is from google now so let's go ahead and click item hold on my face is blocking a lot of stuff yo damn tay has just donated a hundred uh rupees thank you so much for that it's crazy because uh because yeah earlier it got wild in there and i booted him out of chat because i got like i'm like man i don't like the vibes here but then he explained that he was following our content and been viewing it and i was like okay okay and then he came from another account so you know and thank you for the donation i really really appreciate that so i'm gonna what i'm gonna do is i'm blocking it a little bit right now so let's go like this and i think i'll make it even bigger so everybody can really see it clearly and this is what we're getting back you guys yeah so let's click on the items drop down so that's the one that will show us some interesting stuff so we search for tesla right so let's go ahead and click on the first item in the array okay so let's go ahead and click it so when you say first item you mean zeroth item yeah zero okay okay got it not trying to be a dick it's got like it's got like some tesla stuff inside there right so you can see that's actually returning a search term like a search result which and it has a bunch of information wow even the display link teslatheban.com the first one is tesla.com that would make sense yeah so he's actually going ahead it's using google to actually go ahead and do this right so remember don't spam this because you're gonna have a hundred limit i think it's a hundred limit free limit a day and then you can pretty much put a card on and then you can if you want to pay for it you have a huge limit after that for like five dollars but i would say stick to the three quarter and i'll show you a little trick now right so that entire response that cars you just got right so if you go ahead and open up the network final quasi ah okay i will yeah so go up network and click on um the so let's go ahead and make that a little bigger and let's just put the camera on us for a second because i don't want to show something it's going to check if it's good yeah yeah so let's go to all all okay so you know the camera is on us right now right yeah yeah that's fine i just want to check one thing before we do it so you see that bottom the on where it says v1 key equals yeah yeah click that so you see it it's going to end up showing the key here so if you click that and then you um make this bigger yes so click down click on response yep right there yeah so what we can do here is uh you can actually say if you drop blur this so make a screenshot of this and blur out the key on the left on the bottom left hold on is this the key yeah so basically let's do it let's do a screenshot of this and show them how we got to this so just draw some arrows that you click on the network tab you click on that um and then you click on the response to see does that make sense yeah all right so all right cool hold on i got you bro i got you don't worry don't even trip dog all right we got this here yeah all right now i'm gonna do this very carefully by the way i'm not showing it right now right it's good it's good it's good all right cool yeah so step one click network guys and then step two make sure you click response over here and then this is gonna show you and these are all the results right here yeah so this is really important guys so the reason why i was making this a point because once you see this response i want you to go ahead and do command a on that response and actually copy everything right so copy everything now this is really handy for when you're developing because you don't want to keep attacking the the api because you run out of your quota if we keep doing that while we're developing we're going to easily use up 100 requests so we basically should we should we put it in so command a to select everything go into your actual response command a to select everything and then command c to copy everything now where should i put it should i just make a new file with like response yep so response.js response.js so i'm going to pop it the entire response into here and i will go and get out of my network tab and i'll go back to console hit x now i'm going to share my screen with everybody and now here this is the full response that we got back now what are we getting back in this response you guys like it's everything that you would type in if you typed in tesla that's kind of what you would get from google itself so if i just go to google.com and i type in tesla i imagine i would get the what would i get so there's tesla.com so let's see if it actually has that so let me look up tesla.com it has that yep and tesla is accelerating the world's transition to sustainable so see tesla is accelerating the world's transition to sustainable energy with electric so it's like actually giving me what the real google would give me yeah and you see this the display link is www.tesla.com which is you can see it right there which is awesome yeah exactly displaylink is tesla.com and then the display link for the next one is also yeah let's go down yeah tesla the band starts to show up soon dope okay so it may not be exactly to what the what google has done but it is is pulling it from google because remember they might have set their the engine up slightly different but yeah the point is it will get the majority of the search terms right thank you thank you tejas for another donation thank you onorak for another donation and anurag actually says check the dm for merch that he made for us so that is awesome all right so with that said guys we got that massive response right so how do we actually let's pass that response into something that we can use and the way we can do that is if i go ahead to the top of the file and i say export default right now what we just did is if i save this uh prettier's not going to do this the way i need it okay so what i'm going to do now is i'm actually going to basically take it to your printer in your computer save it there and bring it back genius that's good [ __ ] man i'm gonna do that save this nice that's smart okay so now what we're going to do is we have the tesla search right so you basically want to prettier guys if you install printer into your computer it will do that for you so you actually just make this into an object that you can use and then we say export default right export default and then that will allow us to use this response as a as an object right so now the reason why that's good is because what we can do is we can actually develop using that response so because you need to follow me again all right yeah so now if you if we go into a search page right so here is the live call right so this is our super powerful live course i'm going to say this is a live api call this one yeah and to make that super clear for you guys what i'm going to do is i'm going to chuck that above here like this that's the live api call this one yeah but we don't necessarily want to always do the live api call so what we can do is we can say cons data get the data from our response instead and our response could be from our local response file so this will actually go ahead and it's the exact same shape the exact same everything but it's just pulling it from this data instead so now um if i do console.log data so cause if we go to the search and we open the inspector i will open the inspector right now so boom okay now if we refresh and we open the console okay refresh yeah and now you should see we still get an object right but we're not pinging the the the google search term we're just getting that tesla search that you've done previously yeah so we basically this is like uh this is called um uh i can't remember it's called masking no it's not asking yes um yeah anyway it's got a name for it but basically what we're doing is we're mocking that's it we're mocking the api call right so now you can see that that search term so if you click that downward arrow kazi insert in the in the console there you go we've got we've got that exact same response so now what we can do is we we don't have to worry about using our quota up and what we can do is at the end of it we just can comment this out and uncomment the actual live one and it'll work right nice that's a very that's a nice little trick that you guys can do to sort of get around quotas and stuff like that because i know that can become quite a headache especially when you're developing all right so we now have the data from google we have the good stuff right so let's go ahead and make this all sort of pretty and look nice now so the search page header what we're going to do now is at the at the top of the page we're going to have a link and inside that link we're going to have a search page logo so i'm going to go ahead and save this so we have the link at the top and then we have an image this has a class name of search page logo and this is just the google logo right so link is not defined so we need to go ahead and import that from material from react group dom like this save that and then what i'm going to do is i'm going to go ahead and go to searchpage.css and i'm going to do the following i'm going to say go and target the search page logo search page logo and apply the following to it so i'm going to go ahead and do this so i'm going to go ahead and give it uh contain height 50 margin right 50 pixels so that way whatever's next to it it's not going to touch it okay then what we're going to do is we're going to go back and we're going to carry on so we've got the link at the top so that's cool and we want the next part is i think there's something wrong with the google like the search engine what you made uh so josh patel actually said that he searched um find me a better duo than sonny and kazi and he goes it responded with the 404 not found nice [Laughter] i was thinking i was like oh [ __ ] what happened nice that's awesome thanks bro thanks nice so now what we're going to do is and guys let's push the 2k likes come on give me that free lunch let's go so let's go and next what we're going to do next is inside the search page header i'm going to basically go ahead and add a div here and i'm going to do this so i'm going to add a div with search page header and i'm going to change this one to the header body right so this is where the search is going to be in a bunch of other things so remember we built the search out earlier so to get it working here very simple i literally just do this i say search hide the buttons i don't want the buttons in there so it's as simple as that and this is the power of react so we just coded that up earlier and boom i can push that in there and everything will work so let's go ahead and see why that's not working it's because i've done two dots and we don't have it in components we have inside search so i can go ahead and save that and now we can see that look at that we have the search bar at the top which is awesome right we have that working and then what we can do is we have a bunch of like options underneath it so first i'm going to go ahead and style some of this stuff so the actual header itself i'm going to give the following to it i'm going to say it's display flex position is sticky because when we scroll down i want it to basically stick i'm going to say top of zero so it's going to stick to the top background color white z index of 100 so that way when we're scrolling down it always stays at the top of the screen so it'll be on top of any elements underneath it align items flex start i'll show explain what that does in a sec padding of 30 pixels and border bottom of one pixel which is why we have that little gray uh border color because we might need to do a 50 50 split now um for the responsiveness because i didn't the search page is a little bit less responsive so um let's go ahead and i think we're muted camera when you said 50 50 split so got it okay you mean boom like that yeah let's do a 50 50 yep nice uh and then what we're gonna do now is go to so we have that yep nice so now what i'm gonna say is inside of the header body what we can actually do at this point is the search itself so that search box uh so the search input item and this is where bem comes in really handy what we can say is go inside the header body right so where we have our search so this one here go inside the header body where we have our search here and basically go and override those search styles so in search we had search and search input so go inside find that change the margin top to zero unset the width unset the margins that we applied before and unset the max width and what it does is it overrides the style right so it overrides the styles that we previously put on it which is kind of nice right so that means we can reuse it but we can actually just from our css go ahead and change the styling of that search box um so that's really clean and then underneath there we have a bunch of options so let's go ahead and check out the deployed version kazi let's go ahead and check out the deployed version yep so boom and then let's type in the search terms like abc is it going to take us to that page uh no because i'm using a mock i did i redeployed it with a mock so i got it we did it yep so now you can see at the top of the page we've got uh where it says all news instagram images shopping maps and et cetera those things those are the options right so we're going to refer to those as like options okay so now what we're going to do so hold on let me just draw that out let me draw that out what you just said and just dropped a huge donation dude whoa that is damn thank you jessica jessica says guys you're so handsome and she goes moreover you're super talented in code thanks your stream i found how easy it is using firebase with react please keep doing it thank you so much i really really appreciate that that is huge i get my handsomeness from my dad and i'm sure sunny gets this from his mom and uh yeah you know my mom was handsome too you know yeah that's insane thank you so much jessica that means that means a world like i mean is that i think that's a hundred dollars dude that's crazy thank you so much thank you we're about to we're gonna break 200 soon i'm pumped yeah oh my god thank you yeah um so now we have the header um the header body wait wait wait wait wait wait before we do that so we were gonna try this so when we go to search what were you saying we're gonna work on oh yeah so we're working on those um search page uh options so they're all news images shopping maps okay let me just draw that out it's very clear so okay so uh what about tools and settings uh yeah so all of that comes under the uh the uh options basically search page options yeah all right so this is going to be search page options okay is there any reason why it's called options yeah it's just when you're coding like this really quick in the library the namings the names always get a bit of a headache so in this case i just called it an option got it okay okay no worries no worries i understand now so yeah perfect okay i think that's pretty good so basically should we write working on the things under the search for our search page options working on search page options yeah working on the let's just maybe working on the search page because this is literally going to be building out the search page well that's what i'm yeah i have at the top working on bill search results page so this one we could do we could do uh building the search page options yeah okay cool building items yeah build items under yeah search bar i like that yeah i just like it when it's just plain english and i think like even developers right if you're writing commit messages it's better to just write plain english yeah exactly it's very true all right cool so this is looking good awesome so you want me to just go to the search page yeah and then just stay there yeah so go to the search page and remember guys we are actually mocking the response so we will see like uh once we start coding up it will just be pulling that mock tesla response so now and guys i saw a question earlier are we pulling from the google uh custom search api yes this is coming from google so it's going to be a complete build so with that said next what we're going to do is we're going to say div so div it's going to be class name equals search page options search page options like this right and this is going to be a container which can hold all of that stuff together right so now what we're going to do is i'm going to say um so i'm going to say dev search page options nice wait one sec what's going on here wait has it gone out of sync again i think it has mine looks super weird compared to yours let me go ahead and close that search page search page results wait i didn't like that oh yeah that was underneath right that was underneath this is the divs yeah oh dude it's because of that it's an annoying thing you know when it adds the extra closing tag yeah yeah yeah i don't know why it does that i don't understand super annoying yeah yeah right so now we've got the search page options so here i'm going to write oh thank you very much phenom just dropped a donation awesome dude he goes do you make android apps too we're we're going to be dropping react native soon so that that will actually be both ios and android yep so now what we're going to have is i'm going to split this into two containers i'm going to have options left and options right all right so options left is going to be inside of this container so it's going to div like this and then i'm going to have another one options right and options right is going to have the stuff on the right hand side options left is going to have the stuff on the left hand side so with that said let's go ahead and start pushing in the thing so every single option i'm going to make it easier for us later on frank just dropped another bite oh my god he just sent you both some ubereats credits nice nice i'm gonna order uber eats today thank you frank yeah thank you so much dude he goes thanks for all the work you do treat yourself yep i will and i'm now trying to um get back to my fitness fitness grind frank so i gotta be eating clean you know you know how clean stuff gets expensive so i can use those credits that's insane thank you dude so now what we're gonna do is we have options left so every single option i'm going to put inside of a container called search page option right so i know we're getting a bit nested here but it will make life a lot easier right so the first one i'm going to have a search icon and a link so we're using a react router link search i got a link to all and the option is just going to be all okay so i'm going to go ahead and import that here and you guys will see an example of what that looks like so let's go ahead and drop that in and also we need link from reactor or dom so let's go ahead and pull that we we are we do have that already so you can see it says all right so we have it there and i'm going to go ahead and copy a snippet now so i'm just going to keep the screen to the third just because i want everybody able to see the code i think people understand that this part might not be completely mobile responsive but once it goes full but neither is google but this is still more responsive than google so it's fine i think people will get that now yeah one thing i was gonna say was once you do want me to switch to it being bigger screen just in case there's something we need to show then let me know and i'll do that so nice damn we're at 198 we're two dollars away from hitting the 200 donation goal we've never hit that so that is epic thank you guys that's insane nice so we added the search icon and this link so i basically added a bunch more here so this is what i've gone ahead and added a snippet from our code um so you can see here right here we have the rest of the the stuff here so you've got all of these icons description image local offer room and more vertical and i'll show you what each one comes out to be and this one is the news image shopping maps and more all right so let's go ahead and make the appropriate imports so let's go ahead and do the imports at the top so here you go save that file and now we'll see that those icons should be there alongside the uh the text right so that looks pretty good right so we have all that stuff um and then what we can do is we have options right so options right we're gonna have the same thing but we don't have the icons in this case so and so what i'm going to do here is drop it in like this and this internet so we've got the search page option but this one's just going to have a link sync settings and this one's just to have tools it doesn't have like an icon like these ones okay so i'm going to save that as well and you can see right now the layout is pretty crap it just looks like it just sits on top of everything right so i'm going to go ahead and start styling at this point before it gets a bit too crazy so i'm going to say for the options so for all of the options let's go ahead and apply the following display flex align the item center and make the color gray so if i do that you can see header options left and options right get pushed side by side because now it's in a row right so that's the first reason then what i'm going to say is for both for both options right and options left do display flex so that's why you can see now that everything goes into that into a row right so that's really clean then i'm going to say for the options anchor tags and for the options right anchor tags so for everything basically all of the anchor tags change the text decoration to none and the color to gray and that means it gets rid of that link look and feel so we don't want that link fill right and then i'm going to have options right so i'm going to target options right and i'm going to say it shouldn't touch right now settings is right next to that more icon it shouldn't touch if we want a margin left of 80 pixels so kazia's make it full screen i'll make it uh let's do the let's do half and half just for this point there we go so half and half just for this point and then we're good yep so here we have that and then what i'm going to do is i'm going to say for the option itself i'm going to say display flex and a line item center with a margin right of 20 pixels so this should get all of the icons centered centered with the text and it will give a margin right of 20 pixels which will space it out right so there we go see the sign already starts to look a lot cleaner yeah now we're going to say for the anchor tags inside of those options so for those links given that it's looking really clean look at that yeah so for margin uh left so give a margin left to that anchor tag so that they're sort of all news images shops and maps etc give that a five pixel margin let's say it pushes itself away a little bit from that text and with that guys that's pretty much that done so that's pretty nice and they're actually clickable links which take you to forward slash all four sessions news etc so um you can go ahead and build out those pages if you want to do that right um so that's cool so we've actually got the the options part finished so now we've got the final part which is the search page results so let's update the top bar because it is a final page building the search page results all right and this is where the nice last bit of magic happens hey so we're finished that part let's hear it with the air horns guys if you enjoyed that part smash that like button subscribe to the channel and turn on the notification bells because i think this is important to let you know that we're going to be doing these types of bills on a very regular basis and next week even though we don't have it completely mapped out but we're going to be building some amazing projects some of the things that are on our agenda are linkedin clone facebook clone um what do we what else do we got i think we're thinking about discord clone yep yep so we got some heavy hitter projects coming up so make sure you subscribe to the channel turn on the notification bell and uh keep helping us be the number one fastest growing coding channel on the planet yeah exactly and guys i saw a few questions there saying can you guys build a project using the man stack oh yeah so uh yeah me and nars are actually going to be building a few apps on that and and a few of the other team members so yeah 100 damn dude you can even pair up with david rokosi like this guy is putting in some serious work yeah that would be dope i i i asked him about tinder and tick tock and he already built tank uh ticktock clone completely like already and it's using express and other things nice i love that dude yeah 100 we could do that that would be fun yeah all right so travel zayn says wow it's so scary how real it looks compared to the actual one beautiful work kazzy and sunny we love you he's talking about how similar this looks to actual google yeah it's insane i actually got confused i was telling kazi before we went live oh yeah i actually got confused a bunch of times because i was googling stuff and i was like oh hang on i'm using localhost yeah it has a phenom says i'm my android developer here but you guys are op hell yeah nice thank you bro thank you so much and guys all we ask is if you're enjoying the video and you haven't already done so just please smash the thumbs up button and it will just help the video get out to as many people so that so many that that extra person would just get that value from this video yep dope nice all right let's keep this bad boy going so now what we're going to do is we're going to say we only want to render so we're going to put a protective block and we're going to only render that the search results if you provided a search term so we're actually protecting ourselves here uh by doing this so we're saying do that right and because at this point we can actually do a quarter or we could do we could do a half half split maybe i think that would be good yep so half off skin now what we're going to do here is we have um so yeah so we have the research page results so the first thing we're going to do is the result count right so where it says about 5 million results or however how the hell google do that i don't know but basically we're going to put that at the top so we're going to do that first we're going to say search page result count and here we say about so something like this about three million results or something yeah remember the results and then it's got brackets and saying something seconds would be like 0.3 seconds or something and then it will say four and then it'll say whatever search term you put in so it'll be like for tesla for example right so if we save this and we refresh the search page so this refresh to search it boom so now we should see underneath uh oh tom wasn't biased yeah so here i'm going to just say i'm just going to replace this with true for now and then we'll put that in at the end yeah so you see it says about 3 million seconds or something 0.3 seconds for tesla right so i want to actually pull this from the information so this information is actually coming in from that response and i've actually done the hard work of diving into that object for you guys and this is what you need to type in so data and this and we put the optional trainings because data might be no for a little bit while it's fetching right and then what we're going to do is we're going to say search information so it gives us back a search information object and then it gives us back something called formatted total results so if we save this now you see it's actually 266 million that came from directly from the results right the next one we're going to do is for the seconds so for seconds we can go ahead and replace this with the seconds and let me go ahead and just do this so we've got data search information formatted search time so we need to refresh the search um i don't know why it doesn't do that yeah hey guys i got a quick i got a quick question i want us i want to just ask this to everybody um i want to see if our twitch has finally started working properly because our twitch kept being broken so i dropped the link in the chat and um if you guys want to check out our twitch it's right here whoa what's happening so let me bring that it's right here it's a twitch.tv clever programmer this is the url so if you guys can just go and take a look at that and just see if that's working properly and having weird feedback or issues because that'd be huge because we want to grow on twitch and we were having trouble last time because our stream just kept giving us tons of errors yeah that'd be massively useful guys nice so let's go ahead so we saw we were pulling the information we had data search information formatted search time there we go and now what we're going to do is we're also going to say 4 and rather than here doing tesla we're going to say term right so whatever the search term was and what we can do is we can replace term here and i can actually go up and protect um i can actually just say term equals by default let's just do tesla right so if you don't pass in the time we we protect him we say oh passing tesla uh that should work yeah so now if we refresh cozy i think i don't know why it doesn't it's not doing the refreshing in a nice way but we're gonna have to refresh identity oh we did right okay so this doesn't work this protection thing so i'm just gonna say true here and it will say four and it'll be blank right so let's go ahead and do this and i'll say four blank but that's fine because it will be mapped to the term right so at this point what we can do is we want to basically map through all the items remember we got like a list of items back right so here what i'm going to do is i'm going to say uh we want to map through all of them right so i'm going to say here um i'm going to say data remember optional training so it doesn't sort of crash itself or whatever say optional data dot items data.items.map and we'll say each item should get rendered out in the following way so i'm going to basically give each item a div right and that div let's do a closing all right so each item has a div and it's a class name and that class name is going to have search page results like this search page results okay now inside of that class uh inside of that result we're going to have an anchor right so an anchor tag and this anchor tag is going to have a few things right so it's going to say it's going to have the display link mainly right so firstly what we're going to do is we're going to say the item itself has a display link right and then it has this little carrot next to it so let's go ahead and do that and now you can see so guys you can you see it says um oh oops it says tesla tesla the band tesla.com wikipedia tesla shop.tesla yep i see it yes it's really cool this part like as you start to see everything pop in and then the next one is going to be an oh so that should have been an anchor tag sorry that should have been inside of an anchor tag so anchor like this and then this line of code should have gone in here and then the href so where does this anchor tag go to what's the link we say href equals and this is going to be item dot link right so that's where the link comes from so if we go ahead and we can save that and now you can see all of those are active links uh and then what we're gonna do is oh ingrid carson enrolled angry if that was a viewer let us know if you joined nice yeah that's epic ingrid carlson just joined profit with javascript welcome to the course yeah paul bento said landed a job by watching your videos and i'm so pumped to be here that's insane dude damn that is a beautiful comment yeah that's really nice uh let's see yep landed a job by watching your videos i'm so pumped to be here welcome paul and thank you for sharing that as another developer ding ding awesome so now what we're going to do is we have data items then we have another anchor tag and thank you guys for checking twitch i know joe diaz and everybody went and checked lauren and swann and checked and teja says it's okay so thank you guys for that yeah thank you guys so now if we go ahead and do this so an anchor tag here and what this one's gonna be for the result title so i'm giving it a class name a result out that link is going to be the same so it's hf to the item link because a few things are clickable right then here we're going to have a h2 which has the item dot title so now once it says and it should save in a sec we'll see the actual text come as in the actual titles come in so you can see model three tesla the band has their incorporated model s all of these things right so that's really clean and really nice and then the last thing for this is we want to snip it so p tag sort of p tag which uh has a class name of result snippet so this is actually something pretty cool uh the google api provides a snippet back and basically what it does is they'll have some information like a description or something and they'll actually go ahead and it'll truncate it so i have dot dot if it's too big right so item dot snippet here so now if i save this now what we can see yes because i think you need to refresh okay so i'm gonna go ahead and boom do it yep so now you can see we've got the actual uh p tag so the actual description so you see this is all coming from that search term so it's really really nice and now the beautiful thing is that we've actually written a lot of what we need and we can actually go ahead and start styling this to make it look like the final product right so the first thing is we're going to do is we're going to make the result itself so the div which is actually each of those results so this one right here we're going to go ahead and style this and say make it have a margin 40 pixels and uh so forty pixels top and bottom and zero on left and right oh and tejas just dropped another donation he said keep it up guys stream is lit since i found this channel in recommendation i watched almost every video um everything is perfect except management hiding channel 4 is no reason good night that's great wow thank you tank thank you there's he's like stream is lit and this is amazing because he might have yes we broke 200. let's go wow thank you you guys we really really appreciate it that is awesome thank you yeah huge wow that's a mile that's a milestone that's our first honey yeah 200 dude insane wow we should invest it into um doing giveaways for everybody for shirts yeah that'll be insane let me show you some merch that'd be cool so now what we're going to have is we have the result link yeah so the result count is next so i'm going to change it so it says search page result count and this one you can see the result count now became this little gray so that's kind of cool and then what we're going to do is we're going to say the results so the actual container holding all of the results is going to say we're going to say max width of 650 pixels margin top is 20 pixels margin left of 240 pixels and a margin bottom of 100 so you see what it will do is it will pull everything in so that's how google do it they pull everything in and yeah that's awesome maybe there's 300 more likes and sunny gets dinner on me i'm thinking oh don't don't worry maribon i think frank's already got the dinner i think i'm good i think we're good let's go frank actually yeah thanks frank gaming clutch with the the uber we got that we got the google credits that's insane nice so uh now we have the results styled um uh yeah so now what we're gonna do is for the result title so you can see the result title we have um text decoration none so as soon as i add that you'll see the underline goes right so that's cool but we want to keep the hovering so we want it to when you hover over it we want to underline it so if i do this then what we do is it says so now when we when we hover over it it will be a case of it will basically show you an underline right so that's really nice and then what we're going to do is we're going to target the h2 we're going to target the h2 and then we're going to do this and it says the font weight will change now so it becomes less bold so that's really clean at the end and then the final thing is the results snippet so that description is too close to the actual text so let's give it a margin 10 pixel away from it right so this is awesome it's looking really really clean and it's looking really really nice right so what we're going to do now is we're going to actually add a sort of um we're going to actually add an image to some of the values so some of these uh search page results actually return a really nice sort of image right so what we're gonna do here is and this is like a finishing touch on this right we're gonna go ahead over to the anchor tag over here all right i really like this message i want to give this a shout out the greatest ever says he goes sunny man whoops let me actually remove this he goes this is some amazing stuff qazi thanks for the platform as well every time i think about how i have been able to apply these lessons i get super grateful and almost teary thank you fam that's insane i love that dude that's insane i love seeing like when you actually see that people are really really like watching and even the donations like holy crap i remember when me and kazi started we got four dollars i think it was in the donation and we were like whoa yeah we lost our minds for because that was the most that we've ever done i was like yeah damn bro exactly all right so now what we're gonna do is we have the final thing so that that image right so that image that we were talking about so what we need to do is here i need to actually provide a check so i'm going to say uh inside of this a tag so i actually have it next to the a tag i'm going to say here so i'm going to add this right so i'm going to say if so this is actually where the image is located is strange it's weird i'm not sure what this all stands for but it's page maps yes the image.length i'm saying if there is an image in there right so if the length of that is longer than zero then go and access the source so then go ahead and go and access the source right and render the following so this is a bit of a messy bit of code but it will work and then what we're going to say is render an image like this where i say render the following image this image is a search page it has a search bar it says search page result image and the source is again that what we wrote earlier right so we don't actually need this one we can just use this and it will work awesome like that and now what we can do is we can go ahead and it says passing error line 87. let's go ahead and see why that's happening we see this we see this let's save it item all right double check what is happening so the anchor tag i'm going to go ahead and copy this in a bit replace this there we go nice so with that said i'm gonna go ahead and do a final finishing touch and i'm gonna copy this class name and basically style it with the following so i'm going to say for that image i'm going to do object fit contain height at 20 pixels width of 20 pixels and a margin right of 10 pixels so you notice how on the google on the actual app now because you check out it actually renders out like a little thumbnail it was meant to be a thumbnail if you scroll down they've all got like this sort of this look like these sort of images right so i'm going to add some rules to it so i'm going to say object fit height and width of 20 pixels and margin might have 10 pixels and then we do that and we get this nice little finishing touch so check that out so it adds that little image next to these oh yes i like that yeah that little clean image yep yep now to finish it we go back to our code change this back to term we go back to our mock and we take it away from the mock so this one was the mock api call so this one was the mock api call and we basically undo and we keep the live api call all right let me save it and now as you go ahead and click the google button firstly all right boom right and let's type something in so let's type in not tesla but let's type in something different that's typing maybe ssd hard drives oh yeah nice you would have never guessed me saying that so that possibly couldn't have been a mock or setup awesome right dude that is looking clean okay let's let's type in clever programmer now whoa that is clean that's insane right let's type in clever programmer google clown let's see if it comes out damn let's build a let's it's too good right here i can see the image i can see the image too i can zoom in on that image the clever programmer whatsapp let's check that type that in let's go awesome right very so super clean and guys notice how there wasn't a uh um there was no refresh when we did that when we navigated between the pages it just worked really nice and we're using um react context api to store the information inside of there um so hey just says look at the message you will laugh and i didn't see which message i was reading that too and i was like maybe i should have sonny read this but i don't understand hey i don't understand what it is oh nice dude she's got another donation wait what from miranda damn 50 mexican dollars or pesos thank you you did yo mx frankie mx is mexican yeah pesos right yeah damn nice allen says i love these projects thank you so much ellen we love you too yeah oh man frank i love that yeah yeah yeah i wanted to put that up too yeah so go ahead read it yes he says this is so mata uh meta googling yourself inside your own google cloud yeah that is hilarious that's really oh it's another donation william cruz appreciate that dude thank you so much whoa damn we're just oh my god we're we're broke i think we just what is this chief keef what is this um what is the currency what currencies are we getting into now chf uh william gave us five chf uh five that thank you dude really yeah what does that convert to 5.5 5.5 damn that's bigger than dollars that's more than five dollars yeah oh damn thanks appreciate it yeah yeah steve says swiss francs frank sets five swiss francs thank you that is huge yo we're about to be we're over like 210 now you guys this is unbelievable it's a new record new record damn global donation crazy guys okay i see the problem that's happening with the twitch i'll fix it on the next one big man says this guy said chief keef i know man i just chef and i just thought chief keef nice so guys with that said we could do it now i think kazi i think we're actually at the point of deploying tv is turned off all right let's get to the flooring bro let's go donation bro another donation i can't even give me one second let me pop it up stephen k thank you so much he says great job guys i massively appreciate you watching dude that's insane thank you what is happening why is this happening thank you thank you stephen king hey or stephen that is legendary bro thank you all right with that said let's we're ready to deploy let's get into it i'm going to change the bar at the top to let's deploy the damn thing all right there we go i wasn't kidding it's actually that and now what do we need to so now the process is pretty simple you guys know the deal by the way i got confused i thought it was actual real google but it's not are you ever gonna put the buttons i'm feeling lucky and stuff or no why did we style them oh right we got rid of that yeah so so we need to go back get app.js uh good catch good catch such guys the home yeah here we should have homegojs and we should not hide the buttons here yeah yeah all right but there we go okay let's do it mmhmm yeah awesome now what we have is there we go beautiful now we're ready thank you dude thank you for everything very inspirational series guys cheers oh my god this is insane another donation ali parasharama says thank you very inspirational series guys cheers thank you so much for that another donation by ali damn we're never gonna deploy this thing thank you bro all right all right seriously frank gave another one hold on i don't see it yet i don't see it deploy the google clone in firebase owned by google let's go all right i like it i like it all right guys i'm gonna speed through this before all these other donations start coming in i want this app to be live for all of you beautiful people to see and the first hundred people will get to actually use it after the first hundred people you will not get to use it please don't spam the search bar with that said let's do it so we're going to do firebase in it make sure you have to do firebase yeah make sure you guys log in with firebase and also install firebase tools yeah should we show them yeah should we show them the firebase tool command firebase tools wait hold on let's just go like this tools so this is the command you need to do to install it sudo npm install global fireplace firebase tools they'll get you that then you need to do firebase login but i'm already logged in so i'm not going to do that and then you're going to do init so now when we're going through this process over here thank you for another donation man wow jesus christ five euro what is happening and it's a five pound donation content out there oh yeah let me actually add his message here so we can actually show it yep best react content out there thank you brother all right here we go and uh let's go some we gotta go to hosting all right so we're gonna click hosting here now under we're gonna hit enter now that's all we need now we're gonna do use an existing project so hit enter and we are going to go to google clone so look for a g um ah right there weird sonata g apparently cool there we're gonna do build another donation brazil loves you say hi to us awesome job amazing what do you think about an xjs will it place really replace react it works with react dude but thank you so much attila yeah yeah it will definitely work with it yup thank you so much hit why so make sure you choose y and hit yes on a single page app it's it's a single page app all react apps are now if i go into this folder i will see something called build all right build is where everything is going to build so we're going to do npm run build yes honey yep cool so let's do npm run build and you guys are going to watch this folder over here start to get all the files now these are the files that go online and this excludes things that make you do hot reloading and all that stuff so it's going to be a much lighter optimized version you're going to put online so we're going to wait for that to finish building and then we're going to pretty much hit deploy and then we're going to be good to go in the meantime i will read out some comments because we're pretty much at the end finishing touchline emmanuel says the amount of knowledge you guys are giving to develop and inspire every developer is awesome and i can't thank you enough i would have made my donation but that option is not supported in my country well guess what thank you so much regardless of whether you donate or not we appreciate everybody equally okay whether you donate a hundred dollars or one dollar we appreciate all of you so thank you so much like even the sentiment really really matters like we just love your guys appreciation and love so thank you all right now it's done so now i'm going to do uh firebase deploy wait wait wait wait wait don't do it don't do it all right guys if you're excited and you're super pumped for this right like i want you all to pull out your phones right now and if you're literally watching this with us because i love this part right i love this part go ahead and shoot an instagram story and tag me and quasi in right here so there's always a case of trying to find it oh yeah you're doing a great job oh wow you're freaking your best perfect dude how are you how do you know that um okay so there we go that so he can't even see that shoot a story and then yeah tag me and quasi and then let's go ahead and deploy this thing dude yeah tag us in there uh one thing i noticed people keep making posts and tagging us in there and we never see those whoa adam just dropped a 10 pound donation jesus christ and he goes these clans these clones are sick bros where would you recommend freelance developers to go get gigs and projects and jobs like frank and others did so thank you so much few platforms i'm going to shoot out rapidly code mentor is a good one upwork is another great one outside of that build a solid network of people there's a reason why frank is inside of profit with javascript so for example that's another area you guys could join to build a deep network of people you don't have to join that program there are many other places but those are a few resources with that said i'm just going to continue and deploy guys because i don't want to i know if you're watching this is replay you kind of want to just get to the deploy so let's go ahead and do it yeah let's do it all right so i'm going to hit deploy and it's going to be deployed in five four three two one and oh my god oh my god you don't have a progress bar in windows whenever you're installing something it just 99 and it just stops like yeah it goes to 99 like instantly and then it's just like forever there usually it beats us on the countdown yeah oh well yeah that's it oh it's going let's go all right i'm gonna open it up the first hundred people that jump on this or is gonna be less than 100 people guys don't spam it only one person once do just a few searches you know but this is the app it's up and running and it's online so go ahead and check it out should be good to go i think it okay let's do elon musk hey look at that nice there we go so you guys can look at the domain right that's the domain the same domain as we deployed to that's proof damn did it sunny we did it bro wow great work you guys and great work sunny this is phenomenal bro appreciate it dude like that was a that was a fun cool man that was insane and the energy from everyone today was just like off to the charts i loved it so meat says dude i've been here the entire afternoon watching you guys and it's totally worth it i might have to work overtime and do my workplace work now absolutely no regrets let's go nice wow thank you guys for all the love and all the appreciation really appreciate all of you guys here thank you for being here sunny do you want to add anything before we end this live stream i just want to again end it on saying thank you to each and every one of you guys or and girls for watching this stream right now like even the ones watching the replay of this like you guys are amazing for sticking with us massive shout out to zhao polo who just dropped another donation oh great job guys dude we are at 243 in donation thank you let me actually pop that up wait hold on that does looks funny let me ah there we go wow thank you for the 20 what's 20 r dude i feel like i'm finding out that another 10 donation hold on i don't see it yet oh my god this is it thank you thank you hal paolo really appreciate it i'm gonna why don't i see it dude we're 253. what mohan reddy says wow mohan ready wait i wasn't showing it my bad you guys i'm sorry mohan reddy says i am watching your videos for my interview prep this is really helpful in pair programming interview rounds thank you so much that's insane appreciate you so much dude when you land that job mohan let us know because we want that counter how many developers we've gotten jobs we want that counter showing up the clever programmer fam counter yeah that'll be insane love that guys that's huge damn dude this is insane the energy today is is unreal and we had some like we had some tech headaches and stuff like that so we appreciate you guys like even more in this video like you guys through the end yeah that is huge you guys thank you so much for sticking through everything for being here for not leaving during those because yeah that was uh quite a lot of work and yeah guys if you want definitely jump into this free training that we have for you the link is in the description below it's an epic one hour long webinar i think you're going to get a lot of value out of it so take a look into this and register other than that anything else sunny uh again just want to say massive thank you and yeah i think that's good because yeah should we wrap up all right with that said guys make sure to hit that like button if you haven't already subscribe to the channels and turn on your notification bells so then when we go and do the projects next week like discord clone like facebook clone or like linkedin clone we want it to pop up a notification on your phone right over here and give you a little bell and then whether you're bored you want to just watch netflix but you'd rather also do something that makes you six figures like our boy frank you can just click it and watch that and have fun but the only way you can get access to that is by subscribing hitting that bell notification so it comes straight to you with that said we love you guys we really appreciate you this is qazi this is sunny and we will see you in the next in the next video peace peace guys
