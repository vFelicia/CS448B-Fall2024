With timestamps:

00:00 - going hey guys day two
00:04 - of the amazon build actually part two of
00:07 - the amazon build but day three of the
00:09 - challenge
00:11 - and yesterday we actually left off
00:15 - right over here all right so if you guys
00:18 - remember from yesterday
00:19 - we had left off at where you had put
00:21 - this page together initially and then
00:23 - there was a basket
00:24 - we're gonna pick it up from there and
00:26 - we're also gonna do a little bit of the
00:27 - recap
00:29 - yeah so we set you guys some lovely
00:32 - homework and you guys went above and
00:34 - beyond you
00:34 - crushed in that homework so yeah some of
00:38 - that stuff
00:38 - and see how you guys did with that hey
00:41 - damn guys this is gonna be sick this is
00:45 - day three of the challenge
00:46 - let's bring that energy up so let us
00:49 - know where you are coming in from
00:51 - today live and we want to see all of
00:54 - those comments starting to pop up
00:56 - we want to see your energy bring up the
00:58 - energy in this place and with that said
01:00 - let's just jump right into it
01:03 - let's do it dude awesome um all right
01:06 - let's go
01:07 - so this is day three of the challenge we
01:09 - have
01:10 - two more days and a surprise left for
01:13 - you guys
01:13 - and here's the agenda for today's
01:15 - training we're gonna be revealing the
01:16 - answer to day two's homework and we got
01:19 - so freaking many
01:22 - submissions from you guys and they were
01:24 - phenomenal
01:26 - over 400 submissions on that homework
01:29 - just checking right now
01:30 - 400 and it's still going i can see
01:32 - people adding in right now that's insane
01:34 - absolutely nuts now
01:37 - also you're going to complete the
01:39 - checkout screen with the react
01:40 - context api so that's what we're doing
01:42 - today and you're going to add
01:44 - full login functionality which means
01:46 - sign up
01:47 - and sign in using firebase
01:49 - authentication
01:50 - also you're going to deploy with
01:52 - firebase hosting
01:54 - and connect the front end to firestore
01:56 - database to pull the info
01:58 - from the database so this is what you're
02:01 - going to be building today
02:03 - if you are excited drop in the comments
02:06 - below and let us know
02:08 - exactly guys so you see the main new
02:10 - feature today is going to be that
02:11 - beautiful
02:12 - login and authentication and that's all
02:14 - going to be provided
02:15 - from firebase itself from firebase
02:18 - authentication so
02:19 - we're going to show you guys how to do
02:20 - that and it's going to be some exciting
02:22 - stuff guys
02:23 - yep and you guys killed it with the
02:24 - homework guys day three we had 4
02:27 - 000 people live with over 6 000 comments
02:30 - and despite the crazy internet
02:33 - interruptions that we had and we got
02:35 - disconnected two times
02:37 - some of you guys still pushed through
02:39 - and showed up so a massive shout out and
02:41 - thank you for that it's a huge timeout
02:45 - guys
02:46 - we have just cracked over 30 000 people
02:49 - inside
02:50 - this challenge wow yeah it's insane
02:53 - so look so here's what we got on the
02:56 - first so day two part three
02:58 - and then boom look at all those comments
03:00 - you guys are dropping three thousand
03:01 - comments
03:02 - almost a thousand comments here 2 000
03:04 - comments on this
03:06 - and over 30 000 people have joined this
03:09 - challenge which is insane you guys are
03:12 - crazy we're saying people saying you
03:14 - guys are amazing uh
03:16 - let's go we have people saying let's go
03:19 - so
03:19 - i see the energy is here and it's
03:21 - awesome someone said
03:22 - something's wrong why is sunny wearing
03:24 - white i'll mix it up today guys
03:26 - change out we got the headphones in so
03:28 - hey uh sunny maybe just put your
03:31 - um audio up so people can hear you
03:33 - better
03:34 - okay is that bad um put it up a little
03:37 - bit more i think
03:38 - that might be don't want to speak a bit
03:41 - closer
03:42 - yeah if you're closer i think that's
03:43 - fine all right so let's keep on going
03:45 - now
03:46 - you guys we got tons and tons of
03:48 - submissions i'm actually just going to
03:49 - open that up because i think that's the
03:50 - best way to show you guys
03:52 - and here this is the amazon
03:56 - homework that you guys had and look at
03:58 - how many submissions we have it's
04:00 - ridiculous
04:01 - if we just keep scrolling sarah dragon
04:05 - chris monet
04:06 - and look at all these submissions right
04:08 - people are showing us the subtotal is
04:10 - working
04:10 - so good job chris did a fantastic
04:14 - job here and look at this he's got all
04:15 - this like coding and react stuff that
04:18 - he's now selling
04:19 - that's what we're gonna see guys nice
04:21 - change it up mix it up make it your own
04:24 - damn guys give it up for all these guys
04:27 - that
04:28 - put in these submissions like this is
04:31 - freaking brilliant we got over 400
04:35 - submissions
04:36 - what so make sure if you have missed out
04:40 - it's still not too late you can still do
04:42 - your submission
04:44 - and for a lot of people we're trying to
04:46 - give you a video feedback as well so we
04:48 - might not get to everybody
04:49 - but we are starting to get back to
04:51 - people and give them a personalized
04:53 - video feedback
04:54 - on their homework elizabeth also posted
04:56 - it elizabeth you got to show your
04:58 - picture with the with the working app as
05:02 - well
05:02 - she just sent her a code but some people
05:05 - actually went
05:05 - and took the shopping basket that we
05:07 - hadn't finished
05:08 - so the list of items and they actually
05:10 - went ahead and built it which is insane
05:12 - dude
05:12 - oh that's sick do we have some of those
05:15 - that we can show
05:16 - yeah so we just have a look uh number
05:20 - 309
05:21 - oh damn you got the number down all
05:23 - right let's do it so number 309
05:26 - and let's go take a look at this one and
05:28 - boom we got the checkout
05:30 - this is beautiful lovely
05:33 - damn okay awesome so let's keep on
05:36 - moving you guys we got over 400
05:39 - amazon clone day one submissions
05:42 - beast beasts all of you and
05:45 - we got some ones we got jordania over
05:48 - here she did her submission we got
05:50 - raja rahul abdul based adi brahman
05:54 - javed khan miriam so fantastic jobs and
05:58 - these are the clones you guys put up we
05:59 - showed some of them already so we're
06:01 - going to skip over this but thank you
06:02 - for
06:02 - all of your submissions and your work
06:05 - now before we continue
06:07 - remember guys here's how to use the
06:09 - learning modules in
06:11 - the facebook group for this five day
06:12 - react challenge and how can they do that
06:15 - it's make sure that when you're over
06:17 - here
06:18 - on facebook click units
06:22 - yep and when you're in units
06:25 - what's going to be kind of confusing
06:26 - guys yeah yeah it can be a little bit
06:29 - confusing so make sure when you're here
06:30 - click
06:31 - units and then go inside and then look
06:33 - at where the homeworks are so
06:36 - let me try to pull up facebook here
06:39 - and um i'll try to show it to you guys
06:41 - live
06:42 - hopefully my entire computer won't crash
06:45 - on me
06:46 - like yesterday all right so
06:50 - i am on facebook now and on the left
06:52 - hand side see units
06:54 - if you are in the newer version of
06:56 - facebook it'll still look very similar
06:58 - to this it's fine just find units
07:00 - and in units you'll see there's unit 1
07:03 - unit 2
07:04 - and unit 3. for each day of the
07:07 - challenge
07:08 - we're going to have it in units like
07:10 - this so this way everything is organized
07:12 - for you and you will lose nothing
07:14 - all right yeah perfect bro just check my
07:18 - gain on ecam quickly
07:20 - just want to check if it's a bit low
07:22 - because a few people are saying it's
07:24 - quite low and i've had it
07:25 - it's already quite high on the the bit
07:28 - over here um
07:30 - i hear you pretty clearly but i'll just
07:32 - put up the
07:33 - ecam a little bit higher and maybe it'll
07:36 - be better
07:38 - nice okay oh so i put you a little bit
07:41 - higher
07:42 - awesome um nah says he can hear him well
07:46 - i trust nas okay so
07:50 - all right so let's go here
07:54 - now here how can they maximize the roi
07:56 - from the challenge sonny what
07:58 - can they do yep so today guys as we code
08:01 - along
08:01 - i want you guys to code along with me if
08:03 - you get stuck or confused it's
08:05 - completely
08:06 - fine just make sure that you challenge
08:08 - yourself we cover
08:10 - all of this stuff inside of our course
08:11 - so be sure to check that out
08:13 - and if you guys get stuck in the live
08:15 - it's completely fine make sure you're
08:17 - part of that slack channel
08:18 - and that facebook group post questions i
08:20 - see loads of you guys helping each other
08:22 - out and that's amazing
08:23 - so make sure you go ahead and do that
08:25 - and guys make sure you do the homework
08:27 - and participate in the group
08:28 - because that is where we rack up those
08:31 - points for that big prize
08:32 - and that's how that's why a lot of us
08:34 - are here right now to win exactly
08:36 - huge price 100 that's right and sunny
08:39 - you can just
08:40 - bring that freaking might like in your
08:42 - face
08:43 - it'll make your sound really good yeah
08:45 - like i'm almost like
08:47 - kissing this mic when i'm talking to it
08:50 - all right
08:50 - now if you can't keep up with sunny or
08:53 - if you can't keep up with us as we're
08:54 - coding this
08:55 - remember that's okay the video is always
08:57 - going to be there so do the best you can
08:59 - and you can re-watch it
09:00 - but try to do your best live we will
09:03 - also give you guys the solution files
09:05 - so i'll show you exactly how you can get
09:07 - caught up if you missed the last few
09:08 - days
09:09 - we're going to give you the code and the
09:10 - exact project so you can catch up and
09:12 - start working with us
09:13 - and
09:18 - what was that i i thought you spoke
09:22 - oh no okay so yeah do the homework
09:26 - and participate in the group now i'll
09:28 - show you also over here
09:30 - we have a github
09:33 - and this is the url for it this should
09:36 - be
09:36 - in the description or in the facebook
09:39 - post
09:40 - it should be there and if you go here
09:43 - just make sure you start it and fork it
09:44 - so you have it
09:45 - and this will get you caught up with day
09:47 - one of the challenge
09:49 - okay or i'm sorry the part one of the
09:51 - amazon build
09:52 - this will get you caught up to exactly
09:55 - here
09:55 - and if you're a complete beginner it's
09:58 - as
09:58 - easy as clicking here and just
10:01 - downloading
10:02 - this file as zip then opening it up
10:05 - and literally typing in the following
10:09 - npm start and you should be good to go
10:12 - you should be caught up with us if
10:14 - you're more advanced you know that you
10:16 - can like pull it with a github repo it's
10:18 - as simple as that
10:20 - okay so let's put this over here and
10:23 - let's go
10:24 - over the rest of it nice let's do it
10:27 - dude
10:27 - all right so now what's going on here
10:30 - so the game plan for today guys is we're
10:32 - going to complete the checkout screen
10:34 - with the react context api
10:36 - so we're going to have everything
10:38 - completed and built to that homework
10:40 - spec
10:41 - that we set yesterday and then we're
10:43 - going to go ahead and if you just hit
10:44 - enter kazi
10:46 - it should pop up we're going to go ahead
10:47 - and do implement a full
10:50 - login functionality that means sign up
10:52 - sign in
10:53 - everything implemented with firebase
10:55 - authentication set so it's going to be a
10:57 - complete
10:58 - functional app with login logout
11:00 - everything's gonna work i think
11:01 - something i fixed the
11:02 - audio now by the way i saw that on mine
11:06 - i actually had it
11:07 - low so it was partly my fault along with
11:10 - you speaking from really far away
11:11 - it's both of us right i was wondering i
11:13 - had it blasting on mine
11:15 - i was like holy [ __ ] okay go ahead and
11:19 - deploy this thing over to firebase so
11:22 - that will be awesome
11:23 - perfect so let's move on with this now
11:26 - guys remember you will learn
11:28 - all of this in profit with javascript
11:30 - course that will be launching
11:32 - next week so make sure that you have
11:35 - that you know date in your mind
11:36 - september 13th
11:38 - um and if you want to watch the exact
11:41 - breakdown of every single app and much
11:43 - more
11:44 - that those details we cover in our
11:45 - program now
11:47 - here's the homework and what's the
11:49 - homework sonny
11:51 - so the homework to give you guys a bit
11:52 - of context before we go ahead and jump
11:54 - in
11:55 - is to add the message so we're gonna
11:56 - have that full login so you're gonna be
11:58 - able to log in with username
11:59 - email and a password and then i want you
12:02 - guys to go ahead and change it
12:04 - so that at the top of the header it
12:05 - actually says hello
12:07 - and then whatever your email is so that
12:09 - way it's fully customized for yourself
12:11 - when you're logged in
12:12 - that's going to be part one number two
12:14 - is going to be to actually go ahead and
12:15 - deploy the app
12:16 - hold on hold on i think i'm confused
12:19 - about what the first
12:20 - step is so let's just make sure
12:22 - everybody's on the same page so okay so
12:23 - if i'm on this app
12:24 - exactly where um yeah so you see where
12:27 - it says sign in
12:30 - okay now it says hello guest right
12:33 - yep it does we want it so that when you
12:35 - hit sign in
12:36 - it's going to actually go ahead and log
12:38 - you in i mean if you go to the actual
12:40 - demo app so i'm going to go ahead and
12:41 - drop you a link cozzi
12:42 - okay go ahead and check this app out and
12:44 - we can actually demo what we're going to
12:45 - be building today
12:46 - so the one we have already built for a
12:48 - while ago right yeah
12:50 - yeah exactly okay so i'm gonna go
12:53 - to that url here boom
12:56 - paste it in all right so here this is a
12:59 - demo app so now if i click sign in
13:01 - yep you can create an email and just do
13:05 - jump put in any email and password
13:09 - and then here what we can do is you can
13:12 - go create your
13:13 - uh amazon account okay
13:16 - yep um oh it has to be a legend oh there
13:19 - we go
13:21 - nice and then you can see at the top it
13:23 - says hello and then it actually has the
13:25 - email address
13:26 - ah right okay so i'm gonna teach you
13:29 - guys how to push the user into the store
13:31 - like we did yesterday with the basket
13:33 - and then it's going to be up to you guys
13:35 - to go ahead and implement that
13:36 - functionality
13:37 - so not only that we're going to ask you
13:39 - guys to go ahead and deploy the app if
13:41 - you haven't already deployed it
13:42 - well if you avoid it to netlify that's
13:44 - cool guys i saw you guys
13:45 - some of you guys did that which is
13:46 - awesome but we're gonna teach you how to
13:48 - deploy it to firebase so let's go ahead
13:50 - and do that
13:50 - and then we are gonna ask you guys to
13:53 - add some animations
13:54 - and some styling and that's gonna be now
13:56 - the homework is clear right
13:58 - hopefully it should be cleared up for
14:00 - everybody what the homework actually is
14:02 - yeah exactly okay dope and then what
14:05 - else are we going to do so
14:06 - i the hello is going to show up there
14:08 - i'm going to deploy and share
14:10 - screenshots and link
14:11 - oh yep and then add animations to it
14:14 - exactly adding animations and then
14:16 - there's one more piece which is
14:17 - customize amazon
14:18 - guys style it into your add your own
14:21 - little twist to amazon or
14:22 - maybe add a second banner or a third ban
14:24 - or change it up
14:25 - but basically let's get everyone's
14:27 - portfolios looking different let's add
14:29 - some animations i'm going to show you
14:30 - guys an animation library
14:31 - and sort of direct you in the right way
14:33 - and then you guys can take it from there
14:34 - so it's going to be an awesome piece of
14:36 - homework
14:36 - for you guys to go ahead and run with
14:38 - fantastic
14:39 - and guys remember where can they learn
14:42 - this
14:43 - you can learn this all inside of profit
14:45 - with javascript that we are going to be
14:47 - launching
14:48 - next week yup beautiful all right with
14:51 - that said we're ready to get into the
14:53 - build
14:54 - let's go we're going to be going uh full
14:57 - speed guys and remember
14:59 - if the internet dies we're gonna go live
15:02 - again
15:02 - all right yesterday it happened we just
15:03 - went live again if
15:05 - something else happens don't worry we
15:08 - will constantly figure it out and we
15:10 - will
15:10 - come with some kind of solution that
15:12 - will work for everybody okay
15:14 - so no reason to freak out guys and we
15:17 - will make it
15:18 - work so let's do it bro
15:21 - all right let's check how many people do
15:23 - we actually have live right now let's
15:25 - shout
15:26 - out about eleven one thousand uh
15:29 - and one hundred twenty eight to eleven
15:32 - hundred
15:32 - on youtube and then um on facebook
15:38 - about 300 on facebook live nice that's
15:41 - awesome dude
15:42 - yep and guys remember if you want to
15:44 - participate in the challenge
15:45 - first of all if you're liking this smash
15:47 - that like button so this video goes out
15:49 - to as many people as possible
15:51 - two if you want to participate in the
15:52 - channel you have to be in the facebook
15:54 - react group which means you have to
15:57 - click the link in the description below
15:59 - to join the challenge
16:00 - if you are watching it on youtube if you
16:02 - are watching it on facebook you're
16:03 - perfectly fine
16:05 - exactly guys i saw somebody say i'm
16:07 - really sick with the flu but i'm doing
16:08 - my best that's awesome that's the kind
16:10 - of energy we want here guys
16:11 - nice nice let's go ahead and get started
16:14 - bro
16:15 - okay dope let's do it so i'm gonna hit
16:17 - follow here
16:18 - and let's go nice so let's go ahead and
16:22 - go on with the homework portion so
16:25 - yesterday we had set everything up to
16:27 - the point where we wanted to build
16:30 - the subtotal component so we left you
16:32 - guys here
16:33 - where we had a fixed subtotal component
16:36 - here and we
16:36 - have a fixed subtotal amount here and
16:38 - then an empty
16:40 - sort of currency amount here now we're
16:42 - going to go ahead and change this
16:44 - okay so let's go ahead and open up our
16:46 - local host gaussian and
16:47 - have it running on the right hand side i
16:49 - do
16:51 - okay awesome so that's our local host
16:54 - let's open up the basket
16:55 - so let's hit into the basket
16:58 - nice and what we're gonna do here guys
17:01 - is
17:02 - where we had previously i had shown you
17:04 - we had zero items right
17:06 - now we currently push everything into
17:08 - the store
17:09 - whenever we add an item to the basket so
17:12 - i showed you guys how
17:14 - inside the header we actually can pull
17:17 - the basket contents
17:19 - from the data layer that we set up
17:22 - yesterday
17:22 - so i'm going to go ahead and copy that
17:24 - so we're going to go one two three one
17:25 - quick shout i just want to do so
17:27 - somebody said i don't see the facebook
17:29 - link facebook group link
17:31 - here's how it works you actually go to
17:33 - this link over here
17:35 - this page and this is how you actually
17:37 - officially join the challenge and
17:39 - remember you can win
17:40 - up to six thousand dollar online coding
17:42 - boot camp
17:43 - so make sure you go to this link here
17:46 - and then
17:46 - pop in your name and email address and
17:49 - that will get you in the challenge
17:52 - exactly guys make sure you do that get
17:54 - involved because
17:55 - it's awesome inside the community right
17:57 - now and everybody is on that
17:59 - and it's over 9 000 people in the slack
18:01 - channel right
18:02 - yeah did we actually post this out to
18:04 - the slack channel that we're live right
18:06 - now
18:06 - i mean i guess yeah they would have seen
18:08 - it nice did we post this on the slack
18:10 - channel
18:12 - yeah we did nice awesome
18:15 - okay i don't think so oh donation as
18:18 - well from twins mother madam usa thank
18:20 - you
18:20 - starts off nicely hey sick
18:24 - wow thank you for that actually that's
18:26 - huge yeah huge 5 000 donation thank you
18:29 - nice so guys with that said let's go
18:32 - ahead and start
18:33 - so we have the subtotal component that
18:36 - we were messing around with right
18:37 - so what we're going to do is we are
18:39 - going to pull
18:40 - the basket contents from the data layer
18:44 - so previously we had this use state
18:46 - value
18:46 - so i need to go ahead and actually
18:48 - import that use state value
18:50 - hook from that that's the custom hook we
18:52 - wrote inside of our state provider
18:54 - now anyone who is confused about this
18:56 - stuff just go ahead and build out the
18:58 - first part of the challenge and come
19:00 - back to this video um but right now we
19:02 - have the ustay value and we pour our
19:04 - basket
19:05 - so this is going to have whatever we add
19:07 - to our basket and then what we can do
19:09 - guys is we can go
19:10 - here and we can simply do the following
19:12 - we can actually say basket
19:14 - oops we can say basket dot length like
19:17 - so
19:18 - and this was should so if we save this
19:21 - um we can actually go ahead and let's go
19:23 - ahead and refresh the app quasi
19:26 - that's ref oh we have to do mpm star i
19:28 - think
19:31 - yep so let's do that
19:36 - okay nice
19:39 - somebody said sonny's voice is not clear
19:42 - okay
19:43 - i think it's pretty clear now i think
19:45 - it's pretty clear
19:46 - i mean yeah we've we fixed that um
19:49 - okay so now what we're gonna do is we
19:52 - have the subtotal
19:54 - um and we said basket dot length so once
19:56 - it loads up let's go ahead and click the
19:58 - amazon logo
20:00 - all right so boom here we go yep and
20:04 - let's add some items to the basket
20:06 - all right add to basket add tabasco so i
20:09 - added these two
20:11 - yep and then let's go and click the
20:14 - basket
20:15 - yep and then what we should see now is
20:17 - in the subtotal it should say
20:19 - uh was it three items i can't really see
20:20 - that
20:22 - it says two items okay awesome yeah
20:25 - because we added two items
20:26 - so now it's pulling that information
20:29 - from the
20:29 - basket and it's actually going ahead and
20:32 - using that right so it's
20:34 - it's actually going ahead and updating
20:35 - it so rather than having
20:37 - the two items like we have previously
20:40 - rather than having zero we're actually
20:42 - pulling from the basket and showing
20:43 - however many items we have
20:44 - in the basket itself next guys we want
20:47 - to go ahead and where it says strong
20:49 - right we want to have the actual value
20:52 - yeah
20:53 - so previously we have the value set to
20:56 - zero here and i said that this was part
20:58 - of the homework guys
21:00 - right so what we're going to do is i'm
21:02 - going to show you guys
21:03 - a nice neat little trick so i saw some
21:05 - of the the implementations that you guys
21:07 - had done
21:08 - but i'm going to show you a really
21:09 - really sort of es6
21:11 - forward way of doing this so let's go to
21:14 - our reducer.js so we're inside of our
21:16 - reducer right here
21:18 - and i'm going to show you guys how to
21:19 - build something called a selector
21:22 - right so we're going to build something
21:23 - called a selector and this is actually
21:24 - something which is really highly used
21:27 - in production environments so what we
21:29 - can do now is we write export
21:31 - const and i'm going to write get basket
21:33 - total
21:34 - and this is a really powerful function
21:36 - it's going to take the basket itself
21:38 - and it's going to simply return the
21:42 - following it's going to say get the
21:44 - basket
21:45 - and we're going to do optional changing
21:46 - to prevent everything
21:48 - from breaking we're going to say reduce
21:50 - now reduce
21:51 - is a function which is extremely
21:54 - powerful okay
21:56 - now what we're going to do is actually
21:58 - so the purpose of reduce sorry
22:01 - is it essentially maps through the
22:04 - basket it's next guys we want to go
22:06 - ahead and where it says
22:08 - now reduce is a function um
22:11 - oh yeah there we go nice so what reduce
22:15 - does is it goes ahead it iterates
22:16 - through the basket
22:17 - and then it's going to tally up the
22:19 - total okay so we're going to have an
22:21 - initial amount
22:22 - right and we're going to iterate for
22:24 - each item and the way we write this guys
22:26 - is we put some code here
22:28 - so here we're going to say every time it
22:30 - loops through i want the item price
22:32 - to add to the total amount and the
22:34 - initial amount
22:36 - is going to be zero okay so i know this
22:39 - may seem like a confusing line of code
22:42 - but have a look at reduced functions and
22:44 - this essentially all this is doing
22:47 - is it essentially tallies up the basket
22:50 - and it goes ahead and it tallies up all
22:52 - of the item prices
22:54 - and it adds it into this final amount
22:56 - and it returns it directly
22:58 - it's into so is this basically like a
23:00 - fancy way of writing a for loop and then
23:02 - incrementing
23:04 - everything and tallying it up right yeah
23:06 - and then we return it
23:08 - and then we return it as a value so now
23:10 - if i go ahead go back to our subtotal
23:12 - and we go back to here and instead of
23:14 - writing a set value of zero
23:16 - what we can do here is we can do get
23:18 - basket total and we pass
23:20 - in the basket that we pulled in from our
23:22 - layer over here
23:24 - and obviously we need to go ahead and
23:25 - make sure that we import
23:27 - this basket okay so let's go up to the
23:30 - top and we're going to go ahead and say
23:31 - import get basket tour from the reducer
23:34 - and now guys what i want you to pay
23:36 - attention to is if we go ahead and add
23:37 - some
23:38 - um items to the basket causing
23:42 - all right let's do it so let's go to the
23:44 - first page
23:46 - yep um i think i'm gonna go with a
23:49 - samsung watch
23:50 - and an amazon echo yeah let's do it
23:54 - all right now it should see okay so it
23:57 - still says zero
23:58 - now this is interesting and i'll show
24:00 - you why it still says zero so
24:02 - we set the value here right but in the
24:05 - render text we didn't actually show
24:07 - the value okay so we need to show the
24:09 - value now i see a lot of people saying
24:10 - cannot read property basket of undefined
24:12 - to fix that guys go back to your reducer
24:15 - make sure you add this optional chaining
24:17 - right here okay
24:19 - so this is actual optional chaining and
24:20 - this is going to prevent that from
24:22 - happening okay so
24:23 - make sure you add that in to save
24:25 - yourself that little bit of headache go
24:27 - back to
24:27 - subtotal and what we're going to do here
24:28 - is this value that we calculate here
24:30 - gets passed in as something called a
24:32 - render prop
24:33 - so we can actually use it so we can go
24:35 - here and we can just say
24:37 - value absolute value like so
24:41 - boom there we go zero i mean yeah zero
24:44 - for now
24:45 - yep so zero for now and if we go to
24:47 - amazon add the products
24:49 - boom hey there we go so fast
24:52 - so fast i'm gonna add multiple of these
24:56 - damn awesome now i saw some people say
24:59 - can we put the function inside
25:01 - subtotal so guys this is actually a
25:04 - professional practice
25:05 - of having selectors inside of your
25:07 - reducers or i mean you can separate
25:09 - a separate um separate file but
25:12 - you want to make sure that you have the
25:15 - selector in this case
25:16 - inside the reducer because think about
25:18 - what you're doing you're actually taking
25:19 - the basket reducing it down
25:21 - and then you have some kind of callable
25:22 - function so that's just good practice
25:25 - you can do whatever way works for you
25:26 - but this is my experience from being in
25:29 - a sort of professional environment so i
25:30 - would go ahead and use that
25:32 - and that will make your life a little
25:33 - bit easier so with that said
25:35 - we actually have the subtotal working
25:37 - okay so that's awesome
25:38 - now we have the header which pulls in
25:40 - the um
25:41 - basket content so at the top of the head
25:43 - on the right you can see we've got some
25:45 - items and then the subtotal itself
25:47 - is um is where we have the the
25:50 - price and we also have the number
25:53 - number of items we also got another
25:56 - donation
25:57 - um thank you so much thank you
26:00 - that i appreciate that that is huge let
26:02 - me just play the
26:03 - air horns here a little bit nice and i
26:06 - got a nice little we got a nice comment
26:08 - by
26:09 - zachary and he says i'm definitely
26:11 - having to go back
26:13 - and re-watch the videos and find some
26:15 - supplemental stuff online to fully
26:17 - understand the why behind everything but
26:19 - in the meantime it is like
26:20 - learning to swim where they just go
26:22 - throw you
26:23 - off the deep end not the most
26:25 - theoretically sound but it works
26:28 - guys remember remember you're building
26:30 - the amazon
26:31 - clone so this is something i mentioned
26:33 - yesterday right it took people
26:35 - 10 decade or more to figure out how to
26:38 - be able to actually build this
26:40 - so it's not going to be something that
26:41 - is going to be super easy this is
26:43 - definitely
26:44 - going to be tough but if you push
26:47 - through this and add it to your
26:48 - portfolio it's going to look
26:49 - epic and then our goal is that you're
26:51 - going to love coding and then you're
26:52 - going to start
26:53 - learning the why behind everything
26:55 - exactly guys and that's going to be the
26:57 - main focus here
26:59 - is to go ahead and push yourself into
27:00 - that uncomfortable position and we're
27:02 - here to pretty much hold your hand
27:04 - through the entire journey until you
27:05 - have a lovely looking amazon clone at
27:07 - the end of it
27:08 - and you guys are doing amazing so far so
27:10 - don't get this hard and the slack group
27:11 - is also amazing for that support
27:14 - yeah so nice with that said we
27:17 - now have a finished subtotal section so
27:20 - that's really clean
27:21 - what we're going to do next is focus on
27:24 - the checkout okay so previously in
27:27 - yesterday's build we reached the
27:29 - checkout stage
27:30 - and we have these basket items right so
27:32 - i masked it out
27:33 - and the purpose i actually masked this
27:35 - out is i was actually subconsciously
27:37 - hoping that some of you went ahead and
27:39 - built that so
27:40 - that was awesome to see that you guys
27:42 - actually picked up on that and um
27:44 - somebody said code event said sonny you
27:45 - bought your headset yep we have a new
27:46 - headset new mic
27:48 - so it's going to be extra clear for you
27:49 - guys today
27:51 - um but we're going to go ahead and build
27:53 - this this lovely
27:55 - basket item implementation here so now
27:58 - what we're going to do
27:59 - is we're going to go ahead and build out
28:02 - the
28:03 - shopping basket itself so
28:06 - let's go ahead and check out so here
28:08 - guys we're going to call it the checkout
28:10 - product
28:10 - okay so because we're inside the
28:12 - checkout page let's go ahead and call it
28:14 - a checkout product so check out
28:16 - product okay now check out product and
28:18 - this is get rendered out however many
28:20 - times
28:20 - there is an item inside of our basket so
28:23 - with that said what we're going to do
28:24 - now is create that
28:26 - uh so i'm going to go ahead and create a
28:27 - checkout product
28:29 - right now we're creating like hard-coded
28:31 - products right before we make dynamic
28:33 - products is that what's happening
28:35 - yeah yeah got it so basically we'll have
28:37 - something along the lines of like
28:39 - over here how when we add some products
28:42 - let me just zoom out a little bit and we
28:44 - go here
28:45 - and then it shows up like this right so
28:47 - we're essentially going to just hard
28:49 - code
28:50 - some of this stuff into our app that
28:52 - we're building
28:53 - exactly so right now we have got the all
28:56 - of the
28:57 - uh products on the home screen are
28:59 - hard-coded
29:00 - um we are going to show you guys at the
29:01 - end of today's build how to pull that
29:03 - information from firebase
29:05 - um but for now what we're doing is all
29:07 - of those hard coded products in the
29:09 - front end so when we had the homepage up
29:12 - when you click add to basket we should
29:13 - see that list of
29:14 - shopping basket items in this section
29:17 - right here
29:17 - okay so i'm going to do checkout product
29:20 - dot js so we should snap into that in
29:23 - just a second
29:25 - so let's wait until that pops in so you
29:27 - guys should see that we are now inside
29:28 - check out product if i do rfce
29:30 - which is our lovely little snippets and
29:32 - we're going to go ahead and set this
29:34 - class
29:34 - up or set this component up so check out
29:38 - product and this is going to the bim
29:39 - convention i'm going to go ahead and do
29:41 - import
29:42 - checkout product from oops
29:46 - import it should be css right here
29:49 - import checkout product.css like so then
29:52 - we're going to
29:52 - create that corresponding css file so
29:55 - i'm going to do checkout
29:56 - product dot css like that
30:00 - and let's go ahead and see and now we're
30:03 - inside that folder
30:04 - inside that file sorry so we have
30:06 - everything set up that we need
30:08 - okay now what we're going to do is jump
30:10 - inside of that checkout product and
30:11 - start producing it so
30:13 - this is going to have a few things
30:15 - inside of it so cause let's go ahead and
30:16 - open up the deployed app
30:18 - so the finished one boom
30:22 - yep so the first one so you can see this
30:23 - finished one has a few things inside of
30:25 - it
30:26 - it has an image and then it has like an
30:28 - info section and the info section
30:30 - contains
30:31 - the title the price the ratings
30:35 - so the star ratings and then a remove
30:37 - from basket
30:38 - button okay so we're gonna go ahead and
30:40 - show you how to do
30:41 - the removing as well in today's build so
30:44 - let's go ahead and fill this out so
30:47 - first thing we're gonna have is an image
30:49 - so i'm gonna what my snippets aren't
30:51 - working so i'm gonna say image
30:52 - and this image is gonna have a source
30:54 - and the source is actually gonna be
30:56 - the image that we passed through as a
30:58 - prop because here this product is
31:00 - actually gonna have some props that pass
31:02 - through
31:03 - and in those props we can have an id an
31:05 - image
31:07 - an image a oops an image a
31:10 - title a price and a rating
31:14 - okay so we've got these props which are
31:16 - basically the same props that we have
31:18 - inside of app.js or inside of the
31:21 - um home page so source is the image
31:24 - right here
31:25 - and then what we're going to say is we
31:27 - have anybody just call you the grand
31:29 - papa
31:30 - of real it's upgraded from papa react to
31:33 - grandpa from react
31:35 - yeah damn i love you
31:38 - i'm the great grandpa of uh python now
31:42 - moving up here exactly it's a whole
31:45 - family over there
31:47 - class name equals checkout product image
31:49 - let's go ahead and add a class name so
31:51 - that we can easily target afterwards for
31:53 - styling
31:53 - and then what we're going to do is we're
31:54 - going to create a div and this div is
31:56 - going to be responsible for all of that
31:58 - text price rating all of that stuff so
32:01 - we're going to go ahead create the div
32:03 - here
32:03 - and this div is going to have a class
32:05 - name of checkout products it's going to
32:07 - be checkout product underscore
32:08 - underscore info
32:10 - oops on this console info there we go
32:12 - now
32:13 - this is going to have a p tag so this p
32:16 - tag
32:16 - is going to be here and this p tag will
32:18 - be the title itself okay
32:20 - so this is going to be the title and
32:23 - this title should have a class name so
32:25 - we're going to use class names for this
32:26 - one
32:27 - i like to mix it up to show you guys the
32:28 - different variations so this one is
32:30 - going to be check out product title
32:32 - and then we're going to have the price
32:34 - itself so this styling over here
32:36 - this styling for class name oh hold on
32:39 - so this one over here is going to be
32:41 - for that image right there exactly and
32:44 - then
32:44 - this one over here is going to be for
32:48 - the info which means the
32:50 - title the money and the ratings yep
32:54 - got it exactly that that's exactly what
32:57 - we're gonna do and and that it will
32:58 - actually include the button as well
33:00 - inside of that yeah oh so we can fold
33:02 - we'll have the button
33:04 - yep it will have the button as well got
33:05 - it okay so then we
33:07 - we're also gonna have so i'm going to
33:09 - create another p tag
33:11 - another p tag and thank you el manana
33:13 - for that donation
33:14 - hey damn thank you guys the donations
33:17 - are still coming in that's awesome thank
33:19 - you
33:19 - yeah how people are donating by the way
33:21 - is on youtube the ones who are watching
33:23 - on youtube
33:24 - there's a super chat button underneath
33:25 - the comments they click on that they
33:27 - click donate
33:28 - and then they donate so for everybody
33:31 - who's here watching it or donating this
33:33 - is for you
33:36 - all right awesome thank you i'm enjoying
33:40 - my dj's super powers bro
33:42 - it's so fun dude it's so fun
33:45 - so we're going to have for this p tag
33:47 - now we are going to have
33:48 - a small tag so a small tag better be
33:51 - paying attention i'm watching you
33:53 - you think you think we're not watching
33:55 - you we're watching you
33:56 - pay attention learn build projects we
33:59 - want you to get jobs
34:00 - five thousand people getting jobs that's
34:02 - our goal okay 110 effort guys
34:05 - let's go nice so inside the small tag
34:09 - we're going to have the currency so in
34:10 - this case we're going to have a dollar
34:11 - sign
34:12 - and then we're going to have a strong
34:14 - tag so this is just an easy way of
34:16 - building out some text
34:17 - so we're going to do strong tag and it's
34:19 - going to pop in like so
34:21 - and here i'm going to have the price
34:22 - okay so that's great and i love this
34:24 - comment by the way i want to just pop
34:26 - this up over here
34:27 - and priyanja says qazi hear me out i
34:29 - can't appreciate you anymore man this
34:31 - entire challenge which you guys are
34:33 - providing us with
34:34 - seems to be such a great opportunity in
34:36 - such a crisis
34:37 - oh i'm hiding some of the message
34:40 - can't appreciate you and the entire cp
34:43 - team anymore you should pat your back
34:45 - we will for doing so much for people you
34:48 - don't even know
34:49 - just wanted to say hold on let me
34:53 - hey here we go just wanted to take a
34:56 - moment
34:56 - to appreciate you guys love from india
34:58 - pump for more
35:00 - let's keep it going damn thank you so
35:02 - much man
35:03 - super humbled really appreciate it guys
35:07 - wow all right let's get back so
35:10 - dude i love comments like that yeah
35:12 - makes my day makes our
35:14 - makes our day guys this is why we do
35:15 - this it's for you guys so we appreciate
35:17 - when energy is up
35:18 - and for the people who are sometimes
35:20 - negative we will just block you and kick
35:21 - you out because
35:22 - you're affecting the energy of other
35:25 - people and we can't have that because
35:26 - this community needs to be positive and
35:29 - strong and it goes two ways one you only
35:32 - keep the best and the highest quality
35:34 - people
35:34 - two anybody that doesn't follow up to
35:36 - that standard they're out of the group
35:38 - and you get the best community exactly
35:41 - guys
35:41 - and this sort of community only sort of
35:44 - like is
35:44 - fueled off of that optimism so anyone
35:47 - with that negativity
35:48 - get out there yeah
35:51 - nice so now we're going to have the
35:54 - checkout product rating so this is going
35:56 - to be very similar to how we did it
35:57 - yesterday
35:58 - so we're going to have a div with that
36:00 - inside of it so there we go
36:03 - and then we are going to have a just the
36:05 - following code so this is actually from
36:07 - yesterday's
36:08 - build this uh snippet and i will explain
36:10 - it quickly so i'm going to paste it in
36:12 - right here and what we're doing here
36:14 - guys is we have an array
36:16 - we have the rating so this is going to
36:18 - be a number between like one to five for
36:19 - example
36:20 - and then here what we do is we basically
36:23 - take that number so
36:24 - say it's five we make an array of five
36:27 - we fill it
36:28 - and then we basically just map through
36:29 - and we so we're basically mapping
36:31 - through that number so if it's five it's
36:33 - going to map through five times it's a
36:34 - little bit of a trick to doing that
36:36 - and then basically it's going to render
36:38 - out five stars okay so i saw a lot of
36:40 - people
36:40 - were able to get that workings that's
36:42 - really cool and i love seeing that so
36:44 - with that said we now have all of this
36:47 - stuff in place we're going to add one
36:48 - more thing
36:49 - which is a button so i'm going to go
36:51 - ahead and say any question how is it
36:52 - knowing to do
36:53 - five stars i don't see five anywhere so
36:56 - how does it know to loop and make five
36:58 - stars and not eight
36:59 - um so good good question and firstly i
37:02 - wanna say thank you to raphael estrada
37:04 - dropped a five dollar donation oh damn
37:06 - thank you man appreciate that that's
37:09 - huge
37:09 - yeah massive dude thank you and to
37:12 - answer your question bro so
37:14 - here we have the we have one star right
37:16 - but what we're doing is for the rating
37:18 - let's say
37:19 - imagine you passed in like a value of
37:21 - five oh that's it okay so that's i
37:24 - yeah so that's so actually you can
37:27 - actually ignore this part right here
37:29 - yeah you could actually go ahead and
37:31 - maybe get rid of that and it would still
37:33 - work
37:33 - right this was a bit of a hack what
37:35 - we're doing right now so what we're
37:36 - saying is
37:38 - oh it creates an array of five yeah
37:41 - and then it maps through it five times
37:43 - we don't actually need the index or
37:44 - anything so it just maps through it five
37:46 - times
37:47 - so array takes in an input and basically
37:50 - it creates an
37:51 - empty array in the start of like five
37:54 - what
37:54 - like five undefined it's like an array
37:57 - of size five
37:58 - size five got it okay okay and it fills
38:01 - it with like an empty value for each one
38:02 - so maybe if it was with a null
38:04 - yeah yeah yeah like a null exactly that
38:05 - makes sense and then you just map it
38:07 - to every single value that's there and
38:09 - you just put a star there
38:10 - yep exactly nice dope okay for anyone
38:13 - that did want the index
38:14 - what i did is i did this so i basically
38:16 - had it previously as
38:18 - underscore the convention here is if you
38:19 - don't care about what's in the first
38:21 - parameter you just put an underscore in
38:22 - there
38:22 - and then you put an i right got it okay
38:25 - nice okay so now the next thing is we're
38:28 - gonna have a button which says remove
38:29 - from basket okay save it
38:33 - and what we're going to do is inside of
38:36 - checkout here
38:37 - actually going to go ahead and render
38:38 - out a product so here
38:40 - i don't just want to render some random
38:43 - products okay i actually want to render
38:44 - out the basket itself
38:46 - so what we could do is remember guys to
38:48 - pull a item
38:50 - from the basket you have that beautiful
38:52 - little bit of code which
38:53 - uses that use state value hook and this
38:56 - pulls the basket
38:57 - remember if we don't need the dispatch
38:59 - we don't actually need to include it
39:00 - here but sometimes it's just
39:02 - it's that apparent recognition of seeing
39:03 - it which is going to help you guys learn
39:05 - whoa dude arturo jose reyes
39:08 - marcano just whoa
39:11 - [Music]
39:12 - damn thank you so much dude holy crap
39:16 - bro
39:17 - let's go arturo coming in clutch the 25
39:21 - donation thank you so much yo what is
39:24 - this
39:24 - leonardo shankan love the style the
39:28 - energy and the content
39:29 - saludos from costa rica we got five
39:32 - million
39:33 - five thousand holy crap thank you so
39:36 - much
39:37 - leonardo just love the style the energy
39:39 - and the content saludos
39:41 - guys thank you guys so much for the love
39:43 - and appreciation we're gonna keep going
39:45 - and today we also came up with a dope
39:47 - idea of
39:49 - doing something new which we had never
39:50 - thought about previously which is
39:52 - we want to actually have breakout rooms
39:54 - what is this static i always get
39:56 - whenever i switch to this
39:58 - this is when i switch to this angle it
40:00 - always gives me whatever i think people
40:02 - will be fine
40:03 - yeah so we want to do like a breakout
40:06 - room
40:06 - afterwards kind of like how when you go
40:08 - to an actual live conference so sunny
40:10 - and i were like
40:10 - how cool would it be that after the
40:12 - challenge if we literally were like
40:14 - in a zoom call where you and i and sunny
40:16 - and you can speak
40:18 - and we can help you we can talk about
40:20 - freelancing sunny can talk about react
40:22 - i think that could be really really cool
40:24 - if you actually like that idea do let us
40:26 - know because it's something we haven't
40:27 - ever done before
40:28 - exactly uh just uh okay
40:32 - there might have been a phone near the
40:34 - mic by the way
40:35 - no every time i switch to this angle
40:38 - that noise starts but when i go back to
40:40 - this screen it dies
40:42 - so it's something weird happening
40:45 - which i don't know what's happening but
40:46 - that's fine
40:48 - okay um but guys yeah let us know what
40:50 - you think about the breakout room
40:52 - session because we were super excited
40:53 - about that idea
40:54 - and i think it could be huge and it
40:56 - basically changes the challenge
40:58 - into a digital conference which is
41:00 - insane yes
41:02 - yes literally it will be like an actual
41:04 - conference almost like real life
41:06 - people are saying a breakout room would
41:07 - be awesome mike says that
41:09 - raphael says that could be awesome it's
41:11 - an awesome idea i love it dope
41:13 - athaba says i want to talk sometimes
41:15 - though so yes
41:16 - in a breakout room you will be able to
41:18 - talk through a zoom chat so it would be
41:20 - awesome
41:20 - hey and then gabi actually says she goes
41:23 - thanks a lot rafikaze
41:25 - i'm super motivated to land a developer
41:27 - job and improve my life
41:29 - love your energy your style and passion
41:30 - listen quasi or read
41:32 - i will be one of the five thousand
41:34 - developers to get the job
41:36 - damn energy let's go
41:41 - okay so here guys we're gonna say
41:44 - basket.map
41:46 - and then for every single item in the
41:48 - basket we want to return
41:50 - a checkout product okay so we're going
41:52 - to say check out product like so
41:54 - and this is going to take a bunch of
41:56 - props like we discussed earlier
41:58 - and those props are going to be simply
42:00 - the item contents okay so i'm just going
42:02 - to pop in a snippet here to save a bit
42:04 - of time here we're going to go ahead and
42:05 - do the following
42:07 - so here we're saying the id is the item
42:09 - id so it's this item id
42:11 - title is item title images item image
42:14 - and so forth
42:15 - and this means that when we add a item
42:18 - to our basket
42:19 - it will map through it and if we've done
42:20 - it correctly should show it inside of
42:23 - the
42:24 - checkout page okay in the form of the
42:26 - checkout product
42:27 - so with that said let's go ahead and
42:30 - check the
42:31 - let's go ahead and go to the amazon just
42:33 - click amazon link
42:37 - oh this is the actual one we have do you
42:39 - want me to go to the deployed one
42:41 - uh no the one that we have okay yeah so
42:43 - it says use state value needs to be
42:45 - imported yes
42:46 - that's a good shout uh so we need to go
42:48 - ahead and do that
42:50 - uh use state value and then we are gonna
42:53 - go ahead and also
42:54 - import the checkout product so let's go
42:56 - ahead and do that so import
42:58 - checkout product saves
43:01 - hey i can see my girlfriend is
43:02 - moderating the chat it's going crazy
43:04 - dude
43:05 - yeah perfect just keep blocking yeah
43:10 - let's click on the amazon logo now so it
43:13 - should get rid of that irish issue for
43:14 - us
43:15 - and let's add some items to the basket
43:18 - all right so i'm gonna add i don't know
43:20 - man i'm feeling like uh getting this
43:22 - monitor today
43:23 - i'm gonna get a two of them should be
43:25 - good for the team
43:26 - yeah oh nice so we can see that the two
43:29 - items have popped up inside the shopping
43:31 - basket okay yep
43:33 - now we're gonna do is we're gonna go
43:34 - ahead and style that we're gonna go over
43:36 - to checkoutproduct.css
43:38 - and just for a quick comparison we here
43:41 - guys in check out product of js
43:42 - we gave everything some appropriate
43:44 - class names so that we could come in
43:46 - ah rating are we going to throw it in
43:48 - like a flex box is that what we're about
43:50 - to do with it
43:51 - we are going to find a place foreign
43:54 - along the lines of a line items
43:57 - yeah actually for this one we're not
43:59 - going to align centrally because
44:01 - i'll show you why so if we go to the
44:02 - deployed version quickly all right we
44:04 - will
44:05 - but i'm just going to map out what we're
44:06 - going to do so guys we're going to take
44:08 - it from this like vertical thing
44:10 - and we're going to turn it into so it's
44:12 - just
44:13 - horizontal like this with stars that's
44:15 - the goal
44:16 - all right let's go to this deployed one
44:19 - yeah
44:20 - yep and then you can see now so it's
44:22 - going to be subtle but basically on the
44:24 - second
44:25 - product row can you see how the image
44:28 - is actually sort of um aligned to that
44:31 - text on the top if we did align item
44:34 - center
44:34 - the image is going to be centered with
44:36 - the in with the next container we don't
44:38 - oh i see what you're saying so it's
44:40 - actually
44:40 - aligned to the top of the text right
44:44 - exactly okay but if we did a line to the
44:46 - center
44:47 - instead of this image being here it
44:50 - would be more like
44:51 - starting from here to here or something
44:53 - yeah and it kind of looks strange
44:55 - which is why oh damn jonathan lagunda
44:59 - says i
45:00 - am i just landed a client for five
45:03 - hundred and 15
45:03 - dollars yeah i'm only 13. holy crap
45:07 - where he said that on youtube or what
45:09 - uh yeah that's on youtube damn these are
45:12 - the wins we're talking about
45:15 - as well that's sick look at that i just
45:17 - landed a client for 1500
45:19 - and i'm only 13. guys
45:23 - [Music]
45:29 - that's that's massive it's possible for
45:32 - all of you guys
45:34 - age doesn't matter a lot of people make
45:36 - that a thing that it's
45:37 - your age and i'm too old i'm too young
45:40 - none of that guys
45:41 - no excuses you can do this i was about
45:44 - to fix my glasses and i realized that my
45:46 - girlfriend crushed my glasses yesterday
45:47 - and i don't have any of them on my face
45:50 - oh no are they out now yeah
45:53 - but it's okay i can still see oh man
45:56 - all right so with that said we're gonna
45:58 - go ahead and style smash
46:00 - the little smash the like button for
46:02 - broken glasses guys
46:04 - we missed we missed the smoothest chunks
46:06 - that dude
46:09 - just like sad face like guys glasses
46:12 - but okay okay let's get back before get
46:15 - people okay
46:17 - so now we're gonna go to the checkout
46:19 - part css
46:20 - yeah uh and then in here we're gonna
46:23 - basically go ahead and do
46:25 - checkout product and then we're going to
46:28 - say
46:29 - um display flex display flex and then as
46:33 - soon as we save this
46:34 - now oh so car's a good point before i
46:36 - hit save on this go to amazon add some
46:38 - products
46:38 - and then let's go back to the screen
46:40 - because we want to show some hot
46:40 - reloading
46:41 - so it dynamically updates all right
46:43 - what's up with these stars
46:45 - all right here we go all right there we
46:48 - go
46:49 - okay so you can see now that it actually
46:53 - isn't um display plug so if i go ahead
46:55 - and do save
46:56 - oh so it's display flags now because it
46:57 - will save yeah but i'm going to do a
46:59 - margin top and margin bottom so margin
47:01 - top and margin bottom of 20 pixels
47:03 - yeah let's go ahead and chuck that in
47:05 - right here boom
47:07 - do that and then we should see oh damn
47:09 - it we should see a gap
47:11 - okay so this is gonna be an annoying
47:12 - issue now um
47:14 - where it's gonna basically go ahead and
47:16 - what we can do is
47:17 - when you're doing this kind of stuff
47:19 - guys i'm gonna show you a little trick
47:20 - okay so when it does some hot reloading
47:22 - like this
47:23 - and you don't want to keep on doing the
47:24 - same sort of thing where you want to
47:26 - have to add a product
47:28 - go ahead and add a static product okay
47:30 - so
47:31 - here we're going to add a title to
47:33 - saying this is a test
47:35 - this is a test test
47:38 - and then here with the image we'll go
47:40 - ahead and find an image real quick after
47:41 - this
47:42 - so i'm just going to use this um i'll go
47:45 - ahead and find the image in a sec
47:46 - for the price you just go ahead and
47:48 - chuck in something like 199.99
47:50 - for the rating let's go ahead and do
47:52 - five i'm going to quickly find an image
47:54 - let's just do the lean startup
47:57 - boom let's go ahead and find that image
47:59 - go to images
48:01 - grab that and this is a little hack for
48:03 - you guys in case you found yourself in
48:05 - this problem
48:07 - so just pop it in like that and that
48:09 - will save you a bit of time now so when
48:11 - it loads up
48:12 - we already have some stack data on that
48:14 - screen so cars if you just hit refresh
48:16 - on the
48:17 - um on the right hand side you got it bro
48:20 - nice now we can see that everything pops
48:22 - up there okay
48:23 - um this is a test and let's just add in
48:25 - like a bunch of
48:27 - exorcism or something
48:30 - and then let's just copy that a few
48:32 - times so we can actually stress this
48:33 - thing out a little bit
48:34 - let's go ahead and space this out okay
48:37 - save that
48:38 - and now you can see we've got some sort
48:40 - of dummy information and then what i
48:41 - like to do is i like to copy this out
48:43 - like twice
48:44 - so then that way when we're styling it
48:46 - we don't have to keep going back and
48:47 - forth and just what we'll do is we'll
48:48 - come back and we'll delete these
48:50 - afterwards and then it will work as
48:51 - expected okay
48:52 - so back to cheddar checkout product now
48:55 - what we can do is we can say
48:56 - target the checkout product underscore
48:59 - underscore
49:00 - let's go ahead and get rid of this
49:01 - unscrew the info so that container
49:03 - i want to give this one a padding left
49:06 - of 20 pixels
49:07 - so what we should see here is when i do
49:09 - this how many pixels are padding left
49:13 - it pushed the info text away a little
49:15 - bit
49:16 - okay the next thing we're going to do is
49:17 - add some button styling so i'm going to
49:19 - go ahead and
49:20 - target the info but the button inside of
49:23 - it
49:23 - and then apply the following styles so
49:25 - this is the snippet that we need to go
49:27 - ahead and apply
49:28 - you can see it has a background of
49:30 - orange a border one pixel solid
49:32 - a margin top of 10 pixels a border color
49:34 - and this is a nice little gradient and
49:36 - black color
49:37 - now when we do that we get this lovely
49:40 - amazon looking button okay
49:42 - the next thing we're going to do is
49:43 - target that image that image is way too
49:45 - big right now
49:46 - so we're going to make sure that that
49:47 - doesn't happen so to do that
49:50 - just snip it right here so we're going
49:51 - to have the checkout asks can we use bem
49:53 - with sas as well just give our rapid
49:55 - fire answer so we can get back to it
49:57 - um no need to use bam with sas the
50:00 - reason being is because we
50:01 - don't um i mean it's yeah just keeping
50:04 - it simple no reason to use bandwidth sas
50:06 - either use um either use bem or stick
50:08 - with sas so some some questions i'll
50:10 - throw in like that just to engage with
50:11 - everybody in chat i'm actually guys i'm
50:13 - looking at the entire chat and i'm like
50:15 - talking to you so everything you're
50:16 - writing in the facebook chat
50:18 - i'm responding to it and some of your
50:20 - questions i'll give it to sunny
50:22 - or i and we'll just rapid fire so we can
50:24 - get back to the coding
50:26 - exactly guys exactly and also i just
50:28 - want to say kumar said um some of the
50:30 - concept is hard to get but i'll complete
50:31 - this challenge it doesn't matter how
50:32 - much time it takes after the session
50:34 - i'll watch some youtube videos
50:35 - all these concepts that's what we're
50:37 - talking about guys doesn't matter if you
50:39 - understand it right now
50:40 - just rewatch the video pair it up with
50:42 - some tutorials online
50:43 - and guys just get like that persistence
50:46 - will take you so far
50:51 - awesome all right so next what we're
50:55 - going to do is
50:55 - those stars right now okay those stars
50:58 - right now
50:58 - are actually sort of stacked on top of
51:01 - each other we want them to be next to
51:02 - each other so
51:03 - in order to fix that we can do is we can
51:05 - just go ahead and do this
51:07 - go ahead and say check out product
51:08 - rating display flex
51:10 - and that will actually go ahead and it
51:12 - puts everything in a row by default
51:14 - which is
51:15 - makes it super clean because you've got
51:16 - the stars next to each other now
51:18 - next thing we're going to do is target
51:19 - the title so let's go ahead and go here
51:21 - and we're just going to go ahead and pop
51:23 - in this
51:23 - so we're going to say check out product
51:25 - um
51:26 - so for some reason our printer isn't
51:28 - working so let's go ahead and do this
51:29 - and
51:30 - this and we're going to do font size of
51:32 - 17 pixels font weight of 800 so that
51:34 - changes the style very nice
51:36 - nicely and i'm also going to target the
51:39 - button
51:40 - inside of the checkout product info and
51:43 - we're going to change the background
51:44 - color
51:45 - to none so that shouldn't at this point
51:49 - uh we don't actually need that bit that
51:51 - was a mistake get rid of that
51:53 - okay with that said we actually have
51:55 - that completed really nicely so that was
51:56 - actually really slick really smooth
51:58 - so what we can do now is go ahead and
52:02 - go to our checkout and like wait yeah go
52:06 - to our checkout and delete this stack
52:07 - information because we're done with the
52:08 - styling
52:09 - so what we're going to do now is
52:12 - we're going to test that everything
52:14 - works inside of our basket okay
52:16 - so kazi what we need what i need you to
52:18 - do now is go ahead and
52:20 - go to the amazon logo so click the
52:22 - amazon logo yep
52:24 - boom add some products to the basket
52:26 - boom boom
52:27 - boom okay i got my amazon echo lean
52:29 - startup and
52:31 - a kenwood thing that my mom has for
52:34 - flour
52:35 - nice i've actually got that machine oh
52:37 - yeah you use it
52:40 - that's that dude makes them clean rookie
52:42 - you know exactly yeah my mom
52:44 - uses that for that yeah so
52:47 - we now you can see the products render
52:49 - out perfectly okay so we've got
52:50 - everything as we need it
52:52 - um i saw a really good question here
52:54 - from ammo
52:55 - he says sonny can we do one project with
52:57 - class-based uh approach
52:58 - react was hard for me to understand we
53:00 - made it simple and easy um
53:02 - so we do a lot of that kind of stuff
53:04 - where we can play
53:05 - compare class-based first functional
53:08 - insider profit with javascript
53:09 - so it's just something to consider we do
53:11 - all of those questions comparisons all
53:13 - that stuff
53:14 - inside the course okay um now we have
53:17 - the
53:18 - products rendering out so everything
53:19 - works as we expect now we're gonna go
53:21 - hook up that
53:22 - remove from basket button okay so the
53:25 - remove from basket when we click it
53:27 - we're going to do an
53:28 - on click so we're going to do an on
53:30 - click and we're going to say
53:32 - remove from basket and this is obviously
53:35 - this is a function which doesn't exist
53:37 - yet so we need to write this we're going
53:38 - to say const remove
53:39 - from basket this takes a
53:42 - uh this takes nothing as a primer and it
53:45 - just opens up here so
53:47 - what we need to do now is go to our
53:49 - checkout product
53:50 - dot js and here what we're gonna do guys
53:53 - is we're to basically go ahead and
53:57 - remove the item from the basket
54:00 - right now the basket itself
54:03 - is actually so in order to manipulate
54:05 - the basket we need to go ahead and pull
54:07 - in our magic snipper code
54:09 - which is this one this is the one that
54:10 - we use to pull information or
54:12 - change information with the dispatch
54:14 - right
54:15 - then what we need to do is go ahead and
54:17 - import this otherwise our code is going
54:18 - to cry and freak out
54:20 - so now what we need to do is if we ever
54:24 - need to manipulate the basket
54:25 - remember guys we need to dispatch
54:28 - something called an
54:29 - action into the reducer so into the
54:33 - store
54:34 - and then we need to go ahead and pick it
54:35 - up here so we had the add to basket
54:37 - so what we're actually going to do is
54:38 - we'll add something called a remove to
54:40 - basket okay
54:42 - and what we're going to do is here we're
54:44 - going to go ahead and say dispatch
54:46 - so we're going to dispatch an action and
54:48 - the type of the action
54:51 - so team 2kd says why why are we
54:53 - repeating the amazon cone
54:54 - we're actually not repeating we're
54:56 - actually building on top of it so
54:58 - yes we're at this point we're building
55:00 - but tomorrow we're actually going to be
55:01 - adding
55:02 - full payment support from stripe so that
55:05 - was not done previously
55:06 - yep the payment support and the stripe
55:08 - functionality that's going to be brand
55:10 - new
55:11 - i'm just fixing the audio on my end now
55:14 - it should be perfect everywhere
55:15 - dope so then what we're going to do is
55:20 - we are going to go ahead and do type and
55:22 - then we're going to go ahead and say
55:24 - remove from basket
55:28 - so we're going to dispatch it an action
55:30 - with this type
55:31 - attached to it and we need to pass along
55:33 - the items
55:34 - id the reason why we need the items id
55:37 - is because we're going to use that
55:38 - to actually go ahead and find the id in
55:40 - the basket and remove that product once
55:43 - okay so we're going to go ahead and do
55:46 - that
55:46 - and then we are going to go into our
55:49 - reducer
55:50 - and then in here because we need to
55:52 - actually listen to this
55:53 - action so we need to go ahead and say
55:55 - case remove
55:57 - this one is going to be remove from
56:00 - basket so it's going to be removed
56:02 - from basket and then we need to do
56:04 - something here
56:05 - right now what do we do here in order to
56:08 - be able to
56:09 - remove an item from the basket so
56:12 - this is a interesting situation that we
56:15 - find ourselves
56:16 - in and this is uh so future code
56:18 - actually just dropped another five
56:19 - dollar donations
56:20 - sorry about my homework working super
56:22 - hard for tech interview
56:23 - whilst also doing the amazon build but
56:25 - still wanted to submit something and
56:26 - show progress
56:27 - oh i think she meant the screenshot that
56:29 - she submitted
56:32 - um what's up i think she meant the
56:34 - screenshot that she submitted so future
56:36 - code actually donated five dollars
56:38 - oh nice oh sick thank you yes she said
56:41 - sorry about the homework working super
56:42 - hard for a tech interview so she has in
56:44 - the tech interview on
56:45 - friday and she's because whilst also
56:47 - doing amazon build i just wanted to show
56:49 - that i was making some kind of progress
56:51 - so that's awesome thank you for the
56:52 - donation elizabeth that's epic and the
56:54 - code looked clean by the way when i
56:56 - looked at it i was like that's crisp
56:58 - yeah
56:59 - exactly super super nice now okay this
57:03 - is a
57:03 - good point so somebody actually went
57:05 - ahead
57:06 - and added a snippet of code right and
57:08 - i'm going to show you
57:10 - so somebody did this but i'm going to
57:11 - show you the problem if you do it this
57:13 - way guys
57:14 - okay so somebody went ahead and added
57:18 - this snippet and so
57:19 - they actually wrote return and then they
57:21 - added this in
57:22 - okay now this is an answer which i'm
57:25 - assuming
57:26 - a lot of you would have got to and what
57:27 - we're saying here is
57:29 - um return whatever the the state
57:32 - whatever the store looked like
57:34 - previously but change the basket
57:36 - so let's go ahead and drop this online
57:38 - so we can see this
57:40 - but uh change the basket and then
57:42 - they're saying
57:43 - filter out the item id
57:47 - from the action and this is going to be
57:48 - action id
57:50 - i guess that's a filter out anything
57:52 - where the item is matching the
57:54 - action id now this is it seems like it
57:57 - would work right
57:59 - but um so some people said today my
58:02 - voice isn't that clear something
58:04 - it's actually going to be more clearer i
58:05 - think today but um
58:07 - maybe the gain isn't right because just
58:09 - double check that
58:11 - um no you sound really good bro
58:14 - yeah okay awesome so what we're gonna do
58:17 - now is
58:19 - let's go i'll show you the problem with
58:20 - this way okay so this does work
58:22 - but i'll show you this there's a big
58:24 - downside to this so let's save it and
58:26 - let's go to the amazon build right now
58:28 - and go to amazon
58:29 - itself so click on the amazon link
58:34 - now what you want to do is click on for
58:36 - example let's add like
58:37 - three of the lean startups and one watch
58:40 - right at three of the lean stops and one
58:43 - watch
58:44 - now let's go to the basket don't press
58:47 - anything just yet inside the
58:49 - in this next bit okay so what we're
58:50 - going to do here is when we click
58:52 - remove from basket what we should see
58:55 - now
58:55 - is it only removes one of those lean
58:58 - startup books right
59:00 - but because in the code what we're
59:01 - saying is filter out all the items where
59:03 - the
59:03 - id matches the action id
59:07 - then what we're going to do is it's
59:09 - actually going to go ahead and remove
59:10 - all of them so go ahead and click that
59:15 - so go ahead and remove from basket yup
59:20 - see what it did all right that's
59:23 - wrong guys because it removes everything
59:27 - right it removes everything and that's
59:29 - not what we want to do
59:30 - so but hold on aren't you looking up the
59:33 - specific item id
59:35 - and doesn't every oh so every single
59:37 - item with that id of that book you'll
59:39 - delete it
59:40 - yeah exactly and we don't want to do
59:42 - that right so you see
59:44 - because you click remove from basket and
59:46 - it kind of went through and it just
59:47 - stripped out all of those books
59:49 - right let me do that again so how do you
59:52 - take care of that right so to fix that
59:55 - we have to break down the problem and
59:57 - and here is what we do
59:58 - guys so let's go ahead and actually
60:02 - um should get rid of the index instead
60:04 - of the id
60:06 - yeah so we have to firstly find the
60:08 - index of which you're trying to delete
60:10 - right
60:11 - so this is how we do that right so
60:12 - firstly we say
60:14 - const and here we're going to say the
60:15 - index and what we do here is we get the
60:18 - state
60:18 - we get the basket and we use this fine
60:21 - index
60:22 - function right now what this is doing is
60:24 - it's going through all of the basket
60:26 - items
60:27 - and it says does any of the basket items
60:30 - match the action id that i passed in
60:33 - right now this only finds it finds the
60:36 - first one and it returns it to you
60:39 - so we'll find the first one first match
60:41 - and it will return it to you
60:43 - so it won't find all of them it'll find
60:44 - the first one and return to you then
60:45 - what we're going to do is
60:47 - we're going to copy so we're going to
60:48 - say
60:50 - let new basket so we're going to copy
60:53 - the basket
60:55 - copy the basket into a temporary
60:57 - variable so we're going to say
60:58 - copy whatever the state dot basket
61:01 - currently had so
61:02 - now we've got a copy of it inside of new
61:04 - basket
61:05 - and then what we're going to say is if
61:07 - so if the index
61:09 - actually is greater than what uh zero
61:12 - so if index is greater than or equal to
61:14 - zero then it meant that it actually
61:15 - found
61:16 - an item inside the basket okay so what
61:18 - we're going to do is
61:19 - we're going to do something so if it
61:21 - found it then great otherwise what we're
61:23 - going to say
61:25 - is we're going to do console.warn so
61:29 - console.warn
61:30 - i love this dev roy says qazi sounds
61:32 - like the interviewer
61:34 - i think that's that's perfect that can
61:36 - always be that
61:37 - person is like interviewing exactly yeah
61:41 - here we're going to say console.1 can't
61:43 - remove product and it's going to have
61:45 - the id of the product as it's not in the
61:47 - basket okay
61:48 - so now what we're going to do is so some
61:50 - people are saying just use different ids
61:53 - so in it depends how an ecommerce site
61:55 - is built up to some
61:56 - e-commerce sites every product might
61:58 - have the same id so
61:59 - you need to know how to just delete one
62:01 - right
62:02 - so here what we're going to do is we're
62:05 - gonna say
62:05 - new basket i knew yo i gotta say that
62:09 - this is probably one of my favorite
62:10 - comments ever to see
62:12 - william goes i assure you history will
62:15 - remember you guys
62:17 - thanks again
62:25 - i remember talking to sunny and i was
62:27 - like literally it's
62:29 - more than anything like we just want to
62:31 - go down in the history books
62:32 - like more than anything like it should
62:35 - be like one of those things where
62:37 - our goal is that clever programmer just
62:39 - provided more value to the developer
62:41 - world
62:41 - than anybody ever in the world and
62:44 - exactly if we can achieve that then
62:46 - that's
62:46 - an amazing goal for us yeah that would
62:49 - be like
62:50 - game changer that's exactly what we're
62:52 - fighting for that's why we have that 5
62:53 - 000 go guys and we're reaching that
62:55 - pretty quick actually like everyone
62:57 - we see loads of jobs coming in and um if
63:00 - you do get a job definitely let us know
63:02 - miriam says i love that kazi asks
63:03 - questions and points at important things
63:05 - that's useful for a beginner
63:06 - yeah so i don't so
63:10 - i am a python django developer sunny is
63:13 - an incredible react and javascript
63:15 - developers is a different world for me
63:17 - but i am enjoying javascript i'm picking
63:20 - up react and it's like
63:22 - mind-blowing how fast you can do things
63:24 - so when i have questions i will just
63:26 - ask them and i hope that it also brings
63:29 - you value along the way because
63:31 - maybe if something isn't making sense to
63:33 - me or maybe if
63:35 - his explanation to me it makes something
63:37 - click for you then that's fantastic
63:40 - exactly exactly guys and he actually
63:42 - helps out the kazi is also learning
63:44 - because he's able to point out the
63:45 - things which you guys might be get stuck
63:46 - in as well that i might overlook
63:48 - so it's a really good god i love you
63:50 - guys i just want to say i love you guys
63:52 - i'm looking at the messages and
63:53 - that [ __ ] is almost making me emotional
63:55 - like that's thank you guys
63:56 - that's huge jesus christ like it's
63:59 - actually insane
64:00 - thank you crazy now guys what we're
64:03 - going to do is we're going to say if the
64:05 - index was greater than 0 then it found
64:07 - the id
64:08 - now i know some people are saying if i
64:09 - click the second item with the same
64:11 - thing it's going to take you off
64:12 - but we're keeping it beginner friendly
64:14 - guys so that's why we're doing this way
64:15 - we're going to say
64:16 - new basket splice and then what we do is
64:19 - we say
64:20 - pass the index and then splice it by one
64:22 - well what this is doing
64:24 - is it's going to the point at which you
64:26 - the point at which inside the basket
64:28 - that item was it's basically just
64:30 - cutting it by one
64:32 - right so it's basically chopping it off
64:34 - by one inside that array so
64:36 - what this does is it means that the new
64:38 - basket now
64:39 - actually goes ahead and it looks a
64:41 - little bit different okay
64:43 - so what we can do then is we can then
64:46 - say
64:47 - that the and then what we can do is we
64:49 - can go back down here
64:51 - and we can say um
64:54 - yeah we can say return
64:58 - we say return the
65:01 - current state so i'm going to drop this
65:03 - and return the current state
65:06 - and also the basket is going to now be
65:10 - the new basket that we just modified
65:12 - okay so that's how we do it
65:14 - save this and let's go ahead and double
65:16 - check this right now
65:19 - uh so guys just go to the amazon let's
65:21 - go to the home page
65:24 - let's do it so boom
65:28 - yep and let's go ahead and
65:31 - add a few of the same products in
65:36 - man i'm gonna have to go with a few
65:38 - different products here um
65:40 - i like my ipad pros amazon
65:44 - i already have the lean startup book you
65:46 - know so
65:48 - i think all right good with this if i
65:50 - remove
65:51 - nice wait did it do it right hold on
65:54 - yeah
65:56 - i don't believe you sonny let me try it
65:58 - again
65:59 - all right okay okay okay do that guys
66:01 - all right gentlemen
66:04 - hey sick okay beautiful
66:07 - nice so this is the sort of beginner way
66:10 - yes there are some caveats even to this
66:12 - approach
66:13 - but we're keeping it very very
66:14 - user-friendly we're beginner friendly
66:16 - when we're doing this so hold up hold up
66:18 - let me just let me just clarify this so
66:19 - if i okay so i click here right
66:21 - now let's just go through this process
66:23 - kind of visually so
66:25 - i don't like these items i got give me
66:26 - give me i'm just gonna pick like
66:28 - some unique items all right so here now
66:30 - if i click this
66:32 - ipad is it in position two
66:35 - in the array yep okay
66:38 - so this is zero okay hold on
66:42 - all right so this is position zero this
66:43 - is one and this is two yeah
66:45 - exactly so when i click remove from
66:47 - basket
66:49 - it index is two
66:53 - yep dope all right and then basically
66:57 - where is the line that basically says to
66:59 - go remove it is this the splice line
67:01 - yeah so what we did is we actually
67:03 - copied the current basket content so we
67:05 - had like a copy of it inside of this
67:07 - variable new basket
67:08 - and then what we said is go to the new
67:10 - basket and
67:11 - splice at 0.2 so basically
67:15 - cut out that element okay so okay hold
67:17 - on so if i got this array right here
67:19 - right
67:20 - yep and i got this guy there and i got
67:22 - this guy there
67:23 - and i got this guy right here right so
67:27 - your line of code what it's saying is
67:29 - instead of making this entire thing the
67:31 - array
67:32 - make only these two things the array
67:34 - exactly you're saying go to
67:35 - the one
67:39 - oh you know like i knew what i
67:42 - understood what slice
67:43 - did yeah like i think this is the first
67:45 - time i'm seeing like okay this is
67:47 - actually exactly what it does that's
67:48 - sick yeah and
67:50 - even if you chose like a middle point
67:52 - for example if we spliced out the
67:54 - uh the item at position one what it does
67:57 - is it goes to that middle point
67:58 - and cuts up that item and then you've
68:01 - only got
68:01 - zero and and the thing that was in two
68:04 - and now in one
68:06 - got it okay nice this is sick so okay
68:10 - this is it gets rid of it
68:11 - so i just want to play out one more so
68:14 - what happens if i remove
68:15 - this so then how does it work so so now
68:18 - it's going to go to the middle element
68:21 - uh-huh so it's going to go to this
68:23 - middle element
68:24 - yeah it's going to go to that one and
68:27 - cut it by one which means that now all
68:29 - we have to imagine like
68:31 - it's it's got that element it won't have
68:34 - the middle element anymore it won't
68:36 - yep and then it will have the next
68:38 - element so now we have two elements in
68:39 - the array
68:40 - and it's the the first and third one and
68:42 - the middle one will be gone
68:44 - okay so the new array is just going to
68:45 - be made up of like say
68:47 - this element here and that element
68:51 - and our lean startup is gone okay got it
68:53 - yeah
68:54 - okay beautiful nice now i see a lot of
68:57 - people saying this does not remove this
68:58 - exact time it only removes the first one
69:00 - with the id yes
69:01 - this solution does says such a simple
69:04 - explanation of something so complex
69:06 - thanks guys ojobel says amazingly
69:08 - explained
69:09 - um yes ani that was like you gave a
69:11 - great explanation for that i found
69:13 - yeah i think the visual breakdown is
69:15 - awesome as well yeah i think that helps
69:16 - a lot of people
69:17 - yeah so yeah guys there this is it and
69:20 - this will only go and find the first one
69:22 - and then delete it
69:22 - so if you were if you had like a few
69:24 - things and you tried to delete the the
69:26 - third one
69:26 - yes it will go ahead and change it in
69:28 - slightly in a way that we don't expect
69:30 - but it's completely fine
69:31 - for this kind of build guys it's
69:33 - completely fine right
69:34 - yep okay let's keep going
69:38 - yeah this is awesome okay so
69:41 - with that said now we are going to go
69:43 - ahead and
69:44 - we've got the remove from basket
69:46 - functionality complete
69:48 - so the next thing guys is we are at this
69:51 - point
69:52 - we essentially recap the homework we
69:55 - built out the remainder of yesterday's
69:56 - build
69:57 - and at this point we are at the point
69:59 - where we can actually go ahead and build
70:00 - the authentication
70:02 - so let's get excited get pumped up and
70:05 - we are going to
70:07 - login age right now the authentication
70:11 - normally it's everybody's nightmare
70:14 - but with firebase and the way that sunny
70:17 - has prepared for you guys
70:19 - it's actually going to be one of your
70:20 - favorite things
70:23 - so i'm excited let's do it it's awesome
70:26 - man with with
70:27 - firebase it makes it so simple um
70:30 - so the first thing we need to do is
70:32 - actually have
70:34 - a login page right so let's go back to
70:37 - our app.js
70:39 - and here we had our router so we had a
70:41 - direct router rendering things
70:42 - and we're going to create a route now
70:45 - called
70:46 - the login route okay so we're going to
70:48 - go ahead and create a login
70:49 - group so this one's going to be login
70:52 - and this is basically just going to say
70:55 - like
70:55 - just to demonstrate this is actually
70:57 - rendering out the login i'm going to go
70:59 - ahead and say
71:01 - [Music]
71:02 - login page and then what we're going to
71:04 - do
71:05 - is we're going to go to our header
71:08 - and we're going to go to where it said
71:11 - sign in let's go to our header where it
71:14 - says sign in
71:15 - we're actually going to make the sign in
71:18 - button um maybe i should add to the top
71:23 - what we're working on kind of like we do
71:25 - on when we're doing the live streams i
71:26 - think it's helpful
71:28 - yeah all right so what are we working on
71:33 - uh now we are working on building the
71:36 - login page okay
71:41 - dope so let's make sure we show that
71:44 - up here beautiful so now everybody could
71:48 - see that
71:49 - sick all right got it
71:53 - okay awesome and when we say that page
71:56 - let's also go to that page and show them
71:58 - so when you say the login page
72:00 - it's when i click sign in and it's this
72:02 - page specifically
72:03 - exactly we're going to build all of that
72:05 - and the logic around it
72:07 - sick so this is what we're about to
72:08 - build you guys get ready
72:11 - exactly get pumped up guys because this
72:14 - is going to be a fun part of the build
72:15 - because
72:16 - this is actually mind-blowing when you
72:17 - see how it works and how
72:19 - are we building the front end right now
72:21 - so maybe
72:22 - right now i shouldn't talk about user
72:24 - authentication yeah
72:26 - um yeah we're gonna do the we'll just
72:28 - build the front end first and then we'll
72:29 - do the authentication portion okay so
72:31 - i'll call this build the front end
72:34 - yeah put the front end for the login
72:36 - login page yep
72:38 - beautiful okay so now what we're going
72:42 - to do is where we have
72:43 - the sign in we are going to go ahead and
72:46 - where we have
72:48 - this header option i'm going to surround
72:50 - this inside of a link
72:52 - yes it's going to surround it inside of
72:54 - a link and then we're going to go ahead
72:56 - and
72:56 - cut this and it's going to be
72:58 - surrounding the actual
73:00 - option so like so
73:03 - yeah yep then this link is going to say
73:07 - it's going to take us to the login page
73:12 - so this goes to forward slash login like
73:14 - so okay
73:15 - now what will happen is uh let's go to
73:18 - our local host
73:20 - okay
73:25 - yep uh and now what i want to do is if
73:28 - you click on that
73:29 - sign in
73:33 - yep yep now what we can see is that the
73:37 - header is included with that
73:38 - right so we don't actually want to
73:40 - include the header at this point so
73:42 - you know so like this one we don't have
73:44 - the header here
73:45 - yeah so we don't have that there so this
73:48 - is an issue when we
73:49 - actually have the header outside of our
73:51 - route so what we're going to need to do
73:52 - to fix this
73:54 - is i'm just going to get rid of the
73:55 - header and the global level
73:57 - and put it in only at these two levels
74:00 - here so only when we have the checkout
74:02 - or the uh home page we can go ahead and
74:05 - get rid of that code
74:06 - save it and then we should be able to
74:10 - see now that it just says login page
74:11 - okay
74:12 - so now let's go ahead and build out the
74:14 - login page
74:15 - so the login page is going to have a few
74:17 - things it's going to have
74:19 - a a
74:23 - it's going to have an amazon logo at the
74:25 - top so let's go ahead and build oh so
74:27 - first
74:27 - we need to actually build the login
74:28 - component so we're going to replace this
74:30 - with something called login
74:33 - we need to create that file so we're
74:34 - going to create a new file called
74:35 - login.js shout out to melinda and he
74:38 - goes yo this is the best way to spend a
74:40 - birthday
74:41 - that's awesome hey that's insane happy
74:43 - birthday
74:44 - that's happy birthday dude wow wait
74:48 - rfce there we go and then here we're
74:51 - going to do div
74:52 - class name equals and then here i'm
74:55 - going to say login
74:56 - okay so login there we go and here i'm
74:59 - going to go ahead and do
74:59 - import again.css
75:03 - and as always guys we're going to create
75:05 - the login.css login.css files we should
75:08 - pop into that in just
75:10 - a sec there we go
75:14 - and now we are going to go ahead and
75:17 - build out the login page so the first
75:19 - thing is we are going to have an image
75:21 - okay so we can have an image and like so
75:24 - and this one is going to have a source
75:25 - and this source is going to be the
75:28 - amazon logo so i've gone ahead and
75:30 - grabbed an amazon logo from google
75:32 - this one right here we got a lovely
75:34 - donation from romell
75:36 - ebay thank you so much dude he says how
75:38 - to add user authentication with google
75:40 - yeah
75:41 - or firebase user collection so very good
75:45 - one second so what happened is
75:55 - damn we're still live on youtube so
75:58 - what's up youtube
75:59 - but unfortunately i think we just got
76:02 - off
76:03 - facebook and it's not even an internet
76:05 - connection actually this time it's
76:06 - something else so
76:08 - um i'll try to we'll try to get that
76:10 - back up and
76:12 - running uh you
76:15 - you know just enjoy the stream for a
76:16 - second
76:18 - yeah so guys i will answer some
76:20 - questions in the meantime
76:22 - so i said facebook died if you were on
76:24 - facebook
76:25 - um i mean i i guess it's not going to
76:27 - reach them now but just
76:29 - like go over back to go over to youtube
76:31 - we render on both we
76:32 - stream on both platforms for this one
76:34 - reason and i can see the number is
76:35 - actually coming back up
76:37 - so that's actually pretty awesome to see
76:39 - you guys are actually making your way
76:40 - over from
76:42 - youtube so in case anyone has joined
76:44 - from that facebook stream
76:46 - welcome and we're going to be carrying
76:47 - on the stream in just a second
76:50 - give some time for those people who got
76:52 - disconnected to actually reach over to
76:54 - the youtube stream instead
76:56 - um okay so a few people said yep so we
76:59 - actually see that number coming back up
77:00 - this is awesome guys thank you for
77:02 - showing that
77:03 - willpower and i know whenever these
77:05 - things happen that we're going to
77:06 - conquer it we're going to overcome it
77:08 - and we'll get through this sort of stuff
77:10 - awesome right
77:11 - so let's see yep
77:14 - i'm going to go to the facebook group
77:16 - the five day react
77:17 - challenge is the stream down or are we
77:20 - back live
77:23 - it says live now back somebody says back
77:26 - hey are we back i can't believe it if
77:29 - we're back
77:30 - back back let's go
77:35 - and on the same stream uh let's go get
77:44 - that energy back out guys just get it
77:46 - going baby
77:47 - we ain't going down facebook can't take
77:49 - us down
77:50 - exactly guys let's go
77:53 - [Music]
77:54 - now's coming in for the trail mix
78:09 - [ __ ] we're still live on youtube but why
78:14 - why does this keep happening
78:18 - i think what we'll do is let's drop a
78:20 - link to the youtube in the facebook
78:22 - uh chat dude and that will save everyone
78:25 - yeah let's go ahead and do that
78:29 - so guys inside the comments maybe inside
78:31 - of facebook if you guys can all help out
78:33 - by going to the facebook group chat
78:35 - and just drop that in the comments and
78:37 - that will actually go ahead and
78:40 - reach over to the youtube link
78:43 - i think that will help a lot of people
78:44 - out yeah and maybe even in slack channel
78:47 - to let them know about this
78:48 - but um i mean
78:52 - do we end the stream and start it again
78:56 - no let's keep the stream we still have
78:58 - 900 we still have a thousand people on
79:00 - youtube dude
79:01 - i know but we have zero people on the
79:03 - facebook group
79:05 - so and we mainly you know like
79:08 - i think i don't know i feel like we
79:10 - should really
79:14 - yeah we mean we could do it if
79:15 - everyone's watching right now we could
79:17 - go ahead and
79:18 - pause the stream here and restart it
79:20 - again
79:21 - as day two what do you think
79:29 - i don't feel like that's
79:33 - i would say maybe drop the link
79:36 - in facebook i mean what do you guys
79:38 - think like what's the best
79:40 - thing that we should do right now don't
79:42 - end facebook is not working
79:44 - yes a lot of people are saying send
79:45 - people from facebook
79:47 - to here they're saying no don't end it
79:49 - okay we have
79:50 - joined on youtube no worries are you
79:52 - guys coming in from facebook right now
79:55 - if you if i start to see a bunch of
79:57 - people coming in from facebook
79:59 - we will just keep this one running but
80:01 - if we're not then we're gonna go back
80:03 - because you know
80:06 - yeah and what we could do maybe is
80:08 - inside the facebook group afterwards
80:10 - link the youtube video as a post so they
80:13 - have the entire
80:14 - thing you know okay don't end don't end
80:17 - don't drop facebook okay
80:20 - all right so a lot of people are here
80:21 - from facebook okay all right all right
80:23 - let's keep on going let's keep on going
80:25 - all right hey all right guys
80:29 - we'll keep going like yes
80:33 - okay let's keep this thing going all
80:36 - right guys with that said we're gonna
80:38 - pretty much jump right back into the
80:39 - coding so there's no more down time for
80:41 - you guys
80:42 - exactly so here we have
80:45 - the image dropping right here so we have
80:48 - the we're going to save it and what does
80:50 - it say login is not defined okay so in
80:52 - app.js
80:53 - we need to go ahead and import the login
80:54 - component so i'm going to go ahead and
80:56 - do the following
80:59 - do this login there we go save the file
81:02 - um we should see now
81:06 - if we have login.js uh it should be
81:09 - there we go so we get that huge
81:10 - amazon logo okay i'm going to go ahead
81:13 - and give that a class name
81:15 - so here inside of image i'm going to go
81:16 - ahead and drop that down give it a class
81:18 - name of login
81:19 - logo okay like this and i'm going to go
81:22 - ahead and just push this a little bit
81:24 - forward
81:25 - like so and now we've got this lovely
81:27 - image
81:28 - right here and what i'm going to do is
81:30 - i'm also going to make this a link
81:32 - so this is actually going to be
81:33 - clickable and it's going to take you
81:35 - back to the home page
81:37 - okay so it's going to be a link and it's
81:39 - going to take you back to the home page
81:41 - and then we're going to go ahead and
81:42 - close up that link over here so
81:44 - it was for the worst reason dude it was
81:46 - like
81:48 - like it just breaks my heart it was like
81:51 - facebook
81:52 - thought that i was not me and it just
81:55 - blocked
81:56 - me and then i had to like recreate a
81:57 - password
81:59 - really like literally was like oh i
82:01 - don't think it's you
82:02 - like it just blocked and it's like
82:05 - that's
82:06 - so annoying dude like literally things
82:08 - that have never
82:09 - happened before ever like since the
82:12 - start
82:12 - of we've done how many live streams
82:15 - we've done like 40 live streams
82:17 - in the last like month or a month and a
82:19 - half and
82:20 - none of these errors have ever happened
82:22 - it's just the most bizarre
82:24 - freaking thing i've ever experienced
82:27 - exactly even yesterday that we had the
82:29 - internet she was like
82:30 - guys it happens when we just go live on
82:33 - these bigger
82:33 - challenges for some reason like it's
82:35 - crazy guys it's like the most
82:37 - frustrating experience because we're
82:40 - doing this
82:40 - for the people and then it goes down and
82:43 - it just puts friction and now somebody
82:45 - who was
82:46 - probably going to change their career
82:47 - forever and become a developer
82:50 - now they literally don't get to see the
82:52 - video and they don't get to
82:54 - become a developer they just drop out
82:56 - they're just like hey yeah
82:57 - i don't think i'm gonna do the challenge
82:58 - anymore exactly
83:01 - yeah super annoying guys um
83:05 - but we can see that number coming up on
83:07 - the positive note so a lot of you guys
83:09 - have made it over
83:10 - yeah and we can see we're actually
83:12 - climbing back up to that original number
83:13 - again so
83:15 - that's all right it's increasing now
83:17 - yeah
83:18 - somebody's like um please play the sad
83:21 - music
83:24 - rip facebook live stream right now
83:35 - we're back we're back live
83:38 - nice
83:41 - all right so what we're gonna do now is
83:44 - we have
83:45 - that link okay so the link we need to go
83:47 - ahead and import
83:48 - from a reactor dom so i'm going to go
83:50 - ahead and import that we're going to use
83:52 - this layer but i'm going to go ahead and
83:53 - pop that out for now so
83:56 - with that said this is going to be
83:57 - linked to equals there we go
84:00 - so amanda was like mark zuckerberg and
84:03 - jeff
84:04 - bezos are all jealous yeah exactly
84:08 - honestly guys they are dude they saved
84:11 - this
84:11 - and now if we click the amazon picture
84:14 - kazi it should take us back
84:16 - to the home page mark is threatened by
84:18 - qazi
84:20 - all right so okay i'll click okay so i
84:23 - click that button
84:24 - yep nice okay so that takes us back so
84:27 - if we click the logo so let's go back
84:29 - into the sign in page
84:30 - hey are we going to throw object fit on
84:32 - this bad boy
84:33 - we are going to throw object fill on
84:35 - that so we're going to go ahead and
84:36 - quickly fix that because right now it's
84:38 - very hard to see anything else with that
84:40 - huge logo in there
84:41 - so i'm going to apply the following
84:43 - styles to this so
84:44 - we're going to target the login logo and
84:46 - we're going to say margin top
84:48 - of 20 pixels margin bottom of 20 pixels
84:51 - object fit contain
84:52 - and this keeps the aspect ratio whenever
84:55 - we're resizing and we're saying width of
84:57 - 100 pixels
84:58 - and then margin right and margin at the
85:00 - bottom okay
85:01 - so that's going to be the first one and
85:04 - then what we're going to do is we're
85:04 - going to target the login container
85:06 - so i'm going to go ahead go back and do
85:08 - log in so like this login
85:11 - target and we're going to say display
85:13 - flex so
85:14 - display flex like so i'm going to do
85:17 - flex direction column so flex direction
85:20 - column
85:21 - like so and then i'm going to say
85:24 - align items in the center align items
85:28 - center save it and this actually pulls
85:31 - everything into the center
85:33 - i'm going to give the height 100 view
85:35 - height
85:36 - or height 100 view height like so i'm
85:38 - also going to give it a background color
85:40 - of white and the reason why we're going
85:41 - to do that
85:42 - is because um actually we can keep that
85:45 - keep that covered for now i'm going to
85:46 - add in anyway
85:47 - because it might have been a reason
85:48 - afterwards but we leave it afterwards if
85:50 - it doesn't work
85:52 - okay so now we have the amazon logo at
85:55 - the top
85:56 - and what we're gonna do next is go ahead
85:59 - and go back
86:00 - over to our login and
86:03 - here now we have
86:06 - after the link gonna have a container
86:08 - called the login container
86:10 - it's gonna create dev it's gonna be div
86:13 - it's gonna have a class name so div
86:16 - class name
86:17 - of a login container so login underscore
86:20 - underscore container like that
86:23 - and then this one is going to
86:26 - contain all of the the user input so the
86:29 - email the password all that stuff that
86:31 - we saw before
86:32 - it's going to have a h1 and inside this
86:34 - h1 it's going to say sign in
86:36 - so oops so it's going to say sign in
86:41 - signs in and then we're also going to
86:43 - have
86:45 - a h5 which says email
86:48 - okay so as you know firstly we're going
86:50 - to have a form so the first thing we're
86:52 - going to do is we're going to have a
86:52 - form
86:53 - this is going to be where everything
86:55 - sits inside of so we're going to have a
86:56 - form
86:57 - and then here we're going to have an h1
86:58 - and i'm sorry an h5
87:01 - and guys for anybody that gets lost or
87:03 - anything like that don't worry
87:05 - keep coding for now but i just want to
87:06 - let you know that we're we are gonna
87:08 - have this repository
87:09 - so you can actually go and download the
87:11 - code um
87:13 - and be good to go so at the end of day
87:16 - two we're gonna push our code here so
87:18 - have everything updated but you know
87:20 - don't use that as an excuse to
87:21 - just be lazy and not um actually code
87:25 - exactly guys exactly so make sure you do
87:29 - give it a full attempt at coding it
87:31 - yourself and you'll get the most value
87:33 - but we will be sharing the code for you
87:34 - guys afterwards so he's going to say e
87:36 - mail and then we're going to have a
87:39 - input
87:41 - so it's going to have an input over here
87:43 - and this input guys is going to have a
87:46 - type of text so by default is actually
87:49 - text we're going to write anyway so type
87:51 - of text
87:52 - like this then we're also going to say
87:55 - we'll set this up afterwards we're going
87:56 - to have one which is an email
87:58 - i'm going to copy this i'm gonna go
88:00 - ahead and and real quick sonny i'm gonna
88:01 - actually go live on facebook just for a
88:03 - little bit and let them know that we're
88:05 - on youtube
88:05 - okay okay so
88:09 - so here now what we're gonna do is i'm
88:11 - gonna go ahead and have the
88:13 - password like so and
88:17 - here we have the type is going to be not
88:20 - text
88:21 - but password now guys i want you to pay
88:24 - very close attention to this right here
88:26 - because if we change the type to become
88:28 - a password
88:29 - what happens then is that the field as
88:32 - you type in
88:33 - it's going to basically come up as like
88:35 - that sort of asterisk
88:36 - it's not going to show your password
88:38 - your characters so
88:39 - very important thing you don't want your
88:41 - password to be in clear text okay
88:43 - you really don't want that uh for
88:44 - obvious reasons um so
88:46 - we we're gonna make sure that that
88:48 - happens like that then we're gonna have
88:50 - a button
88:51 - so let's go ahead and have a button like
88:52 - so this button will say
88:54 - sign in okay so we're gonna have a
88:56 - button which says sign
88:58 - in like this right
89:01 - so we have the button and then also just
89:03 - as a nice little finishing touch right
89:05 - underneath all of this form we're gonna
89:08 - have
89:09 - a p tag which says
89:12 - by signing in you agree to amazon's
89:14 - conditions of use
89:16 - and sell blah blah and this is what
89:18 - amazon said
89:19 - um but we're going to change it so
89:22 - amazon's
89:24 - to the amazon fake
89:28 - clone conditions of use and sell please
89:31 - see our privacy knowledge our cookies
89:32 - and blah blah blah
89:33 - right so this is like something that
89:35 - comes from amazon itself so if we go
89:36 - ahead and save this
89:39 - we should be able to see on the right
89:40 - hand side once it reloads
89:42 - um but cause he's currently finishing
89:44 - that live so
89:45 - what we can see is it's gonna have a p
89:47 - tag with this finishing stuff right here
89:50 - now there we go um what we're going to
89:52 - have next is a button
89:54 - underneath and this button is going to
89:55 - be you say you didn't have an account
89:58 - right let's say you didn't have an
89:59 - account you want to basically have a
90:01 - button which says not to sign in
90:04 - but you create your amazon account so
90:06 - create your amazon account
90:08 - like this okay now
90:11 - what i'm going to do here is create your
90:13 - amazon account like so create your oops
90:16 - create your amazon account here as well
90:18 - and then we are going to
90:20 - give the following we're going to need
90:22 - to give a bunch of stuff some class
90:23 - names so that we can come to style it
90:25 - so for this button i'm going to give a
90:26 - class name of
90:28 - login sign in button okay so this one's
90:31 - going to be login
90:32 - sign in button and for this one it's
90:35 - going to be a class name of
90:37 - login register button okay looking in
90:40 - the register button like this
90:43 - and i can see that number is coming up
90:45 - so that's awesome guys we
90:46 - almost have 1100 people on um
90:49 - youtube which is insane thank you guys
90:51 - for the support
90:53 - um so now we have this right here so we
90:56 - have create your amazon
90:58 - um account right there so we have the
91:01 - register button we have the sign in
91:02 - button
91:03 - we have the login container we have
91:05 - everything that we need at this
91:07 - point okay now what we're going to do is
91:10 - we're going to go
91:11 - over to our login.css and we're going to
91:14 - style this
91:15 - to look as we need it the first thing
91:17 - we're going to do is
91:18 - everything's sat inside of a container
91:20 - if you don't if you didn't see that so
91:22 - all of this the the sort of form and
91:24 - everything sat inside the logging
91:26 - container so here
91:27 - i'm actually going to go ahead and do
91:28 - login container so log in on this
91:30 - console container
91:32 - like so and then in here and apply it
91:35 - the following styles
91:36 - okay so it's going to pop this in right
91:40 - here
91:40 - so a few styles and we have the width of
91:43 - 300 pixels
91:44 - height to fit content right so it's only
91:47 - going to fit the content that we
91:48 - actually have inside that container
91:50 - then we're going to say display flex
91:52 - flex direction column
91:53 - or the radius of 5 pixels so it's
91:55 - slightly rounded
91:56 - and then we're gonna say order um
92:00 - one pixel solid library and a padding of
92:02 - 20 pixels okay
92:04 - now i saw marius florescu said when we
92:07 - get to see some tutorials on firebase
92:08 - cloud functions
92:09 - tomorrow we cover cloud-based fire cloud
92:11 - functions and
92:12 - stripe payments so make sure you stick
92:16 - around till then we have some
92:17 - interesting
92:18 - really really cool stuff for you guys
92:20 - and that's going to cover all of the
92:21 - cloud functions
92:22 - tech and everything like that so now as
92:25 - soon as we hit save we should see
92:26 - everything centered
92:27 - it has a nice border okay so that's
92:30 - really cool
92:31 - now what we're going to do is we're
92:33 - going to go ahead and target the h1
92:35 - which is inside the login container so
92:38 - i'd like to show you guys a mix of
92:39 - how you can target elements in this case
92:42 - we are simply targeting it like this
92:44 - we're saying inside long container
92:46 - target the first chart which is h1
92:48 - change the font weight and the margin
92:50 - bottom
92:50 - done next what we're going to do is
92:53 - target
92:54 - inside the login container inside the
92:57 - form
92:57 - the h5 element so this one right here
93:01 - so inside the login container inside the
93:03 - form is h5
93:05 - how do we do that we go ahead and do
93:07 - this
93:08 - we say inside the login container inside
93:11 - the
93:11 - form target the h5 element and give it a
93:14 - margin bond with five pixels
93:16 - which is awesome and then we're going to
93:19 - go ahead and do the same thing
93:21 - for the input but we're going to apply
93:22 - slightly different styles here
93:24 - so you can see here we've got the form
93:27 - input field we're saying a height of 30
93:28 - pixels
93:29 - a margin bottom of 10 pixels a
93:31 - background color of white and a width of
93:33 - 98
93:34 - okay next what we're going to do
93:38 - is we're going to target the login
93:39 - container p tags
93:41 - so we're going to say any p tags which
93:42 - are inside the login container so this
93:45 - one by signing in
93:46 - you agree to blah blah blah here we're
93:48 - going to go ahead and add that in
93:50 - so we said target give it a margin top
93:52 - of 15 and then the font size we're
93:53 - decreasing it
93:55 - to be um a bit smaller so we're going to
93:58 - go ahead and say
94:00 - um oops what am i done the yeah we're
94:01 - going to say decrease it to become
94:04 - 12 pixels okay i'm going to go ahead and
94:07 - format that
94:09 - and then next what we're going to do is
94:10 - for the sign in button so this is the
94:12 - same styling we've been doing for the
94:13 - other buttons
94:14 - i'm going to go ahead and do this so i'm
94:17 - going to go ahead and say
94:19 - login sign in button and this is the
94:21 - same styling we did earlier that says
94:22 - background of orange
94:24 - border rate is 2 pixels width 100 pixels
94:26 - height of 30 pixels
94:28 - border 1 pixel solid margin top of
94:31 - 10 pixels and then the border color as
94:34 - so
94:34 - okay then that means it's you see that
94:38 - this is starting to form together really
94:39 - nicely yeah
94:40 - then we've got the final creme de la
94:42 - creme to this which is the ram
94:44 - um the register button so here you need
94:47 - to go ahead and do
94:48 - login underscore underscore register
94:50 - button
94:51 - and here we have a border radius of two
94:53 - pixels width of a 100
94:55 - height of 30 pixels border one pixel
94:57 - solid margin top of 10 pixels and a
94:59 - border color
95:00 - of dark gray now guys you can see how
95:03 - insane was that
95:04 - right we just created we added some
95:06 - styles to it and you can see like
95:08 - we get that beautiful amazon looking
95:11 - login page now i think that looks really
95:14 - awesome
95:14 - let me know in the comments right now if
95:16 - you got to this point or if you think it
95:18 - looks like amazon
95:19 - i mean i think it looks like amazon you
95:21 - guys can let me know i think we've done
95:22 - a damn good job of making that look like
95:24 - amazon
95:25 - um let us know in the comments right now
95:27 - if you're pumped about that design
95:29 - and um yeah let's keep that energy high
95:33 - guys
95:33 - um because that is an awesome looking
95:36 - amazon right now so
95:38 - so we have jason here says i'm loving it
95:40 - dtr says it's le
95:42 - patch moore says it's just like amazon
95:44 - warp says pretty close
95:46 - thank you dude masuda says awesome
95:48 - perfect job aki says damn
95:50 - varsity says proper levani says it's so
95:53 - cool
95:53 - patch it's so beautiful inote says a
95:56 - thousand oh a million billion percent
95:58 - nice dude um i think that says 1k likes
96:02 - oh yeah we just hit 1k likes as well
96:03 - thank you guys so much guys
96:06 - yes it looks like i'm saying great song
96:07 - okay so awesome guys
96:09 - loads of positivity from you guys so
96:11 - what we're going to go ahead
96:12 - next and do is actually go ahead and
96:14 - code some functionality to this right
96:17 - so now what we're going to do is go back
96:19 - to the login component so login.js
96:22 - now this is where it gets insane right
96:25 - so first what we need to do is we need
96:28 - to get out
96:29 - some kind of way to track what we have
96:32 - in our input fields
96:33 - so right now i have no way in the code
96:35 - to track that okay
96:36 - so what we're going to do now is go back
96:38 - to the top of the file we're going to
96:40 - use some state here so what i'm going to
96:42 - say is
96:43 - cons email set email so we're just
96:46 - creating a piece of state here this is
96:48 - how you write variables in react think
96:49 - of it that way
96:50 - we say use states this is the use date
96:52 - hook and by default the
96:54 - value is empty brackets like this we
96:57 - need to then go ahead and import it
96:58 - as such like that and then i'm going to
97:01 - copy this
97:02 - and i'm going to do the same thing for
97:04 - password so password
97:06 - go here set password like this
97:09 - and there we go so now we have a bunch
97:11 - of stuff which is pretty cool
97:13 - and then what we're going to do is to
97:14 - connect these to these
97:16 - pieces of state what we need to do now
97:19 - is go to
97:20 - and i love this by bhavi kalantri says
97:23 - getting errors
97:24 - solving them and moving forward that's
97:27 - what we're talking about guys
97:28 - i love it when we actually get errors on
97:30 - the live stream because
97:32 - it's really cool to go ahead and show
97:33 - you guys what we how we debug and how we
97:36 - go through that process
97:37 - ourselves all right so now we're going
97:39 - to go ahead and on the input
97:41 - type where we have text this is going to
97:43 - be from the email
97:45 - so we say value equals email
97:48 - now what we just did here is we mapped
97:50 - the value email to this email state
97:53 - right here
97:54 - and that goes ahead and connects the two
97:56 - things but
97:57 - we need to track when the user types in
98:00 - so so every
98:01 - time the user types in it triggers
98:02 - something called an unchange
98:04 - and what this does is it gives us an
98:06 - event
98:07 - right so an e what we do is we pair this
98:10 - event with an arrow functions we say
98:12 - every time
98:12 - you type in it fires off this event and
98:14 - then we're going to say
98:16 - set the email to whatever e
98:19 - dot target dot value is now e dot target
98:22 - of value is essentially what the user
98:24 - typed in
98:24 - so as the user types in we're setting
98:27 - the email
98:28 - and then what's happening is it gets
98:31 - mapped here
98:32 - now this creates like a sort of circle
98:34 - which means that if we type inside of
98:36 - the email
98:37 - it actually goes ahead and we we have
98:39 - access to that now
98:40 - inside of this beautiful email variable
98:43 - okay
98:44 - um so i wouldn't recommend setting these
98:47 - to no
98:48 - guys because inside of an input you
98:50 - never really have no
98:52 - is essentially what you would use is an
98:55 - empty string so don't
98:56 - don't have no have an empty string okay
99:00 - now for the password what we're going to
99:02 - have is we've already done the input
99:04 - type as password
99:05 - i'm going to go ahead and do value
99:06 - equals password like this
99:09 - and then we're going to say on change so
99:11 - it's the same logic applies but we're
99:13 - here we say e
99:14 - every time we type in it fires off that
99:16 - event and we're going to say set the
99:17 - password
99:18 - to become e dot target dot
99:22 - value which is basically whatever the
99:23 - users typed in now we have um
99:26 - tracking for the email and for the
99:28 - password and every and everything gets
99:29 - updated inside this
99:31 - uh piece of state and this password
99:33 - piece of state
99:34 - okay and we have kazi back
99:38 - hey let's go yeah man i'm back
99:42 - uh just went live told everybody on
99:44 - facebook to move
99:45 - over the party is taking place on
99:47 - youtube and then we're gonna be back
99:50 - awesome dude that's nice and i can see
99:52 - some people are flooding in this is nice
99:55 - yep perfect thank you guys appreciate
99:58 - the love
99:59 - awesome so now you guys can see that we
100:02 - actually have so
100:04 - um we we can track when we type in the
100:06 - email and password
100:08 - but we also want to trigger off two
100:10 - functions now we want to trigger a
100:12 - function
100:12 - when we do sign in and we want to
100:15 - trigger a function when we do ch
100:16 - create your amazon account so we're
100:19 - going to link a function to this first
100:21 - button which says sign in and we're
100:22 - gonna say on
100:23 - click right on click here i'm gonna say
100:26 - on click
100:26 - sign in okay so i need to create that
100:29 - function up here and say const
100:31 - sign in
100:34 - and this actually takes an event because
100:37 - it's inside of a form
100:40 - i'm also going to set the button type
100:42 - here guys
100:43 - to submit the button type to something
100:47 - that means when you're typing in the
100:48 - input
100:49 - so let's say you're typing an email
100:50 - typing the password if you hit the enter
100:52 - key now
100:53 - it will actually trigger this sign-in
100:55 - function which is the natural behavior
100:56 - what we expect
100:58 - but we don't want it to refresh so this
101:00 - next line is crucial
101:01 - we said e dot prevent d40
101:05 - okay so
101:09 - this will actually go ahead and prevent
101:12 - the page from refreshing we don't like
101:14 - refreshing and react
101:15 - we want it to be super clean i can see
101:17 - leonardo chunkin says
101:19 - prevent default so he's getting he's
101:21 - already beat me there so that's awesome
101:23 - yeah so we do that
101:26 - and then what we're gonna say is um some
101:29 - fancy
101:30 - firebase login sheet okay
101:33 - so fancy firebase stuff happens here
101:35 - okay um
101:37 - and then what we're gonna do is
101:38 - underneath here for the
101:40 - uh this button i'm gonna say on click
101:44 - and this one is to be the register right
101:47 - this one is going to be the register
101:49 - function so on click
101:50 - register register like so okay
101:54 - then here i'm going to go ahead and
101:56 - create a another function so we'll say
101:58 - const
101:59 - register like this this takes an
102:02 - e i'm going to go ahead and do this so e
102:05 - dot prevent default we don't actually
102:07 - need this here but i want you guys to
102:08 - get into a habit of doing this
102:10 - e dot prevent default and then what
102:12 - we're gonna do is
102:14 - we're gonna say here do
102:17 - some fancy firebase
102:20 - register g okay
102:24 - so it's gonna basically just need to
102:25 - like fill out these two bits now so how
102:27 - do we do all that firebase stuff right
102:29 - how do we get
102:30 - all of that firebase stuff happening and
102:32 - all that sort of
102:33 - i mean we would think it would be tricky
102:35 - right but what we need to do now
102:37 - is we go and hop over to firebase cozy
102:46 - and we actually started some of it
102:48 - yesterday
102:49 - yeah we did yeah and he did yeah
102:53 - so just as a reminder for those of you
102:55 - guys even if you were here yesterday
102:57 - what you need to do is set up an account
102:59 - go to firebase
103:01 - login to the account that you have go
103:03 - into the project that you set up
103:05 - so um we need to go ahead and find
103:08 - the project that we set up yesterday
103:11 - yep um should be in the other one
103:15 - and we basically went ahead and
103:18 - grabbed the um config file
103:22 - yeah how you get it is just go to
103:24 - project settings
103:25 - go all the way down to where you see
103:27 - config
103:28 - copy that and then bring it over and we
103:31 - put it
103:32 - in our file called firebase.js so you
103:36 - guys can
103:37 - also put it there exactly so that's
103:40 - going to set you up really nicely for
103:41 - what we need to do next
103:45 - okay so with that said now let's go
103:48 - ahead and open up
103:49 - uh firebase and let's make firebase full
103:51 - screen for a second
103:54 - okay now on the left hand side you want
103:57 - to go to the authentication tab
104:00 - so it's where it's the one that's just
104:02 - below authentication
104:04 - and here guys we go to sign in method
104:08 - so it says that button there which is
104:10 - set up sign in method or that top tab
104:12 - there we go go to email and password hit
104:14 - the little pen icon or click it and
104:16 - click enable
104:18 - right all right so top thing which is
104:20 - enable and then click done
104:22 - so and that's actually gone ahead and
104:25 - set up the first part so
104:26 - it's crazy how simple this is going to
104:28 - be now yeah so
104:29 - we need to do is we need to go over back
104:32 - to our code
104:33 - open up the terminal and let's open up a
104:37 - second terminal
104:39 - all right let's do it
104:43 - so boom there we go yep so open the
104:46 - second time
104:47 - yep cdn and what we're going to do here
104:49 - is we are going to
104:51 - do npm all right so let me go ahead and
104:54 - get
104:54 - my access as well i'll request that um
104:58 - but i mean you can type this one so
104:59 - it'll be npm install firebase
105:02 - so let's type out npm install firebase
105:05 - and this will pull firebase into our
105:07 - project because we're going to need it
105:09 - for a few things right now
105:10 - and they need to do the global install
105:12 - as well if they haven't done that
105:14 - already
105:15 - for the firebase tools yes yeah so
105:18 - basically what that looks like
105:19 - is this command over here it should look
105:21 - like sudo npm install
105:24 - global firebase tools okay so this is
105:26 - the command you're gonna need
105:27 - if you haven't done this yet exactly
105:31 - you're going to need to do that do you
105:32 - do all the things like the deployment
105:34 - and all that stuff so that's going to be
105:36 - crucial for you thanks guys for all the
105:38 - love people are like hey pumped to see
105:40 - quasi here missed him yesterday thank
105:41 - you guys
105:42 - yeah yesterday the connection was just
105:44 - kept breaking for whatever reason
105:46 - so we had the demo gods on our ass
105:49 - yesterday
105:50 - we still kind of do yeah they still do
105:53 - dude
105:54 - yeah crazy right so we just installed
105:57 - firebase into our project so now what we
105:59 - need to do is go over to firebase.js
106:02 - oh so we're done right with the front
106:05 - end of the
106:06 - user authentication now we're doing the
106:09 - yeah so we actually built the front end
106:11 - and what we're going to do now is build
106:12 - the login functionality
106:14 - right so user authentication working on
106:17 - user authentication
106:20 - yeah working on user authentication with
106:21 - firebase
106:23 - all right here we go boom
106:27 - nice um you don't really need the url at
106:30 - the top somebody's saying that that
106:31 - it doesn't matter it's just console it's
106:34 - like firebase console you
106:36 - you're not gonna go there by like typing
106:38 - in the actual thing anyway
106:40 - yeah exactly all right so sweet yeah
106:43 - we're going to do is at the top of the
106:45 - config file so where we added our
106:47 - convict before
106:48 - yeah we're going to say import firebase
106:50 - from firebase
106:51 - that's crucial here somebody says help
106:54 - me i'm on chromebook and can't do any of
106:56 - this
106:56 - you should not be on chromebook yeah
106:59 - exactly and guys if you are on something
107:01 - which doesn't support
107:02 - use something like repple so repl.it
107:06 - is a website where you can go ahead and
107:08 - actually code on the repo
107:10 - ide or use like code sandbox but still
107:13 - like it's going to give you problems
107:15 - you're going to run into weird ass
107:17 - problems and issues so it's just so much
107:19 - better if you
107:20 - don't use a chromebook and use a macbook
107:23 - or a windows computer or like borrow a
107:26 - computer from a friend
107:28 - exactly yeah definitely so
107:31 - now what we're gonna do is we're gonna
107:32 - set up two things right
107:34 - we are going to first initially
107:36 - initialize the app so we're going to say
107:38 - const
107:39 - firebase app and this is going to be
107:43 - where we're going to say firebase dot
107:45 - initialize app so i'm going to go ahead
107:47 - and
107:48 - make sure i suppose right so
107:49 - firebase.initialize app
107:51 - and all we need to do here guys is pass
107:53 - in this config
107:55 - right so it's an object we just pass it
107:56 - in that's it pass that in
107:59 - and this will go ahead and set up
108:01 - everything
108:02 - whoa we just got a massive donation from
108:04 - bradley damn
108:05 - hey 15
108:08 - donation thank you so much dude dude
108:11 - thank you that is incredible
108:13 - and he's actually in profit with
108:14 - javascript and profitable shortcut
108:17 - down whoa
108:22 - that is sick thank you eltav og
108:26 - and he just dropped a 20 donation and he
108:29 - goes sorry for being so negative i'm
108:31 - running out of options and i've begun to
108:32 - get more frustrated with my inability to
108:34 - land a job
108:36 - i'm going to give this my all i'm not
108:38 - interested in the prizes
108:40 - i'm just interested in learning somebody
108:43 - give this man
108:44 - a big big round of applause because i
108:47 - think that's the attitude
108:49 - that you absolutely need to have in
108:51 - order to crush it like
108:53 - 100 percent and yeah thank you guys
108:56 - appreciate it exactly guys bring your a
108:59 - game
109:00 - here guys 110 is what we said from day
109:02 - one
109:03 - and if you put that in guys there has
109:05 - been already
109:06 - like a lot of people who have landed
109:08 - clients landed jobs with this stuff
109:10 - so make sure you bring that a game and
109:12 - we will promise you we will give
109:14 - your best our best effort in changing
109:16 - your life
109:17 - okay so we're like
109:21 - what i say is we're like 401k we'll
109:23 - match you okay you give your 10
109:25 - will give you 10 you give your 300 we're
109:27 - going to give you our 300 percent
109:29 - exactly guys and we are going to be
109:31 - there the entire way
109:33 - to help you get to that point so we just
109:36 - went ahead and initialized the app with
109:38 - the firebase config
109:40 - so that's the first part and then we got
109:42 - these the second step is initializing
109:44 - two things so we want to initialize the
109:45 - database
109:46 - we're gonna say constdb equals
109:49 - firebase app right so firebase app the
109:52 - one that we just initialized
109:53 - dot firestore right the firestore is the
109:56 - real-time database in firebase
109:59 - and then the second one we're going to
110:00 - do is const auth
110:02 - right auth equals firebase.org
110:06 - like this now this actually goes ahead
110:09 - and give us
110:10 - gives us a variable that we can use to
110:12 - handle all the signing in
110:14 - and everything like that now we want to
110:17 - be able to use this stuff
110:18 - outside of this file so we need to go
110:20 - ahead and do export
110:22 - and here i'm just going to say db and
110:24 - auth
110:25 - this allows us to export these two
110:27 - things the database and the
110:28 - authentication
110:29 - oops there is any authentication and be
110:32 - able to use this oops that should not be
110:33 - deb it should be db
110:35 - and that will actually allow us to go
110:36 - ahead and
110:39 - use this outside of the file so
110:42 - with that said let's go back to our
110:44 - login.js
110:46 - over here and now we've got the sign in
110:48 - and the register okay
110:51 - now for the login let's do the
110:54 - the registering first because i'll help
110:56 - you actually create an account
110:58 - okay so thank you so much atarva lawand
111:01 - thank you so much for the donation you
111:02 - guys love your projects man
111:04 - hats off i appreciate that dude
111:07 - um so now inside of the register
111:10 - we're gonna go ahead and say auth so
111:12 - firstly let's go ahead and pull this in
111:14 - from our local
111:15 - firebase so at the top we can say import
111:17 - auth from
111:18 - our local firebase and then here we're
111:21 - going to do auth
111:23 - and then we're going to say dot then
111:25 - we're going to say create
111:26 - user with email and password okay
111:30 - now here and this is this is attached to
111:32 - this guys so it does sometimes
111:34 - drop off like that and it's completely
111:35 - fine to do that we're gonna say
111:37 - create user with email and password and
111:39 - we're just gonna pass in our email
111:41 - and password oops email and password
111:44 - like so
111:45 - now this is the email password in our
111:47 - state remember the one we connected to
111:48 - those input forms
111:50 - so it'll work really nice then we're
111:51 - going to say then
111:53 - and what this does guys is it literally
111:56 - goes and creates a user
111:59 - with an email and password and then
112:02 - it will come back if everything was good
112:05 - right it will come back
112:07 - with something called an auth object
112:09 - okay
112:10 - now if the authentication was good and
112:13 - everything was
112:13 - good and everything went smooth i'm
112:16 - basically going to go ahead and say
112:17 - console.log
112:18 - the authentication object that came back
112:20 - so this would mean
112:22 - that it successfully created
112:26 - a new user with email and
112:29 - password right so that means it did that
112:32 - and then we're gonna say catch so for
112:34 - any reason there was an error
112:36 - we're gonna get the error and we're
112:38 - gonna say alert
112:40 - on the screen the error message
112:43 - okay so as soon as i hit save now this
112:46 - is going to be
112:47 - literally all we need to do to register
112:50 - an app so kazi let's go ahead
112:52 - and go to the localhost
112:56 - oh yeah all right here we go boom dude
112:59 - it's so easy to catch myself if i'm
113:01 - muted i love this new audio setup like
113:04 - it's just
113:05 - so good so good so
113:09 - good yeah even though we both got new
113:12 - mics and everything and it sounds
113:13 - amazing when you go closer like yeah and
113:16 - you can hear yourself in the studio
113:17 - monitors like these
113:18 - headsets that we have we can actually
113:21 - hear our own self and if we don't hear
113:23 - our own self it means you're
113:24 - like it's it's just so good man makes
113:26 - you so happy
113:27 - but like we were thinking about it and
113:29 - we were like screw it let's invest into
113:31 - this because it's going to help
113:32 - so many people just the audio and
113:34 - everything so sunny just got that
113:36 - equipment yesterday exactly guys it was
113:38 - actually today so we set it up and we're
113:40 - using oh nice
113:42 - nice short mics for the win all right so
113:45 - what we're going to do now kazi is
113:47 - in the email and password let's go ahead
113:49 - and add an email and a password
113:51 - hey corey says this is sick i'm showing
113:54 - this on screen
113:56 - uh corey says just signed up for pwj if
114:00 - you haven't
114:01 - you are missing out and should consider
114:03 - the investment in pwj but most
114:05 - importantly in yourself
114:06 - keep going y'all and looking forward to
114:09 - what's to come
114:10 - nice dude thank you so much
114:14 - that's lit see your message all right
114:18 - um awesome so let's go ahead and
114:22 - um for the registering
114:25 - we're going to go ahead and say oh yeah
114:27 - so cause the end are your email and
114:29 - password
114:30 - all right here we go
114:37 - so what we're going to do is once we go
114:38 - ahead and do this
114:40 - um guys somebody goes when kazi says
114:44 - so good you sound like anastasia from
114:47 - 50 shades of grey damn oh [ __ ]
114:52 - it's so good you know david blaine
114:56 - his voice i love his voicing he's always
114:58 - like
114:59 - hey guys you know i didn't know magic
115:02 - before but
115:03 - yeah can i learn magic
115:05 - [Laughter]
115:08 - you clicked there right i did i okay
115:12 - i hit create your amazon it says the
115:14 - email is already in use by another
115:16 - account
115:17 - oh no so you actually did it you did it
115:19 - right so when you could create the first
115:21 - time it created the account
115:22 - and in the console we actually logged
115:24 - out what it showed
115:26 - got it okay so let's open up the
115:28 - inspector
115:30 - um okay
115:33 - inside of um i was just reading the
115:37 - comments shabir says i want to get out
115:38 - of this country i can't use super chat
115:40 - damn thank you
115:41 - that is sick love the sentiment
115:44 - all right super chat is a donation
115:48 - on youtube there we go and see it says
115:50 - object right
115:51 - where there it goes so up there yeah so
115:54 - the first time kazi clicked it guys it
115:55 - came back with this
115:57 - now this means that it's successfully
116:00 - logged in now if we click on user
116:03 - you'll actually see where what user oh
116:06 - right here
116:06 - like that you actually see all of the
116:08 - logins of
116:09 - credentials right so these are all the
116:12 - login credentials you've got the email
116:14 - you've got the image associated with the
116:16 - email you have if the email is verified
116:18 - or not
116:19 - and you've got a bunch of stuff uh below
116:21 - it but this is really really cool
116:23 - okay this is awesome because now what we
116:26 - just showed you guys
116:27 - is they created the user so what we
116:30 - would naturally want to do at this point
116:32 - is push them to the home page after they
116:35 - log in
116:36 - okay so what i'm going to do is i'm
116:39 - going to go ahead and pull in something
116:40 - called
116:41 - use history now use history is something
116:44 - from react rear so we need to import it
116:46 - do we need to inspect up right now we
116:49 - can close up the inspect yeah
116:51 - awesome so now what we're going to do is
116:53 - we're going to go to reactor we're going
116:54 - to import use history
116:56 - and i'm going to go ahead and pull it in
116:57 - like this we're going to go ahead and
116:58 - say const
117:00 - history equals use
117:03 - history like this right
117:06 - now what this does is it allows us to
117:08 - programmatically
117:10 - change the url so after they log in
117:13 - what we want to do is we just want to
117:15 - say if
117:17 - the user is authenticated oops sorry if
117:20 - the user is authentic owned
117:24 - sorry if the authentication comes back
117:28 - so if the authentication is not empty
117:30 - then we're going to say inside the
117:32 - history
117:34 - so this is the history of the browser
117:36 - we're literally saying
117:38 - push this new page so we're basically
117:40 - going to go ahead and send a redirect
117:42 - we're forcing you to redirect
117:44 - okay so save this and now kazi
117:48 - let's try a different email address and
117:50 - let's try and log in
117:52 - so you want to login or you mean create
117:54 - your amazon account
117:56 - create your amazon account got it so
117:59 - i'm gonna do cp youtube at
118:04 - gmail.com
118:06 - can't share the password because that's
118:07 - a secret
118:09 - and then i'm gonna do create your amazon
118:12 - account
118:14 - hey
118:15 - [Music]
118:18 - nice hey we just got another donation
118:22 - thank you so much for that and
118:26 - it is corey and corey says the positive
118:29 - impact this has on my life is unmatched
118:32 - i appreciate you so grateful to have cp
118:36 - looking forward to what's to come
118:40 - nice dude that is insane thank you so
118:43 - much for the donation cory
118:44 - oh actually i coach corey dude really
118:48 - yeah i was like she goes damn that's
118:51 - sick
118:52 - sick no that's amazing
118:56 - right so now what we're gonna do is
118:59 - we are going to go over to where's his
119:02 - street.push
119:03 - okay yeah so you see guys he logged in
119:05 - and it just redirected him to the login
119:08 - to the homepage sorry which is perfect
119:10 - right
119:11 - so he went ahead and logged in and they
119:13 - actually redirected him
119:14 - so now what we want to do is we want to
119:16 - do the same thing but for the login
119:19 - right so once we've created that account
119:21 - so now kazi has two accounts that he's
119:23 - created
119:23 - so let's go ahead and implement the
119:25 - login functionality
119:26 - so let's go ahead back to our code we're
119:29 - going to delete this comment here
119:30 - and because we already implemented some
119:32 - fancy sheeting so now we're going to go
119:34 - back to the sign in
119:35 - and here what we say is auth dot
119:40 - so if you say or sign in
119:43 - sign in with email and password
119:46 - and literally we do the same thing we
119:48 - say email password this is insanely
119:51 - simple for authentication guys
119:53 - i do not underestimate how powerful this
119:55 - is for authentication
119:57 - we say that'll give us back some kind of
119:59 - authentication
120:00 - and then all we're going to say is if it
120:02 - was successful same thing
120:04 - history dot push you to
120:07 - the home page if it was successful okay
120:10 - otherwise if it wasn't successful we're
120:13 - going to catch the error
120:15 - and then we're going to say get the
120:16 - error and
120:19 - alert with error dot message like so
120:22 - okay this is the error dot message like
120:25 - this
120:26 - now um we can save
120:30 - and what we're going to do now is let's
120:32 - go over to
120:33 - the sign in page all right let's go
120:38 - boom yep now
120:41 - go ahead and try and sign in now so we
120:44 - created an account previously
120:46 - um and what we should see now is when
120:48 - kazi hit sign and it should show us the
120:50 - home page
120:51 - if we did everything correctly
120:55 - okay so it says auth is not a function
120:59 - is let's go ahead and dive into this a
121:01 - little bit so
121:02 - what is happening here it says auth from
121:04 - firebase
121:06 - damn so george
121:09 - says he goes god bless
121:13 - the hour when the youtube algorithm put
121:15 - this channel in the recommended ones
121:17 - it has totally changed my life oh damn
121:20 - it's insane dude that's epic all right
121:24 - guys
121:24 - so we just ran into a bug yeah
121:27 - we're gonna go ahead and start debugging
121:31 - this issue right so this is where
121:34 - we need to like break it down don't
121:35 - freak out if your code doesn't work
121:37 - okay just take a deep breath and just
121:40 - break it down oh [ __ ]
121:42 - so you can turn that up bro i think that
121:45 - sounds good
121:46 - this is it guys it's like now what we're
121:48 - gonna do is
121:49 - we are going to go ahead and find this
121:51 - error so it said
121:53 - the authentication was not a function so
121:56 - let's go ahead and check we import the
121:58 - correct authentication everything's good
122:00 - let's go down to the sign in everything
122:02 - looks good here
122:04 - but oh somebody's like dot then instead
122:07 - of dot off
122:08 - so try that um alexandros was the first
122:12 - one who said that so shout out to
122:14 - alexandra's but damn you guys are
122:15 - freaking
122:16 - on the ball exactly guys that was it
122:19 - yeah and quasi this is a moment of truth
122:23 - let's go ahead and give this a try
122:25 - will this work will this work
122:29 - hey we'll find out so now i'm going to
122:32 - type in so the same
122:34 - exact email right yep
122:37 - suspense is building guys
122:41 - let's go that worked
122:46 - [Applause]
122:48 - i actually played the applause wait
122:51 - applause is the right one right
122:53 - yeah oh yeah it was yeah i thought you
122:55 - played the left track
122:57 - that was dope well done guys we figured
123:01 - out the issue
123:02 - and we solved it right yeah john ford is
123:06 - like the background music is making you
123:07 - more dramatic
123:09 - nice background music nice
123:12 - nice guys right so felipe
123:16 - said jesus christ
123:19 - spencer got real guys
123:20 - [Laughter]
123:23 - so we successfully signed in right
123:26 - but how do we then go ahead and
123:29 - find who is signed in guys if you like
123:32 - that debugging that sunny just did
123:34 - for sonny go ahead and smash that like
123:37 - button guys so we can send this video
123:40 - flying out to everybody else we're at 12
123:42 - 32 right now
123:44 - once i say that hopefully that number
123:46 - will start
123:47 - going up thank you hey and another
123:50 - beautiful donation from calvin
123:52 - kabanda oh nice timing on that sunny
123:56 - that was fantastic
123:57 - thank you for the donation
124:01 - all right let's keep it going so much
124:03 - dude all right
124:04 - okay so now what we're gonna do is once
124:07 - we we have the sign in we have the
124:08 - register right but how do we go ahead
124:11 - and actually sort of keep track of who
124:14 - is signed in
124:15 - okay so what we're going to do is we're
124:17 - going to go back to app.js
124:19 - and then what we use here guys is like
124:21 - essentially we're going to create a
124:23 - listener okay so i'm going to create a
124:25 - listener which is
124:26 - always going to keep track of who is
124:29 - signed in
124:30 - okay so in order to do that we're going
124:33 - to go ahead and create something called
124:34 - a use effect so we need to do
124:36 - inside of the function yeah so we're
124:38 - going to say use
124:39 - effect now a use effect if you've never
124:41 - seen one before
124:42 - it's written like this so it simply has
124:44 - an arrow function inside
124:46 - and in this case we're going to go ahead
124:48 - and make it very simple
124:49 - and we're going to add these empty
124:50 - brackets here which means that it's only
124:52 - going to run
124:54 - so this will only run this code will
124:57 - only run
124:58 - once when the app component
125:01 - loads okay the only one once when the
125:04 - app component loads
125:05 - and it won't run again now if i put
125:07 - anything inside of it for example if we
125:08 - had like a user in here
125:10 - every time the user changes and or for
125:12 - example every time the basket changes
125:14 - it will re-fire this code so that's how
125:16 - i use effect works but if we keep this
125:18 - blank
125:18 - it's only going to run once when the app
125:20 - component loads
125:21 - so that's the easy way of thinking about
125:23 - use effect
125:25 - yeah exactly go ahead and go back to
125:27 - react
125:28 - and it's kind of like an if statement
125:30 - guys in react
125:32 - yeah exactly all right
125:36 - it's like a dynamic if statement yeah so
125:38 - for example like let's just give them an
125:40 - example
125:41 - on this so let's give an example of
125:43 - where use effect would be used
125:46 - did you read marco de west i did i was
125:48 - laughing my ass off to that actually
125:50 - that sounds laughing
125:54 - that's fine now guys inside the youtube
125:56 - side we have this
125:57 - really nice powerful listener from
126:00 - firebase submit
126:01 - or import our authentication module and
126:04 - then here what we do is
126:06 - we go ahead and say auth dot
126:09 - on auth state change now what this
126:12 - does is it basically we as soon as the
126:15 - app loads
126:16 - we attach this listener so think of it
126:19 - this way once we attach the system up
126:20 - this thing is always listening if we log
126:22 - in it re-fires this code
126:24 - if we log out it re-fires this code it's
126:27 - just always there it's like an observer
126:28 - a listener whatever
126:30 - you want to call it that's what it is
126:32 - and what this does is it gives you so
126:33 - people keep going crazy about line 16
126:36 - and they keep saying
126:37 - line 16 then not off
126:42 - um inside of login is it
126:45 - 916. yeah yeah i thought you fixed it
126:47 - already right
126:48 - yeah yeah we fixed that one yeah okay
126:51 - thanks guys
126:52 - um so here what we say is whenever the
126:55 - authentication
126:56 - changes it will give us the
126:58 - authenticated user so it might be no
127:00 - if the user is not there um or it will
127:02 - give us the actual use themselves and
127:04 - once it does
127:04 - that we're going to basically go ahead
127:06 - and firstly we want to console.log the
127:08 - user
127:08 - we're going to say the user this is just
127:11 - a good debugging step so
127:13 - the user is due to do
127:17 - let's go ahead and just say alt user
127:19 - oops
127:20 - what user like this and then
127:24 - we are going to go ahead since i can see
127:26 - some people seeing the
127:27 - um comment earlier so then we're going
127:30 - to say the user is ortiza
127:33 - and now what we're going to do is we're
127:34 - going to say if
127:37 - there is an auth user okay so if there
127:39 - was a user logged in
127:41 - then this means that the user just
127:42 - logged in okay
127:44 - he's just logged in or the user was
127:46 - logged in right so
127:48 - or the user sorry the user was logged in
127:50 - now this is really awesome because when
127:52 - we do this kind of authentication with
127:54 - firebase
127:54 - even if you refresh the page it will
127:56 - actually log you back in
127:57 - if you're already logged in from before
127:59 - yeah
128:00 - so that's really really cool and then
128:02 - what we're going to say is
128:04 - um we're going to say else
128:08 - the user is logged out okay the user is
128:11 - logged out okay
128:14 - now what we want to do is we're going to
128:16 - actually do this in a very powerful way
128:19 - okay so i actually want to go ahead and
128:22 - store the user inside of
128:23 - our react context api so install inside
128:26 - of our store
128:27 - so let's go ahead and go to our reducer
128:29 - and i'm going to go ahead and add
128:31 - a user inside of that initially we're
128:34 - going to say the users no
128:36 - because let's just assume that when the
128:37 - app loads by default the user is going
128:39 - to be no
128:39 - okay then what we're going to do is
128:42 - we're going to
128:43 - go ahead and create inside of app.js
128:46 - and say when the user logs in we need
128:48 - the dispatch so we need to go ahead and
128:51 - pull that in over here so we're going to
128:53 - say this is our magic
128:55 - react context api piece of code so we're
128:58 - going to go ahead and import that here
129:00 - like so so use state value but from
129:03 - state provider
129:04 - and then here what we're going to do is
129:06 - we're going to say if you're logged in
129:07 - we're going to say dispatch right
129:10 - dispatch
129:11 - this is going to be an object i'm going
129:13 - to say type of dispatch is just going to
129:15 - be
129:16 - known as set user and
129:19 - this is going to fire off the event and
129:20 - shoot it into the data layer right the
129:22 - information about the user
129:25 - exactly so every time they log in it
129:26 - will shoot the user into the data layer
129:29 - and if they log out it will basically
129:31 - eradicate remove the user from the data
129:33 - layer
129:33 - got it okay now um
129:37 - what we are going to do next is we are
129:39 - going to go ahead
129:40 - and and we are going to
129:45 - send the user so we're going to send the
129:49 - user
129:49 - and in this case the user is simply the
129:51 - auth user
129:53 - that comes back from firebase now if the
129:56 - user is logged out
129:57 - i'm going to do the same thing we're
129:58 - going to dispatch an object
130:01 - with the same type so it's going to be
130:03 - type set user
130:06 - set user but we're going to say that the
130:08 - user this time
130:10 - is no okay and now think about what
130:12 - we're doing here guys so if the user for
130:14 - any reason logs in
130:16 - or if the user was logged in and they
130:17 - refresh the page
130:19 - it's going to go ahead and set the user
130:20 - to whoever was logged in
130:22 - okay from firebase now if the user is
130:25 - logged out
130:25 - it's going to go ahead and set the user
130:27 - to no value so that way nobody is logged
130:30 - in there
130:31 - right so if all of this worked
130:34 - correctly what we should be able to do
130:37 - now
130:37 - is actually go ahead and say something
130:40 - like this so we should be able to go
130:41 - ahead
130:42 - and say it should say console.log
130:45 - the user is and we should see the user
130:49 - inside of our um inside of our um
130:53 - inside of our screen okay so let's go to
130:56 - our
130:56 - login component and here we actually
130:59 - see you see in the login command we
131:01 - don't even do anything we just say
131:02 - if the authenticated user was created or
131:06 - signed in
131:06 - and just push them to the home page and
131:08 - then this listener inside of app.js does
131:10 - all of the hard work and it just
131:12 - constantly sits and
131:13 - sits there and listens so
131:16 - let's go ahead and refresh on app.js
131:19 - somebody just asked if this has anything
131:20 - to do
131:21 - with local storage and browser this is
131:23 - not local storage right this is
131:25 - a different type of thing with the data
131:27 - layer
131:28 - yeah so this is not local storage the
131:30 - reason why it persists
131:32 - is because firebase has done some clever
131:34 - stuff under the hood
131:35 - so if you log in it will know that
131:37 - you're logged in because they do some
131:38 - clever stuff with the cookies
131:40 - uh you don't actually even need to know
131:41 - what happens after so this is
131:43 - so this is actually the data layer
131:45 - component that's connected with the
131:47 - firebase
131:49 - yes yep got it okay
131:52 - exactly that awesome now what we're
131:54 - gonna do
131:55 - is oh yeah so once we have this
131:59 - um hajira actually pointed this out yeah
132:01 - they're getting good
132:03 - yeah this is insane thank you so much
132:05 - point now yeah so we actually dispatched
132:07 - a set user action
132:09 - also thank you thank you for that
132:10 - donation thank you yep and he says maybe
132:13 - i'm not understanding everything but i
132:14 - certainly know i'm on the right track
132:16 - and then i will understand everything
132:18 - epic that's
132:20 - it dude keep that up and that is the way
132:22 - to go forward
132:23 - yeah right so now what we're going to do
132:25 - is
132:26 - we're going to go to our reducer.js and
132:28 - we need to go ahead and actually add
132:30 - in the case to listen to this right
132:34 - so how do we do that go here and we say
132:38 - case so we can drop it on new line we
132:40 - can say case
132:42 - set user which is the type that we
132:44 - dispatched earlier
132:45 - and when we get this type we're going to
132:47 - say colon return
132:49 - and we're going to return everything
132:50 - that's currently inside the state
132:53 - as well as we're going to update the
132:55 - user
132:56 - and the user is going to be the action
132:58 - user so this is the one that we
132:59 - dispatched
133:00 - oops this should be action.user this is
133:03 - going to be the user that we dispatched
133:05 - here so you see action.user
133:07 - and the type was set user and the action
133:09 - was the user okay
133:11 - so we need to do that save it and now
133:13 - we're listening inside of our
133:15 - user reducer so now we should have the
133:17 - app update
133:19 - so cause let's go ahead and um open up
133:22 - the inspector and because you just
133:24 - previously signed in
133:26 - yep it should actually say that the user
133:28 - is logged in so let's go ahead and open
133:30 - up
133:31 - and also let me know when we move on to
133:32 - the next step and we're done with the
133:34 - user authentication with firebase
133:37 - yep right all right so this is the
133:39 - basket
133:41 - okay ray zero
133:44 - uh why is that saying this is the basket
133:47 - um
133:48 - let me go ahead and get rid of that
133:49 - comment because we don't need that
133:50 - anymore this is the basket
133:52 - um this is the basket
133:55 - product okay so where we got that we've
133:58 - got that in product
133:59 - right now check out product um
134:03 - did you find it you want me to look for
134:04 - it are you inside of your localhost yeah
134:07 - so
134:07 - i can't see it just because i'm in the
134:09 - local house yeah i i want to refresh and
134:11 - try
134:13 - yeah so uh yep i still got that printed
134:16 - out
134:17 - wait hold on yeah it said this is the
134:19 - basket
134:21 - right so i mean i'm not sure where this
134:23 - is the basket is coming from so the
134:25 - basket
134:26 - that's coming from oh okay it's coming
134:28 - from product.js okay so
134:30 - i'm going to go ahead and remove that
134:31 - one you don't need that you got it go
134:33 - ahead
134:33 - save the file and let's go back to
134:37 - app.js and now we should be able to see
134:39 - guys that when
134:40 - causing refreshes it says the user is
134:43 - see that so let's see i'll refresh right
134:45 - now the
134:47 - user is nice yeah and that's actually
134:50 - causing when he logged in
134:51 - right it says actually has logged in the
134:53 - state now it has my email and everything
134:57 - yeah so it's actually gone ahead and
134:58 - remembered him now what we need to do is
135:00 - we need to have some kind of login
135:02 - uh log out functionality okay so guys i
135:05 - think our faces are actually yeah i
135:06 - moved it
135:07 - yeah nice i'll move us to the middle
135:10 - until nice yeah
135:14 - so now what we can do is if we go over
135:16 - to header.js
135:18 - what we can say is so this was part of
135:20 - the homework so
135:21 - where we're going to change it so it
135:22 - says hello and then whoever signed in
135:25 - email
135:26 - yeah i'm going to leave that up to you
135:27 - guys as a challenge
135:29 - by the way guys so some people are like
135:31 - some people start with firebase and then
135:33 - they move to like something real
135:35 - fire firebase a lot of big companies are
135:37 - using firebase like twitch uses
135:39 - firebase and instacart uses firebase
135:43 - yeah and honestly it's really a bad
135:46 - misconception that it's kind of just
135:47 - caught on the firebase isn't powerful
135:50 - enough it's
135:51 - the reason why you think that is because
135:53 - they make it so damn easy to implement
135:55 - yeah so that's why you kind of naturally
135:58 - think okay this is not real this is not
136:00 - like powerful and etc
136:01 - but this is exactly this is real guys
136:04 - this is really real stuff yeah
136:05 - people people always think like aws is
136:07 - the way to go
136:08 - and it's just such a nightmare to do
136:10 - most things
136:11 - um yeah firebase makes it really simple
136:14 - but don't get that
136:15 - twisted and think it's it's kind of like
136:18 - how
136:18 - people they move over to python
136:20 - sometimes and they're like oh python is
136:22 - really simple so it must
136:23 - not be that powerful and it's like no
136:25 - you can actually do whatever you want
136:26 - with python or you can do whatever you
136:28 - want with react just because react is
136:29 - easy doesn't make it
136:31 - less powerful than angular or view
136:34 - exactly exactly guys
136:38 - so what we're going to do now is inside
136:41 - of the header
136:42 - we're going to go ahead and say if you
136:44 - are signed in so
136:46 - now what we can do is we can actually
136:47 - pull the user from the state because the
136:50 - user is
136:50 - also populated now we can say if
136:53 - the user so let's render this text now
136:55 - so rather than saying sign in we can say
136:57 - if the user exists
136:59 - right then it will say sign
137:02 - out otherwise
137:05 - it will say sign in and submit
137:08 - so me just said i have used
137:12 - aws during my work experience trust me
137:15 - firebase is equally powerful exactly
137:18 - honestly it's so damn powerful guys and
137:20 - it's so fast
137:21 - like if you actually look under the hood
137:23 - of what they do it's insane how
137:25 - efficient they make it for you guys um
137:28 - so firebase is free until you start
137:32 - using things like cloud functions
137:34 - exactly
137:35 - yeah yep so here guys is what we added
137:39 - we've got the user we say if the user is
137:42 - uh is is present then it will say sign
137:44 - out otherwise it will say
137:46 - sign in okay um
137:50 - so what we're going to now do is
137:53 - yeah you can see because he's trying to
137:55 - figure out
137:56 - jesus christ
138:05 - so now what we're gonna do is we're
138:07 - gonna say
138:08 - when you click on the so we're actually
138:11 - going to make
138:12 - this um div clickable
138:15 - right so we're going to say on click on
138:18 - click on this div
138:19 - and i'm going to say when you click the
138:21 - div right
138:22 - we want it to basically be um let me
138:25 - just double check something
138:26 - yeah so we basically want this to say
138:30 - like if you are logged in right so so
138:33 - basically i'm going to say
138:34 - handle sign in handle
138:39 - authentication to handle something in
138:41 - authentication the reason why i'm going
138:42 - to call it this guys is because
138:44 - we're going to have it so when you click
138:45 - where it says sign in sign out at the
138:47 - top
138:48 - i just want to have a little function
138:50 - which handles the authentication
138:52 - it doesn't take anything but it's
138:54 - basically going to say if there was a
138:56 - user
138:56 - right and you clicked it because the
138:59 - text would be
139:00 - sign out right what we're going to say
139:02 - is if there was a user
139:04 - we're going to go ahead and pull the
139:05 - authentication module from firebase so
139:07 - our local one
139:08 - so our local firebase and then we're
139:10 - going to say auth
139:11 - dot sign out and that is all we need to
139:15 - do
139:15 - to actually sign out from firebase okay
139:18 - so qazi i want you to show on the screen
139:21 - now
139:22 - that at the top of the screen on the
139:24 - amazon
139:25 - clone we should see in the header it
139:28 - should say
139:29 - sign out okay so what are you saying in
139:32 - the
139:33 - in the text that we add to the top no so
139:36 - you see in the in the header right now
139:38 - let's
139:38 - zoom into the header if you use the
139:40 - trackpad it actually becomes super
139:41 - super simple so use the trackpad and
139:44 - pinch
139:47 - um yeah so you can see it says sign out
139:49 - at the top right
139:51 - now with the logic that we've done uh we
139:54 - we've done it so we said if oh i see
139:55 - what you mean like this yeah
139:57 - that's how i usually sign in yeah yeah
139:59 - zoom in nice
140:00 - okay now it says sign out right
140:03 - so what we do now is if we click that
140:07 - because of the handle oh snap son
140:12 - hold on prince just dropped in the
140:14 - comments and he goes i just got my first
140:16 - project today on
140:17 - upwork for four hundred dollars just
140:19 - because of the spotify clone that you
140:21 - guys built
140:22 - thanks so much yeah that's insane
140:26 - spotify has got so many jobs now wow
140:30 - frank ramos a six-figure contract
140:33 - for sonos which is insane that spotify
140:36 - clown that is insane
140:38 - wow all right awesome dude so now
140:43 - when we click on the um sign out button
140:46 - so one thing's gonna happen right now so
140:48 - actually we need to fix something so
140:51 - if you click that right now it will sign
140:52 - you up but it will take you
140:54 - to the login page okay and then if we go
140:57 - back
140:58 - now says go back it should say sign in
141:01 - right so it hasn't found the user now
141:03 - because it did sign up but
141:04 - true we need to fix something here so
141:08 - what we did is and i saw this in the
141:09 - comments as well so a lot of people
141:10 - saying suddenly this goes back to login
141:12 - page yes
141:13 - the reason why is because what we need
141:15 - to happen here guys
141:17 - is we need to add this little thing in
141:19 - here which we say
141:21 - if there was no user
141:24 - only then hold on because i don't see it
141:27 - yet
141:28 - oh yeah sorry yeah so i've added it here
141:31 - so
141:32 - if there was no user only then do we
141:35 - push
141:35 - to the login page okay thank you for the
141:38 - donations says you guys are amazing keep
141:40 - up the good work
141:41 - thank you hey that's wicked thank you so
141:45 - much preslov
141:46 - all right yeah so now we're saying only
141:49 - redirect
141:50 - to the login page if there was no user
141:52 - so got it this now
141:54 - is a pretty nice situation so firstly
141:56 - the sign in so we have a user
142:00 - all right you want me to log in right
142:02 - now
142:06 - yep
142:08 - okay and then at the top where it says
142:11 - sign
142:11 - out says zoom into that
142:15 - uh-huh yep now if we click sign out
142:19 - it won't redirect but it will sign the
142:21 - user out
142:22 - so click that nice nice
142:26 - now if you click sign in now it will
142:29 - throw you
142:29 - to the logo fancy beautiful
142:32 - that's really really clean right like a
142:35 - really really nice implementation
142:37 - um it gives us a really nice um
142:40 - sort of dynamic fill because there was
142:43 - no sort of refresh
142:45 - in like an ugly way it just literally
142:47 - said okay sign up you signed out
142:49 - sign in and once you guys finish that
142:51 - homework instead of saying
142:52 - hello guest you'll say hello like
142:56 - kazi email.com and then it will go ahead
143:00 - and actually go ahead and say hello
143:01 - guest when you sign out
143:03 - yeah because we should be clearing the
143:04 - state so that would be really really
143:06 - clean right
143:07 - now i'm going to go ahead and show you
143:09 - guys um
143:11 - an example of how we can pull the user
143:15 - from the state okay so let's go ahead
143:17 - and this will help you with your
143:18 - homework
143:18 - let's go to checkout.js um right now and
143:22 - let's actually go ahead and log in quasi
143:24 - and yeah and somebody said no regular
143:26 - expression for authentication
143:27 - recognition in the database i don't
143:29 - think so right they handle most of it
143:32 - um what was that sorry no recognition
143:34 - somebody asks if
143:36 - uh like no regular expression for
143:39 - authentication and recognition in the
143:41 - database question mark
143:43 - um no regular illustration for
143:45 - authentication recognition
143:46 - not 100 sure what you mean um
143:51 - i mean i feel like firebase handles
143:53 - probably a lot of the things that
143:55 - you're looking to do with regular
143:56 - expressions right like i imagine
143:58 - if you did put something in that didn't
144:00 - look like an email probably firebase
144:02 - won't allow you to make an account
144:04 - yeah yeah so yeah yeah it would pop up
144:08 - and it would freak out
144:09 - um also guys i saw some people have
144:11 - already done that homework so that's
144:13 - awesome oh
144:14 - nice that's sick that's awesome
144:18 - right so let's go ahead and sign up uh
144:20 - sign in
144:21 - okay so let's do it
144:30 - okay nice and let's go ahead and go to
144:33 - the basket so
144:35 - uh we don't need to add anything let's
144:37 - just go straight are we still on the
144:38 - user authentication step
144:40 - um okay so we just finished the user
144:42 - authentication just
144:44 - [Music]
144:46 - all right now we're going to get the
144:48 - name
144:49 - to pop up in the checkout page so i want
144:51 - it to say in checkout page if the user
144:53 - is there
144:54 - we'll say hey like kazi um
144:57 - or or something like that you'll say hey
144:59 - kazuo hey oh
145:00 - whatever your email address is and then
145:02 - it will show your basket contents okay
145:05 - all right so working on username on
145:06 - checkout page
145:08 - yeah okay dope let's do it so basically
145:12 - if we look at does our version of the
145:14 - app have it
145:15 - um no so i'm going to go ahead and add
145:17 - this in so that will help them with that
145:18 - homework
145:19 - okay good so now what we're going to do
145:23 - is inside
145:24 - of the checkout page so inside of the
145:26 - checkout page what we're going to do is
145:28 - here we're going to pull the user from
145:30 - the um
145:32 - from the store and we're going to go
145:34 - ahead and say where it says your
145:35 - shopping basket we're going to basically
145:37 - add something a bit
145:38 - smaller underneath on top of it so we're
145:39 - going to say h3
145:42 - and this one's going to say
145:45 - yeah it's going to be i think it's
145:47 - user.email i think it's just normal but
145:49 - we can go ahead and check it after so
145:51 - maybe use the door email
145:53 - so now if we do this and we go to the
145:55 - basket page
145:57 - yep oh nice it says the email
146:02 - oh nice so it says the email right so
146:04 - now we'll just say hello
146:06 - and then user email let's go ahead and
146:08 - see if that works
146:10 - oh [ __ ]
146:13 - what happened damn um
146:17 - pinto absolution says guys
146:20 - thank you so much for this wonderful
146:23 - content
146:24 - my brother passed away last week and i'm
146:27 - dedicating this tutorial to him
146:29 - keep up i will succeed just to keep his
146:31 - memory in anything um
146:34 - dude sorry philosophy and that's insane
146:36 - that you are dedicating this to him
146:38 - keep working hard that's it that's some
146:41 - that's sad news dude
146:42 - [ __ ] yeah that's [ __ ] heartbreaking
146:46 - yeah man i'm just glad you're here with
146:48 - us like you got the community behind you
146:50 - you got us behind you like
146:52 - reach out to us on slack or if you're in
146:54 - the facebook group we'll help you out
146:56 - but
146:57 - god damn dude that just that [ __ ] me
147:00 - up a little bit because
147:01 - i love my brothers and that would be
147:03 - crazy if something like that happened
147:04 - but yeah man
147:05 - we're here for you and let's let's keep
147:07 - going
147:08 - exactly dude exactly um
147:12 - what does that say says email up an
147:14 - email of
147:15 - no okay yeah so if you get this issue
147:17 - guys
147:18 - what you wanna do is do optional
147:19 - chaining so you're gonna do this use a
147:22 - uh question mark dot email okay boom
147:24 - right there
147:26 - and then what that will do is it will
147:27 - have so there's an asynchronous period
147:30 - where it won't load the user because
147:32 - it's actually trying to fetch it from
147:33 - firebase
147:34 - so by doing that it actually protects it
147:36 - from erroring up and now it says hello
147:38 - with the email address so that's perfect
147:41 - well that looks
147:41 - really really good okay um
147:45 - so now what we're gonna do is oh and
147:47 - daniel salade they say sunny yeah
147:50 - i know yeah i was reading i was like
147:52 - damn these guys are on the ball
147:54 - yeah it's crazy dude now so we have that
147:58 - right
147:58 - so that should help you guys figure out
148:00 - the homework solution
148:02 - well instead of saying hello guest it
148:04 - will say hello
148:05 - with the email address so that'll be an
148:07 - awesome start for you guys um and now
148:09 - what we're going to do is
148:10 - i guess quasi what we'll do is we'll
148:12 - quickly show them how to actually go
148:13 - ahead and add
148:14 - um something to a db and pull it in from
148:16 - the db and render out an item
148:19 - let's do it yeah so let's go ahead and
148:21 - do that
148:23 - um actually one second let me think how
148:26 - we're going to do this
148:28 - um
148:31 - maybe we should do the deployment at
148:33 - this step
148:34 - because what's up
148:38 - do you want to do the deployment today
148:40 - and then we do the
148:41 - um database stuff tomorrow yeah because
148:45 - i have an idea for tomorrow i think what
148:46 - we should do is we should do the
148:47 - database um
148:48 - do the deployment now and then tomorrow
148:51 - when we actually process
148:52 - a payment will show you how to push data
148:55 - into the database
148:56 - it will feed in much nicer and it will
148:58 - set you guys a nice bit of homework
149:00 - and we'll have time for that right
149:04 - what was that we'll have time for that
149:05 - tomorrow yeah yeah we'll have more time
149:07 - for that tomorrow that'll be perfect
149:09 - okay dope so let's just get this
149:11 - deployed online guys and then you'll be
149:13 - actually
149:14 - be able to share this app with your
149:16 - friends family and things like that
149:19 - exactly now guys something i want to
149:22 - mention for the homework right so it was
149:25 - not only to implement
149:26 - that top part right it was also to add
149:29 - some animations
149:30 - add stuff like animations add change
149:33 - this amazon build so it looks a bit more
149:36 - custom
149:37 - to yourself okay like and this is where
149:39 - your creativity comes in
149:41 - kicks in and you can sort of flex those
149:42 - css skills um
149:44 - and something i'd recommend is going
149:46 - ahead and trying the following so
149:49 - um because if you just want to type in
149:52 - on um google react flip move
149:57 - okay let's do it here this is going to
149:59 - be a challenge for you guys
150:00 - i want to see if anyone can go ahead and
150:02 - get this to work okay
150:04 - it's called react flip move and
150:07 - what you can do is if you guys can go
150:09 - ahead and check out this github
150:10 - if you can implement react flip move so
150:13 - let's move down they've got a little
150:14 - animation there
150:15 - so if you guys implement this inside
150:19 - of the um inside of the
150:23 - basket page the checkout page how
150:26 - awesome would that look
150:27 - so as you remove something it would
150:30 - reshuffle the list
150:31 - and do everything as needed right so
150:33 - that would be really really clean
150:35 - i think if you guys could go ahead and
150:37 - maybe implement this as a piece of
150:39 - challenge homework okay so whoever can
150:41 - go ahead and get that implemented
150:43 - it's got some nice documentation
150:44 - underneath that this will be
150:46 - really really cool okay and just gave a
150:49 - donation
150:50 - of 50 argent argentine
150:54 - dollars
150:58 - people are going to kill us pesos and he
151:01 - goes
151:03 - uh and he goes nice work guys that is so
151:06 - much fun
151:06 - uh and he goes if cause he can say i
151:08 - don't know if this is
151:10 - i mean i hope this is probably good
151:11 - words but he goes
151:16 - hi from argentina let's go
151:20 - let's go guys what does that mean
151:22 - frankie
151:27 - let's go drink a fernet which is a wine
151:29 - of the good ones damn
151:31 - all right nice dude
151:35 - all right so boom all right
151:38 - so we have that built right so that is a
151:40 - piece of challenge homework right
151:42 - to get that animated list implemented
151:44 - and you can use rack flip move
151:46 - to go ahead and do that now um and and
151:49 - just a top tip guys
151:50 - you may need to introduce keys i'm not
151:53 - gonna say anything about it but you may
151:54 - need to introduce
151:55 - keys into the list to get that working
151:58 - correctly
151:58 - so keys you're not talking about api
152:00 - keys you're talking about like
152:02 - index keys and things like that
152:04 - component keys inside of react
152:06 - so that's going to be a nice little
152:08 - challenge for you guys to go ahead and
152:09 - do
152:10 - and that should help you out a lot now
152:13 - um what we're going to do next is do the
152:16 - deployment
152:17 - so now we've set everything up for the
152:19 - deployment earlier so we actually went
152:21 - ahead and all we need to do is create
152:22 - that
152:23 - account um in in five ways to get
152:25 - started with that
152:26 - now as cause he mentioned and she i
152:28 - mentioned earlier is this open up by
152:30 - terminal causing
152:31 - what let's open up a terminal no no it's
152:35 - not you
152:36 - god talks at the same time as you and i
152:40 - can't hear you
152:41 - and then i'm like wait sonny what'd you
152:42 - say and nonstop start speaking louder
152:46 - like god he has too much confidence
152:49 - all right all right so what'd you say
152:50 - sonny let's open up a terminal
152:53 - all right i'll open up a terminal nice
152:57 - okay now in here guys uh you just need
153:00 - to move a little bit down on ecam
153:02 - so they can see it fuzzy um there we go
153:07 - i'll try to figure that out there we go
153:11 - so now guys inside of here you want to
153:13 - make sure you run that command
153:14 - sudo mpmi mpmi
153:19 - g firebase tools so you need to install
153:22 - firebase
153:22 - tools in order to do what we're about to
153:24 - do next okay so you would install this
153:27 - somebody was like damn so you're telling
153:30 - me my spotify
153:31 - clone didn't work because of a dang
153:33 - question mark
153:34 - yeah yeah so that's funny because yeah
153:37 - there's certain stuff that if you just
153:39 - miss that little question mark that can
153:40 - really screw you up that optional
153:41 - chaining really helps out
153:42 - because when you load the app in the
153:44 - start sometimes the user might not be
153:46 - loaded so it'll crash because of that
153:48 - and then once it refreshes the user can
153:51 - then be loaded
153:52 - so just drop that question mark and that
153:55 - optional chaining is like a really clean
153:57 - thing that you can do with react
154:00 - exactly guys exactly um something i want
154:03 - to mention somebody said athaba
154:05 - they said dash g for global guys you'll
154:07 - need to do it once
154:08 - do not throw that around guys only use
154:11 - global installs for tools like firebase
154:14 - tools
154:14 - don't use that for all your dependencies
154:17 - it's not a good practice
154:18 - if you installed it yesterday you're
154:19 - good yeah
154:22 - so yesterday you're good all right so
154:23 - next deploy is run
154:25 - firebase oops firebase login so we're
154:28 - not going to do it because we
154:29 - i think we're already logged in yeah
154:30 - david the optional chaining is kind of
154:32 - like
154:33 - not null but it's like it's much easier
154:35 - than doing a try catch block
154:37 - it's just super clean exactly
154:40 - yeah it's going to be super clean um
154:44 - so now it says firebase uh we need to
154:47 - firebase login
154:48 - and what this will do is it'll pop up a
154:49 - little window and it'll just be your
154:51 - browser and you just basically log in
154:53 - just like you do on google and then it
154:55 - will redirect you back
154:56 - once you've done that guys you need to
154:59 - do the following you need to do mpm
155:01 - run build okay no no sorry before we do
155:04 - that
155:05 - we're gonna do firebase init firebase
155:08 - init
155:08 - okay now cause you wanna run them
155:10 - through the init
155:13 - yeah so when we go through this guys
155:15 - make sure
155:16 - you go to hosting so like this
155:21 - um we should be good to go on that click
155:24 - use an existing
155:25 - project and whatever you called it i
155:27 - called it amazon challenge
155:29 - you might have called it amazon clone or
155:31 - something of that nature so pick the
155:33 - right one
155:34 - then when it says what do you want to
155:36 - use is your public directory
155:38 - make sure you do build this is important
155:41 - for react apps
155:42 - click that and yes this is a single page
155:45 - application
155:46 - so don't just hit enter here because
155:48 - you're going to mess it up
155:49 - hit y and say yes because it's default
155:52 - by no
155:52 - so you want to make sure you do y and
155:55 - hit enter
155:56 - and you should be good to go exactly so
155:59 - once you've done that guys we've
156:01 - actually
156:01 - prepped firebase stuff and make sure
156:03 - you're in the right directory
156:05 - uh before you do that now what you're
156:06 - going to do is mpm yeah
156:08 - run build okay
156:12 - npm run build and this will go ahead and
156:14 - actually
156:15 - so what this does is it goes ahead and
156:17 - creates an optimized
156:19 - production build so this goes ahead and
156:21 - strips out
156:23 - all of the things which make the build
156:25 - slow so like the hot reloading all the
156:27 - developer things
156:28 - all of those things okay and it will
156:30 - make the app
156:31 - like a super efficient bundle okay
156:34 - now it's important to know that once
156:35 - this command finishes if you make
156:38 - any changes on the app you will have to
156:40 - run npm run build again
156:42 - here's what your thing should look oh
156:43 - sorry sunny just finish your thought and
156:45 - then i'll
156:45 - continue yeah so it's just saying like
156:47 - if you make any changes once we finish
156:50 - npm run build then make sure that you
156:52 - actually go ahead
156:53 - and uh run the npm run build again okay
156:57 - frank just came in hey hey nice thank
157:00 - you
157:01 - frank with a dollar donation that is
157:04 - awesome thank you yeah it was such a
157:07 - good build
157:08 - and guys if your uh directories look
157:11 - like this
157:12 - forget about my top directory here but
157:15 - if your looks like something like this
157:18 - oh my god please work screen brush for
157:20 - the love of god
157:21 - all right here we go boom then you are
157:25 - good if it looks like this you are
157:27 - looking
157:28 - fantastic and now at this point guys we
157:31 - are ready to
157:32 - deploy this bad boy exactly and guys you
157:35 - can rinse and repeat this you can
157:36 - constantly make changes do npm run build
157:38 - firebase
157:40 - which is what we're about to do somebody
157:41 - says finally frank is here
157:44 - nice everyone's getting used to frank on
157:46 - the streams nice dude
157:48 - okay so now what we're going to do is
157:50 - what are we going to do quasi
157:52 - now we're going to do uh fi we're going
157:54 - to be
157:55 - we're about to deploy it so we got to do
157:57 - build first
157:59 - we've done that oh yeah okay okay okay
158:01 - let's do this firebase deploy
158:04 - ready you guys ready
158:07 - yo put on some uh put on some uh
158:09 - suspenseful music you know and cue it up
158:11 - do it bro all right hey is this going to
158:14 - work
158:16 - all right this is the moment of truth
158:17 - quasi don't hit that button just yet
158:20 - oh we're going to wait see are you guys
158:23 - ready to see if this worked
158:25 - wow it's right there if i command click
158:27 - it it should be up
158:29 - right are you guys ready drop it in the
158:31 - comments below
158:32 - and you know what i can't wait anymore
158:34 - sonny i cannot wait anymore i'm gonna
158:36 - click it bro
158:37 - there we go i'm gonna click it bro oh
158:41 - yeah
158:41 - i'm gonna click it dude if it's broken
158:44 - it's gonna be so embarrassing dude
158:46 - i know right i don't think we should do
158:48 - it live
158:50 - god damn it ah i'm gonna click it
158:54 - click it oh
158:57 - let's go
159:01 - [Applause]
159:06 - look at that beautiful app look at how
159:08 - beautiful this looks guys
159:10 - leaf says don't do it and this is
159:14 - live guys so this is a live link right
159:17 - now
159:18 - you guys smash that like button if you
159:20 - liked what we did for you here exactly
159:24 - boom that was nasa's call that was
159:26 - awesome calling us
159:27 - gonna go here oh nice look at that
159:32 - every feature we're gonna show i'm gonna
159:34 - play the sound
159:36 - and now check it out when i hit remove
159:37 - basket the subtotal is going to change
159:39 - are you guys ready you guys ready you
159:40 - guys ready
159:41 - i'm going to do it i'm going to remove
159:42 - this item and look at the subtotal
159:44 - change
159:45 - and wait
159:49 - there we go nice let's go ahead and
159:53 - check out the
159:53 - sign in all right let's go check it out
159:56 - and you guys can log into this too
159:58 - hopefully it doesn't crash but
160:00 - you guys can log into this and use it
160:02 - enter an email a password and hit the
160:05 - yo i'm gonna jason says you guys have me
160:07 - cheesing throughout the whole live
160:09 - stream
160:09 - nice sg707 says brave man doing it in
160:13 - front of
160:14 - hundreds of programmers
160:18 - thank you dude just dropped a five
160:19 - dollar canadian donation thank you dude
160:22 - canadian donation i love that
160:26 - yeah thank you for the canadian donation
160:29 - nice dude
160:30 - all right here we go and
160:33 - [Music]
160:37 - that is hilarious
160:40 - oh my god i was on account
160:43 - wow look at that i'm signed in i'm going
160:46 - to add stuff to basket go to the basket
160:48 - and it even knows who i
160:49 - am hello hello
160:53 - fantastic so
160:57 - now are we done for today sunny we are
160:59 - done for today i'm gonna run over the
161:01 - homework one more
161:02 - time guys do it so the work for today's
161:05 - session is to upgrade that header bar so
161:09 - that it says
161:10 - hello hold on hold on you're going too
161:13 - fast for me
161:14 - right so homework for day three right
161:17 - yep
161:18 - all right cool so let's go over what uh
161:21 - each step is so one is what so
161:24 - upgrade the header bar so upgrade header
161:26 - component
161:28 - what's wrong with me okay
161:32 - header component um uh to include the
161:35 - user's email
161:39 - nice and then on part two we are going
161:43 - to
161:44 - um add animation to the build so add
161:48 - animation
161:48 - and guys you can add animation wherever
161:50 - you want hover effects
161:52 - the react flip move that we spoke about
161:55 - any animation that you add
161:56 - just make sure you add it deploy that
161:58 - thing and show us your beautiful work
162:00 - okay
162:01 - the third final piece of homework is
162:04 - style amazon okay so obviously we have a
162:07 - typical amazon looking app right now
162:09 - style it give it your own little sort of
162:10 - twist give it some difference
162:12 - like them some changes and that's
162:14 - completely up to you guys
162:16 - to do okay so this is your homework and
162:18 - part four the most important part is
162:20 - deploy that app okay so deploy the app
162:24 - and then link us the app in the
162:27 - submission
162:28 - and screenshot and do all the things
162:29 - that you guys have been doing so far for
162:31 - the homework
162:32 - we're going to shoot a video after this
162:33 - and we'll show you guys a quick
162:34 - run-through
162:35 - of the homework and we'll pop that on
162:37 - the slack and the facebook
162:39 - channel and then airtable right
162:43 - yep exactly
162:48 - and that's only available in the
162:49 - facebook group and nas i think is going
162:51 - to be posting the homework up soon in
162:54 - the facebook group
162:55 - so the homework is going to be available
162:57 - there and i think
162:58 - or do we send out emails with the
162:59 - homework too yes so
163:01 - you guys are going to also get an email
163:02 - if you're part of the challenge so keep
163:04 - an eye on your email
163:05 - keep an eye on the facebook group we're
163:07 - going to send you the homework
163:10 - and check in the slack as well it's
163:11 - going to be there as well
163:13 - nice dude and the only way to
163:15 - participate in this react challenge
163:17 - is house honey to be a part of that
163:21 - facebook group
163:22 - guys you have to be a part of that
163:23 - facebook group and you have to be
163:26 - interactive something all of the
163:28 - homework for each of the days
163:29 - and make sure that you are engaged and
163:32 - with us
163:32 - in this journey and that we have a point
163:34 - system in place and that's all
163:36 - attributes to those things that we've
163:37 - mentioned and then we'll choose
163:39 - that price and even if you guys don't
163:42 - compete
163:42 - you're not here to compete for the
163:44 - prizes do this
163:45 - do yourself a favor land that dream job
163:47 - that you've always wanted
163:48 - and carry on with these builds yep
163:51 - beautiful
163:52 - anything else regarding the homework or
163:54 - anything else we need to say
163:56 - i think we're good dude i think that was
163:58 - a crazy session i want to say thank you
163:59 - to everyone who was here today i think
164:01 - you guys are awesome
164:02 - amongst any tech issues that we ever
164:04 - have like you guys crush it
164:06 - and push through with that said i think
164:08 - we're good bro
164:10 - damn thank you guys so much as always
164:12 - for being there
164:13 - and having that energy and just
164:15 - supporting us even with all the
164:17 - craziness that goes
164:18 - on we love you guys we appreciate every
164:21 - single one of you with that said
164:24 - we will see you guys tomorrow at 11 a.m
164:27 - pacific make sure to show up there
164:30 - tomorrow they're gonna be doing day four
164:35 - and we're gonna be finishing this
164:36 - project up you guys and that then you'll
164:38 - have stripe integrated you'll be able to
164:40 - accept payments and the whole nine
164:42 - and then you can actually put on your
164:44 - portfolio yeah and you can actually say
164:46 - it's a full ecommerce build
164:48 - right so there's a big stuff happening
164:50 - tomorrow exactly
164:52 - so with that said guys we love your
164:53 - beautiful face and as always we'll see
164:55 - you tomorrow
164:59 - [Music]
165:09 - you

Cleaned transcript:

going hey guys day two of the amazon build actually part two of the amazon build but day three of the challenge and yesterday we actually left off right over here all right so if you guys remember from yesterday we had left off at where you had put this page together initially and then there was a basket we're gonna pick it up from there and we're also gonna do a little bit of the recap yeah so we set you guys some lovely homework and you guys went above and beyond you crushed in that homework so yeah some of that stuff and see how you guys did with that hey damn guys this is gonna be sick this is day three of the challenge let's bring that energy up so let us know where you are coming in from today live and we want to see all of those comments starting to pop up we want to see your energy bring up the energy in this place and with that said let's just jump right into it let's do it dude awesome um all right let's go so this is day three of the challenge we have two more days and a surprise left for you guys and here's the agenda for today's training we're gonna be revealing the answer to day two's homework and we got so freaking many submissions from you guys and they were phenomenal over 400 submissions on that homework just checking right now 400 and it's still going i can see people adding in right now that's insane absolutely nuts now also you're going to complete the checkout screen with the react context api so that's what we're doing today and you're going to add full login functionality which means sign up and sign in using firebase authentication also you're going to deploy with firebase hosting and connect the front end to firestore database to pull the info from the database so this is what you're going to be building today if you are excited drop in the comments below and let us know exactly guys so you see the main new feature today is going to be that beautiful login and authentication and that's all going to be provided from firebase itself from firebase authentication so we're going to show you guys how to do that and it's going to be some exciting stuff guys yep and you guys killed it with the homework guys day three we had 4 000 people live with over 6 000 comments and despite the crazy internet interruptions that we had and we got disconnected two times some of you guys still pushed through and showed up so a massive shout out and thank you for that it's a huge timeout guys we have just cracked over 30 000 people inside this challenge wow yeah it's insane so look so here's what we got on the first so day two part three and then boom look at all those comments you guys are dropping three thousand comments almost a thousand comments here 2 000 comments on this and over 30 000 people have joined this challenge which is insane you guys are crazy we're saying people saying you guys are amazing uh let's go we have people saying let's go so i see the energy is here and it's awesome someone said something's wrong why is sunny wearing white i'll mix it up today guys change out we got the headphones in so hey uh sunny maybe just put your um audio up so people can hear you better okay is that bad um put it up a little bit more i think that might be don't want to speak a bit closer yeah if you're closer i think that's fine all right so let's keep on going now you guys we got tons and tons of submissions i'm actually just going to open that up because i think that's the best way to show you guys and here this is the amazon homework that you guys had and look at how many submissions we have it's ridiculous if we just keep scrolling sarah dragon chris monet and look at all these submissions right people are showing us the subtotal is working so good job chris did a fantastic job here and look at this he's got all this like coding and react stuff that he's now selling that's what we're gonna see guys nice change it up mix it up make it your own damn guys give it up for all these guys that put in these submissions like this is freaking brilliant we got over 400 submissions what so make sure if you have missed out it's still not too late you can still do your submission and for a lot of people we're trying to give you a video feedback as well so we might not get to everybody but we are starting to get back to people and give them a personalized video feedback on their homework elizabeth also posted it elizabeth you got to show your picture with the with the working app as well she just sent her a code but some people actually went and took the shopping basket that we hadn't finished so the list of items and they actually went ahead and built it which is insane dude oh that's sick do we have some of those that we can show yeah so we just have a look uh number 309 oh damn you got the number down all right let's do it so number 309 and let's go take a look at this one and boom we got the checkout this is beautiful lovely damn okay awesome so let's keep on moving you guys we got over 400 amazon clone day one submissions beast beasts all of you and we got some ones we got jordania over here she did her submission we got raja rahul abdul based adi brahman javed khan miriam so fantastic jobs and these are the clones you guys put up we showed some of them already so we're going to skip over this but thank you for all of your submissions and your work now before we continue remember guys here's how to use the learning modules in the facebook group for this five day react challenge and how can they do that it's make sure that when you're over here on facebook click units yep and when you're in units what's going to be kind of confusing guys yeah yeah it can be a little bit confusing so make sure when you're here click units and then go inside and then look at where the homeworks are so let me try to pull up facebook here and um i'll try to show it to you guys live hopefully my entire computer won't crash on me like yesterday all right so i am on facebook now and on the left hand side see units if you are in the newer version of facebook it'll still look very similar to this it's fine just find units and in units you'll see there's unit 1 unit 2 and unit 3. for each day of the challenge we're going to have it in units like this so this way everything is organized for you and you will lose nothing all right yeah perfect bro just check my gain on ecam quickly just want to check if it's a bit low because a few people are saying it's quite low and i've had it it's already quite high on the the bit over here um i hear you pretty clearly but i'll just put up the ecam a little bit higher and maybe it'll be better nice okay oh so i put you a little bit higher awesome um nah says he can hear him well i trust nas okay so all right so let's go here now here how can they maximize the roi from the challenge sonny what can they do yep so today guys as we code along i want you guys to code along with me if you get stuck or confused it's completely fine just make sure that you challenge yourself we cover all of this stuff inside of our course so be sure to check that out and if you guys get stuck in the live it's completely fine make sure you're part of that slack channel and that facebook group post questions i see loads of you guys helping each other out and that's amazing so make sure you go ahead and do that and guys make sure you do the homework and participate in the group because that is where we rack up those points for that big prize and that's how that's why a lot of us are here right now to win exactly huge price 100 that's right and sunny you can just bring that freaking might like in your face it'll make your sound really good yeah like i'm almost like kissing this mic when i'm talking to it all right now if you can't keep up with sunny or if you can't keep up with us as we're coding this remember that's okay the video is always going to be there so do the best you can and you can rewatch it but try to do your best live we will also give you guys the solution files so i'll show you exactly how you can get caught up if you missed the last few days we're going to give you the code and the exact project so you can catch up and start working with us and what was that i i thought you spoke oh no okay so yeah do the homework and participate in the group now i'll show you also over here we have a github and this is the url for it this should be in the description or in the facebook post it should be there and if you go here just make sure you start it and fork it so you have it and this will get you caught up with day one of the challenge okay or i'm sorry the part one of the amazon build this will get you caught up to exactly here and if you're a complete beginner it's as easy as clicking here and just downloading this file as zip then opening it up and literally typing in the following npm start and you should be good to go you should be caught up with us if you're more advanced you know that you can like pull it with a github repo it's as simple as that okay so let's put this over here and let's go over the rest of it nice let's do it dude all right so now what's going on here so the game plan for today guys is we're going to complete the checkout screen with the react context api so we're going to have everything completed and built to that homework spec that we set yesterday and then we're going to go ahead and if you just hit enter kazi it should pop up we're going to go ahead and do implement a full login functionality that means sign up sign in everything implemented with firebase authentication set so it's going to be a complete functional app with login logout everything's gonna work i think something i fixed the audio now by the way i saw that on mine i actually had it low so it was partly my fault along with you speaking from really far away it's both of us right i was wondering i had it blasting on mine i was like holy [ __ ] okay go ahead and deploy this thing over to firebase so that will be awesome perfect so let's move on with this now guys remember you will learn all of this in profit with javascript course that will be launching next week so make sure that you have that you know date in your mind september 13th um and if you want to watch the exact breakdown of every single app and much more that those details we cover in our program now here's the homework and what's the homework sonny so the homework to give you guys a bit of context before we go ahead and jump in is to add the message so we're gonna have that full login so you're gonna be able to log in with username email and a password and then i want you guys to go ahead and change it so that at the top of the header it actually says hello and then whatever your email is so that way it's fully customized for yourself when you're logged in that's going to be part one number two is going to be to actually go ahead and deploy the app hold on hold on i think i'm confused about what the first step is so let's just make sure everybody's on the same page so okay so if i'm on this app exactly where um yeah so you see where it says sign in okay now it says hello guest right yep it does we want it so that when you hit sign in it's going to actually go ahead and log you in i mean if you go to the actual demo app so i'm going to go ahead and drop you a link cozzi okay go ahead and check this app out and we can actually demo what we're going to be building today so the one we have already built for a while ago right yeah yeah exactly okay so i'm gonna go to that url here boom paste it in all right so here this is a demo app so now if i click sign in yep you can create an email and just do jump put in any email and password and then here what we can do is you can go create your uh amazon account okay yep um oh it has to be a legend oh there we go nice and then you can see at the top it says hello and then it actually has the email address ah right okay so i'm gonna teach you guys how to push the user into the store like we did yesterday with the basket and then it's going to be up to you guys to go ahead and implement that functionality so not only that we're going to ask you guys to go ahead and deploy the app if you haven't already deployed it well if you avoid it to netlify that's cool guys i saw you guys some of you guys did that which is awesome but we're gonna teach you how to deploy it to firebase so let's go ahead and do that and then we are gonna ask you guys to add some animations and some styling and that's gonna be now the homework is clear right hopefully it should be cleared up for everybody what the homework actually is yeah exactly okay dope and then what else are we going to do so i the hello is going to show up there i'm going to deploy and share screenshots and link oh yep and then add animations to it exactly adding animations and then there's one more piece which is customize amazon guys style it into your add your own little twist to amazon or maybe add a second banner or a third ban or change it up but basically let's get everyone's portfolios looking different let's add some animations i'm going to show you guys an animation library and sort of direct you in the right way and then you guys can take it from there so it's going to be an awesome piece of homework for you guys to go ahead and run with fantastic and guys remember where can they learn this you can learn this all inside of profit with javascript that we are going to be launching next week yup beautiful all right with that said we're ready to get into the build let's go we're going to be going uh full speed guys and remember if the internet dies we're gonna go live again all right yesterday it happened we just went live again if something else happens don't worry we will constantly figure it out and we will come with some kind of solution that will work for everybody okay so no reason to freak out guys and we will make it work so let's do it bro all right let's check how many people do we actually have live right now let's shout out about eleven one thousand uh and one hundred twenty eight to eleven hundred on youtube and then um on facebook about 300 on facebook live nice that's awesome dude yep and guys remember if you want to participate in the challenge first of all if you're liking this smash that like button so this video goes out to as many people as possible two if you want to participate in the channel you have to be in the facebook react group which means you have to click the link in the description below to join the challenge if you are watching it on youtube if you are watching it on facebook you're perfectly fine exactly guys i saw somebody say i'm really sick with the flu but i'm doing my best that's awesome that's the kind of energy we want here guys nice nice let's go ahead and get started bro okay dope let's do it so i'm gonna hit follow here and let's go nice so let's go ahead and go on with the homework portion so yesterday we had set everything up to the point where we wanted to build the subtotal component so we left you guys here where we had a fixed subtotal component here and we have a fixed subtotal amount here and then an empty sort of currency amount here now we're going to go ahead and change this okay so let's go ahead and open up our local host gaussian and have it running on the right hand side i do okay awesome so that's our local host let's open up the basket so let's hit into the basket nice and what we're gonna do here guys is where we had previously i had shown you we had zero items right now we currently push everything into the store whenever we add an item to the basket so i showed you guys how inside the header we actually can pull the basket contents from the data layer that we set up yesterday so i'm going to go ahead and copy that so we're going to go one two three one quick shout i just want to do so somebody said i don't see the facebook link facebook group link here's how it works you actually go to this link over here this page and this is how you actually officially join the challenge and remember you can win up to six thousand dollar online coding boot camp so make sure you go to this link here and then pop in your name and email address and that will get you in the challenge exactly guys make sure you do that get involved because it's awesome inside the community right now and everybody is on that and it's over 9 000 people in the slack channel right yeah did we actually post this out to the slack channel that we're live right now i mean i guess yeah they would have seen it nice did we post this on the slack channel yeah we did nice awesome okay i don't think so oh donation as well from twins mother madam usa thank you starts off nicely hey sick wow thank you for that actually that's huge yeah huge 5 000 donation thank you nice so guys with that said let's go ahead and start so we have the subtotal component that we were messing around with right so what we're going to do is we are going to pull the basket contents from the data layer so previously we had this use state value so i need to go ahead and actually import that use state value hook from that that's the custom hook we wrote inside of our state provider now anyone who is confused about this stuff just go ahead and build out the first part of the challenge and come back to this video um but right now we have the ustay value and we pour our basket so this is going to have whatever we add to our basket and then what we can do guys is we can go here and we can simply do the following we can actually say basket oops we can say basket dot length like so and this was should so if we save this um we can actually go ahead and let's go ahead and refresh the app quasi that's ref oh we have to do mpm star i think yep so let's do that okay nice somebody said sonny's voice is not clear okay i think it's pretty clear now i think it's pretty clear i mean yeah we've we fixed that um okay so now what we're gonna do is we have the subtotal um and we said basket dot length so once it loads up let's go ahead and click the amazon logo all right so boom here we go yep and let's add some items to the basket all right add to basket add tabasco so i added these two yep and then let's go and click the basket yep and then what we should see now is in the subtotal it should say uh was it three items i can't really see that it says two items okay awesome yeah because we added two items so now it's pulling that information from the basket and it's actually going ahead and using that right so it's it's actually going ahead and updating it so rather than having the two items like we have previously rather than having zero we're actually pulling from the basket and showing however many items we have in the basket itself next guys we want to go ahead and where it says strong right we want to have the actual value yeah so previously we have the value set to zero here and i said that this was part of the homework guys right so what we're going to do is i'm going to show you guys a nice neat little trick so i saw some of the the implementations that you guys had done but i'm going to show you a really really sort of es6 forward way of doing this so let's go to our reducer.js so we're inside of our reducer right here and i'm going to show you guys how to build something called a selector right so we're going to build something called a selector and this is actually something which is really highly used in production environments so what we can do now is we write export const and i'm going to write get basket total and this is a really powerful function it's going to take the basket itself and it's going to simply return the following it's going to say get the basket and we're going to do optional changing to prevent everything from breaking we're going to say reduce now reduce is a function which is extremely powerful okay now what we're going to do is actually so the purpose of reduce sorry is it essentially maps through the basket it's next guys we want to go ahead and where it says now reduce is a function um oh yeah there we go nice so what reduce does is it goes ahead it iterates through the basket and then it's going to tally up the total okay so we're going to have an initial amount right and we're going to iterate for each item and the way we write this guys is we put some code here so here we're going to say every time it loops through i want the item price to add to the total amount and the initial amount is going to be zero okay so i know this may seem like a confusing line of code but have a look at reduced functions and this essentially all this is doing is it essentially tallies up the basket and it goes ahead and it tallies up all of the item prices and it adds it into this final amount and it returns it directly it's into so is this basically like a fancy way of writing a for loop and then incrementing everything and tallying it up right yeah and then we return it and then we return it as a value so now if i go ahead go back to our subtotal and we go back to here and instead of writing a set value of zero what we can do here is we can do get basket total and we pass in the basket that we pulled in from our layer over here and obviously we need to go ahead and make sure that we import this basket okay so let's go up to the top and we're going to go ahead and say import get basket tour from the reducer and now guys what i want you to pay attention to is if we go ahead and add some um items to the basket causing all right let's do it so let's go to the first page yep um i think i'm gonna go with a samsung watch and an amazon echo yeah let's do it all right now it should see okay so it still says zero now this is interesting and i'll show you why it still says zero so we set the value here right but in the render text we didn't actually show the value okay so we need to show the value now i see a lot of people saying cannot read property basket of undefined to fix that guys go back to your reducer make sure you add this optional chaining right here okay so this is actual optional chaining and this is going to prevent that from happening okay so make sure you add that in to save yourself that little bit of headache go back to subtotal and what we're going to do here is this value that we calculate here gets passed in as something called a render prop so we can actually use it so we can go here and we can just say value absolute value like so boom there we go zero i mean yeah zero for now yep so zero for now and if we go to amazon add the products boom hey there we go so fast so fast i'm gonna add multiple of these damn awesome now i saw some people say can we put the function inside subtotal so guys this is actually a professional practice of having selectors inside of your reducers or i mean you can separate a separate um separate file but you want to make sure that you have the selector in this case inside the reducer because think about what you're doing you're actually taking the basket reducing it down and then you have some kind of callable function so that's just good practice you can do whatever way works for you but this is my experience from being in a sort of professional environment so i would go ahead and use that and that will make your life a little bit easier so with that said we actually have the subtotal working okay so that's awesome now we have the header which pulls in the um basket content so at the top of the head on the right you can see we've got some items and then the subtotal itself is um is where we have the the price and we also have the number number of items we also got another donation um thank you so much thank you that i appreciate that that is huge let me just play the air horns here a little bit nice and i got a nice little we got a nice comment by zachary and he says i'm definitely having to go back and rewatch the videos and find some supplemental stuff online to fully understand the why behind everything but in the meantime it is like learning to swim where they just go throw you off the deep end not the most theoretically sound but it works guys remember remember you're building the amazon clone so this is something i mentioned yesterday right it took people 10 decade or more to figure out how to be able to actually build this so it's not going to be something that is going to be super easy this is definitely going to be tough but if you push through this and add it to your portfolio it's going to look epic and then our goal is that you're going to love coding and then you're going to start learning the why behind everything exactly guys and that's going to be the main focus here is to go ahead and push yourself into that uncomfortable position and we're here to pretty much hold your hand through the entire journey until you have a lovely looking amazon clone at the end of it and you guys are doing amazing so far so don't get this hard and the slack group is also amazing for that support yeah so nice with that said we now have a finished subtotal section so that's really clean what we're going to do next is focus on the checkout okay so previously in yesterday's build we reached the checkout stage and we have these basket items right so i masked it out and the purpose i actually masked this out is i was actually subconsciously hoping that some of you went ahead and built that so that was awesome to see that you guys actually picked up on that and um somebody said code event said sonny you bought your headset yep we have a new headset new mic so it's going to be extra clear for you guys today um but we're going to go ahead and build this this lovely basket item implementation here so now what we're going to do is we're going to go ahead and build out the shopping basket itself so let's go ahead and check out so here guys we're going to call it the checkout product okay so because we're inside the checkout page let's go ahead and call it a checkout product so check out product okay now check out product and this is get rendered out however many times there is an item inside of our basket so with that said what we're going to do now is create that uh so i'm going to go ahead and create a checkout product right now we're creating like hardcoded products right before we make dynamic products is that what's happening yeah yeah got it so basically we'll have something along the lines of like over here how when we add some products let me just zoom out a little bit and we go here and then it shows up like this right so we're essentially going to just hard code some of this stuff into our app that we're building exactly so right now we have got the all of the uh products on the home screen are hardcoded um we are going to show you guys at the end of today's build how to pull that information from firebase um but for now what we're doing is all of those hard coded products in the front end so when we had the homepage up when you click add to basket we should see that list of shopping basket items in this section right here okay so i'm going to do checkout product dot js so we should snap into that in just a second so let's wait until that pops in so you guys should see that we are now inside check out product if i do rfce which is our lovely little snippets and we're going to go ahead and set this class up or set this component up so check out product and this is going to the bim convention i'm going to go ahead and do import checkout product from oops import it should be css right here import checkout product.css like so then we're going to create that corresponding css file so i'm going to do checkout product dot css like that and let's go ahead and see and now we're inside that folder inside that file sorry so we have everything set up that we need okay now what we're going to do is jump inside of that checkout product and start producing it so this is going to have a few things inside of it so cause let's go ahead and open up the deployed app so the finished one boom yep so the first one so you can see this finished one has a few things inside of it it has an image and then it has like an info section and the info section contains the title the price the ratings so the star ratings and then a remove from basket button okay so we're gonna go ahead and show you how to do the removing as well in today's build so let's go ahead and fill this out so first thing we're gonna have is an image so i'm gonna what my snippets aren't working so i'm gonna say image and this image is gonna have a source and the source is actually gonna be the image that we passed through as a prop because here this product is actually gonna have some props that pass through and in those props we can have an id an image an image a oops an image a title a price and a rating okay so we've got these props which are basically the same props that we have inside of app.js or inside of the um home page so source is the image right here and then what we're going to say is we have anybody just call you the grand papa of real it's upgraded from papa react to grandpa from react yeah damn i love you i'm the great grandpa of uh python now moving up here exactly it's a whole family over there class name equals checkout product image let's go ahead and add a class name so that we can easily target afterwards for styling and then what we're going to do is we're going to create a div and this div is going to be responsible for all of that text price rating all of that stuff so we're going to go ahead create the div here and this div is going to have a class name of checkout products it's going to be checkout product underscore underscore info oops on this console info there we go now this is going to have a p tag so this p tag is going to be here and this p tag will be the title itself okay so this is going to be the title and this title should have a class name so we're going to use class names for this one i like to mix it up to show you guys the different variations so this one is going to be check out product title and then we're going to have the price itself so this styling over here this styling for class name oh hold on so this one over here is going to be for that image right there exactly and then this one over here is going to be for the info which means the title the money and the ratings yep got it exactly that that's exactly what we're gonna do and and that it will actually include the button as well inside of that yeah oh so we can fold we'll have the button yep it will have the button as well got it okay so then we we're also gonna have so i'm going to create another p tag another p tag and thank you el manana for that donation hey damn thank you guys the donations are still coming in that's awesome thank you yeah how people are donating by the way is on youtube the ones who are watching on youtube there's a super chat button underneath the comments they click on that they click donate and then they donate so for everybody who's here watching it or donating this is for you all right awesome thank you i'm enjoying my dj's super powers bro it's so fun dude it's so fun so we're going to have for this p tag now we are going to have a small tag so a small tag better be paying attention i'm watching you you think you think we're not watching you we're watching you pay attention learn build projects we want you to get jobs five thousand people getting jobs that's our goal okay 110 effort guys let's go nice so inside the small tag we're going to have the currency so in this case we're going to have a dollar sign and then we're going to have a strong tag so this is just an easy way of building out some text so we're going to do strong tag and it's going to pop in like so and here i'm going to have the price okay so that's great and i love this comment by the way i want to just pop this up over here and priyanja says qazi hear me out i can't appreciate you anymore man this entire challenge which you guys are providing us with seems to be such a great opportunity in such a crisis oh i'm hiding some of the message can't appreciate you and the entire cp team anymore you should pat your back we will for doing so much for people you don't even know just wanted to say hold on let me hey here we go just wanted to take a moment to appreciate you guys love from india pump for more let's keep it going damn thank you so much man super humbled really appreciate it guys wow all right let's get back so dude i love comments like that yeah makes my day makes our makes our day guys this is why we do this it's for you guys so we appreciate when energy is up and for the people who are sometimes negative we will just block you and kick you out because you're affecting the energy of other people and we can't have that because this community needs to be positive and strong and it goes two ways one you only keep the best and the highest quality people two anybody that doesn't follow up to that standard they're out of the group and you get the best community exactly guys and this sort of community only sort of like is fueled off of that optimism so anyone with that negativity get out there yeah nice so now we're going to have the checkout product rating so this is going to be very similar to how we did it yesterday so we're going to have a div with that inside of it so there we go and then we are going to have a just the following code so this is actually from yesterday's build this uh snippet and i will explain it quickly so i'm going to paste it in right here and what we're doing here guys is we have an array we have the rating so this is going to be a number between like one to five for example and then here what we do is we basically take that number so say it's five we make an array of five we fill it and then we basically just map through and we so we're basically mapping through that number so if it's five it's going to map through five times it's a little bit of a trick to doing that and then basically it's going to render out five stars okay so i saw a lot of people were able to get that workings that's really cool and i love seeing that so with that said we now have all of this stuff in place we're going to add one more thing which is a button so i'm going to go ahead and say any question how is it knowing to do five stars i don't see five anywhere so how does it know to loop and make five stars and not eight um so good good question and firstly i wanna say thank you to raphael estrada dropped a five dollar donation oh damn thank you man appreciate that that's huge yeah massive dude thank you and to answer your question bro so here we have the we have one star right but what we're doing is for the rating let's say imagine you passed in like a value of five oh that's it okay so that's i yeah so that's so actually you can actually ignore this part right here yeah you could actually go ahead and maybe get rid of that and it would still work right this was a bit of a hack what we're doing right now so what we're saying is oh it creates an array of five yeah and then it maps through it five times we don't actually need the index or anything so it just maps through it five times so array takes in an input and basically it creates an empty array in the start of like five what like five undefined it's like an array of size five size five got it okay okay and it fills it with like an empty value for each one so maybe if it was with a null yeah yeah yeah like a null exactly that makes sense and then you just map it to every single value that's there and you just put a star there yep exactly nice dope okay for anyone that did want the index what i did is i did this so i basically had it previously as underscore the convention here is if you don't care about what's in the first parameter you just put an underscore in there and then you put an i right got it okay nice okay so now the next thing is we're gonna have a button which says remove from basket okay save it and what we're going to do is inside of checkout here actually going to go ahead and render out a product so here i don't just want to render some random products okay i actually want to render out the basket itself so what we could do is remember guys to pull a item from the basket you have that beautiful little bit of code which uses that use state value hook and this pulls the basket remember if we don't need the dispatch we don't actually need to include it here but sometimes it's just it's that apparent recognition of seeing it which is going to help you guys learn whoa dude arturo jose reyes marcano just whoa damn thank you so much dude holy crap bro let's go arturo coming in clutch the 25 donation thank you so much yo what is this leonardo shankan love the style the energy and the content saludos from costa rica we got five million five thousand holy crap thank you so much leonardo just love the style the energy and the content saludos guys thank you guys so much for the love and appreciation we're gonna keep going and today we also came up with a dope idea of doing something new which we had never thought about previously which is we want to actually have breakout rooms what is this static i always get whenever i switch to this this is when i switch to this angle it always gives me whatever i think people will be fine yeah so we want to do like a breakout room afterwards kind of like how when you go to an actual live conference so sunny and i were like how cool would it be that after the challenge if we literally were like in a zoom call where you and i and sunny and you can speak and we can help you we can talk about freelancing sunny can talk about react i think that could be really really cool if you actually like that idea do let us know because it's something we haven't ever done before exactly uh just uh okay there might have been a phone near the mic by the way no every time i switch to this angle that noise starts but when i go back to this screen it dies so it's something weird happening which i don't know what's happening but that's fine okay um but guys yeah let us know what you think about the breakout room session because we were super excited about that idea and i think it could be huge and it basically changes the challenge into a digital conference which is insane yes yes literally it will be like an actual conference almost like real life people are saying a breakout room would be awesome mike says that raphael says that could be awesome it's an awesome idea i love it dope athaba says i want to talk sometimes though so yes in a breakout room you will be able to talk through a zoom chat so it would be awesome hey and then gabi actually says she goes thanks a lot rafikaze i'm super motivated to land a developer job and improve my life love your energy your style and passion listen quasi or read i will be one of the five thousand developers to get the job damn energy let's go okay so here guys we're gonna say basket.map and then for every single item in the basket we want to return a checkout product okay so we're going to say check out product like so and this is going to take a bunch of props like we discussed earlier and those props are going to be simply the item contents okay so i'm just going to pop in a snippet here to save a bit of time here we're going to go ahead and do the following so here we're saying the id is the item id so it's this item id title is item title images item image and so forth and this means that when we add a item to our basket it will map through it and if we've done it correctly should show it inside of the checkout page okay in the form of the checkout product so with that said let's go ahead and check the let's go ahead and go to the amazon just click amazon link oh this is the actual one we have do you want me to go to the deployed one uh no the one that we have okay yeah so it says use state value needs to be imported yes that's a good shout uh so we need to go ahead and do that uh use state value and then we are gonna go ahead and also import the checkout product so let's go ahead and do that so import checkout product saves hey i can see my girlfriend is moderating the chat it's going crazy dude yeah perfect just keep blocking yeah let's click on the amazon logo now so it should get rid of that irish issue for us and let's add some items to the basket all right so i'm gonna add i don't know man i'm feeling like uh getting this monitor today i'm gonna get a two of them should be good for the team yeah oh nice so we can see that the two items have popped up inside the shopping basket okay yep now we're gonna do is we're gonna go ahead and style that we're gonna go over to checkoutproduct.css and just for a quick comparison we here guys in check out product of js we gave everything some appropriate class names so that we could come in ah rating are we going to throw it in like a flex box is that what we're about to do with it we are going to find a place foreign along the lines of a line items yeah actually for this one we're not going to align centrally because i'll show you why so if we go to the deployed version quickly all right we will but i'm just going to map out what we're going to do so guys we're going to take it from this like vertical thing and we're going to turn it into so it's just horizontal like this with stars that's the goal all right let's go to this deployed one yeah yep and then you can see now so it's going to be subtle but basically on the second product row can you see how the image is actually sort of um aligned to that text on the top if we did align item center the image is going to be centered with the in with the next container we don't oh i see what you're saying so it's actually aligned to the top of the text right exactly okay but if we did a line to the center instead of this image being here it would be more like starting from here to here or something yeah and it kind of looks strange which is why oh damn jonathan lagunda says i am i just landed a client for five hundred and 15 dollars yeah i'm only 13. holy crap where he said that on youtube or what uh yeah that's on youtube damn these are the wins we're talking about as well that's sick look at that i just landed a client for 1500 and i'm only 13. guys that's that's massive it's possible for all of you guys age doesn't matter a lot of people make that a thing that it's your age and i'm too old i'm too young none of that guys no excuses you can do this i was about to fix my glasses and i realized that my girlfriend crushed my glasses yesterday and i don't have any of them on my face oh no are they out now yeah but it's okay i can still see oh man all right so with that said we're gonna go ahead and style smash the little smash the like button for broken glasses guys we missed we missed the smoothest chunks that dude just like sad face like guys glasses but okay okay let's get back before get people okay so now we're gonna go to the checkout part css yeah uh and then in here we're gonna basically go ahead and do checkout product and then we're going to say um display flex display flex and then as soon as we save this now oh so car's a good point before i hit save on this go to amazon add some products and then let's go back to the screen because we want to show some hot reloading so it dynamically updates all right what's up with these stars all right here we go all right there we go okay so you can see now that it actually isn't um display plug so if i go ahead and do save oh so it's display flags now because it will save yeah but i'm going to do a margin top and margin bottom so margin top and margin bottom of 20 pixels yeah let's go ahead and chuck that in right here boom do that and then we should see oh damn it we should see a gap okay so this is gonna be an annoying issue now um where it's gonna basically go ahead and what we can do is when you're doing this kind of stuff guys i'm gonna show you a little trick okay so when it does some hot reloading like this and you don't want to keep on doing the same sort of thing where you want to have to add a product go ahead and add a static product okay so here we're going to add a title to saying this is a test this is a test test and then here with the image we'll go ahead and find an image real quick after this so i'm just going to use this um i'll go ahead and find the image in a sec for the price you just go ahead and chuck in something like 199.99 for the rating let's go ahead and do five i'm going to quickly find an image let's just do the lean startup boom let's go ahead and find that image go to images grab that and this is a little hack for you guys in case you found yourself in this problem so just pop it in like that and that will save you a bit of time now so when it loads up we already have some stack data on that screen so cars if you just hit refresh on the um on the right hand side you got it bro nice now we can see that everything pops up there okay um this is a test and let's just add in like a bunch of exorcism or something and then let's just copy that a few times so we can actually stress this thing out a little bit let's go ahead and space this out okay save that and now you can see we've got some sort of dummy information and then what i like to do is i like to copy this out like twice so then that way when we're styling it we don't have to keep going back and forth and just what we'll do is we'll come back and we'll delete these afterwards and then it will work as expected okay so back to cheddar checkout product now what we can do is we can say target the checkout product underscore underscore let's go ahead and get rid of this unscrew the info so that container i want to give this one a padding left of 20 pixels so what we should see here is when i do this how many pixels are padding left it pushed the info text away a little bit okay the next thing we're going to do is add some button styling so i'm going to go ahead and target the info but the button inside of it and then apply the following styles so this is the snippet that we need to go ahead and apply you can see it has a background of orange a border one pixel solid a margin top of 10 pixels a border color and this is a nice little gradient and black color now when we do that we get this lovely amazon looking button okay the next thing we're going to do is target that image that image is way too big right now so we're going to make sure that that doesn't happen so to do that just snip it right here so we're going to have the checkout asks can we use bem with sas as well just give our rapid fire answer so we can get back to it um no need to use bam with sas the reason being is because we don't um i mean it's yeah just keeping it simple no reason to use bandwidth sas either use um either use bem or stick with sas so some some questions i'll throw in like that just to engage with everybody in chat i'm actually guys i'm looking at the entire chat and i'm like talking to you so everything you're writing in the facebook chat i'm responding to it and some of your questions i'll give it to sunny or i and we'll just rapid fire so we can get back to the coding exactly guys exactly and also i just want to say kumar said um some of the concept is hard to get but i'll complete this challenge it doesn't matter how much time it takes after the session i'll watch some youtube videos all these concepts that's what we're talking about guys doesn't matter if you understand it right now just rewatch the video pair it up with some tutorials online and guys just get like that persistence will take you so far awesome all right so next what we're going to do is those stars right now okay those stars right now are actually sort of stacked on top of each other we want them to be next to each other so in order to fix that we can do is we can just go ahead and do this go ahead and say check out product rating display flex and that will actually go ahead and it puts everything in a row by default which is makes it super clean because you've got the stars next to each other now next thing we're going to do is target the title so let's go ahead and go here and we're just going to go ahead and pop in this so we're going to say check out product um so for some reason our printer isn't working so let's go ahead and do this and this and we're going to do font size of 17 pixels font weight of 800 so that changes the style very nice nicely and i'm also going to target the button inside of the checkout product info and we're going to change the background color to none so that shouldn't at this point uh we don't actually need that bit that was a mistake get rid of that okay with that said we actually have that completed really nicely so that was actually really slick really smooth so what we can do now is go ahead and go to our checkout and like wait yeah go to our checkout and delete this stack information because we're done with the styling so what we're going to do now is we're going to test that everything works inside of our basket okay so kazi what we need what i need you to do now is go ahead and go to the amazon logo so click the amazon logo yep boom add some products to the basket boom boom boom okay i got my amazon echo lean startup and a kenwood thing that my mom has for flour nice i've actually got that machine oh yeah you use it that's that dude makes them clean rookie you know exactly yeah my mom uses that for that yeah so we now you can see the products render out perfectly okay so we've got everything as we need it um i saw a really good question here from ammo he says sonny can we do one project with classbased uh approach react was hard for me to understand we made it simple and easy um so we do a lot of that kind of stuff where we can play compare classbased first functional insider profit with javascript so it's just something to consider we do all of those questions comparisons all that stuff inside the course okay um now we have the products rendering out so everything works as we expect now we're gonna go hook up that remove from basket button okay so the remove from basket when we click it we're going to do an on click so we're going to do an on click and we're going to say remove from basket and this is obviously this is a function which doesn't exist yet so we need to write this we're going to say const remove from basket this takes a uh this takes nothing as a primer and it just opens up here so what we need to do now is go to our checkout product dot js and here what we're gonna do guys is we're to basically go ahead and remove the item from the basket right now the basket itself is actually so in order to manipulate the basket we need to go ahead and pull in our magic snipper code which is this one this is the one that we use to pull information or change information with the dispatch right then what we need to do is go ahead and import this otherwise our code is going to cry and freak out so now what we need to do is if we ever need to manipulate the basket remember guys we need to dispatch something called an action into the reducer so into the store and then we need to go ahead and pick it up here so we had the add to basket so what we're actually going to do is we'll add something called a remove to basket okay and what we're going to do is here we're going to go ahead and say dispatch so we're going to dispatch an action and the type of the action so team 2kd says why why are we repeating the amazon cone we're actually not repeating we're actually building on top of it so yes we're at this point we're building but tomorrow we're actually going to be adding full payment support from stripe so that was not done previously yep the payment support and the stripe functionality that's going to be brand new i'm just fixing the audio on my end now it should be perfect everywhere dope so then what we're going to do is we are going to go ahead and do type and then we're going to go ahead and say remove from basket so we're going to dispatch it an action with this type attached to it and we need to pass along the items id the reason why we need the items id is because we're going to use that to actually go ahead and find the id in the basket and remove that product once okay so we're going to go ahead and do that and then we are going to go into our reducer and then in here because we need to actually listen to this action so we need to go ahead and say case remove this one is going to be remove from basket so it's going to be removed from basket and then we need to do something here right now what do we do here in order to be able to remove an item from the basket so this is a interesting situation that we find ourselves in and this is uh so future code actually just dropped another five dollar donations sorry about my homework working super hard for tech interview whilst also doing the amazon build but still wanted to submit something and show progress oh i think she meant the screenshot that she submitted um what's up i think she meant the screenshot that she submitted so future code actually donated five dollars oh nice oh sick thank you yes she said sorry about the homework working super hard for a tech interview so she has in the tech interview on friday and she's because whilst also doing amazon build i just wanted to show that i was making some kind of progress so that's awesome thank you for the donation elizabeth that's epic and the code looked clean by the way when i looked at it i was like that's crisp yeah exactly super super nice now okay this is a good point so somebody actually went ahead and added a snippet of code right and i'm going to show you so somebody did this but i'm going to show you the problem if you do it this way guys okay so somebody went ahead and added this snippet and so they actually wrote return and then they added this in okay now this is an answer which i'm assuming a lot of you would have got to and what we're saying here is um return whatever the the state whatever the store looked like previously but change the basket so let's go ahead and drop this online so we can see this but uh change the basket and then they're saying filter out the item id from the action and this is going to be action id i guess that's a filter out anything where the item is matching the action id now this is it seems like it would work right but um so some people said today my voice isn't that clear something it's actually going to be more clearer i think today but um maybe the gain isn't right because just double check that um no you sound really good bro yeah okay awesome so what we're gonna do now is let's go i'll show you the problem with this way okay so this does work but i'll show you this there's a big downside to this so let's save it and let's go to the amazon build right now and go to amazon itself so click on the amazon link now what you want to do is click on for example let's add like three of the lean startups and one watch right at three of the lean stops and one watch now let's go to the basket don't press anything just yet inside the in this next bit okay so what we're going to do here is when we click remove from basket what we should see now is it only removes one of those lean startup books right but because in the code what we're saying is filter out all the items where the id matches the action id then what we're going to do is it's actually going to go ahead and remove all of them so go ahead and click that so go ahead and remove from basket yup see what it did all right that's wrong guys because it removes everything right it removes everything and that's not what we want to do so but hold on aren't you looking up the specific item id and doesn't every oh so every single item with that id of that book you'll delete it yeah exactly and we don't want to do that right so you see because you click remove from basket and it kind of went through and it just stripped out all of those books right let me do that again so how do you take care of that right so to fix that we have to break down the problem and and here is what we do guys so let's go ahead and actually um should get rid of the index instead of the id yeah so we have to firstly find the index of which you're trying to delete right so this is how we do that right so firstly we say const and here we're going to say the index and what we do here is we get the state we get the basket and we use this fine index function right now what this is doing is it's going through all of the basket items and it says does any of the basket items match the action id that i passed in right now this only finds it finds the first one and it returns it to you so we'll find the first one first match and it will return it to you so it won't find all of them it'll find the first one and return to you then what we're going to do is we're going to copy so we're going to say let new basket so we're going to copy the basket copy the basket into a temporary variable so we're going to say copy whatever the state dot basket currently had so now we've got a copy of it inside of new basket and then what we're going to say is if so if the index actually is greater than what uh zero so if index is greater than or equal to zero then it meant that it actually found an item inside the basket okay so what we're going to do is we're going to do something so if it found it then great otherwise what we're going to say is we're going to do console.warn so console.warn i love this dev roy says qazi sounds like the interviewer i think that's that's perfect that can always be that person is like interviewing exactly yeah here we're going to say console.1 can't remove product and it's going to have the id of the product as it's not in the basket okay so now what we're going to do is so some people are saying just use different ids so in it depends how an ecommerce site is built up to some ecommerce sites every product might have the same id so you need to know how to just delete one right so here what we're going to do is we're gonna say new basket i knew yo i gotta say that this is probably one of my favorite comments ever to see william goes i assure you history will remember you guys thanks again i remember talking to sunny and i was like literally it's more than anything like we just want to go down in the history books like more than anything like it should be like one of those things where our goal is that clever programmer just provided more value to the developer world than anybody ever in the world and exactly if we can achieve that then that's an amazing goal for us yeah that would be like game changer that's exactly what we're fighting for that's why we have that 5 000 go guys and we're reaching that pretty quick actually like everyone we see loads of jobs coming in and um if you do get a job definitely let us know miriam says i love that kazi asks questions and points at important things that's useful for a beginner yeah so i don't so i am a python django developer sunny is an incredible react and javascript developers is a different world for me but i am enjoying javascript i'm picking up react and it's like mindblowing how fast you can do things so when i have questions i will just ask them and i hope that it also brings you value along the way because maybe if something isn't making sense to me or maybe if his explanation to me it makes something click for you then that's fantastic exactly exactly guys and he actually helps out the kazi is also learning because he's able to point out the things which you guys might be get stuck in as well that i might overlook so it's a really good god i love you guys i just want to say i love you guys i'm looking at the messages and that [ __ ] is almost making me emotional like that's thank you guys that's huge jesus christ like it's actually insane thank you crazy now guys what we're going to do is we're going to say if the index was greater than 0 then it found the id now i know some people are saying if i click the second item with the same thing it's going to take you off but we're keeping it beginner friendly guys so that's why we're doing this way we're going to say new basket splice and then what we do is we say pass the index and then splice it by one well what this is doing is it's going to the point at which you the point at which inside the basket that item was it's basically just cutting it by one right so it's basically chopping it off by one inside that array so what this does is it means that the new basket now actually goes ahead and it looks a little bit different okay so what we can do then is we can then say that the and then what we can do is we can go back down here and we can say um yeah we can say return we say return the current state so i'm going to drop this and return the current state and also the basket is going to now be the new basket that we just modified okay so that's how we do it save this and let's go ahead and double check this right now uh so guys just go to the amazon let's go to the home page let's do it so boom yep and let's go ahead and add a few of the same products in man i'm gonna have to go with a few different products here um i like my ipad pros amazon i already have the lean startup book you know so i think all right good with this if i remove nice wait did it do it right hold on yeah i don't believe you sonny let me try it again all right okay okay okay do that guys all right gentlemen hey sick okay beautiful nice so this is the sort of beginner way yes there are some caveats even to this approach but we're keeping it very very userfriendly we're beginner friendly when we're doing this so hold up hold up let me just let me just clarify this so if i okay so i click here right now let's just go through this process kind of visually so i don't like these items i got give me give me i'm just gonna pick like some unique items all right so here now if i click this ipad is it in position two in the array yep okay so this is zero okay hold on all right so this is position zero this is one and this is two yeah exactly so when i click remove from basket it index is two yep dope all right and then basically where is the line that basically says to go remove it is this the splice line yeah so what we did is we actually copied the current basket content so we had like a copy of it inside of this variable new basket and then what we said is go to the new basket and splice at 0.2 so basically cut out that element okay so okay hold on so if i got this array right here right yep and i got this guy there and i got this guy there and i got this guy right here right so your line of code what it's saying is instead of making this entire thing the array make only these two things the array exactly you're saying go to the one oh you know like i knew what i understood what slice did yeah like i think this is the first time i'm seeing like okay this is actually exactly what it does that's sick yeah and even if you chose like a middle point for example if we spliced out the uh the item at position one what it does is it goes to that middle point and cuts up that item and then you've only got zero and and the thing that was in two and now in one got it okay nice this is sick so okay this is it gets rid of it so i just want to play out one more so what happens if i remove this so then how does it work so so now it's going to go to the middle element uhhuh so it's going to go to this middle element yeah it's going to go to that one and cut it by one which means that now all we have to imagine like it's it's got that element it won't have the middle element anymore it won't yep and then it will have the next element so now we have two elements in the array and it's the the first and third one and the middle one will be gone okay so the new array is just going to be made up of like say this element here and that element and our lean startup is gone okay got it yeah okay beautiful nice now i see a lot of people saying this does not remove this exact time it only removes the first one with the id yes this solution does says such a simple explanation of something so complex thanks guys ojobel says amazingly explained um yes ani that was like you gave a great explanation for that i found yeah i think the visual breakdown is awesome as well yeah i think that helps a lot of people yeah so yeah guys there this is it and this will only go and find the first one and then delete it so if you were if you had like a few things and you tried to delete the the third one yes it will go ahead and change it in slightly in a way that we don't expect but it's completely fine for this kind of build guys it's completely fine right yep okay let's keep going yeah this is awesome okay so with that said now we are going to go ahead and we've got the remove from basket functionality complete so the next thing guys is we are at this point we essentially recap the homework we built out the remainder of yesterday's build and at this point we are at the point where we can actually go ahead and build the authentication so let's get excited get pumped up and we are going to login age right now the authentication normally it's everybody's nightmare but with firebase and the way that sunny has prepared for you guys it's actually going to be one of your favorite things so i'm excited let's do it it's awesome man with with firebase it makes it so simple um so the first thing we need to do is actually have a login page right so let's go back to our app.js and here we had our router so we had a direct router rendering things and we're going to create a route now called the login route okay so we're going to go ahead and create a login group so this one's going to be login and this is basically just going to say like just to demonstrate this is actually rendering out the login i'm going to go ahead and say login page and then what we're going to do is we're going to go to our header and we're going to go to where it said sign in let's go to our header where it says sign in we're actually going to make the sign in button um maybe i should add to the top what we're working on kind of like we do on when we're doing the live streams i think it's helpful yeah all right so what are we working on uh now we are working on building the login page okay dope so let's make sure we show that up here beautiful so now everybody could see that sick all right got it okay awesome and when we say that page let's also go to that page and show them so when you say the login page it's when i click sign in and it's this page specifically exactly we're going to build all of that and the logic around it sick so this is what we're about to build you guys get ready exactly get pumped up guys because this is going to be a fun part of the build because this is actually mindblowing when you see how it works and how are we building the front end right now so maybe right now i shouldn't talk about user authentication yeah um yeah we're gonna do the we'll just build the front end first and then we'll do the authentication portion okay so i'll call this build the front end yeah put the front end for the login login page yep beautiful okay so now what we're going to do is where we have the sign in we are going to go ahead and where we have this header option i'm going to surround this inside of a link yes it's going to surround it inside of a link and then we're going to go ahead and cut this and it's going to be surrounding the actual option so like so yeah yep then this link is going to say it's going to take us to the login page so this goes to forward slash login like so okay now what will happen is uh let's go to our local host okay yep uh and now what i want to do is if you click on that sign in yep yep now what we can see is that the header is included with that right so we don't actually want to include the header at this point so you know so like this one we don't have the header here yeah so we don't have that there so this is an issue when we actually have the header outside of our route so what we're going to need to do to fix this is i'm just going to get rid of the header and the global level and put it in only at these two levels here so only when we have the checkout or the uh home page we can go ahead and get rid of that code save it and then we should be able to see now that it just says login page okay so now let's go ahead and build out the login page so the login page is going to have a few things it's going to have a a it's going to have an amazon logo at the top so let's go ahead and build oh so first we need to actually build the login component so we're going to replace this with something called login we need to create that file so we're going to create a new file called login.js shout out to melinda and he goes yo this is the best way to spend a birthday that's awesome hey that's insane happy birthday that's happy birthday dude wow wait rfce there we go and then here we're going to do div class name equals and then here i'm going to say login okay so login there we go and here i'm going to go ahead and do import again.css and as always guys we're going to create the login.css login.css files we should pop into that in just a sec there we go and now we are going to go ahead and build out the login page so the first thing is we are going to have an image okay so we can have an image and like so and this one is going to have a source and this source is going to be the amazon logo so i've gone ahead and grabbed an amazon logo from google this one right here we got a lovely donation from romell ebay thank you so much dude he says how to add user authentication with google yeah or firebase user collection so very good one second so what happened is damn we're still live on youtube so what's up youtube but unfortunately i think we just got off facebook and it's not even an internet connection actually this time it's something else so um i'll try to we'll try to get that back up and running uh you you know just enjoy the stream for a second yeah so guys i will answer some questions in the meantime so i said facebook died if you were on facebook um i mean i i guess it's not going to reach them now but just like go over back to go over to youtube we render on both we stream on both platforms for this one reason and i can see the number is actually coming back up so that's actually pretty awesome to see you guys are actually making your way over from youtube so in case anyone has joined from that facebook stream welcome and we're going to be carrying on the stream in just a second give some time for those people who got disconnected to actually reach over to the youtube stream instead um okay so a few people said yep so we actually see that number coming back up this is awesome guys thank you for showing that willpower and i know whenever these things happen that we're going to conquer it we're going to overcome it and we'll get through this sort of stuff awesome right so let's see yep i'm going to go to the facebook group the five day react challenge is the stream down or are we back live it says live now back somebody says back hey are we back i can't believe it if we're back back back let's go and on the same stream uh let's go get that energy back out guys just get it going baby we ain't going down facebook can't take us down exactly guys let's go now's coming in for the trail mix [ __ ] we're still live on youtube but why why does this keep happening i think what we'll do is let's drop a link to the youtube in the facebook uh chat dude and that will save everyone yeah let's go ahead and do that so guys inside the comments maybe inside of facebook if you guys can all help out by going to the facebook group chat and just drop that in the comments and that will actually go ahead and reach over to the youtube link i think that will help a lot of people out yeah and maybe even in slack channel to let them know about this but um i mean do we end the stream and start it again no let's keep the stream we still have 900 we still have a thousand people on youtube dude i know but we have zero people on the facebook group so and we mainly you know like i think i don't know i feel like we should really yeah we mean we could do it if everyone's watching right now we could go ahead and pause the stream here and restart it again as day two what do you think i don't feel like that's i would say maybe drop the link in facebook i mean what do you guys think like what's the best thing that we should do right now don't end facebook is not working yes a lot of people are saying send people from facebook to here they're saying no don't end it okay we have joined on youtube no worries are you guys coming in from facebook right now if you if i start to see a bunch of people coming in from facebook we will just keep this one running but if we're not then we're gonna go back because you know yeah and what we could do maybe is inside the facebook group afterwards link the youtube video as a post so they have the entire thing you know okay don't end don't end don't drop facebook okay all right so a lot of people are here from facebook okay all right all right let's keep on going let's keep on going all right hey all right guys we'll keep going like yes okay let's keep this thing going all right guys with that said we're gonna pretty much jump right back into the coding so there's no more down time for you guys exactly so here we have the image dropping right here so we have the we're going to save it and what does it say login is not defined okay so in app.js we need to go ahead and import the login component so i'm going to go ahead and do the following do this login there we go save the file um we should see now if we have login.js uh it should be there we go so we get that huge amazon logo okay i'm going to go ahead and give that a class name so here inside of image i'm going to go ahead and drop that down give it a class name of login logo okay like this and i'm going to go ahead and just push this a little bit forward like so and now we've got this lovely image right here and what i'm going to do is i'm also going to make this a link so this is actually going to be clickable and it's going to take you back to the home page okay so it's going to be a link and it's going to take you back to the home page and then we're going to go ahead and close up that link over here so it was for the worst reason dude it was like like it just breaks my heart it was like facebook thought that i was not me and it just blocked me and then i had to like recreate a password really like literally was like oh i don't think it's you like it just blocked and it's like that's so annoying dude like literally things that have never happened before ever like since the start of we've done how many live streams we've done like 40 live streams in the last like month or a month and a half and none of these errors have ever happened it's just the most bizarre freaking thing i've ever experienced exactly even yesterday that we had the internet she was like guys it happens when we just go live on these bigger challenges for some reason like it's crazy guys it's like the most frustrating experience because we're doing this for the people and then it goes down and it just puts friction and now somebody who was probably going to change their career forever and become a developer now they literally don't get to see the video and they don't get to become a developer they just drop out they're just like hey yeah i don't think i'm gonna do the challenge anymore exactly yeah super annoying guys um but we can see that number coming up on the positive note so a lot of you guys have made it over yeah and we can see we're actually climbing back up to that original number again so that's all right it's increasing now yeah somebody's like um please play the sad music rip facebook live stream right now we're back we're back live nice all right so what we're gonna do now is we have that link okay so the link we need to go ahead and import from a reactor dom so i'm going to go ahead and import that we're going to use this layer but i'm going to go ahead and pop that out for now so with that said this is going to be linked to equals there we go so amanda was like mark zuckerberg and jeff bezos are all jealous yeah exactly honestly guys they are dude they saved this and now if we click the amazon picture kazi it should take us back to the home page mark is threatened by qazi all right so okay i'll click okay so i click that button yep nice okay so that takes us back so if we click the logo so let's go back into the sign in page hey are we going to throw object fit on this bad boy we are going to throw object fill on that so we're going to go ahead and quickly fix that because right now it's very hard to see anything else with that huge logo in there so i'm going to apply the following styles to this so we're going to target the login logo and we're going to say margin top of 20 pixels margin bottom of 20 pixels object fit contain and this keeps the aspect ratio whenever we're resizing and we're saying width of 100 pixels and then margin right and margin at the bottom okay so that's going to be the first one and then what we're going to do is we're going to target the login container so i'm going to go ahead go back and do log in so like this login target and we're going to say display flex so display flex like so i'm going to do flex direction column so flex direction column like so and then i'm going to say align items in the center align items center save it and this actually pulls everything into the center i'm going to give the height 100 view height or height 100 view height like so i'm also going to give it a background color of white and the reason why we're going to do that is because um actually we can keep that keep that covered for now i'm going to add in anyway because it might have been a reason afterwards but we leave it afterwards if it doesn't work okay so now we have the amazon logo at the top and what we're gonna do next is go ahead and go back over to our login and here now we have after the link gonna have a container called the login container it's gonna create dev it's gonna be div it's gonna have a class name so div class name of a login container so login underscore underscore container like that and then this one is going to contain all of the the user input so the email the password all that stuff that we saw before it's going to have a h1 and inside this h1 it's going to say sign in so oops so it's going to say sign in signs in and then we're also going to have a h5 which says email okay so as you know firstly we're going to have a form so the first thing we're going to do is we're going to have a form this is going to be where everything sits inside of so we're going to have a form and then here we're going to have an h1 and i'm sorry an h5 and guys for anybody that gets lost or anything like that don't worry keep coding for now but i just want to let you know that we're we are gonna have this repository so you can actually go and download the code um and be good to go so at the end of day two we're gonna push our code here so have everything updated but you know don't use that as an excuse to just be lazy and not um actually code exactly guys exactly so make sure you do give it a full attempt at coding it yourself and you'll get the most value but we will be sharing the code for you guys afterwards so he's going to say e mail and then we're going to have a input so it's going to have an input over here and this input guys is going to have a type of text so by default is actually text we're going to write anyway so type of text like this then we're also going to say we'll set this up afterwards we're going to have one which is an email i'm going to copy this i'm gonna go ahead and and real quick sonny i'm gonna actually go live on facebook just for a little bit and let them know that we're on youtube okay okay so so here now what we're gonna do is i'm gonna go ahead and have the password like so and here we have the type is going to be not text but password now guys i want you to pay very close attention to this right here because if we change the type to become a password what happens then is that the field as you type in it's going to basically come up as like that sort of asterisk it's not going to show your password your characters so very important thing you don't want your password to be in clear text okay you really don't want that uh for obvious reasons um so we we're gonna make sure that that happens like that then we're gonna have a button so let's go ahead and have a button like so this button will say sign in okay so we're gonna have a button which says sign in like this right so we have the button and then also just as a nice little finishing touch right underneath all of this form we're gonna have a p tag which says by signing in you agree to amazon's conditions of use and sell blah blah and this is what amazon said um but we're going to change it so amazon's to the amazon fake clone conditions of use and sell please see our privacy knowledge our cookies and blah blah blah right so this is like something that comes from amazon itself so if we go ahead and save this we should be able to see on the right hand side once it reloads um but cause he's currently finishing that live so what we can see is it's gonna have a p tag with this finishing stuff right here now there we go um what we're going to have next is a button underneath and this button is going to be you say you didn't have an account right let's say you didn't have an account you want to basically have a button which says not to sign in but you create your amazon account so create your amazon account like this okay now what i'm going to do here is create your amazon account like so create your oops create your amazon account here as well and then we are going to give the following we're going to need to give a bunch of stuff some class names so that we can come to style it so for this button i'm going to give a class name of login sign in button okay so this one's going to be login sign in button and for this one it's going to be a class name of login register button okay looking in the register button like this and i can see that number is coming up so that's awesome guys we almost have 1100 people on um youtube which is insane thank you guys for the support um so now we have this right here so we have create your amazon um account right there so we have the register button we have the sign in button we have the login container we have everything that we need at this point okay now what we're going to do is we're going to go over to our login.css and we're going to style this to look as we need it the first thing we're going to do is everything's sat inside of a container if you don't if you didn't see that so all of this the the sort of form and everything sat inside the logging container so here i'm actually going to go ahead and do login container so log in on this console container like so and then in here and apply it the following styles okay so it's going to pop this in right here so a few styles and we have the width of 300 pixels height to fit content right so it's only going to fit the content that we actually have inside that container then we're going to say display flex flex direction column or the radius of 5 pixels so it's slightly rounded and then we're gonna say order um one pixel solid library and a padding of 20 pixels okay now i saw marius florescu said when we get to see some tutorials on firebase cloud functions tomorrow we cover cloudbased fire cloud functions and stripe payments so make sure you stick around till then we have some interesting really really cool stuff for you guys and that's going to cover all of the cloud functions tech and everything like that so now as soon as we hit save we should see everything centered it has a nice border okay so that's really cool now what we're going to do is we're going to go ahead and target the h1 which is inside the login container so i'd like to show you guys a mix of how you can target elements in this case we are simply targeting it like this we're saying inside long container target the first chart which is h1 change the font weight and the margin bottom done next what we're going to do is target inside the login container inside the form the h5 element so this one right here so inside the login container inside the form is h5 how do we do that we go ahead and do this we say inside the login container inside the form target the h5 element and give it a margin bond with five pixels which is awesome and then we're going to go ahead and do the same thing for the input but we're going to apply slightly different styles here so you can see here we've got the form input field we're saying a height of 30 pixels a margin bottom of 10 pixels a background color of white and a width of 98 okay next what we're going to do is we're going to target the login container p tags so we're going to say any p tags which are inside the login container so this one by signing in you agree to blah blah blah here we're going to go ahead and add that in so we said target give it a margin top of 15 and then the font size we're decreasing it to be um a bit smaller so we're going to go ahead and say um oops what am i done the yeah we're going to say decrease it to become 12 pixels okay i'm going to go ahead and format that and then next what we're going to do is for the sign in button so this is the same styling we've been doing for the other buttons i'm going to go ahead and do this so i'm going to go ahead and say login sign in button and this is the same styling we did earlier that says background of orange border rate is 2 pixels width 100 pixels height of 30 pixels border 1 pixel solid margin top of 10 pixels and then the border color as so okay then that means it's you see that this is starting to form together really nicely yeah then we've got the final creme de la creme to this which is the ram um the register button so here you need to go ahead and do login underscore underscore register button and here we have a border radius of two pixels width of a 100 height of 30 pixels border one pixel solid margin top of 10 pixels and a border color of dark gray now guys you can see how insane was that right we just created we added some styles to it and you can see like we get that beautiful amazon looking login page now i think that looks really awesome let me know in the comments right now if you got to this point or if you think it looks like amazon i mean i think it looks like amazon you guys can let me know i think we've done a damn good job of making that look like amazon um let us know in the comments right now if you're pumped about that design and um yeah let's keep that energy high guys um because that is an awesome looking amazon right now so so we have jason here says i'm loving it dtr says it's le patch moore says it's just like amazon warp says pretty close thank you dude masuda says awesome perfect job aki says damn varsity says proper levani says it's so cool patch it's so beautiful inote says a thousand oh a million billion percent nice dude um i think that says 1k likes oh yeah we just hit 1k likes as well thank you guys so much guys yes it looks like i'm saying great song okay so awesome guys loads of positivity from you guys so what we're going to go ahead next and do is actually go ahead and code some functionality to this right so now what we're going to do is go back to the login component so login.js now this is where it gets insane right so first what we need to do is we need to get out some kind of way to track what we have in our input fields so right now i have no way in the code to track that okay so what we're going to do now is go back to the top of the file we're going to use some state here so what i'm going to say is cons email set email so we're just creating a piece of state here this is how you write variables in react think of it that way we say use states this is the use date hook and by default the value is empty brackets like this we need to then go ahead and import it as such like that and then i'm going to copy this and i'm going to do the same thing for password so password go here set password like this and there we go so now we have a bunch of stuff which is pretty cool and then what we're going to do is to connect these to these pieces of state what we need to do now is go to and i love this by bhavi kalantri says getting errors solving them and moving forward that's what we're talking about guys i love it when we actually get errors on the live stream because it's really cool to go ahead and show you guys what we how we debug and how we go through that process ourselves all right so now we're going to go ahead and on the input type where we have text this is going to be from the email so we say value equals email now what we just did here is we mapped the value email to this email state right here and that goes ahead and connects the two things but we need to track when the user types in so so every time the user types in it triggers something called an unchange and what this does is it gives us an event right so an e what we do is we pair this event with an arrow functions we say every time you type in it fires off this event and then we're going to say set the email to whatever e dot target dot value is now e dot target of value is essentially what the user typed in so as the user types in we're setting the email and then what's happening is it gets mapped here now this creates like a sort of circle which means that if we type inside of the email it actually goes ahead and we we have access to that now inside of this beautiful email variable okay um so i wouldn't recommend setting these to no guys because inside of an input you never really have no is essentially what you would use is an empty string so don't don't have no have an empty string okay now for the password what we're going to have is we've already done the input type as password i'm going to go ahead and do value equals password like this and then we're going to say on change so it's the same logic applies but we're here we say e every time we type in it fires off that event and we're going to say set the password to become e dot target dot value which is basically whatever the users typed in now we have um tracking for the email and for the password and every and everything gets updated inside this uh piece of state and this password piece of state okay and we have kazi back hey let's go yeah man i'm back uh just went live told everybody on facebook to move over the party is taking place on youtube and then we're gonna be back awesome dude that's nice and i can see some people are flooding in this is nice yep perfect thank you guys appreciate the love awesome so now you guys can see that we actually have so um we we can track when we type in the email and password but we also want to trigger off two functions now we want to trigger a function when we do sign in and we want to trigger a function when we do ch create your amazon account so we're going to link a function to this first button which says sign in and we're gonna say on click right on click here i'm gonna say on click sign in okay so i need to create that function up here and say const sign in and this actually takes an event because it's inside of a form i'm also going to set the button type here guys to submit the button type to something that means when you're typing in the input so let's say you're typing an email typing the password if you hit the enter key now it will actually trigger this signin function which is the natural behavior what we expect but we don't want it to refresh so this next line is crucial we said e dot prevent d40 okay so this will actually go ahead and prevent the page from refreshing we don't like refreshing and react we want it to be super clean i can see leonardo chunkin says prevent default so he's getting he's already beat me there so that's awesome yeah so we do that and then what we're gonna say is um some fancy firebase login sheet okay so fancy firebase stuff happens here okay um and then what we're gonna do is underneath here for the uh this button i'm gonna say on click and this one is to be the register right this one is going to be the register function so on click register register like so okay then here i'm going to go ahead and create a another function so we'll say const register like this this takes an e i'm going to go ahead and do this so e dot prevent default we don't actually need this here but i want you guys to get into a habit of doing this e dot prevent default and then what we're gonna do is we're gonna say here do some fancy firebase register g okay so it's gonna basically just need to like fill out these two bits now so how do we do all that firebase stuff right how do we get all of that firebase stuff happening and all that sort of i mean we would think it would be tricky right but what we need to do now is we go and hop over to firebase cozy and we actually started some of it yesterday yeah we did yeah and he did yeah so just as a reminder for those of you guys even if you were here yesterday what you need to do is set up an account go to firebase login to the account that you have go into the project that you set up so um we need to go ahead and find the project that we set up yesterday yep um should be in the other one and we basically went ahead and grabbed the um config file yeah how you get it is just go to project settings go all the way down to where you see config copy that and then bring it over and we put it in our file called firebase.js so you guys can also put it there exactly so that's going to set you up really nicely for what we need to do next okay so with that said now let's go ahead and open up uh firebase and let's make firebase full screen for a second okay now on the left hand side you want to go to the authentication tab so it's where it's the one that's just below authentication and here guys we go to sign in method so it says that button there which is set up sign in method or that top tab there we go go to email and password hit the little pen icon or click it and click enable right all right so top thing which is enable and then click done so and that's actually gone ahead and set up the first part so it's crazy how simple this is going to be now yeah so we need to do is we need to go over back to our code open up the terminal and let's open up a second terminal all right let's do it so boom there we go yep so open the second time yep cdn and what we're going to do here is we are going to do npm all right so let me go ahead and get my access as well i'll request that um but i mean you can type this one so it'll be npm install firebase so let's type out npm install firebase and this will pull firebase into our project because we're going to need it for a few things right now and they need to do the global install as well if they haven't done that already for the firebase tools yes yeah so basically what that looks like is this command over here it should look like sudo npm install global firebase tools okay so this is the command you're gonna need if you haven't done this yet exactly you're going to need to do that do you do all the things like the deployment and all that stuff so that's going to be crucial for you thanks guys for all the love people are like hey pumped to see quasi here missed him yesterday thank you guys yeah yesterday the connection was just kept breaking for whatever reason so we had the demo gods on our ass yesterday we still kind of do yeah they still do dude yeah crazy right so we just installed firebase into our project so now what we need to do is go over to firebase.js oh so we're done right with the front end of the user authentication now we're doing the yeah so we actually built the front end and what we're going to do now is build the login functionality right so user authentication working on user authentication yeah working on user authentication with firebase all right here we go boom nice um you don't really need the url at the top somebody's saying that that it doesn't matter it's just console it's like firebase console you you're not gonna go there by like typing in the actual thing anyway yeah exactly all right so sweet yeah we're going to do is at the top of the config file so where we added our convict before yeah we're going to say import firebase from firebase that's crucial here somebody says help me i'm on chromebook and can't do any of this you should not be on chromebook yeah exactly and guys if you are on something which doesn't support use something like repple so repl.it is a website where you can go ahead and actually code on the repo ide or use like code sandbox but still like it's going to give you problems you're going to run into weird ass problems and issues so it's just so much better if you don't use a chromebook and use a macbook or a windows computer or like borrow a computer from a friend exactly yeah definitely so now what we're gonna do is we're gonna set up two things right we are going to first initially initialize the app so we're going to say const firebase app and this is going to be where we're going to say firebase dot initialize app so i'm going to go ahead and make sure i suppose right so firebase.initialize app and all we need to do here guys is pass in this config right so it's an object we just pass it in that's it pass that in and this will go ahead and set up everything whoa we just got a massive donation from bradley damn hey 15 donation thank you so much dude dude thank you that is incredible and he's actually in profit with javascript and profitable shortcut down whoa that is sick thank you eltav og and he just dropped a 20 donation and he goes sorry for being so negative i'm running out of options and i've begun to get more frustrated with my inability to land a job i'm going to give this my all i'm not interested in the prizes i'm just interested in learning somebody give this man a big big round of applause because i think that's the attitude that you absolutely need to have in order to crush it like 100 percent and yeah thank you guys appreciate it exactly guys bring your a game here guys 110 is what we said from day one and if you put that in guys there has been already like a lot of people who have landed clients landed jobs with this stuff so make sure you bring that a game and we will promise you we will give your best our best effort in changing your life okay so we're like what i say is we're like 401k we'll match you okay you give your 10 will give you 10 you give your 300 we're going to give you our 300 percent exactly guys and we are going to be there the entire way to help you get to that point so we just went ahead and initialized the app with the firebase config so that's the first part and then we got these the second step is initializing two things so we want to initialize the database we're gonna say constdb equals firebase app right so firebase app the one that we just initialized dot firestore right the firestore is the realtime database in firebase and then the second one we're going to do is const auth right auth equals firebase.org like this now this actually goes ahead and give us gives us a variable that we can use to handle all the signing in and everything like that now we want to be able to use this stuff outside of this file so we need to go ahead and do export and here i'm just going to say db and auth this allows us to export these two things the database and the authentication oops there is any authentication and be able to use this oops that should not be deb it should be db and that will actually allow us to go ahead and use this outside of the file so with that said let's go back to our login.js over here and now we've got the sign in and the register okay now for the login let's do the the registering first because i'll help you actually create an account okay so thank you so much atarva lawand thank you so much for the donation you guys love your projects man hats off i appreciate that dude um so now inside of the register we're gonna go ahead and say auth so firstly let's go ahead and pull this in from our local firebase so at the top we can say import auth from our local firebase and then here we're going to do auth and then we're going to say dot then we're going to say create user with email and password okay now here and this is this is attached to this guys so it does sometimes drop off like that and it's completely fine to do that we're gonna say create user with email and password and we're just gonna pass in our email and password oops email and password like so now this is the email password in our state remember the one we connected to those input forms so it'll work really nice then we're going to say then and what this does guys is it literally goes and creates a user with an email and password and then it will come back if everything was good right it will come back with something called an auth object okay now if the authentication was good and everything was good and everything went smooth i'm basically going to go ahead and say console.log the authentication object that came back so this would mean that it successfully created a new user with email and password right so that means it did that and then we're gonna say catch so for any reason there was an error we're gonna get the error and we're gonna say alert on the screen the error message okay so as soon as i hit save now this is going to be literally all we need to do to register an app so kazi let's go ahead and go to the localhost oh yeah all right here we go boom dude it's so easy to catch myself if i'm muted i love this new audio setup like it's just so good so good so good yeah even though we both got new mics and everything and it sounds amazing when you go closer like yeah and you can hear yourself in the studio monitors like these headsets that we have we can actually hear our own self and if we don't hear our own self it means you're like it's it's just so good man makes you so happy but like we were thinking about it and we were like screw it let's invest into this because it's going to help so many people just the audio and everything so sunny just got that equipment yesterday exactly guys it was actually today so we set it up and we're using oh nice nice short mics for the win all right so what we're going to do now kazi is in the email and password let's go ahead and add an email and a password hey corey says this is sick i'm showing this on screen uh corey says just signed up for pwj if you haven't you are missing out and should consider the investment in pwj but most importantly in yourself keep going y'all and looking forward to what's to come nice dude thank you so much that's lit see your message all right um awesome so let's go ahead and um for the registering we're going to go ahead and say oh yeah so cause the end are your email and password all right here we go so what we're going to do is once we go ahead and do this um guys somebody goes when kazi says so good you sound like anastasia from 50 shades of grey damn oh [ __ ] it's so good you know david blaine his voice i love his voicing he's always like hey guys you know i didn't know magic before but yeah can i learn magic [Laughter] you clicked there right i did i okay i hit create your amazon it says the email is already in use by another account oh no so you actually did it you did it right so when you could create the first time it created the account and in the console we actually logged out what it showed got it okay so let's open up the inspector um okay inside of um i was just reading the comments shabir says i want to get out of this country i can't use super chat damn thank you that is sick love the sentiment all right super chat is a donation on youtube there we go and see it says object right where there it goes so up there yeah so the first time kazi clicked it guys it came back with this now this means that it's successfully logged in now if we click on user you'll actually see where what user oh right here like that you actually see all of the logins of credentials right so these are all the login credentials you've got the email you've got the image associated with the email you have if the email is verified or not and you've got a bunch of stuff uh below it but this is really really cool okay this is awesome because now what we just showed you guys is they created the user so what we would naturally want to do at this point is push them to the home page after they log in okay so what i'm going to do is i'm going to go ahead and pull in something called use history now use history is something from react rear so we need to import it do we need to inspect up right now we can close up the inspect yeah awesome so now what we're going to do is we're going to go to reactor we're going to import use history and i'm going to go ahead and pull it in like this we're going to go ahead and say const history equals use history like this right now what this does is it allows us to programmatically change the url so after they log in what we want to do is we just want to say if the user is authenticated oops sorry if the user is authentic owned sorry if the authentication comes back so if the authentication is not empty then we're going to say inside the history so this is the history of the browser we're literally saying push this new page so we're basically going to go ahead and send a redirect we're forcing you to redirect okay so save this and now kazi let's try a different email address and let's try and log in so you want to login or you mean create your amazon account create your amazon account got it so i'm gonna do cp youtube at gmail.com can't share the password because that's a secret and then i'm gonna do create your amazon account hey nice hey we just got another donation thank you so much for that and it is corey and corey says the positive impact this has on my life is unmatched i appreciate you so grateful to have cp looking forward to what's to come nice dude that is insane thank you so much for the donation cory oh actually i coach corey dude really yeah i was like she goes damn that's sick sick no that's amazing right so now what we're gonna do is we are going to go over to where's his street.push okay yeah so you see guys he logged in and it just redirected him to the login to the homepage sorry which is perfect right so he went ahead and logged in and they actually redirected him so now what we want to do is we want to do the same thing but for the login right so once we've created that account so now kazi has two accounts that he's created so let's go ahead and implement the login functionality so let's go ahead back to our code we're going to delete this comment here and because we already implemented some fancy sheeting so now we're going to go back to the sign in and here what we say is auth dot so if you say or sign in sign in with email and password and literally we do the same thing we say email password this is insanely simple for authentication guys i do not underestimate how powerful this is for authentication we say that'll give us back some kind of authentication and then all we're going to say is if it was successful same thing history dot push you to the home page if it was successful okay otherwise if it wasn't successful we're going to catch the error and then we're going to say get the error and alert with error dot message like so okay this is the error dot message like this now um we can save and what we're going to do now is let's go over to the sign in page all right let's go boom yep now go ahead and try and sign in now so we created an account previously um and what we should see now is when kazi hit sign and it should show us the home page if we did everything correctly okay so it says auth is not a function is let's go ahead and dive into this a little bit so what is happening here it says auth from firebase damn so george says he goes god bless the hour when the youtube algorithm put this channel in the recommended ones it has totally changed my life oh damn it's insane dude that's epic all right guys so we just ran into a bug yeah we're gonna go ahead and start debugging this issue right so this is where we need to like break it down don't freak out if your code doesn't work okay just take a deep breath and just break it down oh [ __ ] so you can turn that up bro i think that sounds good this is it guys it's like now what we're gonna do is we are going to go ahead and find this error so it said the authentication was not a function so let's go ahead and check we import the correct authentication everything's good let's go down to the sign in everything looks good here but oh somebody's like dot then instead of dot off so try that um alexandros was the first one who said that so shout out to alexandra's but damn you guys are freaking on the ball exactly guys that was it yeah and quasi this is a moment of truth let's go ahead and give this a try will this work will this work hey we'll find out so now i'm going to type in so the same exact email right yep suspense is building guys let's go that worked i actually played the applause wait applause is the right one right yeah oh yeah it was yeah i thought you played the left track that was dope well done guys we figured out the issue and we solved it right yeah john ford is like the background music is making you more dramatic nice background music nice nice guys right so felipe said jesus christ spencer got real guys [Laughter] so we successfully signed in right but how do we then go ahead and find who is signed in guys if you like that debugging that sunny just did for sonny go ahead and smash that like button guys so we can send this video flying out to everybody else we're at 12 32 right now once i say that hopefully that number will start going up thank you hey and another beautiful donation from calvin kabanda oh nice timing on that sunny that was fantastic thank you for the donation all right let's keep it going so much dude all right okay so now what we're gonna do is once we we have the sign in we have the register right but how do we go ahead and actually sort of keep track of who is signed in okay so what we're going to do is we're going to go back to app.js and then what we use here guys is like essentially we're going to create a listener okay so i'm going to create a listener which is always going to keep track of who is signed in okay so in order to do that we're going to go ahead and create something called a use effect so we need to do inside of the function yeah so we're going to say use effect now a use effect if you've never seen one before it's written like this so it simply has an arrow function inside and in this case we're going to go ahead and make it very simple and we're going to add these empty brackets here which means that it's only going to run so this will only run this code will only run once when the app component loads okay the only one once when the app component loads and it won't run again now if i put anything inside of it for example if we had like a user in here every time the user changes and or for example every time the basket changes it will refire this code so that's how i use effect works but if we keep this blank it's only going to run once when the app component loads so that's the easy way of thinking about use effect yeah exactly go ahead and go back to react and it's kind of like an if statement guys in react yeah exactly all right it's like a dynamic if statement yeah so for example like let's just give them an example on this so let's give an example of where use effect would be used did you read marco de west i did i was laughing my ass off to that actually that sounds laughing that's fine now guys inside the youtube side we have this really nice powerful listener from firebase submit or import our authentication module and then here what we do is we go ahead and say auth dot on auth state change now what this does is it basically we as soon as the app loads we attach this listener so think of it this way once we attach the system up this thing is always listening if we log in it refires this code if we log out it refires this code it's just always there it's like an observer a listener whatever you want to call it that's what it is and what this does is it gives you so people keep going crazy about line 16 and they keep saying line 16 then not off um inside of login is it 916. yeah yeah i thought you fixed it already right yeah yeah we fixed that one yeah okay thanks guys um so here what we say is whenever the authentication changes it will give us the authenticated user so it might be no if the user is not there um or it will give us the actual use themselves and once it does that we're going to basically go ahead and firstly we want to console.log the user we're going to say the user this is just a good debugging step so the user is due to do let's go ahead and just say alt user oops what user like this and then we are going to go ahead since i can see some people seeing the um comment earlier so then we're going to say the user is ortiza and now what we're going to do is we're going to say if there is an auth user okay so if there was a user logged in then this means that the user just logged in okay he's just logged in or the user was logged in right so or the user sorry the user was logged in now this is really awesome because when we do this kind of authentication with firebase even if you refresh the page it will actually log you back in if you're already logged in from before yeah so that's really really cool and then what we're going to say is um we're going to say else the user is logged out okay the user is logged out okay now what we want to do is we're going to actually do this in a very powerful way okay so i actually want to go ahead and store the user inside of our react context api so install inside of our store so let's go ahead and go to our reducer and i'm going to go ahead and add a user inside of that initially we're going to say the users no because let's just assume that when the app loads by default the user is going to be no okay then what we're going to do is we're going to go ahead and create inside of app.js and say when the user logs in we need the dispatch so we need to go ahead and pull that in over here so we're going to say this is our magic react context api piece of code so we're going to go ahead and import that here like so so use state value but from state provider and then here what we're going to do is we're going to say if you're logged in we're going to say dispatch right dispatch this is going to be an object i'm going to say type of dispatch is just going to be known as set user and this is going to fire off the event and shoot it into the data layer right the information about the user exactly so every time they log in it will shoot the user into the data layer and if they log out it will basically eradicate remove the user from the data layer got it okay now um what we are going to do next is we are going to go ahead and and we are going to send the user so we're going to send the user and in this case the user is simply the auth user that comes back from firebase now if the user is logged out i'm going to do the same thing we're going to dispatch an object with the same type so it's going to be type set user set user but we're going to say that the user this time is no okay and now think about what we're doing here guys so if the user for any reason logs in or if the user was logged in and they refresh the page it's going to go ahead and set the user to whoever was logged in okay from firebase now if the user is logged out it's going to go ahead and set the user to no value so that way nobody is logged in there right so if all of this worked correctly what we should be able to do now is actually go ahead and say something like this so we should be able to go ahead and say it should say console.log the user is and we should see the user inside of our um inside of our um inside of our screen okay so let's go to our login component and here we actually see you see in the login command we don't even do anything we just say if the authenticated user was created or signed in and just push them to the home page and then this listener inside of app.js does all of the hard work and it just constantly sits and sits there and listens so let's go ahead and refresh on app.js somebody just asked if this has anything to do with local storage and browser this is not local storage right this is a different type of thing with the data layer yeah so this is not local storage the reason why it persists is because firebase has done some clever stuff under the hood so if you log in it will know that you're logged in because they do some clever stuff with the cookies uh you don't actually even need to know what happens after so this is so this is actually the data layer component that's connected with the firebase yes yep got it okay exactly that awesome now what we're gonna do is oh yeah so once we have this um hajira actually pointed this out yeah they're getting good yeah this is insane thank you so much point now yeah so we actually dispatched a set user action also thank you thank you for that donation thank you yep and he says maybe i'm not understanding everything but i certainly know i'm on the right track and then i will understand everything epic that's it dude keep that up and that is the way to go forward yeah right so now what we're going to do is we're going to go to our reducer.js and we need to go ahead and actually add in the case to listen to this right so how do we do that go here and we say case so we can drop it on new line we can say case set user which is the type that we dispatched earlier and when we get this type we're going to say colon return and we're going to return everything that's currently inside the state as well as we're going to update the user and the user is going to be the action user so this is the one that we dispatched oops this should be action.user this is going to be the user that we dispatched here so you see action.user and the type was set user and the action was the user okay so we need to do that save it and now we're listening inside of our user reducer so now we should have the app update so cause let's go ahead and um open up the inspector and because you just previously signed in yep it should actually say that the user is logged in so let's go ahead and open up and also let me know when we move on to the next step and we're done with the user authentication with firebase yep right all right so this is the basket okay ray zero uh why is that saying this is the basket um let me go ahead and get rid of that comment because we don't need that anymore this is the basket um this is the basket product okay so where we got that we've got that in product right now check out product um did you find it you want me to look for it are you inside of your localhost yeah so i can't see it just because i'm in the local house yeah i i want to refresh and try yeah so uh yep i still got that printed out wait hold on yeah it said this is the basket right so i mean i'm not sure where this is the basket is coming from so the basket that's coming from oh okay it's coming from product.js okay so i'm going to go ahead and remove that one you don't need that you got it go ahead save the file and let's go back to app.js and now we should be able to see guys that when causing refreshes it says the user is see that so let's see i'll refresh right now the user is nice yeah and that's actually causing when he logged in right it says actually has logged in the state now it has my email and everything yeah so it's actually gone ahead and remembered him now what we need to do is we need to have some kind of login uh log out functionality okay so guys i think our faces are actually yeah i moved it yeah nice i'll move us to the middle until nice yeah so now what we can do is if we go over to header.js what we can say is so this was part of the homework so where we're going to change it so it says hello and then whoever signed in email yeah i'm going to leave that up to you guys as a challenge by the way guys so some people are like some people start with firebase and then they move to like something real fire firebase a lot of big companies are using firebase like twitch uses firebase and instacart uses firebase yeah and honestly it's really a bad misconception that it's kind of just caught on the firebase isn't powerful enough it's the reason why you think that is because they make it so damn easy to implement yeah so that's why you kind of naturally think okay this is not real this is not like powerful and etc but this is exactly this is real guys this is really real stuff yeah people people always think like aws is the way to go and it's just such a nightmare to do most things um yeah firebase makes it really simple but don't get that twisted and think it's it's kind of like how people they move over to python sometimes and they're like oh python is really simple so it must not be that powerful and it's like no you can actually do whatever you want with python or you can do whatever you want with react just because react is easy doesn't make it less powerful than angular or view exactly exactly guys so what we're going to do now is inside of the header we're going to go ahead and say if you are signed in so now what we can do is we can actually pull the user from the state because the user is also populated now we can say if the user so let's render this text now so rather than saying sign in we can say if the user exists right then it will say sign out otherwise it will say sign in and submit so me just said i have used aws during my work experience trust me firebase is equally powerful exactly honestly it's so damn powerful guys and it's so fast like if you actually look under the hood of what they do it's insane how efficient they make it for you guys um so firebase is free until you start using things like cloud functions exactly yeah yep so here guys is what we added we've got the user we say if the user is uh is is present then it will say sign out otherwise it will say sign in okay um so what we're going to now do is yeah you can see because he's trying to figure out jesus christ so now what we're gonna do is we're gonna say when you click on the so we're actually going to make this um div clickable right so we're going to say on click on click on this div and i'm going to say when you click the div right we want it to basically be um let me just double check something yeah so we basically want this to say like if you are logged in right so so basically i'm going to say handle sign in handle authentication to handle something in authentication the reason why i'm going to call it this guys is because we're going to have it so when you click where it says sign in sign out at the top i just want to have a little function which handles the authentication it doesn't take anything but it's basically going to say if there was a user right and you clicked it because the text would be sign out right what we're going to say is if there was a user we're going to go ahead and pull the authentication module from firebase so our local one so our local firebase and then we're going to say auth dot sign out and that is all we need to do to actually sign out from firebase okay so qazi i want you to show on the screen now that at the top of the screen on the amazon clone we should see in the header it should say sign out okay so what are you saying in the in the text that we add to the top no so you see in the in the header right now let's zoom into the header if you use the trackpad it actually becomes super super simple so use the trackpad and pinch um yeah so you can see it says sign out at the top right now with the logic that we've done uh we we've done it so we said if oh i see what you mean like this yeah that's how i usually sign in yeah yeah zoom in nice okay now it says sign out right so what we do now is if we click that because of the handle oh snap son hold on prince just dropped in the comments and he goes i just got my first project today on upwork for four hundred dollars just because of the spotify clone that you guys built thanks so much yeah that's insane spotify has got so many jobs now wow frank ramos a sixfigure contract for sonos which is insane that spotify clown that is insane wow all right awesome dude so now when we click on the um sign out button so one thing's gonna happen right now so actually we need to fix something so if you click that right now it will sign you up but it will take you to the login page okay and then if we go back now says go back it should say sign in right so it hasn't found the user now because it did sign up but true we need to fix something here so what we did is and i saw this in the comments as well so a lot of people saying suddenly this goes back to login page yes the reason why is because what we need to happen here guys is we need to add this little thing in here which we say if there was no user only then hold on because i don't see it yet oh yeah sorry yeah so i've added it here so if there was no user only then do we push to the login page okay thank you for the donations says you guys are amazing keep up the good work thank you hey that's wicked thank you so much preslov all right yeah so now we're saying only redirect to the login page if there was no user so got it this now is a pretty nice situation so firstly the sign in so we have a user all right you want me to log in right now yep okay and then at the top where it says sign out says zoom into that uhhuh yep now if we click sign out it won't redirect but it will sign the user out so click that nice nice now if you click sign in now it will throw you to the logo fancy beautiful that's really really clean right like a really really nice implementation um it gives us a really nice um sort of dynamic fill because there was no sort of refresh in like an ugly way it just literally said okay sign up you signed out sign in and once you guys finish that homework instead of saying hello guest you'll say hello like kazi email.com and then it will go ahead and actually go ahead and say hello guest when you sign out yeah because we should be clearing the state so that would be really really clean right now i'm going to go ahead and show you guys um an example of how we can pull the user from the state okay so let's go ahead and this will help you with your homework let's go to checkout.js um right now and let's actually go ahead and log in quasi and yeah and somebody said no regular expression for authentication recognition in the database i don't think so right they handle most of it um what was that sorry no recognition somebody asks if uh like no regular expression for authentication and recognition in the database question mark um no regular illustration for authentication recognition not 100 sure what you mean um i mean i feel like firebase handles probably a lot of the things that you're looking to do with regular expressions right like i imagine if you did put something in that didn't look like an email probably firebase won't allow you to make an account yeah yeah so yeah yeah it would pop up and it would freak out um also guys i saw some people have already done that homework so that's awesome oh nice that's sick that's awesome right so let's go ahead and sign up uh sign in okay so let's do it okay nice and let's go ahead and go to the basket so uh we don't need to add anything let's just go straight are we still on the user authentication step um okay so we just finished the user authentication just all right now we're going to get the name to pop up in the checkout page so i want it to say in checkout page if the user is there we'll say hey like kazi um or or something like that you'll say hey kazuo hey oh whatever your email address is and then it will show your basket contents okay all right so working on username on checkout page yeah okay dope let's do it so basically if we look at does our version of the app have it um no so i'm going to go ahead and add this in so that will help them with that homework okay good so now what we're going to do is inside of the checkout page so inside of the checkout page what we're going to do is here we're going to pull the user from the um from the store and we're going to go ahead and say where it says your shopping basket we're going to basically add something a bit smaller underneath on top of it so we're going to say h3 and this one's going to say yeah it's going to be i think it's user.email i think it's just normal but we can go ahead and check it after so maybe use the door email so now if we do this and we go to the basket page yep oh nice it says the email oh nice so it says the email right so now we'll just say hello and then user email let's go ahead and see if that works oh [ __ ] what happened damn um pinto absolution says guys thank you so much for this wonderful content my brother passed away last week and i'm dedicating this tutorial to him keep up i will succeed just to keep his memory in anything um dude sorry philosophy and that's insane that you are dedicating this to him keep working hard that's it that's some that's sad news dude [ __ ] yeah that's [ __ ] heartbreaking yeah man i'm just glad you're here with us like you got the community behind you you got us behind you like reach out to us on slack or if you're in the facebook group we'll help you out but god damn dude that just that [ __ ] me up a little bit because i love my brothers and that would be crazy if something like that happened but yeah man we're here for you and let's let's keep going exactly dude exactly um what does that say says email up an email of no okay yeah so if you get this issue guys what you wanna do is do optional chaining so you're gonna do this use a uh question mark dot email okay boom right there and then what that will do is it will have so there's an asynchronous period where it won't load the user because it's actually trying to fetch it from firebase so by doing that it actually protects it from erroring up and now it says hello with the email address so that's perfect well that looks really really good okay um so now what we're gonna do is oh and daniel salade they say sunny yeah i know yeah i was reading i was like damn these guys are on the ball yeah it's crazy dude now so we have that right so that should help you guys figure out the homework solution well instead of saying hello guest it will say hello with the email address so that'll be an awesome start for you guys um and now what we're going to do is i guess quasi what we'll do is we'll quickly show them how to actually go ahead and add um something to a db and pull it in from the db and render out an item let's do it yeah so let's go ahead and do that um actually one second let me think how we're going to do this um maybe we should do the deployment at this step because what's up do you want to do the deployment today and then we do the um database stuff tomorrow yeah because i have an idea for tomorrow i think what we should do is we should do the database um do the deployment now and then tomorrow when we actually process a payment will show you how to push data into the database it will feed in much nicer and it will set you guys a nice bit of homework and we'll have time for that right what was that we'll have time for that tomorrow yeah yeah we'll have more time for that tomorrow that'll be perfect okay dope so let's just get this deployed online guys and then you'll be actually be able to share this app with your friends family and things like that exactly now guys something i want to mention for the homework right so it was not only to implement that top part right it was also to add some animations add stuff like animations add change this amazon build so it looks a bit more custom to yourself okay like and this is where your creativity comes in kicks in and you can sort of flex those css skills um and something i'd recommend is going ahead and trying the following so um because if you just want to type in on um google react flip move okay let's do it here this is going to be a challenge for you guys i want to see if anyone can go ahead and get this to work okay it's called react flip move and what you can do is if you guys can go ahead and check out this github if you can implement react flip move so let's move down they've got a little animation there so if you guys implement this inside of the um inside of the basket page the checkout page how awesome would that look so as you remove something it would reshuffle the list and do everything as needed right so that would be really really clean i think if you guys could go ahead and maybe implement this as a piece of challenge homework okay so whoever can go ahead and get that implemented it's got some nice documentation underneath that this will be really really cool okay and just gave a donation of 50 argent argentine dollars people are going to kill us pesos and he goes uh and he goes nice work guys that is so much fun uh and he goes if cause he can say i don't know if this is i mean i hope this is probably good words but he goes hi from argentina let's go let's go guys what does that mean frankie let's go drink a fernet which is a wine of the good ones damn all right nice dude all right so boom all right so we have that built right so that is a piece of challenge homework right to get that animated list implemented and you can use rack flip move to go ahead and do that now um and and just a top tip guys you may need to introduce keys i'm not gonna say anything about it but you may need to introduce keys into the list to get that working correctly so keys you're not talking about api keys you're talking about like index keys and things like that component keys inside of react so that's going to be a nice little challenge for you guys to go ahead and do and that should help you out a lot now um what we're going to do next is do the deployment so now we've set everything up for the deployment earlier so we actually went ahead and all we need to do is create that account um in in five ways to get started with that now as cause he mentioned and she i mentioned earlier is this open up by terminal causing what let's open up a terminal no no it's not you god talks at the same time as you and i can't hear you and then i'm like wait sonny what'd you say and nonstop start speaking louder like god he has too much confidence all right all right so what'd you say sonny let's open up a terminal all right i'll open up a terminal nice okay now in here guys uh you just need to move a little bit down on ecam so they can see it fuzzy um there we go i'll try to figure that out there we go so now guys inside of here you want to make sure you run that command sudo mpmi mpmi g firebase tools so you need to install firebase tools in order to do what we're about to do next okay so you would install this somebody was like damn so you're telling me my spotify clone didn't work because of a dang question mark yeah yeah so that's funny because yeah there's certain stuff that if you just miss that little question mark that can really screw you up that optional chaining really helps out because when you load the app in the start sometimes the user might not be loaded so it'll crash because of that and then once it refreshes the user can then be loaded so just drop that question mark and that optional chaining is like a really clean thing that you can do with react exactly guys exactly um something i want to mention somebody said athaba they said dash g for global guys you'll need to do it once do not throw that around guys only use global installs for tools like firebase tools don't use that for all your dependencies it's not a good practice if you installed it yesterday you're good yeah so yesterday you're good all right so next deploy is run firebase oops firebase login so we're not going to do it because we i think we're already logged in yeah david the optional chaining is kind of like not null but it's like it's much easier than doing a try catch block it's just super clean exactly yeah it's going to be super clean um so now it says firebase uh we need to firebase login and what this will do is it'll pop up a little window and it'll just be your browser and you just basically log in just like you do on google and then it will redirect you back once you've done that guys you need to do the following you need to do mpm run build okay no no sorry before we do that we're gonna do firebase init firebase init okay now cause you wanna run them through the init yeah so when we go through this guys make sure you go to hosting so like this um we should be good to go on that click use an existing project and whatever you called it i called it amazon challenge you might have called it amazon clone or something of that nature so pick the right one then when it says what do you want to use is your public directory make sure you do build this is important for react apps click that and yes this is a single page application so don't just hit enter here because you're going to mess it up hit y and say yes because it's default by no so you want to make sure you do y and hit enter and you should be good to go exactly so once you've done that guys we've actually prepped firebase stuff and make sure you're in the right directory uh before you do that now what you're going to do is mpm yeah run build okay npm run build and this will go ahead and actually so what this does is it goes ahead and creates an optimized production build so this goes ahead and strips out all of the things which make the build slow so like the hot reloading all the developer things all of those things okay and it will make the app like a super efficient bundle okay now it's important to know that once this command finishes if you make any changes on the app you will have to run npm run build again here's what your thing should look oh sorry sunny just finish your thought and then i'll continue yeah so it's just saying like if you make any changes once we finish npm run build then make sure that you actually go ahead and uh run the npm run build again okay frank just came in hey hey nice thank you frank with a dollar donation that is awesome thank you yeah it was such a good build and guys if your uh directories look like this forget about my top directory here but if your looks like something like this oh my god please work screen brush for the love of god all right here we go boom then you are good if it looks like this you are looking fantastic and now at this point guys we are ready to deploy this bad boy exactly and guys you can rinse and repeat this you can constantly make changes do npm run build firebase which is what we're about to do somebody says finally frank is here nice everyone's getting used to frank on the streams nice dude okay so now what we're going to do is what are we going to do quasi now we're going to do uh fi we're going to be we're about to deploy it so we got to do build first we've done that oh yeah okay okay okay let's do this firebase deploy ready you guys ready yo put on some uh put on some uh suspenseful music you know and cue it up do it bro all right hey is this going to work all right this is the moment of truth quasi don't hit that button just yet oh we're going to wait see are you guys ready to see if this worked wow it's right there if i command click it it should be up right are you guys ready drop it in the comments below and you know what i can't wait anymore sonny i cannot wait anymore i'm gonna click it bro there we go i'm gonna click it bro oh yeah i'm gonna click it dude if it's broken it's gonna be so embarrassing dude i know right i don't think we should do it live god damn it ah i'm gonna click it click it oh let's go look at that beautiful app look at how beautiful this looks guys leaf says don't do it and this is live guys so this is a live link right now you guys smash that like button if you liked what we did for you here exactly boom that was nasa's call that was awesome calling us gonna go here oh nice look at that every feature we're gonna show i'm gonna play the sound and now check it out when i hit remove basket the subtotal is going to change are you guys ready you guys ready you guys ready i'm going to do it i'm going to remove this item and look at the subtotal change and wait there we go nice let's go ahead and check out the sign in all right let's go check it out and you guys can log into this too hopefully it doesn't crash but you guys can log into this and use it enter an email a password and hit the yo i'm gonna jason says you guys have me cheesing throughout the whole live stream nice sg707 says brave man doing it in front of hundreds of programmers thank you dude just dropped a five dollar canadian donation thank you dude canadian donation i love that yeah thank you for the canadian donation nice dude all right here we go and that is hilarious oh my god i was on account wow look at that i'm signed in i'm going to add stuff to basket go to the basket and it even knows who i am hello hello fantastic so now are we done for today sunny we are done for today i'm gonna run over the homework one more time guys do it so the work for today's session is to upgrade that header bar so that it says hello hold on hold on you're going too fast for me right so homework for day three right yep all right cool so let's go over what uh each step is so one is what so upgrade the header bar so upgrade header component what's wrong with me okay header component um uh to include the user's email nice and then on part two we are going to um add animation to the build so add animation and guys you can add animation wherever you want hover effects the react flip move that we spoke about any animation that you add just make sure you add it deploy that thing and show us your beautiful work okay the third final piece of homework is style amazon okay so obviously we have a typical amazon looking app right now style it give it your own little sort of twist give it some difference like them some changes and that's completely up to you guys to do okay so this is your homework and part four the most important part is deploy that app okay so deploy the app and then link us the app in the submission and screenshot and do all the things that you guys have been doing so far for the homework we're going to shoot a video after this and we'll show you guys a quick runthrough of the homework and we'll pop that on the slack and the facebook channel and then airtable right yep exactly and that's only available in the facebook group and nas i think is going to be posting the homework up soon in the facebook group so the homework is going to be available there and i think or do we send out emails with the homework too yes so you guys are going to also get an email if you're part of the challenge so keep an eye on your email keep an eye on the facebook group we're going to send you the homework and check in the slack as well it's going to be there as well nice dude and the only way to participate in this react challenge is house honey to be a part of that facebook group guys you have to be a part of that facebook group and you have to be interactive something all of the homework for each of the days and make sure that you are engaged and with us in this journey and that we have a point system in place and that's all attributes to those things that we've mentioned and then we'll choose that price and even if you guys don't compete you're not here to compete for the prizes do this do yourself a favor land that dream job that you've always wanted and carry on with these builds yep beautiful anything else regarding the homework or anything else we need to say i think we're good dude i think that was a crazy session i want to say thank you to everyone who was here today i think you guys are awesome amongst any tech issues that we ever have like you guys crush it and push through with that said i think we're good bro damn thank you guys so much as always for being there and having that energy and just supporting us even with all the craziness that goes on we love you guys we appreciate every single one of you with that said we will see you guys tomorrow at 11 a.m pacific make sure to show up there tomorrow they're gonna be doing day four and we're gonna be finishing this project up you guys and that then you'll have stripe integrated you'll be able to accept payments and the whole nine and then you can actually put on your portfolio yeah and you can actually say it's a full ecommerce build right so there's a big stuff happening tomorrow exactly so with that said guys we love your beautiful face and as always we'll see you tomorrow you
