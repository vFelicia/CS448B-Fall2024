With timestamps:

00:00 - hey what's up you guys aaron here from
00:02 - clever programmer and today we're gonna
00:04 - do a nice short sweet little video about
00:07 - string manipulation and a little bit of
00:09 - string parsing we're just gonna be going
00:10 - over two really quick Python functions
00:12 - split and join so let's get right into
00:14 - it
00:15 - [Music]
00:20 - manipulating strings is actually a
00:22 - pretty important in Python if you ever
00:25 - need to parse a CSV file which is a CSV
00:29 - file just a comma separated value file
00:32 - which means there's a bunch of things in
00:33 - a file and then between each of those
00:34 - things is a comma with no spaces that's
00:36 - all it is
00:37 - so it could be like a list of names a
00:39 - list of emails a list of prices a list
00:41 - of whatever you want it to be but it's
00:44 - basically the file is just text and you
00:46 - sometimes want to be able to do things
00:48 - to that text by splitting splitting it
00:50 - up or putting a bunch of things together
00:52 - into text and whatnot stuff stuff like
00:54 - that so that's what we're gonna be going
00:55 - over real quick very simple very - very
01:00 - - nifty little little functions I'm just
01:02 - gonna go over the syntax really quick
01:03 - and let's just go so let's say I have um
01:08 - a string a string that I want to split
01:12 - up let's do split first so let's just
01:14 - say I have yeah yeah okay let's see you
01:18 - say I have a bunch of problems all right
01:19 - we're gonna call it broke comma pale
01:23 - comma short comma nerdy okay and then
01:29 - let's say I want to actually because
01:32 - this list is just one long string it's
01:34 - not like anything like if I just print
01:35 - problems then um the story of my life
01:39 - will be displayed to the screen but if I
01:42 - want to make a list with all of these
01:46 - elements in there then you can actually
01:48 - split this up using the split function
01:51 - so what I want on what I want to show
01:54 - you here is that we are going to split
01:57 - on a very specific string called a
01:59 - delimiter so I'll explain that in a
02:01 - second let me just type it out first so
02:05 - LSU stands for list
02:07 - I'm gonna go problems dot split and we
02:09 - want to split on a delimiter okay
02:11 - so ad
02:13 - is just a fancy word I don't even know
02:15 - why it's called that but what it is is
02:17 - just something that goes between things
02:20 - so it's like it's a unified thing that
02:23 - goes between things so like in a comma
02:24 - in the CSV file a comma separated value
02:27 - file the delimiter is the comma with no
02:30 - space so it's just a comma if there was
02:32 - a comma space I maybe some CSV files
02:35 - have spaces they might be like a type of
02:36 - CV file that have spaces I don't know
02:38 - but if it does then the delimiter would
02:40 - be actually comma space ok the delimiter
02:43 - would be that string those two
02:44 - characters together so for us that's
02:47 - exactly what it's gonna be as you can
02:49 - see here back to the screen we have a
02:50 - list here and each of these words is
02:52 - separated by a comma and a space
02:54 - so our delimiter is literally going to
02:57 - be comma space ok you might have to
03:01 - escape this I'm gonna test it out real
03:03 - quick testing as you go like little
03:05 - things like this is usually much faster
03:06 - than trying to research it up and being
03:08 - right the first time just like take two
03:10 - seconds and figure it out it's cool so
03:12 - let's do this we have this string here
03:15 - we print it out we try to split on this
03:18 - and now let's print the list that we
03:20 - just created l and see what comes out as
03:23 - you can see it worked just fine we
03:25 - didn't have to escape it let's see if
03:26 - the escaping the comma does work though
03:28 - run it mmm no it does not so this is
03:35 - actually interpreted to see as you can
03:37 - see this entire thing is a list of one
03:40 - long string that looks just like that so
03:41 - you do not escape in here so just keep
03:44 - it like that umm this parameter is just
03:46 - a raw string you don't need any escapes
03:48 - at all a raw string just means it's
03:50 - literally what it looks like on the
03:52 - stream you don't escape anything which
03:53 - is nice alright it might look like this
03:56 - have you seen it before has a little R
03:57 - before the string but I don't think this
03:59 - function this split function can handle
04:01 - that so that's split very very simple
04:04 - you can take a string like this and
04:06 - split on anything you want also
04:07 - something else I could do is if I put
04:09 - like I want to split on short and then
04:13 - run it so it's actually going to take
04:14 - this split on here so the two elements
04:17 - are going to be everything here this is
04:19 - the first element and that everything
04:20 - here is going to be the second element
04:22 - because it's splitting on this string
04:23 - let's try that as you can see the first
04:26 - string is broke
04:27 - Calma space and then the second string
04:29 - is comma space nerdy because we split on
04:31 - the delimiter that was short but let's
04:34 - just go back to what we had before
04:34 - because that makes a lot more sense run
04:36 - it and look we have this string and
04:38 - we're splitting it into this list now
04:41 - what you're probably thinking is join
04:43 - the other function I mentioned was join
04:45 - and join does exactly what you would if
04:48 - what it sounds like it does it does the
04:49 - opposite of split it'll join a whole
04:51 - list together into one string so that's
04:54 - like if you say you had a Python list in
04:56 - Python or a tuple or something and you
04:58 - had a bunch of data and you wanted to
05:00 - put it and you want to generate a CSV
05:03 - file a comma separated text file
05:05 - sorry comma separated value file then
05:08 - you could use something like this like
05:09 - join to put everything on that list into
05:12 - one big long string of text and then
05:14 - stick it into a file called a CSV file
05:16 - and then now you can give that to
05:17 - anybody else whom who wants to see as
05:19 - you file and they can do whatever they
05:21 - want with that it's a very common thing
05:22 - to do so we'll just call this joint
05:26 - equals and this syntax is a little bit
05:28 - tricky like this actually stumped me a
05:30 - few times when I started I don't know
05:32 - why it's like this but you actually put
05:34 - the delimiter first just like this put
05:37 - the delimiter first let's just put space
05:41 - and space okay so that instead of just
05:44 - making it again what it was originally
05:45 - we're actually gonna do a little change
05:46 - on it actually let's do this let's do
05:51 - CSV equals like that so actually we're
05:56 - actually gonna do two joints so ignore
05:58 - this for now actually just get rid of it
06:00 - so I don't confuse you that was just a
06:01 - random idea I had on the on the fly so
06:04 - you have your delimiter first you have a
06:05 - string here and then you're actually
06:07 - going to call a function on that string
06:09 - which is a little bit weird I don't know
06:11 - why why that why it's like that but
06:13 - basically you have to have the string
06:15 - and then you're actually calling a
06:16 - function on the string so it's literally
06:18 - string dot join and then enjoin you put
06:22 - the list so list L would be L and then
06:26 - let's print out joined just like that
06:30 - and run it and as you can see it prints
06:35 - out one long string broke and pale and
06:37 - short and nerdy okay cool
06:40 - but earlier I said I had a different
06:42 - idea so like maybe if you want to create
06:44 - a CSV file you would actually use a
06:46 - delimiter of comma with no space CSV and
06:49 - then you call join on that delimiter
06:51 - string put in the same list run it this
06:55 - time oh I didn't print it print print
07:04 - CSV yeah
07:06 - and hit run and as you can see we
07:10 - generated our own short CSV text here so
07:13 - we could actually chuck this to a file
07:14 - I'm not gonna go over how to write two
07:16 - files in Python it's a pretty simple
07:18 - maybe in a future video maybe the next
07:19 - video but that's pretty much what this
07:23 - is going on here we have this joint
07:25 - function and the split function that
07:27 - either split on delimiter or joined by a
07:29 - delimiter I think they're both covered
07:32 - limiters I know this is called delimiter
07:33 - this might be called something else but
07:34 - I'm just gonna call it deliver because
07:36 - just cuz and I'm correct me if I'm wrong
07:41 - in the comments if it's called something
07:42 - else I might actually call something
07:45 - else I vaguely remember back from my
07:46 - undergrad anyways
07:48 - that's about it though for those two
07:50 - quick functions is very useful for
07:51 - dealing with strings um this will be
07:53 - handy for ya see you see files or
07:55 - anything remotely similar to that but
07:57 - that was it for this quick video guys
07:59 - thank you for watching I will see you
08:01 - guys next time
08:02 - and yeah good bye
08:06 - [Music]
08:13 - [Music]

Cleaned transcript:

hey what's up you guys aaron here from clever programmer and today we're gonna do a nice short sweet little video about string manipulation and a little bit of string parsing we're just gonna be going over two really quick Python functions split and join so let's get right into it manipulating strings is actually a pretty important in Python if you ever need to parse a CSV file which is a CSV file just a comma separated value file which means there's a bunch of things in a file and then between each of those things is a comma with no spaces that's all it is so it could be like a list of names a list of emails a list of prices a list of whatever you want it to be but it's basically the file is just text and you sometimes want to be able to do things to that text by splitting splitting it up or putting a bunch of things together into text and whatnot stuff stuff like that so that's what we're gonna be going over real quick very simple very very nifty little little functions I'm just gonna go over the syntax really quick and let's just go so let's say I have um a string a string that I want to split up let's do split first so let's just say I have yeah yeah okay let's see you say I have a bunch of problems all right we're gonna call it broke comma pale comma short comma nerdy okay and then let's say I want to actually because this list is just one long string it's not like anything like if I just print problems then um the story of my life will be displayed to the screen but if I want to make a list with all of these elements in there then you can actually split this up using the split function so what I want on what I want to show you here is that we are going to split on a very specific string called a delimiter so I'll explain that in a second let me just type it out first so LSU stands for list I'm gonna go problems dot split and we want to split on a delimiter okay so ad is just a fancy word I don't even know why it's called that but what it is is just something that goes between things so it's like it's a unified thing that goes between things so like in a comma in the CSV file a comma separated value file the delimiter is the comma with no space so it's just a comma if there was a comma space I maybe some CSV files have spaces they might be like a type of CV file that have spaces I don't know but if it does then the delimiter would be actually comma space ok the delimiter would be that string those two characters together so for us that's exactly what it's gonna be as you can see here back to the screen we have a list here and each of these words is separated by a comma and a space so our delimiter is literally going to be comma space ok you might have to escape this I'm gonna test it out real quick testing as you go like little things like this is usually much faster than trying to research it up and being right the first time just like take two seconds and figure it out it's cool so let's do this we have this string here we print it out we try to split on this and now let's print the list that we just created l and see what comes out as you can see it worked just fine we didn't have to escape it let's see if the escaping the comma does work though run it mmm no it does not so this is actually interpreted to see as you can see this entire thing is a list of one long string that looks just like that so you do not escape in here so just keep it like that umm this parameter is just a raw string you don't need any escapes at all a raw string just means it's literally what it looks like on the stream you don't escape anything which is nice alright it might look like this have you seen it before has a little R before the string but I don't think this function this split function can handle that so that's split very very simple you can take a string like this and split on anything you want also something else I could do is if I put like I want to split on short and then run it so it's actually going to take this split on here so the two elements are going to be everything here this is the first element and that everything here is going to be the second element because it's splitting on this string let's try that as you can see the first string is broke Calma space and then the second string is comma space nerdy because we split on the delimiter that was short but let's just go back to what we had before because that makes a lot more sense run it and look we have this string and we're splitting it into this list now what you're probably thinking is join the other function I mentioned was join and join does exactly what you would if what it sounds like it does it does the opposite of split it'll join a whole list together into one string so that's like if you say you had a Python list in Python or a tuple or something and you had a bunch of data and you wanted to put it and you want to generate a CSV file a comma separated text file sorry comma separated value file then you could use something like this like join to put everything on that list into one big long string of text and then stick it into a file called a CSV file and then now you can give that to anybody else whom who wants to see as you file and they can do whatever they want with that it's a very common thing to do so we'll just call this joint equals and this syntax is a little bit tricky like this actually stumped me a few times when I started I don't know why it's like this but you actually put the delimiter first just like this put the delimiter first let's just put space and space okay so that instead of just making it again what it was originally we're actually gonna do a little change on it actually let's do this let's do CSV equals like that so actually we're actually gonna do two joints so ignore this for now actually just get rid of it so I don't confuse you that was just a random idea I had on the on the fly so you have your delimiter first you have a string here and then you're actually going to call a function on that string which is a little bit weird I don't know why why that why it's like that but basically you have to have the string and then you're actually calling a function on the string so it's literally string dot join and then enjoin you put the list so list L would be L and then let's print out joined just like that and run it and as you can see it prints out one long string broke and pale and short and nerdy okay cool but earlier I said I had a different idea so like maybe if you want to create a CSV file you would actually use a delimiter of comma with no space CSV and then you call join on that delimiter string put in the same list run it this time oh I didn't print it print print CSV yeah and hit run and as you can see we generated our own short CSV text here so we could actually chuck this to a file I'm not gonna go over how to write two files in Python it's a pretty simple maybe in a future video maybe the next video but that's pretty much what this is going on here we have this joint function and the split function that either split on delimiter or joined by a delimiter I think they're both covered limiters I know this is called delimiter this might be called something else but I'm just gonna call it deliver because just cuz and I'm correct me if I'm wrong in the comments if it's called something else I might actually call something else I vaguely remember back from my undergrad anyways that's about it though for those two quick functions is very useful for dealing with strings um this will be handy for ya see you see files or anything remotely similar to that but that was it for this quick video guys thank you for watching I will see you guys next time and yeah good bye
