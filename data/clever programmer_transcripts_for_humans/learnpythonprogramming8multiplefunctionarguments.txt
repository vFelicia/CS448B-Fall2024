With timestamps:

00:00 - - So, in the last video, we left off
00:02 - at talking about how to make a function.
00:05 - So, we wrapped up our
square in a function,
00:09 - and that way we were really
easily able to use the square,
00:12 - and this way we can use the square
00:14 - as many times as we
want and it's very easy.
00:18 - So, let's do something cool.
00:21 - I said let's talk about
the idea of arguments
00:25 - or parameters of a function.
00:27 - What we want to be able
to do is, let's say that,
00:30 - instead of 100, what if we wanted to move
00:32 - a different length every single time.
00:35 - So, let's say we don't wanna be boring
00:38 - and just move, I dunno, 100 steps.
00:42 - So let's take a look at it,
looks like we don't wanna move,
00:45 - oh, I didn't call it anywhere.
00:47 - Let's call it again, and I'm
gonna remove this line here.
00:51 - Okay, let's run it.
00:56 - Okay, and let's say we
don't wanna be boring
00:57 - and make a really small square like this.
00:59 - Let's say we wanna maybe
go 200 steps, okay?
01:03 - So, let's try it; let's
go 200, 200, 200, and 200,
01:12 - and let's take a look
at what that looks like.
01:17 - Nice, the square looks better.
01:20 - Let's try to tweak it a
little bit and let's make it,
01:22 - I dunno, 240, 240, 240, 240.
01:34 - Hmm, let's see; that looks pretty cool.
01:36 - But what if I wanted a turtle to go
01:38 - all the way to that edge perfectly,
01:41 - and then go down, and then go to the left,
01:43 - and then come back up.
01:45 - Okay, let's try something;
let's try 280, 280, 280, 280,
01:54 - and hopefully ... oh, it's
still not hitting the exact.
02:00 - Maybe let's try 290 or something.
02:03 - So, I hope that you're
seeing that we have to change
02:05 - these values here a lot, right?
02:09 - We have to change it every single time.
02:12 - And we have to change all four of them,
02:13 - in all of those locations,
which is kind of annoying.
02:17 - So, how can we make it so
we don't have to constantly
02:20 - change all those values again and again?
02:25 - It's kind of really frustrating.
02:27 - We want to make it so we
can just change it one time
02:30 - and it changes it everywhere.
02:33 - So, let's say, I dunno, let's call it n.
02:39 - Let's make it a variable
that's the same everywhere.
02:42 - So let's just call it
n, and I'm gonna make
02:45 - a variable here, and I'm gonna call it n,
02:48 - and I'm gonna say go 250, okay?
02:51 - So, now, everywhere n
is, we have 250, okay?
02:56 - So let's try to run this bad boy now.
03:01 - Okay, cool, 250.
03:03 - Let's make that really
small; let's say 50.
03:08 - Okay, that was really small.
03:10 - That's pretty cool, we
were able to use that
03:13 - and that made our life really easy.
03:16 - But, a lot of the times,
we don't wanna change
03:19 - the function itself, like, the
definition of the function.
03:22 - Here, its job is to make a square,
03:25 - and that's all it should
need to know how to do.
03:28 - And we wanna be able to give it something,
03:31 - based on which it changes
the length of it, right?
03:37 - So, like, how far it goes
or how big the square is.
03:42 - Maybe you can think of it like,
03:46 - in English, if you have
a definition of a word
03:49 - that you look up, once you
learn that word, you can use it
03:53 - in whatever way you want; it
really depends on the context.
03:57 - For example, if you wanna
say, "Wow, man. You really
04:00 - killed it," you're
basically saying "You did
04:03 - a really good job and you did amazing."
04:05 - Or, if you said, "Aww, man.
You just really killed that
04:08 - thing for me, you know, you
really killed it for me.
04:11 - I don't even find it fun anymore."
04:13 - Now you're using it and
the context is basically
04:17 - that somebody really made
something less enjoy able
04:20 - for you or discouraged you in some way.
04:23 - So, the word kill, in
this case, right, it has
04:27 - a completely different meaning,
but, based on the context,
04:30 - we change it, right?
04:32 - Depending on what context we give it,
04:34 - we change the word kill.
04:36 - But we shouldn't actually
go and change the definition
04:38 - of the word kill every
time we want to use it
04:40 - in a different context, okay?
04:42 - So, what I'm trying to say here, is that,
04:44 - instead of changing the function itself,
04:47 - let's do something really
cool, let's give it context.
04:51 - I'm gonna say a square
takes in some input n.
04:55 - So, whatever n I give it,
it just puts that in here.
04:59 - And, instead of calling it
n, let's make it more fun
05:02 - and call it length.
05:04 - So, everywhere I see n, I'm just
05:06 - going to replace it with length.
05:09 - So, now the cool thing
that's gonna happen is,
05:11 - if I give it the length of
five, everywhere it sees length
05:14 - it just replaces it with five.
05:17 - If I give it the length of,
let's say, I dunno, 200,
05:21 - it'll go everywhere and replace
everything with 200, okay?
05:25 - That way we'll get a longer square.
05:28 - So, let's try it.
05:30 - If I run this right now,
I'm gonna get an error,
05:32 - and let's see why.
05:36 - Okay, I got an error, and
the error says, "TypeError,
05:40 - the function square,"
that's what the parentheses
05:43 - afterwards it means,
"is missing one required
05:47 - positional argument: length."
05:51 - We're supposed to give it
something, we're supposed
05:54 - to give it context, right?
05:56 - Like, the word kill, we gave it context
05:59 - and it changes the whole
meaning of the thing.
06:02 - So, here, in square,
we're going to give it
06:03 - the length, so let's say
for length we say 100.
06:07 - Okay, now let's see what happens.
06:09 - Let's run it, and we get a square
06:12 - that it goes 100 in each direction, right?
06:15 - So what just happened?
06:17 - We passed in the 100 here, which really
06:20 - passed in the 100 here,
and since there's 100 here,
06:24 - it became 100 everywhere else, and,
06:27 - so, we got a square that was a size 100.
06:31 - And we can effectively do the same thing.
06:33 - If I give it a 300, that's probably
06:35 - not even gonna fit on the screen.
06:39 - Oh, it pretty much does.
06:42 - It makes a bigger square, right?
06:45 - So, now, the only place I have
to change it is really here.
06:49 - This thing's job is to,
now, just make a square.
06:52 - That's all it does.
06:54 - And, here, we can tell it how
big that square should be.
07:00 - So, let's say that we say,
"Make a square of 300,"
07:05 - and then "Make a square
that's, I dunno, 150,"
07:09 - and then "Make a square that's 100."
07:13 - Let's see what that does;
let's see what that looks like.
07:18 - Okay, that's 300, that's
the 150 and that's the 50.
07:24 - Whoa, that was cool, right?
07:27 - That kind of ... it
seemed like it was about
07:30 - to make some kind of design right there.
07:33 - Okay, so, hopefully you
guys have a little bit more
07:37 - of an understanding of how arguments work.
07:40 - Just to take it maybe one step further,
07:43 - think what if instead of these 90 degrees,
07:45 - you wanted to be able
to change the degrees.
07:48 - Maybe we can go on here and say angle
07:54 - and replace everywhere
we see 90 with angle.
08:00 - And, so now, we have to
give our function not one,
08:04 - but two arguments, okay?
08:08 - So, let's say 300 and 90;
so the 300 will replace
08:12 - the length part, so
everywhere there is length
08:15 - it'll replace that with
300, and the 90 will replace
08:20 - angle, so everywhere it says angle,
08:23 - it'll replace that with 90.
08:24 - How cool is that?
08:26 - So, let's run this bad boy
08:29 - and check out what it looks like.
08:31 - We've seen this square
before multiple times, 300.
08:34 - But now, let's add a twist.
08:36 - Let's make this 45 degrees,
let's see what happens.
08:42 - Oh, oh, I don't even know what it did.
08:46 - Let's reduce the length so we can at least
08:48 - see what it does, right?
08:51 - Let's run it; whoa, that's kind of cool.
08:55 - It didn't make a square, it
did something weird with it.
09:00 - Okay, so, I'm foreshadowing
multiple arguments,
09:03 - and in the next video
we'll take more about it.
09:06 - All right, guys, I'll see you there.

Cleaned transcript:

So, in the last video, we left off at talking about how to make a function. So, we wrapped up our square in a function, and that way we were really easily able to use the square, and this way we can use the square as many times as we want and it's very easy. So, let's do something cool. I said let's talk about the idea of arguments or parameters of a function. What we want to be able to do is, let's say that, instead of 100, what if we wanted to move a different length every single time. So, let's say we don't wanna be boring and just move, I dunno, 100 steps. So let's take a look at it, looks like we don't wanna move, oh, I didn't call it anywhere. Let's call it again, and I'm gonna remove this line here. Okay, let's run it. Okay, and let's say we don't wanna be boring and make a really small square like this. Let's say we wanna maybe go 200 steps, okay? So, let's try it; let's go 200, 200, 200, and 200, and let's take a look at what that looks like. Nice, the square looks better. Let's try to tweak it a little bit and let's make it, I dunno, 240, 240, 240, 240. Hmm, let's see; that looks pretty cool. But what if I wanted a turtle to go all the way to that edge perfectly, and then go down, and then go to the left, and then come back up. Okay, let's try something; let's try 280, 280, 280, 280, and hopefully ... oh, it's still not hitting the exact. Maybe let's try 290 or something. So, I hope that you're seeing that we have to change these values here a lot, right? We have to change it every single time. And we have to change all four of them, in all of those locations, which is kind of annoying. So, how can we make it so we don't have to constantly change all those values again and again? It's kind of really frustrating. We want to make it so we can just change it one time and it changes it everywhere. So, let's say, I dunno, let's call it n. Let's make it a variable that's the same everywhere. So let's just call it n, and I'm gonna make a variable here, and I'm gonna call it n, and I'm gonna say go 250, okay? So, now, everywhere n is, we have 250, okay? So let's try to run this bad boy now. Okay, cool, 250. Let's make that really small; let's say 50. Okay, that was really small. That's pretty cool, we were able to use that and that made our life really easy. But, a lot of the times, we don't wanna change the function itself, like, the definition of the function. Here, its job is to make a square, and that's all it should need to know how to do. And we wanna be able to give it something, based on which it changes the length of it, right? So, like, how far it goes or how big the square is. Maybe you can think of it like, in English, if you have a definition of a word that you look up, once you learn that word, you can use it in whatever way you want; it really depends on the context. For example, if you wanna say, "Wow, man. You really killed it," you're basically saying "You did a really good job and you did amazing." Or, if you said, "Aww, man. You just really killed that thing for me, you know, you really killed it for me. I don't even find it fun anymore." Now you're using it and the context is basically that somebody really made something less enjoy able for you or discouraged you in some way. So, the word kill, in this case, right, it has a completely different meaning, but, based on the context, we change it, right? Depending on what context we give it, we change the word kill. But we shouldn't actually go and change the definition of the word kill every time we want to use it in a different context, okay? So, what I'm trying to say here, is that, instead of changing the function itself, let's do something really cool, let's give it context. I'm gonna say a square takes in some input n. So, whatever n I give it, it just puts that in here. And, instead of calling it n, let's make it more fun and call it length. So, everywhere I see n, I'm just going to replace it with length. So, now the cool thing that's gonna happen is, if I give it the length of five, everywhere it sees length it just replaces it with five. If I give it the length of, let's say, I dunno, 200, it'll go everywhere and replace everything with 200, okay? That way we'll get a longer square. So, let's try it. If I run this right now, I'm gonna get an error, and let's see why. Okay, I got an error, and the error says, "TypeError, the function square," that's what the parentheses afterwards it means, "is missing one required positional argument length." We're supposed to give it something, we're supposed to give it context, right? Like, the word kill, we gave it context and it changes the whole meaning of the thing. So, here, in square, we're going to give it the length, so let's say for length we say 100. Okay, now let's see what happens. Let's run it, and we get a square that it goes 100 in each direction, right? So what just happened? We passed in the 100 here, which really passed in the 100 here, and since there's 100 here, it became 100 everywhere else, and, so, we got a square that was a size 100. And we can effectively do the same thing. If I give it a 300, that's probably not even gonna fit on the screen. Oh, it pretty much does. It makes a bigger square, right? So, now, the only place I have to change it is really here. This thing's job is to, now, just make a square. That's all it does. And, here, we can tell it how big that square should be. So, let's say that we say, "Make a square of 300," and then "Make a square that's, I dunno, 150," and then "Make a square that's 100." Let's see what that does; let's see what that looks like. Okay, that's 300, that's the 150 and that's the 50. Whoa, that was cool, right? That kind of ... it seemed like it was about to make some kind of design right there. Okay, so, hopefully you guys have a little bit more of an understanding of how arguments work. Just to take it maybe one step further, think what if instead of these 90 degrees, you wanted to be able to change the degrees. Maybe we can go on here and say angle and replace everywhere we see 90 with angle. And, so now, we have to give our function not one, but two arguments, okay? So, let's say 300 and 90; so the 300 will replace the length part, so everywhere there is length it'll replace that with 300, and the 90 will replace angle, so everywhere it says angle, it'll replace that with 90. How cool is that? So, let's run this bad boy and check out what it looks like. We've seen this square before multiple times, 300. But now, let's add a twist. Let's make this 45 degrees, let's see what happens. Oh, oh, I don't even know what it did. Let's reduce the length so we can at least see what it does, right? Let's run it; whoa, that's kind of cool. It didn't make a square, it did something weird with it. Okay, so, I'm foreshadowing multiple arguments, and in the next video we'll take more about it. All right, guys, I'll see you there.
