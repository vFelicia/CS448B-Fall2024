With timestamps:

00:00 - yo what's up my beautiful people so in
00:01 - this video we're gonna talk about the
00:03 - web development roadmap in 2020 how can
00:07 - you become a web developer the
00:10 - instructors for this video will be me
00:13 - Kazi and of course we're gonna also have
00:15 - Jacob so it's gonna be Jacob and me and
00:17 - Jacob is not part of clever programmer
00:18 - so you guys are gonna get to see his
00:20 - beautiful face a lot more on the channel
00:22 - along with Nod we're gonna have a lot of
00:24 - new content traders on this awesome
00:26 - so let's just jump right into the meat
00:28 - and potatoes of this pack
00:29 - here's what we're gonna be covering in
00:31 - this how much earning potential you have
00:33 - if you become a web developer even in
00:37 - this time of crisis right either you can
00:39 - see this is time of crisis with this
00:41 - whole coronavirus situation going on or
00:42 - you could see it as an opportunity we're
00:45 - gonna cover the popular web dev stacks
00:47 - and top tier companies like Facebook
00:49 - uber Airbnb and Pinterest this is
00:51 - something cool that Jacob and I work on
00:53 - because nobody in there web developer
00:56 - videos actually talks about the text
00:59 - acts these biggest companies are using
01:00 - so we're gonna actually provide you a
01:02 - breakdown of the text ax and then no
01:05 - matter really which route you want to
01:07 - take you want to become a front-end
01:08 - developer a back-end developer or a full
01:10 - stack developer this video has you
01:12 - covered as well as how you can actually
01:15 - make an income from it so you get to
01:18 - choose your path okay front end back and
01:21 - full stack so think of yourself as one
01:22 - of those like video game characters
01:24 - where you get to choose you know choose
01:26 - your own adventure and then the examples
01:29 - of learning pads we're gonna provide you
01:30 - with them as well that show you how you
01:32 - can become a successful web developer in
01:34 - 2020 now before I continue I do want to
01:37 - let you know that everything that we'll
01:39 - be covering in here and then some is
01:41 - covered in our course called profit with
01:44 - JavaScript it's an awesome JavaScript
01:47 - training program it's 15 weeks long and
01:49 - it takes you from complete beginner to
01:51 - mastery and the goal really with this
01:54 - program is to help you make a 5k a month
01:56 - or more as a developer I notice a very
01:59 - ambitious goal but we have a lot of
02:01 - community support around this product
02:03 - and you also have weekly live training
02:05 - so you get four monthly life training
02:07 - calls with Nas who's an instructor for
02:10 - this program and then just the overall
02:12 - programmers
02:13 - awesome if you just click the link in
02:14 - the description below you'll get to see
02:16 - what I'm talking about with that said
02:17 - let's jump right into this at this point
02:21 - I'm gonna let Jacob take it over and let
02:23 - you know what is the opportunity to
02:25 - become a web developer in 2020 and
02:27 - beyond
02:28 - so how it's going Jacob here so let me
02:31 - take over from here thanks Cassie why
02:34 - should you become a web developer here
02:36 - the facts guys so as you can see her
02:38 - especially in 2020 I mean the trend is
02:41 - going high all right it's going up from
02:45 - 2014 to their predictions that will be
02:49 - twenty seven percent growth and a web
02:52 - development profession okay so yeah it's
02:56 - the growth is much faster than an
02:57 - average occupation and the amount is
03:00 - also growing in popularity so as I said
03:04 - here are the facts mmm and let's go
03:07 - Father
03:08 - so why should we become web developer
03:12 - let's continue with those facts so I
03:14 - specially put those numbers here I mean
03:18 - I especially put the web developers
03:20 - salaries in San Francisco and in New
03:22 - York City because I wanted to mention
03:25 - that being a web developer means that
03:27 - you can actually work from all around
03:30 - the world all right so you don't have to
03:31 - be in an office you can be you can work
03:35 - from home from Poland from Ukraine from
03:37 - anywhere in India as I said this work is
03:41 - mostly remote especially right now
03:44 - during the coronavirus everyone see that
03:46 - it's possible to work remotely that you
03:49 - don't have to be in office so what I
03:52 - wanted to mention is imagine if you land
03:55 - a client from San Francisco okay you're
03:58 - literally able to make six figures and
04:02 - here also the job offers from different
04:04 - companies not only from web from Google
04:08 - right so those are like different
04:09 - companies at the other way a rather than
04:12 - 9:00 to 5:00 and being the web developer
04:14 - means that you can actually create
04:16 - templates or products and sell them
04:19 - online okay so basically here let's take
04:22 - this guy he is selling one template for
04:26 - $60
04:27 - and as you can see here he made almost
04:31 - 600,000 sales so let's open the
04:34 - calculator calculator for a second all
04:36 - right
04:37 - here let's put 60 dollars 10 600,000 and
04:46 - I will just leave those numbers here
04:48 - right this is crazy guys okay so it's
04:51 - all about marketing yourself in this
04:53 - case because you can create a theme and
04:55 - put it on github for free and then you
04:57 - grow awareness for your brand and in one
05:01 - point you can actually start selling
05:02 - those templates to people and they will
05:05 - literally will pay you because not
05:08 - everyone likes to design for example me
05:11 - I hate so I would rather buy it and
05:14 - create a bucket for it okay but yeah
05:16 - let's go further on the right as you can
05:19 - see here those are the works from app
05:21 - work so you can basically go to app work
05:23 - and say that you and post your job offer
05:27 - and charge for example 80 65 euros
05:32 - sorry dollars per hour okay or even
05:35 - hundred or the third way is to actually
05:38 - sell real businesses so for example here
05:41 - there's a website be trendy which is
05:43 - making 7k average in revenue a month
05:46 - okay and they are selling it they are
05:48 - asking the price for $10,000 okay so
05:51 - this is the first guy at first case but
05:53 - there's another one the other website
05:56 - and they are selling it for more than
05:59 - $200,000 so those are possibilities
06:02 - those free if you want to work as a
06:05 - freelancer or create templates or whole
06:08 - startups and sell them all right okay
06:11 - here are another facts I mentioned
06:14 - startups okay but by the real startups I
06:17 - mean real startups so here's the list
06:19 - from the top startups from the last year
06:22 - you probably can know those names for
06:26 - example duolingo I don't know about you
06:29 - but I was using it I mean I'm still
06:31 - using it to learn German and on my phone
06:33 - and it's super easy to make I mean if I
06:34 - think about it it's possible to create
06:36 - this kind of app just by your own okay
06:38 - simple to give v2 freelancers
06:41 - I mean those platforms are the platforms
06:43 - which you are able to create your by
06:45 - your own and at least start doing by
06:48 - your own then hire other people to to
06:50 - grow it right as a company but all of
06:53 - those things are possible when you
06:54 - become a web developer when you become
06:56 - like for example full stack developer so
06:58 - you know how to create front-end how to
07:00 - design how to create a back-end operator
07:03 - with databases and also how to deploy
07:05 - your app so this is basically like full
07:08 - step right you can you can do everything
07:10 - and we'll be talking about it and our
07:13 - presentation as well all right here are
07:16 - another fact so basically as you can see
07:18 - here I'm photos of me from my Instagram
07:21 - and also from my friend from Instagram
07:24 - he's actually web developer he's
07:26 - travelling the world he he's doing
07:29 - freelance he has got like huge amount of
07:32 - different clients and he can literally
07:34 - work next to the beach
07:36 - alright so it's super great with this
07:38 - with being a web developer have actually
07:40 - freedom to our six features six figures
07:43 - and yeah you don't need a degree and you
07:47 - can work everywhere so this is the case
07:49 - which I told you about you can get the
07:51 - client from New York from a San
07:53 - Francisco which are willing to pay you a
07:55 - lot and you can work next to the beach
08:00 - okay let me talk about popular sects and
08:02 - top companies so basically for now you
08:06 - may probably not be able to recognize
08:08 - those names but and this presentation
08:11 - will cover almost everything from here
08:13 - so now let's just skim through it very
08:16 - very quickly so web server this engine
08:18 - apart this is kind of the technology
08:20 - which is responsible for your web server
08:22 - for all of the requests security stuff
08:25 - like this then you have databases so
08:27 - this is how you actually manage your
08:29 - data for example MySQL PostgreSQL those
08:32 - are like rational databases then we have
08:35 - MongoDB as I said we'll be talking about
08:37 - all of them there you have server-side
08:39 - framework which is no js' and
08:42 - programming languages which are super
08:44 - popular and uber company okay for
08:46 - example take a look at Facebook they are
08:48 - using graph QL which we'll be talking
08:50 - about mmm also they are using their
08:54 - own custom server which is super cool
08:58 - okay then we have another popular stock
09:01 - like Airbnb print dress for example and
09:05 - print rest they are using a Jenga which
09:07 - is my favorite framework and here in a
09:09 - clever programmer we made a lot of
09:11 - different courses about them so about it
09:13 - so you can learn it by watching our
09:15 - movies and as I said we will be talking
09:18 - about everything
09:19 - for example Amazon earlier RDS it's a
09:22 - database it's a service from AWS cloud
09:26 - ok which is having for example a
09:30 - database somewhere in a cloud and it's
09:34 - super easy to connect it to different
09:35 - services for also from AWS ok but as I
09:40 - said if you don't know it what I'm
09:42 - talking about
09:42 - yet it's ok I just wanted to put them
09:45 - here so you can have a glass and see
09:48 - whatever I'm talking about and then when
09:52 - we go through the presentation
09:53 - everything will get clearer to you
09:57 - alright so how to become at web
10:00 - developer 2020 here's the list of facts
10:03 - okay first of all you you should define
10:05 - whoever you want to be because as I
10:07 - mentioned a couple of times before you
10:10 - can be front-end right you can be just a
10:13 - front-end or even just a designer you
10:15 - can create just the layouts and sell it
10:18 - but I would say it's better maybe if you
10:21 - don't like to just design if you rather
10:24 - want to code you can become a front-end
10:27 - there are some framework for this for
10:30 - example react.js which we talking about
10:33 - or you can be just a back-end developer
10:35 - so for example me I was full time
10:37 - back-end developer for almost one year
10:40 - when I dropped out from my first
10:42 - University and I was actually developing
10:45 - back-end API sin a Jenga framework and I
10:48 - learned learn a lot about that also I
10:51 - was using Posterous SQL or if you want
10:54 - you can be called a full stack so
10:56 - currently I'm learning a lot of
10:58 - front-end technologies I mean I just
11:00 - started learning the future yes the
11:03 - framework for front-end which we talking
11:05 - about in the next slides and yeah this
11:07 - is my golf
11:08 - now become a full-stack developer so I
11:10 - would be able to create whole products
11:13 - from scratch and here's the list of
11:16 - things by the chill-out guys will go
11:22 - through all of those things simply in
11:24 - this presentation but I just wanted to
11:27 - mention that all of them you'll
11:30 - literally learn by doing so you don't
11:32 - have to like start from them okay so you
11:35 - can for example learn HTML CSS
11:37 - JavaScript and then as you will be
11:39 - developing your first websites you will
11:41 - be you will start learning about kit
11:43 - version as well okay so if you want to
11:44 - store you if you want to have access to
11:48 - history of your code then you will learn
11:50 - how what is it it version controls so I
11:52 - can back to the code which I created
11:53 - like two days ago
11:54 - okay then you go through basic terminal
11:56 - users so for example you create some
11:58 - server and an ojs you'll start your
12:01 - server and there will be you'll be able
12:02 - to actually see your website running in
12:05 - a browser okay then you of course really
12:07 - like some like design which is optional
12:09 - because you can download some templates
12:11 - and just mess around with it or you can
12:13 - for example use software as a figma or
12:16 - Adobe XD and design your stuff from
12:19 - scratch then you'll see what is get hub
12:21 - which is good version control but in a
12:24 - cloud alright so you can share your
12:26 - projects or you can become or you can
12:29 - create open-source projects which are
12:32 - free so which are free projects which
12:36 - you can collaborate with developers all
12:38 - around the world then you have SSH HTTP
12:40 - HTTP and API sand design patterns as
12:44 - again we will be talking about them so
12:47 - no worries and here's CAHSEE
12:51 - all right great thanks Jacob for letting
12:53 - me take the stand once again so guys in
12:57 - terms of code editor just pick one there
12:59 - are all these wars on which one is the
13:01 - best
13:02 - it doesn't matter pick an editor and get
13:04 - the freaking coding okay Visual Studio
13:06 - code is my favorite I also like atom and
13:09 - sublime but nowadays Visual Studio code
13:11 - is my choice I highly recommend it just
13:13 - get that forget about everything else
13:14 - okay Visual Studio code allows you to
13:17 - have install packages and they're very
13:19 - easily it has them
13:21 - integration if you want it it's the most
13:23 - beautiful it's the most user-friendly
13:24 - and it's just awesome it has a lot of
13:28 - its completely free so that's what I
13:30 - recommend
13:32 - now front-end development in three words
13:35 - to make it extremely simplified is HTML
13:39 - CSS and JavaScript
13:41 - alright so here's an example of what
13:44 - hTML does so HTML doesn't make you make
13:48 - a website that looks very pretty but
13:49 - unless you make a basic website so you
13:52 - know those websites with a lot of those
13:53 - boring professors they'll like put up
13:55 - their curriculum for CS 120 or whatever
13:58 - right
13:59 - old-school websites that's what you can
14:01 - make with it's just pure HTML so here's
14:04 - an example of code on the left-hand side
14:06 - along with what that actually looks like
14:08 - on the right-hand side here's an example
14:11 - of what CSS would do so CSS then starts
14:14 - to make things more beautiful I mean I
14:16 - know it doesn't look very beautiful but
14:18 - just think about the fact that there's
14:19 - different colors here and there's a
14:21 - background here which wasn't there in
14:24 - just pure HTML so here is an example of
14:27 - the code on the left hand side and then
14:29 - on the right hand side you have an
14:30 - example of what that actually makes it
14:32 - look like any when it comes to CSS of
14:34 - course there's a lot for you to learn so
14:36 - there's the basics you got to learn the
14:38 - syntax the color the list the tables and
14:40 - then there box models and of course then
14:44 - it gets very complex with things like
14:45 - flexbox and all the other things i mean
14:48 - you can get pretty damn advanced in CSS
14:50 - and animations and things of that nature
14:52 - and then of course you got to learn
14:56 - JavaScript so here's just an example
14:57 - illustration of JavaScript if you want
15:00 - to add in fancier things or
15:02 - interactivity to your website for that
15:05 - you're gonna need JavaScript and there's
15:07 - no other way around that and to learn
15:11 - JavaScript this is your basic path of
15:13 - how you would learn it okay so there's
15:15 - the vanilla JavaScript you're just
15:16 - learning the basics so syntax datatypes
15:19 - functions objects loops and then you get
15:22 - on to I'm gonna use the pointer and then
15:24 - you get on to the Dom and Dom is really
15:27 - where you can manipulate what's actually
15:29 - happening on a website so here you have
15:32 - things like animations events listeners
15:35 - you have of course Ajax and JSON and so
15:40 - this is where you're learning how to
15:41 - actually like make requests how do you
15:43 - use API is how to actually read a JSON
15:45 - file
15:46 - what are promises all those types of
15:48 - things a lot of things that have to deal
15:50 - with a synchronicity you will be having
15:54 - to learn because that's super super
15:55 - important and then of course modern
15:58 - JavaScript so es6 and what that means
16:02 - next up you probably want to learn some
16:05 - popular libraries and a lot of people
16:07 - have very controversial views people are
16:09 - like forget about libraries everything
16:11 - vanilla Jas I'm not so hardcore I say
16:14 - that you should I recommend you learn
16:16 - popular libraries and the reason why I
16:19 - say that is because if you learn this
16:22 - stuff it makes your life so damn easy
16:25 - when it actually comes to building a
16:28 - project or building an app because using
16:31 - a library you can easily write a few
16:34 - lines of code and that allows you to
16:36 - actually make something look beautiful
16:38 - without you having to build everything
16:40 - from scratch so I personally love
16:43 - materialized a lot and of course
16:46 - bootstrap 4 is you know what pretty much
16:48 - everybody gets to learn so yeah when it
16:51 - comes to like adding a button that looks
16:52 - really nice having I'm not that
16:55 - interested in having to learn how to
16:56 - design that all from scratch so I'll
16:58 - just use a library that allows me to
17:00 - make things look awesome and very very
17:02 - quickly
17:03 - here's an example of what bootstrap 4
17:06 - would do right so if you write these
17:08 - three lines of code right here that we
17:11 - have available for you it's gonna put
17:14 - make these buttons so you see these
17:16 - buttons come already nicely rounded
17:19 - corners they look good
17:21 - the Texas centered and none of this code
17:24 - you actually have to code up from
17:25 - scratch you just got to use the
17:27 - bootstrap library so that's why these
17:29 - libraries are good to actually learn and
17:31 - on the left hand side you can see an
17:34 - example of a messenger tool somebody
17:37 - made that's responsive a bootstrap
17:39 - application and so this is built with
17:41 - bootstrap and it looks beautiful that's
17:44 - a real world example
17:48 - next up you want to learn about
17:50 - responsive layouts so here on the
17:53 - complete left hand side is what a non
17:55 - responsive layout looks like this looks
17:58 - terrible right now what you want to do
18:01 - is you want to learn how to make it look
18:02 - responsive so here it looks beautiful so
18:05 - these are all the things like how do you
18:07 - actually set a viewport how do you
18:09 - actually set the max width property what
18:12 - do you do in media queries and on and on
18:15 - you go so responsive layout as a whole
18:17 - world of its own in CSS you will also
18:20 - learn about flexbox
18:21 - that allows you to make things really
18:23 - responsive really fast you know if a
18:26 - thing looks like in a certain way on a
18:29 - main website on a desktop
18:31 - how would it then respond how would then
18:34 - then look on a smaller screen like a
18:37 - mobile device an iPhone an Android so
18:41 - learning the skills of responsive
18:43 - layouts is huge next let's talk about
18:46 - dev tools so here is an example of
18:50 - chrome dev tools and chrome dev tools
18:53 - allow you to really dig deep into a page
18:57 - and like be able to debug it be able to
18:59 - change it on the fly at different color
19:02 - sit on the fly check the styling fix any
19:04 - problems look at what's going on through
19:06 - the network tab or the performance tab
19:09 - you can also do console logging so you
19:13 - can like write code in there and check
19:15 - it so this is one of the most important
19:18 - tools as a developer you have to learn
19:20 - and here's an example right so on the
19:23 - right hand side you can actually see
19:26 - that we're hovering over this histogram
19:28 - average bar with the height of 100% so
19:31 - it's probably this histogram you know
19:34 - one of these histogram bars right over
19:35 - here maybe even this big one okay
19:39 - so this is what you can do with dev
19:44 - tools and in a lot but this is something
19:47 - you have to absolutely learn so if
19:49 - you're watching this video right now
19:51 - what I recommend is you take notes and
19:54 - write this down and even go back and
19:58 - take notes of things if you didn't
19:59 - because this will allow you to actually
20:02 - created step-by-step path to becoming a
20:05 - full-stack developer or a front-end
20:07 - developer a back-end developer because
20:09 - we're step-by-step laying out all the
20:12 - tools and all the technologies that you
20:13 - need to learn with coding to actually be
20:16 - able to get these skills so then you can
20:17 - actually get a job or become highly
20:20 - valuable in the job market
20:23 - next up is you gotta master the command
20:26 - line there's no other way around it so
20:28 - whenever we think of the word command
20:29 - line we imagine a hacker on a you know
20:32 - freakin black screen with the green text
20:34 - and you're writing stuff and that's
20:36 - honestly what it's kind of like most
20:39 - people want to run away from command
20:41 - line because seems intimidating there's
20:43 - not a amazing GUI there and it can be
20:46 - confusing but you have to learn this a
20:49 - lot of bad developers that I see try to
20:52 - skip this and then they lack really
20:54 - fundamental skills and they can never
20:56 - learn them later maybe then they can't
20:58 - learn how to host websites online or
21:00 - they can't learn how to like
21:02 - problem-solve or like really debug
21:04 - things accurately because they have no
21:06 - power over the command line and they're
21:08 - very helpless so this is one of those
21:10 - areas you just have to master and if
21:13 - you're like me you'll kind of learn to
21:14 - love it after you know getting used to
21:17 - this
21:20 - after command lines I highly recommend
21:24 - you learn algorithms so you can go and
21:26 - learn algorithms and practice them on
21:28 - different websites like lead code or
21:30 - hacker rank and algorithms are really
21:33 - they give you the problem-solving skills
21:35 - right so algorithms help you become a
21:37 - great problem solver and remember
21:40 - problem-solving skills will make you a
21:42 - better developer and help you get a
21:44 - software developer job so a lot of the
21:47 - interviews to come down to like
21:49 - whiteboarding a solution or them asking
21:51 - you to solve some kind of challenge or
21:53 - problems you don't want to just be a
21:54 - developer that can make things look
21:56 - pretty you want to be a developer that
21:58 - can actually solve real world problems
22:00 - and when people pose them you should be
22:03 - able to like come up with some kind of
22:05 - solution and algorithms are really what
22:09 - are the things that are gonna like make
22:11 - you a great developer we can add
22:12 - features to an app or like debug and see
22:15 - what's going on with somebody's code and
22:18 - yeah like this is for me I don't think
22:22 - there's any substitute for this this is
22:24 - something that's very fundamental that
22:26 - you should spend quite a bit of time
22:28 - learning I would imagine you should
22:30 - spend at least 50 to a hundred hours
22:32 - just in algorithms alone solving
22:35 - challenges if not more and you should do
22:37 - this consistently and become better this
22:41 - will just make you a better developer
22:42 - and everything that you can do you'll be
22:45 - able to do it better when you actually
22:48 - learn how to solve problems and make
22:51 - things actually really effective next up
22:56 - you should learn how to SSH so this is
23:00 - basically the ability that allows you to
23:02 - log into someone else's computer and you
23:05 - were on the planet so and this is a
23:07 - popular networking concept that every
23:09 - web developer should know and why this
23:14 - is also useful is later when you want to
23:17 - learn how to host your web apps online a
23:19 - lot of the times you're going to learn
23:20 - how to SSH into you know tools like
23:22 - docker or AWS or even sometimes Heroku
23:26 - so SSH is something that you should put
23:30 - on your list of things to learn on your
23:33 - path and the next up you should learn
23:35 - how to deploy your static websites so
23:39 - these are not your dynamic web apps but
23:41 - your basic static website so what does
23:43 - that mean you know if you make a
23:44 - portfolio website you should learn how
23:46 - to host that up online and you can use
23:49 - tools like github pages or net liffe I
23:51 - to actually be able to host them and
23:54 - then you have you have to also know
23:57 - about a few different things like domain
23:59 - registration static hosting SSL
24:01 - Certificates and FTP and yeah like you
24:04 - can use services like Namecheap to get a
24:06 - domain or Google domains to get a domain
24:08 - and SSL really is like you know for
24:11 - example if you go to a website and you
24:13 - see something as HTTP and not HTTPS
24:15 - right HTTPS is like secure an HTTP might
24:20 - not be that secure and if you go on
24:22 - websites on Chrome or Safari even on the
24:25 - top left-hand side sometimes you'll see
24:26 - that icon that says secure
24:28 - or not secure and SSL allows you to do
24:32 - that so these are really the skills you
24:34 - should be learning at this point so if
24:37 - you make a basic website with HTML CSS
24:39 - and JavaScript using bootstrap and all
24:41 - these different things you now want to
24:44 - be able to host that online you want to
24:47 - be able to people should be able to go
24:48 - to like you know Jake portfolio calm and
24:52 - be able to see your portfolio next up
24:58 - one of the most confusing things that
25:02 - for most developers it is to learn but
25:04 - absolutely fundamental it makes you a
25:08 - beast in my opinion if you learn it it's
25:10 - so freaking valuable it's learning get
25:13 - version control now a lot of people will
25:17 - confuse get with github how I think of
25:19 - version control is it's time machine
25:22 - okay so if you look at this graph here
25:24 - if you look at this chart here or this
25:26 - image if you've never used git this will
25:29 - make zero sense to you this will make no
25:32 - sense but how I can describe this to you
25:36 - is forget about that image and just
25:38 - think about a time machine and what that
25:41 - allows you to do is if you're building
25:42 - an application let's say you built
25:43 - version 3 and then when you go onto
25:45 - version 4 and now everything breaks this
25:48 - time machine allows you to go back to
25:49 - version 3 or version 3.5 or version 2
25:52 - when things were back to normal so you
25:56 - know this is version 3 it's it's almost
25:58 - like a video game right a memory card if
26:00 - you want to think about you can you can
26:02 - save it allows you to basically make
26:05 - save saves on your project and then you
26:08 - can go back in time by just typing in
26:11 - like one line it allows you to go back
26:13 - in time at any point and generally when
26:17 - you're doing get how I do them is every
26:19 - time I make a new feature I make a new
26:22 - get commit with that so for example say
26:25 - you built an app and this is version 1
26:28 - and it's just local on your computer ok
26:29 - so this is where I'm hovering over then
26:31 - let's say the next thing you did on that
26:33 - app was this commit which now added the
26:38 - feature of making your app go online so
26:41 - the second thing you added then the
26:43 - third thing you added was this app can
26:46 - now allow people to log into the app
26:50 - then this fourth thing you added maybe
26:53 - it allows people to make a post on your
26:57 - app right now something breaks or you
27:00 - want to remove a feature and go back you
27:02 - can just go hit go back to when I just
27:03 - added the feature to log in for people
27:06 - or user authentication so boom you can
27:08 - just like remove a feature and go back
27:10 - fast and now if you want to go forward
27:12 - you can do that just as well so really
27:16 - really magnificent tool extremely
27:19 - powerful the only way you can learn it
27:21 - is if you know command line I mean
27:23 - there's some GUI tools of it but I
27:25 - recommend you learn the command line and
27:27 - then learn how to use git this is super
27:29 - valuable most people confuse it with
27:31 - github and github I want you to think of
27:34 - it like Dropbox or a Google Drive for
27:36 - just putting your code all right so
27:39 - really github is just like a place where
27:41 - you generally host your code or you put
27:44 - your code but get is actually the
27:47 - version control tool these are the
27:51 - different hosting services I recommend
27:53 - github I mean I used bitbucket too but
27:56 - yeah so I would recommend just github if
27:59 - you want to just pick one stick with
28:00 - github and you're good to go
28:01 - but these are some different hosting
28:03 - services just so you have a full view of
28:06 - it and then guys with frameworks now
28:10 - there are a lot of front-end frameworks
28:12 - so we're gonna now dive deep into a lot
28:14 - of details on front-end back-end and all
28:16 - that stuff and frameworks are they're a
28:19 - very powerful tool in the development of
28:21 - modern web and mobile applications so
28:24 - you can kind of see this breakdown here
28:26 - but at this point I'm gonna give it over
28:28 - to my friend Jacob to help walk you
28:31 - through all of these details and then
28:33 - I'll meet you guys at the end all right
28:36 - let me talk about top free front-end
28:39 - frameworks right now so as you could see
28:42 - the slide before radius was on the first
28:47 - place then we had the view jeaious and
28:48 - ocular JS but it wasn't always like that
28:51 - and yeah let me talk about pros and cons
28:53 - on all of them and let me go
28:55 - so let's start with the via with the
28:56 - view J S which which is the youngest of
28:59 - all three basically VJ s was created
29:04 - just by one person but people started to
29:06 - liking it all right so right now it has
29:09 - a huge community it has huge amount of
29:11 - stars on github and it's one of the
29:14 - actually it's the easiest framework for
29:17 - all of them to start learning and this
29:20 - is also what which I choose to start
29:22 - with my front end journey I mean the
29:25 - full sake I decided to pick the view J
29:28 - yes so basically it's a component based
29:31 - and visual Dom which makes it very fast
29:35 - so what does it mean component based
29:38 - it's created by components like all of
29:41 - them are created by components so
29:43 - basically you create your app from kind
29:47 - of the blocks all right so you create
29:48 - one block and you can reuse it multiple
29:51 - times so you you can't you don't have to
29:54 - you don't have to copy and paste your
29:56 - code multiple times in a code so view is
30:00 - the easiest to start it has simple
30:02 - simple syntax it's super beginner
30:05 - friendly as I mentioned the community is
30:07 - growing from year to year
30:09 - but one of the cons is actually that
30:11 - it's not the best for complex projects
30:13 - okay so if you decide to create a light
30:15 - project it's great and also this
30:18 - framework is the lightest of actually it
30:21 - doesn't have that much size as angularjs
30:24 - or react is it's it's super super light
30:28 - and popular companies which are using
30:29 - this framework are for example gitlab
30:32 - Alibaba Shami 9gag and also the one of
30:35 - the concepts that it's not maintained by
30:37 - one of the popular companies right like
30:39 - Google or Facebook when it comes to to
30:43 - this but it's not a problem because it
30:45 - has great coming
30:46 - then he'll jump to the angularjs which
30:49 - is outs is super hard to learn all right
30:51 - so is the hardest to learn mmm it's it
30:54 - come from angular and the biggest in the
30:57 - beginner is with angular and now we've
30:59 - also angularjs it's created by Google
31:02 - developers and unlike react it has a
31:06 - two-way data-binding
31:08 - okay it's also component-based framework
31:12 - it is super strong community it's
31:15 - actually simple for one page apps I mean
31:18 - it's the hardest to learn but to create
31:20 - a single app it's it's it's it's okay
31:24 - and actually also gue very good for a
31:27 - huge projects okay so for example banks
31:29 - are using this this framework okay okay
31:32 - so as I said yeah
31:34 - also Google it so from popular companies
31:36 - Google use this Xbox BMW it also has
31:41 - Model View controller architecture okay
31:44 - and then we have the react.js which is
31:46 - number one in popularity a lot of people
31:50 - actually starts with react it's not that
31:52 - easy as future yes but it's also user
31:55 - friendly react has a lot of different
31:57 - tutorials huge community it's maintained
32:00 - by a Facebook so basically the funny
32:02 - story it was created by one of the
32:05 - Facebook developers a Jordan walkie
32:08 - he created because Facebook was growing
32:11 - so fast its network was growing so fast
32:14 - that they needed something to manage
32:16 - that and react is actually is perfect to
32:20 - do that okay mmm and it's used also not
32:24 - only by Facebook but for it's used by
32:28 - Netflix New York Times Yahoo
32:31 - uber PayPal as we as we seen in the
32:34 - beginning okay now let me talk about the
32:37 - state management so basically there are
32:41 - frameworks for frameworks so for top
32:45 - three of our frameworks for react view
32:47 - AJ for view and Fuhrer angular we have
32:49 - Redux for react or we can also use rear
32:53 - hooves and context API there's both they
32:56 - are working the same as the Redux are
32:58 - almost the same as I was reading the
33:00 - different as I was reading different
33:02 - articles online for view we have
33:05 - eugenics which I'm currently learning
33:06 - and also for angular we have ng air X
33:10 - okay and now let me talk to you what is
33:13 - actually state management so basically
33:15 - and you have like a larger apps and if
33:18 - you want to share your application
33:20 - with multiple components it's much
33:22 - easier to do that and you don't have to
33:25 - for example ask API multiple times from
33:28 - different places for a data you can do
33:31 - it once and then you can just pass it
33:33 - through different components alright
33:35 - because of the statement module so
33:37 - normally we've outside management for
33:39 - example if you J X when you create
33:41 - components under components you have a
33:43 - tree structures ok and let's say that
33:45 - only one branch here wait can you see me
33:48 - yet only one brother here you have a
33:50 - data and you want to pass it here all
33:52 - right so in order to do that you'd have
33:53 - to clamp to the root and then pass it
33:57 - down and with the same announcement
33:58 - you're actually able to do that without
34:01 - it ok
34:02 - it also provides some features such as
34:05 - zero config time travel and it's super
34:08 - easy to debug application with the state
34:11 - management such as view JX ok all right
34:14 - let me talk right now about static site
34:16 - generators and mostly how talk about the
34:19 - Gatsby which is run by with react GS
34:22 - it's actually super cool to use static
34:25 - site generators in 2020 because first of
34:28 - all they are super fast so basically
34:30 - everything which is running our static
34:32 - web sites which means it's generated
34:35 - HTML CSS J's so you don't have to run
34:39 - everything on a server which means it's
34:42 - also super secure because whenever
34:45 - someone hacks your web sites
34:47 - they won't be done like any serious
34:51 - damage right there
34:52 - for example hacker won't get your data
34:54 - won't get your credit cards ok
34:57 - they have great CEO which means they'll
34:59 - be it will be ranked very high on a
35:03 - Google static web sites also means that
35:05 - they yeah they will be
35:07 - they'll be static but also it doesn't
35:10 - mean I won't be there now dynamic ok
35:12 - they will be dynamic and they will have
35:15 - integration with api's and stuff like
35:17 - this for example the more that one of
35:19 - the most popular websites which is run
35:21 - created and gatsby JSS react react JS
35:24 - dot org the react main website but i
35:27 - also also saw some online stores and
35:31 - stuff like that so basically
35:34 - created by no js' on your computer so
35:36 - first of all you run the nodejs and it
35:38 - generates all of the content for a cat's
35:41 - bjs and then use surf every which is
35:44 - surf are in the static websites okay the
35:48 - Gatsby J is also use query language
35:51 - craft QL which we'll be talking about in
35:54 - the next slides and what's cool about
35:57 - that cats bjs is that you can get data
36:01 - from anywhere also so we can use some
36:04 - database you can use some other API s--
36:06 - it's super nice and you can create your
36:10 - coat with the react and CSS and in the
36:13 - end as I said no J's will generate all
36:16 - of the static files and upload upload
36:19 - them on a server okay and also super
36:22 - cool is that it has a create community
36:24 - it has a great support it's super easy
36:26 - to learn by just reading a documentation
36:28 - and as tons of different plugins which
36:31 - you can use ok and also it's free so
36:35 - yeah it's a win-win situation for all of
36:38 - us so I would suggest you learn how to
36:40 - create static how to use static site
36:42 - generators alright let's talk about
36:45 - Arkin development so first we are
36:48 - talking about front-end development
36:49 - alright so after you learn everything
36:51 - which I covered before you are able to
36:54 - actually apply to all of the front-end
36:56 - developer positions and become the real
36:58 - really good one from the developer right
37:01 - if you know all of the basics and
37:04 - advanced topics on HTML CSS JavaScript
37:07 - and you know how to use frameworks
37:10 - you're able to get this 8090 even 100k
37:14 - job or you are able to work as a
37:15 - freelancer do much much more okay so now
37:19 - let's focus on the backend development
37:22 - which I'm actually good in because that
37:24 - was my job position for over one year so
37:28 - here are the languages we can which you
37:30 - can use for it okay elixir scholar has
37:34 - Cal Java Python Ruby PHP nodejs and
37:37 - dortmund alright would you use what is
37:40 - super cool about node.js it's run by a
37:42 - JavaScript so it's basically so
37:45 - basically you can kill two birds with
37:47 - son because once you learn JavaScript it
37:49 - will be also super easy for you to learn
37:52 - node.js and now let's talk about best
37:55 - back end back in frameworks so first for
37:59 - Haskell let me just get a pointer is yes
38:03 - what I do I'm not sure if I'm
38:05 - pronouncing good then for Java we have
38:07 - spring which I try to work for awhile
38:11 - but I didn't really like Java so I very
38:14 - quickly actually jumped to the Django
38:16 - which is my favorite back end framework
38:18 - or flask which is I would say flask is
38:22 - for light application Django is for more
38:25 - complex application for a huge business
38:27 - solution so for example Instagram is run
38:30 - by a Django framer ok and Django is also
38:34 - cool because you can create a full stack
38:36 - application ok and generate HTML files
38:40 - in it as well but also you can create
38:42 - their API so REST API so if you install
38:46 - Django rest framework then you have for
38:48 - PHP laravel which is super super popular
38:51 - right now so I even made like I even
38:54 - asked in my post on Instagram what back
38:57 - in framers people are using and a lover
38:59 - was actually one of the most popular one
39:01 - and then you have no js' so there's a
39:04 - express there's a framework called
39:06 - Express which you can learn and Fogo you
39:08 - can learn a rebel so whenever you create
39:12 - a back-end for your application you
39:14 - mostly want to play with your data you
39:17 - mostly want to actually manage your data
39:19 - create the API different a endpoints for
39:22 - it to get so user can have access to it
39:27 - alright so for this you need a database
39:30 - so here's the list of different types of
39:33 - databases which would be going through
39:35 - let me give my pointer ok so first of
39:38 - all we have relational databases ok what
39:41 - does it mean is you'll have like
39:42 - different columns different tables and
39:45 - they will have some kind of relation
39:48 - like key key relation like many too many
39:51 - one-to-one one-to-many those are the
39:54 - relation usually have in a relational
39:57 - database and for this you can use
39:59 - PostgreSQL or my skew
40:01 - which are highly supporter supported for
40:04 - example by a jingo I was you working all
40:06 - who've poor scores SQL a and it's super
40:08 - easy also to learn it then you have no
40:11 - SQL database so for example you can have
40:14 - a key value store for example ready or
40:17 - dynamo DB dynamo DB is one of the AWS
40:20 - services also so you can also use it
40:23 - there which is super secure and super
40:25 - fast or you can have document base
40:28 - database which is DB again this is
40:32 - no SQL database there are no relations
40:35 - like in those two and a mana gonna be
40:39 - actually and when you look at this it
40:41 - looks like a JSON document okay so Jason
40:44 - which stands for a JavaScript object
40:46 - notation okay
40:48 - then we have a cloud database for
40:50 - example Amazon RDS or firebase so
40:53 - whenever we for example choose Amazon
40:56 - RDS which which stands for relational
41:00 - data relational database services you
41:04 - are you can create actually a database
41:07 - stored in the cloud the relational
41:10 - database and then here like support for
41:12 - many different names for example for
41:13 - posit a skewer a PostgreSQL or for MySQL
41:17 - so you can run it in a an AWS and easily
41:21 - connect to different other different
41:23 - services or to your API or whatever you
41:26 - actually need it okay and then in the
41:29 - end we have well multi model database
41:33 - for example cosmos DB which is huge
41:37 - database really huge one and what's good
41:41 - about this database is kind of a
41:43 - database which connects all of the
41:46 - concepts of databases so for example it
41:48 - might be in one database you have you
41:50 - may have like a relational database you
41:52 - may have a key value store this bit
41:56 - database may look like a graph or it
41:59 - might be based on some document okay so
42:02 - this is a multi-modal database which
42:04 - means it's upper supports multi models
42:07 - types of databases okay then we have a
42:11 - red arrest API versus graphical so
42:14 - the graph QL which I was talking about
42:15 - many many times in this presentation we
42:19 - are finally here so basically normally I
42:21 - mean normally from because graph kill is
42:26 - kind of new so usually what you do you
42:29 - create a lot of different end points and
42:32 - then you and you expose your date either
42:36 - with different kind of structures for
42:38 - example you may have a the end point
42:40 - which is like your website slash users
42:44 - which will give you of your users for
42:46 - example endpoint like your website slash
42:49 - products which will give all of your
42:51 - products and then a user like front and
42:54 - a developer may ask you for just four
42:57 - for your product so he will get the beta
42:59 - from the end point which was slash
43:01 - products and with correct kill this
43:05 - there is different because this is a
43:07 - credit rank language and and here you
43:09 - have just one endpoint okay so it's
43:12 - super actually user friendly it's super
43:15 - friendly for developers because you
43:17 - don't have to remember all of your web
43:18 - endpoints you will just ask your own it
43:21 - just one endpoint for example slash
43:23 - craft QL and then front-end developer
43:25 - can ask for what data he wants okay so
43:28 - for example here as I said you may have
43:31 - an REST API to two endpoints slash
43:34 - movies flash directors and the rogue fql
43:37 - you basically have one endpoint and
43:40 - front-end developer will ask you will
43:42 - make a query special query for data he
43:46 - or she needs okay and it's super easy to
43:49 - aggregate data from multiple resources
43:52 - and super fast and for example you can
43:56 - use Apollo to develop it and for example
43:59 - if you want to create API with graph
44:03 - kill you it has also support from
44:04 - different back-end languages so for
44:07 - example I was using Django and Python
44:09 - and to create a graphical API and the
44:12 - Django is using the graphing framework
44:15 - which is over here and it was super easy
44:17 - to actually create the graphic you
44:21 - endpoint and a Django and for example
44:24 - many different companies are actually
44:26 - using
44:27 - cool and graph QL for example when I was
44:30 - scraping Instagram I was actually doing
44:33 - requests to Facebook API which is
44:36 - actually run by graph QL and I was
44:39 - actually trying to create my own queries
44:41 - to access to to its data if you go to
44:44 - Facebook for developers then you'll have
44:48 - access to a graphic you'll API and you
44:50 - can actually play around by your own so
44:52 - we are here finally we covered front-end
44:58 - back-end data and in this point when you
45:01 - learn how to create how do you how to
45:06 - use those free you become a full stack
45:09 - developer and the full stack developers
45:11 - are able to create whole products from
45:14 - scratch till the end
45:16 - okay and they are earning a lot of money
45:19 - for sure six figures so let me cover
45:23 - some popular web development web
45:26 - developer stacks which are used by
45:29 - different stock of developers because
45:32 - you for sure thinking when you've had a
45:35 - lot of those different frameworks for
45:37 - front-end for then for back and then you
45:39 - had at different data bases then you
45:41 - were for sure thinking how can I combine
45:43 - them together how can I pick my own
45:46 - stack and how can I go to the work with
45:50 - proper stack okay so yeah I provided
45:52 - them for you so the old-school stack is
45:54 - for example lamp which is ability to use
45:57 - a Linux Apache MySQL and PHP then with
46:01 - the mean stack which means which says
46:03 - for MongoDB Express Jas as you remember
46:06 - angularjs and node.js this is the joke
46:10 - stack then you have Java spring it's the
46:13 - light weight stack learn which is super
46:16 - popular and nowadays it's MongoDB
46:18 - Express react and nodejs and then from
46:21 - less popular for example you have just
46:22 - rub you on Rails and even or whatever
46:26 - how to spell it
46:27 - it's the same as here but instead you're
46:32 - using the view Jas okay so with this
46:36 - kind of stacks you are able to get a
46:38 - super highly paid
46:40 - and a popular companies and now we have
46:43 - the end element which is DevOps so we
46:47 - can actually become Jassa DevOps but
46:49 - first of all I would suggest still to
46:50 - learn all of the technologies which I
46:52 - mentioned before or you can learn DevOps
46:56 - skills and then you're actually able to
46:59 - first create the whole product from
47:02 - scratch from zero like design it code it
47:05 - create backing for it connect front-end
47:08 - and back-end together operate on a data
47:10 - from the data base connect data base to
47:12 - the backend and in the end you can
47:16 - deploy everything but much more so
47:19 - basically yeah what EV UPS do they first
47:24 - of all like how to become a DevOps so
47:27 - first of all you have to become Linux
47:29 - master I would say you should be really
47:32 - familiar with SSH which I which we
47:34 - mentioned before command line some bar
47:37 - script so you are able to create bar
47:39 - scripts and automate some processes for
47:43 - example you can create bar scripts uses
47:45 - deploying your app which is installing
47:48 - the virtual environment running the
47:50 - automated test and much more so you
47:52 - really want to learn how to use Linux
47:55 - servers all right then you should know
47:58 - what's a proxy server web server so for
48:01 - example nginx is one of the examples or
48:04 - we also mentioned before the apart but
48:07 - nginx is super powerful and super
48:09 - popular right now and actually easy to
48:11 - use so what's the proxy server such as
48:14 - an engineer's at us so basically it's a
48:17 - gateway between your application and the
48:20 - Internet okay so it's in the middle so
48:22 - it will help you for a privacy of the
48:25 - security hackers may be much more harder
48:29 - to actually hack to your server so
48:32 - you'll be secure and also makes you a
48:34 - web server so for example you can deploy
48:38 - your Jenko app and run it through the
48:41 - nginx and then if you want to become a
48:44 - DevOps you have to learn actually how to
48:46 - deploy your apps on a server so for this
48:48 - you can use AWS which is actually hard
48:51 - but super super great skill to
48:54 - to learn Heroku which is super easy in
48:56 - Heroku actually it's Heroku is great to
48:58 - start because it allows you to actually
49:01 - deploy your apps for free and without
49:03 - knowing anything what's behind deploying
49:07 - the apps you just run Heroku create
49:08 - heroic who push her ah cran whatever
49:11 - some comments like this and your apps
49:12 - it's it's stored in a public alright
49:15 - then you have a show or Google apps
49:17 - which are very similar services to AWS
49:19 - but on AWS let's just stop here for a
49:22 - second you have like multiple services
49:25 - right but for example when it comes to
49:27 - real hosting you just need to for
49:30 - example on how to use AWS ec2 which is a
49:35 - normal instance of the Linux machine
49:36 - with memory and stuff like this so it
49:38 - basically is some kind of let's say
49:41 - raspberry pi start in the cloud ok or
49:44 - you can learn how to actually use docker
49:47 - containers how to docker eyes your
49:48 - application and then deploy it on a 8
49:52 - AWS ECS service ok so there are multiple
49:55 - services and if you want to become a
49:57 - real DevOps you should get familiar with
49:59 - with a lot of them alright then as I
50:02 - mentioned there are docker services
50:03 - there's a docker containers which means
50:05 - you will authorize your application so
50:08 - back in times people are using a lot a
50:09 - lot of virtual machines now people are
50:13 - using Dockers which are actually much
50:15 - faster and they are really light what
50:18 - does it mean for your apps so basically
50:21 - if you if you have docker environment
50:25 - and if you want to make some changes to
50:28 - some huge project to your app you can
50:31 - actually download the doc and doc docker
50:34 - image create a container or your own
50:37 - computer and run the whole app ok so
50:39 - everything the whole setup of the
50:42 - application will will be done by its own
50:45 - because of that docker file or docker
50:49 - compose so you don't have to worry about
50:51 - it so for example if there's like a huge
50:53 - project created about many many
50:55 - different developers and the
50:57 - infrastructure is really huge because
50:59 - they are like for example connection to
51:00 - some api's to some different clouds to
51:03 - some different databases there's front
51:05 - unders back-end
51:06 - and docker everything goes by its own
51:09 - actually right so in dokkan Cordell
51:11 - containers you have also each service
51:13 - stirred in different container and it's
51:16 - super easy to make a connections between
51:18 - those stalkers and deploy everything
51:21 - okay and then in the end we have
51:23 - automated testing see why CD which
51:26 - stands for continuous integration
51:27 - continuous deployment so you want to get
51:31 - familiar also with those terms because
51:35 - with them
51:35 - you are pretty you're making sure that
51:39 - your app won't crash so what does it
51:42 - mean if you create a lot of different
51:44 - tests and if you automate them whenever
51:47 - you make new changes for example in your
51:49 - git repository when you create a new
51:52 - feature some for example some new field
51:54 - to users and you go into marriage to the
51:57 - master and then publish it deploy it you
52:02 - want to also run tests to make sure that
52:05 - everything goes without any problems
52:08 - right so normally you do it as I
52:11 - mentioned those steps manually but with
52:13 - cyc they see ICD and automated tests
52:17 - everything is automatic alright so
52:19 - basically what what is going to happen
52:21 - is you will run some pipeline which is
52:25 - going to check your mesh requests and if
52:29 - this is green if also other developers
52:31 - will make a code review for your batch
52:34 - request then you are able to merge your
52:37 - code to the master and it will
52:39 - automatically deploy the current version
52:42 - of your app on a server and also it will
52:46 - be covered by your tests so you'll be
52:47 - pretty sure that your app won't crash
52:50 - alright so that was the end step of the
52:53 - whole journey of the becoming a web
52:55 - developer or even more because with this
52:58 - knowledge you can literally create your
53:00 - new startups your new companies okay and
53:03 - in the summary we can go very quickly
53:06 - through all of the points which we
53:08 - talked about so yeah as we mentioned we
53:11 - can be you can become front-end or you
53:13 - can become back-end developer or you can
53:17 - combine those forces together and then
53:19 - become
53:20 - like a developer and then you have also
53:23 - the DevOps path and basically those two
53:26 - I would say comes together because
53:29 - whenever you become in full-stack
53:31 - developer in one point you really want
53:33 - to deploy your application you want to
53:35 - put them life you want to share them
53:36 - with other users
53:38 - show them your friends so you'll and
53:40 - some point to learn those DevOps skills
53:42 - but yeah as I mentioned you can also
53:45 - become just a professional develops and
53:47 - maintain all of the code created by
53:49 - other developers deploy it fix some
53:52 - features check just making sure that
53:57 - everything works smoothly so those are
54:00 - all of the paths and all of the
54:02 - technologies you can pick in 2020 and
54:04 - now I will go back to Cassie you get the
54:07 - front-end back-end skills on the DevOps
54:09 - skills now you're really a solid solid
54:11 - solid developer and you're very valuable
54:15 - in the job market now look all of these
54:19 - skills that we've talked about if you
54:21 - want to be able to develop these skills
54:22 - from scratch even if you're a complete
54:24 - beginner and you want to then learn how
54:26 - to master it you want to go deep into
54:28 - like the front-end skills and the
54:30 - backend skills and build applications we
54:33 - do that in this profit JavaScript course
54:35 - if you want to learn how to then host
54:38 - your apps online using back-end tools
54:41 - like nodejs we do that in profit of a
54:44 - javascript course if you want to learn
54:47 - how do you make a blog app or a Twitter
54:50 - app or a Google Maps app we do that in
54:55 - this course and if you want to learn
54:57 - advanced skills like wire framing how do
55:00 - you wire frame a project how do you road
55:02 - map a project before you do it we do
55:04 - that in profit with JavaScript and of
55:06 - course if you don't learn how to make
55:07 - money from coding how do you actually
55:09 - get clients how do you get freelance
55:12 - work or how do you get a full-time job
55:14 - as a developer we do that in this course
55:17 - profit with JavaScript so at this point
55:19 - what I highly recommend is if you got
55:21 - value out of watching this video and you
55:24 - now actually want to deep dive and turn
55:26 - this into a real career and you want to
55:27 - become either a front-end back-end or a
55:30 - full stack developer I would highly
55:32 - recommend that you
55:34 - the link in the description below or go
55:37 - to clever programmer comm slash
55:39 - JavaScript and consider joining this
55:42 - program this program will absolutely
55:44 - blow your mind some people have said
55:47 - that this is worth more than a coding
55:50 - boot camp that that took which they pay
55:51 - ten thousand dollars for and it's not
55:54 - ten thousand dollars it's way way way
55:56 - less instead a fraction of a price plus
55:58 - you will get tons of community support
56:00 - guys and you will get weekly coaching
56:04 - calls group coaching calls and we have
56:08 - you know a lot of support there so it's
56:10 - really like think of it in an online
56:12 - coding boot camp but for a fraction of a
56:15 - price so thanks so much guys much love
56:19 - thank you for watching and as always
56:21 - I'll see you guys in the next video so
56:25 - you want to become a JavaScript
56:26 - developer here's a list of things one I
56:28 - just drop the best JavaScript course on
56:30 - the planet that's it wait for you let me
56:34 - explain Who am I I'm Rafi cause II done
56:36 - a few things about making six figures as
56:38 - a freelance developer at 21 years old
56:40 - spent a billion dollars in revenue at 25
56:42 - traveled overall time hundreds of
56:43 - thousands of students to code and read
56:45 - programming courses are ranked number
56:46 - one on YouTube so what's in this
56:48 - javascript course listen up they're
56:50 - gonna be learning the basics of
56:51 - JavaScript you're gonna be learning
56:52 - advanced object-oriented programming Dom
56:54 - get a Visual Studio code command line
56:56 - version control a JSON API es6 but I
57:00 - know you ain't here for that buddy
57:02 - blackjack Twitter clone Google Maps
57:05 - project 5700 Opera project 50 modules 30
57:09 - hours of video content data science
57:11 - visualization Modern Portfolio how to
57:13 - get a job at Bank
57:14 - Oh JavaScript and we're gonna build an
57:16 - Iron Man suit wait what
57:20 - sweat sock results one Rob freelancer
57:24 - not traveling with his kids to a free
57:26 - save their company $20,000 three nazar
57:29 - landed 110 thousand dollar contract
57:31 - results yeah we got results we got a 30
57:34 - day money back guarantee you joined the
57:36 - course you don't like it on the 29th day
57:38 - 23rd hour and 59th minute you can return
57:41 - it no questions asked alright so we both
57:44 - know coding is hard I mean you can see
57:46 - me staring out the window here
57:47 - scratching my head but anyways if you
57:49 - want to make a profit as a JavaScript
57:51 - developer like so many others have look
57:54 - I know how to get there so please give
57:56 - me the privilege to mentor you it's time
57:58 - for you to profit with JavaScript
58:01 - [Music]
58:04 - they got presents or parents or parents
58:06 - or parents or parents and planners I saw
58:07 - by my brother the money depressor we
58:09 - call it my blessings I felt like I'm
58:11 - pulling the birdie is back tell me i'm
58:12 - thomas i'm full of deciding that's why i
58:14 - call it
58:15 - bone impression you saw that I wanted
58:16 - the for win affection as something in
58:18 - public checkup eleazar eleazar eleazar
58:20 - eleazar eleazar eleazar so for my run to
58:22 - the money

Cleaned transcript:

yo what's up my beautiful people so in this video we're gonna talk about the web development roadmap in 2020 how can you become a web developer the instructors for this video will be me Kazi and of course we're gonna also have Jacob so it's gonna be Jacob and me and Jacob is not part of clever programmer so you guys are gonna get to see his beautiful face a lot more on the channel along with Nod we're gonna have a lot of new content traders on this awesome so let's just jump right into the meat and potatoes of this pack here's what we're gonna be covering in this how much earning potential you have if you become a web developer even in this time of crisis right either you can see this is time of crisis with this whole coronavirus situation going on or you could see it as an opportunity we're gonna cover the popular web dev stacks and top tier companies like Facebook uber Airbnb and Pinterest this is something cool that Jacob and I work on because nobody in there web developer videos actually talks about the text acts these biggest companies are using so we're gonna actually provide you a breakdown of the text ax and then no matter really which route you want to take you want to become a frontend developer a backend developer or a full stack developer this video has you covered as well as how you can actually make an income from it so you get to choose your path okay front end back and full stack so think of yourself as one of those like video game characters where you get to choose you know choose your own adventure and then the examples of learning pads we're gonna provide you with them as well that show you how you can become a successful web developer in 2020 now before I continue I do want to let you know that everything that we'll be covering in here and then some is covered in our course called profit with JavaScript it's an awesome JavaScript training program it's 15 weeks long and it takes you from complete beginner to mastery and the goal really with this program is to help you make a 5k a month or more as a developer I notice a very ambitious goal but we have a lot of community support around this product and you also have weekly live training so you get four monthly life training calls with Nas who's an instructor for this program and then just the overall programmers awesome if you just click the link in the description below you'll get to see what I'm talking about with that said let's jump right into this at this point I'm gonna let Jacob take it over and let you know what is the opportunity to become a web developer in 2020 and beyond so how it's going Jacob here so let me take over from here thanks Cassie why should you become a web developer here the facts guys so as you can see her especially in 2020 I mean the trend is going high all right it's going up from 2014 to their predictions that will be twenty seven percent growth and a web development profession okay so yeah it's the growth is much faster than an average occupation and the amount is also growing in popularity so as I said here are the facts mmm and let's go Father so why should we become web developer let's continue with those facts so I specially put those numbers here I mean I especially put the web developers salaries in San Francisco and in New York City because I wanted to mention that being a web developer means that you can actually work from all around the world all right so you don't have to be in an office you can be you can work from home from Poland from Ukraine from anywhere in India as I said this work is mostly remote especially right now during the coronavirus everyone see that it's possible to work remotely that you don't have to be in office so what I wanted to mention is imagine if you land a client from San Francisco okay you're literally able to make six figures and here also the job offers from different companies not only from web from Google right so those are like different companies at the other way a rather than 900 to 500 and being the web developer means that you can actually create templates or products and sell them online okay so basically here let's take this guy he is selling one template for $60 and as you can see here he made almost 600,000 sales so let's open the calculator calculator for a second all right here let's put 60 dollars 10 600,000 and I will just leave those numbers here right this is crazy guys okay so it's all about marketing yourself in this case because you can create a theme and put it on github for free and then you grow awareness for your brand and in one point you can actually start selling those templates to people and they will literally will pay you because not everyone likes to design for example me I hate so I would rather buy it and create a bucket for it okay but yeah let's go further on the right as you can see here those are the works from app work so you can basically go to app work and say that you and post your job offer and charge for example 80 65 euros sorry dollars per hour okay or even hundred or the third way is to actually sell real businesses so for example here there's a website be trendy which is making 7k average in revenue a month okay and they are selling it they are asking the price for $10,000 okay so this is the first guy at first case but there's another one the other website and they are selling it for more than $200,000 so those are possibilities those free if you want to work as a freelancer or create templates or whole startups and sell them all right okay here are another facts I mentioned startups okay but by the real startups I mean real startups so here's the list from the top startups from the last year you probably can know those names for example duolingo I don't know about you but I was using it I mean I'm still using it to learn German and on my phone and it's super easy to make I mean if I think about it it's possible to create this kind of app just by your own okay simple to give v2 freelancers I mean those platforms are the platforms which you are able to create your by your own and at least start doing by your own then hire other people to to grow it right as a company but all of those things are possible when you become a web developer when you become like for example full stack developer so you know how to create frontend how to design how to create a backend operator with databases and also how to deploy your app so this is basically like full step right you can you can do everything and we'll be talking about it and our presentation as well all right here are another fact so basically as you can see here I'm photos of me from my Instagram and also from my friend from Instagram he's actually web developer he's travelling the world he he's doing freelance he has got like huge amount of different clients and he can literally work next to the beach alright so it's super great with this with being a web developer have actually freedom to our six features six figures and yeah you don't need a degree and you can work everywhere so this is the case which I told you about you can get the client from New York from a San Francisco which are willing to pay you a lot and you can work next to the beach okay let me talk about popular sects and top companies so basically for now you may probably not be able to recognize those names but and this presentation will cover almost everything from here so now let's just skim through it very very quickly so web server this engine apart this is kind of the technology which is responsible for your web server for all of the requests security stuff like this then you have databases so this is how you actually manage your data for example MySQL PostgreSQL those are like rational databases then we have MongoDB as I said we'll be talking about all of them there you have serverside framework which is no js' and programming languages which are super popular and uber company okay for example take a look at Facebook they are using graph QL which we'll be talking about mmm also they are using their own custom server which is super cool okay then we have another popular stock like Airbnb print dress for example and print rest they are using a Jenga which is my favorite framework and here in a clever programmer we made a lot of different courses about them so about it so you can learn it by watching our movies and as I said we will be talking about everything for example Amazon earlier RDS it's a database it's a service from AWS cloud ok which is having for example a database somewhere in a cloud and it's super easy to connect it to different services for also from AWS ok but as I said if you don't know it what I'm talking about yet it's ok I just wanted to put them here so you can have a glass and see whatever I'm talking about and then when we go through the presentation everything will get clearer to you alright so how to become at web developer 2020 here's the list of facts okay first of all you you should define whoever you want to be because as I mentioned a couple of times before you can be frontend right you can be just a frontend or even just a designer you can create just the layouts and sell it but I would say it's better maybe if you don't like to just design if you rather want to code you can become a frontend there are some framework for this for example react.js which we talking about or you can be just a backend developer so for example me I was full time backend developer for almost one year when I dropped out from my first University and I was actually developing backend API sin a Jenga framework and I learned learn a lot about that also I was using Posterous SQL or if you want you can be called a full stack so currently I'm learning a lot of frontend technologies I mean I just started learning the future yes the framework for frontend which we talking about in the next slides and yeah this is my golf now become a fullstack developer so I would be able to create whole products from scratch and here's the list of things by the chillout guys will go through all of those things simply in this presentation but I just wanted to mention that all of them you'll literally learn by doing so you don't have to like start from them okay so you can for example learn HTML CSS JavaScript and then as you will be developing your first websites you will be you will start learning about kit version as well okay so if you want to store you if you want to have access to history of your code then you will learn how what is it it version controls so I can back to the code which I created like two days ago okay then you go through basic terminal users so for example you create some server and an ojs you'll start your server and there will be you'll be able to actually see your website running in a browser okay then you of course really like some like design which is optional because you can download some templates and just mess around with it or you can for example use software as a figma or Adobe XD and design your stuff from scratch then you'll see what is get hub which is good version control but in a cloud alright so you can share your projects or you can become or you can create opensource projects which are free so which are free projects which you can collaborate with developers all around the world then you have SSH HTTP HTTP and API sand design patterns as again we will be talking about them so no worries and here's CAHSEE all right great thanks Jacob for letting me take the stand once again so guys in terms of code editor just pick one there are all these wars on which one is the best it doesn't matter pick an editor and get the freaking coding okay Visual Studio code is my favorite I also like atom and sublime but nowadays Visual Studio code is my choice I highly recommend it just get that forget about everything else okay Visual Studio code allows you to have install packages and they're very easily it has them integration if you want it it's the most beautiful it's the most userfriendly and it's just awesome it has a lot of its completely free so that's what I recommend now frontend development in three words to make it extremely simplified is HTML CSS and JavaScript alright so here's an example of what hTML does so HTML doesn't make you make a website that looks very pretty but unless you make a basic website so you know those websites with a lot of those boring professors they'll like put up their curriculum for CS 120 or whatever right oldschool websites that's what you can make with it's just pure HTML so here's an example of code on the lefthand side along with what that actually looks like on the righthand side here's an example of what CSS would do so CSS then starts to make things more beautiful I mean I know it doesn't look very beautiful but just think about the fact that there's different colors here and there's a background here which wasn't there in just pure HTML so here is an example of the code on the left hand side and then on the right hand side you have an example of what that actually makes it look like any when it comes to CSS of course there's a lot for you to learn so there's the basics you got to learn the syntax the color the list the tables and then there box models and of course then it gets very complex with things like flexbox and all the other things i mean you can get pretty damn advanced in CSS and animations and things of that nature and then of course you got to learn JavaScript so here's just an example illustration of JavaScript if you want to add in fancier things or interactivity to your website for that you're gonna need JavaScript and there's no other way around that and to learn JavaScript this is your basic path of how you would learn it okay so there's the vanilla JavaScript you're just learning the basics so syntax datatypes functions objects loops and then you get on to I'm gonna use the pointer and then you get on to the Dom and Dom is really where you can manipulate what's actually happening on a website so here you have things like animations events listeners you have of course Ajax and JSON and so this is where you're learning how to actually like make requests how do you use API is how to actually read a JSON file what are promises all those types of things a lot of things that have to deal with a synchronicity you will be having to learn because that's super super important and then of course modern JavaScript so es6 and what that means next up you probably want to learn some popular libraries and a lot of people have very controversial views people are like forget about libraries everything vanilla Jas I'm not so hardcore I say that you should I recommend you learn popular libraries and the reason why I say that is because if you learn this stuff it makes your life so damn easy when it actually comes to building a project or building an app because using a library you can easily write a few lines of code and that allows you to actually make something look beautiful without you having to build everything from scratch so I personally love materialized a lot and of course bootstrap 4 is you know what pretty much everybody gets to learn so yeah when it comes to like adding a button that looks really nice having I'm not that interested in having to learn how to design that all from scratch so I'll just use a library that allows me to make things look awesome and very very quickly here's an example of what bootstrap 4 would do right so if you write these three lines of code right here that we have available for you it's gonna put make these buttons so you see these buttons come already nicely rounded corners they look good the Texas centered and none of this code you actually have to code up from scratch you just got to use the bootstrap library so that's why these libraries are good to actually learn and on the left hand side you can see an example of a messenger tool somebody made that's responsive a bootstrap application and so this is built with bootstrap and it looks beautiful that's a real world example next up you want to learn about responsive layouts so here on the complete left hand side is what a non responsive layout looks like this looks terrible right now what you want to do is you want to learn how to make it look responsive so here it looks beautiful so these are all the things like how do you actually set a viewport how do you actually set the max width property what do you do in media queries and on and on you go so responsive layout as a whole world of its own in CSS you will also learn about flexbox that allows you to make things really responsive really fast you know if a thing looks like in a certain way on a main website on a desktop how would it then respond how would then then look on a smaller screen like a mobile device an iPhone an Android so learning the skills of responsive layouts is huge next let's talk about dev tools so here is an example of chrome dev tools and chrome dev tools allow you to really dig deep into a page and like be able to debug it be able to change it on the fly at different color sit on the fly check the styling fix any problems look at what's going on through the network tab or the performance tab you can also do console logging so you can like write code in there and check it so this is one of the most important tools as a developer you have to learn and here's an example right so on the right hand side you can actually see that we're hovering over this histogram average bar with the height of 100% so it's probably this histogram you know one of these histogram bars right over here maybe even this big one okay so this is what you can do with dev tools and in a lot but this is something you have to absolutely learn so if you're watching this video right now what I recommend is you take notes and write this down and even go back and take notes of things if you didn't because this will allow you to actually created stepbystep path to becoming a fullstack developer or a frontend developer a backend developer because we're stepbystep laying out all the tools and all the technologies that you need to learn with coding to actually be able to get these skills so then you can actually get a job or become highly valuable in the job market next up is you gotta master the command line there's no other way around it so whenever we think of the word command line we imagine a hacker on a you know freakin black screen with the green text and you're writing stuff and that's honestly what it's kind of like most people want to run away from command line because seems intimidating there's not a amazing GUI there and it can be confusing but you have to learn this a lot of bad developers that I see try to skip this and then they lack really fundamental skills and they can never learn them later maybe then they can't learn how to host websites online or they can't learn how to like problemsolve or like really debug things accurately because they have no power over the command line and they're very helpless so this is one of those areas you just have to master and if you're like me you'll kind of learn to love it after you know getting used to this after command lines I highly recommend you learn algorithms so you can go and learn algorithms and practice them on different websites like lead code or hacker rank and algorithms are really they give you the problemsolving skills right so algorithms help you become a great problem solver and remember problemsolving skills will make you a better developer and help you get a software developer job so a lot of the interviews to come down to like whiteboarding a solution or them asking you to solve some kind of challenge or problems you don't want to just be a developer that can make things look pretty you want to be a developer that can actually solve real world problems and when people pose them you should be able to like come up with some kind of solution and algorithms are really what are the things that are gonna like make you a great developer we can add features to an app or like debug and see what's going on with somebody's code and yeah like this is for me I don't think there's any substitute for this this is something that's very fundamental that you should spend quite a bit of time learning I would imagine you should spend at least 50 to a hundred hours just in algorithms alone solving challenges if not more and you should do this consistently and become better this will just make you a better developer and everything that you can do you'll be able to do it better when you actually learn how to solve problems and make things actually really effective next up you should learn how to SSH so this is basically the ability that allows you to log into someone else's computer and you were on the planet so and this is a popular networking concept that every web developer should know and why this is also useful is later when you want to learn how to host your web apps online a lot of the times you're going to learn how to SSH into you know tools like docker or AWS or even sometimes Heroku so SSH is something that you should put on your list of things to learn on your path and the next up you should learn how to deploy your static websites so these are not your dynamic web apps but your basic static website so what does that mean you know if you make a portfolio website you should learn how to host that up online and you can use tools like github pages or net liffe I to actually be able to host them and then you have you have to also know about a few different things like domain registration static hosting SSL Certificates and FTP and yeah like you can use services like Namecheap to get a domain or Google domains to get a domain and SSL really is like you know for example if you go to a website and you see something as HTTP and not HTTPS right HTTPS is like secure an HTTP might not be that secure and if you go on websites on Chrome or Safari even on the top lefthand side sometimes you'll see that icon that says secure or not secure and SSL allows you to do that so these are really the skills you should be learning at this point so if you make a basic website with HTML CSS and JavaScript using bootstrap and all these different things you now want to be able to host that online you want to be able to people should be able to go to like you know Jake portfolio calm and be able to see your portfolio next up one of the most confusing things that for most developers it is to learn but absolutely fundamental it makes you a beast in my opinion if you learn it it's so freaking valuable it's learning get version control now a lot of people will confuse get with github how I think of version control is it's time machine okay so if you look at this graph here if you look at this chart here or this image if you've never used git this will make zero sense to you this will make no sense but how I can describe this to you is forget about that image and just think about a time machine and what that allows you to do is if you're building an application let's say you built version 3 and then when you go onto version 4 and now everything breaks this time machine allows you to go back to version 3 or version 3.5 or version 2 when things were back to normal so you know this is version 3 it's it's almost like a video game right a memory card if you want to think about you can you can save it allows you to basically make save saves on your project and then you can go back in time by just typing in like one line it allows you to go back in time at any point and generally when you're doing get how I do them is every time I make a new feature I make a new get commit with that so for example say you built an app and this is version 1 and it's just local on your computer ok so this is where I'm hovering over then let's say the next thing you did on that app was this commit which now added the feature of making your app go online so the second thing you added then the third thing you added was this app can now allow people to log into the app then this fourth thing you added maybe it allows people to make a post on your app right now something breaks or you want to remove a feature and go back you can just go hit go back to when I just added the feature to log in for people or user authentication so boom you can just like remove a feature and go back fast and now if you want to go forward you can do that just as well so really really magnificent tool extremely powerful the only way you can learn it is if you know command line I mean there's some GUI tools of it but I recommend you learn the command line and then learn how to use git this is super valuable most people confuse it with github and github I want you to think of it like Dropbox or a Google Drive for just putting your code all right so really github is just like a place where you generally host your code or you put your code but get is actually the version control tool these are the different hosting services I recommend github I mean I used bitbucket too but yeah so I would recommend just github if you want to just pick one stick with github and you're good to go but these are some different hosting services just so you have a full view of it and then guys with frameworks now there are a lot of frontend frameworks so we're gonna now dive deep into a lot of details on frontend backend and all that stuff and frameworks are they're a very powerful tool in the development of modern web and mobile applications so you can kind of see this breakdown here but at this point I'm gonna give it over to my friend Jacob to help walk you through all of these details and then I'll meet you guys at the end all right let me talk about top free frontend frameworks right now so as you could see the slide before radius was on the first place then we had the view jeaious and ocular JS but it wasn't always like that and yeah let me talk about pros and cons on all of them and let me go so let's start with the via with the view J S which which is the youngest of all three basically VJ s was created just by one person but people started to liking it all right so right now it has a huge community it has huge amount of stars on github and it's one of the actually it's the easiest framework for all of them to start learning and this is also what which I choose to start with my front end journey I mean the full sake I decided to pick the view J yes so basically it's a component based and visual Dom which makes it very fast so what does it mean component based it's created by components like all of them are created by components so basically you create your app from kind of the blocks all right so you create one block and you can reuse it multiple times so you you can't you don't have to you don't have to copy and paste your code multiple times in a code so view is the easiest to start it has simple simple syntax it's super beginner friendly as I mentioned the community is growing from year to year but one of the cons is actually that it's not the best for complex projects okay so if you decide to create a light project it's great and also this framework is the lightest of actually it doesn't have that much size as angularjs or react is it's it's super super light and popular companies which are using this framework are for example gitlab Alibaba Shami 9gag and also the one of the concepts that it's not maintained by one of the popular companies right like Google or Facebook when it comes to to this but it's not a problem because it has great coming then he'll jump to the angularjs which is outs is super hard to learn all right so is the hardest to learn mmm it's it come from angular and the biggest in the beginner is with angular and now we've also angularjs it's created by Google developers and unlike react it has a twoway databinding okay it's also componentbased framework it is super strong community it's actually simple for one page apps I mean it's the hardest to learn but to create a single app it's it's it's it's okay and actually also gue very good for a huge projects okay so for example banks are using this this framework okay okay so as I said yeah also Google it so from popular companies Google use this Xbox BMW it also has Model View controller architecture okay and then we have the react.js which is number one in popularity a lot of people actually starts with react it's not that easy as future yes but it's also user friendly react has a lot of different tutorials huge community it's maintained by a Facebook so basically the funny story it was created by one of the Facebook developers a Jordan walkie he created because Facebook was growing so fast its network was growing so fast that they needed something to manage that and react is actually is perfect to do that okay mmm and it's used also not only by Facebook but for it's used by Netflix New York Times Yahoo uber PayPal as we as we seen in the beginning okay now let me talk about the state management so basically there are frameworks for frameworks so for top three of our frameworks for react view AJ for view and Fuhrer angular we have Redux for react or we can also use rear hooves and context API there's both they are working the same as the Redux are almost the same as I was reading the different as I was reading different articles online for view we have eugenics which I'm currently learning and also for angular we have ng air X okay and now let me talk to you what is actually state management so basically and you have like a larger apps and if you want to share your application with multiple components it's much easier to do that and you don't have to for example ask API multiple times from different places for a data you can do it once and then you can just pass it through different components alright because of the statement module so normally we've outside management for example if you J X when you create components under components you have a tree structures ok and let's say that only one branch here wait can you see me yet only one brother here you have a data and you want to pass it here all right so in order to do that you'd have to clamp to the root and then pass it down and with the same announcement you're actually able to do that without it ok it also provides some features such as zero config time travel and it's super easy to debug application with the state management such as view JX ok all right let me talk right now about static site generators and mostly how talk about the Gatsby which is run by with react GS it's actually super cool to use static site generators in 2020 because first of all they are super fast so basically everything which is running our static web sites which means it's generated HTML CSS J's so you don't have to run everything on a server which means it's also super secure because whenever someone hacks your web sites they won't be done like any serious damage right there for example hacker won't get your data won't get your credit cards ok they have great CEO which means they'll be it will be ranked very high on a Google static web sites also means that they yeah they will be they'll be static but also it doesn't mean I won't be there now dynamic ok they will be dynamic and they will have integration with api's and stuff like this for example the more that one of the most popular websites which is run created and gatsby JSS react react JS dot org the react main website but i also also saw some online stores and stuff like that so basically created by no js' on your computer so first of all you run the nodejs and it generates all of the content for a cat's bjs and then use surf every which is surf are in the static websites okay the Gatsby J is also use query language craft QL which we'll be talking about in the next slides and what's cool about that cats bjs is that you can get data from anywhere also so we can use some database you can use some other API s it's super nice and you can create your coat with the react and CSS and in the end as I said no J's will generate all of the static files and upload upload them on a server okay and also super cool is that it has a create community it has a great support it's super easy to learn by just reading a documentation and as tons of different plugins which you can use ok and also it's free so yeah it's a winwin situation for all of us so I would suggest you learn how to create static how to use static site generators alright let's talk about Arkin development so first we are talking about frontend development alright so after you learn everything which I covered before you are able to actually apply to all of the frontend developer positions and become the real really good one from the developer right if you know all of the basics and advanced topics on HTML CSS JavaScript and you know how to use frameworks you're able to get this 8090 even 100k job or you are able to work as a freelancer do much much more okay so now let's focus on the backend development which I'm actually good in because that was my job position for over one year so here are the languages we can which you can use for it okay elixir scholar has Cal Java Python Ruby PHP nodejs and dortmund alright would you use what is super cool about node.js it's run by a JavaScript so it's basically so basically you can kill two birds with son because once you learn JavaScript it will be also super easy for you to learn node.js and now let's talk about best back end back in frameworks so first for Haskell let me just get a pointer is yes what I do I'm not sure if I'm pronouncing good then for Java we have spring which I try to work for awhile but I didn't really like Java so I very quickly actually jumped to the Django which is my favorite back end framework or flask which is I would say flask is for light application Django is for more complex application for a huge business solution so for example Instagram is run by a Django framer ok and Django is also cool because you can create a full stack application ok and generate HTML files in it as well but also you can create their API so REST API so if you install Django rest framework then you have for PHP laravel which is super super popular right now so I even made like I even asked in my post on Instagram what back in framers people are using and a lover was actually one of the most popular one and then you have no js' so there's a express there's a framework called Express which you can learn and Fogo you can learn a rebel so whenever you create a backend for your application you mostly want to play with your data you mostly want to actually manage your data create the API different a endpoints for it to get so user can have access to it alright so for this you need a database so here's the list of different types of databases which would be going through let me give my pointer ok so first of all we have relational databases ok what does it mean is you'll have like different columns different tables and they will have some kind of relation like key key relation like many too many onetoone onetomany those are the relation usually have in a relational database and for this you can use PostgreSQL or my skew which are highly supporter supported for example by a jingo I was you working all who've poor scores SQL a and it's super easy also to learn it then you have no SQL database so for example you can have a key value store for example ready or dynamo DB dynamo DB is one of the AWS services also so you can also use it there which is super secure and super fast or you can have document base database which is DB again this is no SQL database there are no relations like in those two and a mana gonna be actually and when you look at this it looks like a JSON document okay so Jason which stands for a JavaScript object notation okay then we have a cloud database for example Amazon RDS or firebase so whenever we for example choose Amazon RDS which which stands for relational data relational database services you are you can create actually a database stored in the cloud the relational database and then here like support for many different names for example for posit a skewer a PostgreSQL or for MySQL so you can run it in a an AWS and easily connect to different other different services or to your API or whatever you actually need it okay and then in the end we have well multi model database for example cosmos DB which is huge database really huge one and what's good about this database is kind of a database which connects all of the concepts of databases so for example it might be in one database you have you may have like a relational database you may have a key value store this bit database may look like a graph or it might be based on some document okay so this is a multimodal database which means it's upper supports multi models types of databases okay then we have a red arrest API versus graphical so the graph QL which I was talking about many many times in this presentation we are finally here so basically normally I mean normally from because graph kill is kind of new so usually what you do you create a lot of different end points and then you and you expose your date either with different kind of structures for example you may have a the end point which is like your website slash users which will give you of your users for example endpoint like your website slash products which will give all of your products and then a user like front and a developer may ask you for just four for your product so he will get the beta from the end point which was slash products and with correct kill this there is different because this is a credit rank language and and here you have just one endpoint okay so it's super actually user friendly it's super friendly for developers because you don't have to remember all of your web endpoints you will just ask your own it just one endpoint for example slash craft QL and then frontend developer can ask for what data he wants okay so for example here as I said you may have an REST API to two endpoints slash movies flash directors and the rogue fql you basically have one endpoint and frontend developer will ask you will make a query special query for data he or she needs okay and it's super easy to aggregate data from multiple resources and super fast and for example you can use Apollo to develop it and for example if you want to create API with graph kill you it has also support from different backend languages so for example I was using Django and Python and to create a graphical API and the Django is using the graphing framework which is over here and it was super easy to actually create the graphic you endpoint and a Django and for example many different companies are actually using cool and graph QL for example when I was scraping Instagram I was actually doing requests to Facebook API which is actually run by graph QL and I was actually trying to create my own queries to access to to its data if you go to Facebook for developers then you'll have access to a graphic you'll API and you can actually play around by your own so we are here finally we covered frontend backend data and in this point when you learn how to create how do you how to use those free you become a full stack developer and the full stack developers are able to create whole products from scratch till the end okay and they are earning a lot of money for sure six figures so let me cover some popular web development web developer stacks which are used by different stock of developers because you for sure thinking when you've had a lot of those different frameworks for frontend for then for back and then you had at different data bases then you were for sure thinking how can I combine them together how can I pick my own stack and how can I go to the work with proper stack okay so yeah I provided them for you so the oldschool stack is for example lamp which is ability to use a Linux Apache MySQL and PHP then with the mean stack which means which says for MongoDB Express Jas as you remember angularjs and node.js this is the joke stack then you have Java spring it's the light weight stack learn which is super popular and nowadays it's MongoDB Express react and nodejs and then from less popular for example you have just rub you on Rails and even or whatever how to spell it it's the same as here but instead you're using the view Jas okay so with this kind of stacks you are able to get a super highly paid and a popular companies and now we have the end element which is DevOps so we can actually become Jassa DevOps but first of all I would suggest still to learn all of the technologies which I mentioned before or you can learn DevOps skills and then you're actually able to first create the whole product from scratch from zero like design it code it create backing for it connect frontend and backend together operate on a data from the data base connect data base to the backend and in the end you can deploy everything but much more so basically yeah what EV UPS do they first of all like how to become a DevOps so first of all you have to become Linux master I would say you should be really familiar with SSH which I which we mentioned before command line some bar script so you are able to create bar scripts and automate some processes for example you can create bar scripts uses deploying your app which is installing the virtual environment running the automated test and much more so you really want to learn how to use Linux servers all right then you should know what's a proxy server web server so for example nginx is one of the examples or we also mentioned before the apart but nginx is super powerful and super popular right now and actually easy to use so what's the proxy server such as an engineer's at us so basically it's a gateway between your application and the Internet okay so it's in the middle so it will help you for a privacy of the security hackers may be much more harder to actually hack to your server so you'll be secure and also makes you a web server so for example you can deploy your Jenko app and run it through the nginx and then if you want to become a DevOps you have to learn actually how to deploy your apps on a server so for this you can use AWS which is actually hard but super super great skill to to learn Heroku which is super easy in Heroku actually it's Heroku is great to start because it allows you to actually deploy your apps for free and without knowing anything what's behind deploying the apps you just run Heroku create heroic who push her ah cran whatever some comments like this and your apps it's it's stored in a public alright then you have a show or Google apps which are very similar services to AWS but on AWS let's just stop here for a second you have like multiple services right but for example when it comes to real hosting you just need to for example on how to use AWS ec2 which is a normal instance of the Linux machine with memory and stuff like this so it basically is some kind of let's say raspberry pi start in the cloud ok or you can learn how to actually use docker containers how to docker eyes your application and then deploy it on a 8 AWS ECS service ok so there are multiple services and if you want to become a real DevOps you should get familiar with with a lot of them alright then as I mentioned there are docker services there's a docker containers which means you will authorize your application so back in times people are using a lot a lot of virtual machines now people are using Dockers which are actually much faster and they are really light what does it mean for your apps so basically if you if you have docker environment and if you want to make some changes to some huge project to your app you can actually download the doc and doc docker image create a container or your own computer and run the whole app ok so everything the whole setup of the application will will be done by its own because of that docker file or docker compose so you don't have to worry about it so for example if there's like a huge project created about many many different developers and the infrastructure is really huge because they are like for example connection to some api's to some different clouds to some different databases there's front unders backend and docker everything goes by its own actually right so in dokkan Cordell containers you have also each service stirred in different container and it's super easy to make a connections between those stalkers and deploy everything okay and then in the end we have automated testing see why CD which stands for continuous integration continuous deployment so you want to get familiar also with those terms because with them you are pretty you're making sure that your app won't crash so what does it mean if you create a lot of different tests and if you automate them whenever you make new changes for example in your git repository when you create a new feature some for example some new field to users and you go into marriage to the master and then publish it deploy it you want to also run tests to make sure that everything goes without any problems right so normally you do it as I mentioned those steps manually but with cyc they see ICD and automated tests everything is automatic alright so basically what what is going to happen is you will run some pipeline which is going to check your mesh requests and if this is green if also other developers will make a code review for your batch request then you are able to merge your code to the master and it will automatically deploy the current version of your app on a server and also it will be covered by your tests so you'll be pretty sure that your app won't crash alright so that was the end step of the whole journey of the becoming a web developer or even more because with this knowledge you can literally create your new startups your new companies okay and in the summary we can go very quickly through all of the points which we talked about so yeah as we mentioned we can be you can become frontend or you can become backend developer or you can combine those forces together and then become like a developer and then you have also the DevOps path and basically those two I would say comes together because whenever you become in fullstack developer in one point you really want to deploy your application you want to put them life you want to share them with other users show them your friends so you'll and some point to learn those DevOps skills but yeah as I mentioned you can also become just a professional develops and maintain all of the code created by other developers deploy it fix some features check just making sure that everything works smoothly so those are all of the paths and all of the technologies you can pick in 2020 and now I will go back to Cassie you get the frontend backend skills on the DevOps skills now you're really a solid solid solid developer and you're very valuable in the job market now look all of these skills that we've talked about if you want to be able to develop these skills from scratch even if you're a complete beginner and you want to then learn how to master it you want to go deep into like the frontend skills and the backend skills and build applications we do that in this profit JavaScript course if you want to learn how to then host your apps online using backend tools like nodejs we do that in profit of a javascript course if you want to learn how do you make a blog app or a Twitter app or a Google Maps app we do that in this course and if you want to learn advanced skills like wire framing how do you wire frame a project how do you road map a project before you do it we do that in profit with JavaScript and of course if you don't learn how to make money from coding how do you actually get clients how do you get freelance work or how do you get a fulltime job as a developer we do that in this course profit with JavaScript so at this point what I highly recommend is if you got value out of watching this video and you now actually want to deep dive and turn this into a real career and you want to become either a frontend backend or a full stack developer I would highly recommend that you the link in the description below or go to clever programmer comm slash JavaScript and consider joining this program this program will absolutely blow your mind some people have said that this is worth more than a coding boot camp that that took which they pay ten thousand dollars for and it's not ten thousand dollars it's way way way less instead a fraction of a price plus you will get tons of community support guys and you will get weekly coaching calls group coaching calls and we have you know a lot of support there so it's really like think of it in an online coding boot camp but for a fraction of a price so thanks so much guys much love thank you for watching and as always I'll see you guys in the next video so you want to become a JavaScript developer here's a list of things one I just drop the best JavaScript course on the planet that's it wait for you let me explain Who am I I'm Rafi cause II done a few things about making six figures as a freelance developer at 21 years old spent a billion dollars in revenue at 25 traveled overall time hundreds of thousands of students to code and read programming courses are ranked number one on YouTube so what's in this javascript course listen up they're gonna be learning the basics of JavaScript you're gonna be learning advanced objectoriented programming Dom get a Visual Studio code command line version control a JSON API es6 but I know you ain't here for that buddy blackjack Twitter clone Google Maps project 5700 Opera project 50 modules 30 hours of video content data science visualization Modern Portfolio how to get a job at Bank Oh JavaScript and we're gonna build an Iron Man suit wait what sweat sock results one Rob freelancer not traveling with his kids to a free save their company $20,000 three nazar landed 110 thousand dollar contract results yeah we got results we got a 30 day money back guarantee you joined the course you don't like it on the 29th day 23rd hour and 59th minute you can return it no questions asked alright so we both know coding is hard I mean you can see me staring out the window here scratching my head but anyways if you want to make a profit as a JavaScript developer like so many others have look I know how to get there so please give me the privilege to mentor you it's time for you to profit with JavaScript they got presents or parents or parents or parents or parents and planners I saw by my brother the money depressor we call it my blessings I felt like I'm pulling the birdie is back tell me i'm thomas i'm full of deciding that's why i call it bone impression you saw that I wanted the for win affection as something in public checkup eleazar eleazar eleazar eleazar eleazar eleazar so for my run to the money
