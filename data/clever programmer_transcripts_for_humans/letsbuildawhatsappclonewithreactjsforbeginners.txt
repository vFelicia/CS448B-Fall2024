With timestamps:

00:00 - right here god sonny how good does this
00:03 - look man
00:04 - super pumped for this build now so today
00:07 - guys
00:08 - a lot of you guys are waiting we've been
00:09 - waiting eagerly for these kind of apps
00:11 - and you asked for a lot of functionality
00:13 - so you can see we have the whatsapp
00:15 - build right here and we're going to
00:17 - teach you how to go ahead and build
00:18 - all of this today so let us know if
00:20 - you're excited guys
00:22 - guys who's excited drop that in the
00:23 - comments below
00:25 - look at this application right here
00:26 - let's just go through a quick demo of
00:28 - the apps people can see what can they do
00:30 - on here sonny
00:32 - so let's hit refresh and we'll start
00:34 - from the beginning i'll say refresh
00:36 - refreshing okay sign in so oh wow you
00:38 - can sign in with google
00:40 - no no
00:47 - i'm going to sign in with google all
00:48 - right that's fancy guys we're going to
00:50 - sign in with google what
00:51 - all right now sorry now web right there
00:53 - all right cool
00:54 - when you sign in check out the top left
00:57 - it even has your little picture
00:58 - no way that's too fancy
01:03 - that's too fancy you guys see it right
01:04 - there look at that wait hold on right
01:06 - there
01:07 - whoa okay insane cool cool cool stuff
01:09 - all right
01:10 - all right what's next so we have that
01:11 - we've got a slight adaptation so we've
01:13 - done it in sort of rather than a chat
01:15 - based fashion we've got like rooms
01:16 - so in this case we've got the testing
01:18 - room youtube room and dance room
01:20 - um let me go ahead and i'll actually get
01:22 - inside the app as well give me one
01:24 - i like the dance room man that that
01:26 - you're speaking my language i did that
01:28 - for you knows
01:28 - i did that thank you i was like oh [ __ ]
01:32 - naws is coming on the stream let's go
01:34 - let's go guys don't forget to dance drop
01:37 - in the comment below
01:38 - that's it so i just jumped in the dance
01:40 - room as well and if i go ahead and type
01:42 - in
01:42 - yo what's up nas
01:46 - and i boom chop that in look at that and
01:48 - i'll be like yo
01:49 - sonny yo sonny hold on
01:53 - hold on check out this check out this
01:55 - message
01:56 - let's go hey
02:01 - nice guys that's all real time
02:04 - so everything is in real time and it's
02:06 - actually quite responsive so nice if you
02:07 - want to go ahead and resize the browser
02:09 - a bit inside there
02:10 - so guys check this out we can go bigger
02:12 - right we can go smaller
02:14 - look at that that is so good sunny
02:17 - amazing job on the guys give some round
02:19 - of applause in the comments because this
02:20 - is well deserved look how good that
02:22 - looks i mean all
02:23 - his apps look good but i will his apps
02:25 - look good but this one i don't know i
02:26 - just i don't know i love it just
02:28 - yeah looks amazing yeah thank you dude
02:31 - it's mapping the whatsapp
02:33 - web so there's actually you can use
02:35 - whatsapp on the web we're actually
02:36 - mapping that iteration and if people
02:38 - enjoy this
02:39 - we can actually go ahead and use
02:40 - something like react native or something
02:42 - like that
02:42 - to really you know go in and build like
02:44 - an actual app version of this that'd be
02:46 - cool
02:46 - um but yeah so i think what we should oh
02:49 - we just got our first donation dude
02:51 - did we nice
02:55 - oh look at that vishal appreciate it i
02:57 - appreciate my friend thanks for the
02:58 - donation
02:59 - uh really really cool we got so many
03:02 - people guys
03:03 - uh adra says yo sunny we got
03:06 - yama what's up we got
03:09 - future co says what's up everybody
03:11 - what's up guys uh
03:13 - what's so daniel's like let's code aye
03:16 - sunny coding quoting the coding cup says
03:19 - uh fascinating said abdel abdullah
03:23 - run of applause in the comments says
03:26 - qazi from clever programmer guys
03:29 - let's go hey we've got my girlfriend in
03:32 - the house
03:33 - where's my her bomb where's my bond we
03:35 - got very big everything i see it i see
03:36 - it
03:37 - oh there we go what's up how's it going
03:38 - how's it going how's it going
03:40 - good to see you from the chat oh nice
03:43 - you're in the chat too
03:44 - i'm gonna tell you oh dude we just hit
03:46 - over 730
03:48 - guys oh nine how much 731
03:52 - so i think we're at 731 from my account
03:55 - i can see
03:56 - oh let's go that's insane guys
04:00 - if you're excited for today all we ask
04:02 - is that you go ahead and smash that
04:04 - thumbs up before we get started so that
04:06 - this can go out to as many
04:07 - people as possible right and then that
04:10 - will help everyone get the most value
04:11 - from this video
04:12 - so before we get started i think what
04:14 - would be cool is if we go ahead
04:17 - and show you guys um what we're actually
04:20 - going to what this build consists of so
04:22 - the tech behind this build
04:23 - because it's always a nice way to go
04:25 - ahead and get started we can actually do
04:26 - it in vs code we can actually list it
04:27 - out here
04:28 - that'd be a cool place yeah as you can
04:30 - see on the left we've got a live share
04:31 - running so
04:32 - uh now i just want to make it a little
04:34 - bit bigger on the left
04:35 - on the left let's make it a little bit
04:36 - bigger right there is that is that good
04:38 - that's good dude and then just press
04:40 - command j to hide that
04:42 - yeah nice so the tech in today's build
04:44 - guys
04:45 - we have we have react which is
04:48 - what is powering everything we have oh
04:51 - god no what's that
04:52 - oops let me go ahead and do this yeah we
04:54 - have a react whoa
04:56 - sammy just dropped a donation and tech
04:57 - programmer thank you guys
04:59 - awesome appreciate appreciate it i
05:03 - appreciate it
05:04 - tech programmer uh thanks so much thanks
05:07 - so much
05:07 - so much for that who else we got oh sami
05:11 - yo two dollars super ticker i know oh
05:13 - look at that that's cool
05:14 - thank you yeah awesome super nice
05:17 - guys we have a react we have the
05:19 - firebase firestore
05:21 - realtime database so we've used that and
05:22 - a bunch of builds previously
05:24 - we're going to have that today we have
05:25 - material ui so that's how we get the
05:27 - design looking the way
05:29 - it's looking um holy crap dude
05:32 - i can't believe how many people are
05:34 - supplying it it's crazy
05:36 - um we also have react rua guys so
05:40 - reactor
05:40 - inside this build yeah that's going to
05:43 - allow us to have different page routing
05:44 - so we have that forward slash rooms
05:46 - forward slash like a room id or
05:48 - something like that
05:49 - we also have the react context api guys
05:53 - so whoever wants to learn redux
05:56 - right so whoever wants to learn redux
05:58 - make sure you watch the end of it like
06:00 - all the way
06:00 - to the end of this video and shubham
06:02 - pandey just dropped another donation
06:05 - thanks so much
06:08 - you guys are crazy with that yeah it's
06:10 - insane dude
06:12 - we have the react context api so we can
06:14 - pretty much go ahead and if you learn
06:15 - that pattern you can pretty much be
06:16 - comfortable with redux so
06:18 - definitely jam-packed with value in this
06:20 - build and also guys we have google uh
06:23 - google authentication
06:24 - so that's huge right and once we've done
06:27 - that we're gonna deploy it using
06:29 - firebase hey grandpa
06:32 - oh wow 850 plus concurrent viewers let's
06:36 - go guys thank you might have let us not
06:38 - know insane insane stuff guys
06:40 - actually it's 919 guys from our point of
06:43 - view
06:43 - because we've got the latest updated
06:45 - stuff almost guys let's break it to a
06:47 - thousand guys share
06:48 - this video give it a thumbs up so that
06:50 - so the youtube goes ahead and share this
06:52 - for everybody else on youtube to see so
06:55 - get a thumbs up
06:56 - destroy that like button guys just
06:57 - destroy it as much as you can okay and
07:02 - of course subscribe subscribe to the to
07:04 - this
07:04 - youtube channel guys who is excited to
07:07 - get started
07:09 - before also guys worth mentioning if you
07:12 - find our videos pretty interesting you
07:13 - find them useful
07:14 - we are offering a free training guys
07:18 - so knows what are they going to get in
07:19 - the free training in the description in
07:21 - the description
07:22 - you guys are going to get free training
07:23 - on actually what is the title
07:26 - you know the title is sunny right the
07:28 - title is for
07:30 - we have a webinar and
07:36 - guys all about the top three yeah yes
07:39 - javascript developer so we're gonna
07:41 - pretty much go ahead and show you that
07:42 - in a free training and all you need to
07:45 - do to go ahead and get started with that
07:46 - is go to the link in the description and
07:49 - it's a completely
07:50 - free training guys so completely free so
07:52 - what i would recommend
07:53 - is that so you guys get the most value
07:56 - from our videos
07:57 - is that you pretty much go ahead and
07:59 - sign up right now so go to that link in
08:01 - the description
08:02 - sign up right now which is completely
08:03 - free and then once we finish this live
08:05 - stream whether you do it tomorrow
08:06 - whether you do it the next day
08:08 - or like you can go ahead and watch that
08:10 - webinar and uh yeah you guys just
08:12 - there's no loss there you're going to go
08:14 - ahead and learn a bunch using that uh
08:15 - using that free training so you can see
08:17 - i just shared it with you guys you can
08:18 - see it right here top two mistakes to
08:19 - avoid becoming a javascript developer
08:21 - this is some epic stuff guys we are
08:22 - getting so many people are giving us
08:24 - amazing feedback for
08:25 - this specific video completely for free
08:27 - don't really worry about it
08:28 - completely for free literally you you
08:30 - gotta click on that link gotta click on
08:32 - the link what's up
08:33 - what what florian just dropped us 10
08:35 - pounds
08:36 - where where can't wait to join on profit
08:40 - javascript program coming soon
08:42 - flooring hold on we got a lot hold on we
08:44 - got hold on i
08:45 - i did test aditya said it let me see
08:47 - let's see if i can if i can find
08:48 - if i can find fluorine hold on hold on i
08:51 - got it hold on
08:52 - whoa we have a lot of people carlos gave
08:55 - us
08:56 - 2147 something which i'm not sure what
08:58 - that is
08:59 - we got vinod kumar keep going up you'll
09:02 - see it
09:03 - we got ayusa iowa's cyber exploit
09:08 - m holy moly you guys insane
09:12 - insane insane stuff insane stuff let me
09:15 - see where's florian hold on
09:17 - i gotta find flooring i will find you i
09:19 - will find you florida i promise
09:21 - i promise i will find you
09:25 - oh right there i found it florida
09:28 - yeah i got him thanks so much says can't
09:31 - wait to join on profit javascript
09:32 - program
09:33 - what are you waiting for drop that we
09:34 - have a link in description below if
09:36 - you're excited
09:37 - join it below guys so many people so
09:39 - many people from profitable javascript
09:40 - are already here
09:41 - and they are loving the course uh we're
09:43 - actually currently really cool stuff
09:45 - we're building a chrome extension in
09:46 - pwj so that's all cool yeah yeah
09:50 - exactly awesome sweet guys right guys
09:53 - so with that said i think let's go ahead
09:55 - and what do you think nas
09:56 - should we go ahead and get this started
09:58 - let's get started and just so just one
10:00 - one less thing guys go ahead we got our
10:02 - links in the description for instagram
10:04 - so go ahead and tag us
10:05 - in your instagram videos link is right
10:09 - here
10:09 - nas domanski for for me and then sunny
10:12 - sss for sunny
10:17 - i know i need to like shorten the number
10:19 - of s's in my name
10:22 - anyways guys let's get let's get it
10:23 - started awesome
10:25 - let's go and guys just to get this place
10:27 - though we just hit over 1 000 likes
10:30 - thank you
10:33 - insane stuff insane stuff love that
10:37 - okay let's do it dude let's go ahead and
10:39 - get started so
10:40 - uh if you if you are familiar with our
10:43 - builds guys and we use a tool called
10:46 - create react app right so we're going to
10:47 - go ahead and use create react app to get
10:49 - the app started
10:50 - and to get that sort of a very basic um
10:53 - sort of starter play template that react
10:55 - goes ahead and gives us so
10:56 - now if you want to click command j in
10:59 - the nvs code
11:03 - yeah gotcha what we're going to do is
11:06 - i'm going to go ahead and do the
11:07 - following so i'm going to say
11:11 - i'm going to say mpx mpx
11:14 - create react app so create react
11:18 - and then the name of the app so whatsapp
11:21 - clone right
11:21 - and what this will do is it will just go
11:23 - ahead and make all of the starter
11:25 - template stuff
11:25 - for us inside of the app oh i can
11:28 - actually see there's a little overflow
11:31 - bug that i didn't account for if you see
11:33 - you know when people are adding to that
11:34 - adding the new chat nobody knows until
11:36 - you start yet
11:37 - nobody knows
11:41 - we're gonna be debugging live on stream
11:43 - guys
11:44 - pratik thanks so much for the donation
11:46 - as well really appreciate it i really
11:48 - really appreciate it oh my gosh so many
11:51 - oh we got 10
11:52 - pounds thanks so much
11:56 - so vincent just came in with swinging
11:59 - with 10 euros
12:00 - let's go thank you so much dude
12:04 - guys with that said oh my god another
12:06 - donation
12:07 - another one it's amazing it's gonna be a
12:11 - live call
12:11 - full of donations that's what's gonna be
12:14 - that's insane dude
12:15 - i loved it nice so now guys
12:18 - once this while this is setting up let's
12:19 - go ahead and set up firebase
12:21 - that'll be a cool little step to do now
12:23 - what do you want me to do or do you want
12:24 - to do it you want to do it
12:25 - uh uh for firebase uh yeah you you're
12:28 - gonna have to do it on the browser
12:30 - oh okay so let's so tell me what to do
12:32 - so go to firebase.com so i think it's
12:35 - firebase
12:36 - yeah firebase i'm just gonna go like
12:39 - here
12:40 - yeah firebase.com
12:44 - all right and what you want to do is
12:46 - click on go to
12:47 - console or make sure you're signed into
12:49 - whatever account that we're going to be
12:50 - using so
12:51 - if you've got the clever programmer
12:53 - account let's go ahead and use that all
12:54 - right so
12:55 - go to console yep
13:02 - let's go ahead and use i'm going to use
13:05 - this one hold on
13:06 - nice
13:09 - oh is the obvious code crashed what's
13:11 - that it looks like it is something i
13:12 - don't know
13:14 - yeah it might because the terminal nice
13:16 - okay what you want to click on add
13:17 - project
13:19 - go ahead at project beautiful
13:22 - all right uh let's go ahead and do
13:23 - whatsapp right
13:25 - yep so let's go ahead and click on
13:27 - whatsapp oh it says
13:28 - hold on what's up clone even
13:33 - let's start with the name of the project
13:34 - okay let me
13:36 - type in your project right here yeah
13:37 - yeah what's up
13:40 - what's app clone like that
13:45 - uh yep
13:53 - and then you can set up an account for
13:55 - that so you can just go ahead and click
13:56 - default account that's all good
13:58 - i create projects so this guy's is
14:01 - essentially what we're going to use to
14:02 - power the entire back end so we're going
14:04 - to use this to empower our
14:05 - authentication
14:06 - our database and when we deploy it so
14:09 - it's all of the hosting functionality
14:11 - all of that is going to be done on
14:13 - firebase and all you need for a firebase
14:15 - account is a gmail account and that's it
14:17 - pretty much and you can go ahead and get
14:19 - everything working with that
14:20 - we just hit over a thousand viewers on
14:22 - youtube guys yo
14:23 - let's go like thank you guys so much we
14:28 - we appreciate every single one of you
14:29 - guys watching right now and we love you
14:31 - guys
14:32 - it's amazing wow dude
14:36 - i never i'll never get over that i don't
14:38 - know why i really want to play my sound
14:39 - effect my sound effects for some reason
14:40 - i'm working that's okay that's all right
14:42 - we'll deal with our sound effects let's
14:44 - continue on
14:45 - i know i don't know why this is
14:46 - interesting
14:48 - so now what you want to do is go over to
14:51 - let's
14:52 - check okay so create react apps just
14:54 - finishing up nice
14:55 - so you want to go over to um let's go
14:58 - ahead and see
14:59 - hopefully that should be fine after once
15:01 - create react apps done
15:04 - awesome yeah so now you want to go over
15:07 - to that little cog icon
15:08 - in firebase
15:14 - click that and click project settings
15:16 - okay and then you want to go all the way
15:18 - down to the bottom
15:20 - and you see that web app icon right so
15:23 - it says that
15:24 - that one yeah and then here you type in
15:26 - whatsapp clone and make sure you tick
15:28 - the firebase hosting option also set up
15:32 - firebase hosting okay
15:33 - whatsapp yeah cool register app yep
15:37 - and then step two we can ignore step two
15:39 - we don't actually
15:40 - we're not interested in step two click
15:41 - next yep
15:44 - then uh firebase tools yeah so we need
15:47 - this
15:48 - we don't need to do this because we've
15:49 - already done this but you guys are gonna
15:51 - have to run that command
15:52 - so make sure when you do that you might
15:53 - need to do sudo npm install dash g
15:56 - firebase tools
15:57 - so just a heads up if you have to do
15:58 - that but we don't have to do that we've
16:00 - already done that
16:01 - so click next yep and then here we can
16:05 - ignore this for now just click continue
16:06 - to console beautiful
16:08 - beautiful sweet all right awesome
16:11 - and let's go ahead and click that config
16:14 - at the bottom
16:15 - so at the bottom you should see you see
16:18 - it says uh
16:18 - three different switches you want to
16:20 - click the config switch
16:22 - [Music]
16:23 - oh i see i see and so i need to copy
16:25 - this right you need to copy this
16:27 - yep copy that and then what we'll do is
16:29 - go over to our
16:31 - code over here and let's open up our
16:33 - files and we should see whatsapp clone
16:35 - inside of our file directory now
16:37 - i see it okay yeah awesome and let's go
16:40 - ahead and go into source
16:42 - and let's create a file called
16:44 - firebase.js
16:46 - so i'm gonna do right now so new file
16:48 - firebase
16:50 - like so right yep and you just paste it
16:54 - all right dude i'm gonna paste it in
16:56 - here command
16:57 - beautiful right there nice yeah i'm
17:00 - gonna say
17:01 - that yep save that and let's make it
17:05 - a a little bit so let's let's close
17:08 - command b
17:08 - to hide the sidebar all right and
17:11 - command j to oh yeah so you see guys
17:13 - in command j at the bottom now you can
17:15 - see it says happy hacking so once you
17:17 - get that message
17:18 - thank you envy dev for that donation
17:20 - massively appreciate that appreciate it
17:22 - thank you
17:23 - um so now what we're going to do is once
17:25 - you get this message guys you want a cd
17:26 - into
17:27 - the whatsapp clone so whatever you named
17:29 - it here we're going to do cd
17:30 - whatsapp cloud so cd whatsapp clone
17:33 - uh what's going like this and then
17:35 - you'll be in the right directory so it
17:37 - should have whatsapp clone
17:38 - and then here what you want to do is to
17:40 - start the app up you do npm
17:42 - start right so i don't know why i
17:45 - dropped them too long yeah
17:46 - that's all yeah yeah yeah
17:50 - and then that will go ahead and actually
17:52 - spin up the app right
17:53 - so this should spin it up on localhost
17:54 - 3000 so what i'm going to do is
17:56 - because me and nars are using a vs code
17:58 - liveshare
17:59 - i should be able to actually go ahead
18:01 - and share this with you uh give me one
18:03 - sec
18:04 - yeah somebody asked like what is it what
18:06 - are the config files so look what the
18:07 - configcap files are basically
18:09 - that is guys how we will go ahead and
18:12 - actually you know connect to the
18:14 - database right so you know all these
18:15 - keys right here is a way to connect the
18:17 - database
18:18 - um that's pretty much it nothing nothing
18:19 - too much uh on that
18:22 - exactly yeah you've got loads of people
18:25 - flying in says i got stuck on the
18:27 - instagram oh damn it why does the show
18:29 - get master and terminal oh it's because
18:30 - oh my zsh that's why our terminal might
18:33 - look different to yours
18:34 - gotcha um nice yeah so perfect now we've
18:36 - got low cost 3000 up so if you go into
18:38 - the left
18:40 - hand side you know in vs code right here
18:42 - live share
18:43 - and local 3000. right there
18:46 - hey let's go
18:49 - nice so now we're at this good if you
18:51 - get to this point guys well done
18:53 - so what we're going to do now is do what
18:55 - we like to call the clean up process
18:57 - okay
18:58 - so if you just want to follow me nas
19:00 - okay go ahead
19:01 - yep so if you want to follow me using
19:03 - click on that purple button
19:06 - yep following you and then click on the
19:07 - yeah so in the file directory now
19:09 - what i usually do is i delete
19:11 - app.test.js i delete uh
19:14 - logo.svg and i delete setuptests.js
19:19 - where is that oh okay so these ones okay
19:21 - i see it now i see it okay
19:23 - so i'm going to go ahead and delete
19:24 - apt.test.js
19:27 - logo.svg and setup tests so those
19:30 - those ones are the ones i'm going to
19:31 - delete
19:33 - so i'm going to go ahead and click move
19:35 - to trash and now if you click the little
19:37 - refresh like oh there you go you can see
19:39 - it yeah oh no has it refreshed
19:40 - uh-huh yes you can see it starts to
19:43 - freak out so you might need to click the
19:44 - refresh icon inside of the file
19:46 - directory
19:47 - so you see on the left yeah yeah i see
19:49 - it i see it hold on that little
19:53 - there we go nice hey so now uh the app's
19:56 - gonna freak out it's like oh my god
19:57 - you've deleted everything so now what we
19:59 - do is we go into our code
20:01 - so let's do command b command j
20:07 - nice and what we're going to do now is
20:09 - go ahead and do
20:11 - so firstly i'm going to get rid of these
20:13 - errors so right now
20:14 - we got rid of the logo which is why it's
20:16 - freaking out so i'm going to go ahead
20:17 - and delete that
20:18 - and here what we can say is we can just
20:19 - say h1 and we can say
20:21 - hello let's just say let's build let's
20:23 - build
20:24 - whatsapp let's build a whatsapp
20:30 - clone awesome and save it nice
20:33 - and we should see let's build a whatsapp
20:36 - clone on the
20:36 - on the right side which is awesome hey
20:38 - we did nice okay
20:40 - nice right all right now what we're
20:41 - going to do is we're going to do a clean
20:43 - up process so app.css has a bunch of
20:45 - crap inside of it so you pretty much
20:46 - want to do command
20:48 - a delete everything inside of that yeah
20:50 - you don't want any of that stuff and if
20:51 - we save it
20:52 - you'll see now the styling gets a little
20:54 - bit more it's left aligned and we get
20:56 - rid of a bunch of that stuff the wonky
20:57 - one more step before we get we have a
21:00 - starter template so we go into
21:01 - index.css and here we want to say target
21:05 - everything
21:05 - and give it a margin of zero
21:08 - and we just got another donation guys he
21:11 - says can we have the source
21:13 - source code github link so that'll be
21:14 - easy for us to follow yes we will be
21:16 - uploading it after this video
21:18 - of course yeah yeah and thank you
21:21 - oh and then we got pre priyank thank you
21:23 - so much for 2 donation
21:25 - thanks for everything you do of course
21:26 - we're happy to do this guys dude
21:28 - massively appreciate that let's go ahead
21:31 - and click save and you'll see now when i
21:32 - do that
21:33 - it just removed that top bit of margin
21:35 - right so now we're actually in a very
21:37 - good starting point
21:38 - so we can go ahead let me go ahead and
21:39 - remove this thank you mansoor
21:41 - as well really appreciate for donation
21:43 - too oh my we're just we're just
21:44 - flying with donations today i know guys
21:47 - the love is real today this is insane
21:50 - let us know what you guys are excited
21:52 - about in the comments as well i love to
21:53 - see like
21:54 - oh my god we're holding over a thousand
21:55 - as well it's blowing my mind holy crap
21:58 - nice
22:01 - yeah we are going to be using the uh bem
22:04 - naming convention so here
22:06 - uh let's go ahead and do the bam naming
22:09 - convention and you guys
22:10 - who aren't familiar with this
22:11 - essentially it's just a very easy way of
22:13 - naming
22:14 - your components inside of react and it's
22:16 - it's really really scalable you'll see i
22:18 - use it in every single build we use it
22:20 - in every single build and
22:21 - it's just a really clean way of keeping
22:22 - your app like very very neat
22:24 - so with that said we've got the app
22:26 - right
22:27 - so you notice when we had our build we
22:30 - had the app and then we had this sort of
22:32 - consider it as like the app body right
22:34 - so the app body was that little sort of
22:36 - container so let's go ahead and open up
22:37 - the actual deployed version us right
22:40 - here right here this is the deploy
22:41 - version right here
22:42 - yes are these people who's creating this
22:45 - stuff this right here
22:46 - this is live so they've got oh yeah so
22:48 - people actually create this right now oh
22:50 - man
22:50 - all right nice it's crazy right yeah
22:55 - you are really react yes
23:00 - awesome i love it i love that nickname
23:06 - dude
23:08 - sunny thank you man appreciate it thanks
23:10 - so much for the nation and yet again
23:13 - oh man you guys you guys this is crazy
23:16 - stuff
23:17 - nice so let's go ahead and what we like
23:20 - to do you know how we do it guys we
23:22 - map out the app okay so we can see
23:25 - from the right hand side we pretty much
23:27 - have like if we scroll a tiny bit up now
23:29 - on the right hand side can you see how
23:32 - like it's kind of like a floating card
23:34 - right yeah so what we're going to do is
23:35 - we're going to consider that to be
23:37 - the app body so here we go you guys see
23:39 - how it has that has that kind of shadow
23:40 - right there
23:41 - that's what he's talking about like
23:43 - right there yeah
23:45 - so i'm going to go ahead and consider
23:46 - that to be something like the app body
23:48 - okay so everything inside the body was
23:50 - essentially sits
23:51 - inside of that card that's what our end
23:53 - goal is going to be right
23:55 - and then inside of the art body we're
23:56 - going to have two things and i like to
23:58 - always mask things out so i like to kind
23:59 - of add comments and it kind of makes the
24:01 - whole process a lot easier
24:03 - so what we're going to do now is we're
24:04 - going to have a sidebar like this
24:06 - and we're going to have a um a chat
24:09 - right so the sidebar is essentially
24:11 - going to be the stuff with so it has
24:13 - nazi's
24:14 - avatar on the top left yeah it has all
24:16 - of this stuff for the
24:17 - icons the add new chat the sort of all
24:20 - of this
24:20 - all this stuff right here all this stuff
24:22 - right here exactly
24:24 - yeah so we have all of that stuff over
24:26 - there and the chat is this sort of stuff
24:28 - on the right hand side okay got it
24:30 - yeah exactly that yeah we're going to
24:32 - have the chat on the right hand side
24:33 - so what we'll do to get started is let's
24:35 - actually go ahead and style that
24:36 - so that we get it somewhat on that lines
24:38 - of looking like that so
24:39 - if we go into app.css remember we have
24:41 - the app and we have app body right
24:44 - so it's going to app.css and what i'm
24:45 - going to do guys i'm going to
24:47 - firstly target the app uh itself so the
24:50 - app itself and what i'm going to do is
24:51 - i'm going to give it a background color
24:53 - of it's a slight it's like an off it's
24:55 - like a really weird kind of
24:57 - off gray i think it is but it's this
24:59 - color right here so you guys can just
25:01 - copy this hexadecimal code
25:03 - um if i save it let's go ahead and see
25:06 - what that's like guys
25:07 - please keep the chat clean in the
25:09 - whatsapp app okay
25:11 - you want to keep the chat clean yeah
25:13 - because otherwise i won't be able to
25:14 - show it
25:16 - exactly we want to keep that chat clean
25:17 - and then that keeps these videos coming
25:21 - but no no no no chat
25:25 - and then what we're going to do is we're
25:26 - also going to set the height here to 100
25:28 - view height so i'm going to go ahead and
25:29 - do height
25:30 - of 100 view height like this okay
25:33 - and if i save that like this
25:37 - awesome nice all right so that goes
25:40 - ahead and does that
25:41 - uh now what i'm going to do is i'm
25:42 - actually going to get rid of it on my
25:43 - local house because i think it's killing
25:44 - my ram so i'm going to look at it for
25:46 - your screen yeah
25:47 - wrist removal yeah yeah awesome
25:50 - um i'm not longer on that screen so
25:52 - we're good
25:54 - yeah nice so now i have a background
25:57 - color and a height of 100 view height so
25:58 - you can see we've got that little uh
26:00 - kind of weird looking uh gray behind it
26:02 - right so that's pretty good for
26:04 - what we want to start with and then what
26:06 - we're going to do now is we're going to
26:07 - go ahead and target the app body
26:10 - okay so that body i'm going to go oh
26:12 - this was the app body so
26:13 - i didn't want this stuff and i wanted
26:14 - this to go towards the app itself so the
26:16 - entire app
26:17 - so let's go ahead and change that
26:20 - and we should be able to see this if i
26:22 - do save
26:24 - now we can see the whole thing's like
26:26 - that right the actual app buddy itself
26:28 - where it says
26:29 - let's build a whatsapp plan let's target
26:30 - that so we say app body
26:32 - like this and i'm going to go ahead and
26:34 - do the phone and say display
26:36 - flex right so i want anything inside of
26:38 - it to be
26:39 - to follow the flex rules then i'm going
26:40 - to go ahead and say this is a really
26:42 - neat trick by the way guys i'm going to
26:43 - give it a width and height
26:45 - of a 90 view height so it's going to
26:47 - have a little bit of a cropping in from
26:48 - each
26:49 - from the top uh and the left and right
26:50 - and the bottom and then what i'm going
26:53 - to do is give it a background color
26:54 - of a i think this was like a a different
26:56 - white color so now if i save this you
26:58 - should see what what i've done okay why
27:06 - is my
27:07 - uh what's up all good yeah it's just
27:10 - it's it's saying saving saying so saving
27:13 - not determine recent changes or others
27:14 - what the heck what is that
27:17 - yeah i know right
27:22 - yeah but then but now it says
27:25 - nothing okay no it's all good i see it i
27:27 - see it i see it now
27:29 - yes you see it kind of made this uh this
27:31 - box which is like
27:32 - it's got a width of 90 view it uh and a
27:35 - height of 90 view height right so it's
27:37 - kind of cropped in a bit
27:38 - uh i know oh thank you thank you so much
27:41 - thank you so much says hey bro i'm new
27:44 - to your channel just four days
27:46 - four days uh back i saw zoom clone
27:49 - that's insane you guys are rocking
27:50 - let's go we'll rock today big fan here
27:52 - thank you so much
27:54 - thank you dude that's amazing love that
27:58 - and now what we're gonna do is we're
28:00 - gonna add a slight little box shadow so
28:02 - you guys can go ahead and copy this box
28:04 - shadow code i just went ahead and messed
28:05 - around with the value into i got like a
28:07 - nice little
28:07 - sort of 3d effect off of it and then i'm
28:10 - going to give it a margin top of
28:12 - 50 pixels so it doesn't touch the top
28:14 - but then what like why what i kind of
28:16 - found here guys is
28:17 - i don't want it to be um positioned
28:20 - like this so let's go ahead and get rid
28:21 - of that i want to do a little trick
28:24 - right so if i can go ahead and say the
28:26 - following for the app so if i say
28:27 - display
28:29 - grid and then i do this place items
28:32 - place item center look how nice this
28:36 - trick is
28:36 - as soon as i do this boom it's just oh
28:40 - wow
28:41 - just see that yeah like it's insane like
28:43 - if i get rid of that place item center
28:46 - you see like it does that but then it
28:48 - just literally maps it on vertical and
28:50 - horizontal axis and gets it centered now
28:52 - if i go
28:52 - ahead and move remove this h1 of let's
28:55 - put a whatsapp clone
28:57 - like this now you can see look at that
29:00 - boom
29:01 - perfectly in the center wow dude that is
29:03 - insane wait so is this kind of like
29:05 - display flex but this is
29:07 - it's just a a new way for this did this
29:09 - come out after display flex or something
29:12 - so i'm not sure when it came out but i
29:14 - was watching like a google video and
29:16 - they were talking about the different
29:17 - display methods and display grid was one
29:19 - of them
29:19 - and so the grid is obviously css grid
29:22 - but place i didn't know about place item
29:24 - center and basically whatever container
29:26 - child you like whatever child element
29:28 - you have it will just center it
29:29 - vertically and horizontally
29:31 - got it got it got it which is really
29:33 - really nice because usually you have to
29:35 - mess around with all sorts of margin and
29:36 - rubbish like that
29:38 - so that's really really nice um okay so
29:41 - now what i'm going to do is i'm going to
29:42 - give this one a margin top of 50 pixels
29:45 - i'm going to kind of detract from it
29:46 - because
29:47 - in whatsapp in the actual web one it
29:48 - doesn't sort of it goes a little bit
29:51 - closer to the top like that that's it
29:52 - nice
29:53 - awesome so now we're waiting who is
29:55 - pumped guys
29:56 - i have somebody saying hey when nas
29:58 - starts staying pumped i'm going to be
30:00 - laughing and pumped as always
30:04 - let's get pumped up guys get pumped up
30:07 - let's go
30:09 - [Music]
30:10 - let's go ahead and all right so now
30:13 - we've got
30:13 - oh my god we've hit over 1200 viewers
30:16 - and say
30:17 - let's go nice let's keep it going let's
30:21 - keep it going
30:22 - so we've got app.js so remember we
30:24 - mapped out two of these components we
30:25 - had sidebar and chat
30:26 - right so for the sidebar what i'm going
30:29 - to do is i'm going to go ahead and
30:30 - actually make that component so
30:33 - uh knows if you want to show them how to
30:34 - make the first one and then after that i
30:36 - can show them uh i can kind of speed it
30:39 - so if we want to go ahead and create and
30:41 - create a new file called sidebar.js
30:44 - okay so it's going to do uh inside the
30:46 - source correct
30:47 - so yeah right click new file side
30:50 - bar oh capital s capital as if because
30:53 - it's a component
30:54 - yeah side bar dot js all right let's go
30:58 - to create that
30:59 - and then that's in here and then we can
31:01 - we can use
31:02 - uh for to create a component what is the
31:05 - shortcut
31:06 - it's r f c e r f c e uh wait let
31:09 - me try you you're good yeah rfce
31:13 - there you go boom right there nice
31:16 - yeah so that's how we're going to be
31:18 - very like speeding up the whole
31:20 - uh process of creating components and
31:22 - what we will be doing every time we
31:24 - create a component
31:25 - the standard thing to do is go ahead and
31:26 - import the corresponding component css
31:29 - file so in this case
31:30 - sidebar.css so i'm going to create it
31:32 - sidebar.css
31:34 - and we should pop into it now in a
31:37 - second
31:39 - oh i think you have to follow me again
31:40 - when you create a filename
31:42 - okay i see i see it right there yeah i'm
31:45 - following you now
31:46 - yeah now let's see what the sidebar does
31:47 - here you see that right there yeah
31:49 - right there yeah boom so then that way
31:52 - we import it and then remember guys we
31:53 - want to
31:54 - uh stick with the bem convention so
31:56 - we're gonna do class name equals
31:57 - uh sidebar like this right so that's
32:00 - what we want to first
32:01 - need do with that so now we've got the
32:03 - sidebar and what i'm going to do here
32:05 - guys is
32:06 - we the sidebar is split into different
32:08 - sections right
32:09 - so firstly what i'm going to do is just
32:10 - prove that it renders out so i'm going
32:11 - to do h1 and say sidebar
32:13 - and then i'm going to go into app and
32:15 - i'm going to go ahead and rather than
32:16 - having my comment
32:17 - i'm going to replace it with sidebar and
32:19 - if you guys like the comments that i do
32:21 - and you think it's useful let us know in
32:23 - the comments because
32:25 - we tend to do that on every video and
32:26 - we're not actually 100 sure if you guys
32:28 - like it or you guys
32:29 - find it confusing yeah it's always nice
32:31 - to see yeah
32:33 - so then we need to import that at the
32:34 - top i've done a little neat trick there
32:36 - i just went
32:37 - control space at the end of the
32:38 - component and you can go ahead and do a
32:40 - little shortcut
32:41 - save it and we should see hi i'm a
32:44 - sidebar
32:44 - hey okay i'm or sidebar perfect
32:48 - nice hi i'm a sidebar hot so oh
32:51 - some people are saying rfce is not
32:53 - working for me how can we accomplish
32:54 - that
32:55 - so if if rfc isn't working for you guys
32:57 - now let's go ahead and go into your
32:59 - extensions
33:00 - yeah right here type in es7
33:03 - es7 you you guys need to go ahead and
33:06 - install the following extension es7
33:08 - react redux and snippets so yeah just
33:11 - install that and then you guys should be
33:12 - fine right here
33:13 - and that rfc will work no problem
33:16 - exactly
33:18 - yeah exactly that and that will go ahead
33:20 - and give you uh that sort of the lovely
33:22 - shortcuts that we show you throughout
33:24 - the app
33:24 - so the next step what we're going to do
33:26 - is we're going to split this up the
33:27 - sidebar up into separate things right
33:29 - so md for can you do thank you so much
33:34 - thank you very much guys a lot from this
33:36 - channel i implemented the instagram
33:37 - clone thanks guys keep up the great work
33:38 - awesome work dude
33:40 - well done on implementing that nice
33:43 - so inside the sidebar we're going to
33:45 - have a few sections right we're going to
33:46 - have the sidebar header
33:47 - so uh as i do this now it might be cool
33:49 - to show the actual app so
33:51 - as i write it we can see what i'm doing
33:53 - on the sidebar
33:54 - what i mean oh yeah i am showing the
33:56 - actual app no no no sorry the deployed
33:59 - app
34:00 - i don't know if we should show that
34:01 - there's some pretty nasty comments in
34:03 - there
34:04 - oh really okay yeah okay
34:09 - god damn it guys guys come on
34:13 - yeah keep it clean
34:16 - so now what we're gonna do is on that
34:19 - sidebar
34:20 - we have a few sections we have sidebar
34:22 - headers we have sidebar
34:24 - header right so that's the top of the
34:26 - sidebar where we had nars
34:28 - avatar we had a few icons in there and
34:30 - then we also had a search bar so we had
34:32 - like a little
34:32 - nice little search box i'm going to say
34:34 - div sidebar
34:36 - header search sorry search like this
34:40 - nice and then we also had a chat
34:43 - right so we had the chats when i refer
34:45 - to the chats i mean all of the things
34:46 - which
34:47 - some people have like sadly spammed
34:50 - out but we can go ahead and do sidebar
34:54 - chats like this right so we can go ahead
34:56 - and do that
34:58 - uh sidebar oops yeah there we go so now
35:00 - we've got three sections
35:01 - one two and three so we've got the
35:02 - header and the rest of it so in order to
35:05 - sort of go ahead and and carry on with
35:07 - this now
35:07 - what i want to do is we need to install
35:10 - material ui because we need some icons
35:12 - right we need the avatar
35:14 - the component we need a bunch of icons
35:16 - so
35:17 - um now let's go over to materialui.com
35:21 - okay material
35:24 - beautiful yep all right there you go
35:28 - nice and what we want to do is we're
35:30 - going to do um
35:31 - the following command so let's open up
35:34 - the terminal
35:36 - okay so command j terminal
35:39 - yeah okay i see the terminal but i can't
35:41 - write in it
35:43 - awesome uh yeah you can't run it so now
35:46 - what we'll do
35:46 - is we are going to go ahead and do
35:51 - i'm going to open up a second terminal
35:52 - so you should be able to see a second
35:54 - terminal yep
35:55 - ls what i'm going to do is i'm going to
35:58 - say
35:59 - uh mpmi so npm install and then we're
36:02 - doing material
36:04 - ui
36:07 - yeah got it and you can go ahead and do
36:09 - that what that will do is i'll install
36:10 - all of the material ui dependencies so
36:12 - all of the different components that
36:14 - they give us
36:15 - everything that is included inside of
36:17 - material gets pulled in when we do that
36:18 - while we wait for that to install let's
36:20 - go ahead and go to the search bar on the
36:22 - right
36:23 - and type in icons and just so you guys
36:26 - know like what material ui
36:27 - is right material ui is simply just a
36:29 - way for us to easier
36:31 - um to easier uh basically enable you
36:34 - know
36:34 - to it already has css components so we
36:37 - can really fast create you know good
36:39 - looking applications
36:41 - exactly exactly it's like a reusable
36:43 - component i guess is it like a component
36:45 - library
36:46 - yeah yeah yeah right so css library
36:50 - like a css library basically yeah
36:53 - exactly so
36:54 - once you've done the core you actually
36:56 - need to go ahead and install the icon so
36:58 - what we can do is we can do
36:59 - we can write the same command or replace
37:01 - the android icons like this
37:03 - right and what that will do is i'll go
37:06 - ahead and pull in the
37:07 - icon set so yes we installed all of the
37:10 - components that are available
37:11 - but they also have a really nice icon
37:13 - set so you can go ahead and install over
37:15 - all of that so
37:16 - it does click on where it says you can
37:18 - search the full list of these icons and
37:20 - give them a demonstration
37:21 - as to how we then get the icons that we
37:23 - use you can search okay right there
37:25 - search your photos of these icons
37:27 - let's go ahead and do that i'm clicking
37:29 - thank you very much siddharth he goes
37:31 - doing a good job guys appreciate it you
37:33 - did
37:33 - thank you thank you thank you appreciate
37:35 - it let me see if i can find you all
37:36 - right there you are
37:38 - siddharth there we go you're the man you
37:41 - did
37:42 - nice all right
37:45 - okay go ahead sunny yeah so now what
37:48 - we're going to do
37:48 - is inside where it says search icon so
37:51 - for example if we need let's say
37:53 - a um settings yeah we can do things yes
37:56 - this is to say we need a settings icon
37:58 - right
37:58 - so you type in settings inside of here
38:00 - and then you see you'd get the icon and
38:01 - if you click the icon
38:03 - you'd actually get the import code that
38:04 - we would then use
38:06 - to pull that into our app and because we
38:08 - installed the icons
38:09 - we can go ahead and actually write that
38:11 - in our app and it will work as we
38:12 - expected to
38:13 - so whenever we're doing this tutorial
38:15 - you're going to see me
38:16 - doing a bunch of imports and what's
38:18 - going to happen is
38:19 - that's how we found them so if you guys
38:21 - are wondering how that's that's how we
38:23 - do it right
38:24 - got it yeah yeah awesome nice so now
38:27 - what we're going to do
38:28 - is let's go over to uh the sideburn i
38:31 - should actually
38:32 - go ahead and start like populating this
38:33 - stuff so we have the sidebar header
38:36 - right now the header had a few things it
38:38 - had a few icons on the right
38:40 - and an avatar on the left so to get the
38:42 - avatar on the screen
38:43 - what i can do is i can go ahead and
38:45 - import the avatar so i can go up to the
38:47 - top
38:48 - and import the avatar so actually i can
38:50 - do it i can just write it and then i'll
38:52 - do a shortcut so if i say avatar
38:54 - like this right and i should be able to
38:58 - i kind of
38:58 - might do my little shortcut let's go
39:00 - ahead and do this so i'm going to
39:02 - put it at the top right
39:05 - avatar like this and then if i save it
39:08 - now we should be able to see a little
39:09 - avatar pop in so
39:10 - wait until this loads and we should be
39:13 - able to see
39:14 - um a they're still compiling oh
39:16 - something looks like somebody cleared
39:17 - the chat thank you so much finally
39:18 - somebody cleared the chat on the actual
39:20 - live one let's clear the chat a bunch of
39:24 - times
39:26 - that's awesome that's smart that's smart
39:29 - thank you whoever did that thank you so
39:30 - much
39:31 - nice thank you so you see guys where
39:34 - we've got the top we've got the avatars
39:36 - is avatar um
39:37 - nars is avatar in the top left right
39:38 - there and then on the right we have the
39:40 - icons right so that's what we're trying
39:42 - to achieve right now we're doing the
39:44 - header section
39:45 - so heading back to localhost
39:49 - so now yeah boom right there we have an
39:52 - icon right now
39:53 - okay there we go there we go the avatar
39:55 - right so the avatar is already there
39:57 - and what i'm going to do is for all of
39:58 - those icons i'm going to go ahead and
40:00 - bundle them up into
40:01 - a like their own container i'm going to
40:03 - call this one sidebar
40:05 - underscore underscore header right okay
40:08 - like this and then inside of here i want
40:12 - the following
40:12 - three icons i want a uh it's kind of
40:15 - it's weird guys it's called a donut
40:17 - large icon
40:18 - that's the first one the second one is
40:20 - called a chat icon
40:22 - and the final one is called a more
40:25 - vertical icon and basically i'm going to
40:26 - go ahead and save this once i import
40:28 - these and you'll see what i'm
40:29 - what i've added in here so let's go
40:32 - ahead and do that
40:33 - here so boom i'm going to save and then
40:37 - let's go ahead and see what we
40:38 - pulled in so we've got the donut lodge
40:40 - and the donut large is for like whatsapp
40:42 - stories
40:42 - the chat icon is for like if you're
40:44 - gonna create a new chat or something and
40:45 - then the more vertical icon is for the
40:47 - three dots
40:48 - got it yeah so that's how we get that so
40:51 - now we're going to do
40:52 - to get that styled correctly let's go
40:54 - ahead and actually dive into sidebar.css
40:56 - so inside of sidebar.css
40:59 - what we have now is we have let me just
41:02 - make this a bit clearer
41:05 - so we have the sidebar header so let's
41:06 - go ahead and do that so we've got the
41:08 - sidebar header
41:09 - and for that header i'm going to do
41:11 - sidebar header
41:13 - like this and i'm going to say display
41:14 - flex
41:16 - right are you typing where are you
41:18 - typing where are you typing
41:20 - um oh you might need to follow me on css
41:23 - okay i'm like wait hold on where are you
41:24 - right there yep
41:25 - hey yeah there we go i don't know why i
41:28 - doubt that yeah yeah
41:29 - that's weird anyways i'm going to do
41:31 - side display flex as soon as i hit save
41:33 - we should see
41:34 - everything will go into a row now right
41:37 - there nice nice nice nice yeah and then
41:39 - because everything sort of um
41:41 - we want to space everything between it
41:43 - so i don't want everything to be bundled
41:45 - up i want the two containers to be
41:46 - spaced apart so if i do
41:47 - justify content space between it should
41:50 - use up the full
41:51 - um width of the the container at this
41:54 - point or in this case i need to do
41:56 - um into a few more things actually i
41:58 - need to say
42:00 - um that's one sec we're gonna do okay
42:03 - let's go ahead and give it some padding
42:04 - and a border
42:05 - right so let me go ahead and do that
42:07 - first one sec
42:08 - wait so if you do say shouldn't
42:10 - shouldn't that work space between right
42:11 - now
42:12 - right so it should but then you see
42:14 - what's happening is
42:15 - basically we've given so where we get
42:17 - where we had
42:19 - body so our body was actually so let's
42:22 - go ahead and check out our body
42:23 - our body was display flex oh is it
42:26 - yeah so it means it's only going to use
42:28 - up what it needs because this was a
42:29 - child
42:30 - of that body so this div is only this
42:33 - day of basically is not
42:34 - taking up a hundred percent of the width
42:36 - so that's why these icons are not
42:38 - specifically you know
42:39 - uh basically are not taking up the whole
42:42 - width
42:42 - or space between i guess you can say
42:45 - exactly and to fix that what we could do
42:47 - is just to prove the point we could say
42:48 - flex one
42:49 - and this should then go ahead and use
42:51 - the full width
42:53 - look at that right there see big
42:54 - difference guys look at that exactly
42:56 - so it's all about understanding how
42:58 - flexbox works that should help you now
42:59 - what we're going to do is we're not
43:00 - going to use flex
43:01 - 1 we're going to use flex 0.35 so i
43:04 - wanted to use 35
43:05 - because that's roughly how much whatsapp
43:07 - web use is yeah and you can see like
43:09 - roughly
43:09 - that sort of the the amount that we want
43:11 - to use right and then for the chat we're
43:13 - going to use up the remaining 65
43:15 - so that's why we've done this here
43:17 - almost 1.5 k likes on this video guys
43:20 - that is
43:21 - insane guys i hope you are pumped for
43:23 - this video as much as we are
43:25 - guys let's get this to 2k come on come
43:27 - on you know what to do
43:29 - you know what to do that's insane oh my
43:31 - god like
43:33 - i wonder what the watch time will be on
43:34 - this this is insane oh dude
43:36 - i'm excited to see it yes damn damn so
43:40 - now we've got
43:40 - the um the header right i want to target
43:43 - now so
43:44 - header right is referring to the
43:45 - container around those three icons so if
43:47 - i go ahead and do
43:48 - target that header right so i say target
43:51 - the header right
43:52 - like this and now what i'm going to do
43:54 - is i'm going to say display flex
43:56 - so they're already in a row so it will
43:58 - continue to be in a row
43:59 - but i'm going to do align item center
44:02 - and this should actually centralize all
44:04 - those items uh in in that container so
44:06 - there you go
44:06 - there we did done it there and then i'm
44:08 - going to do is say justify content
44:11 - space between right yes a space between
44:14 - so space
44:15 - oops space between like this and then if
44:18 - i do that
44:19 - it should i mean does that make much of
44:21 - a difference at this point no because
44:22 - it's going to be
44:23 - cramped up but if i say min width so i
44:25 - chose to basically give it a minimum
44:26 - width and i gave it a responsive
44:28 - minimum width of 10 view width so if we
44:30 - go ahead and add that now
44:32 - now it gives it and then you see the
44:34 - space between kicks in because it's
44:36 - actually now got some space to go ahead
44:37 - and do that
44:38 - now all of these buttons if you hover
44:40 - over them they're not clickable they
44:42 - don't have like a nice clickable fill
44:44 - so if you go over them they just kind of
44:46 - look like crap right
44:48 - so it's like sunny and kazi best hosting
44:51 - duel
44:51 - on youtube kazi looks different today
44:55 - right
44:56 - he looks a little bit different yeah
45:00 - doesn't have the mustache you know
45:05 - nice um so now when this you see
45:09 - those buttons on the on the the right
45:10 - hand side the icons
45:12 - if you click on that so go ahead and
45:14 - click on yeah
45:15 - yeah nothing happens right no no so that
45:18 - kind of looks rubbish right so
45:20 - what material ui goes ahead and gives us
45:23 - is like a wrapper
45:24 - and it's called icon button and what you
45:26 - can do is i can type in icon button
45:29 - like this i can import it from material
45:31 - ui
45:32 - so i've imported at the top over here
45:34 - and then what you can do is you can go
45:35 - ahead and you can wrap
45:37 - your button inside your icon inside of
45:39 - it now
45:40 - if we click the left uh the left icon
45:45 - so you see uh not that one the the
45:46 - leftovers hey look at that
45:49 - you see that guys yeah that looks very
45:51 - nice to see how it creates like that
45:52 - that uh that like yeah i like it that's
45:55 - good
45:55 - yeah it gives it like a really nice kind
45:57 - of clean feel when you do that
45:59 - it makes you feel good you know it's
46:00 - like yes i just click the button and i
46:02 - want to click i want to keep clicking
46:03 - the button
46:04 - exactly it gives you that nice ripple
46:05 - effect so i'm going to go ahead and
46:06 - surround the rest of them
46:08 - inside of that so i'm going to go ahead
46:10 - and replace this with a
46:11 - same version but everything surrounded
46:13 - inside of icon buttons and if we do that
46:15 - we can now see there we go we've got the
46:18 - three buttons and they're all clickable
46:19 - icons instead now so you can get one i
46:22 - see it boom
46:23 - boom boom so all button three are
46:24 - clickable now okay i see it cool
46:26 - yeah and i mean like that's a really
46:28 - satisfying thing
46:29 - which is super easy to achieve using
46:31 - material ui so
46:32 - really really nice little little wind
46:34 - there yeah awesome so
46:37 - what i'm going to do now is for all of
46:38 - the icons inside of that right container
46:42 - i want to actually space them out a tiny
46:44 - bit more so i'm going to go ahead and do
46:46 - this
46:46 - so i'm going to go ahead and target that
46:48 - right container but i'm also going to
46:49 - say the direct child which is the
46:51 - material ui
46:52 - icon so this is the class name that is
46:54 - gets given to them
46:55 - i want to give it a margin right of two
46:57 - view width which is a responsive
46:59 - and i want to give it a font size of 24
47:01 - pixels so if i go ahead and do that
47:04 - and you need to do a question mark
47:06 - exclamation mark important so you
47:08 - override material ui's
47:09 - font size and we do that and now we
47:12 - should be able to see
47:14 - that it says it's very subtle that
47:16 - change it was actually super super
47:17 - subtle but it did make a difference
47:19 - yeah um awesome so with that said now
47:23 - what we're gonna do is we have the we
47:26 - have that
47:27 - portion done now for the sidebar guys we
47:31 - actually have
47:32 - uh a few things so we had we've finished
47:35 - the avatar
47:36 - now we finished the header section so
47:38 - the header looks really clean right now
47:40 - yeah but we want to go ahead and do the
47:42 - search
47:43 - so the search is that search container
47:44 - underneath it so it's the next bit
47:47 - underneath so remember this bit that we
47:48 - sort of drafted out right
47:50 - right so what i'm going to do is because
47:52 - the search container
47:53 - consists of two things it has like a
47:55 - search icon so
47:56 - like a search sort of hourglass icon and
47:58 - then it has an input field
48:00 - so there's two things here so the search
48:02 - icon that we're going to use is called
48:03 - search outlined
48:04 - so it's actually this icon right here so
48:06 - the one we're talking about this is this
48:08 - search icon right here you see that guys
48:09 - right here yeah so
48:11 - exactly that yeah exactly that so i'm
48:14 - going to go ahead and do search outline
48:15 - and
48:15 - i need to import that from at the top so
48:18 - i can go ahead and do
48:19 - uh import from search outlined there we
48:22 - go
48:23 - and then what i'm going to do is i'm
48:24 - going to go ahead and do the following
48:26 - so i'm going to add an input field
48:28 - and i'm going to give a placeholder and
48:30 - the placeholder says
48:31 - oh no it's what might be called if you
48:33 - go to view
48:35 - um and click enable word wrap
48:40 - if you want on vs code right yeah you
48:43 - can go into the help and type in word
48:45 - wrap and then
48:46 - oh there it is yeah toggle wide wrap
48:51 - oh that's cool okay i like that all
48:53 - right yeah so that way we never get the
48:55 - issue of them not being able to see it
48:57 - nice oh man that that's a cool tip but
48:59 - cool
49:00 - okay right yeah that's insane what's a
49:02 - what okay
49:03 - yeah i got real excited rowan says
49:06 - sonny will you be using redux here we're
49:09 - going to be using react context api so
49:10 - stay tuned and we'll show you the
49:12 - pattern which is also applicable to
49:14 - redux so yes is the answer to your
49:16 - question
49:16 - um nice so now what we're going to do is
49:19 - we have the search
49:20 - and the input field awesome uh if i go
49:22 - ahead and save this now we should see
49:24 - that those two things pop in
49:25 - now the final one that we saw was
49:28 - actually kind of it looked a bit
49:29 - different to
49:30 - what we're going to see on the screen
49:31 - now so let's wait until that refreshes
49:35 - uh you might need to refresh uh the
49:37 - localhost
49:39 - myself yeah i got it
49:45 - oh it could be that oh actually it could
49:47 - be because all of the children are still
49:49 - loading actually it's still loading
49:51 - at the localhost oh right yeah it says
49:53 - mine's compiling still
49:54 - okay so while it does that what we can
49:56 - do is we can carry on coding so
49:58 - we have the all three of these children
49:59 - so we have the sidebar header sidebar
50:01 - search and sidebar chats right
50:03 - i'm going to go ahead and go to sidebar
50:05 - and i'm going to make this
50:06 - display flex yeah
50:10 - display flex but i don't want this to be
50:13 - i really don't want this to be in a row
50:14 - because it doesn't make sense then my
50:16 - then my sidebar would be in a row along
50:17 - the top i want to do
50:19 - flex direction column like this
50:23 - and that should actually go ahead and
50:25 - fix that for us so i'm going to go ahead
50:27 - and
50:28 - why is it still compiling that's so
50:30 - weird
50:31 - let me see command j um does it compile
50:35 - on your end
50:37 - yeah i think it's
50:41 - yeah i'll restart it there we go so the
50:43 - npm
50:44 - start
50:51 - and that should be doing it okay nice
50:54 - far
50:55 - is like learning a lot from this of
50:56 - course guys that's we're here we're here
50:58 - to teach you guys we're here
50:59 - for all you to learn so much exactly and
51:03 - guys like this is a huge
51:04 - jam packed like it is a value pack this
51:07 - one so
51:08 - thank you so much for the super chat
51:10 - looks like a lunch so much from you guys
51:12 - done with instagram clone cover 19
51:13 - tracker
51:14 - looking for wow and the content
51:15 - attention and looking forward to the
51:16 - whatsapp clone let's go
51:18 - that's what i'm talking about nice dude
51:22 - okay i think now it should be up and
51:24 - running us
51:25 - okay let's see him refresh yeah
51:29 - refresh one more time so i don't know
51:32 - it's just
51:33 - it still says starting web development
51:35 - server
51:36 - so it looks like it's not done yet okay
51:39 - so we'll carry on coding for now it
51:41 - might just be the ram or something but
51:43 - yeah what we can do is
51:44 - essentially what we have is that search
51:46 - outline hourglass right
51:47 - then we have the input the input
51:49 - placeholder and what i'm going to do is
51:50 - i'm going to surround the entire thing
51:52 - inside of something called sidebar and
51:54 - then it's going to be search
51:56 - container oops god damn it that is not
52:00 - container
52:00 - it's a search container like this right
52:03 - and i'm going to go ahead and grab
52:04 - these two boom chuck it in there and
52:06 - save it
52:08 - like that right now with that said
52:11 - what we're going to do now is go to go
52:13 - ahead and style this so right now it
52:15 - would actually look kind of horrible it
52:16 - would have a search container it would
52:18 - have a search
52:18 - hourglass and then it would have an
52:20 - input field with some nasty border
52:21 - around it
52:22 - um it's really frustrating why is that
52:24 - not i know right
52:26 - yeah because that would be it's really
52:27 - really nice react you got this react
52:30 - come on
52:30 - god damn it it says starting the
52:32 - development server
52:35 - guys drop some fire for react to start
52:37 - this developer server guys come on
52:40 - i mean if we do you reckon dude i mean
52:42 - we are almost at 1300
52:44 - holy moly and it just keeps going up
52:47 - insane guys
52:49 - yes almost whoa wait a minute it says
52:51 - compiling
52:52 - oh my god i think that's because g net
52:55 - network just dropped a donation
52:56 - i know ginabro did the whole thing you
53:00 - know she's like yo let's drop a donation
53:01 - outside localhost is like boom
53:03 - you know what all right i'm working
53:06 - guys we're four people away from
53:08 - breaking 1.3 k
53:10 - viewers insane
53:13 - yeah this is on road today dude unreal
53:17 - i think it's actually done those if you
53:18 - hit the refresh button let's try it
53:22 - come on come on you got this come on you
53:24 - can do this
53:25 - let's go hey let's go
53:29 - nice so now we have the search sidebar
53:33 - container so you can see now
53:34 - that it looks ugly so all of that yeah
53:37 - container so we have the sidebar search
53:39 - and then inside of it a sidebar search
53:41 - container
53:42 - so i'm going to go ahead and make that
53:43 - look a little bit cleaner so let's go
53:45 - ahead and do
53:46 - sidebar search like this oops
53:50 - sidebar underscore underscore search
53:53 - and then what we're going to do is say
53:55 - display flex because we want it to be
53:57 - flex i want it to be centralized so i'm
53:58 - going to say align item center
54:00 - and then i'm going to give this little
54:02 - background color right so this
54:03 - background color i believe is a
54:05 - sort of like a it's like an off gray and
54:07 - i'm going to give it a height of 39
54:09 - pixels and a padding of 10
54:11 - attempt sources so this was actually
54:13 - drafted from the whatsapp
54:15 - designs themselves so the ones that they
54:16 - did on whatsapp that's why i hadn't used
54:18 - an inspiration for
54:20 - from sorry so that's how we do that and
54:22 - then the actual container itself
54:24 - is where we want to make it look a bit
54:25 - more nicer so i'm going to go ahead and
54:27 - target the container
54:29 - and i'm going to say for this container
54:31 - i want to do display flex
54:33 - because we love display flex i'm going
54:34 - to say align item centrally
54:36 - let's go ahead and save that and you can
54:38 - see that should pull everything
54:40 - centrally there we go
54:41 - i will say the background color of the
54:43 - container should be white
54:45 - we want a width of 100 a height of 35
54:47 - pixel and our border radius of 20
54:50 - pixels which means it gives it a more
54:52 - rounded border
54:53 - right so if we go ahead and do that now
54:55 - you can see there's a white border
54:56 - around it
54:57 - and it has this this sort of like it's
54:59 - starting to look somewhat
55:00 - like a search field right but it's not
55:02 - it's almost there but it's not there yet
55:04 - yeah right so the input field we're
55:06 - going to do next
55:07 - so inside that search container target
55:10 - the input field so with this line here
55:12 - and i'm going to say give it a border
55:15 - none and a margin left of 10 pixels so
55:17 - border none and margin up to 10 pixels
55:19 - so if i do that
55:20 - we actually get rid of the input uh
55:22 - border and look at that it automatically
55:24 - starts to come together a bit more
55:26 - i like that that's so much clearer it's
55:29 - not
55:29 - so much cleaner and then we've got one
55:30 - finishing touch so now if we say
55:33 - go ahead and target the material ui icon
55:35 - so remember this is the icon
55:36 - class name that gets given by the foe
55:38 - we're going to say give it a color of
55:40 - gray only by default
55:41 - this is this is actually the class and
55:42 - it's given like if i click this
55:45 - you're talking about this one so if i
55:47 - click this inspect element
55:48 - let me see if i go to the put this at
55:50 - the bottom
55:54 - so the actual icon uh the actual icon
55:56 - itself if you inspect that little
55:58 - hourglass
55:58 - it will give you a um it will give you
56:02 - the
56:02 - oh i see where you see that guys it's a
56:04 - class class
56:06 - mg right there right here guys okay cool
56:09 - cool
56:11 - and that will basically go ahead and
56:13 - give you so we're saying target the
56:14 - material ui icon give it a padding of 10
56:16 - pixels and make it grey
56:17 - so as soon as i do that see it kind of
56:19 - just ties everything together which is
56:20 - super super nice right
56:23 - and there you go there we have like the
56:24 - search container so very small changes
56:26 - very subtle changes but
56:28 - that looks good are you kidding me solo
56:31 - changes you know
56:32 - subtle changes make a big difference
56:34 - yeah venue says the 35
56:37 - like .35 trick in flex was awesome yeah
56:39 - like we're going to show you when you
56:40 - combine that with the 65
56:42 - for the chat and you get like a
56:44 - perfectly responsive container so
56:46 - it's really going to be some cool stuff
56:48 - coming up 1.7k
56:50 - likes let's go
56:53 - sane dude insane mystery snag says i
56:56 - really appreciate this thanks a lot for
56:57 - these videos been watching a while i
56:59 - just don't like
57:00 - uh commenting okay nice dude thank you
57:02 - for watching we don't mind if you don't
57:03 - comment as long as you're here that's
57:04 - amazing yeah the most important uh
57:07 - yeah nice so the final part guys is
57:10 - the chat right so we have the sidebar
57:12 - chats underneath right
57:14 - so let's go ahead and check that out so
57:16 - we have the sidebar and now what this is
57:18 - if we go to the deployed app
57:19 - we can see all of those where it says
57:22 - add new chat
57:23 - and they clear the chats consider each
57:25 - of those things
57:26 - to be the same component so even add new
57:28 - chat surprisingly is the same component
57:29 - as clearly yeah that one yeah right here
57:32 - boom so that is all one component but
57:34 - that whole section is what we're going
57:35 - to be building now
57:36 - right so now what i'm going to go ahead
57:40 - and do is for that one i'm going to say
57:42 - um
57:43 - let's go ahead and so let's just for now
57:45 - i'm just going to say like h1 it's going
57:46 - to be this
57:47 - is an oh let's just say
57:51 - sidebar option or something sidebar chat
57:53 - yeah or something like this
57:55 - and basically we're gonna have it like
57:56 - this so say we had a few of these
57:57 - options and we go ahead and save it
58:00 - then we should see [ __ ] hamdan says
58:04 - sonny i get positive energy when i hear
58:05 - your voice
58:06 - oh thank you dude it might
58:09 - might be the british accent i guess
58:14 - i love that partially partially partial
58:17 - and the rush is just sunny the rest is
58:18 - just sunny the way it is guys sanja is
58:20 - an amazing guy like
58:21 - if you meet him in person you gotta talk
58:23 - just a great guy
58:24 - which actually i haven't mentioned
58:25 - person yet so yeah
58:28 - we haven't even met but it's guys how
58:31 - crazy is that we're like we're like
58:32 - changing like inspiring so many people
58:35 - we've never even met which is like
58:36 - mind-blowing
58:38 - so you can have an awesome team across
58:39 - the world and you can still do your
58:40 - thing which is insane yeah
58:42 - by the way surprises thank you so much
58:44 - for the 2020
58:46 - donation appreciate it thank you nice
58:50 - um so now we have so where we have
58:52 - sidebar chat
58:53 - we're going to pretty much replace the
58:54 - sidebar chat h1 tag with and
58:56 - a component which is called sidebar chat
59:00 - like this right so we're going to
59:01 - sidebar chat like this
59:03 - oops chat i'm going to go ahead and make
59:05 - that file so i'm going to make a file
59:07 - called sidebar
59:08 - chat yes dodge s
59:12 - and we should jump into that file now
59:14 - and if i do rfce
59:16 - boom we get a nice little shortcut uh
59:18 - now is this do a
59:19 - command b i think oh you just opened
59:21 - that now didn't you yeah i just
59:22 - adjusted yeah yeah yeah just so they can
59:24 - see and
59:26 - then what we're going to do is our
59:27 - default setup so we're just going to go
59:28 - ahead and create a sidebar chat.css i
59:31 - bought chat
59:34 - dot css go ahead and do this
59:39 - and here i'm going to do class name
59:43 - of sidebar sidebar
59:47 - chat like that right and i need to
59:49 - create that sidebar chat css file so
59:51 - sidebar
59:52 - chat dot css like this
59:55 - nice so now what we're going to do is
59:58 - i'm going to go ahead and
60:00 - style that so firstly the first thing i
60:02 - want to do is you see that sidebar so
60:04 - firstly
60:05 - it's freaking out because it's like
60:06 - sidebar chat is not defined so i need to
60:07 - go ahead and import that
60:09 - so i'm just going to go ahead and drop
60:10 - an import and it should work like this
60:14 - and i'm going to save it and now
60:17 - what i'm going to do um is go ahead and
60:20 - do
60:21 - so remember we made it flex one
60:24 - all right so we made it flex one so
60:28 - now what i'm gonna do is oh wow cause it
60:31 - donated forty five dollars for
60:32 - uh how does that work out
60:37 - [Laughter]
60:39 - i've been saying cosby thank you
60:42 - thank you dude let's go just want to say
60:44 - i love you all so much we i hope
60:46 - we are helping build the best developer
60:48 - community on the planet
60:49 - damn right bro damn right bro love you
60:51 - too bro
60:52 - seriously i love you too bro exactly
60:54 - this is insane
60:57 - right so now it's saying expected and
60:59 - objects let's go ahead and check what's
61:00 - going on here so it says sidebar chat
61:02 - if i go ahead and open sidebar chat it's
61:04 - because right now we actually haven't
61:05 - got anything inside of it so if i go
61:07 - ahead and do this
61:07 - and say hey you should see hey
61:11 - pop up inside of the sidebar chat
61:14 - there we go so what i'm going to do now
61:16 - is i'm going to go ahead and get rid of
61:18 - these okay and i'm going to style the
61:20 - sidebar chats here so
61:24 - i'm going to go ahead and do sidebar
61:26 - chat oh no sorry sidebar.css i'm going
61:28 - to go here
61:28 - and this is something cool guys so if i
61:31 - do the following so if i say
61:33 - let's just give it a background color of
61:34 - blue so it's super obvious about what
61:36 - we're about to do right now
61:38 - so if i go ahead and do like this right
61:41 - so here we can see that that's only
61:44 - using up like
61:45 - what it needs to because it's flex the
61:47 - direction is column right
61:48 - now what i'm going to do is i'm going to
61:50 - say flex 1 and check out what it does it
61:52 - uses up all the rest of the space
61:55 - which is awesome and so that's because
61:58 - it's we're using display and if are we
62:00 - using flex direction column or just flux
62:02 - direction row
62:04 - that's flex direction column gotcha yeah
62:06 - yeah exactly yes
62:07 - so the flex one would be in a vertical
62:09 - direction
62:10 - and then what we're going to do is so in
62:12 - the demo we saw some things overflowing
62:14 - so to fix that we can do overflow
62:16 - scroll like that right and that will
62:18 - actually go ahead and fix that
62:19 - if we have a flow if we have something
62:21 - which is overflowing um nice
62:23 - so what we can do now is we can go ahead
62:25 - and do sidebar chat so
62:27 - let's go ahead and let's just pop like a
62:28 - few of these on there so we can sort of
62:30 - exaggerate what's going on and also why
62:32 - we are definitely not going to leave
62:33 - that that color so let's go change that
62:35 - back to
62:36 - uh white right because the sidebar is
62:39 - white
62:40 - there we go nice and you can see guys
62:43 - like like it's already looking very
62:44 - clean like
62:45 - you've got like a somewhat it's insane
62:48 - honestly guys
62:49 - what are you thinking so what are you
62:50 - thinking so far like who's who's i mean
62:52 - who's excited to just
62:53 - to build it i mean we're so close to
62:56 - actually having to look
62:57 - just like whatsapp clone insane yeah
63:01 - it's insane
63:05 - yeah it's taken i think well just like
63:06 - uh just under an hour right
63:08 - we're getting there pretty quick yeah
63:10 - and it took what's up how many years to
63:11 - build their app but it takes us how much
63:13 - what just one hour exactly one hour and
63:16 - lots and lots of coffee
63:18 - yeah so now
63:22 - inside of sidebar chat so sidebar chat
63:25 - dot js
63:26 - now what we're gonna do inside of here
63:28 - guys is we are going to
63:30 - create the following so inside of
63:32 - sidebar chat i have a few things i have
63:34 - an avatar
63:35 - right and i'm going to show you guys a
63:37 - really nice little trick inside of here
63:39 - so right now rather than sort of
63:40 - i didn't want to show you guys like so
63:42 - we've done plenty of stuff when it comes
63:44 - to
63:44 - having a url which shows the avatar we
63:47 - have we have that in this app as well
63:48 - but i want to show you something else
63:49 - and it's kind of a fun little trick that
63:51 - i did
63:52 - and it's basically we're using an
63:54 - endpoint which gives you a random
63:56 - avatar right so it gives you like a
63:58 - random face or random head which is kind
63:59 - of cool
64:00 - so i'm going to show you guys how to do
64:01 - that so what we're going to do is here
64:03 - we have avatar so
64:05 - let's go ahead and write avatar like
64:07 - this
64:08 - boom boom boom and i need to empower at
64:11 - the top so
64:12 - import avatar for material ui core like
64:15 - this
64:15 - save it and what we should see now is we
64:17 - should see avatars popping in so we
64:19 - should see a bunch of avatars popping up
64:20 - nice
64:21 - okay nice there we go and then what
64:23 - we're gonna have is we're gonna have an
64:24 - info div
64:25 - so i'm gonna show you that that cool
64:27 - little thing afterwards we say div
64:28 - sidebar chat sidebar chat uh cyborg chat
64:32 - underscore underscore
64:33 - info like this and then inside of here
64:36 - we're gonna have a h2
64:37 - and the h2 is gonna be the name or the
64:39 - room name so in this case it's going to
64:40 - just say room names for now
64:42 - right because remember our whatsapp is
64:44 - slightly we just we all edit it a little
64:45 - bit so
64:46 - we've done it for demonstrational
64:47 - purposes because we wanted the balance
64:49 - of everything and so something that you
64:50 - guys could demo really nicely to an
64:52 - employer or something so
64:53 - we've got a room name here and then here
64:55 - we're going to have like the the last
64:56 - message
64:57 - that was sent on that room is actually
64:59 - what comes up here so we can just say
65:01 - last
65:02 - message dot dot dot right and if i save
65:05 - that
65:05 - we should see the following so we should
65:07 - see something pop in now
65:09 - just go ahead and check there we go room
65:10 - name last message awesome
65:12 - uh and then we're also gonna have okay
65:15 - so that will do for now
65:17 - and basically guys this is really cool
65:19 - right so i actually found this not long
65:20 - ago
65:21 - and basically what you can do is if i do
65:24 - this if i write source
65:25 - equals so for that url i found a really
65:29 - neat little website called http
65:31 - avatars.spare.com api human
65:33 - right so oh uh not as your word wrap
65:37 - doesn't seem to be
65:38 - on if you go too you don't know why i
65:40 - got it i got it yeah
65:41 - there we go yes there it goes forward
65:42 - slash and then basically
65:45 - what you do is you pass in so you can
65:47 - pass in something here to human and this
65:49 - could be human it could be like
65:50 - an animal face or something like that
65:52 - but you could also do
65:53 - if you pass in like a random string at
65:56 - the end of this guys
65:57 - it generates something based on that
65:59 - random string so now if we go back to
66:01 - the um the react app oh
66:05 - right there just like that sorry i just
66:06 - i was looking at the avatar stuff that's
66:09 - cool look at this guys
66:10 - it literally says how to use it you can
66:11 - literally just pass in anything and
66:13 - thank you oh that looks so good
66:15 - it's cool right so it's called dice for
66:17 - avatars and basically now if i go ahead
66:19 - and pass in a random string and save it
66:21 - that seed so this random string at the
66:23 - end we call it a seed
66:25 - and basically so here if i go ahead and
66:27 - do like one two three
66:30 - save and it should if we refresh
66:36 - um okay interesting so we've got source
66:39 - equals
66:40 - let's go ahead and see why that's
66:41 - happening so
66:43 - oh yeah so it should be at the end it
66:46 - should be dot svg at the end
66:48 - oh got it got it okay so this would be
66:50 - random strings or like some random
66:52 - string dot svg
66:53 - and then what this will do is and it's
66:55 - also a vector icon so it's going to
66:57 - scale really well so
66:58 - you can do that now look at that guys
66:59 - and if i change this a
67:03 - yeah like look at that if i change this
67:04 - now it's gonna be a different avatar
67:07 - so let's go ahead and uh oh that's so
67:09 - cool
67:10 - it's nice right so this is like a little
67:12 - neat little trick that we were going to
67:14 - add in here just for some fun
67:15 - because we like to keep these things
67:16 - quirky you know show you guys some
67:17 - little tricks
67:18 - so now what we're going to do is in
67:20 - order to get a random string every time
67:22 - for that i'm going to go ahead and use a
67:24 - use effect
67:25 - so use effect is a hook inside of react
67:27 - and basically what it does is
67:29 - it will run some code when the component
67:31 - loads right so run some code when the
67:32 - component loads
67:34 - and what i'm going to do here is i'm
67:36 - going to call this so this little
67:38 - string over here is something known as a
67:40 - seed right so this is something known as
67:42 - a seed
67:43 - so what i can do here is i can pretty
67:45 - much wrap this in some string
67:47 - concatenation so i can go ahead and do
67:49 - the following i could say boom
67:51 - boom boom like this and then i want to
67:54 - essentially have some variable
67:56 - here called seed right so if i go here
67:59 - and i use some state so
68:00 - uh state inside of react is just a way
68:03 - of basically writing a variable so here
68:05 - we have seed
68:06 - set seed is sort of how we modify the
68:09 - value
68:10 - um and then you have to pass in
68:12 - something we actually have to like
68:13 - there's no way we're just like you just
68:15 - automatically get some random one
68:17 - no yeah it's a bit strange i mean like i
68:19 - think it's because
68:21 - that way if you had like a user id or
68:24 - like something like that it would always
68:25 - give you the same
68:26 - you see what i mean it will always give
68:27 - you the same one yeah
68:29 - all right so what we can do now is we
68:31 - can go here and then for the use effect
68:33 - i can do is i have all i've done very
68:34 - simply here is i've just made a
68:36 - a math.random so it's going to generate
68:39 - a number between 0 and 5000
68:41 - so this is uh the code so it's going to
68:44 - do this and basically what i'm doing
68:45 - here guys is
68:46 - very simple i'm pretty much just doing
68:49 - set
68:49 - speed this and what this will do is
68:52 - whenever
68:52 - the sidebar chat loads it will calculate
68:55 - some random one
68:57 - and it will basically go ahead and use
68:58 - that for the icon so
69:00 - this is an example of just it's going to
69:02 - generate random ones for every for the
69:03 - room every time
69:05 - i need to go ahead and import you state
69:08 - there you go arjun thanks so much for
69:11 - the donation
69:12 - appreciate it hey let's go yeah
69:15 - nice and now you can see that hey we got
69:17 - we got random avatars for every room
69:20 - right where oh yeah we do we do look at
69:24 - that
69:25 - yeah nice his girlfriend is already
69:29 - giving him too much love
69:31 - it's so funny we have people like hey
69:33 - i'm a bit i'm a fan of i'm the number
69:35 - one fan of kazi i'm not a number one
69:36 - fan of sunny i'm the number four one fan
69:38 - of nas it's like so many people it's
69:41 - amazing man
69:42 - i love the love that we have in the
69:44 - specific in these comments man
69:46 - insane stuff hey
69:49 - nice okay i can see everyone's saying
69:51 - i'm put i'm gonna find i'm gonna find
69:53 - somebody oh man it's like i'm the number
69:56 - one friend of sonny
69:58 - that's my girl
70:02 - nice so now let's go ahead and carry on
70:05 - so we've got the seed
70:06 - which is generated randomly which is why
70:08 - even if we're refreshed we'll get like a
70:09 - different
70:10 - um avatar every time so just kind of a
70:12 - little cool trick for this
70:13 - demonstration and yes i know it's going
70:15 - to be different every time it was a bit
70:16 - of fun
70:17 - that's why we did that so now what we're
70:20 - going to do
70:21 - is we are actually going to go ahead and
70:24 - make this so that it accepts some props
70:27 - right
70:27 - so we want this to actually accept some
70:29 - props so at this point we have the room
70:31 - name and last message
70:32 - actually for now we don't need to worry
70:33 - about that we pretty much have it let's
70:34 - go ahead and style this
70:36 - so it looks nice so i'm going to go
70:38 - ahead and we've got sidebar info
70:39 - there we go uh yep so nice so i'm going
70:42 - to do is go ahead and decide by chat.css
70:46 - awesome and i'm going to go ahead and
70:48 - start this now so sidebar.chat and what
70:50 - i'm going to do is first i'm going to
70:51 - say
70:52 - for sidebar chat i want it to be display
70:56 - flex so
70:58 - display flex like this and i want to say
71:01 - uh padding of 20 pixels right so it's
71:04 - padding at 20 pixels
71:06 - and now we should see everything goes
71:08 - into a row and it's got its own little
71:10 - bit of padding right
71:11 - now i want the background color to be i
71:14 - want the cursor to be a pointer
71:16 - so i want the cursor to be i have a
71:17 - little pointer type which means when you
71:18 - hover over it should be a little finger
71:20 - and i want a border underneath all of
71:22 - them to be
71:24 - uh to be a little sort of gray right so
71:25 - let's go ahead and add that in
71:27 - and we should see now that every single
71:30 - one will have a little
71:32 - border underneath it hopefully so
71:36 - look at that you guys see that you guys
71:37 - see that right here let me see that
71:39 - right here it's like it's so
71:40 - it's so minor but you can see it right
71:42 - here
71:44 - hold on let me know i did add a border
71:45 - right underneath it
71:47 - just it's like it's like very my hair
71:48 - i'll do i'll do like a command plus
71:50 - something they'll do
71:52 - you can see right here okay yeah right
71:55 - there hey that looks so
71:57 - crisp and awesome nice
72:01 - nice so now what we're going to do is i
72:02 - want it so that when you hover over it
72:05 - it gives it a different color so we can
72:06 - use a hover property here so we can say
72:08 - when you hover give it a background
72:09 - color
72:10 - and this is like the slide this is the
72:11 - gray color that they give you
72:13 - um when you hover over something inside
72:16 - of
72:17 - uh react so inside of whatsapp sorry
72:20 - so now if you hover over those uh fields
72:23 - nice
72:24 - oh look at that oh that looks so good oh
72:27 - i just want to keep covering them nice
72:30 - nice yeah i like that that's really cool
72:33 - yeah so now oh why is mine i mean is my
72:36 - auto save on i think it is
72:37 - once a preference is because it keeps
72:39 - basically saving i think oh no it's not
72:42 - it's not what isn't that supposed to be
72:43 - saving i just keep saying compiling
72:45 - compiling compiling compiling
72:49 - you can't handle the amount of energy
72:51 - that we're just giving here man
72:53 - i know right it just needs to keep it
72:55 - man somebody goes sunny looks like ross
72:58 - from
72:58 - friends honestly maybe
73:02 - you oh my god i've been told like i'm
73:06 - kind of like ross from friends but
73:08 - that's so funny
73:09 - oh man and you kind of speak like him
73:11 - like him too i mean without the british
73:13 - accent but
73:14 - um you know
73:17 - yeah the voice just the voice is deep
73:19 - you know what i mean
73:20 - that's so funny even mama because he
73:23 - behaves like ross
73:24 - trust me that's so funny
73:28 - that's insane oh man shots are being
73:32 - fired
73:33 - awesome so now what we're gonna do
73:36 - is we have four we're gonna start with
73:38 - the h2 tag right so the h2 tag
73:41 - you don't want it to be looking like
73:42 - that so i'm gonna say inside of the
73:43 - sidebar info
73:45 - so sidebar chat info i'm going to target
73:48 - the h2
73:49 - so target the h2
73:53 - and i'm going to go ahead and do font
73:56 - size of 16 and margin bottom of 8 pixels
73:58 - so it gives you a little bit more room
74:00 - to breathe right
74:03 - and then we save it and now we should
74:06 - see okay i gave it a little bit more
74:07 - space
74:08 - and then what i'm going to say is the
74:10 - actual sidebar info so the stuff that
74:11 - has a text inside of it give it a margin
74:13 - left to 15 and we'll see it push away
74:15 - from the uh the text so
74:19 - now if we do that you can see now it's
74:20 - pushed away from text so it gives it a
74:21 - nice little fill
74:23 - and we did show when you hover over it
74:25 - right
74:26 - yes we did so yeah right here as i have
74:28 - already right here oh right there
74:29 - see that awesome nice so
74:32 - now what we're gonna do is uh
74:36 - even even frank's jumped in
74:41 - hey someone has my back bojack kate says
74:44 - that explains why he's so cool
74:45 - i think west is cool dude
74:47 - [Laughter]
74:49 - oh man that's hilarious it's so funny
74:53 - okay that's dope so now what we're going
74:56 - to do is we're going to have it so that
74:58 - um we actually can we can we can
75:02 - customize it so i want it so that if i
75:04 - pass in a prop called add new chat
75:06 - right this sidebar component is going to
75:08 - be reusable so
75:10 - here's where we pass in the props over
75:11 - here right
75:13 - um someone goes nas you're joey
75:17 - wait what really
75:20 - and you know i can see it a little bit i
75:22 - can see what
75:24 - all right fine okay i can i mean it's
75:26 - not bad it's not bad i like it okay okay
75:29 - here we go add new chat like this so now
75:31 - i'm going to pass in a prop called add
75:33 - new chat when we pass this
75:34 - in i'm going to conditionally render
75:36 - this component so it looks slightly
75:37 - different but keep some of this styling
75:39 - right
75:39 - so what i'm going to do is here for the
75:42 - first one i'm going to say this is an
75:43 - add new chat
75:44 - sidebar right so i'll add a new room add
75:46 - new chat that's the sort of
75:47 - functionality that we're going for here
75:48 - and what i'm going to say is
75:50 - before we return our jsx i'm going to
75:52 - say if it's not the add new chat so if
75:55 - it's not the add new chat then i want it
75:57 - to basically show
75:58 - the normal stuff otherwise
76:03 - render out the following and i'm going
76:05 - to basically do
76:06 - this i'm going to have the following i'm
76:08 - going to say render out a div
76:10 - with a class name of sidebar chat so we
76:12 - want to keep the styling the same
76:13 - and when we click it i want to execute
76:14 - some function called create chat which
76:16 - we haven't covered up at this point
76:18 - and it's just going to have h2 inside of
76:19 - it saying add new chat right so at this
76:21 - point if i go ahead and just create a
76:22 - function
76:23 - called const create chat
76:27 - this and then basically what i want to
76:29 - do is just at this point just say
76:31 - uh we can just leave that blank for now
76:33 - so if i save that
76:35 - we should come back and see so let's
76:39 - refresh low cost
76:44 - refreshing uh there we go
76:48 - you see add new chat right yep
76:52 - oh right there wait
76:55 - where you see on top of where it says
76:57 - room name
76:58 - oh right there there a new chat okay
77:00 - okay cool cool you see it's still got
77:02 - that um it's still got that stuff right
77:04 - there yeah
77:05 - yeah yeah add your chat rooms cool yeah
77:07 - and it fits in line with sound we're
77:09 - just reusing a prop
77:10 - yeah so we're just raising a prop here
77:12 - so now what we do is when we click that
77:14 - create chat
77:14 - i want a pop-up to come up which says um
77:18 - please enter a name for the chat so in
77:20 - order to do that it's very simple we
77:21 - just say const
77:22 - room name so i'm going to store the
77:23 - response
77:25 - in a variable called room name and then
77:26 - here i'm going to say
77:29 - prompt please enter a name for chat and
77:30 - then what i want to do is i'm going to
77:31 - say if
77:32 - yo we broke 2 000
77:35 - likes guys my god dude
77:39 - insane stuff thank you so much we love
77:42 - you all
77:43 - love the support let's keep this going
77:45 - um yeah
77:46 - let's get it to three let's get to 3k
77:49 - let's go to three dude let's go to 3k
77:52 - are you guys ready to get a 3k yeah get
77:54 - your family on board get everyone get
77:56 - yourself get your brother get your
77:58 - sister get your friends
78:00 - you know get bring your friends over or
78:01 - be like okay yeah yo sit down let
78:02 - everybody sit down let's watch sunny
78:04 - and nas kanji said hit the air horns
78:08 - i think i want to hold on but for some
78:10 - reason my stuff is not working my sound
78:12 - effects are not working i don't know why
78:14 - i keep it
78:20 - here wait wait well now before we go
78:24 - i got the perfect gift for this ready
78:26 - ready for this
78:30 - oh my god wait wait as you said that
78:34 - carol ramirez just said keep it up and
78:36 - he dropped 10 u.s dollars dude
78:39 - no way guys by the way i know you get
78:41 - you can't you can't see you sonny but
78:43 - let's just say there's a really funny
78:44 - gif right now
78:45 - playing that that that yeah
78:49 - oh here actually i'll show i'll show you
78:52 - the gif here here's the here
78:54 - here's the gift trust me right here oh
78:56 - nice
79:00 - this is the gift all right guys we just
79:04 - hit officially over a hundred dollars in
79:06 - donations that's insane that's insane so
79:08 - much
79:08 - guys thank you so much all right let's
79:11 - keep going strong guys so now we're
79:12 - saying
79:13 - if we click that i hit that add new chat
79:16 - uh
79:17 - uh button what i want to do is i'm going
79:19 - to prompt to get room name
79:20 - and then if only if they entered
79:22 - something in the room name
79:23 - i want to do some clever stuff here so
79:25 - do some clever stuff in the database
79:26 - here
79:27 - all right so we'll come back to this
79:28 - point uh here so i'm just leaving a
79:30 - little note here do some
79:31 - clever database stuff here okay
79:35 - nice so now if i go ahead and hit save
79:37 - on that now we should see
79:39 - uh so nice i want you to click on add
79:40 - new chat
79:44 - okay i see cool you see yeah so it's
79:47 - awesome
79:48 - let's go ahead and type anything it
79:50 - won't actually do anything it will just
79:52 - close but we actually capture that
79:53 - variable inside of
79:55 - room name so dancer dance room exactly
79:59 - all right and we basically and
80:00 - eventually the goal is that i'll pop in
80:02 - and say dance
80:03 - right okay so nice so with that said
80:07 - i think what we're going to do is we're
80:08 - going to sort of break this up into
80:09 - different components but now
80:11 - let's go ahead and add the chat so let's
80:14 - add the chat let's get that started
80:15 - and then we can start wiring everything
80:17 - up so it starts to work in the fashion
80:19 - that we expect right cool
80:20 - cool so inside of app.js what we're
80:23 - going to do is just go back to our sort
80:24 - of notes and here we've got the chat
80:26 - so let's go ahead and create the chat
80:29 - right so chat
80:30 - like this boom go ahead and remove ours
80:32 - and you see guys this is clean it's
80:34 - really nice way of doing that so
80:36 - really handy sort of thing to get used
80:37 - to i'm going to create a chat.js
80:39 - component
80:40 - and i'm doing rfce boom
80:43 - like this and let's go ahead and do a
80:45 - quick set up so we say class name
80:47 - equals chat and then here i'm going to
80:50 - say oops class name equals chat
80:52 - and then we're going to say import chat
80:55 - dot css like this save and there we go
81:00 - and now what i'm going to do is this
81:02 - chat is actually going to render out
81:04 - oh do that create oh no i didn't create
81:06 - a chat dot css so chat dot css
81:10 - chat dot css boom like that i'm going to
81:13 - go ahead and save that
81:14 - and inside of here now what we're going
81:16 - to do guys is i'm going to say chad.css
81:19 - and remember guys i actually spoke
81:22 - earlier about how
81:23 - we wanted to we used the 35 so 0.35 to
81:26 - get
81:27 - uh 35 of the of the screen on
81:30 - on the using that we wanted the sidebar
81:33 - to use 35 center screen but for the
81:34 - right side the chat
81:36 - i want the chat to go ahead and use flex
81:38 - 0.65
81:40 - and what this will do is we'll use up
81:41 - the remaining 65 of the screen so to
81:43 - prove that this works
81:44 - we can go ahead and do background color
81:47 - uh let's just say blue
81:50 - save it and i can save this one
81:54 - and if i save this one as well so it's
81:57 - pulling
81:57 - in so the chat is not behind
82:03 - the chat yep so i need to import
82:06 - yeah yeah so you can see right here guys
82:10 - you just import the chat
82:11 - boom right here nice and then here's the
82:14 - chat so that's what we're working on
82:15 - we're working on which is
82:17 - this specific section right here guys
82:19 - exactly
82:20 - and can you see now that it's using up
82:22 - that perfect
82:23 - 65 in the screen right so the blue is
82:25 - actually really nice to visualize that
82:27 - i like that that's really clean yeah
82:29 - yeah really really nice way of showing
82:31 - that right
82:31 - now what we can do is we actually want
82:34 - to sort of go ahead and make this look a
82:36 - bit nicer so inside of chat
82:37 - so i'm going to just double check one
82:38 - note so we've got inside of chat
82:41 - we have a few sections so again guys
82:43 - what we've done before we're going to do
82:45 - the same here so we've got
82:46 - we're going to have a three divs the
82:47 - first one's gonna say div and it's gonna
82:49 - say
82:49 - chat header right so this is going to be
82:51 - the top section of the chat
82:53 - inside of here we're going to have what
82:55 - what the chat room was
82:56 - um when somebody was last seen those
82:59 - icons that we see
83:00 - all of that stuff on the top then we're
83:02 - going to have the chat
83:03 - body right then we're going to have the
83:05 - chat body now the chat body
83:07 - is pretty self-explanatory it's all of
83:09 - that stuff in the middle
83:10 - right it's all the stuff where the
83:12 - actual chat exists
83:14 - right and then we're going to have the
83:16 - chat footer
83:18 - right so dev chat
83:21 - footer yeah right
83:24 - now the chat four is where we're gonna
83:25 - have the input field and all of that
83:27 - stuff and that's where that's gonna live
83:29 - so now that we have that in place let's
83:31 - go ahead and start filling this out a
83:33 - bit so let's focus
83:34 - solemnly on the chat header for now and
83:37 - what we're going to do with the chat how
83:38 - do we see an avatar so let's go ahead
83:39 - and pop an avatar inside of there
83:41 - i need to import it at the top so i went
83:43 - and did that at the top
83:44 - i'm going to do this and save so
83:46 - everything gets pretty fired and let's
83:48 - go into our local host
83:52 - oh my bad hold on i'll show them some
83:54 - stuff
83:56 - right here okay yep and you can see
83:58 - we've got that little avatar right
84:01 - yep right there i see it awesome right
84:04 - so i'm gonna go ahead and do that
84:05 - uh and then what i'm gonna do next is
84:09 - actually go and say uh so i actually
84:11 - used
84:12 - the same the same seed trick here to get
84:14 - like everything sort of up and running
84:16 - so i'm going to quickly implement that
84:17 - so at the top i'm just going to do
84:19 - um so it's basically the same thing we
84:22 - did last time so we have the seed
84:24 - and then i said i made a use effect
84:26 - which basically ran with the component
84:28 - loads
84:29 - and then inside the avatar what i did is
84:31 - set the source
84:33 - to basically be one of those randomly
84:35 - generated
84:36 - urls okay because what we're doing is
84:38 - here i just want it to be i didn't want
84:39 - to spend too much time on this portion
84:40 - of it
84:41 - i just wanted it to be very simple so
84:43 - they showed uh
84:44 - an advert for um
84:47 - this part of it so i'm gonna go ahead
84:49 - and import so i'm gonna do this use
84:50 - state and use effect and guys you can
84:53 - connect this all to the db that part of
84:55 - it and
84:55 - pull those in but for this i'm just
84:57 - showing you so that is it more simple
84:59 - so we can go ahead and do that and now
85:01 - we can see we've got an avatar in there
85:02 - right
85:03 - that's much nicer than looking at that
85:05 - boring one um
85:07 - so now what we can do is we've got the
85:09 - avatar and i'm going to have a
85:11 - another div inside of the header and
85:14 - this div is going to be called the div
85:16 - header uh info so header chat
85:20 - underscore underscore header info and
85:22 - this is where the text lives
85:24 - so inside of i'm going to have h3 and
85:26 - this is gonna be the room name so i'm
85:27 - just gonna say room name for now
85:28 - and underneath that i'm gonna have a p
85:30 - tag and this is gonna say something like
85:32 - last scene last scene
85:36 - uh blah blah blah it's gonna have some
85:39 - kind of date there last scene
85:40 - let's just go ahead and save that
85:44 - and we should see at the top now it
85:46 - should pop in so um
85:47 - you can already see it's kind of getting
85:48 - hard to see with that blue background so
85:49 - i'm gonna go ahead and
85:50 - remove and there we go so now we can see
85:53 - it very
85:54 - clearly all right so we've got the last
85:56 - scene
85:57 - and then what we're going to do is on
85:58 - the right side because we've got loads
86:00 - of icons grouped up on the right
86:02 - remember we've always get we want to get
86:03 - into this habit of constantly having
86:05 - everything
86:06 - inside of um inside of its own container
86:09 - so in this case what i'm going to do is
86:10 - create a div
86:11 - i'm going to say header right right so
86:14 - chat sorry
86:15 - chat header right so header right
86:18 - oops like this
86:21 - right and this this again has three
86:23 - icons it has
86:24 - uh a search outlined icon so it has a
86:27 - search outline an attach file and a more
86:29 - so three dots
86:30 - and what i'm going to do is i'm actually
86:31 - going to go ahead and wrap those like we
86:33 - did earlier inside of icon buttons so
86:36 - inside of these icon button
86:37 - um containers and what that did remember
86:40 - if we saw if we remember from earlier
86:42 - that actually just went ahead and made
86:45 - it clickable
86:46 - so that gave us that nice ripply effect
86:48 - so what i can do at the top is i can go
86:49 - ahead
86:50 - and import those things save the file
86:53 - and what we can now see is
86:56 - you should have three icons okay and
86:59 - they're all clickable
87:00 - right okay okay cool so that's awesome
87:03 - so we can see those things right there
87:05 - and that's really nice
87:06 - um but we it's not still not looking the
87:09 - way we
87:10 - kind of want this to look so what i'm
87:13 - going to do is i'm going to go ahead and
87:14 - style
87:14 - the chat header right so i'm gonna make
87:17 - the chat header look a lot nicer so
87:19 - to get that working let's go ahead and
87:22 - open up our chat.css and i'm gonna go
87:24 - ahead and say
87:25 - the following i'm gonna say chat header
87:28 - and
87:28 - i'm gonna give it a padding of 20 pixels
87:30 - firstly because
87:31 - nothing likes to touch the sides so 20
87:34 - pixels i'm going to give it a display
87:36 - flex so that way it's not block and
87:37 - everything's stacking up on top of each
87:39 - other we want to be
87:40 - in a horizontal row like that
87:44 - then i'm going to go ahead and say align
87:46 - the item centrally
87:47 - in case they're off center and i'm going
87:50 - to give a border bottom of one pixel and
87:52 - it's a light gray color so let's go
87:53 - ahead and go ahead and add that
87:55 - and we can see there we go it added that
87:57 - light grey right so again you can see
87:59 - it's things start to come together quite
88:00 - nicely yeah then the header info
88:03 - so i want the header info to actually go
88:05 - ahead and use up most of that room there
88:07 - so i'm going to
88:08 - go ahead and say flex 1 and give a
88:10 - padding left of 20 pixels so let's go
88:12 - ahead and do that
88:13 - and you can see now that goes ahead and
88:15 - pushes the rest of the stuff
88:17 - away right header and if we're talking
88:20 - about this one
88:21 - specifically right so header info is
88:24 - where we say room name and last cena
88:26 - that's the
88:27 - this one specifically okay from here got
88:30 - it got it
88:31 - we changed that to be flex one so it
88:33 - basically becomes the boss and it takes
88:34 - up all the room
88:36 - got it it's the boss now i'm the boss
88:38 - now
88:39 - so i'm gonna take up the room
88:43 - that's what that div is saying
88:47 - oh my god we've got 2 200 likes on this
88:49 - video so far holy crap
88:51 - holy moly guys guys come on we can get
88:53 - it to 3k
88:55 - you got this yeah we can get that to 3k
88:57 - we can definitely get that
88:58 - 3k you'll yell it out the window if you
89:00 - if you have to you know
89:01 - exactly just tell the entire street
89:04 - exactly
89:05 - so now we're going to target the h3 here
89:08 - so we're going to say h3 and we're gonna
89:10 - go ahead and do margin bottom of three
89:11 - pixels and a font weight of 500 so
89:13 - that's that goes in line with what
89:15 - whatsapp have
89:16 - um so let's go and do that and then boom
89:18 - it gives it a less bolder
89:19 - bolder look and then we're going to go
89:20 - ahead and do the same thing for the p
89:22 - tag
89:22 - but i'm just changing the color of the p
89:24 - tag to be gray so it says last scene
89:25 - that should now turn gray
89:27 - that's nice and then for the header
89:29 - right what i'm going to go ahead and do
89:30 - is say display flex
89:32 - so all of those icons are going to be in
89:34 - a row i mean they look like they're in a
89:35 - row right now but let's go ahead and
89:36 - ensure that they stay correctly
89:38 - and we're going to give it a min width
89:39 - of 100 pixels uh let's go ahead and do
89:42 - that
89:43 - and you can't see the difference when it
89:44 - gets smaller it's actually kind of hard
89:46 - to actually so it will show you that
89:47 - when it gets to smaller so
89:49 - without like many ways i okay i see what
89:52 - you mean okay
89:53 - yeah so give it a minimum width
89:57 - there we go nice and you see i really do
90:00 - love that place items
90:02 - so you see that that it just set
90:05 - everything up so when i see that like
90:08 - what are you talking about what are you
90:09 - talking about place items
90:11 - so remember the actual uh the sort of
90:13 - amount like the whole card that the app
90:15 - is essentially sitting on
90:16 - remember we use that display grid trick
90:18 - in the beginning yeah
90:19 - yeah it's just it's such a nice trick
90:21 - because even when you make it bigger
90:23 - everything kind of just you know resizes
90:26 - and yeah it's like it's like
90:27 - it's almost like mobile friendly and
90:29 - it's that stuff friendly yeah
90:30 - yeah i agree yeah like that combined
90:34 - with flexbox you just get some
90:35 - just amazing responsiveness what's up
90:38 - you got a competition right here
90:41 - i know right it's crazy so now we have
90:45 - the header right and then what we're
90:47 - going to do now is go ahead and create
90:48 - the body
90:49 - okay so the body is a bit more
90:51 - interesting it's one more where we're
90:53 - going to sort of get a bit nitty gritty
90:55 - with this sort of a little trick i'm
90:56 - going to show you guys so
90:58 - for the body let's go to
91:01 - chat buddy and what i'm going to do now
91:04 - is i'm going to go ahead and say
91:08 - so i'm going to actually start the chat
91:10 - body first before i add anything inside
91:11 - of it so i'm going to go here
91:13 - i'm going to say travel tools thanks so
91:16 - much
91:16 - says it says love your teaching sonny
91:19 - thank you so much dude thank you so much
91:22 - we appreciate that i appreciate you
91:23 - watching and being here so thank you so
91:25 - much
91:26 - um yeah so now we have the chat
91:30 - body where am i looking where am i
91:31 - looking looking chat buddy here we go
91:33 - so the chat body now what i'm gonna do
91:36 - is every child so we have the
91:38 - those three sections that we basically
91:39 - added the chat header the body the
91:41 - footer
91:41 - i'm gonna make the entire container
91:43 - follow the following follow the
91:45 - flex rule so it's going to say display
91:47 - flex and i want it to not be in
91:49 - a row because if i do this now you'll
91:51 - see that everything will kind of jump
91:52 - into a row i made there because it jumps
91:54 - into a weird sort of state of mind
91:55 - so you're going to do that
92:02 - yeah and that will do it and then chat
92:04 - body what i'm going to say
92:05 - is the chat body i'm going to give this
92:07 - this is the background image of whatsapp
92:09 - so
92:10 - i'm going to go ahead and pop this in
92:11 - here i'm making this
92:13 - background image uh you might need to do
92:15 - word wrap nars for this
92:17 - i'm doing it so for some reason it keeps
92:19 - it keeps toggling and untoggling i don't
92:21 - understand why
92:22 - it's like yeah i think it might be a
92:24 - case of setting it inside of system set
92:26 - preferences
92:27 - but yeah it might be all right yeah so
92:30 - if i go ahead and save that what we
92:32 - should do now is
92:33 - it actually has set the container to be
92:36 - the
92:36 - the correct size but the containers
92:38 - right now is flex so it's not going to
92:39 - use up any space so if i go ahead and do
92:41 - flex 1
92:42 - it will take up the most space it can
92:45 - and we should see it at this point
92:46 - oh look at that nice right
92:50 - yeah yeah that little nice background
92:52 - right here and where did you get this
92:53 - background by the way
92:55 - uh that was just off google images it's
92:56 - the whatsapp default background so
92:58 - whenever you sign up to whatsapp
93:00 - you have this like quirky little
93:01 - background in there on it so that's the
93:03 - one that they have
93:04 - nice nice nice ad beautiful yeah here we
93:06 - have background repeat background
93:08 - position center padding of 30 pixels and
93:10 - overflow of scroll so i'm going to go
93:12 - ahead and add all of those things
93:14 - and this basically means that if it ever
93:15 - runs out it says on a huge screen size
93:17 - it's just going to repeat the image
93:19 - because it's that kind of background
93:20 - image
93:21 - you don't really care if that gets
93:22 - repeated it feels like some kind of
93:24 - picture then you don't want to repeat it
93:25 - obviously you want to scale it
93:27 - um and we want to position it center
93:29 - padding of 30 pixels there anything
93:31 - inside of it isn't going to touch the
93:32 - sides
93:33 - an overflow of 30 which overflow scroll
93:36 - which means um
93:37 - if we have like a bunch of different
93:39 - sort of a bunch of text we can scroll
93:41 - through it
93:42 - that's what that's going to last you
93:43 - okay so that's awesome
93:45 - uh and now with that said we're going to
93:47 - go ahead and actually go ahead and add
93:49 - some
93:50 - messages inside of that container so
93:52 - let's go ahead and go back to chat
93:54 - go here and i'm going to go ahead and
93:56 - add like a little message so i'm going
93:57 - to say
93:58 - imagine we had a message and it had a p
94:00 - tag of something like this it says chat
94:04 - message and this was like hello
94:07 - oh let's just say hey guys as an example
94:09 - so this is going to be an example
94:11 - message right
94:12 - so it's going to say hey guys and then
94:14 - what i'm going to say
94:15 - is we have so you'll say something like
94:19 - that so you can see it says hey guys
94:21 - right we're gonna we need to make that
94:23 - look like an
94:24 - actual proper message now um so what i'm
94:26 - gonna do is i'm gonna actually go ahead
94:28 - and
94:28 - we're gonna span a few things inside of
94:30 - it so we have a name and a timestamp
94:36 - there we go yep i think we're back yeah
94:40 - okay yeah my mic i think i just knocked
94:43 - out
94:44 - so then just
94:47 - [Laughter]
94:52 - message so i'm going to go here and say
94:54 - chat message
94:55 - and i'm going to go ahead and say
94:57 - position
94:59 - relative because we want to oh oops what
95:01 - the hell was that position relative
95:04 - and i'm going to say font size of 16
95:07 - pixels a padding of
95:09 - 10 pixels let's go add those in save
95:13 - and i'm going to give it a background
95:14 - color of white
95:17 - and pop this in so you guys can see it's
95:19 - exactly what i'm talking about here
95:21 - so you can see that's the background of
95:22 - that thing right
95:25 - and then what i'm going to go ahead and
95:26 - do is um
95:29 - i think it's white is it yeah i'm sure
95:31 - it's white it's white that's white
95:33 - yes yeah and then we're going to say
95:35 - give it a border radius of 10 pixels
95:39 - so a border radius of 10 pixels
95:44 - a little bit yeah so it gives it like a
95:46 - message fill
95:47 - and then if you only want the width to
95:50 - fit the the
95:51 - the contents right you just need to do
95:54 - width
95:54 - fit content and what that would do is
95:56 - depending on how much text is in there
95:58 - it would just reach that amount and what
96:00 - i'm going to do is i'm going to say
96:01 - margin bottom of 30 pixels that way if
96:03 - we have messages stacked up on top of
96:05 - each other
96:05 - they're not going to be touching they're
96:07 - going to have spacing between them right
96:09 - yeah so where'd you put the margin
96:10 - bottom so i checked that
96:13 - it's on the message so if i go ahead and
96:15 - add a second message
96:17 - like this we'll see it should say hey
96:19 - guys hey guys
96:21 - so once that loads up again nice there
96:23 - we go okay
96:25 - so now what i'm going to do is every
96:27 - message should have a chat name
96:29 - so you should have a name of who sent in
96:30 - the chat because we're doing it in like
96:31 - a group sort of
96:33 - fashion and it should have a timestamp
96:35 - right so
96:36 - for the chat name i'm going to go in and
96:38 - basically about this is
96:39 - where we have the where it says hey guys
96:42 - i'm going to go ahead
96:43 - and add inside of that p tag a span
96:46 - which says
96:46 - chat name and it says message. so in
96:49 - this case let's just go ahead and assume
96:50 - that it's sunny
96:52 - right so sunny sangha or something like
96:53 - this and then the chat name right so if
96:56 - i go ahead and save that
96:58 - now what we will see is it will have
97:01 - like sunny tango afterwards but i don't
97:03 - want it to look like that i want to look
97:04 - like
97:05 - sort of appear like a nice sort of chat
97:07 - name
97:08 - yeah we kind of want to have at the
97:09 - bottom like like like here guys you see
97:11 - that right there that's exactly what i
97:12 - want right there
97:13 - yeah yeah exactly like that yeah so now
97:16 - we're gonna say his chat name
97:17 - and right because i made the parent so i
97:19 - made the message
97:20 - a chat message position relative now if
97:23 - i do position absolute here
97:26 - this will be absolute in in relation to
97:29 - the chat message
97:30 - right so if i say top
97:33 - uh let's just say top minus 15 pixels
97:36 - and what it's going to do is it's going
97:37 - to go minus 15 pixels
97:39 - from the uh from the top of that that's
97:43 - that
97:43 - that uh message right and then if what i
97:45 - need to do then is also go ahead and do
97:48 - um uh that's interesting one second it
97:51 - says
97:52 - chat body what's up pop pop pop chat
97:54 - message
97:55 - chat message i think i've done that
97:57 - right so if we go ahead and do
97:58 - chat message here like this
98:02 - and then we're going to do chat name top
98:04 - 50. if i do top zero
98:06 - let me just double check
98:09 - top zero are you gonna use the display
98:12 - like this
98:13 - trying to position absolute or what i'm
98:16 - just trying to get yeah i'm just trying
98:17 - to position that correctly so if i do a
98:19 - font
98:20 - size of extra small you see it right now
98:23 - it's kind of sticking to the right of it
98:24 - which is incorrect what we need to do
98:28 - oh of course um oh yeah so so i actually
98:31 - messed this up myself
98:32 - i need this to come before i need to
98:35 - come before the actual message
98:37 - so inside the actual layout that's why i
98:38 - went to actually before
98:41 - and if we save that we can now see it
98:43 - comes up there right
98:45 - so obviously that doesn't look perfect
98:46 - yeah we will get it there
98:48 - we'll somewhat make it look perfect um
98:51 - and then what i'm going to do is for the
98:53 - timestamp so i'm going to go ahead 2.3
98:55 - okay
98:56 - 2.3k likes guys insane unbelievable
99:01 - nice guys that's insane so a few people
99:04 - are saying left zero yeah i know i was
99:06 - thinking f-zero but i don't think we
99:07 - i need that just yet yeah i'm gonna go
99:09 - ahead and add a timestamp
99:11 - span as well and here it's going to
99:14 - basically have a time so let's just say
99:15 - 3 52 pm or something like that
99:18 - right so for the timestamp i'm going to
99:20 - go ahead and go to chat
99:22 - and i'm going to go here and i'm going
99:23 - to say for the timestamp
99:25 - give it a margin left of 10 pixels and a
99:28 - font size of extra extra small
99:30 - [Music]
99:32 - like this so now if i save it there you
99:35 - go so that's
99:36 - there correctly and nice and then on
99:38 - that side we have it like that so that's
99:40 - awesome
99:40 - i'm going to open this up in my local
99:42 - host as well so i can go ahead and check
99:43 - how this looks because
99:44 - not entirely sure why it's looking like
99:46 - that one sec
99:48 - because it says okay
99:52 - so this is because we have done
99:57 - so looks we've got the chat message
99:59 - padding 10 pixels
100:00 - adding 10 pixels and then over here we
100:03 - have
100:04 - chat message p tag chat message chat
100:08 - receiver
100:10 - okay interesting i mean we can start out
100:13 - afterwards we can fix it yeah it's fine
100:15 - are you trying to style are you trying
100:16 - to put it more up top
100:18 - yeah i mean what we could do is oh sorry
100:20 - this is why do top
100:22 - negative identities minus 15 pixels
100:25 - yeah yeah hey there we
100:28 - go nice
100:32 - that's it awesome dude that's nice and
100:35 - then what we can do
100:36 - now is like imagine this entire thing
100:37 - would be one message that's how we kind
100:39 - of see it right
100:40 - but we also have a variation right so i
100:43 - want to have it so that if i was to add
100:44 - another class name
100:46 - so chat message but also chat receiver
100:49 - i want it to have the same styling but i
100:51 - want it to be blue
100:52 - or like whatever sorry whatever color it
100:54 - is in whatsapp i think it's blue um
100:57 - well it's like a green maybe but
100:59 - especially i want it to be like a
101:00 - like a kind of green but then on the
101:02 - right now this is simpler than you might
101:04 - think
101:05 - so what i can do is i can go here add
101:07 - the following i can just say chat
101:09 - receiver oh like the one on the right is
101:11 - green and okay you guys see that right
101:12 - here
101:13 - right there yeah yeah yeah so this is
101:15 - white and it says green yeah yeah
101:17 - okay i see yeah cool cool so what i can
101:19 - do here to get that to work is i can say
101:21 - margin left
101:21 - auto and background color green like
101:24 - this little green here this is the
101:25 - whatsapp green
101:26 - and guys look how easy this is as soon
101:27 - as i save this
101:30 - boom hey let's go damn
101:33 - that's all right right like so now what
101:36 - we can do is to make this very clever
101:38 - is we can go ahead and change this to a
101:41 - uh like a javascript
101:43 - javascript kind of string so string
101:44 - interpolation and i can basically go
101:46 - ahead and do this i can go ahead and say
101:49 - uh we can put this inside sort of a
101:50 - condition and i can say only add this
101:53 - class if
101:54 - if some kind of condition is true right
101:57 - so i'm leaving it as a true for now but
102:00 - we're gonna
102:00 - we're gonna come back to this point and
102:02 - say like if it's the user who's signed
102:04 - in
102:05 - then this will get evaluated to true so
102:07 - he's gonna be sending the message so his
102:09 - message should come up as green
102:11 - right otherwise if you're not signed in
102:13 - so nars if you go on to the deployed
102:15 - version now
102:19 - and if you type a messaging no it's how
102:20 - all of your messages are in the green
102:22 - but everyone else's messages are in the
102:24 - white i see i see i see okay that makes
102:26 - sense and so you're trying to figure
102:28 - that out based on who the user if the
102:30 - user is logged in or not
102:32 - yeah so we're going to come back to that
102:33 - point and actually go ahead and
102:35 - uh by the way louise thanks so much for
102:38 - the five
102:39 - dollar donation i'm not sure what that
102:41 - is but he says hit this he says thank
102:43 - guys so
102:44 - thank you guys for motivating me to
102:45 - learn more and more i'm just one
102:47 - brazilian developer
102:48 - that starts to follow the channel and
102:51 - this week
102:52 - amazing projects of course uh appreciate
102:55 - donation appreciate your kind comments
102:57 - amazing thank you so much dude for that
103:00 - massively appreciate you watching
103:02 - uh yeah so that's awesome we actually
103:04 - have the
103:05 - sort of uh message bit done
103:08 - and what we're to do is eventually so
103:09 - this this message right here is going to
103:11 - basically be we're going to map through
103:12 - a database go ahead and get some
103:14 - messages
103:15 - and then just render this out as many
103:16 - times as we see messages what is this
103:19 - sorry so this true right here where this
103:22 - true
103:22 - will be coming from so this true will
103:25 - eventually
103:26 - so the actual thing that we're going to
103:28 - have is once we pull it from the
103:29 - database
103:30 - you're going to see this expression here
103:32 - ah
103:34 - yes it's going to save the message name
103:36 - is equivalent to the user's display name
103:38 - so that's what you log in with
103:40 - then we render it as you're the receiver
103:43 - got it got it all right okay cool and
103:45 - this will render to true or false
103:46 - but for now we're just going to assume
103:48 - it's true right whoa
103:50 - jessica jessica 20
103:53 - is that mexican dollars i don't know
103:55 - that is i'm so horrible this uh
103:58 - i never know just like 20 money
104:02 - 20 money yeah costly
104:05 - catchery says is this also responsive
104:07 - yes it is responsive
104:09 - jessica thank you very much
104:13 - nice thank you um so now what we're
104:16 - gonna do
104:17 - is we have the chat footer
104:20 - right so we talked about everything else
104:21 - let's go ahead and finish the chat for
104:23 - and then we can go ahead and wire this
104:25 - stuff up right
104:26 - so what we can do is we can um
104:31 - [Music]
104:33 - well so now what we can go ahead and do
104:34 - is actually go ahead and fill this out
104:36 - so
104:36 - uh on the chat for is this go to the
104:39 - deployed version us
104:42 - yep and on the deployed version on the
104:45 - footer you can notice how we have the
104:46 - emoji we have the input box and then we
104:49 - have the microphone
104:51 - right yep so is that that emoji yep
104:54 - exactly so that emoji is known as the
104:56 - insert emoticon icon
104:58 - the mic icon is known as a easy enough
105:01 - mic
105:02 - icon and the um
105:06 - middle is a form right so the middle is
105:08 - a form so here yeah
105:10 - form like this yeah
105:13 - and the reason why i've wrapped it in a
105:14 - form is because
105:17 - it's uh we want to have that enter
105:19 - functionality
105:20 - right so i'm going to chuck it in fold
105:22 - here
105:23 - and let's just put input and let's just
105:25 - have a button which says send a message
105:29 - guys so guys i just want to say just
105:31 - want to say guys
105:32 - 2.4k likes
105:37 - nice dude also guys apologies if your
105:41 - message gets uh deleted because you
105:43 - wrote in all caps
105:45 - uh sometimes our sort of automatic
105:47 - automated bot might
105:49 - get rid of your message so try not to
105:50 - write in all capitals otherwise uh
105:53 - it's a bit sensitive and it kind of it
105:54 - thinks you're screaming at us yeah i
105:56 - think it makes you do something bad
105:57 - or spamming spam yeah don't worry about
105:59 - it yeah just yeah
106:02 - nice um so now what we're going to do is
106:04 - we have
106:05 - that input field so let's go over to our
106:07 - localhost
106:09 - okie dokie host oh locos is broken
106:13 - oh nice that's exactly what we wanted
106:16 - let's go
106:19 - juicy and now we're gonna do the top i'm
106:21 - gonna go ahead and import those two
106:23 - missing
106:23 - dependencies and we should see
106:30 - oh man it's too easy there we go
106:33 - so with that said the app's done guys
106:35 - i'm joking i'm joking
106:37 - all right adios
106:45 - let's go ahead and style this now so the
106:47 - chat footer right because that looks
106:48 - horrible
106:49 - um i'm going to put up in the corner
106:52 - somewhere
106:54 - chat footage so i'm going to go ahead
106:55 - and start this say chat footer
106:58 - you guessed it we're going to do display
106:59 - flex because we love that stuff
107:01 - and then we're going to do justify
107:04 - content space between because i want
107:06 - each of the children inside that
107:08 - container to be spaced apart
107:10 - i want them to be centrally vertically
107:12 - aligned so i'm going to say
107:13 - align item center and then i want the
107:16 - height to be 62 pixels because that's
107:17 - what they have on
107:19 - whatsapp and i want the uh border top
107:22 - to be one pixel solid light gray if we
107:25 - add that in
107:26 - there you go gives it a nice little
107:28 - effect right
107:30 - so now with that said what i'm going to
107:33 - do is go ahead and add the
107:36 - following i'm gonna say um
107:41 - for the form i want the form to take up
107:43 - the most room
107:44 - right so i want the form to take up the
107:46 - majority of that space so
107:48 - let's go ahead and do um
107:51 - [Laughter]
107:54 - are you laughing well i thought sunny's
107:57 - so handsome is that that one which one
107:58 - wait
108:00 - how did look at that
108:04 - i agree with that guys
108:08 - nice uh so you've got chat footer is
108:10 - greater than form
108:11 - i'm sorry chat footer is we're targeting
108:13 - the form we're saying flex one
108:15 - and we want the form itself to be
108:16 - display flex so i'm going to go ahead
108:18 - and save that
108:22 - and then we can see now it's actually
108:23 - taking up the majority of the room so if
108:25 - i actually
108:26 - go ahead and visualize this and say
108:28 - background color
108:30 - and make it blue for example now you'll
108:32 - see it's actually taking up the majority
108:33 - of that space
108:34 - right so it is taking up majority of
108:36 - that space and i will get rid of that in
108:38 - a sec but what i'm going to do now is
108:39 - i'm going to say target the input inside
108:41 - of that form
108:43 - then i want to do flex once i want the
108:45 - input to take up the majority of the
108:47 - space
108:48 - um like this do you want to flex on the
108:51 - input correct
108:52 - yep so i'm going to do flex 1 on the
108:54 - input field like this
108:57 - and then i'm going to do border radius
108:59 - of 30 pixels like this
109:02 - so let's go ahead and save that
109:05 - uh and there we go you can see like it's
109:07 - taking up more of that space and the
109:08 - input field you can see it
109:09 - is uh it's got that rounded
109:13 - sort of edge whoa tony neary thank you
109:15 - so much dude
109:17 - thank you tony awesome thank you so much
109:21 - so we have the border radius day pixels
109:25 - and then i'm going to give it a padding
109:26 - of 10 pixels i'm going to get rid of
109:28 - that border
109:29 - and with that i'm going to get rid of
109:30 - the background color because we know it
109:32 - works right so we don't want to do that
109:33 - so
109:34 - do that and boom we get that okay
109:37 - now guys there's a very nice little
109:40 - trick
109:40 - right so whenever you have a form you
109:42 - have some input yeah so firstly let's go
109:44 - ahead and give the placeholder of that
109:46 - input
109:47 - some value because it looks horrible
109:48 - like that uh let's go ahead and do this
109:52 - the type of message that way it sort of
109:53 - gives it a bit more ui
109:55 - so let's do that so now
109:59 - whenever we have this kind of thing
110:01 - right if you want to keep the enter
110:03 - functionality
110:04 - but you don't want to have a button
110:07 - which says send a message
110:08 - you basically you need to include the
110:10 - button in your code
110:12 - but it's a very little neat trick that
110:13 - you can do and it's kind of like like
110:14 - this or how can i do it all the time
110:16 - and it's the easiest way that i've found
110:18 - to do it you basically go ahead target
110:19 - that button
110:21 - and all you need to do is display none
110:24 - pull that button and you actually keep
110:27 - the functionality of the submit
110:28 - so you can actually still do enter to
110:30 - submit but
110:32 - you actually get rid of that headache of
110:34 - um of uh of having to sort of
110:36 - do like detecting when the user hits the
110:39 - enter key and all that rubbish
110:40 - so you don't have to worry about any of
110:41 - that so that's really handy
110:44 - and what i'm going to do also is i'm
110:45 - going to target the icons so go here and
110:48 - target the icons
110:49 - and say give them a padding of 10 pixels
110:50 - and a color of gray so let's add that in
110:53 - and we should see boom gives it a nice
110:56 - little finishing touch
110:57 - nice yeah so with that said now let's go
111:01 - ahead and let's hook up that form a
111:03 - little bit so
111:04 - the form whenever you type a value
111:06 - inside of there so firstly
111:07 - every form has to have some kind of
111:09 - submit so what we've done even though we
111:11 - don't see the button
111:12 - it's going to represent the submit right
111:14 - so you have to give that a submit
111:16 - um and then what we're going to do is
111:19 - we're going to do on click which means
111:20 - that when you hit the enter key
111:22 - it triggers off some kind of function
111:24 - this function we're going to call it
111:25 - send message because that's what we
111:27 - attend like intend to do when we hit the
111:29 - enter key
111:30 - so send message is going to go up here
111:32 - so i'm going to go ahead and make an
111:33 - empty function so
111:34 - called send message and that's just
111:36 - going to do the following and we can
111:37 - pass
111:37 - en as an event awesome and then what i'm
111:40 - going to do is
111:41 - for the input field so we want to keep
111:44 - track of what the user says nas is
111:46 - typing a message in
111:47 - inside that input field we need to keep
111:49 - track of it inside of the state inside
111:51 - of react
111:52 - so that we know so that we for example
111:55 - when he hits the aniki so we can push
111:56 - that into a database we can do whatever
111:58 - we want with that value
111:59 - but in order to do that we need to store
112:01 - it in state okay
112:02 - so in order to keep it keep it in state
112:04 - what i'm going to do is i'm going to
112:05 - create a piece of state called input
112:08 - so like this i'm going to say const
112:10 - input set input and i'm going to give it
112:11 - a default value of empty
112:13 - then what i'm going to do is i'm going
112:14 - to say the value of our input field is
112:17 - that input variable that we just set up
112:20 - and what i need to do is i need to
112:21 - actually keep track of so every time nas
112:23 - types into that box
112:25 - we trigger an unchange right unchange is
112:27 - something where
112:28 - basically it gets fired off every time
112:29 - so we get some kind of event gets fired
112:32 - off so
112:32 - e right what we can do is we can say set
112:35 - the input
112:37 - so update the input variable with
112:40 - e.target.value which is basically the
112:42 - latest
112:43 - um entry that nars is basically typed in
112:46 - so now
112:47 - when we do this every time he types in
112:50 - one it should be
112:51 - updating on on the screen so as he types
112:53 - in it should update and type a message
112:55 - so let's go ahead and tap something this
112:58 - is a message
113:00 - nice so you can see it's updating on
113:02 - there but it's also stored in memory now
113:04 - so now
113:05 - input is also a variable that we can
113:07 - actually reference
113:08 - so when you say it's updating it's
113:09 - actually updating you're saying in the
113:11 - input you're talking about correct
113:13 - yeah okay got it got it so it's updating
113:15 - and it's mapped to our input variable
113:18 - which is inside of the state
113:20 - right got it got it so it's actually
113:22 - saving right now is what what's the big
113:23 - difference
113:24 - exactly now it's actually saving to that
113:27 - variable which means that when we
113:28 - come to use it we can do something cool
113:30 - with it right so
113:31 - what we're going to do now is we need to
113:33 - do something like this we need to say e
113:34 - dot prevent default e dot prevent
113:36 - default oh
113:37 - you don't prevent default like this and
113:40 - then i'm going to do console.log
113:42 - and this is just this sort of test right
113:44 - now i'll say console.log
113:46 - you typed i'm going to say
113:49 - input like this right so now now if you
113:52 - open up the
113:53 - inspector type in and hit the enter key
113:56 - the e dot prevent default will stop it
113:58 - from refreshing and it should actually
114:00 - say
114:00 - you typed and then it will show you
114:02 - where you connect inspect okay and then
114:04 - i do
114:05 - go to console yep
114:08 - [Music]
114:16 - yeah that was awesome that is awesome
114:17 - yeah so that will get working in a
114:19 - really nice way
114:20 - uh camiron ibrahim says are you storing
114:22 - the messages on firebase later yes we
114:24 - are
114:25 - we will be connecting everything to the
114:26 - database in a sec but yeah
114:28 - now if this was sort of that this is the
114:29 - sort of foundation to get everything
114:31 - sort of to the point we need it to
114:33 - and then we can go ahead and introduce
114:34 - the back end so that's awesome so we
114:37 - actually got that working nicely now
114:39 - um okay so i think at this point what we
114:42 - can do
114:43 - is we can actually go ahead and
114:45 - introduce the
114:46 - sort of introduce firebase so earlier on
114:49 - uh nars went ahead and got the firebase
114:51 - config
114:52 - from firebase right thank you nikhil
114:54 - verma
114:55 - for uh for that lovely donation he says
114:58 - keep it up
114:59 - we definitely will dude we definitely
115:00 - thank you thank you
115:02 - yeah so uh here we got the firebase
115:04 - config so
115:06 - before we carry on we need to open up
115:07 - the terminal
115:09 - so let's go ahead and pull up the
115:10 - terminal okay
115:16 - some people are saying some people are
115:17 - saying don't show the config
115:19 - guys it doesn't matter with firebase
115:20 - you're actually protected when you show
115:22 - this config so this is public
115:23 - information you don't actually need to
115:24 - worry about hiding this
115:26 - um it's completely fine to show that and
115:28 - then what we're going to do is we're
115:29 - going to open up the
115:30 - let's open up your other terminal now so
115:33 - right now you're on the main
115:34 - let's do this one right here okay three
115:37 - got it yeah
115:39 - awesome oh wait somebody actually said a
115:40 - good point there's clean input after the
115:42 - message
115:43 - so yes before we forget very nice yeah
115:46 - true that let's go ahead and do set
115:48 - input
115:49 - as empty and what this will do is
115:51 - whenever nars hits enter
115:52 - it will go ahead and clear the input
115:54 - which is what we expected to do
115:56 - really nice kataro who picked it up
116:00 - yo hey nice nice nice nice nice
116:04 - i love it awesome really nice
116:07 - so that's clean so that's really nice
116:09 - and now what we can do is
116:11 - we can go ahead and do app so we've got
116:13 - this
116:14 - let's go and do
116:17 - okay so firebase right so we've got the
116:19 - command line open so let's go ahead and
116:21 - do
116:21 - uh command j and i'm gonna do mpmi
116:25 - firebase so we're gonna install all of
116:27 - the firebase dependencies into our
116:28 - project
116:29 - um and with that what we're gonna then
116:31 - do is actually go ahead and do the
116:33 - following so i'm gonna say
116:35 - import firebase from firebase at the top
116:37 - and then what we wanna do is we need to
116:39 - initialize the app
116:40 - with that firebase config so this is how
116:42 - we do it we say
116:43 - uh firebase dot initialize app and we
116:46 - pass it this config
116:47 - object right so we pass it the config
116:50 - object
116:51 - and we basically store it in this
116:53 - variable called firebase app
116:55 - now what we do from that point is we
116:57 - create a new variable called db
116:58 - which is basically going to access the
117:00 - firestore instance
117:02 - of our uh of our firebase in like sort
117:04 - of configured
117:05 - instance or however you want to put it
117:07 - basically it gets our database
117:09 - and then we're going to go ahead and
117:10 - also get a authentication handler so
117:13 - that's how we do that we basically say
117:15 - firebase.org
117:16 - and this will be responsible for when we
117:18 - come to do our authentication part
117:20 - and we also need this this is for
117:22 - google's authentication we say cons
117:24 - provider
117:25 - equals new firebase.auth.google auth
117:29 - provider
117:30 - and this is what we're going to use when
117:32 - we actually go ahead and do that google
117:33 - authentication
117:35 - and now to export the stuff we need i'm
117:38 - going to go ahead and explicitly
117:39 - export the authentication and provider
117:42 - and then i want to do a default export
117:44 - for the db because we're going to use
117:45 - the db quite a lot more than we use the
117:47 - author provider
117:48 - and if you guys aren't sure what is um
117:52 - what the difference is there then yeah
117:53 - you guys can check out exporting things
117:56 - explicitly and implicitly
117:57 - uh in in your own time which is nice um
118:00 - so now what we're going to do
118:01 - is save this we have firebase brought in
118:05 - so we can actually go ahead and start to
118:06 - use this stuff so let's go ahead and
118:08 - open up firebase notes
118:10 - all right so firebase boom right no
118:13 - right here this one
118:15 - yeah let's open up firebase and let's go
118:17 - to firstly let's go to authent uh
118:20 - let's go to database okay so database
118:24 - we are at 2.5 k likes dude guys
118:28 - insane stuff and also i know if you know
118:30 - but we are
118:31 - constantly at around 770 to 800 people
118:35 - watching like non-stop
118:37 - we've been going at it for about two
118:38 - hours now and non-stop 800 people guys
118:41 - inside it's just mind-blowing like
118:44 - insane insane um
118:48 - so now what we're going to do is in the
118:49 - fire store let's go up to the top and
118:51 - let's click on create
118:52 - a database so at the top of this i'm
118:55 - going to i'm going to hide my
118:56 - uh little screen here so that people can
118:58 - see it hold on
119:01 - uh so quick database yep
119:04 - all right and what we do now is we click
119:07 - start
119:07 - test mode turn test mode next
119:11 - awesome all right all right and then
119:14 - this is fine as well so done
119:16 - yeah so done thank you zia
119:19 - rachman for a nice little donation
119:22 - awesome thank you so much
119:23 - appreciate it uh
119:26 - nice and then provisioning fire so so
119:29 - this will actually go ahead and create
119:30 - the back end for us
119:31 - now what's amazing about firestore guys
119:33 - is it's essentially the best of
119:36 - sequel plus no sequel it kind of took
119:38 - like a bit of
119:39 - a bit of like interest from both but it
119:41 - kind of is more based around nosql
119:43 - and basically you just get like this
119:44 - super powerful real-time database
119:46 - right so it's a real-time database very
119:49 - very powerful stuff
119:50 - um so now what we're going to do is
119:52 - click on the start collection
119:54 - okay what should we name it right so
119:57 - let's go ahead and call this one
119:58 - rooms so this is going to be all the
120:00 - different rooms that everyone can be
120:02 - inside of right
120:03 - okay so what is the field
120:06 - yeah so inside of here we're just going
120:08 - to have name so the name of the room
120:11 - and let's go ahead and add the first
120:13 - name let's just call this the
120:14 - the dance room
120:16 - [Music]
120:19 - dancer right and what you want to click
120:22 - is auto id at the top
120:24 - uh this way okay yep and then click on
120:28 - save
120:29 - and that's it okay so i don't need i do
120:30 - not need another one so click save yeah
120:32 - beautiful
120:33 - so and now what we've done is guys i
120:35 - imagine there's a simple way to look at
120:36 - this is rooms is just an array it's like
120:38 - a list right it's a list of all the
120:41 - rooms that we're going to have
120:42 - and then you can see the first room that
120:44 - we have it has a unique id
120:46 - and then and basically a property of it
120:49 - is the name
120:50 - property so we have dance room right
120:52 - yeah so what we're going to do now
120:54 - is we're going to use this to basically
120:55 - go ahead and let's create let's add a
120:56 - second room now just to sort so that way
120:58 - when we actually
120:59 - click add document right and that will
121:02 - add a second room and then we'll do
121:04 - room right and we'll say this one let's
121:06 - say i'll do this
121:07 - this one's name the field is name oh my
121:10 - bad
121:11 - my bad yep and then that one will be
121:14 - should we call like developer room yeah
121:16 - let's call it developer room yeah
121:17 - developer the room yeah
121:21 - like that awesome nice and let's click
121:23 - save
121:24 - actually we'll call it devroom
121:27 - yeah yeah there we go
121:31 - so now we have two values inside the
121:33 - database right
121:34 - so we just set up firebase so we've done
121:36 - all the config for that
121:37 - and what we're going to do now is go
121:39 - ahead and go over to
121:41 - the um
121:44 - let's go let's actually connect the
121:47 - sidebar
121:48 - right so sidebar we previously had i
121:52 - don't know if you're following me knows
121:54 - uh i think it's
121:54 - i will right now yeah i am following you
121:57 - actually
121:58 - oh yeah yep yes oh yeah um right are you
122:04 - let's see there you go you're on
122:05 - firebase.js right
122:07 - oh right sorry i was in the i was in a
122:09 - different editor yeah
122:10 - sidebar that yes there we go sunny now
122:12 - you've outside
122:14 - you've got the sidebar over here sorry
122:16 - now
122:18 - so here i'm i i naturally had everything
122:20 - sort of hard coded before
122:21 - i don't want to now put it in from the
122:23 - hard coded stuff i want to basically map
122:24 - through all of the
122:26 - sidebar options with all the different
122:28 - rooms right i want to say like which
122:30 - room we're in and stuff like that um
122:32 - so what we're going to do is we're going
122:33 - to go up to the top and we're going to
122:35 - say
122:36 - the following we're going to say i'm
122:38 - going to create a piece of state called
122:40 - rooms so i'm going to go ahead and do
122:41 - the following and say const rooms
122:42 - set rooms equals use state and this is
122:44 - an empty array
122:46 - and then what i'm going to say is i'm
122:47 - going to use a use effect so i want to
122:49 - basically when the sidebar component
122:51 - loads
122:51 - i want to shoot off a piece of code
122:53 - right and i only want to do this once
122:55 - because i don't want to keep
122:56 - attaching like real-time listeners
122:58 - because it's going to make my browser
122:59 - super slow
123:00 - and you don't want to do that right so
123:02 - the way we do that is we add these empty
123:03 - dependencies here
123:06 - by adding the empty brackets here it
123:07 - says run this once
123:09 - when the sidebar component loads and
123:11 - once only
123:12 - right so here what we need to do is we
123:14 - need to say db
123:15 - so i'm going to import db from uh from
123:18 - firebase so this one
123:19 - right here so import db from firebase
123:21 - and this is our local firebase not the
123:23 - module firebase
123:24 - so this is local firebase so
123:26 - db.collection
123:28 - and here what we're doing is we're
123:29 - saying go to the rooms collection so the
123:31 - one that nar's just created
123:33 - yes that room's question and then i'm
123:35 - going to say on snapshot so on snapshow
123:37 - is essentially saying
123:39 - like imagine you you're looking at so
123:41 - literally as nasa's screen is right now
123:43 - imagine like you had a camera and you
123:44 - literally just took a picture of that
123:46 - database right
123:47 - so of that list so the list of rooms
123:50 - inside of it that's what we call a
123:51 - snapshot
123:52 - right but it's also the snapshot is also
123:54 - listening for changes right so it's not
123:56 - just like hey it says a picture
123:58 - but this is uh this is also saying on
124:00 - any
124:01 - uh changes inside the snapshot also run
124:04 - this code
124:05 - yeah so imagine like if if we add
124:08 - something to it we change anything in
124:09 - here we delete anything
124:11 - it takes another snapshot like basically
124:13 - you grab that camera take another
124:14 - snapshot and it gives us the new
124:15 - snapshot
124:16 - so it's error it's real time so every
124:18 - time it gets updated we get the latest
124:20 - snapshot
124:20 - right and what we're going to do is
124:22 - we're going to say set the rooms
124:24 - so set the rooms in this case and what
124:26 - we need to do at this point we need to
124:27 - go through that snapshots we think
124:29 - snapshot.docs so docs is referring to
124:31 - the list of the elements that we had in
124:33 - the database
124:34 - so we had two and then i'm going to say
124:36 - map through each one and for every doc
124:38 - i want to do the following so this is a
124:40 - bit where you guys are going to have to
124:41 - stick with me so i'm going to say
124:43 - return and observer like directly return
124:46 - an
124:46 - object right and this object i'm going
124:49 - to get
124:50 - it's going to have an id and that's
124:51 - going to be the doc id so this is the
124:53 - doc
124:54 - id is basically referring to the id
124:57 - inside of firebase so if you go to
124:58 - firebase notes okay
125:00 - right here boom not download it
125:04 - okay yeah so those unique ids that you
125:07 - see in the middle right
125:08 - that's what we're giving the id here and
125:10 - then i'm going to say data
125:12 - is going to be doc.data like this
125:15 - right now what this is doing is it's
125:19 - basically creating our own little uh
125:21 - object with an id
125:22 - and data right uh and also whoa we just
125:25 - got
125:25 - a bunch of new viewers jumped in that's
125:27 - that's amazing nice
125:29 - thank you uh thank you yeah that's
125:31 - awesome did see
125:33 - we actually got people coming back in um
125:36 - nice guys guys keep playing that keep
125:38 - hitting that like button you know
125:39 - youtube is like oh you know
125:40 - you know they're getting it they're
125:41 - getting it so they're gonna keep
125:42 - recommending us so guys
125:44 - just like smash it exactly guys if you
125:47 - haven't already and you're enjoying this
125:48 - content
125:49 - literally go ahead and tag me and nars
125:51 - on instagram
125:52 - and share a story on instagram and that
125:54 - will help more people see it
125:55 - i'll get all of the people who follow
125:57 - you to watch it as well so go ahead
125:59 - to the right side you want to go to the
126:00 - right on the other side
126:03 - no you're not now you're too far off i
126:05 - was just pointing at my yeti oh yeah
126:07 - remember that one
126:08 - this over there all right let's continue
126:11 - on
126:12 - nice um awesome so and now what we're
126:16 - going to do
126:16 - is we have uh it says use state is not
126:19 - defined so i need to go ahead and import
126:21 - that so you use state is not fine and
126:24 - what this will do now guys is it will
126:25 - actually create a real time listener
126:27 - for uh snapshot and it will basically
126:30 - update the rooms
126:32 - with those with those properties right
126:34 - so what what does that mean what can we
126:35 - do with that information so now what we
126:37 - can do is we can say at the bottom here
126:39 - rather than hard coding this stuff out
126:41 - here i am basically going to do this i'm
126:43 - going to go ahead and say rooms
126:45 - dot map and we'll say for every single
126:47 - room there's an arrow function
126:49 - implicitly returned so we're telling it
126:52 - to give us like a return we're going to
126:53 - say return a sidebar
126:55 - chat component and here's what i'm going
126:57 - to do
126:58 - i'm going to go ahead and say whoa we
127:00 - just hit 2.6 likes
127:04 - if we can hit 3k likes oh man that'd be
127:07 - insane
127:09 - so i'm going to give it a key so in
127:10 - react the key is used for performance
127:12 - i'm going to use a key as the room id so
127:14 - i'm going to go ahead and do that
127:16 - i'm also going to give an actual id to
127:18 - the component and that's going to be the
127:20 - room id
127:22 - and i'm going to give it a name so the
127:24 - name of the component and this is going
127:25 - to be
127:26 - room dot data dot name right so that's
127:29 - when we refer to room.data.name we're
127:31 - referring to the property that nars
127:33 - added inside of those database fields so
127:35 - the ones that were like a dance room
127:37 - and those things so now we passed in
127:39 - props right to sidebar chat
127:41 - how do i pull this information in in the
127:43 - component so if we go into sidebar chat
127:45 - remember we had a prop here called add
127:47 - new chat
127:48 - so in order to pull it through what i
127:49 - need to do is add the two props i've
127:50 - added here so id
127:52 - and name right so we've got id and name
127:54 - over here
127:55 - and what we can do is instead now right
127:58 - we can basically go ahead
127:59 - and rather than saying room name i can
128:02 - go ahead and just say name
128:03 - yeah and also for the
128:06 - id we will use the id in a second i'll
128:10 - show you where we use the id in a second
128:11 - but now if i was to go ahead and click
128:13 - save what we should see is rather than
128:15 - seeing room name on the left we should
128:17 - see the actual names being pulled from
128:19 - the db
128:20 - so it will go ahead oh let's go hold on
128:23 - hold on guys guys
128:24 - i got it i got it i got a dj air horn on
128:26 - here
128:28 - hey you can't hear sonny but they can't
128:33 - amazing oh no nice you're actually uh
128:35 - you're you're updating the titles oh
128:37 - yeah awesome that's dope dude you're
128:40 - doing cajun style because it kind of
128:41 - gave me a challenge i'm like all right
128:42 - i'll
128:43 - chat i'll challenge you yeah we even got
128:46 - the video in the middle of that's the
128:47 - first
128:48 - yep yep i didn't know i keep moving it
128:50 - around i don't know where to put it
128:51 - because it's just
128:52 - it's kind of cool in the middle yeah i
128:54 - kind of like it too yeah kinda like it
128:56 - too yeah
128:57 - nice so now what we're gonna do is we
129:00 - have
129:02 - so we have the
129:05 - okay yeah so this is this is a really
129:06 - cool part guys so
129:08 - what i'm gonna do now is where we had
129:09 - add new chat right so when we did add
129:12 - new chat
129:12 - what i'm gonna do is go ahead and we had
129:15 - the add new chat functionality here
129:17 - so we said when we click on the add new
129:20 - chat button so on click
129:22 - right um what i want to basically say
129:25 - remember we said we that prompt came up
129:27 - which said
129:28 - uh please enter a name for the chat room
129:30 - or so please enter the name of the chat
129:32 - uh i'll just go ahead and say chat room
129:34 - there we go and then it says
129:35 - if you enter the name in here i'm going
129:37 - to say db
129:38 - dot collection so remember nas was
129:40 - actually adding those things in manually
129:42 - right
129:42 - but what i'm going to do here is we're
129:44 - going to make it programmatically add it
129:45 - in so i've imported the dbn
129:47 - as before we're going to say
129:48 - db.collection rooms
129:51 - yeah and i'm going to say add right so
129:53 - whenever you sort of uh
129:55 - enter a prompt in or something like that
129:57 - i'm going to do that and i'm going to
129:58 - say
129:58 - add something with the name key and
130:00 - basically we're going to use the room
130:02 - name so this is what we actually entered
130:03 - into that prompt
130:04 - right enter the room name like that now
130:07 - if we
130:07 - save it you'd be amazed that's all we
130:11 - needed
130:11 - to go ahead and do that right so now if
130:14 - you go to add new chat noise
130:17 - go ahead and tap on add new chat for me
130:19 - and let's go ahead and write a name in
130:20 - here for a room a chat room
130:22 - guys what's what's a good name let's
130:24 - call it let's call it epic room
130:26 - let's do it epic room
130:30 - and now yo look at that that's insane
130:33 - right
130:34 - like it just pops in real time like
130:37 - because this map says listening to that
130:38 - so a new snapshot got delivered
130:40 - pulled it in and it also we literally
130:43 - in three lines of code pushed some
130:45 - information into the database so insane
130:47 - stuff massive power there
130:48 - like so simple yeah so so simple
130:52 - and guys like if you if that was a first
130:54 - for you guys i know a lot of you guys
130:56 - have been i've been watching the streams
130:57 - and you see that stuff but if that's the
130:58 - first for you guys
130:59 - let us know if you found that cool
131:00 - because this is really really um
131:03 - like it's it i i mean every time i use
131:05 - it i always think it's awesome so i
131:06 - think like
131:07 - i'd love to see what you guys think yeah
131:10 - yeah
131:10 - nice okay so we've got that done um
131:14 - and now we're going to say
131:16 - [Music]
131:18 - so now we want to basically have it so
131:19 - this is where react rooter comes in
131:22 - right so react rear we basically want to
131:24 - implement react rules so that when we
131:26 - click
131:26 - on one of those sidebar options like
131:28 - dance room dev room epic room
131:31 - i want it so that when you click it it's
131:33 - going to then
131:34 - basically on the right hand side pull
131:37 - the messages
131:38 - for that room right he's going to pull
131:40 - the messages just for that room
131:42 - um so how do we do that how do we get
131:44 - that working so what we need to first do
131:46 - is actually go ahead and
131:47 - install react router so the way we do
131:50 - that
131:51 - is that we need to go ahead in into the
131:53 - command line so let's go into the
131:54 - command line
131:55 - uh let's do command j oh nice we got
131:59 - sergeant in the house
132:01 - he's awesome dude
132:04 - i think he actually landed a job uh from
132:07 - watching our videos yeah he's inside the
132:09 - prophet javascript
132:10 - yo nice well i'm trying to find it i'm
132:13 - trying to find him here
132:15 - oh yeah right there right there nice
132:18 - i love it i love seeing people who come
132:21 - back onto the
132:22 - uh onto the channel so they're always
132:23 - amazing to see that that's that's nice
132:25 - right so now what we're going to do is
132:27 - we're going to add a react router
132:29 - right so react brewer for many of you
132:30 - guys who don't know is how you enable
132:33 - page reading inside of a react app so
132:34 - what i mean by that is when you click a
132:36 - link or the button or anything like that
132:38 - um it's actually going to go ahead and
132:39 - load um that page so i have a
132:42 - i have a question sonny uh just a really
132:44 - quick one so sajara asked right
132:46 - it's just a really cool one how scalable
132:48 - is this from a production-ready
132:50 - standpoint of every mobile device
132:52 - as everyone will get device gets
132:54 - connected directly with db
132:56 - is this a problem already solved so
132:59 - very very good question um no
133:02 - so there's a few things to consider here
133:04 - so when we use the use effect
133:06 - to make it more optimal i can quickly go
133:08 - ahead and show you something so let me
133:09 - go ahead and show you a very
133:10 - so firstly to answer your question it's
133:12 - it's optimal it will be optimal
133:14 - it can scale you're using um you're
133:17 - using google servers guys
133:19 - so like everything that they've
133:20 - implemented in terms of how you pull the
133:22 - information from the db
133:23 - it's super optimal and you and guys
133:25 - think of it this way if google if
133:27 - just think of it this way if you can can
133:30 - google handle the amount of people that
133:31 - are running through your app
133:33 - the answer is yes like google can have
133:35 - your traffic
133:36 - yeah even if you had a million users
133:37 - tomorrow like of 10 million 100 million
133:40 - they're going to handle your your your
133:41 - load so like let's get this whatsapp
133:43 - clone to a million users so
133:44 - that we get this just you know
133:47 - let's do it 100 million all right
133:51 - a quick little uh uh sort of
133:53 - optimization step for
133:54 - anyone who's interested what you can do
133:56 - is this return something called
133:57 - unsubscribe
133:58 - all right and what you can do is you can
134:00 - actually in a user effect you can do a
134:02 - clean
134:02 - up function so this is a clean up and
134:05 - basically this says whenever
134:06 - the component sort of unmounts or or
134:08 - cleans up
134:09 - you can actually call the unsubscribe
134:11 - and what this will do is it will it will
134:12 - mean that you
134:13 - always detach this real real-time
134:16 - listener
134:18 - uh after it's done using it so like
134:20 - whenever sort of you're finished using
134:22 - it this is a this is a good practice to
134:23 - do
134:24 - so i saw somebody said they like the
134:25 - little sort of tips and tricks that i
134:27 - dropped sometimes with like for example
134:29 - the react keys in an array
134:30 - so this is another optimization step
134:32 - that you can use uh
134:34 - whenever you do on snapchat it returns
134:35 - an unsubscribe and you can go ahead and
134:37 - do that and that works
134:38 - really good yeah nice so with that said
134:41 - let's continue on and let's go to
134:44 - the uh react router dom so what we need
134:46 - to do is open up the oven we've got npmi
134:48 - and we need to do react router dom
134:51 - so this goes ahead and pulls in the
134:54 - thing so while that's actually
134:55 - installing those let's go over to the
134:56 - deployed app
134:58 - right here beautiful yeah and let's
135:01 - click on one of these chats
135:04 - clear the chat yeah so any one of these
135:07 - chats can you see that when you click on
135:09 - these chats
135:10 - it's changing the chat yep right here
135:13 - and it was actually happening here if
135:15 - you make the uh the window bigger
135:17 - let's go ahead and make that full screen
135:21 - yeah there we go can you see the url
135:24 - changes at the top right here see there
135:26 - guys
135:27 - you see that boom right there
135:31 - oh you guessed it that url is actually
135:33 - changing
135:34 - when lars clicks on the sidebar option
135:36 - right just pay attention to that really
135:37 - quickly here
135:38 - see if i click on here or then boom boom
135:41 - boom
135:42 - nice exactly and then what the
135:44 - components doing
135:46 - is it's then saying okay i now have the
135:49 - id
135:50 - of the room i'm in so i know which
135:51 - messages to fetch
135:54 - so we're going to go and show you guys
135:55 - how to do that so sergeant jacob says
135:57 - huh yeah got a client while you guys
135:59 - were streaming appreciate all the
136:00 - knowledge you guys have been dropping
136:01 - here and in pwj
136:03 - that's amazing dude wow no way
136:06 - insane stuff
136:10 - uh yeah amazing
136:13 - congrats congratulations yeah amazing
136:16 - stuff dude and i remember he actually
136:18 - shouted us out on instagram once and
136:20 - that's how we started talking to him so
136:21 - that's that's really
136:22 - nice to see that um
136:24 - [Music]
136:26 - right so now what we're gonna do is we
136:30 - are going to add
136:31 - the yeah so we added reactor dom and
136:34 - basically
136:34 - to get this working in the way that we
136:36 - want now what we're going to do is we're
136:37 - going to add
136:38 - the following we're going to say um we
136:41 - need to add something called a router
136:43 - so i'm going to add a router at this
136:45 - point in the app so router is basically
136:47 - where we tell the app to start looking
136:49 - at the url right so we're saying
136:50 - surround
136:51 - all of this stuff in the the tech that
136:53 - allows us to do that right
136:55 - so that's basically what we're saying
136:56 - here and then what we do is we actually
136:58 - surround
136:59 - uh everything inside of a switch right
137:02 - and the thing is
137:03 - what we can do here is we can say
137:04 - surround everything inside of a switch
137:06 - so i can do this switch
137:10 - and the switch if you've programmed and
137:12 - are familiar with switches
137:14 - you can do like cases right and each
137:15 - case in this case
137:17 - is what url uh you're actually accessing
137:19 - so at this point
137:20 - what we could do is we could say the
137:22 - following we could say when you reach
137:24 - this route so when you hit this route so
137:27 - this is the home screen
137:28 - render out this so i can say at this
137:30 - point i can say like uh
137:31 - home screen like this right and
137:36 - when oops oh yeah i need to
137:39 - do the imports and when we reach this
137:42 - for example just say
137:44 - forward slash test we are going to
137:46 - render the app so let's just do this
137:47 - let's say forward slash app will enter
137:48 - the app
137:49 - and if we're at the forward slash
137:50 - nothing it will render uh
137:53 - h1 saying home screen right so let's go
137:54 - ahead and do that there will be two
137:55 - different pages in that because
137:56 - you're saying correct yeah so this will
137:58 - render the home screen this will render
138:00 - the sidebar
138:01 - and let's go ahead and import everything
138:02 - that we need so i'm going to go ahead
138:04 - and import this at the top there we go
138:08 - save it and we should be able to see
138:12 - now let's see
138:15 - so now it should say home screen ah i
138:19 - see i see
138:20 - okay and now if you do forward slash app
138:22 - now so if i do not
138:23 - see and the guys be get again because
138:25 - it's the fact that we have forward
138:27 - slash app right here and then the root
138:29 - one is just simply the home screen so if
138:30 - i now go ahead simply do
138:32 - uh let's see uh slash app
138:36 - right there go and
138:38 - [Music]
138:40 - boom voila nice dancer
138:43 - devroom exactly so that's awesome
138:47 - what we're going to do now is we're
138:48 - actually going to use this to say
138:51 - regardless of if it's in the home screen
138:53 - or if it's inside of the next bit which
138:55 - i'm going to say so let's do this and
138:56 - then say
138:57 - here so we always want the sidebar to
138:59 - show so what we can actually do is we
139:00 - can push this outside of the roots and
139:02 - this means it will always render the
139:03 - sidebar
139:04 - and then underneath it we're just saying
139:06 - render the chat regardless if you're
139:08 - inside of this
139:09 - or this route so what i'm going to do
139:11 - here the reason why i need this is going
139:12 - to say rooms
139:13 - and i'm going to say i'm going to this
139:15 - is called a wild card and i'm saying
139:16 - room id
139:17 - right so this is saying that regardless
139:19 - of if you're in forward slash room
139:21 - forward slash abc regardless if you're
139:23 - in forward slash abc2
139:24 - whatever it is that is going to allow
139:27 - you to render this and what the reason
139:28 - why i need to do it like this is because
139:30 - i need to
139:30 - pull the parameter right and we always
139:33 - specify a default route which is why
139:35 - i've just said
139:36 - show the chat if not so so don't show
139:38 - the chat basically when there's no room
139:40 - id's what you're saying
139:42 - yeah got it got it got it yeah got it so
139:45 - what i could do at this point i could
139:46 - actually sort of uh get rid of this
139:49 - so let's go to uh forward slash just
139:51 - forward slash
139:53 - all right forward slash hold on c so if
139:56 - i do
139:57 - just forward slash yeah
140:00 - so you see like it won't actually show
140:02 - the chat right
140:03 - but now if we do forward slash rooms
140:05 - forward slash abc
140:07 - for example okay let's do rooms
140:10 - for slash abc
140:13 - uh is that zero yeah
140:16 - so now you see once we're inside of a
140:18 - room it will go ahead and load the chat
140:20 - and it will load the chat alongside it
140:22 - so
140:23 - wait wait it's not it's not doing it
140:27 - abc did that do it right rooms
140:30 - dash
140:34 - abc maybe it's like one two three four
140:37 - five
140:38 - yeah just try that one yep yeah
140:44 - okay so in this case what we'll do is we
140:46 - will include it in both because i think
140:48 - it actually
140:49 - might it might fall back to the default
140:50 - i mean it shouldn't have shouldn't have
140:52 - fallen out of that but
140:53 - it might be a case of loading or
140:54 - something like that but in this case
140:55 - what we'll do is
140:56 - we'll render it so now if you click on
141:00 - i don't know that's strange that that
141:02 - should be working right now um so we're
141:03 - rendering chat
141:05 - maybe there's a caching issue hold on is
141:08 - it default
141:13 - so it says chat
141:16 - uh maybe do a hard refresh now let's do
141:21 - uh shift command four right
141:24 - yep
141:28 - for some reason
141:32 - uh yeah strange i can't see as well okay
141:34 - so in that case
141:35 - we will debug this but we can see the
141:36 - root path
141:38 - chat sidebar
141:43 - right report repo
141:48 - maybe it's because the the chat ex needs
141:50 - ex
141:51 - needs to accept something um
141:54 - let's go ahead and do router switch
142:06 - [ __ ]
142:09 - hey there we go nice nice there we go
142:13 - awesome so it might have just been a
142:14 - caching issue nice yeah it looks like
142:17 - with that said now what we're gonna do
142:19 - is we are going to go inside of our chat
142:21 - app and if i want to get
142:23 - whatever nars had at the end of the url
142:25 - so whether it was forward slash abc
142:27 - forward slash whatever it was what we
142:29 - can do is we can grab that using a
142:30 - really nice hook
142:31 - right so before that it was kind of a
142:33 - headache to get this but you can
142:34 - actually use a really nice hook and the
142:36 - one that we're going to use
142:37 - is called use params so we're going to
142:40 - import this
142:41 - uh and we import that with right here
142:43 - saying uh
142:44 - columns import use params from react
142:46 - rear dom and here we say
142:48 - const room id and room id has to match
142:50 - whatever you've given here so in this
142:51 - case it was room id here
142:53 - so it has to be room id and this will
142:55 - actually give us that that sort of after
142:56 - what comes after the forward slash
142:58 - so that's cool but now how do i make it
143:00 - so that those links are clickable
143:02 - right so the the sort of uh sidebar chat
143:05 - so the way we do that is we go to
143:06 - sidebar chat
143:07 - and remember guys these ones these links
143:09 - right here yeah
143:11 - okay got it okay so remember we passed
143:13 - in when we rendered sidebar chat we
143:15 - passed in an id
143:16 - which was the id of the room right so
143:18 - let's go into sidebar chat
143:19 - and let's go ahead and actually wrap
143:22 - this in something which we like to call
143:23 - a link
143:24 - tag right so here what we can do is we
143:26 - can say a link
143:28 - to and then here i can use some jsx to
143:31 - basically go ahead and do some string
143:33 - interpolation and say
143:34 - forward slash rooms forward slash
143:37 - id so go to the this room
143:40 - when you click this link right and then
143:43 - i can basically go ahead and pop
143:44 - the entire div into that link
143:48 - and now what will happen is it says link
143:51 - is not defined
143:52 - because you need to import the link
143:56 - so i'm going to go ahead and import this
143:57 - so import link from reactory dom
144:02 - save it and
144:06 - now once that loads up we should be able
144:08 - to see
144:10 - that everything is just like click yeah
144:12 - so everything's the name so we'll sort
144:14 - out the styling in a sec
144:15 - but if we check the link now so you
144:17 - should see that that link actually
144:19 - changes when you click it
144:20 - do you see that guys i'm not sure let me
144:22 - see if they see this so if i
144:24 - if you guys pay attention to kind of the
144:27 - because
144:29 - wait if you guys pay attention to down
144:31 - here
144:32 - just click kind of pay attention pay
144:33 - attention down here before before i
144:34 - before it disappears
144:36 - like if i hover over this you see that
144:37 - link kind of changes right there
144:39 - boom i see that boom so you're talking
144:41 - about the bottom left right
144:42 - yeah the bottom left side you see that
144:44 - guys yeah just pay attention to that
144:46 - so that means that's linked to the
144:48 - specific room which is the correct room
144:50 - that we need
144:50 - to be in yeah
144:54 - exactly so if you click it now it will
144:56 - actually change the url
144:57 - so if you click one of those click it
144:59 - now and if i go ahead and just hide this
145:01 - thing right here like look at this url
145:03 - so click it
145:04 - click it and you can see wait wait
145:06 - where's the url
145:08 - boom let's make the screen a little
145:10 - bigger and we'll
145:11 - should be able to see that yeah right
145:13 - there
145:14 - just like that so i click click click
145:17 - yeah yeah look at that
145:21 - boom that's awesome bump bomb and also
145:24 - guys notice there's no refresh
145:26 - right so right through it does it very
145:27 - carefully that you don't get a refresh
145:29 - so it's really really nice when we do
145:31 - that so
145:33 - now that we have that id right let's go
145:36 - ahead and
145:36 - upgrade our chat component so let's
145:38 - upgrade our chat mode so that it changes
145:41 - and it knows what what information to
145:44 - pull
145:45 - right so what we're going to do is
145:47 - firstly we're going to go ahead and pull
145:48 - the room name
145:49 - so in order what we're going to do is
145:51 - we're actually going to go ahead inside
145:52 - of our chat component we're going to go
145:53 - ahead and create a
145:55 - room name um a piece of state which is
145:58 - going to keep track of the room
145:59 - name and then i'm going to go ahead and
146:01 - introduce a user effect so you can have
146:02 - more than one user effect so i'm going
146:03 - to create another one called use effect
146:05 - and this one is essentially going to go
146:07 - ahead and fire off and for now
146:09 - it's going to be dependent on the room
146:12 - id
146:13 - so the room id is a dependency that
146:14 - because we are going to use any
146:16 - time user variable inside of this block
146:18 - you have to include it in here
146:20 - so basically what's going on is like
146:22 - every time the room id changes
146:24 - we're going to run some functions which
146:25 - in this case we're simply going to get
146:26 - new messages for that room id
146:29 - exactly exactly that yeah or like
146:32 - yeah is that exactly that so yeah
146:33 - perfect and now what we say is we say if
146:36 - there is a room id so we want to protect
146:38 - ourselves we're going to say if there's
146:39 - a room id
146:40 - then what we want to do is
146:44 - um oh nice somebody just joined
146:48 - ai just joined profit with javascript if
146:50 - you're watching this dude that's insane
146:53 - and i would love to see you comment uh
146:55 - down below that's awesome
146:57 - really nice nice congrats or welcome
147:00 - should i say welcome to
147:04 - yeah welcome to our family exactly yeah
147:06 - so here oh look he's there
147:08 - oh nice yes he says i've just joined
147:10 - prophet javascript love your teaching
147:12 - style
147:12 - see you in class guys that's what oh
147:16 - man that is insane it's insane let's
147:19 - bring down this goal
147:21 - that's so cool dude so happy to have you
147:24 - here so happy hold on
147:25 - we deserve an airhead for this one
147:27 - [Music]
147:29 - we just grew the team on live on session
147:32 - guys
147:32 - guys too good too good insane
147:37 - um so now what we're gonna do is we're
147:39 - gonna have
147:40 - if there's a room id we're gonna say
147:42 - db.collection
147:44 - and then i'm going to go ahead and and
147:46 - go inside the rooms
147:47 - right and this is the cover part i'm
147:49 - going to say go into the specific
147:52 - document which is like the specific room
147:54 - and use the room id that is inside the
147:56 - url
147:58 - to find the room and then i'm going to
147:59 - say on snapshot so make a real-time
148:01 - listener for that
148:02 - on snapshot snapshot so he's going to
148:05 - get the snapshot and i'm going to say
148:06 - whenever you get that snapshot
148:08 - go ahead and set the room name set the
148:10 - room name
148:12 - um go ahead and
148:16 - go ahead and set the room name to
148:20 - the snapshot dot data
148:24 - dot name and this will basically go
148:26 - inside and it will then
148:27 - um pull the the data and they'll get
148:30 - their room name
148:31 - right so that will work and then what we
148:33 - can do is we actually need to import the
148:35 - db so i'm going to go ahead and import
148:36 - the db
148:37 - save it and now inside of room name we
148:41 - should
148:41 - have the most up-to-date room name so
148:43 - rather than having a hard-coded room
148:45 - name here let's prove that this works
148:46 - let's change this to our variable room
148:48 - name
148:49 - save this and now we should see
148:54 - we should see if you click on oh look at
148:58 - that
148:58 - yo you see that right there guys check
149:00 - this out look epic room
149:01 - right away we have that and so and now
149:03 - if we change that if i click on dancer
149:05 - for example
149:07 - boom boom boom insane stuff
149:10 - insane stuff sunny guys
149:13 - guys alrighty nice
149:17 - so that's really really awesome um and
149:19 - what we're going to do is just to make
149:20 - it so it's super clear for you guys
149:22 - that it changes rather than doing the
149:24 - use effect from the set seed here
149:26 - i'm actually going to make sure that
149:27 - this one changes every time just because
149:29 - i just realized
149:29 - it's going to be a bit confusing because
149:31 - it looks like it doesn't change
149:33 - every time so would that say oh actually
149:35 - what i can do is i can actually make the
149:37 - seed
149:37 - change every time room id changes so
149:40 - there you go
149:41 - a little trick for you guys so now if
149:43 - you go ahead and
149:45 - click a room now
149:49 - try it dance room hey
149:52 - there we go oh so the outside changes as
149:56 - well
149:56 - nice oh look at that
149:59 - that's hilarious i love it nice
150:03 - so yeah give us some fire for those for
150:04 - those for those awesome avatars
150:06 - i love it exactly yeah i mean i was
150:08 - trying to look because you found a
150:09 - really nice one once and they used the
150:11 - same functionality but i couldn't find
150:12 - that one so i found this like
150:14 - pixelated looking one i kind of like it
150:16 - it just makes it so playful
150:18 - it kind of makes it like light-hearted
150:19 - you know yeah yeah yeah yeah
150:22 - so that's cool so then so now we have
150:24 - that working
150:25 - so what we're going to do now is we're
150:27 - going to go ahead and
150:29 - before we can do the messages we need to
150:32 - basically go ahead and do a login right
150:35 - so the login stuff
150:36 - so the login stuff stick with me guys
150:38 - this is going to get interesting now
150:40 - so i think this is where the 2.7 goes to
150:42 - 3k
150:43 - thank you so much yeah because this
150:44 - isn't crazy stuff right this is where
150:46 - we're going to introduce
150:47 - google authentication into this app
150:51 - all right so google authentication
150:52 - interface and we're also going to be
150:54 - using the react context api so if you
150:56 - guys are interested in learning redux
150:57 - this is your time right now so get
150:59 - excited we're going to teach you guys
151:01 - how to do that right now
151:02 - uh or the redux pattern with read react
151:04 - context api
151:05 - that's it so let's do it so inside of um
151:08 - app.js what we're going to essentially
151:10 - do now is we want to
151:12 - conditionally render this if there is a
151:15 - user
151:15 - logged in right so what do i mean by
151:18 - that so let's go ahead and say
151:20 - let's create like a temporary piece of
151:21 - states let's go ahead and say const
151:24 - user set user and let's go ahead and do
151:27 - this and say
151:28 - use state like this and i'm going to go
151:31 - ahead and say
151:31 - no at the moment like this and what i'm
151:33 - going to do is i'm going to say
151:35 - so at the moment imagine we don't have a
151:37 - user right so i'm going to say
151:39 - if there is no user so let's go and
151:41 - let's imagine that there's no user right
151:43 - now
151:43 - right now um
151:47 - what i'm going to say at this point is
151:50 - so before we have inside of our app
151:53 - we're going to say
151:55 - if there is a if there is no user then i
151:58 - should
151:58 - show some kind of login screen so like
152:00 - some kind of h1 say login
152:03 - yeah otherwise we should show the app
152:07 - right so does that make sense guys so
152:08 - we're saying if there's a user
152:10 - if there's no user show a login screen
152:12 - otherwise show the app so now i'll catch
152:14 - you if we see this
152:14 - uh so you say i need to go ahead and
152:17 - import
152:20 - like this
152:24 - okay oh i see i see i see okay yeah so
152:27 - now we get a login oh and also it's it's
152:29 - amazing how that
152:31 - actually is pretty good well i might
152:32 - just stick with that that's kind of
152:34 - clean
152:36 - so we have a login right but now look at
152:38 - the code so imagine like i go to this
152:40 - user
152:41 - and let's just pretend that like i had a
152:43 - user and he's just like this this
152:44 - represents the user sunny right
152:46 - right so now if i go ahead and imagine
152:48 - sunny signed in
152:50 - look what happens now so on a on a very
152:52 - high level
152:53 - this is what's going to happen right so
152:54 - now sunny's inside and it lets us go in
152:57 - right so at this point what we're going
152:59 - to do now
153:00 - is rather than doing it like this
153:02 - because this is not this is not
153:03 - realistic we're not going to have it
153:04 - like this
153:05 - we're going to basically go ahead and
153:06 - implement a login component so
153:08 - here what i'm going to do is uh i'm
153:10 - going to get rid of this
153:11 - as let's just keep that for a sec let's
153:13 - keep that for a sec i'm going to create
153:14 - a login.js component login.js component
153:18 - and do rfce boom let's go ahead and set
153:21 - this component up let's say import
153:24 - login dot css like this
153:27 - let's do class name equals
153:31 - login like this and then let's just do
153:33 - h1 let's just say this is login
153:35 - boom there we go and then what we're
153:37 - going to do is we're going to create a
153:39 - login.css so login.css over here
153:42 - nice we have it and going back here
153:45 - now once we have that done what we're
153:47 - going to do is we're going to actually
153:48 - go ahead and style this so
153:50 - we have a login um outer container so
153:53 - the way i've done this is previously
153:55 - this is based on the one that we used
153:56 - for slack
153:58 - so i'm going to go ahead and it has an
153:59 - inner container so a login container
154:01 - this is for style purposes
154:03 - and basically we have the following so
154:05 - i'm going to go ahead and just chuck
154:06 - this
154:06 - in right here so we have an image
154:09 - so um this image right here is just a
154:12 - whatsapp logo
154:13 - so literally i pulled it off of google
154:16 - we have a div which has login text and
154:19 - it's just a sign in to whatsapp
154:21 - and then we have a button and this is no
154:23 - normal button because the capital b
154:25 - this is a material ui button so i'm
154:26 - going to go ahead and import that from
154:27 - material ui
154:28 - and it should be underneath that i don't
154:30 - know why it does uh it's not nice uh
154:32 - yeah so we're going to import that from
154:33 - material ui
154:34 - and it's a type which has a submit so i
154:36 - mean it's just
154:37 - so we don't actually need that either
154:39 - and on click fires off a sign in
154:41 - function so here i'm going to say const
154:43 - sign in like this
154:46 - right so it fires off that function and
154:49 - there we go so now if i save this
154:51 - go back to my app and instead of
154:53 - rendering this i'm going to go ahead and
154:55 - render the
154:56 - login component
155:01 - oops when the the login component is
155:02 - really curious how it's actually going
155:04 - to work out like with the using firebase
155:05 - and login
155:06 - i'm very curious to see that yeah it'll
155:09 - be honestly you'll be amazed dude how
155:10 - like how powerful it is like
155:12 - um so there we have the login right
155:14 - there so i'm going to go ahead and first
155:16 - let's make this look a little nice
155:17 - so let's go to our login.css and i have
155:19 - a few little neat tricks here
155:21 - to get this looking as we want so for
155:22 - the login container
155:24 - i'm going to go ahead and do the
155:26 - following so i'm going to go ahead and
155:27 - say login
155:28 - like this i'm going to say a background
155:31 - color of
155:34 - background color of like this white
155:36 - color height and width of 100 view width
155:38 - and
155:39 - uh display grid and place items in the
155:41 - center so let's go ahead and do that
155:42 - first
155:44 - um and this will go ahead and it should
155:45 - centralize everything so we already have
155:47 - everything in center nice
155:48 - and i'm going to say for the inner
155:50 - container so here what i did is actually
155:51 - containerized i had
155:53 - in a container here as well uh i went i
155:55 - went and styled that and i basically
155:57 - added the following so this is
155:58 - basically gives it a floating card look
156:00 - so we give it a padding of 100 pixels
156:02 - text align center background color white
156:05 - border radius 10 pixels and this box
156:08 - shadow right here
156:09 - is just adding like a nice 3d effect
156:12 - right
156:12 - so if we go ahead and add those you see
156:14 - it adds like a little floating box
156:16 - yeah now for the image inside what i'm
156:19 - going to do
156:20 - i'm going to do the flow i'm going to
156:22 - say target the image inside of the login
156:23 - container
156:24 - and go ahead and do object fit contain
156:27 - which keeps the aspect ratio
156:29 - give it a height of 100 pixels and a
156:31 - margin bottom so a margin a bottom
156:34 - of the image of 40 pixels so it's not
156:36 - touching sign into whatsapp
156:38 - too much let's go ahead and save that
156:40 - nice little neat
156:42 - and then i'm going to go ahead and
156:43 - target that button so i'm going to go
156:45 - ahead and do the following say
156:46 - margin top of 50 pixels you see how by
156:50 - default sign in when you use a material
156:51 - ui button the text goes up a case
156:55 - so by doing a text transform so it says
156:58 - sign in with google
156:59 - yeah and you see by default it makes it
157:01 - uppercase
157:02 - yeah so you don't want it uppercase when
157:05 - like it's by the point in the designs
157:07 - like
157:09 - so you do text transform inherit which
157:11 - basically says go back to what your
157:13 - parent container did as opposed to the
157:15 - material ui button
157:16 - and then background color of green so
157:18 - like it's very nice green and we need to
157:20 - do important to override material ui
157:22 - and then we do the color white and then
157:23 - when we add that
157:25 - boom
157:29 - oh wow that looks good yeah so it's so
157:32 - clean like it's so clean and it's just
157:33 - such a simple thing like and once you
157:35 - get that in it's just
157:36 - i mean it's really satisfying once you
157:38 - get that up and running right
157:40 - now what we're gonna do is this is where
157:43 - the magic
157:44 - happens right so you would think oh my
157:47 - god you're going to have to do some
157:48 - crazy google stuff right now
157:49 - like how the hell do we get this all the
157:51 - way so that's what i'm thinking right
157:52 - now
157:53 - yeah so if you would you believe me if i
157:55 - said in less than 10 lines of code
157:58 - yeah we're going to get this all working
158:00 - and we're also going to have error
158:02 - handling
158:04 - all right frankly frank so
158:07 - so yeah thanks so much for the donation
158:10 - appreciate it my friend
158:12 - hey right here nice says
158:16 - another awesome react build what's up
158:18 - what's a better watch out
158:20 - see you on the zoom call today sunny
158:22 - nice
158:23 - awesome dude see you then so and now we
158:27 - have
158:28 - the sign in functionality so what we're
158:30 - going to do is we're going to say
158:30 - firstly
158:32 - um i'm going to do so first i'm going to
158:34 - do auth
158:35 - so auth is something that we um set up
158:38 - from our firebase
158:39 - module so i'm going to do it for my
158:40 - local firebase pulling that from my
158:42 - local fibers i'm saying auth
158:44 - dot and nas check this out right
158:48 - now sign in with
158:52 - pop-up no yeah
158:55 - forward and then open and then what we
158:56 - do is we say provider and provider we
158:58 - set up inside of our firebase file so
159:01 - the provider if we jump into our
159:02 - firebase file we actually made provider
159:05 - a google authentication provider right
159:09 - so that's it right so we do that that's
159:11 - it
159:12 - we say off dot sign in with pop-up and
159:15 - then you say
159:16 - then what what then
159:20 - not the result and here what i'm gonna
159:22 - do is just to sort of demo i'm going to
159:23 - say console.log
159:25 - the result console.log result
159:28 - and for error handling i'm going to say
159:30 - you know what if we get an error
159:32 - catch it
159:35 - uh i won't say what is going on here
159:37 - what am i done oh you need to
159:40 - yeah there you go all right then we say
159:42 - catch
159:44 - say error and if there is an error for
159:46 - whatever reason i'm going to say alert
159:48 - error dot message boom
159:52 - save it now why don't you go ahead and
159:56 - click on that sign in button though
159:59 - no yep you're kidding
160:06 - and it's going to crash i have a feeling
160:08 - it's going to crash
160:09 - okay oh so now you see it's disabled
160:14 - uh-huh yes this is why we're handling
160:16 - this that was super planned by the way
160:18 - i knew it was going to fail i wanted to
160:20 - show that you built up so you built up
160:22 - so much you know anticipation it's like
160:25 - yeah like you would think that we're
160:27 - almost there right
160:28 - but now if you go to your firebase okay
160:31 - so let's go to firebase
160:32 - right here okay go to your
160:34 - authentication okay
160:36 - go to google so go to your sign in
160:40 - method
160:40 - setup send a method yep and that's right
160:44 - google tab disable oh
160:52 - do that and click save
160:56 - and now let's go back to the react app
160:58 - and give it a try no way
161:00 - yep no way get out of here sonny no
161:03 - wait and and while we have it um
161:06 - while we have that also open up your
161:08 - console
161:11 - that comes back hold on hold on hold on
161:14 - console guys this is i mean
161:18 - okay i will explain why to me this is
161:20 - insane just
161:21 - after after we watch this you'll see why
161:25 - so sign in with google yep ready
161:29 - no no no this is not no way no way
161:32 - hold on no way
161:36 - okay
161:42 - what yep oh man
161:45 - you have all of your user details in
161:47 - there um
161:48 - okay i'm out all right bye-bye all right
161:50 - okay okay
161:52 - i'm out of state all right it's insane
161:55 - how crazy and easy that is
161:56 - the reason why guys i i'm like i'm like
161:58 - acting like this
161:59 - it's for one anticipation a little bit
162:01 - but for two but for two because
162:03 - i've done signing with with google right
162:06 - manually we're not using firebase right
162:08 - i've done it where you actually yourself
162:10 - had to you know add your own button
162:12 - you had to you know uh basically make
162:14 - sure that all works with google
162:16 - and you were the one creating the code
162:18 - for the google sign in
162:20 - i'm not kidding this would take us
162:21 - sometimes days
162:23 - yep
162:26 - this took us how long man literally and
162:30 - i said it was ten lines ago but it's
162:31 - actually like
162:32 - one two three about four all right all
162:34 - right all right all right
162:35 - too far you're going too far two fifty
162:38 - five
162:40 - actually just one line of code no but
162:42 - that's awesome that is that is so crazy
162:44 - like to me
162:45 - oh man that's insane all right but let's
162:47 - look at what what's actually what
162:49 - what type of stuff are we actually
162:50 - getting what type of information are we
162:51 - getting from google
162:53 - so let's go ahead and we the one we care
162:55 - about at this point is and no no no this
162:57 - is crazy because
162:58 - remember you know like for some things
162:59 - you need a um
163:03 - api key right see inside a credential
163:06 - the id token is your api key
163:10 - wait what well i'll say it again so so
163:12 - once you sign in it gives you an api key
163:15 - that you can use to use google services
163:17 - oh really
163:19 - yep oh man that's insane okay so
163:23 - wait what why would i use that api key
163:25 - for
163:26 - so i think you can use it for like
163:27 - google maps and stuff like that oh okay
163:29 - interesting okay
163:31 - that's cool i think and then it looks
163:33 - you guys have a display name so this
163:34 - actually gives you display name right
163:35 - there
163:36 - right there your the email all right
163:38 - there
163:39 - guys don't email me please um oh man
163:42 - why do i use that damage it gives you
163:46 - your photo url so
163:48 - my photo url where right there so yeah
163:52 - it has your actual picture
163:53 - this is some dangerous stuff okay all
163:54 - right that's uh cool all right
163:59 - nice so with that said now what we're
164:02 - gonna do is
164:02 - so when we get back rather than console
164:04 - logging that what we're going to do now
164:06 - is we want to dispatch that information
164:08 - into some kind of data layer so
164:10 - i'm not going to go too far into how
164:12 - like the redux
164:14 - sort of pattern works but i'm going to
164:16 - show you guys an implementation of it
164:17 - very quickly so we can get the most
164:19 - value from this video right
164:20 - because we do cover this very
164:22 - extensively in some videos and we
164:23 - actually just dropped a uh
164:25 - a little snippet video which is about
164:26 - six minutes i think which
164:28 - explains all about redux and all about
164:30 - those things and we snipped it from a
164:31 - previous video so you guys can go ahead
164:32 - and watch that after
164:33 - which massively useful so now what the
164:37 - way it
164:37 - works is we need something called a
164:38 - state provider right so this is
164:40 - basically going to wrap the app
164:41 - okay okay so and where where does this
164:44 - happen it happens at the index.js
164:47 - so this is a file that nobody likes to
164:48 - touch because everyone's scared of this
164:50 - file
164:51 - [Music]
164:52 - we go here and basically it's going to
164:55 - essentially
164:56 - wrap the app okay
164:59 - so imagine at this point this wraps our
165:01 - app so the state provider is basically
165:03 - like a data layer so it surrounds the
165:05 - app and then basically
165:06 - what we can do is we can push
165:07 - information into the data layer and we
165:09 - can pull it
165:09 - from any component so our goal here so
165:12 - just to make it very clear our goal here
165:14 - is that when we sign in we push the user
165:17 - into the data layer
165:18 - and then we can pull that when we pull
165:22 - before the user from the data layer
165:24 - whenever we need it
165:26 - right
165:31 - now what we're going to do is
165:34 - we have two things we have the initial
165:36 - state and reducer so i explain what they
165:38 - are in a sec
165:39 - but to get the state provider working to
165:42 - get the state provider working
165:44 - i mean there's a state provider dot js
165:48 - right now what i want you guys to pay
165:51 - close attention to here is
165:55 - merman goes what was that noise
166:01 - so now we can do is we can copy this
166:05 - i'm going to run through the snippet of
166:07 - code right here so now this enable
166:09 - uh word wrap okay so view um
166:13 - all right cool sergeant actually just
166:14 - dropped the uh the link to that video i
166:16 - was talking about in the description
166:18 - thank you for doing thank you so
166:21 - i'm gonna explain quickly what's going
166:22 - on here guys so this is just importing
166:24 - the things that we need
166:25 - right at the top and then the next line
166:27 - is basically preparing that data layer
166:29 - right it's creating something called a
166:31 - context
166:32 - which is where the data layer actually
166:34 - lives right where everything actually
166:35 - lives
166:36 - and
166:37 - [Laughter]
166:48 - the data layer is actually this here the
166:50 - state provider
166:52 - and this is called a higher order
166:54 - component okay
166:57 - so it's got a higher order component it
166:59 - takes three things to take to reduce
167:01 - the reducer an initial state and
167:04 - children oh my god
167:07 - oh man oh i think you guys smash the
167:10 - thumbs up button if you haven't already
167:12 - thank you
167:12 - appreciate it
167:19 - all right we're good okay okay we're
167:20 - good we're good we're good
167:26 - we have to reduce the initial state and
167:28 - then the children the children
167:29 - are is here so the app child is this one
167:32 - here
167:33 - and then we have the reducer and initial
167:34 - state which i'll explain in a sec
167:36 - now this stuff right here we explained
167:38 - in that video but basically we need to
167:40 - know
167:40 - is it allows us to go ahead and actually
167:43 - set up the data layer
167:44 - now this final line here allows us to
167:46 - pull information
167:47 - from the data layer right so we can go
167:49 - ahead and pull it from the data there
167:51 - right so now what we're going to do is
167:54 - we actually save that file we need to
167:56 - create a file called reducer reducer.js
167:59 - right now um
168:03 - go ahead and do reduces.js and here what
168:06 - i'm going to do is i'm going to copy
168:07 - the following in here we're going to
168:09 - explain this code now so the initial
168:11 - state
168:11 - is how the data layer looks before we've
168:14 - added to it before anything so when the
168:15 - app starts up
168:16 - we're going to start off with it with
168:17 - the user not being logged in which is
168:19 - what we want right
168:20 - okay then we're going to have we have
168:22 - certain actions and these certain
168:23 - actions are basically
168:25 - the actions that we can this is where we
168:27 - can push information into the data layer
168:29 - so for example when we sign in we're
168:31 - going to dispatch an action which says
168:32 - go ahead and push this user into the
168:34 - data layer
168:36 - where does this action be dispatched
168:38 - from where what are you talking about
168:40 - so so the action being dispatched we
168:42 - haven't covered yet
168:43 - okay gotcha yeah we haven't covered that
168:45 - but yeah but um
168:46 - when when an action gets dispatched into
168:49 - the data layer
168:50 - we basically we switch on and we listen
168:52 - to it here we say okay
168:53 - what action did did you just dispatch so
168:55 - here i'm saying
168:56 - if you dispatched a set user action
168:59 - then go ahead and whatever we return is
169:02 - basically how we
169:04 - intend to change the data layer right so
169:06 - here what i'm saying is
169:09 - keep the keep the state of the data
169:11 - layer so keep everything that was
169:12 - already in there
169:13 - but change the user to be whatever we
169:16 - dispatched
169:17 - and whatever is in in particular inside
169:20 - of the user
169:20 - portion of the object that we dispatch
169:22 - all right
169:24 - now if we don't uh it feels like for
169:26 - example some other thing like set
169:28 - um set car or something like that we
169:30 - just fall
169:31 - for we fall back to a default state
169:32 - which basically just says return and
169:34 - don't do anything with that
169:35 - okay by the way guys 2.8k likes
169:38 - in so good thank you all so much
169:42 - i love you all so close to 3k
169:45 - guys let's do it come on you guys can do
169:48 - it
169:49 - almost almost just 200 more come on come
169:51 - on
169:52 - exactly insane love that right so now we
169:55 - have this setup right
169:57 - so what we need to do now is when we
169:58 - initially set up the data so where we
170:00 - wrap the app we need to go ahead and
170:01 - import
170:02 - the initial state and import the reducer
170:05 - so that's what we do here right we do
170:08 - that we hit save
170:09 - i need to also import the state provider
170:11 - so import
170:13 - so it's kind of like redux basically is
170:15 - it not it's almost like really
170:16 - dude it's exactly like redux it's
170:18 - exactly right
170:19 - but the implementation and the setup for
170:22 - it is much simpler than redirects
170:24 - agreed i have agreed so now what we're
170:27 - going to do is somebody actually said
170:28 - can you show how
170:29 - how you can implement persistence with
170:31 - context i will actually do that in a
170:32 - different video not today
170:34 - but we will do that in a different one
170:35 - right oh nice cameron thank you so much
170:38 - he just dropped a donation five us
170:40 - dollars he says what is the get up link
170:41 - for this
170:42 - we will go ahead and post this
170:44 - afterwards and we'll link it in the
170:45 - description
170:46 - so that you guys can go ahead and have
170:47 - access to the code so
170:49 - don't worry about that yeah thank you
170:51 - for that dude
170:52 - right um nice so now what we're going to
170:56 - do is we have app and then we have the
170:58 - state provider awesome
170:59 - so let's go ahead and do the following
171:02 - so now what i'm going to do is
171:04 - remember when we signed in guys so
171:05 - inside of login.js
171:07 - what we can do is rather than just
171:08 - console.logging because this doesn't do
171:10 - much this doesn't do much for us we
171:11 - don't really get any power out of this
171:13 - what i'm going to instead do is i'm
171:15 - going to pull
171:17 - some stuff from the data there so what
171:19 - i'm going to pull here is this is the
171:20 - syntax for it so you see it's very
171:21 - similar to how we use hooks
171:23 - so the use state value is the hook that
171:24 - we created inside of the
171:26 - the setup when we done it here so this
171:28 - one right here
171:30 - right so what i'm doing is i'm getting
171:32 - this is the first part is the state
171:33 - so we're putting something in state so
171:35 - you could at this point destructure and
171:36 - say get me the user
171:37 - but in this case we're not using
171:38 - anything from the state and then the
171:40 - second thing it gives us something
171:41 - called a dispatch now the dispatch is
171:43 - like a gun
171:44 - it's like literally the way i like think
171:45 - it's like a gun and basically you put
171:47 - whatever payload is and you shoot it at
171:48 - the data layer to update the data there
171:50 - right
171:51 - so at this point we get the dispatch and
171:53 - here i want to say
171:57 - go ahead and do the following so
171:59 - dispatch an
172:00 - object right and that object is going to
172:03 - be the following it's going to have
172:04 - so remember that we're going to dispatch
172:06 - an action type which is
172:08 - um so what i did is to avoid sort of
172:12 - accidentally typing in the wrong string
172:13 - and things like that inside of
172:14 - reducer.js i actually created an object
172:17 - with the correct mapping so you see here
172:19 - set user is is
172:20 - assigned to set user and then what we're
172:22 - doing is we're saying the type is the
172:23 - set user action
172:25 - and then the user is whatever we got
172:27 - back from google
172:29 - dot user because that was all of like
172:30 - nars information when you when you
172:32 - signed in
172:33 - right right can we also what if we what
172:35 - if we use simply for example
172:37 - what if we but what we what if can you
172:40 - also replace that with like set stake
172:41 - for example
172:43 - uh well here like yeah no no what i'm
172:46 - saying is like instead of
172:46 - using reducer or using yeah using
172:49 - reducer we just simply set the
172:51 - set a set state on a user at the upper
172:54 - level so you can but what happens at
172:58 - that point is and this is why you end up
173:00 - using redux and react context applies
173:02 - because you end up with something called
173:03 - prop drilling
173:04 - where basically imagine we have the user
173:06 - at the top level and i need that user at
173:08 - a very very low level in the tree
173:10 - right and yeah very long i now need to
173:12 - pass the user through every single
173:14 - component
173:15 - to get to that point yeah that's right
173:17 - because this allows you to just
173:19 - just straight away pull it from the data
173:21 - got it yes it makes the code overall
173:22 - more clean
173:23 - so now inside of app.js what we can do
173:25 - so this will actually dispatch the user
173:27 - into the data layer
173:28 - now from here we're not going to pull it
173:30 - from the use data instead what we're
173:32 - going to do is we're going to say oops
173:33 - instead what we're going to say is i'm
173:36 - going to
173:37 - go ahead and pull the user from our data
173:40 - layer
173:41 - and i'm going to say so i need to import
173:43 - the user state like this
173:44 - yeah pull the user in and now because
173:48 - we're checking this condition based on
173:50 - the user inside the data layer as
173:51 - opposed to the the use states and now
173:53 - what will happen is if i save it
173:55 - and knows if you want to uh after it
173:56 - refreshes run through the login flow one
173:59 - more time
174:00 - cut all my emails up there and guys i
174:03 - think if this works
174:05 - i think if you haven't already you
174:07 - should definitely be smashing that
174:08 - thumbs up button because this is insane
174:09 - what we just did right there
174:11 - oh look at that
174:14 - it's insane and if you if you open up
174:18 - the
174:18 - um console log
174:22 - okay so what i did is i actually console
174:24 - logged at the reducer point
174:27 - right so we should see a set action got
174:29 - dispatched
174:30 - so let's go up say user oh yeah
174:33 - yep and that's it and what you can do is
174:35 - guys this is really handy because then
174:37 - now we can see what we have to play with
174:39 - right
174:39 - so an example here is uh we don't have
174:42 - position
174:42 - persistence in this uh when we're using
174:45 - this version of like the google
174:47 - login so when you do refresh it you have
174:49 - to log in again but it's not it's fine
174:50 - when you use it a different way i will
174:52 - go over that in a different tutorial so
174:53 - when you say when you're saying
174:54 - persistent i just want to clear that up
174:55 - when you're saying persistent what
174:56 - you're saying is that
174:58 - like it doesn't save um look it doesn't
175:01 - say the specific
175:02 - users when you sign in back again
175:04 - basically it's not going to remember all
175:06 - your past messages
175:08 - you're going to sign in again is that
175:09 - what you're saying so now if you was to
175:12 - refresh you'd have to sign in again yeah
175:13 - gotcha gotcha that makes sense okay yeah
175:16 - but because it's very quick using the
175:17 - google thing i'll show you how we get
175:18 - around it when we're debugging and stuff
175:20 - cool but at this point um we have the
175:22 - user so i just want to show you guys
175:24 - when you have the user
175:26 - now let's assume let's go to the sidebar
175:28 - for example let's go over to the avatar
175:30 - that we had in the sidebar
175:32 - and let's actually go ahead and change
175:33 - this so instead of like an empty image
175:36 - let's go ahead and use the user's image
175:38 - right so here what i can do is i can go
175:40 - ahead
175:40 - i can pop this magic piece of code in
175:42 - which goes ahead and pulls the user from
175:44 - the data layer
175:45 - yes you can see how simple it is now
175:47 - once you have the data up and running
175:49 - right now what you can do is you can
175:51 - actually go ahead and do
175:54 - uh with the avatar you can go ahead and
175:56 - say set the source
175:58 - to user dot photo url which is actually
176:02 - the user's
176:03 - image that comes back from google now
176:04 - notice how i have a question mark here
176:06 - because we're doing optional chaining so
176:08 - it's saying if user is undefined because
176:10 - the user may be undefined for a split
176:11 - second
176:12 - when there's sort of that async sort of
176:14 - uh behavior going on then
176:16 - we want to protect against that yeah you
176:18 - see it with the
176:19 - oh shoot never mind you guys saw how
176:21 - there was a photo url key right
176:22 - that was there yeah though hold on if we
176:25 - try again
176:26 - right if i go ahead and sign it again
176:28 - boom
176:33 - so a few people so somebody said login
176:35 - session should stay on refresh
176:36 - yeah it should do but when you're using
176:38 - the google authentication you actually
176:40 - need to keep the uh the access token and
176:42 - we don't we're not doing that in this
176:43 - tutorial so you can see right there
176:45 - say user right for the user and you can
176:48 - see the url
176:49 - is coming from where the photo url right
176:51 - here you see that
176:52 - and that's coming from google yep
176:54 - beautiful exactly okay sweet
176:56 - nice steve mccarty said uh to check out
176:58 - rico and he said this a few times now so
177:00 - i will definitely go ahead and check
177:01 - that out because i'm actually super
177:03 - interested in seeing this
177:04 - but back to the sort of topic at hand
177:06 - guys it's how nars is popped up
177:08 - so you see nars is actually over in the
177:10 - corner
177:12 - oh yeah right there look oh my wow
177:15 - damn look at that
177:20 - that's crazy that's i love it that's so
177:22 - cool yeah
177:24 - wow so now we actually have this so we
177:26 - know that the user is actually inside
177:27 - right so that's awesome and now what we
177:29 - can do with that is some clever stuff we
177:31 - can do some really clever stuff with
177:32 - that now
177:33 - we can do some we can pretty much finish
177:35 - the app we can finish off the rest of
177:36 - the app
177:37 - with that stuff set up now so let's go
177:39 - ahead and go over
177:41 - to the um sidebar
177:44 - chat and we already done it so that when
177:46 - you when we went to
177:47 - the sidebar chat um let's go ahead and
177:51 - go to
177:51 - chat.js we basically want to have it so
177:53 - let's go ahead and set up the
177:55 - messages at this point so we've got the
177:56 - chat.js
177:58 - now inside of chat what we need to do
178:01 - now
178:02 - is we need to basically do a few things
178:04 - we need to basically have it so that
178:06 - when we send a message it goes into so
178:10 - everything will say let's open up
178:11 - firebase for a second nice
178:13 - okay let's open up
178:16 - the uh database okay so remember we had
178:20 - a collection of rooms
178:21 - and inside of the room you had the
178:22 - actual room itself and inside of the
178:24 - room you can have another collection
178:27 - so in each of those rooms we're gonna
178:29 - have a collection of
178:30 - messages got it so should i do start
178:33 - collection
178:34 - no no it has to be in on the right so
178:36 - you see it's inside that room in the
178:38 - inside of that collection
178:39 - and then here it would be messages right
178:41 - so messages
178:43 - okay click next and auto id
178:46 - and what we what do we have a message
178:48 - text so
178:49 - inside of here we'll have a message
178:51 - itself so the actual
178:52 - will be message and this could be like
178:54 - hey guys or something
178:56 - hey guys okay cool another field you can
178:58 - have a name
179:00 - name so name this the person's name is
179:02 - what you're saying
179:03 - yeah so let's just say nas for example
179:05 - okay
179:07 - and then you'll have it timestamps if
179:09 - you click timestamp
179:11 - and then and then this is this would be
179:12 - like added right added
179:15 - yeah right so another time we're gonna
179:17 - call it timestamp
179:19 - yeah and then go to type and change it
179:22 - to timestamp
179:23 - mm-hmm and let's make it today's day
179:31 - and that's all good yeah yeah i don't
179:33 - need that and that's it click save
179:35 - yeah so now we have essentially a
179:38 - message inside of the room
179:40 - right so that's the data structure that
179:41 - we're going with here okay
179:43 - okay so inside the dance room we have
179:45 - one message from nars
179:46 - which is inside the room right so how do
179:49 - i pull those messages in so that's the
179:51 - first question
179:52 - let's go ahead and let's go ahead and
179:53 - and get that up and running
179:55 - so what we're going to do is we're going
179:57 - to create a piece of state
179:58 - called messages which keeps track of all
180:01 - the messages
180:01 - so i'm going to go ahead and do that
180:02 - messages set messages use state empty
180:04 - array
180:05 - initial value and then inside the user
180:07 - effect where we done the
180:09 - where we grab the room name what i'm
180:12 - going to go ahead and do i'm going to
180:12 - say dbe.collection
180:14 - so go into the collection of rooms then
180:17 - i'm going to say go into the document
180:19 - which is the room id and remember this
180:20 - is passed in the url
180:22 - because we're using react then i'm going
180:25 - to say go inside the collection
180:27 - of messages okay yeah
180:30 - and then i'm going to say go inside a
180:32 - collection of messages and then go
180:34 - inside of and then also when we get the
180:36 - collection of messages
180:37 - order by timestamp so you can literally
180:41 - do all of this in the line which is
180:42 - insane
180:43 - so order it by ascending
180:46 - right and then from the oldest to newest
180:50 - yeah and then get the snapshot um and
180:53 - then get the latest
180:54 - snapshot so it's also real time so this
180:56 - is insane all of this is in one line of
180:58 - like code
180:58 - is it it's unbelievable yes
181:02 - yeah it's insane right like you set
181:03 - messages you say snapshot
181:05 - dot docs dot
181:08 - map and basically what i'm saying is map
181:10 - all of the document like all of those
181:12 - message
181:13 - um objects so all i want is the object
181:15 - so i'm gonna say get the data from each
181:17 - of those objects
181:18 - bubble it up into an array and pop it
181:20 - into my messages array so use it like
181:22 - here yeah so now what that does is if we
181:25 - save it it goes nicely formats it
181:28 - does it all that we want and now inside
181:30 - of messages
181:31 - instead of actually rendering out what
181:33 - we had down here so we had like this hey
181:35 - guys blah blah blah
181:37 - what we can now do is i can change this
181:40 - and i can say
181:41 - inside the chat body also loop over
181:43 - every single message okay
181:45 - yep map through them and say for every
181:47 - single message
181:49 - i want you to i want you to
181:52 - basically output this so i'll put the p
181:55 - tag
181:56 - right i'll put the p tag um and
181:59 - basically have it so that
182:01 - it's not there's it's not the the it's
182:03 - not sunny sanger it would say
182:05 - message dot name because that would be
182:08 - the person's name
182:10 - instead of hey guys it's gonna be
182:13 - message dot dot
182:17 - exactly and then for the time stamp
182:20 - there's a magic piece of code right
182:21 - so there is a magic piece of code here
182:23 - and just use this use this format
182:25 - because it is a very simple way of
182:26 - handling timestamps in
182:28 - firebase it will make your life a little
182:29 - easier guys so um
182:32 - check this out so uh i don't know if
182:34 - somebody just
182:35 - joined again actually yeah did they
182:38 - at the emmy uh iodipe i think
182:42 - if you if you joined and you're on the
182:43 - live stream let us know dude
182:45 - because we'd love to see that that is
182:47 - sick heck yeah
182:49 - guys so many of you are joining i know
182:51 - and so many of you are enjoying
182:52 - the course and the coaching calls um
182:55 - yeah just
182:56 - if you're interested guys remember guys
182:59 - link in description for the profit of
183:01 - javascript course but also most
183:02 - importantly is we have a completely free
183:05 - master class for you uh also down down
183:07 - the description
183:08 - no nothing no money from you at all
183:10 - check it out link
183:12 - in the description below all right let's
183:14 - continue exactly
183:16 - definitely go and check that out guys
183:17 - free training so definitely go
183:19 - and yeah have a look at that who wants
183:21 - so for the time
183:23 - i know right exactly yeah for the time
183:26 - stamp guys what we're going to do is
183:27 - we're going to say
183:27 - new date and i'm going to say
183:29 - message.timestamp we're giving a
183:31 - question mark because this could be
183:32 - undefined at some point
183:34 - and then we're going to say today
183:35 - because basically that's how you
183:36 - translate it to a date and then you say
183:38 - to a utc string and basically this is
183:40 - just gonna
183:40 - make it look kind of pretty in a date
183:42 - format so if i save this
183:44 - now let's go over to our app
183:49 - okay let's sign in
183:52 - sign in
183:57 - so robson ribeiro this live will be
183:59 - saved yes
184:00 - yes of course guys all right cool
184:07 - all right right there so now let's go
184:11 - into the dance room and we should see
184:12 - that message that nas added
184:14 - yo look at that
184:19 - all right i like it i like it
184:22 - nice guys guys
184:26 - this dessert hold on hey
184:29 - there we go and we still have
184:33 - literally over half a thousand people
184:36 - watching
184:37 - like holy crap dude this is insane
184:41 - oh my god we have 600 people we have 600
184:44 - 605 people watching right now
184:48 - 605 because you've got facebook as well
184:50 - right that's yeah yep
184:51 - um that's awesome dude um yeah guys
184:54 - let's push this to 3k
184:56 - likes i'll make my day like
184:59 - nars will get like super pumped up if
185:02 - you we're gonna if we get to 3k likes
185:05 - we're going to get sun to dance how
185:06 - about that
185:06 - [Laughter]
185:10 - so now now what we're going to do
185:14 - is we are going to
185:19 - remember today
185:24 - you know it's not always easy coding
185:26 - these apps guys
185:28 - um let's go ahead and carry on so
185:32 - we have the message coming through now
185:35 - so what we want to do now is actually
185:36 - have it so when we
185:38 - send the message when you type it in it
185:40 - basically does that manual step of when
185:42 - nars actually manually added it right
185:44 - so that's very simple to do what we need
185:46 - to do is go ahead and say
185:48 - the following so we're going to say when
185:50 - we send the message we're going to say
185:52 - db.collection
185:53 - go inside of the rooms collection yeah
185:57 - go inside the dock and we're going to
185:58 - use the room id to go ahead and
186:00 - find the correct uh room then we're
186:02 - going to say go inside that collection
186:04 - of messages and then we're going to add
186:08 - a message inside of there right and then
186:10 - we're going to add remember those things
186:11 - that nas added to the message the user
186:13 - yeah
186:14 - the time stamp so the message is going
186:16 - to come from the input
186:18 - so the input that we have in our local
186:20 - state the name of the user is going to
186:22 - come from the user
186:25 - right so which means that we actually
186:26 - need to go ahead and pull that in from
186:28 - our data layer
186:29 - so whoever's logged in we're going to go
186:31 - ahead and get them from the data layer
186:33 - and we're going to use their display
186:34 - name as the uh as their name so display
186:38 - name as the name nice and then we're
186:40 - going to say the time
186:43 - it's user.name sunny no no no it's a
186:46 - user.display no no
186:48 - so not that name so the the name key is
186:51 - here
186:52 - okay right but but the user.displayname
186:55 - is coming from google
186:56 - authentication oh gotcha okay makes
186:58 - sense
187:00 - so that's where that's coming from right
187:02 - and then the timestamp so you don't want
187:03 - to use a local timestamp
187:05 - you want to use the one that's on the
187:06 - server because then say for example nars
187:08 - where are you right now where about what
187:10 - are you
187:12 - where am i at i was just i was showing
187:14 - them what are you talking about
187:16 - no no i'm saying in in the world right
187:17 - now like where abouts are you
187:19 - in europe detroit detroit detroit right
187:22 - so nazis in detroit and i'm in london so
187:24 - our timestamps are going to be different
187:26 - right they're going to be very different
187:27 - and stuff so to avoid that problem
187:29 - what we can do is we can use the server
187:31 - timestamp and to do that
187:33 - what we're going to do is we'll import
187:35 - firebase from the actual module firebase
187:37 - so not a local one up here we import it
187:39 - from an actual firebase
187:40 - and then what we say is timestamp
187:42 - firebase
187:43 - dot um firebase.firestore
187:48 - dot and then what we say is field value
187:51 - right and then this you then what you do
187:53 - is you type in you say server
187:54 - timestamp and it's a function at the end
187:57 - of it so like that's how you do that and
187:58 - basically that will go ahead and get the
188:00 - service timestamp on the the server that
188:03 - where this is all hosted
188:04 - right now it says use state value is not
188:06 - defined let's go ahead and import that
188:08 - boom like that now with that said and
188:11 - the reason why we do this guys the
188:13 - reason why i would use the times is
188:14 - i think you you said that it's because
188:17 - the fact that
188:18 - our times are different while the server
188:20 - time is always going to be the same
188:22 - right so if you simply add the correct
188:24 - times and we can then on the front end
188:26 - on our side we can change times
188:28 - depending on where the user is so
188:30 - so for example if sign is in london it
188:32 - will show him
188:33 - london times if i am in detroit it will
188:35 - show me detroit times right
188:37 - so that's how we do that exactly that
188:40 - guys exactly that
188:42 - yep all right shall we try it out so now
188:44 - let's try out dude let's sign in
188:46 - sign in all right let's go i'm excited
188:50 - i'm excited
188:54 - okay okay all right
188:58 - okay all right let's see
189:01 - guys wait what is okay okay so hold on
189:03 - now this let me type something right
189:06 - yep yo
189:09 - what is there look at that hey nice
189:12 - now we want to make a tweak here right
189:15 - so we want it to only show up as green
189:17 - for the message that you wrote so this
189:19 - is actually pretty good a good use case
189:20 - so let's assume that the first one you
189:22 - added was from
189:22 - nars it was actually technically
189:24 - different than azari dominsky right
189:27 - yes so in terms of in in terms of like
189:29 - what what the computer knows right so
189:31 - that's going to be
189:32 - the sort of difference here so what we
189:34 - can do is we can use that as our sort of
189:35 - test case
189:36 - and what we can say is remember where we
189:37 - had that true condition
189:40 - right now what we can do is we can say
189:43 - when the message name is equal to the
189:46 - user's display name
189:48 - because as you as as is pushed in from
189:50 - programmatically this always going to be
189:52 - that correct
189:53 - user's display name so now what will
189:54 - happen is if we actually log in
189:56 - so i know it's a bit annoying but we
189:58 - won't have to keep doing it but if we
189:59 - log in now
190:03 - hold on let's see right there all right
190:05 - good
190:07 - yep
190:10 - right there oh okay okay okay
190:14 - you see that all right
190:17 - go ahead i was gonna ask you how how
190:19 - that happened so just kind of uh
190:20 - logic wise yeah so logic wise what we
190:23 - did is this condition right here made
190:25 - that happen
190:26 - so we're saying if the message name
190:29 - is equivalent to the user's display name
190:32 - so the one that is set in google
190:34 - right then it would classify as that's
190:37 - from you
190:38 - right so now this is okay on a demo
190:40 - purpose right
190:41 - but two people might have the same name
190:43 - right yeah so if you're gonna use this
190:44 - in production
190:45 - i would recommend using something like
190:46 - the id that you get back from google
190:48 - or something like that that's the
190:50 - professional put like
190:52 - production way but in this case we want
190:54 - to kind of get a middle ground between
190:56 - what's you know readable and not so many
190:58 - ids and stuff like that so
191:00 - in this case it's functionally working
191:02 - we're not going to have too many clashes
191:03 - of people with the same name at this
191:04 - point
191:05 - until we get to 100 million users um
191:09 - tomorrow at this point you can see now
191:11 - yeah now we've got the
191:12 - so we've got a few things to fix at this
191:14 - point we've got last seen at
191:16 - on the top of the chat header and we
191:18 - also have the styling on the left side
191:20 - so we have dance room dev room epic room
191:22 - and you see where it says last message
191:24 - right
191:24 - so let's fix those two areas and then at
191:27 - that point
191:29 - i think we are ready to get done and i
191:30 - think if we can hit 3k likes before that
191:33 - dude it's just going to be ultimate 2.9k
191:36 - right now oh oh
191:40 - so close insane
191:43 - insane dude honestly like
191:49 - one second dude what's up okay
191:53 - uh okay so now what we're gonna do is
191:57 - we are going to we have the
192:05 - um okay so now what we're going to do is
192:07 - we're going to fix those few issues so
192:09 - the number one is we have dance room at
192:12 - the top so
192:13 - last scene at so where we have that is
192:16 - inside of
192:18 - the s chat.js so
192:21 - chat.js
192:24 - and that is seen at where we have last
192:27 - seen at and that's on
192:29 - line 60 so here so now what we want to
192:31 - do is we essentially want to basically
192:33 - pull this
192:34 - from the message right so we're
192:37 - basically what
192:38 - we want to do here is we want to
192:39 - essentially have last
192:41 - scene app and we're going to use the
192:44 - we're going to use the um the last
192:48 - message that was on that collection to
192:51 - determine
192:52 - when the last activity was on that group
192:55 - chat
192:56 - right so here i say new date messages
192:59 - messages dot length minus one right so
193:02 - this is what this is
193:03 - where are we getting any of this from
193:05 - right like where does this come from
193:07 - and where this is gonna happen now is
193:08 - what i'm gonna do is when we're inside
193:09 - of here
193:11 - remember guys in the chat we actually go
193:13 - ahead and we pulled the messages
193:15 - so all i'm saying is the last scene
193:18 - is the timestamp from the last
193:21 - message that was sent right so
193:24 - the last message that was sent and to
193:27 - avoid the sort of
193:28 - logging in and stuff like that i'm going
193:29 - to show you a quick trick and don't
193:30 - forget to undo this
193:32 - but if you go here and just change it to
193:34 - a string of no instead so you could be
193:35 - like no sonny whatever
193:37 - here if i go ahead and save this now you
193:39 - won't have to log in again
193:40 - but just don't send the message
193:42 - otherwise the user is going to be
193:43 - undefined and it's going to cause a bit
193:44 - of headache in your
193:45 - you think so now it'll say last scene
193:48 - you see that
193:48 - it says last scene tuesday 18th of
193:50 - august and
193:52 - that lines up last message
193:56 - [Music]
193:59 - okay so that's nice right so it says
194:02 - last scene tuesday 18th of august
194:04 - and it has everything there so it's the
194:05 - last time a message was created
194:07 - basically
194:08 - yeah exactly that was the last time
194:11 - so if if we actually was to send a
194:13 - message it would actually show
194:15 - um don't don't do it now because
194:18 - uh i mean if you do it now i think it
194:20 - might error out because
194:21 - we don't have the user on there so so it
194:24 - might error out so
194:26 - yeah right yeah it looks like it is yeah
194:28 - yeah looks like it is so it won't let me
194:30 - hit enter oh okay all right perfect yeah
194:33 - okay so there we go yeah
194:35 - because remember i've actually just i've
194:37 - changed it because here i've done a sort
194:40 - of bypass so that we don't have to log
194:41 - in again
194:42 - but okay so that's that's cool so now on
194:44 - the left side we had one more issue to
194:45 - address which was on the sidebar
194:48 - we had um we're right now in sidebar
194:52 - options or sidebar chat we actually had
194:54 - last message
194:56 - so this was hard-coded right i want to
194:58 - pull this
194:59 - last message from the db so and
195:02 - how we're going to do that i'm going to
195:03 - use a use effect right so i'm going to
195:05 - use a use effect
195:06 - we get the id from when we actually go
195:09 - ahead and we pass that as a prop so what
195:10 - i'm going to say is use effect
195:18 - and here i'm going to go ahead and do
195:19 - this i'm going to say if
195:21 - you pass me in an id so just protecting
195:24 - when i say db.collection
195:26 - so go into the rooms go into the dock
195:30 - so go into the dock with the id so
195:32 - that's the room id
195:34 - and then go into the collection of
195:35 - messages
195:38 - so collection
195:41 - you might need to word wrap him uh not
195:44 - oh i am oh no you don't
195:45 - oh yeah nice collection messages and
195:47 - then order by
195:48 - so order by and this time we're going to
195:50 - do timestamp timestamp
195:52 - descending right and i'm going to say on
195:56 - snapshot because we want this to be a
195:57 - real time snapshot
195:59 - so when we realtime feed and here what
196:01 - i'm going to do is i'm going to say
196:03 - i need to create a piece of state to
196:05 - keep track of the message
196:07 - right so i'm going to say message set
196:09 - message and i'm going to say
196:12 - oh this should be plural actually sent
196:14 - messages so i'm going to grab all the
196:16 - messages
196:17 - and then here what i'm going to do is
196:18 - i'm going to do our traditional mapping
196:20 - through so i'm going to say set messages
196:21 - map through all the docs get me the docs
196:23 - back and then and then give me back what
196:25 - i need
196:26 - so there we go so this goes ahead
196:28 - against the messages
196:30 - at the sidebar chat so those sidebar
196:32 - option level right so we have it there
196:34 - and then what i'm going to do is where
196:35 - it says last message
196:37 - all i'm going to do here is go ahead and
196:39 - say
196:42 - message zero because you're open
196:47 - wait what is the message though or or
196:49 - the
196:52 - um so we did that over no no
196:56 - so here so this isn't actually this is
196:58 - to show the message
196:59 - so what we do so what i'm doing here is
197:01 - i'm saying
197:02 - go ahead and get the messages okay uh
197:05 - order them by timestamp descending so
197:07 - the first message
197:09 - is going to be the most recent one oh
197:11 - really i thought it was like the last
197:13 - message gonna be the most recent one
197:15 - uh i mean i i did i thought that as well
197:18 - but then it kind of um
197:20 - it kind of like yeah it was kind of like
197:23 - okay okay cool message is not defined
197:27 - what what messages
197:32 - oh oops yeah yeah
197:38 - yeah there we go now if we log in
197:42 - that actually has fixed that that issue
197:44 - that we had
197:48 - all right so let's log in boom let's try
197:51 - that out
197:55 - cool guys we are almost at 3k likes
197:58 - come on guys how much are we away how
198:00 - much what 100
198:02 - super close dude oh you see it says yo
198:05 - yo
198:06 - yo yo so now if you go into the dev room
198:09 - and type a message
198:10 - okay so dev room
198:15 - yo yo no no no no something else
198:19 - they have room message
198:23 - oh look at that guys and if you type in
198:26 - again
198:27 - check whatever happens it will actually
198:28 - it will show the latest message
198:30 - in that left screen
198:34 - whoa heck yeah
198:39 - yo yo sonny this is epic
198:43 - yes but that's so weird though that the
198:46 - first message is the last message
198:49 - yeah because i'm done descending oh
198:52 - descending
198:53 - not ascending yeah okay
198:56 - yeah i always yeah i just kind of do
198:58 - ascending see if it's the right one
199:00 - i forget to honestly sometimes yeah
199:03 - if you did dot length on ascending i
199:05 - think you'd get what you then you'll get
199:06 - the level yeah that's true that's yeah
199:08 - or dot length minus one or whatever you
199:10 - have to do that yeah
199:11 - um awesome so now what we need to do
199:14 - is let's fix that last styling issue
199:17 - where we've got that horrible sort of um
199:19 - it just looks fine yeah it just looks
199:22 - like yeah
199:23 - right now yeah yeah so let's go ahead
199:25 - and go to sidebar chat
199:26 - and basically i'm just going to do a
199:27 - little quickie hack here so we can fix
199:29 - this so i'm just going to go ahead and
199:30 - say
199:31 - for the anchor elements text decoration
199:33 - none color black
199:34 - okay so very quick fix here and then we
199:37 - do that
199:38 - what we should see is there we go i'll
199:41 - change there and now
199:42 - now we don't get those lines right guys
199:44 - so we still get the problem
199:46 - uh-huh go ahead go ahead no i think i
199:48 - think i think
199:50 - are you okay i think we're done
199:53 - yeah that's it are we yeah i think we
199:56 - are actually
199:57 - yeah let's try this hold on let's go i
199:59 - was thinking i was like holy crap yeah i
200:00 - think we're done there
200:01 - wait wait so okay hello
200:07 - we're done yeah
200:10 - all right i got i only got one thing to
200:12 - say honestly i got one thing to say you
200:13 - know what i got to say
200:19 - [Laughter]
200:22 - i said let's go
200:26 - really that is so sweet dude
200:29 - oh i actually saw an error here so
200:31 - sidebar chat
200:32 - sidebar chat guys very important point
200:34 - sidebar chat we used a
200:36 - oh this is important yeah we use the use
200:38 - effect and we use the id right
200:41 - now don't forget and don't ignore the
200:43 - the in the terminal it popped up if
200:45 - you actually need to include that as a
200:46 - dependency
200:48 - because we're using it here so
200:51 - just want to point that one out because
200:53 - that's actually really really important
200:54 - there
200:55 - guys come on let's get to 3k come on
200:56 - come on before we deploy this we need to
200:58 - get to 3k
200:59 - come on sure with some people you know i
201:02 - don't know i don't know what you got to
201:03 - do but do something
201:05 - i know i mean dude i think what we
201:07 - should do is i think
201:09 - i got an idea what do you got what do
201:11 - you got the deployment
201:13 - the phase right so let's get everything
201:14 - set up for the deployment okay and then
201:16 - this
201:17 - let's wait and let's answer questions
201:19 - until we hit 3k
201:20 - all right okay i like it i like it yeah
201:23 - let's do it yes let's do it let's do it
201:25 - so guys and if you guys and if you want
201:28 - you know what if you got to go the extra
201:29 - mile
201:30 - create a new google account go to this
201:32 - video and then click like again
201:34 - yeah guys just push that to 3k because
201:37 - that's it and that'll be the ultimate
201:39 - banger finish to this video
201:41 - that'd be the most you've ever gotten i
201:42 - think in the video right 3k i think so
201:44 - yeah
201:45 - i think so yeah it's awesome dude
201:48 - so now guys we're going to show you no
201:51 - we hit 3k
201:52 - didn't we no we did oh
201:56 - that's cool
202:02 - you guys so much guys that's insane
202:07 - that's insane um oh man that's just
202:11 - holy crap yeah so guys let's go ahead
202:15 - and show you guys how to deploy this
202:16 - song and get this live
202:18 - okay let's do it so let's open up
202:21 - the terminal wait what is that
202:27 - so the vs terminal
202:32 - i'm just i'm just trying to do something
202:34 - here hold on a second all right we're
202:35 - cool cool
202:36 - all right so terminal i was like wait
202:38 - what is terminal right
202:39 - guys because we hit 3k literally we and
202:42 - knowledge would massively appreciate if
202:44 - you go onto instagram
202:45 - shoot an instagram video to show us that
202:47 - you're watching this right now and that
202:48 - you were here when we hit 3k
202:50 - all right tag us in there and literally
202:52 - we can have a chat with you guys so as
202:54 - always we love to do that so
202:55 - really really really please go ahead and
202:57 - do that yep your point
203:00 - five dollars thank you so much dude
203:02 - hitting 3k
203:03 - oh hold on let me let me let me let me
203:06 - let me put him on the spot right here
203:09 - there we go frank frank you the man
203:13 - frank is always so supportive thank you
203:15 - frank he's killer dude
203:18 - all right cool so uh let's get to so
203:21 - let's deploy you guys ready to deploy
203:22 - are you guys ready deploy hit that smash
203:24 - that like button for deployment
203:26 - um and we're gonna deploy exactly
203:29 - so guys what we need to do now is we
203:31 - need to go to firebase
203:33 - um so i'm going to do this firebase oh
203:36 - actually one minute i just realized
203:38 - what's up if i log in
203:40 - so check i think i'm logged into my
203:41 - account but what i could do now is i
203:43 - could deploy
203:44 - this project yes you want me to log in
203:49 - uh it's fine but i mean we could do it
203:51 - so i can actually do it from
203:52 - oh man
203:53 - [Laughter]
204:06 - all right so let's go ahead and do the
204:09 - destroyment so
204:10 - i've actually said what's clown so i can
204:11 - deploy it on my one as well it's fine
204:13 - yeah okay let's do it let's do it so now
204:15 - what we can do you're gonna need to do
204:16 - firebase login
204:18 - and what that will do is i'll pop up a
204:20 - sort of a login window and once you've
204:21 - got that login window done
204:23 - you need to do firebase in it right
204:27 - so firebase in there and now what we can
204:30 - do is you see this this will pop up
204:31 - right
204:32 - so this beautiful interface pops up you
204:33 - want to go down to the bottom using the
204:35 - arrow keys hit the space bar on hosting
204:37 - and then click enter and then this is
204:39 - important guys right
204:40 - here i'm going to click use an existing
204:42 - project i'm going to go down
204:44 - to the uh firebase project so let's go
204:48 - ahead and do
204:49 - um uh where is that whatsapp clone
204:52 - right this one right here is that is
204:54 - that the one that you got is that the
204:55 - one that you created
204:57 - yeah i'm not sure if our database is
204:59 - gonna clash though
205:02 - let me try it you can try yeah let's do
205:04 - it but then in here
205:06 - what we're gonna do now is we're going
205:08 - to type in
205:09 - build so this is super important build
205:12 - right
205:12 - so build is the public directory that
205:14 - you want to use and then what we're
205:16 - going to do is type in
205:17 - yes for configure as a single page app
205:19 - because we're a react app is a single
205:21 - page app
205:22 - okay that's it we've set out the app up
205:24 - right now what we need to do
205:26 - is do mpm run build and what this will
205:29 - do is
205:29 - it will create an optimized production
205:31 - build so what this means is
205:33 - it will strip out all the developer
205:34 - stuff so all this hot reloading all this
205:36 - sort of heavy
205:37 - crap that we don't need in the actual
205:39 - production version
205:40 - uh because in the production version you
205:42 - just want the app to load as fast as
205:44 - possible so it strips out all the
205:45 - sort of cool toys and gimmicks out of it
205:48 - and it's basically going to strip it
205:49 - down and it'll put it into
205:50 - the build folder right so if you're not
205:53 - if you open up the directory on the on
205:54 - the left
205:56 - hold on hold on
206:00 - just hold on give me one second i'm
206:02 - trying to
206:04 - do stuff cancel nope
206:07 - what directory for what uh so open up
206:10 - your files on the left
206:11 - okay and show them where the build
206:13 - folder actually gets built
206:15 - all right so all right cool all right
206:17 - director in the left
206:18 - come on no that's the one cool
206:22 - yeah so here what i want you to do is
206:24 - you can see you've got public at the top
206:26 - but you also have a build folder at the
206:27 - top
206:28 - so yeah i mean oh there will there
206:32 - after this is done there will actually
206:34 - be a build folder that comes up there
206:36 - right and what this build folder will do
206:39 - is it will basically that optimized
206:41 - production build that gets sort of
206:42 - finalized
206:43 - goes into that folder right so i'm not
206:46 - sure how long
206:47 - this is going to take but let's just
206:48 - give it a little bit of time and in the
206:49 - meantime we can go ahead and answer some
206:51 - questions
206:52 - and we can sort of get everyone prepared
206:54 - for the deployment yeah
206:55 - guys yeah so you got any questions guys
206:57 - go ahead and put them in the comments
206:58 - below and also also as you
207:00 - if you put the question go ahead and
207:01 - smash the like button
207:03 - yeah cuz i can get this video out to
207:05 - even more people guys
207:07 - oh man oh guys this has been an insane
207:11 - build you know i know i keep using the
207:13 - word insane but i really
207:15 - there's no other word for it right
207:18 - there's hold on there's no other word
207:19 - for it honestly so um
207:21 - you know sonny amazing job on what you
207:24 - have built here
207:25 - seriously uh this looks not only not
207:28 - only does this look good
207:30 - but it's usable we can actually use it
207:33 - yeah honestly you can go ahead and use
207:35 - it it's insane like and this is going to
207:37 - be scalable as well
207:38 - it's like what we built here guys is
207:40 - production scalable like you could scale
207:42 - this
207:42 - to uh however many users that you would
207:45 - need like if you had a million users
207:46 - today
207:47 - it would scale and it would work which
207:49 - is insane to say i'm curious how many
207:51 - can we get can we get right now
207:54 - how many what was that useless we can
207:56 - get right now
207:57 - i know right i wonder i mean
208:00 - i don't know if you know but we're still
208:02 - at 605 people watching by the way
208:04 - that's insane oh my god that's insane
208:07 - retention rate is crazy yeah do you know
208:10 - how to get to the live stream room by
208:12 - the way
208:14 - the live stream room what do you mean
208:18 - on um youtube just wondering if you know
208:20 - how to get while we're waiting for this
208:22 - oh like into the actual youtube
208:24 - livestream room
208:25 - yeah i'm just wondering because it shows
208:27 - us some cool stats but um
208:29 - oh okay i can take a look at it here
208:31 - hold on let me see i can take a look
208:32 - just so that
208:33 - yeah just that when the stream
208:34 - eventually ends we get all the stats you
208:36 - know
208:37 - all the small stats because otherwise i
208:38 - couldn't get to that screen yesterday
208:39 - and it kind of
208:40 - i don't have that i mean does it show
208:42 - right now
208:44 - um i mean i don't know because
208:47 - because qazi usually is in some kind of
208:49 - live stream room um which is pretty cool
208:52 - yeah it might be in the studio i mean
208:53 - i'm i'm gonna i'll have the studio open
208:55 - so we can see
208:56 - yeah hopefully this this production
208:59 - build
209:00 - it feels very quick guys this is usually
209:02 - very fast
209:03 - right here right here you see that guys
209:05 - we're touching this out
209:06 - boom that's insane holy crap look at
209:09 - that
209:09 - look at that we were we peaked at 12
209:13 - 1200 1300 people and then just like
209:15 - slowly slowly slowly
209:17 - and we've been out this for this is at
209:19 - this point it's three hours and a half
209:21 - so which is insane
209:23 - um yeah but guys 800 and average
209:28 - wow how many chad matches we got wow
209:34 - chat messages you guys are killing it
209:37 - that's all i gotta say yeah and thank
209:40 - you guys so much obviously for watching
209:41 - thank you guys so much for supporting us
209:43 - and being so supportive in the chat
209:44 - um the more we do this more we realize
209:46 - that you know you guys
209:48 - uh really you know one are enjoying this
209:50 - and are really getting a lot of value
209:51 - from it
209:52 - and you know and having fun with it at
209:54 - the same time
209:56 - so exactly you guys yeah thank you
210:00 - oh so looks like look at that it's
210:02 - building it's built oh
210:04 - finally nice so
210:07 - guys with that said now let's go ahead
210:10 - and
210:10 - do the following so one sec okay there
210:13 - we go i can see yeah
210:14 - so now what we're gonna do is we have
210:18 - the what's up down here so yeah you can
210:19 - see it right yeah so
210:21 - in order to deploy it guys it's as
210:23 - simple as this right and also bear in
210:24 - mind if you change
210:25 - any bit of your code between the time
210:28 - that you done npm run build
210:30 - and when you've done it like so you need
210:32 - to do make sure that you don't change
210:34 - your code after you dnp and run build or
210:35 - if you do change your code
210:36 - run npm run build again because that's
210:38 - it's going to be bundled up
210:39 - then to deploy it we need to do firebase
210:43 - deploy like this voila
210:46 - yeah firebase deploy and this will go
210:49 - ahead and deploy
210:50 - the app let's go ahead
210:57 - so you see it's uploading all the files
210:59 - that we have
211:00 - doing everything and boom let me just go
211:01 - ahead and double check this so to make
211:03 - sure everything's
211:04 - good react app let me go and sign in
211:08 - so the domain is not authorized okay so
211:09 - this is what i was well this is what i
211:10 - was kind of worried about yeah
211:12 - so we actually went ahead and deployed
211:14 - it from so i wasn't logged into my
211:15 - account i was logged into
211:17 - i was looking into my account nas built
211:18 - this on his account so this is where a
211:20 - lot of people were saying that remember
211:21 - the security might have been a concern
211:22 - you have to be signed into the correct
211:24 - account really
211:26 - what i'm gonna do guys is we actually
211:27 - went ahead and deployed this before
211:29 - and we deployed the exact same build on
211:32 - this uh
211:33 - clone over here so we actually did the
211:35 - exact same build on discount so what's
211:37 - up
211:38 - so pretty much no it's the one that you
211:40 - uh this one right here
211:42 - yeah oh wait i need to refresh this oh
211:44 - damn it someone's going ahead and
211:46 - done that guys clear that come on guys
211:48 - what are you doing
211:50 - come on oh wait no it says is not
211:53 - authorized to under separation
211:55 - yeah so this is happening because i'm
211:57 - not logged into so now what we could do
211:59 - is we could go ahead and quickly do
212:01 - firebase log out
212:09 - firebase login i mean this is this means
212:13 - i have to log into your account and do
212:14 - all that i mean
212:15 - what should we do at this point shall we
212:19 - locally and let's do it let's do an
212:24 - yeah okay let's do it let's just demo
212:26 - locally
212:27 - yeah so guys with that we did deploy it
212:29 - so you guys saw that there is a
212:31 - deployment and that's
212:32 - literally would be working for you guys
212:35 - let me go ahead and
212:36 - get an ng rock going for you guys oh you
212:37 - gonna do it for me okay you're gonna do
212:39 - okay cool
212:40 - yeah so i'll get an ng rock going so
212:42 - let's go ahead i always forget why i put
212:44 - ng rock
212:45 - is it my desktop is it i also yeah i was
212:48 - i was gonna look for it
212:49 - there we go yeah there we go okay so
212:55 - now guys that's the ng rock link
212:58 - so what i'm going to do is i'm inside of
213:02 - can you see the ng-rock link
213:04 - i'm about to hold on one second ah kind
213:08 - of
213:08 - you kind of you might need to help me
213:10 - out with that right so if you go into
213:12 - let me go into uh app.js and i'll just
213:15 - drop it at the top of the comment
213:21 - i see
213:24 - so app.js
213:28 - no app.js yeah yeah and inside of that
213:32 - dot yes
213:33 - okay come on yeah so now me and nars
213:36 - will go and show you guys
213:38 - that this is working and it's all pretty
213:40 - good
213:41 - wow let's do it almost there almost
213:43 - there
213:44 - almost there
213:49 - might be a little bit slow that's the
213:50 - only thing yeah because it's localhost
213:53 - yeah all right let's see this
213:57 - let's see this
214:00 - okay mine's up so okay so it's not
214:03 - authorized to run this domain okay yeah
214:04 - so guys
214:05 - dang it firebase is super secure all
214:08 - right
214:10 - yeah you can't ngrok either so this i
214:12 - mean this is a good thing this is a good
214:14 - thing
214:15 - so what it means is we showed you guys
214:17 - in the beginning of the demo and
214:18 - basically the reason why we didn't do it
214:20 - is because
214:20 - i wasn't logged into nazi's account
214:23 - which is why
214:25 - yeah i can't do it either dang it dang
214:27 - it dang it ah
214:28 - it's okay it's all right though okay we
214:30 - should be down we downed it to you guys
214:32 - in the beginning which is really cool i
214:34 - think
214:34 - yeah now let's just go ahead and show it
214:36 - let's give a run through of the app one
214:38 - last time
214:38 - i always do it so let's do it right here
214:40 - okay beautiful
214:42 - so check this out guys we can have for
214:44 - example we obviously we have
214:46 - different new rooms we can create new
214:48 - rooms what kind of room should we create
214:50 - let's create a room called 3k room
214:54 - 3k room yo the epic 3k room
214:57 - okay click okay we create ourselves a 3k
215:00 - room
215:00 - inside this room now we can now it's
215:02 - just simply text between different
215:03 - people right so
215:04 - if i simply let me remove myself here
215:06 - you can go ahead and
215:08 - um how's it going right so how is
215:11 - is it going uh this
215:14 - this has been has been
215:18 - an awesome awesome live call
215:22 - and you can probably you can probably
215:23 - add this um
215:25 - and here's what you can do i can
215:26 - literally add a to the firebase i can if
215:29 - i go to firebase and i go to rooms for
215:31 - example
215:32 - and so the room that we just added was
215:34 - which one
215:39 - right i can go ahead for example i'll
215:41 - you know imagine this is sunny
215:44 - oh no i'll show you a better way to do
215:45 - it now is actually go ahead and log in
215:47 - in a separate window as a different uh
215:49 - if you want a second oh i can do that
215:51 - yeah but it will still be my name
215:54 - no that will be a different nars right
215:56 - yeah i guess so i guess let's try that
215:58 - so hold on
215:59 - so i can do localhost
216:02 - 3000 oh it might might be it might be
216:04 - the same man it'll still be the same
216:06 - name because i got a bunch of nazari
216:07 - zombies
216:08 - account we could do that i don't know if
216:10 - i can like log in with kazuka let me see
216:11 - hold on can i
216:13 - yeah i i tried it yeah it should be oh
216:15 - oh okay let's try it we'll see
216:18 - quasi quasi all right quasi i'm looking
216:21 - with your account
216:22 - nope oh [ __ ] nope
216:26 - not happening all right we can try this
216:28 - though hold on let me see
216:29 - i can't i could talk about myself how
216:31 - about that
216:34 - nice i mean yeah you can have two
216:37 - conversations guys
216:39 - supposedly that's because we opened up
216:41 - the window twice yeah
216:42 - yeah yeah so yeah but in either case you
216:44 - can see this work is just it's very
216:46 - secure and so uh but
216:47 - i think we'll be able to we'll be able
216:49 - to make it live and then
216:50 - give you guys the github link as well
216:52 - that's me the most important thing guys
216:54 - that's the most important thing for you
216:56 - most important thing guys we will go
216:57 - ahead and do that so
216:58 - yeah with that said i think that went
217:01 - amazing
217:02 - dude dude that was sick guys awesome
217:05 - yeah
217:05 - that was insane um yeah i mean
217:08 - who loved it dropped in the comments
217:10 - below if you guys enjoyed this if you
217:12 - want to see
217:12 - more things like this i mean i'm sure
217:14 - you guys i'm sure you guys do
217:16 - um sunny amazing job guys give something
217:19 - a round of applause for crain this
217:20 - awesome app
217:21 - uh he's been working hard at it and he's
217:23 - been lucky he's like yo bro i'm just i'm
217:24 - still working i'm still working still
217:26 - trying to finish up the code he's just
217:27 - like rushing and russian trying to
217:28 - finish it up
217:29 - but he did it it looks great so great
217:32 - job on that
217:33 - um appreciate it bro yeah seriously um
217:36 - and to all of you commenters guys thank
217:38 - you guys so much for
217:40 - watching thank you guys so much for
217:41 - commenting being positive and optimistic
217:43 - and following along if you followed
217:45 - along and if you did go ahead and create
217:47 - the project
217:48 - obviously tag us in your instagram
217:51 - videos right here and then sunny
217:53 - is there i'm pointing sunny so point
217:56 - point down sunny yeah there you go point
217:58 - down there you go and i'm pointing to
217:59 - you
218:00 - exactly now you're just like
218:05 - um so yeah anything else we got
218:08 - i think that's it dude i think this is
218:10 - awesome i i enjoyed this build it was
218:12 - stressful because
218:13 - it was a bit of architecture to this one
218:15 - to try and get it working right but then
218:17 - we managed to get it working and we got
218:18 - in a really nice way
218:19 - and now as i want to say massive thank
218:21 - you to you dude because nars jumped on
218:23 - and actually ran this with me uh
218:25 - with quite last minute notice and i
218:27 - think he crushed it i think we
218:28 - absolutely
218:29 - smashed this live stream dude this was a
218:31 - fun live stream i'm not keep like it was
218:33 - it was chill but it was fun it was good
218:35 - like we didn't have too many technical
218:37 - problems guys
218:38 - and like and i see though you guys are
218:40 - somebody saying saying keep it up buddha
218:41 - says keep it up bro
218:43 - uh let's see what else what else guys
218:46 - santana says good night guys
218:50 - warrior says applause applause applause
218:51 - so yeah guys yeah and thank you sonny
218:53 - appreciate
218:54 - it i'm most happy to get on with with
218:55 - you
218:59 - what was that sir i said i was happy to
219:01 - go on with you
219:02 - i was happy to get on the call with
219:04 - colin yeah
219:05 - let's do it more often that was that was
219:07 - fun of course of course
219:09 - would be cool to do like um react and
219:11 - then like i'll do like a
219:13 - node.js portion for example you'll do
219:14 - the react portion to like a small
219:16 - application and i'll do the node.js
219:17 - portion of this multiplication
219:18 - you've worked with mongodb right mongodb
219:21 - and node.js exactly
219:22 - yeah so it would be nice to do like a
219:24 - man stack we could do something like
219:26 - that that'd be cool if you guys want to
219:27 - see that drop in the comments below and
219:28 - if you guys get any ideas
219:29 - also let us know um yeah but yeah
219:32 - other than that are we done yeah i think
219:35 - we're done guys
219:36 - should we call it yeah we will see you
219:39 - on the next live stream
219:40 - and as always guys this is sunny and
219:43 - this is nas
219:45 - we will see you in the next one peace
219:47 - exactly peace out have a great day bye
219:49 - bye
219:51 - wait wait

Cleaned transcript:

right here god sonny how good does this look man super pumped for this build now so today guys a lot of you guys are waiting we've been waiting eagerly for these kind of apps and you asked for a lot of functionality so you can see we have the whatsapp build right here and we're going to teach you how to go ahead and build all of this today so let us know if you're excited guys guys who's excited drop that in the comments below look at this application right here let's just go through a quick demo of the apps people can see what can they do on here sonny so let's hit refresh and we'll start from the beginning i'll say refresh refreshing okay sign in so oh wow you can sign in with google no no i'm going to sign in with google all right that's fancy guys we're going to sign in with google what all right now sorry now web right there all right cool when you sign in check out the top left it even has your little picture no way that's too fancy that's too fancy you guys see it right there look at that wait hold on right there whoa okay insane cool cool cool stuff all right all right what's next so we have that we've got a slight adaptation so we've done it in sort of rather than a chat based fashion we've got like rooms so in this case we've got the testing room youtube room and dance room um let me go ahead and i'll actually get inside the app as well give me one i like the dance room man that that you're speaking my language i did that for you knows i did that thank you i was like oh [ __ ] naws is coming on the stream let's go let's go guys don't forget to dance drop in the comment below that's it so i just jumped in the dance room as well and if i go ahead and type in yo what's up nas and i boom chop that in look at that and i'll be like yo sonny yo sonny hold on hold on check out this check out this message let's go hey nice guys that's all real time so everything is in real time and it's actually quite responsive so nice if you want to go ahead and resize the browser a bit inside there so guys check this out we can go bigger right we can go smaller look at that that is so good sunny amazing job on the guys give some round of applause in the comments because this is well deserved look how good that looks i mean all his apps look good but i will his apps look good but this one i don't know i just i don't know i love it just yeah looks amazing yeah thank you dude it's mapping the whatsapp web so there's actually you can use whatsapp on the web we're actually mapping that iteration and if people enjoy this we can actually go ahead and use something like react native or something like that to really you know go in and build like an actual app version of this that'd be cool um but yeah so i think what we should oh we just got our first donation dude did we nice oh look at that vishal appreciate it i appreciate my friend thanks for the donation uh really really cool we got so many people guys uh adra says yo sunny we got yama what's up we got future co says what's up everybody what's up guys uh what's so daniel's like let's code aye sunny coding quoting the coding cup says uh fascinating said abdel abdullah run of applause in the comments says qazi from clever programmer guys let's go hey we've got my girlfriend in the house where's my her bomb where's my bond we got very big everything i see it i see it oh there we go what's up how's it going how's it going how's it going good to see you from the chat oh nice you're in the chat too i'm gonna tell you oh dude we just hit over 730 guys oh nine how much 731 so i think we're at 731 from my account i can see oh let's go that's insane guys if you're excited for today all we ask is that you go ahead and smash that thumbs up before we get started so that this can go out to as many people as possible right and then that will help everyone get the most value from this video so before we get started i think what would be cool is if we go ahead and show you guys um what we're actually going to what this build consists of so the tech behind this build because it's always a nice way to go ahead and get started we can actually do it in vs code we can actually list it out here that'd be a cool place yeah as you can see on the left we've got a live share running so uh now i just want to make it a little bit bigger on the left on the left let's make it a little bit bigger right there is that is that good that's good dude and then just press command j to hide that yeah nice so the tech in today's build guys we have we have react which is what is powering everything we have oh god no what's that oops let me go ahead and do this yeah we have a react whoa sammy just dropped a donation and tech programmer thank you guys awesome appreciate appreciate it i appreciate it tech programmer uh thanks so much thanks so much so much for that who else we got oh sami yo two dollars super ticker i know oh look at that that's cool thank you yeah awesome super nice guys we have a react we have the firebase firestore realtime database so we've used that and a bunch of builds previously we're going to have that today we have material ui so that's how we get the design looking the way it's looking um holy crap dude i can't believe how many people are supplying it it's crazy um we also have react rua guys so reactor inside this build yeah that's going to allow us to have different page routing so we have that forward slash rooms forward slash like a room id or something like that we also have the react context api guys so whoever wants to learn redux right so whoever wants to learn redux make sure you watch the end of it like all the way to the end of this video and shubham pandey just dropped another donation thanks so much you guys are crazy with that yeah it's insane dude we have the react context api so we can pretty much go ahead and if you learn that pattern you can pretty much be comfortable with redux so definitely jampacked with value in this build and also guys we have google uh google authentication so that's huge right and once we've done that we're gonna deploy it using firebase hey grandpa oh wow 850 plus concurrent viewers let's go guys thank you might have let us not know insane insane stuff guys actually it's 919 guys from our point of view because we've got the latest updated stuff almost guys let's break it to a thousand guys share this video give it a thumbs up so that so the youtube goes ahead and share this for everybody else on youtube to see so get a thumbs up destroy that like button guys just destroy it as much as you can okay and of course subscribe subscribe to the to this youtube channel guys who is excited to get started before also guys worth mentioning if you find our videos pretty interesting you find them useful we are offering a free training guys so knows what are they going to get in the free training in the description in the description you guys are going to get free training on actually what is the title you know the title is sunny right the title is for we have a webinar and guys all about the top three yeah yes javascript developer so we're gonna pretty much go ahead and show you that in a free training and all you need to do to go ahead and get started with that is go to the link in the description and it's a completely free training guys so completely free so what i would recommend is that so you guys get the most value from our videos is that you pretty much go ahead and sign up right now so go to that link in the description sign up right now which is completely free and then once we finish this live stream whether you do it tomorrow whether you do it the next day or like you can go ahead and watch that webinar and uh yeah you guys just there's no loss there you're going to go ahead and learn a bunch using that uh using that free training so you can see i just shared it with you guys you can see it right here top two mistakes to avoid becoming a javascript developer this is some epic stuff guys we are getting so many people are giving us amazing feedback for this specific video completely for free don't really worry about it completely for free literally you you gotta click on that link gotta click on the link what's up what what florian just dropped us 10 pounds where where can't wait to join on profit javascript program coming soon flooring hold on we got a lot hold on we got hold on i i did test aditya said it let me see let's see if i can if i can find if i can find fluorine hold on hold on i got it hold on whoa we have a lot of people carlos gave us 2147 something which i'm not sure what that is we got vinod kumar keep going up you'll see it we got ayusa iowa's cyber exploit m holy moly you guys insane insane insane stuff insane stuff let me see where's florian hold on i gotta find flooring i will find you i will find you florida i promise i promise i will find you oh right there i found it florida yeah i got him thanks so much says can't wait to join on profit javascript program what are you waiting for drop that we have a link in description below if you're excited join it below guys so many people so many people from profitable javascript are already here and they are loving the course uh we're actually currently really cool stuff we're building a chrome extension in pwj so that's all cool yeah yeah exactly awesome sweet guys right guys so with that said i think let's go ahead and what do you think nas should we go ahead and get this started let's get started and just so just one one less thing guys go ahead we got our links in the description for instagram so go ahead and tag us in your instagram videos link is right here nas domanski for for me and then sunny sss for sunny i know i need to like shorten the number of s's in my name anyways guys let's get let's get it started awesome let's go and guys just to get this place though we just hit over 1 000 likes thank you insane stuff insane stuff love that okay let's do it dude let's go ahead and get started so uh if you if you are familiar with our builds guys and we use a tool called create react app right so we're going to go ahead and use create react app to get the app started and to get that sort of a very basic um sort of starter play template that react goes ahead and gives us so now if you want to click command j in the nvs code yeah gotcha what we're going to do is i'm going to go ahead and do the following so i'm going to say i'm going to say mpx mpx create react app so create react and then the name of the app so whatsapp clone right and what this will do is it will just go ahead and make all of the starter template stuff for us inside of the app oh i can actually see there's a little overflow bug that i didn't account for if you see you know when people are adding to that adding the new chat nobody knows until you start yet nobody knows we're gonna be debugging live on stream guys pratik thanks so much for the donation as well really appreciate it i really really appreciate it oh my gosh so many oh we got 10 pounds thanks so much so vincent just came in with swinging with 10 euros let's go thank you so much dude guys with that said oh my god another donation another one it's amazing it's gonna be a live call full of donations that's what's gonna be that's insane dude i loved it nice so now guys once this while this is setting up let's go ahead and set up firebase that'll be a cool little step to do now what do you want me to do or do you want to do it you want to do it uh uh for firebase uh yeah you you're gonna have to do it on the browser oh okay so let's so tell me what to do so go to firebase.com so i think it's firebase yeah firebase i'm just gonna go like here yeah firebase.com all right and what you want to do is click on go to console or make sure you're signed into whatever account that we're going to be using so if you've got the clever programmer account let's go ahead and use that all right so go to console yep let's go ahead and use i'm going to use this one hold on nice oh is the obvious code crashed what's that it looks like it is something i don't know yeah it might because the terminal nice okay what you want to click on add project go ahead at project beautiful all right uh let's go ahead and do whatsapp right yep so let's go ahead and click on whatsapp oh it says hold on what's up clone even let's start with the name of the project okay let me type in your project right here yeah yeah what's up what's app clone like that uh yep and then you can set up an account for that so you can just go ahead and click default account that's all good i create projects so this guy's is essentially what we're going to use to power the entire back end so we're going to use this to empower our authentication our database and when we deploy it so it's all of the hosting functionality all of that is going to be done on firebase and all you need for a firebase account is a gmail account and that's it pretty much and you can go ahead and get everything working with that we just hit over a thousand viewers on youtube guys yo let's go like thank you guys so much we we appreciate every single one of you guys watching right now and we love you guys it's amazing wow dude i never i'll never get over that i don't know why i really want to play my sound effect my sound effects for some reason i'm working that's okay that's all right we'll deal with our sound effects let's continue on i know i don't know why this is interesting so now what you want to do is go over to let's check okay so create react apps just finishing up nice so you want to go over to um let's go ahead and see hopefully that should be fine after once create react apps done awesome yeah so now you want to go over to that little cog icon in firebase click that and click project settings okay and then you want to go all the way down to the bottom and you see that web app icon right so it says that that one yeah and then here you type in whatsapp clone and make sure you tick the firebase hosting option also set up firebase hosting okay whatsapp yeah cool register app yep and then step two we can ignore step two we don't actually we're not interested in step two click next yep then uh firebase tools yeah so we need this we don't need to do this because we've already done this but you guys are gonna have to run that command so make sure when you do that you might need to do sudo npm install dash g firebase tools so just a heads up if you have to do that but we don't have to do that we've already done that so click next yep and then here we can ignore this for now just click continue to console beautiful beautiful sweet all right awesome and let's go ahead and click that config at the bottom so at the bottom you should see you see it says uh three different switches you want to click the config switch oh i see i see and so i need to copy this right you need to copy this yep copy that and then what we'll do is go over to our code over here and let's open up our files and we should see whatsapp clone inside of our file directory now i see it okay yeah awesome and let's go ahead and go into source and let's create a file called firebase.js so i'm gonna do right now so new file firebase like so right yep and you just paste it all right dude i'm gonna paste it in here command beautiful right there nice yeah i'm gonna say that yep save that and let's make it a a little bit so let's let's close command b to hide the sidebar all right and command j to oh yeah so you see guys in command j at the bottom now you can see it says happy hacking so once you get that message thank you envy dev for that donation massively appreciate that appreciate it thank you um so now what we're going to do is once you get this message guys you want a cd into the whatsapp clone so whatever you named it here we're going to do cd whatsapp cloud so cd whatsapp clone uh what's going like this and then you'll be in the right directory so it should have whatsapp clone and then here what you want to do is to start the app up you do npm start right so i don't know why i dropped them too long yeah that's all yeah yeah yeah and then that will go ahead and actually spin up the app right so this should spin it up on localhost 3000 so what i'm going to do is because me and nars are using a vs code liveshare i should be able to actually go ahead and share this with you uh give me one sec yeah somebody asked like what is it what are the config files so look what the configcap files are basically that is guys how we will go ahead and actually you know connect to the database right so you know all these keys right here is a way to connect the database um that's pretty much it nothing nothing too much uh on that exactly yeah you've got loads of people flying in says i got stuck on the instagram oh damn it why does the show get master and terminal oh it's because oh my zsh that's why our terminal might look different to yours gotcha um nice yeah so perfect now we've got low cost 3000 up so if you go into the left hand side you know in vs code right here live share and local 3000. right there hey let's go nice so now we're at this good if you get to this point guys well done so what we're going to do now is do what we like to call the clean up process okay so if you just want to follow me nas okay go ahead yep so if you want to follow me using click on that purple button yep following you and then click on the yeah so in the file directory now what i usually do is i delete app.test.js i delete uh logo.svg and i delete setuptests.js where is that oh okay so these ones okay i see it now i see it okay so i'm going to go ahead and delete apt.test.js logo.svg and setup tests so those those ones are the ones i'm going to delete so i'm going to go ahead and click move to trash and now if you click the little refresh like oh there you go you can see it yeah oh no has it refreshed uhhuh yes you can see it starts to freak out so you might need to click the refresh icon inside of the file directory so you see on the left yeah yeah i see it i see it hold on that little there we go nice hey so now uh the app's gonna freak out it's like oh my god you've deleted everything so now what we do is we go into our code so let's do command b command j nice and what we're going to do now is go ahead and do so firstly i'm going to get rid of these errors so right now we got rid of the logo which is why it's freaking out so i'm going to go ahead and delete that and here what we can say is we can just say h1 and we can say hello let's just say let's build let's build whatsapp let's build a whatsapp clone awesome and save it nice and we should see let's build a whatsapp clone on the on the right side which is awesome hey we did nice okay nice right all right now what we're going to do is we're going to do a clean up process so app.css has a bunch of crap inside of it so you pretty much want to do command a delete everything inside of that yeah you don't want any of that stuff and if we save it you'll see now the styling gets a little bit more it's left aligned and we get rid of a bunch of that stuff the wonky one more step before we get we have a starter template so we go into index.css and here we want to say target everything and give it a margin of zero and we just got another donation guys he says can we have the source source code github link so that'll be easy for us to follow yes we will be uploading it after this video of course yeah yeah and thank you oh and then we got pre priyank thank you so much for 2 donation thanks for everything you do of course we're happy to do this guys dude massively appreciate that let's go ahead and click save and you'll see now when i do that it just removed that top bit of margin right so now we're actually in a very good starting point so we can go ahead let me go ahead and remove this thank you mansoor as well really appreciate for donation too oh my we're just we're just flying with donations today i know guys the love is real today this is insane let us know what you guys are excited about in the comments as well i love to see like oh my god we're holding over a thousand as well it's blowing my mind holy crap nice yeah we are going to be using the uh bem naming convention so here uh let's go ahead and do the bam naming convention and you guys who aren't familiar with this essentially it's just a very easy way of naming your components inside of react and it's it's really really scalable you'll see i use it in every single build we use it in every single build and it's just a really clean way of keeping your app like very very neat so with that said we've got the app right so you notice when we had our build we had the app and then we had this sort of consider it as like the app body right so the app body was that little sort of container so let's go ahead and open up the actual deployed version us right here right here this is the deploy version right here yes are these people who's creating this stuff this right here this is live so they've got oh yeah so people actually create this right now oh man all right nice it's crazy right yeah you are really react yes awesome i love it i love that nickname dude sunny thank you man appreciate it thanks so much for the nation and yet again oh man you guys you guys this is crazy stuff nice so let's go ahead and what we like to do you know how we do it guys we map out the app okay so we can see from the right hand side we pretty much have like if we scroll a tiny bit up now on the right hand side can you see how like it's kind of like a floating card right yeah so what we're going to do is we're going to consider that to be the app body so here we go you guys see how it has that has that kind of shadow right there that's what he's talking about like right there yeah so i'm going to go ahead and consider that to be something like the app body okay so everything inside the body was essentially sits inside of that card that's what our end goal is going to be right and then inside of the art body we're going to have two things and i like to always mask things out so i like to kind of add comments and it kind of makes the whole process a lot easier so what we're going to do now is we're going to have a sidebar like this and we're going to have a um a chat right so the sidebar is essentially going to be the stuff with so it has nazi's avatar on the top left yeah it has all of this stuff for the icons the add new chat the sort of all of this all this stuff right here all this stuff right here exactly yeah so we have all of that stuff over there and the chat is this sort of stuff on the right hand side okay got it yeah exactly that yeah we're going to have the chat on the right hand side so what we'll do to get started is let's actually go ahead and style that so that we get it somewhat on that lines of looking like that so if we go into app.css remember we have the app and we have app body right so it's going to app.css and what i'm going to do guys i'm going to firstly target the app uh itself so the app itself and what i'm going to do is i'm going to give it a background color of it's a slight it's like an off it's like a really weird kind of off gray i think it is but it's this color right here so you guys can just copy this hexadecimal code um if i save it let's go ahead and see what that's like guys please keep the chat clean in the whatsapp app okay you want to keep the chat clean yeah because otherwise i won't be able to show it exactly we want to keep that chat clean and then that keeps these videos coming but no no no no chat and then what we're going to do is we're also going to set the height here to 100 view height so i'm going to go ahead and do height of 100 view height like this okay and if i save that like this awesome nice all right so that goes ahead and does that uh now what i'm going to do is i'm actually going to get rid of it on my local house because i think it's killing my ram so i'm going to look at it for your screen yeah wrist removal yeah yeah awesome um i'm not longer on that screen so we're good yeah nice so now i have a background color and a height of 100 view height so you can see we've got that little uh kind of weird looking uh gray behind it right so that's pretty good for what we want to start with and then what we're going to do now is we're going to go ahead and target the app body okay so that body i'm going to go oh this was the app body so i didn't want this stuff and i wanted this to go towards the app itself so the entire app so let's go ahead and change that and we should be able to see this if i do save now we can see the whole thing's like that right the actual app buddy itself where it says let's build a whatsapp plan let's target that so we say app body like this and i'm going to go ahead and do the phone and say display flex right so i want anything inside of it to be to follow the flex rules then i'm going to go ahead and say this is a really neat trick by the way guys i'm going to give it a width and height of a 90 view height so it's going to have a little bit of a cropping in from each from the top uh and the left and right and the bottom and then what i'm going to do is give it a background color of a i think this was like a a different white color so now if i save this you should see what what i've done okay why is my uh what's up all good yeah it's just it's it's saying saving saying so saving not determine recent changes or others what the heck what is that yeah i know right yeah but then but now it says nothing okay no it's all good i see it i see it i see it now yes you see it kind of made this uh this box which is like it's got a width of 90 view it uh and a height of 90 view height right so it's kind of cropped in a bit uh i know oh thank you thank you so much thank you so much says hey bro i'm new to your channel just four days four days uh back i saw zoom clone that's insane you guys are rocking let's go we'll rock today big fan here thank you so much thank you dude that's amazing love that and now what we're gonna do is we're gonna add a slight little box shadow so you guys can go ahead and copy this box shadow code i just went ahead and messed around with the value into i got like a nice little sort of 3d effect off of it and then i'm going to give it a margin top of 50 pixels so it doesn't touch the top but then what like why what i kind of found here guys is i don't want it to be um positioned like this so let's go ahead and get rid of that i want to do a little trick right so if i can go ahead and say the following for the app so if i say display grid and then i do this place items place item center look how nice this trick is as soon as i do this boom it's just oh wow just see that yeah like it's insane like if i get rid of that place item center you see like it does that but then it just literally maps it on vertical and horizontal axis and gets it centered now if i go ahead and move remove this h1 of let's put a whatsapp clone like this now you can see look at that boom perfectly in the center wow dude that is insane wait so is this kind of like display flex but this is it's just a a new way for this did this come out after display flex or something so i'm not sure when it came out but i was watching like a google video and they were talking about the different display methods and display grid was one of them and so the grid is obviously css grid but place i didn't know about place item center and basically whatever container child you like whatever child element you have it will just center it vertically and horizontally got it got it got it which is really really nice because usually you have to mess around with all sorts of margin and rubbish like that so that's really really nice um okay so now what i'm going to do is i'm going to give this one a margin top of 50 pixels i'm going to kind of detract from it because in whatsapp in the actual web one it doesn't sort of it goes a little bit closer to the top like that that's it nice awesome so now we're waiting who is pumped guys i have somebody saying hey when nas starts staying pumped i'm going to be laughing and pumped as always let's get pumped up guys get pumped up let's go let's go ahead and all right so now we've got oh my god we've hit over 1200 viewers and say let's go nice let's keep it going let's keep it going so we've got app.js so remember we mapped out two of these components we had sidebar and chat right so for the sidebar what i'm going to do is i'm going to go ahead and actually make that component so uh knows if you want to show them how to make the first one and then after that i can show them uh i can kind of speed it so if we want to go ahead and create and create a new file called sidebar.js okay so it's going to do uh inside the source correct so yeah right click new file side bar oh capital s capital as if because it's a component yeah side bar dot js all right let's go to create that and then that's in here and then we can we can use uh for to create a component what is the shortcut it's r f c e r f c e uh wait let me try you you're good yeah rfce there you go boom right there nice yeah so that's how we're going to be very like speeding up the whole uh process of creating components and what we will be doing every time we create a component the standard thing to do is go ahead and import the corresponding component css file so in this case sidebar.css so i'm going to create it sidebar.css and we should pop into it now in a second oh i think you have to follow me again when you create a filename okay i see i see it right there yeah i'm following you now yeah now let's see what the sidebar does here you see that right there yeah right there yeah boom so then that way we import it and then remember guys we want to uh stick with the bem convention so we're gonna do class name equals uh sidebar like this right so that's what we want to first need do with that so now we've got the sidebar and what i'm going to do here guys is we the sidebar is split into different sections right so firstly what i'm going to do is just prove that it renders out so i'm going to do h1 and say sidebar and then i'm going to go into app and i'm going to go ahead and rather than having my comment i'm going to replace it with sidebar and if you guys like the comments that i do and you think it's useful let us know in the comments because we tend to do that on every video and we're not actually 100 sure if you guys like it or you guys find it confusing yeah it's always nice to see yeah so then we need to import that at the top i've done a little neat trick there i just went control space at the end of the component and you can go ahead and do a little shortcut save it and we should see hi i'm a sidebar hey okay i'm or sidebar perfect nice hi i'm a sidebar hot so oh some people are saying rfce is not working for me how can we accomplish that so if if rfc isn't working for you guys now let's go ahead and go into your extensions yeah right here type in es7 es7 you you guys need to go ahead and install the following extension es7 react redux and snippets so yeah just install that and then you guys should be fine right here and that rfc will work no problem exactly yeah exactly that and that will go ahead and give you uh that sort of the lovely shortcuts that we show you throughout the app so the next step what we're going to do is we're going to split this up the sidebar up into separate things right so md for can you do thank you so much thank you very much guys a lot from this channel i implemented the instagram clone thanks guys keep up the great work awesome work dude well done on implementing that nice so inside the sidebar we're going to have a few sections right we're going to have the sidebar header so uh as i do this now it might be cool to show the actual app so as i write it we can see what i'm doing on the sidebar what i mean oh yeah i am showing the actual app no no no sorry the deployed app i don't know if we should show that there's some pretty nasty comments in there oh really okay yeah okay god damn it guys guys come on yeah keep it clean so now what we're gonna do is on that sidebar we have a few sections we have sidebar headers we have sidebar header right so that's the top of the sidebar where we had nars avatar we had a few icons in there and then we also had a search bar so we had like a little nice little search box i'm going to say div sidebar header search sorry search like this nice and then we also had a chat right so we had the chats when i refer to the chats i mean all of the things which some people have like sadly spammed out but we can go ahead and do sidebar chats like this right so we can go ahead and do that uh sidebar oops yeah there we go so now we've got three sections one two and three so we've got the header and the rest of it so in order to sort of go ahead and and carry on with this now what i want to do is we need to install material ui because we need some icons right we need the avatar the component we need a bunch of icons so um now let's go over to materialui.com okay material beautiful yep all right there you go nice and what we want to do is we're going to do um the following command so let's open up the terminal okay so command j terminal yeah okay i see the terminal but i can't write in it awesome uh yeah you can't run it so now what we'll do is we are going to go ahead and do i'm going to open up a second terminal so you should be able to see a second terminal yep ls what i'm going to do is i'm going to say uh mpmi so npm install and then we're doing material ui yeah got it and you can go ahead and do that what that will do is i'll install all of the material ui dependencies so all of the different components that they give us everything that is included inside of material gets pulled in when we do that while we wait for that to install let's go ahead and go to the search bar on the right and type in icons and just so you guys know like what material ui is right material ui is simply just a way for us to easier um to easier uh basically enable you know to it already has css components so we can really fast create you know good looking applications exactly exactly it's like a reusable component i guess is it like a component library yeah yeah yeah right so css library like a css library basically yeah exactly so once you've done the core you actually need to go ahead and install the icon so what we can do is we can do we can write the same command or replace the android icons like this right and what that will do is i'll go ahead and pull in the icon set so yes we installed all of the components that are available but they also have a really nice icon set so you can go ahead and install over all of that so it does click on where it says you can search the full list of these icons and give them a demonstration as to how we then get the icons that we use you can search okay right there search your photos of these icons let's go ahead and do that i'm clicking thank you very much siddharth he goes doing a good job guys appreciate it you did thank you thank you thank you appreciate it let me see if i can find you all right there you are siddharth there we go you're the man you did nice all right okay go ahead sunny yeah so now what we're going to do is inside where it says search icon so for example if we need let's say a um settings yeah we can do things yes this is to say we need a settings icon right so you type in settings inside of here and then you see you'd get the icon and if you click the icon you'd actually get the import code that we would then use to pull that into our app and because we installed the icons we can go ahead and actually write that in our app and it will work as we expected to so whenever we're doing this tutorial you're going to see me doing a bunch of imports and what's going to happen is that's how we found them so if you guys are wondering how that's that's how we do it right got it yeah yeah awesome nice so now what we're going to do is let's go over to uh the sideburn i should actually go ahead and start like populating this stuff so we have the sidebar header right now the header had a few things it had a few icons on the right and an avatar on the left so to get the avatar on the screen what i can do is i can go ahead and import the avatar so i can go up to the top and import the avatar so actually i can do it i can just write it and then i'll do a shortcut so if i say avatar like this right and i should be able to i kind of might do my little shortcut let's go ahead and do this so i'm going to put it at the top right avatar like this and then if i save it now we should be able to see a little avatar pop in so wait until this loads and we should be able to see um a they're still compiling oh something looks like somebody cleared the chat thank you so much finally somebody cleared the chat on the actual live one let's clear the chat a bunch of times that's awesome that's smart that's smart thank you whoever did that thank you so much nice thank you so you see guys where we've got the top we've got the avatars is avatar um nars is avatar in the top left right there and then on the right we have the icons right so that's what we're trying to achieve right now we're doing the header section so heading back to localhost so now yeah boom right there we have an icon right now okay there we go there we go the avatar right so the avatar is already there and what i'm going to do is for all of those icons i'm going to go ahead and bundle them up into a like their own container i'm going to call this one sidebar underscore underscore header right okay like this and then inside of here i want the following three icons i want a uh it's kind of it's weird guys it's called a donut large icon that's the first one the second one is called a chat icon and the final one is called a more vertical icon and basically i'm going to go ahead and save this once i import these and you'll see what i'm what i've added in here so let's go ahead and do that here so boom i'm going to save and then let's go ahead and see what we pulled in so we've got the donut lodge and the donut large is for like whatsapp stories the chat icon is for like if you're gonna create a new chat or something and then the more vertical icon is for the three dots got it yeah so that's how we get that so now we're going to do to get that styled correctly let's go ahead and actually dive into sidebar.css so inside of sidebar.css what we have now is we have let me just make this a bit clearer so we have the sidebar header so let's go ahead and do that so we've got the sidebar header and for that header i'm going to do sidebar header like this and i'm going to say display flex right are you typing where are you typing where are you typing um oh you might need to follow me on css okay i'm like wait hold on where are you right there yep hey yeah there we go i don't know why i doubt that yeah yeah that's weird anyways i'm going to do side display flex as soon as i hit save we should see everything will go into a row now right there nice nice nice nice yeah and then because everything sort of um we want to space everything between it so i don't want everything to be bundled up i want the two containers to be spaced apart so if i do justify content space between it should use up the full um width of the the container at this point or in this case i need to do um into a few more things actually i need to say um that's one sec we're gonna do okay let's go ahead and give it some padding and a border right so let me go ahead and do that first one sec wait so if you do say shouldn't shouldn't that work space between right now right so it should but then you see what's happening is basically we've given so where we get where we had body so our body was actually so let's go ahead and check out our body our body was display flex oh is it yeah so it means it's only going to use up what it needs because this was a child of that body so this div is only this day of basically is not taking up a hundred percent of the width so that's why these icons are not specifically you know uh basically are not taking up the whole width or space between i guess you can say exactly and to fix that what we could do is just to prove the point we could say flex one and this should then go ahead and use the full width look at that right there see big difference guys look at that exactly so it's all about understanding how flexbox works that should help you now what we're going to do is we're not going to use flex 1 we're going to use flex 0.35 so i wanted to use 35 because that's roughly how much whatsapp web use is yeah and you can see like roughly that sort of the the amount that we want to use right and then for the chat we're going to use up the remaining 65 so that's why we've done this here almost 1.5 k likes on this video guys that is insane guys i hope you are pumped for this video as much as we are guys let's get this to 2k come on come on you know what to do you know what to do that's insane oh my god like i wonder what the watch time will be on this this is insane oh dude i'm excited to see it yes damn damn so now we've got the um the header right i want to target now so header right is referring to the container around those three icons so if i go ahead and do target that header right so i say target the header right like this and now what i'm going to do is i'm going to say display flex so they're already in a row so it will continue to be in a row but i'm going to do align item center and this should actually centralize all those items uh in in that container so there you go there we did done it there and then i'm going to do is say justify content space between right yes a space between so space oops space between like this and then if i do that it should i mean does that make much of a difference at this point no because it's going to be cramped up but if i say min width so i chose to basically give it a minimum width and i gave it a responsive minimum width of 10 view width so if we go ahead and add that now now it gives it and then you see the space between kicks in because it's actually now got some space to go ahead and do that now all of these buttons if you hover over them they're not clickable they don't have like a nice clickable fill so if you go over them they just kind of look like crap right so it's like sunny and kazi best hosting duel on youtube kazi looks different today right he looks a little bit different yeah doesn't have the mustache you know nice um so now when this you see those buttons on the on the the right hand side the icons if you click on that so go ahead and click on yeah yeah nothing happens right no no so that kind of looks rubbish right so what material ui goes ahead and gives us is like a wrapper and it's called icon button and what you can do is i can type in icon button like this i can import it from material ui so i've imported at the top over here and then what you can do is you can go ahead and you can wrap your button inside your icon inside of it now if we click the left uh the left icon so you see uh not that one the the leftovers hey look at that you see that guys yeah that looks very nice to see how it creates like that that uh that like yeah i like it that's good yeah it gives it like a really nice kind of clean feel when you do that it makes you feel good you know it's like yes i just click the button and i want to click i want to keep clicking the button exactly it gives you that nice ripple effect so i'm going to go ahead and surround the rest of them inside of that so i'm going to go ahead and replace this with a same version but everything surrounded inside of icon buttons and if we do that we can now see there we go we've got the three buttons and they're all clickable icons instead now so you can get one i see it boom boom boom so all button three are clickable now okay i see it cool yeah and i mean like that's a really satisfying thing which is super easy to achieve using material ui so really really nice little little wind there yeah awesome so what i'm going to do now is for all of the icons inside of that right container i want to actually space them out a tiny bit more so i'm going to go ahead and do this so i'm going to go ahead and target that right container but i'm also going to say the direct child which is the material ui icon so this is the class name that is gets given to them i want to give it a margin right of two view width which is a responsive and i want to give it a font size of 24 pixels so if i go ahead and do that and you need to do a question mark exclamation mark important so you override material ui's font size and we do that and now we should be able to see that it says it's very subtle that change it was actually super super subtle but it did make a difference yeah um awesome so with that said now what we're gonna do is we have the we have that portion done now for the sidebar guys we actually have uh a few things so we had we've finished the avatar now we finished the header section so the header looks really clean right now yeah but we want to go ahead and do the search so the search is that search container underneath it so it's the next bit underneath so remember this bit that we sort of drafted out right right so what i'm going to do is because the search container consists of two things it has like a search icon so like a search sort of hourglass icon and then it has an input field so there's two things here so the search icon that we're going to use is called search outlined so it's actually this icon right here so the one we're talking about this is this search icon right here you see that guys right here yeah so exactly that yeah exactly that so i'm going to go ahead and do search outline and i need to import that from at the top so i can go ahead and do uh import from search outlined there we go and then what i'm going to do is i'm going to go ahead and do the following so i'm going to add an input field and i'm going to give a placeholder and the placeholder says oh no it's what might be called if you go to view um and click enable word wrap if you want on vs code right yeah you can go into the help and type in word wrap and then oh there it is yeah toggle wide wrap oh that's cool okay i like that all right yeah so that way we never get the issue of them not being able to see it nice oh man that that's a cool tip but cool okay right yeah that's insane what's a what okay yeah i got real excited rowan says sonny will you be using redux here we're going to be using react context api so stay tuned and we'll show you the pattern which is also applicable to redux so yes is the answer to your question um nice so now what we're going to do is we have the search and the input field awesome uh if i go ahead and save this now we should see that those two things pop in now the final one that we saw was actually kind of it looked a bit different to what we're going to see on the screen now so let's wait until that refreshes uh you might need to refresh uh the localhost myself yeah i got it oh it could be that oh actually it could be because all of the children are still loading actually it's still loading at the localhost oh right yeah it says mine's compiling still okay so while it does that what we can do is we can carry on coding so we have the all three of these children so we have the sidebar header sidebar search and sidebar chats right i'm going to go ahead and go to sidebar and i'm going to make this display flex yeah display flex but i don't want this to be i really don't want this to be in a row because it doesn't make sense then my then my sidebar would be in a row along the top i want to do flex direction column like this and that should actually go ahead and fix that for us so i'm going to go ahead and why is it still compiling that's so weird let me see command j um does it compile on your end yeah i think it's yeah i'll restart it there we go so the npm start and that should be doing it okay nice far is like learning a lot from this of course guys that's we're here we're here to teach you guys we're here for all you to learn so much exactly and guys like this is a huge jam packed like it is a value pack this one so thank you so much for the super chat looks like a lunch so much from you guys done with instagram clone cover 19 tracker looking for wow and the content attention and looking forward to the whatsapp clone let's go that's what i'm talking about nice dude okay i think now it should be up and running us okay let's see him refresh yeah refresh one more time so i don't know it's just it still says starting web development server so it looks like it's not done yet okay so we'll carry on coding for now it might just be the ram or something but yeah what we can do is essentially what we have is that search outline hourglass right then we have the input the input placeholder and what i'm going to do is i'm going to surround the entire thing inside of something called sidebar and then it's going to be search container oops god damn it that is not container it's a search container like this right and i'm going to go ahead and grab these two boom chuck it in there and save it like that right now with that said what we're going to do now is go to go ahead and style this so right now it would actually look kind of horrible it would have a search container it would have a search hourglass and then it would have an input field with some nasty border around it um it's really frustrating why is that not i know right yeah because that would be it's really really nice react you got this react come on god damn it it says starting the development server guys drop some fire for react to start this developer server guys come on i mean if we do you reckon dude i mean we are almost at 1300 holy moly and it just keeps going up insane guys yes almost whoa wait a minute it says compiling oh my god i think that's because g net network just dropped a donation i know ginabro did the whole thing you know she's like yo let's drop a donation outside localhost is like boom you know what all right i'm working guys we're four people away from breaking 1.3 k viewers insane yeah this is on road today dude unreal i think it's actually done those if you hit the refresh button let's try it come on come on you got this come on you can do this let's go hey let's go nice so now we have the search sidebar container so you can see now that it looks ugly so all of that yeah container so we have the sidebar search and then inside of it a sidebar search container so i'm going to go ahead and make that look a little bit cleaner so let's go ahead and do sidebar search like this oops sidebar underscore underscore search and then what we're going to do is say display flex because we want it to be flex i want it to be centralized so i'm going to say align item center and then i'm going to give this little background color right so this background color i believe is a sort of like a it's like an off gray and i'm going to give it a height of 39 pixels and a padding of 10 attempt sources so this was actually drafted from the whatsapp designs themselves so the ones that they did on whatsapp that's why i hadn't used an inspiration for from sorry so that's how we do that and then the actual container itself is where we want to make it look a bit more nicer so i'm going to go ahead and target the container and i'm going to say for this container i want to do display flex because we love display flex i'm going to say align item centrally let's go ahead and save that and you can see that should pull everything centrally there we go i will say the background color of the container should be white we want a width of 100 a height of 35 pixel and our border radius of 20 pixels which means it gives it a more rounded border right so if we go ahead and do that now you can see there's a white border around it and it has this this sort of like it's starting to look somewhat like a search field right but it's not it's almost there but it's not there yet yeah right so the input field we're going to do next so inside that search container target the input field so with this line here and i'm going to say give it a border none and a margin left of 10 pixels so border none and margin up to 10 pixels so if i do that we actually get rid of the input uh border and look at that it automatically starts to come together a bit more i like that that's so much clearer it's not so much cleaner and then we've got one finishing touch so now if we say go ahead and target the material ui icon so remember this is the icon class name that gets given by the foe we're going to say give it a color of gray only by default this is this is actually the class and it's given like if i click this you're talking about this one so if i click this inspect element let me see if i go to the put this at the bottom so the actual icon uh the actual icon itself if you inspect that little hourglass it will give you a um it will give you the oh i see where you see that guys it's a class class mg right there right here guys okay cool cool and that will basically go ahead and give you so we're saying target the material ui icon give it a padding of 10 pixels and make it grey so as soon as i do that see it kind of just ties everything together which is super super nice right and there you go there we have like the search container so very small changes very subtle changes but that looks good are you kidding me solo changes you know subtle changes make a big difference yeah venue says the 35 like .35 trick in flex was awesome yeah like we're going to show you when you combine that with the 65 for the chat and you get like a perfectly responsive container so it's really going to be some cool stuff coming up 1.7k likes let's go sane dude insane mystery snag says i really appreciate this thanks a lot for these videos been watching a while i just don't like uh commenting okay nice dude thank you for watching we don't mind if you don't comment as long as you're here that's amazing yeah the most important uh yeah nice so the final part guys is the chat right so we have the sidebar chats underneath right so let's go ahead and check that out so we have the sidebar and now what this is if we go to the deployed app we can see all of those where it says add new chat and they clear the chats consider each of those things to be the same component so even add new chat surprisingly is the same component as clearly yeah that one yeah right here boom so that is all one component but that whole section is what we're going to be building now right so now what i'm going to go ahead and do is for that one i'm going to say um let's go ahead and so let's just for now i'm just going to say like h1 it's going to be this is an oh let's just say sidebar option or something sidebar chat yeah or something like this and basically we're gonna have it like this so say we had a few of these options and we go ahead and save it then we should see [ __ ] hamdan says sonny i get positive energy when i hear your voice oh thank you dude it might might be the british accent i guess i love that partially partially partial and the rush is just sunny the rest is just sunny the way it is guys sanja is an amazing guy like if you meet him in person you gotta talk just a great guy which actually i haven't mentioned person yet so yeah we haven't even met but it's guys how crazy is that we're like we're like changing like inspiring so many people we've never even met which is like mindblowing so you can have an awesome team across the world and you can still do your thing which is insane yeah by the way surprises thank you so much for the 2020 donation appreciate it thank you nice um so now we have so where we have sidebar chat we're going to pretty much replace the sidebar chat h1 tag with and a component which is called sidebar chat like this right so we're going to sidebar chat like this oops chat i'm going to go ahead and make that file so i'm going to make a file called sidebar chat yes dodge s and we should jump into that file now and if i do rfce boom we get a nice little shortcut uh now is this do a command b i think oh you just opened that now didn't you yeah i just adjusted yeah yeah yeah just so they can see and then what we're going to do is our default setup so we're just going to go ahead and create a sidebar chat.css i bought chat dot css go ahead and do this and here i'm going to do class name of sidebar sidebar chat like that right and i need to create that sidebar chat css file so sidebar chat dot css like this nice so now what we're going to do is i'm going to go ahead and style that so firstly the first thing i want to do is you see that sidebar so firstly it's freaking out because it's like sidebar chat is not defined so i need to go ahead and import that so i'm just going to go ahead and drop an import and it should work like this and i'm going to save it and now what i'm going to do um is go ahead and do so remember we made it flex one all right so we made it flex one so now what i'm gonna do is oh wow cause it donated forty five dollars for uh how does that work out [Laughter] i've been saying cosby thank you thank you dude let's go just want to say i love you all so much we i hope we are helping build the best developer community on the planet damn right bro damn right bro love you too bro seriously i love you too bro exactly this is insane right so now it's saying expected and objects let's go ahead and check what's going on here so it says sidebar chat if i go ahead and open sidebar chat it's because right now we actually haven't got anything inside of it so if i go ahead and do this and say hey you should see hey pop up inside of the sidebar chat there we go so what i'm going to do now is i'm going to go ahead and get rid of these okay and i'm going to style the sidebar chats here so i'm going to go ahead and do sidebar chat oh no sorry sidebar.css i'm going to go here and this is something cool guys so if i do the following so if i say let's just give it a background color of blue so it's super obvious about what we're about to do right now so if i go ahead and do like this right so here we can see that that's only using up like what it needs to because it's flex the direction is column right now what i'm going to do is i'm going to say flex 1 and check out what it does it uses up all the rest of the space which is awesome and so that's because it's we're using display and if are we using flex direction column or just flux direction row that's flex direction column gotcha yeah yeah exactly yes so the flex one would be in a vertical direction and then what we're going to do is so in the demo we saw some things overflowing so to fix that we can do overflow scroll like that right and that will actually go ahead and fix that if we have a flow if we have something which is overflowing um nice so what we can do now is we can go ahead and do sidebar chat so let's go ahead and let's just pop like a few of these on there so we can sort of exaggerate what's going on and also why we are definitely not going to leave that that color so let's go change that back to uh white right because the sidebar is white there we go nice and you can see guys like like it's already looking very clean like you've got like a somewhat it's insane honestly guys what are you thinking so what are you thinking so far like who's who's i mean who's excited to just to build it i mean we're so close to actually having to look just like whatsapp clone insane yeah it's insane yeah it's taken i think well just like uh just under an hour right we're getting there pretty quick yeah and it took what's up how many years to build their app but it takes us how much what just one hour exactly one hour and lots and lots of coffee yeah so now inside of sidebar chat so sidebar chat dot js now what we're gonna do inside of here guys is we are going to create the following so inside of sidebar chat i have a few things i have an avatar right and i'm going to show you guys a really nice little trick inside of here so right now rather than sort of i didn't want to show you guys like so we've done plenty of stuff when it comes to having a url which shows the avatar we have we have that in this app as well but i want to show you something else and it's kind of a fun little trick that i did and it's basically we're using an endpoint which gives you a random avatar right so it gives you like a random face or random head which is kind of cool so i'm going to show you guys how to do that so what we're going to do is here we have avatar so let's go ahead and write avatar like this boom boom boom and i need to empower at the top so import avatar for material ui core like this save it and what we should see now is we should see avatars popping in so we should see a bunch of avatars popping up nice okay nice there we go and then what we're gonna have is we're gonna have an info div so i'm gonna show you that that cool little thing afterwards we say div sidebar chat sidebar chat uh cyborg chat underscore underscore info like this and then inside of here we're gonna have a h2 and the h2 is gonna be the name or the room name so in this case it's going to just say room names for now right because remember our whatsapp is slightly we just we all edit it a little bit so we've done it for demonstrational purposes because we wanted the balance of everything and so something that you guys could demo really nicely to an employer or something so we've got a room name here and then here we're going to have like the the last message that was sent on that room is actually what comes up here so we can just say last message dot dot dot right and if i save that we should see the following so we should see something pop in now just go ahead and check there we go room name last message awesome uh and then we're also gonna have okay so that will do for now and basically guys this is really cool right so i actually found this not long ago and basically what you can do is if i do this if i write source equals so for that url i found a really neat little website called http avatars.spare.com api human right so oh uh not as your word wrap doesn't seem to be on if you go too you don't know why i got it i got it yeah there we go yes there it goes forward slash and then basically what you do is you pass in so you can pass in something here to human and this could be human it could be like an animal face or something like that but you could also do if you pass in like a random string at the end of this guys it generates something based on that random string so now if we go back to the um the react app oh right there just like that sorry i just i was looking at the avatar stuff that's cool look at this guys it literally says how to use it you can literally just pass in anything and thank you oh that looks so good it's cool right so it's called dice for avatars and basically now if i go ahead and pass in a random string and save it that seed so this random string at the end we call it a seed and basically so here if i go ahead and do like one two three save and it should if we refresh um okay interesting so we've got source equals let's go ahead and see why that's happening so oh yeah so it should be at the end it should be dot svg at the end oh got it got it okay so this would be random strings or like some random string dot svg and then what this will do is and it's also a vector icon so it's going to scale really well so you can do that now look at that guys and if i change this a yeah like look at that if i change this now it's gonna be a different avatar so let's go ahead and uh oh that's so cool it's nice right so this is like a little neat little trick that we were going to add in here just for some fun because we like to keep these things quirky you know show you guys some little tricks so now what we're going to do is in order to get a random string every time for that i'm going to go ahead and use a use effect so use effect is a hook inside of react and basically what it does is it will run some code when the component loads right so run some code when the component loads and what i'm going to do here is i'm going to call this so this little string over here is something known as a seed right so this is something known as a seed so what i can do here is i can pretty much wrap this in some string concatenation so i can go ahead and do the following i could say boom boom boom like this and then i want to essentially have some variable here called seed right so if i go here and i use some state so uh state inside of react is just a way of basically writing a variable so here we have seed set seed is sort of how we modify the value um and then you have to pass in something we actually have to like there's no way we're just like you just automatically get some random one no yeah it's a bit strange i mean like i think it's because that way if you had like a user id or like something like that it would always give you the same you see what i mean it will always give you the same one yeah all right so what we can do now is we can go here and then for the use effect i can do is i have all i've done very simply here is i've just made a a math.random so it's going to generate a number between 0 and 5000 so this is uh the code so it's going to do this and basically what i'm doing here guys is very simple i'm pretty much just doing set speed this and what this will do is whenever the sidebar chat loads it will calculate some random one and it will basically go ahead and use that for the icon so this is an example of just it's going to generate random ones for every for the room every time i need to go ahead and import you state there you go arjun thanks so much for the donation appreciate it hey let's go yeah nice and now you can see that hey we got we got random avatars for every room right where oh yeah we do we do look at that yeah nice his girlfriend is already giving him too much love it's so funny we have people like hey i'm a bit i'm a fan of i'm the number one fan of kazi i'm not a number one fan of sunny i'm the number four one fan of nas it's like so many people it's amazing man i love the love that we have in the specific in these comments man insane stuff hey nice okay i can see everyone's saying i'm put i'm gonna find i'm gonna find somebody oh man it's like i'm the number one friend of sonny that's my girl nice so now let's go ahead and carry on so we've got the seed which is generated randomly which is why even if we're refreshed we'll get like a different um avatar every time so just kind of a little cool trick for this demonstration and yes i know it's going to be different every time it was a bit of fun that's why we did that so now what we're going to do is we are actually going to go ahead and make this so that it accepts some props right so we want this to actually accept some props so at this point we have the room name and last message actually for now we don't need to worry about that we pretty much have it let's go ahead and style this so it looks nice so i'm going to go ahead and we've got sidebar info there we go uh yep so nice so i'm going to do is go ahead and decide by chat.css awesome and i'm going to go ahead and start this now so sidebar.chat and what i'm going to do is first i'm going to say for sidebar chat i want it to be display flex so display flex like this and i want to say uh padding of 20 pixels right so it's padding at 20 pixels and now we should see everything goes into a row and it's got its own little bit of padding right now i want the background color to be i want the cursor to be a pointer so i want the cursor to be i have a little pointer type which means when you hover over it should be a little finger and i want a border underneath all of them to be uh to be a little sort of gray right so let's go ahead and add that in and we should see now that every single one will have a little border underneath it hopefully so look at that you guys see that you guys see that right here let me see that right here it's like it's so it's so minor but you can see it right here hold on let me know i did add a border right underneath it just it's like it's like very my hair i'll do i'll do like a command plus something they'll do you can see right here okay yeah right there hey that looks so crisp and awesome nice nice so now what we're going to do is i want it so that when you hover over it it gives it a different color so we can use a hover property here so we can say when you hover give it a background color and this is like the slide this is the gray color that they give you um when you hover over something inside of uh react so inside of whatsapp sorry so now if you hover over those uh fields nice oh look at that oh that looks so good oh i just want to keep covering them nice nice yeah i like that that's really cool yeah so now oh why is mine i mean is my auto save on i think it is once a preference is because it keeps basically saving i think oh no it's not it's not what isn't that supposed to be saving i just keep saying compiling compiling compiling compiling you can't handle the amount of energy that we're just giving here man i know right it just needs to keep it man somebody goes sunny looks like ross from friends honestly maybe you oh my god i've been told like i'm kind of like ross from friends but that's so funny oh man and you kind of speak like him like him too i mean without the british accent but um you know yeah the voice just the voice is deep you know what i mean that's so funny even mama because he behaves like ross trust me that's so funny that's insane oh man shots are being fired awesome so now what we're gonna do is we have four we're gonna start with the h2 tag right so the h2 tag you don't want it to be looking like that so i'm gonna say inside of the sidebar info so sidebar chat info i'm going to target the h2 so target the h2 and i'm going to go ahead and do font size of 16 and margin bottom of 8 pixels so it gives you a little bit more room to breathe right and then we save it and now we should see okay i gave it a little bit more space and then what i'm going to say is the actual sidebar info so the stuff that has a text inside of it give it a margin left to 15 and we'll see it push away from the uh the text so now if we do that you can see now it's pushed away from text so it gives it a nice little fill and we did show when you hover over it right yes we did so yeah right here as i have already right here oh right there see that awesome nice so now what we're gonna do is uh even even frank's jumped in hey someone has my back bojack kate says that explains why he's so cool i think west is cool dude [Laughter] oh man that's hilarious it's so funny okay that's dope so now what we're going to do is we're going to have it so that um we actually can we can we can customize it so i want it so that if i pass in a prop called add new chat right this sidebar component is going to be reusable so here's where we pass in the props over here right um someone goes nas you're joey wait what really and you know i can see it a little bit i can see what all right fine okay i can i mean it's not bad it's not bad i like it okay okay here we go add new chat like this so now i'm going to pass in a prop called add new chat when we pass this in i'm going to conditionally render this component so it looks slightly different but keep some of this styling right so what i'm going to do is here for the first one i'm going to say this is an add new chat sidebar right so i'll add a new room add new chat that's the sort of functionality that we're going for here and what i'm going to say is before we return our jsx i'm going to say if it's not the add new chat so if it's not the add new chat then i want it to basically show the normal stuff otherwise render out the following and i'm going to basically do this i'm going to have the following i'm going to say render out a div with a class name of sidebar chat so we want to keep the styling the same and when we click it i want to execute some function called create chat which we haven't covered up at this point and it's just going to have h2 inside of it saying add new chat right so at this point if i go ahead and just create a function called const create chat this and then basically what i want to do is just at this point just say uh we can just leave that blank for now so if i save that we should come back and see so let's refresh low cost refreshing uh there we go you see add new chat right yep oh right there wait where you see on top of where it says room name oh right there there a new chat okay okay cool cool you see it's still got that um it's still got that stuff right there yeah yeah yeah add your chat rooms cool yeah and it fits in line with sound we're just reusing a prop yeah so we're just raising a prop here so now what we do is when we click that create chat i want a popup to come up which says um please enter a name for the chat so in order to do that it's very simple we just say const room name so i'm going to store the response in a variable called room name and then here i'm going to say prompt please enter a name for chat and then what i want to do is i'm going to say if yo we broke 2 000 likes guys my god dude insane stuff thank you so much we love you all love the support let's keep this going um yeah let's get it to three let's get to 3k let's go to three dude let's go to 3k are you guys ready to get a 3k yeah get your family on board get everyone get yourself get your brother get your sister get your friends you know get bring your friends over or be like okay yeah yo sit down let everybody sit down let's watch sunny and nas kanji said hit the air horns i think i want to hold on but for some reason my stuff is not working my sound effects are not working i don't know why i keep it here wait wait well now before we go i got the perfect gift for this ready ready for this oh my god wait wait as you said that carol ramirez just said keep it up and he dropped 10 u.s dollars dude no way guys by the way i know you get you can't you can't see you sonny but let's just say there's a really funny gif right now playing that that that yeah oh here actually i'll show i'll show you the gif here here's the here here's the gift trust me right here oh nice this is the gift all right guys we just hit officially over a hundred dollars in donations that's insane that's insane so much guys thank you so much all right let's keep going strong guys so now we're saying if we click that i hit that add new chat uh uh button what i want to do is i'm going to prompt to get room name and then if only if they entered something in the room name i want to do some clever stuff here so do some clever stuff in the database here all right so we'll come back to this point uh here so i'm just leaving a little note here do some clever database stuff here okay nice so now if i go ahead and hit save on that now we should see uh so nice i want you to click on add new chat okay i see cool you see yeah so it's awesome let's go ahead and type anything it won't actually do anything it will just close but we actually capture that variable inside of room name so dancer dance room exactly all right and we basically and eventually the goal is that i'll pop in and say dance right okay so nice so with that said i think what we're going to do is we're going to sort of break this up into different components but now let's go ahead and add the chat so let's add the chat let's get that started and then we can start wiring everything up so it starts to work in the fashion that we expect right cool cool so inside of app.js what we're going to do is just go back to our sort of notes and here we've got the chat so let's go ahead and create the chat right so chat like this boom go ahead and remove ours and you see guys this is clean it's really nice way of doing that so really handy sort of thing to get used to i'm going to create a chat.js component and i'm doing rfce boom like this and let's go ahead and do a quick set up so we say class name equals chat and then here i'm going to say oops class name equals chat and then we're going to say import chat dot css like this save and there we go and now what i'm going to do is this chat is actually going to render out oh do that create oh no i didn't create a chat dot css so chat dot css chat dot css boom like that i'm going to go ahead and save that and inside of here now what we're going to do guys is i'm going to say chad.css and remember guys i actually spoke earlier about how we wanted to we used the 35 so 0.35 to get uh 35 of the of the screen on on the using that we wanted the sidebar to use 35 center screen but for the right side the chat i want the chat to go ahead and use flex 0.65 and what this will do is we'll use up the remaining 65 of the screen so to prove that this works we can go ahead and do background color uh let's just say blue save it and i can save this one and if i save this one as well so it's pulling in so the chat is not behind the chat yep so i need to import yeah yeah so you can see right here guys you just import the chat boom right here nice and then here's the chat so that's what we're working on we're working on which is this specific section right here guys exactly and can you see now that it's using up that perfect 65 in the screen right so the blue is actually really nice to visualize that i like that that's really clean yeah yeah really really nice way of showing that right now what we can do is we actually want to sort of go ahead and make this look a bit nicer so inside of chat so i'm going to just double check one note so we've got inside of chat we have a few sections so again guys what we've done before we're going to do the same here so we've got we're going to have a three divs the first one's gonna say div and it's gonna say chat header right so this is going to be the top section of the chat inside of here we're going to have what what the chat room was um when somebody was last seen those icons that we see all of that stuff on the top then we're going to have the chat body right then we're going to have the chat body now the chat body is pretty selfexplanatory it's all of that stuff in the middle right it's all the stuff where the actual chat exists right and then we're going to have the chat footer right so dev chat footer yeah right now the chat four is where we're gonna have the input field and all of that stuff and that's where that's gonna live so now that we have that in place let's go ahead and start filling this out a bit so let's focus solemnly on the chat header for now and what we're going to do with the chat how do we see an avatar so let's go ahead and pop an avatar inside of there i need to import it at the top so i went and did that at the top i'm going to do this and save so everything gets pretty fired and let's go into our local host oh my bad hold on i'll show them some stuff right here okay yep and you can see we've got that little avatar right yep right there i see it awesome right so i'm gonna go ahead and do that uh and then what i'm gonna do next is actually go and say uh so i actually used the same the same seed trick here to get like everything sort of up and running so i'm going to quickly implement that so at the top i'm just going to do um so it's basically the same thing we did last time so we have the seed and then i said i made a use effect which basically ran with the component loads and then inside the avatar what i did is set the source to basically be one of those randomly generated urls okay because what we're doing is here i just want it to be i didn't want to spend too much time on this portion of it i just wanted it to be very simple so they showed uh an advert for um this part of it so i'm gonna go ahead and import so i'm gonna do this use state and use effect and guys you can connect this all to the db that part of it and pull those in but for this i'm just showing you so that is it more simple so we can go ahead and do that and now we can see we've got an avatar in there right that's much nicer than looking at that boring one um so now what we can do is we've got the avatar and i'm going to have a another div inside of the header and this div is going to be called the div header uh info so header chat underscore underscore header info and this is where the text lives so inside of i'm going to have h3 and this is gonna be the room name so i'm just gonna say room name for now and underneath that i'm gonna have a p tag and this is gonna say something like last scene last scene uh blah blah blah it's gonna have some kind of date there last scene let's just go ahead and save that and we should see at the top now it should pop in so um you can already see it's kind of getting hard to see with that blue background so i'm gonna go ahead and remove and there we go so now we can see it very clearly all right so we've got the last scene and then what we're going to do is on the right side because we've got loads of icons grouped up on the right remember we've always get we want to get into this habit of constantly having everything inside of um inside of its own container so in this case what i'm going to do is create a div i'm going to say header right right so chat sorry chat header right so header right oops like this right and this this again has three icons it has uh a search outlined icon so it has a search outline an attach file and a more so three dots and what i'm going to do is i'm actually going to go ahead and wrap those like we did earlier inside of icon buttons so inside of these icon button um containers and what that did remember if we saw if we remember from earlier that actually just went ahead and made it clickable so that gave us that nice ripply effect so what i can do at the top is i can go ahead and import those things save the file and what we can now see is you should have three icons okay and they're all clickable right okay okay cool so that's awesome so we can see those things right there and that's really nice um but we it's not still not looking the way we kind of want this to look so what i'm going to do is i'm going to go ahead and style the chat header right so i'm gonna make the chat header look a lot nicer so to get that working let's go ahead and open up our chat.css and i'm gonna go ahead and say the following i'm gonna say chat header and i'm gonna give it a padding of 20 pixels firstly because nothing likes to touch the sides so 20 pixels i'm going to give it a display flex so that way it's not block and everything's stacking up on top of each other we want to be in a horizontal row like that then i'm going to go ahead and say align the item centrally in case they're off center and i'm going to give a border bottom of one pixel and it's a light gray color so let's go ahead and go ahead and add that and we can see there we go it added that light grey right so again you can see it's things start to come together quite nicely yeah then the header info so i want the header info to actually go ahead and use up most of that room there so i'm going to go ahead and say flex 1 and give a padding left of 20 pixels so let's go ahead and do that and you can see now that goes ahead and pushes the rest of the stuff away right header and if we're talking about this one specifically right so header info is where we say room name and last cena that's the this one specifically okay from here got it got it we changed that to be flex one so it basically becomes the boss and it takes up all the room got it it's the boss now i'm the boss now so i'm gonna take up the room that's what that div is saying oh my god we've got 2 200 likes on this video so far holy crap holy moly guys guys come on we can get it to 3k you got this yeah we can get that to 3k we can definitely get that 3k you'll yell it out the window if you if you have to you know exactly just tell the entire street exactly so now we're going to target the h3 here so we're going to say h3 and we're gonna go ahead and do margin bottom of three pixels and a font weight of 500 so that's that goes in line with what whatsapp have um so let's go and do that and then boom it gives it a less bolder bolder look and then we're going to go ahead and do the same thing for the p tag but i'm just changing the color of the p tag to be gray so it says last scene that should now turn gray that's nice and then for the header right what i'm going to go ahead and do is say display flex so all of those icons are going to be in a row i mean they look like they're in a row right now but let's go ahead and ensure that they stay correctly and we're going to give it a min width of 100 pixels uh let's go ahead and do that and you can't see the difference when it gets smaller it's actually kind of hard to actually so it will show you that when it gets to smaller so without like many ways i okay i see what you mean okay yeah so give it a minimum width there we go nice and you see i really do love that place items so you see that that it just set everything up so when i see that like what are you talking about what are you talking about place items so remember the actual uh the sort of amount like the whole card that the app is essentially sitting on remember we use that display grid trick in the beginning yeah yeah it's just it's such a nice trick because even when you make it bigger everything kind of just you know resizes and yeah it's like it's like it's almost like mobile friendly and it's that stuff friendly yeah yeah i agree yeah like that combined with flexbox you just get some just amazing responsiveness what's up you got a competition right here i know right it's crazy so now we have the header right and then what we're going to do now is go ahead and create the body okay so the body is a bit more interesting it's one more where we're going to sort of get a bit nitty gritty with this sort of a little trick i'm going to show you guys so for the body let's go to chat buddy and what i'm going to do now is i'm going to go ahead and say so i'm going to actually start the chat body first before i add anything inside of it so i'm going to go here i'm going to say travel tools thanks so much says it says love your teaching sonny thank you so much dude thank you so much we appreciate that i appreciate you watching and being here so thank you so much um yeah so now we have the chat body where am i looking where am i looking looking chat buddy here we go so the chat body now what i'm gonna do is every child so we have the those three sections that we basically added the chat header the body the footer i'm gonna make the entire container follow the following follow the flex rule so it's going to say display flex and i want it to not be in a row because if i do this now you'll see that everything will kind of jump into a row i made there because it jumps into a weird sort of state of mind so you're going to do that yeah and that will do it and then chat body what i'm going to say is the chat body i'm going to give this this is the background image of whatsapp so i'm going to go ahead and pop this in here i'm making this background image uh you might need to do word wrap nars for this i'm doing it so for some reason it keeps it keeps toggling and untoggling i don't understand why it's like yeah i think it might be a case of setting it inside of system set preferences but yeah it might be all right yeah so if i go ahead and save that what we should do now is it actually has set the container to be the the correct size but the containers right now is flex so it's not going to use up any space so if i go ahead and do flex 1 it will take up the most space it can and we should see it at this point oh look at that nice right yeah yeah that little nice background right here and where did you get this background by the way uh that was just off google images it's the whatsapp default background so whenever you sign up to whatsapp you have this like quirky little background in there on it so that's the one that they have nice nice nice ad beautiful yeah here we have background repeat background position center padding of 30 pixels and overflow of scroll so i'm going to go ahead and add all of those things and this basically means that if it ever runs out it says on a huge screen size it's just going to repeat the image because it's that kind of background image you don't really care if that gets repeated it feels like some kind of picture then you don't want to repeat it obviously you want to scale it um and we want to position it center padding of 30 pixels there anything inside of it isn't going to touch the sides an overflow of 30 which overflow scroll which means um if we have like a bunch of different sort of a bunch of text we can scroll through it that's what that's going to last you okay so that's awesome uh and now with that said we're going to go ahead and actually go ahead and add some messages inside of that container so let's go ahead and go back to chat go here and i'm going to go ahead and add like a little message so i'm going to say imagine we had a message and it had a p tag of something like this it says chat message and this was like hello oh let's just say hey guys as an example so this is going to be an example message right so it's going to say hey guys and then what i'm going to say is we have so you'll say something like that so you can see it says hey guys right we're gonna we need to make that look like an actual proper message now um so what i'm gonna do is i'm gonna actually go ahead and we're gonna span a few things inside of it so we have a name and a timestamp there we go yep i think we're back yeah okay yeah my mic i think i just knocked out so then just [Laughter] message so i'm going to go here and say chat message and i'm going to go ahead and say position relative because we want to oh oops what the hell was that position relative and i'm going to say font size of 16 pixels a padding of 10 pixels let's go add those in save and i'm going to give it a background color of white and pop this in so you guys can see it's exactly what i'm talking about here so you can see that's the background of that thing right and then what i'm going to go ahead and do is um i think it's white is it yeah i'm sure it's white it's white that's white yes yeah and then we're going to say give it a border radius of 10 pixels so a border radius of 10 pixels a little bit yeah so it gives it like a message fill and then if you only want the width to fit the the the contents right you just need to do width fit content and what that would do is depending on how much text is in there it would just reach that amount and what i'm going to do is i'm going to say margin bottom of 30 pixels that way if we have messages stacked up on top of each other they're not going to be touching they're going to have spacing between them right yeah so where'd you put the margin bottom so i checked that it's on the message so if i go ahead and add a second message like this we'll see it should say hey guys hey guys so once that loads up again nice there we go okay so now what i'm going to do is every message should have a chat name so you should have a name of who sent in the chat because we're doing it in like a group sort of fashion and it should have a timestamp right so for the chat name i'm going to go in and basically about this is where we have the where it says hey guys i'm going to go ahead and add inside of that p tag a span which says chat name and it says message. so in this case let's just go ahead and assume that it's sunny right so sunny sangha or something like this and then the chat name right so if i go ahead and save that now what we will see is it will have like sunny tango afterwards but i don't want it to look like that i want to look like sort of appear like a nice sort of chat name yeah we kind of want to have at the bottom like like like here guys you see that right there that's exactly what i want right there yeah yeah exactly like that yeah so now we're gonna say his chat name and right because i made the parent so i made the message a chat message position relative now if i do position absolute here this will be absolute in in relation to the chat message right so if i say top uh let's just say top minus 15 pixels and what it's going to do is it's going to go minus 15 pixels from the uh from the top of that that's that that uh message right and then if what i need to do then is also go ahead and do um uh that's interesting one second it says chat body what's up pop pop pop chat message chat message i think i've done that right so if we go ahead and do chat message here like this and then we're going to do chat name top 50. if i do top zero let me just double check top zero are you gonna use the display like this trying to position absolute or what i'm just trying to get yeah i'm just trying to position that correctly so if i do a font size of extra small you see it right now it's kind of sticking to the right of it which is incorrect what we need to do oh of course um oh yeah so so i actually messed this up myself i need this to come before i need to come before the actual message so inside the actual layout that's why i went to actually before and if we save that we can now see it comes up there right so obviously that doesn't look perfect yeah we will get it there we'll somewhat make it look perfect um and then what i'm going to do is for the timestamp so i'm going to go ahead 2.3 okay 2.3k likes guys insane unbelievable nice guys that's insane so a few people are saying left zero yeah i know i was thinking fzero but i don't think we i need that just yet yeah i'm gonna go ahead and add a timestamp span as well and here it's going to basically have a time so let's just say 3 52 pm or something like that right so for the timestamp i'm going to go ahead and go to chat and i'm going to go here and i'm going to say for the timestamp give it a margin left of 10 pixels and a font size of extra extra small like this so now if i save it there you go so that's there correctly and nice and then on that side we have it like that so that's awesome i'm going to open this up in my local host as well so i can go ahead and check how this looks because not entirely sure why it's looking like that one sec because it says okay so this is because we have done so looks we've got the chat message padding 10 pixels adding 10 pixels and then over here we have chat message p tag chat message chat receiver okay interesting i mean we can start out afterwards we can fix it yeah it's fine are you trying to style are you trying to put it more up top yeah i mean what we could do is oh sorry this is why do top negative identities minus 15 pixels yeah yeah hey there we go nice that's it awesome dude that's nice and then what we can do now is like imagine this entire thing would be one message that's how we kind of see it right but we also have a variation right so i want to have it so that if i was to add another class name so chat message but also chat receiver i want it to have the same styling but i want it to be blue or like whatever sorry whatever color it is in whatsapp i think it's blue um well it's like a green maybe but especially i want it to be like a like a kind of green but then on the right now this is simpler than you might think so what i can do is i can go here add the following i can just say chat receiver oh like the one on the right is green and okay you guys see that right here right there yeah yeah yeah so this is white and it says green yeah yeah okay i see yeah cool cool so what i can do here to get that to work is i can say margin left auto and background color green like this little green here this is the whatsapp green and guys look how easy this is as soon as i save this boom hey let's go damn that's all right right like so now what we can do is to make this very clever is we can go ahead and change this to a uh like a javascript javascript kind of string so string interpolation and i can basically go ahead and do this i can go ahead and say uh we can put this inside sort of a condition and i can say only add this class if if some kind of condition is true right so i'm leaving it as a true for now but we're gonna we're gonna come back to this point and say like if it's the user who's signed in then this will get evaluated to true so he's gonna be sending the message so his message should come up as green right otherwise if you're not signed in so nars if you go on to the deployed version now and if you type a messaging no it's how all of your messages are in the green but everyone else's messages are in the white i see i see i see okay that makes sense and so you're trying to figure that out based on who the user if the user is logged in or not yeah so we're going to come back to that point and actually go ahead and uh by the way louise thanks so much for the five dollar donation i'm not sure what that is but he says hit this he says thank guys so thank you guys for motivating me to learn more and more i'm just one brazilian developer that starts to follow the channel and this week amazing projects of course uh appreciate donation appreciate your kind comments amazing thank you so much dude for that massively appreciate you watching uh yeah so that's awesome we actually have the sort of uh message bit done and what we're to do is eventually so this this message right here is going to basically be we're going to map through a database go ahead and get some messages and then just render this out as many times as we see messages what is this sorry so this true right here where this true will be coming from so this true will eventually so the actual thing that we're going to have is once we pull it from the database you're going to see this expression here ah yes it's going to save the message name is equivalent to the user's display name so that's what you log in with then we render it as you're the receiver got it got it all right okay cool and this will render to true or false but for now we're just going to assume it's true right whoa jessica jessica 20 is that mexican dollars i don't know that is i'm so horrible this uh i never know just like 20 money 20 money yeah costly catchery says is this also responsive yes it is responsive jessica thank you very much nice thank you um so now what we're gonna do is we have the chat footer right so we talked about everything else let's go ahead and finish the chat for and then we can go ahead and wire this stuff up right so what we can do is we can um well so now what we can go ahead and do is actually go ahead and fill this out so uh on the chat for is this go to the deployed version us yep and on the deployed version on the footer you can notice how we have the emoji we have the input box and then we have the microphone right yep so is that that emoji yep exactly so that emoji is known as the insert emoticon icon the mic icon is known as a easy enough mic icon and the um middle is a form right so the middle is a form so here yeah form like this yeah and the reason why i've wrapped it in a form is because it's uh we want to have that enter functionality right so i'm going to chuck it in fold here and let's just put input and let's just have a button which says send a message guys so guys i just want to say just want to say guys 2.4k likes nice dude also guys apologies if your message gets uh deleted because you wrote in all caps uh sometimes our sort of automatic automated bot might get rid of your message so try not to write in all capitals otherwise uh it's a bit sensitive and it kind of it thinks you're screaming at us yeah i think it makes you do something bad or spamming spam yeah don't worry about it yeah just yeah nice um so now what we're going to do is we have that input field so let's go over to our localhost okie dokie host oh locos is broken oh nice that's exactly what we wanted let's go juicy and now we're gonna do the top i'm gonna go ahead and import those two missing dependencies and we should see oh man it's too easy there we go so with that said the app's done guys i'm joking i'm joking all right adios let's go ahead and style this now so the chat footer right because that looks horrible um i'm going to put up in the corner somewhere chat footage so i'm going to go ahead and start this say chat footer you guessed it we're going to do display flex because we love that stuff and then we're going to do justify content space between because i want each of the children inside that container to be spaced apart i want them to be centrally vertically aligned so i'm going to say align item center and then i want the height to be 62 pixels because that's what they have on whatsapp and i want the uh border top to be one pixel solid light gray if we add that in there you go gives it a nice little effect right so now with that said what i'm going to do is go ahead and add the following i'm gonna say um for the form i want the form to take up the most room right so i want the form to take up the majority of that space so let's go ahead and do um [Laughter] are you laughing well i thought sunny's so handsome is that that one which one wait how did look at that i agree with that guys nice uh so you've got chat footer is greater than form i'm sorry chat footer is we're targeting the form we're saying flex one and we want the form itself to be display flex so i'm going to go ahead and save that and then we can see now it's actually taking up the majority of the room so if i actually go ahead and visualize this and say background color and make it blue for example now you'll see it's actually taking up the majority of that space right so it is taking up majority of that space and i will get rid of that in a sec but what i'm going to do now is i'm going to say target the input inside of that form then i want to do flex once i want the input to take up the majority of the space um like this do you want to flex on the input correct yep so i'm going to do flex 1 on the input field like this and then i'm going to do border radius of 30 pixels like this so let's go ahead and save that uh and there we go you can see like it's taking up more of that space and the input field you can see it is uh it's got that rounded sort of edge whoa tony neary thank you so much dude thank you tony awesome thank you so much so we have the border radius day pixels and then i'm going to give it a padding of 10 pixels i'm going to get rid of that border and with that i'm going to get rid of the background color because we know it works right so we don't want to do that so do that and boom we get that okay now guys there's a very nice little trick right so whenever you have a form you have some input yeah so firstly let's go ahead and give the placeholder of that input some value because it looks horrible like that uh let's go ahead and do this the type of message that way it sort of gives it a bit more ui so let's do that so now whenever we have this kind of thing right if you want to keep the enter functionality but you don't want to have a button which says send a message you basically you need to include the button in your code but it's a very little neat trick that you can do and it's kind of like like this or how can i do it all the time and it's the easiest way that i've found to do it you basically go ahead target that button and all you need to do is display none pull that button and you actually keep the functionality of the submit so you can actually still do enter to submit but you actually get rid of that headache of um of uh of having to sort of do like detecting when the user hits the enter key and all that rubbish so you don't have to worry about any of that so that's really handy and what i'm going to do also is i'm going to target the icons so go here and target the icons and say give them a padding of 10 pixels and a color of gray so let's add that in and we should see boom gives it a nice little finishing touch nice yeah so with that said now let's go ahead and let's hook up that form a little bit so the form whenever you type a value inside of there so firstly every form has to have some kind of submit so what we've done even though we don't see the button it's going to represent the submit right so you have to give that a submit um and then what we're going to do is we're going to do on click which means that when you hit the enter key it triggers off some kind of function this function we're going to call it send message because that's what we attend like intend to do when we hit the enter key so send message is going to go up here so i'm going to go ahead and make an empty function so called send message and that's just going to do the following and we can pass en as an event awesome and then what i'm going to do is for the input field so we want to keep track of what the user says nas is typing a message in inside that input field we need to keep track of it inside of the state inside of react so that we know so that we for example when he hits the aniki so we can push that into a database we can do whatever we want with that value but in order to do that we need to store it in state okay so in order to keep it keep it in state what i'm going to do is i'm going to create a piece of state called input so like this i'm going to say const input set input and i'm going to give it a default value of empty then what i'm going to do is i'm going to say the value of our input field is that input variable that we just set up and what i need to do is i need to actually keep track of so every time nas types into that box we trigger an unchange right unchange is something where basically it gets fired off every time so we get some kind of event gets fired off so e right what we can do is we can say set the input so update the input variable with e.target.value which is basically the latest um entry that nars is basically typed in so now when we do this every time he types in one it should be updating on on the screen so as he types in it should update and type a message so let's go ahead and tap something this is a message nice so you can see it's updating on there but it's also stored in memory now so now input is also a variable that we can actually reference so when you say it's updating it's actually updating you're saying in the input you're talking about correct yeah okay got it got it so it's updating and it's mapped to our input variable which is inside of the state right got it got it so it's actually saving right now is what what's the big difference exactly now it's actually saving to that variable which means that when we come to use it we can do something cool with it right so what we're going to do now is we need to do something like this we need to say e dot prevent default e dot prevent default oh you don't prevent default like this and then i'm going to do console.log and this is just this sort of test right now i'll say console.log you typed i'm going to say input like this right so now now if you open up the inspector type in and hit the enter key the e dot prevent default will stop it from refreshing and it should actually say you typed and then it will show you where you connect inspect okay and then i do go to console yep yeah that was awesome that is awesome yeah so that will get working in a really nice way uh camiron ibrahim says are you storing the messages on firebase later yes we are we will be connecting everything to the database in a sec but yeah now if this was sort of that this is the sort of foundation to get everything sort of to the point we need it to and then we can go ahead and introduce the back end so that's awesome so we actually got that working nicely now um okay so i think at this point what we can do is we can actually go ahead and introduce the sort of introduce firebase so earlier on uh nars went ahead and got the firebase config from firebase right thank you nikhil verma for uh for that lovely donation he says keep it up we definitely will dude we definitely thank you thank you yeah so uh here we got the firebase config so before we carry on we need to open up the terminal so let's go ahead and pull up the terminal okay some people are saying some people are saying don't show the config guys it doesn't matter with firebase you're actually protected when you show this config so this is public information you don't actually need to worry about hiding this um it's completely fine to show that and then what we're going to do is we're going to open up the let's open up your other terminal now so right now you're on the main let's do this one right here okay three got it yeah awesome oh wait somebody actually said a good point there's clean input after the message so yes before we forget very nice yeah true that let's go ahead and do set input as empty and what this will do is whenever nars hits enter it will go ahead and clear the input which is what we expected to do really nice kataro who picked it up yo hey nice nice nice nice nice i love it awesome really nice so that's clean so that's really nice and now what we can do is we can go ahead and do app so we've got this let's go and do okay so firebase right so we've got the command line open so let's go ahead and do uh command j and i'm gonna do mpmi firebase so we're gonna install all of the firebase dependencies into our project um and with that what we're gonna then do is actually go ahead and do the following so i'm gonna say import firebase from firebase at the top and then what we wanna do is we need to initialize the app with that firebase config so this is how we do it we say uh firebase dot initialize app and we pass it this config object right so we pass it the config object and we basically store it in this variable called firebase app now what we do from that point is we create a new variable called db which is basically going to access the firestore instance of our uh of our firebase in like sort of configured instance or however you want to put it basically it gets our database and then we're going to go ahead and also get a authentication handler so that's how we do that we basically say firebase.org and this will be responsible for when we come to do our authentication part and we also need this this is for google's authentication we say cons provider equals new firebase.auth.google auth provider and this is what we're going to use when we actually go ahead and do that google authentication and now to export the stuff we need i'm going to go ahead and explicitly export the authentication and provider and then i want to do a default export for the db because we're going to use the db quite a lot more than we use the author provider and if you guys aren't sure what is um what the difference is there then yeah you guys can check out exporting things explicitly and implicitly uh in in your own time which is nice um so now what we're going to do is save this we have firebase brought in so we can actually go ahead and start to use this stuff so let's go ahead and open up firebase notes all right so firebase boom right no right here this one yeah let's open up firebase and let's go to firstly let's go to authent uh let's go to database okay so database we are at 2.5 k likes dude guys insane stuff and also i know if you know but we are constantly at around 770 to 800 people watching like nonstop we've been going at it for about two hours now and nonstop 800 people guys inside it's just mindblowing like insane insane um so now what we're going to do is in the fire store let's go up to the top and let's click on create a database so at the top of this i'm going to i'm going to hide my uh little screen here so that people can see it hold on uh so quick database yep all right and what we do now is we click start test mode turn test mode next awesome all right all right and then this is fine as well so done yeah so done thank you zia rachman for a nice little donation awesome thank you so much appreciate it uh nice and then provisioning fire so so this will actually go ahead and create the back end for us now what's amazing about firestore guys is it's essentially the best of sequel plus no sequel it kind of took like a bit of a bit of like interest from both but it kind of is more based around nosql and basically you just get like this super powerful realtime database right so it's a realtime database very very powerful stuff um so now what we're going to do is click on the start collection okay what should we name it right so let's go ahead and call this one rooms so this is going to be all the different rooms that everyone can be inside of right okay so what is the field yeah so inside of here we're just going to have name so the name of the room and let's go ahead and add the first name let's just call this the the dance room dancer right and what you want to click is auto id at the top uh this way okay yep and then click on save and that's it okay so i don't need i do not need another one so click save yeah beautiful so and now what we've done is guys i imagine there's a simple way to look at this is rooms is just an array it's like a list right it's a list of all the rooms that we're going to have and then you can see the first room that we have it has a unique id and then and basically a property of it is the name property so we have dance room right yeah so what we're going to do now is we're going to use this to basically go ahead and let's create let's add a second room now just to sort so that way when we actually click add document right and that will add a second room and then we'll do room right and we'll say this one let's say i'll do this this one's name the field is name oh my bad my bad yep and then that one will be should we call like developer room yeah let's call it developer room yeah developer the room yeah like that awesome nice and let's click save actually we'll call it devroom yeah yeah there we go so now we have two values inside the database right so we just set up firebase so we've done all the config for that and what we're going to do now is go ahead and go over to the um let's go let's actually connect the sidebar right so sidebar we previously had i don't know if you're following me knows uh i think it's i will right now yeah i am following you actually oh yeah yep yes oh yeah um right are you let's see there you go you're on firebase.js right oh right sorry i was in the i was in a different editor yeah sidebar that yes there we go sunny now you've outside you've got the sidebar over here sorry now so here i'm i i naturally had everything sort of hard coded before i don't want to now put it in from the hard coded stuff i want to basically map through all of the sidebar options with all the different rooms right i want to say like which room we're in and stuff like that um so what we're going to do is we're going to go up to the top and we're going to say the following we're going to say i'm going to create a piece of state called rooms so i'm going to go ahead and do the following and say const rooms set rooms equals use state and this is an empty array and then what i'm going to say is i'm going to use a use effect so i want to basically when the sidebar component loads i want to shoot off a piece of code right and i only want to do this once because i don't want to keep attaching like realtime listeners because it's going to make my browser super slow and you don't want to do that right so the way we do that is we add these empty dependencies here by adding the empty brackets here it says run this once when the sidebar component loads and once only right so here what we need to do is we need to say db so i'm going to import db from uh from firebase so this one right here so import db from firebase and this is our local firebase not the module firebase so this is local firebase so db.collection and here what we're doing is we're saying go to the rooms collection so the one that nar's just created yes that room's question and then i'm going to say on snapshot so on snapshow is essentially saying like imagine you you're looking at so literally as nasa's screen is right now imagine like you had a camera and you literally just took a picture of that database right so of that list so the list of rooms inside of it that's what we call a snapshot right but it's also the snapshot is also listening for changes right so it's not just like hey it says a picture but this is uh this is also saying on any uh changes inside the snapshot also run this code yeah so imagine like if if we add something to it we change anything in here we delete anything it takes another snapshot like basically you grab that camera take another snapshot and it gives us the new snapshot so it's error it's real time so every time it gets updated we get the latest snapshot right and what we're going to do is we're going to say set the rooms so set the rooms in this case and what we need to do at this point we need to go through that snapshots we think snapshot.docs so docs is referring to the list of the elements that we had in the database so we had two and then i'm going to say map through each one and for every doc i want to do the following so this is a bit where you guys are going to have to stick with me so i'm going to say return and observer like directly return an object right and this object i'm going to get it's going to have an id and that's going to be the doc id so this is the doc id is basically referring to the id inside of firebase so if you go to firebase notes okay right here boom not download it okay yeah so those unique ids that you see in the middle right that's what we're giving the id here and then i'm going to say data is going to be doc.data like this right now what this is doing is it's basically creating our own little uh object with an id and data right uh and also whoa we just got a bunch of new viewers jumped in that's that's amazing nice thank you uh thank you yeah that's awesome did see we actually got people coming back in um nice guys guys keep playing that keep hitting that like button you know youtube is like oh you know you know they're getting it they're getting it so they're gonna keep recommending us so guys just like smash it exactly guys if you haven't already and you're enjoying this content literally go ahead and tag me and nars on instagram and share a story on instagram and that will help more people see it i'll get all of the people who follow you to watch it as well so go ahead to the right side you want to go to the right on the other side no you're not now you're too far off i was just pointing at my yeti oh yeah remember that one this over there all right let's continue on nice um awesome so and now what we're going to do is we have uh it says use state is not defined so i need to go ahead and import that so you use state is not fine and what this will do now guys is it will actually create a real time listener for uh snapshot and it will basically update the rooms with those with those properties right so what what does that mean what can we do with that information so now what we can do is we can say at the bottom here rather than hard coding this stuff out here i am basically going to do this i'm going to go ahead and say rooms dot map and we'll say for every single room there's an arrow function implicitly returned so we're telling it to give us like a return we're going to say return a sidebar chat component and here's what i'm going to do i'm going to go ahead and say whoa we just hit 2.6 likes if we can hit 3k likes oh man that'd be insane so i'm going to give it a key so in react the key is used for performance i'm going to use a key as the room id so i'm going to go ahead and do that i'm also going to give an actual id to the component and that's going to be the room id and i'm going to give it a name so the name of the component and this is going to be room dot data dot name right so that's when we refer to room.data.name we're referring to the property that nars added inside of those database fields so the ones that were like a dance room and those things so now we passed in props right to sidebar chat how do i pull this information in in the component so if we go into sidebar chat remember we had a prop here called add new chat so in order to pull it through what i need to do is add the two props i've added here so id and name right so we've got id and name over here and what we can do is instead now right we can basically go ahead and rather than saying room name i can go ahead and just say name yeah and also for the id we will use the id in a second i'll show you where we use the id in a second but now if i was to go ahead and click save what we should see is rather than seeing room name on the left we should see the actual names being pulled from the db so it will go ahead oh let's go hold on hold on guys guys i got it i got it i got a dj air horn on here hey you can't hear sonny but they can't amazing oh no nice you're actually uh you're you're updating the titles oh yeah awesome that's dope dude you're doing cajun style because it kind of gave me a challenge i'm like all right i'll chat i'll challenge you yeah we even got the video in the middle of that's the first yep yep i didn't know i keep moving it around i don't know where to put it because it's just it's kind of cool in the middle yeah i kind of like it too yeah kinda like it too yeah nice so now what we're gonna do is we have so we have the okay yeah so this is this is a really cool part guys so what i'm gonna do now is where we had add new chat right so when we did add new chat what i'm gonna do is go ahead and we had the add new chat functionality here so we said when we click on the add new chat button so on click right um what i want to basically say remember we said we that prompt came up which said uh please enter a name for the chat room or so please enter the name of the chat uh i'll just go ahead and say chat room there we go and then it says if you enter the name in here i'm going to say db dot collection so remember nas was actually adding those things in manually right but what i'm going to do here is we're going to make it programmatically add it in so i've imported the dbn as before we're going to say db.collection rooms yeah and i'm going to say add right so whenever you sort of uh enter a prompt in or something like that i'm going to do that and i'm going to say add something with the name key and basically we're going to use the room name so this is what we actually entered into that prompt right enter the room name like that now if we save it you'd be amazed that's all we needed to go ahead and do that right so now if you go to add new chat noise go ahead and tap on add new chat for me and let's go ahead and write a name in here for a room a chat room guys what's what's a good name let's call it let's call it epic room let's do it epic room and now yo look at that that's insane right like it just pops in real time like because this map says listening to that so a new snapshot got delivered pulled it in and it also we literally in three lines of code pushed some information into the database so insane stuff massive power there like so simple yeah so so simple and guys like if you if that was a first for you guys i know a lot of you guys have been i've been watching the streams and you see that stuff but if that's the first for you guys let us know if you found that cool because this is really really um like it's it i i mean every time i use it i always think it's awesome so i think like i'd love to see what you guys think yeah yeah nice okay so we've got that done um and now we're going to say so now we want to basically have it so this is where react rooter comes in right so react rear we basically want to implement react rules so that when we click on one of those sidebar options like dance room dev room epic room i want it so that when you click it it's going to then basically on the right hand side pull the messages for that room right he's going to pull the messages just for that room um so how do we do that how do we get that working so what we need to first do is actually go ahead and install react router so the way we do that is that we need to go ahead in into the command line so let's go into the command line uh let's do command j oh nice we got sergeant in the house he's awesome dude i think he actually landed a job uh from watching our videos yeah he's inside the prophet javascript yo nice well i'm trying to find it i'm trying to find him here oh yeah right there right there nice i love it i love seeing people who come back onto the uh onto the channel so they're always amazing to see that that's that's nice right so now what we're going to do is we're going to add a react router right so react brewer for many of you guys who don't know is how you enable page reading inside of a react app so what i mean by that is when you click a link or the button or anything like that um it's actually going to go ahead and load um that page so i have a i have a question sonny uh just a really quick one so sajara asked right it's just a really cool one how scalable is this from a productionready standpoint of every mobile device as everyone will get device gets connected directly with db is this a problem already solved so very very good question um no so there's a few things to consider here so when we use the use effect to make it more optimal i can quickly go ahead and show you something so let me go ahead and show you a very so firstly to answer your question it's it's optimal it will be optimal it can scale you're using um you're using google servers guys so like everything that they've implemented in terms of how you pull the information from the db it's super optimal and you and guys think of it this way if google if just think of it this way if you can can google handle the amount of people that are running through your app the answer is yes like google can have your traffic yeah even if you had a million users tomorrow like of 10 million 100 million they're going to handle your your your load so like let's get this whatsapp clone to a million users so that we get this just you know let's do it 100 million all right a quick little uh uh sort of optimization step for anyone who's interested what you can do is this return something called unsubscribe all right and what you can do is you can actually in a user effect you can do a clean up function so this is a clean up and basically this says whenever the component sort of unmounts or or cleans up you can actually call the unsubscribe and what this will do is it will it will mean that you always detach this real realtime listener uh after it's done using it so like whenever sort of you're finished using it this is a this is a good practice to do so i saw somebody said they like the little sort of tips and tricks that i dropped sometimes with like for example the react keys in an array so this is another optimization step that you can use uh whenever you do on snapchat it returns an unsubscribe and you can go ahead and do that and that works really good yeah nice so with that said let's continue on and let's go to the uh react router dom so what we need to do is open up the oven we've got npmi and we need to do react router dom so this goes ahead and pulls in the thing so while that's actually installing those let's go over to the deployed app right here beautiful yeah and let's click on one of these chats clear the chat yeah so any one of these chats can you see that when you click on these chats it's changing the chat yep right here and it was actually happening here if you make the uh the window bigger let's go ahead and make that full screen yeah there we go can you see the url changes at the top right here see there guys you see that boom right there oh you guessed it that url is actually changing when lars clicks on the sidebar option right just pay attention to that really quickly here see if i click on here or then boom boom boom nice exactly and then what the components doing is it's then saying okay i now have the id of the room i'm in so i know which messages to fetch so we're going to go and show you guys how to do that so sergeant jacob says huh yeah got a client while you guys were streaming appreciate all the knowledge you guys have been dropping here and in pwj that's amazing dude wow no way insane stuff uh yeah amazing congrats congratulations yeah amazing stuff dude and i remember he actually shouted us out on instagram once and that's how we started talking to him so that's that's really nice to see that um right so now what we're gonna do is we are going to add the yeah so we added reactor dom and basically to get this working in the way that we want now what we're going to do is we're going to add the following we're going to say um we need to add something called a router so i'm going to add a router at this point in the app so router is basically where we tell the app to start looking at the url right so we're saying surround all of this stuff in the the tech that allows us to do that right so that's basically what we're saying here and then what we do is we actually surround uh everything inside of a switch right and the thing is what we can do here is we can say surround everything inside of a switch so i can do this switch and the switch if you've programmed and are familiar with switches you can do like cases right and each case in this case is what url uh you're actually accessing so at this point what we could do is we could say the following we could say when you reach this route so when you hit this route so this is the home screen render out this so i can say at this point i can say like uh home screen like this right and when oops oh yeah i need to do the imports and when we reach this for example just say forward slash test we are going to render the app so let's just do this let's say forward slash app will enter the app and if we're at the forward slash nothing it will render uh h1 saying home screen right so let's go ahead and do that there will be two different pages in that because you're saying correct yeah so this will render the home screen this will render the sidebar and let's go ahead and import everything that we need so i'm going to go ahead and import this at the top there we go save it and we should be able to see now let's see so now it should say home screen ah i see i see okay and now if you do forward slash app now so if i do not see and the guys be get again because it's the fact that we have forward slash app right here and then the root one is just simply the home screen so if i now go ahead simply do uh let's see uh slash app right there go and boom voila nice dancer devroom exactly so that's awesome what we're going to do now is we're actually going to use this to say regardless of if it's in the home screen or if it's inside of the next bit which i'm going to say so let's do this and then say here so we always want the sidebar to show so what we can actually do is we can push this outside of the roots and this means it will always render the sidebar and then underneath it we're just saying render the chat regardless if you're inside of this or this route so what i'm going to do here the reason why i need this is going to say rooms and i'm going to say i'm going to this is called a wild card and i'm saying room id right so this is saying that regardless of if you're in forward slash room forward slash abc regardless if you're in forward slash abc2 whatever it is that is going to allow you to render this and what the reason why i need to do it like this is because i need to pull the parameter right and we always specify a default route which is why i've just said show the chat if not so so don't show the chat basically when there's no room id's what you're saying yeah got it got it got it yeah got it so what i could do at this point i could actually sort of uh get rid of this so let's go to uh forward slash just forward slash all right forward slash hold on c so if i do just forward slash yeah so you see like it won't actually show the chat right but now if we do forward slash rooms forward slash abc for example okay let's do rooms for slash abc uh is that zero yeah so now you see once we're inside of a room it will go ahead and load the chat and it will load the chat alongside it so wait wait it's not it's not doing it abc did that do it right rooms dash abc maybe it's like one two three four five yeah just try that one yep yeah okay so in this case what we'll do is we will include it in both because i think it actually might it might fall back to the default i mean it shouldn't have shouldn't have fallen out of that but it might be a case of loading or something like that but in this case what we'll do is we'll render it so now if you click on i don't know that's strange that that should be working right now um so we're rendering chat maybe there's a caching issue hold on is it default so it says chat uh maybe do a hard refresh now let's do uh shift command four right yep for some reason uh yeah strange i can't see as well okay so in that case we will debug this but we can see the root path chat sidebar right report repo maybe it's because the the chat ex needs ex needs to accept something um let's go ahead and do router switch [ __ ] hey there we go nice nice there we go awesome so it might have just been a caching issue nice yeah it looks like with that said now what we're gonna do is we are going to go inside of our chat app and if i want to get whatever nars had at the end of the url so whether it was forward slash abc forward slash whatever it was what we can do is we can grab that using a really nice hook right so before that it was kind of a headache to get this but you can actually use a really nice hook and the one that we're going to use is called use params so we're going to import this uh and we import that with right here saying uh columns import use params from react rear dom and here we say const room id and room id has to match whatever you've given here so in this case it was room id here so it has to be room id and this will actually give us that that sort of after what comes after the forward slash so that's cool but now how do i make it so that those links are clickable right so the the sort of uh sidebar chat so the way we do that is we go to sidebar chat and remember guys these ones these links right here yeah okay got it okay so remember we passed in when we rendered sidebar chat we passed in an id which was the id of the room right so let's go into sidebar chat and let's go ahead and actually wrap this in something which we like to call a link tag right so here what we can do is we can say a link to and then here i can use some jsx to basically go ahead and do some string interpolation and say forward slash rooms forward slash id so go to the this room when you click this link right and then i can basically go ahead and pop the entire div into that link and now what will happen is it says link is not defined because you need to import the link so i'm going to go ahead and import this so import link from reactory dom save it and now once that loads up we should be able to see that everything is just like click yeah so everything's the name so we'll sort out the styling in a sec but if we check the link now so you should see that that link actually changes when you click it do you see that guys i'm not sure let me see if they see this so if i if you guys pay attention to kind of the because wait if you guys pay attention to down here just click kind of pay attention pay attention down here before before i before it disappears like if i hover over this you see that link kind of changes right there boom i see that boom so you're talking about the bottom left right yeah the bottom left side you see that guys yeah just pay attention to that so that means that's linked to the specific room which is the correct room that we need to be in yeah exactly so if you click it now it will actually change the url so if you click one of those click it now and if i go ahead and just hide this thing right here like look at this url so click it click it and you can see wait wait where's the url boom let's make the screen a little bigger and we'll should be able to see that yeah right there just like that so i click click click yeah yeah look at that boom that's awesome bump bomb and also guys notice there's no refresh right so right through it does it very carefully that you don't get a refresh so it's really really nice when we do that so now that we have that id right let's go ahead and upgrade our chat component so let's upgrade our chat mode so that it changes and it knows what what information to pull right so what we're going to do is firstly we're going to go ahead and pull the room name so in order what we're going to do is we're actually going to go ahead inside of our chat component we're going to go ahead and create a room name um a piece of state which is going to keep track of the room name and then i'm going to go ahead and introduce a user effect so you can have more than one user effect so i'm going to create another one called use effect and this one is essentially going to go ahead and fire off and for now it's going to be dependent on the room id so the room id is a dependency that because we are going to use any time user variable inside of this block you have to include it in here so basically what's going on is like every time the room id changes we're going to run some functions which in this case we're simply going to get new messages for that room id exactly exactly that yeah or like yeah is that exactly that so yeah perfect and now what we say is we say if there is a room id so we want to protect ourselves we're going to say if there's a room id then what we want to do is um oh nice somebody just joined ai just joined profit with javascript if you're watching this dude that's insane and i would love to see you comment uh down below that's awesome really nice nice congrats or welcome should i say welcome to yeah welcome to our family exactly yeah so here oh look he's there oh nice yes he says i've just joined prophet javascript love your teaching style see you in class guys that's what oh man that is insane it's insane let's bring down this goal that's so cool dude so happy to have you here so happy hold on we deserve an airhead for this one we just grew the team on live on session guys guys too good too good insane um so now what we're gonna do is we're gonna have if there's a room id we're gonna say db.collection and then i'm going to go ahead and and go inside the rooms right and this is the cover part i'm going to say go into the specific document which is like the specific room and use the room id that is inside the url to find the room and then i'm going to say on snapshot so make a realtime listener for that on snapshot snapshot so he's going to get the snapshot and i'm going to say whenever you get that snapshot go ahead and set the room name set the room name um go ahead and go ahead and set the room name to the snapshot dot data dot name and this will basically go inside and it will then um pull the the data and they'll get their room name right so that will work and then what we can do is we actually need to import the db so i'm going to go ahead and import the db save it and now inside of room name we should have the most uptodate room name so rather than having a hardcoded room name here let's prove that this works let's change this to our variable room name save this and now we should see we should see if you click on oh look at that yo you see that right there guys check this out look epic room right away we have that and so and now if we change that if i click on dancer for example boom boom boom insane stuff insane stuff sunny guys guys alrighty nice so that's really really awesome um and what we're going to do is just to make it so it's super clear for you guys that it changes rather than doing the use effect from the set seed here i'm actually going to make sure that this one changes every time just because i just realized it's going to be a bit confusing because it looks like it doesn't change every time so would that say oh actually what i can do is i can actually make the seed change every time room id changes so there you go a little trick for you guys so now if you go ahead and click a room now try it dance room hey there we go oh so the outside changes as well nice oh look at that that's hilarious i love it nice so yeah give us some fire for those for those for those awesome avatars i love it exactly yeah i mean i was trying to look because you found a really nice one once and they used the same functionality but i couldn't find that one so i found this like pixelated looking one i kind of like it it just makes it so playful it kind of makes it like lighthearted you know yeah yeah yeah yeah so that's cool so then so now we have that working so what we're going to do now is we're going to go ahead and before we can do the messages we need to basically go ahead and do a login right so the login stuff so the login stuff stick with me guys this is going to get interesting now so i think this is where the 2.7 goes to 3k thank you so much yeah because this isn't crazy stuff right this is where we're going to introduce google authentication into this app all right so google authentication interface and we're also going to be using the react context api so if you guys are interested in learning redux this is your time right now so get excited we're going to teach you guys how to do that right now uh or the redux pattern with read react context api that's it so let's do it so inside of um app.js what we're going to essentially do now is we want to conditionally render this if there is a user logged in right so what do i mean by that so let's go ahead and say let's create like a temporary piece of states let's go ahead and say const user set user and let's go ahead and do this and say use state like this and i'm going to go ahead and say no at the moment like this and what i'm going to do is i'm going to say so at the moment imagine we don't have a user right so i'm going to say if there is no user so let's go and let's imagine that there's no user right now right now um what i'm going to say at this point is so before we have inside of our app we're going to say if there is a if there is no user then i should show some kind of login screen so like some kind of h1 say login yeah otherwise we should show the app right so does that make sense guys so we're saying if there's a user if there's no user show a login screen otherwise show the app so now i'll catch you if we see this uh so you say i need to go ahead and import like this okay oh i see i see i see okay yeah so now we get a login oh and also it's it's amazing how that actually is pretty good well i might just stick with that that's kind of clean so we have a login right but now look at the code so imagine like i go to this user and let's just pretend that like i had a user and he's just like this this represents the user sunny right right so now if i go ahead and imagine sunny signed in look what happens now so on a on a very high level this is what's going to happen right so now sunny's inside and it lets us go in right so at this point what we're going to do now is rather than doing it like this because this is not this is not realistic we're not going to have it like this we're going to basically go ahead and implement a login component so here what i'm going to do is uh i'm going to get rid of this as let's just keep that for a sec let's keep that for a sec i'm going to create a login.js component login.js component and do rfce boom let's go ahead and set this component up let's say import login dot css like this let's do class name equals login like this and then let's just do h1 let's just say this is login boom there we go and then what we're going to do is we're going to create a login.css so login.css over here nice we have it and going back here now once we have that done what we're going to do is we're going to actually go ahead and style this so we have a login um outer container so the way i've done this is previously this is based on the one that we used for slack so i'm going to go ahead and it has an inner container so a login container this is for style purposes and basically we have the following so i'm going to go ahead and just chuck this in right here so we have an image so um this image right here is just a whatsapp logo so literally i pulled it off of google we have a div which has login text and it's just a sign in to whatsapp and then we have a button and this is no normal button because the capital b this is a material ui button so i'm going to go ahead and import that from material ui and it should be underneath that i don't know why it does uh it's not nice uh yeah so we're going to import that from material ui and it's a type which has a submit so i mean it's just so we don't actually need that either and on click fires off a sign in function so here i'm going to say const sign in like this right so it fires off that function and there we go so now if i save this go back to my app and instead of rendering this i'm going to go ahead and render the login component oops when the the login component is really curious how it's actually going to work out like with the using firebase and login i'm very curious to see that yeah it'll be honestly you'll be amazed dude how like how powerful it is like um so there we have the login right there so i'm going to go ahead and first let's make this look a little nice so let's go to our login.css and i have a few little neat tricks here to get this looking as we want so for the login container i'm going to go ahead and do the following so i'm going to go ahead and say login like this i'm going to say a background color of background color of like this white color height and width of 100 view width and uh display grid and place items in the center so let's go ahead and do that first um and this will go ahead and it should centralize everything so we already have everything in center nice and i'm going to say for the inner container so here what i did is actually containerized i had in a container here as well uh i went i went and styled that and i basically added the following so this is basically gives it a floating card look so we give it a padding of 100 pixels text align center background color white border radius 10 pixels and this box shadow right here is just adding like a nice 3d effect right so if we go ahead and add those you see it adds like a little floating box yeah now for the image inside what i'm going to do i'm going to do the flow i'm going to say target the image inside of the login container and go ahead and do object fit contain which keeps the aspect ratio give it a height of 100 pixels and a margin bottom so a margin a bottom of the image of 40 pixels so it's not touching sign into whatsapp too much let's go ahead and save that nice little neat and then i'm going to go ahead and target that button so i'm going to go ahead and do the following say margin top of 50 pixels you see how by default sign in when you use a material ui button the text goes up a case so by doing a text transform so it says sign in with google yeah and you see by default it makes it uppercase yeah so you don't want it uppercase when like it's by the point in the designs like so you do text transform inherit which basically says go back to what your parent container did as opposed to the material ui button and then background color of green so like it's very nice green and we need to do important to override material ui and then we do the color white and then when we add that boom oh wow that looks good yeah so it's so clean like it's so clean and it's just such a simple thing like and once you get that in it's just i mean it's really satisfying once you get that up and running right now what we're gonna do is this is where the magic happens right so you would think oh my god you're going to have to do some crazy google stuff right now like how the hell do we get this all the way so that's what i'm thinking right now yeah so if you would you believe me if i said in less than 10 lines of code yeah we're going to get this all working and we're also going to have error handling all right frankly frank so so yeah thanks so much for the donation appreciate it my friend hey right here nice says another awesome react build what's up what's a better watch out see you on the zoom call today sunny nice awesome dude see you then so and now we have the sign in functionality so what we're going to do is we're going to say firstly um i'm going to do so first i'm going to do auth so auth is something that we um set up from our firebase module so i'm going to do it for my local firebase pulling that from my local fibers i'm saying auth dot and nas check this out right now sign in with popup no yeah forward and then open and then what we do is we say provider and provider we set up inside of our firebase file so the provider if we jump into our firebase file we actually made provider a google authentication provider right so that's it right so we do that that's it we say off dot sign in with popup and then you say then what what then not the result and here what i'm gonna do is just to sort of demo i'm going to say console.log the result console.log result and for error handling i'm going to say you know what if we get an error catch it uh i won't say what is going on here what am i done oh you need to yeah there you go all right then we say catch say error and if there is an error for whatever reason i'm going to say alert error dot message boom save it now why don't you go ahead and click on that sign in button though no yep you're kidding and it's going to crash i have a feeling it's going to crash okay oh so now you see it's disabled uhhuh yes this is why we're handling this that was super planned by the way i knew it was going to fail i wanted to show that you built up so you built up so much you know anticipation it's like yeah like you would think that we're almost there right but now if you go to your firebase okay so let's go to firebase right here okay go to your authentication okay go to google so go to your sign in method setup send a method yep and that's right google tab disable oh do that and click save and now let's go back to the react app and give it a try no way yep no way get out of here sonny no wait and and while we have it um while we have that also open up your console that comes back hold on hold on hold on console guys this is i mean okay i will explain why to me this is insane just after after we watch this you'll see why so sign in with google yep ready no no no this is not no way no way hold on no way okay what yep oh man you have all of your user details in there um okay i'm out all right byebye all right okay okay i'm out of state all right it's insane how crazy and easy that is the reason why guys i i'm like i'm like acting like this it's for one anticipation a little bit but for two but for two because i've done signing with with google right manually we're not using firebase right i've done it where you actually yourself had to you know add your own button you had to you know uh basically make sure that all works with google and you were the one creating the code for the google sign in i'm not kidding this would take us sometimes days yep this took us how long man literally and i said it was ten lines ago but it's actually like one two three about four all right all right all right all right too far you're going too far two fifty five actually just one line of code no but that's awesome that is that is so crazy like to me oh man that's insane all right but let's look at what what's actually what what type of stuff are we actually getting what type of information are we getting from google so let's go ahead and we the one we care about at this point is and no no no this is crazy because remember you know like for some things you need a um api key right see inside a credential the id token is your api key wait what well i'll say it again so so once you sign in it gives you an api key that you can use to use google services oh really yep oh man that's insane okay so wait what why would i use that api key for so i think you can use it for like google maps and stuff like that oh okay interesting okay that's cool i think and then it looks you guys have a display name so this actually gives you display name right there right there your the email all right there guys don't email me please um oh man why do i use that damage it gives you your photo url so my photo url where right there so yeah it has your actual picture this is some dangerous stuff okay all right that's uh cool all right nice so with that said now what we're gonna do is so when we get back rather than console logging that what we're going to do now is we want to dispatch that information into some kind of data layer so i'm not going to go too far into how like the redux sort of pattern works but i'm going to show you guys an implementation of it very quickly so we can get the most value from this video right because we do cover this very extensively in some videos and we actually just dropped a uh a little snippet video which is about six minutes i think which explains all about redux and all about those things and we snipped it from a previous video so you guys can go ahead and watch that after which massively useful so now what the way it works is we need something called a state provider right so this is basically going to wrap the app okay okay so and where where does this happen it happens at the index.js so this is a file that nobody likes to touch because everyone's scared of this file we go here and basically it's going to essentially wrap the app okay so imagine at this point this wraps our app so the state provider is basically like a data layer so it surrounds the app and then basically what we can do is we can push information into the data layer and we can pull it from any component so our goal here so just to make it very clear our goal here is that when we sign in we push the user into the data layer and then we can pull that when we pull before the user from the data layer whenever we need it right now what we're going to do is we have two things we have the initial state and reducer so i explain what they are in a sec but to get the state provider working to get the state provider working i mean there's a state provider dot js right now what i want you guys to pay close attention to here is merman goes what was that noise so now we can do is we can copy this i'm going to run through the snippet of code right here so now this enable uh word wrap okay so view um all right cool sergeant actually just dropped the uh the link to that video i was talking about in the description thank you for doing thank you so i'm gonna explain quickly what's going on here guys so this is just importing the things that we need right at the top and then the next line is basically preparing that data layer right it's creating something called a context which is where the data layer actually lives right where everything actually lives and [Laughter] the data layer is actually this here the state provider and this is called a higher order component okay so it's got a higher order component it takes three things to take to reduce the reducer an initial state and children oh my god oh man oh i think you guys smash the thumbs up button if you haven't already thank you appreciate it all right we're good okay okay we're good we're good we're good we have to reduce the initial state and then the children the children are is here so the app child is this one here and then we have the reducer and initial state which i'll explain in a sec now this stuff right here we explained in that video but basically we need to know is it allows us to go ahead and actually set up the data layer now this final line here allows us to pull information from the data layer right so we can go ahead and pull it from the data there right so now what we're going to do is we actually save that file we need to create a file called reducer reducer.js right now um go ahead and do reduces.js and here what i'm going to do is i'm going to copy the following in here we're going to explain this code now so the initial state is how the data layer looks before we've added to it before anything so when the app starts up we're going to start off with it with the user not being logged in which is what we want right okay then we're going to have we have certain actions and these certain actions are basically the actions that we can this is where we can push information into the data layer so for example when we sign in we're going to dispatch an action which says go ahead and push this user into the data layer where does this action be dispatched from where what are you talking about so so the action being dispatched we haven't covered yet okay gotcha yeah we haven't covered that but yeah but um when when an action gets dispatched into the data layer we basically we switch on and we listen to it here we say okay what action did did you just dispatch so here i'm saying if you dispatched a set user action then go ahead and whatever we return is basically how we intend to change the data layer right so here what i'm saying is keep the keep the state of the data layer so keep everything that was already in there but change the user to be whatever we dispatched and whatever is in in particular inside of the user portion of the object that we dispatch all right now if we don't uh it feels like for example some other thing like set um set car or something like that we just fall for we fall back to a default state which basically just says return and don't do anything with that okay by the way guys 2.8k likes in so good thank you all so much i love you all so close to 3k guys let's do it come on you guys can do it almost almost just 200 more come on come on exactly insane love that right so now we have this setup right so what we need to do now is when we initially set up the data so where we wrap the app we need to go ahead and import the initial state and import the reducer so that's what we do here right we do that we hit save i need to also import the state provider so import so it's kind of like redux basically is it not it's almost like really dude it's exactly like redux it's exactly right but the implementation and the setup for it is much simpler than redirects agreed i have agreed so now what we're going to do is somebody actually said can you show how how you can implement persistence with context i will actually do that in a different video not today but we will do that in a different one right oh nice cameron thank you so much he just dropped a donation five us dollars he says what is the get up link for this we will go ahead and post this afterwards and we'll link it in the description so that you guys can go ahead and have access to the code so don't worry about that yeah thank you for that dude right um nice so now what we're going to do is we have app and then we have the state provider awesome so let's go ahead and do the following so now what i'm going to do is remember when we signed in guys so inside of login.js what we can do is rather than just console.logging because this doesn't do much this doesn't do much for us we don't really get any power out of this what i'm going to instead do is i'm going to pull some stuff from the data there so what i'm going to pull here is this is the syntax for it so you see it's very similar to how we use hooks so the use state value is the hook that we created inside of the the setup when we done it here so this one right here right so what i'm doing is i'm getting this is the first part is the state so we're putting something in state so you could at this point destructure and say get me the user but in this case we're not using anything from the state and then the second thing it gives us something called a dispatch now the dispatch is like a gun it's like literally the way i like think it's like a gun and basically you put whatever payload is and you shoot it at the data layer to update the data there right so at this point we get the dispatch and here i want to say go ahead and do the following so dispatch an object right and that object is going to be the following it's going to have so remember that we're going to dispatch an action type which is um so what i did is to avoid sort of accidentally typing in the wrong string and things like that inside of reducer.js i actually created an object with the correct mapping so you see here set user is is assigned to set user and then what we're doing is we're saying the type is the set user action and then the user is whatever we got back from google dot user because that was all of like nars information when you when you signed in right right can we also what if we what if we use simply for example what if we but what we what if can you also replace that with like set stake for example uh well here like yeah no no what i'm saying is like instead of using reducer or using yeah using reducer we just simply set the set a set state on a user at the upper level so you can but what happens at that point is and this is why you end up using redux and react context applies because you end up with something called prop drilling where basically imagine we have the user at the top level and i need that user at a very very low level in the tree right and yeah very long i now need to pass the user through every single component to get to that point yeah that's right because this allows you to just just straight away pull it from the data got it yes it makes the code overall more clean so now inside of app.js what we can do so this will actually dispatch the user into the data layer now from here we're not going to pull it from the use data instead what we're going to do is we're going to say oops instead what we're going to say is i'm going to go ahead and pull the user from our data layer and i'm going to say so i need to import the user state like this yeah pull the user in and now because we're checking this condition based on the user inside the data layer as opposed to the the use states and now what will happen is if i save it and knows if you want to uh after it refreshes run through the login flow one more time cut all my emails up there and guys i think if this works i think if you haven't already you should definitely be smashing that thumbs up button because this is insane what we just did right there oh look at that it's insane and if you if you open up the um console log okay so what i did is i actually console logged at the reducer point right so we should see a set action got dispatched so let's go up say user oh yeah yep and that's it and what you can do is guys this is really handy because then now we can see what we have to play with right so an example here is uh we don't have position persistence in this uh when we're using this version of like the google login so when you do refresh it you have to log in again but it's not it's fine when you use it a different way i will go over that in a different tutorial so when you say when you're saying persistent i just want to clear that up when you're saying persistent what you're saying is that like it doesn't save um look it doesn't say the specific users when you sign in back again basically it's not going to remember all your past messages you're going to sign in again is that what you're saying so now if you was to refresh you'd have to sign in again yeah gotcha gotcha that makes sense okay yeah but because it's very quick using the google thing i'll show you how we get around it when we're debugging and stuff cool but at this point um we have the user so i just want to show you guys when you have the user now let's assume let's go to the sidebar for example let's go over to the avatar that we had in the sidebar and let's actually go ahead and change this so instead of like an empty image let's go ahead and use the user's image right so here what i can do is i can go ahead i can pop this magic piece of code in which goes ahead and pulls the user from the data layer yes you can see how simple it is now once you have the data up and running right now what you can do is you can actually go ahead and do uh with the avatar you can go ahead and say set the source to user dot photo url which is actually the user's image that comes back from google now notice how i have a question mark here because we're doing optional chaining so it's saying if user is undefined because the user may be undefined for a split second when there's sort of that async sort of uh behavior going on then we want to protect against that yeah you see it with the oh shoot never mind you guys saw how there was a photo url key right that was there yeah though hold on if we try again right if i go ahead and sign it again boom so a few people so somebody said login session should stay on refresh yeah it should do but when you're using the google authentication you actually need to keep the uh the access token and we don't we're not doing that in this tutorial so you can see right there say user right for the user and you can see the url is coming from where the photo url right here you see that and that's coming from google yep beautiful exactly okay sweet nice steve mccarty said uh to check out rico and he said this a few times now so i will definitely go ahead and check that out because i'm actually super interested in seeing this but back to the sort of topic at hand guys it's how nars is popped up so you see nars is actually over in the corner oh yeah right there look oh my wow damn look at that that's crazy that's i love it that's so cool yeah wow so now we actually have this so we know that the user is actually inside right so that's awesome and now what we can do with that is some clever stuff we can do some really clever stuff with that now we can do some we can pretty much finish the app we can finish off the rest of the app with that stuff set up now so let's go ahead and go over to the um sidebar chat and we already done it so that when you when we went to the sidebar chat um let's go ahead and go to chat.js we basically want to have it so let's go ahead and set up the messages at this point so we've got the chat.js now inside of chat what we need to do now is we need to basically do a few things we need to basically have it so that when we send a message it goes into so everything will say let's open up firebase for a second nice okay let's open up the uh database okay so remember we had a collection of rooms and inside of the room you had the actual room itself and inside of the room you can have another collection so in each of those rooms we're gonna have a collection of messages got it so should i do start collection no no it has to be in on the right so you see it's inside that room in the inside of that collection and then here it would be messages right so messages okay click next and auto id and what we what do we have a message text so inside of here we'll have a message itself so the actual will be message and this could be like hey guys or something hey guys okay cool another field you can have a name name so name this the person's name is what you're saying yeah so let's just say nas for example okay and then you'll have it timestamps if you click timestamp and then and then this is this would be like added right added yeah right so another time we're gonna call it timestamp yeah and then go to type and change it to timestamp mmhmm and let's make it today's day and that's all good yeah yeah i don't need that and that's it click save yeah so now we have essentially a message inside of the room right so that's the data structure that we're going with here okay okay so inside the dance room we have one message from nars which is inside the room right so how do i pull those messages in so that's the first question let's go ahead and let's go ahead and and get that up and running so what we're going to do is we're going to create a piece of state called messages which keeps track of all the messages so i'm going to go ahead and do that messages set messages use state empty array initial value and then inside the user effect where we done the where we grab the room name what i'm going to go ahead and do i'm going to say dbe.collection so go into the collection of rooms then i'm going to say go into the document which is the room id and remember this is passed in the url because we're using react then i'm going to say go inside the collection of messages okay yeah and then i'm going to say go inside a collection of messages and then go inside of and then also when we get the collection of messages order by timestamp so you can literally do all of this in the line which is insane so order it by ascending right and then from the oldest to newest yeah and then get the snapshot um and then get the latest snapshot so it's also real time so this is insane all of this is in one line of like code is it it's unbelievable yes yeah it's insane right like you set messages you say snapshot dot docs dot map and basically what i'm saying is map all of the document like all of those message um objects so all i want is the object so i'm gonna say get the data from each of those objects bubble it up into an array and pop it into my messages array so use it like here yeah so now what that does is if we save it it goes nicely formats it does it all that we want and now inside of messages instead of actually rendering out what we had down here so we had like this hey guys blah blah blah what we can now do is i can change this and i can say inside the chat body also loop over every single message okay yep map through them and say for every single message i want you to i want you to basically output this so i'll put the p tag right i'll put the p tag um and basically have it so that it's not there's it's not the the it's not sunny sanger it would say message dot name because that would be the person's name instead of hey guys it's gonna be message dot dot exactly and then for the time stamp there's a magic piece of code right so there is a magic piece of code here and just use this use this format because it is a very simple way of handling timestamps in firebase it will make your life a little easier guys so um check this out so uh i don't know if somebody just joined again actually yeah did they at the emmy uh iodipe i think if you if you joined and you're on the live stream let us know dude because we'd love to see that that is sick heck yeah guys so many of you are joining i know and so many of you are enjoying the course and the coaching calls um yeah just if you're interested guys remember guys link in description for the profit of javascript course but also most importantly is we have a completely free master class for you uh also down down the description no nothing no money from you at all check it out link in the description below all right let's continue exactly definitely go and check that out guys free training so definitely go and yeah have a look at that who wants so for the time i know right exactly yeah for the time stamp guys what we're going to do is we're going to say new date and i'm going to say message.timestamp we're giving a question mark because this could be undefined at some point and then we're going to say today because basically that's how you translate it to a date and then you say to a utc string and basically this is just gonna make it look kind of pretty in a date format so if i save this now let's go over to our app okay let's sign in sign in so robson ribeiro this live will be saved yes yes of course guys all right cool all right right there so now let's go into the dance room and we should see that message that nas added yo look at that all right i like it i like it nice guys guys this dessert hold on hey there we go and we still have literally over half a thousand people watching like holy crap dude this is insane oh my god we have 600 people we have 600 605 people watching right now 605 because you've got facebook as well right that's yeah yep um that's awesome dude um yeah guys let's push this to 3k likes i'll make my day like nars will get like super pumped up if you we're gonna if we get to 3k likes we're going to get sun to dance how about that [Laughter] so now now what we're going to do is we are going to remember today you know it's not always easy coding these apps guys um let's go ahead and carry on so we have the message coming through now so what we want to do now is actually have it so when we send the message when you type it in it basically does that manual step of when nars actually manually added it right so that's very simple to do what we need to do is go ahead and say the following so we're going to say when we send the message we're going to say db.collection go inside of the rooms collection yeah go inside the dock and we're going to use the room id to go ahead and find the correct uh room then we're going to say go inside that collection of messages and then we're going to add a message inside of there right and then we're going to add remember those things that nas added to the message the user yeah the time stamp so the message is going to come from the input so the input that we have in our local state the name of the user is going to come from the user right so which means that we actually need to go ahead and pull that in from our data layer so whoever's logged in we're going to go ahead and get them from the data layer and we're going to use their display name as the uh as their name so display name as the name nice and then we're going to say the time it's user.name sunny no no no it's a user.display no no so not that name so the the name key is here okay right but but the user.displayname is coming from google authentication oh gotcha okay makes sense so that's where that's coming from right and then the timestamp so you don't want to use a local timestamp you want to use the one that's on the server because then say for example nars where are you right now where about what are you where am i at i was just i was showing them what are you talking about no no i'm saying in in the world right now like where abouts are you in europe detroit detroit detroit right so nazis in detroit and i'm in london so our timestamps are going to be different right they're going to be very different and stuff so to avoid that problem what we can do is we can use the server timestamp and to do that what we're going to do is we'll import firebase from the actual module firebase so not a local one up here we import it from an actual firebase and then what we say is timestamp firebase dot um firebase.firestore dot and then what we say is field value right and then this you then what you do is you type in you say server timestamp and it's a function at the end of it so like that's how you do that and basically that will go ahead and get the service timestamp on the the server that where this is all hosted right now it says use state value is not defined let's go ahead and import that boom like that now with that said and the reason why we do this guys the reason why i would use the times is i think you you said that it's because the fact that our times are different while the server time is always going to be the same right so if you simply add the correct times and we can then on the front end on our side we can change times depending on where the user is so so for example if sign is in london it will show him london times if i am in detroit it will show me detroit times right so that's how we do that exactly that guys exactly that yep all right shall we try it out so now let's try out dude let's sign in sign in all right let's go i'm excited i'm excited okay okay all right okay all right let's see guys wait what is okay okay so hold on now this let me type something right yep yo what is there look at that hey nice now we want to make a tweak here right so we want it to only show up as green for the message that you wrote so this is actually pretty good a good use case so let's assume that the first one you added was from nars it was actually technically different than azari dominsky right yes so in terms of in in terms of like what what the computer knows right so that's going to be the sort of difference here so what we can do is we can use that as our sort of test case and what we can say is remember where we had that true condition right now what we can do is we can say when the message name is equal to the user's display name because as you as as is pushed in from programmatically this always going to be that correct user's display name so now what will happen is if we actually log in so i know it's a bit annoying but we won't have to keep doing it but if we log in now hold on let's see right there all right good yep right there oh okay okay okay you see that all right go ahead i was gonna ask you how how that happened so just kind of uh logic wise yeah so logic wise what we did is this condition right here made that happen so we're saying if the message name is equivalent to the user's display name so the one that is set in google right then it would classify as that's from you right so now this is okay on a demo purpose right but two people might have the same name right yeah so if you're gonna use this in production i would recommend using something like the id that you get back from google or something like that that's the professional put like production way but in this case we want to kind of get a middle ground between what's you know readable and not so many ids and stuff like that so in this case it's functionally working we're not going to have too many clashes of people with the same name at this point until we get to 100 million users um tomorrow at this point you can see now yeah now we've got the so we've got a few things to fix at this point we've got last seen at on the top of the chat header and we also have the styling on the left side so we have dance room dev room epic room and you see where it says last message right so let's fix those two areas and then at that point i think we are ready to get done and i think if we can hit 3k likes before that dude it's just going to be ultimate 2.9k right now oh oh so close insane insane dude honestly like one second dude what's up okay uh okay so now what we're gonna do is we are going to we have the um okay so now what we're going to do is we're going to fix those few issues so the number one is we have dance room at the top so last scene at so where we have that is inside of the s chat.js so chat.js and that is seen at where we have last seen at and that's on line 60 so here so now what we want to do is we essentially want to basically pull this from the message right so we're basically what we want to do here is we want to essentially have last scene app and we're going to use the we're going to use the um the last message that was on that collection to determine when the last activity was on that group chat right so here i say new date messages messages dot length minus one right so this is what this is where are we getting any of this from right like where does this come from and where this is gonna happen now is what i'm gonna do is when we're inside of here remember guys in the chat we actually go ahead and we pulled the messages so all i'm saying is the last scene is the timestamp from the last message that was sent right so the last message that was sent and to avoid the sort of logging in and stuff like that i'm going to show you a quick trick and don't forget to undo this but if you go here and just change it to a string of no instead so you could be like no sonny whatever here if i go ahead and save this now you won't have to log in again but just don't send the message otherwise the user is going to be undefined and it's going to cause a bit of headache in your you think so now it'll say last scene you see that it says last scene tuesday 18th of august and that lines up last message okay so that's nice right so it says last scene tuesday 18th of august and it has everything there so it's the last time a message was created basically yeah exactly that was the last time so if if we actually was to send a message it would actually show um don't don't do it now because uh i mean if you do it now i think it might error out because we don't have the user on there so so it might error out so yeah right yeah it looks like it is yeah yeah looks like it is so it won't let me hit enter oh okay all right perfect yeah okay so there we go yeah because remember i've actually just i've changed it because here i've done a sort of bypass so that we don't have to log in again but okay so that's that's cool so now on the left side we had one more issue to address which was on the sidebar we had um we're right now in sidebar options or sidebar chat we actually had last message so this was hardcoded right i want to pull this last message from the db so and how we're going to do that i'm going to use a use effect right so i'm going to use a use effect we get the id from when we actually go ahead and we pass that as a prop so what i'm going to say is use effect and here i'm going to go ahead and do this i'm going to say if you pass me in an id so just protecting when i say db.collection so go into the rooms go into the dock so go into the dock with the id so that's the room id and then go into the collection of messages so collection you might need to word wrap him uh not oh i am oh no you don't oh yeah nice collection messages and then order by so order by and this time we're going to do timestamp timestamp descending right and i'm going to say on snapshot because we want this to be a real time snapshot so when we realtime feed and here what i'm going to do is i'm going to say i need to create a piece of state to keep track of the message right so i'm going to say message set message and i'm going to say oh this should be plural actually sent messages so i'm going to grab all the messages and then here what i'm going to do is i'm going to do our traditional mapping through so i'm going to say set messages map through all the docs get me the docs back and then and then give me back what i need so there we go so this goes ahead against the messages at the sidebar chat so those sidebar option level right so we have it there and then what i'm going to do is where it says last message all i'm going to do here is go ahead and say message zero because you're open wait what is the message though or or the um so we did that over no no so here so this isn't actually this is to show the message so what we do so what i'm doing here is i'm saying go ahead and get the messages okay uh order them by timestamp descending so the first message is going to be the most recent one oh really i thought it was like the last message gonna be the most recent one uh i mean i i did i thought that as well but then it kind of um it kind of like yeah it was kind of like okay okay cool message is not defined what what messages oh oops yeah yeah yeah there we go now if we log in that actually has fixed that that issue that we had all right so let's log in boom let's try that out cool guys we are almost at 3k likes come on guys how much are we away how much what 100 super close dude oh you see it says yo yo yo yo so now if you go into the dev room and type a message okay so dev room yo yo no no no no something else they have room message oh look at that guys and if you type in again check whatever happens it will actually it will show the latest message in that left screen whoa heck yeah yo yo sonny this is epic yes but that's so weird though that the first message is the last message yeah because i'm done descending oh descending not ascending yeah okay yeah i always yeah i just kind of do ascending see if it's the right one i forget to honestly sometimes yeah if you did dot length on ascending i think you'd get what you then you'll get the level yeah that's true that's yeah or dot length minus one or whatever you have to do that yeah um awesome so now what we need to do is let's fix that last styling issue where we've got that horrible sort of um it just looks fine yeah it just looks like yeah right now yeah yeah so let's go ahead and go to sidebar chat and basically i'm just going to do a little quickie hack here so we can fix this so i'm just going to go ahead and say for the anchor elements text decoration none color black okay so very quick fix here and then we do that what we should see is there we go i'll change there and now now we don't get those lines right guys so we still get the problem uhhuh go ahead go ahead no i think i think i think are you okay i think we're done yeah that's it are we yeah i think we are actually yeah let's try this hold on let's go i was thinking i was like holy crap yeah i think we're done there wait wait so okay hello we're done yeah all right i got i only got one thing to say honestly i got one thing to say you know what i got to say [Laughter] i said let's go really that is so sweet dude oh i actually saw an error here so sidebar chat sidebar chat guys very important point sidebar chat we used a oh this is important yeah we use the use effect and we use the id right now don't forget and don't ignore the the in the terminal it popped up if you actually need to include that as a dependency because we're using it here so just want to point that one out because that's actually really really important there guys come on let's get to 3k come on come on before we deploy this we need to get to 3k come on sure with some people you know i don't know i don't know what you got to do but do something i know i mean dude i think what we should do is i think i got an idea what do you got what do you got the deployment the phase right so let's get everything set up for the deployment okay and then this let's wait and let's answer questions until we hit 3k all right okay i like it i like it yeah let's do it yes let's do it let's do it so guys and if you guys and if you want you know what if you got to go the extra mile create a new google account go to this video and then click like again yeah guys just push that to 3k because that's it and that'll be the ultimate banger finish to this video that'd be the most you've ever gotten i think in the video right 3k i think so yeah i think so yeah it's awesome dude so now guys we're going to show you no we hit 3k didn't we no we did oh that's cool you guys so much guys that's insane that's insane um oh man that's just holy crap yeah so guys let's go ahead and show you guys how to deploy this song and get this live okay let's do it so let's open up the terminal wait what is that so the vs terminal i'm just i'm just trying to do something here hold on a second all right we're cool cool all right so terminal i was like wait what is terminal right guys because we hit 3k literally we and knowledge would massively appreciate if you go onto instagram shoot an instagram video to show us that you're watching this right now and that you were here when we hit 3k all right tag us in there and literally we can have a chat with you guys so as always we love to do that so really really really please go ahead and do that yep your point five dollars thank you so much dude hitting 3k oh hold on let me let me let me let me let me put him on the spot right here there we go frank frank you the man frank is always so supportive thank you frank he's killer dude all right cool so uh let's get to so let's deploy you guys ready to deploy are you guys ready deploy hit that smash that like button for deployment um and we're gonna deploy exactly so guys what we need to do now is we need to go to firebase um so i'm going to do this firebase oh actually one minute i just realized what's up if i log in so check i think i'm logged into my account but what i could do now is i could deploy this project yes you want me to log in uh it's fine but i mean we could do it so i can actually do it from oh man [Laughter] all right so let's go ahead and do the destroyment so i've actually said what's clown so i can deploy it on my one as well it's fine yeah okay let's do it let's do it so now what we can do you're gonna need to do firebase login and what that will do is i'll pop up a sort of a login window and once you've got that login window done you need to do firebase in it right so firebase in there and now what we can do is you see this this will pop up right so this beautiful interface pops up you want to go down to the bottom using the arrow keys hit the space bar on hosting and then click enter and then this is important guys right here i'm going to click use an existing project i'm going to go down to the uh firebase project so let's go ahead and do um uh where is that whatsapp clone right this one right here is that is that the one that you got is that the one that you created yeah i'm not sure if our database is gonna clash though let me try it you can try yeah let's do it but then in here what we're gonna do now is we're going to type in build so this is super important build right so build is the public directory that you want to use and then what we're going to do is type in yes for configure as a single page app because we're a react app is a single page app okay that's it we've set out the app up right now what we need to do is do mpm run build and what this will do is it will create an optimized production build so what this means is it will strip out all the developer stuff so all this hot reloading all this sort of heavy crap that we don't need in the actual production version uh because in the production version you just want the app to load as fast as possible so it strips out all the sort of cool toys and gimmicks out of it and it's basically going to strip it down and it'll put it into the build folder right so if you're not if you open up the directory on the on the left hold on hold on just hold on give me one second i'm trying to do stuff cancel nope what directory for what uh so open up your files on the left okay and show them where the build folder actually gets built all right so all right cool all right director in the left come on no that's the one cool yeah so here what i want you to do is you can see you've got public at the top but you also have a build folder at the top so yeah i mean oh there will there after this is done there will actually be a build folder that comes up there right and what this build folder will do is it will basically that optimized production build that gets sort of finalized goes into that folder right so i'm not sure how long this is going to take but let's just give it a little bit of time and in the meantime we can go ahead and answer some questions and we can sort of get everyone prepared for the deployment yeah guys yeah so you got any questions guys go ahead and put them in the comments below and also also as you if you put the question go ahead and smash the like button yeah cuz i can get this video out to even more people guys oh man oh guys this has been an insane build you know i know i keep using the word insane but i really there's no other word for it right there's hold on there's no other word for it honestly so um you know sonny amazing job on what you have built here seriously uh this looks not only not only does this look good but it's usable we can actually use it yeah honestly you can go ahead and use it it's insane like and this is going to be scalable as well it's like what we built here guys is production scalable like you could scale this to uh however many users that you would need like if you had a million users today it would scale and it would work which is insane to say i'm curious how many can we get can we get right now how many what was that useless we can get right now i know right i wonder i mean i don't know if you know but we're still at 605 people watching by the way that's insane oh my god that's insane retention rate is crazy yeah do you know how to get to the live stream room by the way the live stream room what do you mean on um youtube just wondering if you know how to get while we're waiting for this oh like into the actual youtube livestream room yeah i'm just wondering because it shows us some cool stats but um oh okay i can take a look at it here hold on let me see i can take a look just so that yeah just that when the stream eventually ends we get all the stats you know all the small stats because otherwise i couldn't get to that screen yesterday and it kind of i don't have that i mean does it show right now um i mean i don't know because because qazi usually is in some kind of live stream room um which is pretty cool yeah it might be in the studio i mean i'm i'm gonna i'll have the studio open so we can see yeah hopefully this this production build it feels very quick guys this is usually very fast right here right here you see that guys we're touching this out boom that's insane holy crap look at that look at that we were we peaked at 12 1200 1300 people and then just like slowly slowly slowly and we've been out this for this is at this point it's three hours and a half so which is insane um yeah but guys 800 and average wow how many chad matches we got wow chat messages you guys are killing it that's all i gotta say yeah and thank you guys so much obviously for watching thank you guys so much for supporting us and being so supportive in the chat um the more we do this more we realize that you know you guys uh really you know one are enjoying this and are really getting a lot of value from it and you know and having fun with it at the same time so exactly you guys yeah thank you oh so looks like look at that it's building it's built oh finally nice so guys with that said now let's go ahead and do the following so one sec okay there we go i can see yeah so now what we're gonna do is we have the what's up down here so yeah you can see it right yeah so in order to deploy it guys it's as simple as this right and also bear in mind if you change any bit of your code between the time that you done npm run build and when you've done it like so you need to do make sure that you don't change your code after you dnp and run build or if you do change your code run npm run build again because that's it's going to be bundled up then to deploy it we need to do firebase deploy like this voila yeah firebase deploy and this will go ahead and deploy the app let's go ahead so you see it's uploading all the files that we have doing everything and boom let me just go ahead and double check this so to make sure everything's good react app let me go and sign in so the domain is not authorized okay so this is what i was well this is what i was kind of worried about yeah so we actually went ahead and deployed it from so i wasn't logged into my account i was logged into i was looking into my account nas built this on his account so this is where a lot of people were saying that remember the security might have been a concern you have to be signed into the correct account really what i'm gonna do guys is we actually went ahead and deployed this before and we deployed the exact same build on this uh clone over here so we actually did the exact same build on discount so what's up so pretty much no it's the one that you uh this one right here yeah oh wait i need to refresh this oh damn it someone's going ahead and done that guys clear that come on guys what are you doing come on oh wait no it says is not authorized to under separation yeah so this is happening because i'm not logged into so now what we could do is we could go ahead and quickly do firebase log out firebase login i mean this is this means i have to log into your account and do all that i mean what should we do at this point shall we locally and let's do it let's do an yeah okay let's do it let's just demo locally yeah so guys with that we did deploy it so you guys saw that there is a deployment and that's literally would be working for you guys let me go ahead and get an ng rock going for you guys oh you gonna do it for me okay you're gonna do okay cool yeah so i'll get an ng rock going so let's go ahead i always forget why i put ng rock is it my desktop is it i also yeah i was i was gonna look for it there we go yeah there we go okay so now guys that's the ng rock link so what i'm going to do is i'm inside of can you see the ngrock link i'm about to hold on one second ah kind of you kind of you might need to help me out with that right so if you go into let me go into uh app.js and i'll just drop it at the top of the comment i see so app.js no app.js yeah yeah and inside of that dot yes okay come on yeah so now me and nars will go and show you guys that this is working and it's all pretty good wow let's do it almost there almost there almost there might be a little bit slow that's the only thing yeah because it's localhost yeah all right let's see this let's see this okay mine's up so okay so it's not authorized to run this domain okay yeah so guys dang it firebase is super secure all right yeah you can't ngrok either so this i mean this is a good thing this is a good thing so what it means is we showed you guys in the beginning of the demo and basically the reason why we didn't do it is because i wasn't logged into nazi's account which is why yeah i can't do it either dang it dang it dang it ah it's okay it's all right though okay we should be down we downed it to you guys in the beginning which is really cool i think yeah now let's just go ahead and show it let's give a run through of the app one last time i always do it so let's do it right here okay beautiful so check this out guys we can have for example we obviously we have different new rooms we can create new rooms what kind of room should we create let's create a room called 3k room 3k room yo the epic 3k room okay click okay we create ourselves a 3k room inside this room now we can now it's just simply text between different people right so if i simply let me remove myself here you can go ahead and um how's it going right so how is is it going uh this this has been has been an awesome awesome live call and you can probably you can probably add this um and here's what you can do i can literally add a to the firebase i can if i go to firebase and i go to rooms for example and so the room that we just added was which one right i can go ahead for example i'll you know imagine this is sunny oh no i'll show you a better way to do it now is actually go ahead and log in in a separate window as a different uh if you want a second oh i can do that yeah but it will still be my name no that will be a different nars right yeah i guess so i guess let's try that so hold on so i can do localhost 3000 oh it might might be it might be the same man it'll still be the same name because i got a bunch of nazari zombies account we could do that i don't know if i can like log in with kazuka let me see hold on can i yeah i i tried it yeah it should be oh oh okay let's try it we'll see quasi quasi all right quasi i'm looking with your account nope oh [ __ ] nope not happening all right we can try this though hold on let me see i can't i could talk about myself how about that nice i mean yeah you can have two conversations guys supposedly that's because we opened up the window twice yeah yeah yeah so yeah but in either case you can see this work is just it's very secure and so uh but i think we'll be able to we'll be able to make it live and then give you guys the github link as well that's me the most important thing guys that's the most important thing for you most important thing guys we will go ahead and do that so yeah with that said i think that went amazing dude dude that was sick guys awesome yeah that was insane um yeah i mean who loved it dropped in the comments below if you guys enjoyed this if you want to see more things like this i mean i'm sure you guys i'm sure you guys do um sunny amazing job guys give something a round of applause for crain this awesome app uh he's been working hard at it and he's been lucky he's like yo bro i'm just i'm still working i'm still working still trying to finish up the code he's just like rushing and russian trying to finish it up but he did it it looks great so great job on that um appreciate it bro yeah seriously um and to all of you commenters guys thank you guys so much for watching thank you guys so much for commenting being positive and optimistic and following along if you followed along and if you did go ahead and create the project obviously tag us in your instagram videos right here and then sunny is there i'm pointing sunny so point point down sunny yeah there you go point down there you go and i'm pointing to you exactly now you're just like um so yeah anything else we got i think that's it dude i think this is awesome i i enjoyed this build it was stressful because it was a bit of architecture to this one to try and get it working right but then we managed to get it working and we got in a really nice way and now as i want to say massive thank you to you dude because nars jumped on and actually ran this with me uh with quite last minute notice and i think he crushed it i think we absolutely smashed this live stream dude this was a fun live stream i'm not keep like it was it was chill but it was fun it was good like we didn't have too many technical problems guys and like and i see though you guys are somebody saying saying keep it up buddha says keep it up bro uh let's see what else what else guys santana says good night guys warrior says applause applause applause so yeah guys yeah and thank you sonny appreciate it i'm most happy to get on with with you what was that sir i said i was happy to go on with you i was happy to get on the call with colin yeah let's do it more often that was that was fun of course of course would be cool to do like um react and then like i'll do like a node.js portion for example you'll do the react portion to like a small application and i'll do the node.js portion of this multiplication you've worked with mongodb right mongodb and node.js exactly yeah so it would be nice to do like a man stack we could do something like that that'd be cool if you guys want to see that drop in the comments below and if you guys get any ideas also let us know um yeah but yeah other than that are we done yeah i think we're done guys should we call it yeah we will see you on the next live stream and as always guys this is sunny and this is nas we will see you in the next one peace exactly peace out have a great day bye bye wait wait
